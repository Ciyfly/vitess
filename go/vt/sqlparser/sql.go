// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

//import "runtime/debug"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

func yySpecialCommentMode(yylex interface{}) bool {
	tkn := yylex.(*Tokenizer)
	return tkn.specialComment != nil
}

//line sql.y:64
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	variables                Variables
	into                     *Into
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	triggerName              TriggerName
	tableName                TableName
	tableNames               TableNames
	procedureName            ProcedureName
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	flushOption              *FlushOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	viewSpec                 *ViewSpec
	showFilter               *ShowFilter
	frame                    *Frame
	frameExtent              *FrameExtent
	frameBound               *FrameBound
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	charsetCollate           *CharsetAndCollate
	charsetCollates          []*CharsetAndCollate
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptionItem            TLSOptionItem
	tlsOptionItems           []TLSOptionItem
	accountLimitItem         AccountLimitItem
	accountLimitItems        []AccountLimitItem
	passLockItem             PassLockItem
	passLockItems            []PassLockItem
	grantPrivilege           Privilege
	grantPrivileges          []Privilege
	grantObjectType          GrantObjectType
	privilegeLevel           PrivilegeLevel
	grantAssumption          *GrantUserAssumption
	with                     *With
	window                   Window
	over                     *Over
	windowDef                *WindowDef
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const DUPLICATE = 57369
const DEFAULT = 57370
const SET = 57371
const LOCK = 57372
const UNLOCK = 57373
const KEYS = 57374
const OF = 57375
const OUTFILE = 57376
const DUMPFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const INTO = 57425
const OR = 57426
const XOR = 57427
const AND = 57428
const NOT = 57429
const BETWEEN = 57430
const CASE = 57431
const WHEN = 57432
const THEN = 57433
const ELSE = 57434
const ELSEIF = 57435
const END = 57436
const LE = 57437
const GE = 57438
const NE = 57439
const NULL_SAFE_EQUAL = 57440
const IS = 57441
const LIKE = 57442
const REGEXP = 57443
const IN = 57444
const UNBOUNDED = 57445
const PARTITION = 57446
const RANGE = 57447
const ROWS = 57448
const GROUPS = 57449
const PRECEDING = 57450
const FOLLOWING = 57451
const SHIFT_LEFT = 57452
const SHIFT_RIGHT = 57453
const DIV = 57454
const MOD = 57455
const UNARY = 57456
const COLLATE = 57457
const BINARY = 57458
const UNDERSCORE_ARMSCII8 = 57459
const UNDERSCORE_ASCII = 57460
const UNDERSCORE_BIG5 = 57461
const UNDERSCORE_BINARY = 57462
const UNDERSCORE_CP1250 = 57463
const UNDERSCORE_CP1251 = 57464
const UNDERSCORE_CP1256 = 57465
const UNDERSCORE_CP1257 = 57466
const UNDERSCORE_CP850 = 57467
const UNDERSCORE_CP852 = 57468
const UNDERSCORE_CP866 = 57469
const UNDERSCORE_CP932 = 57470
const UNDERSCORE_DEC8 = 57471
const UNDERSCORE_EUCJPMS = 57472
const UNDERSCORE_EUCKR = 57473
const UNDERSCORE_GB18030 = 57474
const UNDERSCORE_GB2312 = 57475
const UNDERSCORE_GBK = 57476
const UNDERSCORE_GEOSTD8 = 57477
const UNDERSCORE_GREEK = 57478
const UNDERSCORE_HEBREW = 57479
const UNDERSCORE_HP8 = 57480
const UNDERSCORE_KEYBCS2 = 57481
const UNDERSCORE_KOI8R = 57482
const UNDERSCORE_KOI8U = 57483
const UNDERSCORE_LATIN1 = 57484
const UNDERSCORE_LATIN2 = 57485
const UNDERSCORE_LATIN5 = 57486
const UNDERSCORE_LATIN7 = 57487
const UNDERSCORE_MACCE = 57488
const UNDERSCORE_MACROMAN = 57489
const UNDERSCORE_SJIS = 57490
const UNDERSCORE_SWE7 = 57491
const UNDERSCORE_TIS620 = 57492
const UNDERSCORE_UCS2 = 57493
const UNDERSCORE_UJIS = 57494
const UNDERSCORE_UTF16 = 57495
const UNDERSCORE_UTF16LE = 57496
const UNDERSCORE_UTF32 = 57497
const UNDERSCORE_UTF8 = 57498
const UNDERSCORE_UTF8MB3 = 57499
const UNDERSCORE_UTF8MB4 = 57500
const INTERVAL = 57501
const JSON_EXTRACT_OP = 57502
const JSON_UNQUOTE_EXTRACT_OP = 57503
const CREATE = 57504
const ALTER = 57505
const DROP = 57506
const RENAME = 57507
const ANALYZE = 57508
const ADD = 57509
const MODIFY = 57510
const CHANGE = 57511
const SCHEMA = 57512
const TABLE = 57513
const INDEX = 57514
const INDEXES = 57515
const VIEW = 57516
const TO = 57517
const IGNORE = 57518
const IF = 57519
const PRIMARY = 57520
const COLUMN = 57521
const SPATIAL = 57522
const FULLTEXT = 57523
const KEY_BLOCK_SIZE = 57524
const CHECK = 57525
const ACTION = 57526
const CASCADE = 57527
const CONSTRAINT = 57528
const FOREIGN = 57529
const NO = 57530
const REFERENCES = 57531
const RESTRICT = 57532
const FIRST = 57533
const AFTER = 57534
const SHOW = 57535
const DESCRIBE = 57536
const EXPLAIN = 57537
const DATE = 57538
const ESCAPE = 57539
const REPAIR = 57540
const OPTIMIZE = 57541
const TRUNCATE = 57542
const FORMAT = 57543
const MAXVALUE = 57544
const REORGANIZE = 57545
const LESS = 57546
const THAN = 57547
const PROCEDURE = 57548
const TRIGGER = 57549
const TRIGGERS = 57550
const FUNCTION = 57551
const STATUS = 57552
const VARIABLES = 57553
const WARNINGS = 57554
const ERRORS = 57555
const KILL = 57556
const CONNECTION = 57557
const SEQUENCE = 57558
const ENABLE = 57559
const DISABLE = 57560
const EACH = 57561
const ROW = 57562
const BEFORE = 57563
const FOLLOWS = 57564
const PRECEDES = 57565
const DEFINER = 57566
const INVOKER = 57567
const INOUT = 57568
const OUT = 57569
const DETERMINISTIC = 57570
const CONTAINS = 57571
const READS = 57572
const MODIFIES = 57573
const SQL = 57574
const SECURITY = 57575
const TEMPORARY = 57576
const ALGORITHM = 57577
const MERGE = 57578
const TEMPTABLE = 57579
const UNDEFINED = 57580
const CLASS_ORIGIN = 57581
const SUBCLASS_ORIGIN = 57582
const MESSAGE_TEXT = 57583
const MYSQL_ERRNO = 57584
const CONSTRAINT_CATALOG = 57585
const CONSTRAINT_SCHEMA = 57586
const CONSTRAINT_NAME = 57587
const CATALOG_NAME = 57588
const SCHEMA_NAME = 57589
const TABLE_NAME = 57590
const COLUMN_NAME = 57591
const CURSOR_NAME = 57592
const SIGNAL = 57593
const RESIGNAL = 57594
const SQLSTATE = 57595
const DECLARE = 57596
const CONDITION = 57597
const CURSOR = 57598
const CONTINUE = 57599
const EXIT = 57600
const UNDO = 57601
const HANDLER = 57602
const FOUND = 57603
const SQLWARNING = 57604
const SQLEXCEPTION = 57605
const USER = 57606
const IDENTIFIED = 57607
const ROLE = 57608
const REUSE = 57609
const GRANT = 57610
const GRANTS = 57611
const REVOKE = 57612
const NONE = 57613
const ATTRIBUTE = 57614
const RANDOM = 57615
const PASSWORD = 57616
const INITIAL = 57617
const AUTHENTICATION = 57618
const SSL = 57619
const X509 = 57620
const CIPHER = 57621
const ISSUER = 57622
const SUBJECT = 57623
const ACCOUNT = 57624
const EXPIRE = 57625
const NEVER = 57626
const DAY = 57627
const OPTION = 57628
const OPTIONAL = 57629
const EXCEPT = 57630
const ADMIN = 57631
const PRIVILEGES = 57632
const MAX_QUERIES_PER_HOUR = 57633
const MAX_UPDATES_PER_HOUR = 57634
const MAX_CONNECTIONS_PER_HOUR = 57635
const MAX_USER_CONNECTIONS = 57636
const FLUSH = 57637
const FAILED_LOGIN_ATTEMPTS = 57638
const PASSWORD_LOCK_TIME = 57639
const REQUIRE = 57640
const PROXY = 57641
const ROUTINE = 57642
const TABLESPACE = 57643
const CLIENT = 57644
const SLAVE = 57645
const EVENT = 57646
const EXECUTE = 57647
const FILE = 57648
const RELOAD = 57649
const REPLICATION = 57650
const SHUTDOWN = 57651
const SUPER = 57652
const USAGE = 57653
const LOGS = 57654
const ENGINE = 57655
const ERROR = 57656
const GENERAL = 57657
const HOSTS = 57658
const OPTIMIZER_COSTS = 57659
const RELAY = 57660
const SLOW = 57661
const USER_RESOURCES = 57662
const NO_WRITE_TO_BINLOG = 57663
const CHANNEL = 57664
const BEGIN = 57665
const START = 57666
const TRANSACTION = 57667
const COMMIT = 57668
const ROLLBACK = 57669
const SAVEPOINT = 57670
const WORK = 57671
const RELEASE = 57672
const BIT = 57673
const TINYINT = 57674
const SMALLINT = 57675
const MEDIUMINT = 57676
const INT = 57677
const INTEGER = 57678
const BIGINT = 57679
const INTNUM = 57680
const SERIAL = 57681
const REAL = 57682
const DOUBLE = 57683
const FLOAT_TYPE = 57684
const DECIMAL = 57685
const NUMERIC = 57686
const DEC = 57687
const FIXED = 57688
const PRECISION = 57689
const TIME = 57690
const TIMESTAMP = 57691
const DATETIME = 57692
const YEAR = 57693
const CHAR = 57694
const VARCHAR = 57695
const BOOL = 57696
const CHARACTER = 57697
const VARBINARY = 57698
const NCHAR = 57699
const NVARCHAR = 57700
const NATIONAL = 57701
const VARYING = 57702
const TEXT = 57703
const TINYTEXT = 57704
const MEDIUMTEXT = 57705
const LONGTEXT = 57706
const LONG = 57707
const BLOB = 57708
const TINYBLOB = 57709
const MEDIUMBLOB = 57710
const LONGBLOB = 57711
const JSON = 57712
const ENUM = 57713
const GEOMETRY = 57714
const POINT = 57715
const LINESTRING = 57716
const POLYGON = 57717
const GEOMETRYCOLLECTION = 57718
const MULTIPOINT = 57719
const MULTILINESTRING = 57720
const MULTIPOLYGON = 57721
const LOCAL = 57722
const LOW_PRIORITY = 57723
const NULLX = 57724
const AUTO_INCREMENT = 57725
const APPROXNUM = 57726
const SIGNED = 57727
const UNSIGNED = 57728
const ZEROFILL = 57729
const SRID = 57730
const COLLATION = 57731
const DATABASES = 57732
const SCHEMAS = 57733
const TABLES = 57734
const FULL = 57735
const PROCESSLIST = 57736
const COLUMNS = 57737
const FIELDS = 57738
const ENGINES = 57739
const PLUGINS = 57740
const NAMES = 57741
const CHARSET = 57742
const GLOBAL = 57743
const SESSION = 57744
const ISOLATION = 57745
const LEVEL = 57746
const READ = 57747
const WRITE = 57748
const ONLY = 57749
const REPEATABLE = 57750
const COMMITTED = 57751
const UNCOMMITTED = 57752
const SERIALIZABLE = 57753
const ENCRYPTION = 57754
const CURRENT_TIMESTAMP = 57755
const DATABASE = 57756
const CURRENT_DATE = 57757
const CURRENT_USER = 57758
const CURRENT_TIME = 57759
const LOCALTIME = 57760
const LOCALTIMESTAMP = 57761
const UTC_DATE = 57762
const UTC_TIME = 57763
const UTC_TIMESTAMP = 57764
const REPLACE = 57765
const CONVERT = 57766
const CAST = 57767
const SUBSTR = 57768
const SUBSTRING = 57769
const TRIM = 57770
const LEADING = 57771
const TRAILING = 57772
const BOTH = 57773
const GROUP_CONCAT = 57774
const SEPARATOR = 57775
const TIMESTAMPADD = 57776
const TIMESTAMPDIFF = 57777
const OVER = 57778
const WINDOW = 57779
const GROUPING = 57780
const CURRENT = 57781
const AVG = 57782
const BIT_AND = 57783
const BIT_OR = 57784
const BIT_XOR = 57785
const COUNT = 57786
const JSON_ARRAYAGG = 57787
const JSON_OBJECTAGG = 57788
const MAX = 57789
const MIN = 57790
const STDDEV_POP = 57791
const STDDEV = 57792
const STD = 57793
const STDDEV_SAMP = 57794
const SUM = 57795
const VAR_POP = 57796
const VARIANCE = 57797
const VAR_SAMP = 57798
const CUME_DIST = 57799
const DENSE_RANK = 57800
const FIRST_VALUE = 57801
const LAG = 57802
const LAST_VALUE = 57803
const LEAD = 57804
const NTH_VALUE = 57805
const NTILE = 57806
const ROW_NUMBER = 57807
const PERCENT_RANK = 57808
const RANK = 57809
const JSON_TABLE = 57810
const PATH = 57811
const MATCH = 57812
const AGAINST = 57813
const BOOLEAN = 57814
const LANGUAGE = 57815
const WITH = 57816
const QUERY = 57817
const EXPANSION = 57818
const ACCESSIBLE = 57819
const ASENSITIVE = 57820
const CUBE = 57821
const DAY_HOUR = 57822
const DAY_MICROSECOND = 57823
const DAY_MINUTE = 57824
const DAY_SECOND = 57825
const DELAYED = 57826
const DISTINCTROW = 57827
const DUAL = 57828
const EMPTY = 57829
const FETCH = 57830
const FLOAT4 = 57831
const FLOAT8 = 57832
const GET = 57833
const HIGH_PRIORITY = 57834
const HOUR_MICROSECOND = 57835
const HOUR_MINUTE = 57836
const HOUR_SECOND = 57837
const INSENSITIVE = 57838
const INT1 = 57839
const INT2 = 57840
const INT3 = 57841
const INT4 = 57842
const INT8 = 57843
const IO_AFTER_GTIDS = 57844
const IO_BEFORE_GTIDS = 57845
const ITERATE = 57846
const LEAVE = 57847
const LINEAR = 57848
const LOOP = 57849
const MASTER_BIND = 57850
const MASTER_SSL_VERIFY_SERVER_CERT = 57851
const MIDDLEINT = 57852
const MINUTE_MICROSECOND = 57853
const MINUTE_SECOND = 57854
const PURGE = 57855
const READ_WRITE = 57856
const REPEAT = 57857
const RETURN = 57858
const RLIKE = 57859
const SECOND_MICROSECOND = 57860
const SENSITIVE = 57861
const SPECIFIC = 57862
const SQL_BIG_RESULT = 57863
const SQL_SMALL_RESULT = 57864
const VARCHARACTER = 57865
const WHILE = 57866
const YEAR_MONTH = 57867
const UNUSED = 57868
const DESCRIPTION = 57869
const LATERAL = 57870
const MEMBER = 57871
const RECURSIVE = 57872
const BUCKETS = 57873
const CLONE = 57874
const COMPONENT = 57875
const DEFINITION = 57876
const ENFORCED = 57877
const EXCLUDE = 57878
const GEOMCOLLECTION = 57879
const GET_MASTER_PUBLIC_KEY = 57880
const HISTOGRAM = 57881
const HISTORY = 57882
const INACTIVE = 57883
const INVISIBLE = 57884
const LOCKED = 57885
const MASTER_COMPRESSION_ALGORITHMS = 57886
const MASTER_PUBLIC_KEY_PATH = 57887
const MASTER_TLS_CIPHERSUITES = 57888
const MASTER_ZSTD_COMPRESSION_LEVEL = 57889
const NESTED = 57890
const NETWORK_NAMESPACE = 57891
const NOWAIT = 57892
const NULLS = 57893
const OJ = 57894
const OLD = 57895
const ORDINALITY = 57896
const ORGANIZATION = 57897
const OTHERS = 57898
const PERSIST = 57899
const PERSIST_ONLY = 57900
const PRIVILEGE_CHECKS_USER = 57901
const PROCESS = 57902
const REFERENCE = 57903
const REQUIRE_ROW_FORMAT = 57904
const RESOURCE = 57905
const RESPECT = 57906
const RESTART = 57907
const RETAIN = 57908
const SECONDARY = 57909
const SECONDARY_ENGINE = 57910
const SECONDARY_LOAD = 57911
const SECONDARY_UNLOAD = 57912
const SKIP = 57913
const THREAD_PRIORITY = 57914
const TIES = 57915
const VCPU = 57916
const VISIBLE = 57917
const SYSTEM = 57918
const INFILE = 57919
const ACTIVE = 57920
const AGGREGATE = 57921
const ANY = 57922
const ARRAY = 57923
const ASCII = 57924
const AT = 57925
const AUTOEXTEND_SIZE = 57926
const ENDS = 57927
const EVENTS = 57928
const GENERATED = 57929
const ALWAYS = 57930
const STORED = 57931
const VIRTUAL = 57932
const NVAR = 57933
const PASSWORD_LOCK = 57934

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DUMPFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"INTO",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB3",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"ENABLE",
	"DISABLE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"ALGORITHM",
	"MERGE",
	"TEMPTABLE",
	"UNDEFINED",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTION",
	"OPTIONAL",
	"EXCEPT",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EVENT",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"SRID",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ENCRYPTION",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"JSON_TABLE",
	"PATH",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ACCESSIBLE",
	"ASENSITIVE",
	"CUBE",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"DELAYED",
	"DISTINCTROW",
	"DUAL",
	"EMPTY",
	"FETCH",
	"FLOAT4",
	"FLOAT8",
	"GET",
	"HIGH_PRIORITY",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"INSENSITIVE",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"IO_AFTER_GTIDS",
	"IO_BEFORE_GTIDS",
	"ITERATE",
	"LEAVE",
	"LINEAR",
	"LOOP",
	"MASTER_BIND",
	"MASTER_SSL_VERIFY_SERVER_CERT",
	"MIDDLEINT",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"PURGE",
	"READ_WRITE",
	"REPEAT",
	"RETURN",
	"RLIKE",
	"SECOND_MICROSECOND",
	"SENSITIVE",
	"SPECIFIC",
	"SQL_BIG_RESULT",
	"SQL_SMALL_RESULT",
	"VARCHARACTER",
	"WHILE",
	"YEAR_MONTH",
	"UNUSED",
	"DESCRIPTION",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"ACTIVE",
	"AGGREGATE",
	"ANY",
	"ARRAY",
	"ASCII",
	"AT",
	"AUTOEXTEND_SIZE",
	"ENDS",
	"EVENTS",
	"GENERATED",
	"ALWAYS",
	"STORED",
	"VIRTUAL",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 35,
	611, 35,
	-2, 56,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 41,
	189, 1271,
	190, 1290,
	-2, 249,
	-1, 47,
	228, 751,
	229, 751,
	-2, 740,
	-1, 67,
	5, 61,
	-2, 43,
	-1, 477,
	177, 1660,
	-2, 939,
	-1, 478,
	177, 1300,
	-2, 1294,
	-1, 479,
	177, 1301,
	-2, 1295,
	-1, 509,
	177, 1768,
	-2, 1189,
	-1, 510,
	177, 1849,
	-2, 941,
	-1, 511,
	177, 1680,
	-2, 942,
	-1, 578,
	177, 1631,
	-2, 1160,
	-1, 581,
	177, 1648,
	-2, 1089,
	-1, 582,
	177, 1861,
	-2, 1089,
	-1, 583,
	177, 1860,
	-2, 1089,
	-1, 584,
	177, 1859,
	-2, 1089,
	-1, 585,
	177, 1748,
	-2, 1089,
	-1, 586,
	177, 1749,
	-2, 1089,
	-1, 587,
	177, 1646,
	-2, 1089,
	-1, 588,
	177, 1647,
	-2, 1089,
	-1, 589,
	177, 1649,
	-2, 1089,
	-1, 837,
	100, 1949,
	177, 1949,
	-2, 1255,
	-1, 838,
	100, 2044,
	177, 2044,
	-2, 1256,
	-1, 843,
	100, 1969,
	177, 1969,
	-2, 1257,
	-1, 844,
	100, 2007,
	177, 2007,
	-2, 1258,
	-1, 845,
	100, 2008,
	177, 2008,
	-2, 1259,
	-1, 846,
	100, 1897,
	177, 1897,
	-2, 1263,
	-1, 848,
	100, 1988,
	177, 1988,
	-2, 1265,
	-1, 1104,
	5, 61,
	-2, 44,
	-1, 1367,
	1, 520,
	611, 520,
	-2, 518,
	-1, 1369,
	1, 520,
	611, 520,
	-2, 518,
	-1, 1777,
	177, 1298,
	-2, 1230,
	-1, 1822,
	177, 1303,
	-2, 1299,
	-1, 1942,
	1, 852,
	5, 852,
	12, 852,
	13, 852,
	14, 852,
	15, 852,
	17, 852,
	19, 852,
	29, 852,
	30, 852,
	56, 852,
	57, 852,
	58, 852,
	59, 852,
	60, 852,
	62, 852,
	63, 852,
	66, 852,
	67, 852,
	69, 852,
	70, 852,
	87, 852,
	455, 852,
	611, 852,
	-2, 885,
	-1, 1950,
	67, 78,
	69, 78,
	-2, 82,
	-1, 1967,
	177, 1772,
	-2, 1260,
	-1, 2050,
	1, 521,
	611, 521,
	-2, 518,
	-1, 2140,
	44, 633,
	196, 635,
	198, 633,
	199, 633,
	-2, 676,
	-1, 2189,
	5, 62,
	-2, 971,
	-1, 2681,
	196, 636,
	-2, 634,
	-1, 2754,
	177, 1544,
	-2, 783,
	-1, 2779,
	1, 925,
	5, 925,
	12, 925,
	13, 925,
	14, 925,
	15, 925,
	17, 925,
	19, 925,
	29, 925,
	30, 925,
	56, 925,
	57, 925,
	58, 925,
	59, 925,
	60, 925,
	62, 925,
	63, 925,
	66, 925,
	67, 925,
	69, 925,
	70, 925,
	87, 925,
	455, 925,
	611, 925,
	-2, 885,
	-1, 2919,
	5, 62,
	-2, 1221,
	-1, 3006,
	41, 1310,
	-2, 1308,
	-1, 3203,
	5, 62,
	-2, 1224,
	-1, 3218,
	278, 315,
	-2, 1365,
	-1, 3219,
	278, 316,
	-2, 1405,
	-1, 3220,
	278, 317,
	-2, 1581,
	-1, 3385,
	95, 301,
	97, 301,
	99, 301,
	-2, 56,
	-1, 3416,
	97, 308,
	98, 308,
	99, 308,
	-2, 56,
}

const yyPrivate = 57344

const yyLast = 42970

var yyAct = [...]int{
	521, 76, 3336, 3366, 3318, 1118, 3377, 451, 3222, 3317,
	954, 3280, 410, 3338, 2507, 3243, 3195, 3261, 3205, 1201,
	2364, 3133, 7, 2624, 3132, 6, 3063, 1977, 3103, 3125,
	481, 3193, 2578, 3131, 5, 3006, 3134, 8, 2794, 3223,
	3130, 3, 2944, 2533, 2273, 2773, 2271, 463, 1297, 2045,
	2747, 1202, 1998, 1402, 485, 3008, 2748, 2267, 2666, 488,
	470, 2461, 2852, 2449, 2846, 1946, 2641, 2876, 2830, 393,
	396, 2579, 2069, 1794, 447, 435, 435, 76, 441, 520,
	3126, 2744, 79, 2534, 2675, 2307, 91, 1401, 2398, 988,
	498, 2380, 971, 2756, 1787, 1774, 460, 1976, 1989, 2139,
	1975, 2257, 1225, 104, 924, 1938, 1848, 2765, 917, 1012,
	2477, 124, 1907, 1854, 1782, 2031, 1775, 461, 1939, 1985,
	392, 2515, 2115, 2098, 2428, 1404, 1728, 2250, 1699, 1378,
	2053, 2052, 2303, 2051, 2355, 2027, 2308, 1119, 2514, 1275,
	839, 1965, 1279, 476, 842, 1126, 1898, 1942, 1825, 2537,
	1020, 1041, 2049, 1122, 1733, 916, 466, 1278, 914, 835,
	836, 1952, 413, 1019, 2015, 490, 967, 953, 450, 412,
	1140, 1373, 96, 67, 1130, 100, 937, 1370, 951, 942,
	81, 455, 3416, 3411, 3403, 3385, 3383, 3361, 3331, 965,
	3269, 78, 3065, 3064, 2593, 1726, 2622, 2817, 2985, 3413,
	3409, 3407, 405, 3348, 3191, 3311, 3111, 2083, 2998, 36,
	36, 36, 39, 3283, 2983, 2831, 3179, 1856, 83, 2083,
	89, 36, 36, 2638, 2392, 2833, 3190, 3110, 428, 2986,
	422, 433, 416, 2528, 1224, 2499, 3316, 3083, 3290, 3239,
	2227, 3199, 2738, 921, 74, 936, 3199, 1280, 2321, 1281,
	3043, 2529, 423, 2324, 2114, 2002, 449, 2681, 2573, 3194,
	975, 976, 2269, 1110, 979, 830, 831, 832, 1729, 2329,
	2328, 77, 77, 77, 2574, 2575, 939, 3196, 944, 945,
	1732, 947, 3196, 77, 77, 1962, 1963, 87, 85, 86,
	1961, 2325, 2291, 992, 993, 2290, 977, 978, 2292, 108,
	3056, 472, 1784, 1785, 1730, 1731, 2331, 1750, 2314, 1070,
	404, 403, 3034, 1078, 2333, 445, 2315, 2000, 2001, 2113,
	1157, 1156, 1166, 1167, 1159, 1160, 1161, 1162, 1163, 1164,
	1165, 1158, 1038, 2016, 1168, 2003, 912, 2724, 2302, 991,
	2836, 2722, 3200, 97, 2021, 2003, 2016, 3200, 387, 2799,
	1358, 2805, 2807, 2806, 2803, 2804, 2802, 2801, 2800, 2900,
	407, 2007, 2009, 402, 2008, 2028, 457, 1712, 2424, 1771,
	2808, 2809, 1002, 3375, 446, 1770, 1769, 1768, 998, 1767,
	2834, 2835, 2837, 2838, 2839, 1766, 933, 1074, 1075, 2387,
	76, 76, 3305, 2847, 2853, 2854, 2855, 2856, 1054, 2416,
	3012, 2850, 415, 414, 417, 118, 114, 115, 2665, 116,
	1010, 1007, 421, 1359, 1009, 2848, 2849, 1085, 2421, 1045,
	1086, 2327, 2127, 1008, 2330, 968, 999, 1000, 3374, 425,
	1006, 461, 3167, 429, 1052, 3225, 3224, 2648, 3169, 3087,
	2864, 120, 119, 99, 2873, 2128, 1761, 432, 76, 3232,
	3085, 2389, 1108, 110, 109, 3002, 2147, 2141, 2142, 1113,
	2140, 2143, 2144, 2391, 2651, 2980, 1054, 933, 3266, 1042,
	2070, 2984, 2862, 3370, 3264, 3265, 2371, 3333, 1177, 933,
	2639, 1179, 106, 2978, 1181, 397, 2642, 2643, 2644, 2645,
	2646, 394, 1376, 111, 1359, 2973, 2150, 106, 2977, 121,
	2976, 122, 388, 2975, 974, 3077, 1359, 107, 111, 2974,
	2149, 2148, 2972, 1193, 943, 106, 1196, 1197, 1198, 1199,
	1200, 3249, 1205, 989, 3326, 990, 992, 993, 398, 1077,
	2642, 2643, 2644, 2645, 2646, 2060, 112, 101, 3069, 102,
	1178, 3073, 3074, 3128, 418, 419, 420, 426, 1740, 430,
	431, 434, 1385, 1386, 1384, 2934, 382, 2064, 2065, 2558,
	3342, 987, 461, 3337, 2059, 1206, 1207, 1208, 1209, 1210,
	1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 3340,
	1222, 1223, 1226, 1226, 1226, 1232, 1226, 1226, 1232, 1226,
	1232, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249,
	1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259,
	1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269,
	406, 1104, 1147, 3197, 984, 2832, 2326, 983, 3197, 113,
	2667, 2323, 3307, 1186, 1187, 1188, 1189, 1190, 1191, 1192,
	1092, 1713, 2121, 131, 1732, 2340, 1003, 132, 1053, 117,
	133, 134, 2478, 3079, 3109, 2006, 135, 360, 2621, 1087,
	2016, 1046, 2030, 1054, 3210, 3211, 2390, 3084, 1730, 1731,
	2406, 2407, 3001, 395, 2981, 3327, 2146, 3376, 985, 986,
	3278, 2650, 1064, 1127, 2999, 1228, 1230, 98, 1234, 1236,
	395, 1239, 479, 1149, 3035, 462, 462, 462, 36, 37,
	2393, 3289, 3061, 1112, 363, 1105, 3398, 462, 68, 3168,
	2877, 2878, 57, 372, 380, 381, 933, 2369, 73, 923,
	88, 39, 61, 62, 131, 2434, 933, 395, 132, 58,
	390, 133, 134, 2480, 2680, 1102, 131, 135, 130, 1203,
	132, 130, 1734, 133, 134, 941, 940, 130, 369, 135,
	3417, 370, 1683, 3414, 378, 379, 48, 438, 438, 395,
	77, 130, 2370, 933, 108, 391, 3404, 1995, 3339, 3341,
	3386, 943, 3381, 2582, 2372, 2945, 938, 1736, 933, 3078,
	1735, 956, 1995, 3089, 2887, 130, 926, 1061, 456, 2947,
	2446, 2276, 2278, 1050, 2888, 2663, 1221, 2415, 2411, 2395,
	424, 2394, 2122, 1390, 1388, 130, 438, 1997, 926, 1004,
	2048, 375, 1997, 935, 2565, 1098, 130, 1227, 1229, 1231,
	1233, 1235, 1237, 1238, 1240, 2564, 2563, 1997, 934, 2409,
	2322, 1109, 376, 946, 359, 2891, 77, 1097, 1093, 1094,
	1095, 1096, 1099, 1100, 1101, 1103, 1182, 1059, 1183, 1184,
	1055, 1062, 1063, 1065, 1066, 1067, 1068, 1069, 1997, 1071,
	1072, 1073, 2202, 1076, 2199, 1079, 1080, 1081, 1082, 1083,
	2761, 1180, 41, 69, 44, 43, 46, 1060, 2710, 1056,
	2482, 2572, 1997, 2413, 2412, 2486, 2080, 2481, 2295, 2479,
	842, 2079, 2181, 2170, 2484, 842, 2137, 361, 968, 2063,
	2061, 1168, 1957, 47, 72, 71, 1797, 2483, 2946, 2311,
	45, 1185, 1291, 1057, 1058, 1195, 1194, 1049, 110, 109,
	3082, 2277, 2485, 2487, 63, 1148, 966, 1966, 2960, 1966,
	2958, 374, 364, 365, 1966, 385, 1966, 2811, 1158, 366,
	368, 1168, 362, 384, 383, 1182, 3379, 1185, 1001, 3380,
	2966, 3378, 1996, 2287, 2886, 2824, 435, 1996, 1380, 2434,
	2445, 55, 56, 933, 2442, 2822, 2435, 1995, 1354, 1355,
	1356, 1357, 1996, 1966, 2613, 435, 1283, 1403, 64, 2660,
	65, 1284, 1966, 2609, 1966, 2605, 377, 2610, 2892, 1161,
	1162, 1163, 1164, 1165, 1158, 1292, 1709, 1168, 1379, 1273,
	3104, 1364, 1383, 1996, 3227, 66, 1966, 2603, 2914, 2441,
	2434, 2967, 1270, 1271, 2438, 2454, 2825, 2437, 2440, 1966,
	2353, 968, 1966, 2351, 1396, 1296, 2823, 1996, 1361, 1183,
	1184, 1183, 1184, 49, 70, 1790, 51, 52, 59, 955,
	60, 2251, 1690, 1691, 1692, 1693, 1694, 94, 2611, 1966,
	2349, 1707, 130, 1966, 2347, 1966, 2344, 3250, 3251, 3247,
	3248, 435, 1139, 1684, 1022, 1023, 1024, 1025, 1026, 1027,
	1028, 1029, 1030, 1031, 1032, 1033, 1695, 1696, 1697, 1698,
	3228, 1406, 3114, 3113, 1700, 2988, 2450, 2763, 1724, 1136,
	2090, 2762, 93, 981, 1293, 1759, 130, 1159, 1160, 1161,
	1162, 1163, 1164, 1165, 1158, 1743, 1139, 1168, 973, 1365,
	2501, 994, 1366, 1832, 76, 3389, 3367, 3388, 1703, 76,
	1704, 2989, 1392, 1381, 2194, 2760, 2193, 1382, 1830, 1831,
	1829, 1721, 92, 1786, 1400, 1289, 1776, 1741, 1686, 1399,
	1706, 130, 1011, 949, 1765, 1137, 1138, 1136, 948, 1899,
	3402, 1688, 1689, 2361, 461, 130, 958, 959, 960, 961,
	962, 963, 964, 3328, 1139, 1143, 1137, 1138, 1136, 1795,
	1796, 1137, 1138, 1136, 3406, 1783, 1817, 1764, 1716, 1717,
	76, 1368, 1719, 1701, 68, 1139, 1137, 1138, 1136, 2091,
	1139, 1687, 982, 3284, 3330, 3262, 2893, 3294, 1722, 3293,
	1804, 1899, 1738, 2215, 972, 1139, 1205, 996, 1852, 2863,
	1858, 1827, 1705, 1742, 1859, 1861, 2857, 2706, 1739, 2109,
	461, 1788, 1865, 1866, 2591, 1875, 1799, 1133, 1137, 1138,
	1136, 1826, 1137, 1138, 1136, 1788, 3263, 1137, 1138, 1136,
	1760, 77, 1123, 1763, 3262, 1124, 461, 1139, 3351, 2195,
	1800, 1139, 1828, 1801, 1203, 3172, 1139, 3164, 1780, 1137,
	1138, 1136, 3399, 1822, 2167, 2168, 2169, 2503, 3122, 1884,
	1887, 2206, 1943, 2996, 1816, 1772, 3165, 1900, 1139, 1157,
	1156, 1166, 1167, 1159, 1160, 1161, 1162, 1163, 1164, 1165,
	1158, 1147, 1104, 1168, 1824, 1138, 1136, 1833, 1834, 1835,
	1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845,
	1846, 1847, 1813, 1139, 1137, 1138, 1136, 3400, 3315, 1970,
	1137, 1138, 1136, 3166, 2995, 2994, 1809, 1811, 1812, 1937,
	1117, 1947, 842, 1139, 1810, 3271, 1936, 2993, 1950, 1139,
	1972, 1166, 1167, 1159, 1160, 1161, 1162, 1163, 1164, 1165,
	1158, 3080, 2987, 1168, 1805, 1806, 1807, 2816, 2815, 2594,
	1890, 2360, 1849, 1913, 1850, 1915, 2358, 2334, 1864, 1044,
	1903, 1867, 1868, 1869, 1870, 1871, 2099, 1043, 1157, 1156,
	1166, 1167, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1158,
	3270, 2293, 1168, 2294, 1896, 1017, 3229, 1050, 3081, 3226,
	3178, 3076, 2077, 3075, 1986, 3060, 1822, 2037, 2038, 2039,
	2040, 503, 502, 505, 506, 507, 508, 1971, 1016, 3003,
	504, 1860, 2971, 1203, 2941, 2910, 2860, 2859, 1880, 1881,
	2858, 2826, 1994, 2813, 2672, 2600, 1955, 1959, 1958, 1951,
	1964, 2457, 2456, 2075, 2076, 921, 2356, 2071, 2110, 2085,
	1973, 1983, 1718, 2073, 2074, 3259, 3258, 3086, 3058, 3020,
	2081, 2311, 3014, 2041, 2042, 2043, 2033, 2034, 2035, 2036,
	2884, 2743, 2700, 2696, 2682, 2652, 2401, 2400, 2017, 2018,
	2019, 2020, 2103, 2197, 2029, 2179, 1117, 2087, 1744, 2086,
	1851, 1747, 1748, 1749, 1714, 1751, 1752, 1711, 1398, 1753,
	1397, 1369, 1367, 1039, 969, 1754, 401, 1969, 399, 1755,
	1756, 1391, 1757, 1758, 2954, 3291, 2789, 3276, 1152, 1084,
	1155, 1117, 2057, 3013, 1685, 130, 2962, 1169, 1170, 1171,
	1172, 1173, 1174, 1175, 926, 1153, 1154, 1151, 3254, 1117,
	2789, 3235, 3184, 1117, 2961, 1157, 1156, 1166, 1167, 1159,
	1160, 1161, 1162, 1163, 1164, 1165, 1158, 2789, 3180, 1168,
	2004, 2005, 2631, 2010, 2011, 2012, 2013, 2014, 2259, 2262,
	2263, 2264, 2260, 2601, 2261, 2265, 2954, 3119, 2766, 2767,
	2044, 2024, 2025, 2026, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 3408, 926, 130, 2046,
	2789, 3067, 2954, 1117, 2954, 3049, 2399, 438, 438, 2954,
	2953, 438, 2923, 1117, 1902, 2136, 1117, 1953, 130, 2789,
	2788, 130, 2619, 2618, 2615, 2616, 438, 438, 94, 130,
	2615, 2614, 1117, 2254, 1117, 2179, 1117, 2124, 2123, 130,
	130, 130, 130, 130, 1873, 2107, 2785, 3308, 1157, 1156,
	1166, 1167, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1158,
	438, 2399, 1168, 2254, 130, 1873, 1117, 1295, 1294, 2276,
	2278, 2253, 3282, 1954, 2745, 1956, 2282, 2759, 1683, 1232,
	1157, 1156, 1166, 1167, 1159, 1160, 1161, 1162, 1163, 1164,
	1165, 1158, 1953, 1089, 1168, 1157, 1156, 1166, 1167, 1159,
	1160, 1161, 1162, 1163, 1164, 1165, 1158, 2112, 2068, 1168,
	80, 2254, 438, 438, 438, 1792, 2759, 926, 2759, 2084,
	2917, 1873, 2106, 1157, 1156, 1166, 1167, 1159, 1160, 1161,
	1162, 1163, 1164, 1165, 1158, 2254, 1088, 1168, 2095, 1048,
	1047, 2083, 2775, 1048, 2134, 2632, 2617, 438, 1954, 2067,
	1683, 1050, 438, 438, 2455, 2427, 2741, 2297, 1960, 2179,
	2221, 2220, 2092, 1042, 2179, 1720, 1791, 2097, 2082, 130,
	2088, 926, 130, 2259, 2262, 2263, 2264, 2260, 1793, 2261,
	2265, 1106, 913, 2096, 1762, 1727, 2100, 1683, 2171, 1389,
	1387, 1277, 77, 3207, 3181, 1817, 2774, 130, 3100, 2277,
	3017, 2931, 2818, 1947, 1143, 1157, 1156, 1166, 1167, 1159,
	1160, 1161, 1162, 1163, 1164, 1165, 1158, 3397, 2003, 1168,
	2766, 2767, 409, 2032, 2590, 2028, 2301, 1054, 2062, 2104,
	2023, 2119, 2022, 1362, 1036, 3395, 3355, 3353, 3319, 2769,
	2745, 2105, 3245, 926, 77, 926, 2630, 2362, 926, 2111,
	1737, 1394, 1090, 2126, 1051, 926, 2129, 926, 926, 1827,
	2550, 2548, 2118, 2166, 2772, 2551, 2549, 130, 1156, 1166,
	1167, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1158, 1826,
	2771, 1168, 1822, 2552, 2547, 2263, 2264, 2546, 440, 467,
	468, 2133, 3189, 1971, 2458, 2156, 1131, 1132, 1803, 3237,
	2920, 2164, 2163, 3040, 926, 926, 2883, 2792, 2695, 2159,
	2694, 2599, 2598, 2101, 2270, 2157, 2158, 2731, 2597, 2279,
	2280, 2313, 2305, 1943, 2275, 1129, 1943, 2176, 2584, 3091,
	3094, 3177, 3176, 130, 130, 130, 3007, 2740, 3005, 3072,
	3071, 400, 1715, 2453, 2173, 2174, 2175, 2182, 2172, 2990,
	2991, 1120, 2452, 2626, 461, 2345, 1290, 926, 926, 1034,
	1018, 3301, 1121, 1015, 1014, 970, 3024, 3023, 2055, 1795,
	1796, 2252, 2915, 1947, 2056, 1393, 3309, 3170, 3009, 2797,
	2283, 1127, 1947, 2284, 842, 1947, 1157, 1156, 1166, 1167,
	1159, 1160, 1161, 1162, 1163, 1164, 1165, 1158, 1013, 2266,
	1168, 2865, 2625, 2226, 2228, 2207, 2208, 2209, 2866, 94,
	2234, 2235, 2236, 2237, 2214, 2047, 1157, 1156, 1166, 1167,
	1159, 1160, 1161, 1162, 1163, 1164, 1165, 1158, 1131, 1132,
	1168, 1773, 1114, 1115, 3300, 3299, 3298, 2162, 2968, 2132,
	997, 464, 1406, 2298, 130, 2161, 3231, 3230, 2281, 3188,
	130, 130, 438, 438, 438, 3174, 3095, 130, 3039, 465,
	80, 2188, 2300, 1361, 3187, 3106, 2285, 2399, 3357, 3356,
	1283, 2895, 2670, 2288, 2422, 1116, 2374, 2375, 2376, 3356,
	2296, 435, 2420, 2405, 2365, 2419, 2203, 2216, 2200, 2130,
	1702, 1379, 1134, 3357, 3116, 2596, 2310, 2312, 2306, 1789,
	2309, 913, 459, 3144, 50, 76, 3373, 2397, 3146, 19,
	3145, 18, 3147, 20, 3148, 21, 3143, 15, 2396, 3142,
	14, 3136, 10, 3159, 34, 3157, 33, 2343, 2357, 2346,
	2348, 2350, 2352, 82, 1776, 2426, 2359, 3156, 32, 2335,
	2336, 3155, 28, 3154, 27, 461, 2342, 3153, 26, 3151,
	23, 2368, 2366, 53, 2367, 2125, 2354, 3150, 22, 2403,
	3152, 24, 3141, 13, 3138, 12, 1, 2388, 2463, 3137,
	11, 3135, 9, 2120, 1745, 2845, 2844, 2851, 2637, 1817,
	2417, 2640, 2386, 2861, 1377, 2979, 952, 2066, 2423, 1040,
	3175, 3090, 3092, 3004, 2402, 2868, 2459, 2829, 2508, 2828,
	2379, 2378, 1035, 1725, 2430, 2433, 2408, 2078, 2145, 2410,
	3102, 2414, 2131, 2404, 1091, 1987, 1974, 3204, 915, 2432,
	90, 2530, 2532, 2425, 2089, 1943, 1943, 1943, 1943, 1943,
	2431, 980, 2337, 2338, 2339, 2341, 2436, 367, 2447, 2448,
	2531, 2270, 2451, 2559, 2554, 1984, 2319, 2429, 2439, 2444,
	3093, 1037, 2561, 1943, 2464, 2318, 1780, 2332, 1999, 2050,
	1875, 461, 2054, 2468, 2317, 2500, 1822, 2465, 2316, 3088,
	2320, 2488, 1301, 1299, 2490, 1300, 2489, 2470, 2535, 1298,
	1303, 461, 1302, 3350, 1947, 1947, 1947, 1947, 1947, 3288,
	2562, 2467, 2592, 2463, 371, 1285, 3217, 2742, 1135, 514,
	1947, 105, 54, 2885, 2443, 443, 444, 95, 103, 1802,
	2569, 373, 1947, 2491, 2492, 1176, 2493, 2494, 2160, 2289,
	2495, 2509, 2510, 2511, 2512, 2513, 840, 841, 833, 2152,
	2541, 1107, 3112, 2544, 2504, 2505, 3238, 2553, 3279, 3209,
	2568, 1125, 2570, 2571, 2542, 2543, 130, 2545, 2516, 2517,
	2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526, 3240,
	3186, 3105, 2566, 130, 130, 130, 2213, 2577, 2576, 1220,
	435, 2583, 2647, 2585, 1897, 487, 2557, 2041, 2913, 2043,
	3242, 1808, 501, 500, 499, 496, 497, 3198, 1798, 2527,
	130, 1150, 130, 2620, 2567, 484, 926, 474, 2623, 1941,
	2633, 926, 1934, 2502, 2627, 2628, 2629, 2108, 2586, 2587,
	2588, 2258, 2589, 2256, 2255, 1395, 1274, 2768, 2764, 2654,
	2268, 1945, 1940, 926, 1944, 38, 926, 2894, 995, 2460,
	2653, 389, 2737, 3033, 2649, 2165, 84, 1908, 2595, 458,
	469, 25, 17, 1005, 16, 2658, 2138, 2602, 2604, 950,
	40, 926, 42, 2373, 2608, 2058, 3216, 3335, 1021, 3365,
	3260, 31, 30, 29, 3149, 3158, 2612, 3140, 3139, 2659,
	2736, 3321, 2606, 2664, 3320, 4, 1111, 2668, 2669, 2697,
	2671, 75, 2656, 35, 911, 2, 0, 0, 0, 0,
	0, 0, 2707, 0, 0, 0, 0, 2673, 0, 0,
	2750, 76, 2699, 0, 2679, 0, 0, 0, 0, 0,
	1361, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2751, 0, 0, 0, 0, 2705, 0, 0, 1776, 2777,
	0, 0, 2678, 0, 2781, 2782, 2783, 0, 0, 0,
	0, 461, 2746, 2657, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2535, 0, 0, 0, 2687, 2692, 0,
	0, 0, 0, 0, 0, 0, 2607, 0, 2720, 0,
	0, 0, 0, 0, 0, 0, 2780, 2730, 0, 2749,
	2709, 2711, 2712, 2713, 2714, 2715, 0, 2655, 0, 0,
	0, 0, 2758, 0, 0, 76, 2753, 0, 130, 0,
	0, 0, 0, 0, 0, 0, 130, 0, 2776, 130,
	2733, 2734, 2735, 0, 2819, 130, 2820, 0, 130, 130,
	130, 2786, 2770, 2778, 0, 0, 0, 0, 2787, 0,
	0, 0, 0, 0, 0, 461, 0, 2701, 926, 0,
	2793, 0, 0, 0, 2298, 0, 0, 0, 0, 472,
	1780, 0, 0, 2841, 2842, 2843, 0, 2798, 0, 0,
	2821, 0, 0, 0, 0, 0, 2827, 0, 0, 0,
	0, 0, 0, 0, 2779, 0, 1157, 1156, 1166, 1167,
	1159, 1160, 1161, 1162, 1163, 1164, 1165, 1158, 2870, 0,
	1168, 2739, 0, 2872, 2840, 2879, 2880, 0, 2881, 0,
	0, 0, 0, 0, 2717, 2718, 2796, 2719, 2463, 926,
	2721, 130, 2723, 0, 0, 0, 0, 2869, 2810, 2867,
	0, 2871, 0, 0, 926, 926, 926, 0, 2874, 2875,
	438, 0, 0, 0, 0, 2882, 0, 2889, 2896, 2897,
	0, 0, 0, 0, 0, 130, 438, 0, 0, 2812,
	2583, 2814, 0, 0, 0, 2890, 2041, 0, 0, 0,
	0, 0, 0, 438, 0, 0, 0, 0, 2956, 0,
	1226, 1226, 1226, 1232, 1226, 1226, 1232, 1226, 1232, 1241,
	1242, 926, 0, 2933, 2535, 438, 0, 926, 0, 0,
	2938, 2939, 2940, 438, 2936, 0, 0, 0, 2916, 926,
	926, 0, 0, 0, 2942, 0, 2790, 2791, 0, 0,
	2964, 2924, 0, 2925, 2965, 0, 1872, 1874, 0, 0,
	0, 2963, 0, 130, 1879, 0, 0, 0, 0, 0,
	0, 2948, 0, 926, 2949, 2950, 2937, 0, 0, 2943,
	0, 0, 2901, 2902, 2903, 2904, 0, 0, 0, 0,
	2908, 0, 0, 2899, 2911, 2912, 0, 0, 0, 0,
	2969, 0, 1911, 1912, 3025, 0, 1943, 0, 2970, 1918,
	1919, 1920, 1921, 1228, 1230, 0, 1234, 1236, 0, 1239,
	2982, 0, 0, 0, 2992, 0, 0, 0, 2750, 2729,
	926, 2750, 3045, 0, 2997, 2951, 2952, 0, 3011, 0,
	3010, 0, 3015, 3016, 0, 2777, 3000, 0, 0, 0,
	0, 3044, 0, 2275, 0, 3052, 0, 130, 130, 130,
	130, 130, 0, 3027, 2957, 1947, 2959, 3028, 3022, 130,
	0, 0, 461, 130, 0, 0, 76, 130, 1203, 0,
	3048, 3042, 3047, 0, 3041, 130, 0, 0, 2926, 2927,
	2928, 2929, 3051, 3026, 2930, 3068, 3057, 2932, 926, 0,
	926, 0, 926, 3070, 926, 1203, 3038, 2749, 0, 0,
	2749, 0, 0, 0, 0, 0, 461, 0, 0, 0,
	3059, 0, 0, 0, 3050, 3018, 3019, 0, 1157, 1156,
	1166, 1167, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1158,
	0, 0, 1168, 0, 0, 1227, 1229, 1231, 1233, 1235,
	1237, 1238, 1240, 0, 2750, 0, 76, 0, 0, 0,
	3098, 0, 0, 0, 0, 130, 0, 3121, 0, 0,
	0, 0, 0, 3096, 0, 3118, 3097, 0, 3099, 0,
	0, 76, 0, 2728, 0, 926, 926, 926, 0, 0,
	0, 0, 438, 0, 2498, 0, 461, 130, 438, 3127,
	3107, 3115, 0, 0, 3117, 0, 0, 3120, 0, 0,
	3066, 0, 130, 0, 438, 0, 926, 0, 438, 0,
	3129, 0, 438, 438, 472, 438, 0, 0, 0, 0,
	0, 2677, 0, 2749, 0, 0, 3173, 3123, 0, 0,
	2685, 2690, 926, 3182, 3171, 0, 130, 926, 0, 0,
	2677, 0, 0, 0, 926, 0, 3201, 926, 926, 3206,
	3212, 3208, 0, 0, 0, 0, 0, 0, 0, 0,
	3202, 0, 0, 0, 76, 0, 0, 3101, 0, 3057,
	0, 2535, 1157, 1156, 1166, 1167, 1159, 1160, 1161, 1162,
	1163, 1164, 1165, 1158, 0, 0, 1168, 0, 0, 0,
	3221, 1157, 1156, 1166, 1167, 1159, 1160, 1161, 1162, 1163,
	1164, 1165, 1158, 0, 0, 1168, 0, 0, 0, 0,
	3233, 3246, 0, 3236, 3234, 0, 0, 0, 0, 0,
	0, 0, 0, 926, 0, 926, 0, 0, 0, 0,
	3257, 3252, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 435, 0, 3275, 3256, 0, 0, 0,
	0, 0, 926, 0, 0, 3255, 0, 1203, 0, 0,
	0, 0, 0, 0, 76, 3277, 3267, 0, 0, 926,
	76, 0, 3297, 3287, 0, 0, 0, 0, 3295, 0,
	0, 3292, 3206, 926, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3314, 76, 3302, 0, 3310, 0,
	76, 3312, 0, 3329, 0, 0, 3306, 0, 3345, 3304,
	2508, 0, 3332, 0, 3325, 0, 435, 3324, 3344, 3334,
	3346, 3349, 3352, 130, 3347, 926, 3323, 76, 3354, 3322,
	0, 76, 76, 3360, 0, 3359, 76, 0, 0, 3362,
	461, 3358, 0, 0, 0, 1128, 0, 0, 0, 0,
	0, 0, 0, 0, 2102, 0, 438, 0, 0, 0,
	0, 0, 76, 438, 3382, 76, 0, 2677, 0, 3390,
	0, 3304, 3392, 3387, 0, 3368, 0, 0, 3213, 3214,
	0, 0, 0, 0, 76, 0, 76, 0, 0, 0,
	76, 125, 0, 2677, 386, 0, 0, 0, 3405, 0,
	125, 3304, 0, 926, 76, 3241, 3244, 76, 0, 0,
	0, 0, 76, 0, 452, 3412, 0, 76, 0, 2135,
	0, 0, 0, 3304, 0, 3304, 0, 0, 0, 473,
	0, 2151, 0, 0, 0, 850, 0, 0, 125, 0,
	0, 0, 0, 3304, 0, 3343, 0, 0, 130, 0,
	0, 3304, 0, 0, 0, 0, 3304, 0, 125, 0,
	0, 0, 0, 0, 0, 0, 0, 926, 0, 125,
	0, 0, 0, 0, 926, 926, 926, 0, 0, 0,
	3296, 0, 926, 2497, 0, 0, 0, 0, 0, 3371,
	0, 0, 0, 0, 0, 0, 2178, 0, 2180, 0,
	3244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 926, 0, 0, 0, 0, 0, 0, 0, 3396,
	2189, 2190, 2191, 2192, 2496, 0, 0, 2196, 2198, 0,
	0, 2201, 0, 0, 2204, 2205, 0, 0, 0, 2210,
	2211, 0, 0, 0, 0, 2217, 2218, 0, 2219, 0,
	0, 2222, 2223, 0, 2224, 2225, 0, 0, 2229, 2230,
	2231, 2232, 2233, 0, 0, 0, 0, 2238, 2239, 2240,
	2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 0,
	0, 926, 0, 0, 0, 3391, 0, 0, 130, 0,
	1157, 1156, 1166, 1167, 1159, 1160, 1161, 1162, 1163, 1164,
	1165, 1158, 0, 0, 1168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 926, 0, 0, 0,
	0, 0, 2466, 0, 926, 0, 0, 0, 130, 0,
	130, 1157, 1156, 1166, 1167, 1159, 1160, 1161, 1162, 1163,
	1164, 1165, 1158, 0, 0, 1168, 0, 926, 0, 1853,
	1157, 1156, 1166, 1167, 1159, 1160, 1161, 1162, 1163, 1164,
	1165, 1158, 0, 0, 1168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1876, 1877, 1878, 0, 0, 0,
	1882, 1883, 1886, 1889, 0, 1894, 1895, 0, 0, 0,
	0, 1901, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 438, 0, 0, 125, 0, 0, 0, 513,
	926, 1906, 0, 1909, 1910, 0, 0, 0, 1914, 0,
	1916, 1917, 0, 0, 0, 0, 1922, 1923, 1924, 1925,
	1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 125,
	0, 0, 0, 36, 130, 127, 0, 0, 0, 0,
	0, 36, 0, 0, 127, 0, 0, 57, 0, 0,
	0, 0, 0, 73, 0, 57, 39, 0, 0, 0,
	0, 73, 0, 0, 39, 0, 0, 0, 0, 0,
	0, 0, 486, 926, 452, 0, 0, 926, 0, 0,
	0, 0, 127, 920, 0, 0, 0, 0, 452, 0,
	0, 0, 0, 0, 926, 77, 0, 0, 0, 0,
	0, 0, 127, 77, 0, 0, 0, 2471, 2472, 2473,
	2474, 2475, 2476, 127, 2177, 0, 0, 0, 126, 0,
	0, 3160, 0, 0, 3364, 3367, 3363, 126, 0, 3160,
	0, 0, 0, 0, 3415, 926, 0, 0, 0, 0,
	0, 453, 1157, 1156, 1166, 1167, 1159, 1160, 1161, 1162,
	1163, 1164, 1165, 1158, 926, 0, 1168, 0, 0, 0,
	0, 0, 851, 0, 0, 126, 919, 1157, 1156, 1166,
	1167, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1158, 0,
	926, 1168, 0, 0, 0, 126, 0, 0, 0, 0,
	0, 0, 2555, 2556, 0, 0, 126, 0, 0, 0,
	0, 0, 0, 0, 0, 438, 0, 41, 69, 44,
	43, 46, 926, 0, 0, 41, 69, 44, 43, 46,
	0, 0, 3161, 0, 0, 926, 0, 926, 0, 0,
	3161, 0, 0, 0, 0, 0, 0, 0, 47, 72,
	71, 926, 0, 0, 0, 45, 47, 72, 71, 0,
	0, 0, 0, 45, 0, 0, 0, 0, 0, 130,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 438, 0,
	0, 926, 0, 0, 0, 0, 130, 0, 0, 0,
	0, 0, 0, 0, 36, 0, 55, 56, 0, 3162,
	130, 0, 0, 0, 55, 56, 0, 3162, 57, 0,
	0, 0, 0, 64, 73, 65, 0, 39, 0, 0,
	0, 64, 0, 65, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	66, 0, 0, 0, 0, 0, 0, 0, 66, 127,
	0, 0, 0, 0, 0, 0, 77, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3163, 70,
	0, 51, 52, 59, 0, 60, 3163, 70, 0, 51,
	52, 59, 3160, 60, 0, 0, 0, 3410, 0, 2708,
	0, 0, 0, 127, 0, 0, 0, 0, 0, 0,
	0, 0, 2716, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2725, 2726, 2727, 0, 0, 0, 0,
	2732, 0, 0, 0, 0, 0, 0, 0, 512, 0,
	0, 0, 126, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2752, 0, 0, 1276, 0,
	0, 850, 1146, 0, 0, 0, 850, 0, 41, 69,
	44, 43, 46, 0, 0, 0, 126, 0, 0, 0,
	0, 0, 0, 3161, 0, 0, 0, 0, 0, 0,
	0, 2784, 0, 0, 0, 0, 0, 0, 0, 47,
	72, 71, 0, 0, 0, 0, 45, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 849, 68,
	0, 453, 918, 0, 0, 0, 0, 68, 0, 0,
	0, 0, 0, 0, 0, 453, 0, 0, 0, 0,
	0, 0, 0, 0, 957, 1144, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 55, 56, 0,
	3162, 125, 0, 0, 0, 0, 1372, 1375, 0, 0,
	0, 0, 0, 0, 64, 0, 65, 0, 0, 0,
	0, 125, 0, 0, 125, 0, 0, 1372, 1375, 0,
	0, 0, 1405, 0, 0, 0, 0, 0, 0, 0,
	0, 66, 125, 125, 125, 125, 125, 0, 0, 0,
	0, 0, 0, 0, 0, 2183, 2184, 2185, 2186, 2187,
	0, 0, 0, 0, 0, 0, 0, 1710, 0, 3163,
	70, 0, 51, 52, 59, 0, 60, 0, 0, 0,
	0, 0, 0, 0, 2212, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2905, 2906,
	2907, 0, 2909, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2918, 2919, 0, 2921, 0,
	0, 2922, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2935, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2955, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 452, 0, 0, 125, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	125, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1405, 0, 0, 0, 0, 0,
	68, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1857, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 127, 0, 0, 0, 3029, 3030, 3031, 3032,
	452, 0, 1857, 1857, 1857, 0, 3036, 3037, 1857, 1857,
	1857, 1857, 0, 1857, 1857, 0, 0, 0, 850, 1857,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3053, 3054, 3055, 0, 0, 0, 1857,
	1857, 1857, 1857, 0, 0, 1857, 1857, 1857, 1857, 1857,
	0, 0, 0, 0, 1857, 1857, 1857, 1857, 1857, 1857,
	1857, 1857, 1857, 1857, 1857, 1857, 125, 125, 125, 0,
	0, 0, 0, 850, 0, 126, 0, 0, 851, 0,
	0, 0, 0, 851, 0, 0, 0, 1405, 0, 0,
	0, 0, 0, 0, 0, 127, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 36, 0, 0, 0,
	0, 0, 0, 0, 0, 127, 0, 0, 127, 0,
	57, 0, 0, 0, 0, 0, 73, 0, 3108, 39,
	0, 0, 0, 0, 0, 0, 127, 127, 127, 127,
	127, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 36, 0, 0, 0, 0, 0, 0,
	0, 3124, 0, 0, 0, 0, 1360, 57, 77, 0,
	0, 0, 0, 73, 0, 0, 39, 125, 126, 0,
	0, 0, 0, 125, 125, 0, 0, 0, 0, 0,
	125, 0, 0, 0, 3160, 0, 0, 3183, 126, 3401,
	0, 126, 0, 0, 0, 0, 0, 3192, 0, 0,
	0, 0, 0, 3203, 0, 77, 0, 0, 0, 126,
	126, 126, 126, 126, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3160, 0, 0, 0, 0, 3384, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1779, 127,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	41, 69, 44, 43, 46, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 127, 3161, 0, 0, 0, 3253,
	0, 1146, 0, 0, 0, 0, 0, 0, 1818, 0,
	0, 47, 72, 71, 0, 0, 0, 0, 45, 0,
	0, 0, 0, 0, 0, 0, 0, 41, 69, 44,
	43, 46, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3161, 0, 0, 0, 0, 0, 3286, 453,
	0, 1778, 126, 0, 0, 0, 0, 0, 47, 72,
	71, 0, 0, 0, 0, 45, 0, 0, 0, 55,
	56, 0, 3162, 0, 0, 0, 0, 126, 0, 0,
	0, 0, 0, 0, 1144, 0, 64, 0, 65, 0,
	0, 1819, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 66, 0, 0, 55, 56, 0, 3162,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	127, 127, 127, 64, 849, 65, 0, 0, 0, 849,
	1286, 3163, 70, 0, 51, 52, 59, 453, 60, 0,
	0, 1818, 0, 0, 0, 920, 0, 0, 0, 0,
	66, 0, 0, 0, 0, 851, 3393, 3394, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 125,
	0, 0, 0, 0, 0, 0, 0, 0, 3163, 70,
	0, 51, 52, 59, 0, 60, 2093, 2094, 125, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 126, 126, 126, 0, 0, 0, 0,
	851, 0, 0, 125, 0, 452, 0, 0, 0, 0,
	0, 0, 0, 1363, 1819, 0, 0, 0, 919, 1371,
	1374, 127, 0, 0, 0, 0, 0, 127, 127, 0,
	0, 0, 0, 0, 127, 0, 0, 0, 0, 0,
	1371, 1374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 68, 1405, 0, 0, 0, 36, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 57, 0, 0, 0, 0, 0, 73, 0, 0,
	39, 0, 0, 0, 126, 0, 0, 0, 0, 0,
	126, 126, 0, 0, 0, 0, 0, 126, 0, 68,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1746, 0, 0, 0, 0, 0, 77,
	1857, 1323, 0, 1857, 1857, 1857, 1857, 1857, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3160, 0, 0, 0, 0,
	3303, 0, 1857, 0, 0, 0, 0, 0, 0, 0,
	0, 3268, 0, 0, 0, 0, 0, 1777, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 125, 0, 0, 0, 0, 0, 0, 0, 125,
	0, 0, 452, 0, 0, 0, 0, 1823, 125, 0,
	0, 125, 2286, 1405, 0, 850, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1310, 0, 0, 0, 0,
	0, 41, 69, 44, 43, 46, 0, 0, 0, 1823,
	0, 1823, 0, 0, 1862, 0, 3161, 0, 0, 0,
	0, 1863, 0, 1823, 1823, 0, 0, 0, 0, 0,
	0, 0, 47, 72, 71, 0, 0, 0, 0, 45,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 849, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1904, 1905, 0, 127, 125, 0, 1324, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	55, 56, 127, 3162, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 849, 64, 125, 65,
	0, 0, 0, 0, 0, 0, 0, 127, 0, 0,
	1823, 0, 0, 1823, 918, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 66, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 0, 0, 0,
	0, 0, 3163, 70, 0, 51, 52, 59, 0, 60,
	0, 0, 0, 0, 0, 126, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 125, 1818, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1857, 0, 0,
	126, 0, 453, 0, 0, 1857, 0, 1405, 0, 0,
	0, 1337, 1340, 1341, 1342, 1343, 1344, 1345, 0, 1346,
	1347, 1348, 1349, 1350, 1351, 1352, 1353, 0, 1325, 1326,
	1327, 1328, 1304, 1308, 1338, 1305, 1311, 1307, 1309, 1306,
	0, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320,
	1321, 1322, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1819, 0, 0, 0, 0, 0, 0, 0, 0, 850,
	125, 125, 125, 125, 125, 0, 0, 0, 0, 0,
	0, 0, 452, 0, 0, 0, 125, 0, 0, 0,
	452, 0, 0, 0, 0, 1857, 0, 0, 125, 0,
	0, 0, 0, 68, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 127, 0, 0, 0, 0,
	0, 0, 0, 127, 0, 0, 0, 0, 0, 0,
	0, 0, 127, 0, 0, 127, 0, 0, 0, 0,
	0, 0, 1339, 1323, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 125, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 126, 0,
	0, 0, 0, 0, 0, 0, 126, 0, 0, 453,
	125, 0, 0, 0, 0, 126, 0, 0, 126, 0,
	0, 0, 851, 0, 0, 125, 0, 0, 127, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1310, 0, 0,
	0, 2304, 0, 0, 0, 0, 0, 0, 0, 125,
	0, 0, 127, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 473, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 0, 0, 0, 0, 1779, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1324, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	127, 0, 0, 0, 850, 126, 0, 0, 0, 0,
	0, 0, 2117, 0, 0, 0, 0, 2117, 0, 0,
	0, 1818, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2117,
	0, 0, 2117, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1778,
	0, 0, 0, 0, 0, 0, 0, 2155, 0, 0,
	0, 0, 0, 0, 0, 0, 1823, 0, 0, 0,
	0, 0, 0, 126, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 127, 127, 127, 127, 127, 0,
	0, 0, 0, 0, 1819, 0, 125, 0, 0, 0,
	127, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 127, 1337, 1340, 1341, 1342, 1343, 1344, 1345,
	0, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 0,
	1325, 1326, 1327, 1328, 1304, 1308, 1338, 1305, 1311, 1307,
	1309, 1306, 0, 1312, 1313, 1314, 1315, 1316, 1317, 1318,
	1319, 1320, 1321, 1322, 1329, 1330, 1331, 1332, 1333, 1334,
	1335, 1336, 0, 0, 0, 0, 2536, 126, 126, 126,
	126, 126, 0, 0, 0, 0, 0, 0, 0, 453,
	0, 0, 0, 126, 0, 0, 0, 453, 0, 0,
	36, 0, 127, 0, 0, 126, 0, 0, 0, 0,
	0, 0, 0, 0, 57, 0, 0, 0, 0, 0,
	73, 0, 0, 39, 2581, 0, 0, 0, 0, 0,
	0, 452, 0, 0, 127, 850, 0, 0, 849, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 127,
	0, 0, 0, 0, 1823, 0, 0, 0, 0, 0,
	0, 0, 77, 3369, 1339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2686, 2691, 0,
	0, 0, 0, 127, 0, 126, 0, 0, 3160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 0, 0,
	0, 0, 0, 0, 0, 2363, 0, 0, 0, 0,
	0, 0, 126, 0, 0, 0, 0, 0, 0, 0,
	2377, 2381, 2385, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2304, 0,
	2684, 2689, 0, 0, 0, 0, 126, 0, 0, 0,
	1779, 125, 473, 0, 41, 69, 44, 43, 46, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3161,
	0, 0, 0, 0, 0, 0, 0, 2117, 0, 0,
	0, 0, 0, 2418, 0, 47, 72, 71, 0, 36,
	0, 452, 45, 452, 0, 1777, 1823, 0, 0, 0,
	0, 0, 0, 57, 0, 0, 0, 0, 0, 73,
	0, 0, 39, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1823,
	0, 2536, 0, 1778, 0, 0, 0, 0, 0, 0,
	1823, 0, 0, 55, 56, 0, 3162, 0, 0, 0,
	127, 77, 0, 0, 0, 0, 0, 0, 0, 0,
	64, 0, 65, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3160, 0, 0,
	0, 0, 0, 0, 0, 0, 2506, 66, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 849, 0, 0, 3163, 70, 125, 51, 52,
	59, 0, 60, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 126, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1823, 0, 1823, 0, 1823, 0,
	2580, 0, 0, 41, 69, 44, 43, 46, 0, 0,
	0, 0, 850, 0, 0, 0, 0, 0, 3161, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 47, 72, 71, 0, 0, 0,
	0, 45, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2634, 2635, 2636, 0, 0, 0, 0, 0, 0,
	0, 0, 55, 56, 0, 3162, 0, 0, 453, 0,
	0, 0, 2536, 0, 0, 0, 68, 0, 0, 64,
	0, 65, 2662, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2581, 0, 0, 0, 66, 0, 2693, 0,
	0, 0, 0, 2698, 0, 0, 0, 0, 0, 0,
	2702, 0, 0, 2703, 2704, 127, 0, 0, 0, 0,
	0, 2581, 0, 0, 3163, 70, 0, 51, 52, 59,
	0, 60, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 452, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 452,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 452, 0, 0, 0, 849, 0, 1777,
	0, 2757, 0, 0, 0, 0, 0, 0, 126, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2757, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1823, 0, 0, 453, 0,
	453, 0, 0, 0, 0, 0, 0, 0, 0, 2795,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 68, 0, 0, 0, 0,
	0, 127, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2381, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2581, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 0, 0, 0, 0, 1823,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2581, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 849, 2536,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2795, 0, 0, 0, 0, 0, 0,
	2795, 2795, 2795, 0, 0, 0, 0, 0, 2580, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2580, 0, 0,
	0, 0, 0, 0, 2581, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3021, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3046, 0, 0, 0, 0, 0, 0, 453,
	2795, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3062, 0, 0, 453, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	453, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2580, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2580,
	0, 0, 0, 3185, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 849, 0, 0, 0, 0,
	1823, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1823, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2580, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2795, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3281, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3285, 0, 1823, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 809, 1823, 328, 571,
	813, 656, 679, 822, 685, 687, 750, 632, 727, 273,
	676, 633, 0, 0, 624, 480, 625, 657, 199, 477,
	783, 728, 811, 713, 743, 753, 198, 190, 720, 719,
	800, 668, 667, 748, 796, 810, 0, 3281, 579, 240,
	0, 0, 350, 320, 257, 0, 0, 711, 0, 564,
	565, 696, 752, 644, 739, 815, 677, 744, 816, 77,
	0, 0, 0, 478, 503, 502, 505, 506, 507, 508,
	0, 0, 137, 504, 509, 510, 511, 0, 706, 749,
	827, 623, 475, 494, 628, 578, 0, 801, 664, 665,
	202, 0, 0, 0, 0, 0, 0, 0, 709, 726,
	768, 693, 345, 755, 764, 778, 686, 288, 215, 0,
	0, 0, 0, 491, 492, 471, 0, 0, 0, 594,
	0, 493, 0, 638, 489, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 495, 0, 0,
	0, 643, 621, 662, 770, 622, 620, 258, 635, 567,
	799, 694, 231, 153, 805, 692, 592, 758, 639, 787,
	680, 238, 637, 154, 634, 640, 678, 269, 767, 773,
	576, 157, 784, 658, 671, 191, 0, 298, 745, 344,
	483, 731, 297, 241, 337, 759, 807, 343, 681, 327,
	351, 355, 208, 714, 182, 317, 200, 197, 663, 777,
	627, 216, 287, 194, 234, 697, 751, 659, 187, 762,
	738, 789, 316, 334, 159, 255, 335, 354, 174, 329,
	256, 262, 184, 186, 185, 170, 311, 333, 179, 189,
	785, 772, 791, 654, 641, 646, 642, 670, 808, 226,
	217, 792, 790, 348, 143, 307, 306, 684, 225, 775,
	144, 136, 294, 145, 232, 162, 795, 357, 173, 236,
	330, 482, 211, 268, 193, 747, 277, 669, 156, 290,
	252, 253, 251, 254, 214, 140, 146, 771, 292, 309,
	332, 175, 323, 138, 139, 141, 148, 300, 149, 150,
	814, 246, 204, 207, 219, 229, 746, 296, 324, 349,
	740, 171, 164, 326, 342, 180, 308, 310, 356, 769,
	166, 803, 786, 733, 699, 705, 629, 0, 165, 765,
	661, 673, 653, 741, 652, 213, 757, 340, 341, 192,
	358, 570, 818, 167, 636, 817, 265, 272, 264, 820,
	336, 804, 734, 723, 721, 630, 802, 732, 722, 237,
	206, 221, 285, 243, 286, 222, 260, 259, 261, 244,
	725, 0, 163, 0, 321, 812, 829, 325, 177, 647,
	779, 331, 218, 291, 178, 212, 205, 284, 263, 172,
	224, 319, 235, 242, 761, 826, 276, 299, 181, 346,
	318, 201, 581, 593, 587, 589, 588, 585, 586, 584,
	583, 582, 595, 568, 569, 572, 573, 574, 716, 806,
	631, 577, 782, 590, 591, 754, 824, 566, 188, 515,
	607, 608, 609, 516, 610, 611, 517, 518, 612, 613,
	614, 615, 519, 616, 617, 618, 596, 597, 598, 599,
	600, 601, 602, 603, 606, 604, 605, 712, 281, 575,
	158, 168, 239, 825, 293, 210, 619, 626, 645, 648,
	649, 650, 651, 655, 660, 0, 666, 672, 674, 675,
	683, 688, 689, 690, 691, 698, 700, 701, 702, 703,
	704, 707, 708, 710, 717, 718, 724, 729, 730, 736,
	737, 0, 760, 763, 580, 774, 776, 780, 781, 788,
	793, 794, 819, 823, 828, 347, 196, 715, 735, 766,
	169, 176, 183, 195, 203, 209, 220, 223, 227, 228,
	230, 233, 245, 247, 248, 249, 250, 266, 267, 270,
	271, 274, 275, 278, 279, 280, 282, 283, 289, 147,
	295, 301, 302, 303, 304, 305, 312, 313, 314, 315,
	322, 338, 339, 352, 353, 798, 695, 155, 0, 0,
	161, 0, 0, 0, 0, 0, 682, 160, 797, 821,
	742, 756, 809, 0, 328, 571, 813, 656, 679, 822,
	685, 687, 750, 632, 727, 273, 676, 633, 0, 0,
	624, 480, 625, 657, 199, 477, 783, 728, 811, 713,
	743, 753, 198, 190, 720, 719, 800, 668, 667, 748,
	796, 810, 0, 0, 579, 240, 0, 0, 350, 320,
	257, 0, 0, 711, 0, 564, 565, 696, 752, 644,
	739, 815, 677, 744, 816, 77, 0, 1117, 0, 478,
	503, 502, 505, 506, 507, 508, 0, 0, 137, 504,
	509, 510, 511, 0, 706, 749, 827, 623, 475, 494,
	628, 578, 0, 801, 664, 665, 202, 0, 0, 0,
	0, 0, 0, 0, 709, 726, 768, 693, 345, 755,
	764, 778, 686, 288, 215, 0, 0, 0, 0, 491,
	492, 0, 0, 0, 0, 594, 0, 493, 0, 638,
	489, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 495, 0, 0, 0, 643, 621, 662,
	770, 622, 620, 258, 635, 567, 799, 694, 231, 153,
	805, 692, 592, 758, 639, 787, 680, 238, 637, 154,
	634, 640, 678, 269, 767, 773, 576, 157, 784, 658,
	671, 191, 0, 298, 745, 344, 483, 731, 297, 241,
	337, 759, 807, 343, 681, 327, 351, 355, 208, 714,
	182, 317, 200, 197, 663, 777, 627, 216, 287, 194,
	234, 697, 751, 659, 187, 762, 738, 789, 316, 334,
	159, 255, 335, 354, 174, 329, 256, 262, 184, 186,
	185, 170, 311, 333, 179, 189, 785, 772, 791, 654,
	641, 646, 642, 670, 808, 226, 217, 792, 790, 348,
	143, 307, 306, 684, 225, 775, 144, 136, 294, 145,
	232, 162, 795, 357, 173, 236, 330, 482, 211, 268,
	193, 747, 277, 669, 156, 290, 252, 253, 251, 254,
	214, 140, 146, 771, 292, 309, 332, 175, 323, 138,
	139, 141, 148, 300, 149, 150, 814, 246, 204, 207,
	219, 229, 746, 296, 324, 349, 740, 171, 164, 326,
	342, 180, 308, 310, 356, 769, 166, 803, 786, 733,
	699, 705, 629, 0, 165, 765, 661, 673, 653, 741,
	652, 213, 757, 340, 341, 192, 358, 570, 818, 167,
	636, 817, 265, 272, 264, 820, 336, 804, 734, 723,
	721, 630, 802, 732, 722, 237, 206, 221, 285, 243,
	286, 222, 260, 259, 261, 244, 725, 0, 163, 0,
	321, 812, 829, 325, 177, 647, 779, 331, 218, 291,
	178, 212, 205, 284, 263, 172, 224, 319, 235, 242,
	761, 826, 276, 299, 181, 346, 318, 201, 581, 593,
	587, 589, 588, 585, 586, 584, 583, 582, 595, 568,
	569, 572, 573, 574, 716, 806, 631, 577, 782, 590,
	591, 754, 824, 566, 188, 515, 607, 608, 609, 516,
	610, 611, 517, 518, 612, 613, 614, 615, 519, 616,
	617, 618, 596, 597, 598, 599, 600, 601, 602, 603,
	606, 604, 605, 712, 281, 575, 158, 168, 239, 825,
	293, 210, 619, 626, 645, 648, 649, 650, 651, 655,
	660, 0, 666, 672, 674, 675, 683, 688, 689, 690,
	691, 698, 700, 701, 702, 703, 704, 707, 708, 710,
	717, 718, 724, 729, 730, 736, 737, 0, 760, 763,
	580, 774, 776, 780, 781, 788, 793, 794, 819, 823,
	828, 347, 196, 715, 735, 766, 169, 176, 183, 195,
	203, 209, 220, 223, 227, 228, 230, 233, 245, 247,
	248, 249, 250, 266, 267, 270, 271, 274, 275, 278,
	279, 280, 282, 283, 289, 147, 295, 301, 302, 303,
	304, 305, 312, 313, 314, 315, 322, 338, 339, 352,
	353, 798, 695, 155, 0, 0, 161, 0, 0, 0,
	0, 0, 682, 160, 797, 821, 742, 756, 809, 0,
	328, 571, 813, 656, 679, 822, 685, 687, 750, 632,
	727, 273, 676, 633, 0, 0, 624, 480, 625, 657,
	199, 477, 783, 728, 811, 713, 743, 753, 198, 190,
	720, 719, 800, 668, 667, 748, 796, 810, 0, 0,
	579, 240, 0, 0, 350, 320, 257, 0, 0, 711,
	0, 564, 565, 696, 752, 644, 739, 815, 677, 744,
	816, 77, 0, 0, 0, 478, 503, 502, 505, 506,
	507, 508, 0, 0, 137, 504, 509, 510, 511, 0,
	706, 749, 827, 623, 475, 494, 628, 578, 0, 801,
	664, 665, 202, 0, 0, 0, 0, 0, 0, 0,
	709, 726, 768, 693, 345, 755, 764, 778, 686, 288,
	215, 0, 0, 0, 0, 491, 492, 1855, 0, 0,
	0, 594, 0, 493, 0, 638, 489, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 495,
	0, 0, 0, 643, 621, 662, 770, 622, 620, 258,
	635, 567, 799, 694, 231, 153, 805, 692, 592, 758,
	639, 787, 680, 238, 637, 154, 634, 640, 678, 269,
	767, 773, 576, 157, 784, 658, 671, 191, 0, 298,
	745, 344, 483, 731, 297, 241, 337, 759, 807, 343,
	681, 327, 351, 355, 208, 714, 182, 317, 200, 197,
	663, 777, 627, 216, 287, 194, 234, 697, 751, 659,
	187, 762, 738, 789, 316, 334, 159, 255, 335, 354,
	174, 329, 256, 262, 184, 186, 185, 170, 311, 333,
	179, 189, 785, 772, 791, 654, 641, 646, 642, 670,
	808, 226, 217, 792, 790, 348, 143, 307, 306, 684,
	225, 775, 144, 136, 294, 145, 232, 162, 795, 357,
	173, 236, 330, 482, 211, 268, 193, 747, 277, 669,
	156, 290, 252, 253, 251, 254, 214, 140, 146, 771,
	292, 309, 332, 175, 323, 138, 139, 141, 148, 300,
	149, 150, 814, 246, 204, 207, 219, 229, 746, 296,
	324, 349, 740, 171, 164, 326, 342, 180, 308, 310,
	356, 769, 166, 803, 786, 733, 699, 705, 629, 0,
	165, 765, 661, 673, 653, 741, 652, 213, 757, 340,
	341, 192, 358, 570, 818, 167, 636, 817, 265, 272,
	264, 820, 336, 804, 734, 723, 721, 630, 802, 732,
	722, 237, 206, 221, 285, 243, 286, 222, 260, 259,
	261, 244, 725, 0, 163, 0, 321, 812, 829, 325,
	177, 647, 779, 331, 218, 291, 178, 212, 205, 284,
	263, 172, 224, 319, 235, 242, 761, 826, 276, 299,
	181, 346, 318, 201, 581, 593, 587, 589, 588, 585,
	586, 584, 583, 582, 595, 568, 569, 572, 573, 574,
	716, 806, 631, 577, 782, 590, 591, 754, 824, 566,
	188, 515, 607, 608, 609, 516, 610, 611, 517, 518,
	612, 613, 614, 615, 519, 616, 617, 618, 596, 597,
	598, 599, 600, 601, 602, 603, 606, 604, 605, 712,
	281, 575, 158, 168, 239, 825, 293, 210, 619, 626,
	645, 648, 649, 650, 651, 655, 660, 0, 666, 672,
	674, 675, 683, 688, 689, 690, 691, 698, 700, 701,
	702, 703, 704, 707, 708, 710, 717, 718, 724, 729,
	730, 736, 737, 0, 760, 763, 580, 774, 776, 780,
	781, 788, 793, 794, 819, 823, 828, 347, 196, 715,
	735, 766, 169, 176, 183, 195, 203, 209, 220, 223,
	227, 228, 230, 233, 245, 247, 248, 249, 250, 266,
	267, 270, 271, 274, 275, 278, 279, 280, 282, 283,
	289, 147, 295, 301, 302, 303, 304, 305, 312, 313,
	314, 315, 322, 338, 339, 352, 353, 798, 695, 155,
	0, 0, 161, 0, 0, 0, 0, 0, 682, 160,
	797, 821, 742, 756, 809, 0, 328, 571, 813, 656,
	679, 822, 685, 687, 750, 632, 727, 273, 676, 633,
	0, 0, 624, 480, 625, 657, 199, 477, 783, 728,
	811, 713, 743, 753, 198, 190, 720, 719, 800, 668,
	667, 748, 796, 810, 0, 0, 579, 240, 0, 0,
	350, 320, 257, 0, 0, 711, 0, 564, 565, 696,
	752, 644, 739, 815, 677, 1967, 816, 77, 0, 0,
	0, 478, 503, 502, 505, 506, 507, 508, 0, 0,
	137, 504, 509, 510, 511, 1968, 706, 749, 827, 623,
	475, 494, 628, 578, 0, 801, 664, 665, 202, 0,
	0, 0, 0, 0, 0, 0, 709, 726, 768, 693,
	345, 755, 764, 778, 686, 288, 215, 0, 0, 0,
	0, 491, 492, 0, 0, 0, 0, 594, 0, 493,
	0, 638, 489, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 495, 0, 0, 0, 643,
	621, 662, 770, 622, 620, 258, 635, 567, 799, 694,
	231, 153, 805, 692, 592, 758, 639, 787, 680, 238,
	637, 154, 634, 640, 678, 269, 767, 773, 576, 157,
	784, 658, 671, 191, 0, 298, 745, 344, 483, 731,
	297, 241, 337, 759, 807, 343, 681, 327, 351, 355,
	208, 714, 182, 317, 200, 197, 663, 777, 627, 216,
	287, 194, 234, 697, 751, 659, 187, 762, 738, 789,
	316, 334, 159, 255, 335, 354, 174, 329, 256, 262,
	184, 186, 185, 170, 311, 333, 179, 189, 785, 772,
	791, 654, 641, 646, 642, 670, 808, 226, 217, 792,
	790, 348, 143, 307, 306, 684, 225, 775, 144, 136,
	294, 145, 232, 162, 795, 357, 173, 236, 330, 482,
	211, 268, 193, 747, 277, 669, 156, 290, 252, 253,
	251, 254, 214, 140, 146, 771, 292, 309, 332, 175,
	323, 138, 139, 141, 148, 300, 149, 150, 814, 246,
	204, 207, 219, 229, 746, 296, 324, 349, 740, 171,
	164, 326, 342, 180, 308, 310, 356, 769, 166, 803,
	786, 733, 699, 705, 629, 0, 165, 765, 661, 673,
	653, 741, 652, 213, 757, 340, 341, 192, 358, 570,
	818, 167, 636, 817, 265, 272, 264, 820, 336, 804,
	734, 723, 721, 630, 802, 732, 722, 237, 206, 221,
	285, 243, 286, 222, 260, 259, 261, 244, 725, 0,
	163, 0, 321, 812, 829, 325, 177, 647, 779, 331,
	218, 291, 178, 212, 205, 284, 263, 172, 224, 319,
	235, 242, 761, 826, 276, 299, 181, 346, 318, 201,
	581, 593, 587, 589, 588, 585, 586, 584, 583, 582,
	595, 568, 569, 572, 573, 574, 716, 806, 631, 577,
	782, 590, 591, 754, 824, 566, 188, 515, 607, 608,
	609, 516, 610, 611, 517, 518, 612, 613, 614, 615,
	519, 616, 617, 618, 596, 597, 598, 599, 600, 601,
	602, 603, 606, 604, 605, 712, 281, 575, 158, 168,
	239, 825, 293, 210, 619, 626, 645, 648, 649, 650,
	651, 655, 660, 0, 666, 672, 674, 675, 683, 688,
	689, 690, 691, 698, 700, 701, 702, 703, 704, 707,
	708, 710, 717, 718, 724, 729, 730, 736, 737, 0,
	760, 763, 580, 774, 776, 780, 781, 788, 793, 794,
	819, 823, 828, 347, 196, 715, 735, 766, 169, 176,
	183, 195, 203, 209, 220, 223, 227, 228, 230, 233,
	245, 247, 248, 249, 250, 266, 267, 270, 271, 274,
	275, 278, 279, 280, 282, 283, 289, 147, 295, 301,
	302, 303, 304, 305, 312, 313, 314, 315, 322, 338,
	339, 352, 353, 798, 695, 155, 0, 0, 161, 0,
	0, 0, 0, 0, 682, 160, 797, 821, 742, 756,
	809, 0, 328, 571, 813, 656, 679, 822, 685, 687,
	750, 632, 727, 273, 676, 633, 0, 0, 624, 869,
	625, 657, 199, 867, 783, 728, 811, 713, 743, 753,
	198, 190, 720, 719, 800, 668, 667, 748, 796, 810,
	0, 0, 579, 240, 0, 0, 350, 320, 257, 0,
	0, 711, 0, 564, 565, 696, 752, 644, 739, 815,
	677, 744, 816, 77, 0, 1117, 0, 478, 503, 502,
	505, 506, 507, 508, 0, 0, 137, 504, 509, 510,
	511, 0, 706, 749, 827, 623, 886, 494, 628, 578,
	0, 801, 664, 665, 202, 0, 0, 0, 0, 0,
	0, 0, 709, 726, 768, 693, 345, 755, 764, 778,
	686, 288, 215, 0, 0, 0, 0, 491, 492, 0,
	0, 0, 0, 594, 0, 493, 0, 638, 489, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 495, 0, 0, 0, 643, 621, 662, 770, 622,
	620, 258, 635, 567, 799, 694, 231, 153, 805, 692,
	592, 758, 639, 787, 680, 238, 637, 154, 634, 640,
	678, 269, 767, 773, 576, 157, 784, 658, 671, 191,
	0, 298, 745, 344, 483, 731, 297, 241, 337, 759,
	807, 343, 681, 327, 351, 355, 208, 714, 182, 317,
	200, 197, 663, 777, 627, 216, 287, 194, 234, 697,
	751, 659, 187, 762, 738, 789, 316, 334, 159, 255,
	335, 354, 174, 329, 256, 262, 184, 186, 185, 170,
	311, 333, 179, 189, 785, 772, 791, 654, 641, 646,
	642, 670, 808, 226, 217, 792, 790, 348, 143, 307,
	306, 684, 225, 775, 144, 136, 294, 145, 232, 162,
	795, 357, 173, 236, 330, 482, 211, 268, 193, 747,
	277, 669, 156, 290, 252, 253, 251, 254, 214, 140,
	146, 771, 292, 309, 332, 175, 323, 138, 139, 141,
	148, 300, 149, 150, 814, 246, 204, 207, 219, 229,
	746, 296, 324, 349, 740, 171, 164, 326, 342, 180,
	308, 310, 356, 769, 166, 803, 786, 733, 699, 705,
	629, 0, 165, 765, 661, 673, 653, 741, 652, 213,
	757, 340, 341, 192, 358, 570, 818, 167, 636, 817,
	265, 272, 264, 820, 336, 804, 734, 723, 721, 630,
	802, 732, 722, 237, 206, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 725, 0, 163, 0, 321, 812,
	829, 325, 177, 647, 779, 331, 218, 291, 178, 212,
	205, 284, 263, 172, 224, 319, 235, 242, 761, 826,
	276, 299, 181, 346, 318, 201, 581, 593, 587, 589,
	588, 585, 586, 584, 583, 582, 595, 568, 569, 572,
	573, 574, 716, 806, 631, 577, 782, 590, 591, 754,
	824, 566, 188, 515, 607, 608, 609, 516, 610, 611,
	517, 518, 612, 613, 614, 615, 519, 616, 617, 618,
	596, 597, 598, 599, 600, 601, 602, 603, 606, 604,
	605, 712, 281, 575, 158, 168, 239, 825, 293, 210,
	619, 626, 645, 648, 649, 650, 651, 655, 660, 0,
	666, 672, 674, 675, 683, 688, 689, 690, 691, 698,
	700, 701, 702, 703, 704, 707, 708, 710, 717, 718,
	724, 729, 730, 736, 737, 0, 760, 763, 580, 774,
	776, 780, 781, 788, 793, 794, 819, 823, 828, 347,
	196, 715, 735, 766, 169, 176, 183, 195, 203, 209,
	220, 223, 227, 228, 230, 233, 245, 247, 248, 249,
	250, 266, 267, 270, 271, 274, 275, 278, 279, 280,
	282, 283, 289, 147, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 798,
	695, 155, 0, 0, 161, 0, 0, 0, 0, 0,
	682, 160, 797, 821, 742, 756, 809, 0, 328, 571,
	813, 656, 679, 822, 685, 687, 750, 632, 727, 273,
	676, 633, 0, 0, 624, 480, 625, 657, 199, 477,
	783, 728, 811, 713, 743, 753, 198, 190, 720, 719,
	800, 668, 667, 748, 796, 810, 0, 0, 579, 240,
	0, 0, 350, 320, 257, 0, 0, 711, 0, 564,
	565, 696, 752, 644, 739, 815, 677, 744, 816, 77,
	0, 0, 0, 478, 503, 1888, 505, 506, 507, 508,
	0, 0, 137, 504, 509, 510, 511, 0, 706, 749,
	827, 623, 475, 494, 628, 578, 0, 801, 664, 665,
	202, 0, 0, 0, 0, 0, 0, 0, 709, 726,
	768, 693, 345, 755, 764, 778, 686, 288, 215, 0,
	0, 0, 0, 491, 492, 1855, 0, 0, 0, 594,
	0, 493, 0, 638, 489, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 495, 0, 0,
	0, 643, 621, 662, 770, 622, 620, 258, 635, 567,
	799, 694, 231, 153, 805, 692, 592, 758, 639, 787,
	680, 238, 637, 154, 634, 640, 678, 269, 767, 773,
	576, 157, 784, 658, 671, 191, 0, 298, 745, 344,
	483, 731, 297, 241, 337, 759, 807, 343, 681, 327,
	351, 355, 208, 714, 182, 317, 200, 197, 663, 777,
	627, 216, 287, 194, 234, 697, 751, 659, 187, 762,
	738, 789, 316, 334, 159, 255, 335, 354, 174, 329,
	256, 262, 184, 186, 185, 170, 311, 333, 179, 189,
	785, 772, 791, 654, 641, 646, 642, 670, 808, 226,
	217, 792, 790, 348, 143, 307, 306, 684, 225, 775,
	144, 136, 294, 145, 232, 162, 795, 357, 173, 236,
	330, 482, 211, 268, 193, 747, 277, 669, 156, 290,
	252, 253, 251, 254, 214, 140, 146, 771, 292, 309,
	332, 175, 323, 138, 139, 141, 148, 300, 149, 150,
	814, 246, 204, 207, 219, 229, 746, 296, 324, 349,
	740, 171, 164, 326, 342, 180, 308, 310, 356, 769,
	166, 803, 786, 733, 699, 705, 629, 0, 165, 765,
	661, 673, 653, 741, 652, 213, 757, 340, 341, 192,
	358, 570, 818, 167, 636, 817, 265, 272, 264, 820,
	336, 804, 734, 723, 721, 630, 802, 732, 722, 237,
	206, 221, 285, 243, 286, 222, 260, 259, 261, 244,
	725, 0, 163, 0, 321, 812, 829, 325, 177, 647,
	779, 331, 218, 291, 178, 212, 205, 284, 263, 172,
	224, 319, 235, 242, 761, 826, 276, 299, 181, 346,
	318, 201, 581, 593, 587, 589, 588, 585, 586, 584,
	583, 582, 595, 568, 569, 572, 573, 574, 716, 806,
	631, 577, 782, 590, 591, 754, 824, 566, 188, 515,
	607, 608, 609, 516, 610, 611, 517, 518, 612, 613,
	614, 615, 519, 616, 617, 618, 596, 597, 598, 599,
	600, 601, 602, 603, 606, 604, 605, 712, 281, 575,
	158, 168, 239, 825, 293, 210, 619, 626, 645, 648,
	649, 650, 651, 655, 660, 0, 666, 672, 674, 675,
	683, 688, 689, 690, 691, 698, 700, 701, 702, 703,
	704, 707, 708, 710, 717, 718, 724, 729, 730, 736,
	737, 0, 760, 763, 580, 774, 776, 780, 781, 788,
	793, 794, 819, 823, 828, 347, 196, 715, 735, 766,
	169, 176, 183, 195, 203, 209, 220, 223, 227, 228,
	230, 233, 245, 247, 248, 249, 250, 266, 267, 270,
	271, 274, 275, 278, 279, 280, 282, 283, 289, 147,
	295, 301, 302, 303, 304, 305, 312, 313, 314, 315,
	322, 338, 339, 352, 353, 798, 695, 155, 0, 0,
	161, 0, 0, 0, 0, 0, 682, 160, 797, 821,
	742, 756, 809, 0, 328, 571, 813, 656, 679, 822,
	685, 687, 750, 632, 727, 273, 676, 633, 0, 0,
	624, 480, 625, 657, 199, 477, 783, 728, 811, 713,
	743, 753, 198, 190, 720, 719, 800, 668, 667, 748,
	796, 810, 0, 0, 579, 240, 0, 0, 350, 320,
	257, 0, 0, 711, 0, 564, 565, 696, 752, 644,
	739, 815, 677, 744, 816, 77, 0, 0, 0, 478,
	503, 1885, 505, 506, 507, 508, 0, 0, 137, 504,
	509, 510, 511, 0, 706, 749, 827, 623, 475, 494,
	628, 578, 0, 801, 664, 665, 202, 0, 0, 0,
	0, 0, 0, 0, 709, 726, 768, 693, 345, 755,
	764, 778, 686, 288, 215, 0, 0, 0, 0, 491,
	492, 1855, 0, 0, 0, 594, 0, 493, 0, 638,
	489, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 495, 0, 0, 0, 643, 621, 662,
	770, 622, 620, 258, 635, 567, 799, 694, 231, 153,
	805, 692, 592, 758, 639, 787, 680, 238, 637, 154,
	634, 640, 678, 269, 767, 773, 576, 157, 784, 658,
	671, 191, 0, 298, 745, 344, 483, 731, 297, 241,
	337, 759, 807, 343, 681, 327, 351, 355, 208, 714,
	182, 317, 200, 197, 663, 777, 627, 216, 287, 194,
	234, 697, 751, 659, 187, 762, 738, 789, 316, 334,
	159, 255, 335, 354, 174, 329, 256, 262, 184, 186,
	185, 170, 311, 333, 179, 189, 785, 772, 791, 654,
	641, 646, 642, 670, 808, 226, 217, 792, 790, 348,
	143, 307, 306, 684, 225, 775, 144, 136, 294, 145,
	232, 162, 795, 357, 173, 236, 330, 482, 211, 268,
	193, 747, 277, 669, 156, 290, 252, 253, 251, 254,
	214, 140, 146, 771, 292, 309, 332, 175, 323, 138,
	139, 141, 148, 300, 149, 150, 814, 246, 204, 207,
	219, 229, 746, 296, 324, 349, 740, 171, 164, 326,
	342, 180, 308, 310, 356, 769, 166, 803, 786, 733,
	699, 705, 629, 0, 165, 765, 661, 673, 653, 741,
	652, 213, 757, 340, 341, 192, 358, 570, 818, 167,
	636, 817, 265, 272, 264, 820, 336, 804, 734, 723,
	721, 630, 802, 732, 722, 237, 206, 221, 285, 243,
	286, 222, 260, 259, 261, 244, 725, 0, 163, 0,
	321, 812, 829, 325, 177, 647, 779, 331, 218, 291,
	178, 212, 205, 284, 263, 172, 224, 319, 235, 242,
	761, 826, 276, 299, 181, 346, 318, 201, 581, 593,
	587, 589, 588, 585, 586, 584, 583, 582, 595, 568,
	569, 572, 573, 574, 716, 806, 631, 577, 782, 590,
	591, 754, 824, 566, 188, 515, 607, 608, 609, 516,
	610, 611, 517, 518, 612, 613, 614, 615, 519, 616,
	617, 618, 596, 597, 598, 599, 600, 601, 602, 603,
	606, 604, 605, 712, 281, 575, 158, 168, 239, 825,
	293, 210, 619, 626, 645, 648, 649, 650, 651, 655,
	660, 0, 666, 672, 674, 675, 683, 688, 689, 690,
	691, 698, 700, 701, 702, 703, 704, 707, 708, 710,
	717, 718, 724, 729, 730, 736, 737, 0, 760, 763,
	580, 774, 776, 780, 781, 788, 793, 794, 819, 823,
	828, 347, 196, 715, 735, 766, 169, 176, 183, 195,
	203, 209, 220, 223, 227, 228, 230, 233, 245, 247,
	248, 249, 250, 266, 267, 270, 271, 274, 275, 278,
	279, 280, 282, 283, 289, 147, 295, 301, 302, 303,
	304, 305, 312, 313, 314, 315, 322, 338, 339, 352,
	353, 798, 695, 155, 0, 0, 161, 0, 0, 0,
	0, 0, 682, 160, 797, 821, 742, 756, 809, 36,
	328, 571, 813, 656, 679, 822, 685, 687, 750, 632,
	727, 273, 676, 633, 0, 0, 624, 480, 625, 657,
	199, 477, 783, 728, 811, 713, 743, 753, 198, 190,
	720, 719, 800, 668, 667, 748, 796, 810, 0, 0,
	579, 240, 0, 0, 350, 320, 257, 0, 0, 711,
	0, 564, 565, 696, 752, 644, 739, 815, 677, 744,
	816, 77, 0, 0, 0, 478, 503, 502, 505, 506,
	507, 508, 0, 0, 137, 504, 509, 510, 511, 0,
	706, 749, 827, 623, 475, 494, 628, 578, 0, 801,
	664, 665, 202, 0, 0, 0, 0, 0, 0, 0,
	709, 726, 768, 693, 345, 755, 764, 778, 686, 288,
	215, 0, 0, 0, 0, 491, 492, 0, 0, 0,
	0, 594, 0, 493, 0, 638, 489, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 495,
	0, 0, 0, 643, 621, 662, 770, 622, 620, 258,
	635, 567, 799, 694, 231, 153, 805, 692, 592, 758,
	639, 787, 680, 238, 637, 154, 634, 640, 678, 269,
	767, 773, 576, 157, 784, 658, 671, 191, 0, 298,
	745, 344, 483, 731, 297, 241, 337, 759, 807, 343,
	681, 327, 351, 355, 208, 714, 182, 317, 200, 197,
	663, 777, 627, 216, 287, 194, 234, 697, 751, 659,
	187, 762, 738, 789, 316, 334, 159, 255, 335, 354,
	174, 329, 256, 262, 184, 186, 185, 170, 311, 333,
	179, 189, 785, 772, 791, 654, 641, 646, 642, 670,
	808, 226, 217, 792, 790, 348, 143, 307, 306, 684,
	225, 775, 144, 136, 294, 145, 232, 162, 795, 357,
	173, 236, 330, 482, 211, 268, 193, 747, 277, 669,
	156, 290, 252, 253, 251, 254, 214, 140, 146, 771,
	292, 309, 332, 175, 323, 138, 139, 141, 148, 300,
	149, 150, 814, 246, 204, 207, 219, 229, 746, 296,
	324, 349, 740, 171, 164, 326, 342, 180, 308, 310,
	356, 769, 166, 803, 786, 733, 699, 705, 629, 0,
	165, 765, 661, 673, 653, 741, 652, 213, 757, 340,
	341, 192, 358, 570, 818, 167, 636, 817, 265, 272,
	264, 820, 336, 804, 734, 723, 721, 630, 802, 732,
	722, 237, 206, 221, 285, 243, 286, 222, 260, 259,
	261, 244, 725, 0, 163, 0, 321, 812, 829, 325,
	177, 647, 779, 331, 218, 291, 178, 212, 205, 284,
	263, 172, 224, 319, 235, 242, 761, 826, 276, 299,
	181, 346, 318, 201, 581, 593, 587, 589, 588, 585,
	586, 584, 583, 582, 595, 568, 569, 572, 573, 574,
	716, 806, 631, 577, 782, 590, 591, 754, 824, 566,
	188, 515, 607, 608, 609, 516, 610, 611, 517, 518,
	612, 613, 614, 615, 519, 616, 617, 618, 596, 597,
	598, 599, 600, 601, 602, 603, 606, 604, 605, 712,
	281, 575, 158, 168, 239, 1204, 293, 210, 619, 626,
	645, 648, 649, 650, 651, 655, 660, 0, 666, 672,
	674, 675, 683, 688, 689, 690, 691, 698, 700, 701,
	702, 703, 704, 707, 708, 710, 717, 718, 724, 729,
	730, 736, 737, 0, 760, 763, 580, 774, 776, 780,
	781, 788, 793, 794, 819, 823, 828, 347, 196, 715,
	735, 766, 169, 176, 183, 195, 203, 209, 220, 223,
	227, 228, 230, 233, 245, 247, 248, 249, 250, 266,
	267, 270, 271, 274, 275, 278, 279, 280, 282, 283,
	289, 147, 295, 301, 302, 303, 304, 305, 312, 313,
	314, 315, 322, 338, 339, 352, 353, 798, 695, 155,
	0, 0, 161, 0, 0, 0, 0, 0, 682, 160,
	797, 821, 742, 756, 809, 0, 328, 571, 813, 656,
	679, 822, 685, 687, 750, 632, 727, 273, 676, 633,
	0, 0, 624, 480, 625, 657, 199, 477, 783, 728,
	811, 713, 743, 753, 198, 190, 720, 719, 800, 668,
	667, 748, 796, 810, 0, 0, 579, 240, 0, 0,
	350, 320, 257, 0, 0, 711, 0, 564, 565, 696,
	752, 644, 739, 815, 677, 744, 816, 77, 0, 1723,
	0, 478, 503, 502, 505, 506, 507, 508, 0, 0,
	137, 504, 509, 510, 511, 0, 706, 749, 827, 623,
	475, 494, 628, 578, 0, 801, 664, 665, 202, 0,
	0, 0, 0, 0, 0, 0, 709, 726, 768, 693,
	345, 755, 764, 778, 686, 288, 215, 0, 0, 0,
	0, 491, 492, 0, 0, 0, 0, 594, 0, 493,
	0, 638, 489, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 495, 0, 0, 0, 643,
	621, 662, 770, 622, 620, 258, 635, 567, 799, 694,
	231, 153, 805, 692, 592, 758, 639, 787, 680, 238,
	637, 154, 634, 640, 678, 269, 767, 773, 576, 157,
	784, 658, 671, 191, 0, 298, 745, 344, 483, 731,
	297, 241, 337, 759, 807, 343, 681, 327, 351, 355,
	208, 714, 182, 317, 200, 197, 663, 777, 627, 216,
	287, 194, 234, 697, 751, 659, 187, 762, 738, 789,
	316, 334, 159, 255, 335, 354, 174, 329, 256, 262,
	184, 186, 185, 170, 311, 333, 179, 189, 785, 772,
	791, 654, 641, 646, 642, 670, 808, 226, 217, 792,
	790, 348, 143, 307, 306, 684, 225, 775, 144, 136,
	294, 145, 232, 162, 795, 357, 173, 236, 330, 482,
	211, 268, 193, 747, 277, 669, 156, 290, 252, 253,
	251, 254, 214, 140, 146, 771, 292, 309, 332, 175,
	323, 138, 139, 141, 148, 300, 149, 150, 814, 246,
	204, 207, 219, 229, 746, 296, 324, 349, 740, 171,
	164, 326, 342, 180, 308, 310, 356, 769, 166, 803,
	786, 733, 699, 705, 629, 0, 165, 765, 661, 673,
	653, 741, 652, 213, 757, 340, 341, 192, 358, 570,
	818, 167, 636, 817, 265, 272, 264, 820, 336, 804,
	734, 723, 721, 630, 802, 732, 722, 237, 206, 221,
	285, 243, 286, 222, 260, 259, 261, 244, 725, 0,
	163, 0, 321, 812, 829, 325, 177, 647, 779, 331,
	218, 291, 178, 212, 205, 284, 263, 172, 224, 319,
	235, 242, 761, 826, 276, 299, 181, 346, 318, 201,
	581, 593, 587, 589, 588, 585, 586, 584, 583, 582,
	595, 568, 569, 572, 573, 574, 716, 806, 631, 577,
	782, 590, 591, 754, 824, 566, 188, 515, 607, 608,
	609, 516, 610, 611, 517, 518, 612, 613, 614, 615,
	519, 616, 617, 618, 596, 597, 598, 599, 600, 601,
	602, 603, 606, 604, 605, 712, 281, 575, 158, 168,
	239, 825, 293, 210, 619, 626, 645, 648, 649, 650,
	651, 655, 660, 0, 666, 672, 674, 675, 683, 688,
	689, 690, 691, 698, 700, 701, 702, 703, 704, 707,
	708, 710, 717, 718, 724, 729, 730, 736, 737, 0,
	760, 763, 580, 774, 776, 780, 781, 788, 793, 794,
	819, 823, 828, 347, 196, 715, 735, 766, 169, 176,
	183, 195, 203, 209, 220, 223, 227, 228, 230, 233,
	245, 247, 248, 249, 250, 266, 267, 270, 271, 274,
	275, 278, 279, 280, 282, 283, 289, 147, 295, 301,
	302, 303, 304, 305, 312, 313, 314, 315, 322, 338,
	339, 352, 353, 798, 695, 155, 0, 0, 161, 0,
	0, 0, 0, 0, 682, 160, 797, 821, 742, 756,
	809, 0, 328, 571, 813, 656, 679, 822, 685, 687,
	750, 632, 727, 273, 676, 633, 0, 0, 624, 869,
	625, 657, 199, 867, 783, 728, 811, 713, 743, 753,
	198, 190, 720, 719, 800, 668, 667, 748, 796, 810,
	0, 0, 579, 240, 0, 0, 350, 320, 257, 0,
	0, 711, 0, 564, 565, 696, 752, 644, 739, 815,
	677, 744, 816, 77, 0, 0, 0, 478, 503, 502,
	505, 506, 507, 508, 0, 0, 137, 504, 509, 510,
	511, 0, 706, 749, 827, 623, 886, 494, 628, 578,
	0, 801, 664, 665, 202, 0, 0, 0, 0, 0,
	0, 0, 709, 726, 768, 693, 345, 755, 764, 778,
	686, 288, 215, 0, 0, 0, 0, 491, 492, 0,
	0, 0, 0, 594, 0, 493, 0, 638, 489, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 495, 0, 0, 0, 643, 621, 662, 770, 622,
	620, 258, 635, 567, 799, 694, 231, 153, 805, 692,
	592, 758, 639, 787, 680, 238, 637, 154, 634, 640,
	678, 269, 767, 773, 576, 157, 784, 658, 671, 191,
	0, 298, 745, 344, 483, 731, 297, 241, 337, 759,
	807, 343, 681, 327, 351, 355, 208, 714, 182, 317,
	200, 197, 663, 777, 627, 216, 287, 194, 234, 697,
	751, 659, 187, 762, 738, 789, 316, 334, 159, 255,
	335, 354, 174, 329, 256, 262, 184, 186, 185, 170,
	311, 333, 179, 189, 785, 772, 791, 654, 641, 646,
	642, 670, 808, 226, 217, 792, 790, 348, 143, 307,
	306, 684, 225, 775, 144, 136, 294, 145, 232, 162,
	795, 357, 173, 236, 330, 482, 211, 268, 193, 747,
	277, 669, 156, 290, 252, 253, 251, 254, 214, 140,
	146, 771, 292, 309, 332, 175, 323, 138, 139, 141,
	148, 300, 149, 150, 814, 246, 204, 207, 219, 229,
	746, 296, 324, 349, 740, 171, 164, 326, 342, 180,
	308, 310, 356, 769, 166, 803, 786, 733, 699, 705,
	629, 0, 165, 765, 661, 673, 653, 741, 652, 213,
	757, 340, 341, 192, 358, 570, 818, 167, 636, 817,
	265, 272, 264, 820, 336, 804, 734, 723, 721, 630,
	802, 732, 722, 237, 206, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 725, 0, 163, 0, 321, 812,
	829, 325, 177, 647, 779, 331, 218, 291, 178, 212,
	205, 284, 263, 172, 224, 319, 235, 242, 761, 826,
	276, 299, 181, 346, 318, 201, 581, 593, 587, 589,
	588, 585, 586, 584, 583, 582, 595, 568, 569, 572,
	573, 574, 716, 806, 631, 577, 782, 590, 591, 754,
	824, 566, 188, 515, 607, 608, 609, 516, 610, 611,
	517, 518, 612, 613, 614, 615, 519, 616, 617, 618,
	596, 597, 598, 599, 600, 601, 602, 603, 606, 604,
	605, 712, 281, 575, 158, 168, 239, 825, 293, 210,
	619, 626, 645, 648, 649, 650, 651, 655, 660, 0,
	666, 672, 674, 675, 683, 688, 689, 690, 691, 698,
	700, 701, 702, 703, 704, 707, 708, 710, 717, 718,
	724, 729, 730, 736, 737, 0, 760, 763, 580, 774,
	776, 780, 781, 788, 793, 794, 819, 823, 828, 347,
	196, 715, 735, 766, 169, 176, 183, 195, 203, 209,
	220, 223, 227, 228, 230, 233, 245, 247, 248, 249,
	250, 266, 267, 270, 271, 274, 275, 278, 279, 280,
	282, 283, 289, 147, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 798,
	695, 155, 0, 0, 161, 0, 0, 0, 0, 0,
	682, 160, 797, 821, 742, 756, 809, 0, 328, 571,
	813, 656, 679, 822, 685, 687, 750, 632, 727, 273,
	676, 633, 0, 0, 624, 480, 625, 657, 199, 477,
	783, 728, 811, 713, 743, 753, 198, 190, 720, 719,
	800, 668, 667, 748, 796, 810, 0, 0, 579, 240,
	0, 0, 350, 320, 257, 0, 0, 711, 0, 564,
	565, 696, 752, 644, 739, 815, 677, 744, 816, 77,
	0, 0, 0, 478, 503, 502, 505, 506, 507, 508,
	0, 0, 137, 504, 509, 510, 511, 0, 706, 749,
	827, 623, 475, 494, 628, 578, 0, 801, 664, 665,
	202, 0, 0, 0, 0, 0, 0, 0, 709, 726,
	768, 693, 345, 755, 764, 778, 686, 288, 215, 0,
	0, 0, 0, 491, 492, 0, 0, 0, 0, 594,
	0, 493, 0, 638, 489, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 495, 0, 0,
	0, 643, 621, 662, 770, 622, 620, 258, 635, 567,
	799, 694, 231, 153, 805, 692, 592, 758, 639, 787,
	680, 238, 637, 154, 634, 640, 678, 269, 767, 773,
	576, 157, 784, 658, 671, 191, 0, 298, 745, 344,
	483, 731, 297, 241, 337, 759, 807, 343, 681, 327,
	351, 355, 208, 714, 182, 317, 200, 197, 663, 777,
	627, 216, 287, 194, 234, 697, 751, 659, 187, 762,
	738, 789, 316, 334, 159, 255, 335, 354, 174, 329,
	256, 262, 184, 186, 185, 170, 311, 333, 179, 189,
	785, 772, 791, 654, 641, 646, 642, 670, 808, 226,
	217, 792, 790, 348, 143, 307, 306, 684, 225, 775,
	144, 136, 294, 145, 232, 162, 795, 357, 173, 236,
	330, 482, 211, 268, 193, 747, 277, 669, 156, 290,
	252, 253, 251, 254, 214, 140, 146, 771, 292, 309,
	332, 175, 323, 138, 139, 141, 148, 300, 149, 150,
	814, 246, 204, 207, 219, 229, 746, 296, 324, 349,
	740, 171, 164, 326, 342, 180, 308, 310, 356, 769,
	166, 803, 786, 733, 699, 705, 629, 0, 165, 765,
	661, 673, 653, 741, 652, 213, 757, 340, 341, 192,
	358, 570, 818, 167, 636, 817, 265, 272, 264, 820,
	336, 804, 734, 723, 721, 630, 802, 732, 722, 237,
	206, 221, 285, 243, 286, 222, 260, 259, 261, 244,
	725, 0, 163, 0, 321, 812, 829, 325, 177, 647,
	779, 331, 218, 291, 178, 212, 205, 284, 263, 172,
	224, 319, 235, 242, 761, 826, 276, 299, 181, 346,
	318, 201, 581, 593, 587, 589, 588, 585, 586, 584,
	583, 582, 595, 568, 569, 572, 573, 574, 716, 806,
	631, 577, 782, 590, 591, 754, 824, 566, 188, 515,
	607, 608, 609, 516, 610, 611, 517, 518, 612, 613,
	614, 615, 519, 616, 617, 618, 596, 597, 598, 599,
	600, 601, 602, 603, 606, 604, 605, 712, 281, 575,
	158, 168, 239, 825, 293, 210, 619, 626, 645, 648,
	649, 650, 651, 655, 660, 0, 666, 672, 674, 675,
	683, 688, 689, 690, 691, 698, 700, 701, 702, 703,
	704, 707, 708, 710, 717, 718, 724, 729, 730, 736,
	737, 0, 760, 763, 580, 774, 776, 780, 781, 788,
	793, 794, 819, 823, 828, 347, 196, 715, 735, 766,
	169, 176, 183, 195, 203, 209, 220, 223, 227, 228,
	230, 233, 245, 247, 248, 249, 250, 266, 267, 270,
	271, 274, 275, 278, 279, 280, 282, 283, 289, 147,
	295, 301, 302, 303, 304, 305, 312, 313, 314, 315,
	322, 338, 339, 352, 353, 798, 695, 155, 0, 0,
	161, 0, 0, 0, 0, 0, 682, 160, 797, 821,
	742, 756, 809, 0, 328, 571, 813, 656, 679, 822,
	685, 687, 750, 632, 727, 273, 676, 633, 0, 0,
	624, 869, 625, 657, 199, 867, 783, 728, 811, 713,
	743, 753, 198, 190, 720, 719, 800, 668, 667, 748,
	796, 810, 0, 0, 579, 240, 0, 0, 350, 320,
	257, 0, 0, 711, 0, 564, 565, 696, 752, 644,
	739, 815, 677, 744, 816, 77, 0, 0, 0, 478,
	503, 502, 505, 506, 507, 508, 0, 0, 137, 504,
	509, 510, 511, 0, 706, 749, 827, 623, 886, 494,
	628, 578, 0, 801, 664, 665, 202, 0, 0, 0,
	0, 0, 0, 0, 709, 726, 768, 693, 345, 755,
	764, 778, 686, 288, 215, 0, 0, 0, 0, 491,
	492, 0, 0, 0, 0, 594, 0, 493, 0, 638,
	489, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 495, 0, 0, 0, 643, 621, 662,
	770, 622, 620, 258, 635, 567, 799, 694, 231, 153,
	805, 692, 592, 758, 639, 787, 680, 238, 637, 154,
	634, 640, 678, 269, 767, 773, 576, 157, 784, 658,
	671, 191, 0, 298, 745, 344, 483, 3372, 297, 241,
	337, 759, 807, 343, 681, 327, 351, 355, 208, 714,
	182, 317, 200, 197, 663, 777, 627, 216, 287, 194,
	234, 697, 751, 659, 187, 762, 738, 789, 316, 334,
	159, 255, 335, 354, 174, 329, 256, 262, 184, 186,
	185, 170, 311, 333, 179, 189, 785, 772, 791, 654,
	641, 646, 642, 670, 808, 226, 217, 792, 790, 348,
	143, 307, 306, 684, 225, 775, 144, 136, 294, 145,
	232, 162, 795, 357, 173, 236, 330, 482, 211, 268,
	193, 747, 277, 669, 156, 290, 252, 253, 251, 254,
	214, 140, 146, 771, 292, 309, 332, 175, 323, 138,
	139, 141, 148, 300, 149, 150, 814, 246, 204, 207,
	219, 229, 746, 296, 324, 349, 740, 171, 164, 326,
	342, 180, 308, 310, 356, 769, 166, 803, 786, 733,
	699, 705, 629, 0, 165, 765, 661, 673, 653, 741,
	652, 213, 757, 340, 341, 192, 358, 570, 818, 167,
	636, 817, 265, 272, 264, 820, 336, 804, 734, 723,
	721, 630, 802, 732, 722, 237, 206, 221, 285, 243,
	286, 222, 260, 259, 261, 244, 725, 0, 163, 0,
	321, 812, 829, 325, 177, 647, 779, 331, 218, 291,
	178, 212, 205, 284, 263, 172, 224, 319, 235, 242,
	761, 826, 276, 299, 181, 346, 318, 201, 581, 593,
	587, 589, 588, 585, 586, 584, 583, 582, 595, 568,
	569, 572, 573, 574, 716, 806, 631, 577, 782, 590,
	591, 754, 824, 566, 188, 515, 607, 608, 609, 516,
	610, 611, 517, 518, 612, 613, 614, 615, 519, 616,
	617, 618, 596, 597, 598, 599, 600, 601, 602, 603,
	606, 604, 605, 712, 281, 575, 158, 168, 239, 825,
	293, 210, 619, 626, 645, 648, 649, 650, 651, 655,
	660, 0, 666, 672, 674, 675, 683, 688, 689, 690,
	691, 698, 700, 701, 702, 703, 704, 707, 708, 710,
	717, 718, 724, 729, 730, 736, 737, 0, 760, 763,
	580, 774, 776, 780, 781, 788, 793, 794, 819, 823,
	828, 347, 196, 715, 735, 766, 169, 176, 183, 195,
	203, 209, 220, 223, 227, 228, 230, 233, 245, 247,
	248, 249, 250, 266, 267, 270, 271, 274, 275, 278,
	279, 280, 282, 283, 289, 147, 295, 301, 302, 303,
	304, 305, 312, 313, 314, 315, 322, 338, 339, 352,
	353, 798, 695, 155, 0, 0, 161, 0, 0, 0,
	0, 0, 682, 160, 797, 821, 742, 756, 809, 0,
	328, 571, 813, 656, 679, 822, 685, 687, 750, 632,
	727, 273, 676, 633, 0, 0, 624, 869, 625, 657,
	199, 867, 783, 728, 811, 713, 743, 753, 198, 190,
	720, 719, 800, 668, 667, 748, 796, 810, 0, 0,
	579, 240, 0, 0, 350, 320, 257, 0, 0, 711,
	0, 564, 565, 696, 752, 644, 739, 815, 677, 744,
	816, 77, 0, 0, 0, 478, 503, 502, 505, 506,
	507, 508, 0, 0, 137, 504, 509, 510, 511, 0,
	706, 749, 827, 623, 886, 494, 628, 578, 0, 801,
	664, 665, 202, 0, 0, 0, 0, 0, 0, 0,
	709, 726, 768, 693, 345, 755, 764, 778, 686, 288,
	215, 0, 0, 0, 0, 491, 492, 0, 0, 0,
	0, 594, 0, 493, 0, 638, 489, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 495,
	0, 0, 0, 643, 621, 662, 770, 622, 620, 258,
	635, 567, 799, 694, 231, 153, 805, 692, 592, 758,
	639, 787, 680, 238, 637, 154, 634, 640, 678, 269,
	767, 773, 576, 157, 784, 658, 671, 191, 0, 298,
	745, 344, 483, 731, 297, 241, 337, 759, 807, 343,
	681, 327, 351, 355, 208, 714, 182, 317, 200, 197,
	663, 777, 627, 216, 287, 194, 234, 697, 751, 659,
	187, 762, 738, 789, 316, 334, 159, 255, 335, 354,
	174, 329, 256, 262, 184, 186, 185, 170, 311, 333,
	179, 189, 785, 772, 791, 654, 641, 646, 642, 670,
	808, 226, 217, 792, 790, 348, 143, 307, 306, 684,
	225, 775, 144, 136, 294, 145, 232, 162, 795, 357,
	173, 236, 330, 482, 211, 268, 193, 747, 277, 669,
	156, 290, 252, 253, 251, 254, 214, 140, 146, 771,
	292, 309, 332, 175, 323, 138, 139, 141, 148, 300,
	149, 150, 814, 246, 204, 207, 219, 229, 746, 296,
	324, 349, 740, 171, 164, 326, 342, 180, 308, 310,
	356, 769, 166, 803, 786, 733, 699, 705, 629, 0,
	165, 765, 661, 673, 653, 741, 652, 213, 757, 340,
	341, 192, 358, 570, 818, 167, 636, 817, 265, 272,
	264, 820, 336, 804, 734, 723, 721, 630, 802, 732,
	722, 237, 206, 221, 285, 243, 286, 222, 260, 259,
	261, 244, 725, 0, 163, 0, 321, 812, 829, 325,
	177, 647, 779, 331, 218, 291, 178, 212, 205, 284,
	263, 172, 224, 319, 235, 242, 761, 826, 276, 299,
	181, 346, 318, 201, 581, 593, 587, 589, 588, 585,
	586, 584, 583, 582, 595, 568, 569, 572, 573, 574,
	1891, 1892, 1893, 577, 782, 590, 591, 754, 824, 566,
	188, 515, 607, 608, 609, 516, 610, 611, 517, 518,
	612, 613, 614, 615, 519, 616, 617, 618, 596, 597,
	598, 599, 600, 601, 602, 603, 606, 604, 605, 712,
	281, 575, 158, 168, 239, 825, 293, 210, 619, 626,
	645, 648, 649, 650, 651, 655, 660, 0, 666, 672,
	674, 675, 683, 688, 689, 690, 691, 698, 700, 701,
	702, 703, 704, 707, 708, 710, 717, 718, 724, 729,
	730, 736, 737, 0, 760, 763, 580, 774, 776, 780,
	781, 788, 793, 794, 819, 823, 828, 347, 196, 715,
	735, 766, 169, 176, 183, 195, 203, 209, 220, 223,
	227, 228, 230, 233, 245, 247, 248, 249, 250, 266,
	267, 270, 271, 274, 275, 278, 279, 280, 282, 283,
	289, 147, 295, 301, 302, 303, 304, 305, 312, 313,
	314, 315, 322, 338, 339, 352, 353, 798, 695, 155,
	0, 0, 161, 0, 0, 0, 0, 0, 682, 160,
	797, 821, 742, 756, 1654, 2754, 328, 1509, 1658, 1459,
	1488, 1675, 1494, 1497, 1578, 1425, 1547, 273, 1485, 1426,
	1409, 1464, 1413, 1476, 1414, 1461, 199, 1457, 1619, 1550,
	1656, 1529, 1571, 1581, 198, 190, 1539, 1538, 1644, 1474,
	1473, 1576, 1633, 1655, 1528, 0, 1665, 240, 1630, 929,
	350, 320, 257, 932, 931, 1524, 1639, 1545, 1608, 1507,
	1580, 1441, 1563, 1660, 1486, 1572, 1661, 77, 0, 1117,
	0, 925, 0, 0, 0, 0, 0, 0, 0, 0,
	137, 0, 1568, 1652, 1479, 930, 1519, 1577, 1680, 1412,
	1564, 0, 1417, 1428, 1674, 1645, 1470, 1471, 202, 0,
	0, 0, 0, 0, 0, 0, 1522, 1546, 1598, 1504,
	345, 1583, 1593, 1611, 1496, 288, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 1466, 0, 1561, 0, 0,
	0, 1433, 1419, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1518, 0, 0, 0, 1440,
	1410, 1468, 1600, 1411, 1408, 258, 1429, 1613, 1643, 1505,
	231, 153, 1649, 1503, 1502, 1587, 1434, 1623, 1489, 238,
	1432, 154, 1427, 1435, 1487, 269, 1597, 1605, 142, 157,
	1620, 1462, 1478, 191, 1781, 298, 1573, 344, 928, 1554,
	297, 241, 337, 1588, 1651, 343, 1490, 327, 351, 355,
	208, 1530, 182, 317, 200, 197, 1469, 1610, 1416, 216,
	287, 194, 234, 1508, 1579, 1463, 187, 1591, 1562, 1625,
	316, 334, 159, 255, 335, 354, 174, 329, 256, 262,
	184, 186, 185, 170, 311, 333, 179, 189, 1621, 1604,
	1627, 1456, 1436, 1447, 1437, 1477, 1653, 226, 217, 1628,
	1626, 348, 143, 307, 306, 1493, 225, 1607, 144, 136,
	294, 145, 232, 162, 1632, 357, 173, 236, 330, 927,
	211, 268, 193, 1575, 277, 1475, 156, 290, 252, 253,
	251, 254, 214, 140, 146, 1603, 292, 309, 332, 175,
	323, 138, 139, 141, 148, 300, 149, 150, 1659, 246,
	204, 207, 219, 229, 1574, 296, 324, 349, 1565, 171,
	164, 326, 342, 180, 308, 310, 356, 1599, 166, 1647,
	1622, 1556, 1511, 1517, 1418, 0, 165, 1595, 1467, 1482,
	1455, 1569, 1454, 213, 1586, 340, 341, 192, 358, 1430,
	1667, 167, 1431, 1666, 265, 272, 264, 1670, 336, 1648,
	1557, 1542, 1540, 1423, 1646, 1555, 1541, 237, 206, 221,
	285, 243, 286, 222, 260, 259, 261, 244, 1544, 0,
	163, 0, 321, 1657, 1682, 325, 177, 1449, 1614, 331,
	218, 291, 178, 212, 205, 284, 263, 172, 224, 319,
	235, 242, 1590, 1679, 276, 299, 181, 346, 318, 201,
	1445, 1448, 1443, 1446, 1444, 1548, 1549, 1662, 1663, 1664,
	1602, 1438, 0, 1640, 1641, 0, 1535, 1650, 1424, 0,
	1618, 151, 152, 1582, 1677, 1495, 188, 131, 1420, 1421,
	1422, 132, 1525, 1526, 133, 134, 1636, 1635, 1634, 1637,
	135, 1671, 1669, 1672, 1439, 1460, 1481, 1531, 1532, 1534,
	1566, 1567, 1612, 1585, 1594, 1527, 281, 1553, 158, 168,
	239, 2755, 293, 210, 1407, 1415, 1442, 1450, 1451, 1452,
	1453, 1458, 1465, 0, 1472, 1480, 1483, 1484, 1492, 1498,
	1499, 1500, 1501, 1510, 1512, 1513, 1514, 1515, 1516, 1520,
	1521, 1523, 1536, 1537, 1543, 1551, 1552, 1559, 1560, 0,
	1589, 1592, 1601, 1606, 1609, 1615, 1617, 1624, 1629, 1631,
	1668, 1676, 1681, 347, 196, 1533, 1558, 1596, 169, 176,
	183, 195, 203, 209, 220, 223, 227, 228, 230, 233,
	245, 247, 248, 249, 250, 266, 267, 270, 271, 274,
	275, 278, 279, 280, 282, 283, 289, 147, 295, 301,
	302, 303, 304, 305, 312, 313, 314, 315, 322, 338,
	339, 352, 353, 1642, 1506, 155, 0, 0, 161, 0,
	0, 0, 0, 0, 1491, 160, 1638, 1673, 1570, 1584,
	1654, 1616, 328, 1509, 1658, 1459, 1488, 1675, 1494, 1497,
	1578, 1425, 1547, 273, 1485, 1426, 1409, 1464, 1413, 1476,
	1414, 1461, 199, 1457, 1619, 1550, 1656, 1529, 1571, 1581,
	198, 190, 1539, 1538, 1644, 1474, 1473, 1576, 1633, 1655,
	1528, 0, 1665, 240, 1630, 929, 350, 320, 257, 932,
	931, 1524, 1639, 1545, 1608, 1507, 1580, 1441, 1563, 1660,
	1486, 1572, 1661, 0, 0, 0, 0, 925, 0, 0,
	0, 0, 0, 0, 0, 0, 137, 0, 1568, 1652,
	1479, 930, 1519, 1577, 1680, 1412, 1564, 0, 1417, 1428,
	1674, 1645, 1470, 1471, 202, 0, 0, 0, 0, 0,
	0, 0, 1522, 1546, 1598, 1504, 345, 1583, 1593, 1611,
	1496, 288, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 1466, 0, 1561, 0, 0, 0, 1433, 1419, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1518, 0, 0, 0, 1440, 1410, 1468, 1600, 1411,
	1408, 258, 1429, 1613, 1643, 1505, 231, 153, 1649, 1503,
	1502, 1587, 1434, 1623, 1489, 238, 1432, 154, 1427, 1435,
	1487, 269, 1597, 1605, 142, 157, 1620, 1462, 1478, 191,
	1781, 298, 1573, 344, 928, 1554, 297, 241, 337, 1588,
	1651, 343, 1490, 327, 351, 355, 208, 1530, 182, 317,
	200, 197, 1469, 1610, 1416, 216, 287, 194, 234, 1508,
	1579, 1463, 187, 1591, 1562, 1625, 316, 334, 159, 255,
	335, 354, 174, 329, 256, 262, 184, 186, 185, 170,
	311, 333, 179, 189, 1621, 1604, 1627, 1456, 1436, 1447,
	1437, 1477, 1653, 226, 217, 1628, 1626, 348, 143, 307,
	306, 1493, 225, 1607, 144, 136, 294, 145, 232, 162,
	1632, 357, 173, 236, 330, 927, 211, 268, 193, 1575,
	277, 1475, 156, 290, 252, 253, 251, 254, 214, 140,
	146, 1603, 292, 309, 332, 175, 323, 138, 139, 141,
	148, 300, 149, 150, 1659, 246, 204, 207, 219, 229,
	1574, 296, 324, 349, 1565, 171, 164, 326, 342, 180,
	308, 310, 356, 1599, 166, 1647, 1622, 1556, 1511, 1517,
	1418, 0, 165, 1595, 1467, 1482, 1455, 1569, 1454, 213,
	1586, 340, 341, 192, 358, 1430, 1667, 167, 1431, 1666,
	265, 272, 264, 1670, 336, 1648, 1557, 1542, 1540, 1423,
	1646, 1555, 1541, 237, 206, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 1544, 0, 163, 0, 321, 1657,
	1682, 325, 177, 1449, 1614, 331, 218, 291, 178, 212,
	205, 284, 263, 172, 224, 319, 235, 242, 1590, 1679,
	276, 299, 181, 346, 318, 201, 1445, 1448, 1443, 1446,
	1444, 1548, 1549, 1662, 1663, 1664, 1602, 1438, 0, 1640,
	1641, 0, 1535, 1650, 1424, 0, 1618, 151, 152, 1582,
	1677, 1495, 188, 131, 1420, 1421, 1422, 132, 1525, 1526,
	133, 134, 1636, 1635, 1634, 1637, 135, 1671, 1669, 1672,
	1439, 1460, 1481, 1531, 1532, 1534, 1566, 1567, 1612, 1585,
	1594, 1527, 281, 1553, 158, 168, 239, 1678, 293, 210,
	1407, 1415, 1442, 1450, 1451, 1452, 1453, 1458, 1465, 0,
	1472, 1480, 1483, 1484, 1492, 1498, 1499, 1500, 1501, 1510,
	1512, 1513, 1514, 1515, 1516, 1520, 1521, 1523, 1536, 1537,
	1543, 1551, 1552, 1559, 1560, 0, 1589, 1592, 1601, 1606,
	1609, 1615, 1617, 1624, 1629, 1631, 1668, 1676, 1681, 347,
	196, 1533, 1558, 1596, 169, 176, 183, 195, 203, 209,
	220, 223, 227, 228, 230, 233, 245, 247, 248, 249,
	250, 266, 267, 270, 271, 274, 275, 278, 279, 280,
	282, 283, 289, 147, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 1642,
	1506, 155, 0, 0, 161, 0, 0, 0, 0, 0,
	1491, 160, 1638, 1673, 1570, 1584, 1654, 1616, 328, 1509,
	1658, 1459, 1488, 1675, 1494, 1497, 1578, 1425, 1547, 273,
	1485, 1426, 1409, 1464, 1413, 1476, 1414, 1461, 199, 1457,
	1619, 1550, 1656, 1529, 1571, 1581, 198, 190, 1539, 1538,
	1644, 1474, 1473, 1576, 1633, 1655, 1528, 0, 1665, 240,
	1630, 0, 350, 320, 257, 0, 0, 1524, 1639, 1545,
	1608, 1507, 1580, 1441, 1563, 1660, 1486, 1572, 1661, 0,
	0, 0, 0, 478, 0, 0, 0, 0, 0, 0,
	0, 0, 137, 0, 1568, 1652, 1479, 0, 1519, 1577,
	1680, 1412, 1564, 0, 1417, 1428, 1674, 1645, 1470, 1471,
	202, 0, 0, 0, 0, 0, 0, 0, 1522, 1546,
	1598, 1504, 345, 1583, 1593, 1611, 1496, 288, 215, 0,
	0, 0, 0, 0, 0, 2469, 0, 1466, 0, 1561,
	0, 0, 0, 1433, 1419, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1518, 0, 0,
	0, 1440, 1410, 1468, 1600, 1411, 1408, 258, 1429, 1613,
	1643, 1505, 231, 153, 1649, 1503, 1502, 1587, 1434, 1623,
	1489, 238, 1432, 154, 1427, 1435, 1487, 269, 1597, 1605,
	142, 157, 1620, 1462, 1478, 191, 0, 298, 1573, 344,
	1821, 1554, 297, 241, 337, 1588, 1651, 343, 1490, 327,
	351, 355, 208, 1530, 182, 317, 200, 197, 1469, 1610,
	1416, 216, 287, 194, 234, 1508, 1579, 1463, 187, 1591,
	1562, 1625, 316, 334, 159, 255, 335, 354, 174, 329,
	256, 262, 184, 186, 185, 170, 311, 333, 179, 189,
	1621, 1604, 1627, 1456, 1436, 1447, 1437, 1477, 1653, 226,
	217, 1628, 1626, 348, 143, 307, 306, 1493, 225, 1607,
	144, 136, 294, 145, 232, 162, 1632, 357, 173, 236,
	330, 1820, 211, 268, 193, 1575, 277, 1475, 156, 290,
	252, 253, 251, 254, 214, 140, 146, 1603, 292, 309,
	332, 175, 323, 138, 139, 141, 148, 300, 149, 150,
	1659, 246, 204, 207, 219, 229, 1574, 296, 324, 349,
	1565, 171, 164, 326, 342, 180, 308, 310, 356, 1599,
	166, 1647, 1622, 1556, 1511, 1517, 1418, 0, 165, 1595,
	1467, 1482, 1455, 1569, 1454, 213, 1586, 340, 341, 192,
	358, 1430, 1667, 167, 1431, 1666, 265, 272, 264, 1670,
	336, 1648, 1557, 1542, 1540, 1423, 1646, 1555, 1541, 237,
	206, 221, 285, 243, 286, 222, 260, 259, 261, 244,
	1544, 0, 163, 0, 321, 1657, 1682, 325, 177, 1449,
	1614, 331, 218, 291, 178, 212, 205, 284, 263, 172,
	224, 319, 235, 242, 1590, 1679, 276, 299, 181, 346,
	318, 201, 1445, 1448, 1443, 1446, 1444, 1548, 1549, 1662,
	1663, 1664, 1602, 1438, 0, 1640, 1641, 0, 1535, 1650,
	1424, 0, 1618, 151, 152, 1582, 1677, 1495, 188, 131,
	1420, 1421, 1422, 132, 1525, 1526, 133, 134, 1636, 1635,
	1634, 1637, 135, 1671, 1669, 1672, 1439, 1460, 1481, 1531,
	1532, 1534, 1566, 1567, 1612, 1585, 1594, 1527, 281, 1553,
	158, 168, 239, 1678, 293, 210, 1407, 1415, 1442, 1450,
	1451, 1452, 1453, 1458, 1465, 0, 1472, 1480, 1483, 1484,
	1492, 1498, 1499, 1500, 1501, 1510, 1512, 1513, 1514, 1515,
	1516, 1520, 1521, 1523, 1536, 1537, 1543, 1551, 1552, 1559,
	1560, 0, 1589, 1592, 1601, 1606, 1609, 1615, 1617, 1624,
	1629, 1631, 1668, 1676, 1681, 347, 196, 1533, 1558, 1596,
	169, 176, 183, 195, 203, 209, 220, 223, 227, 228,
	230, 233, 245, 247, 248, 249, 250, 266, 267, 270,
	271, 274, 275, 278, 279, 280, 282, 283, 289, 147,
	295, 301, 302, 303, 304, 305, 312, 313, 314, 315,
	322, 338, 339, 352, 353, 1642, 1506, 155, 0, 0,
	161, 0, 0, 0, 0, 0, 1491, 160, 1638, 1673,
	1570, 1584, 1654, 1616, 328, 1509, 1658, 1459, 1488, 1675,
	1494, 1497, 1578, 1425, 1547, 273, 1485, 1426, 1409, 1464,
	1413, 1476, 1414, 1461, 199, 1457, 1619, 1550, 1656, 1529,
	1571, 1581, 198, 190, 1539, 1538, 1644, 1474, 1473, 1576,
	1633, 1655, 1528, 0, 1665, 240, 1630, 0, 350, 320,
	257, 0, 0, 1524, 1639, 1545, 1608, 1507, 1580, 1441,
	1563, 1660, 1486, 1572, 1661, 0, 0, 0, 0, 478,
	0, 0, 0, 0, 0, 0, 0, 0, 137, 0,
	1568, 1652, 1479, 0, 1519, 1577, 1680, 1412, 1564, 0,
	1417, 1428, 1674, 1645, 1470, 1471, 202, 0, 0, 0,
	0, 0, 0, 0, 1522, 1546, 1598, 1504, 345, 1583,
	1593, 1611, 1496, 288, 215, 0, 0, 0, 0, 0,
	0, 1815, 0, 1466, 0, 1561, 0, 0, 0, 1433,
	1419, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1518, 0, 0, 0, 1440, 1410, 1468,
	1600, 1411, 1408, 258, 1429, 1613, 1643, 1505, 231, 153,
	1649, 1503, 1502, 1587, 1434, 1623, 1489, 238, 1432, 154,
	1427, 1435, 1487, 269, 1597, 1605, 142, 157, 1620, 1462,
	1478, 191, 0, 298, 1573, 344, 1821, 1554, 297, 241,
	337, 1588, 1651, 343, 1490, 327, 351, 355, 208, 1530,
	182, 317, 200, 197, 1469, 1610, 1416, 216, 287, 194,
	234, 1508, 1579, 1463, 187, 1591, 1562, 1625, 316, 334,
	159, 255, 335, 354, 174, 329, 256, 262, 184, 186,
	185, 170, 311, 333, 179, 189, 1621, 1604, 1627, 1456,
	1436, 1447, 1437, 1477, 1653, 226, 217, 1628, 1626, 348,
	143, 307, 306, 1493, 225, 1607, 144, 136, 294, 145,
	232, 162, 1632, 357, 173, 236, 330, 1820, 211, 268,
	193, 1575, 277, 1475, 156, 290, 252, 253, 251, 254,
	214, 140, 146, 1603, 292, 309, 332, 175, 323, 138,
	139, 141, 148, 300, 149, 150, 1659, 246, 204, 207,
	219, 229, 1574, 296, 324, 349, 1565, 171, 164, 326,
	342, 180, 308, 310, 356, 1599, 166, 1647, 1622, 1556,
	1511, 1517, 1418, 0, 165, 1595, 1467, 1482, 1455, 1569,
	1454, 213, 1586, 340, 341, 192, 358, 1430, 1667, 167,
	1431, 1666, 265, 272, 264, 1670, 336, 1648, 1557, 1542,
	1540, 1423, 1646, 1555, 1541, 237, 206, 221, 285, 243,
	286, 222, 260, 259, 261, 244, 1544, 0, 163, 0,
	321, 1657, 1682, 325, 177, 1449, 1614, 331, 218, 291,
	178, 212, 205, 284, 263, 172, 224, 319, 235, 242,
	1590, 1679, 276, 299, 181, 346, 318, 201, 1445, 1448,
	1443, 1446, 1444, 1548, 1549, 1662, 1663, 1664, 1602, 1438,
	0, 1640, 1641, 0, 1535, 1650, 1424, 0, 1618, 151,
	152, 1582, 1677, 1495, 188, 131, 1420, 1421, 1422, 132,
	1525, 1526, 133, 134, 1636, 1635, 1634, 1637, 135, 1671,
	1669, 1672, 1439, 1460, 1481, 1531, 1532, 1534, 1566, 1567,
	1612, 1585, 1594, 1527, 281, 1553, 158, 168, 239, 1678,
	293, 210, 1407, 1415, 1442, 1450, 1451, 1452, 1453, 1458,
	1465, 0, 1472, 1480, 1483, 1484, 1492, 1498, 1499, 1500,
	1501, 1510, 1512, 1513, 1514, 1515, 1516, 1520, 1521, 1523,
	1536, 1537, 1543, 1551, 1552, 1559, 1560, 0, 1589, 1592,
	1601, 1606, 1609, 1615, 1617, 1624, 1629, 1631, 1668, 1676,
	1681, 347, 196, 1533, 1558, 1596, 169, 176, 183, 195,
	203, 209, 220, 223, 227, 228, 230, 233, 245, 247,
	248, 249, 250, 266, 267, 270, 271, 274, 275, 278,
	279, 280, 282, 283, 289, 147, 295, 301, 302, 303,
	304, 305, 312, 313, 314, 315, 322, 338, 339, 352,
	353, 1642, 1506, 155, 0, 0, 161, 0, 0, 0,
	0, 0, 1491, 160, 1638, 1673, 1570, 1584, 1654, 1616,
	328, 1509, 1658, 1459, 1488, 1675, 1494, 1497, 1578, 1425,
	1547, 273, 1485, 1426, 1409, 1464, 1413, 1476, 1414, 1461,
	199, 1457, 1619, 1550, 1656, 1529, 1571, 1581, 198, 190,
	1539, 1538, 1644, 1474, 1473, 1576, 1633, 1655, 1528, 0,
	1665, 240, 1630, 0, 350, 320, 257, 0, 0, 1524,
	1639, 1545, 1608, 1507, 1580, 1441, 1563, 1660, 1486, 1572,
	1661, 0, 0, 0, 0, 478, 0, 0, 0, 0,
	0, 0, 0, 0, 137, 0, 1568, 1652, 1479, 0,
	1519, 1577, 1680, 1412, 1564, 0, 1417, 1428, 1674, 1645,
	1470, 1471, 202, 0, 0, 0, 0, 0, 0, 0,
	1522, 1546, 1598, 1504, 345, 1583, 1593, 1611, 1496, 288,
	215, 0, 0, 0, 0, 0, 0, 0, 0, 1466,
	0, 1561, 0, 0, 0, 1433, 1419, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1518,
	0, 0, 0, 1440, 1410, 1468, 1600, 1411, 1408, 258,
	1429, 1613, 1643, 1505, 231, 153, 1649, 1503, 1502, 1587,
	1434, 1623, 1489, 238, 1432, 154, 1427, 1435, 1487, 269,
	1597, 1605, 142, 157, 1620, 1462, 1478, 191, 0, 298,
	1573, 344, 1821, 1554, 297, 241, 337, 1588, 1651, 343,
	1490, 327, 351, 355, 208, 1530, 182, 317, 200, 197,
	1469, 1610, 1416, 216, 287, 194, 234, 1508, 1579, 1463,
	187, 1591, 1562, 1625, 316, 334, 159, 255, 335, 354,
	174, 329, 256, 262, 184, 186, 185, 170, 311, 333,
	179, 189, 1621, 1604, 1627, 1456, 1436, 1447, 1437, 1477,
	1653, 226, 217, 1628, 1626, 348, 143, 307, 306, 1493,
	225, 1607, 144, 136, 294, 145, 232, 162, 1632, 357,
	173, 236, 330, 1820, 211, 268, 193, 1575, 277, 1475,
	156, 290, 252, 253, 251, 254, 214, 140, 146, 1603,
	292, 309, 332, 175, 323, 138, 139, 141, 148, 300,
	149, 150, 1659, 246, 204, 207, 219, 229, 1574, 296,
	324, 349, 1565, 171, 164, 326, 342, 180, 308, 310,
	356, 1599, 166, 1647, 1622, 1556, 1511, 1517, 1418, 0,
	165, 1595, 1467, 1482, 1455, 1569, 1454, 213, 1586, 340,
	341, 192, 358, 1430, 1667, 167, 1431, 1666, 265, 272,
	264, 1670, 336, 1648, 1557, 1542, 1540, 1423, 1646, 1555,
	1541, 237, 206, 221, 285, 243, 286, 222, 260, 259,
	261, 244, 1544, 0, 163, 0, 321, 1657, 1682, 325,
	177, 1449, 1614, 331, 218, 291, 178, 212, 205, 284,
	263, 172, 224, 319, 235, 242, 1590, 1679, 276, 299,
	181, 346, 318, 201, 1445, 1448, 1443, 1446, 1444, 1548,
	1549, 1662, 1663, 1664, 1602, 1438, 0, 1640, 1641, 0,
	1535, 1650, 1424, 0, 1618, 151, 152, 1582, 1677, 1495,
	188, 131, 1420, 1421, 1422, 132, 1525, 1526, 133, 134,
	1636, 1635, 1634, 1637, 135, 1671, 1669, 1672, 1439, 1460,
	1481, 1531, 1532, 1534, 1566, 1567, 1612, 1585, 1594, 1527,
	281, 1553, 158, 168, 239, 1678, 293, 210, 1407, 1415,
	1442, 1450, 1451, 1452, 1453, 1458, 1465, 0, 1472, 1480,
	1483, 1484, 1492, 1498, 1499, 1500, 1501, 1510, 1512, 1513,
	1514, 1515, 1516, 1520, 1521, 1523, 1536, 1537, 1543, 1551,
	1552, 1559, 1560, 0, 1589, 1592, 1601, 1606, 1609, 1615,
	1617, 1624, 1629, 1631, 1668, 1676, 1681, 347, 196, 1533,
	1558, 1596, 169, 176, 183, 195, 203, 209, 220, 223,
	227, 228, 230, 233, 245, 247, 248, 249, 250, 266,
	267, 270, 271, 274, 275, 278, 279, 280, 282, 283,
	289, 147, 295, 301, 302, 303, 304, 305, 312, 313,
	314, 315, 322, 338, 339, 352, 353, 1642, 1506, 155,
	0, 0, 161, 0, 0, 0, 0, 0, 1491, 160,
	1638, 1673, 1570, 1584, 809, 0, 328, 874, 813, 656,
	679, 822, 685, 687, 750, 632, 727, 273, 676, 633,
	0, 0, 624, 869, 625, 657, 199, 867, 783, 728,
	811, 713, 743, 753, 198, 190, 720, 719, 800, 668,
	667, 748, 796, 810, 0, 0, 907, 240, 0, 929,
	350, 320, 257, 932, 931, 711, 0, 881, 894, 696,
	752, 644, 739, 815, 677, 744, 816, 0, 0, 0,
	0, 478, 0, 0, 0, 0, 0, 0, 0, 0,
	137, 0, 889, 903, 870, 930, 706, 749, 827, 623,
	886, 0, 628, 858, 0, 801, 664, 665, 202, 0,
	0, 0, 0, 0, 0, 0, 709, 726, 768, 693,
	345, 755, 764, 778, 686, 288, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 885, 0, 0,
	0, 638, 854, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 875, 0, 0, 0, 643,
	621, 662, 770, 622, 620, 258, 635, 896, 799, 694,
	231, 153, 805, 692, 873, 758, 639, 787, 680, 238,
	637, 154, 634, 640, 678, 269, 767, 773, 142, 157,
	784, 658, 671, 191, 2538, 298, 745, 344, 2540, 731,
	297, 241, 337, 759, 807, 343, 681, 327, 351, 355,
	208, 714, 182, 317, 200, 197, 663, 777, 627, 216,
	287, 194, 234, 697, 751, 659, 187, 762, 738, 789,
	316, 334, 159, 255, 335, 354, 174, 329, 256, 262,
	184, 186, 185, 170, 311, 333, 179, 189, 785, 772,
	791, 654, 641, 646, 642, 670, 808, 226, 217, 792,
	790, 348, 143, 307, 306, 684, 225, 775, 144, 136,
	294, 145, 232, 162, 795, 357, 173, 236, 330, 2539,
	211, 268, 193, 747, 277, 669, 156, 290, 252, 253,
	251, 254, 214, 140, 146, 771, 292, 309, 332, 175,
	323, 138, 139, 141, 148, 300, 149, 150, 814, 246,
	204, 207, 219, 229, 746, 296, 324, 349, 740, 171,
	164, 326, 342, 180, 308, 310, 356, 769, 166, 803,
	786, 733, 699, 705, 629, 0, 165, 765, 661, 673,
	653, 741, 652, 213, 757, 340, 341, 192, 358, 859,
	818, 167, 636, 817, 265, 272, 264, 820, 336, 804,
	734, 723, 721, 630, 802, 732, 722, 237, 206, 221,
	285, 243, 286, 222, 260, 259, 261, 244, 725, 0,
	163, 0, 321, 812, 829, 325, 177, 647, 779, 331,
	218, 291, 178, 212, 205, 284, 263, 172, 224, 319,
	235, 242, 761, 826, 276, 299, 181, 346, 318, 201,
	864, 866, 862, 865, 863, 882, 883, 904, 905, 906,
	893, 860, 0, 901, 902, 0, 716, 806, 631, 0,
	782, 151, 152, 754, 824, 872, 188, 131, 855, 856,
	857, 132, 876, 877, 133, 134, 899, 898, 897, 900,
	135, 909, 908, 910, 861, 868, 871, 878, 879, 880,
	887, 888, 895, 890, 891, 712, 281, 884, 158, 168,
	239, 825, 293, 210, 619, 626, 645, 648, 649, 650,
	651, 655, 660, 0, 666, 672, 674, 675, 683, 688,
	689, 690, 691, 698, 700, 701, 702, 703, 704, 707,
	708, 710, 717, 718, 724, 729, 730, 736, 737, 0,
	760, 763, 892, 774, 776, 780, 781, 788, 793, 794,
	819, 823, 828, 347, 196, 715, 735, 766, 169, 176,
	183, 195, 203, 209, 220, 223, 227, 228, 230, 233,
	245, 247, 248, 249, 250, 266, 267, 270, 271, 274,
	275, 278, 279, 280, 282, 283, 289, 147, 295, 301,
	302, 303, 304, 305, 312, 313, 314, 315, 322, 338,
	339, 352, 353, 798, 695, 155, 0, 0, 161, 0,
	0, 0, 0, 0, 682, 160, 797, 821, 742, 756,
	809, 0, 328, 874, 813, 656, 679, 822, 685, 687,
	750, 632, 727, 273, 676, 633, 0, 0, 624, 869,
	625, 657, 199, 867, 783, 728, 811, 713, 743, 753,
	198, 190, 720, 719, 800, 668, 667, 748, 796, 810,
	0, 0, 907, 240, 0, 0, 350, 320, 257, 0,
	0, 711, 0, 881, 894, 696, 752, 644, 739, 815,
	677, 744, 816, 0, 0, 0, 0, 478, 0, 0,
	0, 0, 0, 0, 0, 0, 137, 0, 889, 903,
	870, 0, 706, 749, 827, 623, 886, 0, 628, 858,
	0, 801, 664, 665, 202, 0, 0, 0, 0, 0,
	0, 0, 709, 726, 768, 693, 345, 755, 764, 778,
	686, 288, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 885, 0, 0, 0, 638, 854, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 875, 0, 0, 0, 643, 621, 662, 770, 622,
	620, 258, 635, 896, 799, 694, 231, 153, 805, 692,
	873, 758, 639, 787, 680, 238, 637, 154, 634, 640,
	678, 269, 767, 773, 142, 157, 784, 658, 671, 191,
	0, 298, 745, 344, 853, 731, 297, 241, 337, 759,
	807, 343, 681, 327, 351, 355, 208, 714, 182, 317,
	200, 197, 663, 777, 627, 216, 287, 194, 234, 697,
	751, 659, 187, 762, 738, 789, 316, 334, 159, 255,
	335, 354, 174, 329, 256, 262, 184, 186, 185, 170,
	311, 333, 179, 189, 785, 772, 791, 654, 641, 646,
	642, 670, 808, 226, 217, 792, 790, 348, 143, 307,
	306, 684, 225, 775, 144, 136, 294, 145, 232, 162,
	795, 357, 173, 236, 330, 852, 211, 268, 193, 747,
	277, 669, 156, 290, 252, 253, 251, 254, 214, 140,
	146, 771, 292, 309, 332, 175, 323, 138, 139, 141,
	148, 300, 149, 150, 814, 246, 204, 207, 219, 229,
	746, 296, 324, 349, 740, 171, 164, 326, 342, 180,
	308, 310, 356, 769, 166, 803, 786, 733, 699, 705,
	629, 0, 165, 765, 661, 673, 653, 741, 652, 213,
	757, 340, 341, 192, 358, 859, 818, 167, 636, 817,
	265, 272, 264, 820, 336, 804, 734, 723, 721, 630,
	802, 732, 722, 237, 206, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 725, 0, 163, 0, 321, 812,
	829, 325, 177, 647, 779, 331, 218, 291, 178, 212,
	205, 284, 263, 172, 224, 319, 235, 242, 761, 826,
	276, 299, 181, 346, 318, 201, 864, 866, 862, 865,
	863, 882, 883, 904, 905, 906, 893, 860, 0, 901,
	902, 0, 716, 806, 631, 0, 782, 151, 152, 754,
	824, 872, 188, 131, 855, 856, 857, 132, 876, 877,
	133, 134, 899, 898, 897, 900, 135, 909, 908, 910,
	861, 868, 871, 878, 879, 880, 887, 888, 895, 890,
	891, 712, 281, 884, 158, 168, 239, 825, 293, 210,
	619, 626, 645, 648, 649, 650, 651, 655, 660, 0,
	666, 672, 674, 675, 683, 688, 689, 690, 691, 698,
	700, 701, 702, 703, 704, 707, 708, 710, 717, 718,
	724, 729, 730, 736, 737, 0, 760, 763, 892, 774,
	776, 780, 781, 788, 793, 794, 819, 823, 828, 347,
	196, 715, 735, 766, 169, 176, 183, 195, 203, 209,
	220, 223, 227, 228, 230, 233, 245, 247, 248, 249,
	250, 266, 267, 270, 271, 274, 275, 278, 279, 280,
	282, 283, 289, 147, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 798,
	695, 155, 0, 0, 161, 0, 0, 0, 0, 0,
	682, 160, 797, 821, 742, 756, 809, 0, 328, 874,
	813, 656, 679, 822, 685, 687, 750, 632, 727, 273,
	676, 633, 0, 0, 624, 869, 625, 657, 199, 867,
	783, 728, 811, 713, 743, 753, 198, 190, 720, 719,
	800, 668, 667, 748, 796, 810, 0, 0, 907, 240,
	0, 0, 350, 320, 257, 0, 0, 711, 0, 881,
	894, 696, 752, 644, 739, 815, 677, 744, 816, 0,
	0, 0, 0, 478, 0, 0, 0, 0, 0, 0,
	0, 0, 137, 0, 889, 903, 870, 0, 706, 749,
	827, 623, 886, 0, 628, 858, 0, 801, 664, 665,
	202, 0, 0, 0, 0, 0, 0, 0, 709, 726,
	768, 693, 345, 755, 764, 778, 686, 288, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 885,
	0, 0, 0, 638, 854, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 875, 0, 0,
	0, 643, 621, 662, 770, 622, 620, 258, 635, 896,
	799, 694, 231, 153, 805, 692, 873, 758, 639, 787,
	680, 238, 637, 154, 634, 640, 678, 269, 767, 773,
	142, 157, 784, 658, 671, 191, 0, 298, 745, 344,
	853, 731, 297, 241, 337, 759, 807, 343, 681, 327,
	351, 355, 208, 714, 182, 317, 200, 197, 663, 777,
	627, 216, 287, 194, 234, 697, 751, 659, 187, 762,
	738, 789, 316, 334, 159, 255, 335, 354, 174, 329,
	256, 262, 184, 186, 185, 170, 311, 333, 179, 189,
	785, 772, 791, 654, 641, 646, 642, 670, 808, 226,
	217, 792, 790, 348, 143, 307, 306, 684, 225, 775,
	144, 136, 294, 145, 232, 162, 795, 357, 173, 236,
	330, 852, 211, 268, 193, 747, 277, 669, 156, 290,
	252, 253, 251, 254, 214, 140, 146, 771, 292, 309,
	332, 175, 323, 138, 139, 141, 148, 300, 149, 150,
	814, 246, 204, 207, 219, 229, 746, 296, 324, 349,
	740, 171, 164, 326, 342, 180, 308, 310, 356, 769,
	166, 803, 786, 733, 699, 705, 629, 0, 165, 765,
	661, 673, 653, 741, 652, 213, 757, 340, 341, 192,
	358, 859, 818, 167, 847, 817, 265, 272, 264, 820,
	336, 804, 734, 723, 721, 630, 802, 732, 722, 237,
	206, 221, 285, 243, 286, 222, 260, 259, 261, 843,
	725, 0, 163, 0, 321, 812, 829, 325, 177, 647,
	779, 331, 218, 291, 178, 212, 205, 284, 848, 846,
	837, 838, 235, 242, 761, 826, 276, 299, 181, 346,
	318, 201, 864, 866, 862, 865, 863, 882, 883, 904,
	905, 906, 893, 860, 0, 901, 902, 0, 716, 806,
	631, 0, 782, 151, 152, 754, 824, 872, 188, 131,
	855, 856, 857, 132, 876, 877, 133, 134, 899, 898,
	897, 900, 135, 909, 908, 910, 861, 868, 871, 878,
	879, 880, 887, 888, 895, 890, 891, 712, 281, 884,
	158, 168, 239, 825, 293, 210, 619, 626, 645, 648,
	649, 650, 651, 655, 660, 0, 666, 672, 674, 675,
	683, 688, 689, 690, 691, 698, 700, 701, 702, 703,
	704, 707, 708, 710, 717, 718, 724, 729, 730, 736,
	737, 0, 760, 763, 892, 774, 776, 780, 781, 788,
	793, 794, 819, 823, 828, 347, 196, 715, 735, 766,
	169, 176, 183, 195, 203, 209, 220, 223, 227, 228,
	230, 233, 245, 247, 248, 249, 250, 266, 267, 270,
	271, 274, 275, 278, 279, 280, 844, 845, 289, 147,
	295, 301, 302, 303, 304, 305, 312, 313, 314, 315,
	322, 338, 339, 352, 353, 798, 695, 155, 0, 0,
	161, 0, 0, 0, 0, 0, 682, 160, 797, 821,
	742, 756, 809, 0, 328, 874, 813, 656, 679, 822,
	685, 687, 750, 632, 727, 273, 676, 633, 0, 0,
	624, 869, 625, 657, 199, 867, 783, 728, 811, 713,
	743, 753, 198, 190, 720, 719, 800, 668, 667, 748,
	796, 810, 0, 0, 907, 240, 0, 0, 350, 320,
	257, 0, 0, 711, 0, 881, 894, 696, 752, 644,
	739, 815, 677, 744, 816, 0, 0, 0, 0, 478,
	0, 0, 0, 0, 0, 0, 0, 0, 137, 0,
	889, 903, 870, 0, 706, 749, 827, 623, 886, 0,
	628, 858, 0, 801, 664, 665, 202, 0, 0, 0,
	0, 0, 0, 0, 709, 726, 768, 693, 345, 755,
	764, 778, 686, 288, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 885, 0, 0, 0, 638,
	854, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 875, 0, 0, 0, 643, 621, 662,
	770, 622, 620, 258, 635, 896, 799, 694, 231, 153,
	805, 692, 873, 758, 639, 787, 680, 238, 637, 154,
	634, 640, 678, 269, 767, 773, 142, 157, 784, 658,
	671, 191, 0, 298, 745, 344, 853, 731, 297, 241,
	337, 759, 807, 343, 681, 327, 351, 355, 208, 714,
	182, 317, 200, 197, 663, 777, 627, 216, 287, 194,
	234, 697, 751, 659, 187, 762, 738, 789, 316, 334,
	159, 255, 335, 354, 174, 329, 256, 262, 184, 186,
	185, 170, 311, 333, 179, 189, 785, 772, 791, 654,
	641, 646, 642, 670, 808, 226, 217, 792, 790, 348,
	143, 307, 306, 684, 225, 775, 144, 136, 294, 145,
	232, 162, 795, 357, 173, 236, 330, 852, 211, 268,
	193, 747, 277, 669, 156, 290, 252, 253, 251, 254,
	214, 140, 146, 771, 292, 309, 332, 175, 323, 138,
	139, 141, 148, 300, 149, 150, 814, 246, 204, 207,
	219, 229, 746, 296, 324, 349, 740, 171, 164, 326,
	1282, 180, 308, 310, 356, 769, 166, 803, 786, 733,
	699, 705, 629, 0, 165, 765, 661, 673, 653, 741,
	652, 213, 757, 340, 341, 192, 358, 859, 818, 167,
	636, 817, 265, 272, 264, 820, 336, 804, 734, 723,
	721, 630, 802, 732, 722, 237, 206, 221, 285, 243,
	286, 222, 260, 259, 261, 244, 725, 0, 163, 0,
	321, 812, 829, 325, 177, 647, 779, 331, 218, 291,
	178, 212, 205, 284, 263, 172, 224, 319, 235, 242,
	761, 826, 276, 299, 181, 346, 318, 201, 864, 866,
	862, 865, 863, 882, 883, 904, 905, 906, 893, 860,
	0, 901, 902, 0, 716, 806, 631, 0, 782, 151,
	152, 754, 824, 872, 188, 131, 855, 856, 857, 132,
	876, 877, 133, 134, 899, 898, 897, 900, 135, 909,
	908, 910, 861, 868, 871, 878, 879, 880, 887, 888,
	895, 890, 891, 712, 281, 884, 158, 168, 239, 825,
	293, 210, 619, 626, 645, 648, 649, 650, 651, 655,
	660, 0, 666, 672, 674, 675, 683, 688, 689, 690,
	691, 698, 700, 701, 702, 703, 704, 707, 708, 710,
	717, 718, 724, 729, 730, 736, 737, 0, 760, 763,
	892, 774, 776, 780, 781, 788, 793, 794, 819, 823,
	828, 347, 196, 715, 735, 766, 169, 176, 183, 195,
	203, 209, 220, 223, 227, 228, 230, 233, 245, 247,
	248, 249, 250, 266, 267, 270, 271, 274, 275, 278,
	279, 280, 282, 283, 289, 147, 295, 301, 302, 303,
	304, 305, 312, 313, 314, 315, 322, 338, 339, 352,
	353, 798, 695, 155, 0, 0, 161, 0, 0, 0,
	0, 0, 682, 160, 797, 821, 742, 756, 809, 0,
	328, 874, 813, 656, 679, 822, 685, 687, 750, 632,
	727, 273, 676, 633, 0, 0, 624, 869, 625, 657,
	199, 867, 783, 728, 811, 713, 743, 753, 198, 190,
	720, 719, 800, 668, 667, 748, 796, 810, 0, 0,
	907, 240, 0, 0, 350, 320, 257, 0, 0, 711,
	0, 881, 894, 696, 752, 644, 739, 815, 677, 744,
	816, 0, 0, 0, 0, 478, 0, 0, 0, 0,
	0, 0, 0, 0, 137, 0, 889, 903, 870, 0,
	706, 749, 827, 623, 886, 0, 628, 858, 0, 801,
	664, 665, 202, 0, 0, 0, 0, 0, 0, 0,
	709, 726, 768, 693, 345, 755, 764, 778, 686, 288,
	215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 885, 0, 0, 0, 638, 854, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 875,
	0, 0, 0, 643, 621, 662, 770, 622, 620, 258,
	635, 896, 799, 694, 231, 153, 805, 692, 873, 758,
	639, 787, 680, 238, 637, 154, 634, 640, 678, 269,
	767, 773, 142, 157, 784, 658, 671, 191, 0, 298,
	745, 344, 853, 731, 297, 241, 337, 759, 807, 343,
	681, 327, 351, 355, 208, 714, 182, 317, 200, 197,
	663, 777, 627, 216, 287, 194, 234, 697, 751, 659,
	187, 762, 738, 789, 316, 334, 159, 255, 335, 354,
	174, 329, 256, 262, 184, 186, 185, 170, 311, 333,
	179, 189, 785, 772, 791, 654, 641, 646, 642, 670,
	808, 226, 217, 792, 790, 348, 143, 307, 306, 684,
	225, 775, 144, 136, 294, 145, 232, 162, 795, 357,
	173, 236, 330, 852, 211, 268, 193, 747, 277, 669,
	156, 290, 252, 253, 251, 254, 214, 140, 146, 771,
	292, 309, 332, 175, 323, 138, 139, 141, 148, 300,
	149, 150, 814, 246, 204, 207, 219, 229, 746, 296,
	324, 349, 740, 171, 164, 326, 834, 180, 308, 310,
	356, 769, 166, 803, 786, 733, 699, 705, 629, 0,
	165, 765, 661, 673, 653, 741, 652, 213, 757, 340,
	341, 192, 358, 859, 818, 167, 847, 817, 265, 272,
	264, 820, 336, 804, 734, 723, 721, 630, 802, 732,
	722, 237, 206, 221, 285, 243, 286, 222, 260, 259,
	261, 843, 725, 0, 163, 0, 321, 812, 829, 325,
	177, 647, 779, 331, 218, 291, 178, 212, 205, 284,
	848, 846, 837, 838, 235, 242, 761, 826, 276, 299,
	181, 346, 318, 201, 864, 866, 862, 865, 863, 882,
	883, 904, 905, 906, 893, 860, 0, 901, 902, 0,
	716, 806, 631, 0, 782, 151, 152, 754, 824, 872,
	188, 131, 855, 856, 857, 132, 876, 877, 133, 134,
	899, 898, 897, 900, 135, 909, 908, 910, 861, 868,
	871, 878, 879, 880, 887, 888, 895, 890, 891, 712,
	281, 884, 158, 168, 239, 825, 293, 210, 619, 626,
	645, 648, 649, 650, 651, 655, 660, 0, 666, 672,
	674, 675, 683, 688, 689, 690, 691, 698, 700, 701,
	702, 703, 704, 707, 708, 710, 717, 718, 724, 729,
	730, 736, 737, 0, 760, 763, 892, 774, 776, 780,
	781, 788, 793, 794, 819, 823, 828, 347, 196, 715,
	735, 766, 169, 176, 183, 195, 203, 209, 220, 223,
	227, 228, 230, 233, 245, 247, 248, 249, 250, 266,
	267, 270, 271, 274, 275, 278, 279, 280, 844, 845,
	289, 147, 295, 301, 302, 303, 304, 305, 312, 313,
	314, 315, 322, 338, 339, 352, 353, 798, 695, 155,
	0, 0, 161, 0, 0, 0, 0, 0, 682, 160,
	797, 821, 742, 756, 1654, 1616, 328, 1509, 1658, 1459,
	1488, 1675, 1494, 1497, 1578, 1425, 1547, 273, 1485, 1426,
	1409, 1464, 1413, 1476, 1414, 1461, 199, 1457, 1619, 1550,
	1656, 1529, 1571, 1581, 198, 190, 1539, 1538, 1644, 1474,
	1473, 1576, 1633, 1655, 1528, 0, 1665, 240, 1630, 0,
	350, 320, 257, 0, 0, 1524, 1639, 1545, 1608, 1507,
	1580, 1441, 1563, 1660, 1486, 1572, 1661, 0, 0, 0,
	0, 925, 0, 1978, 1979, 0, 0, 0, 0, 0,
	1980, 0, 1568, 1652, 1479, 0, 1519, 1577, 1680, 1412,
	1564, 0, 1417, 1428, 1674, 1645, 1470, 1471, 202, 2299,
	0, 0, 0, 0, 0, 0, 1522, 1546, 1598, 1504,
	345, 1583, 1593, 1611, 1496, 288, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 1466, 0, 1561, 0, 0,
	0, 1433, 1419, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1518, 0, 0, 0, 1440,
	1410, 1468, 1600, 1411, 1408, 258, 1429, 1613, 1643, 1505,
	231, 0, 1649, 1503, 1502, 1587, 1434, 1623, 1489, 238,
	1432, 154, 1427, 1435, 1487, 269, 1597, 1605, 0, 157,
	1620, 1462, 1478, 191, 0, 298, 1573, 344, 0, 1554,
	297, 241, 337, 1588, 1651, 343, 1490, 327, 351, 355,
	208, 1530, 182, 317, 200, 197, 1469, 1610, 1416, 216,
	287, 194, 234, 1508, 1579, 1463, 187, 1591, 1562, 1625,
	316, 334, 159, 255, 335, 354, 174, 329, 256, 262,
	184, 186, 185, 170, 311, 333, 179, 189, 1621, 1604,
	1627, 1456, 1436, 1447, 1437, 1477, 1653, 226, 217, 1628,
	1626, 348, 0, 307, 306, 1493, 225, 1607, 0, 0,
	294, 1982, 232, 162, 1632, 357, 173, 236, 330, 0,
	211, 268, 193, 1575, 277, 1475, 156, 290, 252, 253,
	251, 254, 214, 0, 0, 1603, 292, 309, 332, 175,
	323, 1981, 0, 0, 0, 300, 0, 0, 1659, 246,
	204, 207, 219, 229, 1574, 296, 324, 349, 1565, 171,
	164, 326, 342, 180, 308, 310, 356, 1599, 166, 1647,
	1622, 1556, 1511, 1517, 1418, 0, 165, 1595, 1467, 1482,
	1455, 1569, 1454, 213, 1586, 340, 341, 192, 358, 1430,
	1667, 167, 1431, 1666, 265, 272, 264, 1670, 336, 1648,
	1557, 1542, 1540, 1423, 1646, 1555, 1541, 237, 206, 221,
	285, 243, 286, 222, 260, 259, 261, 244, 1544, 0,
	163, 0, 321, 1657, 1682, 325, 177, 1449, 1614, 331,
	218, 291, 178, 212, 205, 284, 263, 172, 224, 319,
	235, 242, 1590, 1679, 276, 299, 181, 346, 318, 201,
	1445, 1448, 1443, 1446, 1444, 1548, 1549, 1662, 1663, 1664,
	1602, 1438, 0, 1640, 1641, 0, 1535, 1650, 1424, 0,
	1618, 0, 0, 1582, 1677, 1495, 188, 0, 1420, 1421,
	1422, 0, 1525, 1526, 0, 0, 1636, 1635, 1634, 1637,
	0, 1671, 1669, 1672, 1439, 1460, 1481, 1531, 1532, 1534,
	1566, 1567, 1612, 1585, 1594, 1527, 281, 1553, 158, 168,
	239, 1678, 293, 210, 1407, 1415, 1442, 1450, 1451, 1452,
	1453, 1458, 1465, 0, 1472, 1480, 1483, 1484, 1492, 1498,
	1499, 1500, 1501, 1510, 1512, 1513, 1514, 1515, 1516, 1520,
	1521, 1523, 1536, 1537, 1543, 1551, 1552, 1559, 1560, 0,
	1589, 1592, 1601, 1606, 1609, 1615, 1617, 1624, 1629, 1631,
	1668, 1676, 1681, 347, 196, 1533, 1558, 1596, 169, 176,
	183, 195, 203, 209, 220, 223, 227, 228, 230, 233,
	245, 247, 248, 249, 250, 266, 267, 270, 271, 274,
	275, 278, 279, 280, 282, 283, 289, 0, 295, 301,
	302, 303, 304, 305, 312, 313, 314, 315, 322, 338,
	339, 352, 353, 1642, 1506, 155, 0, 0, 161, 0,
	0, 0, 0, 0, 1491, 160, 1638, 1673, 1570, 1584,
	1654, 1616, 328, 1509, 1658, 1459, 1488, 1675, 1494, 1497,
	1578, 1425, 1547, 273, 1485, 1426, 1409, 1464, 1413, 1476,
	1414, 1461, 199, 1457, 1619, 1550, 1656, 1529, 1571, 1581,
	198, 190, 1539, 1538, 1644, 1474, 1473, 1576, 1633, 1655,
	1528, 0, 1665, 240, 1630, 0, 350, 320, 257, 0,
	0, 1524, 1639, 1545, 1608, 1507, 1580, 1441, 1563, 1660,
	1486, 1572, 1661, 0, 0, 0, 0, 925, 0, 1978,
	1979, 0, 0, 0, 0, 0, 1980, 0, 1568, 1652,
	1479, 0, 1519, 1577, 1680, 1412, 1564, 0, 1417, 1428,
	1674, 1645, 1470, 1471, 202, 0, 0, 0, 0, 0,
	0, 0, 1522, 1546, 1598, 1504, 345, 1583, 1593, 1611,
	1496, 288, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 1466, 0, 1561, 0, 0, 0, 1433, 1419, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1518, 0, 0, 0, 1440, 1410, 1468, 1600, 1411,
	1408, 258, 1429, 1613, 1643, 1505, 231, 0, 1649, 1503,
	1502, 1587, 1434, 1623, 1489, 238, 1432, 154, 1427, 1435,
	1487, 269, 1597, 1605, 0, 157, 1620, 1462, 1478, 191,
	0, 298, 1573, 344, 0, 1554, 297, 241, 337, 1588,
	1651, 343, 1490, 327, 351, 355, 208, 1530, 182, 317,
	200, 197, 1469, 1610, 1416, 216, 287, 194, 234, 1508,
	1579, 1463, 187, 1591, 1562, 1625, 316, 334, 159, 255,
	335, 354, 174, 329, 256, 262, 184, 186, 185, 170,
	311, 333, 179, 189, 1621, 1604, 1627, 1456, 1436, 1447,
	1437, 1477, 1653, 226, 217, 1628, 1626, 348, 0, 307,
	306, 1493, 225, 1607, 0, 0, 294, 1982, 232, 162,
	1632, 357, 173, 236, 330, 0, 211, 268, 193, 1575,
	277, 1475, 156, 290, 252, 253, 251, 254, 214, 0,
	0, 1603, 292, 309, 332, 175, 323, 1981, 0, 0,
	0, 300, 0, 0, 1659, 246, 204, 207, 219, 229,
	1574, 296, 324, 349, 1565, 171, 164, 326, 342, 180,
	308, 310, 356, 1599, 166, 1647, 1622, 1556, 1511, 1517,
	1418, 0, 165, 1595, 1467, 1482, 1455, 1569, 1454, 213,
	1586, 340, 341, 192, 358, 1430, 1667, 167, 1431, 1666,
	265, 272, 264, 1670, 336, 1648, 1557, 1542, 1540, 1423,
	1646, 1555, 1541, 237, 206, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 1544, 0, 163, 0, 321, 1657,
	1682, 325, 177, 1449, 1614, 331, 218, 291, 178, 212,
	205, 284, 263, 172, 224, 319, 235, 242, 1590, 1679,
	276, 299, 181, 346, 318, 201, 1445, 1448, 1443, 1446,
	1444, 1548, 1549, 1662, 1663, 1664, 1602, 1438, 0, 1640,
	1641, 0, 1535, 1650, 1424, 0, 1618, 0, 0, 1582,
	1677, 1495, 188, 0, 1420, 1421, 1422, 0, 1525, 1526,
	0, 0, 1636, 1635, 1634, 1637, 0, 1671, 1669, 1672,
	1439, 1460, 1481, 1531, 1532, 1534, 1566, 1567, 1612, 1585,
	1594, 1527, 281, 1553, 158, 168, 239, 1678, 293, 210,
	1407, 1415, 1442, 1450, 1451, 1452, 1453, 1458, 1465, 0,
	1472, 1480, 1483, 1484, 1492, 1498, 1499, 1500, 1501, 1510,
	1512, 1513, 1514, 1515, 1516, 1520, 1521, 1523, 1536, 1537,
	1543, 1551, 1552, 1559, 1560, 0, 1589, 1592, 1601, 1606,
	1609, 1615, 1617, 1624, 1629, 1631, 1668, 1676, 1681, 347,
	196, 1533, 1558, 1596, 169, 176, 183, 195, 203, 209,
	220, 223, 227, 228, 230, 233, 245, 247, 248, 249,
	250, 266, 267, 270, 271, 274, 275, 278, 279, 280,
	282, 283, 289, 0, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 1642,
	1506, 155, 0, 0, 161, 0, 0, 0, 0, 0,
	1491, 160, 1638, 1673, 1570, 1584, 1654, 1616, 328, 1509,
	1658, 1459, 1488, 1675, 1494, 1497, 1578, 1425, 1547, 273,
	1485, 1426, 1409, 1464, 1413, 1476, 1414, 1461, 199, 1457,
	1619, 1550, 1656, 1529, 1571, 1581, 198, 190, 1539, 1538,
	1644, 1474, 1473, 1576, 1633, 1655, 1528, 0, 1665, 240,
	1630, 0, 350, 320, 257, 0, 0, 1524, 1639, 1545,
	1608, 1507, 1580, 1441, 1563, 1660, 1486, 1572, 1661, 0,
	0, 0, 0, 925, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1568, 1652, 1479, 0, 1519, 1577,
	1680, 1412, 1564, 0, 1417, 1428, 1674, 1645, 1470, 1471,
	202, 0, 0, 0, 0, 0, 0, 0, 1522, 1546,
	1598, 1504, 345, 1583, 1593, 1611, 1496, 288, 215, 0,
	0, 0, 0, 0, 0, 2898, 0, 1466, 0, 1561,
	0, 0, 0, 1433, 1419, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1518, 0, 0,
	0, 1440, 1410, 1468, 1600, 1411, 1408, 258, 1429, 1613,
	1643, 1505, 231, 0, 1649, 1503, 1502, 1587, 1434, 1623,
	1489, 238, 1432, 154, 1427, 1435, 1487, 269, 1597, 1605,
	0, 157, 1620, 1462, 1478, 191, 0, 298, 1573, 344,
	0, 1554, 297, 241, 337, 1588, 1651, 343, 1490, 327,
	351, 355, 208, 1530, 182, 317, 200, 197, 1469, 1610,
	1416, 216, 287, 194, 234, 1508, 1579, 1463, 187, 1591,
	1562, 1625, 316, 334, 159, 255, 335, 354, 174, 329,
	256, 262, 184, 186, 185, 170, 311, 333, 179, 189,
	1621, 1604, 1627, 1456, 1436, 1447, 1437, 1477, 1653, 226,
	217, 1628, 1626, 348, 0, 307, 306, 1493, 225, 1607,
	0, 0, 294, 0, 232, 162, 1632, 357, 173, 236,
	330, 0, 211, 268, 193, 1575, 277, 1475, 156, 290,
	252, 253, 251, 254, 214, 0, 0, 1603, 292, 309,
	332, 175, 323, 0, 0, 0, 0, 300, 0, 0,
	1659, 246, 204, 207, 219, 229, 1574, 296, 324, 349,
	1565, 171, 164, 326, 342, 180, 308, 310, 356, 1599,
	166, 1647, 1622, 1556, 1511, 1517, 1418, 0, 165, 1595,
	1467, 1482, 1455, 1569, 1454, 213, 1586, 340, 341, 192,
	358, 1430, 1667, 167, 1431, 1666, 265, 272, 264, 1670,
	336, 1648, 1557, 1542, 1540, 1423, 1646, 1555, 1541, 237,
	206, 221, 285, 243, 286, 222, 260, 259, 261, 244,
	1544, 0, 163, 0, 321, 1657, 1682, 325, 177, 1449,
	1614, 331, 218, 291, 178, 212, 205, 284, 263, 172,
	224, 319, 235, 242, 1590, 1679, 276, 299, 181, 346,
	318, 201, 1445, 1448, 1443, 1446, 1444, 1548, 1549, 1662,
	1663, 1664, 1602, 1438, 0, 1640, 1641, 0, 1535, 1650,
	1424, 0, 1618, 0, 0, 1582, 1677, 1495, 188, 0,
	1420, 1421, 1422, 0, 1525, 1526, 0, 0, 1636, 1635,
	1634, 1637, 0, 1671, 1669, 1672, 1439, 1460, 1481, 1531,
	1532, 1534, 1566, 1567, 1612, 1585, 1594, 1527, 281, 1553,
	158, 168, 239, 1678, 293, 210, 1407, 1415, 1442, 1450,
	1451, 1452, 1453, 1458, 1465, 0, 1472, 1480, 1483, 1484,
	1492, 1498, 1499, 1500, 1501, 1510, 1512, 1513, 1514, 1515,
	1516, 1520, 1521, 1523, 1536, 1537, 1543, 1551, 1552, 1559,
	1560, 0, 1589, 1592, 1601, 1606, 1609, 1615, 1617, 1624,
	1629, 1631, 1668, 1676, 1681, 347, 196, 1533, 1558, 1596,
	169, 176, 183, 195, 203, 209, 220, 223, 227, 228,
	230, 233, 245, 247, 248, 249, 250, 266, 267, 270,
	271, 274, 275, 278, 279, 280, 282, 283, 289, 0,
	295, 301, 302, 303, 304, 305, 312, 313, 314, 315,
	322, 338, 339, 352, 353, 1642, 1506, 155, 0, 0,
	161, 0, 0, 0, 0, 0, 1491, 160, 1638, 1673,
	1570, 1584, 1654, 1616, 328, 1509, 1658, 1459, 1488, 1675,
	1494, 1497, 1578, 1425, 1547, 273, 1485, 1426, 1409, 1464,
	1413, 1476, 1414, 1461, 199, 1457, 1619, 1550, 1656, 1529,
	1571, 1581, 198, 190, 1539, 1538, 1644, 1474, 1473, 1576,
	1633, 1655, 1528, 0, 1665, 240, 1630, 0, 350, 320,
	257, 0, 0, 1524, 1639, 1545, 1608, 1507, 1580, 1441,
	1563, 1660, 1486, 1572, 1661, 0, 0, 0, 0, 925,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1568, 1652, 1479, 0, 1519, 1577, 1680, 1412, 1564, 0,
	1417, 1428, 1674, 1645, 1470, 1471, 202, 0, 0, 0,
	0, 0, 0, 0, 1522, 1546, 1598, 1504, 345, 1583,
	1593, 1611, 1496, 288, 215, 0, 0, 0, 0, 0,
	0, 2462, 0, 1466, 0, 1561, 0, 0, 0, 1433,
	1419, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1518, 0, 0, 0, 1440, 1410, 1468,
	1600, 1411, 1408, 258, 1429, 1613, 1643, 1505, 231, 0,
	1649, 1503, 1502, 1587, 1434, 1623, 1489, 238, 1432, 154,
	1427, 1435, 1487, 269, 1597, 1605, 0, 157, 1620, 1462,
	1478, 191, 0, 298, 1573, 344, 0, 1554, 297, 241,
	337, 1588, 1651, 343, 1490, 327, 351, 355, 208, 1530,
	182, 317, 200, 197, 1469, 1610, 1416, 216, 287, 194,
	234, 1508, 1579, 1463, 187, 1591, 1562, 1625, 316, 334,
	159, 255, 335, 354, 174, 329, 256, 262, 184, 186,
	185, 170, 311, 333, 179, 189, 1621, 1604, 1627, 1456,
	1436, 1447, 1437, 1477, 1653, 226, 217, 1628, 1626, 348,
	0, 307, 306, 1493, 225, 1607, 0, 0, 294, 0,
	232, 162, 1632, 357, 173, 236, 330, 0, 211, 268,
	193, 1575, 277, 1475, 156, 290, 252, 253, 251, 254,
	214, 0, 0, 1603, 292, 309, 332, 175, 323, 0,
	0, 0, 0, 300, 0, 0, 1659, 246, 204, 207,
	219, 229, 1574, 296, 324, 349, 1565, 171, 164, 326,
	342, 180, 308, 310, 356, 1599, 166, 1647, 1622, 1556,
	1511, 1517, 1418, 0, 165, 1595, 1467, 1482, 1455, 1569,
	1454, 213, 1586, 340, 341, 192, 358, 1430, 1667, 167,
	1431, 1666, 265, 272, 264, 1670, 336, 1648, 1557, 1542,
	1540, 1423, 1646, 1555, 1541, 237, 206, 221, 285, 243,
	286, 222, 260, 259, 261, 244, 1544, 0, 163, 0,
	321, 1657, 1682, 325, 177, 1449, 1614, 331, 218, 291,
	178, 212, 205, 284, 263, 172, 224, 319, 235, 242,
	1590, 1679, 276, 299, 181, 346, 318, 201, 1445, 1448,
	1443, 1446, 1444, 1548, 1549, 1662, 1663, 1664, 1602, 1438,
	0, 1640, 1641, 0, 1535, 1650, 1424, 0, 1618, 0,
	0, 1582, 1677, 1495, 188, 0, 1420, 1421, 1422, 0,
	1525, 1526, 0, 0, 1636, 1635, 1634, 1637, 0, 1671,
	1669, 1672, 1439, 1460, 1481, 1531, 1532, 1534, 1566, 1567,
	1612, 1585, 1594, 1527, 281, 1553, 158, 168, 239, 1678,
	293, 210, 1407, 1415, 1442, 1450, 1451, 1452, 1453, 1458,
	1465, 0, 1472, 1480, 1483, 1484, 1492, 1498, 1499, 1500,
	1501, 1510, 1512, 1513, 1514, 1515, 1516, 1520, 1521, 1523,
	1536, 1537, 1543, 1551, 1552, 1559, 1560, 0, 1589, 1592,
	1601, 1606, 1609, 1615, 1617, 1624, 1629, 1631, 1668, 1676,
	1681, 347, 196, 1533, 1558, 1596, 169, 176, 183, 195,
	203, 209, 220, 223, 227, 228, 230, 233, 245, 247,
	248, 249, 250, 266, 267, 270, 271, 274, 275, 278,
	279, 280, 282, 283, 289, 0, 295, 301, 302, 303,
	304, 305, 312, 313, 314, 315, 322, 338, 339, 352,
	353, 1642, 1506, 155, 0, 0, 161, 0, 0, 0,
	0, 0, 1491, 160, 1638, 1673, 1570, 1584, 1654, 1616,
	328, 1509, 1658, 1459, 1488, 1675, 1494, 1497, 1578, 1425,
	1547, 273, 1485, 1426, 1409, 1464, 1413, 1476, 1414, 1461,
	199, 1457, 1619, 1550, 1656, 1529, 1571, 1581, 198, 190,
	1539, 1538, 1644, 1474, 1473, 1576, 1633, 1655, 1528, 0,
	1665, 240, 1630, 0, 350, 320, 257, 0, 0, 1524,
	1639, 1545, 1608, 1507, 1580, 1441, 1563, 1660, 1486, 1572,
	1661, 0, 0, 0, 0, 129, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1568, 1652, 1479, 0,
	1519, 1577, 1680, 1412, 1564, 0, 1417, 1428, 1674, 1645,
	1470, 1471, 202, 0, 0, 0, 0, 0, 0, 0,
	1522, 1546, 1598, 1504, 345, 1583, 1593, 1611, 1496, 288,
	215, 0, 0, 0, 0, 0, 0, 2287, 0, 1466,
	0, 1561, 0, 0, 0, 1433, 1419, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1518,
	0, 0, 0, 1440, 1410, 1468, 1600, 1411, 1408, 258,
	1429, 1613, 1643, 1505, 231, 0, 1649, 1503, 1502, 1587,
	1434, 1623, 1489, 238, 1432, 154, 1427, 1435, 1487, 269,
	1597, 1605, 0, 157, 1620, 1462, 1478, 191, 0, 298,
	1573, 344, 0, 1554, 297, 241, 337, 1588, 1651, 343,
	1490, 327, 351, 355, 208, 1530, 182, 317, 200, 197,
	1469, 1610, 1416, 216, 287, 194, 234, 1508, 1579, 1463,
	187, 1591, 1562, 1625, 316, 334, 159, 255, 335, 354,
	174, 329, 256, 262, 184, 186, 185, 170, 311, 333,
	179, 189, 1621, 1604, 1627, 1456, 1436, 1447, 1437, 1477,
	1653, 226, 217, 1628, 1626, 348, 0, 307, 306, 1493,
	225, 1607, 0, 0, 294, 0, 232, 162, 1632, 357,
	173, 236, 330, 0, 211, 268, 193, 1575, 277, 1475,
	156, 290, 252, 253, 251, 254, 214, 0, 0, 1603,
	292, 309, 332, 175, 323, 0, 0, 0, 0, 300,
	0, 0, 1659, 246, 204, 207, 219, 229, 1574, 296,
	324, 349, 1565, 171, 164, 326, 342, 180, 308, 310,
	356, 1599, 166, 1647, 1622, 1556, 1511, 1517, 1418, 0,
	165, 1595, 1467, 1482, 1455, 1569, 1454, 213, 1586, 340,
	341, 192, 358, 1430, 1667, 167, 1431, 1666, 265, 272,
	264, 1670, 336, 1648, 1557, 1542, 1540, 1423, 1646, 1555,
	1541, 237, 206, 221, 285, 243, 286, 222, 260, 259,
	261, 244, 1544, 0, 163, 0, 321, 1657, 1682, 325,
	177, 1449, 1614, 331, 218, 291, 178, 212, 205, 284,
	263, 172, 224, 319, 235, 242, 1590, 1679, 276, 299,
	181, 346, 318, 201, 1445, 1448, 1443, 1446, 1444, 1548,
	1549, 1662, 1663, 1664, 1602, 1438, 0, 1640, 1641, 0,
	1535, 1650, 1424, 0, 1618, 0, 0, 1582, 1677, 1495,
	188, 0, 1420, 1421, 1422, 0, 1525, 1526, 0, 0,
	1636, 1635, 1634, 1637, 0, 1671, 1669, 1672, 1439, 1460,
	1481, 1531, 1532, 1534, 1566, 1567, 1612, 1585, 1594, 1527,
	281, 1553, 158, 168, 239, 1678, 293, 210, 1407, 1415,
	1442, 1450, 1451, 1452, 1453, 1458, 1465, 0, 1472, 1480,
	1483, 1484, 1492, 1498, 1499, 1500, 1501, 1510, 1512, 1513,
	1514, 1515, 1516, 1520, 1521, 1523, 1536, 1537, 1543, 1551,
	1552, 1559, 1560, 0, 1589, 1592, 1601, 1606, 1609, 1615,
	1617, 1624, 1629, 1631, 1668, 1676, 1681, 347, 196, 1533,
	1558, 1596, 169, 176, 183, 195, 203, 209, 220, 223,
	227, 228, 230, 233, 245, 247, 248, 249, 250, 266,
	267, 270, 271, 274, 275, 278, 279, 280, 282, 283,
	289, 0, 295, 301, 302, 303, 304, 305, 312, 313,
	314, 315, 322, 338, 339, 352, 353, 1642, 1506, 155,
	0, 0, 161, 0, 0, 0, 0, 0, 1491, 160,
	1638, 1673, 1570, 1584, 1654, 1616, 328, 1509, 1658, 1459,
	1488, 1675, 1494, 1497, 1578, 1425, 1547, 273, 1485, 1426,
	1409, 1464, 1413, 1476, 1414, 1461, 199, 1457, 1619, 1550,
	1656, 1529, 1571, 1581, 198, 190, 1539, 1538, 1644, 1474,
	1473, 1576, 1633, 1655, 1528, 0, 1665, 240, 1630, 0,
	350, 320, 257, 0, 0, 1524, 1639, 1545, 1608, 1507,
	1580, 1441, 1563, 1660, 1486, 1572, 1661, 0, 0, 0,
	0, 925, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1568, 1652, 1479, 0, 1519, 1577, 1680, 1412,
	1564, 0, 1417, 1428, 1674, 1645, 1470, 1471, 202, 0,
	0, 0, 0, 0, 0, 0, 1522, 1546, 1598, 1504,
	345, 1583, 1593, 1611, 1496, 288, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 1466, 0, 1561, 0, 0,
	0, 1433, 1419, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1518, 0, 0, 0, 1440,
	1410, 1468, 1600, 1411, 1408, 258, 1429, 1613, 1643, 1505,
	231, 0, 1649, 1503, 1502, 1587, 1434, 1623, 1489, 238,
	1432, 154, 1427, 1435, 1487, 269, 1597, 1605, 0, 157,
	1620, 1462, 1478, 191, 0, 298, 1573, 344, 0, 1554,
	297, 241, 337, 1588, 1651, 343, 1490, 327, 351, 355,
	208, 1530, 182, 317, 200, 197, 1469, 1610, 1416, 216,
	287, 194, 234, 1508, 1579, 1463, 187, 1591, 1562, 1625,
	316, 334, 159, 255, 335, 354, 174, 329, 256, 262,
	184, 186, 185, 170, 311, 333, 179, 189, 1621, 1604,
	1627, 1456, 1436, 1447, 1437, 1477, 1653, 226, 217, 1628,
	1626, 348, 0, 307, 306, 1493, 225, 1607, 0, 0,
	294, 0, 232, 162, 1632, 357, 173, 236, 330, 0,
	211, 268, 193, 1575, 277, 1475, 156, 290, 252, 253,
	251, 254, 214, 0, 0, 1603, 292, 309, 332, 175,
	323, 0, 0, 0, 0, 300, 0, 0, 1659, 246,
	204, 207, 219, 229, 1574, 296, 324, 349, 1565, 171,
	164, 326, 342, 180, 308, 310, 356, 1599, 166, 1647,
	1622, 1556, 1511, 1517, 1418, 0, 165, 1595, 1467, 1482,
	1455, 1569, 1454, 213, 1586, 340, 341, 192, 358, 1430,
	1667, 167, 1431, 1666, 265, 272, 264, 1670, 336, 1648,
	1557, 1542, 1540, 1423, 1646, 1555, 1541, 237, 206, 221,
	285, 243, 286, 222, 260, 259, 261, 244, 1544, 0,
	163, 0, 321, 1657, 1682, 325, 177, 1449, 1614, 331,
	218, 291, 178, 212, 205, 284, 263, 172, 224, 319,
	235, 242, 1590, 1679, 276, 299, 181, 346, 318, 201,
	1445, 1448, 1443, 1446, 1444, 1548, 1549, 1662, 1663, 1664,
	1602, 1438, 0, 1640, 1641, 0, 1535, 1650, 1424, 0,
	1618, 0, 0, 1582, 1677, 1495, 188, 0, 1420, 1421,
	1422, 0, 1525, 1526, 0, 0, 1636, 1635, 1634, 1637,
	0, 1671, 1669, 1672, 1439, 1460, 1481, 1531, 1532, 1534,
	1566, 1567, 1612, 1585, 1594, 1527, 281, 1553, 158, 168,
	239, 1678, 293, 210, 1407, 1415, 1442, 1450, 1451, 1452,
	1453, 1458, 1465, 0, 1472, 1480, 1483, 1484, 1492, 1498,
	1499, 1500, 1501, 1510, 1512, 1513, 1514, 1515, 1516, 1520,
	1521, 1523, 1536, 1537, 1543, 1551, 1552, 1559, 1560, 0,
	1589, 1592, 1601, 1606, 1609, 1615, 1617, 1624, 1629, 1631,
	1668, 1676, 1681, 347, 196, 1533, 1558, 1596, 169, 176,
	183, 195, 203, 209, 220, 223, 227, 228, 230, 233,
	245, 247, 248, 249, 250, 266, 267, 270, 271, 274,
	275, 278, 279, 280, 282, 283, 289, 0, 295, 301,
	302, 303, 304, 305, 312, 313, 314, 315, 322, 338,
	339, 352, 353, 1642, 1506, 155, 0, 0, 161, 0,
	0, 0, 0, 0, 1491, 160, 1638, 1673, 1570, 1584,
	1654, 1616, 328, 1509, 1658, 1459, 1488, 1675, 1494, 1497,
	1578, 1425, 1547, 273, 1485, 1426, 1409, 1464, 1413, 1476,
	1414, 1461, 199, 1457, 1619, 1550, 1656, 1529, 1571, 1581,
	198, 190, 1539, 1538, 1644, 1474, 1473, 1576, 1633, 1655,
	1528, 0, 1665, 240, 1630, 0, 350, 320, 257, 0,
	0, 1524, 1639, 1545, 1608, 1507, 1580, 1441, 1563, 1660,
	1486, 1572, 1661, 0, 0, 0, 0, 3215, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1568, 1652,
	1479, 0, 1519, 1577, 1680, 1412, 1564, 0, 1417, 1428,
	1674, 1645, 1470, 1471, 202, 0, 0, 0, 0, 0,
	0, 0, 1522, 1546, 1598, 1504, 345, 1583, 1593, 1611,
	1496, 288, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 1466, 0, 1561, 0, 0, 0, 1433, 1419, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1518, 0, 0, 0, 1440, 1410, 1468, 1600, 1411,
	1408, 258, 1429, 1613, 1643, 1505, 231, 0, 1649, 1503,
	1502, 1587, 1434, 1623, 1489, 238, 1432, 154, 1427, 1435,
	1487, 269, 1597, 1605, 0, 157, 1620, 1462, 1478, 191,
	0, 298, 1573, 344, 0, 1554, 297, 241, 337, 1588,
	1651, 343, 1490, 327, 351, 355, 208, 1530, 182, 317,
	200, 197, 1469, 1610, 1416, 216, 287, 194, 234, 1508,
	1579, 1463, 187, 1591, 1562, 1625, 316, 334, 159, 255,
	335, 354, 174, 329, 256, 262, 184, 186, 185, 170,
	311, 333, 179, 189, 1621, 1604, 1627, 1456, 1436, 1447,
	3218, 3219, 3220, 226, 217, 1628, 1626, 348, 0, 307,
	306, 1493, 225, 1607, 0, 0, 294, 0, 232, 162,
	1632, 357, 173, 236, 330, 0, 211, 268, 193, 1575,
	277, 1475, 156, 290, 252, 253, 251, 254, 214, 0,
	0, 1603, 292, 309, 332, 175, 323, 0, 0, 0,
	0, 300, 0, 0, 1659, 246, 204, 207, 219, 229,
	1574, 296, 324, 349, 1565, 171, 164, 326, 342, 180,
	308, 310, 356, 1599, 166, 1647, 1622, 1556, 1511, 1517,
	1418, 0, 165, 1595, 1467, 1482, 1455, 1569, 1454, 213,
	1586, 340, 341, 192, 358, 1430, 1667, 167, 1431, 1666,
	265, 272, 264, 1670, 336, 1648, 1557, 1542, 1540, 1423,
	1646, 1555, 1541, 237, 206, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 1544, 0, 163, 0, 321, 1657,
	1682, 325, 177, 1449, 1614, 331, 218, 291, 178, 212,
	205, 284, 263, 172, 224, 319, 235, 242, 1590, 1679,
	276, 299, 181, 346, 318, 201, 1445, 1448, 1443, 1446,
	1444, 1548, 1549, 1662, 1663, 1664, 1602, 1438, 0, 1640,
	1641, 0, 1535, 1650, 1424, 0, 1618, 0, 0, 1582,
	1677, 1495, 188, 0, 1420, 1421, 1422, 0, 1525, 1526,
	0, 0, 1636, 1635, 1634, 1637, 0, 1671, 1669, 1672,
	1439, 1460, 1481, 1531, 1532, 1534, 1566, 1567, 1612, 1585,
	1594, 1527, 281, 1553, 158, 168, 239, 1678, 293, 210,
	1407, 1415, 1442, 1450, 1451, 1452, 1453, 1458, 1465, 0,
	1472, 1480, 1483, 1484, 1492, 1498, 1499, 1500, 1501, 1510,
	1512, 1513, 1514, 1515, 1516, 1520, 1521, 1523, 1536, 1537,
	1543, 1551, 1552, 1559, 1560, 0, 1589, 1592, 1601, 1606,
	1609, 1615, 1617, 1624, 1629, 1631, 1668, 1676, 1681, 347,
	196, 1533, 1558, 1596, 169, 176, 183, 195, 203, 209,
	220, 223, 227, 228, 230, 233, 245, 247, 248, 249,
	250, 266, 267, 270, 271, 274, 275, 278, 279, 280,
	282, 283, 289, 0, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 1642,
	1506, 155, 0, 0, 161, 0, 0, 0, 0, 0,
	1491, 160, 1638, 1673, 1570, 1584, 1654, 1616, 328, 1509,
	1658, 1459, 1488, 1675, 1494, 1497, 1578, 1425, 1547, 273,
	1485, 1426, 1409, 1464, 1413, 1476, 1414, 1461, 199, 1457,
	1619, 1550, 1656, 1529, 1571, 1581, 198, 190, 1539, 1538,
	1644, 1474, 1473, 1576, 1633, 1655, 1528, 0, 1665, 240,
	1630, 0, 350, 320, 257, 0, 0, 1524, 1639, 1545,
	1608, 1507, 1580, 1441, 1563, 1660, 1486, 1572, 1661, 0,
	0, 0, 0, 129, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1568, 1652, 1479, 0, 1519, 1577,
	1680, 1412, 1564, 0, 1417, 1428, 1674, 1645, 1470, 1471,
	202, 0, 0, 0, 0, 0, 0, 0, 1522, 1546,
	1598, 1504, 345, 1583, 1593, 1611, 1496, 288, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 1466, 0, 1561,
	0, 0, 0, 1433, 1419, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1518, 0, 0,
	0, 1440, 1410, 1468, 1600, 1411, 1408, 258, 1429, 1613,
	1643, 1505, 231, 0, 1649, 1503, 1502, 1587, 1434, 1623,
	1489, 238, 1432, 154, 1427, 1435, 1487, 269, 1597, 1605,
	0, 157, 1620, 1462, 1478, 191, 0, 298, 1573, 344,
	0, 1554, 297, 241, 337, 1588, 1651, 343, 1490, 327,
	351, 355, 208, 1530, 182, 317, 200, 197, 1469, 1610,
	1416, 216, 287, 194, 234, 1508, 1579, 1463, 187, 1591,
	1562, 1625, 316, 334, 159, 255, 335, 354, 174, 329,
	256, 262, 184, 186, 185, 170, 311, 333, 179, 189,
	1621, 1604, 1627, 1456, 1436, 1447, 1437, 1477, 1653, 226,
	217, 1628, 1626, 348, 0, 307, 306, 1493, 225, 1607,
	0, 0, 294, 0, 232, 162, 1632, 357, 173, 236,
	330, 0, 211, 268, 193, 1575, 277, 1475, 156, 290,
	252, 253, 251, 254, 214, 0, 0, 1603, 292, 309,
	332, 175, 323, 0, 0, 0, 0, 300, 0, 0,
	1659, 246, 204, 207, 219, 229, 1574, 296, 324, 349,
	1565, 171, 164, 326, 342, 180, 308, 310, 356, 1599,
	166, 1647, 1622, 1556, 1511, 1517, 1418, 0, 165, 1595,
	1467, 1482, 1455, 1569, 1454, 213, 1586, 340, 341, 192,
	358, 1430, 1667, 167, 1431, 1666, 265, 272, 264, 1670,
	336, 1648, 1557, 1542, 1540, 1423, 1646, 1555, 1541, 237,
	206, 221, 285, 243, 286, 222, 260, 259, 261, 244,
	1544, 0, 163, 0, 321, 1657, 1682, 325, 177, 1449,
	1614, 331, 218, 291, 178, 212, 205, 284, 263, 172,
	224, 319, 235, 242, 1590, 1679, 276, 299, 181, 346,
	318, 201, 1445, 1448, 1443, 1446, 1444, 1548, 1549, 1662,
	1663, 1664, 1602, 1438, 0, 1640, 1641, 0, 1535, 1650,
	1424, 0, 1618, 0, 0, 1582, 1677, 1495, 188, 0,
	1420, 1421, 1422, 0, 1525, 1526, 0, 0, 1636, 1635,
	1634, 1637, 0, 1671, 1669, 1672, 1439, 1460, 1481, 1531,
	1532, 1534, 1566, 1567, 1612, 1585, 1594, 1527, 281, 1553,
	158, 168, 239, 1678, 293, 210, 1407, 1415, 1442, 1450,
	1451, 1452, 1453, 1458, 1465, 0, 1472, 1480, 1483, 1484,
	1492, 1498, 1499, 1500, 1501, 1510, 1512, 1513, 1514, 1515,
	1516, 1520, 1521, 1523, 1536, 1537, 1543, 1551, 1552, 1559,
	1560, 0, 1589, 1592, 1601, 1606, 1609, 1615, 1617, 1624,
	1629, 1631, 1668, 1676, 1681, 347, 196, 1533, 1558, 1596,
	169, 176, 183, 195, 203, 209, 220, 223, 227, 228,
	230, 233, 245, 247, 248, 249, 250, 266, 267, 270,
	271, 274, 275, 278, 279, 280, 282, 283, 289, 0,
	295, 301, 302, 303, 304, 305, 312, 313, 314, 315,
	322, 338, 339, 352, 353, 1642, 1506, 155, 0, 0,
	161, 328, 0, 0, 0, 0, 1491, 160, 1638, 1673,
	1570, 1584, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 199, 0, 0, 0, 0, 0, 0, 0, 198,
	190, 0, 0, 0, 0, 0, 0, 0, 1993, 1997,
	0, 0, 240, 0, 929, 350, 320, 257, 932, 931,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 925, 0, 0, 0,
	0, 0, 0, 0, 0, 137, 0, 0, 0, 0,
	930, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 0, 0, 0,
	288, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 1996, 231, 153, 0, 0, 0,
	1990, 0, 1991, 1992, 238, 933, 154, 0, 1988, 1995,
	269, 0, 0, 142, 157, 0, 0, 0, 191, 922,
	298, 0, 344, 928, 0, 297, 241, 337, 0, 0,
	343, 0, 327, 351, 355, 208, 0, 182, 317, 200,
	197, 0, 0, 0, 216, 287, 194, 234, 0, 0,
	0, 187, 0, 0, 0, 316, 334, 159, 255, 335,
	354, 174, 329, 256, 262, 184, 186, 185, 170, 311,
	333, 179, 189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 226, 217, 0, 0, 348, 143, 307, 306,
	0, 225, 0, 144, 136, 294, 145, 232, 162, 0,
	357, 173, 236, 330, 927, 211, 268, 193, 0, 277,
	0, 156, 290, 252, 253, 251, 254, 214, 140, 146,
	0, 292, 309, 332, 175, 323, 138, 139, 141, 148,
	300, 149, 150, 0, 246, 204, 207, 219, 229, 0,
	296, 324, 349, 0, 171, 164, 326, 342, 180, 308,
	310, 356, 0, 166, 0, 0, 0, 0, 0, 0,
	0, 165, 0, 0, 0, 0, 0, 0, 213, 0,
	340, 341, 192, 358, 0, 0, 167, 0, 0, 265,
	272, 264, 0, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 206, 221, 285, 243, 286, 222, 260,
	259, 261, 244, 0, 0, 163, 0, 321, 0, 0,
	325, 177, 0, 0, 331, 218, 291, 178, 212, 205,
	284, 263, 172, 224, 319, 235, 242, 0, 0, 276,
	299, 181, 346, 318, 201, 328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 0, 0,
	0, 1141, 0, 0, 0, 199, 151, 152, 0, 0,
	0, 188, 131, 198, 190, 0, 132, 0, 0, 133,
	134, 0, 0, 0, 0, 135, 240, 0, 929, 350,
	320, 257, 932, 931, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 158, 168, 239, 0, 293, 210, 0,
	1142, 0, 1145, 0, 0, 0, 0, 0, 0, 137,
	0, 0, 0, 0, 930, 0, 1137, 1138, 1136, 0,
	0, 0, 0, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 1139, 0, 0, 0, 345,
	0, 0, 0, 0, 288, 215, 0, 0, 347, 196,
	0, 0, 0, 169, 176, 183, 195, 203, 209, 220,
	223, 227, 228, 230, 233, 245, 247, 248, 249, 250,
	266, 267, 270, 271, 274, 275, 278, 279, 280, 282,
	283, 289, 147, 295, 301, 302, 303, 304, 305, 312,
	313, 314, 315, 322, 338, 339, 352, 353, 0, 0,
	155, 0, 0, 161, 0, 0, 0, 0, 0, 0,
	160, 0, 0, 0, 258, 0, 0, 0, 0, 231,
	153, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	154, 0, 0, 0, 269, 0, 0, 142, 157, 0,
	0, 0, 191, 0, 298, 0, 344, 928, 0, 297,
	241, 337, 0, 0, 343, 0, 327, 351, 355, 208,
	0, 182, 317, 200, 197, 0, 0, 0, 216, 287,
	194, 234, 0, 0, 0, 187, 0, 0, 0, 316,
	334, 159, 255, 335, 354, 174, 329, 256, 262, 184,
	186, 185, 170, 311, 333, 179, 189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 217, 0, 0,
	348, 143, 307, 306, 0, 225, 0, 144, 136, 294,
	145, 232, 162, 0, 357, 173, 236, 330, 927, 211,
	268, 193, 0, 277, 0, 156, 290, 252, 253, 251,
	254, 214, 140, 146, 0, 292, 309, 332, 175, 323,
	138, 139, 141, 148, 300, 149, 150, 0, 246, 204,
	207, 219, 229, 0, 296, 324, 349, 0, 171, 164,
	326, 342, 180, 308, 310, 356, 0, 166, 0, 0,
	0, 0, 0, 0, 0, 165, 0, 0, 0, 0,
	0, 0, 213, 0, 340, 341, 192, 358, 0, 0,
	167, 0, 0, 265, 272, 264, 0, 336, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 206, 221, 285,
	243, 286, 222, 260, 259, 261, 244, 0, 0, 163,
	0, 321, 0, 0, 325, 177, 0, 0, 331, 218,
	291, 178, 212, 205, 284, 263, 172, 224, 319, 235,
	242, 0, 0, 276, 299, 181, 346, 318, 201, 328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 199,
	151, 152, 0, 0, 0, 188, 131, 198, 190, 0,
	132, 0, 0, 133, 134, 0, 0, 0, 0, 135,
	240, 0, 929, 350, 320, 257, 932, 931, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 158, 168, 239,
	0, 293, 210, 0, 925, 0, 0, 0, 0, 0,
	0, 0, 0, 137, 0, 0, 0, 0, 930, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 0, 0, 0, 288, 215,
	0, 0, 347, 196, 0, 0, 0, 169, 176, 183,
	195, 203, 209, 220, 223, 227, 228, 230, 233, 245,
	247, 248, 249, 250, 266, 267, 270, 271, 274, 275,
	278, 279, 280, 282, 283, 289, 147, 295, 301, 302,
	303, 304, 305, 312, 313, 314, 315, 322, 338, 339,
	352, 353, 0, 0, 155, 0, 0, 161, 0, 0,
	0, 0, 0, 0, 160, 0, 0, 0, 258, 0,
	0, 0, 0, 231, 153, 0, 0, 0, 0, 0,
	0, 0, 238, 933, 154, 0, 923, 0, 269, 0,
	0, 142, 157, 0, 0, 0, 191, 922, 298, 0,
	344, 928, 0, 297, 241, 337, 0, 0, 343, 0,
	327, 351, 355, 208, 0, 182, 317, 200, 197, 0,
	0, 0, 216, 287, 194, 234, 0, 0, 0, 187,
	0, 0, 0, 316, 334, 159, 255, 335, 354, 174,
	329, 256, 262, 184, 186, 185, 170, 311, 333, 179,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 217, 0, 0, 348, 143, 307, 306, 0, 225,
	0, 144, 136, 294, 145, 232, 162, 0, 357, 173,
	236, 330, 927, 211, 268, 193, 0, 277, 0, 156,
	290, 252, 253, 251, 254, 214, 140, 146, 0, 292,
	309, 332, 175, 323, 138, 139, 141, 148, 300, 149,
	150, 0, 246, 204, 207, 219, 229, 0, 296, 324,
	349, 0, 171, 164, 326, 342, 180, 308, 310, 356,
	0, 166, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 0, 0, 213, 0, 340, 341,
	192, 358, 0, 0, 167, 0, 0, 265, 272, 264,
	0, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 206, 221, 285, 243, 286, 222, 260, 259, 261,
	244, 0, 0, 163, 0, 321, 0, 0, 325, 177,
	0, 0, 331, 218, 291, 178, 212, 205, 284, 263,
	172, 224, 319, 235, 242, 0, 0, 276, 299, 181,
	346, 318, 201, 328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 199, 151, 152, 0, 0, 0, 188,
	131, 198, 190, 0, 132, 0, 0, 133, 134, 0,
	0, 0, 0, 135, 240, 0, 929, 350, 320, 257,
	932, 931, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 158, 168, 239, 0, 293, 210, 0, 1142, 0,
	1145, 0, 0, 0, 0, 0, 0, 137, 0, 0,
	0, 0, 930, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 0, 0,
	0, 0, 288, 215, 0, 0, 347, 196, 0, 0,
	0, 169, 176, 183, 195, 203, 209, 220, 223, 227,
	228, 230, 233, 245, 247, 248, 249, 250, 266, 267,
	270, 271, 274, 275, 278, 279, 280, 282, 283, 289,
	147, 295, 301, 302, 303, 304, 305, 312, 313, 314,
	315, 322, 338, 339, 352, 353, 0, 0, 155, 0,
	0, 161, 0, 0, 0, 0, 0, 0, 160, 0,
	0, 0, 258, 0, 0, 0, 0, 231, 153, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 154, 0,
	0, 0, 269, 0, 0, 142, 157, 0, 0, 0,
	191, 1814, 298, 0, 344, 928, 0, 297, 241, 337,
	0, 0, 343, 0, 327, 351, 355, 208, 0, 182,
	317, 200, 197, 0, 0, 0, 216, 287, 194, 234,
	0, 0, 0, 187, 0, 0, 0, 316, 334, 159,
	255, 335, 354, 174, 329, 256, 262, 184, 186, 185,
	170, 311, 333, 179, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 217, 0, 0, 348, 143,
	307, 306, 0, 225, 0, 144, 136, 294, 145, 232,
	162, 0, 357, 173, 236, 330, 927, 211, 268, 193,
	0, 277, 0, 156, 290, 252, 253, 251, 254, 214,
	140, 146, 0, 292, 309, 332, 175, 323, 138, 139,
	141, 148, 300, 149, 150, 0, 246, 204, 207, 219,
	229, 0, 296, 324, 349, 0, 171, 164, 326, 342,
	180, 308, 310, 356, 0, 166, 0, 0, 0, 0,
	0, 0, 0, 165, 0, 0, 0, 0, 0, 0,
	213, 0, 340, 341, 192, 358, 0, 0, 167, 0,
	0, 265, 272, 264, 0, 336, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 206, 221, 285, 243, 286,
	222, 260, 259, 261, 244, 0, 0, 163, 0, 321,
	0, 0, 325, 177, 0, 0, 331, 218, 291, 178,
	212, 205, 284, 263, 172, 224, 319, 235, 242, 0,
	0, 276, 299, 181, 346, 318, 201, 328, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 199, 151, 152,
	0, 0, 0, 188, 131, 198, 190, 0, 132, 0,
	0, 133, 134, 0, 0, 0, 0, 135, 240, 0,
	929, 350, 320, 257, 932, 931, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 158, 168, 239, 0, 293,
	210, 0, 2688, 0, 0, 0, 0, 0, 0, 0,
	0, 137, 0, 0, 0, 0, 930, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 0, 0, 0, 288, 215, 0, 0,
	347, 196, 0, 0, 0, 169, 176, 183, 195, 203,
	209, 220, 223, 227, 228, 230, 233, 245, 247, 248,
	249, 250, 266, 267, 270, 271, 274, 275, 278, 279,
	280, 282, 283, 289, 147, 295, 301, 302, 303, 304,
	305, 312, 313, 314, 315, 322, 338, 339, 352, 353,
	0, 0, 155, 0, 0, 161, 0, 0, 0, 0,
	0, 0, 160, 0, 0, 0, 258, 0, 0, 0,
	0, 231, 153, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 154, 0, 0, 0, 269, 0, 0, 142,
	157, 0, 0, 0, 191, 0, 298, 0, 344, 928,
	0, 297, 241, 337, 0, 0, 343, 0, 327, 351,
	355, 208, 0, 182, 317, 200, 197, 0, 0, 0,
	216, 287, 194, 234, 0, 0, 0, 187, 0, 0,
	0, 316, 334, 159, 255, 335, 354, 174, 329, 256,
	262, 184, 186, 185, 170, 311, 333, 179, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 217,
	0, 0, 348, 143, 307, 306, 0, 225, 0, 144,
	136, 294, 145, 232, 162, 0, 357, 173, 236, 330,
	927, 211, 268, 193, 0, 277, 0, 156, 290, 252,
	253, 251, 254, 214, 140, 146, 0, 292, 309, 332,
	175, 323, 138, 139, 141, 148, 300, 149, 150, 0,
	246, 204, 207, 219, 229, 0, 296, 324, 349, 0,
	171, 164, 326, 342, 180, 308, 310, 356, 0, 166,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 0, 213, 0, 340, 341, 192, 358,
	0, 0, 167, 0, 0, 265, 272, 264, 0, 336,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 206,
	221, 285, 243, 286, 222, 260, 259, 261, 244, 0,
	0, 163, 0, 321, 0, 0, 325, 177, 0, 0,
	331, 218, 291, 178, 212, 205, 284, 263, 172, 224,
	319, 235, 242, 0, 0, 276, 299, 181, 346, 318,
	201, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 199, 151, 152, 0, 0, 0, 188, 131, 198,
	190, 0, 132, 0, 0, 133, 134, 0, 0, 0,
	0, 135, 240, 0, 929, 350, 320, 257, 932, 931,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 158,
	168, 239, 0, 293, 210, 0, 2683, 0, 0, 0,
	0, 0, 0, 0, 0, 137, 0, 0, 0, 0,
	930, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 0, 0, 0,
	288, 215, 0, 0, 347, 196, 0, 0, 0, 169,
	176, 183, 195, 203, 209, 220, 223, 227, 228, 230,
	233, 245, 247, 248, 249, 250, 266, 267, 270, 271,
	274, 275, 278, 279, 280, 282, 283, 289, 147, 295,
	301, 302, 303, 304, 305, 312, 313, 314, 315, 322,
	338, 339, 352, 353, 0, 0, 155, 0, 0, 161,
	0, 0, 0, 0, 0, 0, 160, 0, 0, 0,
	258, 0, 0, 0, 0, 231, 153, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 154, 0, 0, 0,
	269, 0, 0, 142, 157, 0, 0, 0, 191, 0,
	298, 0, 344, 928, 0, 297, 241, 337, 0, 0,
	343, 0, 327, 351, 355, 208, 0, 182, 317, 200,
	197, 0, 0, 0, 216, 287, 194, 234, 0, 0,
	0, 187, 0, 0, 0, 316, 334, 159, 255, 335,
	354, 174, 329, 256, 262, 184, 186, 185, 170, 311,
	333, 179, 189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 226, 217, 0, 0, 348, 143, 307, 306,
	0, 225, 0, 144, 136, 294, 145, 232, 162, 0,
	357, 173, 236, 330, 927, 211, 268, 193, 0, 277,
	0, 156, 290, 252, 253, 251, 254, 214, 140, 146,
	0, 292, 309, 332, 175, 323, 138, 139, 141, 148,
	300, 149, 150, 0, 246, 204, 207, 219, 229, 0,
	296, 324, 349, 0, 171, 164, 326, 342, 180, 308,
	310, 356, 0, 166, 0, 0, 0, 0, 0, 0,
	0, 165, 0, 0, 0, 0, 0, 0, 213, 0,
	340, 341, 192, 358, 0, 0, 167, 0, 0, 265,
	272, 264, 0, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 206, 221, 285, 243, 286, 222, 260,
	259, 261, 244, 0, 0, 163, 0, 321, 0, 0,
	325, 177, 0, 0, 331, 218, 291, 178, 212, 205,
	284, 263, 172, 224, 319, 235, 242, 0, 0, 276,
	299, 181, 346, 318, 201, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 151, 152, 0, 0,
	0, 188, 131, 0, 0, 0, 132, 0, 0, 133,
	134, 0, 0, 0, 0, 135, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 158, 168, 239, 0, 293, 210, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 347, 196,
	0, 0, 0, 169, 176, 183, 195, 203, 209, 220,
	223, 227, 228, 230, 233, 245, 247, 248, 249, 250,
	266, 267, 270, 271, 274, 275, 278, 279, 280, 282,
	283, 289, 147, 295, 301, 302, 303, 304, 305, 312,
	313, 314, 315, 322, 338, 339, 352, 353, 0, 0,
	155, 36, 328, 161, 0, 0, 0, 0, 0, 0,
	160, 0, 0, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 199, 0, 0, 0, 0, 0, 0, 0,
	198, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2269, 240, 0, 0, 350, 320, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 77, 0, 0, 0, 1948, 0, 0,
	0, 0, 0, 0, 0, 0, 137, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	0, 288, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 231, 153, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 154, 0, 0,
	0, 269, 0, 0, 142, 157, 0, 0, 0, 191,
	0, 298, 0, 344, 0, 0, 297, 241, 337, 0,
	0, 343, 0, 327, 351, 355, 208, 0, 182, 317,
	200, 197, 0, 0, 0, 216, 287, 194, 234, 0,
	0, 0, 187, 0, 0, 0, 316, 334, 159, 255,
	335, 354, 174, 329, 256, 262, 184, 186, 185, 170,
	311, 333, 179, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 217, 0, 0, 348, 143, 307,
	306, 0, 225, 0, 144, 136, 294, 145, 232, 162,
	0, 357, 173, 236, 330, 128, 211, 268, 193, 0,
	277, 0, 156, 290, 252, 253, 251, 254, 214, 140,
	146, 0, 292, 309, 332, 175, 323, 138, 139, 141,
	148, 300, 149, 150, 0, 246, 204, 207, 219, 229,
	0, 296, 324, 349, 0, 171, 164, 326, 342, 180,
	308, 310, 356, 0, 166, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 0, 213,
	0, 340, 341, 192, 358, 0, 0, 167, 0, 0,
	265, 272, 264, 0, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 206, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 0, 0, 163, 0, 321, 0,
	0, 325, 177, 0, 0, 331, 218, 291, 178, 212,
	205, 284, 263, 172, 224, 319, 235, 242, 0, 0,
	276, 299, 181, 346, 318, 201, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 151, 152, 0,
	0, 0, 188, 131, 0, 0, 0, 132, 0, 0,
	133, 134, 0, 0, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1949, 281, 0, 158, 168, 239, 462, 293, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	196, 0, 0, 0, 169, 176, 183, 195, 203, 209,
	220, 223, 227, 228, 230, 233, 245, 247, 248, 249,
	250, 266, 267, 270, 271, 274, 275, 278, 279, 280,
	282, 283, 289, 147, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 328,
	0, 155, 0, 0, 161, 0, 0, 0, 0, 0,
	273, 160, 0, 0, 0, 0, 0, 0, 0, 199,
	0, 0, 0, 0, 0, 0, 0, 198, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 350, 320, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	77, 0, 0, 0, 1948, 0, 0, 0, 0, 0,
	0, 0, 0, 137, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 0, 0, 0, 288, 215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 231, 153, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 154, 0, 0, 0, 269, 0,
	0, 142, 157, 0, 0, 0, 191, 0, 298, 0,
	344, 0, 0, 297, 241, 337, 0, 0, 343, 0,
	327, 351, 355, 208, 0, 182, 317, 200, 197, 0,
	0, 0, 216, 287, 194, 234, 0, 0, 0, 187,
	0, 0, 0, 316, 334, 159, 255, 335, 354, 174,
	329, 256, 262, 184, 186, 185, 170, 311, 333, 179,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 217, 0, 0, 348, 143, 307, 306, 0, 225,
	0, 144, 136, 294, 145, 232, 162, 0, 357, 173,
	236, 330, 128, 211, 268, 193, 0, 277, 0, 156,
	290, 252, 253, 251, 254, 214, 140, 146, 0, 292,
	309, 332, 175, 323, 138, 139, 141, 148, 300, 149,
	150, 0, 246, 204, 207, 219, 229, 0, 296, 324,
	349, 0, 171, 164, 326, 342, 180, 308, 310, 356,
	0, 166, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 0, 0, 213, 0, 340, 341,
	192, 358, 0, 0, 167, 0, 0, 265, 272, 264,
	0, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 206, 221, 285, 243, 286, 222, 260, 259, 261,
	244, 0, 0, 163, 0, 321, 0, 0, 325, 177,
	0, 0, 331, 218, 291, 178, 212, 205, 284, 263,
	172, 224, 319, 235, 242, 0, 0, 276, 299, 181,
	346, 318, 201, 328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 199, 151, 152, 0, 0, 0, 188,
	131, 198, 190, 0, 132, 0, 0, 133, 134, 0,
	0, 0, 0, 135, 240, 0, 0, 350, 320, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 1949, 281,
	0, 158, 168, 239, 0, 293, 210, 0, 129, 0,
	0, 0, 0, 0, 0, 0, 0, 137, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 0, 0,
	0, 0, 288, 215, 0, 0, 347, 196, 0, 0,
	0, 169, 176, 183, 195, 203, 209, 220, 223, 227,
	228, 230, 233, 245, 247, 248, 249, 250, 266, 267,
	270, 271, 274, 275, 278, 279, 280, 282, 283, 289,
	147, 295, 301, 302, 303, 304, 305, 312, 313, 314,
	315, 322, 338, 339, 352, 353, 0, 0, 155, 0,
	0, 161, 0, 0, 0, 0, 0, 0, 160, 0,
	0, 0, 258, 0, 0, 0, 0, 231, 153, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 154, 0,
	0, 0, 269, 0, 0, 142, 157, 0, 0, 0,
	191, 0, 298, 0, 344, 2072, 0, 297, 241, 337,
	0, 0, 343, 0, 327, 351, 355, 208, 0, 182,
	317, 200, 197, 0, 0, 0, 216, 287, 194, 234,
	0, 0, 0, 187, 0, 0, 0, 316, 334, 159,
	255, 335, 354, 174, 329, 256, 262, 184, 186, 185,
	170, 311, 333, 179, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 217, 0, 0, 348, 143,
	307, 306, 0, 225, 0, 144, 136, 294, 145, 232,
	162, 0, 357, 173, 236, 330, 128, 211, 268, 193,
	0, 277, 0, 156, 290, 252, 253, 251, 254, 214,
	140, 146, 0, 292, 309, 332, 175, 323, 138, 139,
	141, 148, 300, 149, 150, 0, 246, 204, 207, 219,
	229, 0, 296, 324, 349, 0, 171, 164, 326, 342,
	180, 308, 310, 356, 0, 166, 0, 0, 0, 0,
	0, 0, 0, 165, 0, 0, 0, 0, 0, 0,
	213, 0, 340, 341, 192, 358, 0, 0, 167, 0,
	0, 265, 272, 264, 0, 336, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 206, 221, 285, 243, 286,
	222, 260, 259, 261, 244, 0, 0, 163, 0, 321,
	0, 0, 325, 177, 0, 0, 331, 218, 291, 178,
	212, 205, 284, 263, 172, 224, 319, 235, 242, 0,
	0, 276, 299, 181, 346, 318, 201, 328, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 199, 151, 152,
	0, 0, 0, 188, 131, 198, 190, 0, 132, 0,
	0, 133, 134, 0, 0, 0, 0, 135, 240, 0,
	0, 350, 320, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 158, 168, 239, 0, 293,
	210, 0, 129, 0, 0, 0, 0, 0, 0, 0,
	0, 137, 0, 0, 0, 0, 0, 1935, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 0, 0, 0, 288, 215, 0, 0,
	347, 196, 0, 0, 0, 169, 176, 183, 195, 203,
	209, 220, 223, 227, 228, 230, 233, 245, 247, 248,
	249, 250, 266, 267, 270, 271, 274, 275, 278, 279,
	280, 282, 283, 289, 147, 295, 301, 302, 303, 304,
	305, 312, 313, 314, 315, 322, 338, 339, 352, 353,
	0, 0, 155, 0, 0, 161, 0, 0, 0, 0,
	0, 0, 160, 0, 0, 0, 258, 0, 0, 0,
	0, 231, 153, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 154, 0, 0, 0, 269, 0, 0, 142,
	157, 0, 0, 0, 191, 0, 298, 0, 344, 0,
	0, 297, 241, 337, 0, 0, 343, 0, 327, 351,
	355, 208, 0, 182, 317, 200, 197, 0, 0, 0,
	216, 287, 194, 234, 0, 0, 0, 187, 0, 0,
	0, 316, 334, 159, 255, 335, 354, 174, 329, 256,
	262, 184, 186, 185, 170, 311, 333, 179, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 217,
	0, 0, 348, 143, 307, 306, 0, 225, 0, 144,
	136, 294, 145, 232, 162, 0, 357, 173, 236, 330,
	128, 211, 268, 193, 0, 277, 0, 156, 290, 252,
	253, 251, 254, 214, 140, 146, 0, 292, 309, 332,
	175, 323, 138, 139, 141, 148, 300, 149, 150, 0,
	246, 204, 207, 219, 229, 0, 296, 324, 349, 0,
	171, 164, 326, 342, 180, 308, 310, 356, 0, 166,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 0, 213, 0, 340, 341, 192, 358,
	0, 0, 167, 0, 0, 265, 272, 264, 0, 336,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 206,
	221, 285, 243, 286, 222, 260, 259, 261, 244, 0,
	0, 163, 0, 321, 0, 0, 325, 177, 0, 0,
	331, 218, 291, 178, 212, 205, 284, 263, 172, 224,
	319, 235, 242, 0, 0, 276, 299, 181, 346, 318,
	201, 328, 0, 0, 0, 1272, 0, 0, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 199, 151, 152, 0, 0, 0, 188, 131, 198,
	190, 0, 132, 0, 0, 133, 134, 0, 0, 0,
	0, 135, 240, 0, 0, 350, 320, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 158,
	168, 239, 0, 293, 210, 0, 129, 0, 0, 0,
	0, 0, 0, 0, 0, 137, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 0, 0, 0,
	288, 215, 0, 0, 347, 196, 0, 0, 0, 169,
	176, 183, 195, 203, 209, 220, 223, 227, 228, 230,
	233, 245, 247, 248, 249, 250, 266, 267, 270, 271,
	274, 275, 278, 279, 280, 282, 283, 289, 147, 295,
	301, 302, 303, 304, 305, 312, 313, 314, 315, 322,
	338, 339, 352, 353, 0, 0, 155, 0, 0, 161,
	0, 0, 0, 0, 0, 0, 160, 0, 0, 0,
	258, 0, 0, 0, 0, 231, 153, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 154, 0, 0, 0,
	269, 0, 0, 142, 157, 0, 0, 0, 191, 0,
	298, 0, 344, 0, 0, 297, 241, 337, 0, 0,
	343, 0, 327, 351, 355, 208, 0, 182, 317, 200,
	197, 0, 0, 0, 216, 287, 194, 234, 0, 0,
	0, 187, 0, 0, 0, 316, 334, 159, 255, 335,
	354, 174, 329, 256, 262, 184, 186, 185, 170, 311,
	333, 179, 189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 226, 217, 0, 0, 348, 143, 307, 306,
	0, 225, 0, 144, 136, 294, 145, 232, 162, 0,
	357, 173, 236, 330, 128, 211, 268, 193, 0, 277,
	0, 156, 290, 252, 253, 251, 254, 214, 140, 146,
	0, 292, 309, 332, 175, 323, 138, 139, 141, 148,
	300, 149, 150, 0, 246, 204, 207, 219, 229, 0,
	296, 324, 349, 0, 171, 164, 326, 342, 180, 308,
	310, 356, 0, 166, 0, 0, 0, 0, 0, 0,
	0, 165, 0, 0, 0, 0, 0, 0, 213, 0,
	340, 341, 192, 358, 0, 0, 167, 0, 0, 265,
	272, 264, 0, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 206, 221, 285, 243, 286, 222, 260,
	259, 261, 244, 0, 0, 163, 0, 321, 0, 0,
	325, 177, 0, 0, 331, 218, 291, 178, 212, 205,
	284, 263, 172, 224, 319, 235, 242, 0, 0, 276,
	299, 181, 346, 318, 201, 328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 199, 151, 152, 0, 0,
	0, 188, 131, 198, 190, 0, 132, 0, 0, 133,
	134, 0, 0, 0, 0, 135, 240, 0, 0, 350,
	320, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 158, 168, 239, 0, 293, 210, 0,
	129, 0, 0, 0, 0, 0, 0, 0, 0, 137,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	0, 0, 0, 0, 288, 215, 0, 0, 347, 196,
	0, 0, 0, 169, 176, 183, 195, 203, 209, 220,
	223, 227, 228, 230, 233, 245, 247, 248, 249, 250,
	266, 267, 270, 271, 274, 275, 278, 279, 280, 282,
	283, 289, 147, 295, 301, 302, 303, 304, 305, 312,
	313, 314, 315, 322, 338, 339, 352, 353, 0, 0,
	155, 0, 0, 161, 0, 0, 0, 0, 0, 0,
	160, 0, 0, 0, 258, 0, 0, 123, 0, 231,
	153, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	154, 0, 0, 0, 269, 0, 0, 142, 157, 0,
	0, 0, 191, 0, 298, 0, 344, 0, 0, 297,
	241, 337, 0, 0, 343, 0, 327, 351, 355, 208,
	0, 182, 317, 200, 197, 0, 0, 0, 216, 287,
	194, 234, 0, 0, 0, 187, 0, 0, 0, 316,
	334, 159, 255, 335, 354, 174, 329, 256, 262, 184,
	186, 185, 170, 311, 333, 179, 189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 217, 0, 0,
	348, 143, 307, 306, 0, 225, 0, 144, 136, 294,
	145, 232, 162, 0, 357, 173, 236, 330, 128, 211,
	268, 193, 0, 277, 0, 156, 290, 252, 253, 251,
	254, 214, 140, 146, 0, 292, 309, 332, 175, 323,
	138, 139, 141, 148, 300, 149, 150, 0, 246, 204,
	207, 219, 229, 0, 296, 324, 349, 0, 171, 164,
	326, 342, 180, 308, 310, 356, 0, 166, 0, 0,
	0, 0, 0, 0, 0, 165, 0, 0, 0, 0,
	0, 0, 213, 0, 340, 341, 192, 358, 0, 0,
	167, 0, 0, 265, 272, 264, 0, 336, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 206, 221, 285,
	243, 286, 222, 260, 259, 261, 244, 0, 0, 163,
	0, 321, 0, 0, 325, 177, 0, 0, 331, 218,
	291, 178, 212, 205, 284, 263, 172, 224, 319, 235,
	242, 0, 0, 276, 299, 181, 346, 318, 201, 328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 199,
	151, 152, 0, 0, 0, 188, 131, 198, 190, 0,
	132, 0, 0, 133, 134, 0, 0, 0, 0, 135,
	240, 0, 0, 350, 320, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 158, 168, 239,
	0, 293, 210, 0, 129, 0, 0, 0, 0, 0,
	0, 0, 0, 137, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 0, 0, 0, 288, 215,
	0, 0, 347, 196, 0, 0, 0, 169, 176, 183,
	195, 203, 209, 220, 223, 227, 228, 230, 233, 245,
	247, 248, 249, 250, 266, 267, 270, 271, 274, 275,
	278, 279, 280, 282, 283, 289, 147, 295, 301, 302,
	303, 304, 305, 312, 313, 314, 315, 322, 338, 339,
	352, 353, 0, 0, 155, 0, 0, 161, 0, 0,
	0, 0, 0, 0, 160, 0, 0, 0, 258, 0,
	0, 0, 0, 231, 153, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 154, 0, 0, 0, 269, 0,
	0, 142, 157, 0, 0, 0, 191, 0, 298, 0,
	344, 0, 0, 297, 241, 337, 0, 0, 343, 0,
	327, 351, 355, 208, 0, 182, 317, 200, 197, 0,
	0, 0, 216, 287, 194, 234, 0, 0, 0, 187,
	0, 0, 0, 316, 334, 159, 255, 335, 354, 174,
	329, 256, 262, 184, 186, 185, 170, 311, 333, 179,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 217, 0, 0, 348, 143, 307, 306, 0, 225,
	0, 144, 136, 294, 145, 232, 162, 0, 357, 173,
	236, 330, 128, 211, 268, 193, 0, 277, 0, 156,
	290, 252, 253, 251, 254, 214, 140, 146, 0, 292,
	309, 332, 175, 323, 138, 139, 141, 148, 300, 149,
	150, 0, 246, 204, 207, 219, 229, 0, 296, 324,
	349, 0, 171, 164, 326, 342, 180, 308, 310, 356,
	0, 166, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 0, 0, 213, 0, 340, 341,
	192, 358, 0, 0, 167, 0, 0, 265, 272, 264,
	0, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 206, 221, 285, 243, 286, 222, 260, 259, 261,
	244, 0, 0, 163, 0, 321, 0, 0, 325, 177,
	0, 0, 331, 218, 291, 178, 212, 205, 284, 263,
	172, 224, 319, 235, 242, 0, 0, 276, 299, 181,
	346, 318, 201, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 151, 152, 0, 0, 0, 188,
	131, 0, 0, 0, 132, 0, 0, 133, 134, 0,
	0, 0, 0, 135, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 158, 168, 239, 0, 293, 210, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 347, 196, 0, 0,
	0, 169, 176, 183, 195, 203, 209, 220, 223, 227,
	228, 230, 233, 245, 247, 248, 249, 250, 266, 267,
	270, 271, 274, 275, 278, 279, 280, 282, 283, 289,
	147, 295, 301, 302, 303, 304, 305, 312, 313, 314,
	315, 322, 338, 339, 352, 353, 0, 0, 155, 0,
	0, 161, 428, 328, 422, 433, 416, 0, 160, 0,
	0, 0, 0, 0, 273, 0, 0, 439, 0, 0,
	0, 0, 0, 199, 0, 0, 423, 0, 0, 0,
	0, 198, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 350, 320, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 437, 0,
	436, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 0, 0,
	0, 0, 288, 215, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 415, 414, 417, 0,
	0, 0, 258, 0, 0, 0, 421, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 154, 0,
	0, 0, 269, 425, 0, 0, 157, 429, 0, 0,
	191, 0, 298, 0, 344, 0, 0, 297, 241, 337,
	0, 432, 343, 0, 327, 351, 355, 208, 0, 182,
	317, 200, 197, 0, 0, 0, 216, 287, 194, 234,
	0, 0, 0, 187, 0, 0, 0, 316, 334, 159,
	255, 335, 354, 174, 329, 256, 262, 184, 186, 185,
	170, 311, 333, 179, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 217, 0, 0, 348, 0,
	307, 306, 0, 225, 0, 0, 0, 294, 0, 232,
	162, 0, 357, 173, 236, 330, 0, 211, 268, 193,
	0, 277, 0, 156, 290, 252, 253, 251, 254, 214,
	0, 0, 0, 442, 309, 332, 175, 323, 418, 419,
	420, 426, 427, 430, 431, 434, 246, 204, 207, 219,
	229, 0, 296, 324, 349, 0, 171, 164, 326, 342,
	180, 308, 310, 356, 0, 166, 0, 0, 0, 0,
	0, 0, 0, 165, 0, 0, 0, 0, 0, 0,
	213, 0, 340, 341, 192, 358, 0, 0, 167, 0,
	0, 265, 272, 264, 0, 336, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 206, 221, 285, 243, 286,
	222, 260, 259, 261, 244, 0, 0, 163, 0, 321,
	0, 0, 325, 177, 0, 0, 331, 218, 291, 178,
	212, 205, 284, 263, 172, 224, 319, 235, 242, 0,
	0, 276, 299, 181, 346, 318, 201, 0, 0, 0,
	0, 0, 0, 428, 328, 422, 433, 416, 0, 0,
	0, 0, 0, 0, 0, 273, 0, 0, 408, 0,
	0, 0, 0, 188, 199, 0, 0, 423, 0, 0,
	0, 0, 198, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 350, 320,
	257, 0, 0, 281, 0, 158, 168, 239, 0, 293,
	210, 0, 0, 0, 0, 0, 0, 0, 0, 437,
	0, 436, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	347, 196, 0, 288, 215, 169, 176, 183, 195, 203,
	209, 220, 223, 227, 228, 230, 233, 245, 247, 248,
	249, 250, 266, 267, 270, 271, 274, 275, 278, 279,
	280, 282, 283, 289, 424, 295, 301, 302, 303, 304,
	305, 312, 313, 314, 315, 322, 338, 339, 352, 353,
	0, 0, 155, 0, 0, 161, 0, 0, 0, 0,
	0, 0, 160, 0, 0, 0, 0, 415, 414, 417,
	0, 0, 0, 258, 0, 0, 0, 421, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 154,
	0, 0, 0, 269, 425, 0, 0, 157, 429, 0,
	0, 191, 0, 298, 0, 344, 0, 0, 297, 241,
	337, 0, 432, 343, 0, 327, 351, 355, 208, 0,
	182, 317, 200, 197, 0, 0, 0, 216, 287, 194,
	234, 0, 0, 0, 187, 0, 0, 0, 316, 334,
	159, 255, 335, 354, 174, 329, 256, 262, 184, 186,
	185, 170, 311, 333, 179, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 217, 0, 0, 348,
	0, 307, 306, 0, 225, 0, 0, 0, 294, 0,
	232, 162, 0, 357, 173, 236, 330, 0, 211, 268,
	193, 0, 277, 0, 156, 290, 252, 253, 251, 254,
	214, 0, 0, 0, 411, 309, 332, 175, 323, 418,
	419, 420, 426, 427, 430, 431, 434, 246, 204, 207,
	219, 229, 0, 296, 324, 349, 0, 171, 164, 326,
	342, 180, 308, 310, 356, 0, 166, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 0, 0, 0, 0,
	0, 213, 0, 340, 341, 192, 358, 0, 0, 167,
	0, 0, 265, 272, 264, 0, 336, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 206, 221, 285, 243,
	286, 222, 260, 259, 261, 244, 0, 0, 163, 0,
	321, 0, 0, 325, 177, 0, 0, 331, 218, 291,
	178, 212, 205, 284, 263, 172, 224, 319, 235, 242,
	0, 0, 276, 299, 181, 346, 318, 201, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 188, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 158, 168, 239, 0,
	293, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 196, 0, 0, 0, 169, 176, 183, 195,
	203, 209, 220, 223, 227, 228, 230, 233, 245, 247,
	248, 249, 250, 266, 267, 270, 271, 274, 275, 278,
	279, 280, 282, 283, 289, 424, 295, 301, 302, 303,
	304, 305, 312, 313, 314, 315, 322, 338, 339, 352,
	353, 328, 0, 155, 0, 0, 161, 0, 0, 0,
	0, 0, 273, 160, 0, 0, 0, 0, 0, 0,
	0, 199, 0, 0, 0, 0, 0, 0, 0, 198,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 350, 320, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 925, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 0, 0, 0,
	288, 215, 1157, 1156, 1166, 1167, 1159, 1160, 1161, 1162,
	1163, 1164, 1165, 1158, 0, 0, 1168, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 154, 0, 0, 0,
	269, 0, 0, 0, 157, 0, 0, 0, 191, 0,
	298, 0, 344, 0, 0, 297, 241, 337, 0, 0,
	343, 0, 327, 351, 355, 208, 0, 182, 317, 200,
	197, 0, 0, 0, 216, 287, 194, 234, 0, 0,
	0, 187, 0, 0, 0, 316, 334, 159, 255, 335,
	354, 174, 329, 256, 262, 184, 186, 185, 170, 311,
	333, 179, 189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 226, 217, 0, 0, 348, 0, 307, 306,
	0, 225, 0, 0, 0, 294, 0, 232, 162, 0,
	357, 173, 236, 330, 0, 211, 268, 193, 0, 277,
	0, 156, 290, 252, 253, 251, 254, 214, 0, 0,
	0, 292, 309, 332, 175, 323, 0, 0, 0, 0,
	300, 0, 0, 0, 246, 204, 207, 219, 229, 0,
	296, 324, 349, 0, 171, 164, 326, 342, 180, 308,
	310, 356, 0, 166, 0, 0, 0, 0, 0, 0,
	0, 165, 0, 0, 0, 0, 0, 0, 213, 0,
	340, 341, 192, 358, 0, 0, 167, 0, 0, 265,
	272, 264, 0, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 206, 221, 285, 243, 286, 222, 260,
	259, 261, 244, 0, 0, 163, 0, 321, 0, 0,
	325, 177, 0, 0, 331, 218, 291, 178, 212, 205,
	284, 263, 172, 224, 319, 235, 242, 0, 0, 276,
	299, 181, 346, 318, 201, 0, 0, 0, 0, 0,
	0, 0, 328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 0, 0, 0, 2274, 0,
	0, 188, 199, 0, 0, 0, 0, 0, 0, 0,
	198, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 350, 320, 257, 0,
	0, 281, 0, 158, 168, 239, 0, 293, 210, 2276,
	2278, 0, 0, 0, 0, 0, 0, 129, 0, 454,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 2272, 347, 196,
	0, 288, 215, 169, 176, 183, 195, 203, 209, 220,
	223, 227, 228, 230, 233, 245, 247, 248, 249, 250,
	266, 267, 270, 271, 274, 275, 278, 279, 280, 282,
	283, 289, 0, 295, 301, 302, 303, 304, 305, 312,
	313, 314, 315, 322, 338, 339, 352, 353, 0, 0,
	155, 0, 0, 161, 0, 0, 0, 0, 0, 0,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 231, 0, 0, 2277,
	0, 0, 0, 0, 0, 238, 0, 154, 0, 0,
	0, 269, 0, 0, 0, 157, 0, 0, 0, 191,
	0, 298, 0, 344, 0, 0, 297, 241, 337, 0,
	0, 343, 0, 327, 351, 355, 208, 0, 182, 317,
	200, 197, 0, 0, 0, 216, 287, 194, 234, 0,
	0, 0, 187, 0, 0, 0, 316, 334, 159, 255,
	335, 354, 174, 329, 256, 262, 184, 186, 185, 170,
	311, 333, 179, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 217, 0, 0, 348, 0, 307,
	306, 0, 225, 0, 0, 0, 294, 0, 232, 162,
	0, 357, 173, 236, 330, 0, 211, 268, 193, 0,
	277, 0, 156, 290, 252, 253, 251, 254, 214, 0,
	0, 0, 292, 309, 332, 175, 323, 0, 0, 0,
	0, 300, 0, 0, 0, 246, 204, 207, 219, 229,
	0, 296, 324, 349, 0, 171, 164, 326, 342, 180,
	308, 310, 356, 0, 166, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 0, 213,
	0, 340, 341, 192, 358, 0, 0, 167, 0, 0,
	265, 272, 264, 0, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 206, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 0, 0, 163, 0, 321, 0,
	0, 325, 177, 0, 0, 331, 218, 291, 178, 212,
	205, 284, 263, 172, 224, 319, 235, 242, 0, 0,
	276, 299, 181, 346, 318, 201, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 188, 131, 0, 0, 0, 132, 0, 0,
	133, 134, 0, 0, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 158, 168, 239, 0, 293, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	196, 0, 0, 0, 169, 176, 183, 195, 203, 209,
	220, 223, 227, 228, 230, 233, 245, 247, 248, 249,
	250, 266, 267, 270, 271, 274, 275, 278, 279, 280,
	282, 283, 289, 0, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 328,
	0, 155, 0, 0, 161, 0, 0, 0, 0, 0,
	273, 160, 0, 0, 0, 2274, 0, 0, 0, 199,
	0, 0, 0, 0, 0, 0, 0, 198, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 350, 320, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2276, 2278, 0, 0,
	0, 0, 0, 0, 129, 0, 454, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 0, 0, 0, 288, 215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 231, 0, 0, 2277, 0, 0, 0,
	0, 0, 238, 0, 154, 0, 0, 0, 269, 0,
	0, 0, 157, 0, 0, 0, 191, 0, 298, 0,
	344, 0, 0, 297, 241, 337, 0, 0, 343, 0,
	327, 351, 355, 208, 0, 182, 317, 200, 197, 0,
	0, 0, 216, 287, 194, 234, 0, 0, 0, 187,
	0, 0, 0, 316, 334, 159, 255, 335, 354, 174,
	329, 256, 262, 184, 186, 185, 170, 311, 333, 179,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 217, 0, 0, 348, 0, 307, 306, 0, 225,
	0, 0, 0, 294, 0, 232, 162, 0, 357, 173,
	236, 330, 0, 211, 268, 193, 0, 277, 0, 156,
	290, 252, 253, 251, 254, 214, 0, 0, 0, 292,
	309, 332, 175, 323, 0, 0, 0, 0, 300, 0,
	0, 0, 246, 204, 207, 219, 229, 0, 296, 324,
	349, 0, 171, 164, 326, 342, 180, 308, 310, 356,
	0, 166, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 0, 0, 213, 0, 340, 341,
	192, 358, 0, 0, 167, 0, 0, 265, 272, 264,
	0, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 206, 221, 285, 243, 286, 222, 260, 259, 261,
	244, 0, 0, 163, 0, 321, 0, 0, 325, 177,
	0, 0, 331, 218, 291, 178, 212, 205, 284, 263,
	172, 224, 319, 235, 242, 0, 0, 276, 299, 181,
	346, 318, 201, 328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 199, 0, 0, 0, 0, 0, 188,
	131, 198, 190, 0, 132, 0, 0, 133, 134, 0,
	0, 0, 0, 135, 240, 0, 0, 350, 320, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 158, 168, 239, 0, 293, 210, 0, 129, 0,
	454, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 0, 0,
	0, 0, 288, 215, 0, 0, 347, 196, 0, 0,
	0, 169, 176, 183, 195, 203, 209, 220, 223, 227,
	228, 230, 233, 245, 247, 248, 249, 250, 266, 267,
	270, 271, 274, 275, 278, 279, 280, 282, 283, 289,
	0, 295, 301, 302, 303, 304, 305, 312, 313, 314,
	315, 322, 338, 339, 352, 353, 0, 0, 155, 0,
	0, 161, 0, 0, 0, 0, 0, 0, 160, 0,
	0, 0, 258, 0, 0, 0, 0, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 154, 0,
	0, 0, 269, 0, 0, 0, 157, 0, 0, 0,
	191, 0, 298, 0, 344, 0, 0, 297, 241, 337,
	0, 0, 343, 0, 327, 351, 355, 208, 0, 182,
	317, 200, 197, 0, 0, 0, 216, 287, 194, 234,
	0, 0, 0, 187, 0, 0, 0, 316, 334, 159,
	255, 335, 354, 174, 329, 256, 262, 184, 186, 185,
	170, 311, 333, 179, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 217, 0, 0, 348, 0,
	307, 306, 0, 225, 0, 0, 0, 294, 0, 232,
	162, 0, 357, 173, 236, 330, 0, 211, 268, 193,
	0, 277, 0, 156, 290, 252, 253, 251, 254, 214,
	0, 0, 0, 292, 309, 332, 175, 323, 0, 0,
	0, 0, 300, 0, 0, 0, 246, 204, 207, 219,
	229, 0, 296, 324, 349, 0, 171, 164, 326, 342,
	180, 308, 310, 356, 0, 166, 0, 0, 0, 0,
	0, 0, 0, 165, 0, 0, 0, 0, 0, 0,
	213, 0, 340, 341, 192, 358, 0, 0, 167, 0,
	0, 265, 272, 264, 0, 336, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 206, 221, 285, 243, 286,
	222, 260, 259, 261, 244, 0, 0, 163, 0, 321,
	0, 0, 325, 177, 0, 0, 331, 218, 291, 178,
	212, 205, 284, 263, 172, 224, 319, 235, 242, 0,
	0, 276, 299, 181, 346, 318, 201, 328, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 3313, 0, 0, 0, 199, 0, 0,
	0, 0, 0, 188, 131, 198, 190, 0, 132, 0,
	0, 133, 134, 0, 0, 0, 0, 135, 240, 0,
	0, 350, 320, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 158, 168, 239, 0, 293,
	210, 0, 129, 0, 454, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 0, 0, 0, 288, 215, 0, 0,
	347, 196, 0, 0, 448, 169, 176, 183, 195, 203,
	209, 220, 223, 227, 228, 230, 233, 245, 247, 248,
	249, 250, 266, 267, 270, 271, 274, 275, 278, 279,
	280, 282, 283, 289, 0, 295, 301, 302, 303, 304,
	305, 312, 313, 314, 315, 322, 338, 339, 352, 353,
	0, 0, 155, 0, 0, 161, 0, 0, 0, 0,
	0, 0, 160, 0, 0, 0, 258, 0, 0, 0,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 154, 0, 0, 0, 269, 0, 0, 0,
	157, 0, 0, 0, 191, 0, 298, 0, 344, 0,
	0, 297, 241, 337, 0, 0, 343, 0, 327, 351,
	355, 208, 0, 182, 317, 200, 197, 0, 0, 0,
	216, 287, 194, 234, 0, 0, 0, 187, 0, 0,
	0, 316, 334, 159, 255, 335, 354, 174, 329, 256,
	262, 184, 186, 185, 170, 311, 333, 179, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 217,
	0, 0, 348, 0, 307, 306, 0, 225, 0, 0,
	0, 294, 0, 232, 162, 0, 357, 173, 236, 330,
	0, 211, 268, 193, 0, 277, 0, 156, 290, 252,
	253, 251, 254, 214, 0, 0, 0, 292, 309, 332,
	175, 323, 0, 0, 0, 0, 300, 0, 0, 0,
	246, 204, 207, 219, 229, 0, 296, 324, 349, 0,
	171, 164, 326, 342, 180, 308, 310, 356, 0, 166,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 0, 213, 0, 340, 341, 192, 358,
	0, 0, 167, 0, 0, 265, 272, 264, 0, 336,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 206,
	221, 285, 243, 286, 222, 260, 259, 261, 244, 0,
	0, 163, 0, 321, 0, 0, 325, 177, 0, 0,
	331, 218, 291, 178, 212, 205, 284, 263, 172, 224,
	319, 235, 242, 0, 0, 276, 299, 181, 346, 318,
	201, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 188, 131, 0,
	0, 0, 132, 0, 0, 133, 134, 0, 0, 0,
	0, 135, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 158,
	168, 239, 0, 293, 210, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 196, 0, 0, 0, 169,
	176, 183, 195, 203, 209, 220, 223, 227, 228, 230,
	233, 245, 247, 248, 249, 250, 266, 267, 270, 271,
	274, 275, 278, 279, 280, 282, 283, 289, 0, 295,
	301, 302, 303, 304, 305, 312, 313, 314, 315, 322,
	338, 339, 352, 353, 328, 0, 155, 0, 0, 161,
	0, 0, 0, 0, 0, 273, 160, 0, 0, 0,
	0, 0, 0, 0, 199, 0, 0, 0, 0, 0,
	2560, 0, 198, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 350, 320,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 129,
	0, 454, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 0, 288, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 154,
	0, 0, 0, 269, 0, 0, 0, 157, 0, 0,
	0, 191, 0, 298, 0, 344, 0, 0, 297, 241,
	337, 0, 0, 343, 0, 327, 351, 355, 208, 0,
	182, 317, 200, 197, 0, 0, 0, 216, 287, 194,
	234, 0, 0, 0, 187, 0, 0, 0, 316, 334,
	159, 255, 335, 354, 174, 329, 256, 262, 184, 186,
	185, 170, 311, 333, 179, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 217, 0, 0, 348,
	0, 307, 306, 0, 225, 0, 0, 0, 294, 0,
	232, 162, 0, 357, 173, 236, 330, 0, 211, 268,
	193, 0, 277, 0, 156, 290, 252, 253, 251, 254,
	214, 0, 0, 0, 292, 309, 332, 175, 323, 0,
	0, 0, 0, 300, 0, 0, 0, 246, 204, 207,
	219, 229, 0, 296, 324, 349, 0, 171, 164, 326,
	342, 180, 308, 310, 356, 0, 166, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 0, 0, 0, 0,
	0, 213, 0, 340, 341, 192, 358, 0, 0, 167,
	0, 0, 265, 272, 264, 0, 336, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 206, 221, 285, 243,
	286, 222, 260, 259, 261, 244, 0, 0, 163, 0,
	321, 0, 0, 325, 177, 0, 0, 331, 218, 291,
	178, 212, 205, 284, 263, 172, 224, 319, 235, 242,
	0, 0, 276, 299, 181, 346, 318, 201, 328, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 199, 0,
	0, 0, 0, 0, 188, 131, 198, 190, 0, 132,
	0, 0, 133, 134, 0, 0, 0, 0, 135, 240,
	0, 0, 350, 320, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 158, 168, 239, 0,
	293, 210, 0, 129, 0, 454, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 0, 288, 215, 0,
	0, 347, 196, 0, 0, 0, 169, 176, 183, 195,
	203, 209, 220, 223, 227, 228, 230, 233, 245, 247,
	248, 249, 250, 266, 267, 270, 271, 274, 275, 278,
	279, 280, 282, 283, 289, 0, 295, 301, 302, 303,
	304, 305, 312, 313, 314, 315, 322, 338, 339, 352,
	353, 0, 0, 155, 0, 0, 161, 0, 0, 0,
	0, 0, 0, 160, 0, 0, 0, 258, 0, 0,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 154, 0, 0, 0, 269, 0, 0,
	0, 157, 0, 0, 0, 191, 0, 298, 0, 344,
	0, 0, 297, 241, 337, 0, 0, 343, 0, 327,
	351, 355, 208, 0, 182, 317, 200, 197, 0, 0,
	0, 216, 287, 194, 234, 0, 0, 0, 187, 0,
	0, 0, 316, 334, 159, 255, 335, 354, 174, 329,
	256, 262, 184, 186, 185, 170, 311, 333, 179, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	217, 0, 0, 348, 0, 307, 306, 0, 225, 0,
	0, 0, 294, 0, 232, 162, 0, 357, 173, 236,
	330, 0, 211, 268, 193, 0, 277, 0, 156, 290,
	252, 253, 251, 254, 214, 0, 0, 0, 292, 309,
	332, 175, 323, 0, 0, 0, 0, 300, 0, 0,
	0, 246, 204, 207, 219, 229, 0, 296, 324, 349,
	0, 171, 164, 326, 342, 180, 308, 310, 356, 0,
	166, 0, 0, 0, 0, 0, 0, 0, 165, 0,
	0, 0, 0, 0, 0, 213, 0, 340, 341, 192,
	358, 0, 0, 167, 0, 0, 265, 272, 264, 0,
	336, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	206, 221, 285, 243, 286, 222, 260, 259, 261, 244,
	0, 0, 163, 0, 321, 0, 0, 325, 177, 0,
	0, 331, 218, 291, 178, 212, 205, 284, 263, 172,
	224, 319, 235, 242, 328, 0, 276, 299, 181, 346,
	318, 201, 0, 0, 0, 273, 0, 0, 0, 0,
	0, 0, 0, 0, 199, 0, 0, 0, 0, 0,
	0, 0, 198, 190, 0, 0, 0, 0, 188, 131,
	0, 0, 0, 132, 0, 240, 133, 134, 350, 320,
	257, 0, 135, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 925,
	158, 168, 239, 0, 293, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 0, 288, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 196, 0, 0, 0,
	169, 176, 183, 195, 203, 209, 220, 223, 227, 228,
	230, 233, 245, 247, 248, 249, 250, 266, 267, 270,
	271, 274, 275, 278, 279, 280, 282, 283, 289, 0,
	295, 301, 302, 303, 304, 305, 312, 313, 314, 315,
	322, 338, 339, 352, 353, 0, 0, 155, 0, 0,
	161, 0, 0, 258, 0, 0, 0, 160, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 154,
	0, 0, 0, 269, 0, 0, 0, 157, 0, 0,
	0, 191, 0, 298, 0, 344, 0, 0, 297, 241,
	337, 0, 0, 343, 0, 327, 351, 355, 208, 0,
	182, 317, 200, 197, 0, 0, 0, 216, 287, 194,
	234, 0, 0, 0, 187, 0, 0, 0, 316, 334,
	159, 255, 335, 354, 174, 329, 256, 262, 184, 186,
	185, 170, 311, 333, 179, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 217, 0, 0, 348,
	0, 307, 306, 0, 225, 0, 0, 0, 294, 0,
	232, 162, 0, 357, 173, 236, 330, 0, 211, 268,
	193, 0, 277, 0, 156, 290, 252, 253, 251, 254,
	214, 0, 0, 0, 292, 309, 332, 175, 323, 0,
	0, 0, 0, 300, 0, 0, 0, 246, 204, 207,
	219, 229, 0, 296, 324, 349, 0, 171, 164, 326,
	342, 180, 308, 310, 356, 0, 166, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 0, 0, 0, 0,
	0, 213, 0, 340, 341, 192, 358, 0, 0, 167,
	0, 0, 265, 272, 264, 0, 336, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 206, 221, 285, 243,
	286, 222, 260, 259, 261, 244, 0, 0, 163, 0,
	321, 0, 0, 325, 177, 0, 0, 331, 218, 291,
	178, 212, 205, 284, 263, 172, 224, 319, 235, 242,
	0, 0, 276, 299, 181, 346, 318, 201, 328, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	0, 0, 3274, 0, 0, 0, 0, 0, 199, 3272,
	0, 0, 0, 0, 188, 131, 198, 190, 0, 132,
	0, 0, 133, 134, 0, 0, 0, 0, 135, 240,
	0, 0, 350, 320, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 158, 168, 239, 0,
	293, 210, 0, 437, 0, 436, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 0, 288, 215, 0,
	0, 347, 196, 0, 0, 0, 169, 176, 183, 195,
	203, 209, 220, 223, 227, 228, 230, 233, 245, 247,
	248, 249, 250, 266, 267, 270, 271, 274, 275, 278,
	279, 280, 282, 283, 289, 0, 295, 301, 302, 303,
	304, 305, 312, 313, 314, 315, 322, 338, 339, 352,
	353, 0, 0, 155, 0, 0, 161, 0, 0, 0,
	0, 0, 0, 160, 0, 0, 0, 258, 0, 0,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 154, 0, 0, 0, 269, 0, 0,
	0, 157, 0, 0, 0, 191, 0, 298, 0, 344,
	0, 0, 297, 241, 337, 0, 0, 343, 0, 327,
	351, 355, 208, 0, 182, 317, 200, 197, 0, 0,
	0, 216, 287, 194, 234, 0, 0, 0, 187, 0,
	0, 0, 316, 334, 159, 255, 335, 354, 174, 329,
	256, 262, 184, 186, 185, 170, 311, 333, 179, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	217, 0, 0, 348, 0, 307, 306, 0, 225, 0,
	3273, 0, 294, 0, 232, 162, 0, 357, 173, 236,
	330, 0, 211, 268, 193, 0, 277, 0, 156, 290,
	252, 253, 251, 254, 214, 0, 0, 0, 292, 309,
	332, 175, 323, 0, 0, 0, 0, 300, 0, 0,
	0, 246, 204, 207, 219, 229, 0, 296, 324, 349,
	0, 171, 164, 326, 342, 180, 308, 310, 356, 0,
	166, 0, 0, 0, 0, 0, 0, 0, 165, 0,
	0, 0, 0, 0, 0, 213, 0, 340, 341, 192,
	358, 0, 0, 167, 0, 0, 265, 272, 264, 0,
	336, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	206, 221, 285, 243, 286, 222, 260, 259, 261, 244,
	0, 0, 163, 0, 321, 0, 0, 325, 177, 0,
	0, 331, 218, 291, 178, 212, 205, 284, 263, 172,
	224, 319, 235, 242, 328, 0, 276, 299, 181, 346,
	318, 201, 0, 0, 0, 273, 0, 0, 0, 0,
	0, 0, 0, 0, 199, 0, 0, 0, 0, 0,
	0, 0, 198, 190, 0, 0, 0, 0, 188, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 350, 320,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 925,
	158, 168, 239, 0, 293, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2382, 345, 0,
	0, 0, 0, 288, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 196, 0, 0, 0,
	169, 176, 183, 195, 203, 209, 220, 223, 227, 228,
	230, 233, 245, 247, 248, 249, 250, 266, 267, 270,
	271, 274, 275, 278, 279, 280, 282, 283, 289, 0,
	295, 301, 302, 303, 304, 305, 312, 313, 314, 315,
	322, 338, 339, 352, 353, 0, 0, 155, 0, 0,
	161, 0, 0, 258, 0, 0, 0, 160, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 154,
	0, 0, 0, 269, 0, 0, 0, 157, 0, 0,
	0, 191, 0, 298, 0, 344, 0, 0, 297, 241,
	337, 0, 0, 343, 0, 327, 351, 355, 208, 0,
	182, 317, 200, 197, 0, 0, 0, 216, 287, 194,
	234, 2383, 2384, 0, 187, 0, 0, 0, 316, 334,
	159, 255, 335, 354, 174, 329, 256, 262, 184, 186,
	185, 170, 311, 333, 179, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 217, 0, 0, 348,
	0, 307, 306, 0, 225, 0, 0, 0, 294, 0,
	232, 162, 0, 357, 173, 236, 330, 0, 211, 268,
	193, 0, 277, 0, 156, 290, 252, 253, 251, 254,
	214, 0, 0, 0, 292, 309, 332, 175, 323, 0,
	0, 0, 0, 300, 0, 0, 0, 246, 204, 207,
	219, 229, 0, 296, 324, 349, 0, 171, 164, 326,
	342, 180, 308, 310, 356, 0, 166, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 0, 0, 0, 0,
	0, 213, 0, 340, 341, 192, 358, 0, 0, 167,
	0, 0, 265, 272, 264, 0, 336, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 206, 221, 285, 243,
	286, 222, 260, 259, 261, 244, 0, 0, 163, 0,
	321, 0, 0, 325, 177, 0, 0, 331, 218, 291,
	178, 212, 205, 284, 263, 172, 224, 319, 235, 242,
	0, 0, 276, 299, 181, 346, 318, 201, 328, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 199, 0,
	0, 0, 0, 0, 188, 0, 198, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 350, 320, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 158, 168, 239, 0,
	293, 210, 0, 437, 0, 436, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 0, 288, 215, 0,
	0, 347, 196, 0, 0, 0, 169, 176, 183, 195,
	203, 209, 220, 223, 227, 228, 230, 233, 245, 247,
	248, 249, 250, 266, 267, 270, 271, 274, 275, 278,
	279, 280, 282, 283, 289, 0, 295, 301, 302, 303,
	304, 305, 312, 313, 314, 315, 322, 338, 339, 352,
	353, 0, 0, 155, 0, 0, 161, 0, 0, 0,
	0, 0, 0, 160, 0, 0, 0, 258, 0, 0,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 154, 0, 0, 0, 269, 0, 0,
	0, 157, 0, 0, 0, 191, 0, 298, 0, 344,
	0, 0, 297, 241, 337, 0, 0, 343, 0, 327,
	351, 355, 208, 0, 182, 317, 200, 197, 0, 0,
	0, 216, 287, 194, 234, 0, 0, 0, 187, 0,
	0, 0, 316, 334, 159, 255, 335, 354, 174, 329,
	256, 262, 184, 186, 185, 170, 311, 333, 179, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	217, 0, 0, 348, 0, 307, 306, 0, 225, 0,
	0, 0, 294, 0, 232, 162, 0, 357, 173, 236,
	330, 0, 211, 268, 193, 0, 277, 0, 156, 290,
	252, 253, 251, 254, 214, 0, 0, 0, 292, 309,
	332, 175, 323, 0, 0, 0, 0, 300, 0, 0,
	0, 246, 204, 207, 219, 229, 0, 296, 324, 349,
	0, 171, 164, 326, 342, 180, 308, 310, 356, 0,
	166, 0, 0, 0, 0, 0, 0, 0, 165, 0,
	0, 0, 0, 0, 0, 213, 0, 340, 341, 192,
	358, 0, 0, 167, 0, 0, 265, 272, 264, 0,
	336, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	206, 221, 285, 243, 286, 222, 260, 259, 261, 244,
	0, 0, 163, 0, 321, 0, 0, 325, 177, 0,
	0, 331, 218, 291, 178, 212, 205, 284, 263, 172,
	224, 319, 235, 242, 0, 0, 276, 299, 181, 346,
	318, 201, 328, 0, 0, 1708, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 199, 1288, 0, 0, 0, 0, 188, 0,
	198, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 350, 320, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	158, 168, 239, 0, 293, 210, 0, 925, 0, 1287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	0, 288, 215, 0, 0, 347, 196, 0, 0, 0,
	169, 176, 183, 195, 203, 209, 220, 223, 227, 228,
	230, 233, 245, 247, 248, 249, 250, 266, 267, 270,
	271, 274, 275, 278, 279, 280, 282, 283, 289, 0,
	295, 301, 302, 303, 304, 305, 312, 313, 314, 315,
	322, 338, 339, 352, 353, 0, 0, 155, 0, 0,
	161, 0, 0, 0, 0, 0, 0, 160, 0, 0,
	0, 258, 0, 0, 0, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 154, 0, 0,
	0, 269, 0, 0, 0, 157, 0, 0, 0, 191,
	0, 298, 0, 344, 0, 0, 297, 241, 337, 0,
	0, 343, 0, 327, 351, 355, 208, 0, 182, 317,
	200, 197, 0, 0, 0, 216, 287, 194, 234, 0,
	0, 0, 187, 0, 0, 0, 316, 334, 159, 255,
	335, 354, 174, 329, 256, 262, 184, 186, 185, 170,
	311, 333, 179, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 217, 0, 0, 348, 0, 307,
	306, 0, 225, 0, 0, 0, 294, 0, 232, 162,
	0, 357, 173, 236, 330, 0, 211, 268, 193, 0,
	277, 0, 156, 290, 252, 253, 251, 254, 214, 0,
	0, 0, 292, 309, 332, 175, 323, 0, 0, 0,
	0, 300, 0, 0, 0, 246, 204, 207, 219, 229,
	0, 296, 324, 349, 0, 171, 164, 326, 342, 180,
	308, 310, 356, 0, 166, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 0, 213,
	0, 340, 341, 192, 358, 0, 0, 167, 0, 0,
	265, 272, 264, 0, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 206, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 0, 0, 163, 0, 321, 0,
	0, 325, 177, 0, 0, 331, 218, 291, 178, 212,
	205, 284, 263, 172, 224, 319, 235, 242, 0, 0,
	276, 299, 181, 346, 318, 201, 328, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 0, 0, 0,
	0, 0, 188, 0, 198, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 0, 0,
	350, 320, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 158, 168, 239, 0, 293, 210,
	0, 437, 0, 436, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 0, 288, 215, 0, 0, 347,
	196, 0, 0, 0, 169, 176, 183, 195, 203, 209,
	220, 223, 227, 228, 230, 233, 245, 247, 248, 249,
	250, 266, 267, 270, 271, 274, 275, 278, 279, 280,
	282, 283, 289, 0, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 0,
	0, 155, 0, 0, 161, 0, 0, 0, 0, 0,
	0, 160, 0, 0, 0, 258, 0, 0, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 154, 0, 0, 0, 269, 0, 0, 0, 157,
	0, 0, 0, 191, 0, 298, 0, 344, 0, 0,
	297, 241, 337, 0, 0, 343, 0, 327, 351, 355,
	208, 0, 182, 317, 200, 197, 0, 0, 0, 216,
	287, 194, 234, 0, 0, 0, 187, 0, 0, 0,
	316, 334, 159, 255, 335, 354, 174, 329, 256, 262,
	184, 186, 185, 170, 311, 333, 179, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 217, 0,
	0, 348, 0, 307, 306, 0, 225, 0, 0, 0,
	294, 0, 232, 162, 0, 357, 173, 236, 330, 0,
	211, 268, 193, 0, 277, 0, 156, 290, 252, 253,
	251, 254, 214, 0, 0, 0, 292, 309, 332, 175,
	323, 0, 0, 0, 0, 300, 0, 0, 0, 246,
	204, 207, 219, 229, 0, 296, 324, 349, 0, 171,
	164, 326, 342, 180, 308, 310, 356, 0, 166, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 0, 0,
	0, 0, 0, 213, 0, 340, 341, 192, 358, 0,
	0, 167, 0, 0, 265, 272, 264, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 206, 221,
	285, 243, 286, 222, 260, 259, 261, 244, 0, 0,
	163, 0, 321, 0, 0, 325, 177, 0, 0, 331,
	218, 291, 178, 212, 205, 284, 263, 172, 224, 319,
	235, 242, 328, 0, 276, 299, 181, 346, 318, 201,
	0, 0, 0, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 199, 0, 0, 0, 0, 0, 0, 0,
	198, 190, 0, 0, 0, 0, 188, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 350, 320, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2674, 0, 0, 281, 2676, 158, 168,
	239, 0, 293, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	0, 288, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 196, 0, 0, 0, 169, 176,
	183, 195, 203, 209, 220, 223, 227, 228, 230, 233,
	245, 247, 248, 249, 250, 266, 267, 270, 271, 274,
	275, 278, 279, 280, 282, 283, 289, 0, 295, 301,
	302, 303, 304, 305, 312, 313, 314, 315, 322, 338,
	339, 352, 353, 0, 0, 155, 0, 0, 161, 0,
	0, 258, 0, 0, 0, 160, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 154, 0, 0,
	0, 269, 0, 0, 0, 157, 0, 0, 0, 191,
	0, 298, 0, 344, 0, 0, 297, 241, 337, 0,
	0, 343, 0, 327, 351, 355, 208, 0, 182, 317,
	200, 197, 0, 0, 0, 216, 287, 194, 234, 0,
	0, 0, 187, 0, 0, 0, 316, 334, 159, 255,
	335, 354, 174, 329, 256, 262, 184, 186, 185, 170,
	311, 333, 179, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 217, 0, 0, 348, 0, 307,
	306, 0, 225, 0, 0, 0, 294, 0, 232, 162,
	0, 357, 173, 236, 330, 0, 211, 268, 193, 0,
	277, 0, 156, 290, 252, 253, 251, 254, 214, 0,
	0, 0, 292, 309, 332, 175, 323, 0, 0, 0,
	0, 300, 0, 0, 0, 246, 204, 207, 219, 229,
	0, 296, 324, 349, 0, 171, 164, 326, 342, 180,
	308, 310, 356, 0, 166, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 0, 213,
	0, 340, 341, 192, 358, 0, 0, 167, 0, 0,
	265, 272, 264, 0, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 206, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 0, 0, 163, 0, 321, 0,
	0, 325, 177, 0, 0, 331, 218, 291, 178, 212,
	205, 284, 263, 172, 224, 319, 235, 242, 328, 0,
	276, 299, 181, 346, 318, 201, 0, 0, 0, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 199, 0,
	0, 0, 0, 0, 0, 0, 198, 190, 0, 0,
	0, 0, 188, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 350, 320, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 925, 158, 168, 239, 0, 293, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 0, 288, 215, 0,
	0, 0, 0, 0, 0, 2661, 0, 0, 0, 347,
	196, 0, 0, 0, 169, 176, 183, 195, 203, 209,
	220, 223, 227, 228, 230, 233, 245, 247, 248, 249,
	250, 266, 267, 270, 271, 274, 275, 278, 279, 280,
	282, 283, 289, 0, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 0,
	0, 155, 0, 0, 161, 0, 0, 258, 0, 0,
	0, 160, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 154, 0, 0, 0, 269, 0, 0,
	0, 157, 0, 0, 0, 191, 0, 298, 0, 344,
	0, 0, 297, 241, 337, 0, 0, 343, 0, 327,
	351, 355, 208, 0, 182, 317, 200, 197, 0, 0,
	0, 216, 287, 194, 234, 0, 0, 0, 187, 0,
	0, 0, 316, 334, 159, 255, 335, 354, 174, 329,
	256, 262, 184, 186, 185, 170, 311, 333, 179, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	217, 0, 0, 348, 0, 307, 306, 0, 225, 0,
	0, 0, 294, 0, 232, 162, 0, 357, 173, 236,
	330, 0, 211, 268, 193, 0, 277, 0, 156, 290,
	252, 253, 251, 254, 214, 0, 0, 0, 292, 309,
	332, 175, 323, 0, 0, 0, 0, 300, 0, 0,
	0, 246, 204, 207, 219, 229, 0, 296, 324, 349,
	0, 171, 164, 326, 342, 180, 308, 310, 356, 0,
	166, 0, 0, 0, 0, 0, 0, 0, 165, 0,
	0, 0, 0, 0, 0, 213, 0, 340, 341, 192,
	358, 0, 0, 167, 0, 0, 265, 272, 264, 0,
	336, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	206, 221, 285, 243, 286, 222, 260, 259, 261, 244,
	0, 0, 163, 0, 321, 0, 0, 325, 177, 0,
	0, 331, 218, 291, 178, 212, 205, 284, 263, 172,
	224, 319, 235, 242, 328, 0, 276, 299, 181, 346,
	318, 201, 0, 0, 0, 273, 0, 0, 0, 0,
	0, 0, 0, 0, 199, 0, 0, 0, 0, 0,
	0, 0, 198, 190, 0, 0, 0, 0, 188, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 350, 320,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 77, 0, 0, 281, 925,
	158, 168, 239, 0, 293, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 0, 288, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 196, 0, 0, 0,
	169, 176, 183, 195, 203, 209, 220, 223, 227, 228,
	230, 233, 245, 247, 248, 249, 250, 266, 267, 270,
	271, 274, 275, 278, 279, 280, 282, 283, 289, 0,
	295, 301, 302, 303, 304, 305, 312, 313, 314, 315,
	322, 338, 339, 352, 353, 0, 0, 155, 0, 0,
	161, 0, 0, 258, 0, 0, 0, 160, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 154,
	0, 0, 0, 269, 0, 0, 0, 157, 0, 0,
	0, 191, 0, 298, 0, 344, 0, 0, 297, 241,
	337, 0, 0, 343, 0, 327, 351, 355, 208, 0,
	182, 317, 200, 197, 0, 0, 0, 216, 287, 194,
	234, 0, 0, 0, 187, 0, 0, 0, 316, 334,
	159, 255, 335, 354, 174, 329, 256, 262, 184, 186,
	185, 170, 311, 333, 179, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 217, 0, 0, 348,
	0, 307, 306, 0, 225, 0, 0, 0, 294, 0,
	232, 162, 0, 357, 173, 236, 330, 0, 211, 268,
	193, 0, 277, 0, 156, 290, 252, 253, 251, 254,
	214, 0, 0, 0, 292, 309, 332, 175, 323, 0,
	0, 0, 0, 300, 0, 0, 0, 246, 204, 207,
	219, 229, 0, 296, 324, 349, 0, 171, 164, 326,
	342, 180, 308, 310, 356, 0, 166, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 0, 0, 0, 0,
	0, 213, 0, 340, 341, 192, 358, 0, 0, 167,
	0, 0, 265, 272, 264, 0, 336, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 206, 221, 285, 243,
	286, 222, 260, 259, 261, 244, 0, 0, 163, 0,
	321, 0, 0, 325, 177, 0, 0, 331, 218, 291,
	178, 212, 205, 284, 263, 172, 224, 319, 235, 242,
	328, 0, 276, 299, 181, 346, 318, 201, 0, 0,
	0, 273, 0, 0, 0, 0, 0, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 0, 0, 198, 190,
	0, 0, 0, 0, 188, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 350, 320, 257, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 925, 158, 168, 239, 0,
	293, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 0, 0, 0, 288,
	215, 0, 0, 0, 0, 0, 0, 2116, 0, 0,
	0, 347, 196, 0, 0, 0, 169, 176, 183, 195,
	203, 209, 220, 223, 227, 228, 230, 233, 245, 247,
	248, 249, 250, 266, 267, 270, 271, 274, 275, 278,
	279, 280, 282, 283, 289, 0, 295, 301, 302, 303,
	304, 305, 312, 313, 314, 315, 322, 338, 339, 352,
	353, 0, 0, 155, 0, 0, 161, 0, 0, 258,
	0, 0, 0, 160, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 154, 0, 0, 0, 269,
	0, 0, 0, 157, 0, 0, 0, 191, 0, 298,
	0, 344, 0, 0, 297, 241, 337, 0, 0, 343,
	0, 327, 351, 355, 208, 0, 182, 317, 200, 197,
	0, 0, 0, 216, 287, 194, 234, 0, 0, 0,
	187, 0, 0, 0, 316, 334, 159, 255, 335, 354,
	174, 329, 256, 262, 184, 186, 185, 170, 311, 333,
	179, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 217, 0, 0, 348, 0, 307, 306, 0,
	225, 0, 0, 0, 294, 0, 232, 162, 0, 357,
	173, 236, 330, 0, 211, 268, 193, 0, 277, 0,
	156, 290, 252, 253, 251, 254, 214, 0, 0, 0,
	292, 309, 332, 175, 323, 0, 0, 0, 0, 300,
	0, 0, 0, 246, 204, 207, 219, 229, 0, 296,
	324, 349, 0, 171, 164, 326, 342, 180, 308, 310,
	356, 0, 166, 0, 0, 0, 0, 0, 0, 0,
	165, 0, 0, 0, 0, 0, 0, 213, 0, 340,
	341, 192, 358, 0, 0, 167, 0, 0, 265, 272,
	264, 0, 336, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 206, 221, 285, 243, 286, 222, 260, 259,
	261, 244, 0, 0, 163, 0, 321, 0, 0, 325,
	177, 0, 0, 331, 218, 291, 178, 212, 205, 284,
	263, 172, 224, 319, 235, 242, 328, 0, 276, 299,
	181, 346, 318, 201, 0, 0, 0, 273, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 0, 0, 0,
	0, 0, 0, 2153, 2154, 190, 0, 0, 0, 0,
	188, 0, 0, 0, 0, 0, 0, 240, 0, 0,
	350, 320, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 925, 158, 168, 239, 0, 293, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 0, 288, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 196, 0,
	0, 0, 169, 176, 183, 195, 203, 209, 220, 223,
	227, 228, 230, 233, 245, 247, 248, 249, 250, 266,
	267, 270, 271, 274, 275, 278, 279, 280, 282, 283,
	289, 0, 295, 301, 302, 303, 304, 305, 312, 313,
	314, 315, 322, 338, 339, 352, 353, 0, 0, 155,
	0, 0, 161, 0, 0, 258, 0, 0, 0, 160,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 154, 0, 0, 0, 269, 0, 0, 0, 157,
	0, 0, 0, 191, 0, 298, 0, 344, 0, 0,
	297, 241, 337, 0, 0, 343, 0, 327, 351, 355,
	208, 0, 182, 317, 200, 197, 0, 0, 0, 216,
	287, 194, 234, 0, 0, 0, 187, 0, 0, 0,
	316, 334, 159, 255, 335, 354, 174, 329, 256, 262,
	184, 186, 185, 170, 311, 333, 179, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 217, 0,
	0, 348, 0, 307, 306, 0, 225, 0, 0, 0,
	294, 0, 232, 162, 0, 357, 173, 236, 330, 0,
	211, 268, 193, 0, 277, 0, 156, 290, 252, 253,
	251, 254, 214, 0, 0, 0, 292, 309, 332, 175,
	323, 0, 0, 0, 0, 300, 0, 0, 0, 246,
	204, 207, 219, 229, 0, 296, 324, 349, 0, 171,
	164, 326, 342, 180, 308, 310, 356, 0, 166, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 0, 0,
	0, 0, 0, 213, 0, 340, 341, 192, 358, 0,
	0, 167, 0, 0, 265, 272, 264, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 206, 221,
	285, 243, 286, 222, 260, 259, 261, 244, 0, 0,
	163, 0, 321, 0, 0, 325, 177, 0, 0, 331,
	218, 291, 178, 212, 205, 284, 263, 172, 224, 319,
	235, 242, 328, 0, 276, 299, 181, 346, 318, 201,
	0, 0, 0, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 199, 0, 0, 0, 0, 0, 0, 0,
	198, 190, 0, 0, 0, 0, 188, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 350, 320, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 925, 158, 168,
	239, 0, 293, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	0, 288, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 196, 0, 0, 0, 169, 176,
	183, 195, 203, 209, 220, 223, 227, 228, 230, 233,
	245, 247, 248, 249, 250, 266, 267, 270, 271, 274,
	275, 278, 279, 280, 282, 283, 289, 0, 295, 301,
	302, 303, 304, 305, 312, 313, 314, 315, 322, 338,
	339, 352, 353, 0, 0, 155, 0, 0, 161, 0,
	0, 258, 0, 0, 0, 160, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 154, 0, 0,
	0, 269, 0, 0, 0, 157, 0, 0, 0, 191,
	0, 298, 0, 344, 0, 0, 297, 241, 337, 0,
	0, 343, 0, 327, 351, 355, 208, 0, 182, 317,
	200, 197, 0, 0, 0, 216, 287, 194, 234, 0,
	0, 0, 187, 0, 0, 0, 316, 334, 159, 255,
	335, 354, 174, 329, 256, 262, 184, 186, 185, 170,
	311, 333, 179, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 217, 0, 0, 348, 0, 307,
	306, 0, 225, 0, 0, 0, 294, 0, 232, 162,
	0, 357, 173, 236, 330, 0, 211, 268, 193, 0,
	277, 0, 156, 290, 252, 253, 251, 254, 214, 0,
	0, 0, 292, 309, 332, 175, 323, 0, 0, 0,
	0, 300, 0, 0, 0, 246, 204, 207, 219, 229,
	0, 296, 324, 349, 0, 171, 164, 326, 342, 180,
	308, 310, 356, 0, 166, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 0, 213,
	0, 340, 341, 192, 358, 0, 0, 167, 0, 0,
	265, 272, 264, 0, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 206, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 0, 0, 163, 0, 321, 0,
	0, 325, 177, 0, 0, 331, 218, 291, 178, 212,
	205, 284, 263, 172, 224, 319, 235, 242, 328, 0,
	276, 299, 181, 346, 318, 201, 0, 0, 0, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 199, 0,
	0, 0, 0, 0, 0, 0, 198, 190, 0, 0,
	0, 0, 188, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 350, 320, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 2676, 158, 168, 239, 0, 293, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 0, 288, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	196, 0, 0, 0, 169, 176, 183, 195, 203, 209,
	220, 223, 227, 228, 230, 233, 245, 247, 248, 249,
	250, 266, 267, 270, 271, 274, 275, 278, 279, 280,
	282, 283, 289, 0, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 0,
	0, 155, 0, 0, 161, 0, 0, 258, 0, 0,
	0, 160, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 154, 0, 0, 0, 269, 0, 0,
	0, 157, 0, 0, 0, 191, 0, 298, 0, 344,
	0, 0, 297, 241, 337, 0, 0, 343, 0, 327,
	351, 355, 208, 0, 182, 317, 200, 197, 0, 0,
	0, 216, 287, 194, 234, 0, 0, 0, 187, 0,
	0, 0, 316, 334, 159, 255, 335, 354, 174, 329,
	256, 262, 184, 186, 185, 170, 311, 333, 179, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	217, 0, 0, 348, 0, 307, 306, 0, 225, 0,
	0, 0, 294, 0, 232, 162, 0, 357, 173, 236,
	330, 0, 211, 268, 193, 0, 277, 0, 156, 290,
	252, 253, 251, 254, 214, 0, 0, 0, 292, 309,
	332, 175, 323, 0, 0, 0, 0, 300, 0, 0,
	0, 246, 204, 207, 219, 229, 0, 296, 324, 349,
	0, 171, 164, 326, 342, 180, 308, 310, 356, 0,
	166, 0, 0, 0, 0, 0, 0, 0, 165, 0,
	0, 0, 0, 0, 0, 213, 0, 340, 341, 192,
	358, 0, 0, 167, 0, 0, 265, 272, 264, 0,
	336, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	206, 221, 285, 243, 286, 222, 260, 259, 261, 244,
	0, 0, 163, 0, 321, 0, 0, 325, 177, 0,
	0, 331, 218, 291, 178, 212, 205, 284, 263, 172,
	224, 319, 235, 242, 328, 0, 276, 299, 181, 346,
	318, 201, 0, 0, 0, 273, 0, 0, 0, 0,
	0, 0, 0, 0, 199, 0, 0, 0, 0, 0,
	0, 0, 198, 190, 0, 0, 0, 0, 188, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 350, 320,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 129,
	158, 168, 239, 0, 293, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 0, 288, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 196, 0, 0, 0,
	169, 176, 183, 195, 203, 209, 220, 223, 227, 228,
	230, 233, 245, 247, 248, 249, 250, 266, 267, 270,
	271, 274, 275, 278, 279, 280, 282, 283, 289, 0,
	295, 301, 302, 303, 304, 305, 312, 313, 314, 315,
	322, 338, 339, 352, 353, 0, 0, 155, 0, 0,
	161, 0, 0, 258, 0, 0, 0, 160, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 154,
	0, 0, 0, 269, 0, 0, 0, 157, 0, 0,
	0, 191, 0, 298, 0, 344, 0, 0, 297, 241,
	337, 0, 0, 343, 0, 327, 351, 355, 208, 0,
	182, 317, 200, 197, 0, 0, 0, 216, 287, 194,
	234, 0, 0, 0, 187, 0, 0, 0, 316, 334,
	159, 255, 335, 354, 174, 329, 256, 262, 184, 186,
	185, 170, 311, 333, 179, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 217, 0, 0, 348,
	0, 307, 306, 0, 225, 0, 0, 0, 294, 0,
	232, 162, 0, 357, 173, 236, 330, 0, 211, 268,
	193, 0, 277, 0, 156, 290, 252, 253, 251, 254,
	214, 0, 0, 0, 292, 309, 332, 175, 323, 0,
	0, 0, 0, 300, 0, 0, 0, 246, 204, 207,
	219, 229, 0, 296, 324, 349, 0, 171, 164, 326,
	342, 180, 308, 310, 356, 0, 166, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 0, 0, 0, 0,
	0, 213, 0, 340, 341, 192, 358, 0, 0, 167,
	0, 0, 265, 272, 264, 0, 336, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 206, 221, 285, 243,
	286, 222, 260, 259, 261, 244, 0, 0, 163, 0,
	321, 0, 0, 325, 177, 0, 0, 331, 218, 291,
	178, 212, 205, 284, 263, 172, 224, 319, 235, 242,
	328, 0, 276, 299, 181, 346, 318, 201, 0, 0,
	0, 273, 0, 0, 0, 0, 0, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 0, 0, 198, 190,
	0, 0, 0, 0, 188, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 350, 320, 257, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 478, 158, 168, 239, 0,
	293, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 0, 0, 0, 288,
	215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 196, 0, 0, 0, 169, 176, 183, 195,
	203, 209, 220, 223, 227, 228, 230, 233, 245, 247,
	248, 249, 250, 266, 267, 270, 271, 274, 275, 278,
	279, 280, 282, 283, 289, 0, 295, 301, 302, 303,
	304, 305, 312, 313, 314, 315, 322, 338, 339, 352,
	353, 0, 0, 155, 0, 0, 161, 0, 0, 258,
	0, 0, 0, 160, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 154, 0, 0, 0, 269,
	0, 0, 0, 157, 0, 0, 0, 191, 0, 298,
	0, 344, 0, 0, 297, 241, 337, 0, 0, 343,
	0, 327, 351, 355, 208, 0, 182, 317, 200, 197,
	0, 0, 0, 216, 287, 194, 234, 0, 0, 0,
	187, 0, 0, 0, 316, 334, 159, 255, 335, 354,
	174, 329, 256, 262, 184, 186, 185, 170, 311, 333,
	179, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 217, 0, 0, 348, 0, 307, 306, 0,
	225, 0, 0, 0, 294, 0, 232, 162, 0, 357,
	173, 236, 330, 0, 211, 268, 193, 0, 277, 0,
	156, 290, 252, 253, 251, 254, 214, 0, 0, 0,
	292, 309, 332, 175, 323, 0, 0, 0, 0, 300,
	0, 0, 0, 246, 204, 207, 219, 229, 0, 296,
	324, 349, 0, 171, 164, 326, 342, 180, 308, 310,
	356, 0, 166, 0, 0, 0, 0, 0, 0, 0,
	165, 0, 0, 0, 0, 0, 0, 213, 0, 340,
	341, 192, 358, 0, 0, 167, 0, 0, 265, 272,
	264, 0, 336, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 206, 221, 285, 243, 286, 222, 260, 259,
	261, 244, 0, 0, 163, 0, 321, 0, 0, 325,
	177, 0, 0, 331, 218, 291, 178, 212, 205, 284,
	263, 172, 224, 319, 235, 242, 0, 0, 276, 299,
	181, 346, 318, 201, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	188, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 158, 168, 239, 0, 293, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 196, 0,
	0, 0, 169, 176, 183, 195, 203, 209, 220, 223,
	227, 228, 230, 233, 245, 247, 248, 249, 250, 266,
	267, 270, 271, 274, 275, 278, 279, 280, 282, 283,
	289, 0, 295, 301, 302, 303, 304, 305, 312, 313,
	314, 315, 322, 338, 339, 352, 353, 0, 0, 155,
	0, 0, 161, 0, 0, 0, 0, 0, 0, 160,
}

var yyPact = [...]int{
	692, -1000, -420, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2075, -1000, -1000, 279, -1000,
	1024, 255, -1000, 347, 217, 31178, 645, 524, 41947, -1000,
	-1000, -1000, 155, 546, 31602, 419, 456, 1436, 1935, 1434,
	17, -99, -100, 127, 32627, 32196, -24, -1000, 34656, 594,
	23, -1000, -1000, -1000, -1000, 2127, 205, -1000, -1000, 2054,
	2073, 1865, -1000, 7411, -1000, -1000, -1000, -1000, -1000, 20743,
	-1000, 2125, 31602, 27032, -1000, 638, 621, -196, 581, 581,
	521, 581, 581, 644, -1000, 273, 1048, -1000, -1000, -1000,
	-1000, 1043, 31602, 38619, 586, 41115, 586, 586, 586, 586,
	586, 586, 586, 31602, -1000, 749, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 31602,
	1432, 1966, 1096, 72, -1000, -1000, -1000, 1082, -1000, 399,
	396, 450, 333, 113, 1099, 2051, -1000, 1754, 2054, 2054,
	-1000, -1000, -1000, -1000, -1000, -1000, 823, 300, 616, 216,
	205, 1042, 2005, 1965, 1964, 1344, 1961, 807, 1960, 1796,
	-66, -1000, 1431, 31602, -1000, -1000, 1302, 1294, 353, 1704,
	724, 1818, -1000, -1000, 330, 595, 1789, 398, 1789, 1789,
	1789, 1789, 1789, -101, 1789, 1789, 1789, 67, 1789, 121,
	1789, 1789, 1789, 1789, 1789, 1448, -1000, -1000, -1000, 351,
	1700, 1712, 1816, 507, -1000, -1000, -1000, 1806, 36091, 1742,
	-1000, 1754, -1000, -1000, -1000, 642, -1000, -160, 1806, 2041,
	1451, -1000, 34656, 1962, 1167, 13471, 1905, -1000, -1000, 1147,
	2111, -1000, 26608, 748, -1000, 13471, 1427, 1754, -1000, -1000,
	1754, -1000, 694, 768, -1000, 670, 734, -1000, -1000, 12865,
	12865, 12865, 12865, 12865, 12865, 12865, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1754, 739, 738, 1754, 1754, 1754, 1754, 1754,
	-1000, 11653, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1754, 1754, 1754, 1754, 1754, 1754,
	1754, 1754, 1754, 1754, 1754, 1754, 1754, 1754, 13471, 1754,
	1754, 1754, 1754, 1754, 1754, 1754, 1754, 1754, 1754, 1754,
	1754, 1754, 1754, 1754, 1754, 1754, 1754, 1754, 1754, 1754,
	1754, 1754, 1754, 1754, 1754, 1754, 1754, 1754, 1754, 1754,
	1754, 1754, 1754, 1754, 1754, 1754, 1754, 1754, 1754, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	594, 594, 30754, 1752, -174, 20137, -1000, -1000, -1000, -1000,
	18925, 38195, 1035, -1000, -1000, -1000, -1000, 1957, -1000, -1000,
	735, 734, 694, 669, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2075, -1000, -1000, 1628, 515, -1000, 5644, 5644,
	5644, 5644, 5644, 278, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1795, 41115, 31602, 240, 1430, 1090, 1429,
	42363, 42363, -1000, 241, 38619, 38619, 581, 264, 38619, 298,
	1751, 611, 1750, 610, 1440, 31602, 1981, 1815, 31602, 1428,
	1426, 42363, 42363, 38619, 38619, -1000, 25591, 1748, -1000, -1000,
	1096, -1000, 1450, 13471, 581, 581, 31602, 31602, 31602, 31602,
	31602, -1000, -1000, 1096, 1096, 1096, 1096, 1073, 2109, 1073,
	-1000, 1073, -1000, -1000, 13471, -1000, 12865, 37771, 872, -1000,
	-1000, 41947, -1000, 1425, 295, -1000, -1000, -1000, -1000, -1000,
	-1000, 1422, -1000, 1939, 807, 807, -1000, 1378, 807, 1726,
	-1000, 1031, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 807, -1000, 12259, -400, -1000, -1000,
	1746, -1000, 245, -1000, -1000, 553, 1814, 553, 222, 38619,
	38619, 38619, -1000, 1789, 41115, -1000, 1789, 1789, 1789, -103,
	1789, 1789, -1000, -1000, 1789, -1000, -1000, -1000, -1000, -1000,
	1789, -1000, -1000, -1000, 1789, 1789, -1000, 1789, 1789, -1000,
	-1000, -1000, -1000, -1000, 38619, 553, 160, 1745, 553, 38619,
	38619, -1000, 55, 49, 47, 46, -1000, -1000, -1000, -1000,
	45, 39, -1000, -1000, -1000, 1742, 36091, 2038, 15895, 31602,
	-122, -1000, -1000, 205, -1000, -1000, -1000, -1000, 1806, 1134,
	2120, 925, 1727, -1000, -1000, 1739, -1000, 1144, 729, 1175,
	1879, -1000, -1000, -1000, 31602, -1000, 13471, 13471, 13471, 1243,
	-1000, 27456, -1000, -1000, -1000, -1000, -1000, -1000, 17107, 955,
	12865, 1173, 1020, 12865, 12865, 12865, 12865, 12865, 12865, 12865,
	12865, 12865, 12865, 12865, 12865, 12865, 12865, 12865, 1290, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1418, -1000, 205,
	24379, 8623, 24379, 1338, 1338, 41115, 769, 769, 769, 769,
	769, 769, 33214, 2037, 24379, 24379, 2037, 2037, 2037, 2037,
	2037, 1451, 1626, 1232, 34656, 11653, 8623, 8623, 8623, 1451,
	13471, 13471, 8623, 8623, 11047, 10441, 14683, 8623, 8623, 2037,
	1054, 1232, 18925, 8623, -1000, -1000, 9835, -1000, -1000, -1000,
	-1000, -1000, 1451, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 41115, 41115, 8623, 8623, 8623, 8623, 1451, 1451, 8623,
	8623, 8623, 8623, 8623, 1451, 1451, 1451, 1451, 8623, 8623,
	8623, 8623, 8623, 8623, 8623, 8623, 8623, 8623, 8623, 8623,
	30330, 29482, 31602, 1711, 1636, -1000, 725, 19531, 1719, -1000,
	-132, -139, -174, -1000, -1000, 802, -1000, -1000, -1000, 9229,
	-1000, 17713, 2054, 1865, 21955, 26184, -1000, -1000, -86, -1000,
	-1000, -1000, 1780, -1000, 1780, 277, -9, 1780, 1780, 1780,
	1780, 1780, -40, -40, -40, -40, -27, -1000, -1000, -1000,
	-1000, -1000, 1794, 1792, -1000, 1780, 1780, 1780, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1787, 297, 1785,
	1785, 1785, 1785, 1785, -1000, -1000, -1000, -1000, 525, 525,
	525, -1000, 13471, 1562, 2022, 618, 264, 1970, 1980, 1970,
	325, -1000, 723, 1790, -1000, 722, 315, 1710, -1000, 187,
	1328, 29906, -1000, -1000, -1000, -1000, -1000, 31602, 31602, 38619,
	38619, 38619, 683, -1000, 31602, 1729, -1000, -1000, -1000, -1000,
	-1000, 1702, -1000, 1328, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 31602, -1000, -1000, 1375, 1232, 1417, 1415,
	2005, -1000, -1000, -1000, 1079, -1000, -1000, -1000, -1000, 1096,
	41947, 41947, 31602, 2005, 1096, 1232, 1161, 1749, 1754, 1451,
	-1000, -1000, -1000, 1410, -1000, 12865, 1726, 1726, -1000, 1726,
	807, 1338, 1726, -1000, 1605, 1132, 1374, 31602, -1000, 36091,
	-79, -1000, -170, 40283, -1000, -1000, -1000, 553, 40283, -1000,
	67, 150, -1000, 609, -1000, 1598, -1000, -1000, -1000, -1000,
	1789, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	40283, 118, 159, 40283, 1702, 2108, -1000, -1000, -1000, -1000,
	2050, -1000, -1000, 1754, 1576, -1000, 719, -1000, -1000, -1000,
	-1000, -1000, -1000, 275, -1000, -1000, 1451, -1000, 40699, -1000,
	1873, 1167, 1167, 13471, -1000, -1000, -1000, 17713, 2056, -1000,
	1885, 1884, 1836, -1000, -1000, 955, 1206, 999, -1000, -1000,
	1181, -1000, -1000, -1000, -1000, -1000, 716, 1754, -1000, -1000,
	-1000, -1000, -1000, -1000, 3769, -1000, -1000, -1000, -1000, 1173,
	12865, 12865, 12865, 1161, 3769, 3744, 1221, 1779, 769, 865,
	865, 809, 809, 809, 809, 809, 975, 975, -1000, -1000,
	-1000, 1451, -1000, 1596, -1000, -1000, 1232, 715, -1000, -1000,
	-1000, -1000, -1000, -1000, 8623, -1000, -1000, 8623, 8623, 8623,
	8623, 8623, -1000, 13471, -1000, 1451, 1596, 1596, 1596, -1000,
	1057, 1226, 1416, 1596, 853, 2107, 1596, 851, 2105, 1596,
	1260, 12865, 12865, 12865, 1596, 1596, 8623, 1106, -1000, 13471,
	1451, 1596, -1000, 1592, 1722, 1721, 1596, 1451, 1720, 1596,
	1596, -214, -214, 1451, 1596, 1451, 1596, 1596, -214, -214,
	-214, -214, 1596, 1596, 1596, 1596, 1596, 1596, 1596, 1596,
	1596, 1596, 1596, 1596, 929, 31602, -1000, 1672, 1747, -1000,
	-1000, -1000, 2016, 28895, -1000, -1000, 33645, -1000, 1754, 1754,
	929, 1639, 29482, -1000, -1000, 29482, 41947, 23773, -1000, 18925,
	-174, -131, -1000, -1000, 1719, -1000, 1319, -1000, -1000, 1232,
	-1000, 711, 1962, 2037, 1718, 21349, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 515, -1000, -1000, -1000, 1788, 266, -1000,
	1907, 782, 782, 837, 1389, 1906, -1000, -1000, 225, -91,
	-1000, -1000, -1000, 1292, -40, -40, 1780, 1780, 267, 1780,
	-1000, -40, -1000, -1000, -1000, 923, 1956, 921, 917, 890,
	887, -40, 1372, 1372, -1000, -1000, -1000, -1000, 1291, -1000,
	1787, -1000, 1286, -1000, -1000, -1000, -1000, 225, 225, 225,
	225, -1000, -1000, -1000, 1083, 1811, 41115, -1000, 31602, -1000,
	1970, -1000, -1000, -1000, 344, -1000, -1000, -1000, 2098, -1000,
	-1000, 41115, 37347, 41115, -1000, -1000, 73, 38619, 167, 373,
	208, -1000, -1000, 608, -1000, 606, -1000, -1000, -1000, -1000,
	-1000, -1000, 31602, 38619, -1000, -1000, -1000, -1000, -1000, 2085,
	1405, 1404, -1000, -1000, -1000, 1073, 1096, -1000, -1000, 12865,
	38619, -1000, 440, -1000, 3769, -1000, -1000, -1000, 929, 640,
	-1000, -1000, -119, -1000, -1000, 605, 707, 706, 40283, 604,
	-1000, 92, 38619, -1000, 41115, -1000, 2104, 2101, 114, 2093,
	38619, -1000, 28, -1000, 215, -1000, 15895, 24379, 1716, -1000,
	762, 813, 767, 528, 528, -1000, 986, 528, 1950, 1941,
	903, -1000, 1715, 1368, 1367, -1000, 1871, -1000, -1000, -1000,
	31602, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	23167, 8623, -1000, 1161, 3769, 3532, -1000, 12865, -1000, 8623,
	-1000, 16501, 1451, 1596, 1596, 1596, 1596, 1596, 1232, -1000,
	-1000, -1000, -1000, 519, 1290, 519, -1000, 1290, -1000, 12865,
	12865, -1000, 12865, 12865, -1000, -1000, 12865, 3513, 3472, 3073,
	-254, -1000, 1725, 1011, -1000, 13471, 1171, -1000, -1000, -1000,
	12865, 12865, -1000, -1000, -1000, -1000, -1000, 39867, -1000, -214,
	-214, -214, -214, -214, -1000, -1000, -1000, -1000, -214, -214,
	-214, -214, -214, -214, -214, -214, -214, -214, -214, -214,
	204, 1754, -1000, 18319, 29482, 29482, 29482, 29482, 29482, -1000,
	1861, 1858, -1000, 1835, 1834, 1857, 36091, 1594, 1451, 321,
	28895, -1000, 1754, -1000, 35667, 727, 636, 635, 624, 8623,
	12865, 2085, 29482, 1624, 1624, -1000, 704, -1000, -1000, -1000,
	-165, -153, -1000, -1000, -1000, 24379, -1000, 21955, -1000, 21955,
	-1000, 36507, 577, 1914, 562, 1389, 1389, 1389, -1000, 1389,
	-1000, -1000, -1000, 1786, -1000, 1141, -1000, -1000, -1000, -1000,
	-1000, 1754, -412, 1284, 12865, 2116, -1000, 1903, -1000, 1897,
	1896, 1361, -1000, -1000, 1503, 874, 852, -40, -1000, -1000,
	1780, -1000, 850, -1000, -1000, 915, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 841, 1591, -1000, 1585, 1707, -1000,
	1583, 105, 31602, -1000, -1000, 2009, -1000, -1000, -1000, 1954,
	986, 986, 986, 1810, -1000, -1000, -1000, -1000, 1492, 1706,
	-1000, 5644, 41115, 41115, 41115, -1000, -269, 191, -1000, 38619,
	143, 187, 390, 1403, 31602, 38619, -1000, -1000, -1000, 13471,
	-1000, -1000, 2005, -1000, 3769, 1328, -1000, -1000, -40, 31602,
	-1000, 38619, 855, 39451, 602, 38619, 104, 138, -1000, 38619,
	38619, 2091, 38619, 1702, 1360, -1000, -1000, 275, 39035, 1389,
	720, -1000, -1000, 538, -1000, 185, 1402, 28304, 27880, 41115,
	1895, 1893, 1401, 31602, 41115, -1000, -1000, 41531, 1400, 13471,
	-1000, 41115, -1000, -1000, 41115, 41115, -1000, -1000, -1000, -1000,
	1148, 7411, -1000, -1000, 1451, -1000, 12865, 3769, -1000, -1000,
	701, -1000, -214, -214, -214, -214, -214, 1451, 1780, 1780,
	-1000, 1780, 1785, -1000, 1780, -13, 1780, -17, 1451, 1451,
	1451, 3054, 2900, 2588, 1928, 1592, 12865, 12865, 12865, 1754,
	-209, -1000, 1232, 13471, 1898, 1717, -1000, -1000, 1399, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1804, 18319, 1754,
	15289, -1000, 41115, 1679, -1000, 1025, 770, 991, 987, 694,
	669, 1747, 1784, 1803, 1512, -1000, -1000, -1000, -1000, 1854,
	-1000, 1838, -1000, -1000, 1758, -1000, -1000, 1703, 1754, 41115,
	12865, 727, -1000, 1754, 1754, 1754, 1451, 1607, 2075, 1624,
	-1000, -1000, 829, -1000, -1000, -1000, 21349, -1000, 1580, -1000,
	1780, 1780, 1892, -1000, 782, -1000, -1000, -1000, -1000, -1000,
	41115, -1000, 12865, 1986, -1000, 3769, -82, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 804, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -40, 1359, -40, 1283, -1000, 1282,
	-1000, -1000, -356, 1764, 205, -1000, 986, 893, 883, 1357,
	31602, 134, 37347, -1000, 5644, 5644, 5644, 101, 85, -1000,
	1126, -1000, -1000, -1000, 1356, 1353, 1352, 1328, 189, 1119,
	148, -1000, 2015, -1000, -1000, 1232, 1096, -120, -1000, 138,
	-1000, -1000, -1000, 38619, 138, -1000, -1000, 158, 1702, 1702,
	38619, 1702, -1000, -1000, 41531, 501, 5644, 5644, 1562, 782,
	1891, 562, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1398, -1000, 761, -1000, 601, 501,
	41531, 1232, 806, 1109, -1000, 2090, -1000, -1000, -1000, 3769,
	22561, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 287, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 12865, 12865,
	12865, 12865, -1000, 1592, 1592, 1592, 12865, 1451, 1351, 1232,
	12865, 12865, 896, -1000, -1000, 1975, 1638, 1681, -1000, -1000,
	8017, 1451, 1883, 1576, -1000, 34656, 1573, -1000, 2075, 18319,
	13471, 13471, 13471, 13471, -1000, -1000, 13471, 1763, -1000, 13471,
	-1000, -1000, -1000, -1000, 41115, 317, -1000, 13471, 1573, 1635,
	-1000, 41115, 41115, 41115, -1000, 1350, 2054, -1000, 708, 36507,
	1974, 1974, 1389, 1389, 1570, -1000, 1592, 1754, -1000, 1754,
	1754, 1754, 1754, 1754, 1754, 1754, 1754, 1754, 1754, 1754,
	-1000, -1000, 797, -1000, 795, 1474, 1456, -1000, 36507, -1000,
	-1000, 878, -1000, -1000, -1000, -1000, -1000, 2049, -1000, 134,
	-1000, 1348, 262, 249, -1000, 259, 253, 250, 248, 232,
	-1000, -1000, -1000, -1000, 384, 101, -1000, -87, 1277, 1010,
	1949, 85, -1000, 1262, 1250, 1249, 1198, 235, -1000, -1000,
	-1000, -1000, 192, 187, -1000, 381, 1345, -1000, 1930, 1927,
	1985, 138, 1985, 96, 1702, 1453, -1000, -1000, 1390, -1000,
	-1000, 1762, 1389, 1389, -1000, 1387, -1000, -1000, 41115, -1000,
	501, 1969, 1968, 1754, 2085, 29482, 7411, -1000, -1000, -1000,
	-1000, 1592, 1592, 1592, 1592, -1000, -1000, -1000, 202, -1000,
	-1000, 1592, 1592, 2075, 2072, 1888, -1000, 1754, -1000, -1000,
	1754, 203, -1000, 41115, 2054, -1000, 1232, 1232, 1232, 1232,
	1232, 41115, 1232, 1565, 1754, 34232, -1000, 36091, 1563, 1563,
	1563, -113, -1000, 708, -1000, 1386, 986, 1331, -1000, -1000,
	-1000, -1000, -1000, 495, 41115, -415, 12865, -1000, -1000, -1000,
	-1000, -1000, -1000, 1561, -1000, 205, -1000, -1000, 301, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1934, 1933, 299, -1000,
	1329, 1327, -1000, 477, 1323, 744, -220, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 376, 1385,
	-1000, 147, -1000, -1000, 589, 1916, 1918, 2070, -1000, 38619,
	1985, -1000, -1000, -1000, -1000, 225, 225, 36507, 1562, 1760,
	-1000, -1000, -1000, 12865, -1000, 888, 2082, 1696, -1000, -1000,
	-1000, -1000, -1000, 1451, 164, -287, -1000, -1000, 969, 13471,
	2115, -1000, 1681, 1754, -1000, 205, -1000, -1000, 1507, -1000,
	-1000, -1000, 727, -1000, -1000, -1000, 1754, -1000, -1000, 1193,
	-1000, 31602, -1000, -1000, -1000, -1000, 1592, 708, -1000, 305,
	6273, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1182,
	-1000, -1000, 1248, 404, 146, -1000, 1984, -1000, 1758, 1180,
	1927, 2069, 1922, 1920, -1000, 1326, -276, -1000, 1488, 1756,
	36507, 3769, 1473, -1000, 41115, 2080, 2063, -1000, -1000, 1869,
	-265, -290, 1451, 166, 166, 1682, 18319, 1681, 1451, -1000,
	-1000, 24379, -1000, 1755, -415, -1000, 708, -1000, 424, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	13471, 13471, 24985, 6273, 133, -1000, 132, -1000, -1000, -1000,
	1325, -1000, 966, -1000, 1322, -1000, 2061, 2060, -1000, 165,
	708, 36507, 1471, -1000, 888, 1882, -216, 13471, 13471, -1000,
	1819, -1000, -1000, -1000, 171, -1000, 943, 283, 941, -1000,
	1338, -1000, 1677, -1000, 1469, -1000, 5644, 41115, -1000, -1000,
	1384, 1383, -1000, 1149, 1140, 201, 190, 5182, -1000, -1000,
	-1000, -1000, -421, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1316, 1261, 36931, -1000, 1447, 708, -1000, 458, -1000, 41115,
	-1000, 1232, 1633, -1000, 1232, -279, 1103, -1000, -1000, -1000,
	-1000, -1000, 41115, 1451, 24379, 214, 1445, -1000, -1000, -1000,
	1100, -1000, 13471, 6273, 2047, 2046, 2045, 1963, 24379, 5141,
	-1000, -1000, -1000, -1000, 86, 1328, 708, -1000, 409, 1608,
	-1000, 1983, 13471, -288, 171, -1000, 35080, -1000, -1000, 1244,
	-251, 1802, 183, 1069, 6273, -1000, 1098, -423, 402, 205,
	488, 12865, -1000, -1000, -1000, 38619, -1000, 1754, 41115, 1754,
	-1000, -291, -1000, 36091, -1000, -1000, 1174, 1801, 1800, 2089,
	-1000, -1000, -1000, -1000, -1000, -1000, 6273, 34656, -1000, -424,
	6273, 3747, -1000, -1000, -1000, 6064, -1000, -1000, -1000, -1000,
	194, -1000, -1000, 3769, 1328, 14077, -1000, -1000, -1000, -1000,
	345, -1000, -1000, 2114, -1000, 2099, 743, 743, -1000, -425,
	-1000, 4697, -426, 575, 6273, 1018, -1000, 13471, -1000, 488,
	-1000, 1592, 1451, -1000, 1799, 12865, 1781, -1000, -1000, -1000,
	504, 1234, -1000, 4650, 1056, 6273, -1000, -427, 571, 6273,
	-1000, 1078, -1000, -1000, -1000, -304, 1560, -305, -1000, -1000,
	-1000, -1000, -1000, 4008, -1000, -428, 6273, -1000, -306, -1000,
	558, 3755, -429, -1000, -1000, 555, 6273, -1000,
}

var yyPgo = [...]int{
	0, 2515, 2514, 40, 173, 2513, 244, 2511, 2506, 19,
	2505, 33, 24, 21, 36, 2504, 2201, 2199, 2194, 2192,
	2190, 2501, 39, 2498, 2497, 2187, 2495, 2494, 2179, 2177,
	2173, 2171, 2493, 2492, 2491, 2167, 2155, 2153, 8, 2490,
	17, 2489, 3, 150, 163, 2488, 2, 2487, 2486, 13,
	2485, 2483, 2151, 2482, 2480, 2479, 99, 2476, 2149, 2146,
	2474, 2144, 2142, 2473, 2472, 2140, 2138, 2133, 2471, 180,
	2470, 2469, 2466, 174, 2465, 156, 2463, 2462, 2461, 123,
	2459, 2467, 112, 60, 113, 217, 2458, 15, 57, 256,
	2457, 5, 2455, 105, 2454, 118, 2452, 2451, 168, 2450,
	147, 59, 107, 2448, 2447, 166, 2446, 2445, 2444, 101,
	2443, 2441, 177, 65, 2437, 2432, 139, 2429, 46, 171,
	44, 88, 2427, 2425, 2423, 2421, 2419, 30, 143, 2418,
	109, 153, 2417, 2416, 90, 2415, 2414, 102, 2413, 2412,
	2411, 148, 51, 2410, 2408, 50, 2406, 79, 56, 2405,
	54, 2404, 146, 2399, 2396, 2391, 2390, 2389, 82, 2371,
	67, 2369, 145, 121, 138, 2368, 2366, 11, 14, 2362,
	31, 16, 20, 61, 23, 73, 47, 137, 116, 95,
	2361, 38, 45, 127, 93, 2359, 94, 81, 43, 2358,
	157, 2357, 83, 160, 140, 142, 159, 2356, 2349, 2348,
	181, 2345, 128, 89, 2341, 92, 1039, 176, 2339, 2338,
	103, 2337, 2336, 2335, 2334, 2333, 86, 124, 2332, 2331,
	175, 179, 172, 114, 2329, 692, 3792, 3709, 149, 4148,
	27, 170, 2328, 49, 2327, 2326, 2325, 3345, 125, 7,
	106, 165, 2324, 110, 48, 52, 2319, 2313, 2312, 2310,
	2309, 2305, 2303, 2302, 255, 2300, 2299, 2298, 2294, 164,
	141, 2292, 133, 131, 130, 2289, 152, 26, 2288, 2287,
	135, 115, 2285, 2281, 2280, 2276, 134, 84, 155, 18,
	2275, 119, 108, 136, 2267, 85, 2261, 2254, 132, 63,
	2250, 2248, 2247, 2246, 100, 97, 2245, 71, 32, 42,
	80, 29, 2244, 2242, 98, 104, 2240, 28, 2238, 6,
	9, 4, 2237, 2235, 2234, 2233, 2232, 2231, 2230, 91,
	2229, 2227, 68, 2225, 2223, 2222, 35, 2221, 2220, 2219,
	151, 126, 53, 162, 87, 12, 2217, 2216, 10, 2215,
	129, 2214, 72, 2213, 66, 2212, 2211, 62, 2208, 2207,
	64, 2206, 2205, 169, 1852, 434, 2204, 154, 122, 55,
	58, 2203, 2196, 0, 1644, 161, 234, 2183, 2163, 2136,
}

var yyR1 = [...]int{
	0, 362, 362, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 68, 3, 3, 9,
	10, 4, 4, 5, 5, 91, 91, 6, 90, 90,
	186, 186, 186, 186, 185, 185, 92, 92, 89, 89,
	98, 7, 7, 8, 8, 11, 11, 72, 72, 12,
	13, 13, 13, 13, 365, 365, 107, 107, 105, 105,
	106, 106, 183, 183, 14, 14, 14, 190, 190, 195,
	195, 195, 198, 198, 198, 198, 172, 173, 174, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 336, 336, 345, 345, 345, 346, 346, 344, 344,
	344, 344, 344, 348, 348, 349, 349, 347, 347, 347,
	347, 351, 351, 352, 352, 350, 350, 350, 350, 350,
	350, 350, 350, 350, 350, 350, 350, 350, 350, 339,
	339, 339, 35, 35, 35, 35, 35, 36, 36, 36,
	36, 36, 36, 353, 353, 353, 353, 353, 353, 353,
	353, 353, 353, 353, 353, 353, 353, 353, 353, 353,
	353, 353, 353, 353, 353, 353, 353, 353, 353, 353,
	353, 353, 353, 353, 354, 354, 355, 355, 356, 356,
	357, 357, 357, 357, 358, 358, 358, 358, 358, 359,
	359, 359, 359, 359, 359, 359, 360, 360, 361, 361,
	2, 317, 317, 318, 318, 319, 319, 319, 319, 320,
	320, 321, 321, 322, 322, 322, 322, 322, 322, 322,
	322, 322, 322, 26, 222, 222, 219, 219, 219, 220,
	220, 221, 221, 221, 338, 338, 338, 332, 332, 332,
	334, 334, 333, 333, 333, 335, 335, 340, 340, 340,
	340, 340, 342, 342, 342, 342, 342, 342, 343, 343,
	343, 341, 341, 50, 50, 51, 51, 51, 161, 161,
	161, 15, 15, 15, 15, 15, 21, 23, 23, 39,
	39, 40, 24, 24, 24, 24, 41, 41, 42, 27,
	27, 27, 27, 27, 27, 48, 48, 48, 47, 47,
	46, 46, 46, 46, 46, 46, 25, 25, 25, 25,
	49, 49, 44, 44, 43, 45, 45, 45, 45, 45,
	45, 45, 45, 45, 45, 45, 45, 28, 28, 28,
	28, 28, 28, 20, 316, 316, 316, 38, 38, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 54,
	54, 290, 291, 291, 291, 291, 291, 291, 291, 291,
	277, 277, 278, 278, 278, 278, 278, 267, 267, 267,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 244, 244, 244, 244, 250, 250, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 249, 249, 249,
	249, 249, 249, 249, 249, 251, 251, 251, 251, 251,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 253, 253, 253,
	253, 253, 253, 253, 253, 276, 276, 254, 254, 270,
	270, 271, 271, 271, 268, 268, 268, 269, 269, 257,
	258, 272, 259, 259, 259, 260, 260, 260, 261, 261,
	266, 266, 265, 265, 265, 265, 265, 265, 262, 262,
	262, 262, 263, 263, 264, 275, 275, 275, 275, 275,
	255, 37, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 303, 303, 212, 212, 213, 213,
	280, 280, 301, 301, 300, 300, 299, 299, 299, 289,
	289, 296, 296, 296, 296, 296, 296, 296, 296, 284,
	284, 284, 283, 283, 285, 285, 288, 288, 298, 298,
	297, 297, 281, 281, 281, 304, 304, 304, 304, 304,
	282, 282, 282, 282, 282, 305, 286, 286, 287, 287,
	287, 310, 311, 309, 309, 309, 309, 309, 124, 124,
	124, 293, 293, 293, 294, 294, 294, 295, 295, 295,
	295, 295, 295, 314, 314, 313, 313, 52, 53, 57,
	57, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 56, 160, 160, 160, 217, 217, 308, 306,
	306, 307, 307, 17, 17, 55, 55, 337, 337, 18,
	18, 18, 18, 18, 18, 18, 18, 18, 312, 312,
	312, 19, 19, 58, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 86,
	204, 204, 203, 203, 202, 202, 202, 205, 205, 205,
	205, 242, 242, 242, 60, 60, 60, 64, 64, 67,
	67, 67, 65, 66, 29, 30, 30, 30, 30, 31,
	218, 218, 62, 62, 63, 63, 63, 63, 78, 78,
	367, 367, 61, 368, 69, 70, 70, 71, 71, 71,
	208, 208, 75, 75, 75, 73, 73, 73, 74, 74,
	80, 80, 84, 84, 84, 84, 83, 83, 83, 83,
	163, 163, 168, 234, 234, 144, 144, 164, 164, 169,
	169, 169, 170, 170, 171, 171, 171, 171, 171, 166,
	166, 165, 165, 167, 132, 132, 232, 232, 232, 232,
	231, 231, 231, 231, 231, 231, 88, 88, 93, 93,
	95, 95, 95, 95, 95, 95, 99, 146, 146, 117,
	117, 118, 118, 118, 118, 118, 130, 130, 182, 182,
	181, 181, 184, 184, 94, 96, 96, 96, 96, 102,
	102, 103, 103, 104, 104, 216, 216, 239, 239, 239,
	108, 108, 108, 110, 109, 109, 109, 109, 111, 111,
	97, 97, 292, 292, 279, 246, 246, 247, 369, 369,
	369, 369, 112, 112, 114, 115, 115, 113, 113, 113,
	113, 113, 119, 119, 116, 120, 120, 120, 120, 121,
	121, 85, 85, 85, 85, 85, 85, 85, 85, 201,
	201, 123, 123, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 140, 140, 140, 140, 140, 140, 125,
	125, 125, 125, 125, 125, 125, 79, 79, 141, 141,
	141, 101, 100, 100, 82, 82, 81, 81, 142, 142,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 135, 135, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 134, 134, 134, 134, 134, 134, 134, 134,
	134, 134, 134, 134, 134, 134, 134, 134, 134, 366,
	366, 137, 136, 136, 136, 136, 136, 136, 76, 76,
	76, 76, 76, 240, 240, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	153, 153, 77, 77, 151, 151, 152, 154, 154, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 127, 127, 127, 127, 127, 127, 127, 127,
	129, 129, 129, 155, 155, 143, 143, 87, 156, 156,
	157, 158, 158, 159, 159, 162, 175, 175, 175, 176,
	176, 176, 176, 131, 131, 177, 177, 177, 126, 126,
	126, 126, 126, 126, 126, 180, 180, 179, 179, 178,
	178, 178, 178, 178, 178, 187, 187, 145, 145, 148,
	148, 147, 149, 188, 188, 192, 192, 192, 192, 189,
	189, 193, 193, 193, 193, 196, 196, 197, 197, 197,
	194, 194, 194, 191, 191, 191, 236, 236, 236, 199,
	199, 209, 209, 206, 206, 207, 207, 200, 200, 256,
	256, 256, 215, 215, 214, 214, 214, 210, 210, 210,
	211, 211, 233, 233, 229, 229, 235, 235, 230, 230,
	237, 237, 238, 238, 315, 315, 273, 273, 325, 325,
	274, 274, 326, 326, 328, 328, 323, 323, 324, 324,
	327, 327, 32, 329, 329, 330, 330, 331, 331, 331,
	331, 33, 34, 34, 34, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 228, 228, 228, 228, 228, 228, 226, 226,
	226, 226, 226, 363, 364,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 11, 5, 7, 1,
	5, 1, 3, 1, 3, 2, 1, 13, 0, 2,
	0, 2, 3, 3, 1, 3, 0, 2, 1, 3,
	4, 1, 3, 1, 3, 8, 9, 1, 1, 10,
	9, 8, 7, 7, 1, 1, 1, 3, 1, 3,
	1, 3, 0, 4, 3, 4, 5, 1, 3, 3,
	2, 2, 2, 2, 2, 1, 0, 0, 0, 2,
	3, 3, 11, 9, 11, 5, 5, 16, 12, 9,
	4, 0, 3, 0, 2, 2, 1, 3, 1, 1,
	2, 2, 2, 0, 2, 1, 2, 2, 2, 2,
	2, 0, 1, 1, 2, 3, 3, 5, 3, 3,
	4, 5, 4, 4, 2, 2, 2, 2, 2, 0,
	2, 2, 9, 10, 9, 5, 7, 7, 7, 7,
	8, 4, 6, 2, 3, 2, 3, 3, 3, 4,
	3, 3, 2, 2, 3, 2, 2, 2, 2, 2,
	3, 2, 2, 2, 3, 3, 2, 3, 3, 2,
	2, 2, 2, 2, 1, 3, 0, 3, 1, 3,
	0, 1, 1, 1, 1, 3, 1, 3, 3, 0,
	2, 5, 5, 5, 7, 5, 0, 3, 0, 3,
	4, 0, 1, 1, 3, 2, 3, 3, 3, 0,
	1, 1, 2, 2, 2, 2, 1, 2, 2, 3,
	3, 3, 3, 4, 2, 3, 3, 3, 3, 0,
	3, 0, 3, 3, 1, 1, 1, 3, 2, 1,
	1, 3, 3, 2, 1, 1, 3, 1, 2, 5,
	4, 6, 4, 3, 3, 6, 5, 5, 4, 3,
	5, 1, 3, 1, 1, 1, 1, 1, 0, 2,
	2, 1, 1, 1, 1, 1, 4, 5, 8, 1,
	2, 5, 7, 10, 8, 11, 1, 2, 5, 5,
	5, 5, 6, 3, 5, 1, 1, 1, 1, 3,
	1, 1, 1, 2, 1, 1, 2, 4, 2, 4,
	2, 3, 1, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 4,
	3, 2, 4, 3, 0, 2, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 5,
	5, 4, 1, 1, 2, 3, 4, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 0, 1, 1,
	0, 2, 3, 2, 2, 2, 2, 2, 6, 8,
	3, 3, 1, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 3,
	2, 2, 2, 2, 2, 1, 2, 2, 2, 1,
	4, 4, 3, 3, 2, 4, 5, 2, 3, 4,
	2, 2, 3, 3, 3, 3, 3, 4, 1, 1,
	1, 1, 1, 6, 6, 4, 4, 4, 5, 3,
	3, 3, 3, 3, 4, 6, 6, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 3, 0,
	5, 0, 3, 5, 0, 1, 1, 0, 1, 2,
	3, 1, 0, 3, 3, 0, 2, 2, 0, 1,
	0, 1, 1, 1, 1, 2, 2, 2, 5, 5,
	4, 4, 4, 4, 4, 2, 1, 2, 1, 2,
	2, 3, 2, 2, 2, 2, 1, 1, 1, 1,
	3, 2, 1, 1, 0, 3, 1, 1, 0, 1,
	5, 4, 0, 1, 1, 2, 2, 3, 2, 0,
	1, 3, 5, 3, 3, 5, 3, 2, 2, 1,
	1, 1, 1, 1, 0, 1, 0, 1, 1, 3,
	3, 3, 3, 3, 1, 10, 11, 11, 12, 12,
	3, 3, 3, 2, 1, 5, 1, 1, 0, 2,
	2, 3, 3, 1, 1, 2, 2, 2, 0, 1,
	2, 0, 1, 3, 1, 2, 3, 1, 1, 1,
	1, 1, 1, 0, 2, 0, 2, 1, 5, 1,
	3, 5, 4, 3, 5, 3, 8, 10, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 5,
	4, 5, 1, 2, 2, 4, 3, 6, 5, 3,
	9, 2, 2, 0, 1, 2, 0, 1, 7, 1,
	3, 8, 8, 3, 3, 3, 5, 3, 5, 5,
	5, 4, 4, 4, 4, 4, 4, 4, 0, 1,
	1, 3, 2, 3, 3, 4, 3, 5, 5, 5,
	4, 4, 4, 2, 2, 2, 6, 2, 4, 4,
	4, 5, 8, 6, 3, 5, 4, 2, 4, 3,
	2, 4, 5, 6, 2, 6, 6, 3, 3, 3,
	0, 1, 1, 1, 0, 2, 2, 0, 2, 3,
	2, 0, 1, 1, 2, 4, 1, 1, 1, 2,
	4, 4, 1, 1, 2, 3, 4, 4, 5, 3,
	1, 1, 3, 3, 1, 1, 1, 1, 0, 3,
	1, 1, 3, 0, 2, 0, 2, 1, 2, 2,
	0, 1, 0, 1, 1, 0, 1, 1, 0, 1,
	3, 5, 1, 1, 3, 5, 1, 2, 3, 5,
	2, 2, 6, 0, 1, 0, 3, 0, 1, 0,
	2, 2, 4, 1, 2, 2, 2, 2, 2, 0,
	2, 1, 3, 3, 1, 3, 0, 1, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 1,
	1, 4, 1, 3, 1, 1, 2, 2, 4, 2,
	6, 1, 4, 6, 3, 2, 0, 3, 0, 3,
	1, 3, 1, 3, 4, 4, 4, 4, 3, 2,
	4, 0, 1, 0, 2, 0, 1, 1, 1, 1,
	1, 2, 2, 1, 2, 3, 2, 3, 2, 2,
	12, 11, 1, 3, 3, 4, 3, 0, 0, 3,
	4, 3, 1, 3, 3, 2, 1, 1, 3, 1,
	1, 1, 1, 3, 3, 0, 5, 5, 5, 0,
	2, 1, 3, 3, 3, 2, 3, 1, 2, 0,
	3, 1, 1, 3, 3, 4, 4, 5, 3, 4,
	5, 6, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 0, 2, 1, 1,
	1, 3, 1, 3, 0, 1, 1, 3, 1, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 2, 2, 2, 2, 3,
	1, 1, 1, 1, 1, 1, 5, 6, 6, 6,
	5, 5, 5, 6, 5, 5, 6, 5, 5, 5,
	5, 6, 5, 5, 5, 4, 4, 5, 5, 5,
	5, 5, 4, 4, 4, 4, 4, 4, 4, 4,
	3, 6, 6, 4, 6, 6, 4, 8, 8, 8,
	8, 4, 6, 7, 7, 7, 9, 4, 7, 5,
	4, 4, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 8, 8, 0,
	2, 3, 4, 4, 4, 4, 4, 4, 0, 3,
	4, 7, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 3, 3,
	1, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	0, 1, 0, 2, 1, 2, 4, 0, 2, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 0, 3, 1, 3, 1, 0, 2,
	1, 0, 3, 1, 3, 2, 0, 1, 1, 0,
	2, 4, 4, 1, 1, 0, 2, 4, 2, 4,
	1, 3, 5, 4, 6, 0, 3, 1, 3, 3,
	1, 1, 1, 1, 1, 0, 5, 1, 3, 1,
	2, 3, 1, 1, 3, 3, 3, 3, 3, 1,
	3, 1, 2, 2, 3, 1, 1, 1, 1, 1,
	3, 3, 3, 1, 2, 1, 1, 1, 1, 1,
	1, 0, 1, 0, 2, 0, 3, 0, 1, 0,
	3, 3, 1, 1, 0, 1, 1, 1, 1, 1,
	0, 1, 0, 2, 1, 1, 1, 3, 1, 1,
	1, 1, 1, 1, 0, 2, 0, 1, 0, 4,
	0, 1, 0, 3, 0, 3, 0, 4, 0, 3,
	0, 3, 3, 1, 3, 2, 4, 1, 2, 1,
	2, 2, 2, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -362, -1, -3, -10, -11, -12, -13, -14, -16,
	-52, -17, -18, -19, -58, -59, -60, -64, -65, -66,
	-62, -61, -25, -28, -20, -68, -29, -30, -31, -32,
	-33, -34, -35, -36, -37, -5, 6, 7, -92, 29,
	-54, 180, -53, 183, 182, 218, 184, 211, 64, 341,
	-67, 344, 345, -367, -218, 269, 270, 20, 37, 346,
	348, 30, 31, 232, 286, 288, 313, -4, 492, 181,
	342, 213, 212, 26, -6, -7, -363, 68, 611, -158,
	15, -69, -368, -69, -72, 9, 10, 8, 441, -69,
	-290, -216, 108, 68, 23, -211, -222, 88, 432, 188,
	-220, 282, 284, -209, -210, -219, 242, 252, 44, 199,
	198, 253, 189, 282, 189, 190, 192, 432, 188, 225,
	224, 282, 284, 189, -113, -237, -226, -227, 300, 72,
	-225, 458, 462, 465, 466, 471, 290, 81, 322, 323,
	314, 324, 209, 283, 289, 292, 315, 578, 325, 327,
	328, 452, 453, 192, 202, 596, 307, 210, 489, 253,
	606, 599, 294, 401, 341, 357, 349, 372, 490, 549,
	264, 340, 418, 297, 257, 320, 550, 407, 413, 267,
	344, 427, 233, 551, 261, 263, 262, 247, 457, 268,
	36, 214, 368, 303, 242, 552, 545, 236, 35, 27,
	235, 430, 99, 553, 331, 415, 389, 332, 231, 554,
	494, 301, 414, 364, 313, 117, 240, 279, 411, 333,
	555, 390, 394, 556, 419, 287, 278, 557, 558, 334,
	559, 191, 293, 560, 243, 421, 298, 388, 200, 491,
	48, 222, 422, 392, 398, 561, 330, 562, 563, 564,
	565, 311, 309, 310, 312, 254, 259, 53, 186, 396,
	395, 397, 260, 417, 377, 375, 566, 567, 302, 206,
	568, 569, 376, 18, 570, 571, 425, 305, 572, 573,
	574, 487, 575, 576, 416, 391, 393, 241, 116, 577,
	308, 412, 317, 493, 291, 579, 336, 221, 216, 426,
	326, 580, 581, 582, 583, 584, 285, 284, 345, 318,
	346, 265, 585, 586, 587, 588, 251, 234, 429, 420,
	52, 403, 589, 321, 337, 406, 342, 228, 7, 258,
	299, 410, 319, 266, 252, 255, 379, 223, 590, 591,
	366, 367, 343, 226, 218, 111, 428, 544, 282, 338,
	51, 229, 592, 593, 256, 230, 347, 296, 369, 189,
	133, 373, 418, 180, 408, 409, 415, -284, 416, 224,
	227, -242, 189, -204, 407, 287, 308, 462, 230, 231,
	190, 191, 32, 420, 419, 411, -237, 193, 347, -78,
	184, 219, -113, -49, 72, 271, -49, 29, 72, 72,
	36, 72, 346, 410, 410, 75, 493, 233, 21, -354,
	-335, 317, -353, -333, 181, 180, 10, 182, 322, 323,
	324, 190, 8, 30, 578, 207, 325, 326, 6, 211,
	327, 328, 225, 9, 329, -338, 74, 72, -225, 21,
	-354, -335, 317, -213, -212, 339, 398, -91, 548, -89,
	-98, -239, -237, -226, 74, -200, 194, 343, -71, 5,
	-9, -3, 492, -176, 17, 16, -75, 54, 55, -70,
	-83, 124, -85, -237, -122, 91, -128, 28, 72, -225,
	24, -127, 300, 219, -123, -150, -226, -149, -101, 133,
	-241, 122, 123, 130, 92, 176, -135, -133, -134, -136,
	-138, -139, 74, 73, 82, 75, 76, 77, 78, 83,
	84, 85, -229, -227, -224, 458, 462, 465, 466, 471,
	-147, -363, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 58, 59, 456, 188, 442, 443,
	370, 8, 444, 445, 446, 488, 209, 450, 94, 47,
	533, 431, 440, 439, 438, 436, 437, 433, 435, 434,
	452, 453, 195, 432, 128, 441, 475, 476, 477, 478,
	479, 480, 481, 482, 484, 485, 483, 459, 460, 461,
	463, 464, 467, 468, 469, 470, 472, 473, 474, 495,
	185, 181, 184, 90, 23, 25, 496, 239, 93, 355,
	384, 449, 16, 20, 203, 187, 373, 201, 132, 197,
	204, 273, 275, 180, 62, 497, 274, 408, 498, 499,
	500, 501, 363, 361, 272, 502, 10, 26, 212, 246,
	503, 359, 182, 237, 97, 98, 505, 41, 40, 306,
	276, 213, 506, 360, 507, 508, 19, 65, 205, 11,
	199, 227, 605, 509, 286, 13, 115, 14, 510, 511,
	512, 513, 194, 110, 190, 595, 60, 244, 514, 353,
	515, 516, 517, 518, 519, 354, 87, 520, 521, 107,
	522, 56, 486, 32, 232, 546, 447, 523, 524, 38,
	37, 383, 387, 382, 525, 399, 108, 17, 30, 526,
	527, 220, 386, 352, 381, 547, 528, 529, 249, 63,
	339, 362, 609, 33, 66, 217, 335, 304, 42, 88,
	15, 245, 61, 34, 454, 112, 610, 365, 196, 224,
	531, 423, 248, 532, 113, 358, 548, 207, 109, 348,
	183, 316, 270, 208, 534, 288, 535, 238, 114, 409,
	536, 537, 451, 29, 211, 269, 351, 198, 538, 250,
	281, 271, 280, 539, 540, 295, 43, 607, 594, 189,
	39, 96, 385, 350, 380, 193, 448, 225, 277, 5,
	44, 31, 404, 9, 329, 64, 67, 374, 371, 541,
	378, 608, 12, 542, 455, 492, 424, 89, 543, 405,
	-69, -69, -69, -189, 343, -196, -193, 419, 420, -194,
	-197, -191, -150, 398, 575, 576, 418, 373, 417, -229,
	-237, -226, 300, 219, 133, 459, 460, 461, 94, 370,
	442, 475, 433, 435, 431, 434, 432, 28, 476, 24,
	85, 477, 456, 195, 8, 176, 463, 464, 478, 479,
	480, 58, 436, 437, 488, 128, 91, 481, 482, 83,
	484, 485, 533, 441, 59, 483, 188, 469, 468, 467,
	470, 444, 445, 84, 438, 439, 440, 47, 473, 472,
	474, -2, -6, 6, -113, -291, -278, -282, -229, -226,
	-227, -228, 215, 204, -305, 72, -225, 300, 219, 50,
	86, 55, 54, 201, 190, 192, 441, -207, 195, -207,
	225, 224, -221, 250, -207, -207, 189, -220, 100, 100,
	-55, -113, -337, -332, -338, -206, 195, -229, -206, -206,
	-206, -206, -206, -206, -206, -113, 177, -105, -113, 72,
	29, -205, 108, 12, 432, 188, 189, 224, 225, 192,
	-286, 11, 110, 228, 228, 228, 229, 228, -203, 410,
	412, 226, 413, 414, 12, -86, 108, 19, -363, -176,
	-176, 125, 72, 346, 193, -63, -3, -13, -11, -12,
	-9, 100, -130, 23, 29, 29, 74, 51, 29, -44,
	-43, -45, 257, 258, 259, 260, 261, 262, 263, 264,
	265, 266, 267, 268, 29, -316, 68, -273, 398, 72,
	-329, -330, -113, 75, 75, 66, 308, 66, 69, 193,
	69, 66, -355, 318, 68, -355, 284, 318, 319, 252,
	282, 192, -355, -355, 284, -355, -355, -355, -355, -355,
	410, -355, -355, -355, 320, 321, -355, 408, 192, -355,
	-355, -355, -355, -355, 71, 66, 69, 308, 66, 11,
	66, -302, 133, 331, 332, 333, 334, 330, 308, 335,
	336, 337, 228, 338, -4, -89, 69, -180, -363, 189,
	423, -8, -6, -363, 21, 22, -364, 70, -91, -177,
	19, 30, -131, 75, 78, -159, -162, -85, -237, 50,
	-73, 21, 22, 80, 11, -232, 90, 88, 89, 107,
	-231, 23, 72, -225, -226, 74, -227, -228, 177, -85,
	-125, 110, 91, 108, 109, 93, 119, 118, 129, 122,
	123, 124, 125, 126, 127, 128, 120, 121, 132, 100,
	101, 102, 103, 104, 105, 106, -201, -363, -101, -363,
	177, -363, 177, 178, 179, 177, -128, -128, -128, -128,
	-128, -128, -128, -363, 177, 177, -363, -363, -363, -363,
	-363, -9, -142, -85, 492, -363, -363, -363, -363, -363,
	-363, -363, -363, -363, -363, -363, -363, -363, -363, -363,
	-153, -85, -363, -363, -366, -137, -363, -366, -137, -366,
	-137, -366, -363, -366, -137, -366, -137, -366, -366, -137,
	-366, -363, -363, -363, -363, -363, -363, -363, -363, -363,
	-363, -363, -363, -363, -363, -363, -363, -363, -363, -363,
	-363, -363, -363, -363, -363, -363, -363, -363, -363, -363,
	-200, -200, 11, -105, -106, -116, -237, 69, -190, -195,
	421, 423, 343, -194, -194, -236, -229, 74, 28, 100,
	29, 177, -158, -69, 70, 69, -282, -244, -250, -252,
	-251, -253, -248, -249, 370, 373, 377, 375, 371, 376,
	133, 374, 379, 380, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 29, 214, 366, 367, 368, 369, 390,
	391, 392, 393, 394, 395, 396, 397, 349, 372, 490,
	350, 351, 352, 353, 354, 355, 357, 358, 359, 360,
	361, 362, 363, 364, -244, -244, -244, -244, 72, 228,
	-226, -305, 68, -229, -113, -222, -220, 72, 91, 72,
	-112, -229, -237, -119, -229, -237, 251, -341, -340, -332,
	-335, -207, -221, -332, 256, 254, 255, 69, 193, 69,
	193, 71, -105, 24, 66, -107, -113, 72, 72, -112,
	-119, -334, -332, -335, -238, -237, -223, 495, 185, 21,
	181, 184, 90, 23, 25, 496, 239, 93, 355, 133,
	459, 460, 461, 384, 449, 16, 20, 203, 94, 187,
	370, 373, 201, 132, 197, 204, 273, 275, 442, 475,
	180, 62, 497, 433, 435, 431, 434, 274, 432, 408,
	498, 499, 500, 501, 363, 361, 272, 28, 502, 10,
	476, 26, 212, 246, 22, 503, 126, 359, 182, 237,
	97, 98, 505, 41, 40, 306, 24, 276, 213, 85,
	506, 477, 360, 507, 508, 19, 65, 205, 11, 199,
	227, 605, 509, 286, 13, 456, 115, 14, 510, 511,
	512, 513, 195, 194, 110, 190, 595, 60, 244, 8,
	514, 353, 515, 516, 517, 518, 519, 354, 176, 87,
	520, 521, 107, 522, 56, 463, 464, 486, 45, 32,
	232, 478, 479, 546, 480, 447, 523, 524, 38, 37,
	383, 387, 382, 525, 399, 58, 108, 17, 436, 437,
	30, 526, 527, 488, 220, 386, 352, 381, 547, 528,
	529, 128, 249, 63, 91, 339, 481, 482, 83, 362,
	609, 33, 66, 217, 335, 304, 42, 88, 15, 245,
	61, 34, 454, 112, 610, 484, 365, 196, 224, 531,
	423, 248, 532, 113, 485, 358, 548, 207, 109, 348,
	183, 533, 441, 316, 270, 208, 534, 288, 59, 535,
	238, 114, 483, 188, 409, 536, 6, 537, 451, 29,
	211, 269, 351, 198, 538, 250, 281, 271, 280, 539,
	49, 540, 295, 43, 469, 468, 467, 470, 607, 57,
	444, 445, 594, 189, 39, 96, 385, 350, 380, 193,
	448, 225, 84, 277, 5, 44, 31, 404, 9, 329,
	64, 67, 438, 439, 440, 47, 374, 371, 541, 473,
	378, 472, 474, 608, 95, 12, 542, 455, 492, 424,
	89, 543, 405, 69, -205, 74, -241, -85, -207, -207,
	-113, -113, -113, -113, -113, -205, -205, -205, -205, -202,
	11, 110, 11, -202, -202, -85, -128, -332, 434, 124,
	-237, 72, 72, 346, 72, 33, -44, -44, 74, -44,
	69, 100, -44, 70, -142, -315, 595, 69, -331, 23,
	423, 424, 399, -357, 189, 227, 224, 66, -357, -353,
	326, -334, -333, -332, -355, -356, -229, -355, -355, -355,
	410, -355, -355, -355, -355, -355, -355, -355, -355, -338,
	-357, 286, 69, -357, -334, -332, 330, 330, 330, 330,
	330, 330, -98, 23, -179, -178, -230, -229, -226, -227,
	-228, 215, -223, -113, 424, 425, -9, -186, 87, 9,
	110, 69, 18, 69, -175, 25, 26, 177, -129, 51,
	75, 78, -208, 49, -113, -85, -85, -85, -140, 83,
	91, 84, 85, -231, 215, 124, -238, -230, -227, -226,
	300, 219, -223, -229, -128, -141, -147, -101, 79, 110,
	108, 109, 93, -128, -128, -128, -128, -128, -128, -128,
	-128, -128, -128, -128, -128, -128, -128, -128, -240, 72,
	74, 72, -230, -81, -84, 124, -85, -237, -230, -127,
	83, -127, -229, -229, -73, -230, -230, -73, -73, -73,
	-73, -73, -364, 69, -364, -9, -81, -81, -81, -364,
	-85, -85, -81, -81, -150, 74, -81, -150, 74, -81,
	-128, 447, 448, 449, -81, -81, -73, -151, -152, 95,
	-150, -81, -364, -128, -229, -229, -81, -82, -81, -81,
	-81, -364, -364, -84, -81, -84, -81, -81, -364, -364,
	-364, -364, -81, -81, -81, -81, -81, -81, -81, -81,
	-81, -81, -81, -81, -115, 87, -113, -88, -93, -95,
	-96, -117, -100, -363, -94, -97, -113, -101, 72, 486,
	-113, -105, -365, 11, 67, -365, 69, 177, -193, -196,
	69, 422, 424, 425, -190, -260, 132, 66, 86, -85,
	-230, -238, -176, -75, -293, -294, -295, -230, 74, 75,
	81, 322, 292, -278, -280, -281, -282, -296, 204, -304,
	196, 198, 199, 44, -283, 205, 190, 45, -245, -268,
	403, 404, -254, 68, -254, -254, 378, 370, 373, 371,
	-254, -254, -254, -254, -254, -259, 373, -259, -259, -259,
	-259, 371, 68, 68, -254, -254, -254, -270, 68, -270,
	365, -271, 68, -271, -271, -271, -271, -245, -245, -245,
	-245, -305, -305, -305, -85, -233, 67, 23, 192, -266,
	-265, -262, -263, -264, -261, 28, 24, -266, -50, 239,
	210, 177, 68, 177, 242, 243, -336, 69, 28, -342,
	283, -113, 219, -113, -113, -332, -332, -338, -312, 208,
	203, -113, 69, 69, -113, 74, 72, 72, -130, -287,
	11, 110, -205, -237, -237, -113, -130, -205, -79, 215,
	67, -366, -364, 72, -128, -43, -127, 70, -114, 87,
	74, -330, -239, 398, 424, -358, 124, -229, -357, -358,
	-361, 492, 193, 70, 69, -355, -358, 304, 286, -358,
	11, -303, 19, -100, -363, -364, 69, 177, -57, -56,
	185, 182, 183, 186, 187, -308, 401, 181, 236, 235,
	221, -364, -185, 34, 35, -229, 52, -131, -131, -162,
	-199, 19, 11, 47, 47, -74, 57, 83, 84, 85,
	177, -363, -141, -128, -128, -128, -79, 90, -364, 69,
	-364, 177, -82, -81, -81, -81, -81, -81, -85, -364,
	-364, -364, -364, 69, 67, 23, -364, 67, -364, 11,
	11, -364, 11, 11, -364, -364, 11, -128, -128, -128,
	-364, -364, -81, -154, -152, 97, -85, -364, -364, -364,
	69, 69, -364, -364, -364, -364, -163, 454, -163, -364,
	-364, -364, -364, -364, -163, -163, -163, -163, -364, -364,
	-364, -364, -364, -364, -364, -364, -364, -364, -364, -364,
	-183, 112, -113, 29, 69, -108, -110, -109, -111, 56,
	60, 62, 57, 58, 59, 63, -216, -88, -99, 47,
	-363, -118, 112, -120, 23, -239, 64, 194, 65, -363,
	-363, -183, 67, -88, -88, -116, -237, 124, -195, -198,
	426, 423, 429, 72, 74, 177, -177, 69, -295, 100,
	-282, 68, 72, -288, -226, 45, -283, -285, -283, -283,
	-288, 72, -288, 45, 83, 91, -257, -258, -272, -275,
	-255, 23, 605, 406, 28, 66, 401, 196, 45, 44,
	199, 81, -269, 405, 75, -259, -259, -254, -254, -254,
	378, -254, -259, -260, 133, 29, -260, 133, -260, 133,
	-260, 133, -260, 133, -259, -276, 74, -276, 75, -270,
	75, 70, 66, -229, -172, -113, -263, -262, -264, 373,
	418, 132, 430, -51, 8, 9, 10, -229, -317, -318,
	-319, -229, 110, 244, 245, -229, -345, 316, -340, 284,
	293, 90, 16, 492, 193, 193, -113, -332, -121, 12,
	72, 72, -202, -205, -128, -335, 230, 231, -183, 189,
	-331, 193, 177, 177, -358, 193, 307, -334, -229, 11,
	11, 304, 11, -334, 340, -178, -230, 69, -217, -283,
	-314, -281, -282, -313, 197, 204, -217, 204, 201, -283,
	205, 196, 197, -214, -283, 193, 23, -217, -217, -289,
	100, -217, 32, 32, 112, 69, 74, 74, 53, -113,
	-80, -173, 124, -230, -82, -79, 90, -128, -84, 124,
	-238, -364, -364, -364, -364, -364, -364, -243, 133, 370,
	214, 368, 361, 388, 375, 403, 366, 404, -240, -243,
	-240, -128, -128, -128, -128, -128, 11, 11, 11, 489,
	-158, 99, -85, 96, -128, -128, -229, -168, -363, -163,
	-163, -163, -163, -163, -164, -163, -164, -164, -164, -164,
	-164, -164, -164, -164, -164, -164, -164, -126, 29, 47,
	-363, -9, -363, -188, -192, -150, -226, -228, 215, 300,
	219, -93, -95, -95, -93, -95, 56, 56, 56, 61,
	56, 61, 56, -109, -239, -364, -364, -146, 238, -363,
	33, -239, -120, 190, 190, 190, -82, -128, -121, -88,
	-121, -121, 177, 423, 427, 428, -294, -295, -298, -297,
	-229, -226, 196, -304, 44, -304, -288, -288, -288, -288,
	68, 83, -363, 606, 75, -128, 9, 45, 45, 45,
	74, 70, -260, 133, -260, 133, -259, -254, -260, 133,
	72, 133, -260, 133, 70, 69, 70, 69, 70, 69,
	-124, 553, 91, -113, -174, 23, 29, -289, -289, -289,
	66, 70, 69, -244, -229, -229, -229, -348, 492, 289,
	-346, -344, 295, 296, 297, 298, 299, -335, 294, -342,
	291, 74, 72, -113, -332, -85, -130, -259, -113, -334,
	124, 124, -229, 193, -334, 304, -360, 492, -334, -334,
	11, -334, 74, -56, 68, -277, 72, -225, -288, -210,
	196, 72, 72, 72, -226, -225, -227, -228, 72, -226,
	-225, -227, -228, -229, 45, 45, 72, -113, -229, -277,
	72, -85, -229, -229, -229, -186, 69, -83, -364, -128,
	177, -164, -164, -164, -164, -164, -364, -254, -254, -254,
	-271, -254, 354, -254, 354, -364, -364, -364, 19, 19,
	19, 19, -364, -128, -128, -128, -363, -77, 451, -85,
	69, 69, -234, 72, -187, 66, -188, -145, -148, -147,
	-363, -9, -364, -179, 6, 492, -184, -229, -121, 69,
	100, 100, 100, 100, -103, -102, 66, 67, -104, 66,
	-102, 56, 56, -182, 68, 69, -147, -363, -184, -128,
	-120, -363, -363, -363, -364, 69, -158, -121, 70, 69,
	-254, -254, 45, -285, -181, -229, -128, 23, -134, 431,
	440, 439, 438, 436, 437, 433, 435, 434, 452, 453,
	-260, 133, -259, 74, -259, 75, 75, 553, 68, -9,
	-172, -289, 72, 133, 72, 133, 74, -113, -320, -321,
	-322, 81, 491, 91, 246, 247, 206, 248, 249, 250,
	-319, -244, -244, -244, -351, -352, -350, 292, 314, 315,
	300, -349, -347, 309, 310, 311, 312, 90, 74, 74,
	74, -343, 283, 90, 292, 16, 23, -205, -323, -203,
	-360, -334, -360, 286, -334, -277, -160, 209, 210, -244,
	-244, -233, -285, 45, 72, -215, 193, 23, 193, -160,
	-277, 29, 182, 87, -90, 11, -173, -173, 124, -259,
	72, -128, -128, -128, -128, -364, -364, -364, -128, -364,
	74, -128, -128, -144, 112, 27, -187, 69, -364, -364,
	47, -364, -364, 69, -158, -192, -85, -85, -85, -85,
	-85, 68, -85, -181, 238, -364, -120, -216, -181, -181,
	-181, 74, -176, -300, -299, 67, 200, 81, -297, -175,
	-175, -288, -288, 70, 69, -364, -363, -260, 133, -260,
	133, 70, 70, -298, -172, -174, 72, 133, 19, -173,
	-322, 74, 250, 246, 250, 250, 250, 250, 251, -339,
	81, 290, -350, 301, 558, 285, 316, 75, 75, 111,
	30, 31, -347, 75, 75, 75, 75, -344, 16, 492,
	-342, 291, 74, 74, -324, 38, -326, 39, -359, 23,
	-360, -359, 304, 70, 72, -245, -245, 68, -288, -288,
	72, -229, -160, 28, 28, -363, -121, -88, -83, -364,
	-364, -364, -364, -76, 110, 492, -364, -364, -158, 16,
	45, -148, -145, 47, -9, -363, -229, -176, -181, 70,
	-147, -118, -239, -364, -364, -364, 413, -299, 72, -289,
	74, 207, -229, -267, 608, 607, -128, 70, -9, 237,
	-174, 36, 36, 242, 243, 74, 74, 28, 302, 176,
	28, 75, 176, 457, 291, 74, 72, 292, -256, 194,
	-327, 43, -325, -274, 42, 16, -332, -359, -298, -233,
	68, -128, -306, -307, 112, -155, 13, -173, -364, 490,
	63, 493, -169, 114, 113, -142, 9, -145, -9, 70,
	-120, -363, 75, -113, -364, -301, -300, -172, 238, -22,
	-3, -11, -12, -13, -14, -16, -52, -17, -18, -23,
	-24, -19, -58, -59, -67, -65, -66, -62, -61, -27,
	-25, -28, -20, -29, -30, -31, -35, -36, -26, -37,
	94, 195, 272, 341, 75, 28, 75, 28, 305, 292,
	23, -182, 75, -326, 16, -328, 40, 41, 74, 492,
	70, 68, -298, -364, 69, -229, -156, 14, 16, 53,
	491, 494, -364, -170, 93, -171, 111, 457, -132, 75,
	176, -170, -188, -364, -292, -279, -230, 68, -267, -161,
	240, 241, -172, -85, -85, 72, -48, -235, 275, 276,
	277, -230, -38, -22, 303, 303, 74, 38, 114, 74,
	16, 16, 284, -301, -298, 70, -307, 47, -166, 455,
	-157, -85, -143, -87, -85, 53, -171, 116, 117, 238,
	116, 117, -127, -364, 69, -244, -181, -172, 72, 72,
	-39, -40, 95, 96, 273, 274, 278, -244, 69, 611,
	74, 74, 28, 289, 21, -335, 70, -301, 222, -165,
	-167, -229, 69, 492, 90, -229, -364, -279, -246, 487,
	24, 70, -174, 99, 97, -40, -85, -38, 19, 19,
	19, 28, -230, 99, -22, 306, -301, 223, 69, 23,
	-87, 493, -171, 23, -239, 74, 487, -310, -311, 66,
	-15, -21, -14, -11, -12, -13, 341, 492, 94, -38,
	96, 611, -49, 75, -9, -47, -46, 75, -49, 280,
	91, 281, 72, -128, -335, -363, -167, -168, 494, -239,
	-247, 74, -311, 66, -310, 66, 10, 9, -172, -38,
	-91, 611, -38, 99, 97, -41, -42, 98, -22, 69,
	279, -128, 220, -369, 83, 28, 332, -309, 208, 203,
	206, 29, -309, 611, 99, 611, 195, -38, 99, 97,
	-42, -85, -46, -364, -364, 66, -128, 66, 202, 28,
	83, 99, 94, 611, 195, -38, 96, 505, 66, 505,
	99, 611, -38, 505, 195, 99, 611, 195,
}

var yyDef = [...]int{
	-2, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, 1201, 783, 783, 0, 783,
	885, -2, 637, 0, 0, 0, 0, -2, 756, 757,
	758, 762, 763, 778, 780, 0, 347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 558, -2, 0, 1277,
	0, 781, 770, 771, 41, 0, 0, 2113, 2, 1209,
	0, 792, 785, 0, 783, 783, 783, 67, 68, 0,
	99, 0, 0, 0, 886, 0, 0, 0, 1275, 1275,
	251, 1275, 1275, 0, 1291, 249, 0, 1272, 1287, 1288,
	1289, 0, 0, 0, 1273, 0, 1273, 1273, 1273, 1273,
	1273, 1273, 1273, 0, 702, 917, 919, 920, 921, 1300,
	1301, 2108, 2109, 2110, 2111, 2112, 2084, 2085, 2086, 2087,
	2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097,
	2098, 2099, 2100, 2101, 1879, 1880, 1881, 1882, 1883, 1884,
	1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894,
	1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904,
	1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914,
	1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924,
	1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934,
	1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944,
	1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954,
	1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964,
	1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974,
	1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984,
	1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994,
	1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,
	2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014,
	2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024,
	2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034,
	2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044,
	2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054,
	2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064,
	2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074,
	2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 0,
	0, 0, 747, 0, 713, 714, 715, 0, 717, 0,
	0, 0, 0, 0, 727, 730, 734, 0, 1209, 1209,
	579, 580, 581, 752, 753, 741, 754, 0, 0, 56,
	0, 0, 866, 326, 328, 0, 348, 0, 351, 354,
	1306, 764, 0, 0, 1331, 1332, 0, 0, 0, 0,
	0, 2017, 194, 265, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 0, 196, 196, 196, 2025, 196, 0,
	196, 196, 196, 196, 196, 264, 254, 255, 256, 0,
	0, 0, 2017, 0, 559, 556, 557, 57, 0, 46,
	58, 1225, 887, 888, 889, 0, 1278, 759, 0, 787,
	0, 39, 0, 1215, 0, 0, 795, 793, 794, 784,
	0, 806, 836, 0, 931, 1764, 937, -2, -2, -2,
	1677, 980, 981, 982, 983, 984, 985, 986, 987, 1622,
	0, 0, 0, 0, 0, 1719, 1010, 1011, 1012, 1013,
	1014, 1015, 1182, 1183, 1184, 1185, 1186, 1187, 1188, -2,
	-2, -2, 1169, 1170, 0, 2108, 2109, 2110, 2111, 2112,
	1242, 0, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112,
	1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122,
	1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132,
	1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142,
	1143, 1144, 1145, 1146, 1745, 1808, 1696, 1813, 1641, 0,
	1633, 1710, 1837, 1838, 0, 1753, 2090, 0, -2, 1862,
	1801, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	2099, 2100, 1703, 1651, 1761, 1802, 1642, 1663, 1682, 1731,
	1732, 1734, 1766, 1767, 1785, 1794, 1812, 1623, 1624, 1625,
	1726, 1727, 1834, 1833, 1832, 1835, 1868, 1866, 1869, 1611,
	1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621,
	1626, 1627, 1628, 1629, 1630, 1632, 1634, 1635, 1636, 1637,
	1638, 1639, 1640, 1643, 1644, 1645, 1650, 1652, 1653, 1654,
	1655, 1656, 1657, 1658, 1659, 1661, 1662, 1664, 1665, 1666,
	1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676,
	1678, 1679, 1681, 1683, 1684, 1685, 1686, 1687, 1688, 1689,
	1690, 1691, 1692, 1693, 1694, 1695, 1697, 1698, 1699, 1700,
	1701, 1702, 1704, 1705, 1706, 1707, 1708, 1709, 1711, 1712,
	1713, 1714, 1715, 1716, 1717, 1718, 1720, 1721, 1722, 1723,
	1724, 1725, 1728, 1729, 1730, 1733, 1735, 1736, 1737, 1738,
	1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751,
	1752, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1762, 1763,
	1765, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777,
	1778, 1779, 1780, 1781, 1782, 1783, 1784, 1786, 1787, 1788,
	1789, 1790, 1791, 1792, 1793, 1795, 1796, 1797, 1798, 1799,
	1800, 1803, 1804, 1805, 1806, 1807, 1809, 1810, 1811, 1814,
	1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824,
	1825, 1826, 1827, 1828, 1829, 1830, 1831, 1836, 1839, 1840,
	1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1850, 1851,
	1852, 1853, 1854, 1855, 1856, 1857, 1858, 1863, 1864, 1865,
	1867, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878,
	1277, 1277, 0, 84, 2067, 0, 1249, -2, -2, 1251,
	0, 0, 0, -2, -2, -2, -2, 1634, -2, 1169,
	0, 0, 0, 0, 1622, 1623, 1624, 1625, 1631, 1633,
	1641, 1642, 1646, 1647, 1648, 1649, 1651, 1660, 1663, 1677,
	1680, 1682, 1696, 1703, 1710, 1719, 1726, 1727, 1731, 1732,
	1734, 1745, 1748, 1749, 1753, 1761, 1764, 1766, 1767, 1768,
	1785, 1794, 1801, 1802, 1808, 1812, 1813, 1832, 1833, 1834,
	1835, 1837, 1838, 1849, 1859, 1860, 1861, 1862, 1866, 1868,
	1869, 100, 1201, 783, 101, 0, 392, 393, 0, 0,
	0, 0, 0, 0, 604, 1294, 1295, 2102, 2103, 2104,
	2105, 2106, 2107, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 1275, 251, 0, 0,
	683, 0, 684, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 701, 0, 703, 78, 704,
	747, 706, 0, 0, 1275, 1275, 0, 0, 0, 0,
	0, 606, 607, 747, 747, 747, 747, 744, 0, 744,
	724, 744, 742, 743, 0, 729, 0, 0, 0, 737,
	738, 0, 765, 0, 0, 772, 774, 775, 776, 777,
	773, 0, 782, 0, 0, 0, 330, 0, 0, 350,
	332, 0, 335, 336, 337, 338, 339, 340, 341, 342,
	343, 344, 345, 346, 0, 353, 0, 1304, 1307, 769,
	1322, 1323, 0, 1333, 1334, 200, 0, 200, 0, 0,
	0, 0, 163, 196, 0, 165, 196, 196, 196, 0,
	196, 196, 172, 173, 196, 175, 176, 177, 178, 179,
	196, 181, 182, 183, 196, 196, 186, 196, 196, 189,
	190, 191, 192, 193, 263, 200, 0, 0, 200, 0,
	0, 541, 0, 0, 0, 0, 546, 547, 548, 549,
	0, 0, 552, 553, -2, 45, 0, 0, 0, 0,
	0, 42, 63, 0, 788, 789, 62, 2114, 0, 50,
	0, 0, 1210, 1213, 1214, 1202, 1203, 1206, 0, 0,
	790, 796, 797, 786, 0, 807, 0, 0, 0, 0,
	837, 0, 840, 841, 842, 843, 844, 845, 0, 935,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 959,
	960, 961, 962, 963, 964, 965, 938, 0, 952, 0,
	0, 0, 0, 0, 0, 0, 1003, 1004, 1005, 1006,
	1007, 1008, 0, 795, 0, 0, 795, 795, 795, 795,
	795, 0, 0, 978, 1874, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 795,
	0, 1161, 0, 0, 1072, 1081, 0, 1073, 1082, 1074,
	1083, 1075, 0, 1076, 1084, 1077, 1085, 1078, 1079, 1086,
	1080, 0, 0, 0, 974, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 80, 917, 0, 85, 87,
	0, 0, 2067, 1252, 1253, 515, 1266, 1267, 1268, 0,
	1264, 0, 1209, 792, 621, 0, 394, 410, 504, 422,
	423, 424, 497, 426, 497, 497, 0, 497, 497, 497,
	497, 497, 512, 512, 512, 512, 512, 468, 469, 470,
	471, 472, 0, 0, 445, 497, 497, 497, 449, 487,
	488, 489, 490, 491, 492, 493, 494, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 499, 499, 501,
	501, 501, 501, 501, 410, 410, 410, 410, 0, 0,
	0, 603, 0, 1292, 0, 0, 251, -2, 0, -2,
	0, 912, 0, 0, 922, 0, 0, 111, 281, 267,
	110, 0, 245, 250, 246, 247, 248, 0, 0, 0,
	0, 258, 698, 1274, 0, 691, 76, 692, 693, 694,
	695, 696, 260, 697, 918, 1302, 1303, 1335, 1336, 1337,
	1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347,
	1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357,
	1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367,
	1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377,
	1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387,
	1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397,
	1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407,
	1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417,
	1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427,
	1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437,
	1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447,
	1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457,
	1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467,
	1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477,
	1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487,
	1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497,
	1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507,
	1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517,
	1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527,
	1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537,
	1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547,
	1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557,
	1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567,
	1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577,
	1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587,
	1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597,
	1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607,
	1608, 1609, 1610, 0, 705, 748, 0, 750, 0, 0,
	866, 710, 711, 712, 608, 718, 719, 720, 726, 747,
	0, 0, 0, 866, 747, 728, 966, 731, 1089, 0,
	755, 767, 766, 0, 779, 0, 327, 329, 331, 349,
	0, 0, 352, 355, 0, 0, 0, 0, 1325, 0,
	1327, 1329, 0, 0, 201, 202, 203, 200, 0, 195,
	0, 218, 266, 0, 164, 0, 198, 166, 167, 168,
	196, 170, 171, 174, 180, 184, 185, 187, 188, 262,
	0, 0, 0, 0, 161, 0, 542, 543, 544, 545,
	554, 551, 59, 0, 0, 1227, 0, -2, 1231, 1232,
	1233, 1234, 1299, 0, 760, 761, 0, 37, 0, 1216,
	0, 0, 0, 0, 1205, 1207, 1208, 0, 0, 1190,
	0, 0, 798, 791, 40, 932, 933, 934, 936, 953,
	0, 955, 957, 838, 839, 808, 0, 1171, 1172, 1173,
	1174, 1175, -2, 1298, 943, 944, 968, 969, 970, 0,
	0, 0, 0, 966, 948, 0, 988, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1002, 1103,
	1104, 0, 1179, 0, 976, 802, 803, 0, 1180, 1000,
	1189, 1001, 1176, 1009, 974, 1178, 1177, 0, 0, 0,
	0, 0, 971, 0, 1241, 0, 0, 0, 0, 1050,
	0, 0, 0, 0, 984, 1182, 0, 984, 1182, 0,
	0, 1735, 1847, 1627, 0, 0, 0, 1167, 1164, 0,
	0, 0, 1090, 0, 0, 0, 0, 0, 975, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 82, 0, 916, 0, 846, 848,
	849, 850, -2, 0, 854, 855, 925, 972, 1300, 0,
	-2, 0, 0, 74, 75, 0, 0, 0, 1250, 0,
	0, 0, 90, 91, 86, 1254, 0, -2, 1261, 1262,
	1171, 0, 1215, 795, 391, 622, 624, 627, 628, 629,
	630, 631, 632, 395, 397, 398, 399, 0, 586, 594,
	0, 0, 584, 586, 586, 0, 582, 583, 402, 507,
	505, 506, 425, 0, 512, 512, 497, 497, 497, 497,
	454, 512, 457, 460, 461, 515, 0, 515, 515, 515,
	515, 512, 0, 0, 446, 447, 448, 437, 0, 438,
	499, 440, 0, 441, 442, 443, 444, 403, 404, 405,
	406, 600, 601, 602, 0, 0, 0, 96, 0, 105,
	-2, 522, 523, 524, 0, 519, 1276, 106, 0, 283,
	284, 0, 221, 0, 252, 253, 113, 0, 0, 268,
	0, 389, 390, 0, 685, 0, 687, 257, 689, 699,
	700, 690, 0, 0, 79, 749, 707, 708, 709, 929,
	0, 0, 721, 745, 746, 744, 747, 725, 739, 0,
	0, 732, 0, 768, 867, 333, 334, 356, 82, 0,
	1305, 1324, 0, 1328, 1330, 0, 204, 206, 0, 0,
	155, 0, 0, 197, 0, 169, 0, 0, 0, 0,
	0, 550, 0, 60, 0, 1226, 0, 0, 638, 639,
	-2, 676, 1284, 676, 676, 662, 569, 676, 0, 0,
	0, 64, 51, 0, 1923, 54, 0, 1211, 1212, 1204,
	0, 1269, 1270, 1191, 1192, 97, 799, 954, 956, 958,
	0, 974, 945, 966, 949, 0, 946, 0, 940, 0,
	1048, 0, 0, 0, 0, 0, 0, 0, 979, -2,
	1046, 1047, 1049, 0, 0, 0, 1053, 0, 1056, 0,
	0, 1096, 0, 0, 1097, 1061, 0, 0, 0, 0,
	0, 1067, 1201, 0, 1165, 0, 0, 1070, 1071, 1091,
	0, 0, 1092, 1093, 1094, 1095, 1035, 0, 1036, 0,
	0, 0, 0, 0, 1042, 1043, 1044, 1045, 817, 817,
	817, 817, 817, 817, 817, 817, 817, 817, 817, 817,
	0, 0, 915, 0, 0, 0, 0, 0, 0, 890,
	0, 0, 893, 0, 0, 0, 0, 0, 0, 0,
	0, 859, 0, 861, 0, 925, 0, 0, 0, 974,
	0, 929, 0, 929, 929, 81, 0, 924, 88, 89,
	0, 0, 95, 516, 517, 0, 220, 0, 625, 0,
	396, 0, 587, 0, 0, 586, 586, 586, 585, 586,
	577, 587, 578, 0, 411, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 0, 0, 511, 0, 536, 538,
	0, 0, 421, 508, 0, 515, 515, 512, 452, 453,
	497, 458, 515, 462, 479, 0, 463, 480, 464, 481,
	465, 482, 466, 483, 515, 0, 495, 0, 0, 439,
	0, 618, 0, 1293, 98, 0, 525, 526, 527, 0,
	569, 569, 569, 0, 285, 286, 287, 913, 0, 222,
	223, 0, 0, 0, 0, 923, 123, 0, 282, 0,
	0, 0, 0, 0, 0, 0, 77, 261, 716, 0,
	609, 610, 866, 723, 967, 733, 735, 736, 512, 0,
	1326, 0, 0, 0, 0, 0, 0, 216, 199, 0,
	0, 0, 0, 162, 0, 1228, 1229, 0, 0, 586,
	0, 663, 664, 0, 677, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1285, 1286, 0, 0, 0,
	570, 0, 671, 672, 0, 0, 52, 53, 1217, 38,
	50, 0, 809, 1181, 0, 947, 0, 950, 977, 804,
	0, 1016, 817, 817, 817, 817, 817, 0, 497, 497,
	1150, 497, 501, 1153, 497, 1155, 497, 1158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1162, 1069, 1168, 0, 0, 0, 810, 811, 813, 1037,
	1038, 1039, 1040, 1041, 1020, 818, 1021, 1022, 1024, 1025,
	1027, 1028, 1029, 1030, 1032, 1033, 1034, 1235, 0, 0,
	0, 1220, 0, 929, 1243, 0, 0, 0, 0, 2102,
	2103, 847, 881, 883, 0, 878, 891, 892, 894, 0,
	896, 0, 898, 899, 868, 853, 973, 856, 0, 0,
	0, 925, 865, 0, 0, 0, 0, 0, 1201, 929,
	72, 73, 0, 92, 93, 94, 623, 626, 0, 588,
	497, 497, 0, 592, 584, 593, 571, 573, 574, 576,
	0, 412, 0, 0, 420, 509, 0, 535, 537, 539,
	540, 498, 450, 475, 451, 476, 515, 459, 455, 477,
	513, 514, 467, 484, 512, 0, 512, 0, 502, 0,
	605, 619, 0, 0, 0, 96, 569, 0, 0, 0,
	0, 229, 0, 225, 0, 0, 0, 131, 0, 114,
	115, 116, 118, 119, 0, 0, 0, 112, 0, 270,
	0, 273, 274, 686, 688, 930, 747, 1316, 914, 216,
	205, 207, 208, 0, 216, 219, 156, 0, 157, 159,
	0, 158, 555, 640, 0, 673, 0, 0, 1292, 584,
	0, -2, 643, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 0, 669, 0, 645, 0, 673,
	0, 666, 0, 0, 55, 48, 97, 97, 1017, 951,
	0, 1019, 1023, 1018, 1026, 1031, 1051, 1147, 512, 1151,
	1152, 1154, 1156, 1157, 1159, 1055, 1052, 1054, 0, 0,
	0, 0, 1062, 0, 0, 0, 0, 0, 0, 1166,
	0, 0, 815, 814, 65, 0, 1235, 1218, 1237, 1239,
	0, 0, 0, 0, -2, 1606, 0, 872, 1201, 0,
	0, 0, 0, 0, 875, 882, 0, 0, 876, 0,
	877, 895, 897, 851, 0, 0, 857, 0, 0, -2,
	864, 0, 0, 0, 874, 0, 1209, 71, 561, 0,
	1206, 1206, 586, 586, 0, 870, 0, 0, 510, 1089,
	1089, 1089, 1089, 1089, 1089, 1089, 1089, 1089, 0, 0,
	456, 478, 515, 496, 515, 0, 0, 620, 0, 96,
	98, 0, 530, 531, 532, 533, 534, 0, 97, 230,
	231, 0, 0, 0, 236, 0, 0, 0, 0, 0,
	224, 226, 227, 228, 149, 132, 133, 0, 0, 0,
	0, 124, 125, 0, 0, 0, 0, 0, 120, 121,
	122, 269, 0, 0, 272, 0, 0, 722, 1318, 1312,
	209, 216, 209, 0, 160, 0, 642, 674, 0, 410,
	410, 0, 586, 586, 665, 0, 1282, 1283, 0, 660,
	673, 0, 0, 0, 929, 0, 0, 800, 805, 1148,
	1149, 0, 0, 0, 0, 1063, 1064, 1065, 1098, 1068,
	1163, 0, 0, 1201, 0, 0, 66, 0, 1240, -2,
	0, 0, 83, 0, 1209, 1244, 1245, 1246, 1247, 1248,
	879, 0, 884, 0, 0, 925, 862, 0, 0, 0,
	0, 0, 70, 560, 564, 0, 569, 0, 589, 590,
	591, 572, 575, 0, 0, 407, 0, 473, 485, 474,
	486, 500, 503, 0, 103, 0, 528, 529, 0, 98,
	232, 233, 234, 235, 237, 238, 0, 0, 0, 109,
	0, 0, 134, 0, 0, 0, 0, 144, 145, 146,
	147, 148, 126, 127, 128, 129, 130, 117, 0, 0,
	271, 0, 276, 277, 1279, 1320, -2, 0, 152, 0,
	209, 154, 217, 641, 675, 400, 401, 0, 1292, 0,
	644, 659, 661, 0, 668, 0, 1193, 49, 97, 1057,
	1059, 1058, 1060, 0, 0, 0, 1087, 1088, 819, 0,
	0, 1238, 1219, 0, 1223, 0, 873, 69, 0, 869,
	858, 860, 925, 926, 927, 928, 0, 565, 566, 0,
	568, 0, 871, 418, 408, 409, 0, 562, 96, 0,
	56, 239, 240, 241, 242, 150, 151, 135, 136, 0,
	138, 139, 0, 0, 0, 279, 0, 275, 868, 0,
	1312, 0, 1314, 0, 1311, 0, 210, 153, 0, 0,
	0, 667, 0, 679, 0, 1198, 0, 801, 1066, 0,
	0, 0, 0, 0, 0, 816, 0, 1222, 0, 880,
	863, 0, 567, 0, 407, 102, 563, 104, 288, 96,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 383, 384, 385, 386, 387, 388,
	0, 0, 0, 56, 0, 140, 0, 142, 143, 278,
	0, 36, 0, 1319, 0, 1317, 0, 0, 1313, 0,
	562, 0, 0, 678, 0, 0, 829, 0, 0, 1099,
	0, 1102, 812, 820, 0, 823, 0, 0, 0, 834,
	0, 821, 1236, -2, 0, 902, 0, 0, 419, 96,
	0, 0, 108, 0, 0, 1294, 0, 0, -2, -2,
	-2, 1296, 0, 357, 137, 141, 280, 1280, 1281, 1321,
	0, 0, 0, 646, 0, 562, 680, 0, 47, 0,
	1199, 1200, 1194, 1195, 1197, 1100, 0, 824, 825, 826,
	827, 828, 0, 0, 0, 0, 0, 98, 289, 290,
	0, 299, 0, 56, 0, 0, 0, 313, 0, 56,
	1315, 1309, 211, 212, 213, 215, 562, 670, 0, 830,
	831, 0, 0, 0, 0, 835, 0, 903, 904, 0,
	0, 595, 56, 0, 56, 300, 0, 0, 0, 0,
	0, 0, 1297, 243, 358, 0, 647, 0, 0, 0,
	1196, 0, 822, 0, 901, 907, 0, 596, 597, 0,
	96, 291, 292, 293, 294, 295, 56, 0, 297, 0,
	56, 56, 309, 310, 311, 56, 318, 320, 321, 322,
	0, 324, 325, 314, 214, 0, 832, 833, 1101, 900,
	908, 906, 598, 0, 599, 0, 0, 0, 107, 0,
	57, 56, 0, 0, 56, 0, 306, 0, 312, 0,
	323, 0, 1754, 905, 0, 0, 0, 611, 613, 614,
	0, 0, 612, 56, 0, -2, 302, 0, 0, 56,
	307, 0, 319, 681, 682, 0, 0, 0, 615, 616,
	617, 296, 298, 56, 304, 0, 56, 909, 0, 911,
	0, 56, 0, 910, 303, 0, -2, 305,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 92, 3, 3, 3, 127, 119, 3,
	68, 70, 124, 122, 69, 123, 177, 125, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 611,
	101, 100, 102, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 129, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 118, 3, 130,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 82, 83, 84, 85,
	86, 87, 88, 89, 90, 91, 93, 94, 95, 96,
	97, 98, 99, 103, 104, 105, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 116, 117, 120, 121,
	126, 128, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 274, 275,
}

var yyTok3 = [...]int{
	57600, 276, 57601, 277, 57602, 278, 57603, 279, 57604, 280,
	57605, 281, 57606, 282, 57607, 283, 57608, 284, 57609, 285,
	57610, 286, 57611, 287, 57612, 288, 57613, 289, 57614, 290,
	57615, 291, 57616, 292, 57617, 293, 57618, 294, 57619, 295,
	57620, 296, 57621, 297, 57622, 298, 57623, 299, 57624, 300,
	57625, 301, 57626, 302, 57627, 303, 57628, 304, 57629, 305,
	57630, 306, 57631, 307, 57632, 308, 57633, 309, 57634, 310,
	57635, 311, 57636, 312, 57637, 313, 57638, 314, 57639, 315,
	57640, 316, 57641, 317, 57642, 318, 57643, 319, 57644, 320,
	57645, 321, 57646, 322, 57647, 323, 57648, 324, 57649, 325,
	57650, 326, 57651, 327, 57652, 328, 57653, 329, 57654, 330,
	57655, 331, 57656, 332, 57657, 333, 57658, 334, 57659, 335,
	57660, 336, 57661, 337, 57662, 338, 57663, 339, 57664, 340,
	57665, 341, 57666, 342, 57667, 343, 57668, 344, 57669, 345,
	57670, 346, 57671, 347, 57672, 348, 57673, 349, 57674, 350,
	57675, 351, 57676, 352, 57677, 353, 57678, 354, 57679, 355,
	57680, 356, 57681, 357, 57682, 358, 57683, 359, 57684, 360,
	57685, 361, 57686, 362, 57687, 363, 57688, 364, 57689, 365,
	57690, 366, 57691, 367, 57692, 368, 57693, 369, 57694, 370,
	57695, 371, 57696, 372, 57697, 373, 57698, 374, 57699, 375,
	57700, 376, 57701, 377, 57702, 378, 57703, 379, 57704, 380,
	57705, 381, 57706, 382, 57707, 383, 57708, 384, 57709, 385,
	57710, 386, 57711, 387, 57712, 388, 57713, 389, 57714, 390,
	57715, 391, 57716, 392, 57717, 393, 57718, 394, 57719, 395,
	57720, 396, 57721, 397, 57722, 398, 57723, 399, 57724, 400,
	57725, 401, 57726, 402, 57727, 403, 57728, 404, 57729, 405,
	57730, 406, 57731, 407, 57732, 408, 57733, 409, 57734, 410,
	57735, 411, 57736, 412, 57737, 413, 57738, 414, 57739, 415,
	57740, 416, 57741, 417, 57742, 418, 57743, 419, 57744, 420,
	57745, 421, 57746, 422, 57747, 423, 57748, 424, 57749, 425,
	57750, 426, 57751, 427, 57752, 428, 57753, 429, 57754, 430,
	57755, 431, 57756, 432, 57757, 433, 57758, 434, 57759, 435,
	57760, 436, 57761, 437, 57762, 438, 57763, 439, 57764, 440,
	57765, 441, 57766, 442, 57767, 443, 57768, 444, 57769, 445,
	57770, 446, 57771, 447, 57772, 448, 57773, 449, 57774, 450,
	57775, 451, 57776, 452, 57777, 453, 57778, 454, 57779, 455,
	57780, 456, 57781, 457, 57782, 458, 57783, 459, 57784, 460,
	57785, 461, 57786, 462, 57787, 463, 57788, 464, 57789, 465,
	57790, 466, 57791, 467, 57792, 468, 57793, 469, 57794, 470,
	57795, 471, 57796, 472, 57797, 473, 57798, 474, 57799, 475,
	57800, 476, 57801, 477, 57802, 478, 57803, 479, 57804, 480,
	57805, 481, 57806, 482, 57807, 483, 57808, 484, 57809, 485,
	57810, 486, 57811, 487, 57812, 488, 57813, 489, 57814, 490,
	57815, 491, 57816, 492, 57817, 493, 57818, 494, 57819, 495,
	57820, 496, 57821, 497, 57822, 498, 57823, 499, 57824, 500,
	57825, 501, 57826, 502, 57827, 503, 57828, 504, 57829, 505,
	57830, 506, 57831, 507, 57832, 508, 57833, 509, 57834, 510,
	57835, 511, 57836, 512, 57837, 513, 57838, 514, 57839, 515,
	57840, 516, 57841, 517, 57842, 518, 57843, 519, 57844, 520,
	57845, 521, 57846, 522, 57847, 523, 57848, 524, 57849, 525,
	57850, 526, 57851, 527, 57852, 528, 57853, 529, 57854, 530,
	57855, 531, 57856, 532, 57857, 533, 57858, 534, 57859, 535,
	57860, 536, 57861, 537, 57862, 538, 57863, 539, 57864, 540,
	57865, 541, 57866, 542, 57867, 543, 57868, 544, 57869, 545,
	57870, 546, 57871, 547, 57872, 548, 57873, 549, 57874, 550,
	57875, 551, 57876, 552, 57877, 553, 57878, 554, 57879, 555,
	57880, 556, 57881, 557, 57882, 558, 57883, 559, 57884, 560,
	57885, 561, 57886, 562, 57887, 563, 57888, 564, 57889, 565,
	57890, 566, 57891, 567, 57892, 568, 57893, 569, 57894, 570,
	57895, 571, 57896, 572, 57897, 573, 57898, 574, 57899, 575,
	57900, 576, 57901, 577, 57902, 578, 57903, 579, 57904, 580,
	57905, 581, 57906, 582, 57907, 583, 57908, 584, 57909, 585,
	57910, 586, 57911, 587, 57912, 588, 57913, 589, 57914, 590,
	57915, 591, 57916, 592, 57917, 593, 57918, 594, 57919, 595,
	57920, 596, 57921, 597, 57922, 598, 57923, 599, 57924, 600,
	57925, 601, 57926, 602, 57927, 603, 57928, 604, 57929, 605,
	57930, 606, 57931, 607, 57932, 608, 57933, 609, 57934, 610,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:542
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:546
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:553
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:588
		{
			setParseTree(yylex, nil)
		}
	case 36:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:594
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 37:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:600
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			if err := yyDollar[1].selStmt.SetInto(yyDollar[5].into); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 38:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:611
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:617
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 40:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:627
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:634
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 42:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:638
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:644
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:648
		{
			yyDollar[3].selStmt.SetWith(yyDollar[2].with)
			yyVAL.selStmt = yyDollar[3].selStmt
		}
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:655
		{
			yyVAL.with = &With{Ctes: yyDollar[2].tableExprs, Recursive: true}
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:658
		{
			yyVAL.with = &With{Ctes: yyDollar[1].tableExprs, Recursive: false}
		}
	case 47:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:664
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr), Window: yyDollar[13].window, Into: yyDollar[8].into}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 48:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:672
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 49:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:676
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 50:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:685
		{
			yyVAL.into = nil
		}
	case 51:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:689
		{
			yyVAL.into = &Into{Variables: yyDollar[2].variables}
		}
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:693
		{
			yyVAL.into = &Into{Outfile: string(yyDollar[3].bytes)}
		}
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:697
		{
			yyVAL.into = &Into{Dumpfile: string(yyDollar[3].bytes)}
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:703
		{
			yyVAL.variables = Variables{yyDollar[1].colIdent}
		}
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:707
		{
			yyVAL.variables = append(yyVAL.variables, yyDollar[3].colIdent)
		}
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:712
		{
			yyVAL.with = nil
		}
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:716
		{
			yyVAL.with = yyDollar[2].with
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:722
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:726
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:732
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[4].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[2].columns}
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:738
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:746
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:752
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:760
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 65:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:766
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[7].ins
			ins.Action = yyDollar[2].str
			ins.Comments = yyDollar[3].bytes2
			ins.Ignore = yyDollar[4].str
			ins.Table = yyDollar[5].tableName
			ins.Partitions = yyDollar[6].partitions
			ins.OnDup = OnDup(yyDollar[8].assignExprs)
			ins.With = yyDollar[1].with
			yyVAL.statement = ins
		}
	case 66:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:779
		{
			cols := make(Columns, 0, len(yyDollar[8].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[9].assignExprs))
			for _, updateList := range yyDollar[8].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[2].str, Comments: Comments(yyDollar[3].bytes2), Ignore: yyDollar[4].str, Table: yyDollar[5].tableName, Partitions: yyDollar[6].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[9].assignExprs), With: yyDollar[1].with}
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:791
		{
			yyVAL.str = InsertStr
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:795
		{
			yyVAL.str = ReplaceStr
		}
	case 69:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:801
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[3].bytes2), Ignore: yyDollar[4].str, TableExprs: yyDollar[5].tableExprs, Exprs: yyDollar[7].assignExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), OrderBy: yyDollar[9].orderBy, Limit: yyDollar[10].limit, With: yyDollar[1].with}
		}
	case 70:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:807
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitions, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit, With: yyDollar[1].with}
		}
	case 71:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:811
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[5].tableNames, TableExprs: yyDollar[7].tableExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), With: yyDollar[1].with}
		}
	case 72:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:815
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), With: yyDollar[1].with}
		}
	case 73:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:819
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), With: yyDollar[1].with}
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:824
		{
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:825
		{
		}
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:829
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:833
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:839
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:843
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:849
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 81:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:853
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 82:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:858
		{
			yyVAL.partitions = nil
		}
	case 83:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:862
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:868
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 85:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:872
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 86:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:879
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:888
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:892
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:898
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:902
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 91:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:906
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:912
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:916
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:920
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:924
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:929
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 97:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:934
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:939
		{
			yyVAL.boolean = yySpecialCommentMode(yylex)
		}
	case 99:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:945
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:954
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:959
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 102:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:964
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 103:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:968
		{
			yyDollar[2].viewSpec.ViewName = yyDollar[4].tableName.ToViewName()
			yyDollar[2].viewSpec.ViewExpr = yyDollar[8].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[2].viewSpec, SpecialCommentMode: yyDollar[7].boolean, SubStatementPositionStart: yyDollar[6].int, SubStatementPositionEnd: yyDollar[9].int - 1}
		}
	case 104:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:974
		{
			yyDollar[4].viewSpec.ViewName = yyDollar[6].tableName.ToViewName()
			yyDollar[4].viewSpec.ViewExpr = yyDollar[10].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[4].viewSpec, SpecialCommentMode: yyDollar[9].boolean, SubStatementPositionStart: yyDollar[8].int, SubStatementPositionEnd: yyDollar[11].int - 1, OrReplace: true}
		}
	case 105:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:980
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 106:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:988
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 107:
		yyDollar = yyS[yypt-16 : yypt+1]
//line sql.y:996
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName, Definer: yyDollar[2].str, Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[15].statement}, SpecialCommentMode: yyDollar[14].boolean, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[16].int - 1}
		}
	case 108:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1000
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName, Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[11].statement}, SpecialCommentMode: yyDollar[10].boolean, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[12].int - 1}
		}
	case 109:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1004
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].tlsOptionItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].accountLimitItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].passLockItems)
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames, TLSOptions: tlsOptions, AccountLimits: accountLimits, PasswordOptions: passwordOptions, Locked: locked, Attribute: yyDollar[9].str}
		}
	case 110:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1023
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 111:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1032
		{
			yyVAL.accountNames = nil
		}
	case 112:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1036
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 113:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1041
		{
			yyVAL.tlsOptionItems = nil
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1045
		{
			yyVAL.tlsOptionItems = nil
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1049
		{
			yyVAL.tlsOptionItems = yyDollar[2].tlsOptionItems
		}
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1055
		{
			yyVAL.tlsOptionItems = []TLSOptionItem{yyDollar[1].tlsOptionItem}
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1059
		{
			yyVAL.tlsOptionItems = append(yyDollar[1].tlsOptionItems, yyDollar[3].tlsOptionItem)
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1065
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1069
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1073
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1077
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1081
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 123:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1086
		{
			yyVAL.accountLimitItems = nil
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1090
		{
			yyVAL.accountLimitItems = yyDollar[2].accountLimitItems
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1096
		{
			yyVAL.accountLimitItems = []AccountLimitItem{yyDollar[1].accountLimitItem}
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1100
		{
			yyVAL.accountLimitItems = append(yyDollar[1].accountLimitItems, yyDollar[2].accountLimitItem)
		}
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1106
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1110
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1114
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1118
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 131:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1123
		{
			yyVAL.passLockItems = nil
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1127
		{
			yyVAL.passLockItems = yyDollar[1].passLockItems
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1133
		{
			yyVAL.passLockItems = []PassLockItem{yyDollar[1].passLockItem}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1137
		{
			yyVAL.passLockItems = append(yyDollar[1].passLockItems, yyDollar[2].passLockItem)
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1143
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1147
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 137:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1151
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1155
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1159
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 140:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1163
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 141:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1167
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 142:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1171
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 143:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1175
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1179
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1183
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1187
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1191
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1195
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 149:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1200
		{
			yyVAL.str = ""
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1204
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.str = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1209
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 152:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1215
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 153:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1220
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[5].grantObjectType, PrivilegeLevel: yyDollar[6].privilegeLevel, To: yyDollar[8].accountNames, WithGrantOption: yyDollar[9].boolean, As: yyDollar[10].grantAssumption}
		}
	case 154:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1225
		{
			yyVAL.statement = &GrantPrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 155:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1229
		{
			yyVAL.statement = &GrantRole{Roles: yyDollar[2].accountNames, To: yyDollar[4].accountNames, WithAdminOption: yyDollar[5].boolean}
		}
	case 156:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1233
		{
			yyVAL.statement = &GrantProxy{On: yyDollar[4].accountName, To: yyDollar[6].accountNames, WithGrantOption: yyDollar[7].boolean}
		}
	case 157:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1239
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &RevokePrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 158:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1244
		{
			yyVAL.statement = &RevokePrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 159:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1248
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[7].accountNames}
		}
	case 160:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1252
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[8].accountNames}
		}
	case 161:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1256
		{
			yyVAL.statement = &RevokeRole{Roles: yyDollar[2].accountNames, From: yyDollar[4].accountNames}
		}
	case 162:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1260
		{
			yyVAL.statement = &RevokeProxy{On: yyDollar[4].accountName, From: yyDollar[6].accountNames}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1266
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].strs}
		}
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1270
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].strs}
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1274
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].strs}
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1278
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].strs}
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1282
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].strs}
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1286
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].strs}
		}
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1290
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].strs}
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1294
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].strs}
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1298
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].strs}
		}
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1302
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].strs}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1306
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].strs}
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1310
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].strs}
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1314
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].strs}
		}
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1318
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].strs}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1322
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].strs}
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1326
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].strs}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1330
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].strs}
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1334
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].strs}
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1338
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].strs}
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1342
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].strs}
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1346
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].strs}
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1350
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].strs}
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1354
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].strs}
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1358
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].strs}
		}
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1362
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].strs}
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1366
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].strs}
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1370
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].strs}
		}
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1374
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].strs}
		}
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1378
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].strs}
		}
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1382
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].strs}
		}
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1386
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].strs}
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1392
		{
			yyVAL.grantPrivileges = []Privilege{yyDollar[1].grantPrivilege}
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1396
		{
			yyVAL.grantPrivileges = append(yyDollar[1].grantPrivileges, yyDollar[3].grantPrivilege)
		}
	case 196:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1401
		{
			yyVAL.strs = nil
		}
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1405
		{
			yyVAL.strs = yyDollar[2].strs
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1411
		{
			yyVAL.strs = []string{yyDollar[1].colIdent.String()}
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1415
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].colIdent.String())
		}
	case 200:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1420
		{
			yyVAL.grantObjectType = GrantObjectType_Any
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1424
		{
			yyVAL.grantObjectType = GrantObjectType_Table
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1428
		{
			yyVAL.grantObjectType = GrantObjectType_Function
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1432
		{
			yyVAL.grantObjectType = GrantObjectType_Procedure
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1438
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1442
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1446
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].colIdent.String()}
		}
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1450
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: "*"}
		}
	case 208:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1454
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: yyDollar[3].colIdent.String()}
		}
	case 209:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1459
		{
			yyVAL.grantAssumption = nil
		}
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1463
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 211:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1467
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 212:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1471
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].accountName, Roles: nil}
		}
	case 213:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1475
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].accountName, Roles: nil}
		}
	case 214:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1479
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].accountName, Roles: yyDollar[7].accountNames}
		}
	case 215:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1483
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].accountName, Roles: yyDollar[5].accountNames}
		}
	case 216:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1488
		{
			yyVAL.boolean = false
		}
	case 217:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1492
		{
			yyVAL.boolean = true
		}
	case 218:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1497
		{
			yyVAL.boolean = false
		}
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1501
		{
			yyVAL.boolean = true
		}
	case 220:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1508
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 221:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1520
		{
			yyVAL.procedureParams = nil
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1524
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1530
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1534
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1540
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[1].colIdent.String(), Type: yyDollar[2].columnType}
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1544
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1548
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1552
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 229:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1557
		{
			yyVAL.characteristics = nil
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1561
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1567
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1571
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1577
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1581
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1585
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1589
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1593
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1597
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1601
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1605
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1609
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1613
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1619
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1625
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: "", Definer: yyDollar[1].str, Security: yyDollar[2].str}
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1629
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: yyDollar[1].str, Definer: yyDollar[2].str, Security: yyDollar[3].str}
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1635
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1639
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1643
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 249:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1648
		{
			yyVAL.str = ""
		}
	case 250:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1652
		{
			yyVAL.str = yyDollar[3].accountName.String()
		}
	case 251:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1657
		{
			yyVAL.str = ""
		}
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1661
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1665
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1671
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1675
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1679
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1685
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1693
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1697
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1703
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1707
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1713
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1721
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1729
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1739
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1743
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1749
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1753
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 269:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1757
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1761
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 271:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1765
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 272:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1771
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1775
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1779
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 275:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1783
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 276:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1787
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 277:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1791
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1797
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1801
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 280:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1805
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1811
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1815
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1821
		{
			yyVAL.str = BeforeStr
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1825
		{
			yyVAL.str = AfterStr
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1831
		{
			yyVAL.str = InsertStr
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1835
		{
			yyVAL.str = UpdateStr
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1839
		{
			yyVAL.str = DeleteStr
		}
	case 288:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1844
		{
			yyVAL.triggerOrder = nil
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1848
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1852
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1858
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 296:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1868
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 297:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1874
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 298:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1878
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1884
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1888
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 301:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1894
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 302:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1900
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 303:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1905
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 304:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1910
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 305:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1916
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1924
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1928
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 308:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1934
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 309:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1940
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 310:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1944
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 311:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1948
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 312:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1952
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1956
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 314:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1960
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1967
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1971
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1975
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1981
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1985
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1991
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1995
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1999
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2003
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2007
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2011
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2017
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2021
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2025
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 329:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2029
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2035
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2039
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2045
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2049
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2055
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2061
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2065
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2069
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2073
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2077
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2081
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2085
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2089
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2093
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2097
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2101
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2105
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2111
		{
			yyVAL.statement = &Resignal{}
		}
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2115
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 349:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2119
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2123
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2127
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 352:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2131
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2137
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 354:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2142
		{
			yyVAL.exprs = nil
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2146
		{
			yyVAL.exprs = nil
		}
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2150
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2156
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2160
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2166
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 389:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2201
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
		}
	case 390:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2215
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: TableName{Name: NewTableIdent(string(yyDollar[5].bytes))}, IfNotExists: ne, Temporary: neTemp}
		}
	case 391:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2231
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2238
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2243
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2248
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2254
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 396:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2258
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2263
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2267
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2271
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2277
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2285
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2295
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2303
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2311
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2319
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2327
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 407:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2336
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2340
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2344
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 410:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2349
		{
			yyVAL.columnType = ColumnType{}
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2353
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2362
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2371
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2380
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2389
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2398
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2407
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 418:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2416
		{
			opt := ColumnType{GeneratedExpr: yyDollar[4].expr, Stored: yyDollar[6].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 419:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2425
		{
			opt := ColumnType{GeneratedExpr: yyDollar[6].expr, Stored: yyDollar[8].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2434
		{
			opt := ColumnType{SRID: NewIntVal(yyDollar[3].bytes)}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2445
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2456
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2461
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2467
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2471
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2475
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2479
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2483
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2487
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2491
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2495
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2499
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2503
		{
			yyVAL.columnType = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2509
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2515
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2521
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2527
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 441:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2533
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2539
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2545
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2551
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2559
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2563
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2567
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2571
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2575
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2581
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2585
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2589
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2593
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2597
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 455:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2601
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 456:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2605
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2609
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2613
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 459:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2617
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 460:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2621
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2625
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2629
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2633
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2637
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2641
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2645
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 467:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2649
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2653
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2657
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2661
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2665
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2669
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 473:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2673
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 474:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2678
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2682
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 476:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2686
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 477:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2690
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 478:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2694
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, BinaryCollate: true}
		}
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2698
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2702
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2706
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2710
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2714
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 484:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2718
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 485:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2722
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, BinaryCollate: true}
		}
	case 486:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2726
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, BinaryCollate: true}
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2732
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2736
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2740
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2744
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2748
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2752
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2756
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2760
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2766
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2771
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2776
		{
			yyVAL.sqlVal = nil
		}
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2780
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 499:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2785
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 500:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2789
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 501:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2797
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2801
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 503:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2807
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 504:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2815
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2819
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2823
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 507:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2828
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2832
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2838
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2844
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2850
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 512:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2855
		{
			yyVAL.str = ""
		}
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2859
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2863
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2868
		{
			yyVAL.str = ""
		}
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2872
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2876
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2881
		{
			yyVAL.boolean = false
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2885
		{
			yyVAL.boolean = true
		}
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2890
		{
			yyVAL.charsetCollates = nil
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2894
		{
			yyVAL.charsetCollates = yyDollar[1].charsetCollates
		}
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2900
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2904
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2908
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2912
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2916
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2920
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 528:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2926
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 529:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2930
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 530:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2934
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 531:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2938
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 532:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2944
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2948
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2954
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2960
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2964
		{
			yyVAL.colKeyOpt = colKey
		}
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2968
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2972
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 539:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2976
		{
			yyVAL.colKeyOpt = colKeyFulltextKey
		}
	case 540:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2982
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2988
		{
			yyVAL.statement = &Flush{Type: yyDollar[2].str, Option: yyDollar[3].flushOption}
		}
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2994
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2998
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3002
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3006
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3010
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3014
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3018
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3022
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3026
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].str}
		}
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3030
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3034
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3038
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 554:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3043
		{
			yyVAL.str = ""
		}
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3045
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3049
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3051
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 558:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3054
		{
			yyVAL.str = ""
		}
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3056
		{
			yyVAL.str = yyDollar[1].str
		}
	case 560:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3060
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 561:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3064
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 562:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3069
		{
			yyVAL.indexOptions = nil
		}
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3073
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3079
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3083
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3089
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3093
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3098
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 569:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3104
		{
			yyVAL.str = ""
		}
	case 570:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3108
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3116
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 572:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3120
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3124
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3128
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true}
		}
	case 575:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3132
		{
			var name string
			name = yyDollar[2].str
			if name == "" {
				name = yyDollar[5].str
			}
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].str), Name: NewColIdent(name), Unique: true}
		}
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3141
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3145
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3149
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3155
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3159
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3163
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3169
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3173
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 584:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3178
		{
			yyVAL.str = ""
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3182
		{
			yyVAL.str = yyDollar[1].str
		}
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3187
		{
			yyVAL.str = ""
		}
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3191
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3197
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3201
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3207
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3211
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3217
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3221
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3225
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 595:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3231
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 596:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3235
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 597:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3239
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 598:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3243
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 599:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3247
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3253
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3258
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3262
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3266
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3270
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 605:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3276
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3282
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3286
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 608:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3291
		{
			yyVAL.str = ""
		}
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3295
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3299
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3305
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3311
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 613:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3317
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3321
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3325
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3329
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3333
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 618:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3338
		{
			yyVAL.boolean = true
		}
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3342
		{
			yyVAL.boolean = true
		}
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3346
		{
			yyVAL.boolean = false
		}
	case 621:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3351
		{
			yyVAL.str = ""
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3355
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3359
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3367
		{
			yyVAL.str = yyDollar[1].str
		}
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3371
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3375
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3381
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3385
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3389
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3394
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3398
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3402
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 633:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3408
		{
			yyVAL.str = ""
		}
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3412
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3417
		{
			yyVAL.str = string("")
		}
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3421
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 638:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3430
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3443
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3447
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 641:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3453
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 642:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3460
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3467
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 644:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3471
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3475
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 646:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3480
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 647:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3484
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3488
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3493
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3498
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3503
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3508
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3513
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3518
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3523
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3528
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3533
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3538
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 659:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3542
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 660:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3546
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 661:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3553
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3559
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3563
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3569
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 665:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3575
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3580
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 667:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3584
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 668:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3588
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3592
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 670:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3598
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[7].indexColumns, Options: yyDollar[9].indexOptions}
			yyVAL.ddl = ddl
		}
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3604
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3608
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 673:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3613
		{
			yyVAL.columnOrder = nil
		}
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3617
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3621
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 676:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3626
		{
		}
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3628
		{
		}
	case 678:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3632
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3638
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3642
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 681:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3648
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 682:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3652
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3658
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3662
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3668
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 686:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3672
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3680
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 688:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3684
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 689:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3690
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 690:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3698
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 691:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3702
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 692:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3710
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 693:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3718
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 694:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3726
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName}, IfExists: exists}
		}
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3734
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName}, IfExists: exists}
		}
	case 696:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3742
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3750
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 698:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3759
		{

		}
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3763
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3767
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3773
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3777
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3783
		{
			yyVAL.statement = &Analyze{Tables: yyDollar[3].tableNames}
		}
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3789
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 705:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3794
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3798
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 707:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3802
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 708:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3806
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 709:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3810
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3815
		{
			yyVAL.statement = &Show{Type: CreateProcedureStr, Table: yyDollar[4].tableName}
		}
	case 711:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3819
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3823
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3827
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3831
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3835
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 716:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3839
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3843
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 718:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3847
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 719:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3851
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 720:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3855
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 721:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3859
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 722:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3863
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, AsOf: yyDollar[7].expr, Filter: yyDollar[8].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, Table: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 723:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3868
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3873
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 725:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3877
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 726:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3881
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3885
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 728:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3889
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3895
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3903
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3907
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 732:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3912
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 733:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3916
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3921
		{
			yyVAL.statement = &ShowPrivileges{}
		}
	case 735:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3925
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 736:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3929
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3933
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3937
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3943
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 740:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3949
		{
			yyVAL.boolean = false
		}
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3953
		{
			yyVAL.boolean = true
		}
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3959
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3963
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 744:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3969
		{
			yyVAL.str = ""
		}
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3973
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3977
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 747:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3983
		{
			yyVAL.showFilter = nil
		}
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3987
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3991
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[3].bytes)}
		}
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3995
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 751:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4001
		{
			yyVAL.str = ""
		}
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4005
		{
			yyVAL.str = SessionStr
		}
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4009
		{
			yyVAL.str = GlobalStr
		}
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4015
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4019
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: yyDollar[2].tableIdent.v + "/" + yyDollar[4].tableIdent.v}}
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4023
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4029
		{
			yyVAL.statement = &Begin{}
		}
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4033
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4039
		{
			yyVAL.statement = &Begin{}
		}
	case 760:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4043
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 761:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4047
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4053
		{
			yyVAL.statement = &Commit{}
		}
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4059
		{
			yyVAL.statement = &Rollback{}
		}
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4065
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4071
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 766:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4075
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4079
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 768:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4083
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4089
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4094
		{
		}
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4095
		{
		}
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4099
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4103
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4109
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 778:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4117
		{
			yyVAL.str = ""
		}
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4121
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4132
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[3].expr}
			yyVAL.statement = &Show{Type: "columns", Table: yyDollar[2].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4138
		{
			setAllowComments(yylex, true)
		}
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4142
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4148
		{
			yyVAL.bytes2 = nil
		}
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4152
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4158
		{
			yyVAL.str = UnionStr
		}
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4162
		{
			yyVAL.str = UnionAllStr
		}
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4166
		{
			yyVAL.str = UnionDistinctStr
		}
	case 790:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4171
		{
			yyVAL.byt = 0
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4175
		{
			yyVAL.byt = 1
		}
	case 792:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4180
		{
			yyVAL.str = ""
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4184
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4188
		{
			yyVAL.str = SQLCacheStr
		}
	case 795:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4193
		{
			yyVAL.str = ""
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4197
		{
			yyVAL.str = ""
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4201
		{
			yyVAL.str = DistinctStr
		}
	case 798:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4206
		{
			yyVAL.str = ""
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4210
		{
			yyVAL.str = StraightJoinHint
		}
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4216
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 801:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4224
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4235
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4239
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4243
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 805:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4247
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4253
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4257
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4261
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 809:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4265
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4271
		{
			yyVAL.over = &Over{NameRef: yyDollar[2].colIdent}
		}
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4275
		{
			yyVAL.over = (*Over)(yyDollar[2].windowDef)
		}
	case 812:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4281
		{
			yyVAL.windowDef = &WindowDef{NameRef: yyDollar[2].colIdent, PartitionBy: yyDollar[3].exprs, OrderBy: yyDollar[4].orderBy, Frame: yyDollar[5].frame}
		}
	case 813:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4286
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4289
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 815:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4294
		{
			yyVAL.exprs = nil
		}
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4298
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4303
		{
			yyVAL.over = nil
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4307
		{
			yyVAL.over = yyDollar[1].over
		}
	case 819:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4312
		{
			yyVAL.frame = nil
		}
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4316
		{
			yyVAL.frame = &Frame{Unit: RowsUnit, Extent: yyDollar[2].frameExtent}
		}
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4320
		{
			yyVAL.frame = &Frame{Unit: RangeUnit, Extent: yyDollar[2].frameExtent}
		}
	case 822:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4327
		{
			startBound := yyDollar[2].frameBound
			endBound := yyDollar[4].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound, End: endBound}
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4350
		{
			startBound := yyDollar[1].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound}
		}
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4365
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedPreceding}
		}
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4369
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedFollowing}
		}
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4373
		{
			yyVAL.frameBound = &FrameBound{Type: CurrentRow}
		}
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4377
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprPreceding,
			}
		}
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4384
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprFollowing,
			}
		}
	case 829:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4392
		{
			yyVAL.window = nil
		}
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4395
		{
			yyVAL.window = yyDollar[2].window
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4401
		{
			yyVAL.window = Window{yyDollar[1].windowDef}
		}
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4404
		{
			yyVAL.window = append(yyDollar[1].window, yyDollar[3].windowDef)
		}
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4410
		{
			def := yyDollar[3].windowDef
			def.Name = yyDollar[1].colIdent
			yyVAL.windowDef = def
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4419
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4423
		{
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 836:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4428
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4432
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 838:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4436
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4440
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[2].bytes))
		}
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4446
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4450
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4454
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4458
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4462
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4466
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4472
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4476
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4486
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 851:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4490
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4500
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4506
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4514
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4520
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 858:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4524
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4530
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 860:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4535
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4546
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 862:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4550
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 863:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4554
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4558
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4562
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 866:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4573
		{
			yyVAL.expr = nil
		}
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4577
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 868:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4582
		{
			yyVAL.columns = nil
		}
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4586
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4592
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4596
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4602
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4606
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 874:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4612
		{
			yyVAL.tableExpr = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].selectExprs}
		}
	case 875:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4626
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 876:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4630
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 877:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4634
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4638
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4644
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 880:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4646
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 881:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4650
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4652
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 883:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4656
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 884:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4658
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 885:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4661
		{
			yyVAL.empty = struct{}{}
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4663
		{
			yyVAL.empty = struct{}{}
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4668
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4672
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4678
		{
			yyVAL.str = JoinStr
		}
	case 891:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4682
		{
			yyVAL.str = JoinStr
		}
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4686
		{
			yyVAL.str = JoinStr
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4692
		{
			yyVAL.str = StraightJoinStr
		}
	case 894:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4698
		{
			yyVAL.str = LeftJoinStr
		}
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4702
		{
			yyVAL.str = LeftJoinStr
		}
	case 896:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4706
		{
			yyVAL.str = RightJoinStr
		}
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4710
		{
			yyVAL.str = RightJoinStr
		}
	case 898:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4716
		{
			yyVAL.str = NaturalJoinStr
		}
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4720
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 900:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:4730
		{
			yyVAL.tableExpr = &JSONTableExpr{Data: yyDollar[3].expr, Path: string(yyDollar[5].bytes), Spec: yyDollar[8].TableSpec, Alias: yyDollar[12].tableIdent}
		}
	case 901:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:4734
		{
			yyVAL.tableExpr = &JSONTableExpr{Data: yyDollar[3].expr, Path: string(yyDollar[5].bytes), Spec: yyDollar[8].TableSpec, Alias: yyDollar[11].tableIdent}
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4740
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4745
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4753
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 905:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4765
		{
			yyVAL.columnType = ColumnType{Path: string(yyDollar[2].bytes)}
		}
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4769
		{
			yyVAL.columnType = ColumnType{Path: string(yyDollar[3].bytes)}
		}
	case 907:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4775
		{

		}
	case 908:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4793
		{

		}
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4797
		{

		}
	case 910:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4801
		{

		}
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4805
		{

		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4811
		{
			yyVAL.triggerName = TriggerName{Name: yyDollar[1].colIdent}
		}
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4815
		{
			yyVAL.triggerName = TriggerName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4821
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 915:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4827
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4831
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4837
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4841
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4845
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4849
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4853
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4859
		{
			yyVAL.procedureName = ProcedureName{Name: yyDollar[1].colIdent}
		}
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4863
		{
			yyVAL.procedureName = ProcedureName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4869
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 925:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4874
		{
			yyVAL.indexHints = nil
		}
	case 926:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4878
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 927:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4882
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 928:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4886
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 929:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4891
		{
			yyVAL.expr = nil
		}
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4895
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4901
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4905
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4909
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4913
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 935:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4917
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4921
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4925
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 938:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4929
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 939:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4935
		{
			yyVAL.str = ""
		}
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4939
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4945
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4949
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4955
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4959
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 945:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4963
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 946:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4967
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 947:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4971
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4975
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 949:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4979
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 950:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4983
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 951:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4987
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4991
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4997
		{
			yyVAL.str = IsNullStr
		}
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5001
		{
			yyVAL.str = IsNotNullStr
		}
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5005
		{
			yyVAL.str = IsTrueStr
		}
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5009
		{
			yyVAL.str = IsNotTrueStr
		}
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5013
		{
			yyVAL.str = IsFalseStr
		}
	case 958:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5017
		{
			yyVAL.str = IsNotFalseStr
		}
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5023
		{
			yyVAL.str = EqualStr
		}
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5027
		{
			yyVAL.str = LessThanStr
		}
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5031
		{
			yyVAL.str = GreaterThanStr
		}
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5035
		{
			yyVAL.str = LessEqualStr
		}
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5039
		{
			yyVAL.str = GreaterEqualStr
		}
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5043
		{
			yyVAL.str = NotEqualStr
		}
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5047
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 966:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5052
		{
			yyVAL.expr = nil
		}
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5056
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5062
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5066
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5070
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5076
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5082
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5086
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 974:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5092
		{
			yyVAL.selectExprs = nil
		}
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5099
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5103
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5109
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5113
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5119
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5123
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5127
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5131
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5135
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5139
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5143
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5147
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5151
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5155
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5159
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5163
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5167
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5171
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5175
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5179
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5183
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5187
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5191
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5195
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5199
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5203
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5207
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5211
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 1004:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5215
		{
			yyVAL.expr = &UnaryExpr{Operator: yyDollar[1].str, Expr: yyDollar[2].expr}
		}
	case 1005:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5219
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 1006:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5227
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 1007:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5241
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5245
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5249
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 1016:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5269
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 1017:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5273
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 1018:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5283
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1019:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5287
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1020:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5291
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1021:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5295
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1022:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5299
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1023:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5303
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1024:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5307
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1025:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5311
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1026:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5315
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1027:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5319
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1028:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5323
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1029:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5327
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1030:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5331
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1031:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5335
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1032:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5339
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1033:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5343
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1034:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5347
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1035:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5356
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1036:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5360
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1037:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5364
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 1038:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5368
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1039:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5372
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 1040:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5376
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1041:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5380
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1042:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5384
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1043:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5388
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1044:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5392
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1045:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5396
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1046:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5407
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1047:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5411
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1048:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5415
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1049:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5419
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5423
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1051:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5427
		{
			yyVAL.expr = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 1052:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5431
		{
			yyVAL.expr = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 1053:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5435
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1054:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5439
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1055:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5443
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 1056:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5447
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1057:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5451
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1058:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5455
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1059:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5459
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1060:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5463
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1061:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5467
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 1062:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5471
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 1063:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5475
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 1064:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5479
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 1065:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5483
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 1066:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5487
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 1067:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5491
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1068:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5495
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 1069:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5499
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 1070:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5503
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 1071:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5507
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1072:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5517
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1073:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5521
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1074:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5525
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1075:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5530
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5535
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1077:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5540
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1078:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5546
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1079:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5551
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1080:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5555
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1081:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5560
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1082:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5564
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1083:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5568
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5573
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1085:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5578
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5583
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1087:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5587
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1088:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5591
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5602
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1092:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5612
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1093:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5616
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1094:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5620
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1095:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5624
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1096:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5628
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1097:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5632
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1098:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5638
		{
			yyVAL.str = ""
		}
	case 1099:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5642
		{
			yyVAL.str = BooleanModeStr
		}
	case 1100:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5646
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 1101:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5650
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 1102:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5654
		{
			yyVAL.str = QueryExpansionStr
		}
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5660
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5664
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5670
		{
			yyVAL.str = Armscii8Str
		}
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5674
		{
			yyVAL.str = AsciiStr
		}
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5678
		{
			yyVAL.str = Big5Str
		}
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5682
		{
			yyVAL.str = UBinaryStr
		}
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5686
		{
			yyVAL.str = Cp1250Str
		}
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5690
		{
			yyVAL.str = Cp1251Str
		}
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5694
		{
			yyVAL.str = Cp1256Str
		}
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5698
		{
			yyVAL.str = Cp1257Str
		}
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5702
		{
			yyVAL.str = Cp850Str
		}
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5706
		{
			yyVAL.str = Cp852Str
		}
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5710
		{
			yyVAL.str = Cp866Str
		}
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5714
		{
			yyVAL.str = Cp932Str
		}
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5718
		{
			yyVAL.str = Dec8Str
		}
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5722
		{
			yyVAL.str = EucjpmsStr
		}
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5726
		{
			yyVAL.str = EuckrStr
		}
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5730
		{
			yyVAL.str = Gb18030Str
		}
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5734
		{
			yyVAL.str = Gb2312Str
		}
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5738
		{
			yyVAL.str = GbkStr
		}
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5742
		{
			yyVAL.str = Geostd8Str
		}
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5746
		{
			yyVAL.str = GreekStr
		}
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5750
		{
			yyVAL.str = HebrewStr
		}
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5754
		{
			yyVAL.str = Hp8Str
		}
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5758
		{
			yyVAL.str = Keybcs2Str
		}
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5762
		{
			yyVAL.str = Koi8rStr
		}
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5766
		{
			yyVAL.str = Koi8uStr
		}
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5770
		{
			yyVAL.str = Latin1Str
		}
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5774
		{
			yyVAL.str = Latin2Str
		}
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5778
		{
			yyVAL.str = Latin5Str
		}
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5782
		{
			yyVAL.str = Latin7Str
		}
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5786
		{
			yyVAL.str = MacceStr
		}
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5790
		{
			yyVAL.str = MacromanStr
		}
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5794
		{
			yyVAL.str = SjisStr
		}
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5798
		{
			yyVAL.str = Swe7Str
		}
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5802
		{
			yyVAL.str = Tis620Str
		}
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5806
		{
			yyVAL.str = Ucs2Str
		}
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5810
		{
			yyVAL.str = UjisStr
		}
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5814
		{
			yyVAL.str = Utf16Str
		}
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5818
		{
			yyVAL.str = Utf16leStr
		}
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5822
		{
			yyVAL.str = Utf32Str
		}
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5826
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5830
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5834
		{
			yyVAL.str = Utf8mb4Str
		}
	case 1147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5840
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1148:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5844
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 1149:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5848
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5852
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5856
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5860
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5866
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1154:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5870
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5874
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5878
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1157:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5882
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5886
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5890
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1160:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5895
		{
			yyVAL.expr = nil
		}
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5899
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1162:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5904
		{
			yyVAL.str = string("")
		}
	case 1163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5908
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5914
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 1165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5918
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 1166:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5924
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 1167:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5929
		{
			yyVAL.expr = nil
		}
	case 1168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5933
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5939
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5943
		{
			yyVAL.colName = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5947
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 1172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5951
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5955
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5959
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5963
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5967
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1177:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5971
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5975
		{
			yyVAL.colName = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5979
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5983
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1181:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5987
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5993
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5997
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6001
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6005
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6009
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6013
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6017
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6021
		{
			yyVAL.expr = &NullVal{}
		}
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6027
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 1191:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6031
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6035
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1193:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6040
		{
			yyVAL.exprs = nil
		}
	case 1194:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6044
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6050
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1196:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6054
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6060
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1198:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6065
		{
			yyVAL.expr = nil
		}
	case 1199:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6069
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6075
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1201:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6080
		{
			yyVAL.orderBy = nil
		}
	case 1202:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6084
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6090
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 1204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6094
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 1205:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6100
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 1206:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6105
		{
			yyVAL.str = AscScr
		}
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6109
		{
			yyVAL.str = AscScr
		}
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6113
		{
			yyVAL.str = DescScr
		}
	case 1209:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6118
		{
			yyVAL.limit = nil
		}
	case 1210:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6122
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 1211:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6126
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 1212:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6130
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6136
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6140
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1215:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6145
		{
			yyVAL.str = ""
		}
	case 1216:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6149
		{
			yyVAL.str = ForUpdateStr
		}
	case 1217:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6153
		{
			yyVAL.str = ShareModeStr
		}
	case 1218:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6166
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 1219:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6170
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6174
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 1221:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6178
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 1222:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6183
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 1223:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6187
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 1224:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6191
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 1225:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6197
		{
			yyVAL.columns = nil
		}
	case 1226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6201
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6207
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6211
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1229:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6217
		{
			yyVAL.colIdent = yyDollar[3].colIdent
		}
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6221
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6225
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6229
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6233
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6237
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1235:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6242
		{
			yyVAL.assignExprs = nil
		}
	case 1236:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6246
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6252
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 1238:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6256
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6262
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 1240:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6266
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 1241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6272
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6278
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6288
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 1244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6292
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 1245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6298
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 1246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6301
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1247:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6305
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6309
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6315
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 1250:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6319
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6325
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 1252:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6336
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1253:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6349
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1254:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6362
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6368
		{
			yyVAL.setScope = SetScope_Global
		}
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6372
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6378
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6382
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6386
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 1260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6392
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1261:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6396
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1262:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6400
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 1264:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6407
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6414
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 1267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6418
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6422
		{
			yyVAL.expr = &Default{}
		}
	case 1271:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6431
		{
			yyVAL.byt = 0
		}
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6433
		{
			yyVAL.byt = 1
		}
	case 1273:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6436
		{
			yyVAL.byt = 0
		}
	case 1274:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6438
		{
			yyVAL.byt = 1
		}
	case 1275:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6441
		{
			yyVAL.byt = 0
		}
	case 1276:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6443
		{
			yyVAL.byt = 1
		}
	case 1277:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6446
		{
			yyVAL.str = ""
		}
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6448
		{
			yyVAL.str = IgnoreStr
		}
	case 1279:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6451
		{
			yyVAL.sqlVal = nil
		}
	case 1280:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6453
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1281:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6455
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6459
		{
			yyVAL.empty = struct{}{}
		}
	case 1283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6461
		{
			yyVAL.empty = struct{}{}
		}
	case 1284:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6464
		{
			yyVAL.empty = struct{}{}
		}
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6466
		{
			yyVAL.empty = struct{}{}
		}
	case 1286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6468
		{
			yyVAL.empty = struct{}{}
		}
	case 1287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6472
		{
			yyVAL.str = UniqueStr
		}
	case 1288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6474
		{
			yyVAL.str = FulltextStr
		}
	case 1289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6476
		{
			yyVAL.str = SpatialStr
		}
	case 1290:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6479
		{
			yyVAL.str = ""
		}
	case 1291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6481
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1292:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6484
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 1293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6486
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 1294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6490
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6494
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6500
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 1297:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6504
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 1299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6511
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6517
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6521
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6528
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1304:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6533
		{
			yyVAL.str = string("")
		}
	case 1305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6535
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1306:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6538
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6540
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1308:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6543
		{
			yyVAL.EnclosedBy = nil
		}
	case 1309:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6547
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1310:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6552
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6556
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1312:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6561
		{
			yyVAL.sqlVal = nil
		}
	case 1313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6565
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1314:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6570
		{
			yyVAL.sqlVal = nil
		}
	case 1315:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6574
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1316:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6579
		{
			yyVAL.Fields = nil
		}
	case 1317:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6583
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1318:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6588
		{
			yyVAL.Lines = nil
		}
	case 1319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6592
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1320:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6597
		{
			yyVAL.sqlVal = nil
		}
	case 1321:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6601
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1322:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6607
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6613
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1324:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6617
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6623
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1326:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6627
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6633
		{
			yyVAL.lockType = LockRead
		}
	case 1328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6637
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6641
		{
			yyVAL.lockType = LockWrite
		}
	case 1330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6645
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6651
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6657
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[2].bytes)}
		}
	case 1333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6661
		{
			yyVAL.statement = &Kill{ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6665
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 2113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7485
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7494
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
