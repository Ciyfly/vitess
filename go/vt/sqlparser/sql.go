// Code generated by goyacc -v y.output -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

//import "runtime/debug"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

func yySpecialCommentMode(yylex interface{}) bool {
	tkn := yylex.(*Tokenizer)
	return tkn.specialComment != nil
}

//line sql.y:64
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	variables                Variables
	into                     *Into
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	triggerName              TriggerName
	tableName                TableName
	tableNames               TableNames
	procedureName            ProcedureName
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	flushOption              *FlushOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	viewSpec                 *ViewSpec
	showFilter               *ShowFilter
	frame                    *Frame
	frameExtent              *FrameExtent
	frameBound               *FrameBound
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	charsetCollate           *CharsetAndCollate
	charsetCollates          []*CharsetAndCollate
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptionItem            TLSOptionItem
	tlsOptionItems           []TLSOptionItem
	accountLimitItem         AccountLimitItem
	accountLimitItems        []AccountLimitItem
	passLockItem             PassLockItem
	passLockItems            []PassLockItem
	grantPrivilege           Privilege
	grantPrivileges          []Privilege
	grantObjectType          GrantObjectType
	privilegeLevel           PrivilegeLevel
	grantAssumption          *GrantUserAssumption
	with                     *With
	window                   Window
	over                     *Over
	windowDef                *WindowDef
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const DUPLICATE = 57369
const DEFAULT = 57370
const SET = 57371
const LOCK = 57372
const UNLOCK = 57373
const KEYS = 57374
const OF = 57375
const OUTFILE = 57376
const DUMPFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const INTO = 57425
const OR = 57426
const XOR = 57427
const AND = 57428
const NOT = 57429
const BETWEEN = 57430
const CASE = 57431
const WHEN = 57432
const THEN = 57433
const ELSE = 57434
const ELSEIF = 57435
const END = 57436
const LE = 57437
const GE = 57438
const NE = 57439
const NULL_SAFE_EQUAL = 57440
const IS = 57441
const LIKE = 57442
const REGEXP = 57443
const IN = 57444
const UNBOUNDED = 57445
const PARTITION = 57446
const RANGE = 57447
const ROWS = 57448
const GROUPS = 57449
const PRECEDING = 57450
const FOLLOWING = 57451
const SHIFT_LEFT = 57452
const SHIFT_RIGHT = 57453
const DIV = 57454
const MOD = 57455
const UNARY = 57456
const COLLATE = 57457
const BINARY = 57458
const UNDERSCORE_ARMSCII8 = 57459
const UNDERSCORE_ASCII = 57460
const UNDERSCORE_BIG5 = 57461
const UNDERSCORE_BINARY = 57462
const UNDERSCORE_CP1250 = 57463
const UNDERSCORE_CP1251 = 57464
const UNDERSCORE_CP1256 = 57465
const UNDERSCORE_CP1257 = 57466
const UNDERSCORE_CP850 = 57467
const UNDERSCORE_CP852 = 57468
const UNDERSCORE_CP866 = 57469
const UNDERSCORE_CP932 = 57470
const UNDERSCORE_DEC8 = 57471
const UNDERSCORE_EUCJPMS = 57472
const UNDERSCORE_EUCKR = 57473
const UNDERSCORE_GB18030 = 57474
const UNDERSCORE_GB2312 = 57475
const UNDERSCORE_GBK = 57476
const UNDERSCORE_GEOSTD8 = 57477
const UNDERSCORE_GREEK = 57478
const UNDERSCORE_HEBREW = 57479
const UNDERSCORE_HP8 = 57480
const UNDERSCORE_KEYBCS2 = 57481
const UNDERSCORE_KOI8R = 57482
const UNDERSCORE_KOI8U = 57483
const UNDERSCORE_LATIN1 = 57484
const UNDERSCORE_LATIN2 = 57485
const UNDERSCORE_LATIN5 = 57486
const UNDERSCORE_LATIN7 = 57487
const UNDERSCORE_MACCE = 57488
const UNDERSCORE_MACROMAN = 57489
const UNDERSCORE_SJIS = 57490
const UNDERSCORE_SWE7 = 57491
const UNDERSCORE_TIS620 = 57492
const UNDERSCORE_UCS2 = 57493
const UNDERSCORE_UJIS = 57494
const UNDERSCORE_UTF16 = 57495
const UNDERSCORE_UTF16LE = 57496
const UNDERSCORE_UTF32 = 57497
const UNDERSCORE_UTF8 = 57498
const UNDERSCORE_UTF8MB3 = 57499
const UNDERSCORE_UTF8MB4 = 57500
const INTERVAL = 57501
const JSON_EXTRACT_OP = 57502
const JSON_UNQUOTE_EXTRACT_OP = 57503
const CREATE = 57504
const ALTER = 57505
const DROP = 57506
const RENAME = 57507
const ANALYZE = 57508
const ADD = 57509
const MODIFY = 57510
const CHANGE = 57511
const SCHEMA = 57512
const TABLE = 57513
const INDEX = 57514
const INDEXES = 57515
const VIEW = 57516
const TO = 57517
const IGNORE = 57518
const IF = 57519
const PRIMARY = 57520
const COLUMN = 57521
const SPATIAL = 57522
const FULLTEXT = 57523
const KEY_BLOCK_SIZE = 57524
const CHECK = 57525
const ACTION = 57526
const CASCADE = 57527
const CONSTRAINT = 57528
const FOREIGN = 57529
const NO = 57530
const REFERENCES = 57531
const RESTRICT = 57532
const FIRST = 57533
const AFTER = 57534
const SHOW = 57535
const DESCRIBE = 57536
const EXPLAIN = 57537
const DATE = 57538
const ESCAPE = 57539
const REPAIR = 57540
const OPTIMIZE = 57541
const TRUNCATE = 57542
const FORMAT = 57543
const MAXVALUE = 57544
const REORGANIZE = 57545
const LESS = 57546
const THAN = 57547
const PROCEDURE = 57548
const TRIGGER = 57549
const TRIGGERS = 57550
const FUNCTION = 57551
const STATUS = 57552
const VARIABLES = 57553
const WARNINGS = 57554
const ERRORS = 57555
const KILL = 57556
const CONNECTION = 57557
const SEQUENCE = 57558
const ENABLE = 57559
const DISABLE = 57560
const EACH = 57561
const ROW = 57562
const BEFORE = 57563
const FOLLOWS = 57564
const PRECEDES = 57565
const DEFINER = 57566
const INVOKER = 57567
const INOUT = 57568
const OUT = 57569
const DETERMINISTIC = 57570
const CONTAINS = 57571
const READS = 57572
const MODIFIES = 57573
const SQL = 57574
const SECURITY = 57575
const TEMPORARY = 57576
const ALGORITHM = 57577
const MERGE = 57578
const TEMPTABLE = 57579
const UNDEFINED = 57580
const CLASS_ORIGIN = 57581
const SUBCLASS_ORIGIN = 57582
const MESSAGE_TEXT = 57583
const MYSQL_ERRNO = 57584
const CONSTRAINT_CATALOG = 57585
const CONSTRAINT_SCHEMA = 57586
const CONSTRAINT_NAME = 57587
const CATALOG_NAME = 57588
const SCHEMA_NAME = 57589
const TABLE_NAME = 57590
const COLUMN_NAME = 57591
const CURSOR_NAME = 57592
const SIGNAL = 57593
const RESIGNAL = 57594
const SQLSTATE = 57595
const DECLARE = 57596
const CONDITION = 57597
const CURSOR = 57598
const CONTINUE = 57599
const EXIT = 57600
const UNDO = 57601
const HANDLER = 57602
const FOUND = 57603
const SQLWARNING = 57604
const SQLEXCEPTION = 57605
const USER = 57606
const IDENTIFIED = 57607
const ROLE = 57608
const REUSE = 57609
const GRANT = 57610
const GRANTS = 57611
const REVOKE = 57612
const NONE = 57613
const ATTRIBUTE = 57614
const RANDOM = 57615
const PASSWORD = 57616
const INITIAL = 57617
const AUTHENTICATION = 57618
const SSL = 57619
const X509 = 57620
const CIPHER = 57621
const ISSUER = 57622
const SUBJECT = 57623
const ACCOUNT = 57624
const EXPIRE = 57625
const NEVER = 57626
const DAY = 57627
const OPTION = 57628
const OPTIONAL = 57629
const EXCEPT = 57630
const ADMIN = 57631
const PRIVILEGES = 57632
const MAX_QUERIES_PER_HOUR = 57633
const MAX_UPDATES_PER_HOUR = 57634
const MAX_CONNECTIONS_PER_HOUR = 57635
const MAX_USER_CONNECTIONS = 57636
const FLUSH = 57637
const FAILED_LOGIN_ATTEMPTS = 57638
const PASSWORD_LOCK_TIME = 57639
const REQUIRE = 57640
const PROXY = 57641
const ROUTINE = 57642
const TABLESPACE = 57643
const CLIENT = 57644
const SLAVE = 57645
const EVENT = 57646
const EXECUTE = 57647
const FILE = 57648
const RELOAD = 57649
const REPLICATION = 57650
const SHUTDOWN = 57651
const SUPER = 57652
const USAGE = 57653
const LOGS = 57654
const ENGINE = 57655
const ERROR = 57656
const GENERAL = 57657
const HOSTS = 57658
const OPTIMIZER_COSTS = 57659
const RELAY = 57660
const SLOW = 57661
const USER_RESOURCES = 57662
const NO_WRITE_TO_BINLOG = 57663
const CHANNEL = 57664
const BEGIN = 57665
const START = 57666
const TRANSACTION = 57667
const COMMIT = 57668
const ROLLBACK = 57669
const SAVEPOINT = 57670
const WORK = 57671
const RELEASE = 57672
const BIT = 57673
const TINYINT = 57674
const SMALLINT = 57675
const MEDIUMINT = 57676
const INT = 57677
const INTEGER = 57678
const BIGINT = 57679
const INTNUM = 57680
const SERIAL = 57681
const REAL = 57682
const DOUBLE = 57683
const FLOAT_TYPE = 57684
const DECIMAL = 57685
const NUMERIC = 57686
const DEC = 57687
const FIXED = 57688
const PRECISION = 57689
const TIME = 57690
const TIMESTAMP = 57691
const DATETIME = 57692
const YEAR = 57693
const CHAR = 57694
const VARCHAR = 57695
const BOOL = 57696
const CHARACTER = 57697
const VARBINARY = 57698
const NCHAR = 57699
const NVARCHAR = 57700
const NATIONAL = 57701
const VARYING = 57702
const TEXT = 57703
const TINYTEXT = 57704
const MEDIUMTEXT = 57705
const LONGTEXT = 57706
const LONG = 57707
const BLOB = 57708
const TINYBLOB = 57709
const MEDIUMBLOB = 57710
const LONGBLOB = 57711
const JSON = 57712
const ENUM = 57713
const GEOMETRY = 57714
const POINT = 57715
const LINESTRING = 57716
const POLYGON = 57717
const GEOMETRYCOLLECTION = 57718
const MULTIPOINT = 57719
const MULTILINESTRING = 57720
const MULTIPOLYGON = 57721
const LOCAL = 57722
const LOW_PRIORITY = 57723
const NULLX = 57724
const AUTO_INCREMENT = 57725
const APPROXNUM = 57726
const SIGNED = 57727
const UNSIGNED = 57728
const ZEROFILL = 57729
const SRID = 57730
const COLLATION = 57731
const DATABASES = 57732
const SCHEMAS = 57733
const TABLES = 57734
const FULL = 57735
const PROCESSLIST = 57736
const COLUMNS = 57737
const FIELDS = 57738
const ENGINES = 57739
const PLUGINS = 57740
const NAMES = 57741
const CHARSET = 57742
const GLOBAL = 57743
const SESSION = 57744
const ISOLATION = 57745
const LEVEL = 57746
const READ = 57747
const WRITE = 57748
const ONLY = 57749
const REPEATABLE = 57750
const COMMITTED = 57751
const UNCOMMITTED = 57752
const SERIALIZABLE = 57753
const ENCRYPTION = 57754
const CURRENT_TIMESTAMP = 57755
const DATABASE = 57756
const CURRENT_DATE = 57757
const CURRENT_USER = 57758
const CURRENT_TIME = 57759
const LOCALTIME = 57760
const LOCALTIMESTAMP = 57761
const UTC_DATE = 57762
const UTC_TIME = 57763
const UTC_TIMESTAMP = 57764
const REPLACE = 57765
const CONVERT = 57766
const CAST = 57767
const SUBSTR = 57768
const SUBSTRING = 57769
const TRIM = 57770
const LEADING = 57771
const TRAILING = 57772
const BOTH = 57773
const GROUP_CONCAT = 57774
const SEPARATOR = 57775
const TIMESTAMPADD = 57776
const TIMESTAMPDIFF = 57777
const OVER = 57778
const WINDOW = 57779
const GROUPING = 57780
const CURRENT = 57781
const AVG = 57782
const BIT_AND = 57783
const BIT_OR = 57784
const BIT_XOR = 57785
const COUNT = 57786
const JSON_ARRAYAGG = 57787
const JSON_OBJECTAGG = 57788
const MAX = 57789
const MIN = 57790
const STDDEV_POP = 57791
const STDDEV = 57792
const STD = 57793
const STDDEV_SAMP = 57794
const SUM = 57795
const VAR_POP = 57796
const VARIANCE = 57797
const VAR_SAMP = 57798
const CUME_DIST = 57799
const DENSE_RANK = 57800
const FIRST_VALUE = 57801
const LAG = 57802
const LAST_VALUE = 57803
const LEAD = 57804
const NTH_VALUE = 57805
const NTILE = 57806
const ROW_NUMBER = 57807
const PERCENT_RANK = 57808
const RANK = 57809
const JSON_TABLE = 57810
const PATH = 57811
const MATCH = 57812
const AGAINST = 57813
const BOOLEAN = 57814
const LANGUAGE = 57815
const WITH = 57816
const QUERY = 57817
const EXPANSION = 57818
const ACCESSIBLE = 57819
const ASENSITIVE = 57820
const CUBE = 57821
const DAY_HOUR = 57822
const DAY_MICROSECOND = 57823
const DAY_MINUTE = 57824
const DAY_SECOND = 57825
const DELAYED = 57826
const DISTINCTROW = 57827
const DUAL = 57828
const EMPTY = 57829
const FETCH = 57830
const FLOAT4 = 57831
const FLOAT8 = 57832
const GET = 57833
const HIGH_PRIORITY = 57834
const HOUR_MICROSECOND = 57835
const HOUR_MINUTE = 57836
const HOUR_SECOND = 57837
const INSENSITIVE = 57838
const INT1 = 57839
const INT2 = 57840
const INT3 = 57841
const INT4 = 57842
const INT8 = 57843
const IO_AFTER_GTIDS = 57844
const IO_BEFORE_GTIDS = 57845
const ITERATE = 57846
const LEAVE = 57847
const LINEAR = 57848
const LOOP = 57849
const MASTER_BIND = 57850
const MASTER_SSL_VERIFY_SERVER_CERT = 57851
const MIDDLEINT = 57852
const MINUTE_MICROSECOND = 57853
const MINUTE_SECOND = 57854
const PURGE = 57855
const READ_WRITE = 57856
const REPEAT = 57857
const RETURN = 57858
const RLIKE = 57859
const SECOND_MICROSECOND = 57860
const SENSITIVE = 57861
const SPECIFIC = 57862
const SQL_BIG_RESULT = 57863
const SQL_SMALL_RESULT = 57864
const VARCHARACTER = 57865
const WHILE = 57866
const YEAR_MONTH = 57867
const UNUSED = 57868
const DESCRIPTION = 57869
const LATERAL = 57870
const MEMBER = 57871
const RECURSIVE = 57872
const BUCKETS = 57873
const CLONE = 57874
const COMPONENT = 57875
const DEFINITION = 57876
const ENFORCED = 57877
const EXCLUDE = 57878
const GEOMCOLLECTION = 57879
const GET_MASTER_PUBLIC_KEY = 57880
const HISTOGRAM = 57881
const HISTORY = 57882
const INACTIVE = 57883
const INVISIBLE = 57884
const LOCKED = 57885
const MASTER_COMPRESSION_ALGORITHMS = 57886
const MASTER_PUBLIC_KEY_PATH = 57887
const MASTER_TLS_CIPHERSUITES = 57888
const MASTER_ZSTD_COMPRESSION_LEVEL = 57889
const NESTED = 57890
const NETWORK_NAMESPACE = 57891
const NOWAIT = 57892
const NULLS = 57893
const OJ = 57894
const OLD = 57895
const ORDINALITY = 57896
const ORGANIZATION = 57897
const OTHERS = 57898
const PERSIST = 57899
const PERSIST_ONLY = 57900
const PRIVILEGE_CHECKS_USER = 57901
const PROCESS = 57902
const REFERENCE = 57903
const REQUIRE_ROW_FORMAT = 57904
const RESOURCE = 57905
const RESPECT = 57906
const RESTART = 57907
const RETAIN = 57908
const SECONDARY = 57909
const SECONDARY_ENGINE = 57910
const SECONDARY_LOAD = 57911
const SECONDARY_UNLOAD = 57912
const SKIP = 57913
const THREAD_PRIORITY = 57914
const TIES = 57915
const VCPU = 57916
const VISIBLE = 57917
const SYSTEM = 57918
const INFILE = 57919
const ACTIVE = 57920
const AGGREGATE = 57921
const ANY = 57922
const ARRAY = 57923
const ASCII = 57924
const AT = 57925
const AUTOEXTEND_SIZE = 57926
const ENDS = 57927
const EVENTS = 57928
const GENERATED = 57929
const ALWAYS = 57930
const STORED = 57931
const VIRTUAL = 57932
const NVAR = 57933
const PASSWORD_LOCK = 57934

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DUMPFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"INTO",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB3",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"ENABLE",
	"DISABLE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"ALGORITHM",
	"MERGE",
	"TEMPTABLE",
	"UNDEFINED",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTION",
	"OPTIONAL",
	"EXCEPT",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EVENT",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"SRID",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ENCRYPTION",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"JSON_TABLE",
	"PATH",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ACCESSIBLE",
	"ASENSITIVE",
	"CUBE",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"DELAYED",
	"DISTINCTROW",
	"DUAL",
	"EMPTY",
	"FETCH",
	"FLOAT4",
	"FLOAT8",
	"GET",
	"HIGH_PRIORITY",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"INSENSITIVE",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"IO_AFTER_GTIDS",
	"IO_BEFORE_GTIDS",
	"ITERATE",
	"LEAVE",
	"LINEAR",
	"LOOP",
	"MASTER_BIND",
	"MASTER_SSL_VERIFY_SERVER_CERT",
	"MIDDLEINT",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"PURGE",
	"READ_WRITE",
	"REPEAT",
	"RETURN",
	"RLIKE",
	"SECOND_MICROSECOND",
	"SENSITIVE",
	"SPECIFIC",
	"SQL_BIG_RESULT",
	"SQL_SMALL_RESULT",
	"VARCHARACTER",
	"WHILE",
	"YEAR_MONTH",
	"UNUSED",
	"DESCRIPTION",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"ACTIVE",
	"AGGREGATE",
	"ANY",
	"ARRAY",
	"ASCII",
	"AT",
	"AUTOEXTEND_SIZE",
	"ENDS",
	"EVENTS",
	"GENERATED",
	"ALWAYS",
	"STORED",
	"VIRTUAL",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 35,
	611, 35,
	-2, 55,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 35,
	5, 60,
	-2, 1194,
	-1, 41,
	189, 1264,
	190, 1283,
	-2, 247,
	-1, 47,
	228, 749,
	229, 749,
	-2, 738,
	-1, 477,
	177, 1660,
	-2, 934,
	-1, 478,
	177, 1293,
	-2, 1287,
	-1, 479,
	177, 1294,
	-2, 1288,
	-1, 509,
	177, 1770,
	-2, 1182,
	-1, 510,
	177, 1852,
	-2, 936,
	-1, 511,
	177, 1680,
	-2, 937,
	-1, 515,
	177, 1617,
	-2, 2111,
	-1, 516,
	177, 1641,
	-2, 2112,
	-1, 517,
	177, 1754,
	-2, 2113,
	-1, 518,
	177, 1761,
	-2, 2114,
	-1, 519,
	177, 1841,
	-2, 2115,
	-1, 578,
	177, 1630,
	-2, 1155,
	-1, 581,
	177, 1648,
	-2, 1084,
	-1, 582,
	177, 1864,
	-2, 1084,
	-1, 583,
	177, 1863,
	-2, 1084,
	-1, 584,
	177, 1862,
	-2, 1084,
	-1, 585,
	177, 1748,
	-2, 1084,
	-1, 586,
	177, 1749,
	-2, 1084,
	-1, 587,
	177, 1646,
	-2, 1084,
	-1, 588,
	177, 1647,
	-2, 1084,
	-1, 589,
	177, 1649,
	-2, 1084,
	-1, 837,
	100, 1952,
	177, 1952,
	-2, 1248,
	-1, 838,
	100, 2047,
	177, 2047,
	-2, 1249,
	-1, 843,
	100, 1972,
	177, 1972,
	-2, 1250,
	-1, 844,
	100, 2010,
	177, 2010,
	-2, 1251,
	-1, 845,
	100, 2011,
	177, 2011,
	-2, 1252,
	-1, 846,
	100, 1900,
	177, 1900,
	-2, 1256,
	-1, 848,
	100, 1991,
	177, 1991,
	-2, 1258,
	-1, 1368,
	1, 518,
	611, 518,
	-2, 516,
	-1, 1370,
	1, 518,
	611, 518,
	-2, 516,
	-1, 1785,
	177, 1291,
	-2, 1220,
	-1, 1792,
	177, 1337,
	-2, 2111,
	-1, 1793,
	177, 1361,
	-2, 2112,
	-1, 1794,
	177, 1477,
	-2, 2113,
	-1, 1795,
	177, 1484,
	-2, 2114,
	-1, 1796,
	177, 1567,
	-2, 2115,
	-1, 1831,
	177, 1296,
	-2, 1292,
	-1, 1951,
	1, 851,
	5, 851,
	12, 851,
	13, 851,
	14, 851,
	15, 851,
	17, 851,
	19, 851,
	29, 851,
	30, 851,
	56, 851,
	57, 851,
	58, 851,
	59, 851,
	60, 851,
	62, 851,
	63, 851,
	66, 851,
	67, 851,
	69, 851,
	70, 851,
	87, 851,
	455, 851,
	611, 851,
	-2, 883,
	-1, 1958,
	67, 77,
	69, 77,
	-2, 81,
	-1, 1975,
	177, 1774,
	-2, 1253,
	-1, 2058,
	1, 519,
	611, 519,
	-2, 516,
	-1, 2144,
	44, 631,
	196, 633,
	198, 631,
	199, 631,
	-2, 674,
	-1, 2197,
	5, 61,
	-2, 966,
	-1, 2549,
	177, 1617,
	-2, 2111,
	-1, 2550,
	177, 1641,
	-2, 2112,
	-1, 2551,
	177, 1754,
	-2, 2113,
	-1, 2552,
	177, 1761,
	-2, 2114,
	-1, 2553,
	177, 1841,
	-2, 2115,
	-1, 2694,
	196, 634,
	-2, 632,
	-1, 2768,
	177, 1541,
	-2, 781,
	-1, 2794,
	1, 920,
	5, 920,
	12, 920,
	13, 920,
	14, 920,
	15, 920,
	17, 920,
	19, 920,
	29, 920,
	30, 920,
	56, 920,
	57, 920,
	58, 920,
	59, 920,
	60, 920,
	62, 920,
	63, 920,
	66, 920,
	67, 920,
	69, 920,
	70, 920,
	87, 920,
	455, 920,
	611, 920,
	-2, 883,
	-1, 2934,
	5, 61,
	-2, 1214,
	-1, 3021,
	41, 1303,
	-2, 1301,
	-1, 3219,
	5, 61,
	-2, 1217,
	-1, 3234,
	278, 313,
	-2, 1359,
	-1, 3235,
	278, 314,
	-2, 1400,
	-1, 3236,
	278, 315,
	-2, 1579,
	-1, 3402,
	95, 299,
	97, 299,
	99, 299,
	-2, 55,
	-1, 3429,
	97, 306,
	98, 306,
	99, 306,
	-2, 55,
}

const yyPrivate = 57344

const yyLast = 42554

var yyAct = [...]int{
	521, 76, 3354, 3385, 3394, 3239, 456, 3335, 3298, 3356,
	3336, 2515, 3148, 7, 2372, 3260, 3145, 3, 958, 3147,
	6, 3211, 3140, 410, 3278, 3238, 2637, 3221, 3255, 3202,
	481, 2591, 3118, 3078, 3120, 1985, 2959, 3146, 5, 2808,
	3149, 8, 3209, 3021, 2541, 1203, 1202, 2280, 2787, 2469,
	1298, 520, 2761, 2053, 463, 2282, 2275, 2762, 485, 3023,
	470, 2077, 79, 2890, 2455, 393, 396, 2860, 2654, 2866,
	2844, 479, 1804, 3141, 1997, 2406, 2592, 76, 91, 1226,
	2542, 2758, 2311, 435, 435, 2315, 2688, 2468, 2678, 441,
	2388, 2770, 975, 461, 2779, 992, 498, 1784, 1403, 1984,
	1797, 68, 2143, 2039, 104, 1915, 1947, 1857, 1983, 2173,
	2265, 2485, 2006, 1016, 1812, 2258, 2106, 130, 1863, 1405,
	130, 1734, 1973, 460, 2434, 1946, 130, 1791, 1379, 1993,
	2061, 2035, 2060, 2059, 1705, 1121, 438, 438, 1276, 921,
	1280, 1128, 1906, 2363, 839, 1834, 488, 130, 842, 1124,
	1951, 2123, 1045, 2545, 1132, 1024, 2057, 928, 2023, 1279,
	835, 836, 920, 971, 130, 930, 1960, 1142, 455, 941,
	413, 466, 1374, 1402, 1023, 412, 1371, 100, 462, 490,
	946, 96, 450, 3429, 130, 438, 3425, 930, 3419, 81,
	3402, 3400, 3380, 3349, 3286, 130, 2316, 1739, 78, 3080,
	3079, 2606, 1732, 3000, 2831, 2635, 3423, 3412, 36, 3366,
	3207, 36, 957, 405, 1225, 36, 36, 39, 2845, 2998,
	476, 3330, 3126, 3013, 2091, 2091, 3301, 83, 2847, 89,
	3194, 2536, 2400, 2651, 3001, 3206, 2507, 428, 2523, 422,
	433, 416, 3125, 3334, 3308, 3098, 2329, 925, 3256, 2537,
	453, 2332, 3058, 2235, 2752, 940, 2277, 3215, 2122, 2694,
	67, 423, 979, 980, 3215, 2586, 983, 2337, 2336, 943,
	77, 948, 949, 77, 830, 831, 832, 77, 77, 2587,
	2588, 1735, 3210, 951, 1738, 2310, 87, 85, 86, 2333,
	1970, 1971, 1114, 3212, 1780, 1781, 1969, 1359, 981, 982,
	3212, 118, 114, 115, 2339, 116, 2322, 3049, 1736, 1737,
	1281, 995, 1282, 3066, 2323, 1159, 1158, 1168, 1169, 1161,
	1162, 1163, 1164, 1165, 1166, 1167, 1160, 2299, 2341, 1170,
	2298, 1755, 1073, 2300, 404, 1055, 403, 120, 119, 445,
	1916, 2121, 2813, 2850, 2819, 2821, 2820, 2817, 2818, 2816,
	2815, 2814, 916, 996, 997, 2008, 2009, 1042, 3216, 2915,
	2024, 2738, 2011, 2822, 2823, 3216, 2011, 2015, 2017, 2736,
	2016, 407, 2029, 387, 2024, 402, 2036, 1718, 1002, 452,
	2431, 1006, 1776, 2848, 2849, 2851, 2852, 2853, 937, 1775,
	76, 76, 1774, 1773, 1772, 121, 1771, 122, 446, 2395,
	2379, 2423, 1011, 3323, 1081, 3026, 1010, 461, 3182, 1013,
	2677, 415, 414, 417, 937, 1360, 1077, 1078, 3241, 2335,
	2428, 421, 2338, 2134, 1057, 3240, 937, 1012, 3184, 2661,
	2399, 130, 2861, 1003, 1004, 3102, 2878, 1014, 425, 3100,
	2864, 1360, 429, 2867, 2868, 2869, 2870, 3017, 2886, 1110,
	1865, 2135, 2995, 1360, 2862, 2863, 432, 1118, 1088, 2652,
	2664, 1089, 1766, 3389, 2078, 2655, 2656, 2657, 2658, 2659,
	3248, 112, 1057, 3092, 2876, 130, 2999, 2397, 1179, 3283,
	397, 1181, 106, 2993, 1183, 2655, 2656, 2657, 2658, 2659,
	3281, 3282, 462, 111, 394, 993, 3351, 994, 996, 997,
	1386, 1387, 1385, 1377, 945, 944, 978, 2992, 106, 2991,
	2990, 2989, 2987, 1194, 947, 2988, 1197, 1198, 1199, 1200,
	1201, 1324, 1206, 398, 3226, 3227, 130, 388, 3266, 3344,
	947, 3088, 3089, 3360, 472, 991, 3355, 3143, 461, 2072,
	2073, 2949, 2571, 3084, 1145, 117, 2414, 2415, 989, 990,
	988, 2486, 3358, 418, 419, 420, 426, 1745, 430, 431,
	434, 3285, 987, 3296, 113, 1207, 1208, 1209, 1210, 1211,
	1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 3076,
	1223, 1224, 1227, 1227, 1227, 1233, 1227, 1227, 1233, 1227,
	1233, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250,
	1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260,
	1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270,
	1080, 3094, 3326, 462, 2334, 1311, 1149, 1180, 2846, 2331,
	2068, 406, 2488, 2398, 3398, 1095, 937, 1107, 3414, 3213,
	2003, 2377, 2891, 2892, 937, 131, 3213, 2679, 2128, 132,
	2440, 1719, 133, 134, 2693, 1007, 3099, 1738, 135, 2067,
	2024, 2996, 1229, 1231, 3016, 1235, 1237, 2634, 1240, 3124,
	2010, 131, 2348, 2038, 1056, 132, 2014, 2663, 133, 134,
	75, 1736, 1737, 131, 135, 3183, 2378, 132, 1067, 3050,
	133, 134, 395, 395, 75, 3430, 135, 75, 2380, 3014,
	1090, 75, 75, 390, 3427, 1116, 1325, 3307, 2401, 1109,
	1187, 1188, 1189, 1190, 1191, 1192, 1193, 937, 3420, 88,
	927, 3403, 395, 2151, 2145, 2146, 2595, 2144, 2147, 2148,
	1105, 937, 395, 942, 960, 2003, 1740, 108, 391, 3104,
	451, 3357, 3359, 2902, 2901, 2422, 108, 3093, 2419, 2403,
	2402, 1058, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1689,
	1074, 1075, 1076, 2154, 1079, 2005, 1082, 1083, 1084, 1085,
	1086, 1742, 2452, 2960, 1741, 2285, 2287, 2153, 2152, 2490,
	2129, 1391, 1389, 1053, 2494, 1057, 2489, 2962, 2487, 1008,
	97, 2056, 939, 2492, 2005, 2005, 2005, 1228, 1230, 1232,
	1234, 1236, 1238, 1239, 1241, 2005, 2491, 2579, 3396, 424,
	1101, 3397, 2578, 3395, 2577, 938, 2417, 1113, 950, 359,
	1184, 2493, 2495, 2319, 1182, 2905, 2210, 2724, 2330, 2717,
	2207, 2585, 1100, 1096, 1097, 1098, 1099, 1102, 1103, 1104,
	1106, 1338, 1341, 1342, 1343, 1344, 1345, 1346, 2421, 1347,
	1348, 1349, 1350, 1351, 1352, 1353, 1354, 77, 1326, 1327,
	1328, 1329, 1305, 1309, 1339, 1306, 1312, 1308, 1310, 1307,
	3097, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321,
	1322, 1323, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337,
	99, 110, 109, 2088, 842, 1170, 1185, 1186, 2087, 842,
	110, 109, 2420, 2303, 130, 2286, 2961, 1052, 2189, 1064,
	2004, 2178, 2159, 930, 2900, 2071, 1129, 2440, 2069, 1965,
	1807, 937, 1292, 1196, 2441, 2003, 1151, 1026, 1027, 1028,
	1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 2004,
	2004, 2004, 2451, 2150, 106, 1195, 2448, 1150, 970, 1974,
	2004, 1005, 1974, 2975, 107, 111, 2447, 2440, 2981, 1974,
	2973, 2444, 2838, 2295, 2443, 2446, 1184, 2836, 435, 1062,
	1974, 2825, 1204, 1381, 1355, 1356, 1357, 1358, 2906, 1293,
	1284, 2673, 1340, 2623, 101, 1285, 102, 435, 1974, 2626,
	1974, 2622, 1404, 1185, 1186, 1715, 1274, 1185, 1186, 1063,
	3243, 1059, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1160,
	930, 130, 1170, 1271, 1272, 1974, 2618, 1974, 2616, 2982,
	438, 438, 3119, 2839, 438, 1974, 2361, 1160, 2837, 1222,
	1170, 130, 1974, 2359, 130, 1060, 1061, 1974, 2357, 438,
	438, 2929, 130, 3003, 2624, 1974, 2355, 1380, 1974, 2352,
	2460, 1384, 130, 130, 130, 130, 130, 3267, 3268, 2259,
	1297, 1163, 1164, 1165, 1166, 1167, 1160, 1690, 1800, 1170,
	3264, 3265, 435, 438, 3129, 3128, 3244, 130, 1141, 3004,
	1701, 1702, 1703, 1704, 1706, 1362, 1730, 1168, 1169, 1161,
	1162, 1163, 1164, 1165, 1166, 1167, 1160, 1841, 1407, 1170,
	1713, 2456, 1139, 1140, 1138, 2098, 1764, 1294, 2777, 2776,
	3422, 76, 1839, 1840, 1838, 985, 2775, 2774, 1367, 1138,
	1382, 1141, 1366, 1393, 438, 438, 438, 461, 1709, 930,
	1710, 1727, 1383, 977, 98, 1290, 1141, 1805, 1806, 1401,
	1140, 1138, 1400, 1139, 1140, 1138, 1015, 953, 1694, 1695,
	952, 3348, 2509, 1748, 1786, 998, 1692, 1778, 1141, 438,
	1907, 94, 1141, 3418, 438, 438, 1159, 1158, 1168, 1169,
	1161, 1162, 1163, 1164, 1165, 1166, 1167, 1160, 3346, 1369,
	1170, 3413, 76, 1707, 959, 130, 1827, 130, 3302, 2877,
	930, 2871, 1770, 1722, 1723, 2907, 2117, 1725, 461, 1135,
	1139, 1140, 1138, 1798, 2099, 1835, 93, 1206, 130, 2506,
	2604, 3187, 462, 1728, 986, 1145, 1868, 1870, 1861, 1141,
	1867, 1712, 1125, 461, 1747, 1126, 1746, 1744, 2203, 976,
	3371, 1873, 1874, 1159, 1158, 1168, 1169, 1161, 1162, 1163,
	1164, 1165, 1166, 1167, 1160, 3179, 92, 1170, 1743, 3137,
	1907, 1000, 2223, 1883, 930, 3415, 930, 1139, 1140, 1138,
	3406, 3386, 3405, 2107, 3279, 930, 1769, 930, 930, 2202,
	1826, 2201, 1789, 1952, 1892, 1895, 1141, 130, 1831, 1777,
	2720, 3011, 1908, 462, 1782, 3010, 1765, 3009, 77, 1768,
	1139, 1140, 1138, 1139, 1140, 1138, 3370, 1149, 1798, 1837,
	1836, 962, 963, 964, 965, 966, 967, 968, 462, 1141,
	3416, 1823, 1141, 3180, 930, 930, 1159, 1158, 1168, 1169,
	1161, 1162, 1163, 1164, 1165, 1166, 1167, 1160, 1978, 1945,
	1170, 1139, 1140, 1138, 3279, 3008, 3312, 842, 3311, 3280,
	1139, 1140, 1138, 130, 130, 130, 3095, 3002, 1980, 1872,
	1141, 3369, 1875, 1876, 1877, 1878, 1879, 2830, 2829, 1141,
	3181, 2607, 1819, 1821, 1822, 2368, 2366, 930, 930, 1921,
	1820, 1923, 2342, 1833, 1809, 1904, 1842, 1843, 1844, 1845,
	1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855,
	1856, 1048, 1749, 3096, 1047, 1752, 1753, 1754, 1810, 1756,
	1757, 1811, 3333, 1758, 2175, 2176, 2177, 2369, 2522, 1759,
	1021, 2085, 1979, 1760, 1761, 3288, 1762, 1763, 3287, 1956,
	1831, 3245, 1139, 1140, 1138, 1139, 1140, 1138, 1693, 1858,
	2511, 1859, 2301, 1020, 2302, 3242, 1994, 1959, 1898, 1967,
	1966, 1141, 1963, 1972, 1141, 3193, 1120, 3091, 1911, 1711,
	925, 3090, 3075, 3018, 130, 2041, 2042, 2043, 2044, 1991,
	130, 130, 438, 438, 438, 2986, 1981, 130, 2045, 2046,
	2047, 2048, 2950, 2025, 2026, 2027, 2028, 2925, 382, 2874,
	2873, 2037, 2872, 2840, 2827, 2684, 2613, 2465, 2464, 2083,
	2084, 1204, 2364, 2002, 1159, 1158, 1168, 1169, 1161, 1162,
	1163, 1164, 1165, 1166, 1167, 1160, 36, 37, 1170, 2118,
	2093, 1724, 3276, 3275, 2745, 3101, 3073, 2049, 2050, 2051,
	57, 3035, 2319, 3029, 1862, 2898, 74, 2065, 2757, 39,
	61, 62, 2713, 2709, 2214, 2695, 2665, 58, 2409, 2408,
	2205, 2111, 2187, 1120, 2095, 1053, 2094, 1860, 1884, 1885,
	1886, 1720, 1910, 1717, 1890, 1891, 1894, 1897, 1399, 1902,
	1903, 1398, 1370, 1368, 48, 1909, 1043, 1392, 77, 973,
	1087, 503, 502, 505, 506, 507, 508, 401, 399, 360,
	504, 1869, 2969, 3309, 1120, 1914, 3028, 1917, 1918, 1815,
	1816, 1817, 1922, 1120, 1924, 1925, 2977, 94, 2803, 3294,
	1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939,
	1940, 1941, 2976, 1159, 1158, 1168, 1169, 1161, 1162, 1163,
	1164, 1165, 1166, 1167, 1160, 2644, 363, 1170, 3271, 1120,
	2803, 3252, 3200, 1120, 2407, 372, 380, 381, 2285, 2287,
	2614, 1159, 1158, 1168, 1169, 1161, 1162, 1163, 1164, 1165,
	1166, 1167, 1160, 2803, 3196, 1170, 3027, 1204, 2969, 3134,
	2803, 3082, 1888, 1889, 2969, 1120, 2969, 3064, 2969, 2968,
	369, 2792, 3327, 370, 2938, 1120, 378, 379, 2158, 1120,
	41, 70, 44, 43, 46, 2803, 2802, 2632, 2631, 2628,
	2629, 2262, 1159, 1158, 1168, 1169, 1161, 1162, 1163, 1164,
	1165, 1166, 1167, 1160, 2628, 2627, 1170, 2262, 1120, 2187,
	1120, 47, 73, 72, 2720, 1233, 2131, 2130, 45, 1961,
	1159, 1158, 1168, 1169, 1161, 1162, 1163, 1164, 1165, 1166,
	1167, 1160, 63, 375, 1170, 1881, 2115, 1881, 1120, 1296,
	1295, 1977, 2120, 1158, 1168, 1169, 1161, 1162, 1163, 1164,
	1165, 1166, 1167, 1160, 376, 2407, 1170, 2261, 2114, 2759,
	1961, 130, 2773, 80, 2290, 2076, 1689, 1092, 2286, 55,
	56, 1802, 3300, 1091, 2773, 1962, 1051, 1964, 130, 130,
	130, 2932, 1050, 1881, 2156, 1051, 64, 2262, 65, 2267,
	2270, 2271, 2272, 2268, 2091, 2269, 2273, 2262, 2100, 2780,
	2781, 2789, 77, 2105, 2645, 130, 2075, 130, 2630, 2463,
	2096, 930, 2773, 66, 2052, 930, 1962, 2187, 1689, 361,
	2433, 2305, 1801, 2104, 1968, 1053, 2187, 2229, 2179, 2267,
	2270, 2271, 2272, 2268, 2228, 2269, 2273, 930, 1726, 2090,
	930, 49, 71, 1827, 51, 52, 59, 2755, 60, 1803,
	1115, 1767, 1733, 374, 364, 365, 1689, 385, 1390, 1388,
	1278, 366, 368, 917, 362, 384, 383, 3223, 3197, 2788,
	930, 3115, 3032, 2946, 2832, 2011, 2780, 2781, 409, 2040,
	2603, 2036, 2113, 2309, 1057, 2070, 2119, 2031, 2030, 1363,
	1835, 1040, 2054, 2505, 2108, 2126, 1159, 1158, 1168, 1169,
	1161, 1162, 1163, 1164, 1165, 1166, 1167, 1160, 377, 3392,
	1170, 3375, 3373, 3337, 2783, 2759, 2643, 2133, 2370, 1395,
	2136, 1093, 1054, 2563, 1049, 77, 2561, 1979, 2564, 2109,
	1956, 2562, 2140, 2174, 2155, 1831, 2565, 2786, 2271, 2272,
	2785, 2560, 2112, 2559, 440, 2167, 467, 468, 3262, 3205,
	2466, 2165, 2166, 2278, 2164, 2279, 1813, 512, 2288, 2184,
	3254, 1952, 2284, 2935, 1952, 1133, 1134, 2172, 2171, 461,
	3055, 2897, 2806, 2708, 2707, 2612, 2012, 2013, 2190, 2018,
	2019, 2020, 2021, 2022, 2180, 1836, 2611, 2610, 2321, 3106,
	2313, 2597, 75, 3109, 1131, 3192, 3191, 2032, 2033, 2034,
	1159, 1158, 1168, 1169, 1161, 1162, 1163, 1164, 1165, 1166,
	1167, 1160, 3022, 1119, 1170, 130, 3020, 2291, 3087, 3086,
	2292, 400, 1721, 2459, 130, 2458, 842, 130, 3005, 3006,
	2274, 1122, 130, 2639, 2353, 130, 130, 130, 1291, 1038,
	1022, 3319, 1123, 1019, 1018, 974, 3039, 849, 2222, 3038,
	2063, 922, 1805, 1806, 462, 930, 2930, 2879, 2064, 1394,
	2181, 2182, 2183, 3332, 2880, 3328, 3185, 3024, 2811, 1017,
	2638, 1133, 1134, 961, 2289, 94, 2055, 1783, 1111, 1112,
	2170, 3318, 3317, 2306, 2318, 2320, 3316, 2983, 2169, 2139,
	1001, 2132, 464, 1407, 3247, 3246, 3204, 3189, 3110, 1956,
	3054, 465, 80, 2293, 3203, 3121, 2407, 1956, 2910, 2296,
	1956, 2682, 1284, 2382, 2383, 2384, 2304, 3377, 3376, 3376,
	2215, 2216, 2217, 2429, 2427, 2426, 930, 435, 130, 2211,
	2208, 2308, 2413, 2137, 1708, 1136, 3377, 3131, 2609, 1799,
	447, 930, 930, 930, 917, 449, 2351, 438, 2354, 2356,
	2358, 2360, 3159, 50, 1362, 3161, 19, 76, 2234, 2236,
	3160, 18, 130, 438, 82, 2242, 2243, 2244, 2245, 53,
	2367, 2343, 2344, 461, 1380, 2365, 3162, 20, 2350, 1,
	438, 3163, 21, 3158, 15, 3157, 14, 2127, 2362, 2376,
	2405, 2374, 2375, 1750, 2461, 2462, 2314, 2411, 2317, 3151,
	10, 438, 2859, 930, 2396, 3174, 34, 3172, 33, 438,
	3171, 32, 3170, 28, 2471, 2858, 2191, 2192, 2193, 2194,
	2195, 3169, 27, 3168, 26, 1827, 3166, 23, 3165, 22,
	930, 930, 2416, 3167, 24, 2865, 2516, 2650, 2410, 2653,
	130, 2394, 2418, 3156, 13, 2220, 3153, 12, 3152, 11,
	930, 3150, 9, 2875, 1129, 2432, 1378, 2994, 462, 2538,
	2540, 956, 2074, 1952, 1952, 1952, 1952, 1952, 1044, 3190,
	2442, 3105, 2453, 2454, 2437, 461, 2457, 3107, 3019, 2278,
	2882, 2567, 2573, 2508, 2438, 2472, 2843, 2842, 2387, 2386,
	2575, 1952, 1039, 1731, 2436, 461, 2439, 2086, 2473, 2149,
	3117, 2138, 1094, 2424, 1995, 2539, 2476, 930, 1982, 2478,
	2496, 2430, 3220, 2498, 919, 2497, 90, 1831, 2097, 984,
	2543, 367, 1992, 2327, 3108, 1883, 1041, 2326, 2412, 2340,
	2605, 2007, 2196, 2058, 130, 130, 130, 130, 130, 2471,
	2576, 2435, 2445, 2450, 2062, 2325, 130, 2582, 2324, 3103,
	130, 2328, 1302, 1300, 1301, 130, 1299, 1304, 2224, 1303,
	462, 3368, 130, 3306, 371, 2581, 1286, 2583, 2584, 3233,
	2555, 2556, 2756, 2558, 1137, 930, 514, 930, 105, 930,
	462, 930, 54, 2899, 2566, 2596, 2449, 2598, 2554, 443,
	444, 2557, 95, 103, 2580, 373, 2599, 2600, 2601, 1178,
	2602, 2168, 2297, 840, 841, 833, 2475, 2590, 2160, 1956,
	1956, 1956, 1956, 1956, 2589, 1117, 435, 3127, 3297, 3225,
	1127, 2660, 3257, 2221, 1221, 1956, 1905, 487, 2499, 2500,
	2570, 2501, 2502, 2928, 3259, 2503, 1818, 1956, 501, 500,
	2646, 499, 130, 2640, 2641, 2642, 496, 497, 3214, 2512,
	2513, 1808, 2535, 1152, 2633, 484, 474, 1950, 1942, 2116,
	2266, 2662, 930, 930, 930, 2264, 2615, 2617, 2049, 438,
	2051, 2263, 1396, 2621, 130, 438, 2517, 2518, 2519, 2520,
	2521, 1275, 2782, 2778, 2276, 2625, 1949, 1948, 1953, 130,
	38, 438, 2909, 930, 438, 999, 389, 2751, 438, 438,
	2572, 438, 2667, 3048, 2619, 84, 2690, 2754, 2750, 448,
	469, 25, 17, 1009, 16, 2698, 2703, 930, 2691, 2142,
	954, 130, 930, 40, 2669, 2690, 42, 2381, 2066, 930,
	2721, 3232, 930, 3353, 1025, 930, 2686, 3384, 2764, 76,
	2712, 2692, 2685, 3277, 31, 30, 29, 3164, 3173, 3155,
	3154, 3339, 3338, 2608, 4, 461, 1159, 1158, 1168, 1169,
	1161, 1162, 1163, 1164, 1165, 1166, 1167, 1160, 1108, 2719,
	1170, 69, 2791, 35, 1786, 2670, 915, 2, 2796, 2797,
	2798, 2760, 0, 0, 0, 2765, 0, 0, 1130, 2763,
	0, 0, 0, 2672, 2734, 2543, 2676, 2700, 2705, 1362,
	2680, 2681, 0, 2683, 0, 0, 0, 0, 0, 0,
	930, 0, 930, 0, 0, 0, 0, 2772, 0, 0,
	0, 0, 0, 2790, 0, 0, 0, 0, 0, 0,
	0, 2795, 0, 0, 125, 0, 2767, 386, 76, 0,
	462, 0, 0, 125, 2800, 930, 0, 0, 0, 0,
	0, 0, 2784, 2834, 461, 0, 0, 0, 2801, 0,
	0, 930, 0, 0, 457, 2793, 0, 0, 0, 0,
	0, 0, 473, 0, 2510, 930, 0, 0, 850, 0,
	0, 125, 0, 2807, 2833, 2345, 2346, 2347, 2349, 2306,
	0, 0, 1789, 0, 0, 2723, 0, 0, 2855, 2856,
	2857, 125, 0, 0, 2835, 0, 2812, 0, 0, 0,
	0, 0, 125, 0, 0, 130, 0, 930, 0, 0,
	0, 0, 0, 0, 0, 2747, 2748, 2749, 0, 0,
	0, 0, 0, 0, 0, 0, 2854, 0, 0, 462,
	2893, 2894, 2824, 0, 0, 2895, 0, 0, 0, 0,
	0, 0, 0, 2908, 438, 1880, 1882, 0, 0, 2690,
	2471, 2884, 2881, 1887, 0, 2885, 2883, 0, 0, 2596,
	2911, 2912, 0, 2888, 2889, 0, 2903, 0, 2896, 0,
	0, 0, 0, 0, 0, 2690, 2826, 0, 2828, 930,
	0, 0, 0, 849, 0, 2794, 930, 0, 849, 1287,
	2904, 1919, 1920, 0, 0, 0, 0, 0, 1926, 1927,
	1928, 1929, 2971, 0, 1227, 1227, 1227, 1233, 1227, 1227,
	1233, 1227, 1233, 1242, 1243, 0, 2810, 0, 2948, 0,
	0, 0, 2543, 0, 0, 2939, 2954, 2955, 2956, 0,
	0, 130, 2931, 0, 0, 0, 0, 0, 2979, 0,
	2952, 0, 2049, 0, 2940, 2957, 2887, 0, 2668, 0,
	930, 2980, 0, 0, 2978, 0, 0, 0, 930, 930,
	930, 0, 0, 2953, 0, 930, 2958, 2964, 2965, 0,
	2963, 0, 0, 0, 0, 0, 0, 0, 0, 2966,
	2967, 2914, 2984, 0, 1229, 1231, 1364, 1235, 1237, 0,
	1240, 0, 1372, 1375, 930, 0, 2714, 0, 3040, 0,
	0, 1952, 0, 0, 2985, 0, 0, 0, 0, 0,
	472, 0, 0, 1372, 1375, 0, 0, 2997, 0, 0,
	0, 0, 0, 2764, 0, 3007, 2764, 3060, 0, 3015,
	3012, 0, 0, 0, 0, 3025, 0, 0, 125, 2972,
	2791, 2974, 0, 461, 0, 0, 0, 0, 2284, 0,
	3068, 0, 2753, 2916, 2917, 2918, 2919, 3042, 3037, 0,
	0, 2923, 3043, 0, 930, 2926, 2927, 0, 0, 3033,
	3034, 76, 130, 3059, 2763, 3041, 3063, 2763, 3057, 0,
	3056, 3053, 125, 0, 3062, 3072, 0, 461, 0, 3067,
	0, 3065, 0, 0, 0, 0, 3030, 3031, 0, 0,
	930, 3085, 0, 0, 0, 1751, 2474, 0, 930, 2620,
	2504, 0, 0, 130, 0, 130, 3074, 3083, 1952, 1228,
	1230, 1232, 1234, 1236, 1238, 1239, 1241, 0, 462, 0,
	0, 930, 0, 457, 1159, 1158, 1168, 1169, 1161, 1162,
	1163, 1164, 1165, 1166, 1167, 1160, 0, 1956, 1170, 2764,
	0, 76, 0, 0, 3113, 0, 0, 3135, 0, 0,
	0, 0, 0, 0, 0, 0, 1785, 461, 0, 0,
	0, 0, 462, 0, 3112, 0, 76, 3114, 0, 0,
	0, 3144, 0, 3122, 0, 0, 438, 0, 3142, 130,
	3130, 0, 0, 0, 930, 0, 0, 3133, 1832, 0,
	2763, 3132, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3111, 3136, 0, 0, 1159, 1158, 1168,
	1169, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1160, 0,
	1832, 1170, 1832, 0, 0, 0, 0, 3198, 130, 3188,
	0, 1871, 3186, 1832, 1832, 0, 0, 2731, 2732, 3228,
	2733, 0, 462, 2735, 0, 2737, 0, 0, 0, 0,
	0, 3222, 3217, 3224, 1956, 0, 3218, 0, 3072, 76,
	0, 849, 0, 0, 0, 0, 0, 930, 3195, 0,
	2543, 930, 3081, 0, 0, 0, 0, 0, 0, 0,
	1912, 1913, 0, 0, 0, 0, 0, 930, 0, 0,
	0, 0, 0, 3237, 0, 1204, 0, 0, 0, 3250,
	0, 0, 0, 0, 0, 2941, 2942, 2943, 2944, 3251,
	3249, 2945, 3263, 3253, 2947, 0, 849, 0, 0, 486,
	3274, 0, 1204, 0, 0, 0, 0, 3269, 0, 930,
	1832, 0, 0, 1832, 922, 0, 0, 0, 0, 3116,
	0, 0, 0, 3273, 2804, 2805, 0, 435, 2110, 930,
	0, 0, 3292, 3272, 0, 3295, 0, 0, 0, 3293,
	0, 76, 0, 0, 3284, 126, 0, 76, 0, 0,
	0, 0, 3322, 0, 126, 930, 0, 0, 0, 3305,
	0, 3310, 3313, 0, 0, 0, 3315, 3222, 0, 0,
	0, 0, 0, 76, 0, 458, 3329, 3325, 76, 0,
	438, 3320, 3324, 3343, 3331, 0, 3350, 3363, 930, 2516,
	3342, 2141, 126, 923, 461, 0, 3364, 2157, 3347, 3367,
	3365, 930, 435, 930, 3374, 76, 3372, 3362, 3341, 76,
	76, 3340, 126, 3378, 76, 3322, 0, 930, 0, 3387,
	0, 0, 472, 126, 3352, 0, 0, 0, 0, 0,
	3379, 0, 0, 0, 3381, 0, 0, 0, 0, 0,
	0, 76, 3399, 0, 76, 0, 3322, 0, 3407, 0,
	0, 3409, 0, 0, 0, 438, 0, 0, 0, 930,
	0, 76, 0, 76, 130, 0, 3322, 76, 3322, 3404,
	2744, 0, 3345, 2186, 0, 2188, 0, 0, 0, 462,
	76, 1277, 0, 76, 850, 3322, 76, 0, 0, 850,
	76, 3322, 3421, 0, 0, 3322, 2197, 2198, 2199, 2200,
	0, 0, 0, 2204, 2206, 0, 0, 2209, 3426, 0,
	2212, 2213, 0, 0, 0, 2218, 2219, 0, 0, 0,
	0, 2225, 2226, 0, 2227, 0, 0, 2230, 2231, 0,
	2232, 2233, 0, 0, 2237, 2238, 2239, 2240, 2241, 0,
	0, 0, 0, 2246, 2247, 2248, 2249, 2250, 2251, 2252,
	2253, 2254, 2255, 2256, 2257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1204, 0, 0, 0, 1159,
	1158, 1168, 1169, 1161, 1162, 1163, 1164, 1165, 1166, 1167,
	1160, 0, 0, 1170, 0, 0, 0, 0, 125, 0,
	0, 0, 0, 1373, 1376, 0, 0, 0, 0, 0,
	3361, 0, 0, 0, 0, 0, 0, 0, 125, 0,
	0, 125, 0, 0, 1373, 1376, 0, 0, 0, 1406,
	0, 0, 0, 0, 0, 0, 0, 0, 2743, 125,
	125, 125, 125, 125, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2742, 3390, 0, 0, 0, 0, 0,
	0, 3393, 0, 0, 1716, 0, 0, 0, 0, 126,
	0, 1154, 0, 1157, 0, 0, 0, 0, 0, 0,
	1171, 1172, 1173, 1174, 1175, 1176, 1177, 0, 1155, 1156,
	1153, 0, 0, 0, 0, 0, 3229, 3230, 1159, 1158,
	1168, 1169, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1160,
	0, 0, 1170, 126, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3258, 3261, 2524, 2525, 2526, 2527,
	2528, 2529, 2530, 2531, 2532, 2533, 2534, 1159, 1158, 1168,
	1169, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1160, 0,
	0, 1170, 1159, 1158, 1168, 1169, 1161, 1162, 1163, 1164,
	1165, 1166, 1167, 1160, 458, 0, 1170, 2125, 0, 0,
	0, 2125, 125, 0, 457, 0, 0, 0, 0, 0,
	0, 0, 1146, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2125, 0, 125, 2125, 0, 0, 0,
	3314, 0, 0, 0, 0, 0, 0, 0, 0, 1406,
	0, 0, 0, 2479, 2480, 2481, 2482, 2483, 2484, 2185,
	0, 3261, 0, 0, 0, 0, 2163, 0, 0, 0,
	0, 0, 0, 0, 0, 1832, 0, 0, 0, 0,
	0, 0, 1866, 0, 0, 0, 0, 1159, 1158, 1168,
	1169, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1160, 0,
	0, 1170, 0, 0, 457, 0, 1866, 1866, 1866, 0,
	0, 0, 1866, 1866, 1866, 1866, 0, 1866, 1866, 0,
	0, 0, 850, 1866, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1955, 0, 0, 0, 0, 2568, 2569,
	0, 0, 0, 1866, 1866, 1866, 1866, 3408, 0, 1866,
	1866, 1866, 1866, 1866, 0, 0, 0, 0, 1866, 1866,
	1866, 1866, 1866, 1866, 1866, 1866, 1866, 1866, 1866, 1866,
	125, 125, 125, 0, 0, 0, 0, 850, 0, 124,
	0, 0, 0, 0, 0, 0, 0, 0, 392, 0,
	0, 1406, 0, 0, 0, 0, 0, 0, 0, 2725,
	2726, 2727, 2728, 2729, 1159, 1158, 1168, 1169, 1161, 1162,
	1163, 1164, 1165, 1166, 1167, 1160, 36, 0, 1170, 0,
	0, 0, 0, 0, 0, 0, 918, 0, 0, 0,
	57, 0, 0, 0, 0, 849, 74, 0, 0, 39,
	0, 0, 0, 0, 0, 0, 955, 0, 0, 0,
	0, 1832, 0, 0, 0, 0, 36, 969, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	57, 0, 0, 0, 0, 0, 74, 0, 77, 39,
	0, 125, 0, 0, 0, 0, 0, 125, 125, 0,
	0, 0, 0, 0, 125, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3175, 0, 0, 3383, 3386, 3382,
	0, 0, 0, 0, 0, 0, 0, 0, 77, 0,
	0, 0, 2371, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2722, 0, 2385, 2389, 2393,
	0, 0, 0, 0, 3175, 0, 0, 0, 2730, 3428,
	0, 0, 0, 0, 0, 0, 0, 513, 0, 2739,
	2740, 2741, 0, 0, 0, 0, 2746, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 0, 0, 0, 0, 0, 0, 0,
	41, 70, 44, 43, 46, 0, 0, 0, 0, 2425,
	0, 2766, 0, 127, 0, 3176, 0, 0, 0, 0,
	0, 0, 127, 0, 0, 0, 0, 0, 0, 0,
	0, 47, 73, 72, 0, 0, 1832, 1832, 45, 0,
	41, 70, 44, 43, 46, 0, 0, 0, 0, 0,
	0, 0, 0, 2799, 0, 3176, 1832, 0, 0, 0,
	127, 924, 0, 0, 0, 0, 0, 1832, 0, 0,
	0, 47, 73, 72, 0, 0, 0, 0, 45, 0,
	127, 0, 0, 0, 0, 0, 0, 1361, 0, 55,
	56, 127, 3177, 0, 0, 0, 0, 0, 0, 126,
	0, 0, 0, 972, 0, 0, 64, 0, 65, 0,
	0, 0, 0, 2514, 0, 0, 0, 0, 0, 126,
	0, 0, 126, 0, 0, 0, 0, 0, 0, 55,
	56, 0, 3177, 66, 0, 0, 0, 0, 0, 849,
	126, 126, 126, 126, 126, 0, 64, 1046, 65, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3178, 71, 0, 51, 52, 59, 0, 60, 0,
	0, 0, 0, 66, 0, 0, 0, 0, 0, 0,
	0, 1832, 0, 1832, 0, 1832, 0, 2593, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 125, 0,
	0, 3178, 71, 0, 51, 52, 59, 0, 60, 0,
	0, 0, 0, 0, 0, 2101, 2102, 125, 0, 0,
	2920, 2921, 2922, 0, 2924, 0, 0, 0, 0, 0,
	0, 36, 0, 0, 0, 0, 0, 2933, 2934, 0,
	2936, 0, 125, 2937, 457, 57, 0, 0, 0, 0,
	0, 74, 0, 0, 39, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2951, 0, 2647, 2648,
	2649, 0, 0, 126, 0, 458, 0, 0, 1787, 0,
	0, 0, 0, 2970, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 77, 0, 0, 126, 0, 0, 2675,
	0, 0, 0, 1146, 0, 0, 0, 0, 0, 0,
	0, 0, 75, 0, 0, 0, 1406, 0, 0, 3175,
	0, 0, 0, 2706, 3424, 0, 0, 127, 2711, 0,
	0, 0, 0, 0, 0, 2715, 0, 0, 2716, 0,
	0, 2718, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 75, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 458, 0, 0, 0, 0,
	0, 127, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1866, 0, 0, 1866, 1866, 1866, 1866, 1866, 3044,
	3045, 3046, 3047, 0, 0, 0, 0, 0, 0, 3051,
	3052, 0, 0, 0, 0, 41, 70, 44, 43, 46,
	0, 0, 0, 1866, 849, 0, 1785, 0, 2771, 0,
	3176, 0, 0, 0, 0, 0, 0, 3069, 3070, 3071,
	0, 126, 126, 126, 0, 0, 47, 73, 72, 0,
	1148, 0, 0, 45, 0, 0, 0, 0, 0, 0,
	0, 2771, 125, 0, 0, 0, 923, 0, 0, 0,
	0, 125, 0, 0, 457, 0, 0, 1832, 0, 125,
	0, 0, 125, 2294, 1406, 0, 850, 0, 0, 0,
	0, 2809, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 55, 56, 0, 3177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 64, 0, 65, 0, 0, 0, 0, 0, 0,
	0, 3123, 0, 2389, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 66, 0,
	0, 0, 126, 0, 0, 0, 0, 0, 126, 126,
	0, 0, 0, 0, 3139, 126, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 125, 3178, 71, 0, 51,
	52, 59, 0, 60, 0, 0, 972, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3199, 0, 0, 0, 0, 1832, 0, 0, 0, 125,
	3208, 0, 1832, 0, 0, 0, 3219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 36, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 57, 0, 0,
	0, 849, 0, 74, 0, 0, 39, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2809, 0, 0, 0,
	0, 0, 0, 0, 2809, 2809, 2809, 125, 0, 0,
	0, 2593, 0, 1365, 0, 0, 0, 0, 1866, 0,
	0, 0, 0, 3270, 0, 77, 1866, 0, 1406, 0,
	0, 0, 0, 972, 0, 0, 1397, 0, 0, 0,
	2593, 0, 0, 0, 0, 0, 0, 75, 0, 0,
	0, 3175, 0, 0, 1696, 1697, 1698, 1699, 1700, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3304, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	850, 125, 125, 125, 125, 125, 0, 0, 0, 0,
	3036, 0, 0, 457, 0, 0, 0, 125, 0, 0,
	0, 0, 457, 0, 0, 0, 0, 1866, 0, 125,
	127, 0, 0, 0, 0, 0, 0, 41, 70, 44,
	43, 46, 0, 0, 0, 0, 3061, 0, 0, 0,
	0, 0, 3176, 0, 2809, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 47, 73,
	72, 0, 0, 0, 0, 45, 0, 3077, 0, 126,
	0, 0, 0, 0, 0, 0, 0, 1779, 0, 0,
	0, 0, 0, 3410, 3411, 0, 0, 0, 126, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 125,
	1814, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 126, 0, 458, 55, 56, 0, 3177,
	0, 0, 0, 0, 0, 0, 0, 127, 0, 0,
	2593, 125, 0, 64, 0, 65, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 125, 127, 0, 0,
	127, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	66, 0, 0, 0, 0, 0, 0, 0, 127, 127,
	127, 127, 127, 0, 0, 0, 0, 0, 125, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3178, 71,
	0, 51, 52, 59, 0, 60, 0, 0, 473, 1324,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2593, 0, 0, 0, 3201, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 849,
	0, 0, 0, 1832, 0, 1944, 0, 1958, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 850, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1832, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2593, 0, 0, 0, 0,
	0, 127, 0, 1311, 0, 0, 1788, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2809, 0, 126, 127, 0, 0, 0, 0, 0,
	0, 1148, 126, 0, 0, 458, 0, 0, 1828, 75,
	126, 0, 0, 126, 0, 0, 2079, 0, 0, 0,
	0, 0, 2081, 2082, 3299, 0, 0, 0, 0, 2089,
	0, 0, 0, 0, 0, 0, 0, 3303, 0, 1832,
	0, 0, 125, 0, 0, 0, 2312, 0, 0, 0,
	0, 0, 0, 1832, 1325, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 36, 3299, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 0, 57, 0,
	0, 0, 0, 0, 74, 0, 0, 39, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 127,
	127, 127, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1828, 0, 0, 0, 924, 0, 77, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 457, 0,
	0, 0, 850, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3175, 0, 0, 0, 0, 3417, 0, 1338,
	1341, 1342, 1343, 1344, 1345, 1346, 0, 1347, 1348, 1349,
	1350, 1351, 1352, 1353, 1354, 0, 1326, 1327, 1328, 1329,
	1305, 1309, 1339, 1306, 1312, 1308, 1310, 1307, 126, 1313,
	1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323,
	1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 0, 0,
	127, 0, 0, 0, 0, 0, 127, 127, 0, 0,
	0, 0, 0, 127, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 41, 70,
	44, 43, 46, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3176, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 47,
	73, 72, 0, 0, 0, 0, 45, 0, 0, 125,
	473, 2544, 126, 126, 126, 126, 126, 0, 0, 0,
	0, 0, 0, 2092, 458, 0, 0, 0, 126, 0,
	1340, 36, 0, 458, 0, 0, 0, 0, 0, 0,
	126, 0, 2103, 0, 0, 57, 0, 0, 0, 0,
	457, 74, 457, 0, 39, 0, 0, 55, 56, 2594,
	3177, 0, 0, 0, 0, 0, 0, 1046, 0, 0,
	0, 0, 0, 0, 64, 0, 65, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 77, 36, 0, 0, 0, 0, 0,
	0, 66, 0, 0, 0, 0, 0, 0, 57, 0,
	0, 0, 0, 0, 74, 0, 0, 39, 0, 3175,
	126, 0, 0, 0, 3401, 0, 125, 0, 0, 3178,
	71, 0, 51, 52, 59, 0, 60, 0, 0, 0,
	36, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 0, 57, 0, 77, 3388, 0, 0,
	74, 0, 0, 39, 0, 0, 0, 126, 0, 0,
	0, 0, 0, 0, 0, 125, 0, 0, 0, 0,
	0, 0, 3175, 0, 0, 0, 0, 0, 0, 0,
	0, 2312, 0, 2697, 2702, 0, 0, 0, 0, 126,
	0, 0, 77, 0, 0, 41, 70, 44, 43, 46,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3176, 0, 0, 0, 0, 0, 0, 0, 3175, 0,
	850, 0, 0, 3321, 0, 0, 47, 73, 72, 0,
	0, 0, 0, 45, 0, 0, 0, 127, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 0, 41, 70,
	44, 43, 46, 0, 0, 0, 0, 2260, 0, 0,
	75, 0, 0, 3176, 0, 0, 2544, 0, 1787, 0,
	0, 127, 0, 0, 55, 56, 0, 3177, 0, 47,
	73, 72, 0, 0, 0, 0, 45, 0, 0, 0,
	0, 64, 0, 65, 41, 70, 44, 43, 46, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3176,
	0, 0, 0, 0, 0, 0, 0, 0, 66, 0,
	0, 0, 0, 0, 0, 47, 73, 72, 0, 0,
	0, 0, 45, 0, 0, 0, 0, 55, 56, 0,
	3177, 0, 0, 0, 0, 1828, 3178, 71, 0, 51,
	52, 59, 0, 60, 64, 0, 65, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2373, 0, 0, 126, 0, 0, 0, 0, 0, 0,
	0, 66, 0, 55, 56, 0, 3177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	64, 0, 65, 0, 2404, 0, 0, 0, 0, 3178,
	71, 457, 51, 52, 59, 0, 60, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 66, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3178, 71, 0, 51, 52,
	59, 0, 60, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 127, 2467, 0, 0, 0, 0, 0, 0, 0,
	127, 0, 0, 0, 0, 0, 0, 75, 127, 458,
	0, 127, 0, 2544, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2594, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	75, 0, 2594, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 127, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 75, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 127, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 458, 0, 458, 2636, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2666, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1828, 0, 0,
	0, 2671, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 0, 0,
	0, 0, 2594, 2710, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	127, 127, 127, 127, 127, 1691, 126, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 127, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2594, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2544, 0, 0, 0, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 0, 127, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2594, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	127, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 127, 0, 2841, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2699, 2704, 0, 0, 0, 0, 127, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 458, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1788, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 127, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3138, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 127, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	809, 0, 328, 571, 813, 656, 679, 822, 685, 687,
	750, 632, 727, 273, 676, 633, 0, 0, 624, 480,
	625, 657, 199, 477, 783, 728, 811, 713, 743, 753,
	198, 190, 720, 719, 800, 668, 667, 748, 796, 810,
	0, 0, 579, 240, 0, 0, 350, 320, 257, 0,
	0, 711, 0, 564, 565, 696, 752, 644, 739, 815,
	677, 744, 816, 77, 0, 0, 0, 478, 503, 502,
	505, 506, 507, 508, 0, 127, 137, 504, 509, 510,
	511, 0, 706, 749, 827, 623, 475, 494, 628, 578,
	0, 801, 664, 665, 202, 0, 0, 0, 0, 0,
	0, 0, 709, 726, 768, 693, 345, 755, 764, 778,
	686, 288, 215, 0, 0, 0, 0, 491, 492, 471,
	0, 0, 0, 594, 127, 493, 0, 638, 489, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 495, 0, 0, 0, 643, 621, 662, 770, 622,
	620, 258, 635, 567, 799, 694, 231, 153, 805, 692,
	592, 758, 639, 787, 680, 238, 637, 154, 634, 640,
	678, 269, 767, 773, 576, 157, 784, 658, 671, 191,
	0, 298, 745, 344, 483, 731, 297, 241, 337, 759,
	807, 343, 681, 327, 351, 355, 208, 714, 182, 317,
	200, 197, 663, 777, 627, 216, 287, 194, 234, 697,
	751, 659, 187, 762, 738, 789, 316, 334, 159, 255,
	335, 354, 174, 329, 256, 262, 184, 186, 185, 170,
	311, 333, 179, 189, 785, 772, 791, 654, 641, 646,
	642, 670, 808, 226, 217, 792, 790, 348, 143, 307,
	306, 684, 225, 775, 144, 136, 294, 145, 232, 162,
	795, 357, 173, 236, 330, 482, 211, 268, 193, 747,
	277, 669, 156, 290, 252, 253, 251, 254, 214, 140,
	146, 771, 292, 309, 332, 175, 323, 138, 139, 141,
	148, 300, 149, 150, 814, 246, 204, 207, 219, 229,
	746, 296, 324, 349, 740, 171, 164, 326, 342, 180,
	308, 310, 356, 769, 166, 803, 786, 733, 699, 705,
	629, 0, 165, 765, 661, 673, 653, 741, 652, 213,
	757, 340, 341, 192, 358, 570, 818, 167, 636, 817,
	265, 272, 264, 820, 336, 804, 734, 723, 721, 630,
	802, 732, 722, 237, 206, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 725, 0, 163, 0, 321, 812,
	829, 325, 177, 647, 779, 331, 218, 291, 178, 212,
	205, 284, 263, 172, 224, 319, 235, 242, 761, 826,
	276, 299, 181, 346, 318, 201, 581, 593, 587, 589,
	588, 585, 586, 584, 583, 582, 595, 568, 569, 572,
	573, 574, 716, 806, 631, 577, 782, 590, 591, 754,
	824, 566, 188, 515, 607, 608, 609, 516, 610, 611,
	517, 518, 612, 613, 614, 615, 519, 616, 617, 618,
	596, 597, 598, 599, 600, 601, 602, 603, 606, 604,
	605, 712, 281, 575, 158, 168, 239, 825, 293, 210,
	619, 626, 645, 648, 649, 650, 651, 655, 660, 0,
	666, 672, 674, 675, 683, 688, 689, 690, 691, 698,
	700, 701, 702, 703, 704, 707, 708, 710, 717, 718,
	724, 729, 730, 736, 737, 0, 760, 763, 580, 774,
	776, 780, 781, 788, 793, 794, 819, 823, 828, 347,
	196, 715, 735, 766, 169, 176, 183, 195, 203, 209,
	220, 223, 227, 228, 230, 233, 245, 247, 248, 249,
	250, 266, 267, 270, 271, 274, 275, 278, 279, 280,
	282, 283, 289, 147, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 798,
	695, 155, 0, 0, 161, 0, 0, 0, 0, 0,
	682, 160, 797, 821, 742, 756, 809, 0, 328, 571,
	813, 656, 679, 822, 685, 687, 750, 632, 727, 273,
	676, 633, 0, 0, 624, 480, 625, 657, 199, 477,
	783, 728, 811, 713, 743, 753, 198, 190, 720, 719,
	800, 668, 667, 748, 796, 810, 0, 0, 579, 240,
	0, 0, 350, 320, 257, 0, 0, 711, 0, 564,
	565, 696, 752, 644, 739, 815, 677, 744, 816, 77,
	0, 1120, 0, 478, 503, 502, 505, 506, 507, 508,
	0, 0, 137, 504, 509, 510, 511, 0, 706, 749,
	827, 623, 475, 494, 628, 578, 0, 801, 664, 665,
	202, 0, 0, 0, 0, 0, 0, 0, 709, 726,
	768, 693, 345, 755, 764, 778, 686, 288, 215, 0,
	0, 0, 0, 491, 492, 0, 0, 0, 0, 594,
	0, 493, 0, 638, 489, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 495, 0, 0,
	0, 643, 621, 662, 770, 622, 620, 258, 635, 567,
	799, 694, 231, 153, 805, 692, 592, 758, 639, 787,
	680, 238, 637, 154, 634, 640, 678, 269, 767, 773,
	576, 157, 784, 658, 671, 191, 0, 298, 745, 344,
	483, 731, 297, 241, 337, 759, 807, 343, 681, 327,
	351, 355, 208, 714, 182, 317, 200, 197, 663, 777,
	627, 216, 287, 194, 234, 697, 751, 659, 187, 762,
	738, 789, 316, 334, 159, 255, 335, 354, 174, 329,
	256, 262, 184, 186, 185, 170, 311, 333, 179, 189,
	785, 772, 791, 654, 641, 646, 642, 670, 808, 226,
	217, 792, 790, 348, 143, 307, 306, 684, 225, 775,
	144, 136, 294, 145, 232, 162, 795, 357, 173, 236,
	330, 482, 211, 268, 193, 747, 277, 669, 156, 290,
	252, 253, 251, 254, 214, 140, 146, 771, 292, 309,
	332, 175, 323, 138, 139, 141, 148, 300, 149, 150,
	814, 246, 204, 207, 219, 229, 746, 296, 324, 349,
	740, 171, 164, 326, 342, 180, 308, 310, 356, 769,
	166, 803, 786, 733, 699, 705, 629, 0, 165, 765,
	661, 673, 653, 741, 652, 213, 757, 340, 341, 192,
	358, 570, 818, 167, 636, 817, 265, 272, 264, 820,
	336, 804, 734, 723, 721, 630, 802, 732, 722, 237,
	206, 221, 285, 243, 286, 222, 260, 259, 261, 244,
	725, 0, 163, 0, 321, 812, 829, 325, 177, 647,
	779, 331, 218, 291, 178, 212, 205, 284, 263, 172,
	224, 319, 235, 242, 761, 826, 276, 299, 181, 346,
	318, 201, 581, 593, 587, 589, 588, 585, 586, 584,
	583, 582, 595, 568, 569, 572, 573, 574, 716, 806,
	631, 577, 782, 590, 591, 754, 824, 566, 188, 515,
	607, 608, 609, 516, 610, 611, 517, 518, 612, 613,
	614, 615, 519, 616, 617, 618, 596, 597, 598, 599,
	600, 601, 602, 603, 606, 604, 605, 712, 281, 575,
	158, 168, 239, 825, 293, 210, 619, 626, 645, 648,
	649, 650, 651, 655, 660, 0, 666, 672, 674, 675,
	683, 688, 689, 690, 691, 698, 700, 701, 702, 703,
	704, 707, 708, 710, 717, 718, 724, 729, 730, 736,
	737, 0, 760, 763, 580, 774, 776, 780, 781, 788,
	793, 794, 819, 823, 828, 347, 196, 715, 735, 766,
	169, 176, 183, 195, 203, 209, 220, 223, 227, 228,
	230, 233, 245, 247, 248, 249, 250, 266, 267, 270,
	271, 274, 275, 278, 279, 280, 282, 283, 289, 147,
	295, 301, 302, 303, 304, 305, 312, 313, 314, 315,
	322, 338, 339, 352, 353, 798, 695, 155, 0, 0,
	161, 0, 0, 0, 0, 0, 682, 160, 797, 821,
	742, 756, 809, 0, 328, 571, 813, 656, 679, 822,
	685, 687, 750, 632, 727, 273, 676, 633, 0, 0,
	624, 480, 625, 657, 199, 477, 783, 728, 811, 713,
	743, 753, 198, 190, 720, 719, 800, 668, 667, 748,
	796, 810, 0, 0, 579, 240, 0, 0, 350, 320,
	257, 0, 0, 711, 0, 564, 565, 696, 752, 644,
	739, 815, 677, 744, 816, 77, 0, 0, 0, 478,
	503, 502, 505, 506, 507, 508, 0, 0, 137, 504,
	509, 510, 511, 0, 706, 749, 827, 623, 475, 494,
	628, 578, 0, 801, 664, 665, 202, 0, 0, 0,
	0, 0, 0, 0, 709, 726, 768, 693, 345, 755,
	764, 778, 686, 288, 215, 0, 0, 0, 0, 491,
	492, 1864, 0, 0, 0, 594, 0, 493, 0, 638,
	489, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 495, 0, 0, 0, 643, 621, 662,
	770, 622, 620, 258, 635, 567, 799, 694, 231, 153,
	805, 692, 592, 758, 639, 787, 680, 238, 637, 154,
	634, 640, 678, 269, 767, 773, 576, 157, 784, 658,
	671, 191, 0, 298, 745, 344, 483, 731, 297, 241,
	337, 759, 807, 343, 681, 327, 351, 355, 208, 714,
	182, 317, 200, 197, 663, 777, 627, 216, 287, 194,
	234, 697, 751, 659, 187, 762, 738, 789, 316, 334,
	159, 255, 335, 354, 174, 329, 256, 262, 184, 186,
	185, 170, 311, 333, 179, 189, 785, 772, 791, 654,
	641, 646, 642, 670, 808, 226, 217, 792, 790, 348,
	143, 307, 306, 684, 225, 775, 144, 136, 294, 145,
	232, 162, 795, 357, 173, 236, 330, 482, 211, 268,
	193, 747, 277, 669, 156, 290, 252, 253, 251, 254,
	214, 140, 146, 771, 292, 309, 332, 175, 323, 138,
	139, 141, 148, 300, 149, 150, 814, 246, 204, 207,
	219, 229, 746, 296, 324, 349, 740, 171, 164, 326,
	342, 180, 308, 310, 356, 769, 166, 803, 786, 733,
	699, 705, 629, 0, 165, 765, 661, 673, 653, 741,
	652, 213, 757, 340, 341, 192, 358, 570, 818, 167,
	636, 817, 265, 272, 264, 820, 336, 804, 734, 723,
	721, 630, 802, 732, 722, 237, 206, 221, 285, 243,
	286, 222, 260, 259, 261, 244, 725, 0, 163, 0,
	321, 812, 829, 325, 177, 647, 779, 331, 218, 291,
	178, 212, 205, 284, 263, 172, 224, 319, 235, 242,
	761, 826, 276, 299, 181, 346, 318, 201, 581, 593,
	587, 589, 588, 585, 586, 584, 583, 582, 595, 568,
	569, 572, 573, 574, 716, 806, 631, 577, 782, 590,
	591, 754, 824, 566, 188, 515, 607, 608, 609, 516,
	610, 611, 517, 518, 612, 613, 614, 615, 519, 616,
	617, 618, 596, 597, 598, 599, 600, 601, 602, 603,
	606, 604, 605, 712, 281, 575, 158, 168, 239, 825,
	293, 210, 619, 626, 645, 648, 649, 650, 651, 655,
	660, 0, 666, 672, 674, 675, 683, 688, 689, 690,
	691, 698, 700, 701, 702, 703, 704, 707, 708, 710,
	717, 718, 724, 729, 730, 736, 737, 0, 760, 763,
	580, 774, 776, 780, 781, 788, 793, 794, 819, 823,
	828, 347, 196, 715, 735, 766, 169, 176, 183, 195,
	203, 209, 220, 223, 227, 228, 230, 233, 245, 247,
	248, 249, 250, 266, 267, 270, 271, 274, 275, 278,
	279, 280, 282, 283, 289, 147, 295, 301, 302, 303,
	304, 305, 312, 313, 314, 315, 322, 338, 339, 352,
	353, 798, 695, 155, 0, 0, 161, 0, 0, 0,
	0, 0, 682, 160, 797, 821, 742, 756, 809, 0,
	328, 571, 813, 656, 679, 822, 685, 687, 750, 632,
	727, 273, 676, 633, 0, 0, 624, 480, 625, 657,
	199, 477, 783, 728, 811, 713, 743, 753, 198, 190,
	720, 719, 800, 668, 667, 748, 796, 810, 0, 0,
	579, 240, 0, 0, 350, 320, 257, 0, 0, 711,
	0, 564, 565, 696, 752, 644, 739, 815, 677, 1975,
	816, 77, 0, 0, 0, 478, 503, 502, 505, 506,
	507, 508, 0, 0, 137, 504, 509, 510, 511, 1976,
	706, 749, 827, 623, 475, 494, 628, 578, 0, 801,
	664, 665, 202, 0, 0, 0, 0, 0, 0, 0,
	709, 726, 768, 693, 345, 755, 764, 778, 686, 288,
	215, 0, 0, 0, 0, 491, 492, 0, 0, 0,
	0, 594, 0, 493, 0, 638, 489, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 495,
	0, 0, 0, 643, 621, 662, 770, 622, 620, 258,
	635, 567, 799, 694, 231, 153, 805, 692, 592, 758,
	639, 787, 680, 238, 637, 154, 634, 640, 678, 269,
	767, 773, 576, 157, 784, 658, 671, 191, 0, 298,
	745, 344, 483, 731, 297, 241, 337, 759, 807, 343,
	681, 327, 351, 355, 208, 714, 182, 317, 200, 197,
	663, 777, 627, 216, 287, 194, 234, 697, 751, 659,
	187, 762, 738, 789, 316, 334, 159, 255, 335, 354,
	174, 329, 256, 262, 184, 186, 185, 170, 311, 333,
	179, 189, 785, 772, 791, 654, 641, 646, 642, 670,
	808, 226, 217, 792, 790, 348, 143, 307, 306, 684,
	225, 775, 144, 136, 294, 145, 232, 162, 795, 357,
	173, 236, 330, 482, 211, 268, 193, 747, 277, 669,
	156, 290, 252, 253, 251, 254, 214, 140, 146, 771,
	292, 309, 332, 175, 323, 138, 139, 141, 148, 300,
	149, 150, 814, 246, 204, 207, 219, 229, 746, 296,
	324, 349, 740, 171, 164, 326, 342, 180, 308, 310,
	356, 769, 166, 803, 786, 733, 699, 705, 629, 0,
	165, 765, 661, 673, 653, 741, 652, 213, 757, 340,
	341, 192, 358, 570, 818, 167, 636, 817, 265, 272,
	264, 820, 336, 804, 734, 723, 721, 630, 802, 732,
	722, 237, 206, 221, 285, 243, 286, 222, 260, 259,
	261, 244, 725, 0, 163, 0, 321, 812, 829, 325,
	177, 647, 779, 331, 218, 291, 178, 212, 205, 284,
	263, 172, 224, 319, 235, 242, 761, 826, 276, 299,
	181, 346, 318, 201, 581, 593, 587, 589, 588, 585,
	586, 584, 583, 582, 595, 568, 569, 572, 573, 574,
	716, 806, 631, 577, 782, 590, 591, 754, 824, 566,
	188, 515, 607, 608, 609, 516, 610, 611, 517, 518,
	612, 613, 614, 615, 519, 616, 617, 618, 596, 597,
	598, 599, 600, 601, 602, 603, 606, 604, 605, 712,
	281, 575, 158, 168, 239, 825, 293, 210, 619, 626,
	645, 648, 649, 650, 651, 655, 660, 0, 666, 672,
	674, 675, 683, 688, 689, 690, 691, 698, 700, 701,
	702, 703, 704, 707, 708, 710, 717, 718, 724, 729,
	730, 736, 737, 0, 760, 763, 580, 774, 776, 780,
	781, 788, 793, 794, 819, 823, 828, 347, 196, 715,
	735, 766, 169, 176, 183, 195, 203, 209, 220, 223,
	227, 228, 230, 233, 245, 247, 248, 249, 250, 266,
	267, 270, 271, 274, 275, 278, 279, 280, 282, 283,
	289, 147, 295, 301, 302, 303, 304, 305, 312, 313,
	314, 315, 322, 338, 339, 352, 353, 798, 695, 155,
	0, 0, 161, 0, 0, 0, 0, 0, 682, 160,
	797, 821, 742, 756, 809, 0, 328, 571, 813, 656,
	679, 822, 685, 687, 750, 632, 727, 273, 676, 633,
	0, 0, 624, 870, 625, 657, 199, 868, 783, 728,
	811, 713, 743, 753, 198, 190, 720, 719, 800, 668,
	667, 748, 796, 810, 0, 0, 579, 240, 0, 0,
	350, 320, 257, 0, 0, 711, 0, 564, 565, 696,
	752, 644, 739, 815, 677, 744, 816, 77, 0, 1120,
	0, 478, 503, 502, 505, 506, 507, 508, 0, 0,
	137, 504, 509, 510, 511, 0, 706, 749, 827, 623,
	889, 494, 628, 578, 0, 801, 664, 665, 202, 0,
	0, 0, 0, 0, 0, 0, 709, 726, 768, 693,
	345, 755, 764, 778, 686, 288, 215, 0, 0, 0,
	0, 491, 492, 0, 0, 0, 0, 594, 0, 493,
	0, 638, 489, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 495, 0, 0, 0, 643,
	621, 662, 770, 622, 620, 258, 635, 567, 799, 694,
	231, 153, 805, 692, 592, 758, 639, 787, 680, 238,
	637, 154, 634, 640, 678, 269, 767, 773, 576, 157,
	784, 658, 671, 191, 0, 298, 745, 344, 483, 731,
	297, 241, 337, 759, 807, 343, 681, 327, 351, 355,
	208, 714, 182, 317, 200, 197, 663, 777, 627, 216,
	287, 194, 234, 697, 751, 659, 187, 762, 738, 789,
	316, 334, 159, 255, 335, 354, 174, 329, 256, 262,
	184, 186, 185, 170, 311, 333, 179, 189, 785, 772,
	791, 654, 641, 646, 642, 670, 808, 226, 217, 792,
	790, 348, 143, 307, 306, 684, 225, 775, 144, 136,
	294, 145, 232, 162, 795, 357, 173, 236, 330, 482,
	211, 268, 193, 747, 277, 669, 156, 290, 252, 253,
	251, 254, 214, 140, 146, 771, 292, 309, 332, 175,
	323, 138, 139, 141, 148, 300, 149, 150, 814, 246,
	204, 207, 219, 229, 746, 296, 324, 349, 740, 171,
	164, 326, 342, 180, 308, 310, 356, 769, 166, 803,
	786, 733, 699, 705, 629, 0, 165, 765, 661, 673,
	653, 741, 652, 213, 757, 340, 341, 192, 358, 570,
	818, 167, 636, 817, 265, 272, 264, 820, 336, 804,
	734, 723, 721, 630, 802, 732, 722, 237, 206, 221,
	285, 243, 286, 222, 260, 259, 261, 244, 725, 0,
	163, 0, 321, 812, 829, 325, 177, 647, 779, 331,
	218, 291, 178, 212, 205, 284, 263, 172, 224, 319,
	235, 242, 761, 826, 276, 299, 181, 346, 318, 201,
	581, 593, 587, 589, 588, 585, 586, 584, 583, 582,
	595, 568, 569, 572, 573, 574, 716, 806, 631, 577,
	782, 590, 591, 754, 824, 566, 188, 515, 607, 608,
	609, 516, 610, 611, 517, 518, 612, 613, 614, 615,
	519, 616, 617, 618, 596, 597, 598, 599, 600, 601,
	602, 603, 606, 604, 605, 712, 281, 575, 158, 168,
	239, 825, 293, 210, 619, 626, 645, 648, 649, 650,
	651, 655, 660, 0, 666, 672, 674, 675, 683, 688,
	689, 690, 691, 698, 700, 701, 702, 703, 704, 707,
	708, 710, 717, 718, 724, 729, 730, 736, 737, 0,
	760, 763, 580, 774, 776, 780, 781, 788, 793, 794,
	819, 823, 828, 347, 196, 715, 735, 766, 169, 176,
	183, 195, 203, 209, 220, 223, 227, 228, 230, 233,
	245, 247, 248, 249, 250, 266, 267, 270, 271, 274,
	275, 278, 279, 280, 282, 283, 289, 147, 295, 301,
	302, 303, 304, 305, 312, 313, 314, 315, 322, 338,
	339, 352, 353, 798, 695, 155, 0, 0, 161, 0,
	0, 0, 0, 0, 682, 160, 797, 821, 742, 756,
	809, 0, 328, 571, 813, 656, 679, 822, 685, 687,
	750, 632, 727, 273, 676, 633, 0, 0, 624, 480,
	625, 657, 199, 477, 783, 728, 811, 713, 743, 753,
	198, 190, 720, 719, 800, 668, 667, 748, 796, 810,
	0, 0, 579, 240, 0, 0, 350, 320, 257, 0,
	0, 711, 0, 564, 565, 696, 752, 644, 739, 815,
	677, 744, 816, 77, 0, 0, 0, 478, 503, 1896,
	505, 506, 507, 508, 0, 0, 137, 504, 509, 510,
	511, 0, 706, 749, 827, 623, 475, 494, 628, 578,
	0, 801, 664, 665, 202, 0, 0, 0, 0, 0,
	0, 0, 709, 726, 768, 693, 345, 755, 764, 778,
	686, 288, 215, 0, 0, 0, 0, 491, 492, 1864,
	0, 0, 0, 594, 0, 493, 0, 638, 489, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 495, 0, 0, 0, 643, 621, 662, 770, 622,
	620, 258, 635, 567, 799, 694, 231, 153, 805, 692,
	592, 758, 639, 787, 680, 238, 637, 154, 634, 640,
	678, 269, 767, 773, 576, 157, 784, 658, 671, 191,
	0, 298, 745, 344, 483, 731, 297, 241, 337, 759,
	807, 343, 681, 327, 351, 355, 208, 714, 182, 317,
	200, 197, 663, 777, 627, 216, 287, 194, 234, 697,
	751, 659, 187, 762, 738, 789, 316, 334, 159, 255,
	335, 354, 174, 329, 256, 262, 184, 186, 185, 170,
	311, 333, 179, 189, 785, 772, 791, 654, 641, 646,
	642, 670, 808, 226, 217, 792, 790, 348, 143, 307,
	306, 684, 225, 775, 144, 136, 294, 145, 232, 162,
	795, 357, 173, 236, 330, 482, 211, 268, 193, 747,
	277, 669, 156, 290, 252, 253, 251, 254, 214, 140,
	146, 771, 292, 309, 332, 175, 323, 138, 139, 141,
	148, 300, 149, 150, 814, 246, 204, 207, 219, 229,
	746, 296, 324, 349, 740, 171, 164, 326, 342, 180,
	308, 310, 356, 769, 166, 803, 786, 733, 699, 705,
	629, 0, 165, 765, 661, 673, 653, 741, 652, 213,
	757, 340, 341, 192, 358, 570, 818, 167, 636, 817,
	265, 272, 264, 820, 336, 804, 734, 723, 721, 630,
	802, 732, 722, 237, 206, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 725, 0, 163, 0, 321, 812,
	829, 325, 177, 647, 779, 331, 218, 291, 178, 212,
	205, 284, 263, 172, 224, 319, 235, 242, 761, 826,
	276, 299, 181, 346, 318, 201, 581, 593, 587, 589,
	588, 585, 586, 584, 583, 582, 595, 568, 569, 572,
	573, 574, 716, 806, 631, 577, 782, 590, 591, 754,
	824, 566, 188, 515, 607, 608, 609, 516, 610, 611,
	517, 518, 612, 613, 614, 615, 519, 616, 617, 618,
	596, 597, 598, 599, 600, 601, 602, 603, 606, 604,
	605, 712, 281, 575, 158, 168, 239, 825, 293, 210,
	619, 626, 645, 648, 649, 650, 651, 655, 660, 0,
	666, 672, 674, 675, 683, 688, 689, 690, 691, 698,
	700, 701, 702, 703, 704, 707, 708, 710, 717, 718,
	724, 729, 730, 736, 737, 0, 760, 763, 580, 774,
	776, 780, 781, 788, 793, 794, 819, 823, 828, 347,
	196, 715, 735, 766, 169, 176, 183, 195, 203, 209,
	220, 223, 227, 228, 230, 233, 245, 247, 248, 249,
	250, 266, 267, 270, 271, 274, 275, 278, 279, 280,
	282, 283, 289, 147, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 798,
	695, 155, 0, 0, 161, 0, 0, 0, 0, 0,
	682, 160, 797, 821, 742, 756, 809, 0, 328, 571,
	813, 656, 679, 822, 685, 687, 750, 632, 727, 273,
	676, 633, 0, 0, 624, 480, 625, 657, 199, 477,
	783, 728, 811, 713, 743, 753, 198, 190, 720, 719,
	800, 668, 667, 748, 796, 810, 0, 0, 579, 240,
	0, 0, 350, 320, 257, 0, 0, 711, 0, 564,
	565, 696, 752, 644, 739, 815, 677, 744, 816, 77,
	0, 0, 0, 478, 503, 1893, 505, 506, 507, 508,
	0, 0, 137, 504, 509, 510, 511, 0, 706, 749,
	827, 623, 475, 494, 628, 578, 0, 801, 664, 665,
	202, 0, 0, 0, 0, 0, 0, 0, 709, 726,
	768, 693, 345, 755, 764, 778, 686, 288, 215, 0,
	0, 0, 0, 491, 492, 1864, 0, 0, 0, 594,
	0, 493, 0, 638, 489, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 495, 0, 0,
	0, 643, 621, 662, 770, 622, 620, 258, 635, 567,
	799, 694, 231, 153, 805, 692, 592, 758, 639, 787,
	680, 238, 637, 154, 634, 640, 678, 269, 767, 773,
	576, 157, 784, 658, 671, 191, 0, 298, 745, 344,
	483, 731, 297, 241, 337, 759, 807, 343, 681, 327,
	351, 355, 208, 714, 182, 317, 200, 197, 663, 777,
	627, 216, 287, 194, 234, 697, 751, 659, 187, 762,
	738, 789, 316, 334, 159, 255, 335, 354, 174, 329,
	256, 262, 184, 186, 185, 170, 311, 333, 179, 189,
	785, 772, 791, 654, 641, 646, 642, 670, 808, 226,
	217, 792, 790, 348, 143, 307, 306, 684, 225, 775,
	144, 136, 294, 145, 232, 162, 795, 357, 173, 236,
	330, 482, 211, 268, 193, 747, 277, 669, 156, 290,
	252, 253, 251, 254, 214, 140, 146, 771, 292, 309,
	332, 175, 323, 138, 139, 141, 148, 300, 149, 150,
	814, 246, 204, 207, 219, 229, 746, 296, 324, 349,
	740, 171, 164, 326, 342, 180, 308, 310, 356, 769,
	166, 803, 786, 733, 699, 705, 629, 0, 165, 765,
	661, 673, 653, 741, 652, 213, 757, 340, 341, 192,
	358, 570, 818, 167, 636, 817, 265, 272, 264, 820,
	336, 804, 734, 723, 721, 630, 802, 732, 722, 237,
	206, 221, 285, 243, 286, 222, 260, 259, 261, 244,
	725, 0, 163, 0, 321, 812, 829, 325, 177, 647,
	779, 331, 218, 291, 178, 212, 205, 284, 263, 172,
	224, 319, 235, 242, 761, 826, 276, 299, 181, 346,
	318, 201, 581, 593, 587, 589, 588, 585, 586, 584,
	583, 582, 595, 568, 569, 572, 573, 574, 716, 806,
	631, 577, 782, 590, 591, 754, 824, 566, 188, 515,
	607, 608, 609, 516, 610, 611, 517, 518, 612, 613,
	614, 615, 519, 616, 617, 618, 596, 597, 598, 599,
	600, 601, 602, 603, 606, 604, 605, 712, 281, 575,
	158, 168, 239, 825, 293, 210, 619, 626, 645, 648,
	649, 650, 651, 655, 660, 0, 666, 672, 674, 675,
	683, 688, 689, 690, 691, 698, 700, 701, 702, 703,
	704, 707, 708, 710, 717, 718, 724, 729, 730, 736,
	737, 0, 760, 763, 580, 774, 776, 780, 781, 788,
	793, 794, 819, 823, 828, 347, 196, 715, 735, 766,
	169, 176, 183, 195, 203, 209, 220, 223, 227, 228,
	230, 233, 245, 247, 248, 249, 250, 266, 267, 270,
	271, 274, 275, 278, 279, 280, 282, 283, 289, 147,
	295, 301, 302, 303, 304, 305, 312, 313, 314, 315,
	322, 338, 339, 352, 353, 798, 695, 155, 0, 0,
	161, 0, 0, 0, 0, 0, 682, 160, 797, 821,
	742, 756, 809, 36, 328, 571, 813, 656, 679, 822,
	685, 687, 750, 632, 727, 273, 676, 633, 0, 0,
	624, 480, 625, 657, 199, 477, 783, 728, 811, 713,
	743, 753, 198, 190, 720, 719, 800, 668, 667, 748,
	796, 810, 0, 0, 579, 240, 0, 0, 350, 320,
	257, 0, 0, 711, 0, 564, 565, 696, 752, 644,
	739, 815, 677, 744, 816, 77, 0, 0, 0, 478,
	503, 502, 505, 506, 507, 508, 0, 0, 137, 504,
	509, 510, 511, 0, 706, 749, 827, 623, 475, 494,
	628, 578, 0, 801, 664, 665, 202, 0, 0, 0,
	0, 0, 0, 0, 709, 726, 768, 693, 345, 755,
	764, 778, 686, 288, 215, 0, 0, 0, 0, 491,
	492, 0, 0, 0, 0, 594, 0, 493, 0, 638,
	489, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 495, 0, 0, 0, 643, 621, 662,
	770, 622, 620, 258, 635, 567, 799, 694, 231, 153,
	805, 692, 592, 758, 639, 787, 680, 238, 637, 154,
	634, 640, 678, 269, 767, 773, 576, 157, 784, 658,
	671, 191, 0, 298, 745, 344, 483, 731, 297, 241,
	337, 759, 807, 343, 681, 327, 351, 355, 208, 714,
	182, 317, 200, 197, 663, 777, 627, 216, 287, 194,
	234, 697, 751, 659, 187, 762, 738, 789, 316, 334,
	159, 255, 335, 354, 174, 329, 256, 262, 184, 186,
	185, 170, 311, 333, 179, 189, 785, 772, 791, 654,
	641, 646, 642, 670, 808, 226, 217, 792, 790, 348,
	143, 307, 306, 684, 225, 775, 144, 136, 294, 145,
	232, 162, 795, 357, 173, 236, 330, 482, 211, 268,
	193, 747, 277, 669, 156, 290, 252, 253, 251, 254,
	214, 140, 146, 771, 292, 309, 332, 175, 323, 138,
	139, 141, 148, 300, 149, 150, 814, 246, 204, 207,
	219, 229, 746, 296, 324, 349, 740, 171, 164, 326,
	342, 180, 308, 310, 356, 769, 166, 803, 786, 733,
	699, 705, 629, 0, 165, 765, 661, 673, 653, 741,
	652, 213, 757, 340, 341, 192, 358, 570, 818, 167,
	636, 817, 265, 272, 264, 820, 336, 804, 734, 723,
	721, 630, 802, 732, 722, 237, 206, 221, 285, 243,
	286, 222, 260, 259, 261, 244, 725, 0, 163, 0,
	321, 812, 829, 325, 177, 647, 779, 331, 218, 291,
	178, 212, 205, 284, 263, 172, 224, 319, 235, 242,
	761, 826, 276, 299, 181, 346, 318, 201, 581, 593,
	587, 589, 588, 585, 586, 584, 583, 582, 595, 568,
	569, 572, 573, 574, 716, 806, 631, 577, 782, 590,
	591, 754, 824, 566, 188, 515, 607, 608, 609, 516,
	610, 611, 517, 518, 612, 613, 614, 615, 519, 616,
	617, 618, 596, 597, 598, 599, 600, 601, 602, 603,
	606, 604, 605, 712, 281, 575, 158, 168, 239, 1205,
	293, 210, 619, 626, 645, 648, 649, 650, 651, 655,
	660, 0, 666, 672, 674, 675, 683, 688, 689, 690,
	691, 698, 700, 701, 702, 703, 704, 707, 708, 710,
	717, 718, 724, 729, 730, 736, 737, 0, 760, 763,
	580, 774, 776, 780, 781, 788, 793, 794, 819, 823,
	828, 347, 196, 715, 735, 766, 169, 176, 183, 195,
	203, 209, 220, 223, 227, 228, 230, 233, 245, 247,
	248, 249, 250, 266, 267, 270, 271, 274, 275, 278,
	279, 280, 282, 283, 289, 147, 295, 301, 302, 303,
	304, 305, 312, 313, 314, 315, 322, 338, 339, 352,
	353, 798, 695, 155, 0, 0, 161, 0, 0, 0,
	0, 0, 682, 160, 797, 821, 742, 756, 809, 0,
	328, 571, 813, 656, 679, 822, 685, 687, 750, 632,
	727, 273, 676, 633, 0, 0, 624, 480, 625, 657,
	199, 477, 783, 728, 811, 713, 743, 753, 198, 190,
	720, 719, 800, 668, 667, 748, 796, 810, 0, 0,
	579, 240, 0, 0, 350, 320, 257, 0, 0, 711,
	0, 564, 565, 696, 752, 644, 739, 815, 677, 744,
	816, 77, 0, 1729, 0, 478, 503, 502, 505, 506,
	507, 508, 0, 0, 137, 504, 509, 510, 511, 0,
	706, 749, 827, 623, 475, 494, 628, 578, 0, 801,
	664, 665, 202, 0, 0, 0, 0, 0, 0, 0,
	709, 726, 768, 693, 345, 755, 764, 778, 686, 288,
	215, 0, 0, 0, 0, 491, 492, 0, 0, 0,
	0, 594, 0, 493, 0, 638, 489, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 495,
	0, 0, 0, 643, 621, 662, 770, 622, 620, 258,
	635, 567, 799, 694, 231, 153, 805, 692, 592, 758,
	639, 787, 680, 238, 637, 154, 634, 640, 678, 269,
	767, 773, 576, 157, 784, 658, 671, 191, 0, 298,
	745, 344, 483, 731, 297, 241, 337, 759, 807, 343,
	681, 327, 351, 355, 208, 714, 182, 317, 200, 197,
	663, 777, 627, 216, 287, 194, 234, 697, 751, 659,
	187, 762, 738, 789, 316, 334, 159, 255, 335, 354,
	174, 329, 256, 262, 184, 186, 185, 170, 311, 333,
	179, 189, 785, 772, 791, 654, 641, 646, 642, 670,
	808, 226, 217, 792, 790, 348, 143, 307, 306, 684,
	225, 775, 144, 136, 294, 145, 232, 162, 795, 357,
	173, 236, 330, 482, 211, 268, 193, 747, 277, 669,
	156, 290, 252, 253, 251, 254, 214, 140, 146, 771,
	292, 309, 332, 175, 323, 138, 139, 141, 148, 300,
	149, 150, 814, 246, 204, 207, 219, 229, 746, 296,
	324, 349, 740, 171, 164, 326, 342, 180, 308, 310,
	356, 769, 166, 803, 786, 733, 699, 705, 629, 0,
	165, 765, 661, 673, 653, 741, 652, 213, 757, 340,
	341, 192, 358, 570, 818, 167, 636, 817, 265, 272,
	264, 820, 336, 804, 734, 723, 721, 630, 802, 732,
	722, 237, 206, 221, 285, 243, 286, 222, 260, 259,
	261, 244, 725, 0, 163, 0, 321, 812, 829, 325,
	177, 647, 779, 331, 218, 291, 178, 212, 205, 284,
	263, 172, 224, 319, 235, 242, 761, 826, 276, 299,
	181, 346, 318, 201, 581, 593, 587, 589, 588, 585,
	586, 584, 583, 582, 595, 568, 569, 572, 573, 574,
	716, 806, 631, 577, 782, 590, 591, 754, 824, 566,
	188, 515, 607, 608, 609, 516, 610, 611, 517, 518,
	612, 613, 614, 615, 519, 616, 617, 618, 596, 597,
	598, 599, 600, 601, 602, 603, 606, 604, 605, 712,
	281, 575, 158, 168, 239, 825, 293, 210, 619, 626,
	645, 648, 649, 650, 651, 655, 660, 0, 666, 672,
	674, 675, 683, 688, 689, 690, 691, 698, 700, 701,
	702, 703, 704, 707, 708, 710, 717, 718, 724, 729,
	730, 736, 737, 0, 760, 763, 580, 774, 776, 780,
	781, 788, 793, 794, 819, 823, 828, 347, 196, 715,
	735, 766, 169, 176, 183, 195, 203, 209, 220, 223,
	227, 228, 230, 233, 245, 247, 248, 249, 250, 266,
	267, 270, 271, 274, 275, 278, 279, 280, 282, 283,
	289, 147, 295, 301, 302, 303, 304, 305, 312, 313,
	314, 315, 322, 338, 339, 352, 353, 798, 695, 155,
	0, 0, 161, 0, 0, 0, 0, 0, 682, 160,
	797, 821, 742, 756, 809, 0, 328, 571, 813, 656,
	679, 822, 685, 687, 750, 632, 727, 273, 676, 633,
	0, 0, 624, 480, 625, 657, 199, 477, 783, 728,
	811, 713, 743, 753, 198, 190, 720, 719, 800, 668,
	667, 748, 796, 810, 0, 0, 579, 240, 0, 0,
	350, 320, 257, 0, 0, 711, 0, 564, 565, 696,
	752, 644, 739, 815, 677, 744, 816, 77, 0, 0,
	0, 478, 503, 502, 505, 506, 507, 508, 0, 0,
	137, 504, 509, 510, 511, 0, 706, 749, 827, 623,
	475, 494, 628, 578, 0, 801, 664, 665, 202, 0,
	0, 0, 0, 0, 0, 0, 709, 726, 768, 693,
	345, 755, 764, 778, 686, 288, 215, 0, 0, 0,
	0, 491, 492, 0, 0, 0, 0, 594, 0, 493,
	0, 638, 489, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 495, 0, 0, 0, 643,
	621, 662, 770, 622, 620, 258, 635, 567, 799, 694,
	231, 153, 805, 692, 592, 758, 639, 787, 680, 238,
	637, 154, 634, 640, 678, 269, 767, 773, 576, 157,
	784, 658, 671, 191, 0, 298, 745, 344, 483, 731,
	297, 241, 337, 759, 807, 343, 681, 327, 351, 355,
	208, 714, 182, 317, 200, 197, 663, 777, 627, 216,
	287, 194, 234, 697, 751, 659, 187, 762, 738, 789,
	316, 334, 159, 255, 335, 354, 174, 329, 256, 262,
	184, 186, 185, 170, 311, 333, 179, 189, 785, 772,
	791, 654, 641, 646, 642, 670, 808, 226, 217, 792,
	790, 348, 143, 307, 306, 684, 225, 775, 144, 136,
	294, 145, 232, 162, 795, 357, 173, 236, 330, 482,
	211, 268, 193, 747, 277, 669, 156, 290, 252, 253,
	251, 254, 214, 140, 146, 771, 292, 309, 332, 175,
	323, 138, 139, 141, 148, 300, 149, 150, 814, 246,
	204, 207, 219, 229, 746, 296, 324, 349, 740, 171,
	164, 326, 342, 180, 308, 310, 356, 769, 166, 803,
	786, 733, 699, 705, 629, 0, 165, 765, 661, 673,
	653, 741, 652, 213, 757, 340, 341, 192, 358, 570,
	818, 167, 636, 817, 265, 272, 264, 820, 336, 804,
	734, 723, 721, 630, 802, 732, 722, 237, 206, 221,
	285, 243, 286, 222, 260, 259, 261, 244, 725, 0,
	163, 0, 321, 812, 829, 325, 177, 647, 779, 331,
	218, 291, 178, 212, 205, 284, 263, 172, 224, 319,
	235, 242, 761, 826, 276, 299, 181, 346, 318, 201,
	581, 593, 587, 589, 588, 585, 586, 584, 583, 582,
	595, 568, 569, 572, 573, 574, 716, 806, 631, 577,
	782, 590, 591, 754, 824, 566, 188, 515, 607, 608,
	609, 516, 610, 611, 517, 518, 612, 613, 614, 615,
	519, 616, 617, 618, 596, 597, 598, 599, 600, 601,
	602, 603, 606, 604, 605, 712, 281, 575, 158, 168,
	239, 825, 293, 210, 619, 626, 645, 648, 649, 650,
	651, 655, 660, 0, 666, 672, 674, 675, 683, 688,
	689, 690, 691, 698, 700, 701, 702, 703, 704, 707,
	708, 710, 717, 718, 724, 729, 730, 736, 737, 0,
	760, 763, 580, 774, 776, 780, 781, 788, 793, 794,
	819, 823, 828, 347, 196, 715, 735, 766, 169, 176,
	183, 195, 203, 209, 220, 223, 227, 228, 230, 233,
	245, 247, 248, 249, 250, 266, 267, 270, 271, 274,
	275, 278, 279, 280, 282, 283, 289, 147, 295, 301,
	302, 303, 304, 305, 312, 313, 314, 315, 322, 338,
	339, 352, 353, 798, 695, 155, 0, 0, 161, 0,
	0, 0, 0, 0, 682, 160, 797, 821, 742, 756,
	809, 0, 328, 571, 813, 656, 679, 822, 685, 687,
	750, 632, 727, 273, 676, 633, 0, 0, 624, 870,
	625, 657, 199, 868, 783, 728, 811, 713, 743, 753,
	198, 190, 720, 719, 800, 668, 667, 748, 796, 810,
	0, 0, 579, 240, 0, 0, 350, 320, 257, 0,
	0, 711, 0, 564, 565, 696, 752, 644, 739, 815,
	677, 744, 816, 77, 0, 0, 0, 478, 503, 502,
	505, 506, 507, 508, 0, 0, 137, 504, 509, 510,
	511, 0, 706, 749, 827, 623, 889, 494, 628, 578,
	0, 801, 664, 665, 202, 0, 0, 0, 0, 0,
	0, 0, 709, 726, 768, 693, 345, 755, 764, 778,
	686, 288, 215, 0, 0, 0, 0, 491, 492, 0,
	0, 0, 0, 594, 0, 493, 0, 638, 489, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 495, 0, 0, 0, 643, 621, 662, 770, 622,
	620, 258, 635, 567, 799, 694, 231, 153, 805, 692,
	592, 758, 639, 787, 680, 238, 637, 154, 634, 640,
	678, 269, 767, 773, 576, 157, 784, 658, 671, 191,
	0, 298, 745, 344, 483, 731, 297, 241, 337, 759,
	807, 343, 681, 327, 351, 355, 208, 714, 182, 317,
	200, 197, 663, 777, 627, 216, 287, 194, 234, 697,
	751, 659, 187, 762, 738, 789, 316, 334, 159, 255,
	335, 354, 174, 329, 256, 262, 184, 186, 185, 170,
	311, 333, 179, 189, 785, 772, 791, 654, 641, 646,
	642, 670, 808, 226, 217, 792, 790, 348, 143, 307,
	306, 684, 225, 775, 144, 136, 294, 145, 232, 162,
	795, 357, 173, 236, 330, 482, 211, 268, 193, 747,
	277, 669, 156, 290, 252, 253, 251, 254, 214, 140,
	146, 771, 292, 309, 332, 175, 323, 138, 139, 141,
	148, 300, 149, 150, 814, 246, 204, 207, 219, 229,
	746, 296, 324, 349, 740, 171, 164, 326, 342, 180,
	308, 310, 356, 769, 166, 803, 786, 733, 699, 705,
	629, 0, 165, 765, 661, 673, 653, 741, 652, 213,
	757, 340, 341, 192, 358, 570, 818, 167, 636, 817,
	265, 272, 264, 820, 336, 804, 734, 723, 721, 630,
	802, 732, 722, 237, 206, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 725, 0, 163, 0, 321, 812,
	829, 325, 177, 647, 779, 331, 218, 291, 178, 212,
	205, 284, 263, 172, 224, 319, 235, 242, 761, 826,
	276, 299, 181, 346, 318, 201, 581, 593, 587, 589,
	588, 585, 586, 584, 583, 582, 595, 568, 569, 572,
	573, 574, 716, 806, 631, 577, 782, 590, 591, 754,
	824, 566, 188, 515, 607, 608, 609, 516, 610, 611,
	517, 518, 612, 613, 614, 615, 519, 616, 617, 618,
	596, 597, 598, 599, 600, 601, 602, 603, 606, 604,
	605, 712, 281, 575, 158, 168, 239, 825, 293, 210,
	619, 626, 645, 648, 649, 650, 651, 655, 660, 0,
	666, 672, 674, 675, 683, 688, 689, 690, 691, 698,
	700, 701, 702, 703, 704, 707, 708, 710, 717, 718,
	724, 729, 730, 736, 737, 0, 760, 763, 580, 774,
	776, 780, 781, 788, 793, 794, 819, 823, 828, 347,
	196, 715, 735, 766, 169, 176, 183, 195, 203, 209,
	220, 223, 227, 228, 230, 233, 245, 247, 248, 249,
	250, 266, 267, 270, 271, 274, 275, 278, 279, 280,
	282, 283, 289, 147, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 798,
	695, 155, 0, 0, 161, 0, 0, 0, 0, 0,
	682, 160, 797, 821, 742, 756, 809, 0, 328, 571,
	813, 656, 679, 822, 685, 687, 750, 632, 727, 273,
	676, 633, 0, 0, 624, 870, 625, 657, 199, 868,
	783, 728, 811, 713, 743, 753, 198, 190, 720, 719,
	800, 668, 667, 748, 796, 810, 0, 0, 579, 240,
	0, 0, 350, 320, 257, 0, 0, 711, 0, 564,
	565, 696, 752, 644, 739, 815, 677, 744, 816, 77,
	0, 0, 0, 478, 503, 502, 505, 506, 507, 508,
	0, 0, 137, 504, 509, 510, 511, 0, 706, 749,
	827, 623, 889, 494, 628, 578, 0, 801, 664, 665,
	202, 0, 0, 0, 0, 0, 0, 0, 709, 726,
	768, 693, 345, 755, 764, 778, 686, 288, 215, 0,
	0, 0, 0, 491, 492, 0, 0, 0, 0, 594,
	0, 493, 0, 638, 489, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 495, 0, 0,
	0, 643, 621, 662, 770, 622, 620, 258, 635, 567,
	799, 694, 231, 153, 805, 692, 592, 758, 639, 787,
	680, 238, 637, 154, 634, 640, 678, 269, 767, 773,
	576, 157, 784, 658, 671, 191, 0, 298, 745, 344,
	483, 3391, 297, 241, 337, 759, 807, 343, 681, 327,
	351, 355, 208, 714, 182, 317, 200, 197, 663, 777,
	627, 216, 287, 194, 234, 697, 751, 659, 187, 762,
	738, 789, 316, 334, 159, 255, 335, 354, 174, 329,
	256, 262, 184, 186, 185, 170, 311, 333, 179, 189,
	785, 772, 791, 654, 641, 646, 642, 670, 808, 226,
	217, 792, 790, 348, 143, 307, 306, 684, 225, 775,
	144, 136, 294, 145, 232, 162, 795, 357, 173, 236,
	330, 482, 211, 268, 193, 747, 277, 669, 156, 290,
	252, 253, 251, 254, 214, 140, 146, 771, 292, 309,
	332, 175, 323, 138, 139, 141, 148, 300, 149, 150,
	814, 246, 204, 207, 219, 229, 746, 296, 324, 349,
	740, 171, 164, 326, 342, 180, 308, 310, 356, 769,
	166, 803, 786, 733, 699, 705, 629, 0, 165, 765,
	661, 673, 653, 741, 652, 213, 757, 340, 341, 192,
	358, 570, 818, 167, 636, 817, 265, 272, 264, 820,
	336, 804, 734, 723, 721, 630, 802, 732, 722, 237,
	206, 221, 285, 243, 286, 222, 260, 259, 261, 244,
	725, 0, 163, 0, 321, 812, 829, 325, 177, 647,
	779, 331, 218, 291, 178, 212, 205, 284, 263, 172,
	224, 319, 235, 242, 761, 826, 276, 299, 181, 346,
	318, 201, 581, 593, 587, 589, 588, 585, 586, 584,
	583, 582, 595, 568, 569, 572, 573, 574, 716, 806,
	631, 577, 782, 590, 591, 754, 824, 566, 188, 515,
	607, 608, 609, 516, 610, 611, 517, 518, 612, 613,
	614, 615, 519, 616, 617, 618, 596, 597, 598, 599,
	600, 601, 602, 603, 606, 604, 605, 712, 281, 575,
	158, 168, 239, 825, 293, 210, 619, 626, 645, 648,
	649, 650, 651, 655, 660, 0, 666, 672, 674, 675,
	683, 688, 689, 690, 691, 698, 700, 701, 702, 703,
	704, 707, 708, 710, 717, 718, 724, 729, 730, 736,
	737, 0, 760, 763, 580, 774, 776, 780, 781, 788,
	793, 794, 819, 823, 828, 347, 196, 715, 735, 766,
	169, 176, 183, 195, 203, 209, 220, 223, 227, 228,
	230, 233, 245, 247, 248, 249, 250, 266, 267, 270,
	271, 274, 275, 278, 279, 280, 282, 283, 289, 147,
	295, 301, 302, 303, 304, 305, 312, 313, 314, 315,
	322, 338, 339, 352, 353, 798, 695, 155, 0, 0,
	161, 0, 0, 0, 0, 0, 682, 160, 797, 821,
	742, 756, 809, 0, 328, 571, 813, 656, 679, 822,
	685, 687, 750, 632, 727, 273, 676, 633, 0, 0,
	624, 870, 625, 657, 199, 868, 783, 728, 811, 713,
	743, 753, 198, 190, 720, 719, 800, 668, 667, 748,
	796, 810, 0, 0, 579, 240, 0, 0, 350, 320,
	257, 0, 0, 711, 0, 564, 565, 696, 752, 644,
	739, 815, 677, 744, 816, 77, 0, 0, 0, 478,
	503, 502, 505, 506, 507, 508, 0, 0, 137, 504,
	509, 510, 511, 0, 706, 749, 827, 623, 889, 494,
	628, 578, 0, 801, 664, 665, 202, 0, 0, 0,
	0, 0, 0, 0, 709, 726, 768, 693, 345, 755,
	764, 778, 686, 288, 215, 0, 0, 0, 0, 491,
	492, 0, 0, 0, 0, 594, 0, 493, 0, 638,
	489, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 495, 0, 0, 0, 643, 621, 662,
	770, 622, 620, 258, 635, 567, 799, 694, 231, 153,
	805, 692, 592, 758, 639, 787, 680, 238, 637, 154,
	634, 640, 678, 269, 767, 773, 576, 157, 784, 658,
	671, 191, 0, 298, 745, 344, 483, 731, 297, 241,
	337, 759, 807, 343, 681, 327, 351, 355, 208, 714,
	182, 317, 200, 197, 663, 777, 627, 216, 287, 194,
	234, 697, 751, 659, 187, 762, 738, 789, 316, 334,
	159, 255, 335, 354, 174, 329, 256, 262, 184, 186,
	185, 170, 311, 333, 179, 189, 785, 772, 791, 654,
	641, 646, 642, 670, 808, 226, 217, 792, 790, 348,
	143, 307, 306, 684, 225, 775, 144, 136, 294, 145,
	232, 162, 795, 357, 173, 236, 330, 482, 211, 268,
	193, 747, 277, 669, 156, 290, 252, 253, 251, 254,
	214, 140, 146, 771, 292, 309, 332, 175, 323, 138,
	139, 141, 148, 300, 149, 150, 814, 246, 204, 207,
	219, 229, 746, 296, 324, 349, 740, 171, 164, 326,
	342, 180, 308, 310, 356, 769, 166, 803, 786, 733,
	699, 705, 629, 0, 165, 765, 661, 673, 653, 741,
	652, 213, 757, 340, 341, 192, 358, 570, 818, 167,
	636, 817, 265, 272, 264, 820, 336, 804, 734, 723,
	721, 630, 802, 732, 722, 237, 206, 221, 285, 243,
	286, 222, 260, 259, 261, 244, 725, 0, 163, 0,
	321, 812, 829, 325, 177, 647, 779, 331, 218, 291,
	178, 212, 205, 284, 263, 172, 224, 319, 235, 242,
	761, 826, 276, 299, 181, 346, 318, 201, 581, 593,
	587, 589, 588, 585, 586, 584, 583, 582, 595, 568,
	569, 572, 573, 574, 1899, 1900, 1901, 577, 782, 590,
	591, 754, 824, 566, 188, 515, 607, 608, 609, 516,
	610, 611, 517, 518, 612, 613, 614, 615, 519, 616,
	617, 618, 596, 597, 598, 599, 600, 601, 602, 603,
	606, 604, 605, 712, 281, 575, 158, 168, 239, 825,
	293, 210, 619, 626, 645, 648, 649, 650, 651, 655,
	660, 0, 666, 672, 674, 675, 683, 688, 689, 690,
	691, 698, 700, 701, 702, 703, 704, 707, 708, 710,
	717, 718, 724, 729, 730, 736, 737, 0, 760, 763,
	580, 774, 776, 780, 781, 788, 793, 794, 819, 823,
	828, 347, 196, 715, 735, 766, 169, 176, 183, 195,
	203, 209, 220, 223, 227, 228, 230, 233, 245, 247,
	248, 249, 250, 266, 267, 270, 271, 274, 275, 278,
	279, 280, 282, 283, 289, 147, 295, 301, 302, 303,
	304, 305, 312, 313, 314, 315, 322, 338, 339, 352,
	353, 798, 695, 155, 0, 0, 161, 0, 0, 0,
	0, 0, 682, 160, 797, 821, 742, 756, 1660, 2768,
	328, 1512, 1664, 1462, 1491, 1681, 1497, 1500, 1583, 1427,
	1550, 273, 1488, 1428, 1410, 1467, 1414, 1479, 1415, 1464,
	199, 1460, 1624, 1553, 1662, 1532, 1576, 1586, 198, 190,
	1542, 1541, 1650, 1477, 1476, 1581, 1638, 1661, 1531, 0,
	1671, 240, 1635, 933, 350, 320, 257, 936, 935, 1527,
	1644, 1548, 1613, 1510, 1585, 1444, 1568, 1666, 1489, 1577,
	1667, 77, 0, 1120, 0, 929, 0, 0, 0, 0,
	0, 0, 0, 0, 137, 0, 1573, 1658, 1482, 934,
	1522, 1582, 1686, 1413, 1569, 0, 1419, 1430, 1680, 1651,
	1473, 1474, 202, 0, 0, 0, 0, 0, 0, 0,
	1525, 1549, 1603, 1507, 345, 1588, 1598, 1616, 1499, 288,
	215, 0, 0, 0, 0, 0, 0, 0, 0, 1469,
	0, 1566, 0, 0, 0, 1435, 1421, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1521,
	0, 0, 0, 1443, 1411, 1471, 1605, 1412, 1409, 258,
	1431, 1618, 1649, 1508, 231, 153, 1655, 1506, 1505, 1592,
	1436, 1628, 1492, 238, 1434, 154, 1429, 1437, 1490, 269,
	1602, 1610, 142, 157, 1625, 1465, 1481, 191, 1790, 298,
	1578, 344, 932, 1558, 297, 241, 337, 1593, 1657, 343,
	1493, 327, 351, 355, 208, 1533, 182, 317, 200, 197,
	1472, 1615, 1418, 216, 287, 194, 234, 1511, 1584, 1466,
	187, 1596, 1567, 1630, 316, 334, 159, 255, 335, 354,
	174, 329, 256, 262, 184, 186, 185, 170, 311, 333,
	179, 189, 1626, 1609, 1632, 1459, 1438, 1450, 1439, 1480,
	1659, 226, 217, 1633, 1631, 348, 143, 307, 306, 1496,
	225, 1612, 144, 136, 294, 145, 232, 162, 1637, 357,
	173, 236, 330, 931, 211, 268, 193, 1580, 277, 1478,
	156, 290, 252, 253, 251, 254, 214, 140, 146, 1608,
	292, 309, 332, 175, 323, 138, 139, 141, 148, 300,
	149, 150, 1665, 246, 204, 207, 219, 229, 1579, 296,
	324, 349, 1570, 171, 164, 326, 342, 180, 308, 310,
	356, 1604, 166, 1653, 1627, 1560, 1514, 1520, 1420, 0,
	165, 1600, 1470, 1485, 1458, 1574, 1457, 213, 1591, 340,
	341, 192, 358, 1432, 1673, 167, 1433, 1672, 265, 272,
	264, 1676, 336, 1654, 1561, 1545, 1543, 1425, 1652, 1559,
	1544, 237, 206, 221, 285, 243, 286, 222, 260, 259,
	261, 244, 1547, 0, 163, 0, 321, 1663, 1688, 325,
	177, 1452, 1619, 331, 218, 291, 178, 212, 205, 284,
	263, 172, 224, 319, 235, 242, 1595, 1685, 276, 299,
	181, 346, 318, 201, 1448, 1451, 1446, 1449, 1447, 1551,
	1552, 1668, 1669, 1670, 1607, 1440, 0, 1645, 1646, 0,
	1538, 1656, 1426, 0, 1623, 151, 152, 1587, 1683, 1498,
	188, 1792, 1422, 1423, 1424, 1793, 1528, 1529, 1794, 1795,
	1641, 1640, 1639, 1642, 1796, 1677, 1675, 1678, 1442, 1463,
	1484, 1534, 1535, 1537, 1571, 1572, 1617, 1590, 1599, 1530,
	281, 1556, 158, 168, 239, 2769, 293, 210, 1408, 1416,
	1445, 1453, 1454, 1455, 1456, 1461, 1468, 0, 1475, 1483,
	1486, 1487, 1495, 1501, 1502, 1503, 1504, 1513, 1515, 1516,
	1517, 1518, 1519, 1523, 1524, 1526, 1539, 1540, 1546, 1554,
	1555, 1563, 1565, 0, 1594, 1597, 1606, 1611, 1614, 1620,
	1622, 1629, 1634, 1636, 1674, 1682, 1687, 347, 196, 1536,
	1562, 1601, 169, 176, 183, 195, 203, 209, 220, 223,
	227, 228, 230, 233, 245, 247, 248, 249, 250, 266,
	267, 270, 271, 274, 275, 278, 279, 280, 282, 283,
	289, 147, 295, 301, 302, 303, 304, 305, 312, 313,
	314, 315, 322, 338, 339, 352, 353, 1648, 1509, 155,
	0, 0, 161, 0, 0, 0, 0, 0, 1494, 160,
	1643, 1679, 1575, 1589, 1660, 1621, 328, 1512, 1664, 1462,
	1491, 1681, 1497, 1500, 1583, 1427, 1550, 273, 1488, 1428,
	1410, 1467, 1414, 1479, 1415, 1464, 199, 1460, 1624, 1553,
	1662, 1532, 1576, 1586, 198, 190, 1542, 1541, 1650, 1477,
	1476, 1581, 1638, 1661, 1531, 0, 1671, 240, 1635, 933,
	350, 320, 257, 936, 935, 1527, 1644, 1548, 1613, 1510,
	1585, 1444, 1568, 1666, 1489, 1577, 1667, 0, 0, 0,
	0, 929, 0, 0, 0, 0, 0, 0, 0, 0,
	137, 0, 1573, 1658, 1482, 934, 1522, 1582, 1686, 1413,
	1569, 0, 1419, 1430, 1680, 1651, 1473, 1474, 202, 0,
	0, 0, 0, 0, 0, 0, 1525, 1549, 1603, 1507,
	345, 1588, 1598, 1616, 1499, 288, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 1469, 0, 1566, 0, 0,
	0, 1435, 1421, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1521, 0, 0, 0, 1443,
	1411, 1471, 1605, 1412, 1409, 258, 1431, 1618, 1649, 1508,
	231, 153, 1655, 1506, 1505, 1592, 1436, 1628, 1492, 238,
	1434, 154, 1429, 1437, 1490, 269, 1602, 1610, 142, 157,
	1625, 1465, 1481, 191, 1790, 298, 1578, 344, 932, 1558,
	297, 241, 337, 1593, 1657, 343, 1493, 327, 351, 355,
	208, 1533, 182, 317, 200, 197, 1472, 1615, 1418, 216,
	287, 194, 234, 1511, 1584, 1466, 187, 1596, 1567, 1630,
	316, 334, 159, 255, 335, 354, 174, 329, 256, 262,
	184, 186, 185, 170, 311, 333, 179, 189, 1626, 1609,
	1632, 1459, 1438, 1450, 1439, 1480, 1659, 226, 217, 1633,
	1631, 348, 143, 307, 306, 1496, 225, 1612, 144, 136,
	294, 145, 232, 162, 1637, 357, 173, 236, 330, 931,
	211, 268, 193, 1580, 277, 1478, 156, 290, 252, 253,
	251, 254, 214, 140, 146, 1608, 292, 309, 332, 175,
	323, 138, 139, 141, 148, 300, 149, 150, 1665, 246,
	204, 207, 219, 229, 1579, 296, 324, 349, 1570, 171,
	164, 326, 342, 180, 308, 310, 356, 1604, 166, 1653,
	1627, 1560, 1514, 1520, 1420, 0, 165, 1600, 1470, 1485,
	1458, 1574, 1457, 213, 1591, 340, 341, 192, 358, 1432,
	1673, 167, 1433, 1672, 265, 272, 264, 1676, 336, 1654,
	1561, 1545, 1543, 1425, 1652, 1559, 1544, 237, 206, 221,
	285, 243, 286, 222, 260, 259, 261, 244, 1547, 0,
	163, 0, 321, 1663, 1688, 325, 177, 1452, 1619, 331,
	218, 291, 178, 212, 205, 284, 263, 172, 224, 319,
	235, 242, 1595, 1685, 276, 299, 181, 346, 318, 201,
	1448, 1451, 1446, 1449, 1447, 1551, 1552, 1668, 1669, 1670,
	1607, 1440, 0, 1645, 1646, 0, 1538, 1656, 1426, 0,
	1623, 151, 152, 1587, 1683, 1498, 188, 1792, 1422, 1423,
	1424, 1793, 1528, 1529, 1794, 1795, 1641, 1640, 1639, 1642,
	1796, 1677, 1675, 1678, 1442, 1463, 1484, 1534, 1535, 1537,
	1571, 1572, 1617, 1590, 1599, 1530, 281, 1556, 158, 168,
	239, 1684, 293, 210, 1408, 1416, 1445, 1453, 1454, 1455,
	1456, 1461, 1468, 0, 1475, 1483, 1486, 1487, 1495, 1501,
	1502, 1503, 1504, 1513, 1515, 1516, 1517, 1518, 1519, 1523,
	1524, 1526, 1539, 1540, 1546, 1554, 1555, 1563, 1565, 0,
	1594, 1597, 1606, 1611, 1614, 1620, 1622, 1629, 1634, 1636,
	1674, 1682, 1687, 347, 196, 1536, 1562, 1601, 169, 176,
	183, 195, 203, 209, 220, 223, 227, 228, 230, 233,
	245, 247, 248, 249, 250, 266, 267, 270, 271, 274,
	275, 278, 279, 280, 282, 283, 289, 147, 295, 301,
	302, 303, 304, 305, 312, 313, 314, 315, 322, 338,
	339, 352, 353, 1648, 1509, 155, 0, 0, 161, 0,
	0, 0, 0, 0, 1494, 160, 1643, 1679, 1575, 1589,
	1660, 1621, 328, 1512, 1664, 1462, 1491, 1681, 1497, 1500,
	1583, 1427, 1550, 273, 1488, 1428, 1410, 1467, 1414, 1479,
	1415, 1464, 199, 1460, 1624, 1553, 1662, 1532, 1576, 1586,
	198, 190, 1542, 1541, 1650, 1477, 1476, 1581, 1638, 1661,
	1531, 0, 1671, 240, 1635, 0, 350, 320, 257, 0,
	0, 1527, 1644, 1548, 1613, 1510, 1585, 1444, 1568, 1666,
	1489, 1577, 1667, 0, 0, 0, 0, 478, 0, 0,
	0, 0, 0, 0, 0, 0, 137, 0, 1573, 1658,
	1482, 0, 1522, 1582, 1686, 1413, 1569, 0, 1419, 1430,
	1680, 1651, 1473, 1474, 202, 0, 0, 0, 0, 0,
	0, 0, 1525, 1549, 1603, 1507, 345, 1588, 1598, 1616,
	1499, 288, 215, 0, 0, 0, 0, 0, 0, 2477,
	0, 1469, 0, 1566, 0, 0, 0, 1435, 1421, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1521, 0, 0, 0, 1443, 1411, 1471, 1605, 1412,
	1409, 258, 1431, 1618, 1649, 1508, 231, 153, 1655, 1506,
	1505, 1592, 1436, 1628, 1492, 238, 1434, 154, 1429, 1437,
	1490, 269, 1602, 1610, 142, 157, 1625, 1465, 1481, 191,
	0, 298, 1578, 344, 1830, 1558, 297, 241, 337, 1593,
	1657, 343, 1493, 327, 351, 355, 208, 1533, 182, 317,
	200, 197, 1472, 1615, 1418, 216, 287, 194, 234, 1511,
	1584, 1466, 187, 1596, 1567, 1630, 316, 334, 159, 255,
	335, 354, 174, 329, 256, 262, 184, 186, 185, 170,
	311, 333, 179, 189, 1626, 1609, 1632, 1459, 1438, 1450,
	1439, 1480, 1659, 226, 217, 1633, 1631, 348, 143, 307,
	306, 1496, 225, 1612, 144, 136, 294, 145, 232, 162,
	1637, 357, 173, 236, 330, 1829, 211, 268, 193, 1580,
	277, 1478, 156, 290, 252, 253, 251, 254, 214, 140,
	146, 1608, 292, 309, 332, 175, 323, 138, 139, 141,
	148, 300, 149, 150, 1665, 246, 204, 207, 219, 229,
	1579, 296, 324, 349, 1570, 171, 164, 326, 342, 180,
	308, 310, 356, 1604, 166, 1653, 1627, 1560, 1514, 1520,
	1420, 0, 165, 1600, 1470, 1485, 1458, 1574, 1457, 213,
	1591, 340, 341, 192, 358, 1432, 1673, 167, 1433, 1672,
	265, 272, 264, 1676, 336, 1654, 1561, 1545, 1543, 1425,
	1652, 1559, 1544, 237, 206, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 1547, 0, 163, 0, 321, 1663,
	1688, 325, 177, 1452, 1619, 331, 218, 291, 178, 212,
	205, 284, 263, 172, 224, 319, 235, 242, 1595, 1685,
	276, 299, 181, 346, 318, 201, 1448, 1451, 1446, 1449,
	1447, 1551, 1552, 1668, 1669, 1670, 1607, 1440, 0, 1645,
	1646, 0, 1538, 1656, 1426, 0, 1623, 151, 152, 1587,
	1683, 1498, 188, 1417, 1422, 1423, 1424, 1441, 1528, 1529,
	1557, 1564, 1641, 1640, 1639, 1642, 1647, 1677, 1675, 1678,
	1442, 1463, 1484, 1534, 1535, 1537, 1571, 1572, 1617, 1590,
	1599, 1530, 281, 1556, 158, 168, 239, 1684, 293, 210,
	1408, 1416, 1445, 1453, 1454, 1455, 1456, 1461, 1468, 0,
	1475, 1483, 1486, 1487, 1495, 1501, 1502, 1503, 1504, 1513,
	1515, 1516, 1517, 1518, 1519, 1523, 1524, 1526, 1539, 1540,
	1546, 1554, 1555, 1563, 1565, 0, 1594, 1597, 1606, 1611,
	1614, 1620, 1622, 1629, 1634, 1636, 1674, 1682, 1687, 347,
	196, 1536, 1562, 1601, 169, 176, 183, 195, 203, 209,
	220, 223, 227, 228, 230, 233, 245, 247, 248, 249,
	250, 266, 267, 270, 271, 274, 275, 278, 279, 280,
	282, 283, 289, 147, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 1648,
	1509, 155, 0, 0, 161, 0, 0, 0, 0, 0,
	1494, 160, 1643, 1679, 1575, 1589, 1660, 1621, 328, 1512,
	1664, 1462, 1491, 1681, 1497, 1500, 1583, 1427, 1550, 273,
	1488, 1428, 1410, 1467, 1414, 1479, 1415, 1464, 199, 1460,
	1624, 1553, 1662, 1532, 1576, 1586, 198, 190, 1542, 1541,
	1650, 1477, 1476, 1581, 1638, 1661, 1531, 0, 1671, 240,
	1635, 0, 350, 320, 257, 0, 0, 1527, 1644, 1548,
	1613, 1510, 1585, 1444, 1568, 1666, 1489, 1577, 1667, 0,
	0, 0, 0, 478, 0, 0, 0, 0, 0, 0,
	0, 0, 137, 0, 1573, 1658, 1482, 0, 1522, 1582,
	1686, 1413, 1569, 0, 1419, 1430, 1680, 1651, 1473, 1474,
	202, 0, 0, 0, 0, 0, 0, 0, 1525, 1549,
	1603, 1507, 345, 1588, 1598, 1616, 1499, 288, 215, 0,
	0, 0, 0, 0, 0, 1825, 0, 1469, 0, 1566,
	0, 0, 0, 1435, 1421, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1521, 0, 0,
	0, 1443, 1411, 1471, 1605, 1412, 1409, 258, 1431, 1618,
	1649, 1508, 231, 153, 1655, 1506, 1505, 1592, 1436, 1628,
	1492, 238, 1434, 154, 1429, 1437, 1490, 269, 1602, 1610,
	142, 157, 1625, 1465, 1481, 191, 0, 298, 1578, 344,
	1830, 1558, 297, 241, 337, 1593, 1657, 343, 1493, 327,
	351, 355, 208, 1533, 182, 317, 200, 197, 1472, 1615,
	1418, 216, 287, 194, 234, 1511, 1584, 1466, 187, 1596,
	1567, 1630, 316, 334, 159, 255, 335, 354, 174, 329,
	256, 262, 184, 186, 185, 170, 311, 333, 179, 189,
	1626, 1609, 1632, 1459, 1438, 1450, 1439, 1480, 1659, 226,
	217, 1633, 1631, 348, 143, 307, 306, 1496, 225, 1612,
	144, 136, 294, 145, 232, 162, 1637, 357, 173, 236,
	330, 1829, 211, 268, 193, 1580, 277, 1478, 156, 290,
	252, 253, 251, 254, 214, 140, 146, 1608, 292, 309,
	332, 175, 323, 138, 139, 141, 148, 300, 149, 150,
	1665, 246, 204, 207, 219, 229, 1579, 296, 324, 349,
	1570, 171, 164, 326, 342, 180, 308, 310, 356, 1604,
	166, 1653, 1627, 1560, 1514, 1520, 1420, 0, 165, 1600,
	1470, 1485, 1458, 1574, 1457, 213, 1591, 340, 341, 192,
	358, 1432, 1673, 167, 1433, 1672, 265, 272, 264, 1676,
	336, 1654, 1561, 1545, 1543, 1425, 1652, 1559, 1544, 237,
	206, 221, 285, 243, 286, 222, 260, 259, 261, 244,
	1547, 0, 163, 0, 321, 1663, 1688, 325, 177, 1452,
	1619, 331, 218, 291, 178, 212, 205, 284, 263, 172,
	224, 319, 235, 242, 1595, 1685, 276, 299, 181, 346,
	318, 201, 1448, 1451, 1446, 1449, 1447, 1551, 1552, 1668,
	1669, 1670, 1607, 1440, 0, 1645, 1646, 0, 1538, 1656,
	1426, 0, 1623, 151, 152, 1587, 1683, 1498, 188, 1417,
	1422, 1423, 1424, 1441, 1528, 1529, 1557, 1564, 1641, 1640,
	1639, 1642, 1647, 1677, 1675, 1678, 1442, 1463, 1484, 1534,
	1535, 1537, 1571, 1572, 1617, 1590, 1599, 1530, 281, 1556,
	158, 168, 239, 1684, 293, 210, 1408, 1416, 1445, 1453,
	1454, 1455, 1456, 1461, 1468, 0, 1475, 1483, 1486, 1487,
	1495, 1501, 1502, 1503, 1504, 1513, 1515, 1516, 1517, 1518,
	1519, 1523, 1524, 1526, 1539, 1540, 1546, 1554, 1555, 1563,
	1565, 0, 1594, 1597, 1606, 1611, 1614, 1620, 1622, 1629,
	1634, 1636, 1674, 1682, 1687, 347, 196, 1536, 1562, 1601,
	169, 176, 183, 195, 203, 209, 220, 223, 227, 228,
	230, 233, 245, 247, 248, 249, 250, 266, 267, 270,
	271, 274, 275, 278, 279, 280, 282, 283, 289, 147,
	295, 301, 302, 303, 304, 305, 312, 313, 314, 315,
	322, 338, 339, 352, 353, 1648, 1509, 155, 0, 0,
	161, 0, 0, 0, 0, 0, 1494, 160, 1643, 1679,
	1575, 1589, 1660, 1621, 328, 1512, 1664, 1462, 1491, 1681,
	1497, 1500, 1583, 1427, 1550, 273, 1488, 1428, 1410, 1467,
	1414, 1479, 1415, 1464, 199, 1460, 1624, 1553, 1662, 1532,
	1576, 1586, 198, 190, 1542, 1541, 1650, 1477, 1476, 1581,
	1638, 1661, 1531, 0, 1671, 240, 1635, 0, 350, 320,
	257, 0, 0, 1527, 1644, 1548, 1613, 1510, 1585, 1444,
	1568, 1666, 1489, 1577, 1667, 0, 0, 0, 0, 478,
	0, 0, 0, 0, 0, 0, 0, 0, 137, 0,
	1573, 1658, 1482, 0, 1522, 1582, 1686, 1413, 1569, 0,
	1419, 1430, 1680, 1651, 1473, 1474, 202, 0, 0, 0,
	0, 0, 0, 0, 1525, 1549, 1603, 1507, 345, 1588,
	1598, 1616, 1499, 288, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 1469, 0, 1566, 0, 0, 0, 1435,
	1421, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1521, 0, 0, 0, 1443, 1411, 1471,
	1605, 1412, 1409, 258, 1431, 1618, 1649, 1508, 231, 153,
	1655, 1506, 1505, 1592, 1436, 1628, 1492, 238, 1434, 154,
	1429, 1437, 1490, 269, 1602, 1610, 142, 157, 1625, 1465,
	1481, 191, 0, 298, 1578, 344, 1830, 1558, 297, 241,
	337, 1593, 1657, 343, 1493, 327, 351, 355, 208, 1533,
	182, 317, 200, 197, 1472, 1615, 1418, 216, 287, 194,
	234, 1511, 1584, 1466, 187, 1596, 1567, 1630, 316, 334,
	159, 255, 335, 354, 174, 329, 256, 262, 184, 186,
	185, 170, 311, 333, 179, 189, 1626, 1609, 1632, 1459,
	1438, 1450, 1439, 1480, 1659, 226, 217, 1633, 1631, 348,
	143, 307, 306, 1496, 225, 1612, 144, 136, 294, 145,
	232, 162, 1637, 357, 173, 236, 330, 1829, 211, 268,
	193, 1580, 277, 1478, 156, 290, 252, 253, 251, 254,
	214, 140, 146, 1608, 292, 309, 332, 175, 323, 138,
	139, 141, 148, 300, 149, 150, 1665, 246, 204, 207,
	219, 229, 1579, 296, 324, 349, 1570, 171, 164, 326,
	342, 180, 308, 310, 356, 1604, 166, 1653, 1627, 1560,
	1514, 1520, 1420, 0, 165, 1600, 1470, 1485, 1458, 1574,
	1457, 213, 1591, 340, 341, 192, 358, 1432, 1673, 167,
	1433, 1672, 265, 272, 264, 1676, 336, 1654, 1561, 1545,
	1543, 1425, 1652, 1559, 1544, 237, 206, 221, 285, 243,
	286, 222, 260, 259, 261, 244, 1547, 0, 163, 0,
	321, 1663, 1688, 325, 177, 1452, 1619, 331, 218, 291,
	178, 212, 205, 284, 263, 172, 224, 319, 235, 242,
	1595, 1685, 276, 299, 181, 346, 318, 201, 1448, 1451,
	1446, 1449, 1447, 1551, 1552, 1668, 1669, 1670, 1607, 1440,
	0, 1645, 1646, 0, 1538, 1656, 1426, 0, 1623, 151,
	152, 1587, 1683, 1498, 188, 1417, 1422, 1423, 1424, 1441,
	1528, 1529, 1557, 1564, 1641, 1640, 1639, 1642, 1647, 1677,
	1675, 1678, 1442, 1463, 1484, 1534, 1535, 1537, 1571, 1572,
	1617, 1590, 1599, 1530, 281, 1556, 158, 168, 239, 1684,
	293, 210, 1408, 1416, 1445, 1453, 1454, 1455, 1456, 1461,
	1468, 0, 1475, 1483, 1486, 1487, 1495, 1501, 1502, 1503,
	1504, 1513, 1515, 1516, 1517, 1518, 1519, 1523, 1524, 1526,
	1539, 1540, 1546, 1554, 1555, 1563, 1565, 0, 1594, 1597,
	1606, 1611, 1614, 1620, 1622, 1629, 1634, 1636, 1674, 1682,
	1687, 347, 196, 1536, 1562, 1601, 169, 176, 183, 195,
	203, 209, 220, 223, 227, 228, 230, 233, 245, 247,
	248, 249, 250, 266, 267, 270, 271, 274, 275, 278,
	279, 280, 282, 283, 289, 147, 295, 301, 302, 303,
	304, 305, 312, 313, 314, 315, 322, 338, 339, 352,
	353, 1648, 1509, 155, 0, 0, 161, 0, 0, 0,
	0, 0, 1494, 160, 1643, 1679, 1575, 1589, 809, 0,
	328, 875, 813, 656, 679, 822, 685, 687, 750, 632,
	727, 273, 676, 633, 0, 0, 624, 870, 625, 657,
	199, 868, 783, 728, 811, 713, 743, 753, 198, 190,
	720, 719, 800, 668, 667, 748, 796, 810, 0, 0,
	911, 240, 0, 933, 350, 320, 257, 936, 935, 711,
	0, 882, 897, 696, 752, 644, 739, 815, 677, 744,
	816, 0, 0, 0, 0, 478, 0, 0, 0, 0,
	0, 0, 0, 0, 137, 0, 892, 907, 871, 934,
	706, 749, 827, 623, 889, 0, 628, 858, 0, 801,
	664, 665, 202, 0, 0, 0, 0, 0, 0, 0,
	709, 726, 768, 693, 345, 755, 764, 778, 686, 288,
	215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 888, 0, 0, 0, 638, 854, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 876,
	0, 0, 0, 643, 621, 662, 770, 622, 620, 258,
	635, 899, 799, 694, 231, 153, 805, 692, 874, 758,
	639, 787, 680, 238, 637, 154, 634, 640, 678, 269,
	767, 773, 142, 157, 784, 658, 671, 191, 2546, 298,
	745, 344, 2548, 731, 297, 241, 337, 759, 807, 343,
	681, 327, 351, 355, 208, 714, 182, 317, 200, 197,
	663, 777, 627, 216, 287, 194, 234, 697, 751, 659,
	187, 762, 738, 789, 316, 334, 159, 255, 335, 354,
	174, 329, 256, 262, 184, 186, 185, 170, 311, 333,
	179, 189, 785, 772, 791, 654, 641, 646, 642, 670,
	808, 226, 217, 792, 790, 348, 143, 307, 306, 684,
	225, 775, 144, 136, 294, 145, 232, 162, 795, 357,
	173, 236, 330, 2547, 211, 268, 193, 747, 277, 669,
	156, 290, 252, 253, 251, 254, 214, 140, 146, 771,
	292, 309, 332, 175, 323, 138, 139, 141, 148, 300,
	149, 150, 814, 246, 204, 207, 219, 229, 746, 296,
	324, 349, 740, 171, 164, 326, 342, 180, 308, 310,
	356, 769, 166, 803, 786, 733, 699, 705, 629, 0,
	165, 765, 661, 673, 653, 741, 652, 213, 757, 340,
	341, 192, 358, 859, 818, 167, 636, 817, 265, 272,
	264, 820, 336, 804, 734, 723, 721, 630, 802, 732,
	722, 237, 206, 221, 285, 243, 286, 222, 260, 259,
	261, 244, 725, 0, 163, 0, 321, 812, 829, 325,
	177, 647, 779, 331, 218, 291, 178, 212, 205, 284,
	263, 172, 224, 319, 235, 242, 761, 826, 276, 299,
	181, 346, 318, 201, 865, 867, 863, 866, 864, 883,
	884, 908, 909, 910, 896, 860, 0, 904, 905, 0,
	716, 806, 631, 0, 782, 151, 152, 754, 824, 873,
	188, 2549, 855, 856, 857, 2550, 877, 878, 2551, 2552,
	902, 901, 900, 903, 2553, 913, 912, 914, 862, 869,
	872, 879, 880, 881, 890, 891, 898, 893, 894, 712,
	281, 885, 158, 168, 239, 825, 293, 210, 619, 626,
	645, 648, 649, 650, 651, 655, 660, 0, 666, 672,
	674, 675, 683, 688, 689, 690, 691, 698, 700, 701,
	702, 703, 704, 707, 708, 710, 717, 718, 724, 729,
	730, 736, 737, 0, 760, 763, 895, 774, 776, 780,
	781, 788, 793, 794, 819, 823, 828, 347, 196, 715,
	735, 766, 169, 176, 183, 195, 203, 209, 220, 223,
	227, 228, 230, 233, 245, 247, 248, 249, 250, 266,
	267, 270, 271, 274, 275, 278, 279, 280, 282, 283,
	289, 147, 295, 301, 302, 303, 304, 305, 312, 313,
	314, 315, 322, 338, 339, 352, 353, 798, 695, 155,
	0, 0, 161, 0, 0, 0, 0, 0, 682, 160,
	797, 821, 742, 756, 809, 0, 328, 875, 813, 656,
	679, 822, 685, 687, 750, 632, 727, 273, 676, 633,
	0, 0, 624, 870, 625, 657, 199, 868, 783, 728,
	811, 713, 743, 753, 198, 190, 720, 719, 800, 668,
	667, 748, 796, 810, 0, 0, 911, 240, 0, 0,
	350, 320, 257, 0, 0, 711, 0, 882, 897, 696,
	752, 644, 739, 815, 677, 744, 816, 0, 0, 0,
	0, 478, 0, 0, 0, 0, 0, 0, 0, 0,
	137, 0, 892, 907, 871, 0, 706, 749, 827, 623,
	889, 0, 628, 858, 0, 801, 664, 665, 202, 0,
	0, 0, 0, 0, 0, 0, 709, 726, 768, 693,
	345, 755, 764, 778, 686, 288, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 888, 0, 0,
	0, 638, 854, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 876, 0, 0, 0, 643,
	621, 662, 770, 622, 620, 258, 635, 899, 799, 694,
	231, 153, 805, 692, 874, 758, 639, 787, 680, 238,
	637, 154, 634, 640, 678, 269, 767, 773, 142, 157,
	784, 658, 671, 191, 0, 298, 745, 344, 852, 731,
	297, 241, 337, 759, 807, 343, 681, 327, 351, 355,
	208, 714, 182, 317, 200, 197, 663, 777, 627, 216,
	287, 194, 234, 697, 751, 659, 187, 762, 738, 789,
	316, 334, 159, 255, 335, 354, 174, 329, 256, 262,
	184, 186, 185, 170, 311, 333, 179, 189, 785, 772,
	791, 654, 641, 646, 642, 670, 808, 226, 217, 792,
	790, 348, 143, 307, 306, 684, 225, 775, 144, 136,
	294, 145, 232, 162, 795, 357, 173, 236, 330, 851,
	211, 268, 193, 747, 277, 669, 156, 290, 252, 253,
	251, 254, 214, 140, 146, 771, 292, 309, 332, 175,
	323, 138, 139, 141, 148, 300, 149, 150, 814, 246,
	204, 207, 219, 229, 746, 296, 324, 349, 740, 171,
	164, 326, 342, 180, 308, 310, 356, 769, 166, 803,
	786, 733, 699, 705, 629, 0, 165, 765, 661, 673,
	653, 741, 652, 213, 757, 340, 341, 192, 358, 859,
	818, 167, 636, 817, 265, 272, 264, 820, 336, 804,
	734, 723, 721, 630, 802, 732, 722, 237, 206, 221,
	285, 243, 286, 222, 260, 259, 261, 244, 725, 0,
	163, 0, 321, 812, 829, 325, 177, 647, 779, 331,
	218, 291, 178, 212, 205, 284, 263, 172, 224, 319,
	235, 242, 761, 826, 276, 299, 181, 346, 318, 201,
	865, 867, 863, 866, 864, 883, 884, 908, 909, 910,
	896, 860, 0, 904, 905, 0, 716, 806, 631, 0,
	782, 151, 152, 754, 824, 873, 188, 853, 855, 856,
	857, 861, 877, 878, 886, 887, 902, 901, 900, 903,
	906, 913, 912, 914, 862, 869, 872, 879, 880, 881,
	890, 891, 898, 893, 894, 712, 281, 885, 158, 168,
	239, 825, 293, 210, 619, 626, 645, 648, 649, 650,
	651, 655, 660, 0, 666, 672, 674, 675, 683, 688,
	689, 690, 691, 698, 700, 701, 702, 703, 704, 707,
	708, 710, 717, 718, 724, 729, 730, 736, 737, 0,
	760, 763, 895, 774, 776, 780, 781, 788, 793, 794,
	819, 823, 828, 347, 196, 715, 735, 766, 169, 176,
	183, 195, 203, 209, 220, 223, 227, 228, 230, 233,
	245, 247, 248, 249, 250, 266, 267, 270, 271, 274,
	275, 278, 279, 280, 282, 283, 289, 147, 295, 301,
	302, 303, 304, 305, 312, 313, 314, 315, 322, 338,
	339, 352, 353, 798, 695, 155, 0, 0, 161, 0,
	0, 0, 0, 0, 682, 160, 797, 821, 742, 756,
	809, 0, 328, 875, 813, 656, 679, 822, 685, 687,
	750, 632, 727, 273, 676, 633, 0, 0, 624, 870,
	625, 657, 199, 868, 783, 728, 811, 713, 743, 753,
	198, 190, 720, 719, 800, 668, 667, 748, 796, 810,
	0, 0, 911, 240, 0, 0, 350, 320, 257, 0,
	0, 711, 0, 882, 897, 696, 752, 644, 739, 815,
	677, 744, 816, 0, 0, 0, 0, 478, 0, 0,
	0, 0, 0, 0, 0, 0, 137, 0, 892, 907,
	871, 0, 706, 749, 827, 623, 889, 0, 628, 858,
	0, 801, 664, 665, 202, 0, 0, 0, 0, 0,
	0, 0, 709, 726, 768, 693, 345, 755, 764, 778,
	686, 288, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 888, 0, 0, 0, 638, 854, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 876, 0, 0, 0, 643, 621, 662, 770, 622,
	620, 258, 635, 899, 799, 694, 231, 153, 805, 692,
	874, 758, 639, 787, 680, 238, 637, 154, 634, 640,
	678, 269, 767, 773, 142, 157, 784, 658, 671, 191,
	0, 298, 745, 344, 852, 731, 297, 241, 337, 759,
	807, 343, 681, 327, 351, 355, 208, 714, 182, 317,
	200, 197, 663, 777, 627, 216, 287, 194, 234, 697,
	751, 659, 187, 762, 738, 789, 316, 334, 159, 255,
	335, 354, 174, 329, 256, 262, 184, 186, 185, 170,
	311, 333, 179, 189, 785, 772, 791, 654, 641, 646,
	642, 670, 808, 226, 217, 792, 790, 348, 143, 307,
	306, 684, 225, 775, 144, 136, 294, 145, 232, 162,
	795, 357, 173, 236, 330, 851, 211, 268, 193, 747,
	277, 669, 156, 290, 252, 253, 251, 254, 214, 140,
	146, 771, 292, 309, 332, 175, 323, 138, 139, 141,
	148, 300, 149, 150, 814, 246, 204, 207, 219, 229,
	746, 296, 324, 349, 740, 171, 164, 326, 342, 180,
	308, 310, 356, 769, 166, 803, 786, 733, 699, 705,
	629, 0, 165, 765, 661, 673, 653, 741, 652, 213,
	757, 340, 341, 192, 358, 859, 818, 167, 847, 817,
	265, 272, 264, 820, 336, 804, 734, 723, 721, 630,
	802, 732, 722, 237, 206, 221, 285, 243, 286, 222,
	260, 259, 261, 843, 725, 0, 163, 0, 321, 812,
	829, 325, 177, 647, 779, 331, 218, 291, 178, 212,
	205, 284, 848, 846, 837, 838, 235, 242, 761, 826,
	276, 299, 181, 346, 318, 201, 865, 867, 863, 866,
	864, 883, 884, 908, 909, 910, 896, 860, 0, 904,
	905, 0, 716, 806, 631, 0, 782, 151, 152, 754,
	824, 873, 188, 853, 855, 856, 857, 861, 877, 878,
	886, 887, 902, 901, 900, 903, 906, 913, 912, 914,
	862, 869, 872, 879, 880, 881, 890, 891, 898, 893,
	894, 712, 281, 885, 158, 168, 239, 825, 293, 210,
	619, 626, 645, 648, 649, 650, 651, 655, 660, 0,
	666, 672, 674, 675, 683, 688, 689, 690, 691, 698,
	700, 701, 702, 703, 704, 707, 708, 710, 717, 718,
	724, 729, 730, 736, 737, 0, 760, 763, 895, 774,
	776, 780, 781, 788, 793, 794, 819, 823, 828, 347,
	196, 715, 735, 766, 169, 176, 183, 195, 203, 209,
	220, 223, 227, 228, 230, 233, 245, 247, 248, 249,
	250, 266, 267, 270, 271, 274, 275, 278, 279, 280,
	844, 845, 289, 147, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 798,
	695, 155, 0, 0, 161, 0, 0, 0, 0, 0,
	682, 160, 797, 821, 742, 756, 809, 0, 328, 875,
	813, 656, 679, 822, 685, 687, 750, 632, 727, 273,
	676, 633, 0, 0, 624, 870, 625, 657, 199, 868,
	783, 728, 811, 713, 743, 753, 198, 190, 720, 719,
	800, 668, 667, 748, 796, 810, 0, 0, 911, 240,
	0, 0, 350, 320, 257, 0, 0, 711, 0, 882,
	897, 696, 752, 644, 739, 815, 677, 744, 816, 0,
	0, 0, 0, 478, 0, 0, 0, 0, 0, 0,
	0, 0, 137, 0, 892, 907, 871, 0, 706, 749,
	827, 623, 889, 0, 628, 858, 0, 801, 664, 665,
	202, 0, 0, 0, 0, 0, 0, 0, 709, 726,
	768, 693, 345, 755, 764, 778, 686, 288, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 888,
	0, 0, 0, 638, 854, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 876, 0, 0,
	0, 643, 621, 662, 770, 622, 620, 258, 635, 899,
	799, 694, 231, 153, 805, 692, 874, 758, 639, 787,
	680, 238, 637, 154, 634, 640, 678, 269, 767, 773,
	142, 157, 784, 658, 671, 191, 0, 298, 745, 344,
	852, 731, 297, 241, 337, 759, 807, 343, 681, 327,
	351, 355, 208, 714, 182, 317, 200, 197, 663, 777,
	627, 216, 287, 194, 234, 697, 751, 659, 187, 762,
	738, 789, 316, 334, 159, 255, 335, 354, 174, 329,
	256, 262, 184, 186, 185, 170, 311, 333, 179, 189,
	785, 772, 791, 654, 641, 646, 642, 670, 808, 226,
	217, 792, 790, 348, 143, 307, 306, 684, 225, 775,
	144, 136, 294, 145, 232, 162, 795, 357, 173, 236,
	330, 851, 211, 268, 193, 747, 277, 669, 156, 290,
	252, 253, 251, 254, 214, 140, 146, 771, 292, 309,
	332, 175, 323, 138, 139, 141, 148, 300, 149, 150,
	814, 246, 204, 207, 219, 229, 746, 296, 324, 349,
	740, 171, 164, 326, 1283, 180, 308, 310, 356, 769,
	166, 803, 786, 733, 699, 705, 629, 0, 165, 765,
	661, 673, 653, 741, 652, 213, 757, 340, 341, 192,
	358, 859, 818, 167, 636, 817, 265, 272, 264, 820,
	336, 804, 734, 723, 721, 630, 802, 732, 722, 237,
	206, 221, 285, 243, 286, 222, 260, 259, 261, 244,
	725, 0, 163, 0, 321, 812, 829, 325, 177, 647,
	779, 331, 218, 291, 178, 212, 205, 284, 263, 172,
	224, 319, 235, 242, 761, 826, 276, 299, 181, 346,
	318, 201, 865, 867, 863, 866, 864, 883, 884, 908,
	909, 910, 896, 860, 0, 904, 905, 0, 716, 806,
	631, 0, 782, 151, 152, 754, 824, 873, 188, 853,
	855, 856, 857, 861, 877, 878, 886, 887, 902, 901,
	900, 903, 906, 913, 912, 914, 862, 869, 872, 879,
	880, 881, 890, 891, 898, 893, 894, 712, 281, 885,
	158, 168, 239, 825, 293, 210, 619, 626, 645, 648,
	649, 650, 651, 655, 660, 0, 666, 672, 674, 675,
	683, 688, 689, 690, 691, 698, 700, 701, 702, 703,
	704, 707, 708, 710, 717, 718, 724, 729, 730, 736,
	737, 0, 760, 763, 895, 774, 776, 780, 781, 788,
	793, 794, 819, 823, 828, 347, 196, 715, 735, 766,
	169, 176, 183, 195, 203, 209, 220, 223, 227, 228,
	230, 233, 245, 247, 248, 249, 250, 266, 267, 270,
	271, 274, 275, 278, 279, 280, 282, 283, 289, 147,
	295, 301, 302, 303, 304, 305, 312, 313, 314, 315,
	322, 338, 339, 352, 353, 798, 695, 155, 0, 0,
	161, 0, 0, 0, 0, 0, 682, 160, 797, 821,
	742, 756, 809, 0, 328, 875, 813, 656, 679, 822,
	685, 687, 750, 632, 727, 273, 676, 633, 0, 0,
	624, 870, 625, 657, 199, 868, 783, 728, 811, 713,
	743, 753, 198, 190, 720, 719, 800, 668, 667, 748,
	796, 810, 0, 0, 911, 240, 0, 0, 350, 320,
	257, 0, 0, 711, 0, 882, 897, 696, 752, 644,
	739, 815, 677, 744, 816, 0, 0, 0, 0, 478,
	0, 0, 0, 0, 0, 0, 0, 0, 137, 0,
	892, 907, 871, 0, 706, 749, 827, 623, 889, 0,
	628, 858, 0, 801, 664, 665, 202, 0, 0, 0,
	0, 0, 0, 0, 709, 726, 768, 693, 345, 755,
	764, 778, 686, 288, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 888, 0, 0, 0, 638,
	854, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 876, 0, 0, 0, 643, 621, 662,
	770, 622, 620, 258, 635, 899, 799, 694, 231, 153,
	805, 692, 874, 758, 639, 787, 680, 238, 637, 154,
	634, 640, 678, 269, 767, 773, 142, 157, 784, 658,
	671, 191, 0, 298, 745, 344, 852, 731, 297, 241,
	337, 759, 807, 343, 681, 327, 351, 355, 208, 714,
	182, 317, 200, 197, 663, 777, 627, 216, 287, 194,
	234, 697, 751, 659, 187, 762, 738, 789, 316, 334,
	159, 255, 335, 354, 174, 329, 256, 262, 184, 186,
	185, 170, 311, 333, 179, 189, 785, 772, 791, 654,
	641, 646, 642, 670, 808, 226, 217, 792, 790, 348,
	143, 307, 306, 684, 225, 775, 144, 136, 294, 145,
	232, 162, 795, 357, 173, 236, 330, 851, 211, 268,
	193, 747, 277, 669, 156, 290, 252, 253, 251, 254,
	214, 140, 146, 771, 292, 309, 332, 175, 323, 138,
	139, 141, 148, 300, 149, 150, 814, 246, 204, 207,
	219, 229, 746, 296, 324, 349, 740, 171, 164, 326,
	834, 180, 308, 310, 356, 769, 166, 803, 786, 733,
	699, 705, 629, 0, 165, 765, 661, 673, 653, 741,
	652, 213, 757, 340, 341, 192, 358, 859, 818, 167,
	847, 817, 265, 272, 264, 820, 336, 804, 734, 723,
	721, 630, 802, 732, 722, 237, 206, 221, 285, 243,
	286, 222, 260, 259, 261, 843, 725, 0, 163, 0,
	321, 812, 829, 325, 177, 647, 779, 331, 218, 291,
	178, 212, 205, 284, 848, 846, 837, 838, 235, 242,
	761, 826, 276, 299, 181, 346, 318, 201, 865, 867,
	863, 866, 864, 883, 884, 908, 909, 910, 896, 860,
	0, 904, 905, 0, 716, 806, 631, 0, 782, 151,
	152, 754, 824, 873, 188, 853, 855, 856, 857, 861,
	877, 878, 886, 887, 902, 901, 900, 903, 906, 913,
	912, 914, 862, 869, 872, 879, 880, 881, 890, 891,
	898, 893, 894, 712, 281, 885, 158, 168, 239, 825,
	293, 210, 619, 626, 645, 648, 649, 650, 651, 655,
	660, 0, 666, 672, 674, 675, 683, 688, 689, 690,
	691, 698, 700, 701, 702, 703, 704, 707, 708, 710,
	717, 718, 724, 729, 730, 736, 737, 0, 760, 763,
	895, 774, 776, 780, 781, 788, 793, 794, 819, 823,
	828, 347, 196, 715, 735, 766, 169, 176, 183, 195,
	203, 209, 220, 223, 227, 228, 230, 233, 245, 247,
	248, 249, 250, 266, 267, 270, 271, 274, 275, 278,
	279, 280, 844, 845, 289, 147, 295, 301, 302, 303,
	304, 305, 312, 313, 314, 315, 322, 338, 339, 352,
	353, 798, 695, 155, 0, 0, 161, 0, 0, 0,
	0, 0, 682, 160, 797, 821, 742, 756, 1660, 1621,
	328, 1512, 1664, 1462, 1491, 1681, 1497, 1500, 1583, 1427,
	1550, 273, 1488, 1428, 1410, 1467, 1414, 1479, 1415, 1464,
	199, 1460, 1624, 1553, 1662, 1532, 1576, 1586, 198, 190,
	1542, 1541, 1650, 1477, 1476, 1581, 1638, 1661, 1531, 0,
	1671, 240, 1635, 0, 350, 320, 257, 0, 0, 1527,
	1644, 1548, 1613, 1510, 1585, 1444, 1568, 1666, 1489, 1577,
	1667, 0, 0, 0, 0, 929, 0, 1986, 1987, 0,
	0, 0, 0, 0, 1988, 0, 1573, 1658, 1482, 0,
	1522, 1582, 1686, 1413, 1569, 0, 1419, 1430, 1680, 1651,
	1473, 1474, 202, 2307, 0, 0, 0, 0, 0, 0,
	1525, 1549, 1603, 1507, 345, 1588, 1598, 1616, 1499, 288,
	215, 0, 0, 0, 0, 0, 0, 0, 0, 1469,
	0, 1566, 0, 0, 0, 1435, 1421, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1521,
	0, 0, 0, 1443, 1411, 1471, 1605, 1412, 1409, 258,
	1431, 1618, 1649, 1508, 231, 0, 1655, 1506, 1505, 1592,
	1436, 1628, 1492, 238, 1434, 154, 1429, 1437, 1490, 269,
	1602, 1610, 0, 157, 1625, 1465, 1481, 191, 0, 298,
	1578, 344, 0, 1558, 297, 241, 337, 1593, 1657, 343,
	1493, 327, 351, 355, 208, 1533, 182, 317, 200, 197,
	1472, 1615, 1418, 216, 287, 194, 234, 1511, 1584, 1466,
	187, 1596, 1567, 1630, 316, 334, 159, 255, 335, 354,
	174, 329, 256, 262, 184, 186, 185, 170, 311, 333,
	179, 189, 1626, 1609, 1632, 1459, 1438, 1450, 1439, 1480,
	1659, 226, 217, 1633, 1631, 348, 0, 307, 306, 1496,
	225, 1612, 0, 0, 294, 1990, 232, 162, 1637, 357,
	173, 236, 330, 0, 211, 268, 193, 1580, 277, 1478,
	156, 290, 252, 253, 251, 254, 214, 0, 0, 1608,
	292, 309, 332, 175, 323, 1989, 0, 0, 0, 300,
	0, 0, 1665, 246, 204, 207, 219, 229, 1579, 296,
	324, 349, 1570, 171, 164, 326, 342, 180, 308, 310,
	356, 1604, 166, 1653, 1627, 1560, 1514, 1520, 1420, 0,
	165, 1600, 1470, 1485, 1458, 1574, 1457, 213, 1591, 340,
	341, 192, 358, 1432, 1673, 167, 1433, 1672, 265, 272,
	264, 1676, 336, 1654, 1561, 1545, 1543, 1425, 1652, 1559,
	1544, 237, 206, 221, 285, 243, 286, 222, 260, 259,
	261, 244, 1547, 0, 163, 0, 321, 1663, 1688, 325,
	177, 1452, 1619, 331, 218, 291, 178, 212, 205, 284,
	263, 172, 224, 319, 235, 242, 1595, 1685, 276, 299,
	181, 346, 318, 201, 1448, 1451, 1446, 1449, 1447, 1551,
	1552, 1668, 1669, 1670, 1607, 1440, 0, 1645, 1646, 0,
	1538, 1656, 1426, 0, 1623, 0, 0, 1587, 1683, 1498,
	188, 1417, 1422, 1423, 1424, 1441, 1528, 1529, 1557, 1564,
	1641, 1640, 1639, 1642, 1647, 1677, 1675, 1678, 1442, 1463,
	1484, 1534, 1535, 1537, 1571, 1572, 1617, 1590, 1599, 1530,
	281, 1556, 158, 168, 239, 1684, 293, 210, 1408, 1416,
	1445, 1453, 1454, 1455, 1456, 1461, 1468, 0, 1475, 1483,
	1486, 1487, 1495, 1501, 1502, 1503, 1504, 1513, 1515, 1516,
	1517, 1518, 1519, 1523, 1524, 1526, 1539, 1540, 1546, 1554,
	1555, 1563, 1565, 0, 1594, 1597, 1606, 1611, 1614, 1620,
	1622, 1629, 1634, 1636, 1674, 1682, 1687, 347, 196, 1536,
	1562, 1601, 169, 176, 183, 195, 203, 209, 220, 223,
	227, 228, 230, 233, 245, 247, 248, 249, 250, 266,
	267, 270, 271, 274, 275, 278, 279, 280, 282, 283,
	289, 0, 295, 301, 302, 303, 304, 305, 312, 313,
	314, 315, 322, 338, 339, 352, 353, 1648, 1509, 155,
	0, 0, 161, 0, 0, 0, 0, 0, 1494, 160,
	1643, 1679, 1575, 1589, 1660, 1621, 328, 1512, 1664, 1462,
	1491, 1681, 1497, 1500, 1583, 1427, 1550, 273, 1488, 1428,
	1410, 1467, 1414, 1479, 1415, 1464, 199, 1460, 1624, 1553,
	1662, 1532, 1576, 1586, 198, 190, 1542, 1541, 1650, 1477,
	1476, 1581, 1638, 1661, 1531, 0, 1671, 240, 1635, 0,
	350, 320, 257, 0, 0, 1527, 1644, 1548, 1613, 1510,
	1585, 1444, 1568, 1666, 1489, 1577, 1667, 0, 0, 0,
	0, 929, 0, 1986, 1987, 0, 0, 0, 0, 0,
	1988, 0, 1573, 1658, 1482, 0, 1522, 1582, 1686, 1413,
	1569, 0, 1419, 1430, 1680, 1651, 1473, 1474, 202, 0,
	0, 0, 0, 0, 0, 0, 1525, 1549, 1603, 1507,
	345, 1588, 1598, 1616, 1499, 288, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 1469, 0, 1566, 0, 0,
	0, 1435, 1421, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1521, 0, 0, 0, 1443,
	1411, 1471, 1605, 1412, 1409, 258, 1431, 1618, 1649, 1508,
	231, 0, 1655, 1506, 1505, 1592, 1436, 1628, 1492, 238,
	1434, 154, 1429, 1437, 1490, 269, 1602, 1610, 0, 157,
	1625, 1465, 1481, 191, 0, 298, 1578, 344, 0, 1558,
	297, 241, 337, 1593, 1657, 343, 1493, 327, 351, 355,
	208, 1533, 182, 317, 200, 197, 1472, 1615, 1418, 216,
	287, 194, 234, 1511, 1584, 1466, 187, 1596, 1567, 1630,
	316, 334, 159, 255, 335, 354, 174, 329, 256, 262,
	184, 186, 185, 170, 311, 333, 179, 189, 1626, 1609,
	1632, 1459, 1438, 1450, 1439, 1480, 1659, 226, 217, 1633,
	1631, 348, 0, 307, 306, 1496, 225, 1612, 0, 0,
	294, 1990, 232, 162, 1637, 357, 173, 236, 330, 0,
	211, 268, 193, 1580, 277, 1478, 156, 290, 252, 253,
	251, 254, 214, 0, 0, 1608, 292, 309, 332, 175,
	323, 1989, 0, 0, 0, 300, 0, 0, 1665, 246,
	204, 207, 219, 229, 1579, 296, 324, 349, 1570, 171,
	164, 326, 342, 180, 308, 310, 356, 1604, 166, 1653,
	1627, 1560, 1514, 1520, 1420, 0, 165, 1600, 1470, 1485,
	1458, 1574, 1457, 213, 1591, 340, 341, 192, 358, 1432,
	1673, 167, 1433, 1672, 265, 272, 264, 1676, 336, 1654,
	1561, 1545, 1543, 1425, 1652, 1559, 1544, 237, 206, 221,
	285, 243, 286, 222, 260, 259, 261, 244, 1547, 0,
	163, 0, 321, 1663, 1688, 325, 177, 1452, 1619, 331,
	218, 291, 178, 212, 205, 284, 263, 172, 224, 319,
	235, 242, 1595, 1685, 276, 299, 181, 346, 318, 201,
	1448, 1451, 1446, 1449, 1447, 1551, 1552, 1668, 1669, 1670,
	1607, 1440, 0, 1645, 1646, 0, 1538, 1656, 1426, 0,
	1623, 0, 0, 1587, 1683, 1498, 188, 1417, 1422, 1423,
	1424, 1441, 1528, 1529, 1557, 1564, 1641, 1640, 1639, 1642,
	1647, 1677, 1675, 1678, 1442, 1463, 1484, 1534, 1535, 1537,
	1571, 1572, 1617, 1590, 1599, 1530, 281, 1556, 158, 168,
	239, 1684, 293, 210, 1408, 1416, 1445, 1453, 1454, 1455,
	1456, 1461, 1468, 0, 1475, 1483, 1486, 1487, 1495, 1501,
	1502, 1503, 1504, 1513, 1515, 1516, 1517, 1518, 1519, 1523,
	1524, 1526, 1539, 1540, 1546, 1554, 1555, 1563, 1565, 0,
	1594, 1597, 1606, 1611, 1614, 1620, 1622, 1629, 1634, 1636,
	1674, 1682, 1687, 347, 196, 1536, 1562, 1601, 169, 176,
	183, 195, 203, 209, 220, 223, 227, 228, 230, 233,
	245, 247, 248, 249, 250, 266, 267, 270, 271, 274,
	275, 278, 279, 280, 282, 283, 289, 0, 295, 301,
	302, 303, 304, 305, 312, 313, 314, 315, 322, 338,
	339, 352, 353, 1648, 1509, 155, 0, 0, 161, 0,
	0, 0, 0, 0, 1494, 160, 1643, 1679, 1575, 1589,
	1660, 1621, 328, 1512, 1664, 1462, 1491, 1681, 1497, 1500,
	1583, 1427, 1550, 273, 1488, 1428, 1410, 1467, 1414, 1479,
	1415, 1464, 199, 1460, 1624, 1553, 1662, 1532, 1576, 1586,
	198, 190, 1542, 1541, 1650, 1477, 1476, 1581, 1638, 1661,
	1531, 0, 1671, 240, 1635, 0, 350, 320, 257, 0,
	0, 1527, 1644, 1548, 1613, 1510, 1585, 1444, 1568, 1666,
	1489, 1577, 1667, 0, 0, 0, 0, 929, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1573, 1658,
	1482, 0, 1522, 1582, 1686, 1413, 1569, 0, 1419, 1430,
	1680, 1651, 1473, 1474, 202, 0, 0, 0, 0, 0,
	0, 0, 1525, 1549, 1603, 1507, 345, 1588, 1598, 1616,
	1499, 288, 215, 0, 0, 0, 0, 0, 0, 2913,
	0, 1469, 0, 1566, 0, 0, 0, 1435, 1421, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1521, 0, 0, 0, 1443, 1411, 1471, 1605, 1412,
	1409, 258, 1431, 1618, 1649, 1508, 231, 0, 1655, 1506,
	1505, 1592, 1436, 1628, 1492, 238, 1434, 154, 1429, 1437,
	1490, 269, 1602, 1610, 0, 157, 1625, 1465, 1481, 191,
	0, 298, 1578, 344, 0, 1558, 297, 241, 337, 1593,
	1657, 343, 1493, 327, 351, 355, 208, 1533, 182, 317,
	200, 197, 1472, 1615, 1418, 216, 287, 194, 234, 1511,
	1584, 1466, 187, 1596, 1567, 1630, 316, 334, 159, 255,
	335, 354, 174, 329, 256, 262, 184, 186, 185, 170,
	311, 333, 179, 189, 1626, 1609, 1632, 1459, 1438, 1450,
	1439, 1480, 1659, 226, 217, 1633, 1631, 348, 0, 307,
	306, 1496, 225, 1612, 0, 0, 294, 0, 232, 162,
	1637, 357, 173, 236, 330, 0, 211, 268, 193, 1580,
	277, 1478, 156, 290, 252, 253, 251, 254, 214, 0,
	0, 1608, 292, 309, 332, 175, 323, 0, 0, 0,
	0, 300, 0, 0, 1665, 246, 204, 207, 219, 229,
	1579, 296, 324, 349, 1570, 171, 164, 326, 342, 180,
	308, 310, 356, 1604, 166, 1653, 1627, 1560, 1514, 1520,
	1420, 0, 165, 1600, 1470, 1485, 1458, 1574, 1457, 213,
	1591, 340, 341, 192, 358, 1432, 1673, 167, 1433, 1672,
	265, 272, 264, 1676, 336, 1654, 1561, 1545, 1543, 1425,
	1652, 1559, 1544, 237, 206, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 1547, 0, 163, 0, 321, 1663,
	1688, 325, 177, 1452, 1619, 331, 218, 291, 178, 212,
	205, 284, 263, 172, 224, 319, 235, 242, 1595, 1685,
	276, 299, 181, 346, 318, 201, 1448, 1451, 1446, 1449,
	1447, 1551, 1552, 1668, 1669, 1670, 1607, 1440, 0, 1645,
	1646, 0, 1538, 1656, 1426, 0, 1623, 0, 0, 1587,
	1683, 1498, 188, 1417, 1422, 1423, 1424, 1441, 1528, 1529,
	1557, 1564, 1641, 1640, 1639, 1642, 1647, 1677, 1675, 1678,
	1442, 1463, 1484, 1534, 1535, 1537, 1571, 1572, 1617, 1590,
	1599, 1530, 281, 1556, 158, 168, 239, 1684, 293, 210,
	1408, 1416, 1445, 1453, 1454, 1455, 1456, 1461, 1468, 0,
	1475, 1483, 1486, 1487, 1495, 1501, 1502, 1503, 1504, 1513,
	1515, 1516, 1517, 1518, 1519, 1523, 1524, 1526, 1539, 1540,
	1546, 1554, 1555, 1563, 1565, 0, 1594, 1597, 1606, 1611,
	1614, 1620, 1622, 1629, 1634, 1636, 1674, 1682, 1687, 347,
	196, 1536, 1562, 1601, 169, 176, 183, 195, 203, 209,
	220, 223, 227, 228, 230, 233, 245, 247, 248, 249,
	250, 266, 267, 270, 271, 274, 275, 278, 279, 280,
	282, 283, 289, 0, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 1648,
	1509, 155, 0, 0, 161, 0, 0, 0, 0, 0,
	1494, 160, 1643, 1679, 1575, 1589, 1660, 1621, 328, 1512,
	1664, 1462, 1491, 1681, 1497, 1500, 1583, 1427, 1550, 273,
	1488, 1428, 1410, 1467, 1414, 1479, 1415, 1464, 199, 1460,
	1624, 1553, 1662, 1532, 1576, 1586, 198, 190, 1542, 1541,
	1650, 1477, 1476, 1581, 1638, 1661, 1531, 0, 1671, 240,
	1635, 0, 350, 320, 257, 0, 0, 1527, 1644, 1548,
	1613, 1510, 1585, 1444, 1568, 1666, 1489, 1577, 1667, 0,
	0, 0, 0, 929, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1573, 1658, 1482, 0, 1522, 1582,
	1686, 1413, 1569, 0, 1419, 1430, 1680, 1651, 1473, 1474,
	202, 0, 0, 0, 0, 0, 0, 0, 1525, 1549,
	1603, 1507, 345, 1588, 1598, 1616, 1499, 288, 215, 0,
	0, 0, 0, 0, 0, 2470, 0, 1469, 0, 1566,
	0, 0, 0, 1435, 1421, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1521, 0, 0,
	0, 1443, 1411, 1471, 1605, 1412, 1409, 258, 1431, 1618,
	1649, 1508, 231, 0, 1655, 1506, 1505, 1592, 1436, 1628,
	1492, 238, 1434, 154, 1429, 1437, 1490, 269, 1602, 1610,
	0, 157, 1625, 1465, 1481, 191, 0, 298, 1578, 344,
	0, 1558, 297, 241, 337, 1593, 1657, 343, 1493, 327,
	351, 355, 208, 1533, 182, 317, 200, 197, 1472, 1615,
	1418, 216, 287, 194, 234, 1511, 1584, 1466, 187, 1596,
	1567, 1630, 316, 334, 159, 255, 335, 354, 174, 329,
	256, 262, 184, 186, 185, 170, 311, 333, 179, 189,
	1626, 1609, 1632, 1459, 1438, 1450, 1439, 1480, 1659, 226,
	217, 1633, 1631, 348, 0, 307, 306, 1496, 225, 1612,
	0, 0, 294, 0, 232, 162, 1637, 357, 173, 236,
	330, 0, 211, 268, 193, 1580, 277, 1478, 156, 290,
	252, 253, 251, 254, 214, 0, 0, 1608, 292, 309,
	332, 175, 323, 0, 0, 0, 0, 300, 0, 0,
	1665, 246, 204, 207, 219, 229, 1579, 296, 324, 349,
	1570, 171, 164, 326, 342, 180, 308, 310, 356, 1604,
	166, 1653, 1627, 1560, 1514, 1520, 1420, 0, 165, 1600,
	1470, 1485, 1458, 1574, 1457, 213, 1591, 340, 341, 192,
	358, 1432, 1673, 167, 1433, 1672, 265, 272, 264, 1676,
	336, 1654, 1561, 1545, 1543, 1425, 1652, 1559, 1544, 237,
	206, 221, 285, 243, 286, 222, 260, 259, 261, 244,
	1547, 0, 163, 0, 321, 1663, 1688, 325, 177, 1452,
	1619, 331, 218, 291, 178, 212, 205, 284, 263, 172,
	224, 319, 235, 242, 1595, 1685, 276, 299, 181, 346,
	318, 201, 1448, 1451, 1446, 1449, 1447, 1551, 1552, 1668,
	1669, 1670, 1607, 1440, 0, 1645, 1646, 0, 1538, 1656,
	1426, 0, 1623, 0, 0, 1587, 1683, 1498, 188, 1417,
	1422, 1423, 1424, 1441, 1528, 1529, 1557, 1564, 1641, 1640,
	1639, 1642, 1647, 1677, 1675, 1678, 1442, 1463, 1484, 1534,
	1535, 1537, 1571, 1572, 1617, 1590, 1599, 1530, 281, 1556,
	158, 168, 239, 1684, 293, 210, 1408, 1416, 1445, 1453,
	1454, 1455, 1456, 1461, 1468, 0, 1475, 1483, 1486, 1487,
	1495, 1501, 1502, 1503, 1504, 1513, 1515, 1516, 1517, 1518,
	1519, 1523, 1524, 1526, 1539, 1540, 1546, 1554, 1555, 1563,
	1565, 0, 1594, 1597, 1606, 1611, 1614, 1620, 1622, 1629,
	1634, 1636, 1674, 1682, 1687, 347, 196, 1536, 1562, 1601,
	169, 176, 183, 195, 203, 209, 220, 223, 227, 228,
	230, 233, 245, 247, 248, 249, 250, 266, 267, 270,
	271, 274, 275, 278, 279, 280, 282, 283, 289, 0,
	295, 301, 302, 303, 304, 305, 312, 313, 314, 315,
	322, 338, 339, 352, 353, 1648, 1509, 155, 0, 0,
	161, 0, 0, 0, 0, 0, 1494, 160, 1643, 1679,
	1575, 1589, 1660, 1621, 328, 1512, 1664, 1462, 1491, 1681,
	1497, 1500, 1583, 1427, 1550, 273, 1488, 1428, 1410, 1467,
	1414, 1479, 1415, 1464, 199, 1460, 1624, 1553, 1662, 1532,
	1576, 1586, 198, 190, 1542, 1541, 1650, 1477, 1476, 1581,
	1638, 1661, 1531, 0, 1671, 240, 1635, 0, 350, 320,
	257, 0, 0, 1527, 1644, 1548, 1613, 1510, 1585, 1444,
	1568, 1666, 1489, 1577, 1667, 0, 0, 0, 0, 129,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1573, 1658, 1482, 0, 1522, 1582, 1686, 1413, 1569, 0,
	1419, 1430, 1680, 1651, 1473, 1474, 202, 0, 0, 0,
	0, 0, 0, 0, 1525, 1549, 1603, 1507, 345, 1588,
	1598, 1616, 1499, 288, 215, 0, 0, 0, 0, 0,
	0, 2295, 0, 1469, 0, 1566, 0, 0, 0, 1435,
	1421, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1521, 0, 0, 0, 1443, 1411, 1471,
	1605, 1412, 1409, 258, 1431, 1618, 1649, 1508, 231, 0,
	1655, 1506, 1505, 1592, 1436, 1628, 1492, 238, 1434, 154,
	1429, 1437, 1490, 269, 1602, 1610, 0, 157, 1625, 1465,
	1481, 191, 0, 298, 1578, 344, 0, 1558, 297, 241,
	337, 1593, 1657, 343, 1493, 327, 351, 355, 208, 1533,
	182, 317, 200, 197, 1472, 1615, 1418, 216, 287, 194,
	234, 1511, 1584, 1466, 187, 1596, 1567, 1630, 316, 334,
	159, 255, 335, 354, 174, 329, 256, 262, 184, 186,
	185, 170, 311, 333, 179, 189, 1626, 1609, 1632, 1459,
	1438, 1450, 1439, 1480, 1659, 226, 217, 1633, 1631, 348,
	0, 307, 306, 1496, 225, 1612, 0, 0, 294, 0,
	232, 162, 1637, 357, 173, 236, 330, 0, 211, 268,
	193, 1580, 277, 1478, 156, 290, 252, 253, 251, 254,
	214, 0, 0, 1608, 292, 309, 332, 175, 323, 0,
	0, 0, 0, 300, 0, 0, 1665, 246, 204, 207,
	219, 229, 1579, 296, 324, 349, 1570, 171, 164, 326,
	342, 180, 308, 310, 356, 1604, 166, 1653, 1627, 1560,
	1514, 1520, 1420, 0, 165, 1600, 1470, 1485, 1458, 1574,
	1457, 213, 1591, 340, 341, 192, 358, 1432, 1673, 167,
	1433, 1672, 265, 272, 264, 1676, 336, 1654, 1561, 1545,
	1543, 1425, 1652, 1559, 1544, 237, 206, 221, 285, 243,
	286, 222, 260, 259, 261, 244, 1547, 0, 163, 0,
	321, 1663, 1688, 325, 177, 1452, 1619, 331, 218, 291,
	178, 212, 205, 284, 263, 172, 224, 319, 235, 242,
	1595, 1685, 276, 299, 181, 346, 318, 201, 1448, 1451,
	1446, 1449, 1447, 1551, 1552, 1668, 1669, 1670, 1607, 1440,
	0, 1645, 1646, 0, 1538, 1656, 1426, 0, 1623, 0,
	0, 1587, 1683, 1498, 188, 1417, 1422, 1423, 1424, 1441,
	1528, 1529, 1557, 1564, 1641, 1640, 1639, 1642, 1647, 1677,
	1675, 1678, 1442, 1463, 1484, 1534, 1535, 1537, 1571, 1572,
	1617, 1590, 1599, 1530, 281, 1556, 158, 168, 239, 1684,
	293, 210, 1408, 1416, 1445, 1453, 1454, 1455, 1456, 1461,
	1468, 0, 1475, 1483, 1486, 1487, 1495, 1501, 1502, 1503,
	1504, 1513, 1515, 1516, 1517, 1518, 1519, 1523, 1524, 1526,
	1539, 1540, 1546, 1554, 1555, 1563, 1565, 0, 1594, 1597,
	1606, 1611, 1614, 1620, 1622, 1629, 1634, 1636, 1674, 1682,
	1687, 347, 196, 1536, 1562, 1601, 169, 176, 183, 195,
	203, 209, 220, 223, 227, 228, 230, 233, 245, 247,
	248, 249, 250, 266, 267, 270, 271, 274, 275, 278,
	279, 280, 282, 283, 289, 0, 295, 301, 302, 303,
	304, 305, 312, 313, 314, 315, 322, 338, 339, 352,
	353, 1648, 1509, 155, 0, 0, 161, 0, 0, 0,
	0, 0, 1494, 160, 1643, 1679, 1575, 1589, 1660, 1621,
	328, 1512, 1664, 1462, 1491, 1681, 1497, 1500, 1583, 1427,
	1550, 273, 1488, 1428, 1410, 1467, 1414, 1479, 1415, 1464,
	199, 1460, 1624, 1553, 1662, 1532, 1576, 1586, 198, 190,
	1542, 1541, 1650, 1477, 1476, 1581, 1638, 1661, 1531, 0,
	1671, 240, 1635, 0, 350, 320, 257, 0, 0, 1527,
	1644, 1548, 1613, 1510, 1585, 1444, 1568, 1666, 1489, 1577,
	1667, 0, 0, 0, 0, 929, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1573, 1658, 1482, 0,
	1522, 1582, 1686, 1413, 1569, 0, 1419, 1430, 1680, 1651,
	1473, 1474, 202, 0, 0, 0, 0, 0, 0, 0,
	1525, 1549, 1603, 1507, 345, 1588, 1598, 1616, 1499, 288,
	215, 0, 0, 0, 0, 0, 0, 0, 0, 1469,
	0, 1566, 0, 0, 0, 1435, 1421, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1521,
	0, 0, 0, 1443, 1411, 1471, 1605, 1412, 1409, 258,
	1431, 1618, 1649, 1508, 231, 0, 1655, 1506, 1505, 1592,
	1436, 1628, 1492, 238, 1434, 154, 1429, 1437, 1490, 269,
	1602, 1610, 0, 157, 1625, 1465, 1481, 191, 0, 298,
	1578, 344, 0, 1558, 297, 241, 337, 1593, 1657, 343,
	1493, 327, 351, 355, 208, 1533, 182, 317, 200, 197,
	1472, 1615, 1418, 216, 287, 194, 234, 1511, 1584, 1466,
	187, 1596, 1567, 1630, 316, 334, 159, 255, 335, 354,
	174, 329, 256, 262, 184, 186, 185, 170, 311, 333,
	179, 189, 1626, 1609, 1632, 1459, 1438, 1450, 1439, 1480,
	1659, 226, 217, 1633, 1631, 348, 0, 307, 306, 1496,
	225, 1612, 0, 0, 294, 0, 232, 162, 1637, 357,
	173, 236, 330, 0, 211, 268, 193, 1580, 277, 1478,
	156, 290, 252, 253, 251, 254, 214, 0, 0, 1608,
	292, 309, 332, 175, 323, 0, 0, 0, 0, 300,
	0, 0, 1665, 246, 204, 207, 219, 229, 1579, 296,
	324, 349, 1570, 171, 164, 326, 342, 180, 308, 310,
	356, 1604, 166, 1653, 1627, 1560, 1514, 1520, 1420, 0,
	165, 1600, 1470, 1485, 1458, 1574, 1457, 213, 1591, 340,
	341, 192, 358, 1432, 1673, 167, 1433, 1672, 265, 272,
	264, 1676, 336, 1654, 1561, 1545, 1543, 1425, 1652, 1559,
	1544, 237, 206, 221, 285, 243, 286, 222, 260, 259,
	261, 244, 1547, 0, 163, 0, 321, 1663, 1688, 325,
	177, 1452, 1619, 331, 218, 291, 178, 212, 205, 284,
	263, 172, 224, 319, 235, 242, 1595, 1685, 276, 299,
	181, 346, 318, 201, 1448, 1451, 1446, 1449, 1447, 1551,
	1552, 1668, 1669, 1670, 1607, 1440, 0, 1645, 1646, 0,
	1538, 1656, 1426, 0, 1623, 0, 0, 1587, 1683, 1498,
	188, 1417, 1422, 1423, 1424, 1441, 1528, 1529, 1557, 1564,
	1641, 1640, 1639, 1642, 1647, 1677, 1675, 1678, 1442, 1463,
	1484, 1534, 1535, 1537, 1571, 1572, 1617, 1590, 1599, 1530,
	281, 1556, 158, 168, 239, 1684, 293, 210, 1408, 1416,
	1445, 1453, 1454, 1455, 1456, 1461, 1468, 0, 1475, 1483,
	1486, 1487, 1495, 1501, 1502, 1503, 1504, 1513, 1515, 1516,
	1517, 1518, 1519, 1523, 1524, 1526, 1539, 1540, 1546, 1554,
	1555, 1563, 1565, 0, 1594, 1597, 1606, 1611, 1614, 1620,
	1622, 1629, 1634, 1636, 1674, 1682, 1687, 347, 196, 1536,
	1562, 1601, 169, 176, 183, 195, 203, 209, 220, 223,
	227, 228, 230, 233, 245, 247, 248, 249, 250, 266,
	267, 270, 271, 274, 275, 278, 279, 280, 282, 283,
	289, 0, 295, 301, 302, 303, 304, 305, 312, 313,
	314, 315, 322, 338, 339, 352, 353, 1648, 1509, 155,
	0, 0, 161, 0, 0, 0, 0, 0, 1494, 160,
	1643, 1679, 1575, 1589, 1660, 1621, 328, 1512, 1664, 1462,
	1491, 1681, 1497, 1500, 1583, 1427, 1550, 273, 1488, 1428,
	1410, 1467, 1414, 1479, 1415, 1464, 199, 1460, 1624, 1553,
	1662, 1532, 1576, 1586, 198, 190, 1542, 1541, 1650, 1477,
	1476, 1581, 1638, 1661, 1531, 0, 1671, 240, 1635, 0,
	350, 320, 257, 0, 0, 1527, 1644, 1548, 1613, 1510,
	1585, 1444, 1568, 1666, 1489, 1577, 1667, 0, 0, 0,
	0, 3231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1573, 1658, 1482, 0, 1522, 1582, 1686, 1413,
	1569, 0, 1419, 1430, 1680, 1651, 1473, 1474, 202, 0,
	0, 0, 0, 0, 0, 0, 1525, 1549, 1603, 1507,
	345, 1588, 1598, 1616, 1499, 288, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 1469, 0, 1566, 0, 0,
	0, 1435, 1421, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1521, 0, 0, 0, 1443,
	1411, 1471, 1605, 1412, 1409, 258, 1431, 1618, 1649, 1508,
	231, 0, 1655, 1506, 1505, 1592, 1436, 1628, 1492, 238,
	1434, 154, 1429, 1437, 1490, 269, 1602, 1610, 0, 157,
	1625, 1465, 1481, 191, 0, 298, 1578, 344, 0, 1558,
	297, 241, 337, 1593, 1657, 343, 1493, 327, 351, 355,
	208, 1533, 182, 317, 200, 197, 1472, 1615, 1418, 216,
	287, 194, 234, 1511, 1584, 1466, 187, 1596, 1567, 1630,
	316, 334, 159, 255, 335, 354, 174, 329, 256, 262,
	184, 186, 185, 170, 311, 333, 179, 189, 1626, 1609,
	1632, 1459, 1438, 1450, 3234, 3235, 3236, 226, 217, 1633,
	1631, 348, 0, 307, 306, 1496, 225, 1612, 0, 0,
	294, 0, 232, 162, 1637, 357, 173, 236, 330, 0,
	211, 268, 193, 1580, 277, 1478, 156, 290, 252, 253,
	251, 254, 214, 0, 0, 1608, 292, 309, 332, 175,
	323, 0, 0, 0, 0, 300, 0, 0, 1665, 246,
	204, 207, 219, 229, 1579, 296, 324, 349, 1570, 171,
	164, 326, 342, 180, 308, 310, 356, 1604, 166, 1653,
	1627, 1560, 1514, 1520, 1420, 0, 165, 1600, 1470, 1485,
	1458, 1574, 1457, 213, 1591, 340, 341, 192, 358, 1432,
	1673, 167, 1433, 1672, 265, 272, 264, 1676, 336, 1654,
	1561, 1545, 1543, 1425, 1652, 1559, 1544, 237, 206, 221,
	285, 243, 286, 222, 260, 259, 261, 244, 1547, 0,
	163, 0, 321, 1663, 1688, 325, 177, 1452, 1619, 331,
	218, 291, 178, 212, 205, 284, 263, 172, 224, 319,
	235, 242, 1595, 1685, 276, 299, 181, 346, 318, 201,
	1448, 1451, 1446, 1449, 1447, 1551, 1552, 1668, 1669, 1670,
	1607, 1440, 0, 1645, 1646, 0, 1538, 1656, 1426, 0,
	1623, 0, 0, 1587, 1683, 1498, 188, 1417, 1422, 1423,
	1424, 1441, 1528, 1529, 1557, 1564, 1641, 1640, 1639, 1642,
	1647, 1677, 1675, 1678, 1442, 1463, 1484, 1534, 1535, 1537,
	1571, 1572, 1617, 1590, 1599, 1530, 281, 1556, 158, 168,
	239, 1684, 293, 210, 1408, 1416, 1445, 1453, 1454, 1455,
	1456, 1461, 1468, 0, 1475, 1483, 1486, 1487, 1495, 1501,
	1502, 1503, 1504, 1513, 1515, 1516, 1517, 1518, 1519, 1523,
	1524, 1526, 1539, 1540, 1546, 1554, 1555, 1563, 1565, 0,
	1594, 1597, 1606, 1611, 1614, 1620, 1622, 1629, 1634, 1636,
	1674, 1682, 1687, 347, 196, 1536, 1562, 1601, 169, 176,
	183, 195, 203, 209, 220, 223, 227, 228, 230, 233,
	245, 247, 248, 249, 250, 266, 267, 270, 271, 274,
	275, 278, 279, 280, 282, 283, 289, 0, 295, 301,
	302, 303, 304, 305, 312, 313, 314, 315, 322, 338,
	339, 352, 353, 1648, 1509, 155, 0, 0, 161, 0,
	0, 0, 0, 0, 1494, 160, 1643, 1679, 1575, 1589,
	1660, 1621, 328, 1512, 1664, 1462, 1491, 1681, 1497, 1500,
	1583, 1427, 1550, 273, 1488, 1428, 1410, 1467, 1414, 1479,
	1415, 1464, 199, 1460, 1624, 1553, 1662, 1532, 1576, 1586,
	198, 190, 1542, 1541, 1650, 1477, 1476, 1581, 1638, 1661,
	1531, 0, 1671, 240, 1635, 0, 350, 320, 257, 0,
	0, 1527, 1644, 1548, 1613, 1510, 1585, 1444, 1568, 1666,
	1489, 1577, 1667, 0, 0, 0, 0, 129, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1573, 1658,
	1482, 0, 1522, 1582, 1686, 1413, 1569, 0, 1419, 1430,
	1680, 1651, 1473, 1474, 202, 0, 0, 0, 0, 0,
	0, 0, 1525, 1549, 1603, 1507, 345, 1588, 1598, 1616,
	1499, 288, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 1469, 0, 1566, 0, 0, 0, 1435, 1421, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1521, 0, 0, 0, 1443, 1411, 1471, 1605, 1412,
	1409, 258, 1431, 1618, 1649, 1508, 231, 0, 1655, 1506,
	1505, 1592, 1436, 1628, 1492, 238, 1434, 154, 1429, 1437,
	1490, 269, 1602, 1610, 0, 157, 1625, 1465, 1481, 191,
	0, 298, 1578, 344, 0, 1558, 297, 241, 337, 1593,
	1657, 343, 1493, 327, 351, 355, 208, 1533, 182, 317,
	200, 197, 1472, 1615, 1418, 216, 287, 194, 234, 1511,
	1584, 1466, 187, 1596, 1567, 1630, 316, 334, 159, 255,
	335, 354, 174, 329, 256, 262, 184, 186, 185, 170,
	311, 333, 179, 189, 1626, 1609, 1632, 1459, 1438, 1450,
	1439, 1480, 1659, 226, 217, 1633, 1631, 348, 0, 307,
	306, 1496, 225, 1612, 0, 0, 294, 0, 232, 162,
	1637, 357, 173, 236, 330, 0, 211, 268, 193, 1580,
	277, 1478, 156, 290, 252, 253, 251, 254, 214, 0,
	0, 1608, 292, 309, 332, 175, 323, 0, 0, 0,
	0, 300, 0, 0, 1665, 246, 204, 207, 219, 229,
	1579, 296, 324, 349, 1570, 171, 164, 326, 342, 180,
	308, 310, 356, 1604, 166, 1653, 1627, 1560, 1514, 1520,
	1420, 0, 165, 1600, 1470, 1485, 1458, 1574, 1457, 213,
	1591, 340, 341, 192, 358, 1432, 1673, 167, 1433, 1672,
	265, 272, 264, 1676, 336, 1654, 1561, 1545, 1543, 1425,
	1652, 1559, 1544, 237, 206, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 1547, 0, 163, 0, 321, 1663,
	1688, 325, 177, 1452, 1619, 331, 218, 291, 178, 212,
	205, 284, 263, 172, 224, 319, 235, 242, 1595, 1685,
	276, 299, 181, 346, 318, 201, 1448, 1451, 1446, 1449,
	1447, 1551, 1552, 1668, 1669, 1670, 1607, 1440, 0, 1645,
	1646, 0, 1538, 1656, 1426, 0, 1623, 0, 0, 1587,
	1683, 1498, 188, 1417, 1422, 1423, 1424, 1441, 1528, 1529,
	1557, 1564, 1641, 1640, 1639, 1642, 1647, 1677, 1675, 1678,
	1442, 1463, 1484, 1534, 1535, 1537, 1571, 1572, 1617, 1590,
	1599, 1530, 281, 1556, 158, 168, 239, 1684, 293, 210,
	1408, 1416, 1445, 1453, 1454, 1455, 1456, 1461, 1468, 0,
	1475, 1483, 1486, 1487, 1495, 1501, 1502, 1503, 1504, 1513,
	1515, 1516, 1517, 1518, 1519, 1523, 1524, 1526, 1539, 1540,
	1546, 1554, 1555, 1563, 1565, 0, 1594, 1597, 1606, 1611,
	1614, 1620, 1622, 1629, 1634, 1636, 1674, 1682, 1687, 347,
	196, 1536, 1562, 1601, 169, 176, 183, 195, 203, 209,
	220, 223, 227, 228, 230, 233, 245, 247, 248, 249,
	250, 266, 267, 270, 271, 274, 275, 278, 279, 280,
	282, 283, 289, 0, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 1648,
	1509, 155, 0, 0, 161, 328, 0, 0, 0, 0,
	1494, 160, 1643, 1679, 1575, 1589, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 199, 0, 0, 0, 0,
	0, 0, 0, 198, 190, 0, 0, 0, 0, 0,
	0, 0, 2001, 2005, 0, 0, 240, 0, 933, 350,
	320, 257, 936, 935, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	929, 0, 0, 0, 0, 0, 0, 0, 0, 137,
	0, 0, 0, 0, 934, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	0, 0, 0, 0, 288, 215, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 2004, 231,
	153, 0, 0, 0, 1998, 0, 1999, 2000, 238, 937,
	154, 0, 1996, 2003, 269, 0, 0, 142, 157, 0,
	0, 0, 191, 926, 298, 0, 344, 932, 0, 297,
	241, 337, 0, 0, 343, 0, 327, 351, 355, 208,
	0, 182, 317, 200, 197, 0, 0, 0, 216, 287,
	194, 234, 0, 0, 0, 187, 0, 0, 0, 316,
	334, 159, 255, 335, 354, 174, 329, 256, 262, 184,
	186, 185, 170, 311, 333, 179, 189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 217, 0, 0,
	348, 143, 307, 306, 0, 225, 0, 144, 136, 294,
	145, 232, 162, 0, 357, 173, 236, 330, 931, 211,
	268, 193, 0, 277, 0, 156, 290, 252, 253, 251,
	254, 214, 140, 146, 0, 292, 309, 332, 175, 323,
	138, 139, 141, 148, 300, 149, 150, 0, 246, 204,
	207, 219, 229, 0, 296, 324, 349, 0, 171, 164,
	326, 342, 180, 308, 310, 356, 0, 166, 0, 0,
	0, 0, 0, 0, 0, 165, 0, 0, 0, 0,
	0, 0, 213, 0, 340, 341, 192, 358, 0, 0,
	167, 0, 0, 265, 272, 264, 0, 336, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 206, 221, 285,
	243, 286, 222, 260, 259, 261, 244, 0, 0, 163,
	0, 321, 0, 0, 325, 177, 0, 0, 331, 218,
	291, 178, 212, 205, 284, 263, 172, 224, 319, 235,
	242, 0, 0, 276, 299, 181, 346, 318, 201, 328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	273, 0, 0, 0, 0, 1143, 0, 0, 0, 199,
	151, 152, 0, 0, 0, 188, 131, 198, 190, 0,
	132, 0, 0, 133, 134, 0, 0, 0, 0, 135,
	240, 0, 933, 350, 320, 257, 936, 935, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 158, 168, 239,
	0, 293, 210, 0, 1144, 0, 1147, 0, 0, 0,
	0, 0, 0, 137, 0, 0, 0, 0, 934, 0,
	1139, 1140, 1138, 0, 0, 0, 0, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 1141,
	0, 0, 0, 345, 0, 0, 0, 0, 288, 215,
	0, 0, 347, 196, 0, 0, 0, 169, 176, 183,
	195, 203, 209, 220, 223, 227, 228, 230, 233, 245,
	247, 248, 249, 250, 266, 267, 270, 271, 274, 275,
	278, 279, 280, 282, 283, 289, 147, 295, 301, 302,
	303, 304, 305, 312, 313, 314, 315, 322, 338, 339,
	352, 353, 0, 0, 155, 0, 0, 161, 0, 0,
	0, 0, 0, 0, 160, 0, 0, 0, 258, 0,
	0, 0, 0, 231, 153, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 154, 0, 0, 0, 269, 0,
	0, 142, 157, 0, 0, 0, 191, 0, 298, 0,
	344, 932, 0, 297, 241, 337, 0, 0, 343, 0,
	327, 351, 355, 208, 0, 182, 317, 200, 197, 0,
	0, 0, 216, 287, 194, 234, 0, 0, 0, 187,
	0, 0, 0, 316, 334, 159, 255, 335, 354, 174,
	329, 256, 262, 184, 186, 185, 170, 311, 333, 179,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 217, 0, 0, 348, 143, 307, 306, 0, 225,
	0, 144, 136, 294, 145, 232, 162, 0, 357, 173,
	236, 330, 931, 211, 268, 193, 0, 277, 0, 156,
	290, 252, 253, 251, 254, 214, 140, 146, 0, 292,
	309, 332, 175, 323, 138, 139, 141, 148, 300, 149,
	150, 0, 246, 204, 207, 219, 229, 0, 296, 324,
	349, 0, 171, 164, 326, 342, 180, 308, 310, 356,
	0, 166, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 0, 0, 213, 0, 340, 341,
	192, 358, 0, 0, 167, 0, 0, 265, 272, 264,
	0, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 206, 221, 285, 243, 286, 222, 260, 259, 261,
	244, 0, 0, 163, 0, 321, 0, 0, 325, 177,
	0, 0, 331, 218, 291, 178, 212, 205, 284, 263,
	172, 224, 319, 235, 242, 0, 0, 276, 299, 181,
	346, 318, 201, 328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 199, 151, 152, 0, 0, 0, 188,
	131, 198, 190, 0, 132, 0, 0, 133, 134, 0,
	0, 0, 0, 135, 240, 0, 933, 350, 320, 257,
	936, 935, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 158, 168, 239, 0, 293, 210, 0, 929, 0,
	0, 0, 0, 0, 0, 0, 0, 137, 0, 0,
	0, 0, 934, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 0, 0,
	0, 0, 288, 215, 0, 0, 347, 196, 0, 0,
	0, 169, 176, 183, 195, 203, 209, 220, 223, 227,
	228, 230, 233, 245, 247, 248, 249, 250, 266, 267,
	270, 271, 274, 275, 278, 279, 280, 282, 283, 289,
	147, 295, 301, 302, 303, 304, 305, 312, 313, 314,
	315, 322, 338, 339, 352, 353, 0, 0, 155, 0,
	0, 161, 0, 0, 0, 0, 0, 0, 160, 0,
	0, 0, 258, 0, 0, 0, 0, 231, 153, 0,
	0, 0, 0, 0, 0, 0, 238, 937, 154, 0,
	927, 0, 269, 0, 0, 142, 157, 0, 0, 0,
	191, 926, 298, 0, 344, 932, 0, 297, 241, 337,
	0, 0, 343, 0, 327, 351, 355, 208, 0, 182,
	317, 200, 197, 0, 0, 0, 216, 287, 194, 234,
	0, 0, 0, 187, 0, 0, 0, 316, 334, 159,
	255, 335, 354, 174, 329, 256, 262, 184, 186, 185,
	170, 311, 333, 179, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 217, 0, 0, 348, 143,
	307, 306, 0, 225, 0, 144, 136, 294, 145, 232,
	162, 0, 357, 173, 236, 330, 931, 211, 268, 193,
	0, 277, 0, 156, 290, 252, 253, 251, 254, 214,
	140, 146, 0, 292, 309, 332, 175, 323, 138, 139,
	141, 148, 300, 149, 150, 0, 246, 204, 207, 219,
	229, 0, 296, 324, 349, 0, 171, 164, 326, 342,
	180, 308, 310, 356, 0, 166, 0, 0, 0, 0,
	0, 0, 0, 165, 0, 0, 0, 0, 0, 0,
	213, 0, 340, 341, 192, 358, 0, 0, 167, 0,
	0, 265, 272, 264, 0, 336, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 206, 221, 285, 243, 286,
	222, 260, 259, 261, 244, 0, 0, 163, 0, 321,
	0, 0, 325, 177, 0, 0, 331, 218, 291, 178,
	212, 205, 284, 263, 172, 224, 319, 235, 242, 0,
	0, 276, 299, 181, 346, 318, 201, 328, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 199, 151, 152,
	0, 0, 0, 188, 131, 198, 190, 0, 132, 0,
	0, 133, 134, 0, 0, 0, 0, 135, 240, 0,
	933, 350, 320, 257, 936, 935, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 158, 168, 239, 0, 293,
	210, 0, 1144, 0, 1147, 0, 0, 0, 0, 0,
	0, 137, 0, 0, 0, 0, 934, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 0, 0, 0, 288, 215, 0, 0,
	347, 196, 0, 0, 0, 169, 176, 183, 195, 203,
	209, 220, 223, 227, 228, 230, 233, 245, 247, 248,
	249, 250, 266, 267, 270, 271, 274, 275, 278, 279,
	280, 282, 283, 289, 147, 295, 301, 302, 303, 304,
	305, 312, 313, 314, 315, 322, 338, 339, 352, 353,
	0, 0, 155, 0, 0, 161, 0, 0, 0, 0,
	0, 0, 160, 0, 0, 0, 258, 0, 0, 0,
	0, 231, 153, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 154, 0, 0, 0, 269, 0, 0, 142,
	157, 0, 0, 0, 191, 1824, 298, 0, 344, 932,
	0, 297, 241, 337, 0, 0, 343, 0, 327, 351,
	355, 208, 0, 182, 317, 200, 197, 0, 0, 0,
	216, 287, 194, 234, 0, 0, 0, 187, 0, 0,
	0, 316, 334, 159, 255, 335, 354, 174, 329, 256,
	262, 184, 186, 185, 170, 311, 333, 179, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 217,
	0, 0, 348, 143, 307, 306, 0, 225, 0, 144,
	136, 294, 145, 232, 162, 0, 357, 173, 236, 330,
	931, 211, 268, 193, 0, 277, 0, 156, 290, 252,
	253, 251, 254, 214, 140, 146, 0, 292, 309, 332,
	175, 323, 138, 139, 141, 148, 300, 149, 150, 0,
	246, 204, 207, 219, 229, 0, 296, 324, 349, 0,
	171, 164, 326, 342, 180, 308, 310, 356, 0, 166,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 0, 213, 0, 340, 341, 192, 358,
	0, 0, 167, 0, 0, 265, 272, 264, 0, 336,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 206,
	221, 285, 243, 286, 222, 260, 259, 261, 244, 0,
	0, 163, 0, 321, 0, 0, 325, 177, 0, 0,
	331, 218, 291, 178, 212, 205, 284, 263, 172, 224,
	319, 235, 242, 0, 0, 276, 299, 181, 346, 318,
	201, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 199, 151, 152, 0, 0, 0, 188, 131, 198,
	190, 0, 132, 0, 0, 133, 134, 0, 0, 0,
	0, 135, 240, 0, 933, 350, 320, 257, 936, 935,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 158,
	168, 239, 0, 293, 210, 0, 2701, 0, 0, 0,
	0, 0, 0, 0, 0, 137, 0, 0, 0, 0,
	934, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 0, 0, 0,
	288, 215, 0, 0, 347, 196, 0, 0, 0, 169,
	176, 183, 195, 203, 209, 220, 223, 227, 228, 230,
	233, 245, 247, 248, 249, 250, 266, 267, 270, 271,
	274, 275, 278, 279, 280, 282, 283, 289, 147, 295,
	301, 302, 303, 304, 305, 312, 313, 314, 315, 322,
	338, 339, 352, 353, 0, 0, 155, 0, 0, 161,
	0, 0, 0, 0, 0, 0, 160, 0, 0, 0,
	258, 0, 0, 0, 0, 231, 153, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 154, 0, 0, 0,
	269, 0, 0, 142, 157, 0, 0, 0, 191, 0,
	298, 0, 344, 932, 0, 297, 241, 337, 0, 0,
	343, 0, 327, 351, 355, 208, 0, 182, 317, 200,
	197, 0, 0, 0, 216, 287, 194, 234, 0, 0,
	0, 187, 0, 0, 0, 316, 334, 159, 255, 335,
	354, 174, 329, 256, 262, 184, 186, 185, 170, 311,
	333, 179, 189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 226, 217, 0, 0, 348, 143, 307, 306,
	0, 225, 0, 144, 136, 294, 145, 232, 162, 0,
	357, 173, 236, 330, 931, 211, 268, 193, 0, 277,
	0, 156, 290, 252, 253, 251, 254, 214, 140, 146,
	0, 292, 309, 332, 175, 323, 138, 139, 141, 148,
	300, 149, 150, 0, 246, 204, 207, 219, 229, 0,
	296, 324, 349, 0, 171, 164, 326, 342, 180, 308,
	310, 356, 0, 166, 0, 0, 0, 0, 0, 0,
	0, 165, 0, 0, 0, 0, 0, 0, 213, 0,
	340, 341, 192, 358, 0, 0, 167, 0, 0, 265,
	272, 264, 0, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 206, 221, 285, 243, 286, 222, 260,
	259, 261, 244, 0, 0, 163, 0, 321, 0, 0,
	325, 177, 0, 0, 331, 218, 291, 178, 212, 205,
	284, 263, 172, 224, 319, 235, 242, 0, 0, 276,
	299, 181, 346, 318, 201, 328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 199, 151, 152, 0, 0,
	0, 188, 131, 198, 190, 0, 132, 0, 0, 133,
	134, 0, 0, 0, 0, 135, 240, 0, 933, 350,
	320, 257, 936, 935, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 158, 168, 239, 0, 293, 210, 0,
	2696, 0, 0, 0, 0, 0, 0, 0, 0, 137,
	0, 0, 0, 0, 934, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	0, 0, 0, 0, 288, 215, 0, 0, 347, 196,
	0, 0, 0, 169, 176, 183, 195, 203, 209, 220,
	223, 227, 228, 230, 233, 245, 247, 248, 249, 250,
	266, 267, 270, 271, 274, 275, 278, 279, 280, 282,
	283, 289, 147, 295, 301, 302, 303, 304, 305, 312,
	313, 314, 315, 322, 338, 339, 352, 353, 0, 0,
	155, 0, 0, 161, 0, 0, 0, 0, 0, 0,
	160, 0, 0, 0, 258, 0, 0, 0, 0, 231,
	153, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	154, 0, 0, 0, 269, 0, 0, 142, 157, 0,
	0, 0, 191, 0, 298, 0, 344, 932, 0, 297,
	241, 337, 0, 0, 343, 0, 327, 351, 355, 208,
	0, 182, 317, 200, 197, 0, 0, 0, 216, 287,
	194, 234, 0, 0, 0, 187, 0, 0, 0, 316,
	334, 159, 255, 335, 354, 174, 329, 256, 262, 184,
	186, 185, 170, 311, 333, 179, 189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 217, 0, 0,
	348, 143, 307, 306, 0, 225, 0, 144, 136, 294,
	145, 232, 162, 0, 357, 173, 236, 330, 931, 211,
	268, 193, 0, 277, 0, 156, 290, 252, 253, 251,
	254, 214, 140, 146, 0, 292, 309, 332, 175, 323,
	138, 139, 141, 148, 300, 149, 150, 0, 246, 204,
	207, 219, 229, 0, 296, 324, 349, 0, 171, 164,
	326, 342, 180, 308, 310, 356, 0, 166, 0, 0,
	0, 0, 0, 0, 0, 165, 0, 0, 0, 0,
	0, 0, 213, 0, 340, 341, 192, 358, 0, 0,
	167, 0, 0, 265, 272, 264, 0, 336, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 206, 221, 285,
	243, 286, 222, 260, 259, 261, 244, 0, 0, 163,
	0, 321, 0, 0, 325, 177, 0, 0, 331, 218,
	291, 178, 212, 205, 284, 263, 172, 224, 319, 235,
	242, 0, 0, 276, 299, 181, 346, 318, 201, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	151, 152, 0, 0, 0, 188, 131, 0, 0, 0,
	132, 0, 0, 133, 134, 0, 0, 0, 0, 135,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 158, 168, 239,
	0, 293, 210, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 347, 196, 0, 0, 0, 169, 176, 183,
	195, 203, 209, 220, 223, 227, 228, 230, 233, 245,
	247, 248, 249, 250, 266, 267, 270, 271, 274, 275,
	278, 279, 280, 282, 283, 289, 147, 295, 301, 302,
	303, 304, 305, 312, 313, 314, 315, 322, 338, 339,
	352, 353, 0, 0, 155, 36, 328, 161, 0, 0,
	0, 0, 0, 0, 160, 0, 0, 273, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 0, 0, 0,
	0, 0, 0, 0, 198, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2277, 240, 0, 0,
	350, 320, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 77, 0, 0,
	0, 1957, 0, 0, 0, 0, 0, 0, 0, 0,
	137, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 0, 288, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	231, 153, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 154, 0, 0, 0, 269, 0, 0, 142, 157,
	0, 0, 0, 191, 0, 298, 0, 344, 0, 0,
	297, 241, 337, 0, 0, 343, 0, 327, 351, 355,
	208, 0, 182, 317, 200, 197, 0, 0, 0, 216,
	287, 194, 234, 0, 0, 0, 187, 0, 0, 0,
	316, 334, 159, 255, 335, 354, 174, 329, 256, 262,
	184, 186, 185, 170, 311, 333, 179, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 217, 0,
	0, 348, 143, 307, 306, 0, 225, 0, 144, 136,
	294, 145, 232, 162, 0, 357, 173, 236, 330, 128,
	211, 268, 193, 0, 277, 0, 156, 290, 252, 253,
	251, 254, 214, 140, 146, 0, 292, 309, 332, 175,
	323, 138, 139, 141, 148, 300, 149, 150, 0, 246,
	204, 207, 219, 229, 0, 296, 324, 349, 0, 171,
	164, 326, 342, 180, 308, 310, 356, 0, 166, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 0, 0,
	0, 0, 0, 213, 0, 340, 341, 192, 358, 0,
	0, 167, 0, 0, 265, 272, 264, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 206, 221,
	285, 243, 286, 222, 260, 259, 261, 244, 0, 0,
	163, 0, 321, 0, 0, 325, 177, 0, 0, 331,
	218, 291, 178, 212, 205, 284, 263, 172, 224, 319,
	235, 242, 0, 0, 276, 299, 181, 346, 318, 201,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 151, 152, 0, 0, 0, 188, 131, 0, 0,
	0, 132, 0, 0, 133, 134, 0, 0, 0, 0,
	135, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1954, 281, 0, 158, 168,
	239, 75, 293, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 196, 0, 0, 0, 169, 176,
	183, 195, 203, 209, 220, 223, 227, 228, 230, 233,
	245, 247, 248, 249, 250, 266, 267, 270, 271, 274,
	275, 278, 279, 280, 282, 283, 289, 147, 295, 301,
	302, 303, 304, 305, 312, 313, 314, 315, 322, 338,
	339, 352, 353, 328, 0, 155, 0, 0, 161, 0,
	0, 0, 0, 0, 273, 160, 0, 0, 0, 0,
	0, 0, 0, 199, 0, 0, 0, 0, 0, 0,
	0, 198, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 350, 320, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 77, 0, 0, 0, 1957, 0,
	0, 0, 0, 0, 0, 0, 0, 137, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 0, 0,
	0, 0, 288, 215, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 231, 153, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 154, 0,
	0, 0, 269, 0, 0, 142, 157, 0, 0, 0,
	191, 0, 298, 0, 344, 0, 0, 297, 241, 337,
	0, 0, 343, 0, 327, 351, 355, 208, 0, 182,
	317, 200, 197, 0, 0, 0, 216, 287, 194, 234,
	0, 0, 0, 187, 0, 0, 0, 316, 334, 159,
	255, 335, 354, 174, 329, 256, 262, 184, 186, 185,
	170, 311, 333, 179, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 217, 0, 0, 348, 143,
	307, 306, 0, 225, 0, 144, 136, 294, 145, 232,
	162, 0, 357, 173, 236, 330, 128, 211, 268, 193,
	0, 277, 0, 156, 290, 252, 253, 251, 254, 214,
	140, 146, 0, 292, 309, 332, 175, 323, 138, 139,
	141, 148, 300, 149, 150, 0, 246, 204, 207, 219,
	229, 0, 296, 324, 349, 0, 171, 164, 326, 342,
	180, 308, 310, 356, 0, 166, 0, 0, 0, 0,
	0, 0, 0, 165, 0, 0, 0, 0, 0, 0,
	213, 0, 340, 341, 192, 358, 0, 0, 167, 0,
	0, 265, 272, 264, 0, 336, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 206, 221, 285, 243, 286,
	222, 260, 259, 261, 244, 0, 0, 163, 0, 321,
	0, 0, 325, 177, 0, 0, 331, 218, 291, 178,
	212, 205, 284, 263, 172, 224, 319, 235, 242, 0,
	0, 276, 299, 181, 346, 318, 201, 328, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 199, 151, 152,
	0, 0, 0, 188, 131, 198, 190, 0, 132, 0,
	0, 133, 134, 0, 0, 0, 0, 135, 240, 0,
	0, 350, 320, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 1954, 281, 0, 158, 168, 239, 77, 293,
	210, 0, 1957, 0, 0, 0, 0, 0, 0, 0,
	0, 137, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 0, 0, 0, 288, 215, 0, 0,
	347, 196, 0, 0, 0, 169, 176, 183, 195, 203,
	209, 220, 223, 227, 228, 230, 233, 245, 247, 248,
	249, 250, 266, 267, 270, 271, 274, 275, 278, 279,
	280, 282, 283, 289, 147, 295, 301, 302, 303, 304,
	305, 312, 313, 314, 315, 322, 338, 339, 352, 353,
	0, 0, 155, 0, 0, 161, 0, 0, 0, 0,
	0, 0, 160, 0, 0, 0, 258, 0, 0, 0,
	0, 231, 153, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 154, 0, 0, 0, 269, 0, 0, 142,
	157, 0, 0, 0, 191, 0, 298, 0, 344, 0,
	0, 297, 241, 337, 0, 0, 343, 0, 327, 351,
	355, 208, 0, 182, 317, 200, 197, 0, 0, 0,
	216, 287, 194, 234, 0, 0, 0, 187, 0, 0,
	0, 316, 334, 159, 255, 335, 354, 174, 329, 256,
	262, 184, 186, 185, 170, 311, 333, 179, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 217,
	0, 0, 348, 143, 307, 306, 0, 225, 0, 144,
	136, 294, 145, 232, 162, 0, 357, 173, 236, 330,
	128, 211, 268, 193, 0, 277, 0, 156, 290, 252,
	253, 251, 254, 214, 140, 146, 0, 292, 309, 332,
	175, 323, 138, 139, 141, 148, 300, 149, 150, 0,
	246, 204, 207, 219, 229, 0, 296, 324, 349, 0,
	171, 164, 326, 342, 180, 308, 310, 356, 0, 166,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 0, 213, 0, 340, 341, 192, 358,
	0, 0, 167, 0, 0, 265, 272, 264, 0, 336,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 206,
	221, 285, 243, 286, 222, 260, 259, 261, 244, 0,
	0, 163, 0, 321, 0, 0, 325, 177, 0, 0,
	331, 218, 291, 178, 212, 205, 284, 263, 172, 224,
	319, 235, 242, 0, 0, 276, 299, 181, 346, 318,
	201, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 199, 151, 152, 0, 0, 0, 188, 131, 198,
	190, 0, 132, 0, 0, 133, 134, 0, 0, 0,
	0, 135, 240, 0, 0, 350, 320, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 158,
	168, 239, 0, 293, 210, 0, 129, 0, 0, 0,
	0, 0, 0, 0, 0, 137, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 0, 0, 0,
	288, 215, 0, 0, 347, 196, 0, 0, 0, 169,
	176, 183, 195, 203, 209, 220, 223, 227, 228, 230,
	233, 245, 247, 248, 249, 250, 266, 267, 270, 271,
	274, 275, 278, 279, 280, 282, 283, 289, 147, 295,
	301, 302, 303, 304, 305, 312, 313, 314, 315, 322,
	338, 339, 352, 353, 0, 0, 155, 0, 0, 161,
	0, 0, 0, 0, 0, 0, 160, 0, 0, 0,
	258, 0, 0, 0, 0, 231, 153, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 154, 0, 0, 0,
	269, 0, 0, 142, 157, 0, 0, 0, 191, 0,
	298, 0, 344, 2080, 0, 297, 241, 337, 0, 0,
	343, 0, 327, 351, 355, 208, 0, 182, 317, 200,
	197, 0, 0, 0, 216, 287, 194, 234, 0, 0,
	0, 187, 0, 0, 0, 316, 334, 159, 255, 335,
	354, 174, 329, 256, 262, 184, 186, 185, 170, 311,
	333, 179, 189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 226, 217, 0, 0, 348, 143, 307, 306,
	0, 225, 0, 144, 136, 294, 145, 232, 162, 0,
	357, 173, 236, 330, 128, 211, 268, 193, 0, 277,
	0, 156, 290, 252, 253, 251, 254, 214, 140, 146,
	0, 292, 309, 332, 175, 323, 138, 139, 141, 148,
	300, 149, 150, 0, 246, 204, 207, 219, 229, 0,
	296, 324, 349, 0, 171, 164, 326, 342, 180, 308,
	310, 356, 0, 166, 0, 0, 0, 0, 0, 0,
	0, 165, 0, 0, 0, 0, 0, 0, 213, 0,
	340, 341, 192, 358, 0, 0, 167, 0, 0, 265,
	272, 264, 0, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 206, 221, 285, 243, 286, 222, 260,
	259, 261, 244, 0, 0, 163, 0, 321, 0, 0,
	325, 177, 0, 0, 331, 218, 291, 178, 212, 205,
	284, 263, 172, 224, 319, 235, 242, 0, 0, 276,
	299, 181, 346, 318, 201, 328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 199, 151, 152, 0, 0,
	0, 188, 131, 198, 190, 0, 132, 0, 0, 133,
	134, 0, 0, 0, 0, 135, 240, 0, 0, 350,
	320, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 158, 168, 239, 0, 293, 210, 0,
	129, 0, 0, 0, 0, 0, 0, 0, 0, 137,
	0, 0, 0, 0, 0, 1943, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	0, 0, 0, 0, 288, 215, 0, 0, 347, 196,
	0, 0, 0, 169, 176, 183, 195, 203, 209, 220,
	223, 227, 228, 230, 233, 245, 247, 248, 249, 250,
	266, 267, 270, 271, 274, 275, 278, 279, 280, 282,
	283, 289, 147, 295, 301, 302, 303, 304, 305, 312,
	313, 314, 315, 322, 338, 339, 352, 353, 0, 0,
	155, 0, 0, 161, 0, 0, 0, 0, 0, 0,
	160, 0, 0, 0, 258, 0, 0, 0, 0, 231,
	153, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	154, 0, 0, 0, 269, 0, 0, 142, 157, 0,
	0, 0, 191, 0, 298, 0, 344, 0, 0, 297,
	241, 337, 0, 0, 343, 0, 327, 351, 355, 208,
	0, 182, 317, 200, 197, 0, 0, 0, 216, 287,
	194, 234, 0, 0, 0, 187, 0, 0, 0, 316,
	334, 159, 255, 335, 354, 174, 329, 256, 262, 184,
	186, 185, 170, 311, 333, 179, 189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 217, 0, 0,
	348, 143, 307, 306, 0, 225, 0, 144, 136, 294,
	145, 232, 162, 0, 357, 173, 236, 330, 128, 211,
	268, 193, 0, 277, 0, 156, 290, 252, 253, 251,
	254, 214, 140, 146, 0, 292, 309, 332, 175, 323,
	138, 139, 141, 148, 300, 149, 150, 0, 246, 204,
	207, 219, 229, 0, 296, 324, 349, 0, 171, 164,
	326, 342, 180, 308, 310, 356, 0, 166, 0, 0,
	0, 0, 0, 0, 0, 165, 0, 0, 0, 0,
	0, 0, 213, 0, 340, 341, 192, 358, 0, 0,
	167, 0, 0, 265, 272, 264, 0, 336, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 206, 221, 285,
	243, 286, 222, 260, 259, 261, 244, 0, 0, 163,
	0, 321, 0, 0, 325, 177, 0, 0, 331, 218,
	291, 178, 212, 205, 284, 263, 172, 224, 319, 235,
	242, 0, 0, 276, 299, 181, 346, 318, 201, 328,
	0, 0, 0, 1273, 0, 0, 0, 0, 0, 0,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 199,
	151, 152, 0, 0, 0, 188, 131, 198, 190, 0,
	132, 0, 0, 133, 134, 0, 0, 0, 0, 135,
	240, 0, 0, 350, 320, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 158, 168, 239,
	0, 293, 210, 0, 129, 0, 0, 0, 0, 0,
	0, 0, 0, 137, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 0, 0, 0, 288, 215,
	0, 0, 347, 196, 0, 0, 0, 169, 176, 183,
	195, 203, 209, 220, 223, 227, 228, 230, 233, 245,
	247, 248, 249, 250, 266, 267, 270, 271, 274, 275,
	278, 279, 280, 282, 283, 289, 147, 295, 301, 302,
	303, 304, 305, 312, 313, 314, 315, 322, 338, 339,
	352, 353, 0, 0, 155, 0, 0, 161, 0, 0,
	0, 0, 0, 0, 160, 0, 0, 0, 258, 0,
	0, 0, 0, 231, 153, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 154, 0, 0, 0, 269, 0,
	0, 142, 157, 0, 0, 0, 191, 0, 298, 0,
	344, 0, 0, 297, 241, 337, 0, 0, 343, 0,
	327, 351, 355, 208, 0, 182, 317, 200, 197, 0,
	0, 0, 216, 287, 194, 234, 0, 0, 0, 187,
	0, 0, 0, 316, 334, 159, 255, 335, 354, 174,
	329, 256, 262, 184, 186, 185, 170, 311, 333, 179,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 217, 0, 0, 348, 143, 307, 306, 0, 225,
	0, 144, 136, 294, 145, 232, 162, 0, 357, 173,
	236, 330, 128, 211, 268, 193, 0, 277, 0, 156,
	290, 252, 253, 251, 254, 214, 140, 146, 0, 292,
	309, 332, 175, 323, 138, 139, 141, 148, 300, 149,
	150, 0, 246, 204, 207, 219, 229, 0, 296, 324,
	349, 0, 171, 164, 326, 342, 180, 308, 310, 356,
	0, 166, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 0, 0, 213, 0, 340, 341,
	192, 358, 0, 0, 167, 0, 0, 265, 272, 264,
	0, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 206, 221, 285, 243, 286, 222, 260, 259, 261,
	244, 0, 0, 163, 0, 321, 0, 0, 325, 177,
	0, 0, 331, 218, 291, 178, 212, 205, 284, 263,
	172, 224, 319, 235, 242, 0, 0, 276, 299, 181,
	346, 318, 201, 328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 199, 151, 152, 0, 0, 0, 188,
	131, 198, 190, 0, 132, 0, 0, 133, 134, 0,
	0, 0, 0, 135, 240, 0, 0, 350, 320, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 158, 168, 239, 0, 293, 210, 0, 129, 0,
	0, 0, 0, 0, 0, 0, 0, 137, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 0, 0,
	0, 0, 288, 215, 0, 0, 347, 196, 0, 0,
	0, 169, 176, 183, 195, 203, 209, 220, 223, 227,
	228, 230, 233, 245, 247, 248, 249, 250, 266, 267,
	270, 271, 274, 275, 278, 279, 280, 282, 283, 289,
	147, 295, 301, 302, 303, 304, 305, 312, 313, 314,
	315, 322, 338, 339, 352, 353, 0, 0, 155, 0,
	0, 161, 0, 0, 0, 0, 0, 0, 160, 0,
	0, 0, 258, 0, 0, 123, 0, 231, 153, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 154, 0,
	0, 0, 269, 0, 0, 142, 157, 0, 0, 0,
	191, 0, 298, 0, 344, 0, 0, 297, 241, 337,
	0, 0, 343, 0, 327, 351, 355, 208, 0, 182,
	317, 200, 197, 0, 0, 0, 216, 287, 194, 234,
	0, 0, 0, 187, 0, 0, 0, 316, 334, 159,
	255, 335, 354, 174, 329, 256, 262, 184, 186, 185,
	170, 311, 333, 179, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 217, 0, 0, 348, 143,
	307, 306, 0, 225, 0, 144, 136, 294, 145, 232,
	162, 0, 357, 173, 236, 330, 128, 211, 268, 193,
	0, 277, 0, 156, 290, 252, 253, 251, 254, 214,
	140, 146, 0, 292, 309, 332, 175, 323, 138, 139,
	141, 148, 300, 149, 150, 0, 246, 204, 207, 219,
	229, 0, 296, 324, 349, 0, 171, 164, 326, 342,
	180, 308, 310, 356, 0, 166, 0, 0, 0, 0,
	0, 0, 0, 165, 0, 0, 0, 0, 0, 0,
	213, 0, 340, 341, 192, 358, 0, 0, 167, 0,
	0, 265, 272, 264, 0, 336, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 206, 221, 285, 243, 286,
	222, 260, 259, 261, 244, 0, 0, 163, 0, 321,
	0, 0, 325, 177, 0, 0, 331, 218, 291, 178,
	212, 205, 284, 263, 172, 224, 319, 235, 242, 0,
	0, 276, 299, 181, 346, 318, 201, 328, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 199, 151, 152,
	0, 0, 0, 188, 131, 198, 190, 0, 132, 0,
	0, 133, 134, 0, 0, 0, 0, 135, 240, 0,
	0, 350, 320, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 158, 168, 239, 0, 293,
	210, 0, 129, 0, 0, 0, 0, 0, 0, 0,
	0, 137, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 0, 0, 0, 288, 215, 0, 0,
	347, 196, 0, 0, 0, 169, 176, 183, 195, 203,
	209, 220, 223, 227, 228, 230, 233, 245, 247, 248,
	249, 250, 266, 267, 270, 271, 274, 275, 278, 279,
	280, 282, 283, 289, 147, 295, 301, 302, 303, 304,
	305, 312, 313, 314, 315, 322, 338, 339, 352, 353,
	0, 0, 155, 0, 0, 161, 0, 0, 0, 0,
	0, 0, 160, 0, 0, 0, 258, 0, 0, 0,
	0, 231, 153, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 154, 0, 0, 0, 269, 0, 0, 142,
	157, 0, 0, 0, 191, 0, 298, 0, 344, 0,
	0, 297, 241, 337, 0, 0, 343, 0, 327, 351,
	355, 208, 0, 182, 317, 200, 197, 0, 0, 0,
	216, 287, 194, 234, 0, 0, 0, 187, 0, 0,
	0, 316, 334, 159, 255, 335, 354, 174, 329, 256,
	262, 184, 186, 185, 170, 311, 333, 179, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 217,
	0, 0, 348, 143, 307, 306, 0, 225, 0, 144,
	136, 294, 145, 232, 162, 0, 357, 173, 236, 330,
	128, 211, 268, 193, 0, 277, 0, 156, 290, 252,
	253, 251, 254, 214, 140, 146, 0, 292, 309, 332,
	175, 323, 138, 139, 141, 148, 300, 149, 150, 0,
	246, 204, 207, 219, 229, 0, 296, 324, 349, 0,
	171, 164, 326, 342, 180, 308, 310, 356, 0, 166,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 0, 213, 0, 340, 341, 192, 358,
	0, 0, 167, 0, 0, 265, 272, 264, 0, 336,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 206,
	221, 285, 243, 286, 222, 260, 259, 261, 244, 0,
	0, 163, 0, 321, 0, 0, 325, 177, 0, 0,
	331, 218, 291, 178, 212, 205, 284, 263, 172, 224,
	319, 235, 242, 0, 0, 276, 299, 181, 346, 318,
	201, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 151, 152, 0, 0, 0, 188, 131, 0,
	0, 0, 132, 0, 0, 133, 134, 0, 0, 0,
	0, 135, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 158,
	168, 239, 0, 293, 210, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 196, 0, 0, 0, 169,
	176, 183, 195, 203, 209, 220, 223, 227, 228, 230,
	233, 245, 247, 248, 249, 250, 266, 267, 270, 271,
	274, 275, 278, 279, 280, 282, 283, 289, 147, 295,
	301, 302, 303, 304, 305, 312, 313, 314, 315, 322,
	338, 339, 352, 353, 0, 0, 155, 0, 0, 161,
	428, 328, 422, 433, 416, 0, 160, 0, 0, 0,
	0, 0, 273, 0, 0, 439, 0, 0, 0, 0,
	0, 199, 0, 0, 423, 0, 0, 0, 0, 198,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 350, 320, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 437, 0, 436, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 0, 0, 0,
	288, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 415, 414, 417, 0, 0, 0,
	258, 0, 0, 0, 421, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 154, 0, 0, 0,
	269, 425, 0, 0, 157, 429, 0, 0, 191, 0,
	298, 0, 344, 0, 0, 297, 241, 337, 0, 432,
	343, 0, 327, 351, 355, 208, 0, 182, 317, 200,
	197, 0, 0, 0, 216, 287, 194, 234, 0, 0,
	0, 187, 0, 0, 0, 316, 334, 159, 255, 335,
	354, 174, 329, 256, 262, 184, 186, 185, 170, 311,
	333, 179, 189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 226, 217, 0, 0, 348, 0, 307, 306,
	0, 225, 0, 0, 0, 294, 0, 232, 162, 0,
	357, 173, 236, 330, 0, 211, 268, 193, 0, 277,
	0, 156, 290, 252, 253, 251, 254, 214, 0, 0,
	0, 442, 309, 332, 175, 323, 418, 419, 420, 426,
	427, 430, 431, 434, 246, 204, 207, 219, 229, 0,
	296, 324, 349, 0, 171, 164, 326, 342, 180, 308,
	310, 356, 0, 166, 0, 0, 0, 0, 0, 0,
	0, 165, 0, 0, 0, 0, 0, 0, 213, 0,
	340, 341, 192, 358, 0, 0, 167, 0, 0, 265,
	272, 264, 0, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 206, 221, 285, 243, 286, 222, 260,
	259, 261, 244, 0, 0, 163, 0, 321, 0, 0,
	325, 177, 0, 0, 331, 218, 291, 178, 212, 205,
	284, 263, 172, 224, 319, 235, 242, 0, 0, 276,
	299, 181, 346, 318, 201, 0, 0, 0, 0, 0,
	0, 428, 328, 422, 433, 416, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 0, 408, 0, 0, 0,
	0, 188, 199, 0, 0, 423, 0, 0, 0, 0,
	198, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 350, 320, 257, 0,
	0, 281, 0, 158, 168, 239, 0, 293, 210, 0,
	0, 0, 0, 0, 0, 0, 0, 437, 0, 436,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 347, 196,
	0, 288, 215, 169, 176, 183, 195, 203, 209, 220,
	223, 227, 228, 230, 233, 245, 247, 248, 249, 250,
	266, 267, 270, 271, 274, 275, 278, 279, 280, 282,
	283, 289, 424, 295, 301, 302, 303, 304, 305, 312,
	313, 314, 315, 322, 338, 339, 352, 353, 0, 0,
	155, 0, 0, 161, 0, 0, 0, 0, 0, 0,
	160, 0, 0, 0, 0, 415, 414, 417, 0, 0,
	0, 258, 0, 0, 0, 421, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 154, 0, 0,
	0, 269, 425, 0, 0, 157, 429, 0, 0, 191,
	0, 298, 0, 344, 0, 0, 297, 241, 337, 0,
	432, 343, 0, 327, 351, 355, 208, 0, 182, 317,
	200, 197, 0, 0, 0, 216, 287, 194, 234, 0,
	0, 0, 187, 0, 0, 0, 316, 334, 159, 255,
	335, 354, 174, 329, 256, 262, 184, 186, 185, 170,
	311, 333, 179, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 217, 0, 0, 348, 0, 307,
	306, 0, 225, 0, 0, 0, 294, 0, 232, 162,
	0, 357, 173, 236, 330, 0, 211, 268, 193, 0,
	277, 0, 156, 290, 252, 253, 251, 254, 214, 0,
	0, 0, 411, 309, 332, 175, 323, 418, 419, 420,
	426, 427, 430, 431, 434, 246, 204, 207, 219, 229,
	0, 296, 324, 349, 0, 171, 164, 326, 342, 180,
	308, 310, 356, 0, 166, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 0, 213,
	0, 340, 341, 192, 358, 0, 0, 167, 0, 0,
	265, 272, 264, 0, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 206, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 0, 0, 163, 0, 321, 0,
	0, 325, 177, 0, 0, 331, 218, 291, 178, 212,
	205, 284, 263, 172, 224, 319, 235, 242, 0, 0,
	276, 299, 181, 346, 318, 201, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 188, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 158, 168, 239, 0, 293, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	196, 0, 0, 0, 169, 176, 183, 195, 203, 209,
	220, 223, 227, 228, 230, 233, 245, 247, 248, 249,
	250, 266, 267, 270, 271, 274, 275, 278, 279, 280,
	282, 283, 289, 424, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 328,
	0, 155, 0, 0, 161, 0, 0, 0, 0, 0,
	273, 160, 0, 0, 0, 0, 0, 0, 0, 199,
	0, 0, 0, 0, 0, 0, 0, 198, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 350, 320, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 929, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 0, 0, 0, 288, 215,
	1159, 1158, 1168, 1169, 1161, 1162, 1163, 1164, 1165, 1166,
	1167, 1160, 0, 0, 1170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 154, 0, 0, 0, 269, 0,
	0, 0, 157, 0, 0, 0, 191, 0, 298, 0,
	344, 0, 0, 297, 241, 337, 0, 0, 343, 0,
	327, 351, 355, 208, 0, 182, 317, 200, 197, 0,
	0, 0, 216, 287, 194, 234, 0, 0, 0, 187,
	0, 0, 0, 316, 334, 159, 255, 335, 354, 174,
	329, 256, 262, 184, 186, 185, 170, 311, 333, 179,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 217, 0, 0, 348, 0, 307, 306, 0, 225,
	0, 0, 0, 294, 0, 232, 162, 0, 357, 173,
	236, 330, 0, 211, 268, 193, 0, 277, 0, 156,
	290, 252, 253, 251, 254, 214, 0, 0, 0, 292,
	309, 332, 175, 323, 0, 0, 0, 0, 300, 0,
	0, 0, 246, 204, 207, 219, 229, 0, 296, 324,
	349, 0, 171, 164, 326, 342, 180, 308, 310, 356,
	0, 166, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 0, 0, 213, 0, 340, 341,
	192, 358, 0, 0, 167, 0, 0, 265, 272, 264,
	0, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 206, 221, 285, 243, 286, 222, 260, 259, 261,
	244, 0, 0, 163, 0, 321, 0, 0, 325, 177,
	0, 0, 331, 218, 291, 178, 212, 205, 284, 263,
	172, 224, 319, 235, 242, 0, 0, 276, 299, 181,
	346, 318, 201, 0, 0, 0, 0, 0, 0, 0,
	328, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 273, 0, 0, 0, 0, 2283, 0, 0, 188,
	199, 0, 0, 0, 0, 0, 0, 0, 198, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 350, 320, 257, 0, 0, 281,
	0, 158, 168, 239, 0, 293, 210, 2285, 2287, 0,
	0, 0, 0, 0, 0, 129, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 2281, 347, 196, 0, 288,
	215, 169, 176, 183, 195, 203, 209, 220, 223, 227,
	228, 230, 233, 245, 247, 248, 249, 250, 266, 267,
	270, 271, 274, 275, 278, 279, 280, 282, 283, 289,
	0, 295, 301, 302, 303, 304, 305, 312, 313, 314,
	315, 322, 338, 339, 352, 353, 0, 0, 155, 0,
	0, 161, 0, 0, 0, 0, 0, 0, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 231, 0, 0, 2286, 0, 0,
	0, 0, 0, 238, 0, 154, 0, 0, 0, 269,
	0, 0, 0, 157, 0, 0, 0, 191, 0, 298,
	0, 344, 0, 0, 297, 241, 337, 0, 0, 343,
	0, 327, 351, 355, 208, 0, 182, 317, 200, 197,
	0, 0, 0, 216, 287, 194, 234, 0, 0, 0,
	187, 0, 0, 0, 316, 334, 159, 255, 335, 354,
	174, 329, 256, 262, 184, 186, 185, 170, 311, 333,
	179, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 217, 0, 0, 348, 0, 307, 306, 0,
	225, 0, 0, 0, 294, 0, 232, 162, 0, 357,
	173, 236, 330, 0, 211, 268, 193, 0, 277, 0,
	156, 290, 252, 253, 251, 254, 214, 0, 0, 0,
	292, 309, 332, 175, 323, 0, 0, 0, 0, 300,
	0, 0, 0, 246, 204, 207, 219, 229, 0, 296,
	324, 349, 0, 171, 164, 326, 342, 180, 308, 310,
	356, 0, 166, 0, 0, 0, 0, 0, 0, 0,
	165, 0, 0, 0, 0, 0, 0, 213, 0, 340,
	341, 192, 358, 0, 0, 167, 0, 0, 265, 272,
	264, 0, 336, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 206, 221, 285, 243, 286, 222, 260, 259,
	261, 244, 0, 0, 163, 0, 321, 0, 0, 325,
	177, 0, 0, 331, 218, 291, 178, 212, 205, 284,
	263, 172, 224, 319, 235, 242, 0, 0, 276, 299,
	181, 346, 318, 201, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	188, 131, 0, 0, 0, 132, 0, 0, 133, 134,
	0, 0, 0, 0, 135, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 158, 168, 239, 0, 293, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 196, 0,
	0, 0, 169, 176, 183, 195, 203, 209, 220, 223,
	227, 228, 230, 233, 245, 247, 248, 249, 250, 266,
	267, 270, 271, 274, 275, 278, 279, 280, 282, 283,
	289, 0, 295, 301, 302, 303, 304, 305, 312, 313,
	314, 315, 322, 338, 339, 352, 353, 328, 0, 155,
	0, 0, 161, 0, 0, 0, 0, 0, 273, 160,
	0, 0, 0, 2283, 0, 0, 0, 199, 0, 0,
	0, 0, 0, 0, 0, 198, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 350, 320, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2285, 2287, 0, 0, 0, 0,
	0, 0, 129, 0, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 0, 0, 0, 288, 215, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 231, 0, 0, 2286, 0, 0, 0, 0, 0,
	238, 0, 154, 0, 0, 0, 269, 0, 0, 0,
	157, 0, 0, 0, 191, 0, 298, 0, 344, 0,
	0, 297, 241, 337, 0, 0, 343, 0, 327, 351,
	355, 208, 0, 182, 317, 200, 197, 0, 0, 0,
	216, 287, 194, 234, 0, 0, 0, 187, 0, 0,
	0, 316, 334, 159, 255, 335, 354, 174, 329, 256,
	262, 184, 186, 185, 170, 311, 333, 179, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 217,
	0, 0, 348, 0, 307, 306, 0, 225, 0, 0,
	0, 294, 0, 232, 162, 0, 357, 173, 236, 330,
	0, 211, 268, 193, 0, 277, 0, 156, 290, 252,
	253, 251, 254, 214, 0, 0, 0, 292, 309, 332,
	175, 323, 0, 0, 0, 0, 300, 0, 0, 0,
	246, 204, 207, 219, 229, 0, 296, 324, 349, 0,
	171, 164, 326, 342, 180, 308, 310, 356, 0, 166,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 0, 213, 0, 340, 341, 192, 358,
	0, 0, 167, 0, 0, 265, 272, 264, 0, 336,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 206,
	221, 285, 243, 286, 222, 260, 259, 261, 244, 0,
	0, 163, 0, 321, 0, 0, 325, 177, 0, 0,
	331, 218, 291, 178, 212, 205, 284, 263, 172, 224,
	319, 235, 242, 0, 0, 276, 299, 181, 346, 318,
	201, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 199, 0, 0, 0, 0, 0, 188, 131, 198,
	190, 0, 132, 0, 0, 133, 134, 0, 0, 0,
	0, 135, 240, 0, 0, 350, 320, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 158,
	168, 239, 0, 293, 210, 0, 129, 0, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 0, 0, 0,
	288, 215, 0, 0, 347, 196, 0, 0, 0, 169,
	176, 183, 195, 203, 209, 220, 223, 227, 228, 230,
	233, 245, 247, 248, 249, 250, 266, 267, 270, 271,
	274, 275, 278, 279, 280, 282, 283, 289, 0, 295,
	301, 302, 303, 304, 305, 312, 313, 314, 315, 322,
	338, 339, 352, 353, 0, 0, 155, 0, 0, 161,
	0, 0, 0, 0, 0, 0, 160, 0, 0, 0,
	258, 0, 0, 0, 0, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 154, 0, 0, 0,
	269, 0, 0, 0, 157, 0, 0, 0, 191, 0,
	298, 0, 344, 0, 0, 297, 241, 337, 0, 0,
	343, 0, 327, 351, 355, 208, 0, 182, 317, 200,
	197, 0, 0, 0, 216, 287, 194, 234, 0, 0,
	0, 187, 0, 0, 0, 316, 334, 159, 255, 335,
	354, 174, 329, 256, 262, 184, 186, 185, 170, 311,
	333, 179, 189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 226, 217, 0, 0, 348, 0, 307, 306,
	0, 225, 0, 0, 0, 294, 0, 232, 162, 0,
	357, 173, 236, 330, 0, 211, 268, 193, 0, 277,
	0, 156, 290, 252, 253, 251, 254, 214, 0, 0,
	0, 292, 309, 332, 175, 323, 0, 0, 0, 0,
	300, 0, 0, 0, 246, 204, 207, 219, 229, 0,
	296, 324, 349, 0, 171, 164, 326, 342, 180, 308,
	310, 356, 0, 166, 0, 0, 0, 0, 0, 0,
	0, 165, 0, 0, 0, 0, 0, 0, 213, 0,
	340, 341, 192, 358, 0, 0, 167, 0, 0, 265,
	272, 264, 0, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 206, 221, 285, 243, 286, 222, 260,
	259, 261, 244, 0, 0, 163, 0, 321, 0, 0,
	325, 177, 0, 0, 331, 218, 291, 178, 212, 205,
	284, 263, 172, 224, 319, 235, 242, 0, 0, 276,
	299, 181, 346, 318, 201, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 188, 131, 0, 0, 0, 132, 0, 0, 133,
	134, 0, 0, 0, 0, 135, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 158, 168, 239, 0, 293, 210, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 347, 196,
	0, 0, 454, 169, 176, 183, 195, 203, 209, 220,
	223, 227, 228, 230, 233, 245, 247, 248, 249, 250,
	266, 267, 270, 271, 274, 275, 278, 279, 280, 282,
	283, 289, 0, 295, 301, 302, 303, 304, 305, 312,
	313, 314, 315, 322, 338, 339, 352, 353, 328, 0,
	155, 0, 0, 161, 0, 0, 0, 0, 0, 273,
	160, 0, 0, 0, 0, 0, 0, 0, 199, 0,
	0, 0, 0, 0, 2574, 0, 198, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 350, 320, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 129, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 0, 288, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 154, 0, 0, 0, 269, 0, 0,
	0, 157, 0, 0, 0, 191, 0, 298, 0, 344,
	0, 0, 297, 241, 337, 0, 0, 343, 0, 327,
	351, 355, 208, 0, 182, 317, 200, 197, 0, 0,
	0, 216, 287, 194, 234, 0, 0, 0, 187, 0,
	0, 0, 316, 334, 159, 255, 335, 354, 174, 329,
	256, 262, 184, 186, 185, 170, 311, 333, 179, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	217, 0, 0, 348, 0, 307, 306, 0, 225, 0,
	0, 0, 294, 0, 232, 162, 0, 357, 173, 236,
	330, 0, 211, 268, 193, 0, 277, 0, 156, 290,
	252, 253, 251, 254, 214, 0, 0, 0, 292, 309,
	332, 175, 323, 0, 0, 0, 0, 300, 0, 0,
	0, 246, 204, 207, 219, 229, 0, 296, 324, 349,
	0, 171, 164, 326, 342, 180, 308, 310, 356, 0,
	166, 0, 0, 0, 0, 0, 0, 0, 165, 0,
	0, 0, 0, 0, 0, 213, 0, 340, 341, 192,
	358, 0, 0, 167, 0, 0, 265, 272, 264, 0,
	336, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	206, 221, 285, 243, 286, 222, 260, 259, 261, 244,
	0, 0, 163, 0, 321, 0, 0, 325, 177, 0,
	0, 331, 218, 291, 178, 212, 205, 284, 263, 172,
	224, 319, 235, 242, 0, 0, 276, 299, 181, 346,
	318, 201, 328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 199, 0, 0, 0, 0, 0, 188, 131,
	198, 190, 0, 132, 0, 0, 133, 134, 0, 0,
	0, 0, 135, 240, 0, 0, 350, 320, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	158, 168, 239, 0, 293, 210, 0, 129, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	0, 288, 215, 0, 0, 347, 196, 0, 0, 0,
	169, 176, 183, 195, 203, 209, 220, 223, 227, 228,
	230, 233, 245, 247, 248, 249, 250, 266, 267, 270,
	271, 274, 275, 278, 279, 280, 282, 283, 289, 0,
	295, 301, 302, 303, 304, 305, 312, 313, 314, 315,
	322, 338, 339, 352, 353, 0, 0, 155, 0, 0,
	161, 0, 0, 0, 0, 0, 0, 160, 0, 0,
	0, 258, 0, 0, 0, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 154, 0, 0,
	0, 269, 0, 0, 0, 157, 0, 0, 0, 191,
	0, 298, 0, 344, 0, 0, 297, 241, 337, 0,
	0, 343, 0, 327, 351, 355, 208, 0, 182, 317,
	200, 197, 0, 0, 0, 216, 287, 194, 234, 0,
	0, 0, 187, 0, 0, 0, 316, 334, 159, 255,
	335, 354, 174, 329, 256, 262, 184, 186, 185, 170,
	311, 333, 179, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 217, 0, 0, 348, 0, 307,
	306, 0, 225, 0, 0, 0, 294, 0, 232, 162,
	0, 357, 173, 236, 330, 0, 211, 268, 193, 0,
	277, 0, 156, 290, 252, 253, 251, 254, 214, 0,
	0, 0, 292, 309, 332, 175, 323, 0, 0, 0,
	0, 300, 0, 0, 0, 246, 204, 207, 219, 229,
	0, 296, 324, 349, 0, 171, 164, 326, 342, 180,
	308, 310, 356, 0, 166, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 0, 213,
	0, 340, 341, 192, 358, 0, 0, 167, 0, 0,
	265, 272, 264, 0, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 206, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 0, 0, 163, 0, 321, 0,
	0, 325, 177, 0, 0, 331, 218, 291, 178, 212,
	205, 284, 263, 172, 224, 319, 235, 242, 328, 0,
	276, 299, 181, 346, 318, 201, 0, 0, 0, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 199, 0,
	0, 0, 0, 0, 0, 0, 198, 190, 0, 0,
	0, 0, 188, 131, 0, 0, 0, 132, 0, 240,
	133, 134, 350, 320, 257, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 929, 158, 168, 239, 0, 293, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 0, 288, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	196, 0, 0, 0, 169, 176, 183, 195, 203, 209,
	220, 223, 227, 228, 230, 233, 245, 247, 248, 249,
	250, 266, 267, 270, 271, 274, 275, 278, 279, 280,
	282, 283, 289, 0, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 0,
	0, 155, 0, 0, 161, 0, 0, 258, 0, 0,
	0, 160, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 154, 0, 0, 0, 269, 0, 0,
	0, 157, 0, 0, 0, 191, 0, 298, 0, 344,
	0, 0, 297, 241, 337, 0, 0, 343, 0, 327,
	351, 355, 208, 0, 182, 317, 200, 197, 0, 0,
	0, 216, 287, 194, 234, 0, 0, 0, 187, 0,
	0, 0, 316, 334, 159, 255, 335, 354, 174, 329,
	256, 262, 184, 186, 185, 170, 311, 333, 179, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	217, 0, 0, 348, 0, 307, 306, 0, 225, 0,
	0, 0, 294, 0, 232, 162, 0, 357, 173, 236,
	330, 0, 211, 268, 193, 0, 277, 0, 156, 290,
	252, 253, 251, 254, 214, 0, 0, 0, 292, 309,
	332, 175, 323, 0, 0, 0, 0, 300, 0, 0,
	0, 246, 204, 207, 219, 229, 0, 296, 324, 349,
	0, 171, 164, 326, 342, 180, 308, 310, 356, 0,
	166, 0, 0, 0, 0, 0, 0, 0, 165, 0,
	0, 0, 0, 0, 0, 213, 0, 340, 341, 192,
	358, 0, 0, 167, 0, 0, 265, 272, 264, 0,
	336, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	206, 221, 285, 243, 286, 222, 260, 259, 261, 244,
	0, 0, 163, 0, 321, 0, 0, 325, 177, 0,
	0, 331, 218, 291, 178, 212, 205, 284, 263, 172,
	224, 319, 235, 242, 0, 0, 276, 299, 181, 346,
	318, 201, 328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 0, 3291, 0, 0, 0,
	0, 0, 199, 3289, 0, 0, 0, 0, 188, 131,
	198, 190, 0, 132, 0, 0, 133, 134, 0, 0,
	0, 0, 135, 240, 0, 0, 350, 320, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	158, 168, 239, 0, 293, 210, 0, 437, 0, 436,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	0, 288, 215, 0, 0, 347, 196, 0, 0, 0,
	169, 176, 183, 195, 203, 209, 220, 223, 227, 228,
	230, 233, 245, 247, 248, 249, 250, 266, 267, 270,
	271, 274, 275, 278, 279, 280, 282, 283, 289, 0,
	295, 301, 302, 303, 304, 305, 312, 313, 314, 315,
	322, 338, 339, 352, 353, 0, 0, 155, 0, 0,
	161, 0, 0, 0, 0, 0, 0, 160, 0, 0,
	0, 258, 0, 0, 0, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 154, 0, 0,
	0, 269, 0, 0, 0, 157, 0, 0, 0, 191,
	0, 298, 0, 344, 0, 0, 297, 241, 337, 0,
	0, 343, 0, 327, 351, 355, 208, 0, 182, 317,
	200, 197, 0, 0, 0, 216, 287, 194, 234, 0,
	0, 0, 187, 0, 0, 0, 316, 334, 159, 255,
	335, 354, 174, 329, 256, 262, 184, 186, 185, 170,
	311, 333, 179, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 217, 0, 0, 348, 0, 307,
	306, 0, 225, 0, 3290, 0, 294, 0, 232, 162,
	0, 357, 173, 236, 330, 0, 211, 268, 193, 0,
	277, 0, 156, 290, 252, 253, 251, 254, 214, 0,
	0, 0, 292, 309, 332, 175, 323, 0, 0, 0,
	0, 300, 0, 0, 0, 246, 204, 207, 219, 229,
	0, 296, 324, 349, 0, 171, 164, 326, 342, 180,
	308, 310, 356, 0, 166, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 0, 213,
	0, 340, 341, 192, 358, 0, 0, 167, 0, 0,
	265, 272, 264, 0, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 206, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 0, 0, 163, 0, 321, 0,
	0, 325, 177, 0, 0, 331, 218, 291, 178, 212,
	205, 284, 263, 172, 224, 319, 235, 242, 328, 0,
	276, 299, 181, 346, 318, 201, 0, 0, 0, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 199, 0,
	0, 0, 0, 0, 0, 0, 198, 190, 0, 0,
	0, 0, 188, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 350, 320, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 929, 158, 168, 239, 0, 293, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2390, 345, 0, 0, 0, 0, 288, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	196, 0, 0, 0, 169, 176, 183, 195, 203, 209,
	220, 223, 227, 228, 230, 233, 245, 247, 248, 249,
	250, 266, 267, 270, 271, 274, 275, 278, 279, 280,
	282, 283, 289, 0, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 0,
	0, 155, 0, 0, 161, 0, 0, 258, 0, 0,
	0, 160, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 154, 0, 0, 0, 269, 0, 0,
	0, 157, 0, 0, 0, 191, 0, 298, 0, 344,
	0, 0, 297, 241, 337, 0, 0, 343, 0, 327,
	351, 355, 208, 0, 182, 317, 200, 197, 0, 0,
	0, 216, 287, 194, 234, 2391, 2392, 0, 187, 0,
	0, 0, 316, 334, 159, 255, 335, 354, 174, 329,
	256, 262, 184, 186, 185, 170, 311, 333, 179, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	217, 0, 0, 348, 0, 307, 306, 0, 225, 0,
	0, 0, 294, 0, 232, 162, 0, 357, 173, 236,
	330, 0, 211, 268, 193, 0, 277, 0, 156, 290,
	252, 253, 251, 254, 214, 0, 0, 0, 292, 309,
	332, 175, 323, 0, 0, 0, 0, 300, 0, 0,
	0, 246, 204, 207, 219, 229, 0, 296, 324, 349,
	0, 171, 164, 326, 342, 180, 308, 310, 356, 0,
	166, 0, 0, 0, 0, 0, 0, 0, 165, 0,
	0, 0, 0, 0, 0, 213, 0, 340, 341, 192,
	358, 0, 0, 167, 0, 0, 265, 272, 264, 0,
	336, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	206, 221, 285, 243, 286, 222, 260, 259, 261, 244,
	0, 0, 163, 0, 321, 0, 0, 325, 177, 0,
	0, 331, 218, 291, 178, 212, 205, 284, 263, 172,
	224, 319, 235, 242, 0, 0, 276, 299, 181, 346,
	318, 201, 328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 199, 0, 0, 0, 0, 0, 188, 0,
	198, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 350, 320, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	158, 168, 239, 0, 293, 210, 0, 437, 0, 436,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	0, 288, 215, 0, 0, 347, 196, 0, 0, 0,
	169, 176, 183, 195, 203, 209, 220, 223, 227, 228,
	230, 233, 245, 247, 248, 249, 250, 266, 267, 270,
	271, 274, 275, 278, 279, 280, 282, 283, 289, 0,
	295, 301, 302, 303, 304, 305, 312, 313, 314, 315,
	322, 338, 339, 352, 353, 0, 0, 155, 0, 0,
	161, 0, 0, 0, 0, 0, 0, 160, 0, 0,
	0, 258, 0, 0, 0, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 154, 0, 0,
	0, 269, 0, 0, 0, 157, 0, 0, 0, 191,
	0, 298, 0, 344, 0, 0, 297, 241, 337, 0,
	0, 343, 0, 327, 351, 355, 208, 0, 182, 317,
	200, 197, 0, 0, 0, 216, 287, 194, 234, 0,
	0, 0, 187, 0, 0, 0, 316, 334, 159, 255,
	335, 354, 174, 329, 256, 262, 184, 186, 185, 170,
	311, 333, 179, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 217, 0, 0, 348, 0, 307,
	306, 0, 225, 0, 0, 0, 294, 0, 232, 162,
	0, 357, 173, 236, 330, 0, 211, 268, 193, 0,
	277, 0, 156, 290, 252, 253, 251, 254, 214, 0,
	0, 0, 292, 309, 332, 175, 323, 0, 0, 0,
	0, 300, 0, 0, 0, 246, 204, 207, 219, 229,
	0, 296, 324, 349, 0, 171, 164, 326, 342, 180,
	308, 310, 356, 0, 166, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 0, 213,
	0, 340, 341, 192, 358, 0, 0, 167, 0, 0,
	265, 272, 264, 0, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 206, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 0, 0, 163, 0, 321, 0,
	0, 325, 177, 0, 0, 331, 218, 291, 178, 212,
	205, 284, 263, 172, 224, 319, 235, 242, 0, 0,
	276, 299, 181, 346, 318, 201, 328, 0, 0, 1714,
	0, 0, 0, 0, 0, 0, 0, 273, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 1289, 0, 0,
	0, 0, 188, 0, 198, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 0, 0,
	350, 320, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 158, 168, 239, 0, 293, 210,
	0, 929, 0, 1288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 0, 288, 215, 0, 0, 347,
	196, 0, 0, 0, 169, 176, 183, 195, 203, 209,
	220, 223, 227, 228, 230, 233, 245, 247, 248, 249,
	250, 266, 267, 270, 271, 274, 275, 278, 279, 280,
	282, 283, 289, 0, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 0,
	0, 155, 0, 0, 161, 0, 0, 0, 0, 0,
	0, 160, 0, 0, 0, 258, 0, 0, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 154, 0, 0, 0, 269, 0, 0, 0, 157,
	0, 0, 0, 191, 0, 298, 0, 344, 0, 0,
	297, 241, 337, 0, 0, 343, 0, 327, 351, 355,
	208, 0, 182, 317, 200, 197, 0, 0, 0, 216,
	287, 194, 234, 0, 0, 0, 187, 0, 0, 0,
	316, 334, 159, 255, 335, 354, 174, 329, 256, 262,
	184, 186, 185, 170, 311, 333, 179, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 217, 0,
	0, 348, 0, 307, 306, 0, 225, 0, 0, 0,
	294, 0, 232, 162, 0, 357, 173, 236, 330, 0,
	211, 268, 193, 0, 277, 0, 156, 290, 252, 253,
	251, 254, 214, 0, 0, 0, 292, 309, 332, 175,
	323, 0, 0, 0, 0, 300, 0, 0, 0, 246,
	204, 207, 219, 229, 0, 296, 324, 349, 0, 171,
	164, 326, 342, 180, 308, 310, 356, 0, 166, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 0, 0,
	0, 0, 0, 213, 0, 340, 341, 192, 358, 0,
	0, 167, 0, 0, 265, 272, 264, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 206, 221,
	285, 243, 286, 222, 260, 259, 261, 244, 0, 0,
	163, 0, 321, 0, 0, 325, 177, 0, 0, 331,
	218, 291, 178, 212, 205, 284, 263, 172, 224, 319,
	235, 242, 0, 0, 276, 299, 181, 346, 318, 201,
	328, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 273, 0, 0, 0, 0, 0, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 188, 0, 198, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 350, 320, 257, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 158, 168,
	239, 0, 293, 210, 0, 437, 0, 436, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 0, 0, 0, 288,
	215, 0, 0, 347, 196, 0, 0, 0, 169, 176,
	183, 195, 203, 209, 220, 223, 227, 228, 230, 233,
	245, 247, 248, 249, 250, 266, 267, 270, 271, 274,
	275, 278, 279, 280, 282, 283, 289, 0, 295, 301,
	302, 303, 304, 305, 312, 313, 314, 315, 322, 338,
	339, 352, 353, 0, 0, 155, 0, 0, 161, 0,
	0, 0, 0, 0, 0, 160, 0, 0, 0, 258,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 154, 0, 0, 0, 269,
	0, 0, 0, 157, 0, 0, 0, 191, 0, 298,
	0, 344, 0, 0, 297, 241, 337, 0, 0, 343,
	0, 327, 351, 355, 208, 0, 182, 317, 200, 197,
	0, 0, 0, 216, 287, 194, 234, 0, 0, 0,
	187, 0, 0, 0, 316, 334, 159, 255, 335, 354,
	174, 329, 256, 262, 184, 186, 185, 170, 311, 333,
	179, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 217, 0, 0, 348, 0, 307, 306, 0,
	225, 0, 0, 0, 294, 0, 232, 162, 0, 357,
	173, 236, 330, 0, 211, 268, 193, 0, 277, 0,
	156, 290, 252, 253, 251, 254, 214, 0, 0, 0,
	292, 309, 332, 175, 323, 0, 0, 0, 0, 300,
	0, 0, 0, 246, 204, 207, 219, 229, 0, 296,
	324, 349, 0, 171, 164, 326, 342, 180, 308, 310,
	356, 0, 166, 0, 0, 0, 0, 0, 0, 0,
	165, 0, 0, 0, 0, 0, 0, 213, 0, 340,
	341, 192, 358, 0, 0, 167, 0, 0, 265, 272,
	264, 0, 336, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 206, 221, 285, 243, 286, 222, 260, 259,
	261, 244, 0, 0, 163, 0, 321, 0, 0, 325,
	177, 0, 0, 331, 218, 291, 178, 212, 205, 284,
	263, 172, 224, 319, 235, 242, 328, 0, 276, 299,
	181, 346, 318, 201, 0, 0, 0, 273, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 0, 0, 0,
	0, 0, 0, 0, 198, 190, 0, 0, 0, 0,
	188, 0, 0, 0, 0, 0, 0, 240, 0, 0,
	350, 320, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2687, 0, 0,
	281, 2689, 158, 168, 239, 0, 293, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 0, 288, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 196, 0,
	0, 0, 169, 176, 183, 195, 203, 209, 220, 223,
	227, 228, 230, 233, 245, 247, 248, 249, 250, 266,
	267, 270, 271, 274, 275, 278, 279, 280, 282, 283,
	289, 0, 295, 301, 302, 303, 304, 305, 312, 313,
	314, 315, 322, 338, 339, 352, 353, 0, 0, 155,
	0, 0, 161, 0, 0, 258, 0, 0, 0, 160,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 154, 0, 0, 0, 269, 0, 0, 0, 157,
	0, 0, 0, 191, 0, 298, 0, 344, 0, 0,
	297, 241, 337, 0, 0, 343, 0, 327, 351, 355,
	208, 0, 182, 317, 200, 197, 0, 0, 0, 216,
	287, 194, 234, 0, 0, 0, 187, 0, 0, 0,
	316, 334, 159, 255, 335, 354, 174, 329, 256, 262,
	184, 186, 185, 170, 311, 333, 179, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 217, 0,
	0, 348, 0, 307, 306, 0, 225, 0, 0, 0,
	294, 0, 232, 162, 0, 357, 173, 236, 330, 0,
	211, 268, 193, 0, 277, 0, 156, 290, 252, 253,
	251, 254, 214, 0, 0, 0, 292, 309, 332, 175,
	323, 0, 0, 0, 0, 300, 0, 0, 0, 246,
	204, 207, 219, 229, 0, 296, 324, 349, 0, 171,
	164, 326, 342, 180, 308, 310, 356, 0, 166, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 0, 0,
	0, 0, 0, 213, 0, 340, 341, 192, 358, 0,
	0, 167, 0, 0, 265, 272, 264, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 206, 221,
	285, 243, 286, 222, 260, 259, 261, 244, 0, 0,
	163, 0, 321, 0, 0, 325, 177, 0, 0, 331,
	218, 291, 178, 212, 205, 284, 263, 172, 224, 319,
	235, 242, 328, 0, 276, 299, 181, 346, 318, 201,
	0, 0, 0, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 199, 0, 0, 0, 0, 0, 0, 0,
	198, 190, 0, 0, 0, 0, 188, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 350, 320, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 929, 158, 168,
	239, 0, 293, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	0, 288, 215, 0, 0, 0, 0, 0, 0, 2674,
	0, 0, 0, 347, 196, 0, 0, 0, 169, 176,
	183, 195, 203, 209, 220, 223, 227, 228, 230, 233,
	245, 247, 248, 249, 250, 266, 267, 270, 271, 274,
	275, 278, 279, 280, 282, 283, 289, 0, 295, 301,
	302, 303, 304, 305, 312, 313, 314, 315, 322, 338,
	339, 352, 353, 0, 0, 155, 0, 0, 161, 0,
	0, 258, 0, 0, 0, 160, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 154, 0, 0,
	0, 269, 0, 0, 0, 157, 0, 0, 0, 191,
	0, 298, 0, 344, 0, 0, 297, 241, 337, 0,
	0, 343, 0, 327, 351, 355, 208, 0, 182, 317,
	200, 197, 0, 0, 0, 216, 287, 194, 234, 0,
	0, 0, 187, 0, 0, 0, 316, 334, 159, 255,
	335, 354, 174, 329, 256, 262, 184, 186, 185, 170,
	311, 333, 179, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 217, 0, 0, 348, 0, 307,
	306, 0, 225, 0, 0, 0, 294, 0, 232, 162,
	0, 357, 173, 236, 330, 0, 211, 268, 193, 0,
	277, 0, 156, 290, 252, 253, 251, 254, 214, 0,
	0, 0, 292, 309, 332, 175, 323, 0, 0, 0,
	0, 300, 0, 0, 0, 246, 204, 207, 219, 229,
	0, 296, 324, 349, 0, 171, 164, 326, 342, 180,
	308, 310, 356, 0, 166, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 0, 213,
	0, 340, 341, 192, 358, 0, 0, 167, 0, 0,
	265, 272, 264, 0, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 206, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 0, 0, 163, 0, 321, 0,
	0, 325, 177, 0, 0, 331, 218, 291, 178, 212,
	205, 284, 263, 172, 224, 319, 235, 242, 328, 0,
	276, 299, 181, 346, 318, 201, 0, 0, 0, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 199, 0,
	0, 0, 0, 0, 0, 0, 198, 190, 0, 0,
	0, 0, 188, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 350, 320, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 77,
	0, 0, 281, 929, 158, 168, 239, 0, 293, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 0, 288, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	196, 0, 0, 0, 169, 176, 183, 195, 203, 209,
	220, 223, 227, 228, 230, 233, 245, 247, 248, 249,
	250, 266, 267, 270, 271, 274, 275, 278, 279, 280,
	282, 283, 289, 0, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 0,
	0, 155, 0, 0, 161, 0, 0, 258, 0, 0,
	0, 160, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 154, 0, 0, 0, 269, 0, 0,
	0, 157, 0, 0, 0, 191, 0, 298, 0, 344,
	0, 0, 297, 241, 337, 0, 0, 343, 0, 327,
	351, 355, 208, 0, 182, 317, 200, 197, 0, 0,
	0, 216, 287, 194, 234, 0, 0, 0, 187, 0,
	0, 0, 316, 334, 159, 255, 335, 354, 174, 329,
	256, 262, 184, 186, 185, 170, 311, 333, 179, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	217, 0, 0, 348, 0, 307, 306, 0, 225, 0,
	0, 0, 294, 0, 232, 162, 0, 357, 173, 236,
	330, 0, 211, 268, 193, 0, 277, 0, 156, 290,
	252, 253, 251, 254, 214, 0, 0, 0, 292, 309,
	332, 175, 323, 0, 0, 0, 0, 300, 0, 0,
	0, 246, 204, 207, 219, 229, 0, 296, 324, 349,
	0, 171, 164, 326, 342, 180, 308, 310, 356, 0,
	166, 0, 0, 0, 0, 0, 0, 0, 165, 0,
	0, 0, 0, 0, 0, 213, 0, 340, 341, 192,
	358, 0, 0, 167, 0, 0, 265, 272, 264, 0,
	336, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	206, 221, 285, 243, 286, 222, 260, 259, 261, 244,
	0, 0, 163, 0, 321, 0, 0, 325, 177, 0,
	0, 331, 218, 291, 178, 212, 205, 284, 263, 172,
	224, 319, 235, 242, 328, 0, 276, 299, 181, 346,
	318, 201, 0, 0, 0, 273, 0, 0, 0, 0,
	0, 0, 0, 0, 199, 0, 0, 0, 0, 0,
	0, 2161, 2162, 190, 0, 0, 0, 0, 188, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 350, 320,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 929,
	158, 168, 239, 0, 293, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 0, 288, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 196, 0, 0, 0,
	169, 176, 183, 195, 203, 209, 220, 223, 227, 228,
	230, 233, 245, 247, 248, 249, 250, 266, 267, 270,
	271, 274, 275, 278, 279, 280, 282, 283, 289, 0,
	295, 301, 302, 303, 304, 305, 312, 313, 314, 315,
	322, 338, 339, 352, 353, 0, 0, 155, 0, 0,
	161, 0, 0, 258, 0, 0, 0, 160, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 154,
	0, 0, 0, 269, 0, 0, 0, 157, 0, 0,
	0, 191, 0, 298, 0, 344, 0, 0, 297, 241,
	337, 0, 0, 343, 0, 327, 351, 355, 208, 0,
	182, 317, 200, 197, 0, 0, 0, 216, 287, 194,
	234, 0, 0, 0, 187, 0, 0, 0, 316, 334,
	159, 255, 335, 354, 174, 329, 256, 262, 184, 186,
	185, 170, 311, 333, 179, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 217, 0, 0, 348,
	0, 307, 306, 0, 225, 0, 0, 0, 294, 0,
	232, 162, 0, 357, 173, 236, 330, 0, 211, 268,
	193, 0, 277, 0, 156, 290, 252, 253, 251, 254,
	214, 0, 0, 0, 292, 309, 332, 175, 323, 0,
	0, 0, 0, 300, 0, 0, 0, 246, 204, 207,
	219, 229, 0, 296, 324, 349, 0, 171, 164, 326,
	342, 180, 308, 310, 356, 0, 166, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 0, 0, 0, 0,
	0, 213, 0, 340, 341, 192, 358, 0, 0, 167,
	0, 0, 265, 272, 264, 0, 336, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 206, 221, 285, 243,
	286, 222, 260, 259, 261, 244, 0, 0, 163, 0,
	321, 0, 0, 325, 177, 0, 0, 331, 218, 291,
	178, 212, 205, 284, 263, 172, 224, 319, 235, 242,
	328, 0, 276, 299, 181, 346, 318, 201, 0, 0,
	0, 273, 0, 0, 0, 0, 0, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 0, 0, 198, 190,
	0, 0, 0, 0, 188, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 350, 320, 257, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 929, 158, 168, 239, 0,
	293, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 0, 0, 0, 288,
	215, 0, 0, 0, 0, 0, 0, 2124, 0, 0,
	0, 347, 196, 0, 0, 0, 169, 176, 183, 195,
	203, 209, 220, 223, 227, 228, 230, 233, 245, 247,
	248, 249, 250, 266, 267, 270, 271, 274, 275, 278,
	279, 280, 282, 283, 289, 0, 295, 301, 302, 303,
	304, 305, 312, 313, 314, 315, 322, 338, 339, 352,
	353, 0, 0, 155, 0, 0, 161, 0, 0, 258,
	0, 0, 0, 160, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 154, 0, 0, 0, 269,
	0, 0, 0, 157, 0, 0, 0, 191, 0, 298,
	0, 344, 0, 0, 297, 241, 337, 0, 0, 343,
	0, 327, 351, 355, 208, 0, 182, 317, 200, 197,
	0, 0, 0, 216, 287, 194, 234, 0, 0, 0,
	187, 0, 0, 0, 316, 334, 159, 255, 335, 354,
	174, 329, 256, 262, 184, 186, 185, 170, 311, 333,
	179, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 217, 0, 0, 348, 0, 307, 306, 0,
	225, 0, 0, 0, 294, 0, 232, 162, 0, 357,
	173, 236, 330, 0, 211, 268, 193, 0, 277, 0,
	156, 290, 252, 253, 251, 254, 214, 0, 0, 0,
	292, 309, 332, 175, 323, 0, 0, 0, 0, 300,
	0, 0, 0, 246, 204, 207, 219, 229, 0, 296,
	324, 349, 0, 171, 164, 326, 342, 180, 308, 310,
	356, 0, 166, 0, 0, 0, 0, 0, 0, 0,
	165, 0, 0, 0, 0, 0, 0, 213, 0, 340,
	341, 192, 358, 0, 0, 167, 0, 0, 265, 272,
	264, 0, 336, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 206, 221, 285, 243, 286, 222, 260, 259,
	261, 244, 0, 0, 163, 0, 321, 0, 0, 325,
	177, 0, 0, 331, 218, 291, 178, 212, 205, 284,
	263, 172, 224, 319, 235, 242, 328, 0, 276, 299,
	181, 346, 318, 201, 0, 0, 0, 273, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 0, 0, 0,
	0, 0, 0, 0, 198, 190, 0, 0, 0, 0,
	188, 0, 0, 0, 0, 0, 0, 240, 0, 0,
	350, 320, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 929, 158, 168, 239, 0, 293, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 0, 288, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 196, 0,
	0, 0, 169, 176, 183, 195, 203, 209, 220, 223,
	227, 228, 230, 233, 245, 247, 248, 249, 250, 266,
	267, 270, 271, 274, 275, 278, 279, 280, 282, 283,
	289, 0, 295, 301, 302, 303, 304, 305, 312, 313,
	314, 315, 322, 338, 339, 352, 353, 0, 0, 155,
	0, 0, 161, 0, 0, 258, 0, 0, 0, 160,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 154, 0, 0, 0, 269, 0, 0, 0, 157,
	0, 0, 0, 191, 0, 298, 0, 344, 0, 0,
	297, 241, 337, 0, 0, 343, 0, 327, 351, 355,
	208, 0, 182, 317, 200, 197, 0, 0, 0, 216,
	287, 194, 234, 0, 0, 0, 187, 0, 0, 0,
	316, 334, 159, 255, 335, 354, 174, 329, 256, 262,
	184, 186, 185, 170, 311, 333, 179, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 217, 0,
	0, 348, 0, 307, 306, 0, 225, 0, 0, 0,
	294, 0, 232, 162, 0, 357, 173, 236, 330, 0,
	211, 268, 193, 0, 277, 0, 156, 290, 252, 253,
	251, 254, 214, 0, 0, 0, 292, 309, 332, 175,
	323, 0, 0, 0, 0, 300, 0, 0, 0, 246,
	204, 207, 219, 229, 0, 296, 324, 349, 0, 171,
	164, 326, 342, 180, 308, 310, 356, 0, 166, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 0, 0,
	0, 0, 0, 213, 0, 340, 341, 192, 358, 0,
	0, 167, 0, 0, 265, 272, 264, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 206, 221,
	285, 243, 286, 222, 260, 259, 261, 244, 0, 0,
	163, 0, 321, 0, 0, 325, 177, 0, 0, 331,
	218, 291, 178, 212, 205, 284, 263, 172, 224, 319,
	235, 242, 328, 0, 276, 299, 181, 346, 318, 201,
	0, 0, 0, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 199, 0, 0, 0, 0, 0, 0, 0,
	198, 190, 0, 0, 0, 0, 188, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 350, 320, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 2689, 158, 168,
	239, 0, 293, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	0, 288, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 196, 0, 0, 0, 169, 176,
	183, 195, 203, 209, 220, 223, 227, 228, 230, 233,
	245, 247, 248, 249, 250, 266, 267, 270, 271, 274,
	275, 278, 279, 280, 282, 283, 289, 0, 295, 301,
	302, 303, 304, 305, 312, 313, 314, 315, 322, 338,
	339, 352, 353, 0, 0, 155, 0, 0, 161, 0,
	0, 258, 0, 0, 0, 160, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 154, 0, 0,
	0, 269, 0, 0, 0, 157, 0, 0, 0, 191,
	0, 298, 0, 344, 0, 0, 297, 241, 337, 0,
	0, 343, 0, 327, 351, 355, 208, 0, 182, 317,
	200, 197, 0, 0, 0, 216, 287, 194, 234, 0,
	0, 0, 187, 0, 0, 0, 316, 334, 159, 255,
	335, 354, 174, 329, 256, 262, 184, 186, 185, 170,
	311, 333, 179, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 217, 0, 0, 348, 0, 307,
	306, 0, 225, 0, 0, 0, 294, 0, 232, 162,
	0, 357, 173, 236, 330, 0, 211, 268, 193, 0,
	277, 0, 156, 290, 252, 253, 251, 254, 214, 0,
	0, 0, 292, 309, 332, 175, 323, 0, 0, 0,
	0, 300, 0, 0, 0, 246, 204, 207, 219, 229,
	0, 296, 324, 349, 0, 171, 164, 326, 342, 180,
	308, 310, 356, 0, 166, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 0, 213,
	0, 340, 341, 192, 358, 0, 0, 167, 0, 0,
	265, 272, 264, 0, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 206, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 0, 0, 163, 0, 321, 0,
	0, 325, 177, 0, 0, 331, 218, 291, 178, 212,
	205, 284, 263, 172, 224, 319, 235, 242, 328, 0,
	276, 299, 181, 346, 318, 201, 0, 0, 0, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 199, 0,
	0, 0, 0, 0, 0, 0, 198, 190, 0, 0,
	0, 0, 188, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 350, 320, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 129, 158, 168, 239, 0, 293, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 0, 288, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	196, 0, 0, 0, 169, 176, 183, 195, 203, 209,
	220, 223, 227, 228, 230, 233, 245, 247, 248, 249,
	250, 266, 267, 270, 271, 274, 275, 278, 279, 280,
	282, 283, 289, 0, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 0,
	0, 155, 0, 0, 161, 0, 0, 258, 0, 0,
	0, 160, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 154, 0, 0, 0, 269, 0, 0,
	0, 157, 0, 0, 0, 191, 0, 298, 0, 344,
	0, 0, 297, 241, 337, 0, 0, 343, 0, 327,
	351, 355, 208, 0, 182, 317, 200, 197, 0, 0,
	0, 216, 287, 194, 234, 0, 0, 0, 187, 0,
	0, 0, 316, 334, 159, 255, 335, 354, 174, 329,
	256, 262, 184, 186, 185, 170, 311, 333, 179, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	217, 0, 0, 348, 0, 307, 306, 0, 225, 0,
	0, 0, 294, 0, 232, 162, 0, 357, 173, 236,
	330, 0, 211, 268, 193, 0, 277, 0, 156, 290,
	252, 253, 251, 254, 214, 0, 0, 0, 292, 309,
	332, 175, 323, 0, 0, 0, 0, 300, 0, 0,
	0, 246, 204, 207, 219, 229, 0, 296, 324, 349,
	0, 171, 164, 326, 342, 180, 308, 310, 356, 0,
	166, 0, 0, 0, 0, 0, 0, 0, 165, 0,
	0, 0, 0, 0, 0, 213, 0, 340, 341, 192,
	358, 0, 0, 167, 0, 0, 265, 272, 264, 0,
	336, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	206, 221, 285, 243, 286, 222, 260, 259, 261, 244,
	0, 0, 163, 0, 321, 0, 0, 325, 177, 0,
	0, 331, 218, 291, 178, 212, 205, 284, 263, 172,
	224, 319, 235, 242, 328, 0, 276, 299, 181, 346,
	318, 201, 0, 0, 0, 273, 0, 0, 0, 0,
	0, 0, 0, 0, 199, 0, 0, 0, 0, 0,
	0, 0, 198, 190, 0, 0, 0, 0, 188, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 350, 320,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 478,
	158, 168, 239, 0, 293, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 0, 288, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 196, 0, 0, 0,
	169, 176, 183, 195, 203, 209, 220, 223, 227, 228,
	230, 233, 245, 247, 248, 249, 250, 266, 267, 270,
	271, 274, 275, 278, 279, 280, 282, 283, 289, 0,
	295, 301, 302, 303, 304, 305, 312, 313, 314, 315,
	322, 338, 339, 352, 353, 0, 0, 155, 0, 0,
	161, 0, 0, 258, 0, 0, 0, 160, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 154,
	0, 0, 0, 269, 0, 0, 0, 157, 0, 0,
	0, 191, 0, 298, 0, 344, 0, 0, 297, 241,
	337, 0, 0, 343, 0, 327, 351, 355, 208, 0,
	182, 317, 200, 197, 0, 0, 0, 216, 287, 194,
	234, 0, 0, 0, 187, 0, 0, 0, 316, 334,
	159, 255, 335, 354, 174, 329, 256, 262, 184, 186,
	185, 170, 311, 333, 179, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 217, 0, 0, 348,
	0, 307, 306, 0, 225, 0, 0, 0, 294, 0,
	232, 162, 0, 357, 173, 236, 330, 0, 211, 268,
	193, 0, 277, 0, 156, 290, 252, 253, 251, 254,
	214, 0, 0, 0, 292, 309, 332, 175, 323, 0,
	0, 0, 0, 300, 0, 0, 0, 246, 204, 207,
	219, 229, 0, 296, 324, 349, 0, 171, 164, 326,
	342, 180, 308, 310, 356, 0, 166, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 0, 0, 0, 0,
	0, 213, 0, 340, 341, 192, 358, 0, 0, 167,
	0, 0, 265, 272, 264, 0, 336, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 206, 221, 285, 243,
	286, 222, 260, 259, 261, 244, 0, 0, 163, 0,
	321, 0, 0, 325, 177, 0, 0, 331, 218, 291,
	178, 212, 205, 284, 263, 172, 224, 319, 235, 242,
	0, 0, 276, 299, 181, 346, 318, 201, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 188, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 158, 168, 239, 0,
	293, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 196, 0, 0, 0, 169, 176, 183, 195,
	203, 209, 220, 223, 227, 228, 230, 233, 245, 247,
	248, 249, 250, 266, 267, 270, 271, 274, 275, 278,
	279, 280, 282, 283, 289, 0, 295, 301, 302, 303,
	304, 305, 312, 313, 314, 315, 322, 338, 339, 352,
	353, 0, 0, 155, 0, 0, 161, 0, 0, 0,
	0, 0, 0, 160,
}

var yyPact = [...]int{
	1500, -1000, -413, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2087, -1000, -1000, 278, -1000,
	1138, 702, -1000, 282, 113, 31186, 630, 1446, 41531, -1000,
	-1000, -1000, 180, 519, 31610, 422, 451, 1506, 1985, 1505,
	29, -74, -76, 138, 32635, 32204, 0, -1000, 2134, 2140,
	546, 36, -1000, -1000, -1000, 34664, 210, -1000, -1000, 2075,
	2085, 1892, -1000, 6995, -1000, -1000, -1000, -1000, -1000, 20327,
	-1000, 2138, 31610, 26616, -1000, 625, 600, -186, 538, 538,
	280, 538, 538, 629, -1000, 266, 1050, -1000, -1000, -1000,
	-1000, 1047, 31610, 38203, 539, 40699, 539, 539, 539, 539,
	539, 539, 539, 31610, -1000, 771, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 31610,
	1497, 2016, 1121, 74, -1000, -1000, -1000, 1104, -1000, 334,
	322, 320, 307, 85, 1143, 2071, -1000, 1734, 2075, 2075,
	-1000, -1000, -1000, -1000, -1000, -1000, 826, 309, 596, 210,
	210, 1046, 2046, 2015, 2014, 1359, 2011, 670, 2010, 1823,
	-41, -1000, 1494, 31610, -1000, -1000, 1319, 1316, 1858, 1716,
	714, 1856, -1000, -1000, 356, 717, 1816, 404, 1816, 1816,
	1816, 1816, 1816, -78, 1816, 1816, 1816, 96, 1816, 212,
	1816, 1816, 1816, 1816, 1816, 1499, -1000, -1000, -1000, 392,
	1707, 1756, 1855, 502, -1000, -1000, -1000, -1000, 1857, 2057,
	628, -1000, -131, 1781, 35675, -1000, 1734, -1000, -1000, -1000,
	1514, -1000, 2134, 2012, 1147, 12449, 1944, -1000, -1000, 1119,
	2124, -1000, 26192, 770, -1000, 12449, 3510, 1734, -1000, -1000,
	1734, -1000, 647, 789, -1000, 718, -1000, -1000, -1000, 13055,
	13055, 13055, 13055, 13055, 13055, 13055, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1734, 768, 746, 1734, 1734, 1734, 1734, 1734,
	-1000, 11237, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1734, 1734, 1734, 1734, 1734, 1734,
	1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734, 12449, 1734,
	1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734,
	1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734,
	1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734,
	1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734, 1734, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	546, 546, 30762, 1791, -111, 19721, -1000, -1000, -1000, -1000,
	18509, 37779, 1035, -1000, -1000, -1000, -1000, 2009, -1000, -1000,
	745, 647, 643, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2087, -1000, -1000, 1670,
	516, -1000, 5030, 5030, 5030, 5030, 5030, 225, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1821, 40699, 31610,
	240, 1491, 1088, 1490, 41947, 41947, -1000, 252, 38203, 38203,
	538, 264, 38203, 246, 1790, 589, 1789, 588, 1496, 31610,
	2035, 1853, 31610, 1489, 1486, 41947, 41947, 38203, 38203, -1000,
	25175, 1787, -1000, -1000, 1121, -1000, 6241, 12449, 538, 538,
	31610, 31610, 31610, 31610, 31610, -1000, -1000, 1121, 1121, 1121,
	1121, 1073, 2123, 1073, -1000, 1073, -1000, -1000, 12449, -1000,
	13055, 37355, 871, -1000, -1000, 41531, -1000, 1481, 305, -1000,
	-1000, -1000, -1000, -1000, -1000, 1479, -1000, 1989, 670, 670,
	-1000, 1437, 670, 1769, -1000, 1031, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 670, -1000,
	11843, -393, -1000, -1000, 1783, -1000, 258, -1000, -1000, 547,
	547, 231, 38203, 38203, 38203, -1000, 1816, 40699, -1000, 1816,
	1816, 1816, -79, 1816, 1816, -1000, -1000, 1816, -1000, -1000,
	-1000, -1000, -1000, 1816, -1000, -1000, -1000, 1816, 1816, -1000,
	1816, 1816, -1000, -1000, -1000, -1000, -1000, 38203, 547, 176,
	1782, 547, 38203, 38203, -1000, 66, 64, 63, 62, -1000,
	-1000, -1000, -1000, 59, 52, -1000, -1000, 1892, -1000, -1000,
	210, -1000, -1000, 31610, -130, 35675, 1781, 2054, 15479, -1000,
	-1000, 1116, 2130, 958, 1753, -1000, -1000, 1780, -1000, 1112,
	743, 1323, 1907, -1000, -1000, -1000, 31610, -1000, 12449, 12449,
	12449, 1279, -1000, 27040, -1000, -1000, -1000, -1000, -1000, -1000,
	16691, 971, 13055, 1220, 1004, 13055, 13055, 13055, 13055, 13055,
	13055, 13055, 13055, 13055, 13055, 13055, 13055, 13055, 13055, 13055,
	1357, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1475,
	-1000, 210, 23963, 8207, 23963, 1498, 1498, 763, 763, 763,
	763, 763, 763, 33222, 2050, 23963, 23963, 2050, 2050, 2050,
	2050, 2050, 1514, 1668, 1252, 34664, 11237, 8207, 8207, 8207,
	1514, 12449, 12449, 8207, 8207, 10631, 10025, 14267, 8207, 8207,
	2050, 1065, 1252, 18509, 8207, -1000, -1000, 9419, -1000, -1000,
	-1000, -1000, -1000, 1514, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 40699, 40699, 8207, 8207, 8207, 8207, 1514, 1514,
	8207, 8207, 8207, 8207, 8207, 1514, 1514, 1514, 1514, 8207,
	8207, 8207, 8207, 8207, 8207, 8207, 8207, 8207, 8207, 8207,
	8207, 30338, 29066, 31610, 1749, 1708, -1000, 742, 19115, 1755,
	-1000, -126, -134, -111, -1000, -1000, 817, -1000, -1000, -1000,
	8813, -1000, 17297, 2075, 1892, 21539, 25768, -1000, -1000, -48,
	-1000, -1000, -1000, 1807, -1000, 1807, 298, -3, 1807, 1807,
	1807, 1807, 1807, -13, -13, -13, -13, 1, -1000, -1000,
	-1000, -1000, -1000, 1820, 1819, -1000, 1807, 1807, 1807, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1813, 308,
	1811, 1811, 1811, 1811, 1811, -1000, -1000, -1000, -1000, 443,
	443, 443, -1000, 12449, 1825, 2053, 599, 264, 2022, 2034,
	2022, 420, -1000, 741, 1817, -1000, 738, 297, 1737, -1000,
	181, 1476, 29914, -1000, -1000, -1000, -1000, -1000, 31610, 31610,
	38203, 38203, 38203, 690, -1000, 31610, 1770, -1000, -1000, -1000,
	-1000, -1000, 1725, -1000, 1476, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 31610,
	-1000, -1000, 1436, 1252, 1474, 1472, 2046, -1000, -1000, -1000,
	1094, -1000, -1000, -1000, -1000, 1121, 41531, 41531, 31610, 2046,
	1121, 1252, 1048, 1827, 1734, 1514, -1000, -1000, -1000, 1469,
	-1000, 13055, 1769, 1769, -1000, 1769, 670, 1498, 1769, -1000,
	1666, 1109, 1435, 31610, -1000, 35675, -57, -1000, -166, 40283,
	-1000, -1000, -1000, 40283, -1000, 96, 156, -1000, 587, -1000,
	1647, -1000, -1000, -1000, -1000, 1816, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 40283, 119, 165, 40283, 1725,
	2122, -1000, -1000, -1000, -1000, 2070, -1000, 2050, 1514, 542,
	-1000, -1000, -1000, 1734, 1609, -1000, 735, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 39867, -1000,
	1902, 1147, 1147, 12449, -1000, -1000, -1000, 17297, 2069, -1000,
	1921, 1920, 1876, -1000, -1000, 971, 1051, 1029, -1000, -1000,
	1321, -1000, -1000, -1000, -1000, -1000, 734, 1734, -1000, -1000,
	-1000, -1000, -1000, 3776, -1000, -1000, -1000, -1000, 1220, 13055,
	13055, 13055, 1048, 3776, 3659, 967, 1624, 763, 937, 937,
	898, 898, 898, 898, 898, 880, 880, -1000, -1000, -1000,
	1514, -1000, 1640, -1000, -1000, 1252, 731, -1000, -1000, -1000,
	-1000, -1000, 8207, -1000, -1000, 8207, 8207, 8207, 8207, 8207,
	-1000, 12449, -1000, 1514, 1640, 1640, 1640, -1000, 1202, 1205,
	1473, 1640, 819, 2119, 1640, 815, 2118, 1640, 1523, 13055,
	13055, 13055, 1640, 1640, 8207, 1155, -1000, 12449, 1514, 1640,
	-1000, 1376, 1765, 1758, 1640, 1514, 1757, 1640, 1640, -201,
	-201, 1514, 1640, 1514, 1640, 1640, -201, -201, -201, -201,
	1640, 1640, 1640, 1640, 1640, 1640, 1640, 1640, 1640, 1640,
	1640, 1640, 947, 31610, -1000, 1728, 1773, -1000, -1000, -1000,
	-1000, 2052, 28479, -1000, 1734, 33653, -1000, 1734, 947, 1697,
	29066, -1000, -1000, 29066, 41531, 23357, -1000, 18509, -111, -96,
	-1000, -1000, 1755, -1000, 1360, -1000, -1000, 1252, -1000, 726,
	2012, 2050, 1752, 20933, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 516, -1000, -1000, -1000, 1815, 213, -1000, 1945, 750,
	750, 751, 1450, 1943, -1000, -1000, 223, -77, -1000, -1000,
	-1000, 1297, -13, -13, 1807, 1807, 294, 1807, -1000, -13,
	-1000, -1000, -1000, 916, 2005, 913, 905, 900, 893, -13,
	1418, 1418, -1000, -1000, -1000, -1000, 1291, -1000, 1813, -1000,
	1290, -1000, -1000, -1000, -1000, 223, 223, 223, 223, -1000,
	-1000, -1000, 1337, 1852, 40699, -1000, 31610, -1000, 2022, -1000,
	-1000, -1000, 268, -1000, -1000, -1000, 2105, -1000, -1000, 40699,
	36931, 40699, -1000, -1000, 83, 38203, 193, 340, 216, -1000,
	-1000, 557, -1000, 556, -1000, -1000, -1000, -1000, -1000, -1000,
	31610, 38203, -1000, -1000, -1000, -1000, -1000, 2094, 1467, 1466,
	-1000, -1000, -1000, 1073, 1121, -1000, -1000, 13055, 38203, -1000,
	316, -1000, 3776, -1000, -1000, -1000, 947, 627, -1000, -1000,
	-115, -1000, -1000, 555, 725, 671, 552, -1000, 94, 38203,
	-1000, 40699, -1000, 2114, 2113, 116, 2112, 38203, -1000, 40,
	1907, -1000, 1751, -1000, 720, 760, 749, 453, 453, -1000,
	1001, 453, 1993, 1991, 938, -1000, 209, -1000, 23963, 23963,
	1740, 1414, 1413, -1000, 1897, -1000, -1000, -1000, 31610, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 22751, 8207,
	-1000, 1048, 3776, 2926, -1000, 13055, -1000, 8207, -1000, 16085,
	1514, 1640, 1640, 1640, 1640, 1640, 1252, -1000, -1000, -1000,
	-1000, 418, 1357, 418, -1000, 1357, -1000, 13055, 13055, -1000,
	13055, 13055, -1000, -1000, 13055, 3009, 1882, 1198, -253, -1000,
	1748, 1053, -1000, 12449, 1334, -1000, -1000, -1000, 13055, 13055,
	-1000, -1000, -1000, -1000, -1000, 39451, -1000, -201, -201, -201,
	-201, -201, -1000, -1000, -1000, -1000, -201, -201, -201, -201,
	-201, -201, -201, -201, -201, -201, -201, -201, 202, 1734,
	-1000, 17903, 29066, 29490, 29490, 29066, 29490, -1000, 1887, 1885,
	-1000, 1870, 1867, 1880, 35675, 1638, 1514, 304, 28479, 13055,
	-1000, 1734, -1000, 35251, 711, 624, 622, 617, 8207, 2094,
	29066, 1622, 1622, -1000, 654, -1000, -1000, -1000, -158, -148,
	-1000, -1000, -1000, 23963, -1000, 21539, -1000, 21539, -1000, 36091,
	530, 1947, 435, 1450, 1450, 1450, -1000, 1450, -1000, -1000,
	-1000, 1812, -1000, 1127, -1000, -1000, -1000, -1000, -1000, 1734,
	-405, 1286, 13055, 2129, -1000, 1942, -1000, 1941, 1930, 1412,
	-1000, -1000, 1570, 885, 883, -13, -1000, -1000, 1807, -1000,
	858, -1000, -1000, 911, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 856, 1635, -1000, 1620, 1739, -1000, 1618, 114,
	31610, -1000, -1000, 2047, -1000, -1000, -1000, 2004, 1001, 1001,
	1001, 1850, -1000, -1000, -1000, -1000, 1555, 1735, -1000, 5030,
	40699, 40699, 40699, -1000, -259, 170, -1000, 38203, 135, 181,
	386, 1464, 31610, 38203, -1000, -1000, -1000, 12449, -1000, -1000,
	2046, -1000, 3776, 1476, -1000, -1000, -13, 31610, -1000, 38203,
	857, 39035, 38203, 106, 155, -1000, 38203, 38203, 2100, 38203,
	1725, 1411, 1876, 542, 38619, 1450, 693, -1000, -1000, 458,
	-1000, 187, 1463, 27888, 27464, 40699, 1929, 1928, 1461, 31610,
	40699, -1000, -1000, 41115, 1460, 12449, -1000, 40699, -1000, -1000,
	40699, 652, -1000, 40699, -1000, -1000, -1000, -1000, 1211, 6995,
	-1000, -1000, 1514, -1000, 13055, 3776, -1000, -1000, 650, -1000,
	-201, -201, -201, -201, -201, 1514, 1807, 1807, -1000, 1807,
	1811, -1000, 1807, 15, 1807, 7, 1514, 1514, 1514, 3564,
	3549, 3391, 1495, 1376, 13055, 13055, 13055, 1734, -197, -1000,
	1252, 12449, 2438, 1778, -1000, -1000, 1456, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1849, 17903, 1734, 14873, -1000,
	40699, 1743, -1000, 1017, 1016, 1009, 1008, 647, 643, -1000,
	-1000, -1000, -1000, -1000, 1773, 1810, 1848, 1733, -1000, -1000,
	-1000, -1000, 1884, -1000, 1881, -1000, -1000, 1801, -1000, -1000,
	1732, 1734, 1602, 40699, 13055, 711, -1000, 1734, 1734, 1734,
	1514, 2087, 1622, -1000, -1000, 839, -1000, -1000, -1000, 20933,
	-1000, 1616, -1000, 1807, 1807, 1927, -1000, 750, -1000, -1000,
	-1000, -1000, -1000, 40699, -1000, 13055, 2045, -1000, 3776, -89,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 838,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -13, 1410, -13,
	1283, -1000, 1282, -1000, -1000, -349, 1806, 210, -1000, 1001,
	895, 890, 1409, 31610, 137, 36931, -1000, 5030, 5030, 5030,
	140, 134, -1000, 1101, -1000, -1000, -1000, 1408, 1406, 1405,
	1476, 191, 1099, 144, -1000, 2041, -1000, -1000, 1252, 1121,
	-60, -1000, 155, -1000, -1000, -1000, 155, -1000, -1000, 162,
	1725, 1725, 38203, 1725, -1000, -1000, -1000, 41115, 433, 5030,
	5030, 1825, 750, 1926, 435, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1453, -1000, 721,
	-1000, 550, 433, 41115, 1252, 796, 1108, 23963, -1000, 2097,
	-1000, -1000, -1000, 3776, 22145, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 287, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 13055, 13055, 13055, 13055, -1000, 1376, 1376, 1376,
	13055, 1514, 1403, 1252, 13055, 13055, 929, -1000, -1000, 2029,
	1693, 1712, -1000, -1000, 7601, 1514, 1916, 1609, -1000, 34664,
	1605, -1000, 2087, 17903, 12449, 12449, 12449, 12449, -1000, -1000,
	12449, 1805, -1000, 12449, -1000, -1000, -1000, -1000, 40699, 303,
	-1000, 12449, 1398, 1605, 1574, -1000, 40699, 40699, 40699, -1000,
	2075, -1000, 706, 36091, 2027, 2027, 1450, 1450, 1599, -1000,
	1376, 1734, -1000, 1734, 1734, 1734, 1734, 1734, 1734, 1734,
	1734, 1734, 1734, 1734, -1000, -1000, 827, -1000, 820, 1542,
	1526, -1000, 36091, -1000, -1000, 886, -1000, -1000, -1000, -1000,
	-1000, 2068, -1000, 137, -1000, 1391, 262, 269, -1000, 261,
	260, 259, 257, 232, -1000, -1000, -1000, -1000, 371, 140,
	-1000, -82, 1272, 968, 1998, 134, -1000, 1260, 1212, 1210,
	1206, 190, -1000, -1000, -1000, -1000, 207, 181, -1000, 373,
	1379, -1000, 1978, 1973, 2044, 2044, 101, 1725, 1645, 1516,
	-1000, -1000, 1451, -1000, -1000, 1804, 1450, 1450, -1000, 1449,
	-1000, -1000, 40699, -1000, 433, 2021, 2018, 1734, -1000, 2094,
	29066, 6995, -1000, -1000, -1000, -1000, 1376, 1376, 1376, 1376,
	-1000, -1000, -1000, 197, -1000, -1000, 1376, 1376, 2087, 2084,
	1925, -1000, 1734, -1000, -1000, 1734, 205, -1000, 40699, 2075,
	-1000, 1252, 1252, 1252, 1252, 1252, 40699, 1252, 1597, 1734,
	-100, 34240, -1000, 35675, 1595, 1595, 1595, -1000, 706, -1000,
	1444, 1001, 1378, -1000, -1000, -1000, -1000, -1000, 372, 40699,
	-408, 13055, -1000, -1000, -1000, -1000, -1000, -1000, 1591, -1000,
	210, -1000, -1000, 306, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1983, 1982, 289, -1000, 1377, 1373, -1000, 445, 1318,
	694, -212, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 365, 1443, -1000, 143, -1000, -1000, 545,
	1946, 1951, 2082, -1000, 38203, -1000, -1000, 29066, -1000, -1000,
	223, 223, 36091, 1825, 1803, -1000, -1000, -1000, 13055, -1000,
	910, 2092, 1718, -1000, -1000, -1000, -1000, -1000, 1514, 179,
	-271, -1000, -1000, 961, 12449, 2128, -1000, 1712, 1734, -1000,
	210, -1000, -1000, 1589, -1000, -1000, 1734, -1000, 711, -1000,
	-1000, -1000, -1000, -1000, 1174, -1000, 31610, -1000, -1000, -1000,
	-1000, 1376, 706, -1000, 299, 4707, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1170, -1000, -1000, 1285, 380, 136,
	-1000, 2043, -1000, 1801, 1136, 1973, 2081, 1956, 1954, -1000,
	1371, -262, 1622, 1584, 1800, 36091, 3776, 1563, -1000, 40699,
	2090, 2080, -1000, -1000, 1896, -256, -284, 1514, 189, 189,
	1714, 17903, 1712, 1514, -1000, 23963, -1000, -1000, 1799, -408,
	-1000, 706, -1000, 284, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 12449, 12449, 24569, 4707, 122,
	-1000, 115, -1000, -1000, -1000, 1361, -1000, 962, -1000, 1347,
	-1000, 2079, 2078, -1000, 186, 2092, 706, 36091, 1561, -1000,
	910, 1913, -207, 12449, 12449, -1000, 1895, -1000, -1000, -1000,
	182, -1000, 954, 290, 941, -1000, 1498, -1000, 1705, -1000,
	1559, -1000, 5030, 40699, -1000, -1000, 1441, 1440, -1000, 1169,
	1243, 217, 201, 492, -1000, -1000, -1000, -1000, -417, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1344, 1341, 36515, 2090,
	-1000, 1529, 706, -1000, 341, -1000, 40699, -1000, 1252, 1703,
	-1000, 1252, -266, 1098, -1000, -1000, -1000, -1000, -1000, 40699,
	1514, 23963, 220, 1513, -1000, -1000, -1000, 1239, -1000, 12449,
	4707, 2067, 2063, 2062, 2013, 23963, 5624, -1000, -1000, -1000,
	-1000, 97, 1476, -207, 706, -1000, 399, 1603, -1000, 2042,
	12449, -272, 182, -1000, 2040, -1000, -1000, 1328, -244, 1847,
	188, 1084, 4707, -1000, 1055, -418, 421, 210, 461, 13055,
	-1000, -1000, -1000, 38203, -1000, -1000, 1734, 40699, 1734, -1000,
	-285, -1000, 35675, 1268, 1156, 1846, 1845, 2108, -1000, -1000,
	-1000, -1000, -1000, -1000, 4707, -1000, -1000, -419, 4707, 3900,
	-1000, -1000, -1000, 5578, -1000, -1000, -1000, -1000, 184, -1000,
	-1000, 3776, 1476, 13661, -1000, -1000, -1000, -1000, -1000, 1843,
	13055, -1000, -1000, 2127, -1000, 2109, 605, 605, -1000, -420,
	5515, -421, 526, 4707, 1163, -1000, 12449, -1000, 461, -1000,
	1376, 1514, -298, 1115, -1000, -1000, -1000, 436, 1227, -1000,
	5278, 1069, 4707, -1000, -423, 523, 4707, -1000, 1014, -1000,
	-1000, -1000, -1000, -299, -1000, -1000, -1000, -1000, -1000, 4305,
	-1000, -425, 4707, -1000, 509, 3940, -428, -1000, 500, 4707,
	-1000,
}

var yyPgo = [...]int{
	0, 2577, 2576, 16, 2573, 260, 2571, 2568, 46, 2554,
	37, 19, 12, 40, 2552, 2251, 2248, 2246, 2243, 2233,
	2551, 5, 2550, 2549, 2228, 2548, 2547, 2226, 2223, 2221,
	2212, 2546, 2545, 2544, 2210, 2207, 2205, 25, 2543, 24,
	2537, 3, 155, 174, 2534, 2, 2533, 2531, 9, 2528,
	2527, 2199, 2526, 2523, 2520, 102, 2519, 2185, 2183, 2514,
	2181, 2176, 2513, 2512, 2160, 2155, 2152, 2511, 189, 2510,
	2509, 2505, 154, 109, 171, 2503, 2497, 2496, 116, 87,
	340, 105, 60, 118, 450, 2495, 15, 56, 250, 2492,
	101, 2490, 125, 2488, 106, 2487, 2486, 168, 2484, 150,
	146, 94, 2483, 2482, 163, 2481, 2472, 2471, 110, 2465,
	2460, 176, 3823, 2459, 2458, 138, 2457, 47, 172, 55,
	75, 2456, 2455, 2454, 2453, 2452, 30, 220, 2451, 113,
	149, 2448, 2447, 96, 2446, 2441, 79, 2439, 2438, 2436,
	145, 45, 2434, 2433, 52, 2430, 51, 57, 2427, 58,
	2426, 142, 2424, 2423, 34, 29, 2422, 62, 2420, 63,
	2419, 141, 238, 1408, 2418, 28, 8, 11, 2417, 42,
	21, 14, 49, 26, 72, 54, 135, 97, 2415, 39,
	48, 115, 91, 2408, 100, 81, 44, 2405, 159, 2404,
	80, 161, 144, 140, 160, 2403, 2402, 2401, 182, 2399,
	134, 95, 2395, 92, 1184, 169, 114, 2393, 104, 2392,
	2390, 2389, 2386, 2383, 78, 124, 2382, 2378, 177, 180,
	181, 127, 2376, 71, 3239, 4047, 153, 1957, 35, 167,
	2374, 53, 2372, 2369, 2366, 2588, 119, 6, 107, 179,
	2364, 111, 50, 112, 2363, 2361, 2359, 2357, 2356, 2354,
	2353, 2352, 670, 2351, 2349, 2348, 2345, 158, 122, 2344,
	133, 132, 130, 2333, 156, 33, 2331, 2329, 131, 103,
	2327, 2326, 2324, 2323, 143, 86, 162, 27, 2322, 129,
	139, 196, 2321, 85, 2319, 2318, 82, 64, 2316, 2314,
	2312, 2308, 108, 99, 2304, 76, 31, 36, 73, 22,
	2302, 2301, 74, 157, 2300, 32, 2299, 4, 7, 10,
	2297, 2296, 2294, 2293, 2292, 2289, 2288, 90, 2287, 2286,
	70, 2280, 2278, 2277, 43, 2271, 2269, 2268, 152, 121,
	98, 170, 173, 23, 2262, 2261, 18, 2257, 128, 2256,
	61, 2253, 68, 2241, 2239, 69, 2237, 2235, 67, 2215,
	2202, 175, 1878, 335, 2193, 197, 151, 59, 88, 2187,
	2179, 0, 1552, 166, 214, 2169, 2164,
}

var yyR1 = [...]int{
	0, 360, 360, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 67, 3, 3, 8,
	9, 4, 4, 4, 5, 89, 89, 184, 184, 184,
	184, 183, 183, 90, 90, 91, 91, 88, 88, 97,
	6, 6, 7, 7, 10, 10, 71, 71, 11, 12,
	12, 12, 12, 363, 363, 106, 106, 104, 104, 105,
	105, 181, 181, 13, 13, 13, 188, 188, 193, 193,
	193, 196, 196, 196, 196, 171, 172, 173, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	334, 334, 343, 343, 343, 344, 344, 342, 342, 342,
	342, 342, 346, 346, 347, 347, 345, 345, 345, 345,
	349, 349, 350, 350, 348, 348, 348, 348, 348, 348,
	348, 348, 348, 348, 348, 348, 348, 348, 337, 337,
	337, 34, 34, 34, 34, 35, 35, 35, 35, 35,
	35, 351, 351, 351, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 351,
	351, 351, 352, 352, 353, 353, 354, 354, 355, 355,
	355, 355, 356, 356, 356, 356, 356, 357, 357, 357,
	357, 357, 357, 357, 358, 358, 359, 359, 2, 315,
	315, 316, 316, 317, 317, 317, 317, 318, 318, 319,
	319, 320, 320, 320, 320, 320, 320, 320, 320, 320,
	320, 25, 220, 220, 217, 217, 217, 218, 218, 219,
	219, 219, 336, 336, 336, 330, 330, 330, 332, 332,
	331, 331, 331, 333, 333, 338, 338, 338, 338, 338,
	340, 340, 340, 340, 340, 340, 341, 341, 341, 339,
	339, 49, 49, 50, 50, 50, 160, 160, 160, 14,
	14, 14, 14, 14, 20, 22, 22, 38, 38, 39,
	23, 23, 23, 23, 40, 40, 41, 26, 26, 26,
	26, 26, 26, 47, 47, 47, 46, 46, 45, 45,
	45, 45, 45, 45, 24, 24, 24, 24, 48, 48,
	43, 43, 42, 44, 44, 44, 44, 44, 44, 44,
	44, 44, 44, 44, 44, 27, 27, 27, 27, 27,
	27, 19, 314, 314, 314, 37, 37, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 53, 53, 288,
	289, 289, 289, 289, 289, 289, 289, 289, 275, 275,
	276, 276, 276, 276, 276, 265, 265, 265, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 242,
	242, 242, 242, 248, 248, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 247, 247, 247, 247, 247,
	247, 247, 247, 249, 249, 249, 249, 249, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 251, 251, 251, 251, 251,
	251, 251, 251, 274, 274, 252, 252, 268, 268, 269,
	269, 269, 266, 266, 266, 267, 267, 255, 256, 270,
	257, 257, 257, 258, 258, 258, 259, 259, 264, 264,
	263, 263, 263, 263, 263, 263, 260, 260, 260, 260,
	261, 261, 262, 273, 273, 273, 273, 273, 253, 36,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 301, 301, 210, 210, 211, 211, 278, 278,
	299, 299, 298, 298, 297, 297, 297, 287, 287, 294,
	294, 294, 294, 294, 294, 294, 294, 282, 282, 282,
	281, 281, 283, 283, 286, 286, 296, 296, 295, 295,
	279, 279, 279, 302, 302, 302, 302, 302, 280, 280,
	280, 280, 280, 303, 284, 284, 285, 285, 285, 308,
	309, 307, 307, 307, 307, 307, 123, 123, 123, 291,
	291, 291, 292, 292, 292, 293, 293, 293, 293, 293,
	293, 312, 312, 311, 311, 51, 52, 56, 56, 55,
	55, 55, 55, 55, 55, 55, 55, 55, 55, 55,
	55, 55, 55, 55, 55, 55, 55, 55, 55, 55,
	55, 55, 55, 55, 55, 55, 55, 55, 55, 55,
	55, 159, 159, 159, 215, 215, 306, 304, 304, 305,
	305, 16, 16, 54, 54, 335, 335, 17, 17, 17,
	17, 17, 17, 17, 17, 17, 310, 310, 310, 18,
	18, 57, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 85, 202, 202,
	201, 201, 200, 200, 200, 203, 203, 203, 203, 240,
	240, 240, 59, 59, 59, 63, 63, 66, 66, 66,
	64, 65, 28, 29, 29, 29, 29, 30, 216, 216,
	61, 61, 62, 62, 62, 62, 77, 77, 365, 365,
	60, 366, 68, 69, 69, 70, 70, 70, 206, 206,
	74, 74, 74, 72, 72, 72, 73, 73, 79, 79,
	83, 83, 83, 83, 82, 82, 82, 82, 162, 162,
	167, 232, 232, 143, 143, 163, 163, 168, 168, 168,
	169, 169, 170, 170, 170, 170, 170, 165, 165, 164,
	164, 166, 131, 131, 230, 230, 230, 230, 229, 229,
	229, 229, 229, 229, 87, 87, 92, 92, 92, 94,
	94, 94, 94, 94, 98, 145, 145, 116, 116, 117,
	117, 117, 117, 117, 129, 129, 180, 180, 179, 179,
	182, 182, 93, 95, 95, 95, 95, 101, 101, 102,
	102, 103, 103, 214, 214, 237, 237, 237, 107, 107,
	107, 109, 108, 108, 108, 108, 110, 110, 96, 290,
	290, 277, 244, 244, 245, 245, 245, 111, 111, 113,
	114, 114, 112, 112, 112, 112, 112, 118, 118, 115,
	119, 119, 119, 119, 120, 120, 84, 84, 84, 84,
	84, 84, 84, 84, 199, 199, 122, 122, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 139, 139,
	139, 139, 139, 139, 124, 124, 124, 124, 124, 124,
	124, 78, 78, 140, 140, 140, 100, 99, 99, 81,
	81, 80, 80, 141, 141, 127, 127, 127, 127, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 134, 134, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138, 138, 138,
	137, 137, 137, 137, 137, 137, 137, 137, 137, 137,
	137, 132, 132, 132, 132, 132, 132, 132, 132, 132,
	132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
	132, 132, 132, 132, 132, 132, 132, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 364, 364, 136, 135, 135, 135,
	135, 135, 135, 75, 75, 75, 75, 75, 238, 238,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 152, 152, 76, 76, 150,
	150, 151, 153, 153, 149, 149, 149, 149, 149, 149,
	149, 149, 149, 149, 149, 126, 126, 126, 126, 126,
	126, 126, 126, 128, 128, 128, 154, 154, 142, 142,
	86, 155, 155, 156, 157, 157, 158, 158, 161, 174,
	174, 174, 175, 175, 175, 175, 130, 130, 176, 176,
	176, 125, 125, 125, 125, 125, 125, 125, 178, 178,
	177, 177, 177, 177, 177, 177, 177, 177, 185, 185,
	144, 144, 147, 147, 146, 148, 186, 186, 190, 190,
	190, 190, 187, 187, 191, 191, 191, 191, 194, 194,
	195, 195, 195, 192, 192, 192, 189, 189, 189, 234,
	234, 234, 197, 197, 207, 207, 204, 204, 205, 205,
	198, 198, 254, 254, 254, 213, 213, 212, 212, 212,
	208, 208, 208, 209, 209, 231, 231, 227, 227, 233,
	233, 228, 228, 235, 235, 236, 236, 313, 313, 271,
	271, 323, 323, 272, 272, 324, 324, 326, 326, 321,
	321, 322, 322, 325, 325, 31, 327, 327, 328, 328,
	329, 329, 329, 329, 32, 33, 33, 33, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 226, 226, 226, 226, 226,
	226, 224, 224, 224, 224, 224, 361, 362,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 11, 5, 7, 1,
	5, 1, 14, 3, 13, 0, 2, 0, 2, 3,
	3, 1, 3, 2, 3, 0, 1, 1, 3, 4,
	1, 3, 1, 3, 8, 9, 1, 1, 10, 9,
	8, 7, 7, 1, 1, 1, 3, 1, 3, 1,
	3, 0, 4, 3, 4, 5, 1, 3, 3, 2,
	2, 2, 2, 2, 1, 0, 0, 0, 2, 3,
	3, 11, 9, 11, 5, 5, 16, 12, 9, 4,
	0, 3, 0, 2, 2, 1, 3, 1, 1, 2,
	2, 2, 0, 2, 1, 2, 2, 2, 2, 2,
	0, 1, 1, 2, 3, 3, 5, 3, 3, 4,
	5, 4, 4, 2, 2, 2, 2, 2, 0, 2,
	2, 9, 9, 5, 7, 7, 7, 7, 8, 4,
	6, 2, 3, 2, 3, 3, 3, 4, 3, 3,
	2, 2, 3, 2, 2, 2, 2, 2, 3, 2,
	2, 2, 3, 3, 2, 3, 3, 2, 2, 2,
	2, 2, 1, 3, 0, 3, 1, 3, 0, 1,
	1, 1, 1, 3, 1, 3, 3, 0, 2, 5,
	5, 5, 7, 5, 0, 3, 0, 3, 4, 0,
	1, 1, 3, 2, 3, 3, 3, 0, 1, 1,
	2, 2, 2, 2, 1, 2, 2, 3, 3, 3,
	3, 4, 2, 3, 3, 3, 3, 0, 3, 0,
	3, 3, 1, 1, 1, 3, 2, 1, 1, 3,
	3, 2, 1, 1, 3, 1, 2, 5, 4, 6,
	4, 3, 3, 6, 5, 5, 4, 3, 5, 1,
	3, 1, 1, 1, 1, 1, 0, 2, 2, 1,
	1, 1, 1, 1, 4, 5, 8, 1, 2, 5,
	7, 10, 8, 11, 1, 2, 5, 5, 5, 5,
	6, 3, 5, 1, 1, 1, 1, 3, 1, 1,
	1, 2, 1, 1, 2, 4, 2, 4, 2, 3,
	1, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 4, 3, 2,
	4, 3, 0, 2, 3, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 5, 5, 4,
	1, 1, 2, 3, 4, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 0, 1, 1, 0, 2,
	3, 2, 2, 2, 2, 2, 6, 8, 3, 3,
	1, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 3, 2, 2,
	2, 2, 2, 1, 2, 2, 2, 1, 4, 4,
	3, 3, 2, 4, 5, 2, 3, 4, 2, 2,
	3, 3, 3, 3, 3, 4, 1, 1, 1, 1,
	1, 6, 6, 4, 4, 4, 5, 3, 3, 3,
	3, 3, 4, 6, 6, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 3, 0, 5, 0,
	3, 5, 0, 1, 1, 0, 1, 2, 3, 1,
	0, 3, 3, 0, 2, 2, 0, 1, 0, 1,
	1, 1, 1, 2, 2, 2, 5, 5, 4, 4,
	4, 4, 4, 2, 1, 2, 1, 2, 2, 3,
	2, 2, 2, 2, 1, 1, 1, 1, 3, 2,
	1, 1, 0, 3, 1, 1, 0, 1, 5, 4,
	0, 1, 1, 2, 2, 3, 2, 0, 1, 3,
	5, 3, 3, 5, 3, 2, 2, 1, 1, 1,
	1, 1, 0, 1, 0, 1, 1, 3, 3, 3,
	3, 3, 1, 10, 11, 11, 12, 12, 3, 3,
	3, 2, 1, 5, 1, 1, 0, 2, 2, 3,
	3, 1, 1, 2, 2, 2, 0, 1, 2, 0,
	1, 3, 1, 2, 3, 1, 1, 1, 1, 1,
	1, 0, 2, 0, 2, 1, 5, 1, 3, 5,
	4, 3, 5, 3, 8, 10, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 5, 4, 5,
	1, 2, 2, 4, 3, 6, 5, 3, 9, 2,
	2, 0, 1, 2, 0, 1, 7, 1, 3, 8,
	8, 3, 3, 3, 5, 3, 5, 5, 5, 4,
	4, 4, 4, 4, 4, 4, 0, 1, 1, 3,
	2, 3, 3, 4, 3, 5, 5, 5, 4, 4,
	4, 2, 2, 2, 6, 2, 4, 4, 4, 5,
	8, 6, 3, 5, 4, 2, 4, 3, 2, 4,
	5, 6, 2, 6, 6, 3, 3, 3, 0, 1,
	1, 1, 0, 2, 2, 0, 2, 3, 2, 0,
	1, 1, 2, 4, 1, 1, 1, 2, 4, 4,
	1, 1, 2, 3, 4, 4, 5, 3, 1, 1,
	3, 3, 1, 1, 1, 1, 0, 3, 1, 1,
	3, 0, 2, 0, 2, 1, 2, 2, 0, 1,
	0, 1, 1, 0, 1, 1, 0, 1, 3, 5,
	1, 1, 3, 5, 1, 2, 3, 5, 2, 2,
	6, 0, 1, 0, 3, 0, 1, 0, 2, 2,
	4, 1, 2, 2, 2, 2, 2, 0, 2, 1,
	3, 3, 1, 3, 0, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 1, 1, 1,
	4, 1, 3, 1, 2, 2, 4, 2, 6, 1,
	4, 6, 3, 2, 0, 3, 0, 3, 1, 3,
	1, 3, 4, 4, 4, 4, 3, 2, 4, 0,
	1, 0, 2, 0, 1, 1, 1, 1, 1, 2,
	2, 1, 2, 3, 2, 3, 2, 2, 12, 1,
	3, 3, 3, 3, 0, 3, 4, 1, 3, 3,
	2, 1, 1, 3, 1, 1, 1, 1, 3, 3,
	0, 5, 5, 5, 0, 2, 1, 3, 3, 3,
	2, 3, 1, 2, 0, 3, 1, 1, 3, 3,
	4, 4, 5, 3, 4, 5, 6, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 0, 2, 1, 1, 1, 3, 1, 3, 0,
	1, 1, 3, 1, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	2, 2, 2, 2, 3, 1, 1, 1, 1, 1,
	1, 5, 6, 6, 6, 5, 5, 5, 6, 5,
	5, 6, 5, 5, 5, 5, 6, 5, 5, 5,
	4, 4, 5, 5, 5, 5, 5, 4, 4, 4,
	4, 4, 4, 4, 4, 3, 6, 6, 4, 6,
	6, 4, 8, 8, 8, 8, 4, 6, 7, 7,
	7, 9, 4, 7, 5, 4, 4, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 8, 8, 0, 2, 3, 4, 4, 4,
	4, 4, 4, 0, 3, 4, 7, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 3, 3, 1, 2, 2, 1, 2,
	1, 2, 2, 1, 2, 0, 1, 0, 2, 1,
	2, 4, 0, 2, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 0, 3, 1, 3,
	1, 0, 2, 1, 0, 3, 1, 3, 2, 0,
	1, 1, 0, 2, 4, 4, 1, 1, 0, 2,
	4, 2, 4, 1, 3, 5, 4, 6, 0, 3,
	1, 3, 3, 5, 1, 1, 1, 1, 0, 5,
	1, 3, 1, 2, 3, 1, 1, 3, 3, 3,
	3, 3, 1, 3, 1, 2, 2, 3, 1, 1,
	1, 1, 1, 3, 3, 3, 1, 2, 1, 1,
	1, 1, 1, 1, 0, 1, 0, 2, 0, 3,
	0, 1, 0, 3, 3, 1, 1, 0, 1, 1,
	1, 1, 1, 0, 1, 0, 2, 1, 1, 1,
	3, 1, 1, 1, 1, 1, 1, 0, 2, 0,
	1, 0, 4, 0, 1, 0, 3, 0, 3, 0,
	4, 0, 3, 0, 3, 3, 1, 3, 2, 4,
	1, 2, 1, 2, 2, 2, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -360, -1, -3, -9, -10, -11, -12, -13, -15,
	-51, -16, -17, -18, -57, -58, -59, -63, -64, -65,
	-61, -60, -24, -27, -19, -67, -28, -29, -30, -31,
	-32, -33, -34, -35, -36, -4, 6, 7, -91, 29,
	-53, 180, -52, 183, 182, 218, 184, 211, 64, 341,
	-66, 344, 345, -365, -216, 269, 270, 20, 37, 346,
	348, 30, 31, 232, 286, 288, 313, -5, -90, -6,
	181, 342, 213, 212, 26, 492, -361, 68, 611, -157,
	15, -68, -366, -68, -71, 9, 10, 8, 441, -68,
	-288, -214, 108, 68, 23, -209, -220, 88, 432, 188,
	-218, 282, 284, -207, -208, -217, 242, 252, 44, 199,
	198, 253, 189, 282, 189, 190, 192, 432, 188, 225,
	224, 282, 284, 189, -112, -235, -224, -225, 300, 72,
	-223, 458, 462, 465, 466, 471, 290, 81, 322, 323,
	314, 324, 209, 283, 289, 292, 315, 578, 325, 327,
	328, 452, 453, 192, 202, 596, 307, 210, 489, 253,
	606, 599, 294, 401, 341, 357, 349, 372, 490, 549,
	264, 340, 418, 297, 257, 320, 550, 407, 413, 267,
	344, 427, 233, 551, 261, 263, 262, 247, 457, 268,
	36, 214, 368, 303, 242, 552, 545, 236, 35, 27,
	235, 430, 99, 553, 331, 415, 389, 332, 231, 554,
	494, 301, 414, 364, 313, 117, 240, 279, 411, 333,
	555, 390, 394, 556, 419, 287, 278, 557, 558, 334,
	559, 191, 293, 560, 243, 421, 298, 388, 200, 491,
	48, 222, 422, 392, 398, 561, 330, 562, 563, 564,
	565, 311, 309, 310, 312, 254, 259, 53, 186, 396,
	395, 397, 260, 417, 377, 375, 566, 567, 302, 206,
	568, 569, 376, 18, 570, 571, 425, 305, 572, 573,
	574, 487, 575, 576, 416, 391, 393, 241, 116, 577,
	308, 412, 317, 493, 291, 579, 336, 221, 216, 426,
	326, 580, 581, 582, 583, 584, 285, 284, 345, 318,
	346, 265, 585, 586, 587, 588, 251, 234, 429, 420,
	52, 403, 589, 321, 337, 406, 342, 228, 7, 258,
	299, 410, 319, 266, 252, 255, 379, 223, 590, 591,
	366, 367, 343, 226, 218, 111, 428, 544, 282, 338,
	51, 229, 592, 593, 256, 230, 347, 296, 369, 189,
	133, 373, 418, 180, 408, 409, 415, -282, 416, 224,
	227, -240, 189, -202, 407, 287, 308, 462, 230, 231,
	190, 191, 32, 420, 419, 411, -235, 193, 347, -77,
	184, 219, -112, -48, 72, 271, -48, 29, 72, 72,
	36, 72, 346, 410, 410, 75, 493, 233, 21, -352,
	-333, 317, -351, -331, 181, 180, 10, 182, 322, 323,
	324, 190, 8, 30, 578, 207, 325, 326, 6, 211,
	327, 328, 225, 9, 329, -336, 74, 72, -223, 21,
	-352, -333, 317, -211, -210, 339, 398, 6, -70, 5,
	-198, 194, 343, -88, 548, -97, -237, -235, -224, 74,
	-8, -3, -90, -175, 17, 16, -74, 54, 55, -69,
	-82, 124, -84, -235, -121, 91, -127, 28, 72, -223,
	24, -126, 300, 219, -122, -149, -224, -148, -100, 133,
	-239, 122, 123, 130, 92, 176, -134, -132, -133, -135,
	-137, -138, 74, 73, 82, 75, 76, 77, 78, 83,
	84, 85, -227, -225, -222, 458, 462, 465, 466, 471,
	-146, -361, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 58, 59, 456, 188, 442, 443,
	370, 8, 444, 445, 446, 488, 209, 450, 94, 47,
	533, 431, 440, 439, 438, 436, 437, 433, 435, 434,
	452, 453, 195, 432, 128, 441, 475, 476, 477, 478,
	479, 480, 481, 482, 484, 485, 483, 459, 460, 461,
	463, 464, 467, 468, 469, 470, 472, 473, 474, 495,
	185, 181, 184, 90, 23, 25, 496, 239, 93, 355,
	384, 449, 16, 20, 203, 187, 373, 201, 132, 197,
	204, 273, 275, 180, 62, 497, 274, 408, 498, 499,
	500, 501, 363, 361, 272, 502, 10, 26, 212, 246,
	503, 359, 182, 237, 97, 98, 505, 41, 40, 306,
	276, 213, 506, 360, 507, 508, 19, 65, 205, 11,
	199, 227, 605, 509, 286, 13, 115, 14, 510, 511,
	512, 513, 194, 110, 190, 595, 60, 244, 514, 353,
	515, 516, 517, 518, 519, 354, 87, 520, 521, 107,
	522, 56, 486, 32, 232, 546, 447, 523, 524, 38,
	37, 383, 387, 382, 525, 399, 108, 17, 30, 526,
	527, 220, 386, 352, 381, 547, 528, 529, 249, 63,
	339, 362, 609, 33, 66, 217, 335, 304, 42, 88,
	15, 245, 61, 34, 454, 112, 610, 365, 196, 224,
	531, 423, 248, 532, 113, 358, 548, 207, 109, 348,
	183, 316, 270, 208, 534, 288, 535, 238, 114, 409,
	536, 537, 451, 29, 211, 269, 351, 198, 538, 250,
	281, 271, 280, 539, 540, 295, 43, 607, 594, 189,
	39, 96, 385, 350, 380, 193, 448, 225, 277, 5,
	44, 31, 404, 9, 329, 64, 67, 374, 371, 541,
	378, 608, 12, 542, 455, 492, 424, 89, 543, 405,
	-68, -68, -68, -187, 343, -194, -191, 419, 420, -192,
	-195, -189, -149, 398, 575, 576, 418, 373, 417, -227,
	-235, 300, 219, 458, 133, 459, 460, 461, 94, 370,
	442, 462, 475, 433, 435, 431, 434, 432, 28, 476,
	24, 85, 477, 456, 195, 8, 176, 463, 464, 478,
	479, 480, 58, 436, 437, 488, 465, 466, 128, 91,
	481, 482, 83, 484, 485, 533, 441, 59, 483, 188,
	469, 468, 467, 470, 444, 445, 471, 84, 438, 439,
	440, 47, 473, 472, 474, -2, -5, 6, -112, -289,
	-276, -280, -227, -224, -225, -226, 215, 204, -303, 72,
	-223, 300, 219, 50, 86, 55, 54, 201, 190, 192,
	441, -205, 195, -205, 225, 224, -219, 250, -205, -205,
	189, -218, 100, 100, -54, -112, -335, -330, -336, -204,
	195, -227, -204, -204, -204, -204, -204, -204, -204, -112,
	177, -104, -112, 72, 29, -203, 108, 12, 432, 188,
	189, 224, 225, 192, -284, 11, 110, 228, 228, 228,
	229, 228, -201, 410, 412, 226, 413, 414, 12, -85,
	108, 19, -361, -175, -175, 125, 72, 346, 193, -62,
	-3, -12, -10, -11, -8, 100, -129, 23, 29, 29,
	74, 51, 29, -43, -42, -44, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 29, -314,
	68, -271, 398, 72, -327, -328, -112, 75, 75, 66,
	66, 69, 193, 69, 66, -353, 318, 68, -353, 284,
	318, 319, 252, 282, 192, -353, -353, 284, -353, -353,
	-353, -353, -353, 410, -353, -353, -353, 320, 321, -353,
	408, 192, -353, -353, -353, -353, -353, 71, 66, 69,
	308, 66, 11, 66, -300, 133, 331, 332, 333, 334,
	330, 308, 335, 336, 337, 228, 338, -68, -7, -5,
	-361, 21, 22, 189, 423, 69, -88, -178, -361, -362,
	70, -176, 19, 30, -130, 75, 78, -158, -161, -84,
	-235, 50, -72, 21, 22, 80, 11, -230, 90, 88,
	89, 107, -229, 23, 72, -223, -224, 74, -225, -226,
	177, -84, -124, 110, 91, 108, 109, 93, 119, 118,
	129, 122, 123, 124, 125, 126, 127, 128, 120, 121,
	132, 100, 101, 102, 103, 104, 105, 106, -199, -361,
	-100, -361, 177, -361, 177, 178, 179, -127, -127, -127,
	-127, -127, -127, -127, -361, 177, 177, -361, -361, -361,
	-361, -361, -8, -141, -84, 492, -361, -361, -361, -361,
	-361, -361, -361, -361, -361, -361, -361, -361, -361, -361,
	-361, -152, -84, -361, -361, -364, -136, -361, -364, -136,
	-364, -136, -364, -361, -364, -136, -364, -136, -364, -364,
	-136, -364, -361, -361, -361, -361, -361, -361, -361, -361,
	-361, -361, -361, -361, -361, -361, -361, -361, -361, -361,
	-361, -361, -361, -361, -361, -361, -361, -361, -361, -361,
	-361, -198, -198, 11, -104, -105, -115, -235, 69, -188,
	-193, 421, 423, 343, -192, -192, -234, -227, 74, 28,
	100, 29, 177, -157, -68, 70, 69, -280, -242, -248,
	-250, -249, -251, -246, -247, 370, 373, 377, 375, 371,
	376, 133, 374, 379, 380, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 29, 214, 366, 367, 368, 369,
	390, 391, 392, 393, 394, 395, 396, 397, 349, 372,
	490, 350, 351, 352, 353, 354, 355, 357, 358, 359,
	360, 361, 362, 363, 364, -242, -242, -242, -242, 72,
	228, -224, -303, 68, -227, -112, -220, -218, 72, 91,
	72, -111, -227, -235, -118, -227, -235, 251, -339, -338,
	-330, -333, -205, -219, -330, 256, 254, 255, 69, 193,
	69, 193, 71, -104, 24, 66, -106, -112, 72, 72,
	-111, -118, -332, -330, -333, -236, -235, -221, 495, 185,
	21, 181, 184, 90, 23, 25, 496, 458, 239, 93,
	355, 133, 459, 460, 461, 384, 449, 16, 20, 203,
	94, 187, 370, 373, 201, 132, 197, 204, 273, 275,
	442, 462, 475, 180, 62, 497, 433, 435, 431, 434,
	274, 432, 408, 498, 499, 500, 501, 363, 361, 272,
	28, 502, 10, 476, 26, 212, 246, 22, 503, 126,
	359, 182, 237, 97, 98, 505, 41, 40, 306, 24,
	276, 213, 85, 506, 477, 360, 507, 508, 19, 65,
	205, 11, 199, 227, 605, 509, 286, 13, 456, 115,
	14, 510, 511, 512, 513, 195, 194, 110, 190, 595,
	60, 244, 8, 514, 353, 515, 516, 517, 518, 519,
	354, 176, 87, 520, 521, 107, 522, 56, 463, 464,
	486, 45, 32, 232, 478, 479, 546, 480, 447, 523,
	524, 38, 37, 383, 387, 382, 525, 399, 58, 108,
	17, 436, 437, 30, 526, 527, 488, 465, 220, 386,
	352, 381, 547, 528, 466, 529, 128, 249, 63, 91,
	339, 481, 482, 83, 362, 609, 33, 66, 217, 335,
	304, 42, 88, 15, 245, 61, 34, 454, 112, 610,
	484, 365, 196, 224, 531, 423, 248, 532, 113, 485,
	358, 548, 207, 109, 348, 183, 533, 441, 316, 270,
	208, 534, 288, 59, 535, 238, 114, 483, 188, 409,
	536, 6, 537, 451, 29, 211, 269, 351, 198, 538,
	250, 281, 271, 280, 539, 49, 540, 295, 43, 469,
	468, 467, 470, 607, 57, 444, 445, 471, 594, 189,
	39, 96, 385, 350, 380, 193, 448, 225, 84, 277,
	5, 44, 31, 404, 9, 329, 64, 67, 438, 439,
	440, 47, 374, 371, 541, 473, 378, 472, 474, 608,
	95, 12, 542, 455, 492, 424, 89, 543, 405, 69,
	-203, 74, -239, -84, -205, -205, -112, -112, -112, -112,
	-112, -203, -203, -203, -203, -200, 11, 110, 11, -200,
	-200, -84, -127, -330, 434, 124, -235, 72, 72, 346,
	72, 33, -43, -43, 74, -43, 69, 100, -43, 70,
	-141, -313, 595, 69, -329, 23, 423, 424, 399, -355,
	189, 227, 224, -355, -351, 326, -332, -331, -330, -353,
	-354, -227, -353, -353, -353, 410, -353, -353, -353, -353,
	-353, -353, -353, -353, -336, -355, 286, 69, -355, -332,
	-330, 330, 330, 330, 330, 330, 330, -74, -8, -112,
	424, 425, -97, 23, -177, -227, -228, -224, -225, -226,
	215, -221, 458, 462, 465, 466, 471, -184, 87, 9,
	110, 69, 18, 69, -174, 25, 26, 177, -128, 51,
	75, 78, -206, 49, -112, -84, -84, -84, -139, 83,
	91, 84, 85, -229, 215, 124, -236, -228, -225, 300,
	219, -221, -227, -127, -140, -146, -100, 79, 110, 108,
	109, 93, -127, -127, -127, -127, -127, -127, -127, -127,
	-127, -127, -127, -127, -127, -127, -127, -238, 72, 74,
	72, -228, -80, -83, 124, -84, -235, -228, -126, 83,
	-126, -227, -72, -228, -228, -72, -72, -72, -72, -72,
	-362, 69, -362, -8, -80, -80, -80, -362, -84, -84,
	-80, -80, -149, 74, -80, -149, 74, -80, -127, 447,
	448, 449, -80, -80, -72, -150, -151, 95, -149, -80,
	-362, -127, -227, -227, -80, -81, -80, -80, -80, -362,
	-362, -83, -80, -83, -80, -80, -362, -362, -362, -362,
	-80, -80, -80, -80, -80, -80, -80, -80, -80, -80,
	-80, -80, -114, 87, -112, -87, -92, -94, -95, -96,
	-116, -99, -361, -93, 486, -112, -100, 72, -112, -104,
	-363, 11, 67, -363, 69, 177, -191, -194, 69, 422,
	424, 425, -188, -258, 132, 66, 86, -84, -228, -236,
	-175, -74, -291, -292, -293, -228, 74, 75, 81, 322,
	292, -276, -278, -279, -280, -294, 204, -302, 196, 198,
	199, 44, -281, 205, 190, 45, -243, -266, 403, 404,
	-252, 68, -252, -252, 378, 370, 373, 371, -252, -252,
	-252, -252, -252, -257, 373, -257, -257, -257, -257, 371,
	68, 68, -252, -252, -252, -268, 68, -268, 365, -269,
	68, -269, -269, -269, -269, -243, -243, -243, -243, -303,
	-303, -303, -84, -231, 67, 23, 192, -264, -263, -260,
	-261, -262, -259, 28, 24, -264, -49, 239, 210, 177,
	68, 177, 242, 243, -334, 69, 28, -340, 283, -112,
	219, -112, -112, -330, -330, -336, -310, 208, 203, -112,
	69, 69, -112, 74, 72, 72, -129, -285, 11, 110,
	-203, -235, -235, -112, -129, -203, -78, 215, 67, -364,
	-362, 72, -127, -42, -126, 70, -113, 87, 74, -328,
	-237, 398, 424, -356, 124, -227, -356, -359, 492, 193,
	70, 69, -353, -356, 304, 286, -356, 11, -301, 19,
	-72, -362, -56, -55, 185, 182, 183, 186, 187, -306,
	401, 181, 236, 235, 221, -99, -361, -362, 69, 177,
	-183, 34, 35, -227, 52, -130, -130, -161, -197, 19,
	11, 47, 47, -73, 57, 83, 84, 85, 177, -361,
	-140, -127, -127, -127, -78, 90, -362, 69, -362, 177,
	-81, -80, -80, -80, -80, -80, -84, -362, -362, -362,
	-362, 69, 67, 23, -362, 67, -362, 11, 11, -362,
	11, 11, -362, -362, 11, -127, -127, -127, -362, -362,
	-80, -153, -151, 97, -84, -362, -362, -362, 69, 69,
	-362, -362, -362, -362, -162, 454, -162, -362, -362, -362,
	-362, -362, -162, -162, -162, -162, -362, -362, -362, -362,
	-362, -362, -362, -362, -362, -362, -362, -362, -181, 112,
	-112, 29, 69, -107, -109, -108, -110, 56, 60, 62,
	57, 58, 59, 63, -214, -87, -98, 47, -361, -361,
	-117, 112, -119, 23, -237, 64, 194, 65, -361, -181,
	67, -87, -87, -115, -235, 124, -193, -196, 426, 423,
	429, 72, 74, 177, -176, 69, -293, 100, -280, 68,
	72, -286, -224, 45, -281, -283, -281, -281, -286, 72,
	-286, 45, 83, 91, -255, -256, -270, -273, -253, 23,
	605, 406, 28, 66, 401, 196, 45, 44, 199, 81,
	-267, 405, 75, -257, -257, -252, -252, -252, 378, -252,
	-257, -258, 133, 29, -258, 133, -258, 133, -258, 133,
	-258, 133, -257, -274, 74, -274, 75, -268, 75, 70,
	66, -227, -171, -112, -261, -260, -262, 373, 418, 132,
	430, -50, 8, 9, 10, -227, -315, -316, -317, -227,
	110, 244, 245, -227, -343, 316, -338, 284, 293, 90,
	16, 492, 193, 193, -112, -330, -120, 12, 72, 72,
	-200, -203, -127, -333, 230, 231, -181, 189, -329, 193,
	177, 177, 193, 307, -332, -227, 11, 11, 304, 11,
	-332, 340, -206, 69, -215, -281, -312, -279, -280, -311,
	197, 204, -215, 204, 201, -281, 205, 196, 197, -212,
	-281, 193, 23, -215, -215, -287, 100, -215, 32, 32,
	112, -228, -228, 69, 74, 74, 53, -112, -79, -172,
	124, -228, -81, -78, 90, -127, -83, 124, -236, -362,
	-362, -362, -362, -362, -362, -241, 133, 370, 214, 368,
	361, 388, 375, 403, 366, 404, -238, -241, -238, -127,
	-127, -127, -127, -127, 11, 11, 11, 489, -157, 99,
	-84, 96, -127, -127, -227, -167, -361, -162, -162, -162,
	-162, -162, -163, -162, -163, -163, -163, -163, -163, -163,
	-163, -163, -163, -163, -163, -125, 29, 47, -361, -8,
	-361, -186, -190, -149, -224, -226, 215, 300, 219, 458,
	462, 465, 466, 471, -92, -94, -94, -92, -94, 56,
	56, 56, 61, 56, 61, 56, -108, -237, -362, -362,
	-145, 238, -127, -361, 33, -237, -119, 190, 190, 190,
	-81, -120, -87, -120, -120, 177, 423, 427, 428, -292,
	-293, -296, -295, -227, -224, 196, -302, 44, -302, -286,
	-286, -286, -286, 68, 83, -361, 606, 75, -127, 9,
	45, 45, 45, 74, 70, -258, 133, -258, 133, -257,
	-252, -258, 133, 72, 133, -258, 133, 70, 69, 70,
	69, 70, 69, -123, 553, 91, -112, -173, 23, 29,
	-287, -287, -287, 66, 70, 69, -242, -227, -227, -227,
	-346, 492, 289, -344, -342, 295, 296, 297, 298, 299,
	-333, 294, -340, 291, 74, 72, -112, -330, -84, -129,
	-257, -112, -332, 124, 124, -227, -332, 304, -358, 492,
	-332, -332, 11, -332, 74, -73, -55, 68, -275, 72,
	-223, -286, -208, 196, 72, 72, 72, -224, -223, -225,
	-226, 72, -224, -223, -225, -226, -227, 45, 45, 72,
	-112, -227, -275, 72, -84, -227, -227, 177, -227, -184,
	69, -82, -362, -127, 177, -163, -163, -163, -163, -163,
	-362, -252, -252, -252, -269, -252, 354, -252, 354, -362,
	-362, -362, 19, 19, 19, 19, -362, -127, -127, -127,
	-361, -76, 451, -84, 69, 69, -232, 72, -185, 66,
	-186, -144, -147, -146, -361, -8, -362, -177, 6, 492,
	-182, -227, -120, 69, 100, 100, 100, 100, -102, -101,
	66, 67, -103, 66, -101, 56, 56, -180, 68, 69,
	-146, -361, 69, -182, -127, -119, -361, -361, -361, -362,
	-157, -120, 70, 69, -252, -252, 45, -283, -179, -227,
	-127, 23, -133, 431, 440, 439, 438, 436, 437, 433,
	435, 434, 452, 453, -258, 133, -257, 74, -257, 75,
	75, 553, 68, -8, -171, -287, 72, 133, 72, 133,
	74, -112, -318, -319, -320, 81, 491, 91, 246, 247,
	206, 248, 249, 250, -317, -242, -242, -242, -349, -350,
	-348, 292, 314, 315, 300, -347, -345, 309, 310, 311,
	312, 90, 74, 74, 74, -341, 283, 90, 292, 16,
	23, -203, -321, -201, -358, -358, 286, -332, -79, -275,
	-159, 209, 210, -242, -242, -231, -283, 45, 72, -213,
	193, 23, 193, -159, -275, 29, 182, 87, -228, -89,
	11, -172, -172, 124, -257, 72, -127, -127, -127, -127,
	-362, -362, -362, -127, -362, 74, -127, -127, -143, 112,
	27, -185, 69, -362, -362, 47, -362, -362, 69, -157,
	-190, -84, -84, -84, -84, -84, 68, -84, -179, 238,
	74, -362, -119, -214, -179, -179, -179, -175, -298, -297,
	67, 200, 81, -295, -174, -174, -286, -286, 70, 69,
	-362, -361, -258, 133, -258, 133, 70, 70, -296, -171,
	-173, 72, 133, 19, -172, -320, 74, 250, 246, 250,
	250, 250, 250, 251, -337, 81, 290, -348, 301, 558,
	285, 316, 75, 75, 111, 30, 31, -345, 75, 75,
	75, 75, -342, 16, 492, -340, 291, 74, 74, -322,
	38, -324, 39, -357, 23, -357, 304, 11, 70, 72,
	-243, -243, 68, -286, -286, 72, -227, -159, 28, 28,
	-361, -120, -87, -82, -362, -362, -362, -362, -75, 110,
	492, -362, -362, -157, 16, 45, -147, -144, 47, -8,
	-361, -227, -175, -179, 70, -146, 413, -117, -237, -362,
	-362, -362, -297, 72, -287, 74, 207, -227, -265, 608,
	607, -127, 70, -8, 237, -173, 36, 36, 242, 243,
	74, 74, 28, 302, 176, 28, 75, 176, 457, 291,
	74, 72, 292, -254, 194, -325, 43, -323, -272, 42,
	16, -330, -87, -296, -231, 68, -127, -304, -305, 112,
	-154, 13, -172, -362, 490, 63, 493, -168, 114, 113,
	-141, 9, -144, -8, 70, -361, -119, 75, -112, -362,
	-299, -298, -171, 238, -21, -3, -10, -11, -12, -13,
	-15, -51, -16, -17, -22, -23, -18, -57, -58, -66,
	-64, -65, -61, -60, -26, -24, -27, -19, -28, -29,
	-30, -34, -35, -25, -36, 94, 195, 272, 341, 75,
	28, 75, 28, 305, 292, 23, -180, 75, -324, 16,
	-326, 40, 41, 74, 492, -120, 70, 68, -296, -362,
	69, -227, -155, 14, 16, 53, 491, 494, -362, -169,
	93, -170, 111, 457, -131, 75, 176, -169, -186, -362,
	-290, -277, -228, 68, -265, -160, 240, 241, -171, -84,
	-84, 72, -47, -233, 275, 276, 277, -228, -37, -21,
	303, 303, 74, 38, 114, 74, 16, 16, 284, -154,
	-299, -296, 70, -305, 47, -165, 455, -156, -84, -142,
	-86, -84, 53, -170, 116, 117, 238, 116, 117, -126,
	-362, 69, -242, -179, -171, 72, 72, -38, -39, 95,
	96, 273, 274, 278, -242, 69, 611, 74, 74, 28,
	289, 21, -333, -155, 70, -299, 222, -164, -166, -227,
	69, 492, 90, -227, -362, -277, -244, 487, 24, 70,
	-173, 99, 97, -39, -84, -37, 19, 19, 19, 28,
	-228, 99, -21, 306, -165, -299, 223, 69, 23, -86,
	493, -170, 23, 74, 487, -308, -309, 66, -14, -20,
	-13, -10, -11, -12, 341, -90, 94, -37, 96, 611,
	-48, 75, -8, -46, -45, 75, -48, 280, 91, 281,
	72, -127, -333, -361, -166, -167, 494, -237, -245, 83,
	28, 74, -309, 66, -308, 66, 10, 9, -171, -37,
	611, -37, 99, 97, -40, -41, 98, -21, 69, 279,
	-127, 220, 66, -127, -307, 208, 203, 206, 29, -307,
	611, 99, 611, 195, -37, 99, 97, -41, -84, -45,
	-362, -362, 505, 66, 202, 28, 83, 99, 94, 611,
	195, -37, 96, 505, 99, 611, -37, 195, 99, 611,
	195,
}

var yyDef = [...]int{
	-2, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, -2, 781, 781, 0, 781,
	883, -2, 635, 0, 0, 0, 0, -2, 754, 755,
	756, 760, 761, 776, 778, 0, 345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 556, 41, 56, 0,
	1270, 0, 779, 768, 769, 0, 0, 2116, 2, 1202,
	0, 790, 783, 0, 781, 781, 781, 66, 67, 0,
	98, 0, 0, 0, 884, 0, 0, 0, 1268, 1268,
	249, 1268, 1268, 0, 1284, 247, 0, 1265, 1280, 1281,
	1282, 0, 0, 0, 1266, 0, 1266, 1266, 1266, 1266,
	1266, 1266, 1266, 0, 700, 912, 914, 915, 916, 1293,
	1294, 2111, 2112, 2113, 2114, 2115, 2087, 2088, 2089, 2090,
	2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100,
	2101, 2102, 2103, 2104, 1882, 1883, 1884, 1885, 1886, 1887,
	1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897,
	1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907,
	1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917,
	1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927,
	1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937,
	1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947,
	1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957,
	1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967,
	1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977,
	1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987,
	1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997,
	1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007,
	2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017,
	2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027,
	2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037,
	2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047,
	2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057,
	2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067,
	2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077,
	2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 0,
	0, 0, 745, 0, 711, 712, 713, 0, 715, 0,
	0, 0, 0, 0, 725, 728, 732, 0, 1202, 1202,
	577, 578, 579, 750, 751, 739, 752, 0, 0, 55,
	0, 0, 864, 324, 326, 0, 346, 0, 349, 352,
	1299, 762, 0, 0, 1324, 1325, 0, 0, 0, 0,
	0, 2020, 192, 263, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 0, 194, 194, 194, 2028, 194, 0,
	194, 194, 194, 194, 194, 262, 252, 253, 254, 0,
	0, 0, 2020, 0, 557, 554, 555, 781, 0, 785,
	0, 1271, 757, 53, 0, 57, 1218, 885, 886, 887,
	0, 39, 0, 1208, 0, 0, 793, 791, 792, 782,
	0, 804, 834, 0, 926, 1766, 932, -2, -2, -2,
	1677, 975, 976, 977, 978, 979, 980, 981, 982, 1621,
	0, 0, 0, 0, 0, 1719, 1005, 1006, 1007, 1008,
	1009, 1010, 1175, 1176, 1177, 1178, 1179, 1180, 1181, -2,
	-2, -2, 1164, 1165, 0, -2, -2, -2, -2, -2,
	1235, 0, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107,
	1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117,
	1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127,
	1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137,
	1138, 1139, 1140, 1141, 1745, 1810, 1696, 1815, 1640, 0,
	1632, 1710, 1839, 1840, 0, 1753, 2093, 0, -2, 1865,
	1803, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	2102, 2103, 1703, 1651, 1763, 1804, 1642, 1663, 1682, 1731,
	1732, 1734, 1768, 1769, 1787, 1796, 1814, 1622, 1623, 1624,
	1726, 1727, 1836, 1835, 1834, 1837, 1871, 1869, 1872, 1609,
	1610, 1611, 1612, 1613, 1614, 1615, 1616, 1618, 1619, 1620,
	1625, 1626, 1627, 1628, 1629, 1631, 1633, 1634, 1635, 1636,
	1637, 1638, 1639, 1643, 1644, 1645, 1650, 1652, 1653, 1654,
	1655, 1656, 1657, 1658, 1659, 1661, 1662, 1664, 1665, 1666,
	1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676,
	1678, 1679, 1681, 1683, 1684, 1685, 1686, 1687, 1688, 1689,
	1690, 1691, 1692, 1693, 1694, 1695, 1697, 1698, 1699, 1700,
	1701, 1702, 1704, 1705, 1706, 1707, 1708, 1709, 1711, 1712,
	1713, 1714, 1715, 1716, 1717, 1718, 1720, 1721, 1722, 1723,
	1724, 1725, 1728, 1729, 1730, 1733, 1735, 1736, 1737, 1738,
	1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751,
	1752, 1755, 1756, 1757, 1758, 1759, 1760, 1762, 1764, 1765,
	1767, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779,
	1780, 1781, 1782, 1783, 1784, 1785, 1786, 1788, 1789, 1790,
	1791, 1792, 1793, 1794, 1795, 1797, 1798, 1799, 1800, 1801,
	1802, 1805, 1806, 1807, 1808, 1809, 1811, 1812, 1813, 1816,
	1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826,
	1827, 1828, 1829, 1830, 1831, 1832, 1833, 1838, 1842, 1843,
	1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1853, 1854,
	1855, 1856, 1857, 1858, 1859, 1860, 1861, 1866, 1867, 1868,
	1870, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881,
	1270, 1270, 0, 83, 2070, 0, 1242, -2, -2, 1244,
	0, 0, 0, -2, -2, -2, -2, 1633, -2, 1164,
	0, 0, 0, 1617, 1621, 1622, 1623, 1624, 1630, 1632,
	1640, 1641, 1642, 1646, 1647, 1648, 1649, 1651, 1660, 1663,
	1677, 1680, 1682, 1696, 1703, 1710, 1719, 1726, 1727, 1731,
	1732, 1734, 1745, 1748, 1749, 1753, 1754, 1761, 1763, 1766,
	1768, 1769, 1770, 1787, 1796, 1803, 1804, 1810, 1814, 1815,
	1834, 1835, 1836, 1837, 1839, 1840, 1841, 1852, 1862, 1863,
	1864, 1865, 1869, 1871, 1872, 99, 1194, 781, 100, 0,
	390, 391, 0, 0, 0, 0, 0, 0, 602, 1287,
	1288, 2105, 2106, 2107, 2108, 2109, 2110, 0, 0, 0,
	247, 0, 0, 0, 0, 0, 242, 0, 0, 0,
	1268, 249, 0, 0, 681, 0, 682, 0, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 699,
	0, 701, 77, 702, 745, 704, 0, 0, 1268, 1268,
	0, 0, 0, 0, 0, 604, 605, 745, 745, 745,
	745, 742, 0, 742, 722, 742, 740, 741, 0, 727,
	0, 0, 0, 735, 736, 0, 763, 0, 0, 770,
	772, 773, 774, 775, 771, 0, 780, 0, 0, 0,
	328, 0, 0, 348, 330, 0, 333, 334, 335, 336,
	337, 338, 339, 340, 341, 342, 343, 344, 0, 351,
	0, 1297, 1300, 767, 1315, 1316, 0, 1326, 1327, 198,
	198, 0, 0, 0, 0, 161, 194, 0, 163, 194,
	194, 194, 0, 194, 194, 170, 171, 194, 173, 174,
	175, 176, 177, 194, 179, 180, 181, 194, 194, 184,
	194, 194, 187, 188, 189, 190, 191, 261, 198, 0,
	0, 198, 0, 0, 539, 0, 0, 0, 0, 544,
	545, 546, 547, 0, 0, 550, 551, 790, 43, 62,
	0, 786, 787, 0, 0, 0, 54, 0, 0, 61,
	2117, 47, 0, 0, 1203, 1206, 1207, 1195, 1196, 1199,
	0, 0, 788, 794, 795, 784, 0, 805, 0, 0,
	0, 0, 835, 0, 838, 839, 840, 841, 842, 843,
	0, 930, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 954, 955, 956, 957, 958, 959, 960, 933, 0,
	947, 0, 0, 0, 0, 0, 0, 998, 999, 1000,
	1001, 1002, 1003, 0, 793, 0, 0, 793, 793, 793,
	793, 793, 0, 0, 973, 1877, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	793, 0, 1156, 0, 0, 1067, 1076, 0, 1068, 1077,
	1069, 1078, 1070, 0, 1071, 1079, 1072, 1080, 1073, 1074,
	1081, 1075, 0, 0, 0, 969, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 79, 912, 0, 84,
	86, 0, 0, 2070, 1245, 1246, 513, 1259, 1260, 1261,
	0, 1257, 0, 1202, 790, 619, 0, 392, 408, 502,
	420, 421, 422, 495, 424, 495, 495, 0, 495, 495,
	495, 495, 495, 510, 510, 510, 510, 510, 466, 467,
	468, 469, 470, 0, 0, 443, 495, 495, 495, 447,
	485, 486, 487, 488, 489, 490, 491, 492, 425, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 497, 497,
	499, 499, 499, 499, 499, 408, 408, 408, 408, 0,
	0, 0, 601, 0, 1285, 0, 0, 249, -2, 0,
	-2, 0, 907, 0, 0, 917, 0, 0, 110, 279,
	265, 109, 0, 243, 248, 244, 245, 246, 0, 0,
	0, 0, 256, 696, 1267, 0, 689, 75, 690, 691,
	692, 693, 694, 258, 695, 913, 1295, 1296, 1328, 1329,
	1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339,
	1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349,
	1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359,
	1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369,
	1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379,
	1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389,
	1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399,
	1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409,
	1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419,
	1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429,
	1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439,
	1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449,
	1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459,
	1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469,
	1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479,
	1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489,
	1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499,
	1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509,
	1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519,
	1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529,
	1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539,
	1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549,
	1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559,
	1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569,
	1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579,
	1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589,
	1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599,
	1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 0,
	703, 746, 0, 748, 0, 0, 864, 708, 709, 710,
	606, 716, 717, 718, 724, 745, 0, 0, 0, 864,
	745, 726, 961, 729, 1084, 0, 753, 765, 764, 0,
	777, 0, 325, 327, 329, 347, 0, 0, 350, 353,
	0, 0, 0, 0, 1318, 0, 1320, 1322, 0, 0,
	199, 200, 201, 0, 193, 0, 216, 264, 0, 162,
	0, 196, 164, 165, 166, 194, 168, 169, 172, 178,
	182, 183, 185, 186, 260, 0, 0, 0, 0, 159,
	0, 540, 541, 542, 543, 552, 549, 793, 0, 0,
	758, 759, 58, 0, 0, -2, 0, 1224, 1225, 1226,
	1227, 1292, -2, -2, -2, -2, -2, 37, 0, 1209,
	0, 0, 0, 0, 1198, 1200, 1201, 0, 0, 1183,
	0, 0, 796, 789, 40, 927, 928, 929, 931, 948,
	0, 950, 952, 836, 837, 806, 0, 1166, 1167, 1168,
	1169, -2, 1291, 938, 939, 963, 964, 965, 0, 0,
	0, 0, 961, 943, 0, 983, 984, 985, 986, 987,
	988, 989, 990, 991, 992, 993, 994, 997, 1098, 1099,
	0, 1172, 0, 971, 800, 801, 0, 1173, 995, 1182,
	996, 1004, 969, 1171, 1170, 0, 0, 0, 0, 0,
	966, 0, 1234, 0, 0, 0, 0, 1045, 0, 0,
	0, 0, 979, 1175, 0, 979, 1175, 0, 0, 1735,
	1850, 1626, 0, 0, 0, 1162, 1159, 0, 0, 0,
	1085, 0, 0, 0, 0, 0, 970, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 81, 0, 911, 0, 844, 846, 847, 848,
	849, -2, 0, 853, 0, 920, 967, 1293, -2, 0,
	0, 73, 74, 0, 0, 0, 1243, 0, 0, 0,
	89, 90, 85, 1247, 0, -2, 1254, 1255, 1166, 0,
	1208, 793, 389, 620, 622, 625, 626, 627, 628, 629,
	630, 393, 395, 396, 397, 0, 584, 592, 0, 0,
	582, 584, 584, 0, 580, 581, 400, 505, 503, 504,
	423, 0, 510, 510, 495, 495, 495, 495, 452, 510,
	455, 458, 459, 513, 0, 513, 513, 513, 513, 510,
	0, 0, 444, 445, 446, 435, 0, 436, 497, 438,
	0, 439, 440, 441, 442, 401, 402, 403, 404, 598,
	599, 600, 0, 0, 0, 95, 0, 104, -2, 520,
	521, 522, 0, 517, 1269, 105, 0, 281, 282, 0,
	219, 0, 250, 251, 112, 0, 0, 266, 0, 387,
	388, 0, 683, 0, 685, 255, 687, 697, 698, 688,
	0, 0, 78, 747, 705, 706, 707, 924, 0, 0,
	719, 743, 744, 742, 745, 723, 737, 0, 0, 730,
	0, 766, 865, 331, 332, 354, 81, 0, 1298, 1317,
	0, 1321, 1323, 0, 202, 204, 0, 153, 0, 0,
	195, 0, 167, 0, 0, 0, 0, 0, 548, 0,
	788, 63, 636, 637, -2, 674, 1277, 674, 674, 660,
	567, 674, 0, 0, 0, 59, 0, 1219, 0, 0,
	48, 0, 1926, 51, 0, 1204, 1205, 1197, 0, 1262,
	1263, 1184, 1185, 96, 797, 949, 951, 953, 0, 969,
	940, 961, 944, 0, 941, 0, 935, 0, 1043, 0,
	0, 0, 0, 0, 0, 0, 974, -2, 1041, 1042,
	1044, 0, 0, 0, 1048, 0, 1051, 0, 0, 1091,
	0, 0, 1092, 1056, 0, 0, 0, 0, 0, 1062,
	1194, 0, 1160, 0, 0, 1065, 1066, 1086, 0, 0,
	1087, 1088, 1089, 1090, 1030, 0, 1031, 0, 0, 0,
	0, 0, 1037, 1038, 1039, 1040, 815, 815, 815, 815,
	815, 815, 815, 815, 815, 815, 815, 815, 0, 0,
	910, 0, 0, 0, 0, 0, 0, 888, 0, 0,
	891, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	857, 0, 859, 0, 920, 0, 0, 0, 969, 924,
	0, 924, 924, 80, 0, 919, 87, 88, 0, 0,
	94, 514, 515, 0, 218, 0, 623, 0, 394, 0,
	585, 0, 0, 584, 584, 584, 583, 584, 575, 585,
	576, 0, 409, 0, 411, 412, 413, 414, 415, 0,
	0, 0, 0, 0, 509, 0, 534, 536, 0, 0,
	419, 506, 0, 513, 513, 510, 450, 451, 495, 456,
	513, 460, 477, 0, 461, 478, 462, 479, 463, 480,
	464, 481, 513, 0, 493, 0, 0, 437, 0, 616,
	0, 1286, 97, 0, 523, 524, 525, 0, 567, 567,
	567, 0, 283, 284, 285, 908, 0, 220, 221, 0,
	0, 0, 0, 918, 122, 0, 280, 0, 0, 0,
	0, 0, 0, 0, 76, 259, 714, 0, 607, 608,
	864, 721, 962, 731, 733, 734, 510, 0, 1319, 0,
	0, 0, 0, 0, 214, 197, 0, 0, 0, 0,
	160, 0, 796, 0, 0, 584, 0, 661, 662, 0,
	675, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1278, 1279, 0, 0, 0, 568, 0, 669, 670,
	0, 1222, 1221, 0, 49, 50, 1210, 38, 47, 0,
	807, 1174, 0, 942, 0, 945, 972, 802, 0, 1011,
	815, 815, 815, 815, 815, 0, 495, 495, 1145, 495,
	499, 1148, 495, 1150, 495, 1153, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1157, 1064,
	1163, 0, 0, 0, 808, 809, 811, 1032, 1033, 1034,
	1035, 1036, 1015, 816, 1016, 1017, 1019, 1020, 1022, 1023,
	1024, 1025, 1027, 1028, 1029, 1228, 0, 0, 0, 1213,
	0, 924, 1236, 0, 0, 0, 0, 2105, 2106, -2,
	-2, -2, -2, -2, 845, 879, 881, 0, 876, 889,
	890, 892, 0, 894, 0, 896, 897, 866, 852, 968,
	854, 0, 0, 0, 0, 920, 863, 0, 0, 0,
	0, 1194, 924, 71, 72, 0, 91, 92, 93, 621,
	624, 0, 586, 495, 495, 0, 590, 582, 591, 569,
	571, 572, 574, 0, 410, 0, 0, 418, 507, 0,
	533, 535, 537, 538, 496, 448, 473, 449, 474, 513,
	457, 453, 475, 511, 512, 465, 482, 510, 0, 510,
	0, 500, 0, 603, 617, 0, 0, 0, 95, 567,
	0, 0, 0, 0, 227, 0, 223, 0, 0, 0,
	130, 0, 113, 114, 115, 117, 118, 0, 0, 0,
	111, 0, 268, 0, 271, 272, 684, 686, 925, 745,
	1309, 909, 214, 203, 205, 206, 214, 217, 154, 0,
	155, 157, 0, 156, 553, 96, 638, 0, 671, 0,
	0, 1285, 582, 0, -2, 641, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 0, 667, 0,
	643, 0, 671, 0, 664, 0, 0, 0, 52, 45,
	96, 96, 1012, 946, 0, 1014, 1018, 1013, 1021, 1026,
	1046, 1142, 510, 1146, 1147, 1149, 1151, 1152, 1154, 1050,
	1047, 1049, 0, 0, 0, 0, 1057, 0, 0, 0,
	0, 0, 0, 1161, 0, 0, 813, 812, 64, 0,
	1228, 1211, 1230, 1232, 0, 0, 0, 0, -2, 1604,
	0, 870, 1194, 0, 0, 0, 0, 0, 873, 880,
	0, 0, 874, 0, 875, 893, 895, 850, 0, 0,
	855, 0, 0, 0, -2, 862, 0, 0, 0, 872,
	1202, 70, 559, 0, 1199, 1199, 584, 584, 0, 868,
	0, 0, 508, 1084, 1084, 1084, 1084, 1084, 1084, 1084,
	1084, 1084, 0, 0, 454, 476, 513, 494, 513, 0,
	0, 618, 0, 95, 97, 0, 528, 529, 530, 531,
	532, 0, 96, 228, 229, 0, 0, 0, 234, 0,
	0, 0, 0, 0, 222, 224, 225, 226, 148, 131,
	132, 0, 0, 0, 0, 123, 124, 0, 0, 0,
	0, 0, 119, 120, 121, 267, 0, 0, 270, 0,
	0, 720, 1311, 1305, 207, 207, 0, 158, 0, 0,
	640, 672, 0, 408, 408, 0, 584, 584, 663, 0,
	1275, 1276, 0, 658, 671, 0, 0, 0, 1223, 924,
	0, 0, 798, 803, 1143, 1144, 0, 0, 0, 0,
	1058, 1059, 1060, 1093, 1063, 1158, 0, 0, 1194, 0,
	0, 65, 0, 1233, -2, 0, 0, 82, 0, 1202,
	1237, 1238, 1239, 1240, 1241, 877, 0, 882, 0, 0,
	0, 920, 860, 0, 0, 0, 0, 69, 558, 562,
	0, 567, 0, 587, 588, 589, 570, 573, 0, 0,
	405, 0, 471, 483, 472, 484, 498, 501, 0, 102,
	0, 526, 527, 0, 97, 230, 231, 232, 233, 235,
	236, 0, 0, 0, 108, 0, 0, 133, 0, 0,
	0, 0, 143, 144, 145, 146, 147, 125, 126, 127,
	128, 129, 116, 0, 0, 269, 0, 274, 275, 1272,
	1313, -2, 0, 151, 0, 152, 215, 0, 639, 673,
	398, 399, 0, 1285, 0, 642, 657, 659, 0, 666,
	0, 1186, 46, 96, 1052, 1054, 1053, 1055, 0, 0,
	0, 1082, 1083, 817, 0, 0, 1231, 1212, 0, 1216,
	0, 871, 68, 0, 867, 856, 0, 858, 920, 921,
	922, 923, 563, 564, 0, 566, 0, 869, 416, 406,
	407, 0, 560, 95, 0, 55, 237, 238, 239, 240,
	149, 150, 134, 135, 0, 137, 138, 0, 0, 0,
	277, 0, 273, 866, 0, 1305, 0, 1307, 0, 1304,
	0, 208, 924, 0, 0, 0, 665, 0, 677, 0,
	1191, 0, 799, 1061, 0, 0, 0, 0, 0, 0,
	814, 0, 1215, 0, 878, 0, 861, 565, 0, 405,
	101, 561, 103, 286, 95, 357, 358, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 0, 0, 0, 55, 0,
	139, 0, 141, 142, 276, 0, 36, 0, 1312, 0,
	1310, 0, 0, 1306, 0, 1186, 560, 0, 0, 676,
	0, 0, 827, 0, 0, 1094, 0, 1097, 810, 818,
	0, 821, 0, 0, 0, 832, 0, 819, 1229, -2,
	0, 899, 0, 0, 417, 95, 0, 0, 107, 0,
	0, 1287, 0, 0, -2, -2, -2, 1289, 0, 355,
	136, 140, 278, 1273, 1274, 1314, 0, 0, 0, 1191,
	644, 0, 560, 678, 0, 44, 0, 1192, 1193, 1187,
	1188, 1190, 1095, 0, 822, 823, 824, 825, 826, 0,
	0, 0, 0, 0, 97, 287, 288, 0, 297, 0,
	55, 0, 0, 0, 311, 0, 55, 1308, 1302, 209,
	210, 211, 213, 827, 560, 668, 0, 828, 829, 0,
	0, 0, 0, 833, 0, 900, 901, 0, 0, 593,
	55, 0, 55, 298, 0, 0, 0, 0, 0, 0,
	1290, 241, 356, 0, 42, 645, 0, 0, 0, 1189,
	0, 820, 0, 904, 0, 594, 595, 0, 95, 289,
	290, 291, 292, 293, 55, 56, 295, 0, 55, 55,
	307, 308, 309, 55, 316, 318, 319, 320, 0, 322,
	323, 312, 212, 0, 830, 831, 1096, 898, 902, 0,
	0, 903, 596, 0, 597, 0, 0, 0, 106, 0,
	55, 0, 0, 55, 0, 304, 0, 310, 0, 321,
	0, 1755, 0, 0, 609, 611, 612, 0, 0, 610,
	55, 0, -2, 300, 0, 0, 55, 305, 0, 317,
	679, 680, 905, 0, 613, 614, 615, 294, 296, 55,
	302, 0, 55, 906, 0, 55, 0, 301, 0, -2,
	303,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 92, 3, 3, 3, 127, 119, 3,
	68, 70, 124, 122, 69, 123, 177, 125, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 611,
	101, 100, 102, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 129, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 118, 3, 130,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 82, 83, 84, 85,
	86, 87, 88, 89, 90, 91, 93, 94, 95, 96,
	97, 98, 99, 103, 104, 105, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 116, 117, 120, 121,
	126, 128, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 274, 275,
}

var yyTok3 = [...]int{
	57600, 276, 57601, 277, 57602, 278, 57603, 279, 57604, 280,
	57605, 281, 57606, 282, 57607, 283, 57608, 284, 57609, 285,
	57610, 286, 57611, 287, 57612, 288, 57613, 289, 57614, 290,
	57615, 291, 57616, 292, 57617, 293, 57618, 294, 57619, 295,
	57620, 296, 57621, 297, 57622, 298, 57623, 299, 57624, 300,
	57625, 301, 57626, 302, 57627, 303, 57628, 304, 57629, 305,
	57630, 306, 57631, 307, 57632, 308, 57633, 309, 57634, 310,
	57635, 311, 57636, 312, 57637, 313, 57638, 314, 57639, 315,
	57640, 316, 57641, 317, 57642, 318, 57643, 319, 57644, 320,
	57645, 321, 57646, 322, 57647, 323, 57648, 324, 57649, 325,
	57650, 326, 57651, 327, 57652, 328, 57653, 329, 57654, 330,
	57655, 331, 57656, 332, 57657, 333, 57658, 334, 57659, 335,
	57660, 336, 57661, 337, 57662, 338, 57663, 339, 57664, 340,
	57665, 341, 57666, 342, 57667, 343, 57668, 344, 57669, 345,
	57670, 346, 57671, 347, 57672, 348, 57673, 349, 57674, 350,
	57675, 351, 57676, 352, 57677, 353, 57678, 354, 57679, 355,
	57680, 356, 57681, 357, 57682, 358, 57683, 359, 57684, 360,
	57685, 361, 57686, 362, 57687, 363, 57688, 364, 57689, 365,
	57690, 366, 57691, 367, 57692, 368, 57693, 369, 57694, 370,
	57695, 371, 57696, 372, 57697, 373, 57698, 374, 57699, 375,
	57700, 376, 57701, 377, 57702, 378, 57703, 379, 57704, 380,
	57705, 381, 57706, 382, 57707, 383, 57708, 384, 57709, 385,
	57710, 386, 57711, 387, 57712, 388, 57713, 389, 57714, 390,
	57715, 391, 57716, 392, 57717, 393, 57718, 394, 57719, 395,
	57720, 396, 57721, 397, 57722, 398, 57723, 399, 57724, 400,
	57725, 401, 57726, 402, 57727, 403, 57728, 404, 57729, 405,
	57730, 406, 57731, 407, 57732, 408, 57733, 409, 57734, 410,
	57735, 411, 57736, 412, 57737, 413, 57738, 414, 57739, 415,
	57740, 416, 57741, 417, 57742, 418, 57743, 419, 57744, 420,
	57745, 421, 57746, 422, 57747, 423, 57748, 424, 57749, 425,
	57750, 426, 57751, 427, 57752, 428, 57753, 429, 57754, 430,
	57755, 431, 57756, 432, 57757, 433, 57758, 434, 57759, 435,
	57760, 436, 57761, 437, 57762, 438, 57763, 439, 57764, 440,
	57765, 441, 57766, 442, 57767, 443, 57768, 444, 57769, 445,
	57770, 446, 57771, 447, 57772, 448, 57773, 449, 57774, 450,
	57775, 451, 57776, 452, 57777, 453, 57778, 454, 57779, 455,
	57780, 456, 57781, 457, 57782, 458, 57783, 459, 57784, 460,
	57785, 461, 57786, 462, 57787, 463, 57788, 464, 57789, 465,
	57790, 466, 57791, 467, 57792, 468, 57793, 469, 57794, 470,
	57795, 471, 57796, 472, 57797, 473, 57798, 474, 57799, 475,
	57800, 476, 57801, 477, 57802, 478, 57803, 479, 57804, 480,
	57805, 481, 57806, 482, 57807, 483, 57808, 484, 57809, 485,
	57810, 486, 57811, 487, 57812, 488, 57813, 489, 57814, 490,
	57815, 491, 57816, 492, 57817, 493, 57818, 494, 57819, 495,
	57820, 496, 57821, 497, 57822, 498, 57823, 499, 57824, 500,
	57825, 501, 57826, 502, 57827, 503, 57828, 504, 57829, 505,
	57830, 506, 57831, 507, 57832, 508, 57833, 509, 57834, 510,
	57835, 511, 57836, 512, 57837, 513, 57838, 514, 57839, 515,
	57840, 516, 57841, 517, 57842, 518, 57843, 519, 57844, 520,
	57845, 521, 57846, 522, 57847, 523, 57848, 524, 57849, 525,
	57850, 526, 57851, 527, 57852, 528, 57853, 529, 57854, 530,
	57855, 531, 57856, 532, 57857, 533, 57858, 534, 57859, 535,
	57860, 536, 57861, 537, 57862, 538, 57863, 539, 57864, 540,
	57865, 541, 57866, 542, 57867, 543, 57868, 544, 57869, 545,
	57870, 546, 57871, 547, 57872, 548, 57873, 549, 57874, 550,
	57875, 551, 57876, 552, 57877, 553, 57878, 554, 57879, 555,
	57880, 556, 57881, 557, 57882, 558, 57883, 559, 57884, 560,
	57885, 561, 57886, 562, 57887, 563, 57888, 564, 57889, 565,
	57890, 566, 57891, 567, 57892, 568, 57893, 569, 57894, 570,
	57895, 571, 57896, 572, 57897, 573, 57898, 574, 57899, 575,
	57900, 576, 57901, 577, 57902, 578, 57903, 579, 57904, 580,
	57905, 581, 57906, 582, 57907, 583, 57908, 584, 57909, 585,
	57910, 586, 57911, 587, 57912, 588, 57913, 589, 57914, 590,
	57915, 591, 57916, 592, 57917, 593, 57918, 594, 57919, 595,
	57920, 596, 57921, 597, 57922, 598, 57923, 599, 57924, 600,
	57925, 601, 57926, 602, 57927, 603, 57928, 604, 57929, 605,
	57930, 606, 57931, 607, 57932, 608, 57933, 609, 57934, 610,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:541
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:545
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:552
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:587
		{
			setParseTree(yylex, nil)
		}
	case 36:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:593
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 37:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:599
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			if err := yyDollar[1].selStmt.SetInto(yyDollar[5].into); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 38:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:610
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:616
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 40:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:626
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:633
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 42:
		yyDollar = yyS[yypt-14 : yypt+1]
//line sql.y:637
		{
			yyVAL.selStmt = &Select{With: yyDollar[1].with, Comments: Comments(yyDollar[3].bytes2), Cache: yyDollar[4].str, Distinct: yyDollar[5].str, Hints: yyDollar[7].str, SelectExprs: yyDollar[8].selectExprs, From: yyDollar[10].tableExprs, Where: NewWhere(WhereStr, yyDollar[11].expr), GroupBy: GroupBy(yyDollar[12].exprs), Having: NewWhere(HavingStr, yyDollar[13].expr), Window: yyDollar[14].window}
			if yyDollar[6].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 43:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:644
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 44:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:650
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr), Window: yyDollar[13].window, Into: yyDollar[8].into}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 45:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:658
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:662
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:671
		{
			yyVAL.into = nil
		}
	case 48:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:675
		{
			yyVAL.into = &Into{Variables: yyDollar[2].variables}
		}
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:679
		{
			yyVAL.into = &Into{Outfile: string(yyDollar[3].bytes)}
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:683
		{
			yyVAL.into = &Into{Dumpfile: string(yyDollar[3].bytes)}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:689
		{
			yyVAL.variables = Variables{yyDollar[1].colIdent}
		}
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:693
		{
			yyVAL.variables = append(yyVAL.variables, yyDollar[3].colIdent)
		}
	case 53:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:699
		{
			yyVAL.with = &With{Ctes: yyDollar[2].tableExprs, Recursive: false}
		}
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:703
		{
			yyVAL.with = &With{Ctes: yyDollar[3].tableExprs, Recursive: true}
		}
	case 55:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:708
		{
			yyVAL.with = nil
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:712
		{
			yyVAL.with = yyDollar[1].with
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:718
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:722
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 59:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:728
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[4].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[2].columns}
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:734
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:742
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:748
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:756
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 64:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:762
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[7].ins
			ins.Action = yyDollar[2].str
			ins.Comments = yyDollar[3].bytes2
			ins.Ignore = yyDollar[4].str
			ins.Table = yyDollar[5].tableName
			ins.Partitions = yyDollar[6].partitions
			ins.OnDup = OnDup(yyDollar[8].assignExprs)
			ins.With = yyDollar[1].with
			yyVAL.statement = ins
		}
	case 65:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:775
		{
			cols := make(Columns, 0, len(yyDollar[8].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[9].assignExprs))
			for _, updateList := range yyDollar[8].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[2].str, Comments: Comments(yyDollar[3].bytes2), Ignore: yyDollar[4].str, Table: yyDollar[5].tableName, Partitions: yyDollar[6].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[9].assignExprs), With: yyDollar[1].with}
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:787
		{
			yyVAL.str = InsertStr
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:791
		{
			yyVAL.str = ReplaceStr
		}
	case 68:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:797
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[3].bytes2), Ignore: yyDollar[4].str, TableExprs: yyDollar[5].tableExprs, Exprs: yyDollar[7].assignExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), OrderBy: yyDollar[9].orderBy, Limit: yyDollar[10].limit, With: yyDollar[1].with}
		}
	case 69:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:803
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitions, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit, With: yyDollar[1].with}
		}
	case 70:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:807
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[5].tableNames, TableExprs: yyDollar[7].tableExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), With: yyDollar[1].with}
		}
	case 71:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:811
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), With: yyDollar[1].with}
		}
	case 72:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:815
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), With: yyDollar[1].with}
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:820
		{
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:821
		{
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:825
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:829
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:835
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:839
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:845
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:849
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 81:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:854
		{
			yyVAL.partitions = nil
		}
	case 82:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:858
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 83:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:864
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 84:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:868
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 85:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:875
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:884
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:888
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:894
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 89:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:898
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:902
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 91:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:908
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:912
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:916
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:920
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 95:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:925
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:930
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 97:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:935
		{
			yyVAL.boolean = yySpecialCommentMode(yylex)
		}
	case 98:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:941
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:950
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:955
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 101:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:960
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 102:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:964
		{
			yyDollar[2].viewSpec.ViewName = yyDollar[4].tableName.ToViewName()
			yyDollar[2].viewSpec.ViewExpr = yyDollar[8].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[2].viewSpec, SpecialCommentMode: yyDollar[7].boolean, SubStatementPositionStart: yyDollar[6].int, SubStatementPositionEnd: yyDollar[9].int - 1}
		}
	case 103:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:970
		{
			yyDollar[4].viewSpec.ViewName = yyDollar[6].tableName.ToViewName()
			yyDollar[4].viewSpec.ViewExpr = yyDollar[10].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[4].viewSpec, SpecialCommentMode: yyDollar[9].boolean, SubStatementPositionStart: yyDollar[8].int, SubStatementPositionEnd: yyDollar[11].int - 1, OrReplace: true}
		}
	case 104:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:976
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 105:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:984
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 106:
		yyDollar = yyS[yypt-16 : yypt+1]
//line sql.y:992
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName, Definer: yyDollar[2].str, Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[15].statement}, SpecialCommentMode: yyDollar[14].boolean, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[16].int - 1}
		}
	case 107:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:996
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName, Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[11].statement}, SpecialCommentMode: yyDollar[10].boolean, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[12].int - 1}
		}
	case 108:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1000
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].tlsOptionItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].accountLimitItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].passLockItems)
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames, TLSOptions: tlsOptions, AccountLimits: accountLimits, PasswordOptions: passwordOptions, Locked: locked, Attribute: yyDollar[9].str}
		}
	case 109:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1019
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 110:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1028
		{
			yyVAL.accountNames = nil
		}
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1032
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1037
		{
			yyVAL.tlsOptionItems = nil
		}
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1041
		{
			yyVAL.tlsOptionItems = nil
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1045
		{
			yyVAL.tlsOptionItems = yyDollar[2].tlsOptionItems
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1051
		{
			yyVAL.tlsOptionItems = []TLSOptionItem{yyDollar[1].tlsOptionItem}
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1055
		{
			yyVAL.tlsOptionItems = append(yyDollar[1].tlsOptionItems, yyDollar[3].tlsOptionItem)
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1061
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1065
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1069
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1073
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1077
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 122:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1082
		{
			yyVAL.accountLimitItems = nil
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1086
		{
			yyVAL.accountLimitItems = yyDollar[2].accountLimitItems
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1092
		{
			yyVAL.accountLimitItems = []AccountLimitItem{yyDollar[1].accountLimitItem}
		}
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1096
		{
			yyVAL.accountLimitItems = append(yyDollar[1].accountLimitItems, yyDollar[2].accountLimitItem)
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1102
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1106
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1110
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1114
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1119
		{
			yyVAL.passLockItems = nil
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1123
		{
			yyVAL.passLockItems = yyDollar[1].passLockItems
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1129
		{
			yyVAL.passLockItems = []PassLockItem{yyDollar[1].passLockItem}
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1133
		{
			yyVAL.passLockItems = append(yyDollar[1].passLockItems, yyDollar[2].passLockItem)
		}
	case 134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1139
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1143
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 136:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1147
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 137:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1151
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1155
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 139:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1159
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 140:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1163
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 141:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1167
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 142:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1171
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1175
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1179
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1183
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1187
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1191
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 148:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1196
		{
			yyVAL.str = ""
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1200
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.str = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1205
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 151:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1211
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 152:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1216
		{
			yyVAL.statement = &GrantPrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 153:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1220
		{
			yyVAL.statement = &GrantRole{Roles: yyDollar[2].accountNames, To: yyDollar[4].accountNames, WithAdminOption: yyDollar[5].boolean}
		}
	case 154:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1224
		{
			yyVAL.statement = &GrantProxy{On: yyDollar[4].accountName, To: yyDollar[6].accountNames, WithGrantOption: yyDollar[7].boolean}
		}
	case 155:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1230
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &RevokePrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 156:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1235
		{
			yyVAL.statement = &RevokePrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 157:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1239
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[7].accountNames}
		}
	case 158:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1243
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[8].accountNames}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1247
		{
			yyVAL.statement = &RevokeRole{Roles: yyDollar[2].accountNames, From: yyDollar[4].accountNames}
		}
	case 160:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1251
		{
			yyVAL.statement = &RevokeProxy{On: yyDollar[4].accountName, From: yyDollar[6].accountNames}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1257
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].strs}
		}
	case 162:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1261
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].strs}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1265
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].strs}
		}
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1269
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].strs}
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1273
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].strs}
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1277
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].strs}
		}
	case 167:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1281
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].strs}
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1285
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].strs}
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1289
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].strs}
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1293
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].strs}
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1297
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].strs}
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1301
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].strs}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1305
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].strs}
		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1309
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].strs}
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1313
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].strs}
		}
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1317
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].strs}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1321
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].strs}
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1325
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].strs}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1329
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].strs}
		}
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1333
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].strs}
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1337
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].strs}
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1341
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].strs}
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1345
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].strs}
		}
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1349
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].strs}
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1353
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].strs}
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1357
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].strs}
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1361
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].strs}
		}
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1365
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].strs}
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1369
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].strs}
		}
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1373
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].strs}
		}
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1377
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].strs}
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1383
		{
			yyVAL.grantPrivileges = []Privilege{yyDollar[1].grantPrivilege}
		}
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1387
		{
			yyVAL.grantPrivileges = append(yyDollar[1].grantPrivileges, yyDollar[3].grantPrivilege)
		}
	case 194:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1392
		{
			yyVAL.strs = nil
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1396
		{
			yyVAL.strs = yyDollar[2].strs
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1402
		{
			yyVAL.strs = []string{yyDollar[1].colIdent.String()}
		}
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1406
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].colIdent.String())
		}
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1411
		{
			yyVAL.grantObjectType = GrantObjectType_Any
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1415
		{
			yyVAL.grantObjectType = GrantObjectType_Table
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1419
		{
			yyVAL.grantObjectType = GrantObjectType_Function
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1423
		{
			yyVAL.grantObjectType = GrantObjectType_Procedure
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1429
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1433
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1437
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].colIdent.String()}
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1441
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: "*"}
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1445
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: yyDollar[3].colIdent.String()}
		}
	case 207:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1450
		{
			yyVAL.grantAssumption = nil
		}
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1454
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 209:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1458
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 210:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1462
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].accountName, Roles: nil}
		}
	case 211:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1466
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].accountName, Roles: nil}
		}
	case 212:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1470
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].accountName, Roles: yyDollar[7].accountNames}
		}
	case 213:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1474
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].accountName, Roles: yyDollar[5].accountNames}
		}
	case 214:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1479
		{
			yyVAL.boolean = false
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1483
		{
			yyVAL.boolean = true
		}
	case 216:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1488
		{
			yyVAL.boolean = false
		}
	case 217:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1492
		{
			yyVAL.boolean = true
		}
	case 218:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1499
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 219:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1511
		{
			yyVAL.procedureParams = nil
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1515
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1521
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1525
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1531
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[1].colIdent.String(), Type: yyDollar[2].columnType}
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1535
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1539
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1543
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 227:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1548
		{
			yyVAL.characteristics = nil
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1552
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1558
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1562
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1568
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1572
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1576
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1580
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1584
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1588
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1592
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1596
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1600
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1604
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 241:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1610
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1616
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: "", Definer: yyDollar[1].str, Security: yyDollar[2].str}
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1620
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: yyDollar[1].str, Definer: yyDollar[2].str, Security: yyDollar[3].str}
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1626
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1630
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1634
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 247:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1639
		{
			yyVAL.str = ""
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1643
		{
			yyVAL.str = yyDollar[3].accountName.String()
		}
	case 249:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1648
		{
			yyVAL.str = ""
		}
	case 250:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1652
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 251:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1656
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1662
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1666
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1670
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1676
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 256:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1684
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1688
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1694
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1698
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1704
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1712
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1720
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1730
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 264:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1734
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1740
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1744
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 267:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1748
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 268:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1752
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 269:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1756
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1762
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1766
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1770
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 273:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1774
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 274:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1778
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 275:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1782
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 276:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1788
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1792
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 278:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1796
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1802
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1806
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1812
		{
			yyVAL.str = BeforeStr
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1816
		{
			yyVAL.str = AfterStr
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1822
		{
			yyVAL.str = InsertStr
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1826
		{
			yyVAL.str = UpdateStr
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1830
		{
			yyVAL.str = DeleteStr
		}
	case 286:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1835
		{
			yyVAL.triggerOrder = nil
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1839
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1843
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1849
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 294:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1859
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 295:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1865
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 296:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1869
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1875
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1879
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 299:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1885
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 300:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1891
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 301:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1896
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 302:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1901
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 303:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1907
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1915
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1919
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 306:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1925
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 307:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1931
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 308:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1935
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 309:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1939
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 310:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1943
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1947
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 312:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1951
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1958
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1962
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1966
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1972
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1976
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1982
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1986
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1990
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1994
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1998
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2002
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2008
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 325:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2012
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2016
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2020
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2026
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2030
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2036
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2040
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2046
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2052
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2056
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2060
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2064
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2068
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2072
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2076
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2080
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2084
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2088
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2092
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2096
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2102
		{
			yyVAL.statement = &Resignal{}
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2106
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 347:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2110
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2114
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2118
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 350:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2122
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2128
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 352:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2133
		{
			yyVAL.exprs = nil
		}
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2137
		{
			yyVAL.exprs = nil
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2141
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2147
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2151
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2157
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 387:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2192
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
		}
	case 388:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2206
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: TableName{Name: NewTableIdent(string(yyDollar[5].bytes))}, IfNotExists: ne, Temporary: neTemp}
		}
	case 389:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2222
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2229
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2234
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2239
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2245
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 394:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2249
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2254
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2258
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2262
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2268
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2276
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2286
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2294
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2302
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2310
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2318
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 405:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2327
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2331
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2335
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2340
		{
			yyVAL.columnType = ColumnType{}
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2344
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2353
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2362
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 412:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2371
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2380
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2389
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2398
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 416:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2407
		{
			opt := ColumnType{GeneratedExpr: yyDollar[4].expr, Stored: yyDollar[6].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 417:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2416
		{
			opt := ColumnType{GeneratedExpr: yyDollar[6].expr, Stored: yyDollar[8].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2425
		{
			opt := ColumnType{SRID: NewIntVal(yyDollar[3].bytes)}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2436
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2447
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2452
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2458
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2462
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2466
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2470
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2474
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2478
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2482
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2486
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2490
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2494
		{
			yyVAL.columnType = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 435:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2500
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2506
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2512
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2518
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2524
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2530
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 441:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2536
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2542
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2550
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2554
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 445:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2558
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2562
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2566
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 448:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2572
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 449:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2576
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2580
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2584
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2588
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2592
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 454:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2596
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2600
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2604
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 457:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2608
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 458:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2612
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 459:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2616
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2620
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2624
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2628
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2632
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2636
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 465:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2640
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2644
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2648
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2652
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2656
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2660
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 471:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2664
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 472:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2669
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 473:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2673
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 474:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2677
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2681
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 476:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2685
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, BinaryCollate: true}
		}
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2689
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2693
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2697
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2701
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2705
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 482:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2709
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 483:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2713
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, BinaryCollate: true}
		}
	case 484:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2717
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, BinaryCollate: true}
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2723
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2727
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2731
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2735
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2739
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2743
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2747
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2751
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2757
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2762
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2767
		{
			yyVAL.sqlVal = nil
		}
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2771
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2776
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 498:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2780
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 499:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2788
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2792
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 501:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2798
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 502:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2806
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2810
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2814
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 505:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2819
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2823
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 507:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2829
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2835
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2841
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 510:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2846
		{
			yyVAL.str = ""
		}
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2850
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2854
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 513:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2859
		{
			yyVAL.str = ""
		}
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2863
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 515:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2867
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2872
		{
			yyVAL.boolean = false
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2876
		{
			yyVAL.boolean = true
		}
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2881
		{
			yyVAL.charsetCollates = nil
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2885
		{
			yyVAL.charsetCollates = yyDollar[1].charsetCollates
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2891
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2895
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2899
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2903
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2907
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2911
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 526:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2917
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 527:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2921
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 528:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2925
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 529:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2929
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 530:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2935
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 531:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2939
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 532:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2945
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2951
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2955
		{
			yyVAL.colKeyOpt = colKey
		}
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2959
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2963
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2967
		{
			yyVAL.colKeyOpt = colKeyFulltextKey
		}
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2973
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2979
		{
			yyVAL.statement = &Flush{Type: yyDollar[2].str, Option: yyDollar[3].flushOption}
		}
	case 540:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2985
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2989
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2993
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2997
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3001
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3005
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3009
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3013
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3017
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].str}
		}
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3021
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3025
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3029
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 552:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3034
		{
			yyVAL.str = ""
		}
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3036
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3040
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3042
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 556:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3045
		{
			yyVAL.str = ""
		}
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3047
		{
			yyVAL.str = yyDollar[1].str
		}
	case 558:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3051
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 559:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3055
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 560:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3060
		{
			yyVAL.indexOptions = nil
		}
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3064
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3070
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3074
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3080
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3084
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3089
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 567:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3095
		{
			yyVAL.str = ""
		}
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3099
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3107
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 570:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3111
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3115
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3119
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true}
		}
	case 573:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3123
		{
			var name string
			name = yyDollar[2].str
			if name == "" {
				name = yyDollar[5].str
			}
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].str), Name: NewColIdent(name), Unique: true}
		}
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3132
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3136
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 576:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3140
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3146
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3150
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3154
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3160
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3164
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 582:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3169
		{
			yyVAL.str = ""
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3173
		{
			yyVAL.str = yyDollar[1].str
		}
	case 584:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3178
		{
			yyVAL.str = ""
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3182
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3188
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3192
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3198
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3202
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3208
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3212
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3216
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 593:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3222
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 594:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3226
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 595:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3230
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 596:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3234
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 597:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3238
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3244
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3249
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3253
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3257
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3261
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 603:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3267
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3273
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3277
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 606:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3282
		{
			yyVAL.str = ""
		}
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3286
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3290
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3296
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3302
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3308
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3312
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3316
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 614:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3320
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3324
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 616:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3329
		{
			yyVAL.boolean = true
		}
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3333
		{
			yyVAL.boolean = true
		}
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3337
		{
			yyVAL.boolean = false
		}
	case 619:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3342
		{
			yyVAL.str = ""
		}
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3346
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3350
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3358
		{
			yyVAL.str = yyDollar[1].str
		}
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3362
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3366
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3372
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3376
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3380
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3385
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3389
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3393
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 631:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3399
		{
			yyVAL.str = ""
		}
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3403
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 633:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3408
		{
			yyVAL.str = string("")
		}
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3412
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 636:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3421
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3434
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3438
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 639:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3444
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 640:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3451
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3458
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 642:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3462
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3466
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 644:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3471
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 645:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3475
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3479
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3484
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3489
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3494
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3499
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3504
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3509
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3514
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3519
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3524
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3529
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 657:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3533
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 658:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3537
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 659:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3544
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3550
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3554
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3560
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3566
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3571
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 665:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3575
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 666:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3579
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3583
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 668:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3589
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[7].indexColumns, Options: yyDollar[9].indexOptions}
			yyVAL.ddl = ddl
		}
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3595
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3599
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 671:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3604
		{
			yyVAL.columnOrder = nil
		}
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3608
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3612
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 674:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3617
		{
		}
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3619
		{
		}
	case 676:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3623
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3629
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3633
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 679:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3639
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 680:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3643
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3649
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3653
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3659
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 684:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3663
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3671
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 686:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3675
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 687:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3681
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 688:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3689
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 689:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3693
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 690:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3701
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 691:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3709
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 692:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3717
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName}, IfExists: exists}
		}
	case 693:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3725
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName}, IfExists: exists}
		}
	case 694:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3733
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3741
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 696:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3750
		{

		}
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3754
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3758
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3764
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3768
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3774
		{
			yyVAL.statement = &Analyze{Tables: yyDollar[3].tableNames}
		}
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3780
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 703:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3785
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3789
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 705:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3793
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 706:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3797
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 707:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3801
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 708:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3806
		{
			yyVAL.statement = &Show{Type: CreateProcedureStr, Table: yyDollar[4].tableName}
		}
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3810
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3814
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3818
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3822
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3826
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 714:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3830
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3834
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3838
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 717:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3842
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 718:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3846
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 719:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3850
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 720:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3854
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, AsOf: yyDollar[7].expr, Filter: yyDollar[8].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, Table: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 721:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3859
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3864
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 723:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3868
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 724:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3872
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3876
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 726:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3880
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3886
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3894
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 729:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3898
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 730:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3903
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 731:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3907
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3912
		{
			yyVAL.statement = &ShowPrivileges{}
		}
	case 733:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3916
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 734:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3920
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3924
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3928
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3934
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 738:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3940
		{
			yyVAL.boolean = false
		}
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3944
		{
			yyVAL.boolean = true
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3950
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3954
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 742:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3960
		{
			yyVAL.str = ""
		}
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3964
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3968
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3974
		{
			yyVAL.showFilter = nil
		}
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3978
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3982
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[3].bytes)}
		}
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3986
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 749:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3992
		{
			yyVAL.str = ""
		}
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3996
		{
			yyVAL.str = SessionStr
		}
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4000
		{
			yyVAL.str = GlobalStr
		}
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4006
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 753:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4010
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: yyDollar[2].tableIdent.v + "/" + yyDollar[4].tableIdent.v}}
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4014
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4020
		{
			yyVAL.statement = &Begin{}
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4024
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4030
		{
			yyVAL.statement = &Begin{}
		}
	case 758:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4034
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 759:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4038
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4044
		{
			yyVAL.statement = &Commit{}
		}
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4050
		{
			yyVAL.statement = &Rollback{}
		}
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4056
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4062
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 764:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4066
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 765:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4070
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 766:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4074
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4080
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4085
		{
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4086
		{
		}
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4090
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4094
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4100
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 776:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4108
		{
			yyVAL.str = ""
		}
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4112
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4123
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[3].expr}
			yyVAL.statement = &Show{Type: "columns", Table: yyDollar[2].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4129
		{
			setAllowComments(yylex, true)
		}
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4133
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4139
		{
			yyVAL.bytes2 = nil
		}
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4143
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4149
		{
			yyVAL.str = UnionStr
		}
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4153
		{
			yyVAL.str = UnionAllStr
		}
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4157
		{
			yyVAL.str = UnionDistinctStr
		}
	case 788:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4162
		{
			yyVAL.byt = 0
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4166
		{
			yyVAL.byt = 1
		}
	case 790:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4171
		{
			yyVAL.str = ""
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4175
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4179
		{
			yyVAL.str = SQLCacheStr
		}
	case 793:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4184
		{
			yyVAL.str = ""
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4188
		{
			yyVAL.str = ""
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4192
		{
			yyVAL.str = DistinctStr
		}
	case 796:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4197
		{
			yyVAL.str = ""
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4201
		{
			yyVAL.str = StraightJoinHint
		}
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4207
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 799:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4215
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4226
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4230
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4234
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 803:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4238
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4244
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4248
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4252
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 807:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4256
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4262
		{
			yyVAL.over = &Over{NameRef: yyDollar[2].colIdent}
		}
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4266
		{
			yyVAL.over = (*Over)(yyDollar[2].windowDef)
		}
	case 810:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4272
		{
			yyVAL.windowDef = &WindowDef{NameRef: yyDollar[2].colIdent, PartitionBy: yyDollar[3].exprs, OrderBy: yyDollar[4].orderBy, Frame: yyDollar[5].frame}
		}
	case 811:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4277
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4280
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 813:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4285
		{
			yyVAL.exprs = nil
		}
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4289
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 815:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4294
		{
			yyVAL.over = nil
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4298
		{
			yyVAL.over = yyDollar[1].over
		}
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4303
		{
			yyVAL.frame = nil
		}
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4307
		{
			yyVAL.frame = &Frame{Unit: RowsUnit, Extent: yyDollar[2].frameExtent}
		}
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4311
		{
			yyVAL.frame = &Frame{Unit: RangeUnit, Extent: yyDollar[2].frameExtent}
		}
	case 820:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4318
		{
			startBound := yyDollar[2].frameBound
			endBound := yyDollar[4].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound, End: endBound}
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4341
		{
			startBound := yyDollar[1].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound}
		}
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4356
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedPreceding}
		}
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4360
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedFollowing}
		}
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4364
		{
			yyVAL.frameBound = &FrameBound{Type: CurrentRow}
		}
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4368
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprPreceding,
			}
		}
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4375
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprFollowing,
			}
		}
	case 827:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4383
		{
			yyVAL.window = nil
		}
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4386
		{
			yyVAL.window = yyDollar[2].window
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4392
		{
			yyVAL.window = Window{yyDollar[1].windowDef}
		}
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4395
		{
			yyVAL.window = append(yyDollar[1].window, yyDollar[3].windowDef)
		}
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4401
		{
			def := yyDollar[3].windowDef
			def.Name = yyDollar[1].colIdent
			yyVAL.windowDef = def
		}
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4410
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4414
		{
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 834:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4419
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4423
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 836:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4427
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4431
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[2].bytes))
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4437
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4441
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4445
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4449
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4453
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4457
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4463
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4467
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4478
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 850:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4482
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4492
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4498
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 854:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4505
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 855:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4511
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 856:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4515
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4521
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 858:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4526
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4537
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 860:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4541
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 861:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4545
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4549
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4553
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 864:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4564
		{
			yyVAL.expr = nil
		}
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4568
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 866:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4573
		{
			yyVAL.columns = nil
		}
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4577
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4583
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4587
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4593
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4597
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 872:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4603
		{
			yyVAL.tableExpr = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].selectExprs}
		}
	case 873:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4617
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 874:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4621
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 875:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4625
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4629
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 877:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4635
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 878:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4637
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 879:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4641
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4643
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 881:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4647
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 882:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4649
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 883:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4652
		{
			yyVAL.empty = struct{}{}
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4654
		{
			yyVAL.empty = struct{}{}
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4659
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4663
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4669
		{
			yyVAL.str = JoinStr
		}
	case 889:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4673
		{
			yyVAL.str = JoinStr
		}
	case 890:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4677
		{
			yyVAL.str = JoinStr
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4683
		{
			yyVAL.str = StraightJoinStr
		}
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4689
		{
			yyVAL.str = LeftJoinStr
		}
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4693
		{
			yyVAL.str = LeftJoinStr
		}
	case 894:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4697
		{
			yyVAL.str = RightJoinStr
		}
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4701
		{
			yyVAL.str = RightJoinStr
		}
	case 896:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4707
		{
			yyVAL.str = NaturalJoinStr
		}
	case 897:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4711
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 898:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:4721
		{
			yyVAL.tableExpr = &JSONTableExpr{Data: yyDollar[3].expr, Path: string(yyDollar[5].bytes), Columns: yyDollar[8].TableSpec, Alias: yyDollar[12].tableIdent}
		}
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4727
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4732
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4740
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4752
		{
			yyVAL.columnType = ColumnType{Path: string(yyDollar[2].bytes)}
		}
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4756
		{
			yyVAL.columnType = ColumnType{Path: string(yyDollar[3].bytes)}
		}
	case 904:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4762
		{

		}
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4766
		{

		}
	case 906:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4770
		{

		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4795
		{
			yyVAL.triggerName = TriggerName{Name: yyDollar[1].colIdent}
		}
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4799
		{
			yyVAL.triggerName = TriggerName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4805
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 910:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4811
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4815
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4821
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4825
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4829
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4833
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4837
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4843
		{
			yyVAL.procedureName = ProcedureName{Name: yyDollar[1].colIdent}
		}
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4847
		{
			yyVAL.procedureName = ProcedureName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4853
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 920:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4858
		{
			yyVAL.indexHints = nil
		}
	case 921:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4862
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 922:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4866
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 923:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4870
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 924:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4875
		{
			yyVAL.expr = nil
		}
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4879
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4885
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 927:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4889
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4893
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4897
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4901
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4905
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4909
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4913
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 934:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4919
		{
			yyVAL.str = ""
		}
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4923
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4929
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4933
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4939
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4943
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 940:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4947
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 941:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4951
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 942:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4955
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4959
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 944:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4963
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 945:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4967
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 946:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4971
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4975
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4981
		{
			yyVAL.str = IsNullStr
		}
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4985
		{
			yyVAL.str = IsNotNullStr
		}
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4989
		{
			yyVAL.str = IsTrueStr
		}
	case 951:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4993
		{
			yyVAL.str = IsNotTrueStr
		}
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4997
		{
			yyVAL.str = IsFalseStr
		}
	case 953:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5001
		{
			yyVAL.str = IsNotFalseStr
		}
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5007
		{
			yyVAL.str = EqualStr
		}
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5011
		{
			yyVAL.str = LessThanStr
		}
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5015
		{
			yyVAL.str = GreaterThanStr
		}
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5019
		{
			yyVAL.str = LessEqualStr
		}
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5023
		{
			yyVAL.str = GreaterEqualStr
		}
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5027
		{
			yyVAL.str = NotEqualStr
		}
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5031
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 961:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5036
		{
			yyVAL.expr = nil
		}
	case 962:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5040
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5046
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5050
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5054
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5060
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5066
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5070
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 969:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5076
		{
			yyVAL.selectExprs = nil
		}
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5083
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5087
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5093
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5097
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5103
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5107
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5111
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5115
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5119
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5123
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5127
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5131
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5135
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5139
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5143
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5147
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5151
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5155
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5159
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5163
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5167
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5171
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5175
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5179
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5183
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5187
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5191
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5195
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5199
		{
			yyVAL.expr = &UnaryExpr{Operator: yyDollar[1].str, Expr: yyDollar[2].expr}
		}
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5203
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5211
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5225
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5229
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5233
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 1011:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5253
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 1012:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5257
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 1013:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5267
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1014:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5271
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1015:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5275
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1016:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5279
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1017:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5283
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1018:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5287
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1019:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5291
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1020:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5295
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1021:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5299
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1022:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5303
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1023:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5307
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1024:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5311
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1025:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5315
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1026:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5319
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1027:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5323
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1028:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5327
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1029:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5331
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1030:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5340
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1031:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5344
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1032:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5348
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 1033:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5352
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1034:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5356
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 1035:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5360
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1036:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5364
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1037:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5368
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1038:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5372
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1039:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5376
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1040:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5380
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1041:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5391
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1042:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5395
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1043:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5399
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1044:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5403
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5407
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1046:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5411
		{
			yyVAL.expr = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 1047:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5415
		{
			yyVAL.expr = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 1048:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5419
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1049:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5423
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1050:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5427
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 1051:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5431
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1052:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5435
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1053:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5439
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1054:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5443
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1055:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5447
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1056:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5451
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 1057:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5455
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 1058:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5459
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 1059:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5463
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 1060:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5467
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 1061:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5471
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 1062:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5475
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1063:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5479
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 1064:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5483
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 1065:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5487
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 1066:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5491
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1067:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5501
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1068:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5505
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1069:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5509
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1070:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5514
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1071:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5519
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1072:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5524
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1073:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5530
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1074:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5535
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1075:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5539
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5544
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1077:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5548
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1078:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5552
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1079:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5557
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1080:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5562
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1081:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5567
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1082:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5571
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1083:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5575
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5586
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1087:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5596
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1088:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5600
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1089:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5604
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1090:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5608
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1091:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5612
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1092:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5616
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1093:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5622
		{
			yyVAL.str = ""
		}
	case 1094:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5626
		{
			yyVAL.str = BooleanModeStr
		}
	case 1095:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5630
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 1096:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5634
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 1097:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5638
		{
			yyVAL.str = QueryExpansionStr
		}
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5644
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5648
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5654
		{
			yyVAL.str = Armscii8Str
		}
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5658
		{
			yyVAL.str = AsciiStr
		}
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5662
		{
			yyVAL.str = Big5Str
		}
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5666
		{
			yyVAL.str = UBinaryStr
		}
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5670
		{
			yyVAL.str = Cp1250Str
		}
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5674
		{
			yyVAL.str = Cp1251Str
		}
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5678
		{
			yyVAL.str = Cp1256Str
		}
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5682
		{
			yyVAL.str = Cp1257Str
		}
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5686
		{
			yyVAL.str = Cp850Str
		}
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5690
		{
			yyVAL.str = Cp852Str
		}
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5694
		{
			yyVAL.str = Cp866Str
		}
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5698
		{
			yyVAL.str = Cp932Str
		}
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5702
		{
			yyVAL.str = Dec8Str
		}
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5706
		{
			yyVAL.str = EucjpmsStr
		}
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5710
		{
			yyVAL.str = EuckrStr
		}
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5714
		{
			yyVAL.str = Gb18030Str
		}
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5718
		{
			yyVAL.str = Gb2312Str
		}
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5722
		{
			yyVAL.str = GbkStr
		}
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5726
		{
			yyVAL.str = Geostd8Str
		}
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5730
		{
			yyVAL.str = GreekStr
		}
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5734
		{
			yyVAL.str = HebrewStr
		}
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5738
		{
			yyVAL.str = Hp8Str
		}
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5742
		{
			yyVAL.str = Keybcs2Str
		}
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5746
		{
			yyVAL.str = Koi8rStr
		}
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5750
		{
			yyVAL.str = Koi8uStr
		}
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5754
		{
			yyVAL.str = Latin1Str
		}
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5758
		{
			yyVAL.str = Latin2Str
		}
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5762
		{
			yyVAL.str = Latin5Str
		}
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5766
		{
			yyVAL.str = Latin7Str
		}
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5770
		{
			yyVAL.str = MacceStr
		}
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5774
		{
			yyVAL.str = MacromanStr
		}
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5778
		{
			yyVAL.str = SjisStr
		}
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5782
		{
			yyVAL.str = Swe7Str
		}
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5786
		{
			yyVAL.str = Tis620Str
		}
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5790
		{
			yyVAL.str = Ucs2Str
		}
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5794
		{
			yyVAL.str = UjisStr
		}
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5798
		{
			yyVAL.str = Utf16Str
		}
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5802
		{
			yyVAL.str = Utf16leStr
		}
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5806
		{
			yyVAL.str = Utf32Str
		}
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5810
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5814
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5818
		{
			yyVAL.str = Utf8mb4Str
		}
	case 1142:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5824
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5828
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 1144:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5832
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5836
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5840
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5844
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5850
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5854
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5858
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5862
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5866
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5870
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1154:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5874
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1155:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5879
		{
			yyVAL.expr = nil
		}
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5883
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1157:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5888
		{
			yyVAL.str = string("")
		}
	case 1158:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5892
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5898
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 1160:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5902
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 1161:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5908
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 1162:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5913
		{
			yyVAL.expr = nil
		}
	case 1163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5917
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5923
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5927
		{
			yyVAL.colName = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5931
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 1167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5935
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5939
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5943
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5947
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5951
		{
			yyVAL.colName = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5955
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5959
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1174:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5963
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5969
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5973
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5977
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5981
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5985
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5989
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5993
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5997
		{
			yyVAL.expr = &NullVal{}
		}
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6003
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 1184:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6007
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6011
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1186:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6016
		{
			yyVAL.exprs = nil
		}
	case 1187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6020
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6026
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1189:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6030
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6036
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1191:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6041
		{
			yyVAL.expr = nil
		}
	case 1192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6045
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6051
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1194:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6056
		{
			yyVAL.orderBy = nil
		}
	case 1195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6060
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6066
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 1197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6070
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 1198:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6076
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 1199:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6081
		{
			yyVAL.str = AscScr
		}
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6085
		{
			yyVAL.str = AscScr
		}
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6089
		{
			yyVAL.str = DescScr
		}
	case 1202:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6094
		{
			yyVAL.limit = nil
		}
	case 1203:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6098
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 1204:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6102
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 1205:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6106
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6112
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6116
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1208:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6121
		{
			yyVAL.str = ""
		}
	case 1209:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6125
		{
			yyVAL.str = ForUpdateStr
		}
	case 1210:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6129
		{
			yyVAL.str = ShareModeStr
		}
	case 1211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6142
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 1212:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6146
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6150
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 1214:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6154
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 1215:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6159
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 1216:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6163
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 1217:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6167
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 1218:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6173
		{
			yyVAL.columns = nil
		}
	case 1219:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6177
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6183
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1221:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6187
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 1222:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6191
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1223:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6195
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6199
		{
			yyVAL.columns = Columns{NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6203
		{
			yyVAL.columns = Columns{NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6207
		{
			yyVAL.columns = Columns{NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6211
		{
			yyVAL.columns = Columns{NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1228:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6216
		{
			yyVAL.assignExprs = nil
		}
	case 1229:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6220
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6226
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 1231:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6230
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6236
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 1233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6240
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 1234:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6246
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6252
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6262
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 1237:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6266
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 1238:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6272
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 1239:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6275
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6279
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6283
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6289
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 1243:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6293
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6299
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 1245:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6310
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1246:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6323
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1247:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6336
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6342
		{
			yyVAL.setScope = SetScope_Global
		}
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6346
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6352
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6356
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6360
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 1253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6366
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1254:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6370
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1255:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6374
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 1257:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6381
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6388
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6392
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6396
		{
			yyVAL.expr = &Default{}
		}
	case 1264:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6405
		{
			yyVAL.byt = 0
		}
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6407
		{
			yyVAL.byt = 1
		}
	case 1266:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6410
		{
			yyVAL.byt = 0
		}
	case 1267:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6412
		{
			yyVAL.byt = 1
		}
	case 1268:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6415
		{
			yyVAL.byt = 0
		}
	case 1269:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6417
		{
			yyVAL.byt = 1
		}
	case 1270:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6420
		{
			yyVAL.str = ""
		}
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6422
		{
			yyVAL.str = IgnoreStr
		}
	case 1272:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6425
		{
			yyVAL.sqlVal = nil
		}
	case 1273:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6427
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1274:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6429
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6433
		{
			yyVAL.empty = struct{}{}
		}
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6435
		{
			yyVAL.empty = struct{}{}
		}
	case 1277:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6438
		{
			yyVAL.empty = struct{}{}
		}
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6440
		{
			yyVAL.empty = struct{}{}
		}
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6442
		{
			yyVAL.empty = struct{}{}
		}
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6446
		{
			yyVAL.str = UniqueStr
		}
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6448
		{
			yyVAL.str = FulltextStr
		}
	case 1282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6450
		{
			yyVAL.str = SpatialStr
		}
	case 1283:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6453
		{
			yyVAL.str = ""
		}
	case 1284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6455
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1285:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6458
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 1286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6460
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 1287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6464
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6468
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6474
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 1290:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6478
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 1292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6485
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6491
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6495
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6502
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1297:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6507
		{
			yyVAL.str = string("")
		}
	case 1298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6509
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1299:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6512
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6514
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1301:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6517
		{
			yyVAL.EnclosedBy = nil
		}
	case 1302:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6521
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1303:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6526
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6530
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1305:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6535
		{
			yyVAL.sqlVal = nil
		}
	case 1306:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6539
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1307:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6544
		{
			yyVAL.sqlVal = nil
		}
	case 1308:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6548
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1309:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6553
		{
			yyVAL.Fields = nil
		}
	case 1310:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6557
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1311:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6562
		{
			yyVAL.Lines = nil
		}
	case 1312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6566
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1313:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6571
		{
			yyVAL.sqlVal = nil
		}
	case 1314:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6575
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1315:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6581
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6587
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1317:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6591
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6597
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1319:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6601
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6607
		{
			yyVAL.lockType = LockRead
		}
	case 1321:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6611
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6615
		{
			yyVAL.lockType = LockWrite
		}
	case 1323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6619
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6625
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6631
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[2].bytes)}
		}
	case 1326:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6635
		{
			yyVAL.statement = &Kill{ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1327:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6639
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 2116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7467
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7476
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
