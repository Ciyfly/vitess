// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

//import "runtime/debug"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

func yySpecialCommentMode(yylex interface{}) bool {
	tkn := yylex.(*Tokenizer)
	return tkn.specialComment != nil
}

//line sql.y:64
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	variables                Variables
	into                     *Into
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	triggerName              TriggerName
	tableName                TableName
	tableNames               TableNames
	procedureName            ProcedureName
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	flushOption              *FlushOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	viewSpec                 *ViewSpec
	showFilter               *ShowFilter
	frame                    *Frame
	frameExtent              *FrameExtent
	frameBound               *FrameBound
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	charsetCollate           *CharsetAndCollate
	charsetCollates          []*CharsetAndCollate
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptionItem            TLSOptionItem
	tlsOptionItems           []TLSOptionItem
	accountLimitItem         AccountLimitItem
	accountLimitItems        []AccountLimitItem
	passLockItem             PassLockItem
	passLockItems            []PassLockItem
	grantPrivilege           Privilege
	grantPrivileges          []Privilege
	grantObjectType          GrantObjectType
	privilegeLevel           PrivilegeLevel
	grantAssumption          *GrantUserAssumption
	with                     *With
	window                   Window
	over                     *Over
	windowDef                *WindowDef
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const DUPLICATE = 57369
const DEFAULT = 57370
const SET = 57371
const LOCK = 57372
const UNLOCK = 57373
const KEYS = 57374
const OF = 57375
const OUTFILE = 57376
const DUMPFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const VAR_MAX = 57421
const NULL = 57422
const TRUE = 57423
const FALSE = 57424
const OFF = 57425
const INTO = 57426
const OR = 57427
const XOR = 57428
const AND = 57429
const NOT = 57430
const BETWEEN = 57431
const CASE = 57432
const WHEN = 57433
const THEN = 57434
const ELSE = 57435
const ELSEIF = 57436
const END = 57437
const LE = 57438
const GE = 57439
const NE = 57440
const NULL_SAFE_EQUAL = 57441
const IS = 57442
const LIKE = 57443
const REGEXP = 57444
const IN = 57445
const UNBOUNDED = 57446
const PARTITION = 57447
const RANGE = 57448
const ROWS = 57449
const GROUPS = 57450
const PRECEDING = 57451
const FOLLOWING = 57452
const SHIFT_LEFT = 57453
const SHIFT_RIGHT = 57454
const DIV = 57455
const MOD = 57456
const UNARY = 57457
const COLLATE = 57458
const BINARY = 57459
const UNDERSCORE_ARMSCII8 = 57460
const UNDERSCORE_ASCII = 57461
const UNDERSCORE_BIG5 = 57462
const UNDERSCORE_BINARY = 57463
const UNDERSCORE_CP1250 = 57464
const UNDERSCORE_CP1251 = 57465
const UNDERSCORE_CP1256 = 57466
const UNDERSCORE_CP1257 = 57467
const UNDERSCORE_CP850 = 57468
const UNDERSCORE_CP852 = 57469
const UNDERSCORE_CP866 = 57470
const UNDERSCORE_CP932 = 57471
const UNDERSCORE_DEC8 = 57472
const UNDERSCORE_EUCJPMS = 57473
const UNDERSCORE_EUCKR = 57474
const UNDERSCORE_GB18030 = 57475
const UNDERSCORE_GB2312 = 57476
const UNDERSCORE_GBK = 57477
const UNDERSCORE_GEOSTD8 = 57478
const UNDERSCORE_GREEK = 57479
const UNDERSCORE_HEBREW = 57480
const UNDERSCORE_HP8 = 57481
const UNDERSCORE_KEYBCS2 = 57482
const UNDERSCORE_KOI8R = 57483
const UNDERSCORE_KOI8U = 57484
const UNDERSCORE_LATIN1 = 57485
const UNDERSCORE_LATIN2 = 57486
const UNDERSCORE_LATIN5 = 57487
const UNDERSCORE_LATIN7 = 57488
const UNDERSCORE_MACCE = 57489
const UNDERSCORE_MACROMAN = 57490
const UNDERSCORE_SJIS = 57491
const UNDERSCORE_SWE7 = 57492
const UNDERSCORE_TIS620 = 57493
const UNDERSCORE_UCS2 = 57494
const UNDERSCORE_UJIS = 57495
const UNDERSCORE_UTF16 = 57496
const UNDERSCORE_UTF16LE = 57497
const UNDERSCORE_UTF32 = 57498
const UNDERSCORE_UTF8 = 57499
const UNDERSCORE_UTF8MB3 = 57500
const UNDERSCORE_UTF8MB4 = 57501
const INTERVAL = 57502
const JSON_EXTRACT_OP = 57503
const JSON_UNQUOTE_EXTRACT_OP = 57504
const CREATE = 57505
const ALTER = 57506
const DROP = 57507
const RENAME = 57508
const ANALYZE = 57509
const ADD = 57510
const MODIFY = 57511
const CHANGE = 57512
const SCHEMA = 57513
const TABLE = 57514
const INDEX = 57515
const INDEXES = 57516
const VIEW = 57517
const TO = 57518
const IGNORE = 57519
const IF = 57520
const PRIMARY = 57521
const COLUMN = 57522
const SPATIAL = 57523
const FULLTEXT = 57524
const KEY_BLOCK_SIZE = 57525
const CHECK = 57526
const ACTION = 57527
const CASCADE = 57528
const CONSTRAINT = 57529
const FOREIGN = 57530
const NO = 57531
const REFERENCES = 57532
const RESTRICT = 57533
const FIRST = 57534
const AFTER = 57535
const SHOW = 57536
const DESCRIBE = 57537
const EXPLAIN = 57538
const DATE = 57539
const ESCAPE = 57540
const REPAIR = 57541
const OPTIMIZE = 57542
const TRUNCATE = 57543
const FORMAT = 57544
const MAXVALUE = 57545
const REORGANIZE = 57546
const LESS = 57547
const THAN = 57548
const PROCEDURE = 57549
const TRIGGER = 57550
const TRIGGERS = 57551
const FUNCTION = 57552
const STATUS = 57553
const VARIABLES = 57554
const WARNINGS = 57555
const ERRORS = 57556
const KILL = 57557
const CONNECTION = 57558
const SEQUENCE = 57559
const ENABLE = 57560
const DISABLE = 57561
const EACH = 57562
const ROW = 57563
const BEFORE = 57564
const FOLLOWS = 57565
const PRECEDES = 57566
const DEFINER = 57567
const INVOKER = 57568
const INOUT = 57569
const OUT = 57570
const DETERMINISTIC = 57571
const CONTAINS = 57572
const READS = 57573
const MODIFIES = 57574
const SQL = 57575
const SECURITY = 57576
const TEMPORARY = 57577
const ALGORITHM = 57578
const MERGE = 57579
const TEMPTABLE = 57580
const UNDEFINED = 57581
const CLASS_ORIGIN = 57582
const SUBCLASS_ORIGIN = 57583
const MESSAGE_TEXT = 57584
const MYSQL_ERRNO = 57585
const CONSTRAINT_CATALOG = 57586
const CONSTRAINT_SCHEMA = 57587
const CONSTRAINT_NAME = 57588
const CATALOG_NAME = 57589
const SCHEMA_NAME = 57590
const TABLE_NAME = 57591
const COLUMN_NAME = 57592
const CURSOR_NAME = 57593
const SIGNAL = 57594
const RESIGNAL = 57595
const SQLSTATE = 57596
const DECLARE = 57597
const CONDITION = 57598
const CURSOR = 57599
const CONTINUE = 57600
const EXIT = 57601
const UNDO = 57602
const HANDLER = 57603
const FOUND = 57604
const SQLWARNING = 57605
const SQLEXCEPTION = 57606
const USER = 57607
const IDENTIFIED = 57608
const ROLE = 57609
const REUSE = 57610
const GRANT = 57611
const GRANTS = 57612
const REVOKE = 57613
const NONE = 57614
const ATTRIBUTE = 57615
const RANDOM = 57616
const PASSWORD = 57617
const INITIAL = 57618
const AUTHENTICATION = 57619
const SSL = 57620
const X509 = 57621
const CIPHER = 57622
const ISSUER = 57623
const SUBJECT = 57624
const ACCOUNT = 57625
const EXPIRE = 57626
const NEVER = 57627
const DAY = 57628
const OPTION = 57629
const OPTIONAL = 57630
const EXCEPT = 57631
const ADMIN = 57632
const PRIVILEGES = 57633
const MAX_QUERIES_PER_HOUR = 57634
const MAX_UPDATES_PER_HOUR = 57635
const MAX_CONNECTIONS_PER_HOUR = 57636
const MAX_USER_CONNECTIONS = 57637
const FLUSH = 57638
const FAILED_LOGIN_ATTEMPTS = 57639
const PASSWORD_LOCK_TIME = 57640
const REQUIRE = 57641
const PROXY = 57642
const ROUTINE = 57643
const TABLESPACE = 57644
const CLIENT = 57645
const SLAVE = 57646
const EVENT = 57647
const EXECUTE = 57648
const FILE = 57649
const RELOAD = 57650
const REPLICATION = 57651
const SHUTDOWN = 57652
const SUPER = 57653
const USAGE = 57654
const LOGS = 57655
const ENGINE = 57656
const ERROR = 57657
const GENERAL = 57658
const HOSTS = 57659
const OPTIMIZER_COSTS = 57660
const RELAY = 57661
const SLOW = 57662
const USER_RESOURCES = 57663
const NO_WRITE_TO_BINLOG = 57664
const CHANNEL = 57665
const BEGIN = 57666
const START = 57667
const TRANSACTION = 57668
const COMMIT = 57669
const ROLLBACK = 57670
const SAVEPOINT = 57671
const WORK = 57672
const RELEASE = 57673
const BIT = 57674
const TINYINT = 57675
const SMALLINT = 57676
const MEDIUMINT = 57677
const INT = 57678
const INTEGER = 57679
const BIGINT = 57680
const INTNUM = 57681
const SERIAL = 57682
const REAL = 57683
const DOUBLE = 57684
const FLOAT_TYPE = 57685
const DECIMAL = 57686
const NUMERIC = 57687
const DEC = 57688
const FIXED = 57689
const PRECISION = 57690
const TIME = 57691
const TIMESTAMP = 57692
const DATETIME = 57693
const YEAR = 57694
const CHAR = 57695
const VARCHAR = 57696
const BOOL = 57697
const CHARACTER = 57698
const VARBINARY = 57699
const NCHAR = 57700
const NVARCHAR = 57701
const NATIONAL = 57702
const VARYING = 57703
const TEXT = 57704
const TINYTEXT = 57705
const MEDIUMTEXT = 57706
const LONGTEXT = 57707
const LONG = 57708
const BLOB = 57709
const TINYBLOB = 57710
const MEDIUMBLOB = 57711
const LONGBLOB = 57712
const JSON = 57713
const ENUM = 57714
const GEOMETRY = 57715
const POINT = 57716
const LINESTRING = 57717
const POLYGON = 57718
const GEOMETRYCOLLECTION = 57719
const MULTIPOINT = 57720
const MULTILINESTRING = 57721
const MULTIPOLYGON = 57722
const LOCAL = 57723
const LOW_PRIORITY = 57724
const NULLX = 57725
const AUTO_INCREMENT = 57726
const APPROXNUM = 57727
const SIGNED = 57728
const UNSIGNED = 57729
const ZEROFILL = 57730
const SRID = 57731
const COLLATION = 57732
const DATABASES = 57733
const SCHEMAS = 57734
const TABLES = 57735
const FULL = 57736
const PROCESSLIST = 57737
const COLUMNS = 57738
const FIELDS = 57739
const ENGINES = 57740
const PLUGINS = 57741
const NAMES = 57742
const CHARSET = 57743
const GLOBAL = 57744
const SESSION = 57745
const ISOLATION = 57746
const LEVEL = 57747
const READ = 57748
const WRITE = 57749
const ONLY = 57750
const REPEATABLE = 57751
const COMMITTED = 57752
const UNCOMMITTED = 57753
const SERIALIZABLE = 57754
const ENCRYPTION = 57755
const CURRENT_TIMESTAMP = 57756
const DATABASE = 57757
const CURRENT_DATE = 57758
const CURRENT_USER = 57759
const CURRENT_TIME = 57760
const LOCALTIME = 57761
const LOCALTIMESTAMP = 57762
const UTC_DATE = 57763
const UTC_TIME = 57764
const UTC_TIMESTAMP = 57765
const REPLACE = 57766
const CONVERT = 57767
const CAST = 57768
const SUBSTR = 57769
const SUBSTRING = 57770
const TRIM = 57771
const LEADING = 57772
const TRAILING = 57773
const BOTH = 57774
const GROUP_CONCAT = 57775
const SEPARATOR = 57776
const TIMESTAMPADD = 57777
const TIMESTAMPDIFF = 57778
const OVER = 57779
const WINDOW = 57780
const GROUPING = 57781
const CURRENT = 57782
const AVG = 57783
const BIT_AND = 57784
const BIT_OR = 57785
const BIT_XOR = 57786
const COUNT = 57787
const JSON_ARRAYAGG = 57788
const JSON_OBJECTAGG = 57789
const MAX = 57790
const MIN = 57791
const STDDEV_POP = 57792
const STDDEV = 57793
const STD = 57794
const STDDEV_SAMP = 57795
const SUM = 57796
const VAR_POP = 57797
const VARIANCE = 57798
const VAR_SAMP = 57799
const CUME_DIST = 57800
const DENSE_RANK = 57801
const FIRST_VALUE = 57802
const LAG = 57803
const LAST_VALUE = 57804
const LEAD = 57805
const NTH_VALUE = 57806
const NTILE = 57807
const ROW_NUMBER = 57808
const PERCENT_RANK = 57809
const RANK = 57810
const JSON_TABLE = 57811
const PATH = 57812
const MATCH = 57813
const AGAINST = 57814
const BOOLEAN = 57815
const LANGUAGE = 57816
const WITH = 57817
const QUERY = 57818
const EXPANSION = 57819
const ACCESSIBLE = 57820
const ASENSITIVE = 57821
const CUBE = 57822
const DAY_HOUR = 57823
const DAY_MICROSECOND = 57824
const DAY_MINUTE = 57825
const DAY_SECOND = 57826
const DELAYED = 57827
const DISTINCTROW = 57828
const DUAL = 57829
const EMPTY = 57830
const FETCH = 57831
const FLOAT4 = 57832
const FLOAT8 = 57833
const GET = 57834
const HIGH_PRIORITY = 57835
const HOUR_MICROSECOND = 57836
const HOUR_MINUTE = 57837
const HOUR_SECOND = 57838
const INSENSITIVE = 57839
const INT1 = 57840
const INT2 = 57841
const INT3 = 57842
const INT4 = 57843
const INT8 = 57844
const IO_AFTER_GTIDS = 57845
const IO_BEFORE_GTIDS = 57846
const ITERATE = 57847
const LEAVE = 57848
const LINEAR = 57849
const LOOP = 57850
const MASTER_BIND = 57851
const MASTER_SSL_VERIFY_SERVER_CERT = 57852
const MIDDLEINT = 57853
const MINUTE_MICROSECOND = 57854
const MINUTE_SECOND = 57855
const PURGE = 57856
const READ_WRITE = 57857
const REPEAT = 57858
const RETURN = 57859
const RLIKE = 57860
const SECOND_MICROSECOND = 57861
const SENSITIVE = 57862
const SPECIFIC = 57863
const SQL_BIG_RESULT = 57864
const SQL_SMALL_RESULT = 57865
const VARCHARACTER = 57866
const WHILE = 57867
const YEAR_MONTH = 57868
const UNUSED = 57869
const DESCRIPTION = 57870
const LATERAL = 57871
const MEMBER = 57872
const RECURSIVE = 57873
const BUCKETS = 57874
const CLONE = 57875
const COMPONENT = 57876
const DEFINITION = 57877
const ENFORCED = 57878
const EXCLUDE = 57879
const GEOMCOLLECTION = 57880
const GET_MASTER_PUBLIC_KEY = 57881
const HISTOGRAM = 57882
const HISTORY = 57883
const INACTIVE = 57884
const INVISIBLE = 57885
const LOCKED = 57886
const MASTER_COMPRESSION_ALGORITHMS = 57887
const MASTER_PUBLIC_KEY_PATH = 57888
const MASTER_TLS_CIPHERSUITES = 57889
const MASTER_ZSTD_COMPRESSION_LEVEL = 57890
const NESTED = 57891
const NETWORK_NAMESPACE = 57892
const NOWAIT = 57893
const NULLS = 57894
const OJ = 57895
const OLD = 57896
const ORDINALITY = 57897
const ORGANIZATION = 57898
const OTHERS = 57899
const PERSIST = 57900
const PERSIST_ONLY = 57901
const PRIVILEGE_CHECKS_USER = 57902
const PROCESS = 57903
const REFERENCE = 57904
const REQUIRE_ROW_FORMAT = 57905
const RESOURCE = 57906
const RESPECT = 57907
const RESTART = 57908
const RETAIN = 57909
const SECONDARY = 57910
const SECONDARY_ENGINE = 57911
const SECONDARY_LOAD = 57912
const SECONDARY_UNLOAD = 57913
const SKIP = 57914
const THREAD_PRIORITY = 57915
const TIES = 57916
const VCPU = 57917
const VISIBLE = 57918
const SYSTEM = 57919
const INFILE = 57920
const ACTIVE = 57921
const AGGREGATE = 57922
const ANY = 57923
const ARRAY = 57924
const ASCII = 57925
const AT = 57926
const AUTOEXTEND_SIZE = 57927
const ENDS = 57928
const EVENTS = 57929
const GENERATED = 57930
const ALWAYS = 57931
const STORED = 57932
const VIRTUAL = 57933
const NVAR = 57934
const PASSWORD_LOCK = 57935

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DUMPFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"VAR_MAX",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"INTO",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB3",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"ENABLE",
	"DISABLE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"ALGORITHM",
	"MERGE",
	"TEMPTABLE",
	"UNDEFINED",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTION",
	"OPTIONAL",
	"EXCEPT",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EVENT",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"SRID",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ENCRYPTION",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"JSON_TABLE",
	"PATH",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ACCESSIBLE",
	"ASENSITIVE",
	"CUBE",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"DELAYED",
	"DISTINCTROW",
	"DUAL",
	"EMPTY",
	"FETCH",
	"FLOAT4",
	"FLOAT8",
	"GET",
	"HIGH_PRIORITY",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"INSENSITIVE",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"IO_AFTER_GTIDS",
	"IO_BEFORE_GTIDS",
	"ITERATE",
	"LEAVE",
	"LINEAR",
	"LOOP",
	"MASTER_BIND",
	"MASTER_SSL_VERIFY_SERVER_CERT",
	"MIDDLEINT",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"PURGE",
	"READ_WRITE",
	"REPEAT",
	"RETURN",
	"RLIKE",
	"SECOND_MICROSECOND",
	"SENSITIVE",
	"SPECIFIC",
	"SQL_BIG_RESULT",
	"SQL_SMALL_RESULT",
	"VARCHARACTER",
	"WHILE",
	"YEAR_MONTH",
	"UNUSED",
	"DESCRIPTION",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"ACTIVE",
	"AGGREGATE",
	"ANY",
	"ARRAY",
	"ASCII",
	"AT",
	"AUTOEXTEND_SIZE",
	"ENDS",
	"EVENTS",
	"GENERATED",
	"ALWAYS",
	"STORED",
	"VIRTUAL",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 35,
	612, 35,
	-2, 55,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 35,
	5, 60,
	-2, 1201,
	-1, 41,
	190, 1271,
	191, 1290,
	-2, 248,
	-1, 47,
	229, 753,
	230, 753,
	-2, 742,
	-1, 477,
	178, 1667,
	-2, 941,
	-1, 478,
	178, 1300,
	-2, 1294,
	-1, 479,
	178, 1301,
	-2, 1295,
	-1, 509,
	178, 1777,
	-2, 1189,
	-1, 510,
	178, 1859,
	-2, 943,
	-1, 511,
	178, 1687,
	-2, 944,
	-1, 515,
	178, 1624,
	-2, 2118,
	-1, 516,
	178, 1648,
	-2, 2119,
	-1, 517,
	178, 1761,
	-2, 2120,
	-1, 518,
	178, 1768,
	-2, 2121,
	-1, 519,
	178, 1848,
	-2, 2122,
	-1, 578,
	178, 1637,
	-2, 1162,
	-1, 581,
	178, 1655,
	-2, 1091,
	-1, 582,
	178, 1871,
	-2, 1091,
	-1, 583,
	178, 1870,
	-2, 1091,
	-1, 584,
	178, 1869,
	-2, 1091,
	-1, 585,
	178, 1755,
	-2, 1091,
	-1, 586,
	178, 1756,
	-2, 1091,
	-1, 587,
	178, 1653,
	-2, 1091,
	-1, 588,
	178, 1654,
	-2, 1091,
	-1, 589,
	178, 1656,
	-2, 1091,
	-1, 837,
	101, 1959,
	178, 1959,
	-2, 1255,
	-1, 838,
	101, 2054,
	178, 2054,
	-2, 1256,
	-1, 843,
	101, 1979,
	178, 1979,
	-2, 1257,
	-1, 844,
	101, 2017,
	178, 2017,
	-2, 1258,
	-1, 845,
	101, 2018,
	178, 2018,
	-2, 1259,
	-1, 846,
	101, 1907,
	178, 1907,
	-2, 1263,
	-1, 848,
	101, 1998,
	178, 1998,
	-2, 1265,
	-1, 1369,
	1, 522,
	612, 522,
	-2, 520,
	-1, 1371,
	1, 522,
	612, 522,
	-2, 520,
	-1, 1787,
	178, 1298,
	-2, 1227,
	-1, 1794,
	178, 1344,
	-2, 2118,
	-1, 1795,
	178, 1368,
	-2, 2119,
	-1, 1796,
	178, 1484,
	-2, 2120,
	-1, 1797,
	178, 1491,
	-2, 2121,
	-1, 1798,
	178, 1574,
	-2, 2122,
	-1, 1833,
	178, 1303,
	-2, 1299,
	-1, 1952,
	1, 854,
	5, 854,
	12, 854,
	13, 854,
	14, 854,
	15, 854,
	17, 854,
	19, 854,
	29, 854,
	30, 854,
	56, 854,
	57, 854,
	58, 854,
	59, 854,
	60, 854,
	62, 854,
	63, 854,
	66, 854,
	67, 854,
	69, 854,
	70, 854,
	88, 854,
	456, 854,
	612, 854,
	-2, 887,
	-1, 1960,
	67, 77,
	69, 77,
	-2, 81,
	-1, 1977,
	178, 1781,
	-2, 1260,
	-1, 2061,
	1, 523,
	612, 523,
	-2, 520,
	-1, 2148,
	44, 635,
	197, 637,
	199, 635,
	200, 635,
	-2, 678,
	-1, 2201,
	5, 61,
	-2, 973,
	-1, 2556,
	178, 1624,
	-2, 2118,
	-1, 2557,
	178, 1648,
	-2, 2119,
	-1, 2558,
	178, 1761,
	-2, 2120,
	-1, 2559,
	178, 1768,
	-2, 2121,
	-1, 2560,
	178, 1848,
	-2, 2122,
	-1, 2704,
	197, 638,
	-2, 636,
	-1, 2778,
	178, 1548,
	-2, 785,
	-1, 2803,
	1, 927,
	5, 927,
	12, 927,
	13, 927,
	14, 927,
	15, 927,
	17, 927,
	19, 927,
	29, 927,
	30, 927,
	56, 927,
	57, 927,
	58, 927,
	59, 927,
	60, 927,
	62, 927,
	63, 927,
	66, 927,
	67, 927,
	69, 927,
	70, 927,
	88, 927,
	456, 927,
	612, 927,
	-2, 887,
	-1, 2945,
	5, 61,
	-2, 1221,
	-1, 3032,
	41, 1310,
	-2, 1308,
	-1, 3232,
	5, 61,
	-2, 1224,
	-1, 3247,
	279, 314,
	-2, 1366,
	-1, 3248,
	279, 315,
	-2, 1407,
	-1, 3249,
	279, 316,
	-2, 1586,
	-1, 3415,
	96, 300,
	98, 300,
	100, 300,
	-2, 55,
	-1, 3446,
	98, 307,
	99, 307,
	100, 307,
	-2, 55,
}

const yyPrivate = 57344

const yyLast = 42666

var yyAct = [...]int{
	521, 76, 3396, 2378, 3367, 3407, 3348, 456, 3251, 3311,
	3252, 3349, 3369, 958, 3273, 1203, 410, 3291, 2646, 3224,
	2522, 3153, 3234, 3161, 7, 3268, 481, 3160, 6, 3215,
	3162, 8, 1299, 3159, 5, 3131, 2598, 2818, 3090, 2970,
	3222, 3133, 3034, 2548, 3032, 1204, 2476, 520, 2901, 2283,
	2771, 463, 2797, 2279, 2285, 470, 2462, 2772, 2056, 79,
	479, 2008, 2920, 2688, 2663, 2080, 2870, 2876, 393, 396,
	2854, 485, 1806, 3154, 2475, 2599, 1227, 76, 435, 435,
	2315, 91, 441, 1226, 992, 2549, 2768, 2698, 1999, 2319,
	498, 2789, 460, 2394, 2780, 2412, 1986, 1786, 1799, 104,
	3158, 3, 2177, 975, 1404, 1016, 130, 2269, 2147, 130,
	1949, 2042, 1985, 1859, 1406, 130, 2492, 1948, 1793, 2126,
	1814, 1865, 2262, 1917, 2109, 438, 438, 921, 1995, 2026,
	1735, 2064, 1706, 1380, 2038, 2063, 130, 2441, 2062, 2369,
	1122, 1281, 1987, 488, 1277, 839, 928, 1908, 1836, 1129,
	1952, 1045, 1125, 130, 930, 1740, 1024, 2060, 920, 466,
	835, 842, 2552, 836, 1280, 2320, 1143, 1403, 455, 413,
	490, 1023, 68, 130, 438, 412, 930, 461, 1975, 941,
	946, 1962, 1372, 1375, 130, 81, 971, 3446, 1133, 3441,
	100, 3433, 96, 450, 3415, 3413, 3391, 3362, 3299, 78,
	3092, 3091, 2012, 2613, 1733, 2841, 3011, 3443, 428, 3439,
	422, 433, 416, 2644, 3437, 405, 36, 3379, 957, 3220,
	3342, 36, 3009, 83, 36, 89, 2014, 36, 39, 2855,
	3139, 2094, 423, 3024, 2530, 2406, 3314, 3012, 3207, 2543,
	2857, 2660, 3219, 2514, 3347, 2348, 3110, 2333, 3138, 462,
	2094, 3321, 2336, 3269, 3228, 2239, 925, 2544, 453, 2762,
	940, 3228, 3070, 2385, 1282, 2281, 1283, 67, 2341, 2340,
	830, 831, 832, 3223, 2125, 87, 85, 86, 77, 943,
	1971, 948, 949, 77, 2594, 2595, 77, 1972, 1973, 77,
	2337, 3225, 1782, 1783, 2303, 2704, 951, 2302, 3225, 108,
	2304, 2593, 1115, 1056, 3083, 2343, 1757, 1918, 2326, 3061,
	2529, 118, 114, 115, 1074, 116, 2327, 1160, 1159, 1169,
	1170, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1161, 1739,
	2823, 1171, 2829, 2831, 2830, 2827, 2828, 2826, 2825, 2824,
	1736, 996, 997, 404, 97, 403, 1082, 120, 119, 2345,
	445, 2832, 2833, 1737, 1738, 2860, 3229, 2314, 995, 916,
	2010, 2011, 2124, 3229, 1042, 2027, 2039, 1360, 2015, 2015,
	2018, 2020, 1867, 2019, 407, 2032, 2926, 2027, 1002, 2748,
	2746, 387, 1719, 415, 414, 417, 1006, 402, 452, 2438,
	76, 76, 3405, 421, 1778, 2858, 2859, 2861, 2862, 2863,
	1777, 1776, 1775, 1774, 1773, 121, 1014, 122, 2401, 446,
	425, 1078, 1079, 1011, 429, 1049, 2430, 1013, 2871, 3336,
	130, 2339, 3195, 1012, 2342, 937, 2874, 3254, 432, 3038,
	1003, 1004, 2687, 979, 980, 2405, 1058, 983, 2435, 2138,
	2872, 2873, 1089, 3253, 99, 1090, 2670, 3197, 3404, 1111,
	3114, 2888, 1361, 1325, 110, 109, 472, 1119, 2897, 2877,
	2878, 2879, 2880, 3112, 130, 3028, 2673, 2139, 3261, 981,
	982, 1768, 3296, 2403, 3104, 2081, 2886, 3400, 1180, 3010,
	3004, 1182, 1058, 3006, 1184, 1378, 112, 937, 3294, 3295,
	1010, 461, 3003, 3298, 106, 2999, 397, 937, 106, 2664,
	2665, 2666, 2667, 2668, 2383, 111, 106, 3364, 107, 111,
	3002, 945, 944, 1195, 1361, 130, 1198, 1199, 1200, 1201,
	1202, 3001, 1207, 3000, 1361, 418, 419, 420, 426, 1747,
	430, 431, 434, 1146, 2998, 388, 991, 947, 101, 398,
	102, 3357, 993, 947, 994, 996, 997, 382, 3279, 2384,
	394, 3156, 1387, 1388, 1386, 117, 3100, 3101, 1312, 2075,
	2076, 2386, 1081, 462, 2960, 1208, 1209, 1210, 1211, 1212,
	1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 113,
	1224, 1225, 1228, 1228, 1228, 1234, 1228, 1228, 1234, 1228,
	1234, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251,
	1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261,
	1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271,
	2578, 2493, 461, 3106, 1181, 3373, 2338, 2071, 3368, 3239,
	3240, 2335, 3338, 1108, 406, 1150, 2349, 3226, 2404, 1326,
	2856, 3096, 2420, 2421, 3226, 3371, 989, 990, 988, 360,
	987, 3309, 2902, 2903, 3428, 2689, 2070, 1720, 1050, 1230,
	1232, 1007, 1236, 1238, 2041, 1241, 1229, 1231, 1233, 1235,
	1237, 1239, 1240, 1242, 2132, 2643, 3137, 978, 2027, 2354,
	2017, 3111, 131, 3027, 2672, 1091, 132, 1057, 98, 133,
	134, 3062, 75, 3007, 462, 135, 363, 3406, 390, 1068,
	3196, 1058, 2495, 75, 395, 372, 380, 381, 75, 88,
	3025, 75, 2407, 1117, 75, 3320, 1110, 1739, 1741, 1059,
	1066, 1067, 1069, 1070, 1071, 1072, 1073, 2007, 1075, 1076,
	1077, 3411, 1080, 391, 1083, 1084, 1085, 1086, 1087, 395,
	369, 1737, 1738, 370, 131, 1096, 378, 379, 132, 3105,
	395, 133, 134, 1743, 131, 1690, 1742, 135, 132, 3088,
	937, 133, 134, 2661, 2005, 937, 108, 135, 927, 2664,
	2665, 2666, 2667, 2668, 1339, 1342, 1343, 1344, 1345, 1346,
	1347, 424, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355,
	937, 1327, 1328, 1329, 1330, 1306, 1310, 1340, 1307, 1313,
	1309, 1311, 1308, 375, 1314, 1315, 1316, 1317, 1318, 1319,
	1320, 1321, 1322, 1323, 1324, 1331, 1332, 1333, 1334, 1335,
	1336, 1337, 1338, 2447, 376, 395, 1065, 2155, 2149, 2150,
	2334, 2148, 2151, 2152, 3370, 3372, 2602, 2971, 1130, 2703,
	1106, 937, 3447, 2459, 3444, 2005, 2288, 2290, 1152, 2497,
	3434, 2973, 3416, 942, 2501, 2007, 2496, 960, 2494, 3116,
	451, 2912, 2913, 2499, 2685, 2007, 2429, 2158, 2425, 2409,
	2408, 2133, 1392, 2006, 1390, 1008, 2498, 1054, 2059, 2454,
	2447, 2157, 2156, 939, 2451, 2585, 1063, 2450, 2453, 361,
	2091, 2500, 2502, 130, 1205, 2090, 2584, 2583, 938, 2423,
	2007, 1114, 930, 2007, 950, 359, 3409, 842, 2214, 3410,
	2916, 3408, 842, 2211, 1185, 1341, 1064, 77, 1060, 1183,
	1102, 110, 109, 374, 364, 365, 2734, 385, 1186, 1187,
	2323, 366, 368, 2727, 362, 384, 383, 2592, 2427, 2426,
	2307, 2193, 1101, 1097, 1098, 1099, 1100, 1103, 1104, 1105,
	1107, 1223, 1061, 1062, 2182, 2163, 1356, 1357, 1358, 1359,
	2992, 2074, 2072, 435, 1967, 1809, 1382, 1293, 1197, 1196,
	1151, 2972, 970, 3109, 1976, 2986, 1294, 2289, 377, 1976,
	2984, 1285, 435, 1976, 2835, 1405, 1286, 1026, 1027, 1028,
	1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 930,
	130, 2006, 1053, 2848, 1171, 2846, 1976, 2635, 2447, 438,
	438, 2006, 937, 438, 2458, 2448, 2005, 2632, 2455, 1275,
	130, 1005, 2993, 130, 1272, 1273, 1976, 1185, 438, 438,
	3256, 130, 2911, 1976, 2631, 2299, 1976, 2627, 1976, 2623,
	2682, 130, 130, 130, 130, 130, 2006, 2154, 1298, 2006,
	1976, 2367, 3132, 1381, 1976, 2365, 2940, 1385, 1976, 2363,
	1976, 2361, 438, 1716, 2917, 2849, 130, 2847, 435, 1976,
	2358, 2467, 1161, 3014, 1363, 1171, 1186, 1187, 1691, 2633,
	2263, 1186, 1187, 3280, 3281, 1802, 1731, 3277, 3278, 1408,
	977, 1702, 1703, 1704, 1705, 1707, 1164, 1165, 1166, 1167,
	1168, 1161, 1766, 1295, 1171, 1139, 1714, 3257, 3142, 3141,
	3015, 2101, 76, 1142, 438, 438, 438, 2463, 985, 930,
	1807, 1808, 1142, 1140, 1141, 1139, 1710, 1780, 1711, 998,
	1383, 1368, 1384, 1367, 1162, 1163, 1164, 1165, 1166, 1167,
	1168, 1161, 1142, 2787, 1171, 2786, 1394, 1693, 1401, 438,
	1402, 3419, 3397, 3418, 438, 438, 94, 2785, 1695, 1696,
	1750, 2784, 1160, 1159, 1169, 1170, 1162, 1163, 1164, 1165,
	1166, 1167, 1168, 1161, 1728, 130, 1171, 130, 1291, 2809,
	930, 1015, 953, 76, 1140, 1141, 1139, 976, 952, 1912,
	1723, 1724, 2516, 1909, 1726, 1708, 3432, 3359, 130, 1772,
	1843, 93, 1837, 1142, 1909, 1146, 2227, 1745, 1207, 3315,
	1729, 2102, 461, 1870, 1872, 1841, 1842, 1840, 986, 1370,
	2887, 1748, 2881, 1885, 1749, 2918, 1000, 2120, 1746, 1160,
	1159, 1169, 1170, 1162, 1163, 1164, 1165, 1166, 1167, 1168,
	1161, 2730, 92, 1171, 930, 1767, 930, 1800, 1770, 2206,
	3292, 2205, 3325, 2611, 3324, 930, 1136, 930, 930, 2110,
	1800, 1771, 1788, 1141, 1139, 3200, 1828, 130, 1779, 3192,
	1833, 1140, 1141, 1139, 1953, 3150, 1325, 3382, 1140, 1141,
	1139, 1142, 1791, 461, 462, 1784, 3436, 3022, 1894, 1897,
	1142, 1140, 1141, 1139, 1829, 77, 1910, 1142, 1838, 3361,
	3193, 1821, 1823, 1824, 930, 930, 1839, 1150, 461, 1822,
	1142, 1825, 1159, 1169, 1170, 1162, 1163, 1164, 1165, 1166,
	1167, 1168, 1161, 3429, 2375, 1171, 1863, 1947, 1869, 1140,
	1141, 1139, 3021, 130, 130, 130, 1811, 3293, 1126, 1875,
	1876, 1127, 3438, 1140, 1141, 1139, 1982, 3194, 1142, 3020,
	1694, 842, 2179, 2180, 2181, 462, 2207, 930, 930, 3019,
	1812, 1751, 1142, 1813, 1754, 1755, 1756, 3107, 1758, 1759,
	3346, 1712, 1760, 1923, 94, 1925, 3013, 2840, 1761, 3430,
	462, 1312, 1762, 1763, 1874, 1764, 1765, 1877, 1878, 1879,
	1880, 1881, 2839, 2614, 2374, 1160, 1159, 1169, 1170, 1162,
	1163, 1164, 1165, 1166, 1167, 1168, 1161, 2088, 1981, 1171,
	1906, 2372, 1833, 1205, 3108, 2288, 2290, 1957, 2048, 2049,
	2050, 2051, 1140, 1141, 1139, 1996, 1169, 1170, 1162, 1163,
	1164, 1165, 1166, 1167, 1168, 1161, 1980, 1860, 1171, 1861,
	1969, 1142, 2346, 1968, 130, 2028, 2029, 2030, 2031, 1974,
	130, 130, 438, 438, 438, 1983, 1993, 130, 1965, 1048,
	925, 1961, 1326, 2004, 2044, 2045, 2046, 2047, 1047, 3301,
	1160, 1159, 1169, 1170, 1162, 1163, 1164, 1165, 1166, 1167,
	1168, 1161, 3300, 1021, 1171, 2040, 1140, 1141, 1139, 2305,
	3258, 2306, 1864, 3292, 3255, 3206, 2086, 2087, 3103, 3102,
	3087, 3029, 1140, 1141, 1139, 1142, 1020, 2052, 2053, 2054,
	2518, 2997, 1817, 1818, 1819, 2967, 1886, 1887, 1888, 2936,
	2884, 1142, 1892, 1893, 1896, 1899, 2883, 1904, 1905, 2068,
	2035, 2036, 2037, 1911, 2016, 959, 2021, 2022, 2023, 2024,
	2025, 2271, 2274, 2275, 2276, 2272, 2289, 2273, 2277, 2882,
	2850, 2790, 2791, 1916, 2837, 1919, 1920, 2694, 2620, 1393,
	1924, 2472, 1926, 1927, 2471, 2370, 2121, 2096, 1932, 1933,
	1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943,
	1205, 1725, 3289, 3288, 3113, 1890, 1891, 3085, 3047, 2323,
	3041, 2909, 2767, 2723, 2719, 2705, 2674, 1339, 1342, 1343,
	1344, 1345, 1346, 1347, 1692, 1348, 1349, 1350, 1351, 1352,
	1353, 1354, 1355, 2415, 1327, 1328, 1329, 1330, 1306, 1310,
	1340, 1307, 1313, 1309, 1311, 1308, 2414, 1314, 1315, 1316,
	1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1331, 1332,
	1333, 1334, 1335, 1336, 1337, 1338, 2209, 2114, 2191, 1121,
	1120, 1088, 962, 963, 964, 965, 966, 967, 968, 2098,
	2097, 1862, 1721, 1718, 1979, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 1121, 503, 502,
	505, 506, 507, 508, 1400, 1399, 1234, 504, 1371, 1871,
	1369, 1043, 973, 401, 399, 2980, 3322, 3040, 2218, 2813,
	3307, 3284, 1121, 2813, 3265, 3213, 1121, 2055, 1341, 2813,
	3209, 2980, 3147, 2988, 2123, 2813, 3094, 1155, 2987, 1158,
	2653, 130, 2980, 1121, 2625, 2117, 1172, 1173, 1174, 1175,
	1176, 1177, 1178, 2624, 1156, 1157, 1154, 2621, 130, 130,
	130, 2980, 3076, 1054, 1160, 1159, 1169, 1170, 1162, 1163,
	1164, 1165, 1166, 1167, 1168, 1161, 2160, 1121, 1171, 2980,
	2979, 2949, 1121, 2162, 1121, 130, 1963, 130, 2413, 2112,
	1963, 930, 2921, 2099, 2813, 2812, 930, 2641, 2640, 2265,
	2103, 2637, 2638, 2637, 2636, 2108, 2107, 1121, 2266, 1121,
	2191, 1121, 2135, 2134, 1883, 2118, 1883, 1121, 930, 80,
	2183, 930, 1297, 1296, 2413, 1093, 1160, 1159, 1169, 1170,
	1162, 1163, 1164, 1165, 1166, 1167, 1168, 1161, 1804, 2266,
	1171, 2765, 1964, 2079, 1966, 2266, 1964, 3339, 1690, 2769,
	2730, 930, 2783, 2513, 3313, 2130, 1160, 1159, 1169, 1170,
	1162, 1163, 1164, 1165, 1166, 1167, 1168, 1161, 2783, 2294,
	1171, 1690, 1092, 2191, 2116, 1052, 2122, 2137, 1837, 2764,
	2140, 2783, 1051, 1054, 2078, 1052, 2943, 1883, 2266, 1803,
	2129, 1160, 1159, 1169, 1170, 1162, 1163, 1164, 1165, 1166,
	1167, 1168, 1161, 2094, 2799, 1171, 2271, 2274, 2275, 2276,
	2272, 77, 2273, 2277, 1981, 2654, 2639, 2470, 1833, 1957,
	2440, 2309, 1970, 2191, 2233, 2232, 2159, 1727, 2093, 1160,
	1159, 1169, 1170, 1162, 1163, 1164, 1165, 1166, 1167, 1168,
	1161, 1805, 1829, 1171, 2282, 2171, 2169, 2170, 1116, 2291,
	2292, 1769, 2755, 1953, 2287, 1734, 1953, 1690, 2144, 2188,
	1391, 1160, 1159, 1169, 1170, 1162, 1163, 1164, 1165, 1166,
	1167, 1168, 1161, 1389, 1838, 1171, 1279, 917, 3236, 2184,
	3210, 2798, 3128, 3044, 2957, 2842, 2013, 2043, 2194, 2790,
	2791, 2168, 2015, 2610, 2039, 2313, 130, 1058, 2073, 2034,
	2033, 409, 1364, 1040, 130, 2057, 2295, 130, 2111, 2296,
	3427, 3425, 3386, 130, 3384, 3350, 130, 130, 130, 2793,
	2769, 2652, 2376, 1744, 2278, 1396, 1094, 1055, 2570, 2568,
	2796, 842, 2178, 2571, 2569, 2572, 930, 2275, 2276, 77,
	2795, 2567, 2566, 3275, 461, 2226, 467, 468, 3218, 2473,
	1815, 2136, 1160, 1159, 1169, 1170, 1162, 1163, 1164, 1165,
	1166, 1167, 1168, 1161, 1134, 1135, 1171, 440, 3267, 2946,
	2176, 2175, 2310, 2293, 2322, 2324, 1408, 3067, 2908, 2816,
	2718, 2717, 2619, 2618, 2617, 2325, 2317, 1957, 2604, 3118,
	3121, 3205, 3204, 1132, 3033, 3031, 1957, 3099, 3098, 1957,
	400, 2297, 2300, 1722, 2466, 1285, 3016, 3017, 930, 2465,
	130, 2312, 2648, 2308, 2359, 435, 462, 1123, 2419, 1292,
	1038, 1022, 1019, 930, 930, 930, 1018, 3332, 1124, 438,
	974, 3051, 3050, 2066, 2347, 1363, 2350, 1807, 1808, 2067,
	2941, 2889, 2356, 1395, 130, 438, 2238, 2240, 2890, 3340,
	3198, 76, 2368, 2246, 2247, 2248, 2249, 2318, 3035, 2321,
	2821, 1017, 438, 2647, 2371, 94, 2373, 2058, 1130, 1134,
	1135, 3331, 1785, 1381, 3330, 2195, 2196, 2197, 2198, 2199,
	930, 1112, 1113, 2382, 438, 2174, 930, 2380, 3329, 2411,
	2381, 2994, 438, 2173, 2143, 2357, 1001, 2360, 2362, 2364,
	2366, 2417, 2402, 464, 2224, 3260, 3259, 3217, 3202, 3122,
	3066, 465, 80, 930, 930, 3216, 3134, 2413, 2388, 2389,
	2390, 3388, 3387, 130, 2921, 2692, 2436, 2434, 2433, 2416,
	2523, 2215, 2422, 930, 2351, 2352, 2353, 2355, 2212, 2428,
	2141, 1709, 1137, 3387, 2424, 3388, 2200, 3144, 2616, 1801,
	447, 461, 917, 2545, 2547, 2439, 449, 1953, 1953, 1953,
	1953, 1953, 3172, 50, 3174, 19, 2445, 2444, 2546, 3173,
	18, 3403, 2228, 2282, 2515, 2579, 2574, 2449, 82, 2460,
	2461, 3175, 20, 2464, 2581, 1953, 3176, 21, 1885, 53,
	930, 2431, 3171, 15, 1, 2468, 2469, 2479, 2485, 2437,
	2480, 2131, 1833, 2483, 2442, 2452, 2457, 3170, 14, 1752,
	2503, 2869, 476, 2505, 2504, 2478, 2868, 130, 130, 130,
	130, 130, 2875, 462, 2612, 2659, 1829, 2550, 2662, 130,
	3164, 10, 2582, 130, 3187, 34, 2400, 130, 2589, 3185,
	33, 3184, 32, 3183, 28, 130, 3182, 27, 3181, 26,
	3179, 23, 2885, 461, 3178, 22, 3180, 24, 930, 1379,
	930, 3005, 930, 956, 930, 3169, 13, 2077, 2562, 2563,
	1044, 2565, 3203, 461, 2561, 2573, 3117, 2564, 3119, 2588,
	3030, 2590, 2591, 1882, 1884, 3166, 12, 2892, 2606, 2607,
	2608, 1889, 2609, 2603, 2853, 2605, 3165, 11, 2597, 2852,
	1957, 1957, 1957, 1957, 1957, 2586, 2393, 435, 3163, 9,
	2669, 2392, 2596, 1039, 1732, 2443, 1957, 2446, 2655, 2089,
	2153, 3130, 2142, 1095, 1997, 462, 1984, 130, 1957, 1921,
	1922, 2649, 2650, 2651, 3233, 919, 1928, 1929, 1930, 1931,
	2478, 90, 2100, 984, 367, 462, 1994, 930, 930, 930,
	2331, 2052, 3120, 2054, 438, 1041, 2330, 2344, 2009, 130,
	438, 2671, 2061, 2065, 2329, 2328, 2524, 2525, 2526, 2527,
	2528, 2628, 3115, 2332, 130, 1303, 438, 1301, 930, 1302,
	438, 1300, 1305, 1304, 438, 438, 3381, 438, 3319, 371,
	1287, 3246, 2700, 2766, 1138, 514, 105, 54, 2910, 2456,
	443, 2708, 2713, 930, 2676, 2760, 444, 130, 930, 95,
	103, 2700, 2678, 2701, 373, 930, 2622, 1179, 930, 2626,
	2172, 930, 2731, 2301, 840, 2630, 841, 833, 2164, 1118,
	3140, 3310, 2695, 2702, 3238, 2774, 76, 2634, 2722, 2696,
	1128, 3270, 2679, 2225, 1222, 1907, 487, 2577, 2939, 3272,
	1820, 2775, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538,
	2539, 2540, 2541, 501, 2729, 500, 499, 496, 497, 2801,
	3227, 2629, 1131, 1810, 2805, 2806, 2807, 2770, 2542, 1153,
	2642, 484, 2773, 2681, 474, 1363, 1951, 2686, 1944, 2119,
	2517, 2690, 2691, 2270, 2693, 2268, 930, 2267, 930, 2744,
	1397, 1276, 2792, 2710, 2715, 2550, 2788, 2280, 1955, 1950,
	2754, 1954, 38, 999, 389, 2761, 2800, 3060, 125, 84,
	448, 386, 469, 25, 17, 1009, 2804, 125, 16, 2146,
	930, 954, 40, 2777, 2782, 42, 461, 76, 2810, 2387,
	2069, 2844, 3245, 3366, 1025, 3395, 2794, 930, 457, 3290,
	31, 30, 2843, 29, 3177, 3186, 473, 3168, 3167, 3352,
	3351, 930, 850, 4, 2802, 125, 1109, 69, 35, 915,
	2, 0, 0, 0, 0, 2811, 0, 0, 1788, 2865,
	2866, 2867, 0, 2310, 2817, 125, 2741, 2742, 0, 2743,
	0, 0, 2745, 0, 2747, 2845, 125, 2822, 1791, 0,
	0, 0, 0, 130, 0, 930, 0, 0, 462, 0,
	1160, 1159, 1169, 1170, 1162, 1163, 1164, 1165, 1166, 1167,
	1168, 1161, 2904, 2905, 1171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2894, 438, 461, 2864, 0,
	2896, 0, 0, 438, 0, 0, 0, 0, 2700, 0,
	2906, 0, 0, 0, 2893, 0, 2836, 0, 2838, 0,
	2899, 2914, 0, 0, 0, 0, 0, 2922, 2923, 0,
	0, 0, 2891, 0, 2700, 2900, 2677, 0, 930, 0,
	0, 0, 2907, 2603, 0, 930, 0, 0, 2735, 2736,
	2737, 2738, 2739, 2814, 2815, 0, 0, 2834, 0, 0,
	0, 2915, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 462,
	0, 0, 2982, 0, 1228, 1228, 1228, 1234, 1228, 1228,
	1234, 1228, 1234, 1243, 1244, 2724, 2959, 0, 0, 0,
	130, 0, 2950, 2964, 2965, 2966, 0, 2990, 0, 472,
	0, 2052, 0, 2895, 0, 2550, 0, 2942, 2962, 930,
	2898, 0, 2968, 2991, 0, 0, 930, 930, 930, 2951,
	2919, 0, 2925, 0, 930, 0, 0, 2478, 0, 2989,
	0, 0, 0, 0, 0, 2963, 2969, 2975, 2976, 2974,
	0, 2763, 0, 0, 0, 0, 0, 2977, 2978, 2995,
	0, 1230, 1232, 930, 1236, 1238, 2113, 1241, 1229, 1231,
	1233, 1235, 1237, 1239, 1240, 1242, 0, 0, 0, 3052,
	0, 0, 1953, 0, 2996, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3008, 0, 0, 3037,
	0, 0, 125, 3018, 2774, 0, 3023, 2774, 3072, 0,
	0, 0, 0, 3026, 0, 0, 0, 0, 0, 3036,
	0, 2801, 3039, 3071, 3049, 0, 3042, 3043, 0, 2287,
	2145, 3079, 0, 0, 930, 3054, 2161, 0, 3055, 0,
	0, 0, 130, 0, 0, 0, 125, 0, 3045, 3046,
	0, 2773, 76, 0, 2773, 3075, 0, 3069, 0, 3065,
	0, 3068, 3074, 0, 0, 0, 0, 3095, 3077, 3084,
	930, 3078, 0, 0, 3097, 2983, 3053, 2985, 930, 0,
	0, 0, 130, 0, 130, 0, 0, 0, 0, 3086,
	0, 0, 0, 0, 0, 0, 0, 457, 0, 0,
	0, 930, 0, 0, 0, 0, 0, 0, 461, 0,
	0, 0, 2190, 0, 2192, 0, 0, 0, 0, 0,
	0, 0, 512, 0, 0, 1957, 0, 0, 0, 0,
	0, 2774, 0, 76, 0, 2201, 2202, 2203, 2204, 3124,
	0, 3126, 2208, 2210, 3149, 0, 2213, 0, 3146, 2216,
	2217, 0, 461, 0, 2222, 2223, 438, 2753, 76, 3155,
	2229, 2230, 3135, 2231, 3127, 930, 2234, 2235, 3157, 2236,
	2237, 0, 3143, 2241, 2242, 2243, 2244, 2245, 2773, 2752,
	462, 3145, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257,
	2258, 2259, 2260, 2261, 3148, 3125, 0, 0, 0, 0,
	3123, 0, 0, 0, 0, 0, 0, 1205, 0, 130,
	0, 0, 849, 0, 0, 0, 922, 2952, 2953, 2954,
	2955, 3241, 3201, 2956, 462, 3211, 2958, 3208, 3199, 0,
	0, 0, 0, 461, 1205, 0, 0, 0, 961, 0,
	0, 0, 0, 3230, 0, 0, 0, 0, 3231, 930,
	0, 3237, 76, 930, 3084, 0, 0, 1160, 1159, 1169,
	1170, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1161, 0,
	930, 1171, 0, 0, 0, 0, 2550, 0, 0, 1160,
	1159, 1169, 1170, 1162, 1163, 1164, 1165, 1166, 1167, 1168,
	1161, 3263, 0, 1171, 0, 0, 0, 0, 3262, 0,
	0, 0, 3287, 3276, 0, 462, 0, 3264, 0, 3266,
	0, 930, 0, 0, 0, 0, 3282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3285, 0,
	0, 930, 0, 0, 3286, 435, 0, 0, 3305, 3297,
	0, 0, 0, 0, 0, 0, 0, 3308, 3306, 0,
	0, 0, 3235, 0, 76, 472, 0, 930, 0, 0,
	76, 0, 3328, 0, 0, 0, 3323, 3318, 3326, 0,
	3335, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 438, 1713, 0, 3345, 76, 0, 3341, 3337,
	930, 76, 0, 3250, 3360, 3343, 0, 0, 0, 3376,
	0, 2523, 3363, 930, 0, 930, 3365, 3356, 0, 3377,
	435, 3355, 3380, 3375, 3353, 3389, 3385, 3354, 76, 930,
	3383, 3378, 76, 76, 0, 0, 3390, 76, 0, 0,
	3392, 0, 0, 3335, 0, 0, 0, 3398, 130, 0,
	0, 0, 0, 0, 2486, 2487, 2488, 2489, 2490, 2491,
	0, 0, 76, 0, 3412, 76, 2512, 438, 3420, 0,
	930, 0, 3335, 3417, 3422, 130, 0, 0, 0, 0,
	0, 0, 0, 0, 76, 1278, 76, 0, 850, 0,
	76, 0, 0, 850, 3335, 0, 3335, 3235, 3435, 0,
	0, 461, 0, 0, 76, 0, 0, 76, 0, 1205,
	0, 3333, 76, 0, 3335, 3442, 0, 76, 0, 0,
	0, 0, 3335, 0, 0, 0, 0, 3335, 0, 0,
	2511, 0, 0, 0, 0, 0, 0, 0, 0, 2575,
	2576, 0, 0, 0, 0, 0, 1835, 0, 0, 1844,
	1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854,
	1855, 1856, 1857, 1858, 0, 0, 3358, 0, 0, 0,
	0, 0, 0, 462, 1160, 1159, 1169, 1170, 1162, 1163,
	1164, 1165, 1166, 1167, 1168, 1161, 0, 0, 1171, 0,
	0, 0, 125, 0, 0, 0, 0, 1374, 1377, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	486, 1900, 125, 0, 0, 125, 0, 0, 1374, 1377,
	0, 1913, 0, 1407, 0, 0, 0, 0, 0, 0,
	0, 3242, 3243, 125, 125, 125, 125, 125, 1160, 1159,
	1169, 1170, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1161,
	0, 0, 1171, 0, 0, 0, 126, 0, 1717, 3271,
	3274, 0, 0, 2481, 0, 126, 1160, 1159, 1169, 1170,
	1162, 1163, 1164, 1165, 1166, 1167, 1168, 1161, 2189, 0,
	1171, 0, 0, 0, 0, 0, 458, 0, 0, 0,
	0, 1160, 1159, 1169, 1170, 1162, 1163, 1164, 1165, 1166,
	1167, 1168, 1161, 126, 923, 1171, 1160, 1159, 1169, 1170,
	1162, 1163, 1164, 1165, 1166, 1167, 1168, 1161, 0, 0,
	1171, 0, 0, 126, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 3327, 0, 0, 0, 2732,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2740, 0, 0, 0, 3274, 0, 0, 0,
	0, 0, 0, 2749, 2750, 2751, 0, 125, 0, 457,
	2756, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	125, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 36, 1407, 2776, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 57, 0, 0,
	0, 0, 0, 74, 0, 0, 39, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1868, 0, 0,
	3421, 0, 0, 0, 0, 0, 2808, 1956, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 457,
	0, 1868, 1868, 1868, 0, 77, 0, 1868, 1868, 1868,
	1868, 0, 1868, 1868, 0, 0, 0, 850, 1868, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3188, 124, 0, 3394, 3397, 3393, 1868, 1868,
	1868, 1868, 392, 0, 1868, 1868, 1868, 1868, 1868, 0,
	0, 0, 0, 1868, 1868, 1868, 1868, 1868, 1868, 1868,
	1868, 1868, 1868, 1868, 1868, 125, 125, 125, 0, 0,
	0, 0, 850, 0, 0, 0, 0, 0, 0, 0,
	918, 0, 0, 0, 0, 0, 1407, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	955, 0, 0, 0, 0, 0, 0, 0, 849, 0,
	126, 969, 0, 849, 1288, 0, 0, 0, 41, 70,
	44, 43, 46, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 47,
	73, 72, 0, 0, 126, 0, 45, 2931, 2932, 2933,
	0, 2935, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2944, 2945, 125, 2947, 0, 0,
	2948, 0, 125, 125, 0, 0, 0, 0, 0, 125,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2961, 0, 0, 458, 0, 55, 56, 0,
	3190, 1365, 0, 0, 0, 0, 0, 1373, 1376, 0,
	2981, 0, 513, 1147, 64, 0, 65, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1373, 1376,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 66, 0, 0, 0, 2115, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 127, 0,
	0, 0, 0, 0, 0, 0, 0, 127, 0, 3191,
	71, 0, 51, 52, 59, 0, 60, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 36, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 57, 0, 0, 127, 924, 0, 74, 0,
	0, 39, 0, 0, 0, 0, 0, 3056, 3057, 3058,
	3059, 1753, 0, 0, 0, 127, 0, 3063, 3064, 0,
	0, 0, 0, 0, 0, 0, 127, 972, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	77, 3399, 0, 0, 3080, 3081, 3082, 0, 0, 0,
	0, 0, 0, 0, 2185, 2186, 2187, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3188, 0, 0,
	0, 1046, 1787, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1834, 0, 0, 0, 0, 0,
	75, 0, 0, 0, 2219, 2220, 2221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1834, 0, 1834, 0,
	3136, 0, 0, 0, 0, 0, 0, 1873, 0, 1834,
	1834, 0, 0, 41, 70, 44, 43, 46, 0, 0,
	0, 0, 0, 125, 0, 0, 0, 0, 3189, 0,
	0, 0, 0, 3152, 0, 0, 0, 849, 0, 0,
	2104, 2105, 125, 0, 47, 73, 72, 0, 0, 0,
	0, 45, 0, 0, 0, 0, 1914, 1915, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 125, 0, 457,
	3212, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3221, 0, 0, 0, 0, 0, 3232, 0, 0, 0,
	0, 0, 849, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 55, 56, 0, 3190, 1834, 0, 0, 1834,
	922, 0, 0, 0, 0, 0, 0, 0, 0, 64,
	0, 65, 127, 126, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 36,
	37, 0, 1407, 0, 0, 0, 66, 0, 0, 0,
	0, 0, 0, 57, 0, 0, 0, 0, 0, 74,
	0, 0, 39, 61, 62, 0, 127, 0, 0, 0,
	58, 0, 0, 3283, 3191, 71, 0, 51, 52, 59,
	0, 60, 0, 2418, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 48, 0, 0,
	0, 77, 0, 0, 0, 36, 0, 1868, 0, 0,
	1868, 1868, 1868, 1868, 1868, 0, 0, 0, 1362, 57,
	0, 0, 0, 3317, 0, 74, 0, 0, 39, 0,
	126, 0, 0, 0, 0, 1149, 0, 0, 0, 1868,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 0, 0, 126, 0, 0, 0, 0, 0, 0,
	0, 0, 2482, 0, 0, 0, 0, 77, 0, 0,
	0, 126, 126, 126, 126, 126, 0, 0, 125, 0,
	0, 0, 0, 0, 2506, 2507, 125, 2508, 2509, 457,
	0, 2510, 0, 0, 3188, 125, 0, 0, 125, 2298,
	1407, 0, 850, 0, 0, 2519, 2520, 0, 0, 0,
	0, 0, 0, 0, 41, 70, 44, 43, 46, 0,
	0, 0, 0, 0, 0, 75, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3423, 3424, 0, 0, 47, 73, 72, 0, 0,
	0, 0, 45, 0, 0, 0, 0, 0, 0, 0,
	972, 0, 0, 0, 0, 2587, 63, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	41, 70, 44, 43, 46, 0, 0, 0, 0, 0,
	0, 0, 125, 0, 0, 3189, 0, 0, 0, 0,
	0, 0, 0, 55, 56, 126, 0, 458, 0, 2615,
	1789, 47, 73, 72, 0, 0, 0, 0, 45, 0,
	64, 0, 65, 0, 0, 0, 125, 0, 126, 0,
	0, 0, 0, 0, 0, 1147, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 66, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1366, 0, 55,
	56, 0, 3190, 0, 0, 49, 71, 0, 51, 52,
	59, 0, 60, 0, 0, 0, 64, 972, 65, 0,
	1398, 0, 0, 0, 0, 0, 0, 458, 0, 0,
	0, 0, 0, 0, 0, 125, 0, 0, 1697, 1698,
	1699, 1700, 1701, 66, 0, 0, 1868, 0, 0, 0,
	0, 0, 0, 0, 1868, 0, 1407, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3191, 71, 0, 51, 52, 59, 0, 60, 0,
	0, 0, 0, 2128, 2733, 0, 0, 0, 2128, 0,
	0, 0, 0, 126, 126, 126, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2128, 0, 0, 2128, 2757, 2758, 2759, 0, 923, 0,
	0, 0, 0, 0, 0, 127, 0, 0, 850, 125,
	125, 125, 125, 125, 0, 0, 0, 0, 0, 0,
	0, 457, 0, 2167, 0, 125, 0, 0, 0, 457,
	0, 0, 1834, 0, 1868, 0, 75, 125, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1781, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2803, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1816, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 0, 0, 0, 0, 0,
	126, 126, 0, 0, 0, 2820, 0, 126, 0, 0,
	0, 0, 75, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 127, 0, 0, 0, 0, 0, 0, 125,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 127, 0, 0, 127, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 125, 0, 127, 127, 127, 127, 127, 0, 0,
	0, 36, 0, 0, 0, 0, 125, 0, 0, 0,
	0, 0, 0, 0, 0, 57, 0, 0, 0, 0,
	0, 74, 0, 0, 39, 0, 0, 0, 0, 0,
	0, 0, 849, 0, 0, 0, 0, 0, 0, 125,
	0, 0, 0, 0, 0, 0, 0, 0, 1834, 0,
	1946, 0, 1960, 0, 0, 0, 0, 0, 0, 473,
	0, 0, 0, 77, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2927, 2928, 2929, 2930, 0,
	0, 0, 0, 2934, 0, 0, 0, 2937, 2938, 0,
	3188, 0, 0, 0, 0, 3445, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2377, 0, 0, 0, 0, 0, 850, 127, 0, 0,
	0, 0, 1790, 0, 0, 2391, 2395, 2399, 0, 0,
	36, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	127, 0, 0, 0, 57, 0, 0, 1149, 0, 0,
	74, 2082, 0, 39, 1830, 0, 0, 2084, 2085, 0,
	0, 0, 0, 0, 2092, 0, 41, 70, 44, 43,
	46, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3189, 2128, 0, 0, 0, 0, 0, 2432, 0,
	0, 0, 77, 0, 0, 0, 0, 47, 73, 72,
	0, 0, 0, 0, 45, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1834, 1834, 0, 0, 3188,
	0, 126, 0, 0, 3440, 125, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1834, 0, 0, 0, 0,
	126, 0, 0, 0, 0, 0, 1834, 0, 0, 0,
	0, 0, 0, 0, 0, 55, 56, 0, 3190, 0,
	0, 0, 0, 0, 0, 126, 0, 458, 0, 0,
	0, 0, 64, 0, 65, 127, 127, 127, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2521, 0, 0, 3093, 1830, 0, 0, 66,
	924, 0, 0, 0, 0, 41, 70, 44, 43, 46,
	0, 0, 0, 0, 0, 0, 0, 0, 849, 0,
	3189, 0, 0, 0, 0, 0, 0, 3191, 71, 0,
	51, 52, 59, 0, 60, 0, 47, 73, 72, 0,
	0, 0, 0, 45, 0, 0, 0, 0, 0, 0,
	0, 0, 457, 0, 0, 0, 850, 0, 0, 0,
	1834, 0, 1834, 3129, 1834, 0, 2600, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 0, 0, 0,
	0, 0, 127, 127, 55, 56, 0, 3190, 0, 127,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 64, 0, 65, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 66, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2656,
	2657, 2658, 0, 0, 0, 0, 0, 0, 2095, 0,
	0, 0, 0, 0, 0, 0, 3191, 71, 0, 51,
	52, 59, 0, 60, 0, 0, 126, 2106, 75, 0,
	2684, 0, 0, 0, 126, 0, 0, 458, 0, 0,
	0, 0, 0, 126, 125, 473, 126, 0, 36, 0,
	0, 0, 1046, 0, 0, 2716, 0, 0, 0, 0,
	2721, 0, 57, 0, 0, 0, 0, 2725, 74, 0,
	2726, 39, 0, 2728, 0, 0, 0, 0, 0, 2316,
	0, 0, 0, 0, 457, 0, 457, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	77, 0, 0, 0, 0, 36, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 57,
	0, 0, 0, 0, 0, 74, 0, 3188, 39, 0,
	126, 0, 3431, 0, 0, 0, 849, 0, 1787, 0,
	2781, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 75, 0, 0,
	0, 0, 0, 0, 126, 0, 0, 77, 0, 0,
	0, 0, 2781, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3374, 0, 0, 0, 1834,
	0, 0, 0, 0, 3188, 0, 0, 0, 0, 3414,
	0, 125, 0, 2819, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 41, 70, 44, 43, 46, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3189, 3401,
	0, 0, 0, 127, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 126, 47, 73, 72, 2395, 0, 0,
	0, 45, 127, 2264, 0, 0, 0, 850, 3426, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 127, 0, 0,
	41, 70, 44, 43, 46, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3189, 0, 0, 0, 0,
	0, 0, 55, 56, 0, 3190, 0, 0, 0, 0,
	0, 47, 73, 72, 0, 0, 0, 0, 45, 64,
	1834, 65, 0, 0, 0, 0, 0, 1834, 0, 0,
	0, 0, 0, 0, 0, 0, 2551, 126, 126, 126,
	126, 126, 0, 0, 0, 0, 66, 0, 0, 458,
	0, 0, 1830, 126, 0, 0, 0, 458, 0, 0,
	0, 0, 0, 0, 0, 126, 0, 2379, 0, 55,
	56, 0, 3190, 0, 3191, 71, 849, 51, 52, 59,
	0, 60, 0, 0, 2601, 0, 64, 0, 65, 0,
	0, 2819, 0, 0, 0, 0, 0, 0, 2819, 2819,
	2819, 2410, 0, 0, 0, 0, 2600, 0, 0, 0,
	0, 0, 0, 66, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	457, 0, 0, 0, 0, 2600, 0, 0, 0, 0,
	0, 3191, 71, 0, 51, 52, 59, 126, 60, 0,
	0, 0, 0, 0, 0, 0, 0, 457, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	2474, 0, 0, 0, 0, 0, 0, 36, 127, 0,
	0, 0, 0, 0, 126, 0, 127, 0, 0, 0,
	0, 57, 0, 0, 0, 127, 3048, 74, 127, 0,
	39, 0, 0, 0, 0, 0, 0, 0, 0, 2316,
	0, 2707, 2712, 0, 0, 75, 0, 126, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3073, 0, 0, 0, 0, 0, 0, 77,
	2819, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3089, 0, 0, 3188, 0, 0, 0,
	0, 3334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 75, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 127, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2551, 0, 1789, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 2600, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 41, 70, 44, 43, 46, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3189, 0, 0,
	0, 0, 0, 0, 2645, 0, 0, 0, 0, 0,
	0, 0, 0, 47, 73, 72, 0, 0, 0, 0,
	45, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 127, 2675, 0, 0, 0,
	0, 2600, 0, 126, 0, 3214, 0, 0, 0, 0,
	0, 2680, 0, 0, 0, 0, 1830, 849, 0, 0,
	0, 0, 1834, 0, 0, 0, 0, 0, 0, 0,
	0, 55, 56, 0, 3190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2720, 0, 0, 0, 64, 0,
	65, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1834, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 66, 0, 0, 0, 0,
	0, 0, 0, 2600, 0, 0, 0, 0, 0, 127,
	127, 127, 127, 127, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3191, 71, 127, 51, 52, 59, 2819,
	60, 0, 0, 0, 0, 0, 0, 127, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	458, 0, 0, 0, 2551, 0, 0, 0, 0, 0,
	0, 0, 3312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3316, 0, 1834, 0, 0,
	0, 0, 0, 0, 2601, 0, 0, 0, 0, 0,
	0, 1834, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2601, 0, 0, 0, 0, 0, 127,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 127, 0, 0, 0, 0, 0, 0, 0, 0,
	2851, 0, 0, 0, 0, 0, 127, 0, 0, 0,
	0, 0, 0, 0, 75, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 2709, 2714, 0, 0, 0, 0, 127,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 458, 0, 458, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1790, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2601, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 127, 0, 0, 0, 2601,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2551, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2601, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 458, 0,
	0, 0, 0, 0, 0, 0, 3151, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 458, 0, 0, 0, 0,
	809, 0, 328, 571, 813, 656, 679, 822, 685, 687,
	750, 632, 727, 273, 676, 633, 0, 0, 624, 480,
	625, 657, 199, 477, 783, 728, 811, 713, 743, 753,
	198, 190, 720, 719, 800, 668, 667, 748, 796, 810,
	0, 0, 579, 240, 127, 0, 350, 320, 257, 0,
	0, 711, 0, 564, 565, 696, 752, 644, 739, 815,
	677, 744, 816, 77, 0, 0, 0, 478, 503, 502,
	505, 506, 507, 508, 0, 0, 137, 504, 0, 509,
	510, 511, 0, 706, 749, 827, 623, 475, 494, 628,
	578, 0, 801, 664, 665, 202, 0, 0, 0, 0,
	0, 0, 0, 709, 726, 768, 693, 345, 755, 764,
	778, 686, 288, 215, 0, 0, 0, 0, 491, 492,
	471, 0, 0, 0, 594, 0, 493, 0, 638, 489,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 495, 0, 0, 0, 643, 621, 662, 770,
	622, 620, 258, 635, 567, 799, 694, 231, 153, 805,
	692, 592, 758, 639, 787, 680, 238, 637, 154, 634,
	640, 678, 269, 767, 773, 576, 157, 784, 658, 671,
	191, 127, 298, 745, 344, 483, 731, 297, 241, 337,
	759, 807, 343, 681, 327, 351, 355, 208, 714, 182,
	317, 200, 197, 663, 777, 627, 216, 287, 194, 234,
	697, 751, 659, 187, 762, 738, 789, 316, 334, 159,
	255, 335, 354, 174, 329, 256, 262, 184, 186, 185,
	170, 311, 333, 179, 189, 785, 772, 791, 654, 641,
	646, 642, 670, 808, 226, 217, 792, 790, 348, 143,
	307, 306, 684, 225, 775, 144, 136, 294, 145, 232,
	162, 795, 357, 173, 236, 330, 482, 211, 268, 193,
	747, 277, 669, 156, 290, 252, 253, 251, 254, 214,
	140, 146, 771, 292, 309, 332, 175, 323, 138, 139,
	141, 148, 300, 149, 150, 814, 246, 204, 207, 219,
	229, 746, 296, 324, 349, 740, 171, 164, 326, 342,
	180, 308, 310, 356, 769, 166, 803, 786, 733, 699,
	705, 629, 0, 165, 765, 661, 673, 653, 741, 652,
	213, 757, 340, 341, 192, 358, 570, 818, 167, 636,
	817, 265, 272, 264, 820, 336, 804, 734, 723, 721,
	630, 802, 732, 722, 237, 206, 221, 285, 243, 286,
	222, 260, 259, 261, 244, 725, 0, 163, 0, 321,
	812, 829, 325, 177, 647, 779, 331, 218, 291, 178,
	212, 205, 284, 263, 172, 224, 319, 235, 242, 761,
	826, 276, 299, 181, 346, 318, 201, 581, 593, 587,
	589, 588, 585, 586, 584, 583, 582, 595, 568, 569,
	572, 573, 574, 716, 806, 631, 577, 782, 590, 591,
	754, 824, 566, 188, 515, 607, 608, 609, 516, 610,
	611, 517, 518, 612, 613, 614, 615, 519, 616, 617,
	618, 596, 597, 598, 599, 600, 601, 602, 603, 606,
	604, 605, 712, 281, 575, 158, 168, 239, 825, 293,
	210, 619, 626, 645, 648, 649, 650, 651, 655, 660,
	0, 666, 672, 674, 675, 683, 688, 689, 690, 691,
	698, 700, 701, 702, 703, 704, 707, 708, 710, 717,
	718, 724, 729, 730, 736, 737, 0, 760, 763, 580,
	774, 776, 780, 781, 788, 793, 794, 819, 823, 828,
	347, 196, 715, 735, 766, 169, 176, 183, 195, 203,
	209, 220, 223, 227, 228, 230, 233, 245, 247, 248,
	249, 250, 266, 267, 270, 271, 274, 275, 278, 279,
	280, 282, 283, 289, 147, 295, 301, 302, 303, 304,
	305, 312, 313, 314, 315, 322, 338, 339, 352, 353,
	798, 695, 155, 0, 0, 161, 0, 0, 0, 0,
	0, 682, 160, 797, 821, 742, 756, 809, 0, 328,
	571, 813, 656, 679, 822, 685, 687, 750, 632, 727,
	273, 676, 633, 0, 0, 624, 480, 625, 657, 199,
	477, 783, 728, 811, 713, 743, 753, 198, 190, 720,
	719, 800, 668, 667, 748, 796, 810, 0, 0, 579,
	240, 0, 0, 350, 320, 257, 0, 0, 711, 0,
	564, 565, 696, 752, 644, 739, 815, 677, 744, 816,
	77, 0, 1121, 0, 478, 503, 502, 505, 506, 507,
	508, 0, 0, 137, 504, 0, 509, 510, 511, 0,
	706, 749, 827, 623, 475, 494, 628, 578, 0, 801,
	664, 665, 202, 0, 0, 0, 0, 0, 0, 0,
	709, 726, 768, 693, 345, 755, 764, 778, 686, 288,
	215, 0, 0, 0, 0, 491, 492, 0, 0, 0,
	0, 594, 0, 493, 0, 638, 489, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 495,
	0, 0, 0, 643, 621, 662, 770, 622, 620, 258,
	635, 567, 799, 694, 231, 153, 805, 692, 592, 758,
	639, 787, 680, 238, 637, 154, 634, 640, 678, 269,
	767, 773, 576, 157, 784, 658, 671, 191, 0, 298,
	745, 344, 483, 731, 297, 241, 337, 759, 807, 343,
	681, 327, 351, 355, 208, 714, 182, 317, 200, 197,
	663, 777, 627, 216, 287, 194, 234, 697, 751, 659,
	187, 762, 738, 789, 316, 334, 159, 255, 335, 354,
	174, 329, 256, 262, 184, 186, 185, 170, 311, 333,
	179, 189, 785, 772, 791, 654, 641, 646, 642, 670,
	808, 226, 217, 792, 790, 348, 143, 307, 306, 684,
	225, 775, 144, 136, 294, 145, 232, 162, 795, 357,
	173, 236, 330, 482, 211, 268, 193, 747, 277, 669,
	156, 290, 252, 253, 251, 254, 214, 140, 146, 771,
	292, 309, 332, 175, 323, 138, 139, 141, 148, 300,
	149, 150, 814, 246, 204, 207, 219, 229, 746, 296,
	324, 349, 740, 171, 164, 326, 342, 180, 308, 310,
	356, 769, 166, 803, 786, 733, 699, 705, 629, 0,
	165, 765, 661, 673, 653, 741, 652, 213, 757, 340,
	341, 192, 358, 570, 818, 167, 636, 817, 265, 272,
	264, 820, 336, 804, 734, 723, 721, 630, 802, 732,
	722, 237, 206, 221, 285, 243, 286, 222, 260, 259,
	261, 244, 725, 0, 163, 0, 321, 812, 829, 325,
	177, 647, 779, 331, 218, 291, 178, 212, 205, 284,
	263, 172, 224, 319, 235, 242, 761, 826, 276, 299,
	181, 346, 318, 201, 581, 593, 587, 589, 588, 585,
	586, 584, 583, 582, 595, 568, 569, 572, 573, 574,
	716, 806, 631, 577, 782, 590, 591, 754, 824, 566,
	188, 515, 607, 608, 609, 516, 610, 611, 517, 518,
	612, 613, 614, 615, 519, 616, 617, 618, 596, 597,
	598, 599, 600, 601, 602, 603, 606, 604, 605, 712,
	281, 575, 158, 168, 239, 825, 293, 210, 619, 626,
	645, 648, 649, 650, 651, 655, 660, 0, 666, 672,
	674, 675, 683, 688, 689, 690, 691, 698, 700, 701,
	702, 703, 704, 707, 708, 710, 717, 718, 724, 729,
	730, 736, 737, 0, 760, 763, 580, 774, 776, 780,
	781, 788, 793, 794, 819, 823, 828, 347, 196, 715,
	735, 766, 169, 176, 183, 195, 203, 209, 220, 223,
	227, 228, 230, 233, 245, 247, 248, 249, 250, 266,
	267, 270, 271, 274, 275, 278, 279, 280, 282, 283,
	289, 147, 295, 301, 302, 303, 304, 305, 312, 313,
	314, 315, 322, 338, 339, 352, 353, 798, 695, 155,
	0, 0, 161, 0, 0, 0, 0, 0, 682, 160,
	797, 821, 742, 756, 809, 0, 328, 571, 813, 656,
	679, 822, 685, 687, 750, 632, 727, 273, 676, 633,
	0, 0, 624, 480, 625, 657, 199, 477, 783, 728,
	811, 713, 743, 753, 198, 190, 720, 719, 800, 668,
	667, 748, 796, 810, 0, 0, 579, 240, 0, 0,
	350, 320, 257, 0, 0, 711, 0, 564, 565, 696,
	752, 644, 739, 815, 677, 744, 816, 77, 0, 0,
	0, 478, 503, 502, 505, 506, 507, 508, 0, 0,
	137, 504, 0, 509, 510, 511, 0, 706, 749, 827,
	623, 475, 494, 628, 578, 0, 801, 664, 665, 202,
	0, 0, 0, 0, 0, 0, 0, 709, 726, 768,
	693, 345, 755, 764, 778, 686, 288, 215, 0, 0,
	0, 0, 491, 492, 1866, 0, 0, 0, 594, 0,
	493, 0, 638, 489, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 495, 0, 0, 0,
	643, 621, 662, 770, 622, 620, 258, 635, 567, 799,
	694, 231, 153, 805, 692, 592, 758, 639, 787, 680,
	238, 637, 154, 634, 640, 678, 269, 767, 773, 576,
	157, 784, 658, 671, 191, 0, 298, 745, 344, 483,
	731, 297, 241, 337, 759, 807, 343, 681, 327, 351,
	355, 208, 714, 182, 317, 200, 197, 663, 777, 627,
	216, 287, 194, 234, 697, 751, 659, 187, 762, 738,
	789, 316, 334, 159, 255, 335, 354, 174, 329, 256,
	262, 184, 186, 185, 170, 311, 333, 179, 189, 785,
	772, 791, 654, 641, 646, 642, 670, 808, 226, 217,
	792, 790, 348, 143, 307, 306, 684, 225, 775, 144,
	136, 294, 145, 232, 162, 795, 357, 173, 236, 330,
	482, 211, 268, 193, 747, 277, 669, 156, 290, 252,
	253, 251, 254, 214, 140, 146, 771, 292, 309, 332,
	175, 323, 138, 139, 141, 148, 300, 149, 150, 814,
	246, 204, 207, 219, 229, 746, 296, 324, 349, 740,
	171, 164, 326, 342, 180, 308, 310, 356, 769, 166,
	803, 786, 733, 699, 705, 629, 0, 165, 765, 661,
	673, 653, 741, 652, 213, 757, 340, 341, 192, 358,
	570, 818, 167, 636, 817, 265, 272, 264, 820, 336,
	804, 734, 723, 721, 630, 802, 732, 722, 237, 206,
	221, 285, 243, 286, 222, 260, 259, 261, 244, 725,
	0, 163, 0, 321, 812, 829, 325, 177, 647, 779,
	331, 218, 291, 178, 212, 205, 284, 263, 172, 224,
	319, 235, 242, 761, 826, 276, 299, 181, 346, 318,
	201, 581, 593, 587, 589, 588, 585, 586, 584, 583,
	582, 595, 568, 569, 572, 573, 574, 716, 806, 631,
	577, 782, 590, 591, 754, 824, 566, 188, 515, 607,
	608, 609, 516, 610, 611, 517, 518, 612, 613, 614,
	615, 519, 616, 617, 618, 596, 597, 598, 599, 600,
	601, 602, 603, 606, 604, 605, 712, 281, 575, 158,
	168, 239, 825, 293, 210, 619, 626, 645, 648, 649,
	650, 651, 655, 660, 0, 666, 672, 674, 675, 683,
	688, 689, 690, 691, 698, 700, 701, 702, 703, 704,
	707, 708, 710, 717, 718, 724, 729, 730, 736, 737,
	0, 760, 763, 580, 774, 776, 780, 781, 788, 793,
	794, 819, 823, 828, 347, 196, 715, 735, 766, 169,
	176, 183, 195, 203, 209, 220, 223, 227, 228, 230,
	233, 245, 247, 248, 249, 250, 266, 267, 270, 271,
	274, 275, 278, 279, 280, 282, 283, 289, 147, 295,
	301, 302, 303, 304, 305, 312, 313, 314, 315, 322,
	338, 339, 352, 353, 798, 695, 155, 0, 0, 161,
	0, 0, 0, 0, 0, 682, 160, 797, 821, 742,
	756, 809, 0, 328, 571, 813, 656, 679, 822, 685,
	687, 750, 632, 727, 273, 676, 633, 0, 0, 624,
	480, 625, 657, 199, 477, 783, 728, 811, 713, 743,
	753, 198, 190, 720, 719, 800, 668, 667, 748, 796,
	810, 0, 0, 579, 240, 0, 0, 350, 320, 257,
	0, 0, 711, 0, 564, 565, 696, 752, 644, 739,
	815, 677, 1977, 816, 77, 0, 0, 0, 478, 503,
	502, 505, 506, 507, 508, 0, 0, 137, 504, 0,
	509, 510, 511, 1978, 706, 749, 827, 623, 475, 494,
	628, 578, 0, 801, 664, 665, 202, 0, 0, 0,
	0, 0, 0, 0, 709, 726, 768, 693, 345, 755,
	764, 778, 686, 288, 215, 0, 0, 0, 0, 491,
	492, 0, 0, 0, 0, 594, 0, 493, 0, 638,
	489, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 495, 0, 0, 0, 643, 621, 662,
	770, 622, 620, 258, 635, 567, 799, 694, 231, 153,
	805, 692, 592, 758, 639, 787, 680, 238, 637, 154,
	634, 640, 678, 269, 767, 773, 576, 157, 784, 658,
	671, 191, 0, 298, 745, 344, 483, 731, 297, 241,
	337, 759, 807, 343, 681, 327, 351, 355, 208, 714,
	182, 317, 200, 197, 663, 777, 627, 216, 287, 194,
	234, 697, 751, 659, 187, 762, 738, 789, 316, 334,
	159, 255, 335, 354, 174, 329, 256, 262, 184, 186,
	185, 170, 311, 333, 179, 189, 785, 772, 791, 654,
	641, 646, 642, 670, 808, 226, 217, 792, 790, 348,
	143, 307, 306, 684, 225, 775, 144, 136, 294, 145,
	232, 162, 795, 357, 173, 236, 330, 482, 211, 268,
	193, 747, 277, 669, 156, 290, 252, 253, 251, 254,
	214, 140, 146, 771, 292, 309, 332, 175, 323, 138,
	139, 141, 148, 300, 149, 150, 814, 246, 204, 207,
	219, 229, 746, 296, 324, 349, 740, 171, 164, 326,
	342, 180, 308, 310, 356, 769, 166, 803, 786, 733,
	699, 705, 629, 0, 165, 765, 661, 673, 653, 741,
	652, 213, 757, 340, 341, 192, 358, 570, 818, 167,
	636, 817, 265, 272, 264, 820, 336, 804, 734, 723,
	721, 630, 802, 732, 722, 237, 206, 221, 285, 243,
	286, 222, 260, 259, 261, 244, 725, 0, 163, 0,
	321, 812, 829, 325, 177, 647, 779, 331, 218, 291,
	178, 212, 205, 284, 263, 172, 224, 319, 235, 242,
	761, 826, 276, 299, 181, 346, 318, 201, 581, 593,
	587, 589, 588, 585, 586, 584, 583, 582, 595, 568,
	569, 572, 573, 574, 716, 806, 631, 577, 782, 590,
	591, 754, 824, 566, 188, 515, 607, 608, 609, 516,
	610, 611, 517, 518, 612, 613, 614, 615, 519, 616,
	617, 618, 596, 597, 598, 599, 600, 601, 602, 603,
	606, 604, 605, 712, 281, 575, 158, 168, 239, 825,
	293, 210, 619, 626, 645, 648, 649, 650, 651, 655,
	660, 0, 666, 672, 674, 675, 683, 688, 689, 690,
	691, 698, 700, 701, 702, 703, 704, 707, 708, 710,
	717, 718, 724, 729, 730, 736, 737, 0, 760, 763,
	580, 774, 776, 780, 781, 788, 793, 794, 819, 823,
	828, 347, 196, 715, 735, 766, 169, 176, 183, 195,
	203, 209, 220, 223, 227, 228, 230, 233, 245, 247,
	248, 249, 250, 266, 267, 270, 271, 274, 275, 278,
	279, 280, 282, 283, 289, 147, 295, 301, 302, 303,
	304, 305, 312, 313, 314, 315, 322, 338, 339, 352,
	353, 798, 695, 155, 0, 0, 161, 0, 0, 0,
	0, 0, 682, 160, 797, 821, 742, 756, 809, 0,
	328, 571, 813, 656, 679, 822, 685, 687, 750, 632,
	727, 273, 676, 633, 0, 0, 624, 870, 625, 657,
	199, 868, 783, 728, 811, 713, 743, 753, 198, 190,
	720, 719, 800, 668, 667, 748, 796, 810, 0, 0,
	579, 240, 0, 0, 350, 320, 257, 0, 0, 711,
	0, 564, 565, 696, 752, 644, 739, 815, 677, 744,
	816, 77, 0, 1121, 0, 478, 503, 502, 505, 506,
	507, 508, 0, 0, 137, 504, 0, 509, 510, 511,
	0, 706, 749, 827, 623, 889, 494, 628, 578, 0,
	801, 664, 665, 202, 0, 0, 0, 0, 0, 0,
	0, 709, 726, 768, 693, 345, 755, 764, 778, 686,
	288, 215, 0, 0, 0, 0, 491, 492, 0, 0,
	0, 0, 594, 0, 493, 0, 638, 489, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	495, 0, 0, 0, 643, 621, 662, 770, 622, 620,
	258, 635, 567, 799, 694, 231, 153, 805, 692, 592,
	758, 639, 787, 680, 238, 637, 154, 634, 640, 678,
	269, 767, 773, 576, 157, 784, 658, 671, 191, 0,
	298, 745, 344, 483, 731, 297, 241, 337, 759, 807,
	343, 681, 327, 351, 355, 208, 714, 182, 317, 200,
	197, 663, 777, 627, 216, 287, 194, 234, 697, 751,
	659, 187, 762, 738, 789, 316, 334, 159, 255, 335,
	354, 174, 329, 256, 262, 184, 186, 185, 170, 311,
	333, 179, 189, 785, 772, 791, 654, 641, 646, 642,
	670, 808, 226, 217, 792, 790, 348, 143, 307, 306,
	684, 225, 775, 144, 136, 294, 145, 232, 162, 795,
	357, 173, 236, 330, 482, 211, 268, 193, 747, 277,
	669, 156, 290, 252, 253, 251, 254, 214, 140, 146,
	771, 292, 309, 332, 175, 323, 138, 139, 141, 148,
	300, 149, 150, 814, 246, 204, 207, 219, 229, 746,
	296, 324, 349, 740, 171, 164, 326, 342, 180, 308,
	310, 356, 769, 166, 803, 786, 733, 699, 705, 629,
	0, 165, 765, 661, 673, 653, 741, 652, 213, 757,
	340, 341, 192, 358, 570, 818, 167, 636, 817, 265,
	272, 264, 820, 336, 804, 734, 723, 721, 630, 802,
	732, 722, 237, 206, 221, 285, 243, 286, 222, 260,
	259, 261, 244, 725, 0, 163, 0, 321, 812, 829,
	325, 177, 647, 779, 331, 218, 291, 178, 212, 205,
	284, 263, 172, 224, 319, 235, 242, 761, 826, 276,
	299, 181, 346, 318, 201, 581, 593, 587, 589, 588,
	585, 586, 584, 583, 582, 595, 568, 569, 572, 573,
	574, 716, 806, 631, 577, 782, 590, 591, 754, 824,
	566, 188, 515, 607, 608, 609, 516, 610, 611, 517,
	518, 612, 613, 614, 615, 519, 616, 617, 618, 596,
	597, 598, 599, 600, 601, 602, 603, 606, 604, 605,
	712, 281, 575, 158, 168, 239, 825, 293, 210, 619,
	626, 645, 648, 649, 650, 651, 655, 660, 0, 666,
	672, 674, 675, 683, 688, 689, 690, 691, 698, 700,
	701, 702, 703, 704, 707, 708, 710, 717, 718, 724,
	729, 730, 736, 737, 0, 760, 763, 580, 774, 776,
	780, 781, 788, 793, 794, 819, 823, 828, 347, 196,
	715, 735, 766, 169, 176, 183, 195, 203, 209, 220,
	223, 227, 228, 230, 233, 245, 247, 248, 249, 250,
	266, 267, 270, 271, 274, 275, 278, 279, 280, 282,
	283, 289, 147, 295, 301, 302, 303, 304, 305, 312,
	313, 314, 315, 322, 338, 339, 352, 353, 798, 695,
	155, 0, 0, 161, 0, 0, 0, 0, 0, 682,
	160, 797, 821, 742, 756, 809, 0, 328, 571, 813,
	656, 679, 822, 685, 687, 750, 632, 727, 273, 676,
	633, 0, 0, 624, 480, 625, 657, 199, 477, 783,
	728, 811, 713, 743, 753, 198, 190, 720, 719, 800,
	668, 667, 748, 796, 810, 0, 0, 579, 240, 0,
	0, 350, 320, 257, 0, 0, 711, 0, 564, 565,
	696, 752, 644, 739, 815, 677, 744, 816, 77, 0,
	0, 0, 478, 503, 1898, 505, 506, 507, 508, 0,
	0, 137, 504, 0, 509, 510, 511, 0, 706, 749,
	827, 623, 475, 494, 628, 578, 0, 801, 664, 665,
	202, 0, 0, 0, 0, 0, 0, 0, 709, 726,
	768, 693, 345, 755, 764, 778, 686, 288, 215, 0,
	0, 0, 0, 491, 492, 1866, 0, 0, 0, 594,
	0, 493, 0, 638, 489, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 495, 0, 0,
	0, 643, 621, 662, 770, 622, 620, 258, 635, 567,
	799, 694, 231, 153, 805, 692, 592, 758, 639, 787,
	680, 238, 637, 154, 634, 640, 678, 269, 767, 773,
	576, 157, 784, 658, 671, 191, 0, 298, 745, 344,
	483, 731, 297, 241, 337, 759, 807, 343, 681, 327,
	351, 355, 208, 714, 182, 317, 200, 197, 663, 777,
	627, 216, 287, 194, 234, 697, 751, 659, 187, 762,
	738, 789, 316, 334, 159, 255, 335, 354, 174, 329,
	256, 262, 184, 186, 185, 170, 311, 333, 179, 189,
	785, 772, 791, 654, 641, 646, 642, 670, 808, 226,
	217, 792, 790, 348, 143, 307, 306, 684, 225, 775,
	144, 136, 294, 145, 232, 162, 795, 357, 173, 236,
	330, 482, 211, 268, 193, 747, 277, 669, 156, 290,
	252, 253, 251, 254, 214, 140, 146, 771, 292, 309,
	332, 175, 323, 138, 139, 141, 148, 300, 149, 150,
	814, 246, 204, 207, 219, 229, 746, 296, 324, 349,
	740, 171, 164, 326, 342, 180, 308, 310, 356, 769,
	166, 803, 786, 733, 699, 705, 629, 0, 165, 765,
	661, 673, 653, 741, 652, 213, 757, 340, 341, 192,
	358, 570, 818, 167, 636, 817, 265, 272, 264, 820,
	336, 804, 734, 723, 721, 630, 802, 732, 722, 237,
	206, 221, 285, 243, 286, 222, 260, 259, 261, 244,
	725, 0, 163, 0, 321, 812, 829, 325, 177, 647,
	779, 331, 218, 291, 178, 212, 205, 284, 263, 172,
	224, 319, 235, 242, 761, 826, 276, 299, 181, 346,
	318, 201, 581, 593, 587, 589, 588, 585, 586, 584,
	583, 582, 595, 568, 569, 572, 573, 574, 716, 806,
	631, 577, 782, 590, 591, 754, 824, 566, 188, 515,
	607, 608, 609, 516, 610, 611, 517, 518, 612, 613,
	614, 615, 519, 616, 617, 618, 596, 597, 598, 599,
	600, 601, 602, 603, 606, 604, 605, 712, 281, 575,
	158, 168, 239, 825, 293, 210, 619, 626, 645, 648,
	649, 650, 651, 655, 660, 0, 666, 672, 674, 675,
	683, 688, 689, 690, 691, 698, 700, 701, 702, 703,
	704, 707, 708, 710, 717, 718, 724, 729, 730, 736,
	737, 0, 760, 763, 580, 774, 776, 780, 781, 788,
	793, 794, 819, 823, 828, 347, 196, 715, 735, 766,
	169, 176, 183, 195, 203, 209, 220, 223, 227, 228,
	230, 233, 245, 247, 248, 249, 250, 266, 267, 270,
	271, 274, 275, 278, 279, 280, 282, 283, 289, 147,
	295, 301, 302, 303, 304, 305, 312, 313, 314, 315,
	322, 338, 339, 352, 353, 798, 695, 155, 0, 0,
	161, 0, 0, 0, 0, 0, 682, 160, 797, 821,
	742, 756, 809, 0, 328, 571, 813, 656, 679, 822,
	685, 687, 750, 632, 727, 273, 676, 633, 0, 0,
	624, 480, 625, 657, 199, 477, 783, 728, 811, 713,
	743, 753, 198, 190, 720, 719, 800, 668, 667, 748,
	796, 810, 0, 0, 579, 240, 0, 0, 350, 320,
	257, 0, 0, 711, 0, 564, 565, 696, 752, 644,
	739, 815, 677, 744, 816, 77, 0, 0, 0, 478,
	503, 1895, 505, 506, 507, 508, 0, 0, 137, 504,
	0, 509, 510, 511, 0, 706, 749, 827, 623, 475,
	494, 628, 578, 0, 801, 664, 665, 202, 0, 0,
	0, 0, 0, 0, 0, 709, 726, 768, 693, 345,
	755, 764, 778, 686, 288, 215, 0, 0, 0, 0,
	491, 492, 1866, 0, 0, 0, 594, 0, 493, 0,
	638, 489, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 495, 0, 0, 0, 643, 621,
	662, 770, 622, 620, 258, 635, 567, 799, 694, 231,
	153, 805, 692, 592, 758, 639, 787, 680, 238, 637,
	154, 634, 640, 678, 269, 767, 773, 576, 157, 784,
	658, 671, 191, 0, 298, 745, 344, 483, 731, 297,
	241, 337, 759, 807, 343, 681, 327, 351, 355, 208,
	714, 182, 317, 200, 197, 663, 777, 627, 216, 287,
	194, 234, 697, 751, 659, 187, 762, 738, 789, 316,
	334, 159, 255, 335, 354, 174, 329, 256, 262, 184,
	186, 185, 170, 311, 333, 179, 189, 785, 772, 791,
	654, 641, 646, 642, 670, 808, 226, 217, 792, 790,
	348, 143, 307, 306, 684, 225, 775, 144, 136, 294,
	145, 232, 162, 795, 357, 173, 236, 330, 482, 211,
	268, 193, 747, 277, 669, 156, 290, 252, 253, 251,
	254, 214, 140, 146, 771, 292, 309, 332, 175, 323,
	138, 139, 141, 148, 300, 149, 150, 814, 246, 204,
	207, 219, 229, 746, 296, 324, 349, 740, 171, 164,
	326, 342, 180, 308, 310, 356, 769, 166, 803, 786,
	733, 699, 705, 629, 0, 165, 765, 661, 673, 653,
	741, 652, 213, 757, 340, 341, 192, 358, 570, 818,
	167, 636, 817, 265, 272, 264, 820, 336, 804, 734,
	723, 721, 630, 802, 732, 722, 237, 206, 221, 285,
	243, 286, 222, 260, 259, 261, 244, 725, 0, 163,
	0, 321, 812, 829, 325, 177, 647, 779, 331, 218,
	291, 178, 212, 205, 284, 263, 172, 224, 319, 235,
	242, 761, 826, 276, 299, 181, 346, 318, 201, 581,
	593, 587, 589, 588, 585, 586, 584, 583, 582, 595,
	568, 569, 572, 573, 574, 716, 806, 631, 577, 782,
	590, 591, 754, 824, 566, 188, 515, 607, 608, 609,
	516, 610, 611, 517, 518, 612, 613, 614, 615, 519,
	616, 617, 618, 596, 597, 598, 599, 600, 601, 602,
	603, 606, 604, 605, 712, 281, 575, 158, 168, 239,
	825, 293, 210, 619, 626, 645, 648, 649, 650, 651,
	655, 660, 0, 666, 672, 674, 675, 683, 688, 689,
	690, 691, 698, 700, 701, 702, 703, 704, 707, 708,
	710, 717, 718, 724, 729, 730, 736, 737, 0, 760,
	763, 580, 774, 776, 780, 781, 788, 793, 794, 819,
	823, 828, 347, 196, 715, 735, 766, 169, 176, 183,
	195, 203, 209, 220, 223, 227, 228, 230, 233, 245,
	247, 248, 249, 250, 266, 267, 270, 271, 274, 275,
	278, 279, 280, 282, 283, 289, 147, 295, 301, 302,
	303, 304, 305, 312, 313, 314, 315, 322, 338, 339,
	352, 353, 798, 695, 155, 0, 0, 161, 0, 0,
	0, 0, 0, 682, 160, 797, 821, 742, 756, 809,
	36, 328, 571, 813, 656, 679, 822, 685, 687, 750,
	632, 727, 273, 676, 633, 0, 0, 624, 480, 625,
	657, 199, 477, 783, 728, 811, 713, 743, 753, 198,
	190, 720, 719, 800, 668, 667, 748, 796, 810, 0,
	0, 579, 240, 0, 0, 350, 320, 257, 0, 0,
	711, 0, 564, 565, 696, 752, 644, 739, 815, 677,
	744, 816, 77, 0, 0, 0, 478, 503, 502, 505,
	506, 507, 508, 0, 0, 137, 504, 0, 509, 510,
	511, 0, 706, 749, 827, 623, 475, 494, 628, 578,
	0, 801, 664, 665, 202, 0, 0, 0, 0, 0,
	0, 0, 709, 726, 768, 693, 345, 755, 764, 778,
	686, 288, 215, 0, 0, 0, 0, 491, 492, 0,
	0, 0, 0, 594, 0, 493, 0, 638, 489, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 495, 0, 0, 0, 643, 621, 662, 770, 622,
	620, 258, 635, 567, 799, 694, 231, 153, 805, 692,
	592, 758, 639, 787, 680, 238, 637, 154, 634, 640,
	678, 269, 767, 773, 576, 157, 784, 658, 671, 191,
	0, 298, 745, 344, 483, 731, 297, 241, 337, 759,
	807, 343, 681, 327, 351, 355, 208, 714, 182, 317,
	200, 197, 663, 777, 627, 216, 287, 194, 234, 697,
	751, 659, 187, 762, 738, 789, 316, 334, 159, 255,
	335, 354, 174, 329, 256, 262, 184, 186, 185, 170,
	311, 333, 179, 189, 785, 772, 791, 654, 641, 646,
	642, 670, 808, 226, 217, 792, 790, 348, 143, 307,
	306, 684, 225, 775, 144, 136, 294, 145, 232, 162,
	795, 357, 173, 236, 330, 482, 211, 268, 193, 747,
	277, 669, 156, 290, 252, 253, 251, 254, 214, 140,
	146, 771, 292, 309, 332, 175, 323, 138, 139, 141,
	148, 300, 149, 150, 814, 246, 204, 207, 219, 229,
	746, 296, 324, 349, 740, 171, 164, 326, 342, 180,
	308, 310, 356, 769, 166, 803, 786, 733, 699, 705,
	629, 0, 165, 765, 661, 673, 653, 741, 652, 213,
	757, 340, 341, 192, 358, 570, 818, 167, 636, 817,
	265, 272, 264, 820, 336, 804, 734, 723, 721, 630,
	802, 732, 722, 237, 206, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 725, 0, 163, 0, 321, 812,
	829, 325, 177, 647, 779, 331, 218, 291, 178, 212,
	205, 284, 263, 172, 224, 319, 235, 242, 761, 826,
	276, 299, 181, 346, 318, 201, 581, 593, 587, 589,
	588, 585, 586, 584, 583, 582, 595, 568, 569, 572,
	573, 574, 716, 806, 631, 577, 782, 590, 591, 754,
	824, 566, 188, 515, 607, 608, 609, 516, 610, 611,
	517, 518, 612, 613, 614, 615, 519, 616, 617, 618,
	596, 597, 598, 599, 600, 601, 602, 603, 606, 604,
	605, 712, 281, 575, 158, 168, 239, 1206, 293, 210,
	619, 626, 645, 648, 649, 650, 651, 655, 660, 0,
	666, 672, 674, 675, 683, 688, 689, 690, 691, 698,
	700, 701, 702, 703, 704, 707, 708, 710, 717, 718,
	724, 729, 730, 736, 737, 0, 760, 763, 580, 774,
	776, 780, 781, 788, 793, 794, 819, 823, 828, 347,
	196, 715, 735, 766, 169, 176, 183, 195, 203, 209,
	220, 223, 227, 228, 230, 233, 245, 247, 248, 249,
	250, 266, 267, 270, 271, 274, 275, 278, 279, 280,
	282, 283, 289, 147, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 798,
	695, 155, 0, 0, 161, 0, 0, 0, 0, 0,
	682, 160, 797, 821, 742, 756, 809, 0, 328, 571,
	813, 656, 679, 822, 685, 687, 750, 632, 727, 273,
	676, 633, 0, 0, 624, 480, 625, 657, 199, 477,
	783, 728, 811, 713, 743, 753, 198, 190, 720, 719,
	800, 668, 667, 748, 796, 810, 0, 0, 579, 240,
	0, 0, 350, 320, 257, 0, 0, 711, 0, 564,
	565, 696, 752, 644, 739, 815, 677, 744, 816, 77,
	0, 1730, 0, 478, 503, 502, 505, 506, 507, 508,
	0, 0, 137, 504, 0, 509, 510, 511, 0, 706,
	749, 827, 623, 475, 494, 628, 578, 0, 801, 664,
	665, 202, 0, 0, 0, 0, 0, 0, 0, 709,
	726, 768, 693, 345, 755, 764, 778, 686, 288, 215,
	0, 0, 0, 0, 491, 492, 0, 0, 0, 0,
	594, 0, 493, 0, 638, 489, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 495, 0,
	0, 0, 643, 621, 662, 770, 622, 620, 258, 635,
	567, 799, 694, 231, 153, 805, 692, 592, 758, 639,
	787, 680, 238, 637, 154, 634, 640, 678, 269, 767,
	773, 576, 157, 784, 658, 671, 191, 0, 298, 745,
	344, 483, 731, 297, 241, 337, 759, 807, 343, 681,
	327, 351, 355, 208, 714, 182, 317, 200, 197, 663,
	777, 627, 216, 287, 194, 234, 697, 751, 659, 187,
	762, 738, 789, 316, 334, 159, 255, 335, 354, 174,
	329, 256, 262, 184, 186, 185, 170, 311, 333, 179,
	189, 785, 772, 791, 654, 641, 646, 642, 670, 808,
	226, 217, 792, 790, 348, 143, 307, 306, 684, 225,
	775, 144, 136, 294, 145, 232, 162, 795, 357, 173,
	236, 330, 482, 211, 268, 193, 747, 277, 669, 156,
	290, 252, 253, 251, 254, 214, 140, 146, 771, 292,
	309, 332, 175, 323, 138, 139, 141, 148, 300, 149,
	150, 814, 246, 204, 207, 219, 229, 746, 296, 324,
	349, 740, 171, 164, 326, 342, 180, 308, 310, 356,
	769, 166, 803, 786, 733, 699, 705, 629, 0, 165,
	765, 661, 673, 653, 741, 652, 213, 757, 340, 341,
	192, 358, 570, 818, 167, 636, 817, 265, 272, 264,
	820, 336, 804, 734, 723, 721, 630, 802, 732, 722,
	237, 206, 221, 285, 243, 286, 222, 260, 259, 261,
	244, 725, 0, 163, 0, 321, 812, 829, 325, 177,
	647, 779, 331, 218, 291, 178, 212, 205, 284, 263,
	172, 224, 319, 235, 242, 761, 826, 276, 299, 181,
	346, 318, 201, 581, 593, 587, 589, 588, 585, 586,
	584, 583, 582, 595, 568, 569, 572, 573, 574, 716,
	806, 631, 577, 782, 590, 591, 754, 824, 566, 188,
	515, 607, 608, 609, 516, 610, 611, 517, 518, 612,
	613, 614, 615, 519, 616, 617, 618, 596, 597, 598,
	599, 600, 601, 602, 603, 606, 604, 605, 712, 281,
	575, 158, 168, 239, 825, 293, 210, 619, 626, 645,
	648, 649, 650, 651, 655, 660, 0, 666, 672, 674,
	675, 683, 688, 689, 690, 691, 698, 700, 701, 702,
	703, 704, 707, 708, 710, 717, 718, 724, 729, 730,
	736, 737, 0, 760, 763, 580, 774, 776, 780, 781,
	788, 793, 794, 819, 823, 828, 347, 196, 715, 735,
	766, 169, 176, 183, 195, 203, 209, 220, 223, 227,
	228, 230, 233, 245, 247, 248, 249, 250, 266, 267,
	270, 271, 274, 275, 278, 279, 280, 282, 283, 289,
	147, 295, 301, 302, 303, 304, 305, 312, 313, 314,
	315, 322, 338, 339, 352, 353, 798, 695, 155, 0,
	0, 161, 0, 0, 0, 0, 0, 682, 160, 797,
	821, 742, 756, 809, 0, 328, 571, 813, 656, 679,
	822, 685, 687, 750, 632, 727, 273, 676, 633, 0,
	0, 624, 870, 625, 657, 199, 868, 783, 728, 811,
	713, 743, 753, 198, 190, 720, 719, 800, 668, 667,
	748, 796, 810, 0, 0, 579, 240, 0, 0, 350,
	320, 257, 0, 0, 711, 0, 564, 565, 696, 752,
	644, 739, 815, 677, 744, 816, 77, 0, 0, 0,
	478, 503, 502, 505, 506, 507, 508, 0, 0, 137,
	504, 0, 509, 510, 511, 0, 706, 749, 827, 623,
	889, 494, 628, 578, 0, 801, 664, 665, 202, 0,
	0, 0, 0, 0, 0, 0, 709, 726, 768, 693,
	345, 755, 764, 778, 686, 288, 215, 0, 0, 0,
	0, 491, 492, 0, 0, 0, 0, 594, 0, 493,
	0, 638, 489, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 495, 0, 0, 0, 643,
	621, 662, 770, 622, 620, 258, 635, 567, 799, 694,
	231, 153, 805, 692, 592, 758, 639, 787, 680, 238,
	637, 154, 634, 640, 678, 269, 767, 773, 576, 157,
	784, 658, 671, 191, 0, 298, 745, 344, 483, 731,
	297, 241, 337, 759, 807, 343, 681, 327, 351, 355,
	208, 714, 182, 317, 200, 197, 663, 777, 627, 216,
	287, 194, 234, 697, 751, 659, 187, 762, 738, 789,
	316, 334, 159, 255, 335, 354, 174, 329, 256, 262,
	184, 186, 185, 170, 311, 333, 179, 189, 785, 772,
	791, 654, 641, 646, 642, 670, 808, 226, 217, 792,
	790, 348, 143, 307, 306, 684, 225, 775, 144, 136,
	294, 145, 232, 162, 795, 357, 173, 236, 330, 482,
	211, 268, 193, 747, 277, 669, 156, 290, 252, 253,
	251, 254, 214, 140, 146, 771, 292, 309, 332, 175,
	323, 138, 139, 141, 148, 300, 149, 150, 814, 246,
	204, 207, 219, 229, 746, 296, 324, 349, 740, 171,
	164, 326, 342, 180, 308, 310, 356, 769, 166, 803,
	786, 733, 699, 705, 629, 0, 165, 765, 661, 673,
	653, 741, 652, 213, 757, 340, 341, 192, 358, 570,
	818, 167, 636, 817, 265, 272, 264, 820, 336, 804,
	734, 723, 721, 630, 802, 732, 722, 237, 206, 221,
	285, 243, 286, 222, 260, 259, 261, 244, 725, 0,
	163, 0, 321, 812, 829, 325, 177, 647, 779, 331,
	218, 291, 178, 212, 205, 284, 263, 172, 224, 319,
	235, 242, 761, 826, 276, 299, 181, 346, 318, 201,
	581, 593, 587, 589, 588, 585, 586, 584, 583, 582,
	595, 568, 569, 572, 573, 574, 716, 806, 631, 577,
	782, 590, 591, 754, 824, 566, 188, 515, 607, 608,
	609, 516, 610, 611, 517, 518, 612, 613, 614, 615,
	519, 616, 617, 618, 596, 597, 598, 599, 600, 601,
	602, 603, 606, 604, 605, 712, 281, 575, 158, 168,
	239, 825, 293, 210, 619, 626, 645, 648, 649, 650,
	651, 655, 660, 0, 666, 672, 674, 675, 683, 688,
	689, 690, 691, 698, 700, 701, 702, 703, 704, 707,
	708, 710, 717, 718, 724, 729, 730, 736, 737, 0,
	760, 763, 580, 774, 776, 780, 781, 788, 793, 794,
	819, 823, 828, 347, 196, 715, 735, 766, 169, 176,
	183, 195, 203, 209, 220, 223, 227, 228, 230, 233,
	245, 247, 248, 249, 250, 266, 267, 270, 271, 274,
	275, 278, 279, 280, 282, 283, 289, 147, 295, 301,
	302, 303, 304, 305, 312, 313, 314, 315, 322, 338,
	339, 352, 353, 798, 695, 155, 0, 0, 161, 0,
	0, 0, 0, 0, 682, 160, 797, 821, 742, 756,
	809, 0, 328, 571, 813, 656, 679, 822, 685, 687,
	750, 632, 727, 273, 676, 633, 0, 0, 624, 480,
	625, 657, 199, 477, 783, 728, 811, 713, 743, 753,
	198, 190, 720, 719, 800, 668, 667, 748, 796, 810,
	0, 0, 579, 240, 0, 0, 350, 320, 257, 0,
	0, 711, 0, 564, 565, 696, 752, 644, 739, 815,
	677, 744, 816, 77, 0, 0, 0, 478, 503, 502,
	505, 506, 507, 508, 0, 0, 137, 504, 0, 509,
	510, 511, 0, 706, 749, 827, 623, 475, 494, 628,
	578, 0, 801, 664, 665, 202, 0, 0, 0, 0,
	0, 0, 0, 709, 726, 768, 693, 345, 755, 764,
	778, 686, 288, 215, 0, 0, 0, 0, 491, 492,
	0, 0, 0, 0, 594, 0, 493, 0, 638, 489,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 495, 0, 0, 0, 643, 621, 662, 770,
	622, 620, 258, 635, 567, 799, 694, 231, 153, 805,
	692, 592, 758, 639, 787, 680, 238, 637, 154, 634,
	640, 678, 269, 767, 773, 576, 157, 784, 658, 671,
	191, 0, 298, 745, 344, 483, 731, 297, 241, 337,
	759, 807, 343, 681, 327, 351, 355, 208, 714, 182,
	317, 200, 197, 663, 777, 627, 216, 287, 194, 234,
	697, 751, 659, 187, 762, 738, 789, 316, 334, 159,
	255, 335, 354, 174, 329, 256, 262, 184, 186, 185,
	170, 311, 333, 179, 189, 785, 772, 791, 654, 641,
	646, 642, 670, 808, 226, 217, 792, 790, 348, 143,
	307, 306, 684, 225, 775, 144, 136, 294, 145, 232,
	162, 795, 357, 173, 236, 330, 482, 211, 268, 193,
	747, 277, 669, 156, 290, 252, 253, 251, 254, 214,
	140, 146, 771, 292, 309, 332, 175, 323, 138, 139,
	141, 148, 300, 149, 150, 814, 246, 204, 207, 219,
	229, 746, 296, 324, 349, 740, 171, 164, 326, 342,
	180, 308, 310, 356, 769, 166, 803, 786, 733, 699,
	705, 629, 0, 165, 765, 661, 673, 653, 741, 652,
	213, 757, 340, 341, 192, 358, 570, 818, 167, 636,
	817, 265, 272, 264, 820, 336, 804, 734, 723, 721,
	630, 802, 732, 722, 237, 206, 221, 285, 243, 286,
	222, 260, 259, 261, 244, 725, 0, 163, 0, 321,
	812, 829, 325, 177, 647, 779, 331, 218, 291, 178,
	212, 205, 284, 263, 172, 224, 319, 235, 242, 761,
	826, 276, 299, 181, 346, 318, 201, 581, 593, 587,
	589, 588, 585, 586, 584, 583, 582, 595, 568, 569,
	572, 573, 574, 716, 806, 631, 577, 782, 590, 591,
	754, 824, 566, 188, 515, 607, 608, 609, 516, 610,
	611, 517, 518, 612, 613, 614, 615, 519, 616, 617,
	618, 596, 597, 598, 599, 600, 601, 602, 603, 606,
	604, 605, 712, 281, 575, 158, 168, 239, 825, 293,
	210, 619, 626, 645, 648, 649, 650, 651, 655, 660,
	0, 666, 672, 674, 675, 683, 688, 689, 690, 691,
	698, 700, 701, 702, 703, 704, 707, 708, 710, 717,
	718, 724, 729, 730, 736, 737, 0, 760, 763, 580,
	774, 776, 780, 781, 788, 793, 794, 819, 823, 828,
	347, 196, 715, 735, 766, 169, 176, 183, 195, 203,
	209, 220, 223, 227, 228, 230, 233, 245, 247, 248,
	249, 250, 266, 267, 270, 271, 274, 275, 278, 279,
	280, 282, 283, 289, 147, 295, 301, 302, 303, 304,
	305, 312, 313, 314, 315, 322, 338, 339, 352, 353,
	798, 695, 155, 0, 0, 161, 0, 0, 0, 0,
	0, 682, 160, 797, 821, 742, 756, 809, 0, 328,
	571, 813, 656, 679, 822, 685, 687, 750, 632, 727,
	273, 676, 633, 0, 0, 624, 870, 625, 657, 199,
	868, 783, 728, 811, 713, 743, 753, 198, 190, 720,
	719, 800, 668, 667, 748, 796, 810, 0, 0, 579,
	240, 0, 0, 350, 320, 257, 0, 0, 711, 0,
	564, 565, 696, 752, 644, 739, 815, 677, 744, 816,
	77, 0, 0, 0, 478, 503, 502, 505, 506, 507,
	508, 0, 0, 137, 504, 0, 509, 510, 511, 0,
	706, 749, 827, 623, 889, 494, 628, 578, 0, 801,
	664, 665, 202, 0, 0, 0, 0, 0, 0, 0,
	709, 726, 768, 693, 345, 755, 764, 778, 686, 288,
	215, 0, 0, 0, 0, 491, 492, 0, 0, 0,
	0, 594, 0, 493, 0, 638, 489, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 495,
	0, 0, 0, 643, 621, 662, 770, 622, 620, 258,
	635, 567, 799, 694, 231, 153, 805, 692, 592, 758,
	639, 787, 680, 238, 637, 154, 634, 640, 678, 269,
	767, 773, 576, 157, 784, 658, 671, 191, 0, 298,
	745, 344, 483, 3402, 297, 241, 337, 759, 807, 343,
	681, 327, 351, 355, 208, 714, 182, 317, 200, 197,
	663, 777, 627, 216, 287, 194, 234, 697, 751, 659,
	187, 762, 738, 789, 316, 334, 159, 255, 335, 354,
	174, 329, 256, 262, 184, 186, 185, 170, 311, 333,
	179, 189, 785, 772, 791, 654, 641, 646, 642, 670,
	808, 226, 217, 792, 790, 348, 143, 307, 306, 684,
	225, 775, 144, 136, 294, 145, 232, 162, 795, 357,
	173, 236, 330, 482, 211, 268, 193, 747, 277, 669,
	156, 290, 252, 253, 251, 254, 214, 140, 146, 771,
	292, 309, 332, 175, 323, 138, 139, 141, 148, 300,
	149, 150, 814, 246, 204, 207, 219, 229, 746, 296,
	324, 349, 740, 171, 164, 326, 342, 180, 308, 310,
	356, 769, 166, 803, 786, 733, 699, 705, 629, 0,
	165, 765, 661, 673, 653, 741, 652, 213, 757, 340,
	341, 192, 358, 570, 818, 167, 636, 817, 265, 272,
	264, 820, 336, 804, 734, 723, 721, 630, 802, 732,
	722, 237, 206, 221, 285, 243, 286, 222, 260, 259,
	261, 244, 725, 0, 163, 0, 321, 812, 829, 325,
	177, 647, 779, 331, 218, 291, 178, 212, 205, 284,
	263, 172, 224, 319, 235, 242, 761, 826, 276, 299,
	181, 346, 318, 201, 581, 593, 587, 589, 588, 585,
	586, 584, 583, 582, 595, 568, 569, 572, 573, 574,
	716, 806, 631, 577, 782, 590, 591, 754, 824, 566,
	188, 515, 607, 608, 609, 516, 610, 611, 517, 518,
	612, 613, 614, 615, 519, 616, 617, 618, 596, 597,
	598, 599, 600, 601, 602, 603, 606, 604, 605, 712,
	281, 575, 158, 168, 239, 825, 293, 210, 619, 626,
	645, 648, 649, 650, 651, 655, 660, 0, 666, 672,
	674, 675, 683, 688, 689, 690, 691, 698, 700, 701,
	702, 703, 704, 707, 708, 710, 717, 718, 724, 729,
	730, 736, 737, 0, 760, 763, 580, 774, 776, 780,
	781, 788, 793, 794, 819, 823, 828, 347, 196, 715,
	735, 766, 169, 176, 183, 195, 203, 209, 220, 223,
	227, 228, 230, 233, 245, 247, 248, 249, 250, 266,
	267, 270, 271, 274, 275, 278, 279, 280, 282, 283,
	289, 147, 295, 301, 302, 303, 304, 305, 312, 313,
	314, 315, 322, 338, 339, 352, 353, 798, 695, 155,
	0, 0, 161, 0, 0, 0, 0, 0, 682, 160,
	797, 821, 742, 756, 809, 0, 328, 571, 813, 656,
	679, 822, 685, 687, 750, 632, 727, 273, 676, 633,
	0, 0, 624, 870, 625, 657, 199, 868, 783, 728,
	811, 713, 743, 753, 198, 190, 720, 719, 800, 668,
	667, 748, 796, 810, 0, 0, 579, 240, 0, 0,
	350, 320, 257, 0, 0, 711, 0, 564, 565, 696,
	752, 644, 739, 815, 677, 744, 816, 77, 0, 0,
	0, 478, 503, 502, 505, 506, 507, 508, 0, 0,
	137, 504, 0, 509, 510, 511, 0, 706, 749, 827,
	623, 889, 494, 628, 578, 0, 801, 664, 665, 202,
	0, 0, 0, 0, 0, 0, 0, 709, 726, 768,
	693, 345, 755, 764, 778, 686, 288, 215, 0, 0,
	0, 0, 491, 492, 0, 0, 0, 0, 594, 0,
	493, 0, 638, 489, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 495, 0, 0, 0,
	643, 621, 662, 770, 622, 620, 258, 635, 567, 799,
	694, 231, 153, 805, 692, 592, 758, 639, 787, 680,
	238, 637, 154, 634, 640, 678, 269, 767, 773, 576,
	157, 784, 658, 671, 191, 0, 298, 745, 344, 483,
	731, 297, 241, 337, 759, 807, 343, 681, 327, 351,
	355, 208, 714, 182, 317, 200, 197, 663, 777, 627,
	216, 287, 194, 234, 697, 751, 659, 187, 762, 738,
	789, 316, 334, 159, 255, 335, 354, 174, 329, 256,
	262, 184, 186, 185, 170, 311, 333, 179, 189, 785,
	772, 791, 654, 641, 646, 642, 670, 808, 226, 217,
	792, 790, 348, 143, 307, 306, 684, 225, 775, 144,
	136, 294, 145, 232, 162, 795, 357, 173, 236, 330,
	482, 211, 268, 193, 747, 277, 669, 156, 290, 252,
	253, 251, 254, 214, 140, 146, 771, 292, 309, 332,
	175, 323, 138, 139, 141, 148, 300, 149, 150, 814,
	246, 204, 207, 219, 229, 746, 296, 324, 349, 740,
	171, 164, 326, 342, 180, 308, 310, 356, 769, 166,
	803, 786, 733, 699, 705, 629, 0, 165, 765, 661,
	673, 653, 741, 652, 213, 757, 340, 341, 192, 358,
	570, 818, 167, 636, 817, 265, 272, 264, 820, 336,
	804, 734, 723, 721, 630, 802, 732, 722, 237, 206,
	221, 285, 243, 286, 222, 260, 259, 261, 244, 725,
	0, 163, 0, 321, 812, 829, 325, 177, 647, 779,
	331, 218, 291, 178, 212, 205, 284, 263, 172, 224,
	319, 235, 242, 761, 826, 276, 299, 181, 346, 318,
	201, 581, 593, 587, 589, 588, 585, 586, 584, 583,
	582, 595, 568, 569, 572, 573, 574, 1901, 1902, 1903,
	577, 782, 590, 591, 754, 824, 566, 188, 515, 607,
	608, 609, 516, 610, 611, 517, 518, 612, 613, 614,
	615, 519, 616, 617, 618, 596, 597, 598, 599, 600,
	601, 602, 603, 606, 604, 605, 712, 281, 575, 158,
	168, 239, 825, 293, 210, 619, 626, 645, 648, 649,
	650, 651, 655, 660, 0, 666, 672, 674, 675, 683,
	688, 689, 690, 691, 698, 700, 701, 702, 703, 704,
	707, 708, 710, 717, 718, 724, 729, 730, 736, 737,
	0, 760, 763, 580, 774, 776, 780, 781, 788, 793,
	794, 819, 823, 828, 347, 196, 715, 735, 766, 169,
	176, 183, 195, 203, 209, 220, 223, 227, 228, 230,
	233, 245, 247, 248, 249, 250, 266, 267, 270, 271,
	274, 275, 278, 279, 280, 282, 283, 289, 147, 295,
	301, 302, 303, 304, 305, 312, 313, 314, 315, 322,
	338, 339, 352, 353, 798, 695, 155, 0, 0, 161,
	0, 0, 0, 0, 0, 682, 160, 797, 821, 742,
	756, 1661, 2778, 328, 1513, 1665, 1463, 1492, 1682, 1498,
	1501, 1584, 1428, 1551, 273, 1489, 1429, 1411, 1468, 1415,
	1480, 1416, 1465, 199, 1461, 1625, 1554, 1663, 1533, 1577,
	1587, 198, 190, 1543, 1542, 1651, 1478, 1477, 1582, 1639,
	1662, 1532, 0, 1672, 240, 1636, 933, 350, 320, 257,
	936, 935, 1528, 1645, 1549, 1614, 1511, 1586, 1445, 1569,
	1667, 1490, 1578, 1668, 77, 0, 1121, 0, 929, 0,
	0, 0, 0, 0, 0, 0, 0, 137, 0, 0,
	1574, 1659, 1483, 934, 1523, 1583, 1687, 1414, 1570, 0,
	1420, 1431, 1681, 1652, 1474, 1475, 202, 0, 0, 0,
	0, 0, 0, 0, 1526, 1550, 1604, 1508, 345, 1589,
	1599, 1617, 1500, 288, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 1470, 0, 1567, 0, 0, 0, 1436,
	1422, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1522, 0, 0, 0, 1444, 1412, 1472,
	1606, 1413, 1410, 258, 1432, 1619, 1650, 1509, 231, 153,
	1656, 1507, 1506, 1593, 1437, 1629, 1493, 238, 1435, 154,
	1430, 1438, 1491, 269, 1603, 1611, 142, 157, 1626, 1466,
	1482, 191, 1792, 298, 1579, 344, 932, 1559, 297, 241,
	337, 1594, 1658, 343, 1494, 327, 351, 355, 208, 1534,
	182, 317, 200, 197, 1473, 1616, 1419, 216, 287, 194,
	234, 1512, 1585, 1467, 187, 1597, 1568, 1631, 316, 334,
	159, 255, 335, 354, 174, 329, 256, 262, 184, 186,
	185, 170, 311, 333, 179, 189, 1627, 1610, 1633, 1460,
	1439, 1451, 1440, 1481, 1660, 226, 217, 1634, 1632, 348,
	143, 307, 306, 1497, 225, 1613, 144, 136, 294, 145,
	232, 162, 1638, 357, 173, 236, 330, 931, 211, 268,
	193, 1581, 277, 1479, 156, 290, 252, 253, 251, 254,
	214, 140, 146, 1609, 292, 309, 332, 175, 323, 138,
	139, 141, 148, 300, 149, 150, 1666, 246, 204, 207,
	219, 229, 1580, 296, 324, 349, 1571, 171, 164, 326,
	342, 180, 308, 310, 356, 1605, 166, 1654, 1628, 1561,
	1515, 1521, 1421, 0, 165, 1601, 1471, 1486, 1459, 1575,
	1458, 213, 1592, 340, 341, 192, 358, 1433, 1674, 167,
	1434, 1673, 265, 272, 264, 1677, 336, 1655, 1562, 1546,
	1544, 1426, 1653, 1560, 1545, 237, 206, 221, 285, 243,
	286, 222, 260, 259, 261, 244, 1548, 0, 163, 0,
	321, 1664, 1689, 325, 177, 1453, 1620, 331, 218, 291,
	178, 212, 205, 284, 263, 172, 224, 319, 235, 242,
	1596, 1686, 276, 299, 181, 346, 318, 201, 1449, 1452,
	1447, 1450, 1448, 1552, 1553, 1669, 1670, 1671, 1608, 1441,
	0, 1646, 1647, 0, 1539, 1657, 1427, 0, 1624, 151,
	152, 1588, 1684, 1499, 188, 1794, 1423, 1424, 1425, 1795,
	1529, 1530, 1796, 1797, 1642, 1641, 1640, 1643, 1798, 1678,
	1676, 1679, 1443, 1464, 1485, 1535, 1536, 1538, 1572, 1573,
	1618, 1591, 1600, 1531, 281, 1557, 158, 168, 239, 2779,
	293, 210, 1409, 1417, 1446, 1454, 1455, 1456, 1457, 1462,
	1469, 0, 1476, 1484, 1487, 1488, 1496, 1502, 1503, 1504,
	1505, 1514, 1516, 1517, 1518, 1519, 1520, 1524, 1525, 1527,
	1540, 1541, 1547, 1555, 1556, 1564, 1566, 0, 1595, 1598,
	1607, 1612, 1615, 1621, 1623, 1630, 1635, 1637, 1675, 1683,
	1688, 347, 196, 1537, 1563, 1602, 169, 176, 183, 195,
	203, 209, 220, 223, 227, 228, 230, 233, 245, 247,
	248, 249, 250, 266, 267, 270, 271, 274, 275, 278,
	279, 280, 282, 283, 289, 147, 295, 301, 302, 303,
	304, 305, 312, 313, 314, 315, 322, 338, 339, 352,
	353, 1649, 1510, 155, 0, 0, 161, 0, 0, 0,
	0, 0, 1495, 160, 1644, 1680, 1576, 1590, 1661, 1622,
	328, 1513, 1665, 1463, 1492, 1682, 1498, 1501, 1584, 1428,
	1551, 273, 1489, 1429, 1411, 1468, 1415, 1480, 1416, 1465,
	199, 1461, 1625, 1554, 1663, 1533, 1577, 1587, 198, 190,
	1543, 1542, 1651, 1478, 1477, 1582, 1639, 1662, 1532, 0,
	1672, 240, 1636, 933, 350, 320, 257, 936, 935, 1528,
	1645, 1549, 1614, 1511, 1586, 1445, 1569, 1667, 1490, 1578,
	1668, 0, 0, 0, 0, 929, 0, 0, 0, 0,
	0, 0, 0, 0, 137, 0, 0, 1574, 1659, 1483,
	934, 1523, 1583, 1687, 1414, 1570, 0, 1420, 1431, 1681,
	1652, 1474, 1475, 202, 0, 0, 0, 0, 0, 0,
	0, 1526, 1550, 1604, 1508, 345, 1589, 1599, 1617, 1500,
	288, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	1470, 0, 1567, 0, 0, 0, 1436, 1422, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1522, 0, 0, 0, 1444, 1412, 1472, 1606, 1413, 1410,
	258, 1432, 1619, 1650, 1509, 231, 153, 1656, 1507, 1506,
	1593, 1437, 1629, 1493, 238, 1435, 154, 1430, 1438, 1491,
	269, 1603, 1611, 142, 157, 1626, 1466, 1482, 191, 1792,
	298, 1579, 344, 932, 1559, 297, 241, 337, 1594, 1658,
	343, 1494, 327, 351, 355, 208, 1534, 182, 317, 200,
	197, 1473, 1616, 1419, 216, 287, 194, 234, 1512, 1585,
	1467, 187, 1597, 1568, 1631, 316, 334, 159, 255, 335,
	354, 174, 329, 256, 262, 184, 186, 185, 170, 311,
	333, 179, 189, 1627, 1610, 1633, 1460, 1439, 1451, 1440,
	1481, 1660, 226, 217, 1634, 1632, 348, 143, 307, 306,
	1497, 225, 1613, 144, 136, 294, 145, 232, 162, 1638,
	357, 173, 236, 330, 931, 211, 268, 193, 1581, 277,
	1479, 156, 290, 252, 253, 251, 254, 214, 140, 146,
	1609, 292, 309, 332, 175, 323, 138, 139, 141, 148,
	300, 149, 150, 1666, 246, 204, 207, 219, 229, 1580,
	296, 324, 349, 1571, 171, 164, 326, 342, 180, 308,
	310, 356, 1605, 166, 1654, 1628, 1561, 1515, 1521, 1421,
	0, 165, 1601, 1471, 1486, 1459, 1575, 1458, 213, 1592,
	340, 341, 192, 358, 1433, 1674, 167, 1434, 1673, 265,
	272, 264, 1677, 336, 1655, 1562, 1546, 1544, 1426, 1653,
	1560, 1545, 237, 206, 221, 285, 243, 286, 222, 260,
	259, 261, 244, 1548, 0, 163, 0, 321, 1664, 1689,
	325, 177, 1453, 1620, 331, 218, 291, 178, 212, 205,
	284, 263, 172, 224, 319, 235, 242, 1596, 1686, 276,
	299, 181, 346, 318, 201, 1449, 1452, 1447, 1450, 1448,
	1552, 1553, 1669, 1670, 1671, 1608, 1441, 0, 1646, 1647,
	0, 1539, 1657, 1427, 0, 1624, 151, 152, 1588, 1684,
	1499, 188, 1794, 1423, 1424, 1425, 1795, 1529, 1530, 1796,
	1797, 1642, 1641, 1640, 1643, 1798, 1678, 1676, 1679, 1443,
	1464, 1485, 1535, 1536, 1538, 1572, 1573, 1618, 1591, 1600,
	1531, 281, 1557, 158, 168, 239, 1685, 293, 210, 1409,
	1417, 1446, 1454, 1455, 1456, 1457, 1462, 1469, 0, 1476,
	1484, 1487, 1488, 1496, 1502, 1503, 1504, 1505, 1514, 1516,
	1517, 1518, 1519, 1520, 1524, 1525, 1527, 1540, 1541, 1547,
	1555, 1556, 1564, 1566, 0, 1595, 1598, 1607, 1612, 1615,
	1621, 1623, 1630, 1635, 1637, 1675, 1683, 1688, 347, 196,
	1537, 1563, 1602, 169, 176, 183, 195, 203, 209, 220,
	223, 227, 228, 230, 233, 245, 247, 248, 249, 250,
	266, 267, 270, 271, 274, 275, 278, 279, 280, 282,
	283, 289, 147, 295, 301, 302, 303, 304, 305, 312,
	313, 314, 315, 322, 338, 339, 352, 353, 1649, 1510,
	155, 0, 0, 161, 0, 0, 0, 0, 0, 1495,
	160, 1644, 1680, 1576, 1590, 1661, 1622, 328, 1513, 1665,
	1463, 1492, 1682, 1498, 1501, 1584, 1428, 1551, 273, 1489,
	1429, 1411, 1468, 1415, 1480, 1416, 1465, 199, 1461, 1625,
	1554, 1663, 1533, 1577, 1587, 198, 190, 1543, 1542, 1651,
	1478, 1477, 1582, 1639, 1662, 1532, 0, 1672, 240, 1636,
	0, 350, 320, 257, 0, 0, 1528, 1645, 1549, 1614,
	1511, 1586, 1445, 1569, 1667, 1490, 1578, 1668, 0, 0,
	0, 0, 478, 0, 0, 0, 0, 0, 0, 0,
	0, 137, 0, 0, 1574, 1659, 1483, 0, 1523, 1583,
	1687, 1414, 1570, 0, 1420, 1431, 1681, 1652, 1474, 1475,
	202, 0, 0, 0, 0, 0, 0, 0, 1526, 1550,
	1604, 1508, 345, 1589, 1599, 1617, 1500, 288, 215, 0,
	0, 0, 0, 0, 0, 2484, 0, 1470, 0, 1567,
	0, 0, 0, 1436, 1422, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1522, 0, 0,
	0, 1444, 1412, 1472, 1606, 1413, 1410, 258, 1432, 1619,
	1650, 1509, 231, 153, 1656, 1507, 1506, 1593, 1437, 1629,
	1493, 238, 1435, 154, 1430, 1438, 1491, 269, 1603, 1611,
	142, 157, 1626, 1466, 1482, 191, 0, 298, 1579, 344,
	1832, 1559, 297, 241, 337, 1594, 1658, 343, 1494, 327,
	351, 355, 208, 1534, 182, 317, 200, 197, 1473, 1616,
	1419, 216, 287, 194, 234, 1512, 1585, 1467, 187, 1597,
	1568, 1631, 316, 334, 159, 255, 335, 354, 174, 329,
	256, 262, 184, 186, 185, 170, 311, 333, 179, 189,
	1627, 1610, 1633, 1460, 1439, 1451, 1440, 1481, 1660, 226,
	217, 1634, 1632, 348, 143, 307, 306, 1497, 225, 1613,
	144, 136, 294, 145, 232, 162, 1638, 357, 173, 236,
	330, 1831, 211, 268, 193, 1581, 277, 1479, 156, 290,
	252, 253, 251, 254, 214, 140, 146, 1609, 292, 309,
	332, 175, 323, 138, 139, 141, 148, 300, 149, 150,
	1666, 246, 204, 207, 219, 229, 1580, 296, 324, 349,
	1571, 171, 164, 326, 342, 180, 308, 310, 356, 1605,
	166, 1654, 1628, 1561, 1515, 1521, 1421, 0, 165, 1601,
	1471, 1486, 1459, 1575, 1458, 213, 1592, 340, 341, 192,
	358, 1433, 1674, 167, 1434, 1673, 265, 272, 264, 1677,
	336, 1655, 1562, 1546, 1544, 1426, 1653, 1560, 1545, 237,
	206, 221, 285, 243, 286, 222, 260, 259, 261, 244,
	1548, 0, 163, 0, 321, 1664, 1689, 325, 177, 1453,
	1620, 331, 218, 291, 178, 212, 205, 284, 263, 172,
	224, 319, 235, 242, 1596, 1686, 276, 299, 181, 346,
	318, 201, 1449, 1452, 1447, 1450, 1448, 1552, 1553, 1669,
	1670, 1671, 1608, 1441, 0, 1646, 1647, 0, 1539, 1657,
	1427, 0, 1624, 151, 152, 1588, 1684, 1499, 188, 1418,
	1423, 1424, 1425, 1442, 1529, 1530, 1558, 1565, 1642, 1641,
	1640, 1643, 1648, 1678, 1676, 1679, 1443, 1464, 1485, 1535,
	1536, 1538, 1572, 1573, 1618, 1591, 1600, 1531, 281, 1557,
	158, 168, 239, 1685, 293, 210, 1409, 1417, 1446, 1454,
	1455, 1456, 1457, 1462, 1469, 0, 1476, 1484, 1487, 1488,
	1496, 1502, 1503, 1504, 1505, 1514, 1516, 1517, 1518, 1519,
	1520, 1524, 1525, 1527, 1540, 1541, 1547, 1555, 1556, 1564,
	1566, 0, 1595, 1598, 1607, 1612, 1615, 1621, 1623, 1630,
	1635, 1637, 1675, 1683, 1688, 347, 196, 1537, 1563, 1602,
	169, 176, 183, 195, 203, 209, 220, 223, 227, 228,
	230, 233, 245, 247, 248, 249, 250, 266, 267, 270,
	271, 274, 275, 278, 279, 280, 282, 283, 289, 147,
	295, 301, 302, 303, 304, 305, 312, 313, 314, 315,
	322, 338, 339, 352, 353, 1649, 1510, 155, 0, 0,
	161, 0, 0, 0, 0, 0, 1495, 160, 1644, 1680,
	1576, 1590, 1661, 1622, 328, 1513, 1665, 1463, 1492, 1682,
	1498, 1501, 1584, 1428, 1551, 273, 1489, 1429, 1411, 1468,
	1415, 1480, 1416, 1465, 199, 1461, 1625, 1554, 1663, 1533,
	1577, 1587, 198, 190, 1543, 1542, 1651, 1478, 1477, 1582,
	1639, 1662, 1532, 0, 1672, 240, 1636, 0, 350, 320,
	257, 0, 0, 1528, 1645, 1549, 1614, 1511, 1586, 1445,
	1569, 1667, 1490, 1578, 1668, 0, 0, 0, 0, 478,
	0, 0, 0, 0, 0, 0, 0, 0, 137, 0,
	0, 1574, 1659, 1483, 0, 1523, 1583, 1687, 1414, 1570,
	0, 1420, 1431, 1681, 1652, 1474, 1475, 202, 0, 0,
	0, 0, 0, 0, 0, 1526, 1550, 1604, 1508, 345,
	1589, 1599, 1617, 1500, 288, 215, 0, 0, 0, 0,
	0, 0, 1827, 0, 1470, 0, 1567, 0, 0, 0,
	1436, 1422, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1522, 0, 0, 0, 1444, 1412,
	1472, 1606, 1413, 1410, 258, 1432, 1619, 1650, 1509, 231,
	153, 1656, 1507, 1506, 1593, 1437, 1629, 1493, 238, 1435,
	154, 1430, 1438, 1491, 269, 1603, 1611, 142, 157, 1626,
	1466, 1482, 191, 0, 298, 1579, 344, 1832, 1559, 297,
	241, 337, 1594, 1658, 343, 1494, 327, 351, 355, 208,
	1534, 182, 317, 200, 197, 1473, 1616, 1419, 216, 287,
	194, 234, 1512, 1585, 1467, 187, 1597, 1568, 1631, 316,
	334, 159, 255, 335, 354, 174, 329, 256, 262, 184,
	186, 185, 170, 311, 333, 179, 189, 1627, 1610, 1633,
	1460, 1439, 1451, 1440, 1481, 1660, 226, 217, 1634, 1632,
	348, 143, 307, 306, 1497, 225, 1613, 144, 136, 294,
	145, 232, 162, 1638, 357, 173, 236, 330, 1831, 211,
	268, 193, 1581, 277, 1479, 156, 290, 252, 253, 251,
	254, 214, 140, 146, 1609, 292, 309, 332, 175, 323,
	138, 139, 141, 148, 300, 149, 150, 1666, 246, 204,
	207, 219, 229, 1580, 296, 324, 349, 1571, 171, 164,
	326, 342, 180, 308, 310, 356, 1605, 166, 1654, 1628,
	1561, 1515, 1521, 1421, 0, 165, 1601, 1471, 1486, 1459,
	1575, 1458, 213, 1592, 340, 341, 192, 358, 1433, 1674,
	167, 1434, 1673, 265, 272, 264, 1677, 336, 1655, 1562,
	1546, 1544, 1426, 1653, 1560, 1545, 237, 206, 221, 285,
	243, 286, 222, 260, 259, 261, 244, 1548, 0, 163,
	0, 321, 1664, 1689, 325, 177, 1453, 1620, 331, 218,
	291, 178, 212, 205, 284, 263, 172, 224, 319, 235,
	242, 1596, 1686, 276, 299, 181, 346, 318, 201, 1449,
	1452, 1447, 1450, 1448, 1552, 1553, 1669, 1670, 1671, 1608,
	1441, 0, 1646, 1647, 0, 1539, 1657, 1427, 0, 1624,
	151, 152, 1588, 1684, 1499, 188, 1418, 1423, 1424, 1425,
	1442, 1529, 1530, 1558, 1565, 1642, 1641, 1640, 1643, 1648,
	1678, 1676, 1679, 1443, 1464, 1485, 1535, 1536, 1538, 1572,
	1573, 1618, 1591, 1600, 1531, 281, 1557, 158, 168, 239,
	1685, 293, 210, 1409, 1417, 1446, 1454, 1455, 1456, 1457,
	1462, 1469, 0, 1476, 1484, 1487, 1488, 1496, 1502, 1503,
	1504, 1505, 1514, 1516, 1517, 1518, 1519, 1520, 1524, 1525,
	1527, 1540, 1541, 1547, 1555, 1556, 1564, 1566, 0, 1595,
	1598, 1607, 1612, 1615, 1621, 1623, 1630, 1635, 1637, 1675,
	1683, 1688, 347, 196, 1537, 1563, 1602, 169, 176, 183,
	195, 203, 209, 220, 223, 227, 228, 230, 233, 245,
	247, 248, 249, 250, 266, 267, 270, 271, 274, 275,
	278, 279, 280, 282, 283, 289, 147, 295, 301, 302,
	303, 304, 305, 312, 313, 314, 315, 322, 338, 339,
	352, 353, 1649, 1510, 155, 0, 0, 161, 0, 0,
	0, 0, 0, 1495, 160, 1644, 1680, 1576, 1590, 1661,
	1622, 328, 1513, 1665, 1463, 1492, 1682, 1498, 1501, 1584,
	1428, 1551, 273, 1489, 1429, 1411, 1468, 1415, 1480, 1416,
	1465, 199, 1461, 1625, 1554, 1663, 1533, 1577, 1587, 198,
	190, 1543, 1542, 1651, 1478, 1477, 1582, 1639, 1662, 1532,
	0, 1672, 240, 1636, 0, 350, 320, 257, 0, 0,
	1528, 1645, 1549, 1614, 1511, 1586, 1445, 1569, 1667, 1490,
	1578, 1668, 0, 0, 0, 0, 478, 0, 0, 0,
	0, 0, 0, 0, 0, 137, 0, 0, 1574, 1659,
	1483, 0, 1523, 1583, 1687, 1414, 1570, 0, 1420, 1431,
	1681, 1652, 1474, 1475, 202, 0, 0, 0, 0, 0,
	0, 0, 1526, 1550, 1604, 1508, 345, 1589, 1599, 1617,
	1500, 288, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 1470, 0, 1567, 0, 0, 0, 1436, 1422, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1522, 0, 0, 0, 1444, 1412, 1472, 1606, 1413,
	1410, 258, 1432, 1619, 1650, 1509, 231, 153, 1656, 1507,
	1506, 1593, 1437, 1629, 1493, 238, 1435, 154, 1430, 1438,
	1491, 269, 1603, 1611, 142, 157, 1626, 1466, 1482, 191,
	0, 298, 1579, 344, 1832, 1559, 297, 241, 337, 1594,
	1658, 343, 1494, 327, 351, 355, 208, 1534, 182, 317,
	200, 197, 1473, 1616, 1419, 216, 287, 194, 234, 1512,
	1585, 1467, 187, 1597, 1568, 1631, 316, 334, 159, 255,
	335, 354, 174, 329, 256, 262, 184, 186, 185, 170,
	311, 333, 179, 189, 1627, 1610, 1633, 1460, 1439, 1451,
	1440, 1481, 1660, 226, 217, 1634, 1632, 348, 143, 307,
	306, 1497, 225, 1613, 144, 136, 294, 145, 232, 162,
	1638, 357, 173, 236, 330, 1831, 211, 268, 193, 1581,
	277, 1479, 156, 290, 252, 253, 251, 254, 214, 140,
	146, 1609, 292, 309, 332, 175, 323, 138, 139, 141,
	148, 300, 149, 150, 1666, 246, 204, 207, 219, 229,
	1580, 296, 324, 349, 1571, 171, 164, 326, 342, 180,
	308, 310, 356, 1605, 166, 1654, 1628, 1561, 1515, 1521,
	1421, 0, 165, 1601, 1471, 1486, 1459, 1575, 1458, 213,
	1592, 340, 341, 192, 358, 1433, 1674, 167, 1434, 1673,
	265, 272, 264, 1677, 336, 1655, 1562, 1546, 1544, 1426,
	1653, 1560, 1545, 237, 206, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 1548, 0, 163, 0, 321, 1664,
	1689, 325, 177, 1453, 1620, 331, 218, 291, 178, 212,
	205, 284, 263, 172, 224, 319, 235, 242, 1596, 1686,
	276, 299, 181, 346, 318, 201, 1449, 1452, 1447, 1450,
	1448, 1552, 1553, 1669, 1670, 1671, 1608, 1441, 0, 1646,
	1647, 0, 1539, 1657, 1427, 0, 1624, 151, 152, 1588,
	1684, 1499, 188, 1418, 1423, 1424, 1425, 1442, 1529, 1530,
	1558, 1565, 1642, 1641, 1640, 1643, 1648, 1678, 1676, 1679,
	1443, 1464, 1485, 1535, 1536, 1538, 1572, 1573, 1618, 1591,
	1600, 1531, 281, 1557, 158, 168, 239, 1685, 293, 210,
	1409, 1417, 1446, 1454, 1455, 1456, 1457, 1462, 1469, 0,
	1476, 1484, 1487, 1488, 1496, 1502, 1503, 1504, 1505, 1514,
	1516, 1517, 1518, 1519, 1520, 1524, 1525, 1527, 1540, 1541,
	1547, 1555, 1556, 1564, 1566, 0, 1595, 1598, 1607, 1612,
	1615, 1621, 1623, 1630, 1635, 1637, 1675, 1683, 1688, 347,
	196, 1537, 1563, 1602, 169, 176, 183, 195, 203, 209,
	220, 223, 227, 228, 230, 233, 245, 247, 248, 249,
	250, 266, 267, 270, 271, 274, 275, 278, 279, 280,
	282, 283, 289, 147, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 1649,
	1510, 155, 0, 0, 161, 0, 0, 0, 0, 0,
	1495, 160, 1644, 1680, 1576, 1590, 809, 0, 328, 875,
	813, 656, 679, 822, 685, 687, 750, 632, 727, 273,
	676, 633, 0, 0, 624, 870, 625, 657, 199, 868,
	783, 728, 811, 713, 743, 753, 198, 190, 720, 719,
	800, 668, 667, 748, 796, 810, 0, 0, 911, 240,
	0, 933, 350, 320, 257, 936, 935, 711, 0, 882,
	897, 696, 752, 644, 739, 815, 677, 744, 816, 0,
	0, 0, 0, 478, 0, 0, 0, 0, 0, 0,
	0, 0, 137, 0, 0, 892, 907, 871, 934, 706,
	749, 827, 623, 889, 0, 628, 858, 0, 801, 664,
	665, 202, 0, 0, 0, 0, 0, 0, 0, 709,
	726, 768, 693, 345, 755, 764, 778, 686, 288, 215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	888, 0, 0, 0, 638, 854, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 876, 0,
	0, 0, 643, 621, 662, 770, 622, 620, 258, 635,
	899, 799, 694, 231, 153, 805, 692, 874, 758, 639,
	787, 680, 238, 637, 154, 634, 640, 678, 269, 767,
	773, 142, 157, 784, 658, 671, 191, 2553, 298, 745,
	344, 2555, 731, 297, 241, 337, 759, 807, 343, 681,
	327, 351, 355, 208, 714, 182, 317, 200, 197, 663,
	777, 627, 216, 287, 194, 234, 697, 751, 659, 187,
	762, 738, 789, 316, 334, 159, 255, 335, 354, 174,
	329, 256, 262, 184, 186, 185, 170, 311, 333, 179,
	189, 785, 772, 791, 654, 641, 646, 642, 670, 808,
	226, 217, 792, 790, 348, 143, 307, 306, 684, 225,
	775, 144, 136, 294, 145, 232, 162, 795, 357, 173,
	236, 330, 2554, 211, 268, 193, 747, 277, 669, 156,
	290, 252, 253, 251, 254, 214, 140, 146, 771, 292,
	309, 332, 175, 323, 138, 139, 141, 148, 300, 149,
	150, 814, 246, 204, 207, 219, 229, 746, 296, 324,
	349, 740, 171, 164, 326, 342, 180, 308, 310, 356,
	769, 166, 803, 786, 733, 699, 705, 629, 0, 165,
	765, 661, 673, 653, 741, 652, 213, 757, 340, 341,
	192, 358, 859, 818, 167, 636, 817, 265, 272, 264,
	820, 336, 804, 734, 723, 721, 630, 802, 732, 722,
	237, 206, 221, 285, 243, 286, 222, 260, 259, 261,
	244, 725, 0, 163, 0, 321, 812, 829, 325, 177,
	647, 779, 331, 218, 291, 178, 212, 205, 284, 263,
	172, 224, 319, 235, 242, 761, 826, 276, 299, 181,
	346, 318, 201, 865, 867, 863, 866, 864, 883, 884,
	908, 909, 910, 896, 860, 0, 904, 905, 0, 716,
	806, 631, 0, 782, 151, 152, 754, 824, 873, 188,
	2556, 855, 856, 857, 2557, 877, 878, 2558, 2559, 902,
	901, 900, 903, 2560, 913, 912, 914, 862, 869, 872,
	879, 880, 881, 890, 891, 898, 893, 894, 712, 281,
	885, 158, 168, 239, 825, 293, 210, 619, 626, 645,
	648, 649, 650, 651, 655, 660, 0, 666, 672, 674,
	675, 683, 688, 689, 690, 691, 698, 700, 701, 702,
	703, 704, 707, 708, 710, 717, 718, 724, 729, 730,
	736, 737, 0, 760, 763, 895, 774, 776, 780, 781,
	788, 793, 794, 819, 823, 828, 347, 196, 715, 735,
	766, 169, 176, 183, 195, 203, 209, 220, 223, 227,
	228, 230, 233, 245, 247, 248, 249, 250, 266, 267,
	270, 271, 274, 275, 278, 279, 280, 282, 283, 289,
	147, 295, 301, 302, 303, 304, 305, 312, 313, 314,
	315, 322, 338, 339, 352, 353, 798, 695, 155, 0,
	0, 161, 0, 0, 0, 0, 0, 682, 160, 797,
	821, 742, 756, 809, 0, 328, 875, 813, 656, 679,
	822, 685, 687, 750, 632, 727, 273, 676, 633, 0,
	0, 624, 870, 625, 657, 199, 868, 783, 728, 811,
	713, 743, 753, 198, 190, 720, 719, 800, 668, 667,
	748, 796, 810, 0, 0, 911, 240, 0, 0, 350,
	320, 257, 0, 0, 711, 0, 882, 897, 696, 752,
	644, 739, 815, 677, 744, 816, 0, 0, 0, 0,
	478, 0, 0, 0, 0, 0, 0, 0, 0, 137,
	0, 0, 892, 907, 871, 0, 706, 749, 827, 623,
	889, 0, 628, 858, 0, 801, 664, 665, 202, 0,
	0, 0, 0, 0, 0, 0, 709, 726, 768, 693,
	345, 755, 764, 778, 686, 288, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 888, 0, 0,
	0, 638, 854, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 876, 0, 0, 0, 643,
	621, 662, 770, 622, 620, 258, 635, 899, 799, 694,
	231, 153, 805, 692, 874, 758, 639, 787, 680, 238,
	637, 154, 634, 640, 678, 269, 767, 773, 142, 157,
	784, 658, 671, 191, 0, 298, 745, 344, 852, 731,
	297, 241, 337, 759, 807, 343, 681, 327, 351, 355,
	208, 714, 182, 317, 200, 197, 663, 777, 627, 216,
	287, 194, 234, 697, 751, 659, 187, 762, 738, 789,
	316, 334, 159, 255, 335, 354, 174, 329, 256, 262,
	184, 186, 185, 170, 311, 333, 179, 189, 785, 772,
	791, 654, 641, 646, 642, 670, 808, 226, 217, 792,
	790, 348, 143, 307, 306, 684, 225, 775, 144, 136,
	294, 145, 232, 162, 795, 357, 173, 236, 330, 851,
	211, 268, 193, 747, 277, 669, 156, 290, 252, 253,
	251, 254, 214, 140, 146, 771, 292, 309, 332, 175,
	323, 138, 139, 141, 148, 300, 149, 150, 814, 246,
	204, 207, 219, 229, 746, 296, 324, 349, 740, 171,
	164, 326, 342, 180, 308, 310, 356, 769, 166, 803,
	786, 733, 699, 705, 629, 0, 165, 765, 661, 673,
	653, 741, 652, 213, 757, 340, 341, 192, 358, 859,
	818, 167, 636, 817, 265, 272, 264, 820, 336, 804,
	734, 723, 721, 630, 802, 732, 722, 237, 206, 221,
	285, 243, 286, 222, 260, 259, 261, 244, 725, 0,
	163, 0, 321, 812, 829, 325, 177, 647, 779, 331,
	218, 291, 178, 212, 205, 284, 263, 172, 224, 319,
	235, 242, 761, 826, 276, 299, 181, 346, 318, 201,
	865, 867, 863, 866, 864, 883, 884, 908, 909, 910,
	896, 860, 0, 904, 905, 0, 716, 806, 631, 0,
	782, 151, 152, 754, 824, 873, 188, 853, 855, 856,
	857, 861, 877, 878, 886, 887, 902, 901, 900, 903,
	906, 913, 912, 914, 862, 869, 872, 879, 880, 881,
	890, 891, 898, 893, 894, 712, 281, 885, 158, 168,
	239, 825, 293, 210, 619, 626, 645, 648, 649, 650,
	651, 655, 660, 0, 666, 672, 674, 675, 683, 688,
	689, 690, 691, 698, 700, 701, 702, 703, 704, 707,
	708, 710, 717, 718, 724, 729, 730, 736, 737, 0,
	760, 763, 895, 774, 776, 780, 781, 788, 793, 794,
	819, 823, 828, 347, 196, 715, 735, 766, 169, 176,
	183, 195, 203, 209, 220, 223, 227, 228, 230, 233,
	245, 247, 248, 249, 250, 266, 267, 270, 271, 274,
	275, 278, 279, 280, 282, 283, 289, 147, 295, 301,
	302, 303, 304, 305, 312, 313, 314, 315, 322, 338,
	339, 352, 353, 798, 695, 155, 0, 0, 161, 0,
	0, 0, 0, 0, 682, 160, 797, 821, 742, 756,
	809, 0, 328, 875, 813, 656, 679, 822, 685, 687,
	750, 632, 727, 273, 676, 633, 0, 0, 624, 870,
	625, 657, 199, 868, 783, 728, 811, 713, 743, 753,
	198, 190, 720, 719, 800, 668, 667, 748, 796, 810,
	0, 0, 911, 240, 0, 0, 350, 320, 257, 0,
	0, 711, 0, 882, 897, 696, 752, 644, 739, 815,
	677, 744, 816, 0, 0, 0, 0, 478, 0, 0,
	0, 0, 0, 0, 0, 0, 137, 0, 0, 892,
	907, 871, 0, 706, 749, 827, 623, 889, 0, 628,
	858, 0, 801, 664, 665, 202, 0, 0, 0, 0,
	0, 0, 0, 709, 726, 768, 693, 345, 755, 764,
	778, 686, 288, 215, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 888, 0, 0, 0, 638, 854,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 876, 0, 0, 0, 643, 621, 662, 770,
	622, 620, 258, 635, 899, 799, 694, 231, 153, 805,
	692, 874, 758, 639, 787, 680, 238, 637, 154, 634,
	640, 678, 269, 767, 773, 142, 157, 784, 658, 671,
	191, 0, 298, 745, 344, 852, 731, 297, 241, 337,
	759, 807, 343, 681, 327, 351, 355, 208, 714, 182,
	317, 200, 197, 663, 777, 627, 216, 287, 194, 234,
	697, 751, 659, 187, 762, 738, 789, 316, 334, 159,
	255, 335, 354, 174, 329, 256, 262, 184, 186, 185,
	170, 311, 333, 179, 189, 785, 772, 791, 654, 641,
	646, 642, 670, 808, 226, 217, 792, 790, 348, 143,
	307, 306, 684, 225, 775, 144, 136, 294, 145, 232,
	162, 795, 357, 173, 236, 330, 851, 211, 268, 193,
	747, 277, 669, 156, 290, 252, 253, 251, 254, 214,
	140, 146, 771, 292, 309, 332, 175, 323, 138, 139,
	141, 148, 300, 149, 150, 814, 246, 204, 207, 219,
	229, 746, 296, 324, 349, 740, 171, 164, 326, 342,
	180, 308, 310, 356, 769, 166, 803, 786, 733, 699,
	705, 629, 0, 165, 765, 661, 673, 653, 741, 652,
	213, 757, 340, 341, 192, 358, 859, 818, 167, 847,
	817, 265, 272, 264, 820, 336, 804, 734, 723, 721,
	630, 802, 732, 722, 237, 206, 221, 285, 243, 286,
	222, 260, 259, 261, 843, 725, 0, 163, 0, 321,
	812, 829, 325, 177, 647, 779, 331, 218, 291, 178,
	212, 205, 284, 848, 846, 837, 838, 235, 242, 761,
	826, 276, 299, 181, 346, 318, 201, 865, 867, 863,
	866, 864, 883, 884, 908, 909, 910, 896, 860, 0,
	904, 905, 0, 716, 806, 631, 0, 782, 151, 152,
	754, 824, 873, 188, 853, 855, 856, 857, 861, 877,
	878, 886, 887, 902, 901, 900, 903, 906, 913, 912,
	914, 862, 869, 872, 879, 880, 881, 890, 891, 898,
	893, 894, 712, 281, 885, 158, 168, 239, 825, 293,
	210, 619, 626, 645, 648, 649, 650, 651, 655, 660,
	0, 666, 672, 674, 675, 683, 688, 689, 690, 691,
	698, 700, 701, 702, 703, 704, 707, 708, 710, 717,
	718, 724, 729, 730, 736, 737, 0, 760, 763, 895,
	774, 776, 780, 781, 788, 793, 794, 819, 823, 828,
	347, 196, 715, 735, 766, 169, 176, 183, 195, 203,
	209, 220, 223, 227, 228, 230, 233, 245, 247, 248,
	249, 250, 266, 267, 270, 271, 274, 275, 278, 279,
	280, 844, 845, 289, 147, 295, 301, 302, 303, 304,
	305, 312, 313, 314, 315, 322, 338, 339, 352, 353,
	798, 695, 155, 0, 0, 161, 0, 0, 0, 0,
	0, 682, 160, 797, 821, 742, 756, 809, 0, 328,
	875, 813, 656, 679, 822, 685, 687, 750, 632, 727,
	273, 676, 633, 0, 0, 624, 870, 625, 657, 199,
	868, 783, 728, 811, 713, 743, 753, 198, 190, 720,
	719, 800, 668, 667, 748, 796, 810, 0, 0, 911,
	240, 0, 0, 350, 320, 257, 0, 0, 711, 0,
	882, 897, 696, 752, 644, 739, 815, 677, 744, 816,
	0, 0, 0, 0, 478, 0, 0, 0, 0, 0,
	0, 0, 0, 137, 0, 0, 892, 907, 871, 0,
	706, 749, 827, 623, 889, 0, 628, 858, 0, 801,
	664, 665, 202, 0, 0, 0, 0, 0, 0, 0,
	709, 726, 768, 693, 345, 755, 764, 778, 686, 288,
	215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 888, 0, 0, 0, 638, 854, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 876,
	0, 0, 0, 643, 621, 662, 770, 622, 620, 258,
	635, 899, 799, 694, 231, 153, 805, 692, 874, 758,
	639, 787, 680, 238, 637, 154, 634, 640, 678, 269,
	767, 773, 142, 157, 784, 658, 671, 191, 0, 298,
	745, 344, 852, 731, 297, 241, 337, 759, 807, 343,
	681, 327, 351, 355, 208, 714, 182, 317, 200, 197,
	663, 777, 627, 216, 287, 194, 234, 697, 751, 659,
	187, 762, 738, 789, 316, 334, 159, 255, 335, 354,
	174, 329, 256, 262, 184, 186, 185, 170, 311, 333,
	179, 189, 785, 772, 791, 654, 641, 646, 642, 670,
	808, 226, 217, 792, 790, 348, 143, 307, 306, 684,
	225, 775, 144, 136, 294, 145, 232, 162, 795, 357,
	173, 236, 330, 851, 211, 268, 193, 747, 277, 669,
	156, 290, 252, 253, 251, 254, 214, 140, 146, 771,
	292, 309, 332, 175, 323, 138, 139, 141, 148, 300,
	149, 150, 814, 246, 204, 207, 219, 229, 746, 296,
	324, 349, 740, 171, 164, 326, 1284, 180, 308, 310,
	356, 769, 166, 803, 786, 733, 699, 705, 629, 0,
	165, 765, 661, 673, 653, 741, 652, 213, 757, 340,
	341, 192, 358, 859, 818, 167, 636, 817, 265, 272,
	264, 820, 336, 804, 734, 723, 721, 630, 802, 732,
	722, 237, 206, 221, 285, 243, 286, 222, 260, 259,
	261, 244, 725, 0, 163, 0, 321, 812, 829, 325,
	177, 647, 779, 331, 218, 291, 178, 212, 205, 284,
	263, 172, 224, 319, 235, 242, 761, 826, 276, 299,
	181, 346, 318, 201, 865, 867, 863, 866, 864, 883,
	884, 908, 909, 910, 896, 860, 0, 904, 905, 0,
	716, 806, 631, 0, 782, 151, 152, 754, 824, 873,
	188, 853, 855, 856, 857, 861, 877, 878, 886, 887,
	902, 901, 900, 903, 906, 913, 912, 914, 862, 869,
	872, 879, 880, 881, 890, 891, 898, 893, 894, 712,
	281, 885, 158, 168, 239, 825, 293, 210, 619, 626,
	645, 648, 649, 650, 651, 655, 660, 0, 666, 672,
	674, 675, 683, 688, 689, 690, 691, 698, 700, 701,
	702, 703, 704, 707, 708, 710, 717, 718, 724, 729,
	730, 736, 737, 0, 760, 763, 895, 774, 776, 780,
	781, 788, 793, 794, 819, 823, 828, 347, 196, 715,
	735, 766, 169, 176, 183, 195, 203, 209, 220, 223,
	227, 228, 230, 233, 245, 247, 248, 249, 250, 266,
	267, 270, 271, 274, 275, 278, 279, 280, 282, 283,
	289, 147, 295, 301, 302, 303, 304, 305, 312, 313,
	314, 315, 322, 338, 339, 352, 353, 798, 695, 155,
	0, 0, 161, 0, 0, 0, 0, 0, 682, 160,
	797, 821, 742, 756, 809, 0, 328, 875, 813, 656,
	679, 822, 685, 687, 750, 632, 727, 273, 676, 633,
	0, 0, 624, 870, 625, 657, 199, 868, 783, 728,
	811, 713, 743, 753, 198, 190, 720, 719, 800, 668,
	667, 748, 796, 810, 0, 0, 911, 240, 0, 0,
	350, 320, 257, 0, 0, 711, 0, 882, 897, 696,
	752, 644, 739, 815, 677, 744, 816, 0, 0, 0,
	0, 478, 0, 0, 0, 0, 0, 0, 0, 0,
	137, 0, 0, 892, 907, 871, 0, 706, 749, 827,
	623, 889, 0, 628, 858, 0, 801, 664, 665, 202,
	0, 0, 0, 0, 0, 0, 0, 709, 726, 768,
	693, 345, 755, 764, 778, 686, 288, 215, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 888, 0,
	0, 0, 638, 854, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 876, 0, 0, 0,
	643, 621, 662, 770, 622, 620, 258, 635, 899, 799,
	694, 231, 153, 805, 692, 874, 758, 639, 787, 680,
	238, 637, 154, 634, 640, 678, 269, 767, 773, 142,
	157, 784, 658, 671, 191, 0, 298, 745, 344, 852,
	731, 297, 241, 337, 759, 807, 343, 681, 327, 351,
	355, 208, 714, 182, 317, 200, 197, 663, 777, 627,
	216, 287, 194, 234, 697, 751, 659, 187, 762, 738,
	789, 316, 334, 159, 255, 335, 354, 174, 329, 256,
	262, 184, 186, 185, 170, 311, 333, 179, 189, 785,
	772, 791, 654, 641, 646, 642, 670, 808, 226, 217,
	792, 790, 348, 143, 307, 306, 684, 225, 775, 144,
	136, 294, 145, 232, 162, 795, 357, 173, 236, 330,
	851, 211, 268, 193, 747, 277, 669, 156, 290, 252,
	253, 251, 254, 214, 140, 146, 771, 292, 309, 332,
	175, 323, 138, 139, 141, 148, 300, 149, 150, 814,
	246, 204, 207, 219, 229, 746, 296, 324, 349, 740,
	171, 164, 326, 834, 180, 308, 310, 356, 769, 166,
	803, 786, 733, 699, 705, 629, 0, 165, 765, 661,
	673, 653, 741, 652, 213, 757, 340, 341, 192, 358,
	859, 818, 167, 847, 817, 265, 272, 264, 820, 336,
	804, 734, 723, 721, 630, 802, 732, 722, 237, 206,
	221, 285, 243, 286, 222, 260, 259, 261, 843, 725,
	0, 163, 0, 321, 812, 829, 325, 177, 647, 779,
	331, 218, 291, 178, 212, 205, 284, 848, 846, 837,
	838, 235, 242, 761, 826, 276, 299, 181, 346, 318,
	201, 865, 867, 863, 866, 864, 883, 884, 908, 909,
	910, 896, 860, 0, 904, 905, 0, 716, 806, 631,
	0, 782, 151, 152, 754, 824, 873, 188, 853, 855,
	856, 857, 861, 877, 878, 886, 887, 902, 901, 900,
	903, 906, 913, 912, 914, 862, 869, 872, 879, 880,
	881, 890, 891, 898, 893, 894, 712, 281, 885, 158,
	168, 239, 825, 293, 210, 619, 626, 645, 648, 649,
	650, 651, 655, 660, 0, 666, 672, 674, 675, 683,
	688, 689, 690, 691, 698, 700, 701, 702, 703, 704,
	707, 708, 710, 717, 718, 724, 729, 730, 736, 737,
	0, 760, 763, 895, 774, 776, 780, 781, 788, 793,
	794, 819, 823, 828, 347, 196, 715, 735, 766, 169,
	176, 183, 195, 203, 209, 220, 223, 227, 228, 230,
	233, 245, 247, 248, 249, 250, 266, 267, 270, 271,
	274, 275, 278, 279, 280, 844, 845, 289, 147, 295,
	301, 302, 303, 304, 305, 312, 313, 314, 315, 322,
	338, 339, 352, 353, 798, 695, 155, 0, 0, 161,
	0, 0, 0, 0, 0, 682, 160, 797, 821, 742,
	756, 1661, 1622, 328, 1513, 1665, 1463, 1492, 1682, 1498,
	1501, 1584, 1428, 1551, 273, 1489, 1429, 1411, 1468, 1415,
	1480, 1416, 1465, 199, 1461, 1625, 1554, 1663, 1533, 1577,
	1587, 198, 190, 1543, 1542, 1651, 1478, 1477, 1582, 1639,
	1662, 1532, 0, 1672, 240, 1636, 0, 350, 320, 257,
	0, 0, 1528, 1645, 1549, 1614, 1511, 1586, 1445, 1569,
	1667, 1490, 1578, 1668, 0, 0, 0, 0, 929, 0,
	1988, 1989, 0, 0, 0, 0, 0, 1990, 0, 0,
	1574, 1659, 1483, 0, 1523, 1583, 1687, 1414, 1570, 0,
	1420, 1431, 1681, 1652, 1474, 1475, 202, 2311, 0, 0,
	0, 0, 0, 0, 1526, 1550, 1604, 1508, 345, 1589,
	1599, 1617, 1500, 288, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 1470, 0, 1567, 0, 0, 0, 1436,
	1422, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1522, 0, 0, 0, 1444, 1412, 1472,
	1606, 1413, 1410, 258, 1432, 1619, 1650, 1509, 231, 0,
	1656, 1507, 1506, 1593, 1437, 1629, 1493, 238, 1435, 154,
	1430, 1438, 1491, 269, 1603, 1611, 0, 157, 1626, 1466,
	1482, 191, 0, 298, 1579, 344, 0, 1559, 297, 241,
	337, 1594, 1658, 343, 1494, 327, 351, 355, 208, 1534,
	182, 317, 200, 197, 1473, 1616, 1419, 216, 287, 194,
	234, 1512, 1585, 1467, 187, 1597, 1568, 1631, 316, 334,
	159, 255, 335, 354, 174, 329, 256, 262, 184, 186,
	185, 170, 311, 333, 179, 189, 1627, 1610, 1633, 1460,
	1439, 1451, 1440, 1481, 1660, 226, 217, 1634, 1632, 348,
	0, 307, 306, 1497, 225, 1613, 0, 0, 294, 1992,
	232, 162, 1638, 357, 173, 236, 330, 0, 211, 268,
	193, 1581, 277, 1479, 156, 290, 252, 253, 251, 254,
	214, 0, 0, 1609, 292, 309, 332, 175, 323, 1991,
	0, 0, 0, 300, 0, 0, 1666, 246, 204, 207,
	219, 229, 1580, 296, 324, 349, 1571, 171, 164, 326,
	342, 180, 308, 310, 356, 1605, 166, 1654, 1628, 1561,
	1515, 1521, 1421, 0, 165, 1601, 1471, 1486, 1459, 1575,
	1458, 213, 1592, 340, 341, 192, 358, 1433, 1674, 167,
	1434, 1673, 265, 272, 264, 1677, 336, 1655, 1562, 1546,
	1544, 1426, 1653, 1560, 1545, 237, 206, 221, 285, 243,
	286, 222, 260, 259, 261, 244, 1548, 0, 163, 0,
	321, 1664, 1689, 325, 177, 1453, 1620, 331, 218, 291,
	178, 212, 205, 284, 263, 172, 224, 319, 235, 242,
	1596, 1686, 276, 299, 181, 346, 318, 201, 1449, 1452,
	1447, 1450, 1448, 1552, 1553, 1669, 1670, 1671, 1608, 1441,
	0, 1646, 1647, 0, 1539, 1657, 1427, 0, 1624, 0,
	0, 1588, 1684, 1499, 188, 1418, 1423, 1424, 1425, 1442,
	1529, 1530, 1558, 1565, 1642, 1641, 1640, 1643, 1648, 1678,
	1676, 1679, 1443, 1464, 1485, 1535, 1536, 1538, 1572, 1573,
	1618, 1591, 1600, 1531, 281, 1557, 158, 168, 239, 1685,
	293, 210, 1409, 1417, 1446, 1454, 1455, 1456, 1457, 1462,
	1469, 0, 1476, 1484, 1487, 1488, 1496, 1502, 1503, 1504,
	1505, 1514, 1516, 1517, 1518, 1519, 1520, 1524, 1525, 1527,
	1540, 1541, 1547, 1555, 1556, 1564, 1566, 0, 1595, 1598,
	1607, 1612, 1615, 1621, 1623, 1630, 1635, 1637, 1675, 1683,
	1688, 347, 196, 1537, 1563, 1602, 169, 176, 183, 195,
	203, 209, 220, 223, 227, 228, 230, 233, 245, 247,
	248, 249, 250, 266, 267, 270, 271, 274, 275, 278,
	279, 280, 282, 283, 289, 0, 295, 301, 302, 303,
	304, 305, 312, 313, 314, 315, 322, 338, 339, 352,
	353, 1649, 1510, 155, 0, 0, 161, 0, 0, 0,
	0, 0, 1495, 160, 1644, 1680, 1576, 1590, 1661, 1622,
	328, 1513, 1665, 1463, 1492, 1682, 1498, 1501, 1584, 1428,
	1551, 273, 1489, 1429, 1411, 1468, 1415, 1480, 1416, 1465,
	199, 1461, 1625, 1554, 1663, 1533, 1577, 1587, 198, 190,
	1543, 1542, 1651, 1478, 1477, 1582, 1639, 1662, 1532, 0,
	1672, 240, 1636, 0, 350, 320, 257, 0, 0, 1528,
	1645, 1549, 1614, 1511, 1586, 1445, 1569, 1667, 1490, 1578,
	1668, 0, 0, 0, 0, 929, 0, 1988, 1989, 0,
	0, 0, 0, 0, 1990, 0, 0, 1574, 1659, 1483,
	0, 1523, 1583, 1687, 1414, 1570, 0, 1420, 1431, 1681,
	1652, 1474, 1475, 202, 0, 0, 0, 0, 0, 0,
	0, 1526, 1550, 1604, 1508, 345, 1589, 1599, 1617, 1500,
	288, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	1470, 0, 1567, 0, 0, 0, 1436, 1422, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1522, 0, 0, 0, 1444, 1412, 1472, 1606, 1413, 1410,
	258, 1432, 1619, 1650, 1509, 231, 0, 1656, 1507, 1506,
	1593, 1437, 1629, 1493, 238, 1435, 154, 1430, 1438, 1491,
	269, 1603, 1611, 0, 157, 1626, 1466, 1482, 191, 0,
	298, 1579, 344, 0, 1559, 297, 241, 337, 1594, 1658,
	343, 1494, 327, 351, 355, 208, 1534, 182, 317, 200,
	197, 1473, 1616, 1419, 216, 287, 194, 234, 1512, 1585,
	1467, 187, 1597, 1568, 1631, 316, 334, 159, 255, 335,
	354, 174, 329, 256, 262, 184, 186, 185, 170, 311,
	333, 179, 189, 1627, 1610, 1633, 1460, 1439, 1451, 1440,
	1481, 1660, 226, 217, 1634, 1632, 348, 0, 307, 306,
	1497, 225, 1613, 0, 0, 294, 1992, 232, 162, 1638,
	357, 173, 236, 330, 0, 211, 268, 193, 1581, 277,
	1479, 156, 290, 252, 253, 251, 254, 214, 0, 0,
	1609, 292, 309, 332, 175, 323, 1991, 0, 0, 0,
	300, 0, 0, 1666, 246, 204, 207, 219, 229, 1580,
	296, 324, 349, 1571, 171, 164, 326, 342, 180, 308,
	310, 356, 1605, 166, 1654, 1628, 1561, 1515, 1521, 1421,
	0, 165, 1601, 1471, 1486, 1459, 1575, 1458, 213, 1592,
	340, 341, 192, 358, 1433, 1674, 167, 1434, 1673, 265,
	272, 264, 1677, 336, 1655, 1562, 1546, 1544, 1426, 1653,
	1560, 1545, 237, 206, 221, 285, 243, 286, 222, 260,
	259, 261, 244, 1548, 0, 163, 0, 321, 1664, 1689,
	325, 177, 1453, 1620, 331, 218, 291, 178, 212, 205,
	284, 263, 172, 224, 319, 235, 242, 1596, 1686, 276,
	299, 181, 346, 318, 201, 1449, 1452, 1447, 1450, 1448,
	1552, 1553, 1669, 1670, 1671, 1608, 1441, 0, 1646, 1647,
	0, 1539, 1657, 1427, 0, 1624, 0, 0, 1588, 1684,
	1499, 188, 1418, 1423, 1424, 1425, 1442, 1529, 1530, 1558,
	1565, 1642, 1641, 1640, 1643, 1648, 1678, 1676, 1679, 1443,
	1464, 1485, 1535, 1536, 1538, 1572, 1573, 1618, 1591, 1600,
	1531, 281, 1557, 158, 168, 239, 1685, 293, 210, 1409,
	1417, 1446, 1454, 1455, 1456, 1457, 1462, 1469, 0, 1476,
	1484, 1487, 1488, 1496, 1502, 1503, 1504, 1505, 1514, 1516,
	1517, 1518, 1519, 1520, 1524, 1525, 1527, 1540, 1541, 1547,
	1555, 1556, 1564, 1566, 0, 1595, 1598, 1607, 1612, 1615,
	1621, 1623, 1630, 1635, 1637, 1675, 1683, 1688, 347, 196,
	1537, 1563, 1602, 169, 176, 183, 195, 203, 209, 220,
	223, 227, 228, 230, 233, 245, 247, 248, 249, 250,
	266, 267, 270, 271, 274, 275, 278, 279, 280, 282,
	283, 289, 0, 295, 301, 302, 303, 304, 305, 312,
	313, 314, 315, 322, 338, 339, 352, 353, 1649, 1510,
	155, 0, 0, 161, 0, 0, 0, 0, 0, 1495,
	160, 1644, 1680, 1576, 1590, 1661, 1622, 328, 1513, 1665,
	1463, 1492, 1682, 1498, 1501, 1584, 1428, 1551, 273, 1489,
	1429, 1411, 1468, 1415, 1480, 1416, 1465, 199, 1461, 1625,
	1554, 1663, 1533, 1577, 1587, 198, 190, 1543, 1542, 1651,
	1478, 1477, 1582, 1639, 1662, 1532, 0, 1672, 240, 1636,
	0, 350, 320, 257, 0, 0, 1528, 1645, 1549, 1614,
	1511, 1586, 1445, 1569, 1667, 1490, 1578, 1668, 0, 0,
	0, 0, 929, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1574, 1659, 1483, 0, 1523, 1583,
	1687, 1414, 1570, 0, 1420, 1431, 1681, 1652, 1474, 1475,
	202, 0, 0, 0, 0, 0, 0, 0, 1526, 1550,
	1604, 1508, 345, 1589, 1599, 1617, 1500, 288, 215, 0,
	0, 0, 0, 0, 0, 2924, 0, 1470, 0, 1567,
	0, 0, 0, 1436, 1422, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1522, 0, 0,
	0, 1444, 1412, 1472, 1606, 1413, 1410, 258, 1432, 1619,
	1650, 1509, 231, 0, 1656, 1507, 1506, 1593, 1437, 1629,
	1493, 238, 1435, 154, 1430, 1438, 1491, 269, 1603, 1611,
	0, 157, 1626, 1466, 1482, 191, 0, 298, 1579, 344,
	0, 1559, 297, 241, 337, 1594, 1658, 343, 1494, 327,
	351, 355, 208, 1534, 182, 317, 200, 197, 1473, 1616,
	1419, 216, 287, 194, 234, 1512, 1585, 1467, 187, 1597,
	1568, 1631, 316, 334, 159, 255, 335, 354, 174, 329,
	256, 262, 184, 186, 185, 170, 311, 333, 179, 189,
	1627, 1610, 1633, 1460, 1439, 1451, 1440, 1481, 1660, 226,
	217, 1634, 1632, 348, 0, 307, 306, 1497, 225, 1613,
	0, 0, 294, 0, 232, 162, 1638, 357, 173, 236,
	330, 0, 211, 268, 193, 1581, 277, 1479, 156, 290,
	252, 253, 251, 254, 214, 0, 0, 1609, 292, 309,
	332, 175, 323, 0, 0, 0, 0, 300, 0, 0,
	1666, 246, 204, 207, 219, 229, 1580, 296, 324, 349,
	1571, 171, 164, 326, 342, 180, 308, 310, 356, 1605,
	166, 1654, 1628, 1561, 1515, 1521, 1421, 0, 165, 1601,
	1471, 1486, 1459, 1575, 1458, 213, 1592, 340, 341, 192,
	358, 1433, 1674, 167, 1434, 1673, 265, 272, 264, 1677,
	336, 1655, 1562, 1546, 1544, 1426, 1653, 1560, 1545, 237,
	206, 221, 285, 243, 286, 222, 260, 259, 261, 244,
	1548, 0, 163, 0, 321, 1664, 1689, 325, 177, 1453,
	1620, 331, 218, 291, 178, 212, 205, 284, 263, 172,
	224, 319, 235, 242, 1596, 1686, 276, 299, 181, 346,
	318, 201, 1449, 1452, 1447, 1450, 1448, 1552, 1553, 1669,
	1670, 1671, 1608, 1441, 0, 1646, 1647, 0, 1539, 1657,
	1427, 0, 1624, 0, 0, 1588, 1684, 1499, 188, 1418,
	1423, 1424, 1425, 1442, 1529, 1530, 1558, 1565, 1642, 1641,
	1640, 1643, 1648, 1678, 1676, 1679, 1443, 1464, 1485, 1535,
	1536, 1538, 1572, 1573, 1618, 1591, 1600, 1531, 281, 1557,
	158, 168, 239, 1685, 293, 210, 1409, 1417, 1446, 1454,
	1455, 1456, 1457, 1462, 1469, 0, 1476, 1484, 1487, 1488,
	1496, 1502, 1503, 1504, 1505, 1514, 1516, 1517, 1518, 1519,
	1520, 1524, 1525, 1527, 1540, 1541, 1547, 1555, 1556, 1564,
	1566, 0, 1595, 1598, 1607, 1612, 1615, 1621, 1623, 1630,
	1635, 1637, 1675, 1683, 1688, 347, 196, 1537, 1563, 1602,
	169, 176, 183, 195, 203, 209, 220, 223, 227, 228,
	230, 233, 245, 247, 248, 249, 250, 266, 267, 270,
	271, 274, 275, 278, 279, 280, 282, 283, 289, 0,
	295, 301, 302, 303, 304, 305, 312, 313, 314, 315,
	322, 338, 339, 352, 353, 1649, 1510, 155, 0, 0,
	161, 0, 0, 0, 0, 0, 1495, 160, 1644, 1680,
	1576, 1590, 1661, 1622, 328, 1513, 1665, 1463, 1492, 1682,
	1498, 1501, 1584, 1428, 1551, 273, 1489, 1429, 1411, 1468,
	1415, 1480, 1416, 1465, 199, 1461, 1625, 1554, 1663, 1533,
	1577, 1587, 198, 190, 1543, 1542, 1651, 1478, 1477, 1582,
	1639, 1662, 1532, 0, 1672, 240, 1636, 0, 350, 320,
	257, 0, 0, 1528, 1645, 1549, 1614, 1511, 1586, 1445,
	1569, 1667, 1490, 1578, 1668, 0, 0, 0, 0, 929,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1574, 1659, 1483, 0, 1523, 1583, 1687, 1414, 1570,
	0, 1420, 1431, 1681, 1652, 1474, 1475, 202, 0, 0,
	0, 0, 0, 0, 0, 1526, 1550, 1604, 1508, 345,
	1589, 1599, 1617, 1500, 288, 215, 0, 0, 0, 0,
	0, 0, 2477, 0, 1470, 0, 1567, 0, 0, 0,
	1436, 1422, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1522, 0, 0, 0, 1444, 1412,
	1472, 1606, 1413, 1410, 258, 1432, 1619, 1650, 1509, 231,
	0, 1656, 1507, 1506, 1593, 1437, 1629, 1493, 238, 1435,
	154, 1430, 1438, 1491, 269, 1603, 1611, 0, 157, 1626,
	1466, 1482, 191, 0, 298, 1579, 344, 0, 1559, 297,
	241, 337, 1594, 1658, 343, 1494, 327, 351, 355, 208,
	1534, 182, 317, 200, 197, 1473, 1616, 1419, 216, 287,
	194, 234, 1512, 1585, 1467, 187, 1597, 1568, 1631, 316,
	334, 159, 255, 335, 354, 174, 329, 256, 262, 184,
	186, 185, 170, 311, 333, 179, 189, 1627, 1610, 1633,
	1460, 1439, 1451, 1440, 1481, 1660, 226, 217, 1634, 1632,
	348, 0, 307, 306, 1497, 225, 1613, 0, 0, 294,
	0, 232, 162, 1638, 357, 173, 236, 330, 0, 211,
	268, 193, 1581, 277, 1479, 156, 290, 252, 253, 251,
	254, 214, 0, 0, 1609, 292, 309, 332, 175, 323,
	0, 0, 0, 0, 300, 0, 0, 1666, 246, 204,
	207, 219, 229, 1580, 296, 324, 349, 1571, 171, 164,
	326, 342, 180, 308, 310, 356, 1605, 166, 1654, 1628,
	1561, 1515, 1521, 1421, 0, 165, 1601, 1471, 1486, 1459,
	1575, 1458, 213, 1592, 340, 341, 192, 358, 1433, 1674,
	167, 1434, 1673, 265, 272, 264, 1677, 336, 1655, 1562,
	1546, 1544, 1426, 1653, 1560, 1545, 237, 206, 221, 285,
	243, 286, 222, 260, 259, 261, 244, 1548, 0, 163,
	0, 321, 1664, 1689, 325, 177, 1453, 1620, 331, 218,
	291, 178, 212, 205, 284, 263, 172, 224, 319, 235,
	242, 1596, 1686, 276, 299, 181, 346, 318, 201, 1449,
	1452, 1447, 1450, 1448, 1552, 1553, 1669, 1670, 1671, 1608,
	1441, 0, 1646, 1647, 0, 1539, 1657, 1427, 0, 1624,
	0, 0, 1588, 1684, 1499, 188, 1418, 1423, 1424, 1425,
	1442, 1529, 1530, 1558, 1565, 1642, 1641, 1640, 1643, 1648,
	1678, 1676, 1679, 1443, 1464, 1485, 1535, 1536, 1538, 1572,
	1573, 1618, 1591, 1600, 1531, 281, 1557, 158, 168, 239,
	1685, 293, 210, 1409, 1417, 1446, 1454, 1455, 1456, 1457,
	1462, 1469, 0, 1476, 1484, 1487, 1488, 1496, 1502, 1503,
	1504, 1505, 1514, 1516, 1517, 1518, 1519, 1520, 1524, 1525,
	1527, 1540, 1541, 1547, 1555, 1556, 1564, 1566, 0, 1595,
	1598, 1607, 1612, 1615, 1621, 1623, 1630, 1635, 1637, 1675,
	1683, 1688, 347, 196, 1537, 1563, 1602, 169, 176, 183,
	195, 203, 209, 220, 223, 227, 228, 230, 233, 245,
	247, 248, 249, 250, 266, 267, 270, 271, 274, 275,
	278, 279, 280, 282, 283, 289, 0, 295, 301, 302,
	303, 304, 305, 312, 313, 314, 315, 322, 338, 339,
	352, 353, 1649, 1510, 155, 0, 0, 161, 0, 0,
	0, 0, 0, 1495, 160, 1644, 1680, 1576, 1590, 1661,
	1622, 328, 1513, 1665, 1463, 1492, 1682, 1498, 1501, 1584,
	1428, 1551, 273, 1489, 1429, 1411, 1468, 1415, 1480, 1416,
	1465, 199, 1461, 1625, 1554, 1663, 1533, 1577, 1587, 198,
	190, 1543, 1542, 1651, 1478, 1477, 1582, 1639, 1662, 1532,
	0, 1672, 240, 1636, 0, 350, 320, 257, 0, 0,
	1528, 1645, 1549, 1614, 1511, 1586, 1445, 1569, 1667, 1490,
	1578, 1668, 0, 0, 0, 0, 129, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1574, 1659,
	1483, 0, 1523, 1583, 1687, 1414, 1570, 0, 1420, 1431,
	1681, 1652, 1474, 1475, 202, 0, 0, 0, 0, 0,
	0, 0, 1526, 1550, 1604, 1508, 345, 1589, 1599, 1617,
	1500, 288, 215, 0, 0, 0, 0, 0, 0, 2299,
	0, 1470, 0, 1567, 0, 0, 0, 1436, 1422, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1522, 0, 0, 0, 1444, 1412, 1472, 1606, 1413,
	1410, 258, 1432, 1619, 1650, 1509, 231, 0, 1656, 1507,
	1506, 1593, 1437, 1629, 1493, 238, 1435, 154, 1430, 1438,
	1491, 269, 1603, 1611, 0, 157, 1626, 1466, 1482, 191,
	0, 298, 1579, 344, 0, 1559, 297, 241, 337, 1594,
	1658, 343, 1494, 327, 351, 355, 208, 1534, 182, 317,
	200, 197, 1473, 1616, 1419, 216, 287, 194, 234, 1512,
	1585, 1467, 187, 1597, 1568, 1631, 316, 334, 159, 255,
	335, 354, 174, 329, 256, 262, 184, 186, 185, 170,
	311, 333, 179, 189, 1627, 1610, 1633, 1460, 1439, 1451,
	1440, 1481, 1660, 226, 217, 1634, 1632, 348, 0, 307,
	306, 1497, 225, 1613, 0, 0, 294, 0, 232, 162,
	1638, 357, 173, 236, 330, 0, 211, 268, 193, 1581,
	277, 1479, 156, 290, 252, 253, 251, 254, 214, 0,
	0, 1609, 292, 309, 332, 175, 323, 0, 0, 0,
	0, 300, 0, 0, 1666, 246, 204, 207, 219, 229,
	1580, 296, 324, 349, 1571, 171, 164, 326, 342, 180,
	308, 310, 356, 1605, 166, 1654, 1628, 1561, 1515, 1521,
	1421, 0, 165, 1601, 1471, 1486, 1459, 1575, 1458, 213,
	1592, 340, 341, 192, 358, 1433, 1674, 167, 1434, 1673,
	265, 272, 264, 1677, 336, 1655, 1562, 1546, 1544, 1426,
	1653, 1560, 1545, 237, 206, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 1548, 0, 163, 0, 321, 1664,
	1689, 325, 177, 1453, 1620, 331, 218, 291, 178, 212,
	205, 284, 263, 172, 224, 319, 235, 242, 1596, 1686,
	276, 299, 181, 346, 318, 201, 1449, 1452, 1447, 1450,
	1448, 1552, 1553, 1669, 1670, 1671, 1608, 1441, 0, 1646,
	1647, 0, 1539, 1657, 1427, 0, 1624, 0, 0, 1588,
	1684, 1499, 188, 1418, 1423, 1424, 1425, 1442, 1529, 1530,
	1558, 1565, 1642, 1641, 1640, 1643, 1648, 1678, 1676, 1679,
	1443, 1464, 1485, 1535, 1536, 1538, 1572, 1573, 1618, 1591,
	1600, 1531, 281, 1557, 158, 168, 239, 1685, 293, 210,
	1409, 1417, 1446, 1454, 1455, 1456, 1457, 1462, 1469, 0,
	1476, 1484, 1487, 1488, 1496, 1502, 1503, 1504, 1505, 1514,
	1516, 1517, 1518, 1519, 1520, 1524, 1525, 1527, 1540, 1541,
	1547, 1555, 1556, 1564, 1566, 0, 1595, 1598, 1607, 1612,
	1615, 1621, 1623, 1630, 1635, 1637, 1675, 1683, 1688, 347,
	196, 1537, 1563, 1602, 169, 176, 183, 195, 203, 209,
	220, 223, 227, 228, 230, 233, 245, 247, 248, 249,
	250, 266, 267, 270, 271, 274, 275, 278, 279, 280,
	282, 283, 289, 0, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 1649,
	1510, 155, 0, 0, 161, 0, 0, 0, 0, 0,
	1495, 160, 1644, 1680, 1576, 1590, 1661, 1622, 328, 1513,
	1665, 1463, 1492, 1682, 1498, 1501, 1584, 1428, 1551, 273,
	1489, 1429, 1411, 1468, 1415, 1480, 1416, 1465, 199, 1461,
	1625, 1554, 1663, 1533, 1577, 1587, 198, 190, 1543, 1542,
	1651, 1478, 1477, 1582, 1639, 1662, 1532, 0, 1672, 240,
	1636, 0, 350, 320, 257, 0, 0, 1528, 1645, 1549,
	1614, 1511, 1586, 1445, 1569, 1667, 1490, 1578, 1668, 0,
	0, 0, 0, 929, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1574, 1659, 1483, 0, 1523,
	1583, 1687, 1414, 1570, 0, 1420, 1431, 1681, 1652, 1474,
	1475, 202, 0, 0, 0, 0, 0, 0, 0, 1526,
	1550, 1604, 1508, 345, 1589, 1599, 1617, 1500, 288, 215,
	0, 0, 0, 0, 0, 0, 0, 0, 1470, 0,
	1567, 0, 0, 0, 1436, 1422, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1522, 0,
	0, 0, 1444, 1412, 1472, 1606, 1413, 1410, 258, 1432,
	1619, 1650, 1509, 231, 0, 1656, 1507, 1506, 1593, 1437,
	1629, 1493, 238, 1435, 154, 1430, 1438, 1491, 269, 1603,
	1611, 0, 157, 1626, 1466, 1482, 191, 0, 298, 1579,
	344, 0, 1559, 297, 241, 337, 1594, 1658, 343, 1494,
	327, 351, 355, 208, 1534, 182, 317, 200, 197, 1473,
	1616, 1419, 216, 287, 194, 234, 1512, 1585, 1467, 187,
	1597, 1568, 1631, 316, 334, 159, 255, 335, 354, 174,
	329, 256, 262, 184, 186, 185, 170, 311, 333, 179,
	189, 1627, 1610, 1633, 1460, 1439, 1451, 1440, 1481, 1660,
	226, 217, 1634, 1632, 348, 0, 307, 306, 1497, 225,
	1613, 0, 0, 294, 0, 232, 162, 1638, 357, 173,
	236, 330, 0, 211, 268, 193, 1581, 277, 1479, 156,
	290, 252, 253, 251, 254, 214, 0, 0, 1609, 292,
	309, 332, 175, 323, 0, 0, 0, 0, 300, 0,
	0, 1666, 246, 204, 207, 219, 229, 1580, 296, 324,
	349, 1571, 171, 164, 326, 342, 180, 308, 310, 356,
	1605, 166, 1654, 1628, 1561, 1515, 1521, 1421, 0, 165,
	1601, 1471, 1486, 1459, 1575, 1458, 213, 1592, 340, 341,
	192, 358, 1433, 1674, 167, 1434, 1673, 265, 272, 264,
	1677, 336, 1655, 1562, 1546, 1544, 1426, 1653, 1560, 1545,
	237, 206, 221, 285, 243, 286, 222, 260, 259, 261,
	244, 1548, 0, 163, 0, 321, 1664, 1689, 325, 177,
	1453, 1620, 331, 218, 291, 178, 212, 205, 284, 263,
	172, 224, 319, 235, 242, 1596, 1686, 276, 299, 181,
	346, 318, 201, 1449, 1452, 1447, 1450, 1448, 1552, 1553,
	1669, 1670, 1671, 1608, 1441, 0, 1646, 1647, 0, 1539,
	1657, 1427, 0, 1624, 0, 0, 1588, 1684, 1499, 188,
	1418, 1423, 1424, 1425, 1442, 1529, 1530, 1558, 1565, 1642,
	1641, 1640, 1643, 1648, 1678, 1676, 1679, 1443, 1464, 1485,
	1535, 1536, 1538, 1572, 1573, 1618, 1591, 1600, 1531, 281,
	1557, 158, 168, 239, 1685, 293, 210, 1409, 1417, 1446,
	1454, 1455, 1456, 1457, 1462, 1469, 0, 1476, 1484, 1487,
	1488, 1496, 1502, 1503, 1504, 1505, 1514, 1516, 1517, 1518,
	1519, 1520, 1524, 1525, 1527, 1540, 1541, 1547, 1555, 1556,
	1564, 1566, 0, 1595, 1598, 1607, 1612, 1615, 1621, 1623,
	1630, 1635, 1637, 1675, 1683, 1688, 347, 196, 1537, 1563,
	1602, 169, 176, 183, 195, 203, 209, 220, 223, 227,
	228, 230, 233, 245, 247, 248, 249, 250, 266, 267,
	270, 271, 274, 275, 278, 279, 280, 282, 283, 289,
	0, 295, 301, 302, 303, 304, 305, 312, 313, 314,
	315, 322, 338, 339, 352, 353, 1649, 1510, 155, 0,
	0, 161, 0, 0, 0, 0, 0, 1495, 160, 1644,
	1680, 1576, 1590, 1661, 1622, 328, 1513, 1665, 1463, 1492,
	1682, 1498, 1501, 1584, 1428, 1551, 273, 1489, 1429, 1411,
	1468, 1415, 1480, 1416, 1465, 199, 1461, 1625, 1554, 1663,
	1533, 1577, 1587, 198, 190, 1543, 1542, 1651, 1478, 1477,
	1582, 1639, 1662, 1532, 0, 1672, 240, 1636, 0, 350,
	320, 257, 0, 0, 1528, 1645, 1549, 1614, 1511, 1586,
	1445, 1569, 1667, 1490, 1578, 1668, 0, 0, 0, 0,
	3244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1574, 1659, 1483, 0, 1523, 1583, 1687, 1414,
	1570, 0, 1420, 1431, 1681, 1652, 1474, 1475, 202, 0,
	0, 0, 0, 0, 0, 0, 1526, 1550, 1604, 1508,
	345, 1589, 1599, 1617, 1500, 288, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 1470, 0, 1567, 0, 0,
	0, 1436, 1422, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1522, 0, 0, 0, 1444,
	1412, 1472, 1606, 1413, 1410, 258, 1432, 1619, 1650, 1509,
	231, 0, 1656, 1507, 1506, 1593, 1437, 1629, 1493, 238,
	1435, 154, 1430, 1438, 1491, 269, 1603, 1611, 0, 157,
	1626, 1466, 1482, 191, 0, 298, 1579, 344, 0, 1559,
	297, 241, 337, 1594, 1658, 343, 1494, 327, 351, 355,
	208, 1534, 182, 317, 200, 197, 1473, 1616, 1419, 216,
	287, 194, 234, 1512, 1585, 1467, 187, 1597, 1568, 1631,
	316, 334, 159, 255, 335, 354, 174, 329, 256, 262,
	184, 186, 185, 170, 311, 333, 179, 189, 1627, 1610,
	1633, 1460, 1439, 1451, 3247, 3248, 3249, 226, 217, 1634,
	1632, 348, 0, 307, 306, 1497, 225, 1613, 0, 0,
	294, 0, 232, 162, 1638, 357, 173, 236, 330, 0,
	211, 268, 193, 1581, 277, 1479, 156, 290, 252, 253,
	251, 254, 214, 0, 0, 1609, 292, 309, 332, 175,
	323, 0, 0, 0, 0, 300, 0, 0, 1666, 246,
	204, 207, 219, 229, 1580, 296, 324, 349, 1571, 171,
	164, 326, 342, 180, 308, 310, 356, 1605, 166, 1654,
	1628, 1561, 1515, 1521, 1421, 0, 165, 1601, 1471, 1486,
	1459, 1575, 1458, 213, 1592, 340, 341, 192, 358, 1433,
	1674, 167, 1434, 1673, 265, 272, 264, 1677, 336, 1655,
	1562, 1546, 1544, 1426, 1653, 1560, 1545, 237, 206, 221,
	285, 243, 286, 222, 260, 259, 261, 244, 1548, 0,
	163, 0, 321, 1664, 1689, 325, 177, 1453, 1620, 331,
	218, 291, 178, 212, 205, 284, 263, 172, 224, 319,
	235, 242, 1596, 1686, 276, 299, 181, 346, 318, 201,
	1449, 1452, 1447, 1450, 1448, 1552, 1553, 1669, 1670, 1671,
	1608, 1441, 0, 1646, 1647, 0, 1539, 1657, 1427, 0,
	1624, 0, 0, 1588, 1684, 1499, 188, 1418, 1423, 1424,
	1425, 1442, 1529, 1530, 1558, 1565, 1642, 1641, 1640, 1643,
	1648, 1678, 1676, 1679, 1443, 1464, 1485, 1535, 1536, 1538,
	1572, 1573, 1618, 1591, 1600, 1531, 281, 1557, 158, 168,
	239, 1685, 293, 210, 1409, 1417, 1446, 1454, 1455, 1456,
	1457, 1462, 1469, 0, 1476, 1484, 1487, 1488, 1496, 1502,
	1503, 1504, 1505, 1514, 1516, 1517, 1518, 1519, 1520, 1524,
	1525, 1527, 1540, 1541, 1547, 1555, 1556, 1564, 1566, 0,
	1595, 1598, 1607, 1612, 1615, 1621, 1623, 1630, 1635, 1637,
	1675, 1683, 1688, 347, 196, 1537, 1563, 1602, 169, 176,
	183, 195, 203, 209, 220, 223, 227, 228, 230, 233,
	245, 247, 248, 249, 250, 266, 267, 270, 271, 274,
	275, 278, 279, 280, 282, 283, 289, 0, 295, 301,
	302, 303, 304, 305, 312, 313, 314, 315, 322, 338,
	339, 352, 353, 1649, 1510, 155, 0, 0, 161, 0,
	0, 0, 0, 0, 1495, 160, 1644, 1680, 1576, 1590,
	1661, 1622, 328, 1513, 1665, 1463, 1492, 1682, 1498, 1501,
	1584, 1428, 1551, 273, 1489, 1429, 1411, 1468, 1415, 1480,
	1416, 1465, 199, 1461, 1625, 1554, 1663, 1533, 1577, 1587,
	198, 190, 1543, 1542, 1651, 1478, 1477, 1582, 1639, 1662,
	1532, 0, 1672, 240, 1636, 0, 350, 320, 257, 0,
	0, 1528, 1645, 1549, 1614, 1511, 1586, 1445, 1569, 1667,
	1490, 1578, 1668, 0, 0, 0, 0, 129, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1574,
	1659, 1483, 0, 1523, 1583, 1687, 1414, 1570, 0, 1420,
	1431, 1681, 1652, 1474, 1475, 202, 0, 0, 0, 0,
	0, 0, 0, 1526, 1550, 1604, 1508, 345, 1589, 1599,
	1617, 1500, 288, 215, 0, 0, 0, 0, 0, 0,
	0, 0, 1470, 0, 1567, 0, 0, 0, 1436, 1422,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1522, 0, 0, 0, 1444, 1412, 1472, 1606,
	1413, 1410, 258, 1432, 1619, 1650, 1509, 231, 0, 1656,
	1507, 1506, 1593, 1437, 1629, 1493, 238, 1435, 154, 1430,
	1438, 1491, 269, 1603, 1611, 0, 157, 1626, 1466, 1482,
	191, 0, 298, 1579, 344, 0, 1559, 297, 241, 337,
	1594, 1658, 343, 1494, 327, 351, 355, 208, 1534, 182,
	317, 200, 197, 1473, 1616, 1419, 216, 287, 194, 234,
	1512, 1585, 1467, 187, 1597, 1568, 1631, 316, 334, 159,
	255, 335, 354, 174, 329, 256, 262, 184, 186, 185,
	170, 311, 333, 179, 189, 1627, 1610, 1633, 1460, 1439,
	1451, 1440, 1481, 1660, 226, 217, 1634, 1632, 348, 0,
	307, 306, 1497, 225, 1613, 0, 0, 294, 0, 232,
	162, 1638, 357, 173, 236, 330, 0, 211, 268, 193,
	1581, 277, 1479, 156, 290, 252, 253, 251, 254, 214,
	0, 0, 1609, 292, 309, 332, 175, 323, 0, 0,
	0, 0, 300, 0, 0, 1666, 246, 204, 207, 219,
	229, 1580, 296, 324, 349, 1571, 171, 164, 326, 342,
	180, 308, 310, 356, 1605, 166, 1654, 1628, 1561, 1515,
	1521, 1421, 0, 165, 1601, 1471, 1486, 1459, 1575, 1458,
	213, 1592, 340, 341, 192, 358, 1433, 1674, 167, 1434,
	1673, 265, 272, 264, 1677, 336, 1655, 1562, 1546, 1544,
	1426, 1653, 1560, 1545, 237, 206, 221, 285, 243, 286,
	222, 260, 259, 261, 244, 1548, 0, 163, 0, 321,
	1664, 1689, 325, 177, 1453, 1620, 331, 218, 291, 178,
	212, 205, 284, 263, 172, 224, 319, 235, 242, 1596,
	1686, 276, 299, 181, 346, 318, 201, 1449, 1452, 1447,
	1450, 1448, 1552, 1553, 1669, 1670, 1671, 1608, 1441, 0,
	1646, 1647, 0, 1539, 1657, 1427, 0, 1624, 0, 0,
	1588, 1684, 1499, 188, 1418, 1423, 1424, 1425, 1442, 1529,
	1530, 1558, 1565, 1642, 1641, 1640, 1643, 1648, 1678, 1676,
	1679, 1443, 1464, 1485, 1535, 1536, 1538, 1572, 1573, 1618,
	1591, 1600, 1531, 281, 1557, 158, 168, 239, 1685, 293,
	210, 1409, 1417, 1446, 1454, 1455, 1456, 1457, 1462, 1469,
	0, 1476, 1484, 1487, 1488, 1496, 1502, 1503, 1504, 1505,
	1514, 1516, 1517, 1518, 1519, 1520, 1524, 1525, 1527, 1540,
	1541, 1547, 1555, 1556, 1564, 1566, 0, 1595, 1598, 1607,
	1612, 1615, 1621, 1623, 1630, 1635, 1637, 1675, 1683, 1688,
	347, 196, 1537, 1563, 1602, 169, 176, 183, 195, 203,
	209, 220, 223, 227, 228, 230, 233, 245, 247, 248,
	249, 250, 266, 267, 270, 271, 274, 275, 278, 279,
	280, 282, 283, 289, 0, 295, 301, 302, 303, 304,
	305, 312, 313, 314, 315, 322, 338, 339, 352, 353,
	1649, 1510, 155, 0, 0, 161, 328, 0, 0, 0,
	0, 1495, 160, 1644, 1680, 1576, 1590, 273, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 0, 0, 0,
	0, 0, 0, 0, 198, 190, 0, 0, 0, 0,
	0, 0, 0, 2003, 2007, 0, 0, 240, 0, 933,
	350, 320, 257, 936, 935, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 929, 0, 0, 0, 0, 0, 0, 0, 0,
	137, 0, 0, 0, 0, 0, 934, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 0, 0, 0, 288, 215, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	2006, 231, 153, 0, 0, 0, 2000, 0, 2001, 2002,
	238, 937, 154, 0, 1998, 2005, 269, 0, 0, 142,
	157, 0, 0, 0, 191, 926, 298, 0, 344, 932,
	0, 297, 241, 337, 0, 0, 343, 0, 327, 351,
	355, 208, 0, 182, 317, 200, 197, 0, 0, 0,
	216, 287, 194, 234, 0, 0, 0, 187, 0, 0,
	0, 316, 334, 159, 255, 335, 354, 174, 329, 256,
	262, 184, 186, 185, 170, 311, 333, 179, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 217,
	0, 0, 348, 143, 307, 306, 0, 225, 0, 144,
	136, 294, 145, 232, 162, 0, 357, 173, 236, 330,
	931, 211, 268, 193, 0, 277, 0, 156, 290, 252,
	253, 251, 254, 214, 140, 146, 0, 292, 309, 332,
	175, 323, 138, 139, 141, 148, 300, 149, 150, 0,
	246, 204, 207, 219, 229, 0, 296, 324, 349, 0,
	171, 164, 326, 342, 180, 308, 310, 356, 0, 166,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 0, 213, 0, 340, 341, 192, 358,
	0, 0, 167, 0, 0, 265, 272, 264, 0, 336,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 206,
	221, 285, 243, 286, 222, 260, 259, 261, 244, 0,
	0, 163, 0, 321, 0, 0, 325, 177, 0, 0,
	331, 218, 291, 178, 212, 205, 284, 263, 172, 224,
	319, 235, 242, 0, 0, 276, 299, 181, 346, 318,
	201, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 1144, 0, 0,
	0, 199, 151, 152, 0, 0, 0, 188, 131, 198,
	190, 0, 132, 0, 0, 133, 134, 0, 0, 0,
	0, 135, 240, 0, 933, 350, 320, 257, 936, 935,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 158,
	168, 239, 0, 293, 210, 0, 1145, 0, 1148, 0,
	0, 0, 0, 0, 0, 137, 0, 0, 0, 0,
	0, 934, 0, 1140, 1141, 1139, 0, 0, 0, 0,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 1142, 0, 0, 0, 345, 0, 0, 0,
	0, 288, 215, 0, 347, 196, 0, 0, 0, 169,
	176, 183, 195, 203, 209, 220, 223, 227, 228, 230,
	233, 245, 247, 248, 249, 250, 266, 267, 270, 271,
	274, 275, 278, 279, 280, 282, 283, 289, 147, 295,
	301, 302, 303, 304, 305, 312, 313, 314, 315, 322,
	338, 339, 352, 353, 0, 0, 155, 0, 0, 161,
	0, 0, 0, 0, 0, 0, 160, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 231, 153, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 154, 0, 0,
	0, 269, 0, 0, 142, 157, 0, 0, 0, 191,
	0, 298, 0, 344, 932, 0, 297, 241, 337, 0,
	0, 343, 0, 327, 351, 355, 208, 0, 182, 317,
	200, 197, 0, 0, 0, 216, 287, 194, 234, 0,
	0, 0, 187, 0, 0, 0, 316, 334, 159, 255,
	335, 354, 174, 329, 256, 262, 184, 186, 185, 170,
	311, 333, 179, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 217, 0, 0, 348, 143, 307,
	306, 0, 225, 0, 144, 136, 294, 145, 232, 162,
	0, 357, 173, 236, 330, 931, 211, 268, 193, 0,
	277, 0, 156, 290, 252, 253, 251, 254, 214, 140,
	146, 0, 292, 309, 332, 175, 323, 138, 139, 141,
	148, 300, 149, 150, 0, 246, 204, 207, 219, 229,
	0, 296, 324, 349, 0, 171, 164, 326, 342, 180,
	308, 310, 356, 0, 166, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 0, 213,
	0, 340, 341, 192, 358, 0, 0, 167, 0, 0,
	265, 272, 264, 0, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 206, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 0, 0, 163, 0, 321, 0,
	0, 325, 177, 0, 0, 331, 218, 291, 178, 212,
	205, 284, 263, 172, 224, 319, 235, 242, 0, 0,
	276, 299, 181, 346, 318, 201, 328, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 151, 152, 0,
	0, 0, 188, 131, 198, 190, 0, 132, 0, 0,
	133, 134, 0, 0, 0, 0, 135, 240, 0, 933,
	350, 320, 257, 936, 935, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 158, 168, 239, 0, 293, 210,
	0, 929, 0, 0, 0, 0, 0, 0, 0, 0,
	137, 0, 0, 0, 0, 0, 934, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 0, 0, 0, 288, 215, 0, 347,
	196, 0, 0, 0, 169, 176, 183, 195, 203, 209,
	220, 223, 227, 228, 230, 233, 245, 247, 248, 249,
	250, 266, 267, 270, 271, 274, 275, 278, 279, 280,
	282, 283, 289, 147, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 0,
	0, 155, 0, 0, 161, 0, 0, 0, 0, 0,
	0, 160, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 231, 153, 0, 0, 0, 0, 0, 0, 0,
	238, 937, 154, 0, 927, 0, 269, 0, 0, 142,
	157, 0, 0, 0, 191, 926, 298, 0, 344, 932,
	0, 297, 241, 337, 0, 0, 343, 0, 327, 351,
	355, 208, 0, 182, 317, 200, 197, 0, 0, 0,
	216, 287, 194, 234, 0, 0, 0, 187, 0, 0,
	0, 316, 334, 159, 255, 335, 354, 174, 329, 256,
	262, 184, 186, 185, 170, 311, 333, 179, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 217,
	0, 0, 348, 143, 307, 306, 0, 225, 0, 144,
	136, 294, 145, 232, 162, 0, 357, 173, 236, 330,
	931, 211, 268, 193, 0, 277, 0, 156, 290, 252,
	253, 251, 254, 214, 140, 146, 0, 292, 309, 332,
	175, 323, 138, 139, 141, 148, 300, 149, 150, 0,
	246, 204, 207, 219, 229, 0, 296, 324, 349, 0,
	171, 164, 326, 342, 180, 308, 310, 356, 0, 166,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 0, 213, 0, 340, 341, 192, 358,
	0, 0, 167, 0, 0, 265, 272, 264, 0, 336,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 206,
	221, 285, 243, 286, 222, 260, 259, 261, 244, 0,
	0, 163, 0, 321, 0, 0, 325, 177, 0, 0,
	331, 218, 291, 178, 212, 205, 284, 263, 172, 224,
	319, 235, 242, 0, 0, 276, 299, 181, 346, 318,
	201, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 199, 151, 152, 0, 0, 0, 188, 131, 198,
	190, 0, 132, 0, 0, 133, 134, 0, 0, 0,
	0, 135, 240, 0, 933, 350, 320, 257, 936, 935,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 158,
	168, 239, 0, 293, 210, 0, 1145, 0, 1148, 0,
	0, 0, 0, 0, 0, 137, 0, 0, 0, 0,
	0, 934, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	0, 288, 215, 0, 347, 196, 0, 0, 0, 169,
	176, 183, 195, 203, 209, 220, 223, 227, 228, 230,
	233, 245, 247, 248, 249, 250, 266, 267, 270, 271,
	274, 275, 278, 279, 280, 282, 283, 289, 147, 295,
	301, 302, 303, 304, 305, 312, 313, 314, 315, 322,
	338, 339, 352, 353, 0, 0, 155, 0, 0, 161,
	0, 0, 0, 0, 0, 0, 160, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 231, 153, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 154, 0, 0,
	0, 269, 0, 0, 142, 157, 0, 0, 0, 191,
	1826, 298, 0, 344, 932, 0, 297, 241, 337, 0,
	0, 343, 0, 327, 351, 355, 208, 0, 182, 317,
	200, 197, 0, 0, 0, 216, 287, 194, 234, 0,
	0, 0, 187, 0, 0, 0, 316, 334, 159, 255,
	335, 354, 174, 329, 256, 262, 184, 186, 185, 170,
	311, 333, 179, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 217, 0, 0, 348, 143, 307,
	306, 0, 225, 0, 144, 136, 294, 145, 232, 162,
	0, 357, 173, 236, 330, 931, 211, 268, 193, 0,
	277, 0, 156, 290, 252, 253, 251, 254, 214, 140,
	146, 0, 292, 309, 332, 175, 323, 138, 139, 141,
	148, 300, 149, 150, 0, 246, 204, 207, 219, 229,
	0, 296, 324, 349, 0, 171, 164, 326, 342, 180,
	308, 310, 356, 0, 166, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 0, 213,
	0, 340, 341, 192, 358, 0, 0, 167, 0, 0,
	265, 272, 264, 0, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 206, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 0, 0, 163, 0, 321, 0,
	0, 325, 177, 0, 0, 331, 218, 291, 178, 212,
	205, 284, 263, 172, 224, 319, 235, 242, 0, 0,
	276, 299, 181, 346, 318, 201, 328, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 151, 152, 0,
	0, 0, 188, 131, 198, 190, 0, 132, 0, 0,
	133, 134, 0, 0, 0, 0, 135, 240, 0, 933,
	350, 320, 257, 936, 935, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 158, 168, 239, 0, 293, 210,
	0, 2711, 0, 0, 0, 0, 0, 0, 0, 0,
	137, 0, 0, 0, 0, 0, 934, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 0, 0, 0, 288, 215, 0, 347,
	196, 0, 0, 0, 169, 176, 183, 195, 203, 209,
	220, 223, 227, 228, 230, 233, 245, 247, 248, 249,
	250, 266, 267, 270, 271, 274, 275, 278, 279, 280,
	282, 283, 289, 147, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 0,
	0, 155, 0, 0, 161, 0, 0, 0, 0, 0,
	0, 160, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 231, 153, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 154, 0, 0, 0, 269, 0, 0, 142,
	157, 0, 0, 0, 191, 0, 298, 0, 344, 932,
	0, 297, 241, 337, 0, 0, 343, 0, 327, 351,
	355, 208, 0, 182, 317, 200, 197, 0, 0, 0,
	216, 287, 194, 234, 0, 0, 0, 187, 0, 0,
	0, 316, 334, 159, 255, 335, 354, 174, 329, 256,
	262, 184, 186, 185, 170, 311, 333, 179, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 217,
	0, 0, 348, 143, 307, 306, 0, 225, 0, 144,
	136, 294, 145, 232, 162, 0, 357, 173, 236, 330,
	931, 211, 268, 193, 0, 277, 0, 156, 290, 252,
	253, 251, 254, 214, 140, 146, 0, 292, 309, 332,
	175, 323, 138, 139, 141, 148, 300, 149, 150, 0,
	246, 204, 207, 219, 229, 0, 296, 324, 349, 0,
	171, 164, 326, 342, 180, 308, 310, 356, 0, 166,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 0, 213, 0, 340, 341, 192, 358,
	0, 0, 167, 0, 0, 265, 272, 264, 0, 336,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 206,
	221, 285, 243, 286, 222, 260, 259, 261, 244, 0,
	0, 163, 0, 321, 0, 0, 325, 177, 0, 0,
	331, 218, 291, 178, 212, 205, 284, 263, 172, 224,
	319, 235, 242, 0, 0, 276, 299, 181, 346, 318,
	201, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 199, 151, 152, 0, 0, 0, 188, 131, 198,
	190, 0, 132, 0, 0, 133, 134, 0, 0, 0,
	0, 135, 240, 0, 933, 350, 320, 257, 936, 935,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 158,
	168, 239, 0, 293, 210, 0, 2706, 0, 0, 0,
	0, 0, 0, 0, 0, 137, 0, 0, 0, 0,
	0, 934, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	0, 288, 215, 0, 347, 196, 0, 0, 0, 169,
	176, 183, 195, 203, 209, 220, 223, 227, 228, 230,
	233, 245, 247, 248, 249, 250, 266, 267, 270, 271,
	274, 275, 278, 279, 280, 282, 283, 289, 147, 295,
	301, 302, 303, 304, 305, 312, 313, 314, 315, 322,
	338, 339, 352, 353, 0, 0, 155, 0, 0, 161,
	0, 0, 0, 0, 0, 0, 160, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 231, 153, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 154, 0, 0,
	0, 269, 0, 0, 142, 157, 0, 0, 0, 191,
	0, 298, 0, 344, 932, 0, 297, 241, 337, 0,
	0, 343, 0, 327, 351, 355, 208, 0, 182, 317,
	200, 197, 0, 0, 0, 216, 287, 194, 234, 0,
	0, 0, 187, 0, 0, 0, 316, 334, 159, 255,
	335, 354, 174, 329, 256, 262, 184, 186, 185, 170,
	311, 333, 179, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 217, 0, 0, 348, 143, 307,
	306, 0, 225, 0, 144, 136, 294, 145, 232, 162,
	0, 357, 173, 236, 330, 931, 211, 268, 193, 0,
	277, 0, 156, 290, 252, 253, 251, 254, 214, 140,
	146, 0, 292, 309, 332, 175, 323, 138, 139, 141,
	148, 300, 149, 150, 0, 246, 204, 207, 219, 229,
	0, 296, 324, 349, 0, 171, 164, 326, 342, 180,
	308, 310, 356, 0, 166, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 0, 213,
	0, 340, 341, 192, 358, 0, 0, 167, 0, 0,
	265, 272, 264, 0, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 206, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 0, 0, 163, 0, 321, 0,
	0, 325, 177, 0, 0, 331, 218, 291, 178, 212,
	205, 284, 263, 172, 224, 319, 235, 242, 0, 0,
	276, 299, 181, 346, 318, 201, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 151, 152, 0,
	0, 0, 188, 131, 0, 0, 0, 132, 0, 0,
	133, 134, 0, 0, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 158, 168, 239, 0, 293, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	196, 0, 0, 0, 169, 176, 183, 195, 203, 209,
	220, 223, 227, 228, 230, 233, 245, 247, 248, 249,
	250, 266, 267, 270, 271, 274, 275, 278, 279, 280,
	282, 283, 289, 147, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 0,
	0, 155, 36, 328, 161, 0, 0, 0, 0, 0,
	0, 160, 0, 0, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 199, 0, 0, 0, 0, 0, 0,
	0, 198, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2281, 240, 0, 0, 350, 320, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 77, 0, 0, 0, 1958, 0,
	0, 0, 0, 0, 0, 0, 0, 137, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 0, 288, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 231, 153,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 154,
	0, 0, 0, 269, 0, 0, 142, 157, 0, 0,
	0, 191, 0, 298, 0, 344, 0, 0, 297, 241,
	337, 0, 0, 343, 0, 327, 351, 355, 208, 0,
	182, 317, 200, 197, 0, 0, 0, 216, 287, 194,
	234, 0, 0, 0, 187, 0, 0, 0, 316, 334,
	159, 255, 335, 354, 174, 329, 256, 262, 184, 186,
	185, 170, 311, 333, 179, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 217, 0, 0, 348,
	143, 307, 306, 0, 225, 0, 144, 136, 294, 145,
	232, 162, 0, 357, 173, 236, 330, 128, 211, 268,
	193, 0, 277, 0, 156, 290, 252, 253, 251, 254,
	214, 140, 146, 0, 292, 309, 332, 175, 323, 138,
	139, 141, 148, 300, 149, 150, 0, 246, 204, 207,
	219, 229, 0, 296, 324, 349, 0, 171, 164, 326,
	342, 180, 308, 310, 356, 0, 166, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 0, 0, 0, 0,
	0, 213, 0, 340, 341, 192, 358, 0, 0, 167,
	0, 0, 265, 272, 264, 0, 336, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 206, 221, 285, 243,
	286, 222, 260, 259, 261, 244, 0, 0, 163, 0,
	321, 0, 0, 325, 177, 0, 0, 331, 218, 291,
	178, 212, 205, 284, 263, 172, 224, 319, 235, 242,
	0, 0, 276, 299, 181, 346, 318, 201, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 151,
	152, 0, 0, 0, 188, 131, 0, 0, 0, 132,
	0, 0, 133, 134, 0, 0, 0, 0, 135, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1959, 281, 0, 158, 168, 239, 75,
	293, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 196, 0, 0, 0, 169, 176, 183, 195,
	203, 209, 220, 223, 227, 228, 230, 233, 245, 247,
	248, 249, 250, 266, 267, 270, 271, 274, 275, 278,
	279, 280, 282, 283, 289, 147, 295, 301, 302, 303,
	304, 305, 312, 313, 314, 315, 322, 338, 339, 352,
	353, 328, 0, 155, 0, 0, 161, 0, 0, 0,
	0, 0, 273, 160, 0, 0, 0, 0, 0, 0,
	0, 199, 0, 0, 0, 0, 0, 0, 0, 198,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 350, 320, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 77, 0, 0, 0, 1958, 0, 0, 0,
	0, 0, 0, 0, 0, 137, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	0, 288, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 231, 153, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 154, 0, 0,
	0, 269, 0, 0, 142, 157, 0, 0, 0, 191,
	0, 298, 0, 344, 0, 0, 297, 241, 337, 0,
	0, 343, 0, 327, 351, 355, 208, 0, 182, 317,
	200, 197, 0, 0, 0, 216, 287, 194, 234, 0,
	0, 0, 187, 0, 0, 0, 316, 334, 159, 255,
	335, 354, 174, 329, 256, 262, 184, 186, 185, 170,
	311, 333, 179, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 217, 0, 0, 348, 143, 307,
	306, 0, 225, 0, 144, 136, 294, 145, 232, 162,
	0, 357, 173, 236, 330, 128, 211, 268, 193, 0,
	277, 0, 156, 290, 252, 253, 251, 254, 214, 140,
	146, 0, 292, 309, 332, 175, 323, 138, 139, 141,
	148, 300, 149, 150, 0, 246, 204, 207, 219, 229,
	0, 296, 324, 349, 0, 171, 164, 326, 342, 180,
	308, 310, 356, 0, 166, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 0, 213,
	0, 340, 341, 192, 358, 0, 0, 167, 0, 0,
	265, 272, 264, 0, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 206, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 0, 0, 163, 0, 321, 0,
	0, 325, 177, 0, 0, 331, 218, 291, 178, 212,
	205, 284, 263, 172, 224, 319, 235, 242, 0, 0,
	276, 299, 181, 346, 318, 201, 328, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 151, 152, 0,
	0, 0, 188, 131, 198, 190, 0, 132, 0, 0,
	133, 134, 0, 0, 0, 0, 135, 240, 0, 0,
	350, 320, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 1959, 281, 0, 158, 168, 239, 0, 293, 210,
	0, 129, 0, 0, 0, 0, 0, 0, 0, 0,
	137, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 0, 0, 0, 288, 215, 0, 347,
	196, 0, 0, 0, 169, 176, 183, 195, 203, 209,
	220, 223, 227, 228, 230, 233, 245, 247, 248, 249,
	250, 266, 267, 270, 271, 274, 275, 278, 279, 280,
	282, 283, 289, 147, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 0,
	0, 155, 0, 0, 161, 0, 0, 0, 0, 0,
	0, 160, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 231, 153, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 154, 0, 0, 0, 269, 0, 0, 142,
	157, 0, 0, 0, 191, 0, 298, 0, 344, 2083,
	0, 297, 241, 337, 0, 0, 343, 0, 327, 351,
	355, 208, 0, 182, 317, 200, 197, 0, 0, 0,
	216, 287, 194, 234, 0, 0, 0, 187, 0, 0,
	0, 316, 334, 159, 255, 335, 354, 174, 329, 256,
	262, 184, 186, 185, 170, 311, 333, 179, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 217,
	0, 0, 348, 143, 307, 306, 0, 225, 0, 144,
	136, 294, 145, 232, 162, 0, 357, 173, 236, 330,
	128, 211, 268, 193, 0, 277, 0, 156, 290, 252,
	253, 251, 254, 214, 140, 146, 0, 292, 309, 332,
	175, 323, 138, 139, 141, 148, 300, 149, 150, 0,
	246, 204, 207, 219, 229, 0, 296, 324, 349, 0,
	171, 164, 326, 342, 180, 308, 310, 356, 0, 166,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 0, 213, 0, 340, 341, 192, 358,
	0, 0, 167, 0, 0, 265, 272, 264, 0, 336,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 206,
	221, 285, 243, 286, 222, 260, 259, 261, 244, 0,
	0, 163, 0, 321, 0, 0, 325, 177, 0, 0,
	331, 218, 291, 178, 212, 205, 284, 263, 172, 224,
	319, 235, 242, 0, 0, 276, 299, 181, 346, 318,
	201, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 199, 151, 152, 0, 0, 0, 188, 131, 198,
	190, 0, 132, 0, 0, 133, 134, 0, 0, 0,
	0, 135, 240, 0, 0, 350, 320, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 158,
	168, 239, 0, 293, 210, 0, 129, 0, 0, 0,
	0, 0, 0, 0, 0, 137, 0, 0, 0, 0,
	0, 0, 1945, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	0, 288, 215, 0, 347, 196, 0, 0, 0, 169,
	176, 183, 195, 203, 209, 220, 223, 227, 228, 230,
	233, 245, 247, 248, 249, 250, 266, 267, 270, 271,
	274, 275, 278, 279, 280, 282, 283, 289, 147, 295,
	301, 302, 303, 304, 305, 312, 313, 314, 315, 322,
	338, 339, 352, 353, 0, 0, 155, 0, 0, 161,
	0, 0, 0, 0, 0, 0, 160, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 231, 153, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 154, 0, 0,
	0, 269, 0, 0, 142, 157, 0, 0, 0, 191,
	0, 298, 0, 344, 0, 0, 297, 241, 337, 0,
	0, 343, 0, 327, 351, 355, 208, 0, 182, 317,
	200, 197, 0, 0, 0, 216, 287, 194, 234, 0,
	0, 0, 187, 0, 0, 0, 316, 334, 159, 255,
	335, 354, 174, 329, 256, 262, 184, 186, 185, 170,
	311, 333, 179, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 217, 0, 0, 348, 143, 307,
	306, 0, 225, 0, 144, 136, 294, 145, 232, 162,
	0, 357, 173, 236, 330, 128, 211, 268, 193, 0,
	277, 0, 156, 290, 252, 253, 251, 254, 214, 140,
	146, 0, 292, 309, 332, 175, 323, 138, 139, 141,
	148, 300, 149, 150, 0, 246, 204, 207, 219, 229,
	0, 296, 324, 349, 0, 171, 164, 326, 342, 180,
	308, 310, 356, 0, 166, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 0, 213,
	0, 340, 341, 192, 358, 0, 0, 167, 0, 0,
	265, 272, 264, 0, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 206, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 0, 0, 163, 0, 321, 0,
	0, 325, 177, 0, 0, 331, 218, 291, 178, 212,
	205, 284, 263, 172, 224, 319, 235, 242, 0, 0,
	276, 299, 181, 346, 318, 201, 328, 0, 0, 0,
	1274, 0, 0, 0, 0, 0, 0, 273, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 151, 152, 0,
	0, 0, 188, 131, 198, 190, 0, 132, 0, 0,
	133, 134, 0, 0, 0, 0, 135, 240, 0, 0,
	350, 320, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 158, 168, 239, 0, 293, 210,
	0, 129, 0, 0, 0, 0, 0, 0, 0, 0,
	137, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 0, 0, 0, 288, 215, 0, 347,
	196, 0, 0, 0, 169, 176, 183, 195, 203, 209,
	220, 223, 227, 228, 230, 233, 245, 247, 248, 249,
	250, 266, 267, 270, 271, 274, 275, 278, 279, 280,
	282, 283, 289, 147, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 0,
	0, 155, 0, 0, 161, 0, 0, 0, 0, 0,
	0, 160, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 231, 153, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 154, 0, 0, 0, 269, 0, 0, 142,
	157, 0, 0, 0, 191, 0, 298, 0, 344, 0,
	0, 297, 241, 337, 0, 0, 343, 0, 327, 351,
	355, 208, 0, 182, 317, 200, 197, 0, 0, 0,
	216, 287, 194, 234, 0, 0, 0, 187, 0, 0,
	0, 316, 334, 159, 255, 335, 354, 174, 329, 256,
	262, 184, 186, 185, 170, 311, 333, 179, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 217,
	0, 0, 348, 143, 307, 306, 0, 225, 0, 144,
	136, 294, 145, 232, 162, 0, 357, 173, 236, 330,
	128, 211, 268, 193, 0, 277, 0, 156, 290, 252,
	253, 251, 254, 214, 140, 146, 0, 292, 309, 332,
	175, 323, 138, 139, 141, 148, 300, 149, 150, 0,
	246, 204, 207, 219, 229, 0, 296, 324, 349, 0,
	171, 164, 326, 342, 180, 308, 310, 356, 0, 166,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 0, 213, 0, 340, 341, 192, 358,
	0, 0, 167, 0, 0, 265, 272, 264, 0, 336,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 206,
	221, 285, 243, 286, 222, 260, 259, 261, 244, 0,
	0, 163, 0, 321, 0, 0, 325, 177, 0, 0,
	331, 218, 291, 178, 212, 205, 284, 263, 172, 224,
	319, 235, 242, 0, 0, 276, 299, 181, 346, 318,
	201, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 199, 151, 152, 0, 0, 0, 188, 131, 198,
	190, 0, 132, 0, 0, 133, 134, 0, 0, 0,
	0, 135, 240, 0, 0, 350, 320, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 158,
	168, 239, 0, 293, 210, 0, 129, 0, 0, 0,
	0, 0, 0, 0, 0, 137, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	0, 288, 215, 0, 347, 196, 0, 0, 0, 169,
	176, 183, 195, 203, 209, 220, 223, 227, 228, 230,
	233, 245, 247, 248, 249, 250, 266, 267, 270, 271,
	274, 275, 278, 279, 280, 282, 283, 289, 147, 295,
	301, 302, 303, 304, 305, 312, 313, 314, 315, 322,
	338, 339, 352, 353, 0, 0, 155, 0, 0, 161,
	0, 0, 0, 0, 0, 0, 160, 0, 0, 0,
	0, 258, 0, 0, 123, 0, 231, 153, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 154, 0, 0,
	0, 269, 0, 0, 142, 157, 0, 0, 0, 191,
	0, 298, 0, 344, 0, 0, 297, 241, 337, 0,
	0, 343, 0, 327, 351, 355, 208, 0, 182, 317,
	200, 197, 0, 0, 0, 216, 287, 194, 234, 0,
	0, 0, 187, 0, 0, 0, 316, 334, 159, 255,
	335, 354, 174, 329, 256, 262, 184, 186, 185, 170,
	311, 333, 179, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 217, 0, 0, 348, 143, 307,
	306, 0, 225, 0, 144, 136, 294, 145, 232, 162,
	0, 357, 173, 236, 330, 128, 211, 268, 193, 0,
	277, 0, 156, 290, 252, 253, 251, 254, 214, 140,
	146, 0, 292, 309, 332, 175, 323, 138, 139, 141,
	148, 300, 149, 150, 0, 246, 204, 207, 219, 229,
	0, 296, 324, 349, 0, 171, 164, 326, 342, 180,
	308, 310, 356, 0, 166, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 0, 213,
	0, 340, 341, 192, 358, 0, 0, 167, 0, 0,
	265, 272, 264, 0, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 206, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 0, 0, 163, 0, 321, 0,
	0, 325, 177, 0, 0, 331, 218, 291, 178, 212,
	205, 284, 263, 172, 224, 319, 235, 242, 0, 0,
	276, 299, 181, 346, 318, 201, 328, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 151, 152, 0,
	0, 0, 188, 131, 198, 190, 0, 132, 0, 0,
	133, 134, 0, 0, 0, 0, 135, 240, 0, 0,
	350, 320, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 158, 168, 239, 0, 293, 210,
	0, 129, 0, 0, 0, 0, 0, 0, 0, 0,
	137, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 0, 0, 0, 288, 215, 0, 347,
	196, 0, 0, 0, 169, 176, 183, 195, 203, 209,
	220, 223, 227, 228, 230, 233, 245, 247, 248, 249,
	250, 266, 267, 270, 271, 274, 275, 278, 279, 280,
	282, 283, 289, 147, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 0,
	0, 155, 0, 0, 161, 0, 0, 0, 0, 0,
	0, 160, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 231, 153, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 154, 0, 0, 0, 269, 0, 0, 142,
	157, 0, 0, 0, 191, 0, 298, 0, 344, 0,
	0, 297, 241, 337, 0, 0, 343, 0, 327, 351,
	355, 208, 0, 182, 317, 200, 197, 0, 0, 0,
	216, 287, 194, 234, 0, 0, 0, 187, 0, 0,
	0, 316, 334, 159, 255, 335, 354, 174, 329, 256,
	262, 184, 186, 185, 170, 311, 333, 179, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 217,
	0, 0, 348, 143, 307, 306, 0, 225, 0, 144,
	136, 294, 145, 232, 162, 0, 357, 173, 236, 330,
	128, 211, 268, 193, 0, 277, 0, 156, 290, 252,
	253, 251, 254, 214, 140, 146, 0, 292, 309, 332,
	175, 323, 138, 139, 141, 148, 300, 149, 150, 0,
	246, 204, 207, 219, 229, 0, 296, 324, 349, 0,
	171, 164, 326, 342, 180, 308, 310, 356, 0, 166,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 0, 213, 0, 340, 341, 192, 358,
	0, 0, 167, 0, 0, 265, 272, 264, 0, 336,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 206,
	221, 285, 243, 286, 222, 260, 259, 261, 244, 0,
	0, 163, 0, 321, 0, 0, 325, 177, 0, 0,
	331, 218, 291, 178, 212, 205, 284, 263, 172, 224,
	319, 235, 242, 0, 0, 276, 299, 181, 346, 318,
	201, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 151, 152, 0, 0, 0, 188, 131, 0,
	0, 0, 132, 0, 0, 133, 134, 0, 0, 0,
	0, 135, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 158,
	168, 239, 0, 293, 210, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 196, 0, 0, 0, 169,
	176, 183, 195, 203, 209, 220, 223, 227, 228, 230,
	233, 245, 247, 248, 249, 250, 266, 267, 270, 271,
	274, 275, 278, 279, 280, 282, 283, 289, 147, 295,
	301, 302, 303, 304, 305, 312, 313, 314, 315, 322,
	338, 339, 352, 353, 0, 0, 155, 0, 0, 161,
	428, 328, 422, 433, 416, 0, 160, 0, 0, 0,
	0, 0, 273, 0, 0, 439, 0, 0, 0, 0,
	0, 199, 0, 0, 423, 0, 0, 0, 0, 198,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 350, 320, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 437, 0, 436, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	0, 288, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 415, 414, 417, 0, 0,
	0, 258, 0, 0, 0, 421, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 154, 0, 0,
	0, 269, 425, 0, 0, 157, 429, 0, 0, 191,
	0, 298, 0, 344, 0, 0, 297, 241, 337, 0,
	432, 343, 0, 327, 351, 355, 208, 0, 182, 317,
	200, 197, 0, 0, 0, 216, 287, 194, 234, 0,
	0, 0, 187, 0, 0, 0, 316, 334, 159, 255,
	335, 354, 174, 329, 256, 262, 184, 186, 185, 170,
	311, 333, 179, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 217, 0, 0, 348, 0, 307,
	306, 0, 225, 0, 0, 0, 294, 0, 232, 162,
	0, 357, 173, 236, 330, 0, 211, 268, 193, 0,
	277, 0, 156, 290, 252, 253, 251, 254, 214, 0,
	0, 0, 442, 309, 332, 175, 323, 418, 419, 420,
	426, 427, 430, 431, 434, 246, 204, 207, 219, 229,
	0, 296, 324, 349, 0, 171, 164, 326, 342, 180,
	308, 310, 356, 0, 166, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 0, 213,
	0, 340, 341, 192, 358, 0, 0, 167, 0, 0,
	265, 272, 264, 0, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 206, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 0, 0, 163, 0, 321, 0,
	0, 325, 177, 0, 0, 331, 218, 291, 178, 212,
	205, 284, 263, 172, 224, 319, 235, 242, 0, 0,
	276, 299, 181, 346, 318, 201, 0, 0, 0, 0,
	428, 328, 422, 433, 416, 0, 0, 0, 0, 0,
	0, 0, 273, 0, 0, 408, 0, 0, 0, 0,
	0, 199, 188, 0, 423, 0, 0, 0, 0, 198,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 350, 320, 257, 0, 0,
	0, 0, 281, 0, 158, 168, 239, 0, 293, 210,
	0, 0, 0, 0, 0, 0, 437, 0, 436, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 347,
	196, 288, 215, 0, 169, 176, 183, 195, 203, 209,
	220, 223, 227, 228, 230, 233, 245, 247, 248, 249,
	250, 266, 267, 270, 271, 274, 275, 278, 279, 280,
	282, 283, 289, 424, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 0,
	0, 155, 0, 0, 161, 0, 0, 0, 0, 0,
	0, 160, 0, 0, 0, 415, 414, 417, 0, 0,
	0, 258, 0, 0, 0, 421, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 154, 0, 0,
	0, 269, 425, 0, 0, 157, 429, 0, 0, 191,
	0, 298, 0, 344, 0, 0, 297, 241, 337, 0,
	432, 343, 0, 327, 351, 355, 208, 0, 182, 317,
	200, 197, 0, 0, 0, 216, 287, 194, 234, 0,
	0, 0, 187, 0, 0, 0, 316, 334, 159, 255,
	335, 354, 174, 329, 256, 262, 184, 186, 185, 170,
	311, 333, 179, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 217, 0, 0, 348, 0, 307,
	306, 0, 225, 0, 0, 0, 294, 0, 232, 162,
	0, 357, 173, 236, 330, 0, 211, 268, 193, 0,
	277, 0, 156, 290, 252, 253, 251, 254, 214, 0,
	0, 0, 411, 309, 332, 175, 323, 418, 419, 420,
	426, 427, 430, 431, 434, 246, 204, 207, 219, 229,
	0, 296, 324, 349, 0, 171, 164, 326, 342, 180,
	308, 310, 356, 0, 166, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 0, 213,
	0, 340, 341, 192, 358, 0, 0, 167, 0, 0,
	265, 272, 264, 0, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 206, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 0, 0, 163, 0, 321, 0,
	0, 325, 177, 0, 0, 331, 218, 291, 178, 212,
	205, 284, 263, 172, 224, 319, 235, 242, 0, 0,
	276, 299, 181, 346, 318, 201, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 188, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 158, 168, 239, 0, 293, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	196, 0, 0, 0, 169, 176, 183, 195, 203, 209,
	220, 223, 227, 228, 230, 233, 245, 247, 248, 249,
	250, 266, 267, 270, 271, 274, 275, 278, 279, 280,
	282, 283, 289, 424, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 328,
	0, 155, 0, 0, 161, 0, 0, 0, 0, 0,
	273, 160, 0, 0, 0, 0, 0, 0, 0, 199,
	0, 0, 0, 0, 0, 0, 0, 198, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 350, 320, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 929, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 0, 0, 0, 288,
	215, 1160, 1159, 1169, 1170, 1162, 1163, 1164, 1165, 1166,
	1167, 1168, 1161, 0, 0, 1171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 154, 0, 0, 0, 269,
	0, 0, 0, 157, 0, 0, 0, 191, 0, 298,
	0, 344, 0, 0, 297, 241, 337, 0, 0, 343,
	0, 327, 351, 355, 208, 0, 182, 317, 200, 197,
	0, 0, 0, 216, 287, 194, 234, 0, 0, 0,
	187, 0, 0, 0, 316, 334, 159, 255, 335, 354,
	174, 329, 256, 262, 184, 186, 185, 170, 311, 333,
	179, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 217, 0, 0, 348, 0, 307, 306, 0,
	225, 0, 0, 0, 294, 0, 232, 162, 0, 357,
	173, 236, 330, 0, 211, 268, 193, 0, 277, 0,
	156, 290, 252, 253, 251, 254, 214, 0, 0, 0,
	292, 309, 332, 175, 323, 0, 0, 0, 0, 300,
	0, 0, 0, 246, 204, 207, 219, 229, 0, 296,
	324, 349, 0, 171, 164, 326, 342, 180, 308, 310,
	356, 0, 166, 0, 0, 0, 0, 0, 0, 0,
	165, 0, 0, 0, 0, 0, 0, 213, 0, 340,
	341, 192, 358, 0, 0, 167, 0, 0, 265, 272,
	264, 0, 336, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 206, 221, 285, 243, 286, 222, 260, 259,
	261, 244, 0, 0, 163, 0, 321, 0, 0, 325,
	177, 0, 0, 331, 218, 291, 178, 212, 205, 284,
	263, 172, 224, 319, 235, 242, 0, 0, 276, 299,
	181, 346, 318, 201, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	188, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 158, 168, 239, 0, 293, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 196, 0,
	0, 0, 169, 176, 183, 195, 203, 209, 220, 223,
	227, 228, 230, 233, 245, 247, 248, 249, 250, 266,
	267, 270, 271, 274, 275, 278, 279, 280, 282, 283,
	289, 0, 295, 301, 302, 303, 304, 305, 312, 313,
	314, 315, 322, 338, 339, 352, 353, 328, 0, 155,
	0, 0, 161, 0, 0, 0, 0, 0, 273, 160,
	0, 0, 0, 2286, 0, 0, 0, 199, 0, 0,
	0, 0, 0, 0, 0, 198, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 350, 320, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2288, 2290, 0, 0, 0, 0,
	0, 0, 129, 0, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 2284, 0, 0, 0, 288, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 231, 0, 0, 2289, 0, 0, 0, 0,
	0, 238, 0, 154, 0, 0, 0, 269, 0, 0,
	0, 157, 0, 0, 0, 191, 0, 298, 0, 344,
	0, 0, 297, 241, 337, 0, 0, 343, 0, 327,
	351, 355, 208, 0, 182, 317, 200, 197, 0, 0,
	0, 216, 287, 194, 234, 0, 0, 0, 187, 0,
	0, 0, 316, 334, 159, 255, 335, 354, 174, 329,
	256, 262, 184, 186, 185, 170, 311, 333, 179, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	217, 0, 0, 348, 0, 307, 306, 0, 225, 0,
	0, 0, 294, 0, 232, 162, 0, 357, 173, 236,
	330, 0, 211, 268, 193, 0, 277, 0, 156, 290,
	252, 253, 251, 254, 214, 0, 0, 0, 292, 309,
	332, 175, 323, 0, 0, 0, 0, 300, 0, 0,
	0, 246, 204, 207, 219, 229, 0, 296, 324, 349,
	0, 171, 164, 326, 342, 180, 308, 310, 356, 0,
	166, 0, 0, 0, 0, 0, 0, 0, 165, 0,
	0, 0, 0, 0, 0, 213, 0, 340, 341, 192,
	358, 0, 0, 167, 0, 0, 265, 272, 264, 0,
	336, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	206, 221, 285, 243, 286, 222, 260, 259, 261, 244,
	0, 0, 163, 0, 321, 0, 0, 325, 177, 0,
	0, 331, 218, 291, 178, 212, 205, 284, 263, 172,
	224, 319, 235, 242, 0, 0, 276, 299, 181, 346,
	318, 201, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 188, 131,
	0, 0, 0, 132, 0, 0, 133, 134, 0, 0,
	0, 0, 135, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	158, 168, 239, 0, 293, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 196, 0, 0, 0,
	169, 176, 183, 195, 203, 209, 220, 223, 227, 228,
	230, 233, 245, 247, 248, 249, 250, 266, 267, 270,
	271, 274, 275, 278, 279, 280, 282, 283, 289, 0,
	295, 301, 302, 303, 304, 305, 312, 313, 314, 315,
	322, 338, 339, 352, 353, 328, 0, 155, 0, 0,
	161, 0, 0, 0, 0, 0, 273, 160, 0, 0,
	0, 2286, 0, 0, 0, 199, 0, 0, 0, 0,
	0, 0, 0, 198, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 350,
	320, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2288, 2290, 0, 0, 0, 0, 0, 0,
	129, 0, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 0, 288, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	231, 0, 0, 2289, 0, 0, 0, 0, 0, 238,
	0, 154, 0, 0, 0, 269, 0, 0, 0, 157,
	0, 0, 0, 191, 0, 298, 0, 344, 0, 0,
	297, 241, 337, 0, 0, 343, 0, 327, 351, 355,
	208, 0, 182, 317, 200, 197, 0, 0, 0, 216,
	287, 194, 234, 0, 0, 0, 187, 0, 0, 0,
	316, 334, 159, 255, 335, 354, 174, 329, 256, 262,
	184, 186, 185, 170, 311, 333, 179, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 217, 0,
	0, 348, 0, 307, 306, 0, 225, 0, 0, 0,
	294, 0, 232, 162, 0, 357, 173, 236, 330, 0,
	211, 268, 193, 0, 277, 0, 156, 290, 252, 253,
	251, 254, 214, 0, 0, 0, 292, 309, 332, 175,
	323, 0, 0, 0, 0, 300, 0, 0, 0, 246,
	204, 207, 219, 229, 0, 296, 324, 349, 0, 171,
	164, 326, 342, 180, 308, 310, 356, 0, 166, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 0, 0,
	0, 0, 0, 213, 0, 340, 341, 192, 358, 0,
	0, 167, 0, 0, 265, 272, 264, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 206, 221,
	285, 243, 286, 222, 260, 259, 261, 244, 0, 0,
	163, 0, 321, 0, 0, 325, 177, 0, 0, 331,
	218, 291, 178, 212, 205, 284, 263, 172, 224, 319,
	235, 242, 0, 0, 276, 299, 181, 346, 318, 201,
	328, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 273, 0, 0, 0, 0, 3344, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 188, 131, 198, 190,
	0, 132, 0, 0, 133, 134, 0, 0, 0, 0,
	135, 240, 0, 0, 350, 320, 257, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 158, 168,
	239, 0, 293, 210, 0, 129, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 0, 0, 0,
	288, 215, 0, 347, 196, 0, 0, 0, 169, 176,
	183, 195, 203, 209, 220, 223, 227, 228, 230, 233,
	245, 247, 248, 249, 250, 266, 267, 270, 271, 274,
	275, 278, 279, 280, 282, 283, 289, 0, 295, 301,
	302, 303, 304, 305, 312, 313, 314, 315, 322, 338,
	339, 352, 353, 0, 0, 155, 0, 0, 161, 0,
	0, 0, 0, 0, 0, 160, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 154, 0, 0, 0,
	269, 0, 0, 0, 157, 0, 0, 0, 191, 0,
	298, 0, 344, 0, 0, 297, 241, 337, 0, 0,
	343, 0, 327, 351, 355, 208, 0, 182, 317, 200,
	197, 0, 0, 0, 216, 287, 194, 234, 0, 0,
	0, 187, 0, 0, 0, 316, 334, 159, 255, 335,
	354, 174, 329, 256, 262, 184, 186, 185, 170, 311,
	333, 179, 189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 226, 217, 0, 0, 348, 0, 307, 306,
	0, 225, 0, 0, 0, 294, 0, 232, 162, 0,
	357, 173, 236, 330, 0, 211, 268, 193, 0, 277,
	0, 156, 290, 252, 253, 251, 254, 214, 0, 0,
	0, 292, 309, 332, 175, 323, 0, 0, 0, 0,
	300, 0, 0, 0, 246, 204, 207, 219, 229, 0,
	296, 324, 349, 0, 171, 164, 326, 342, 180, 308,
	310, 356, 0, 166, 0, 0, 0, 0, 0, 0,
	0, 165, 0, 0, 0, 0, 0, 0, 213, 0,
	340, 341, 192, 358, 0, 0, 167, 0, 0, 265,
	272, 264, 0, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 206, 221, 285, 243, 286, 222, 260,
	259, 261, 244, 0, 0, 163, 0, 321, 0, 0,
	325, 177, 0, 0, 331, 218, 291, 178, 212, 205,
	284, 263, 172, 224, 319, 235, 242, 0, 0, 276,
	299, 181, 346, 318, 201, 328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 199, 0, 0, 0, 0,
	0, 188, 131, 198, 190, 0, 132, 0, 0, 133,
	134, 0, 0, 0, 0, 135, 240, 0, 0, 350,
	320, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 158, 168, 239, 0, 293, 210, 0,
	129, 0, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 0, 288, 215, 0, 347, 196,
	0, 0, 0, 169, 176, 183, 195, 203, 209, 220,
	223, 227, 228, 230, 233, 245, 247, 248, 249, 250,
	266, 267, 270, 271, 274, 275, 278, 279, 280, 282,
	283, 289, 0, 295, 301, 302, 303, 304, 305, 312,
	313, 314, 315, 322, 338, 339, 352, 353, 0, 0,
	155, 0, 0, 161, 0, 0, 0, 0, 0, 0,
	160, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 154, 0, 0, 0, 269, 0, 0, 0, 157,
	0, 0, 0, 191, 0, 298, 0, 344, 0, 0,
	297, 241, 337, 0, 0, 343, 0, 327, 351, 355,
	208, 0, 182, 317, 200, 197, 0, 0, 0, 216,
	287, 194, 234, 0, 0, 0, 187, 0, 0, 0,
	316, 334, 159, 255, 335, 354, 174, 329, 256, 262,
	184, 186, 185, 170, 311, 333, 179, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 217, 0,
	0, 348, 0, 307, 306, 0, 225, 0, 0, 0,
	294, 0, 232, 162, 0, 357, 173, 236, 330, 0,
	211, 268, 193, 0, 277, 0, 156, 290, 252, 253,
	251, 254, 214, 0, 0, 0, 292, 309, 332, 175,
	323, 0, 0, 0, 0, 300, 0, 0, 0, 246,
	204, 207, 219, 229, 0, 296, 324, 349, 0, 171,
	164, 326, 342, 180, 308, 310, 356, 0, 166, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 0, 0,
	0, 0, 0, 213, 0, 340, 341, 192, 358, 0,
	0, 167, 0, 0, 265, 272, 264, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 206, 221,
	285, 243, 286, 222, 260, 259, 261, 244, 0, 0,
	163, 0, 321, 0, 0, 325, 177, 0, 0, 331,
	218, 291, 178, 212, 205, 284, 263, 172, 224, 319,
	235, 242, 0, 0, 276, 299, 181, 346, 318, 201,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 131, 0, 0,
	0, 132, 0, 0, 133, 134, 0, 0, 0, 0,
	135, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 158, 168,
	239, 0, 293, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 196, 0, 0, 454, 169, 176,
	183, 195, 203, 209, 220, 223, 227, 228, 230, 233,
	245, 247, 248, 249, 250, 266, 267, 270, 271, 274,
	275, 278, 279, 280, 282, 283, 289, 0, 295, 301,
	302, 303, 304, 305, 312, 313, 314, 315, 322, 338,
	339, 352, 353, 328, 0, 155, 0, 0, 161, 0,
	0, 0, 0, 0, 273, 160, 0, 0, 0, 0,
	0, 0, 0, 199, 0, 0, 0, 0, 0, 2580,
	0, 198, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 350, 320, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 129, 0,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 0, 288, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 154,
	0, 0, 0, 269, 0, 0, 0, 157, 0, 0,
	0, 191, 0, 298, 0, 344, 0, 0, 297, 241,
	337, 0, 0, 343, 0, 327, 351, 355, 208, 0,
	182, 317, 200, 197, 0, 0, 0, 216, 287, 194,
	234, 0, 0, 0, 187, 0, 0, 0, 316, 334,
	159, 255, 335, 354, 174, 329, 256, 262, 184, 186,
	185, 170, 311, 333, 179, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 217, 0, 0, 348,
	0, 307, 306, 0, 225, 0, 0, 0, 294, 0,
	232, 162, 0, 357, 173, 236, 330, 0, 211, 268,
	193, 0, 277, 0, 156, 290, 252, 253, 251, 254,
	214, 0, 0, 0, 292, 309, 332, 175, 323, 0,
	0, 0, 0, 300, 0, 0, 0, 246, 204, 207,
	219, 229, 0, 296, 324, 349, 0, 171, 164, 326,
	342, 180, 308, 310, 356, 0, 166, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 0, 0, 0, 0,
	0, 213, 0, 340, 341, 192, 358, 0, 0, 167,
	0, 0, 265, 272, 264, 0, 336, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 206, 221, 285, 243,
	286, 222, 260, 259, 261, 244, 0, 0, 163, 0,
	321, 0, 0, 325, 177, 0, 0, 331, 218, 291,
	178, 212, 205, 284, 263, 172, 224, 319, 235, 242,
	0, 0, 276, 299, 181, 346, 318, 201, 328, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 199, 0,
	0, 0, 0, 0, 188, 131, 198, 190, 0, 132,
	0, 0, 133, 134, 0, 0, 0, 0, 135, 240,
	0, 0, 350, 320, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 158, 168, 239, 0,
	293, 210, 0, 129, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 0, 0, 0, 288, 215,
	0, 347, 196, 0, 0, 0, 169, 176, 183, 195,
	203, 209, 220, 223, 227, 228, 230, 233, 245, 247,
	248, 249, 250, 266, 267, 270, 271, 274, 275, 278,
	279, 280, 282, 283, 289, 0, 295, 301, 302, 303,
	304, 305, 312, 313, 314, 315, 322, 338, 339, 352,
	353, 0, 0, 155, 0, 0, 161, 0, 0, 0,
	0, 0, 0, 160, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 154, 0, 0, 0, 269, 0,
	0, 0, 157, 0, 0, 0, 191, 0, 298, 0,
	344, 0, 0, 297, 241, 337, 0, 0, 343, 0,
	327, 351, 355, 208, 0, 182, 317, 200, 197, 0,
	0, 0, 216, 287, 194, 234, 0, 0, 0, 187,
	0, 0, 0, 316, 334, 159, 255, 335, 354, 174,
	329, 256, 262, 184, 186, 185, 170, 311, 333, 179,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 217, 0, 0, 348, 0, 307, 306, 0, 225,
	0, 0, 0, 294, 0, 232, 162, 0, 357, 173,
	236, 330, 0, 211, 268, 193, 0, 277, 0, 156,
	290, 252, 253, 251, 254, 214, 0, 0, 0, 292,
	309, 332, 175, 323, 0, 0, 0, 0, 300, 0,
	0, 0, 246, 204, 207, 219, 229, 0, 296, 324,
	349, 0, 171, 164, 326, 342, 180, 308, 310, 356,
	0, 166, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 0, 0, 213, 0, 340, 341,
	192, 358, 0, 0, 167, 0, 0, 265, 272, 264,
	0, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 206, 221, 285, 243, 286, 222, 260, 259, 261,
	244, 0, 0, 163, 0, 321, 0, 0, 325, 177,
	0, 0, 331, 218, 291, 178, 212, 205, 284, 263,
	172, 224, 319, 235, 242, 328, 0, 276, 299, 181,
	346, 318, 201, 0, 0, 0, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 199, 0, 0, 0, 0,
	0, 0, 0, 198, 190, 0, 0, 0, 0, 188,
	131, 0, 0, 0, 132, 0, 240, 133, 134, 350,
	320, 257, 0, 135, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	929, 158, 168, 239, 0, 293, 210, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 0, 288, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 347, 196, 0, 0,
	0, 169, 176, 183, 195, 203, 209, 220, 223, 227,
	228, 230, 233, 245, 247, 248, 249, 250, 266, 267,
	270, 271, 274, 275, 278, 279, 280, 282, 283, 289,
	0, 295, 301, 302, 303, 304, 305, 312, 313, 314,
	315, 322, 338, 339, 352, 353, 0, 0, 155, 0,
	0, 161, 0, 0, 0, 258, 0, 0, 160, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 154, 0, 0, 0, 269, 0, 0, 0, 157,
	0, 0, 0, 191, 0, 298, 0, 344, 0, 0,
	297, 241, 337, 0, 0, 343, 0, 327, 351, 355,
	208, 0, 182, 317, 200, 197, 0, 0, 0, 216,
	287, 194, 234, 0, 0, 0, 187, 0, 0, 0,
	316, 334, 159, 255, 335, 354, 174, 329, 256, 262,
	184, 186, 185, 170, 311, 333, 179, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 217, 0,
	0, 348, 0, 307, 306, 0, 225, 0, 0, 0,
	294, 0, 232, 162, 0, 357, 173, 236, 330, 0,
	211, 268, 193, 0, 277, 0, 156, 290, 252, 253,
	251, 254, 214, 0, 0, 0, 292, 309, 332, 175,
	323, 0, 0, 0, 0, 300, 0, 0, 0, 246,
	204, 207, 219, 229, 0, 296, 324, 349, 0, 171,
	164, 326, 342, 180, 308, 310, 356, 0, 166, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 0, 0,
	0, 0, 0, 213, 0, 340, 341, 192, 358, 0,
	0, 167, 0, 0, 265, 272, 264, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 206, 221,
	285, 243, 286, 222, 260, 259, 261, 244, 0, 0,
	163, 0, 321, 0, 0, 325, 177, 0, 0, 331,
	218, 291, 178, 212, 205, 284, 263, 172, 224, 319,
	235, 242, 0, 0, 276, 299, 181, 346, 318, 201,
	328, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 273, 0, 0, 3304, 0, 0, 0, 0, 0,
	199, 3302, 0, 0, 0, 0, 188, 131, 198, 190,
	0, 132, 0, 0, 133, 134, 0, 0, 0, 0,
	135, 240, 0, 0, 350, 320, 257, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 158, 168,
	239, 0, 293, 210, 0, 437, 0, 436, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 0, 0, 0,
	288, 215, 0, 347, 196, 0, 0, 0, 169, 176,
	183, 195, 203, 209, 220, 223, 227, 228, 230, 233,
	245, 247, 248, 249, 250, 266, 267, 270, 271, 274,
	275, 278, 279, 280, 282, 283, 289, 0, 295, 301,
	302, 303, 304, 305, 312, 313, 314, 315, 322, 338,
	339, 352, 353, 0, 0, 155, 0, 0, 161, 0,
	0, 0, 0, 0, 0, 160, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 154, 0, 0, 0,
	269, 0, 0, 0, 157, 0, 0, 0, 191, 0,
	298, 0, 344, 0, 0, 297, 241, 337, 0, 0,
	343, 0, 327, 351, 355, 208, 0, 182, 317, 200,
	197, 0, 0, 0, 216, 287, 194, 234, 0, 0,
	0, 187, 0, 0, 0, 316, 334, 159, 255, 335,
	354, 174, 329, 256, 262, 184, 186, 185, 170, 311,
	333, 179, 189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 226, 217, 0, 0, 348, 0, 307, 306,
	0, 225, 0, 3303, 0, 294, 0, 232, 162, 0,
	357, 173, 236, 330, 0, 211, 268, 193, 0, 277,
	0, 156, 290, 252, 253, 251, 254, 214, 0, 0,
	0, 292, 309, 332, 175, 323, 0, 0, 0, 0,
	300, 0, 0, 0, 246, 204, 207, 219, 229, 0,
	296, 324, 349, 0, 171, 164, 326, 342, 180, 308,
	310, 356, 0, 166, 0, 0, 0, 0, 0, 0,
	0, 165, 0, 0, 0, 0, 0, 0, 213, 0,
	340, 341, 192, 358, 0, 0, 167, 0, 0, 265,
	272, 264, 0, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 206, 221, 285, 243, 286, 222, 260,
	259, 261, 244, 0, 0, 163, 0, 321, 0, 0,
	325, 177, 0, 0, 331, 218, 291, 178, 212, 205,
	284, 263, 172, 224, 319, 235, 242, 328, 0, 276,
	299, 181, 346, 318, 201, 0, 0, 0, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 199, 0, 0,
	0, 0, 0, 0, 0, 198, 190, 0, 0, 0,
	0, 188, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 350, 320, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 929, 158, 168, 239, 0, 293, 210, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2396, 345, 0, 0, 0, 0, 288, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 347, 196,
	0, 0, 0, 169, 176, 183, 195, 203, 209, 220,
	223, 227, 228, 230, 233, 245, 247, 248, 249, 250,
	266, 267, 270, 271, 274, 275, 278, 279, 280, 282,
	283, 289, 0, 295, 301, 302, 303, 304, 305, 312,
	313, 314, 315, 322, 338, 339, 352, 353, 0, 0,
	155, 0, 0, 161, 0, 0, 0, 258, 0, 0,
	160, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 154, 0, 0, 0, 269, 0, 0,
	0, 157, 0, 0, 0, 191, 0, 298, 0, 344,
	0, 0, 297, 241, 337, 0, 0, 343, 0, 327,
	351, 355, 208, 0, 182, 317, 200, 197, 0, 0,
	0, 216, 287, 194, 234, 2397, 2398, 0, 187, 0,
	0, 0, 316, 334, 159, 255, 335, 354, 174, 329,
	256, 262, 184, 186, 185, 170, 311, 333, 179, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	217, 0, 0, 348, 0, 307, 306, 0, 225, 0,
	0, 0, 294, 0, 232, 162, 0, 357, 173, 236,
	330, 0, 211, 268, 193, 0, 277, 0, 156, 290,
	252, 253, 251, 254, 214, 0, 0, 0, 292, 309,
	332, 175, 323, 0, 0, 0, 0, 300, 0, 0,
	0, 246, 204, 207, 219, 229, 0, 296, 324, 349,
	0, 171, 164, 326, 342, 180, 308, 310, 356, 0,
	166, 0, 0, 0, 0, 0, 0, 0, 165, 0,
	0, 0, 0, 0, 0, 213, 0, 340, 341, 192,
	358, 0, 0, 167, 0, 0, 265, 272, 264, 0,
	336, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	206, 221, 285, 243, 286, 222, 260, 259, 261, 244,
	0, 0, 163, 0, 321, 0, 0, 325, 177, 0,
	0, 331, 218, 291, 178, 212, 205, 284, 263, 172,
	224, 319, 235, 242, 0, 0, 276, 299, 181, 346,
	318, 201, 328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 199, 0, 0, 0, 0, 0, 188, 0,
	198, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 350, 320, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	158, 168, 239, 0, 293, 210, 0, 437, 0, 436,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 0, 0,
	0, 0, 288, 215, 0, 347, 196, 0, 0, 0,
	169, 176, 183, 195, 203, 209, 220, 223, 227, 228,
	230, 233, 245, 247, 248, 249, 250, 266, 267, 270,
	271, 274, 275, 278, 279, 280, 282, 283, 289, 0,
	295, 301, 302, 303, 304, 305, 312, 313, 314, 315,
	322, 338, 339, 352, 353, 0, 0, 155, 0, 0,
	161, 0, 0, 0, 0, 0, 0, 160, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 154, 0,
	0, 0, 269, 0, 0, 0, 157, 0, 0, 0,
	191, 0, 298, 0, 344, 0, 0, 297, 241, 337,
	0, 0, 343, 0, 327, 351, 355, 208, 0, 182,
	317, 200, 197, 0, 0, 0, 216, 287, 194, 234,
	0, 0, 0, 187, 0, 0, 0, 316, 334, 159,
	255, 335, 354, 174, 329, 256, 262, 184, 186, 185,
	170, 311, 333, 179, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 217, 0, 0, 348, 0,
	307, 306, 0, 225, 0, 0, 0, 294, 0, 232,
	162, 0, 357, 173, 236, 330, 0, 211, 268, 193,
	0, 277, 0, 156, 290, 252, 253, 251, 254, 214,
	0, 0, 0, 292, 309, 332, 175, 323, 0, 0,
	0, 0, 300, 0, 0, 0, 246, 204, 207, 219,
	229, 0, 296, 324, 349, 0, 171, 164, 326, 342,
	180, 308, 310, 356, 0, 166, 0, 0, 0, 0,
	0, 0, 0, 165, 0, 0, 0, 0, 0, 0,
	213, 0, 340, 341, 192, 358, 0, 0, 167, 0,
	0, 265, 272, 264, 0, 336, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 206, 221, 285, 243, 286,
	222, 260, 259, 261, 244, 0, 0, 163, 0, 321,
	0, 0, 325, 177, 0, 0, 331, 218, 291, 178,
	212, 205, 284, 263, 172, 224, 319, 235, 242, 0,
	0, 276, 299, 181, 346, 318, 201, 328, 0, 0,
	1715, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 199, 1290, 0,
	0, 0, 0, 188, 0, 198, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 350, 320, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 158, 168, 239, 0, 293,
	210, 0, 929, 0, 1289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 0, 288, 215, 0,
	347, 196, 0, 0, 0, 169, 176, 183, 195, 203,
	209, 220, 223, 227, 228, 230, 233, 245, 247, 248,
	249, 250, 266, 267, 270, 271, 274, 275, 278, 279,
	280, 282, 283, 289, 0, 295, 301, 302, 303, 304,
	305, 312, 313, 314, 315, 322, 338, 339, 352, 353,
	0, 0, 155, 0, 0, 161, 0, 0, 0, 0,
	0, 0, 160, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 154, 0, 0, 0, 269, 0, 0,
	0, 157, 0, 0, 0, 191, 0, 298, 0, 344,
	0, 0, 297, 241, 337, 0, 0, 343, 0, 327,
	351, 355, 208, 0, 182, 317, 200, 197, 0, 0,
	0, 216, 287, 194, 234, 0, 0, 0, 187, 0,
	0, 0, 316, 334, 159, 255, 335, 354, 174, 329,
	256, 262, 184, 186, 185, 170, 311, 333, 179, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	217, 0, 0, 348, 0, 307, 306, 0, 225, 0,
	0, 0, 294, 0, 232, 162, 0, 357, 173, 236,
	330, 0, 211, 268, 193, 0, 277, 0, 156, 290,
	252, 253, 251, 254, 214, 0, 0, 0, 292, 309,
	332, 175, 323, 0, 0, 0, 0, 300, 0, 0,
	0, 246, 204, 207, 219, 229, 0, 296, 324, 349,
	0, 171, 164, 326, 342, 180, 308, 310, 356, 0,
	166, 0, 0, 0, 0, 0, 0, 0, 165, 0,
	0, 0, 0, 0, 0, 213, 0, 340, 341, 192,
	358, 0, 0, 167, 0, 0, 265, 272, 264, 0,
	336, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	206, 221, 285, 243, 286, 222, 260, 259, 261, 244,
	0, 0, 163, 0, 321, 0, 0, 325, 177, 0,
	0, 331, 218, 291, 178, 212, 205, 284, 263, 172,
	224, 319, 235, 242, 0, 0, 276, 299, 181, 346,
	318, 201, 328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 199, 0, 0, 0, 0, 0, 188, 0,
	198, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 350, 320, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	158, 168, 239, 0, 293, 210, 0, 437, 0, 436,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 0, 0,
	0, 0, 288, 215, 0, 347, 196, 0, 0, 0,
	169, 176, 183, 195, 203, 209, 220, 223, 227, 228,
	230, 233, 245, 247, 248, 249, 250, 266, 267, 270,
	271, 274, 275, 278, 279, 280, 282, 283, 289, 0,
	295, 301, 302, 303, 304, 305, 312, 313, 314, 315,
	322, 338, 339, 352, 353, 0, 0, 155, 0, 0,
	161, 0, 0, 0, 0, 0, 0, 160, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 154, 0,
	0, 0, 269, 0, 0, 0, 157, 0, 0, 0,
	191, 0, 298, 0, 344, 0, 0, 297, 241, 337,
	0, 0, 343, 0, 327, 351, 355, 208, 0, 182,
	317, 200, 197, 0, 0, 0, 216, 287, 194, 234,
	0, 0, 0, 187, 0, 0, 0, 316, 334, 159,
	255, 335, 354, 174, 329, 256, 262, 184, 186, 185,
	170, 311, 333, 179, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 217, 0, 0, 348, 0,
	307, 306, 0, 225, 0, 0, 0, 294, 0, 232,
	162, 0, 357, 173, 236, 330, 0, 211, 268, 193,
	0, 277, 0, 156, 290, 252, 253, 251, 254, 214,
	0, 0, 0, 292, 309, 332, 175, 323, 0, 0,
	0, 0, 300, 0, 0, 0, 246, 204, 207, 219,
	229, 0, 296, 324, 349, 0, 171, 164, 326, 342,
	180, 308, 310, 356, 0, 166, 0, 0, 0, 0,
	0, 0, 0, 165, 0, 0, 0, 0, 0, 0,
	213, 0, 340, 341, 192, 358, 0, 0, 167, 0,
	0, 265, 272, 264, 0, 336, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 206, 221, 285, 243, 286,
	222, 260, 259, 261, 244, 0, 0, 163, 0, 321,
	0, 0, 325, 177, 0, 0, 331, 218, 291, 178,
	212, 205, 284, 263, 172, 224, 319, 235, 242, 328,
	0, 276, 299, 181, 346, 318, 201, 0, 0, 0,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 199,
	0, 0, 0, 0, 0, 0, 0, 198, 190, 0,
	0, 0, 0, 188, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 350, 320, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2697, 0, 0, 281, 2699, 158, 168, 239, 0, 293,
	210, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 0, 0, 0, 288,
	215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	347, 196, 0, 0, 0, 169, 176, 183, 195, 203,
	209, 220, 223, 227, 228, 230, 233, 245, 247, 248,
	249, 250, 266, 267, 270, 271, 274, 275, 278, 279,
	280, 282, 283, 289, 0, 295, 301, 302, 303, 304,
	305, 312, 313, 314, 315, 322, 338, 339, 352, 353,
	0, 0, 155, 0, 0, 161, 0, 0, 0, 258,
	0, 0, 160, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 154, 0, 0, 0, 269,
	0, 0, 0, 157, 0, 0, 0, 191, 0, 298,
	0, 344, 0, 0, 297, 241, 337, 0, 0, 343,
	0, 327, 351, 355, 208, 0, 182, 317, 200, 197,
	0, 0, 0, 216, 287, 194, 234, 0, 0, 0,
	187, 0, 0, 0, 316, 334, 159, 255, 335, 354,
	174, 329, 256, 262, 184, 186, 185, 170, 311, 333,
	179, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 217, 0, 0, 348, 0, 307, 306, 0,
	225, 0, 0, 0, 294, 0, 232, 162, 0, 357,
	173, 236, 330, 0, 211, 268, 193, 0, 277, 0,
	156, 290, 252, 253, 251, 254, 214, 0, 0, 0,
	292, 309, 332, 175, 323, 0, 0, 0, 0, 300,
	0, 0, 0, 246, 204, 207, 219, 229, 0, 296,
	324, 349, 0, 171, 164, 326, 342, 180, 308, 310,
	356, 0, 166, 0, 0, 0, 0, 0, 0, 0,
	165, 0, 0, 0, 0, 0, 0, 213, 0, 340,
	341, 192, 358, 0, 0, 167, 0, 0, 265, 272,
	264, 0, 336, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 206, 221, 285, 243, 286, 222, 260, 259,
	261, 244, 0, 0, 163, 0, 321, 0, 0, 325,
	177, 0, 0, 331, 218, 291, 178, 212, 205, 284,
	263, 172, 224, 319, 235, 242, 328, 0, 276, 299,
	181, 346, 318, 201, 0, 0, 0, 273, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 0, 0, 0,
	0, 0, 0, 0, 198, 190, 0, 0, 0, 0,
	188, 0, 0, 0, 0, 0, 0, 240, 0, 0,
	350, 320, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 929, 158, 168, 239, 0, 293, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 0, 0, 0, 288, 215, 0, 0,
	0, 0, 0, 0, 2683, 0, 0, 347, 196, 0,
	0, 0, 169, 176, 183, 195, 203, 209, 220, 223,
	227, 228, 230, 233, 245, 247, 248, 249, 250, 266,
	267, 270, 271, 274, 275, 278, 279, 280, 282, 283,
	289, 0, 295, 301, 302, 303, 304, 305, 312, 313,
	314, 315, 322, 338, 339, 352, 353, 0, 0, 155,
	0, 0, 161, 0, 0, 0, 258, 0, 0, 160,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 154, 0, 0, 0, 269, 0, 0, 0,
	157, 0, 0, 0, 191, 0, 298, 0, 344, 0,
	0, 297, 241, 337, 0, 0, 343, 0, 327, 351,
	355, 208, 0, 182, 317, 200, 197, 0, 0, 0,
	216, 287, 194, 234, 0, 0, 0, 187, 0, 0,
	0, 316, 334, 159, 255, 335, 354, 174, 329, 256,
	262, 184, 186, 185, 170, 311, 333, 179, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 217,
	0, 0, 348, 0, 307, 306, 0, 225, 0, 0,
	0, 294, 0, 232, 162, 0, 357, 173, 236, 330,
	0, 211, 268, 193, 0, 277, 0, 156, 290, 252,
	253, 251, 254, 214, 0, 0, 0, 292, 309, 332,
	175, 323, 0, 0, 0, 0, 300, 0, 0, 0,
	246, 204, 207, 219, 229, 0, 296, 324, 349, 0,
	171, 164, 326, 342, 180, 308, 310, 356, 0, 166,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 0, 213, 0, 340, 341, 192, 358,
	0, 0, 167, 0, 0, 265, 272, 264, 0, 336,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 206,
	221, 285, 243, 286, 222, 260, 259, 261, 244, 0,
	0, 163, 0, 321, 0, 0, 325, 177, 0, 0,
	331, 218, 291, 178, 212, 205, 284, 263, 172, 224,
	319, 235, 242, 328, 0, 276, 299, 181, 346, 318,
	201, 0, 0, 0, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 199, 0, 0, 0, 0, 0, 0,
	0, 198, 190, 0, 0, 0, 0, 188, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 350, 320, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 77, 0, 0, 281, 929, 158,
	168, 239, 0, 293, 210, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 0, 288, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 196, 0, 0, 0, 169,
	176, 183, 195, 203, 209, 220, 223, 227, 228, 230,
	233, 245, 247, 248, 249, 250, 266, 267, 270, 271,
	274, 275, 278, 279, 280, 282, 283, 289, 0, 295,
	301, 302, 303, 304, 305, 312, 313, 314, 315, 322,
	338, 339, 352, 353, 0, 0, 155, 0, 0, 161,
	0, 0, 0, 258, 0, 0, 160, 0, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 154,
	0, 0, 0, 269, 0, 0, 0, 157, 0, 0,
	0, 191, 0, 298, 0, 344, 0, 0, 297, 241,
	337, 0, 0, 343, 0, 327, 351, 355, 208, 0,
	182, 317, 200, 197, 0, 0, 0, 216, 287, 194,
	234, 0, 0, 0, 187, 0, 0, 0, 316, 334,
	159, 255, 335, 354, 174, 329, 256, 262, 184, 186,
	185, 170, 311, 333, 179, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 217, 0, 0, 348,
	0, 307, 306, 0, 225, 0, 0, 0, 294, 0,
	232, 162, 0, 357, 173, 236, 330, 0, 211, 268,
	193, 0, 277, 0, 156, 290, 252, 253, 251, 254,
	214, 0, 0, 0, 292, 309, 332, 175, 323, 0,
	0, 0, 0, 300, 0, 0, 0, 246, 204, 207,
	219, 229, 0, 296, 324, 349, 0, 171, 164, 326,
	342, 180, 308, 310, 356, 0, 166, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 0, 0, 0, 0,
	0, 213, 0, 340, 341, 192, 358, 0, 0, 167,
	0, 0, 265, 272, 264, 0, 336, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 206, 221, 285, 243,
	286, 222, 260, 259, 261, 244, 0, 0, 163, 0,
	321, 0, 0, 325, 177, 0, 0, 331, 218, 291,
	178, 212, 205, 284, 263, 172, 224, 319, 235, 242,
	328, 0, 276, 299, 181, 346, 318, 201, 0, 0,
	0, 273, 0, 0, 0, 0, 0, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 0, 0, 198, 190,
	0, 0, 0, 0, 188, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 350, 320, 257, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 929, 158, 168, 239, 0,
	293, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 0, 0, 0,
	288, 215, 0, 0, 0, 0, 0, 0, 2127, 0,
	0, 347, 196, 0, 0, 0, 169, 176, 183, 195,
	203, 209, 220, 223, 227, 228, 230, 233, 245, 247,
	248, 249, 250, 266, 267, 270, 271, 274, 275, 278,
	279, 280, 282, 283, 289, 0, 295, 301, 302, 303,
	304, 305, 312, 313, 314, 315, 322, 338, 339, 352,
	353, 0, 0, 155, 0, 0, 161, 0, 0, 0,
	258, 0, 0, 160, 0, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 154, 0, 0, 0,
	269, 0, 0, 0, 157, 0, 0, 0, 191, 0,
	298, 0, 344, 0, 0, 297, 241, 337, 0, 0,
	343, 0, 327, 351, 355, 208, 0, 182, 317, 200,
	197, 0, 0, 0, 216, 287, 194, 234, 0, 0,
	0, 187, 0, 0, 0, 316, 334, 159, 255, 335,
	354, 174, 329, 256, 262, 184, 186, 185, 170, 311,
	333, 179, 189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 226, 217, 0, 0, 348, 0, 307, 306,
	0, 225, 0, 0, 0, 294, 0, 232, 162, 0,
	357, 173, 236, 330, 0, 211, 268, 193, 0, 277,
	0, 156, 290, 252, 253, 251, 254, 214, 0, 0,
	0, 292, 309, 332, 175, 323, 0, 0, 0, 0,
	300, 0, 0, 0, 246, 204, 207, 219, 229, 0,
	296, 324, 349, 0, 171, 164, 326, 342, 180, 308,
	310, 356, 0, 166, 0, 0, 0, 0, 0, 0,
	0, 165, 0, 0, 0, 0, 0, 0, 213, 0,
	340, 341, 192, 358, 0, 0, 167, 0, 0, 265,
	272, 264, 0, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 206, 221, 285, 243, 286, 222, 260,
	259, 261, 244, 0, 0, 163, 0, 321, 0, 0,
	325, 177, 0, 0, 331, 218, 291, 178, 212, 205,
	284, 263, 172, 224, 319, 235, 242, 328, 0, 276,
	299, 181, 346, 318, 201, 0, 0, 0, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 199, 0, 0,
	0, 0, 0, 0, 2165, 2166, 190, 0, 0, 0,
	0, 188, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 350, 320, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 929, 158, 168, 239, 0, 293, 210, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 0, 288, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 347, 196,
	0, 0, 0, 169, 176, 183, 195, 203, 209, 220,
	223, 227, 228, 230, 233, 245, 247, 248, 249, 250,
	266, 267, 270, 271, 274, 275, 278, 279, 280, 282,
	283, 289, 0, 295, 301, 302, 303, 304, 305, 312,
	313, 314, 315, 322, 338, 339, 352, 353, 0, 0,
	155, 0, 0, 161, 0, 0, 0, 258, 0, 0,
	160, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 154, 0, 0, 0, 269, 0, 0,
	0, 157, 0, 0, 0, 191, 0, 298, 0, 344,
	0, 0, 297, 241, 337, 0, 0, 343, 0, 327,
	351, 355, 208, 0, 182, 317, 200, 197, 0, 0,
	0, 216, 287, 194, 234, 0, 0, 0, 187, 0,
	0, 0, 316, 334, 159, 255, 335, 354, 174, 329,
	256, 262, 184, 186, 185, 170, 311, 333, 179, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	217, 0, 0, 348, 0, 307, 306, 0, 225, 0,
	0, 0, 294, 0, 232, 162, 0, 357, 173, 236,
	330, 0, 211, 268, 193, 0, 277, 0, 156, 290,
	252, 253, 251, 254, 214, 0, 0, 0, 292, 309,
	332, 175, 323, 0, 0, 0, 0, 300, 0, 0,
	0, 246, 204, 207, 219, 229, 0, 296, 324, 349,
	0, 171, 164, 326, 342, 180, 308, 310, 356, 0,
	166, 0, 0, 0, 0, 0, 0, 0, 165, 0,
	0, 0, 0, 0, 0, 213, 0, 340, 341, 192,
	358, 0, 0, 167, 0, 0, 265, 272, 264, 0,
	336, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	206, 221, 285, 243, 286, 222, 260, 259, 261, 244,
	0, 0, 163, 0, 321, 0, 0, 325, 177, 0,
	0, 331, 218, 291, 178, 212, 205, 284, 263, 172,
	224, 319, 235, 242, 328, 0, 276, 299, 181, 346,
	318, 201, 0, 0, 0, 273, 0, 0, 0, 0,
	0, 0, 0, 0, 199, 0, 0, 0, 0, 0,
	0, 0, 198, 190, 0, 0, 0, 0, 188, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 350, 320,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 929,
	158, 168, 239, 0, 293, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	0, 0, 0, 0, 288, 215, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 196, 0, 0, 0,
	169, 176, 183, 195, 203, 209, 220, 223, 227, 228,
	230, 233, 245, 247, 248, 249, 250, 266, 267, 270,
	271, 274, 275, 278, 279, 280, 282, 283, 289, 0,
	295, 301, 302, 303, 304, 305, 312, 313, 314, 315,
	322, 338, 339, 352, 353, 0, 0, 155, 0, 0,
	161, 0, 0, 0, 258, 0, 0, 160, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	154, 0, 0, 0, 269, 0, 0, 0, 157, 0,
	0, 0, 191, 0, 298, 0, 344, 0, 0, 297,
	241, 337, 0, 0, 343, 0, 327, 351, 355, 208,
	0, 182, 317, 200, 197, 0, 0, 0, 216, 287,
	194, 234, 0, 0, 0, 187, 0, 0, 0, 316,
	334, 159, 255, 335, 354, 174, 329, 256, 262, 184,
	186, 185, 170, 311, 333, 179, 189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 217, 0, 0,
	348, 0, 307, 306, 0, 225, 0, 0, 0, 294,
	0, 232, 162, 0, 357, 173, 236, 330, 0, 211,
	268, 193, 0, 277, 0, 156, 290, 252, 253, 251,
	254, 214, 0, 0, 0, 292, 309, 332, 175, 323,
	0, 0, 0, 0, 300, 0, 0, 0, 246, 204,
	207, 219, 229, 0, 296, 324, 349, 0, 171, 164,
	326, 342, 180, 308, 310, 356, 0, 166, 0, 0,
	0, 0, 0, 0, 0, 165, 0, 0, 0, 0,
	0, 0, 213, 0, 340, 341, 192, 358, 0, 0,
	167, 0, 0, 265, 272, 264, 0, 336, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 206, 221, 285,
	243, 286, 222, 260, 259, 261, 244, 0, 0, 163,
	0, 321, 0, 0, 325, 177, 0, 0, 331, 218,
	291, 178, 212, 205, 284, 263, 172, 224, 319, 235,
	242, 328, 0, 276, 299, 181, 346, 318, 201, 0,
	0, 0, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 199, 0, 0, 0, 0, 0, 0, 0, 198,
	190, 0, 0, 0, 0, 188, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 350, 320, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 2699, 158, 168, 239,
	0, 293, 210, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	0, 288, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 347, 196, 0, 0, 0, 169, 176, 183,
	195, 203, 209, 220, 223, 227, 228, 230, 233, 245,
	247, 248, 249, 250, 266, 267, 270, 271, 274, 275,
	278, 279, 280, 282, 283, 289, 0, 295, 301, 302,
	303, 304, 305, 312, 313, 314, 315, 322, 338, 339,
	352, 353, 0, 0, 155, 0, 0, 161, 0, 0,
	0, 258, 0, 0, 160, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 154, 0, 0,
	0, 269, 0, 0, 0, 157, 0, 0, 0, 191,
	0, 298, 0, 344, 0, 0, 297, 241, 337, 0,
	0, 343, 0, 327, 351, 355, 208, 0, 182, 317,
	200, 197, 0, 0, 0, 216, 287, 194, 234, 0,
	0, 0, 187, 0, 0, 0, 316, 334, 159, 255,
	335, 354, 174, 329, 256, 262, 184, 186, 185, 170,
	311, 333, 179, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 217, 0, 0, 348, 0, 307,
	306, 0, 225, 0, 0, 0, 294, 0, 232, 162,
	0, 357, 173, 236, 330, 0, 211, 268, 193, 0,
	277, 0, 156, 290, 252, 253, 251, 254, 214, 0,
	0, 0, 292, 309, 332, 175, 323, 0, 0, 0,
	0, 300, 0, 0, 0, 246, 204, 207, 219, 229,
	0, 296, 324, 349, 0, 171, 164, 326, 342, 180,
	308, 310, 356, 0, 166, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 0, 213,
	0, 340, 341, 192, 358, 0, 0, 167, 0, 0,
	265, 272, 264, 0, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 206, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 0, 0, 163, 0, 321, 0,
	0, 325, 177, 0, 0, 331, 218, 291, 178, 212,
	205, 284, 263, 172, 224, 319, 235, 242, 328, 0,
	276, 299, 181, 346, 318, 201, 0, 0, 0, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 199, 0,
	0, 0, 0, 0, 0, 0, 198, 190, 0, 0,
	0, 0, 188, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 350, 320, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 129, 158, 168, 239, 0, 293, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 0, 0, 0, 288, 215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	196, 0, 0, 0, 169, 176, 183, 195, 203, 209,
	220, 223, 227, 228, 230, 233, 245, 247, 248, 249,
	250, 266, 267, 270, 271, 274, 275, 278, 279, 280,
	282, 283, 289, 0, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 0,
	0, 155, 0, 0, 161, 0, 0, 0, 258, 0,
	0, 160, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 154, 0, 0, 0, 269, 0,
	0, 0, 157, 0, 0, 0, 191, 0, 298, 0,
	344, 0, 0, 297, 241, 337, 0, 0, 343, 0,
	327, 351, 355, 208, 0, 182, 317, 200, 197, 0,
	0, 0, 216, 287, 194, 234, 0, 0, 0, 187,
	0, 0, 0, 316, 334, 159, 255, 335, 354, 174,
	329, 256, 262, 184, 186, 185, 170, 311, 333, 179,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 217, 0, 0, 348, 0, 307, 306, 0, 225,
	0, 0, 0, 294, 0, 232, 162, 0, 357, 173,
	236, 330, 0, 211, 268, 193, 0, 277, 0, 156,
	290, 252, 253, 251, 254, 214, 0, 0, 0, 292,
	309, 332, 175, 323, 0, 0, 0, 0, 300, 0,
	0, 0, 246, 204, 207, 219, 229, 0, 296, 324,
	349, 0, 171, 164, 326, 342, 180, 308, 310, 356,
	0, 166, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 0, 0, 213, 0, 340, 341,
	192, 358, 0, 0, 167, 0, 0, 265, 272, 264,
	0, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 206, 221, 285, 243, 286, 222, 260, 259, 261,
	244, 0, 0, 163, 0, 321, 0, 0, 325, 177,
	0, 0, 331, 218, 291, 178, 212, 205, 284, 263,
	172, 224, 319, 235, 242, 328, 0, 276, 299, 181,
	346, 318, 201, 0, 0, 0, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 199, 0, 0, 0, 0,
	0, 0, 0, 198, 190, 0, 0, 0, 0, 188,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 350,
	320, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	478, 158, 168, 239, 0, 293, 210, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 0, 288, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 347, 196, 0, 0,
	0, 169, 176, 183, 195, 203, 209, 220, 223, 227,
	228, 230, 233, 245, 247, 248, 249, 250, 266, 267,
	270, 271, 274, 275, 278, 279, 280, 282, 283, 289,
	0, 295, 301, 302, 303, 304, 305, 312, 313, 314,
	315, 322, 338, 339, 352, 353, 0, 0, 155, 0,
	0, 161, 0, 0, 0, 258, 0, 0, 160, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 154, 0, 0, 0, 269, 0, 0, 0, 157,
	0, 0, 0, 191, 0, 298, 0, 344, 0, 0,
	297, 241, 337, 0, 0, 343, 0, 327, 351, 355,
	208, 0, 182, 317, 200, 197, 0, 0, 0, 216,
	287, 194, 234, 0, 0, 0, 187, 0, 0, 0,
	316, 334, 159, 255, 335, 354, 174, 329, 256, 262,
	184, 186, 185, 170, 311, 333, 179, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 217, 0,
	0, 348, 0, 307, 306, 0, 225, 0, 0, 0,
	294, 0, 232, 162, 0, 357, 173, 236, 330, 0,
	211, 268, 193, 0, 277, 0, 156, 290, 252, 253,
	251, 254, 214, 0, 0, 0, 292, 309, 332, 175,
	323, 0, 0, 0, 0, 300, 0, 0, 0, 246,
	204, 207, 219, 229, 0, 296, 324, 349, 0, 171,
	164, 326, 342, 180, 308, 310, 356, 0, 166, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 0, 0,
	0, 0, 0, 213, 0, 340, 341, 192, 358, 0,
	0, 167, 0, 0, 265, 272, 264, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 206, 221,
	285, 243, 286, 222, 260, 259, 261, 244, 0, 0,
	163, 0, 321, 0, 0, 325, 177, 0, 0, 331,
	218, 291, 178, 212, 205, 284, 263, 172, 224, 319,
	235, 242, 0, 0, 276, 299, 181, 346, 318, 201,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 158, 168,
	239, 0, 293, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 196, 0, 0, 0, 169, 176,
	183, 195, 203, 209, 220, 223, 227, 228, 230, 233,
	245, 247, 248, 249, 250, 266, 267, 270, 271, 274,
	275, 278, 279, 280, 282, 283, 289, 0, 295, 301,
	302, 303, 304, 305, 312, 313, 314, 315, 322, 338,
	339, 352, 353, 0, 0, 155, 0, 0, 161, 0,
	0, 0, 0, 0, 0, 160,
}

var yyPact = [...]int{
	4383, -1000, -413, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2207, -1000, -1000, 267, -1000,
	1133, 255, -1000, 296, 122, 30694, 715, 515, 41641, -1000,
	-1000, -1000, 187, 513, 31119, 478, 467, 1652, 2074, 1651,
	40, -66, -68, 140, 32144, 31714, 10, -1000, 2254, 2261,
	665, 44, -1000, -1000, -1000, 34758, 221, -1000, -1000, 2196,
	2205, 2002, -1000, 6885, -1000, -1000, -1000, -1000, -1000, 20239,
	-1000, 2256, 31119, 26539, -1000, 707, 690, -182, 657, 657,
	286, 657, 657, 714, -1000, 263, 1087, -1000, -1000, -1000,
	-1000, 1081, 31119, 38305, 661, 40807, 661, 661, 661, 661,
	661, 661, 661, 31119, -1000, 794, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 31119,
	1650, 2111, 1078, 244, -1000, -1000, -1000, 1107, -1000, 421,
	419, 417, 307, 131, 1117, 2187, -1000, 1853, 2196, 2196,
	-1000, -1000, -1000, -1000, -1000, -1000, 895, 314, 681, 221,
	221, 1080, 2148, 2107, 2103, 1432, 2102, 729, 2101, 1945,
	-35, -1000, 1649, 31119, -1000, -1000, 1393, 1384, 349, 1826,
	808, 1971, -1000, -1000, 368, 633, 1939, 414, 1939, 1939,
	1939, 1939, 1939, -97, 1939, 1939, 1939, 90, 1939, 153,
	1939, 1939, 1939, 1939, 1939, 1580, -1000, -1000, -1000, 376,
	1816, 1824, 1970, 611, -1000, -1000, -1000, -1000, 1981, 2170,
	711, -1000, -122, 1889, 35771, -1000, 1853, -1000, -1000, -1000,
	1637, -1000, 2254, 2108, 1263, 12955, 2053, -1000, -1000, 1176,
	2241, -1000, 26114, 792, -1000, 12955, 1655, 1853, -1000, -1000,
	1853, -1000, 741, 849, -1000, 749, -1000, -1000, -1000, 12348,
	12348, 12348, 12348, 12348, 12348, 12348, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1853, 791, 790, 1853, 1853, 1853, 1853, 1853,
	-1000, 11134, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1853, 1853, 1853, 1853, 1853, 1853,
	1853, 1853, 1853, 1853, 1853, 1853, 1853, 1853, 12955, 1853,
	1853, 1853, 1853, 1853, 1853, 1853, 1853, 1853, 1853, 1853,
	1853, 1853, 1853, 1853, 1853, 1853, 1853, 1853, 1853, 1853,
	1853, 1853, 1853, 1853, 1853, 1853, 1853, 1853, 1853, 1853,
	1853, 1853, 1853, 1853, 1853, 1853, 1853, 1853, 1853, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	665, 665, 30269, 1917, -158, 19632, -1000, -1000, -1000, -1000,
	18418, 37880, 1077, -1000, -1000, -1000, -1000, 2100, -1000, -1000,
	789, 741, 736, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2207, -1000, -1000, 1763,
	563, -1000, 1247, 1247, 1247, 1247, 1247, 295, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1944, 40807, 31119,
	251, 1648, 1127, 1646, 42058, 42058, -1000, 233, 38305, 38305,
	657, 292, 38305, 297, 1914, 680, 1901, 678, 1488, 31119,
	2129, 1969, 31119, 1643, 1642, 42058, 42058, 38305, 38305, -1000,
	25095, 1898, -1000, -1000, 1078, -1000, 1530, 12955, 657, 657,
	31119, 31119, 31119, 31119, 31119, -1000, -1000, 1078, 1078, 1078,
	1078, 1084, 2240, 1084, -1000, 1084, -1000, -1000, 12955, -1000,
	12348, 37455, 938, -1000, -1000, 41641, -1000, 1591, 310, -1000,
	-1000, -1000, -1000, -1000, -1000, 1590, -1000, 2080, 729, 729,
	-1000, 1507, 729, 1868, -1000, 1073, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 729, -1000,
	11741, -392, -1000, -1000, 1896, -1000, 317, -1000, -1000, 528,
	1967, 528, 202, 38305, 38305, 38305, -1000, 1939, 40807, -1000,
	1939, 1939, 1939, -105, 1939, 1939, -1000, -1000, 1939, -1000,
	-1000, -1000, -1000, -1000, 1939, -1000, -1000, -1000, 1939, 1939,
	-1000, 1939, 1939, -1000, -1000, -1000, -1000, -1000, 38305, 528,
	184, 1892, 528, 38305, 38305, -1000, 73, 72, 71, 70,
	-1000, -1000, -1000, -1000, 69, 63, -1000, -1000, 2002, -1000,
	-1000, 221, -1000, -1000, 31119, -133, 35771, 1889, 2159, 15383,
	-1000, -1000, 1159, 2250, 974, 1830, -1000, -1000, 1882, -1000,
	1095, 787, 1285, 2011, -1000, -1000, -1000, 31119, -1000, 12955,
	12955, 12955, 1217, -1000, 26964, -1000, -1000, -1000, -1000, -1000,
	-1000, 16597, 1005, 12348, 1227, 1106, 12348, 12348, 12348, 12348,
	12348, 12348, 12348, 12348, 12348, 12348, 12348, 12348, 12348, 12348,
	12348, 1365, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1589, -1000, 221, 23881, 8099, 23881, 1635, 1635, 871, 871,
	871, 871, 871, 871, 32732, 2158, 23881, 23881, 2158, 2158,
	2158, 2158, 2158, 1637, 1757, 1034, 34758, 11134, 8099, 8099,
	8099, 1637, 12955, 12955, 8099, 8099, 10527, 9920, 14169, 8099,
	8099, 2158, 1097, 1034, 18418, 8099, -1000, -1000, 9313, -1000,
	-1000, -1000, -1000, -1000, 1637, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 40807, 40807, 8099, 8099, 8099, 8099, 1637,
	1637, 8099, 8099, 8099, 8099, 8099, 1637, 1637, 1637, 1637,
	8099, 8099, 8099, 8099, 8099, 8099, 8099, 8099, 8099, 8099,
	8099, 8099, 29844, 28994, 31119, 1789, 1785, -1000, 786, 19025,
	1863, -1000, -143, -138, -158, -1000, -1000, 893, -1000, -1000,
	-1000, 8706, -1000, 17204, 2196, 2002, 21453, 25689, -1000, -1000,
	-44, -1000, -1000, -1000, 1928, -1000, 1934, 301, -1, 1934,
	1934, 1934, 1934, 1934, -9, -9, -9, -9, 3, -1000,
	-1000, -1000, -1000, -1000, 1942, 1941, -1000, 1928, 1928, 1928,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1936,
	298, 1929, 1929, 1929, 1929, 1929, -1000, -1000, -1000, -1000,
	588, 588, 588, -1000, 12955, 1948, 2154, 685, 292, 2115,
	2125, 2115, 416, -1000, 784, 1940, -1000, 783, 316, 1825,
	-1000, 191, 1704, 29419, -1000, -1000, -1000, -1000, -1000, 31119,
	31119, 38305, 38305, 38305, 686, -1000, 31119, 1869, -1000, -1000,
	-1000, -1000, -1000, 1844, -1000, 1704, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	31119, -1000, -1000, 1493, 1034, 1588, 1587, 2148, -1000, -1000,
	-1000, 1100, -1000, -1000, -1000, -1000, 1078, 41641, 41641, 31119,
	2148, 1078, 1034, 1043, 1951, 1853, 1637, -1000, -1000, -1000,
	1575, -1000, 12348, 1868, 1868, -1000, 1868, 729, 1635, 1868,
	-1000, 1755, 1139, 1492, 31119, -1000, 35771, -37, -1000, -151,
	39973, -1000, -1000, -1000, 528, 39973, -1000, 90, 181, -1000,
	677, -1000, 1753, -1000, -1000, -1000, -1000, 1939, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 39973, 134, 180,
	39973, 1844, 2239, -1000, -1000, -1000, -1000, 2185, -1000, 2158,
	1637, 645, -1000, -1000, -1000, 1853, 1724, -1000, 777, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	40390, -1000, 1949, 1263, 1263, 12955, -1000, -1000, -1000, 17204,
	2184, -1000, 2034, 2033, 1985, -1000, -1000, 1005, 1173, 1014,
	-1000, -1000, 1268, -1000, -1000, -1000, -1000, -1000, 776, 1853,
	-1000, -1000, -1000, -1000, -1000, 3477, -1000, -1000, -1000, -1000,
	1227, 12348, 12348, 12348, 1043, 3477, 3517, 1305, 1192, 871,
	971, 971, 942, 942, 942, 942, 942, 1011, 1011, -1000,
	-1000, -1000, 1637, -1000, 1751, -1000, -1000, 1034, 763, -1000,
	-1000, -1000, -1000, -1000, 8099, -1000, -1000, 8099, 8099, 8099,
	8099, 8099, -1000, 12955, -1000, 1637, 1751, 1751, 1751, -1000,
	1182, 1333, 1579, 1751, 902, 2237, 1751, 897, 2230, 1751,
	1717, 12348, 12348, 12348, 1751, 1751, 8099, 1108, -1000, 12955,
	1637, 1751, -1000, 1747, 1866, 1865, 1751, 1637, 1864, 1751,
	1751, -200, -200, 1637, 1751, 1637, 1751, 1751, -200, -200,
	-200, -200, 1751, 1751, 1751, 1751, 1751, 1751, 1751, 1751,
	1751, 1751, 1751, 1751, 967, 31119, -1000, 1780, 1860, -1000,
	-1000, -1000, 2152, 28406, -1000, -1000, 33320, -1000, 1853, 1853,
	967, 1812, 28994, -1000, -1000, 28994, 41641, 23274, -1000, 18418,
	-158, -130, -1000, -1000, 1863, -1000, 1417, -1000, -1000, 1034,
	-1000, 762, 2108, 2158, 1862, 20846, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 563, -1000, -1000, -1000, 1937, 285, -1000,
	2051, 855, 855, 858, 1517, 2050, -1000, -1000, 224, -57,
	-1000, -1000, -1000, 1367, -9, 170, -9, 1934, 1934, 300,
	1934, -1000, -9, -1000, -1000, -1000, 936, 2095, 927, 925,
	921, 917, -9, 1491, 1491, -1000, -1000, -1000, -1000, 1336,
	-1000, 1936, -1000, 1319, -1000, -1000, -1000, -1000, 224, 224,
	224, 224, -1000, -1000, -1000, 1254, 1966, 40807, -1000, 31119,
	-1000, 2115, -1000, -1000, -1000, 130, -1000, -1000, -1000, 2220,
	-1000, -1000, 40807, 37030, 40807, -1000, -1000, 91, 38305, 188,
	344, 219, -1000, -1000, 676, -1000, 675, -1000, -1000, -1000,
	-1000, -1000, -1000, 31119, 38305, -1000, -1000, -1000, -1000, -1000,
	2215, 1554, 1541, -1000, -1000, -1000, 1084, 1078, -1000, -1000,
	12348, 38305, -1000, 411, -1000, 3477, -1000, -1000, -1000, 967,
	709, -1000, -1000, -71, -1000, -1000, 674, 761, 760, 39973,
	672, -1000, 108, 38305, -1000, 40807, -1000, 2227, 2226, 133,
	2225, 38305, -1000, 48, 2011, -1000, 1861, -1000, 810, 682,
	820, 625, 625, -1000, 1016, 625, 2087, 2082, 958, -1000,
	218, -1000, 23881, 23881, 1858, 1490, 1487, -1000, 2006, -1000,
	-1000, -1000, 31119, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 22667, 8099, -1000, 1043, 3477, 3502, -1000, 12348,
	-1000, 8099, -1000, 15990, 1637, 1751, 1751, 1751, 1751, 1751,
	1034, -1000, -1000, -1000, -1000, 487, 1365, 487, -1000, 1365,
	-1000, 12348, 12348, -1000, 12348, 12348, -1000, -1000, 12348, 3449,
	3385, 1852, -247, -1000, 1814, 1092, -1000, 12955, 1413, -1000,
	-1000, -1000, 12348, 12348, -1000, -1000, -1000, -1000, -1000, 39556,
	-1000, -200, -200, -200, -200, -200, -1000, -1000, -1000, -1000,
	-200, -200, -200, -200, -200, -200, -200, -200, -200, -200,
	-200, -200, 210, 1853, -1000, 17811, 28994, 28994, 28994, 28994,
	28994, -1000, 1996, 1995, -1000, 1983, 1982, 1989, 35771, 1749,
	1637, 381, 28406, -1000, 1853, -1000, 35346, 782, 706, 705,
	694, 8099, 12348, 2215, 28994, 1786, 1786, -1000, 759, -1000,
	-1000, -1000, -123, -144, -1000, -1000, -1000, 23881, -1000, 21453,
	-1000, 21453, -1000, 36188, 639, 2054, 558, 1517, 1517, 1517,
	-1000, 1517, -1000, -1000, -1000, 1935, -1000, 1169, -1000, -1000,
	-1000, -1000, -1000, 1853, -404, 1318, 12348, 2249, -1000, 2049,
	-1000, 2048, 2047, 1484, -1000, -1000, 1697, 905, 1693, 1684,
	903, -9, -1000, -1000, 1934, -1000, 900, -1000, -1000, 945,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 873, 1744,
	-1000, 1742, 1857, -1000, 1738, 121, 31119, -1000, -1000, 2150,
	-1000, -1000, -1000, 2093, 1016, 1016, 1016, 1965, -1000, -1000,
	-1000, -1000, 1680, 1856, -1000, 1247, 40807, 40807, 40807, -1000,
	-252, 473, -1000, 38305, 151, 191, 392, 1524, 31119, 38305,
	-1000, -1000, -1000, 12955, -1000, -1000, 2148, -1000, 3477, 1704,
	-1000, -1000, -9, 31119, -1000, 38305, 915, 39139, 670, 38305,
	127, 162, -1000, 38305, 38305, 2224, 38305, 1844, 1483, 1985,
	645, 38722, 1517, 722, -1000, -1000, 642, -1000, 223, 1523,
	27814, 27389, 40807, 2046, 2045, 1522, 31119, 40807, -1000, -1000,
	41224, 1521, 12955, -1000, 40807, -1000, -1000, 40807, 755, -1000,
	40807, -1000, -1000, -1000, -1000, 1172, 6885, -1000, -1000, 1637,
	-1000, 12348, 3477, -1000, -1000, 748, -1000, -200, -200, -200,
	-200, -200, 1637, 1928, 1928, -1000, 1928, 1929, -1000, 1928,
	25, 1928, 24, 1637, 1637, 1637, 3100, 3078, 2601, 1943,
	1747, 12348, 12348, 12348, 1853, -193, -1000, 1034, 12955, 1820,
	1782, -1000, -1000, 1520, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1964, 17811, 1853, 14776, -1000, 40807, 1822, -1000,
	1060, 1056, 1044, 1042, 741, 736, -1000, -1000, -1000, -1000,
	-1000, 1860, 1933, 1963, 1485, -1000, -1000, -1000, -1000, 1994,
	-1000, 1984, -1000, -1000, 1923, -1000, -1000, 1845, 1853, 40807,
	12348, 782, -1000, 1853, 1853, 1853, 1637, 1110, 2207, 1786,
	-1000, -1000, 910, -1000, -1000, -1000, 20846, -1000, 1735, -1000,
	1928, 1928, 2044, -1000, 855, -1000, -1000, -1000, -1000, -1000,
	40807, -1000, 12348, 2147, -1000, 3477, -102, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 850, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -9, 1480, -9, 1317,
	-1000, 1302, -1000, -1000, -349, 1927, 221, -1000, 1016, 933,
	931, 1476, 31119, 148, 37030, -1000, 1247, 1247, 1247, 125,
	149, -1000, 1131, -1000, -1000, -1000, 1475, 1452, 1446, 1704,
	192, 1129, 158, -1000, 2135, -1000, -1000, 1034, 1078, -73,
	-1000, 162, -1000, -1000, -1000, 38305, 162, -1000, -1000, 171,
	1844, 1844, 38305, 1844, -1000, -1000, -1000, 41224, 442, 1247,
	1247, 1948, 855, 2043, 558, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1519, -1000, 838,
	-1000, 668, 442, 41224, 1034, 881, 1137, 23881, -1000, 2223,
	-1000, -1000, -1000, 3477, 22060, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 304, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 12348, 12348, 12348, 12348, -1000, 1747, 1747, 1747,
	12348, 1637, 1445, 1034, 12348, 12348, 943, -1000, -1000, 2123,
	1793, 1827, -1000, -1000, 7492, 1637, 2032, 1724, -1000, 34758,
	1722, -1000, 2207, 17811, 12955, 12955, 12955, 12955, -1000, -1000,
	12955, 1926, -1000, 12955, -1000, -1000, -1000, -1000, 40807, 325,
	-1000, 12955, 1722, 1351, -1000, 40807, 40807, 40807, -1000, 1441,
	2196, -1000, 770, 36188, 2122, 2122, 1517, 1517, 1720, -1000,
	1747, 1853, -1000, 1853, 1853, 1853, 1853, 1853, 1853, 1853,
	1853, 1853, 1853, 1853, -1000, -1000, 846, -1000, 841, 1678,
	1673, -1000, 36188, -1000, -1000, 888, -1000, -1000, -1000, -1000,
	-1000, 2182, -1000, 148, -1000, 1437, 283, 248, -1000, 272,
	270, 259, 241, 228, -1000, -1000, -1000, -1000, 402, 125,
	-1000, -80, 1301, 998, 2086, 149, -1000, 1284, 1274, 1257,
	1212, 203, -1000, -1000, -1000, -1000, 217, 191, -1000, 391,
	1427, -1000, 2067, 2065, 2145, 162, 2145, 124, 1844, 1791,
	1657, -1000, -1000, 1518, -1000, -1000, 1925, 1517, 1517, -1000,
	1516, -1000, -1000, 40807, -1000, 442, 2114, 2113, 1853, -1000,
	2215, 28994, 6885, -1000, -1000, -1000, -1000, 1747, 1747, 1747,
	1747, -1000, -1000, -1000, 198, -1000, -1000, 1747, 1747, 2207,
	2204, 2042, -1000, 1853, -1000, -1000, 1853, 215, -1000, 40807,
	2196, -1000, 1034, 1034, 1034, 1034, 1034, 40807, 1034, 1702,
	1853, 33908, -1000, 35771, 1683, 1683, 1683, -110, -1000, 770,
	-1000, 1515, 1016, 1426, -1000, -1000, -1000, -1000, -1000, 551,
	40807, -408, 12348, -1000, -1000, -1000, -1000, -1000, -1000, 1676,
	-1000, 221, -1000, -1000, 403, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2072, 2071, 313, -1000, 1425, 1424, -1000, 446,
	1339, 796, -212, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 389, 1512, -1000, 157, -1000, -1000,
	664, 2056, 2058, 2203, -1000, 38305, 2145, -1000, -1000, 2215,
	-1000, -1000, 224, 224, 36188, 1948, 1924, -1000, -1000, -1000,
	12348, -1000, 939, 2213, 1829, -1000, -1000, -1000, -1000, -1000,
	1637, 185, -264, -1000, -1000, 994, 12955, 2248, -1000, 1827,
	1853, -1000, 221, -1000, -1000, 1672, -1000, -1000, -1000, 782,
	-1000, -1000, -1000, 1853, -1000, -1000, 1200, -1000, 31119, -1000,
	-1000, -1000, -1000, 1747, 770, -1000, 312, 4449, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1194, -1000, -1000, 1272,
	394, 154, -1000, 2137, -1000, 1923, 1190, 2065, 2202, 2062,
	2060, -1000, 1421, -255, -1000, 2213, 1670, 1922, 36188, 3477,
	1666, -1000, 40807, 2211, 2201, -1000, -1000, 2005, -250, -276,
	1637, 179, 179, 1828, 17811, 1827, 1637, -1000, -1000, 23881,
	-1000, 1920, -408, -1000, 770, -1000, 388, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 12955, 12955,
	24488, 4449, 139, -1000, 123, -1000, -1000, -1000, 1420, -1000,
	992, -1000, 1416, -1000, 2200, 2199, -1000, 183, 2211, 770,
	36188, 1664, -1000, 939, 2031, -203, 12955, 12955, -1000, 2000,
	-1000, -1000, -1000, 186, -1000, 970, 309, 966, -1000, 1635,
	-1000, 1809, -1000, 1662, -1000, 1247, 40807, -1000, -1000, 1511,
	1510, -1000, 1397, 1240, 214, 193, 424, -1000, -1000, -1000,
	-1000, -414, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1408,
	1395, 36613, -203, -1000, 1660, 770, -1000, 428, -1000, 40807,
	-1000, 1034, 1795, -1000, 1034, -257, 1118, -1000, -1000, -1000,
	-1000, -1000, 40807, 1637, 23881, 227, 1656, -1000, -1000, -1000,
	1154, -1000, 12955, 4449, 2179, 2165, 2162, 2109, 23881, 5951,
	-1000, -1000, -1000, -1000, 112, 1704, -1000, 770, -1000, 408,
	1788, -1000, 2136, 12955, -274, 186, -1000, 34333, -1000, -1000,
	1296, -244, 1959, 199, 1102, 4449, -1000, 1202, -415, 432,
	221, 553, 12348, -1000, -1000, -1000, 38305, -1000, 1853, 40807,
	1853, -1000, -278, -1000, 35771, -1000, -1000, 1203, 1958, 1956,
	2222, -1000, -1000, -1000, -1000, -1000, -1000, 4449, -1000, -1000,
	-416, 4449, 3727, -1000, -1000, -1000, 4082, -1000, -1000, -1000,
	-1000, 197, -1000, -1000, 3477, 1704, 13562, -1000, -1000, -1000,
	-1000, 364, -1000, -1000, 2246, -1000, 2243, 702, 702, -1000,
	-417, 5569, -418, 656, 4449, 1053, -1000, 12955, -1000, 553,
	-1000, 1747, 1637, -1000, 1955, 12348, 1954, -1000, -1000, -1000,
	451, 1295, -1000, 5502, 1101, 4449, -1000, -421, 654, 4449,
	-1000, 1189, -1000, -1000, -1000, -292, 1276, -297, -1000, -1000,
	-1000, -1000, -1000, 5134, -1000, -423, 4449, -1000, -299, -1000,
	648, 4995, -425, -1000, -1000, 646, 4449, -1000,
}

var yyPgo = [...]int{
	0, 2680, 2679, 100, 2678, 267, 2677, 2676, 15, 2673,
	33, 27, 23, 30, 2670, 2418, 2406, 2395, 2375, 2366,
	2669, 10, 2668, 2667, 2364, 2665, 2664, 2360, 2358, 2356,
	2353, 2663, 2661, 2660, 2351, 2349, 2344, 8, 2659, 17,
	2655, 2, 156, 171, 2654, 4, 2653, 2652, 12, 2650,
	2649, 2340, 2645, 2642, 2641, 108, 2639, 2317, 2302, 2638,
	2296, 2291, 2635, 2634, 2279, 2274, 2272, 2633, 185, 2632,
	2630, 2629, 188, 102, 159, 2627, 2625, 2624, 124, 74,
	307, 123, 55, 121, 372, 2623, 14, 53, 258, 62,
	172, 2622, 117, 2621, 110, 2619, 2618, 168, 2617, 150,
	143, 91, 2616, 2612, 186, 2611, 2610, 2607, 107, 2605,
	2603, 182, 3777, 2599, 2598, 144, 2596, 49, 183, 54,
	95, 2594, 2591, 2590, 2589, 2588, 26, 2322, 2583, 105,
	152, 2580, 2578, 90, 2577, 2576, 76, 2575, 2573, 2560,
	148, 45, 2559, 2558, 50, 2557, 47, 57, 2556, 71,
	2555, 147, 2554, 2553, 41, 29, 2551, 59, 2550, 48,
	2544, 149, 234, 310, 2541, 25, 9, 20, 2540, 40,
	19, 3, 46, 18, 72, 51, 140, 97, 2539, 37,
	52, 122, 94, 2538, 98, 86, 43, 2537, 164, 2536,
	85, 163, 145, 141, 160, 2534, 2533, 2530, 193, 2527,
	132, 84, 2524, 103, 1535, 179, 120, 2520, 99, 2519,
	2516, 2510, 2509, 2508, 81, 137, 2507, 2506, 190, 180,
	192, 118, 2505, 60, 3540, 4012, 162, 3062, 142, 166,
	2504, 58, 2503, 2501, 2500, 2582, 114, 7, 113, 170,
	2499, 116, 32, 61, 2498, 2496, 2493, 2492, 2491, 2489,
	2487, 2485, 202, 2483, 2482, 226, 2475, 2474, 129, 178,
	2473, 138, 135, 131, 2472, 157, 38, 2468, 2467, 134,
	111, 2466, 2465, 2462, 2460, 139, 87, 158, 22, 2456,
	128, 127, 165, 2454, 89, 2453, 2452, 80, 56, 2451,
	2445, 2444, 2436, 112, 96, 2434, 75, 36, 39, 73,
	21, 2433, 2432, 88, 146, 2431, 35, 2430, 5, 6,
	11, 2429, 2427, 2425, 2424, 2423, 2421, 2416, 93, 2409,
	2404, 70, 2397, 2390, 2388, 44, 2386, 2382, 2380, 151,
	130, 104, 169, 167, 16, 2377, 2373, 13, 2371, 133,
	2369, 65, 2362, 64, 2346, 2338, 67, 2335, 2332, 66,
	2326, 2321, 175, 2011, 303, 2319, 155, 119, 42, 63,
	2311, 2304, 0, 1189, 181, 83, 2299, 2288, 2281,
}

var yyR1 = [...]int{
	0, 361, 361, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 67, 3, 3, 8,
	9, 4, 4, 4, 5, 89, 89, 184, 184, 184,
	184, 183, 183, 90, 90, 91, 91, 88, 88, 97,
	6, 6, 7, 7, 10, 10, 71, 71, 11, 12,
	12, 12, 12, 364, 364, 106, 106, 104, 104, 105,
	105, 181, 181, 13, 13, 13, 188, 188, 193, 193,
	193, 196, 196, 196, 196, 171, 172, 173, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	335, 335, 344, 344, 344, 345, 345, 343, 343, 343,
	343, 343, 347, 347, 348, 348, 346, 346, 346, 346,
	350, 350, 351, 351, 349, 349, 349, 349, 349, 349,
	349, 349, 349, 349, 349, 349, 349, 349, 338, 338,
	338, 34, 34, 34, 34, 34, 35, 35, 35, 35,
	35, 35, 352, 352, 352, 352, 352, 352, 352, 352,
	352, 352, 352, 352, 352, 352, 352, 352, 352, 352,
	352, 352, 352, 352, 352, 352, 352, 352, 352, 352,
	352, 352, 352, 353, 353, 354, 354, 355, 355, 356,
	356, 356, 356, 357, 357, 357, 357, 357, 358, 358,
	358, 358, 358, 358, 358, 359, 359, 360, 360, 2,
	316, 316, 317, 317, 318, 318, 318, 318, 319, 319,
	320, 320, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 25, 220, 220, 217, 217, 217, 218, 218,
	219, 219, 219, 337, 337, 337, 331, 331, 331, 333,
	333, 332, 332, 332, 334, 334, 339, 339, 339, 339,
	339, 341, 341, 341, 341, 341, 341, 342, 342, 342,
	340, 340, 49, 49, 50, 50, 50, 160, 160, 160,
	14, 14, 14, 14, 14, 20, 22, 22, 38, 38,
	39, 23, 23, 23, 23, 40, 40, 41, 26, 26,
	26, 26, 26, 26, 47, 47, 47, 46, 46, 45,
	45, 45, 45, 45, 45, 24, 24, 24, 24, 48,
	48, 43, 43, 42, 44, 44, 44, 44, 44, 44,
	44, 44, 44, 44, 44, 44, 27, 27, 27, 27,
	27, 27, 19, 315, 315, 315, 37, 37, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 53, 53,
	289, 290, 290, 290, 290, 290, 290, 290, 290, 276,
	276, 277, 277, 277, 277, 277, 266, 266, 266, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	242, 242, 242, 242, 248, 248, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 247, 247, 247, 247,
	247, 247, 247, 247, 249, 249, 249, 249, 249, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 251, 251, 251, 251,
	251, 251, 251, 251, 275, 275, 252, 252, 255, 255,
	255, 269, 269, 270, 270, 270, 267, 267, 267, 268,
	268, 256, 257, 271, 258, 258, 258, 259, 259, 259,
	260, 260, 265, 265, 264, 264, 264, 264, 264, 264,
	261, 261, 261, 261, 262, 262, 263, 274, 274, 274,
	274, 274, 253, 36, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 302, 302, 210, 210,
	211, 211, 279, 279, 300, 300, 299, 299, 298, 298,
	298, 288, 288, 295, 295, 295, 295, 295, 295, 295,
	295, 283, 283, 283, 282, 282, 284, 284, 287, 287,
	297, 297, 296, 296, 280, 280, 280, 303, 303, 303,
	303, 303, 281, 281, 281, 281, 281, 304, 285, 285,
	286, 286, 286, 309, 310, 308, 308, 308, 308, 308,
	123, 123, 123, 292, 292, 292, 293, 293, 293, 294,
	294, 294, 294, 294, 294, 313, 313, 312, 312, 51,
	52, 56, 56, 55, 55, 55, 55, 55, 55, 55,
	55, 55, 55, 55, 55, 55, 55, 55, 55, 55,
	55, 55, 55, 55, 55, 55, 55, 55, 55, 55,
	55, 55, 55, 55, 55, 159, 159, 159, 215, 215,
	307, 305, 305, 306, 306, 16, 16, 54, 54, 336,
	336, 17, 17, 17, 17, 17, 17, 17, 17, 17,
	311, 311, 311, 18, 18, 57, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 85, 202, 202, 201, 201, 200, 200, 200, 203,
	203, 203, 203, 240, 240, 240, 59, 59, 59, 63,
	63, 66, 66, 66, 64, 65, 28, 29, 29, 29,
	29, 30, 216, 216, 61, 61, 62, 62, 62, 62,
	77, 77, 366, 366, 60, 367, 68, 69, 69, 70,
	70, 70, 206, 206, 74, 74, 74, 72, 72, 72,
	73, 73, 79, 79, 83, 83, 83, 83, 82, 82,
	82, 82, 162, 162, 167, 232, 232, 143, 143, 163,
	163, 168, 168, 168, 169, 169, 170, 170, 170, 170,
	170, 165, 165, 164, 164, 166, 131, 131, 230, 230,
	230, 230, 229, 229, 229, 229, 229, 229, 87, 87,
	92, 92, 94, 94, 94, 94, 94, 94, 98, 145,
	145, 116, 116, 117, 117, 117, 117, 117, 129, 129,
	180, 180, 179, 179, 182, 182, 93, 95, 95, 95,
	95, 101, 101, 102, 102, 103, 103, 214, 214, 237,
	237, 237, 107, 107, 107, 109, 108, 108, 108, 108,
	110, 110, 96, 96, 291, 291, 278, 244, 244, 245,
	368, 368, 368, 368, 111, 111, 113, 114, 114, 112,
	112, 112, 112, 112, 118, 118, 115, 119, 119, 119,
	119, 120, 120, 84, 84, 84, 84, 84, 84, 84,
	84, 199, 199, 122, 122, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 139, 139, 139, 139, 139,
	139, 124, 124, 124, 124, 124, 124, 124, 78, 78,
	140, 140, 140, 100, 99, 99, 81, 81, 80, 80,
	141, 141, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 134, 134,
	138, 138, 138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 137, 137, 137,
	137, 137, 137, 137, 137, 137, 137, 137, 132, 132,
	132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
	132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
	132, 132, 132, 132, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 365, 365, 136, 135, 135, 135, 135, 135, 135,
	75, 75, 75, 75, 75, 238, 238, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 152, 152, 76, 76, 150, 150, 151, 153,
	153, 149, 149, 149, 149, 149, 149, 149, 149, 149,
	149, 149, 126, 126, 126, 126, 126, 126, 126, 126,
	128, 128, 128, 154, 154, 142, 142, 86, 155, 155,
	156, 157, 157, 158, 158, 161, 174, 174, 174, 175,
	175, 175, 175, 130, 130, 176, 176, 176, 125, 125,
	125, 125, 125, 125, 125, 178, 178, 177, 177, 177,
	177, 177, 177, 177, 177, 185, 185, 144, 144, 147,
	147, 146, 148, 186, 186, 190, 190, 190, 190, 187,
	187, 191, 191, 191, 191, 194, 194, 195, 195, 195,
	192, 192, 192, 189, 189, 189, 234, 234, 234, 197,
	197, 207, 207, 204, 204, 205, 205, 198, 198, 254,
	254, 254, 213, 213, 212, 212, 212, 208, 208, 208,
	209, 209, 231, 231, 227, 227, 233, 233, 228, 228,
	235, 235, 236, 236, 314, 314, 272, 272, 324, 324,
	273, 273, 325, 325, 327, 327, 322, 322, 323, 323,
	326, 326, 31, 328, 328, 329, 329, 330, 330, 330,
	330, 32, 33, 33, 33, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 226, 226, 226, 226, 226, 226, 224, 224,
	224, 224, 224, 362, 363,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 11, 5, 7, 1,
	5, 1, 13, 3, 13, 0, 2, 0, 2, 3,
	3, 1, 3, 2, 3, 0, 1, 1, 3, 4,
	1, 3, 1, 3, 8, 9, 1, 1, 10, 9,
	8, 7, 7, 1, 1, 1, 3, 1, 3, 1,
	3, 0, 4, 3, 4, 5, 1, 3, 3, 2,
	2, 2, 2, 2, 1, 0, 0, 0, 2, 3,
	3, 11, 9, 11, 5, 5, 16, 12, 9, 4,
	0, 3, 0, 2, 2, 1, 3, 1, 1, 2,
	2, 2, 0, 2, 1, 2, 2, 2, 2, 2,
	0, 1, 1, 2, 3, 3, 5, 3, 3, 4,
	5, 4, 4, 2, 2, 2, 2, 2, 0, 2,
	2, 9, 10, 9, 5, 7, 7, 7, 7, 8,
	4, 6, 2, 3, 2, 3, 3, 3, 4, 3,
	3, 2, 2, 3, 2, 2, 2, 2, 2, 3,
	2, 2, 2, 3, 3, 2, 3, 3, 2, 2,
	2, 2, 2, 1, 3, 0, 3, 1, 3, 0,
	1, 1, 1, 1, 3, 1, 3, 3, 0, 2,
	5, 5, 5, 7, 5, 0, 3, 0, 3, 4,
	0, 1, 1, 3, 2, 3, 3, 3, 0, 1,
	1, 2, 2, 2, 2, 1, 2, 2, 3, 3,
	3, 3, 4, 2, 3, 3, 3, 3, 0, 3,
	0, 3, 3, 1, 1, 1, 3, 2, 1, 1,
	3, 3, 2, 1, 1, 3, 1, 2, 5, 4,
	6, 4, 3, 3, 6, 5, 5, 4, 3, 5,
	1, 3, 1, 1, 1, 1, 1, 0, 2, 2,
	1, 1, 1, 1, 1, 4, 5, 8, 1, 2,
	5, 7, 10, 8, 11, 1, 2, 5, 5, 5,
	5, 6, 3, 5, 1, 1, 1, 1, 3, 1,
	1, 1, 2, 1, 1, 2, 4, 2, 4, 2,
	3, 1, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 4, 3,
	2, 4, 3, 0, 2, 3, 1, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 5, 5,
	4, 1, 1, 2, 3, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 0, 1, 1, 0,
	2, 3, 2, 2, 2, 2, 2, 6, 8, 3,
	3, 1, 1, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 3, 2,
	2, 2, 2, 2, 1, 2, 2, 2, 1, 4,
	4, 3, 3, 2, 4, 5, 2, 3, 4, 2,
	2, 3, 3, 3, 3, 3, 4, 1, 1, 1,
	1, 1, 6, 6, 4, 4, 4, 5, 3, 3,
	3, 3, 3, 4, 6, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 0, 3, 0, 3,
	3, 0, 5, 0, 3, 5, 0, 1, 1, 0,
	1, 2, 3, 1, 0, 3, 3, 0, 2, 2,
	0, 1, 0, 1, 1, 1, 1, 2, 2, 2,
	5, 5, 4, 4, 4, 4, 4, 2, 1, 2,
	1, 2, 2, 3, 2, 2, 2, 2, 1, 1,
	1, 1, 3, 2, 1, 1, 0, 3, 1, 1,
	0, 1, 5, 4, 0, 1, 1, 2, 2, 3,
	2, 0, 1, 3, 5, 3, 3, 5, 3, 2,
	2, 1, 1, 1, 1, 1, 0, 1, 0, 1,
	1, 3, 3, 3, 3, 3, 1, 10, 11, 11,
	12, 12, 3, 3, 3, 2, 1, 5, 1, 1,
	0, 2, 2, 3, 3, 1, 1, 2, 2, 2,
	0, 1, 2, 0, 1, 3, 1, 2, 3, 1,
	1, 1, 1, 1, 1, 0, 2, 0, 2, 1,
	5, 1, 3, 5, 4, 3, 5, 3, 8, 10,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 5, 4, 5, 1, 2, 2, 4, 3, 6,
	5, 3, 9, 2, 2, 0, 1, 2, 0, 1,
	7, 1, 3, 8, 8, 3, 3, 3, 5, 3,
	5, 5, 5, 4, 4, 4, 4, 4, 4, 4,
	0, 1, 1, 3, 2, 3, 3, 4, 3, 5,
	5, 5, 4, 4, 4, 2, 2, 2, 6, 2,
	4, 4, 4, 5, 8, 6, 3, 5, 4, 2,
	4, 3, 2, 4, 5, 6, 2, 6, 6, 3,
	3, 3, 0, 1, 1, 1, 0, 2, 2, 0,
	2, 3, 2, 0, 1, 1, 2, 4, 1, 1,
	1, 2, 4, 4, 1, 1, 2, 3, 4, 4,
	5, 3, 1, 1, 3, 3, 1, 1, 1, 1,
	0, 3, 1, 1, 3, 0, 2, 0, 2, 1,
	2, 2, 0, 1, 0, 1, 1, 0, 1, 1,
	0, 1, 3, 5, 1, 1, 3, 5, 1, 2,
	3, 5, 2, 2, 6, 0, 1, 0, 3, 0,
	1, 0, 2, 2, 4, 1, 2, 2, 2, 2,
	2, 0, 2, 1, 3, 3, 1, 3, 0, 1,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 1, 1, 4, 1, 3, 1, 1, 2, 2,
	4, 2, 6, 1, 4, 6, 3, 2, 0, 3,
	0, 3, 1, 3, 1, 3, 4, 4, 4, 4,
	3, 2, 4, 0, 1, 0, 2, 0, 1, 1,
	1, 1, 1, 2, 2, 1, 2, 3, 2, 3,
	2, 2, 12, 11, 1, 3, 3, 4, 3, 0,
	0, 3, 4, 3, 1, 3, 3, 2, 1, 1,
	3, 1, 1, 1, 1, 3, 3, 0, 5, 5,
	5, 0, 2, 1, 3, 3, 3, 2, 3, 1,
	2, 0, 3, 1, 1, 3, 3, 4, 4, 5,
	3, 4, 5, 6, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 0, 2,
	1, 1, 1, 3, 1, 3, 0, 1, 1, 3,
	1, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 2, 2, 2,
	2, 3, 1, 1, 1, 1, 1, 1, 5, 6,
	6, 6, 5, 5, 5, 6, 5, 5, 6, 5,
	5, 5, 5, 6, 5, 5, 5, 4, 4, 5,
	5, 5, 5, 5, 4, 4, 4, 4, 4, 4,
	4, 4, 3, 6, 6, 4, 6, 6, 4, 8,
	8, 8, 8, 4, 6, 7, 7, 7, 9, 4,
	7, 5, 4, 4, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 8,
	8, 0, 2, 3, 4, 4, 4, 4, 4, 4,
	0, 3, 4, 7, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	3, 3, 1, 2, 2, 1, 2, 1, 2, 2,
	1, 2, 0, 1, 0, 2, 1, 2, 4, 0,
	2, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 0, 3, 1, 3, 1, 0, 2,
	1, 0, 3, 1, 3, 2, 0, 1, 1, 0,
	2, 4, 4, 1, 1, 0, 2, 4, 2, 4,
	1, 3, 5, 4, 6, 0, 3, 1, 3, 3,
	5, 1, 1, 1, 1, 0, 5, 1, 3, 1,
	2, 3, 1, 1, 3, 3, 3, 3, 3, 1,
	3, 1, 2, 2, 3, 1, 1, 1, 1, 1,
	3, 3, 3, 1, 2, 1, 1, 1, 1, 1,
	1, 0, 1, 0, 2, 0, 3, 0, 1, 0,
	3, 3, 1, 1, 0, 1, 1, 1, 1, 1,
	0, 1, 0, 2, 1, 1, 1, 3, 1, 1,
	1, 1, 1, 1, 0, 2, 0, 1, 0, 4,
	0, 1, 0, 3, 0, 3, 0, 4, 0, 3,
	0, 3, 3, 1, 3, 2, 4, 1, 2, 1,
	2, 2, 2, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -361, -1, -3, -9, -10, -11, -12, -13, -15,
	-51, -16, -17, -18, -57, -58, -59, -63, -64, -65,
	-61, -60, -24, -27, -19, -67, -28, -29, -30, -31,
	-32, -33, -34, -35, -36, -4, 6, 7, -91, 29,
	-53, 181, -52, 184, 183, 219, 185, 212, 64, 342,
	-66, 345, 346, -366, -216, 270, 271, 20, 37, 347,
	349, 30, 31, 233, 287, 289, 314, -5, -90, -6,
	182, 343, 214, 213, 26, 493, -362, 68, 612, -157,
	15, -68, -367, -68, -71, 9, 10, 8, 442, -68,
	-289, -214, 109, 68, 23, -209, -220, 89, 433, 189,
	-218, 283, 285, -207, -208, -217, 243, 253, 44, 200,
	199, 254, 190, 283, 190, 191, 193, 433, 189, 226,
	225, 283, 285, 190, -112, -235, -224, -225, 301, 72,
	-223, 459, 463, 466, 467, 472, 291, 81, 323, 324,
	315, 325, 210, 284, 290, 293, 316, 579, 326, 328,
	329, 453, 454, 193, 203, 597, 308, 211, 490, 254,
	607, 600, 295, 402, 342, 358, 350, 373, 491, 550,
	265, 341, 419, 298, 258, 321, 551, 408, 414, 268,
	345, 428, 234, 552, 262, 264, 263, 248, 458, 269,
	36, 215, 369, 304, 243, 553, 546, 237, 35, 27,
	236, 431, 100, 554, 332, 416, 390, 333, 232, 555,
	495, 302, 415, 365, 314, 118, 241, 280, 412, 334,
	556, 391, 395, 557, 420, 288, 279, 558, 559, 335,
	560, 192, 294, 561, 244, 422, 299, 389, 201, 492,
	48, 223, 423, 393, 399, 562, 331, 563, 564, 565,
	566, 312, 310, 311, 313, 255, 260, 53, 187, 397,
	396, 398, 261, 418, 378, 376, 567, 568, 303, 207,
	569, 570, 377, 18, 571, 572, 426, 306, 573, 574,
	575, 488, 576, 577, 417, 392, 394, 242, 117, 578,
	309, 413, 318, 494, 292, 580, 337, 222, 217, 427,
	327, 581, 582, 583, 584, 585, 286, 285, 346, 319,
	347, 266, 586, 587, 588, 589, 252, 235, 430, 421,
	52, 404, 590, 322, 338, 407, 343, 229, 7, 259,
	300, 411, 320, 267, 253, 256, 380, 224, 591, 592,
	367, 368, 344, 227, 219, 112, 429, 545, 283, 339,
	51, 230, 593, 594, 257, 231, 348, 297, 370, 190,
	134, 374, 419, 181, 409, 410, 416, -283, 417, 225,
	228, -240, 190, -202, 408, 288, 309, 463, 231, 232,
	191, 192, 32, 421, 420, 412, -235, 194, 348, -77,
	185, 220, -112, -48, 72, 272, -48, 29, 72, 72,
	36, 72, 347, 411, 411, 75, 494, 234, 21, -353,
	-334, 318, -352, -332, 182, 181, 10, 183, 323, 324,
	325, 191, 8, 30, 579, 208, 326, 327, 6, 212,
	328, 329, 226, 9, 330, -337, 74, 72, -223, 21,
	-353, -334, 318, -211, -210, 340, 399, 6, -70, 5,
	-198, 195, 344, -88, 549, -97, -237, -235, -224, 74,
	-8, -3, -90, -175, 17, 16, -74, 54, 55, -69,
	-82, 125, -84, -235, -121, 92, -127, 28, 72, -223,
	24, -126, 301, 220, -122, -149, -224, -148, -100, 134,
	-239, 123, 124, 131, 93, 177, -134, -132, -133, -135,
	-137, -138, 74, 73, 82, 75, 76, 77, 78, 84,
	85, 86, -227, -225, -222, 459, 463, 466, 467, 472,
	-146, -362, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 58, 59, 457, 189, 443, 444,
	371, 8, 445, 446, 447, 489, 210, 451, 95, 47,
	534, 432, 441, 440, 439, 437, 438, 434, 436, 435,
	453, 454, 196, 433, 129, 442, 476, 477, 478, 479,
	480, 481, 482, 483, 485, 486, 484, 460, 461, 462,
	464, 465, 468, 469, 470, 471, 473, 474, 475, 496,
	186, 182, 185, 91, 23, 25, 497, 240, 94, 356,
	385, 450, 16, 20, 204, 188, 374, 202, 133, 198,
	205, 274, 276, 181, 62, 498, 275, 409, 499, 500,
	501, 502, 364, 362, 273, 503, 10, 26, 213, 247,
	504, 360, 183, 238, 98, 99, 506, 41, 40, 307,
	277, 214, 507, 361, 508, 509, 19, 65, 206, 11,
	200, 228, 606, 510, 287, 13, 116, 14, 511, 512,
	513, 514, 195, 111, 191, 596, 60, 245, 515, 354,
	516, 517, 518, 519, 520, 355, 88, 521, 522, 108,
	523, 56, 487, 32, 233, 547, 448, 524, 525, 38,
	37, 384, 388, 383, 526, 400, 109, 17, 30, 527,
	528, 221, 387, 353, 382, 548, 529, 530, 250, 63,
	340, 363, 610, 33, 66, 218, 336, 305, 42, 89,
	15, 246, 61, 34, 455, 113, 611, 366, 197, 225,
	532, 424, 249, 533, 114, 359, 549, 208, 110, 349,
	184, 317, 271, 209, 535, 289, 536, 239, 115, 410,
	537, 538, 452, 29, 212, 270, 352, 199, 539, 251,
	282, 272, 281, 540, 541, 296, 43, 608, 595, 190,
	39, 97, 386, 351, 381, 194, 449, 226, 278, 5,
	44, 31, 405, 9, 330, 64, 67, 375, 372, 542,
	379, 609, 12, 543, 456, 493, 425, 90, 544, 406,
	-68, -68, -68, -187, 344, -194, -191, 420, 421, -192,
	-195, -189, -149, 399, 576, 577, 419, 374, 418, -227,
	-235, 301, 220, 459, 134, 460, 461, 462, 95, 371,
	443, 463, 476, 434, 436, 432, 435, 433, 28, 477,
	24, 86, 478, 457, 196, 8, 177, 464, 465, 479,
	480, 481, 58, 437, 438, 489, 466, 467, 129, 92,
	482, 483, 84, 485, 486, 534, 442, 59, 484, 189,
	470, 469, 468, 471, 445, 446, 472, 85, 439, 440,
	441, 47, 474, 473, 475, -2, -5, 6, -112, -290,
	-277, -281, -227, -224, -225, -226, 216, 205, -304, 72,
	-223, 301, 220, 50, 87, 55, 54, 202, 191, 193,
	442, -205, 196, -205, 226, 225, -219, 251, -205, -205,
	190, -218, 101, 101, -54, -112, -336, -331, -337, -204,
	196, -227, -204, -204, -204, -204, -204, -204, -204, -112,
	178, -104, -112, 72, 29, -203, 109, 12, 433, 189,
	190, 225, 226, 193, -285, 11, 111, 229, 229, 229,
	230, 229, -201, 411, 413, 227, 414, 415, 12, -85,
	109, 19, -362, -175, -175, 126, 72, 347, 194, -62,
	-3, -12, -10, -11, -8, 101, -129, 23, 29, 29,
	74, 51, 29, -43, -42, -44, 258, 259, 260, 261,
	262, 263, 264, 265, 266, 267, 268, 269, 29, -315,
	68, -272, 399, 72, -328, -329, -112, 75, 75, 66,
	309, 66, 69, 194, 69, 66, -354, 319, 68, -354,
	285, 319, 320, 253, 283, 193, -354, -354, 285, -354,
	-354, -354, -354, -354, 411, -354, -354, -354, 321, 322,
	-354, 409, 193, -354, -354, -354, -354, -354, 71, 66,
	69, 309, 66, 11, 66, -301, 134, 332, 333, 334,
	335, 331, 309, 336, 337, 338, 229, 339, -68, -7,
	-5, -362, 21, 22, 190, 424, 69, -88, -178, -362,
	-363, 70, -176, 19, 30, -130, 75, 78, -158, -161,
	-84, -235, 50, -72, 21, 22, 80, 11, -230, 91,
	89, 90, 108, -229, 23, 72, -223, -224, 74, -225,
	-226, 178, -84, -124, 111, 92, 109, 110, 94, 120,
	119, 130, 123, 124, 125, 126, 127, 128, 129, 121,
	122, 133, 101, 102, 103, 104, 105, 106, 107, -199,
	-362, -100, -362, 178, -362, 178, 179, 180, -127, -127,
	-127, -127, -127, -127, -127, -362, 178, 178, -362, -362,
	-362, -362, -362, -8, -141, -84, 493, -362, -362, -362,
	-362, -362, -362, -362, -362, -362, -362, -362, -362, -362,
	-362, -362, -152, -84, -362, -362, -365, -136, -362, -365,
	-136, -365, -136, -365, -362, -365, -136, -365, -136, -365,
	-365, -136, -365, -362, -362, -362, -362, -362, -362, -362,
	-362, -362, -362, -362, -362, -362, -362, -362, -362, -362,
	-362, -362, -362, -362, -362, -362, -362, -362, -362, -362,
	-362, -362, -198, -198, 11, -104, -105, -115, -235, 69,
	-188, -193, 422, 424, 344, -192, -192, -234, -227, 74,
	28, 101, 29, 178, -157, -68, 70, 69, -281, -242,
	-248, -250, -249, -251, -246, -247, 371, 374, 378, 376,
	372, 377, 134, 375, 380, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 390, 29, 215, 367, 368, 369,
	370, 391, 392, 393, 394, 395, 396, 397, 398, 350,
	373, 491, 351, 352, 353, 354, 355, 356, 358, 359,
	360, 361, 362, 363, 364, 365, -242, -242, -242, -242,
	72, 229, -224, -304, 68, -227, -112, -220, -218, 72,
	92, 72, -111, -227, -235, -118, -227, -235, 252, -340,
	-339, -331, -334, -205, -219, -331, 257, 255, 256, 69,
	194, 69, 194, 71, -104, 24, 66, -106, -112, 72,
	72, -111, -118, -333, -331, -334, -236, -235, -221, 496,
	186, 21, 182, 185, 91, 23, 25, 497, 459, 240,
	94, 356, 134, 460, 461, 462, 385, 450, 16, 20,
	204, 95, 188, 371, 374, 202, 133, 198, 205, 274,
	276, 443, 463, 476, 181, 62, 498, 434, 436, 432,
	435, 275, 433, 409, 499, 500, 501, 502, 364, 362,
	273, 28, 503, 10, 477, 26, 213, 247, 22, 504,
	127, 360, 183, 238, 98, 99, 506, 41, 40, 307,
	24, 277, 214, 86, 507, 478, 361, 508, 509, 19,
	65, 206, 11, 200, 228, 606, 510, 287, 13, 457,
	116, 14, 511, 512, 513, 514, 196, 195, 111, 191,
	596, 60, 245, 8, 515, 354, 516, 517, 518, 519,
	520, 355, 177, 88, 521, 522, 108, 523, 56, 464,
	465, 487, 45, 32, 233, 479, 480, 547, 481, 448,
	524, 525, 38, 37, 384, 388, 383, 526, 400, 58,
	109, 17, 437, 438, 30, 527, 528, 489, 466, 221,
	387, 353, 382, 548, 529, 467, 530, 129, 250, 63,
	92, 340, 482, 483, 84, 363, 610, 33, 66, 218,
	336, 305, 42, 89, 15, 246, 61, 34, 455, 113,
	611, 485, 366, 197, 225, 532, 424, 249, 533, 114,
	486, 359, 549, 208, 110, 349, 184, 534, 442, 317,
	271, 209, 535, 289, 59, 536, 239, 115, 484, 189,
	410, 537, 6, 538, 452, 29, 212, 270, 352, 199,
	539, 251, 282, 272, 281, 540, 49, 541, 296, 43,
	470, 469, 468, 471, 608, 57, 445, 446, 472, 595,
	190, 39, 97, 386, 351, 381, 194, 449, 226, 85,
	278, 5, 44, 31, 405, 9, 330, 64, 67, 439,
	440, 441, 47, 375, 372, 542, 474, 379, 473, 475,
	609, 96, 12, 543, 456, 493, 425, 90, 544, 406,
	69, -203, 74, -239, -84, -205, -205, -112, -112, -112,
	-112, -112, -203, -203, -203, -203, -200, 11, 111, 11,
	-200, -200, -84, -127, -331, 435, 125, -235, 72, 72,
	347, 72, 33, -43, -43, 74, -43, 69, 101, -43,
	70, -141, -314, 596, 69, -330, 23, 424, 425, 400,
	-356, 190, 228, 225, 66, -356, -352, 327, -333, -332,
	-331, -354, -355, -227, -354, -354, -354, 411, -354, -354,
	-354, -354, -354, -354, -354, -354, -337, -356, 287, 69,
	-356, -333, -331, 331, 331, 331, 331, 331, 331, -74,
	-8, -112, 425, 426, -97, 23, -177, -227, -228, -224,
	-225, -226, 216, -221, 459, 463, 466, 467, 472, -184,
	88, 9, 111, 69, 18, 69, -174, 25, 26, 178,
	-128, 51, 75, 78, -206, 49, -112, -84, -84, -84,
	-139, 84, 92, 85, 86, -229, 216, 125, -236, -228,
	-225, 301, 220, -221, -227, -127, -140, -146, -100, 79,
	111, 109, 110, 94, -127, -127, -127, -127, -127, -127,
	-127, -127, -127, -127, -127, -127, -127, -127, -127, -238,
	72, 74, 72, -228, -80, -83, 125, -84, -235, -228,
	-126, 84, -126, -227, -72, -228, -228, -72, -72, -72,
	-72, -72, -363, 69, -363, -8, -80, -80, -80, -363,
	-84, -84, -80, -80, -149, 74, -80, -149, 74, -80,
	-127, 448, 449, 450, -80, -80, -72, -150, -151, 96,
	-149, -80, -363, -127, -227, -227, -80, -81, -80, -80,
	-80, -363, -363, -83, -80, -83, -80, -80, -363, -363,
	-363, -363, -80, -80, -80, -80, -80, -80, -80, -80,
	-80, -80, -80, -80, -114, 88, -112, -87, -92, -94,
	-95, -116, -99, -362, -93, -96, -112, -100, 72, 487,
	-112, -104, -364, 11, 67, -364, 69, 178, -191, -194,
	69, 423, 425, 426, -188, -259, 133, 66, 87, -84,
	-228, -236, -175, -74, -292, -293, -294, -228, 74, 75,
	81, 323, 293, -277, -279, -280, -281, -295, 205, -303,
	197, 199, 200, 44, -282, 206, 191, 45, -243, -267,
	404, 405, -252, 68, -255, 68, -255, 379, 371, 374,
	372, -255, -255, -255, -255, -255, -258, 374, -258, -258,
	-258, -258, 372, 68, 68, -252, -252, -252, -269, 68,
	-269, 366, -270, 68, -270, -270, -270, -270, -243, -243,
	-243, -243, -304, -304, -304, -84, -231, 67, 23, 193,
	-265, -264, -261, -262, -263, -260, 28, 24, -265, -49,
	240, 211, 178, 68, 178, 243, 244, -335, 69, 28,
	-341, 284, -112, 220, -112, -112, -331, -331, -337, -311,
	209, 204, -112, 69, 69, -112, 74, 72, 72, -129,
	-286, 11, 111, -203, -235, -235, -112, -129, -203, -78,
	216, 67, -365, -363, 72, -127, -42, -126, 70, -113,
	88, 74, -329, -237, 399, 425, -357, 125, -227, -356,
	-357, -360, 493, 194, 70, 69, -354, -357, 305, 287,
	-357, 11, -302, 19, -72, -363, -56, -55, 186, 183,
	184, 187, 188, -307, 402, 182, 237, 236, 222, -99,
	-362, -363, 69, 178, -183, 34, 35, -227, 52, -130,
	-130, -161, -197, 19, 11, 47, 47, -73, 57, 84,
	85, 86, 178, -362, -140, -127, -127, -127, -78, 91,
	-363, 69, -363, 178, -81, -80, -80, -80, -80, -80,
	-84, -363, -363, -363, -363, 69, 67, 23, -363, 67,
	-363, 11, 11, -363, 11, 11, -363, -363, 11, -127,
	-127, -127, -363, -363, -80, -153, -151, 98, -84, -363,
	-363, -363, 69, 69, -363, -363, -363, -363, -162, 455,
	-162, -363, -363, -363, -363, -363, -162, -162, -162, -162,
	-363, -363, -363, -363, -363, -363, -363, -363, -363, -363,
	-363, -363, -181, 113, -112, 29, 69, -107, -109, -108,
	-110, 56, 60, 62, 57, 58, 59, 63, -214, -87,
	-98, 47, -362, -117, 113, -119, 23, -237, 64, 195,
	65, -362, -362, -181, 67, -87, -87, -115, -235, 125,
	-193, -196, 427, 424, 430, 72, 74, 178, -176, 69,
	-294, 101, -281, 68, 72, -287, -224, 45, -282, -284,
	-282, -282, -287, 72, -287, 45, 84, 92, -256, -257,
	-271, -274, -253, 23, 606, 407, 28, 66, 402, 197,
	45, 44, 200, 81, -268, 406, 75, -258, 75, 466,
	-258, -255, -255, -255, 379, -255, -258, -259, 134, 29,
	-259, 134, -259, 134, -259, 134, -259, 134, -258, -275,
	74, -275, 75, -269, 75, 70, 66, -227, -171, -112,
	-262, -261, -263, 374, 419, 133, 431, -50, 8, 9,
	10, -227, -316, -317, -318, -227, 111, 245, 246, -227,
	-344, 317, -339, 285, 294, 91, 16, 493, 194, 194,
	-112, -331, -120, 12, 72, 72, -200, -203, -127, -334,
	231, 232, -181, 190, -330, 194, 178, 178, -357, 194,
	308, -333, -227, 11, 11, 305, 11, -333, 341, -206,
	69, -215, -282, -313, -280, -281, -312, 198, 205, -215,
	205, 202, -282, 206, 197, 198, -212, -282, 194, 23,
	-215, -215, -288, 101, -215, 32, 32, 113, -228, -228,
	69, 74, 74, 53, -112, -79, -172, 125, -228, -81,
	-78, 91, -127, -83, 125, -236, -363, -363, -363, -363,
	-363, -363, -241, 134, 371, 215, 369, 362, 389, 376,
	404, 367, 405, -238, -241, -238, -127, -127, -127, -127,
	-127, 11, 11, 11, 490, -157, 100, -84, 97, -127,
	-127, -227, -167, -362, -162, -162, -162, -162, -162, -163,
	-162, -163, -163, -163, -163, -163, -163, -163, -163, -163,
	-163, -163, -125, 29, 47, -362, -8, -362, -186, -190,
	-149, -224, -226, 216, 301, 220, 459, 463, 466, 467,
	472, -92, -94, -94, -92, -94, 56, 56, 56, 61,
	56, 61, 56, -108, -237, -363, -363, -145, 239, -362,
	33, -237, -119, 191, 191, 191, -81, -127, -120, -87,
	-120, -120, 178, 424, 428, 429, -293, -294, -297, -296,
	-227, -224, 197, -303, 44, -303, -287, -287, -287, -287,
	68, 84, -362, 607, 75, -127, 9, 45, 45, 45,
	74, 70, -259, 134, 70, 70, -259, 134, -258, -255,
	-259, 134, 72, 134, -259, 134, 70, 69, 70, 69,
	70, 69, -123, 554, 92, -112, -173, 23, 29, -288,
	-288, -288, 66, 70, 69, -242, -227, -227, -227, -347,
	493, 290, -345, -343, 296, 297, 298, 299, 300, -334,
	295, -341, 292, 74, 72, -112, -331, -84, -129, -258,
	-112, -333, 125, 125, -227, 194, -333, 305, -359, 493,
	-333, -333, 11, -333, 74, -73, -55, 68, -276, 72,
	-223, -287, -208, 197, 72, 72, 72, -224, -223, -225,
	-226, 72, -224, -223, -225, -226, -227, 45, 45, 72,
	-112, -227, -276, 72, -84, -227, -227, 178, -227, -184,
	69, -82, -363, -127, 178, -163, -163, -163, -163, -163,
	-363, -252, -252, -252, -270, -252, 355, -252, 355, -363,
	-363, -363, 19, 19, 19, 19, -363, -127, -127, -127,
	-362, -76, 452, -84, 69, 69, -232, 72, -185, 66,
	-186, -144, -147, -146, -362, -8, -363, -177, 6, 493,
	-182, -227, -120, 69, 101, 101, 101, 101, -102, -101,
	66, 67, -103, 66, -101, 56, 56, -180, 68, 69,
	-146, -362, -182, -127, -119, -362, -362, -362, -363, 69,
	-157, -120, 70, 69, -252, -252, 45, -284, -179, -227,
	-127, 23, -133, 432, 441, 440, 439, 437, 438, 434,
	436, 435, 453, 454, -259, 134, -258, 74, -258, 75,
	75, 554, 68, -8, -171, -288, 72, 134, 72, 134,
	74, -112, -319, -320, -321, 81, 492, 92, 247, 248,
	207, 249, 250, 251, -318, -242, -242, -242, -350, -351,
	-349, 293, 315, 316, 301, -348, -346, 310, 311, 312,
	313, 91, 74, 74, 74, -342, 284, 91, 293, 16,
	23, -203, -322, -201, -359, -333, -359, 287, -333, -79,
	-276, -159, 210, 211, -242, -242, -231, -284, 45, 72,
	-213, 194, 23, 194, -159, -276, 29, 183, 88, -228,
	-89, 11, -172, -172, 125, -258, 72, -127, -127, -127,
	-127, -363, -363, -363, -127, -363, 74, -127, -127, -143,
	113, 27, -185, 69, -363, -363, 47, -363, -363, 69,
	-157, -190, -84, -84, -84, -84, -84, 68, -84, -179,
	239, -363, -119, -214, -179, -179, -179, 74, -175, -299,
	-298, 67, 201, 81, -296, -174, -174, -287, -287, 70,
	69, -363, -362, -259, 134, -259, 134, 70, 70, -297,
	-171, -173, 72, 134, 19, -172, -321, 74, 251, 247,
	251, 251, 251, 251, 252, -338, 81, 291, -349, 302,
	559, 286, 317, 75, 75, 112, 30, 31, -346, 75,
	75, 75, 75, -343, 16, 493, -341, 292, 74, 74,
	-323, 38, -325, 39, -358, 23, -359, -358, 305, -89,
	70, 72, -243, -243, 68, -287, -287, 72, -227, -159,
	28, 28, -362, -120, -87, -82, -363, -363, -363, -363,
	-75, 111, 493, -363, -363, -157, 16, 45, -147, -144,
	47, -8, -362, -227, -175, -179, 70, -146, -117, -237,
	-363, -363, -363, 414, -298, 72, -288, 74, 208, -227,
	-266, 609, 608, -127, 70, -8, 238, -173, 36, 36,
	243, 244, 74, 74, 28, 303, 177, 28, 75, 177,
	458, 292, 74, 72, 293, -254, 195, -326, 43, -324,
	-273, 42, 16, -331, -358, -120, -297, -231, 68, -127,
	-305, -306, 113, -154, 13, -172, -363, 491, 63, 494,
	-168, 115, 114, -141, 9, -144, -8, 70, -119, -362,
	75, -112, -363, -300, -299, -171, 239, -21, -3, -10,
	-11, -12, -13, -15, -51, -16, -17, -22, -23, -18,
	-57, -58, -66, -64, -65, -61, -60, -26, -24, -27,
	-19, -28, -29, -30, -34, -35, -25, -36, 95, 196,
	273, 342, 75, 28, 75, 28, 306, 293, 23, -180,
	75, -325, 16, -327, 40, 41, 74, 493, -154, 70,
	68, -297, -363, 69, -227, -155, 14, 16, 53, 492,
	495, -363, -169, 94, -170, 112, 458, -131, 75, 177,
	-169, -186, -363, -291, -278, -228, 68, -266, -160, 241,
	242, -171, -84, -84, 72, -47, -233, 276, 277, 278,
	-228, -37, -21, 304, 304, 74, 38, 115, 74, 16,
	16, 285, -155, -300, -297, 70, -306, 47, -165, 456,
	-156, -84, -142, -86, -84, 53, -170, 117, 118, 239,
	117, 118, -126, -363, 69, -242, -179, -171, 72, 72,
	-38, -39, 96, 97, 274, 275, 279, -242, 69, 612,
	74, 74, 28, 290, 21, -334, -165, 70, -300, 223,
	-164, -166, -227, 69, 493, 91, -227, -363, -278, -244,
	488, 24, 70, -173, 100, 98, -39, -84, -37, 19,
	19, 19, 28, -228, 100, -21, 307, -300, 224, 69,
	23, -86, 494, -170, 23, -237, 74, 488, -309, -310,
	66, -14, -20, -13, -10, -11, -12, 342, -90, 95,
	-37, 97, 612, -48, 75, -8, -46, -45, 75, -48,
	281, 92, 282, 72, -127, -334, -362, -166, -167, 495,
	-237, -245, 74, -310, 66, -309, 66, 10, 9, -171,
	-37, 612, -37, 100, 98, -40, -41, 99, -21, 69,
	280, -127, 221, -368, 84, 28, 333, -308, 209, 204,
	207, 29, -308, 612, 100, 612, 196, -37, 100, 98,
	-41, -84, -45, -363, -363, 66, -127, 66, 203, 28,
	84, 100, 95, 612, 196, -37, 97, 506, 66, 506,
	100, 612, -37, 506, 196, 100, 612, 196,
}

var yyDef = [...]int{
	-2, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, -2, 785, 785, 0, 785,
	887, -2, 639, 0, 0, 0, 0, -2, 758, 759,
	760, 764, 765, 780, 782, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 560, 41, 56, 0,
	1277, 0, 783, 772, 773, 0, 0, 2123, 2, 1209,
	0, 794, 787, 0, 785, 785, 785, 66, 67, 0,
	98, 0, 0, 0, 888, 0, 0, 0, 1275, 1275,
	250, 1275, 1275, 0, 1291, 248, 0, 1272, 1287, 1288,
	1289, 0, 0, 0, 1273, 0, 1273, 1273, 1273, 1273,
	1273, 1273, 1273, 0, 704, 919, 921, 922, 923, 1300,
	1301, 2118, 2119, 2120, 2121, 2122, 2094, 2095, 2096, 2097,
	2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107,
	2108, 2109, 2110, 2111, 1889, 1890, 1891, 1892, 1893, 1894,
	1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904,
	1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914,
	1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924,
	1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934,
	1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944,
	1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954,
	1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964,
	1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974,
	1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984,
	1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994,
	1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,
	2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014,
	2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024,
	2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034,
	2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044,
	2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054,
	2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064,
	2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074,
	2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084,
	2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 0,
	0, 0, 749, 0, 715, 716, 717, 0, 719, 0,
	0, 0, 0, 0, 729, 732, 736, 0, 1209, 1209,
	581, 582, 583, 754, 755, 743, 756, 0, 0, 55,
	0, 0, 868, 325, 327, 0, 347, 0, 350, 353,
	1306, 766, 0, 0, 1331, 1332, 0, 0, 0, 0,
	0, 2027, 193, 264, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 0, 195, 195, 195, 2035, 195, 0,
	195, 195, 195, 195, 195, 263, 253, 254, 255, 0,
	0, 0, 2027, 0, 561, 558, 559, 785, 0, 789,
	0, 1278, 761, 53, 0, 57, 1225, 889, 890, 891,
	0, 39, 0, 1215, 0, 0, 797, 795, 796, 786,
	0, 808, 838, 0, 933, 1773, 939, -2, -2, -2,
	1684, 982, 983, 984, 985, 986, 987, 988, 989, 1628,
	0, 0, 0, 0, 0, 1726, 1012, 1013, 1014, 1015,
	1016, 1017, 1182, 1183, 1184, 1185, 1186, 1187, 1188, -2,
	-2, -2, 1171, 1172, 0, -2, -2, -2, -2, -2,
	1242, 0, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114,
	1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124,
	1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134,
	1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144,
	1145, 1146, 1147, 1148, 1752, 1817, 1703, 1822, 1647, 0,
	1639, 1717, 1846, 1847, 0, 1760, 2100, 0, -2, 1872,
	1810, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	2109, 2110, 1710, 1658, 1770, 1811, 1649, 1670, 1689, 1738,
	1739, 1741, 1775, 1776, 1794, 1803, 1821, 1629, 1630, 1631,
	1733, 1734, 1843, 1842, 1841, 1844, 1878, 1876, 1879, 1616,
	1617, 1618, 1619, 1620, 1621, 1622, 1623, 1625, 1626, 1627,
	1632, 1633, 1634, 1635, 1636, 1638, 1640, 1641, 1642, 1643,
	1644, 1645, 1646, 1650, 1651, 1652, 1657, 1659, 1660, 1661,
	1662, 1663, 1664, 1665, 1666, 1668, 1669, 1671, 1672, 1673,
	1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683,
	1685, 1686, 1688, 1690, 1691, 1692, 1693, 1694, 1695, 1696,
	1697, 1698, 1699, 1700, 1701, 1702, 1704, 1705, 1706, 1707,
	1708, 1709, 1711, 1712, 1713, 1714, 1715, 1716, 1718, 1719,
	1720, 1721, 1722, 1723, 1724, 1725, 1727, 1728, 1729, 1730,
	1731, 1732, 1735, 1736, 1737, 1740, 1742, 1743, 1744, 1745,
	1746, 1747, 1748, 1749, 1750, 1751, 1753, 1754, 1757, 1758,
	1759, 1762, 1763, 1764, 1765, 1766, 1767, 1769, 1771, 1772,
	1774, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786,
	1787, 1788, 1789, 1790, 1791, 1792, 1793, 1795, 1796, 1797,
	1798, 1799, 1800, 1801, 1802, 1804, 1805, 1806, 1807, 1808,
	1809, 1812, 1813, 1814, 1815, 1816, 1818, 1819, 1820, 1823,
	1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833,
	1834, 1835, 1836, 1837, 1838, 1839, 1840, 1845, 1849, 1850,
	1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1860, 1861,
	1862, 1863, 1864, 1865, 1866, 1867, 1868, 1873, 1874, 1875,
	1877, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888,
	1277, 1277, 0, 83, 2077, 0, 1249, -2, -2, 1251,
	0, 0, 0, -2, -2, -2, -2, 1640, -2, 1171,
	0, 0, 0, 1624, 1628, 1629, 1630, 1631, 1637, 1639,
	1647, 1648, 1649, 1653, 1654, 1655, 1656, 1658, 1667, 1670,
	1684, 1687, 1689, 1703, 1710, 1717, 1726, 1733, 1734, 1738,
	1739, 1741, 1752, 1755, 1756, 1760, 1761, 1768, 1770, 1773,
	1775, 1776, 1777, 1794, 1803, 1810, 1811, 1817, 1821, 1822,
	1841, 1842, 1843, 1844, 1846, 1847, 1848, 1859, 1869, 1870,
	1871, 1872, 1876, 1878, 1879, 99, 1201, 785, 100, 0,
	391, 392, 0, 0, 0, 0, 0, 0, 606, 1294,
	1295, 2112, 2113, 2114, 2115, 2116, 2117, 0, 0, 0,
	248, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	1275, 250, 0, 0, 685, 0, 686, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 703,
	0, 705, 77, 706, 749, 708, 0, 0, 1275, 1275,
	0, 0, 0, 0, 0, 608, 609, 749, 749, 749,
	749, 746, 0, 746, 726, 746, 744, 745, 0, 731,
	0, 0, 0, 739, 740, 0, 767, 0, 0, 774,
	776, 777, 778, 779, 775, 0, 784, 0, 0, 0,
	329, 0, 0, 349, 331, 0, 334, 335, 336, 337,
	338, 339, 340, 341, 342, 343, 344, 345, 0, 352,
	0, 1304, 1307, 771, 1322, 1323, 0, 1333, 1334, 199,
	0, 199, 0, 0, 0, 0, 162, 195, 0, 164,
	195, 195, 195, 0, 195, 195, 171, 172, 195, 174,
	175, 176, 177, 178, 195, 180, 181, 182, 195, 195,
	185, 195, 195, 188, 189, 190, 191, 192, 262, 199,
	0, 0, 199, 0, 0, 543, 0, 0, 0, 0,
	548, 549, 550, 551, 0, 0, 554, 555, 794, 43,
	62, 0, 790, 791, 0, 0, 0, 54, 0, 0,
	61, 2124, 47, 0, 0, 1210, 1213, 1214, 1202, 1203,
	1206, 0, 0, 792, 798, 799, 788, 0, 809, 0,
	0, 0, 0, 839, 0, 842, 843, 844, 845, 846,
	847, 0, 937, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 961, 962, 963, 964, 965, 966, 967, 940,
	0, 954, 0, 0, 0, 0, 0, 0, 1005, 1006,
	1007, 1008, 1009, 1010, 0, 797, 0, 0, 797, 797,
	797, 797, 797, 0, 0, 980, 1884, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 797, 0, 1163, 0, 0, 1074, 1083, 0, 1075,
	1084, 1076, 1085, 1077, 0, 1078, 1086, 1079, 1087, 1080,
	1081, 1088, 1082, 0, 0, 0, 976, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 79, 919, 0,
	84, 86, 0, 0, 2077, 1252, 1253, 517, 1266, 1267,
	1268, 0, 1264, 0, 1209, 794, 623, 0, 393, 409,
	506, 421, 422, 423, 496, 425, 498, 498, 0, 498,
	498, 498, 498, 498, 514, 514, 514, 514, 514, 467,
	468, 469, 470, 471, 0, 0, 444, 496, 496, 496,
	448, 486, 487, 488, 489, 490, 491, 492, 493, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 435, 501,
	501, 503, 503, 503, 503, 503, 409, 409, 409, 409,
	0, 0, 0, 605, 0, 1292, 0, 0, 250, -2,
	0, -2, 0, 914, 0, 0, 924, 0, 0, 110,
	280, 266, 109, 0, 244, 249, 245, 246, 247, 0,
	0, 0, 0, 257, 700, 1274, 0, 693, 75, 694,
	695, 696, 697, 698, 259, 699, 920, 1302, 1303, 1335,
	1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345,
	1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355,
	1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365,
	1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375,
	1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385,
	1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395,
	1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405,
	1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415,
	1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425,
	1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435,
	1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445,
	1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455,
	1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465,
	1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475,
	1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485,
	1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495,
	1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505,
	1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515,
	1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525,
	1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535,
	1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545,
	1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555,
	1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565,
	1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575,
	1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585,
	1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595,
	1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605,
	1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615,
	0, 707, 750, 0, 752, 0, 0, 868, 712, 713,
	714, 610, 720, 721, 722, 728, 749, 0, 0, 0,
	868, 749, 730, 968, 733, 1091, 0, 757, 769, 768,
	0, 781, 0, 326, 328, 330, 348, 0, 0, 351,
	354, 0, 0, 0, 0, 1325, 0, 1327, 1329, 0,
	0, 200, 201, 202, 199, 0, 194, 0, 217, 265,
	0, 163, 0, 197, 165, 166, 167, 195, 169, 170,
	173, 179, 183, 184, 186, 187, 261, 0, 0, 0,
	0, 160, 0, 544, 545, 546, 547, 556, 553, 797,
	0, 0, 762, 763, 58, 0, 0, -2, 0, 1231,
	1232, 1233, 1234, 1299, -2, -2, -2, -2, -2, 37,
	0, 1216, 0, 0, 0, 0, 1205, 1207, 1208, 0,
	0, 1190, 0, 0, 800, 793, 40, 934, 935, 936,
	938, 955, 0, 957, 959, 840, 841, 810, 0, 1173,
	1174, 1175, 1176, -2, 1298, 945, 946, 970, 971, 972,
	0, 0, 0, 0, 968, 950, 0, 990, 991, 992,
	993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1004,
	1105, 1106, 0, 1179, 0, 978, 804, 805, 0, 1180,
	1002, 1189, 1003, 1011, 976, 1178, 1177, 0, 0, 0,
	0, 0, 973, 0, 1241, 0, 0, 0, 0, 1052,
	0, 0, 0, 0, 986, 1182, 0, 986, 1182, 0,
	0, 1742, 1857, 1633, 0, 0, 0, 1169, 1166, 0,
	0, 0, 1092, 0, 0, 0, 0, 0, 977, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 81, 0, 918, 0, 848, 850,
	851, 852, -2, 0, 856, 857, 927, 974, 1300, 0,
	-2, 0, 0, 73, 74, 0, 0, 0, 1250, 0,
	0, 0, 89, 90, 85, 1254, 0, -2, 1261, 1262,
	1173, 0, 1215, 797, 390, 624, 626, 629, 630, 631,
	632, 633, 634, 394, 396, 397, 398, 0, 588, 596,
	0, 0, 586, 588, 588, 0, 584, 585, 401, 509,
	507, 508, 424, 0, 514, 0, 514, 498, 498, 498,
	498, 453, 514, 456, 459, 460, 517, 0, 517, 517,
	517, 517, 514, 0, 0, 445, 446, 447, 436, 0,
	437, 501, 439, 0, 440, 441, 442, 443, 402, 403,
	404, 405, 602, 603, 604, 0, 0, 0, 95, 0,
	104, -2, 524, 525, 526, 0, 521, 1276, 105, 0,
	282, 283, 0, 220, 0, 251, 252, 112, 0, 0,
	267, 0, 388, 389, 0, 687, 0, 689, 256, 691,
	701, 702, 692, 0, 0, 78, 751, 709, 710, 711,
	931, 0, 0, 723, 747, 748, 746, 749, 727, 741,
	0, 0, 734, 0, 770, 869, 332, 333, 355, 81,
	0, 1305, 1324, 0, 1328, 1330, 0, 203, 205, 0,
	0, 154, 0, 0, 196, 0, 168, 0, 0, 0,
	0, 0, 552, 0, 792, 63, 640, 641, -2, 678,
	1284, 678, 678, 664, 571, 678, 0, 0, 0, 59,
	0, 1226, 0, 0, 48, 0, 1933, 51, 0, 1211,
	1212, 1204, 0, 1269, 1270, 1191, 1192, 96, 801, 956,
	958, 960, 0, 976, 947, 968, 951, 0, 948, 0,
	942, 0, 1050, 0, 0, 0, 0, 0, 0, 0,
	981, -2, 1048, 1049, 1051, 0, 0, 0, 1055, 0,
	1058, 0, 0, 1098, 0, 0, 1099, 1063, 0, 0,
	0, 0, 0, 1069, 1201, 0, 1167, 0, 0, 1072,
	1073, 1093, 0, 0, 1094, 1095, 1096, 1097, 1037, 0,
	1038, 0, 0, 0, 0, 0, 1044, 1045, 1046, 1047,
	819, 819, 819, 819, 819, 819, 819, 819, 819, 819,
	819, 819, 0, 0, 917, 0, 0, 0, 0, 0,
	0, 892, 0, 0, 895, 0, 0, 0, 0, 0,
	0, 0, 0, 861, 0, 863, 0, 927, 0, 0,
	0, 976, 0, 931, 0, 931, 931, 80, 0, 926,
	87, 88, 0, 0, 94, 518, 519, 0, 219, 0,
	627, 0, 395, 0, 589, 0, 0, 588, 588, 588,
	587, 588, 579, 589, 580, 0, 410, 0, 412, 413,
	414, 415, 416, 0, 0, 0, 0, 0, 513, 0,
	538, 540, 0, 0, 420, 510, 0, 517, 0, 0,
	517, 514, 451, 452, 498, 457, 517, 461, 478, 0,
	462, 479, 463, 480, 464, 481, 465, 482, 517, 0,
	494, 0, 0, 438, 0, 620, 0, 1293, 97, 0,
	527, 528, 529, 0, 571, 571, 571, 0, 284, 285,
	286, 915, 0, 221, 222, 0, 0, 0, 0, 925,
	122, 0, 281, 0, 0, 0, 0, 0, 0, 0,
	76, 260, 718, 0, 611, 612, 868, 725, 969, 735,
	737, 738, 514, 0, 1326, 0, 0, 0, 0, 0,
	0, 215, 198, 0, 0, 0, 0, 161, 0, 800,
	0, 0, 588, 0, 665, 666, 0, 679, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1285, 1286,
	0, 0, 0, 572, 0, 673, 674, 0, 1229, 1228,
	0, 49, 50, 1217, 38, 47, 0, 811, 1181, 0,
	949, 0, 952, 979, 806, 0, 1018, 819, 819, 819,
	819, 819, 0, 496, 496, 1152, 496, 503, 1155, 496,
	1157, 496, 1160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1164, 1071, 1170, 0, 0,
	0, 812, 813, 815, 1039, 1040, 1041, 1042, 1043, 1022,
	820, 1023, 1024, 1026, 1027, 1029, 1030, 1031, 1032, 1034,
	1035, 1036, 1235, 0, 0, 0, 1220, 0, 931, 1243,
	0, 0, 0, 0, 2112, 2113, -2, -2, -2, -2,
	-2, 849, 883, 885, 0, 880, 893, 894, 896, 0,
	898, 0, 900, 901, 870, 855, 975, 858, 0, 0,
	0, 927, 867, 0, 0, 0, 0, 0, 1201, 931,
	71, 72, 0, 91, 92, 93, 625, 628, 0, 590,
	496, 496, 0, 594, 586, 595, 573, 575, 576, 578,
	0, 411, 0, 0, 419, 511, 0, 537, 539, 541,
	542, 497, 449, 474, 499, 500, 450, 475, 517, 458,
	454, 476, 515, 516, 466, 483, 514, 0, 514, 0,
	504, 0, 607, 621, 0, 0, 0, 95, 571, 0,
	0, 0, 0, 228, 0, 224, 0, 0, 0, 130,
	0, 113, 114, 115, 117, 118, 0, 0, 0, 111,
	0, 269, 0, 272, 273, 688, 690, 932, 749, 1316,
	916, 215, 204, 206, 207, 0, 215, 218, 155, 0,
	156, 158, 0, 157, 557, 96, 642, 0, 675, 0,
	0, 1292, 586, 0, -2, 645, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 0, 671, 0,
	647, 0, 675, 0, 668, 0, 0, 0, 52, 45,
	96, 96, 1019, 953, 0, 1021, 1025, 1020, 1028, 1033,
	1053, 1149, 514, 1153, 1154, 1156, 1158, 1159, 1161, 1057,
	1054, 1056, 0, 0, 0, 0, 1064, 0, 0, 0,
	0, 0, 0, 1168, 0, 0, 817, 816, 64, 0,
	1235, 1218, 1237, 1239, 0, 0, 0, 0, -2, 1611,
	0, 874, 1201, 0, 0, 0, 0, 0, 877, 884,
	0, 0, 878, 0, 879, 897, 899, 853, 0, 0,
	859, 0, 0, -2, 866, 0, 0, 0, 876, 0,
	1209, 70, 563, 0, 1206, 1206, 588, 588, 0, 872,
	0, 0, 512, 1091, 1091, 1091, 1091, 1091, 1091, 1091,
	1091, 1091, 0, 0, 455, 477, 517, 495, 517, 0,
	0, 622, 0, 95, 97, 0, 532, 533, 534, 535,
	536, 0, 96, 229, 230, 0, 0, 0, 235, 0,
	0, 0, 0, 0, 223, 225, 226, 227, 148, 131,
	132, 0, 0, 0, 0, 123, 124, 0, 0, 0,
	0, 0, 119, 120, 121, 268, 0, 0, 271, 0,
	0, 724, 1318, 1312, 208, 215, 208, 0, 159, 45,
	0, 644, 676, 0, 409, 409, 0, 588, 588, 667,
	0, 1282, 1283, 0, 662, 675, 0, 0, 0, 1230,
	931, 0, 0, 802, 807, 1150, 1151, 0, 0, 0,
	0, 1065, 1066, 1067, 1100, 1070, 1165, 0, 0, 1201,
	0, 0, 65, 0, 1240, -2, 0, 0, 82, 0,
	1209, 1244, 1245, 1246, 1247, 1248, 881, 0, 886, 0,
	0, 927, 864, 0, 0, 0, 0, 0, 69, 562,
	566, 0, 571, 0, 591, 592, 593, 574, 577, 0,
	0, 406, 0, 472, 484, 473, 485, 502, 505, 0,
	102, 0, 530, 531, 0, 97, 231, 232, 233, 234,
	236, 237, 0, 0, 0, 108, 0, 0, 133, 0,
	0, 0, 0, 143, 144, 145, 146, 147, 125, 126,
	127, 128, 129, 116, 0, 0, 270, 0, 275, 276,
	1279, 1320, -2, 0, 151, 0, 208, 153, 216, 931,
	643, 677, 399, 400, 0, 1292, 0, 646, 661, 663,
	0, 670, 0, 1193, 46, 96, 1059, 1061, 1060, 1062,
	0, 0, 0, 1089, 1090, 821, 0, 0, 1238, 1219,
	0, 1223, 0, 875, 68, 0, 871, 860, 862, 927,
	928, 929, 930, 0, 567, 568, 0, 570, 0, 873,
	417, 407, 408, 0, 564, 95, 0, 55, 238, 239,
	240, 241, 149, 150, 134, 135, 0, 137, 138, 0,
	0, 0, 278, 0, 274, 870, 0, 1312, 0, 1314,
	0, 1311, 0, 209, 152, 1193, 0, 0, 0, 669,
	0, 681, 0, 1198, 0, 803, 1068, 0, 0, 0,
	0, 0, 0, 818, 0, 1222, 0, 882, 865, 0,
	569, 0, 406, 101, 565, 103, 287, 95, 358, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 387, 0, 0,
	0, 55, 0, 139, 0, 141, 142, 277, 0, 36,
	0, 1319, 0, 1317, 0, 0, 1313, 0, 1198, 564,
	0, 0, 680, 0, 0, 831, 0, 0, 1101, 0,
	1104, 814, 822, 0, 825, 0, 0, 0, 836, 0,
	823, 1236, -2, 0, 904, 0, 0, 418, 95, 0,
	0, 107, 0, 0, 1294, 0, 0, -2, -2, -2,
	1296, 0, 356, 136, 140, 279, 1280, 1281, 1321, 0,
	0, 0, 831, 648, 0, 564, 682, 0, 44, 0,
	1199, 1200, 1194, 1195, 1197, 1102, 0, 826, 827, 828,
	829, 830, 0, 0, 0, 0, 0, 97, 288, 289,
	0, 298, 0, 55, 0, 0, 0, 312, 0, 55,
	1315, 1309, 210, 211, 212, 214, 42, 564, 672, 0,
	832, 833, 0, 0, 0, 0, 837, 0, 905, 906,
	0, 0, 597, 55, 0, 55, 299, 0, 0, 0,
	0, 0, 0, 1297, 242, 357, 0, 649, 0, 0,
	0, 1196, 0, 824, 0, 903, 909, 0, 598, 599,
	0, 95, 290, 291, 292, 293, 294, 55, 56, 296,
	0, 55, 55, 308, 309, 310, 55, 317, 319, 320,
	321, 0, 323, 324, 313, 213, 0, 834, 835, 1103,
	902, 910, 908, 600, 0, 601, 0, 0, 0, 106,
	0, 55, 0, 0, 55, 0, 305, 0, 311, 0,
	322, 0, 1762, 907, 0, 0, 0, 613, 615, 616,
	0, 0, 614, 55, 0, -2, 301, 0, 0, 55,
	306, 0, 318, 683, 684, 0, 0, 0, 617, 618,
	619, 295, 297, 55, 303, 0, 55, 911, 0, 913,
	0, 55, 0, 912, 302, 0, -2, 304,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 93, 3, 3, 3, 128, 120, 3,
	68, 70, 125, 123, 69, 124, 178, 126, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 612,
	102, 101, 103, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 130, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 119, 3, 131,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 82, 83, 84, 85,
	86, 87, 88, 89, 90, 91, 92, 94, 95, 96,
	97, 98, 99, 100, 104, 105, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 116, 117, 118, 121,
	122, 127, 129, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 274, 275,
}

var yyTok3 = [...]int{
	57600, 276, 57601, 277, 57602, 278, 57603, 279, 57604, 280,
	57605, 281, 57606, 282, 57607, 283, 57608, 284, 57609, 285,
	57610, 286, 57611, 287, 57612, 288, 57613, 289, 57614, 290,
	57615, 291, 57616, 292, 57617, 293, 57618, 294, 57619, 295,
	57620, 296, 57621, 297, 57622, 298, 57623, 299, 57624, 300,
	57625, 301, 57626, 302, 57627, 303, 57628, 304, 57629, 305,
	57630, 306, 57631, 307, 57632, 308, 57633, 309, 57634, 310,
	57635, 311, 57636, 312, 57637, 313, 57638, 314, 57639, 315,
	57640, 316, 57641, 317, 57642, 318, 57643, 319, 57644, 320,
	57645, 321, 57646, 322, 57647, 323, 57648, 324, 57649, 325,
	57650, 326, 57651, 327, 57652, 328, 57653, 329, 57654, 330,
	57655, 331, 57656, 332, 57657, 333, 57658, 334, 57659, 335,
	57660, 336, 57661, 337, 57662, 338, 57663, 339, 57664, 340,
	57665, 341, 57666, 342, 57667, 343, 57668, 344, 57669, 345,
	57670, 346, 57671, 347, 57672, 348, 57673, 349, 57674, 350,
	57675, 351, 57676, 352, 57677, 353, 57678, 354, 57679, 355,
	57680, 356, 57681, 357, 57682, 358, 57683, 359, 57684, 360,
	57685, 361, 57686, 362, 57687, 363, 57688, 364, 57689, 365,
	57690, 366, 57691, 367, 57692, 368, 57693, 369, 57694, 370,
	57695, 371, 57696, 372, 57697, 373, 57698, 374, 57699, 375,
	57700, 376, 57701, 377, 57702, 378, 57703, 379, 57704, 380,
	57705, 381, 57706, 382, 57707, 383, 57708, 384, 57709, 385,
	57710, 386, 57711, 387, 57712, 388, 57713, 389, 57714, 390,
	57715, 391, 57716, 392, 57717, 393, 57718, 394, 57719, 395,
	57720, 396, 57721, 397, 57722, 398, 57723, 399, 57724, 400,
	57725, 401, 57726, 402, 57727, 403, 57728, 404, 57729, 405,
	57730, 406, 57731, 407, 57732, 408, 57733, 409, 57734, 410,
	57735, 411, 57736, 412, 57737, 413, 57738, 414, 57739, 415,
	57740, 416, 57741, 417, 57742, 418, 57743, 419, 57744, 420,
	57745, 421, 57746, 422, 57747, 423, 57748, 424, 57749, 425,
	57750, 426, 57751, 427, 57752, 428, 57753, 429, 57754, 430,
	57755, 431, 57756, 432, 57757, 433, 57758, 434, 57759, 435,
	57760, 436, 57761, 437, 57762, 438, 57763, 439, 57764, 440,
	57765, 441, 57766, 442, 57767, 443, 57768, 444, 57769, 445,
	57770, 446, 57771, 447, 57772, 448, 57773, 449, 57774, 450,
	57775, 451, 57776, 452, 57777, 453, 57778, 454, 57779, 455,
	57780, 456, 57781, 457, 57782, 458, 57783, 459, 57784, 460,
	57785, 461, 57786, 462, 57787, 463, 57788, 464, 57789, 465,
	57790, 466, 57791, 467, 57792, 468, 57793, 469, 57794, 470,
	57795, 471, 57796, 472, 57797, 473, 57798, 474, 57799, 475,
	57800, 476, 57801, 477, 57802, 478, 57803, 479, 57804, 480,
	57805, 481, 57806, 482, 57807, 483, 57808, 484, 57809, 485,
	57810, 486, 57811, 487, 57812, 488, 57813, 489, 57814, 490,
	57815, 491, 57816, 492, 57817, 493, 57818, 494, 57819, 495,
	57820, 496, 57821, 497, 57822, 498, 57823, 499, 57824, 500,
	57825, 501, 57826, 502, 57827, 503, 57828, 504, 57829, 505,
	57830, 506, 57831, 507, 57832, 508, 57833, 509, 57834, 510,
	57835, 511, 57836, 512, 57837, 513, 57838, 514, 57839, 515,
	57840, 516, 57841, 517, 57842, 518, 57843, 519, 57844, 520,
	57845, 521, 57846, 522, 57847, 523, 57848, 524, 57849, 525,
	57850, 526, 57851, 527, 57852, 528, 57853, 529, 57854, 530,
	57855, 531, 57856, 532, 57857, 533, 57858, 534, 57859, 535,
	57860, 536, 57861, 537, 57862, 538, 57863, 539, 57864, 540,
	57865, 541, 57866, 542, 57867, 543, 57868, 544, 57869, 545,
	57870, 546, 57871, 547, 57872, 548, 57873, 549, 57874, 550,
	57875, 551, 57876, 552, 57877, 553, 57878, 554, 57879, 555,
	57880, 556, 57881, 557, 57882, 558, 57883, 559, 57884, 560,
	57885, 561, 57886, 562, 57887, 563, 57888, 564, 57889, 565,
	57890, 566, 57891, 567, 57892, 568, 57893, 569, 57894, 570,
	57895, 571, 57896, 572, 57897, 573, 57898, 574, 57899, 575,
	57900, 576, 57901, 577, 57902, 578, 57903, 579, 57904, 580,
	57905, 581, 57906, 582, 57907, 583, 57908, 584, 57909, 585,
	57910, 586, 57911, 587, 57912, 588, 57913, 589, 57914, 590,
	57915, 591, 57916, 592, 57917, 593, 57918, 594, 57919, 595,
	57920, 596, 57921, 597, 57922, 598, 57923, 599, 57924, 600,
	57925, 601, 57926, 602, 57927, 603, 57928, 604, 57929, 605,
	57930, 606, 57931, 607, 57932, 608, 57933, 609, 57934, 610,
	57935, 611, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:542
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:546
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:553
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:588
		{
			setParseTree(yylex, nil)
		}
	case 36:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:594
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 37:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:600
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			if err := yyDollar[1].selStmt.SetInto(yyDollar[5].into); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 38:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:611
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:617
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 40:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:627
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:634
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 42:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:638
		{
			yyVAL.selStmt = &Select{With: yyDollar[1].with, Comments: Comments(yyDollar[3].bytes2), Cache: yyDollar[4].str, Distinct: yyDollar[5].str, Hints: yyDollar[7].str, SelectExprs: yyDollar[8].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr), Window: yyDollar[13].window}
			if yyDollar[6].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 43:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:645
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 44:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:651
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr), Window: yyDollar[13].window, Into: yyDollar[8].into}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 45:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:659
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:663
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:672
		{
			yyVAL.into = nil
		}
	case 48:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:676
		{
			yyVAL.into = &Into{Variables: yyDollar[2].variables}
		}
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:680
		{
			yyVAL.into = &Into{Outfile: string(yyDollar[3].bytes)}
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:684
		{
			yyVAL.into = &Into{Dumpfile: string(yyDollar[3].bytes)}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:690
		{
			yyVAL.variables = Variables{yyDollar[1].colIdent}
		}
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:694
		{
			yyVAL.variables = append(yyVAL.variables, yyDollar[3].colIdent)
		}
	case 53:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:700
		{
			yyVAL.with = &With{Ctes: yyDollar[2].tableExprs, Recursive: false}
		}
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:704
		{
			yyVAL.with = &With{Ctes: yyDollar[3].tableExprs, Recursive: true}
		}
	case 55:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:709
		{
			yyVAL.with = nil
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:713
		{
			yyVAL.with = yyDollar[1].with
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:719
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:723
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 59:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:729
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[4].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[2].columns}
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:735
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:743
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:749
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:757
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 64:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:763
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[7].ins
			ins.Action = yyDollar[2].str
			ins.Comments = yyDollar[3].bytes2
			ins.Ignore = yyDollar[4].str
			ins.Table = yyDollar[5].tableName
			ins.Partitions = yyDollar[6].partitions
			ins.OnDup = OnDup(yyDollar[8].assignExprs)
			ins.With = yyDollar[1].with
			yyVAL.statement = ins
		}
	case 65:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:776
		{
			cols := make(Columns, 0, len(yyDollar[8].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[9].assignExprs))
			for _, updateList := range yyDollar[8].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[2].str, Comments: Comments(yyDollar[3].bytes2), Ignore: yyDollar[4].str, Table: yyDollar[5].tableName, Partitions: yyDollar[6].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[9].assignExprs), With: yyDollar[1].with}
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:788
		{
			yyVAL.str = InsertStr
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:792
		{
			yyVAL.str = ReplaceStr
		}
	case 68:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:798
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[3].bytes2), Ignore: yyDollar[4].str, TableExprs: yyDollar[5].tableExprs, Exprs: yyDollar[7].assignExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), OrderBy: yyDollar[9].orderBy, Limit: yyDollar[10].limit, With: yyDollar[1].with}
		}
	case 69:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:804
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitions, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit, With: yyDollar[1].with}
		}
	case 70:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:808
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[5].tableNames, TableExprs: yyDollar[7].tableExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), With: yyDollar[1].with}
		}
	case 71:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:812
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), With: yyDollar[1].with}
		}
	case 72:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:816
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), With: yyDollar[1].with}
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:821
		{
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:822
		{
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:826
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:830
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:836
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:840
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:846
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:850
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 81:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:855
		{
			yyVAL.partitions = nil
		}
	case 82:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:859
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 83:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:865
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 84:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:869
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 85:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:876
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:885
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:889
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:895
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 89:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:899
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:903
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 91:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:909
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:913
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:917
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:921
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 95:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:926
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:931
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 97:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:936
		{
			yyVAL.boolean = yySpecialCommentMode(yylex)
		}
	case 98:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:942
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:951
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:956
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 101:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:961
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 102:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:965
		{
			yyDollar[2].viewSpec.ViewName = yyDollar[4].tableName.ToViewName()
			yyDollar[2].viewSpec.ViewExpr = yyDollar[8].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[2].viewSpec, SpecialCommentMode: yyDollar[7].boolean, SubStatementPositionStart: yyDollar[6].int, SubStatementPositionEnd: yyDollar[9].int - 1}
		}
	case 103:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:971
		{
			yyDollar[4].viewSpec.ViewName = yyDollar[6].tableName.ToViewName()
			yyDollar[4].viewSpec.ViewExpr = yyDollar[10].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[4].viewSpec, SpecialCommentMode: yyDollar[9].boolean, SubStatementPositionStart: yyDollar[8].int, SubStatementPositionEnd: yyDollar[11].int - 1, OrReplace: true}
		}
	case 104:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:977
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 105:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:985
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 106:
		yyDollar = yyS[yypt-16 : yypt+1]
//line sql.y:993
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName, Definer: yyDollar[2].str, Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[15].statement}, SpecialCommentMode: yyDollar[14].boolean, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[16].int - 1}
		}
	case 107:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:997
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName, Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[11].statement}, SpecialCommentMode: yyDollar[10].boolean, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[12].int - 1}
		}
	case 108:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1001
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].tlsOptionItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].accountLimitItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].passLockItems)
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames, TLSOptions: tlsOptions, AccountLimits: accountLimits, PasswordOptions: passwordOptions, Locked: locked, Attribute: yyDollar[9].str}
		}
	case 109:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1020
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 110:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1029
		{
			yyVAL.accountNames = nil
		}
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1033
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1038
		{
			yyVAL.tlsOptionItems = nil
		}
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1042
		{
			yyVAL.tlsOptionItems = nil
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1046
		{
			yyVAL.tlsOptionItems = yyDollar[2].tlsOptionItems
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1052
		{
			yyVAL.tlsOptionItems = []TLSOptionItem{yyDollar[1].tlsOptionItem}
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1056
		{
			yyVAL.tlsOptionItems = append(yyDollar[1].tlsOptionItems, yyDollar[3].tlsOptionItem)
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1062
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1066
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1070
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1074
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1078
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 122:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1083
		{
			yyVAL.accountLimitItems = nil
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1087
		{
			yyVAL.accountLimitItems = yyDollar[2].accountLimitItems
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1093
		{
			yyVAL.accountLimitItems = []AccountLimitItem{yyDollar[1].accountLimitItem}
		}
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1097
		{
			yyVAL.accountLimitItems = append(yyDollar[1].accountLimitItems, yyDollar[2].accountLimitItem)
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1103
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1107
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1111
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1115
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1120
		{
			yyVAL.passLockItems = nil
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1124
		{
			yyVAL.passLockItems = yyDollar[1].passLockItems
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1130
		{
			yyVAL.passLockItems = []PassLockItem{yyDollar[1].passLockItem}
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1134
		{
			yyVAL.passLockItems = append(yyDollar[1].passLockItems, yyDollar[2].passLockItem)
		}
	case 134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1140
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1144
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 136:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1148
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 137:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1152
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1156
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 139:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1160
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 140:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1164
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 141:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1168
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 142:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1172
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1176
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1180
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1184
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1188
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1192
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 148:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1197
		{
			yyVAL.str = ""
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1201
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.str = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1206
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 151:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1212
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 152:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1217
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[5].grantObjectType, PrivilegeLevel: yyDollar[6].privilegeLevel, To: yyDollar[8].accountNames, WithGrantOption: yyDollar[9].boolean, As: yyDollar[10].grantAssumption}
		}
	case 153:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1222
		{
			yyVAL.statement = &GrantPrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 154:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1226
		{
			yyVAL.statement = &GrantRole{Roles: yyDollar[2].accountNames, To: yyDollar[4].accountNames, WithAdminOption: yyDollar[5].boolean}
		}
	case 155:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1230
		{
			yyVAL.statement = &GrantProxy{On: yyDollar[4].accountName, To: yyDollar[6].accountNames, WithGrantOption: yyDollar[7].boolean}
		}
	case 156:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1236
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &RevokePrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 157:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1241
		{
			yyVAL.statement = &RevokePrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 158:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1245
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[7].accountNames}
		}
	case 159:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1249
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[8].accountNames}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1253
		{
			yyVAL.statement = &RevokeRole{Roles: yyDollar[2].accountNames, From: yyDollar[4].accountNames}
		}
	case 161:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1257
		{
			yyVAL.statement = &RevokeProxy{On: yyDollar[4].accountName, From: yyDollar[6].accountNames}
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1263
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].strs}
		}
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1267
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].strs}
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1271
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].strs}
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1275
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].strs}
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1279
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].strs}
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1283
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].strs}
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1287
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].strs}
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1291
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].strs}
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1295
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].strs}
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1299
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].strs}
		}
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1303
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].strs}
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1307
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].strs}
		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1311
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].strs}
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1315
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].strs}
		}
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1319
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].strs}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1323
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].strs}
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1327
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].strs}
		}
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1331
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].strs}
		}
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1335
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].strs}
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1339
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].strs}
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1343
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].strs}
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1347
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].strs}
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1351
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].strs}
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1355
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].strs}
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1359
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].strs}
		}
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1363
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].strs}
		}
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1367
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].strs}
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1371
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].strs}
		}
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1375
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].strs}
		}
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1379
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].strs}
		}
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1383
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].strs}
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1389
		{
			yyVAL.grantPrivileges = []Privilege{yyDollar[1].grantPrivilege}
		}
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1393
		{
			yyVAL.grantPrivileges = append(yyDollar[1].grantPrivileges, yyDollar[3].grantPrivilege)
		}
	case 195:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1398
		{
			yyVAL.strs = nil
		}
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1402
		{
			yyVAL.strs = yyDollar[2].strs
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1408
		{
			yyVAL.strs = []string{yyDollar[1].colIdent.String()}
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1412
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].colIdent.String())
		}
	case 199:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1417
		{
			yyVAL.grantObjectType = GrantObjectType_Any
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1421
		{
			yyVAL.grantObjectType = GrantObjectType_Table
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1425
		{
			yyVAL.grantObjectType = GrantObjectType_Function
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1429
		{
			yyVAL.grantObjectType = GrantObjectType_Procedure
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1435
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1439
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1443
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].colIdent.String()}
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1447
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: "*"}
		}
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1451
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: yyDollar[3].colIdent.String()}
		}
	case 208:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1456
		{
			yyVAL.grantAssumption = nil
		}
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1460
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 210:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1464
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 211:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1468
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].accountName, Roles: nil}
		}
	case 212:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1472
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].accountName, Roles: nil}
		}
	case 213:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1476
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].accountName, Roles: yyDollar[7].accountNames}
		}
	case 214:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1480
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].accountName, Roles: yyDollar[5].accountNames}
		}
	case 215:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1485
		{
			yyVAL.boolean = false
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1489
		{
			yyVAL.boolean = true
		}
	case 217:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1494
		{
			yyVAL.boolean = false
		}
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1498
		{
			yyVAL.boolean = true
		}
	case 219:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1505
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 220:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1517
		{
			yyVAL.procedureParams = nil
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1521
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1527
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1531
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1537
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[1].colIdent.String(), Type: yyDollar[2].columnType}
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1541
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1545
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1549
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 228:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1554
		{
			yyVAL.characteristics = nil
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1558
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1564
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1568
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1574
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1578
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1582
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1586
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1590
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1594
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1598
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1602
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1606
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1610
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1616
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1622
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: "", Definer: yyDollar[1].str, Security: yyDollar[2].str}
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1626
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: yyDollar[1].str, Definer: yyDollar[2].str, Security: yyDollar[3].str}
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1632
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1636
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1640
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 248:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1645
		{
			yyVAL.str = ""
		}
	case 249:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1649
		{
			yyVAL.str = yyDollar[3].accountName.String()
		}
	case 250:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1654
		{
			yyVAL.str = ""
		}
	case 251:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1658
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1662
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1668
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1672
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1676
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1682
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 257:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1690
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1694
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1700
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1704
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1710
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 262:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1718
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1726
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1736
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1740
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1746
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1750
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 268:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1754
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 269:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1758
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 270:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1762
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 271:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1768
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1772
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1776
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 274:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1780
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 275:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1784
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 276:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1788
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 277:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1794
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1798
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 279:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1802
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1808
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1812
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1818
		{
			yyVAL.str = BeforeStr
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1822
		{
			yyVAL.str = AfterStr
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1828
		{
			yyVAL.str = InsertStr
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1832
		{
			yyVAL.str = UpdateStr
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1836
		{
			yyVAL.str = DeleteStr
		}
	case 287:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1841
		{
			yyVAL.triggerOrder = nil
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1845
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1849
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1855
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 295:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1865
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 296:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1871
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 297:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1875
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1881
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1885
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 300:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1891
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 301:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1897
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 302:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1902
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 303:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1907
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 304:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1913
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1921
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1925
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 307:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1931
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 308:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1937
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 309:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1941
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 310:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1945
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 311:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1949
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1953
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 313:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1957
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1964
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1968
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1972
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1978
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1982
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1988
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1992
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1996
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2000
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2004
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2008
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2014
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 326:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2018
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2022
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 328:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2026
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2032
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2036
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2042
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2046
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2052
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2058
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2062
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2066
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2070
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2074
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2078
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2082
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2086
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2090
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2094
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2098
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2102
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2108
		{
			yyVAL.statement = &Resignal{}
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2112
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 348:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2116
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2120
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2124
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 351:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2128
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2134
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 353:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2139
		{
			yyVAL.exprs = nil
		}
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2143
		{
			yyVAL.exprs = nil
		}
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2147
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2153
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2157
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2163
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 388:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2198
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
		}
	case 389:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2212
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: TableName{Name: NewTableIdent(string(yyDollar[5].bytes))}, IfNotExists: ne, Temporary: neTemp}
		}
	case 390:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2228
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2235
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2240
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2245
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2251
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 395:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2255
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2260
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2264
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2268
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2274
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2282
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2292
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2300
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2308
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2316
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2324
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 406:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2333
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2337
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2341
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 409:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2346
		{
			yyVAL.columnType = ColumnType{}
		}
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2350
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2359
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 412:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2368
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2377
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2386
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2395
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2404
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 417:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2413
		{
			opt := ColumnType{GeneratedExpr: yyDollar[4].expr, Stored: yyDollar[6].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 418:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2422
		{
			opt := ColumnType{GeneratedExpr: yyDollar[6].expr, Stored: yyDollar[8].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2431
		{
			opt := ColumnType{SRID: NewIntVal(yyDollar[3].bytes)}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2442
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2453
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2458
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2464
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2468
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2472
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2476
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2480
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2484
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2488
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2492
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2496
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2500
		{
			yyVAL.columnType = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2506
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2512
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2518
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2524
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2530
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 441:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2536
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2542
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2548
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2556
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 445:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2560
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2564
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2568
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2572
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 449:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2578
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2582
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2586
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2590
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2594
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 454:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2598
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 455:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2602
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2606
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2610
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 458:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2614
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 459:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2618
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 460:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2622
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2626
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2630
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2634
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2638
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2642
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 466:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2646
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2650
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2654
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2658
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2662
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2666
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 472:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2670
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 473:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2675
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 474:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2679
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2683
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 476:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2687
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 477:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2691
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, BinaryCollate: true}
		}
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2695
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2699
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2703
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2707
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2711
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 483:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2715
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 484:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2719
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, BinaryCollate: true}
		}
	case 485:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2723
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, BinaryCollate: true}
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2729
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2733
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2737
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2741
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2745
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2749
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2753
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2757
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2763
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2768
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2773
		{
			yyVAL.sqlVal = nil
		}
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2777
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2782
		{
			yyVAL.sqlVal = nil
		}
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2786
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2790
		{
			yyVAL.sqlVal = NewValArg(yyDollar[2].bytes)
		}
	case 501:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2796
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 502:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2800
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 503:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2808
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2812
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 505:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2818
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 506:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2826
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2830
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2834
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 509:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2839
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2843
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 511:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2849
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2855
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2861
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2866
		{
			yyVAL.str = ""
		}
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2870
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2874
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2879
		{
			yyVAL.str = ""
		}
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2883
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2887
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2892
		{
			yyVAL.boolean = false
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2896
		{
			yyVAL.boolean = true
		}
	case 522:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2901
		{
			yyVAL.charsetCollates = nil
		}
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2905
		{
			yyVAL.charsetCollates = yyDollar[1].charsetCollates
		}
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2911
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2915
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2919
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2923
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2927
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 529:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2931
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 530:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2937
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 531:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2941
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 532:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2945
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2949
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2955
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2959
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2965
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2971
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2975
		{
			yyVAL.colKeyOpt = colKey
		}
	case 539:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2979
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2983
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2987
		{
			yyVAL.colKeyOpt = colKeyFulltextKey
		}
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2993
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2999
		{
			yyVAL.statement = &Flush{Type: yyDollar[2].str, Option: yyDollar[3].flushOption}
		}
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3005
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3009
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3013
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3017
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3021
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3025
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3029
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3033
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3037
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].str}
		}
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3041
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3045
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3049
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 556:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3054
		{
			yyVAL.str = ""
		}
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3056
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3060
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3062
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 560:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3065
		{
			yyVAL.str = ""
		}
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3067
		{
			yyVAL.str = yyDollar[1].str
		}
	case 562:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3071
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 563:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3075
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 564:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3080
		{
			yyVAL.indexOptions = nil
		}
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3084
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3090
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 567:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3094
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3100
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3104
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3109
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 571:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3115
		{
			yyVAL.str = ""
		}
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3119
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3127
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 574:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3131
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3135
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3139
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true}
		}
	case 577:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3143
		{
			var name string
			name = yyDollar[2].str
			if name == "" {
				name = yyDollar[5].str
			}
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].str), Name: NewColIdent(name), Unique: true}
		}
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3152
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3156
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3160
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3166
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3170
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3174
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3180
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3184
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3189
		{
			yyVAL.str = ""
		}
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3193
		{
			yyVAL.str = yyDollar[1].str
		}
	case 588:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3198
		{
			yyVAL.str = ""
		}
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3202
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3208
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3212
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3218
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3222
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3228
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3232
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3236
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 597:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3242
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 598:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3246
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 599:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3250
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 600:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3254
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 601:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3258
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3264
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3269
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3273
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3277
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3281
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 607:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3287
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3293
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3297
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 610:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3302
		{
			yyVAL.str = ""
		}
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3306
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3310
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3316
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3322
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3328
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3332
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3336
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3340
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3344
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 620:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3349
		{
			yyVAL.boolean = true
		}
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3353
		{
			yyVAL.boolean = true
		}
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3357
		{
			yyVAL.boolean = false
		}
	case 623:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3362
		{
			yyVAL.str = ""
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3366
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3370
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3378
		{
			yyVAL.str = yyDollar[1].str
		}
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3382
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3386
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3392
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3396
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3400
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3405
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3409
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3413
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3419
		{
			yyVAL.str = ""
		}
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3423
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 637:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3428
		{
			yyVAL.str = string("")
		}
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3432
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 640:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3441
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3454
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3458
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 643:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3464
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 644:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3471
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3478
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 646:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3482
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3486
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 648:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3491
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 649:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3495
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3499
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3504
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3509
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3514
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3519
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3524
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3529
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3534
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3539
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3544
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3549
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 661:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3553
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3557
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 663:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3564
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3570
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3574
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3580
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 667:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3586
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3591
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 669:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3595
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 670:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3599
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3603
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 672:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3609
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[7].indexColumns, Options: yyDollar[9].indexOptions}
			yyVAL.ddl = ddl
		}
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3615
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3619
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 675:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3624
		{
			yyVAL.columnOrder = nil
		}
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3628
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3632
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 678:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3637
		{
		}
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3639
		{
		}
	case 680:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3643
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3649
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3653
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 683:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3659
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 684:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3663
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3669
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3673
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3679
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 688:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3683
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3691
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 690:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3695
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 691:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3701
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 692:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3709
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 693:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3713
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 694:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3721
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3729
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 696:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3737
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName}, IfExists: exists}
		}
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3745
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName}, IfExists: exists}
		}
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3753
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3761
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 700:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3770
		{

		}
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3774
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3778
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3784
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3788
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3794
		{
			yyVAL.statement = &Analyze{Tables: yyDollar[3].tableNames}
		}
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3800
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 707:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3805
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3809
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 709:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3813
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 710:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3817
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 711:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3821
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3826
		{
			yyVAL.statement = &Show{Type: CreateProcedureStr, Table: yyDollar[4].tableName}
		}
	case 713:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3830
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 714:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3834
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3838
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3842
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3846
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 718:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3850
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3854
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 720:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3858
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 721:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3862
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 722:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3866
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 723:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3870
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 724:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3874
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, AsOf: yyDollar[7].expr, Filter: yyDollar[8].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, Table: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 725:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3879
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3884
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 727:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3888
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 728:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3892
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3896
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 730:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3900
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3906
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3914
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3918
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 734:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3923
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 735:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3927
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3932
		{
			yyVAL.statement = &ShowPrivileges{}
		}
	case 737:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3936
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 738:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3940
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3944
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3948
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3954
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 742:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3960
		{
			yyVAL.boolean = false
		}
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3964
		{
			yyVAL.boolean = true
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3970
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3974
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 746:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3980
		{
			yyVAL.str = ""
		}
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3984
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3988
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 749:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3994
		{
			yyVAL.showFilter = nil
		}
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3998
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4002
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[3].bytes)}
		}
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4006
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 753:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4012
		{
			yyVAL.str = ""
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4016
		{
			yyVAL.str = SessionStr
		}
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4020
		{
			yyVAL.str = GlobalStr
		}
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4026
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 757:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4030
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: yyDollar[2].tableIdent.v + "/" + yyDollar[4].tableIdent.v}}
		}
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4034
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4040
		{
			yyVAL.statement = &Begin{}
		}
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4044
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4050
		{
			yyVAL.statement = &Begin{}
		}
	case 762:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4054
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 763:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4058
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4064
		{
			yyVAL.statement = &Commit{}
		}
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4070
		{
			yyVAL.statement = &Rollback{}
		}
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4076
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4082
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 768:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4086
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4090
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 770:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4094
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4100
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4105
		{
		}
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4106
		{
		}
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4110
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4114
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4120
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 780:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4128
		{
			yyVAL.str = ""
		}
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4132
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4143
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[3].expr}
			yyVAL.statement = &Show{Type: "columns", Table: yyDollar[2].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4149
		{
			setAllowComments(yylex, true)
		}
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4153
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 787:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4159
		{
			yyVAL.bytes2 = nil
		}
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4163
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4169
		{
			yyVAL.str = UnionStr
		}
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4173
		{
			yyVAL.str = UnionAllStr
		}
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4177
		{
			yyVAL.str = UnionDistinctStr
		}
	case 792:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4182
		{
			yyVAL.byt = 0
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4186
		{
			yyVAL.byt = 1
		}
	case 794:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4191
		{
			yyVAL.str = ""
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4195
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4199
		{
			yyVAL.str = SQLCacheStr
		}
	case 797:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4204
		{
			yyVAL.str = ""
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4208
		{
			yyVAL.str = ""
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4212
		{
			yyVAL.str = DistinctStr
		}
	case 800:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4217
		{
			yyVAL.str = ""
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4221
		{
			yyVAL.str = StraightJoinHint
		}
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4227
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 803:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4235
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4246
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4250
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4254
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 807:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4258
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4264
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4268
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4272
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 811:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4276
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4282
		{
			yyVAL.over = &Over{NameRef: yyDollar[2].colIdent}
		}
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4286
		{
			yyVAL.over = (*Over)(yyDollar[2].windowDef)
		}
	case 814:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4292
		{
			yyVAL.windowDef = &WindowDef{NameRef: yyDollar[2].colIdent, PartitionBy: yyDollar[3].exprs, OrderBy: yyDollar[4].orderBy, Frame: yyDollar[5].frame}
		}
	case 815:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4297
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4300
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4305
		{
			yyVAL.exprs = nil
		}
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4309
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 819:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4314
		{
			yyVAL.over = nil
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4318
		{
			yyVAL.over = yyDollar[1].over
		}
	case 821:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4323
		{
			yyVAL.frame = nil
		}
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4327
		{
			yyVAL.frame = &Frame{Unit: RowsUnit, Extent: yyDollar[2].frameExtent}
		}
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4331
		{
			yyVAL.frame = &Frame{Unit: RangeUnit, Extent: yyDollar[2].frameExtent}
		}
	case 824:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4338
		{
			startBound := yyDollar[2].frameBound
			endBound := yyDollar[4].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound, End: endBound}
		}
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4361
		{
			startBound := yyDollar[1].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound}
		}
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4376
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedPreceding}
		}
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4380
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedFollowing}
		}
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4384
		{
			yyVAL.frameBound = &FrameBound{Type: CurrentRow}
		}
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4388
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprPreceding,
			}
		}
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4395
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprFollowing,
			}
		}
	case 831:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4403
		{
			yyVAL.window = nil
		}
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4406
		{
			yyVAL.window = yyDollar[2].window
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4412
		{
			yyVAL.window = Window{yyDollar[1].windowDef}
		}
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4415
		{
			yyVAL.window = append(yyDollar[1].window, yyDollar[3].windowDef)
		}
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4421
		{
			def := yyDollar[3].windowDef
			def.Name = yyDollar[1].colIdent
			yyVAL.windowDef = def
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4430
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4434
		{
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 838:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4439
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4443
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4447
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 841:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4451
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[2].bytes))
		}
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4457
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4461
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4465
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4469
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4473
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4477
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4483
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4487
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4497
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 853:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4501
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4511
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4517
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4525
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4531
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 860:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4535
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4541
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 862:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4546
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4557
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 864:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4561
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 865:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4565
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4569
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4573
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 868:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4584
		{
			yyVAL.expr = nil
		}
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4588
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 870:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4593
		{
			yyVAL.columns = nil
		}
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4597
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4603
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4607
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4613
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4617
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 876:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4623
		{
			yyVAL.tableExpr = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].selectExprs}
		}
	case 877:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4637
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 878:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4641
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 879:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4645
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4649
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4655
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 882:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4657
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 883:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4661
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4663
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 885:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4667
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 886:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4669
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 887:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4672
		{
			yyVAL.empty = struct{}{}
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4674
		{
			yyVAL.empty = struct{}{}
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4679
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4683
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4689
		{
			yyVAL.str = JoinStr
		}
	case 893:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4693
		{
			yyVAL.str = JoinStr
		}
	case 894:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4697
		{
			yyVAL.str = JoinStr
		}
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4703
		{
			yyVAL.str = StraightJoinStr
		}
	case 896:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4709
		{
			yyVAL.str = LeftJoinStr
		}
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4713
		{
			yyVAL.str = LeftJoinStr
		}
	case 898:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4717
		{
			yyVAL.str = RightJoinStr
		}
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4721
		{
			yyVAL.str = RightJoinStr
		}
	case 900:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4727
		{
			yyVAL.str = NaturalJoinStr
		}
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4731
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 902:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:4741
		{
			yyVAL.tableExpr = &JSONTableExpr{Data: yyDollar[3].expr, Path: string(yyDollar[5].bytes), Spec: yyDollar[8].TableSpec, Alias: yyDollar[12].tableIdent}
		}
	case 903:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:4745
		{
			yyVAL.tableExpr = &JSONTableExpr{Data: yyDollar[3].expr, Path: string(yyDollar[5].bytes), Spec: yyDollar[8].TableSpec, Alias: yyDollar[11].tableIdent}
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4751
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4756
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4764
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 907:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4776
		{
			yyVAL.columnType = ColumnType{Path: string(yyDollar[2].bytes)}
		}
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4780
		{
			yyVAL.columnType = ColumnType{Path: string(yyDollar[3].bytes)}
		}
	case 909:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4786
		{

		}
	case 910:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4804
		{

		}
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4808
		{

		}
	case 912:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4812
		{

		}
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4816
		{

		}
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4822
		{
			yyVAL.triggerName = TriggerName{Name: yyDollar[1].colIdent}
		}
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4826
		{
			yyVAL.triggerName = TriggerName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4832
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 917:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4838
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4842
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4848
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4852
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4856
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4860
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4864
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4870
		{
			yyVAL.procedureName = ProcedureName{Name: yyDollar[1].colIdent}
		}
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4874
		{
			yyVAL.procedureName = ProcedureName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4880
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 927:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4885
		{
			yyVAL.indexHints = nil
		}
	case 928:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4889
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 929:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4893
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 930:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4897
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 931:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4902
		{
			yyVAL.expr = nil
		}
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4906
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4912
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4916
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4920
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4924
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 937:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4928
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4932
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4936
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4940
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 941:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4946
		{
			yyVAL.str = ""
		}
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4950
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4956
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4960
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4966
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4970
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 947:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4974
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 948:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4978
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 949:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4982
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4986
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 951:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4990
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 952:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4994
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 953:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4998
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5002
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5008
		{
			yyVAL.str = IsNullStr
		}
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5012
		{
			yyVAL.str = IsNotNullStr
		}
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5016
		{
			yyVAL.str = IsTrueStr
		}
	case 958:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5020
		{
			yyVAL.str = IsNotTrueStr
		}
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5024
		{
			yyVAL.str = IsFalseStr
		}
	case 960:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5028
		{
			yyVAL.str = IsNotFalseStr
		}
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5034
		{
			yyVAL.str = EqualStr
		}
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5038
		{
			yyVAL.str = LessThanStr
		}
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5042
		{
			yyVAL.str = GreaterThanStr
		}
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5046
		{
			yyVAL.str = LessEqualStr
		}
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5050
		{
			yyVAL.str = GreaterEqualStr
		}
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5054
		{
			yyVAL.str = NotEqualStr
		}
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5058
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 968:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5063
		{
			yyVAL.expr = nil
		}
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5067
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5073
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5077
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5081
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5087
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5093
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5097
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 976:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5103
		{
			yyVAL.selectExprs = nil
		}
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5110
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5114
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5120
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5124
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5130
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5134
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5138
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5142
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5146
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5150
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5154
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5158
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5162
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5166
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5170
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5174
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5178
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5182
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5186
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5190
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5194
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5198
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5202
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5206
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5210
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5214
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5218
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 1005:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5222
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 1006:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5226
		{
			yyVAL.expr = &UnaryExpr{Operator: yyDollar[1].str, Expr: yyDollar[2].expr}
		}
	case 1007:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5230
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5238
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 1009:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5252
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 1010:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5256
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5260
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 1018:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5280
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 1019:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5284
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 1020:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5294
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1021:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5298
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1022:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5302
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1023:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5306
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1024:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5310
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1025:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5314
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1026:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5318
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1027:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5322
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1028:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5326
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1029:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5330
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1030:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5334
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1031:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5338
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1032:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5342
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1033:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5346
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1034:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5350
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1035:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5354
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1036:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5358
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1037:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5367
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1038:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5371
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1039:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5375
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 1040:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5379
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1041:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5383
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 1042:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5387
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1043:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5391
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1044:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5395
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1045:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5399
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1046:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5403
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1047:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5407
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1048:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5418
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1049:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5422
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1050:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5426
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1051:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5430
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5434
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1053:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5438
		{
			yyVAL.expr = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 1054:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5442
		{
			yyVAL.expr = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 1055:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5446
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1056:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5450
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1057:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5454
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 1058:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5458
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1059:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5462
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1060:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5466
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1061:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5470
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1062:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5474
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1063:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5478
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 1064:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5482
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 1065:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5486
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 1066:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5490
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 1067:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5494
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 1068:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5498
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 1069:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5502
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1070:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5506
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 1071:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5510
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 1072:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5514
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 1073:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5518
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1074:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5528
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1075:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5532
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5536
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1077:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5541
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1078:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5546
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1079:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5551
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1080:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5557
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1081:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5562
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1082:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5566
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1083:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5571
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5575
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1085:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5579
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5584
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1087:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5589
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1088:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5594
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1089:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5598
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1090:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5602
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1093:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5613
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1094:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5623
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1095:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5627
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1096:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5631
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1097:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5635
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1098:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5639
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1099:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5643
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1100:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5649
		{
			yyVAL.str = ""
		}
	case 1101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5653
		{
			yyVAL.str = BooleanModeStr
		}
	case 1102:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5657
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 1103:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5661
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 1104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5665
		{
			yyVAL.str = QueryExpansionStr
		}
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5671
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5675
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5681
		{
			yyVAL.str = Armscii8Str
		}
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5685
		{
			yyVAL.str = AsciiStr
		}
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5689
		{
			yyVAL.str = Big5Str
		}
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5693
		{
			yyVAL.str = UBinaryStr
		}
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5697
		{
			yyVAL.str = Cp1250Str
		}
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5701
		{
			yyVAL.str = Cp1251Str
		}
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5705
		{
			yyVAL.str = Cp1256Str
		}
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5709
		{
			yyVAL.str = Cp1257Str
		}
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5713
		{
			yyVAL.str = Cp850Str
		}
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5717
		{
			yyVAL.str = Cp852Str
		}
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5721
		{
			yyVAL.str = Cp866Str
		}
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5725
		{
			yyVAL.str = Cp932Str
		}
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5729
		{
			yyVAL.str = Dec8Str
		}
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5733
		{
			yyVAL.str = EucjpmsStr
		}
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5737
		{
			yyVAL.str = EuckrStr
		}
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5741
		{
			yyVAL.str = Gb18030Str
		}
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5745
		{
			yyVAL.str = Gb2312Str
		}
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5749
		{
			yyVAL.str = GbkStr
		}
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5753
		{
			yyVAL.str = Geostd8Str
		}
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5757
		{
			yyVAL.str = GreekStr
		}
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5761
		{
			yyVAL.str = HebrewStr
		}
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5765
		{
			yyVAL.str = Hp8Str
		}
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5769
		{
			yyVAL.str = Keybcs2Str
		}
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5773
		{
			yyVAL.str = Koi8rStr
		}
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5777
		{
			yyVAL.str = Koi8uStr
		}
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5781
		{
			yyVAL.str = Latin1Str
		}
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5785
		{
			yyVAL.str = Latin2Str
		}
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5789
		{
			yyVAL.str = Latin5Str
		}
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5793
		{
			yyVAL.str = Latin7Str
		}
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5797
		{
			yyVAL.str = MacceStr
		}
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5801
		{
			yyVAL.str = MacromanStr
		}
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5805
		{
			yyVAL.str = SjisStr
		}
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5809
		{
			yyVAL.str = Swe7Str
		}
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5813
		{
			yyVAL.str = Tis620Str
		}
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5817
		{
			yyVAL.str = Ucs2Str
		}
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5821
		{
			yyVAL.str = UjisStr
		}
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5825
		{
			yyVAL.str = Utf16Str
		}
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5829
		{
			yyVAL.str = Utf16leStr
		}
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5833
		{
			yyVAL.str = Utf32Str
		}
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5837
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5841
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5845
		{
			yyVAL.str = Utf8mb4Str
		}
	case 1149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5851
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1150:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5855
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 1151:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5859
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5863
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1153:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5867
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1154:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5871
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5877
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5881
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5885
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1158:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5889
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5893
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5897
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5901
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1162:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5906
		{
			yyVAL.expr = nil
		}
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5910
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1164:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5915
		{
			yyVAL.str = string("")
		}
	case 1165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5919
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5925
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 1167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5929
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 1168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5935
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 1169:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5940
		{
			yyVAL.expr = nil
		}
	case 1170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5944
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5950
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5954
		{
			yyVAL.colName = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5958
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 1174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5962
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5966
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5970
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1177:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5974
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5978
		{
			yyVAL.colName = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5982
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5986
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1181:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5990
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5996
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6000
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6004
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6008
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6012
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6016
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6020
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6024
		{
			yyVAL.expr = &NullVal{}
		}
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6030
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 1191:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6034
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6038
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1193:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6043
		{
			yyVAL.exprs = nil
		}
	case 1194:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6047
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6053
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1196:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6057
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6063
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1198:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6068
		{
			yyVAL.expr = nil
		}
	case 1199:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6072
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6078
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1201:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6083
		{
			yyVAL.orderBy = nil
		}
	case 1202:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6087
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6093
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 1204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6097
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 1205:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6103
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 1206:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6108
		{
			yyVAL.str = AscScr
		}
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6112
		{
			yyVAL.str = AscScr
		}
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6116
		{
			yyVAL.str = DescScr
		}
	case 1209:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6121
		{
			yyVAL.limit = nil
		}
	case 1210:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6125
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 1211:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6129
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 1212:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6133
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6139
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6143
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1215:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6148
		{
			yyVAL.str = ""
		}
	case 1216:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6152
		{
			yyVAL.str = ForUpdateStr
		}
	case 1217:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6156
		{
			yyVAL.str = ShareModeStr
		}
	case 1218:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6169
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 1219:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6173
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6177
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 1221:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6181
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 1222:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6186
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 1223:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6190
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 1224:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6194
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 1225:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6200
		{
			yyVAL.columns = nil
		}
	case 1226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6204
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6210
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6214
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 1229:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6218
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1230:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6222
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6226
		{
			yyVAL.columns = Columns{NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6230
		{
			yyVAL.columns = Columns{NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6234
		{
			yyVAL.columns = Columns{NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6238
		{
			yyVAL.columns = Columns{NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1235:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6243
		{
			yyVAL.assignExprs = nil
		}
	case 1236:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6247
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6253
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 1238:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6257
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6263
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 1240:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6267
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 1241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6273
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6279
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6289
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 1244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6293
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 1245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6299
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 1246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6302
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1247:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6306
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6310
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6316
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 1250:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6320
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6326
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 1252:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6337
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1253:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6350
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1254:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6363
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6369
		{
			yyVAL.setScope = SetScope_Global
		}
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6373
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6379
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6383
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6387
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 1260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6393
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1261:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6397
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1262:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6401
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 1264:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6408
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6415
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 1267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6419
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6423
		{
			yyVAL.expr = &Default{}
		}
	case 1271:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6432
		{
			yyVAL.byt = 0
		}
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6434
		{
			yyVAL.byt = 1
		}
	case 1273:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6437
		{
			yyVAL.byt = 0
		}
	case 1274:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6439
		{
			yyVAL.byt = 1
		}
	case 1275:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6442
		{
			yyVAL.byt = 0
		}
	case 1276:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6444
		{
			yyVAL.byt = 1
		}
	case 1277:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6447
		{
			yyVAL.str = ""
		}
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6449
		{
			yyVAL.str = IgnoreStr
		}
	case 1279:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6452
		{
			yyVAL.sqlVal = nil
		}
	case 1280:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6454
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1281:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6456
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6460
		{
			yyVAL.empty = struct{}{}
		}
	case 1283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6462
		{
			yyVAL.empty = struct{}{}
		}
	case 1284:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6465
		{
			yyVAL.empty = struct{}{}
		}
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6467
		{
			yyVAL.empty = struct{}{}
		}
	case 1286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6469
		{
			yyVAL.empty = struct{}{}
		}
	case 1287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6473
		{
			yyVAL.str = UniqueStr
		}
	case 1288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6475
		{
			yyVAL.str = FulltextStr
		}
	case 1289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6477
		{
			yyVAL.str = SpatialStr
		}
	case 1290:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6480
		{
			yyVAL.str = ""
		}
	case 1291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6482
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1292:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6485
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 1293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6487
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 1294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6491
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6495
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6501
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 1297:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6505
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 1299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6512
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6518
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6522
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6529
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1304:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6534
		{
			yyVAL.str = string("")
		}
	case 1305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6536
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1306:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6539
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6541
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1308:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6544
		{
			yyVAL.EnclosedBy = nil
		}
	case 1309:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6548
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1310:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6553
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6557
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1312:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6562
		{
			yyVAL.sqlVal = nil
		}
	case 1313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6566
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1314:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6571
		{
			yyVAL.sqlVal = nil
		}
	case 1315:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6575
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1316:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6580
		{
			yyVAL.Fields = nil
		}
	case 1317:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6584
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1318:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6589
		{
			yyVAL.Lines = nil
		}
	case 1319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6593
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1320:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6598
		{
			yyVAL.sqlVal = nil
		}
	case 1321:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6602
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1322:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6608
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6614
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1324:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6618
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6624
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1326:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6628
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6634
		{
			yyVAL.lockType = LockRead
		}
	case 1328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6638
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6642
		{
			yyVAL.lockType = LockWrite
		}
	case 1330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6646
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6652
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6658
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[2].bytes)}
		}
	case 1333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6662
		{
			yyVAL.statement = &Kill{ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6666
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 2123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7494
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7503
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
