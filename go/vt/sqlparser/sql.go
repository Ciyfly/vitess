// Code generated by goyacc -v y.output -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

//import "runtime/debug"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

func yySpecialCommentMode(yylex interface{}) bool {
	tkn := yylex.(*Tokenizer)
	return tkn.specialComment != nil
}

//line sql.y:64
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	variables                Variables
	into                     *Into
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	triggerName              TriggerName
	tableName                TableName
	tableNames               TableNames
	procedureName            ProcedureName
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	flushOption              *FlushOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	viewSpec                 *ViewSpec
	showFilter               *ShowFilter
	frame                    *Frame
	frameExtent              *FrameExtent
	frameBound               *FrameBound
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	charsetCollate           *CharsetAndCollate
	charsetCollates          []*CharsetAndCollate
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptionItem            TLSOptionItem
	tlsOptionItems           []TLSOptionItem
	accountLimitItem         AccountLimitItem
	accountLimitItems        []AccountLimitItem
	passLockItem             PassLockItem
	passLockItems            []PassLockItem
	grantPrivilege           Privilege
	grantPrivileges          []Privilege
	grantObjectType          GrantObjectType
	privilegeLevel           PrivilegeLevel
	grantAssumption          *GrantUserAssumption
	with                     *With
	window                   Window
	over                     *Over
	windowDef                *WindowDef
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const DUPLICATE = 57369
const DEFAULT = 57370
const SET = 57371
const LOCK = 57372
const UNLOCK = 57373
const KEYS = 57374
const OF = 57375
const OUTFILE = 57376
const DUMPFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const INTO = 57425
const OR = 57426
const XOR = 57427
const AND = 57428
const NOT = 57429
const BETWEEN = 57430
const CASE = 57431
const WHEN = 57432
const THEN = 57433
const ELSE = 57434
const ELSEIF = 57435
const END = 57436
const LE = 57437
const GE = 57438
const NE = 57439
const NULL_SAFE_EQUAL = 57440
const IS = 57441
const LIKE = 57442
const REGEXP = 57443
const IN = 57444
const UNBOUNDED = 57445
const PARTITION = 57446
const RANGE = 57447
const ROWS = 57448
const GROUPS = 57449
const PRECEDING = 57450
const FOLLOWING = 57451
const SHIFT_LEFT = 57452
const SHIFT_RIGHT = 57453
const DIV = 57454
const MOD = 57455
const UNARY = 57456
const COLLATE = 57457
const BINARY = 57458
const UNDERSCORE_ARMSCII8 = 57459
const UNDERSCORE_ASCII = 57460
const UNDERSCORE_BIG5 = 57461
const UNDERSCORE_BINARY = 57462
const UNDERSCORE_CP1250 = 57463
const UNDERSCORE_CP1251 = 57464
const UNDERSCORE_CP1256 = 57465
const UNDERSCORE_CP1257 = 57466
const UNDERSCORE_CP850 = 57467
const UNDERSCORE_CP852 = 57468
const UNDERSCORE_CP866 = 57469
const UNDERSCORE_CP932 = 57470
const UNDERSCORE_DEC8 = 57471
const UNDERSCORE_EUCJPMS = 57472
const UNDERSCORE_EUCKR = 57473
const UNDERSCORE_GB18030 = 57474
const UNDERSCORE_GB2312 = 57475
const UNDERSCORE_GBK = 57476
const UNDERSCORE_GEOSTD8 = 57477
const UNDERSCORE_GREEK = 57478
const UNDERSCORE_HEBREW = 57479
const UNDERSCORE_HP8 = 57480
const UNDERSCORE_KEYBCS2 = 57481
const UNDERSCORE_KOI8R = 57482
const UNDERSCORE_KOI8U = 57483
const UNDERSCORE_LATIN1 = 57484
const UNDERSCORE_LATIN2 = 57485
const UNDERSCORE_LATIN5 = 57486
const UNDERSCORE_LATIN7 = 57487
const UNDERSCORE_MACCE = 57488
const UNDERSCORE_MACROMAN = 57489
const UNDERSCORE_SJIS = 57490
const UNDERSCORE_SWE7 = 57491
const UNDERSCORE_TIS620 = 57492
const UNDERSCORE_UCS2 = 57493
const UNDERSCORE_UJIS = 57494
const UNDERSCORE_UTF16 = 57495
const UNDERSCORE_UTF16LE = 57496
const UNDERSCORE_UTF32 = 57497
const UNDERSCORE_UTF8 = 57498
const UNDERSCORE_UTF8MB3 = 57499
const UNDERSCORE_UTF8MB4 = 57500
const INTERVAL = 57501
const JSON_EXTRACT_OP = 57502
const JSON_UNQUOTE_EXTRACT_OP = 57503
const CREATE = 57504
const ALTER = 57505
const DROP = 57506
const RENAME = 57507
const ANALYZE = 57508
const ADD = 57509
const MODIFY = 57510
const CHANGE = 57511
const SCHEMA = 57512
const TABLE = 57513
const INDEX = 57514
const INDEXES = 57515
const VIEW = 57516
const TO = 57517
const IGNORE = 57518
const IF = 57519
const PRIMARY = 57520
const COLUMN = 57521
const SPATIAL = 57522
const FULLTEXT = 57523
const KEY_BLOCK_SIZE = 57524
const CHECK = 57525
const ACTION = 57526
const CASCADE = 57527
const CONSTRAINT = 57528
const FOREIGN = 57529
const NO = 57530
const REFERENCES = 57531
const RESTRICT = 57532
const FIRST = 57533
const AFTER = 57534
const SHOW = 57535
const DESCRIBE = 57536
const EXPLAIN = 57537
const DATE = 57538
const ESCAPE = 57539
const REPAIR = 57540
const OPTIMIZE = 57541
const TRUNCATE = 57542
const FORMAT = 57543
const MAXVALUE = 57544
const REORGANIZE = 57545
const LESS = 57546
const THAN = 57547
const PROCEDURE = 57548
const TRIGGER = 57549
const TRIGGERS = 57550
const FUNCTION = 57551
const STATUS = 57552
const VARIABLES = 57553
const WARNINGS = 57554
const ERRORS = 57555
const KILL = 57556
const CONNECTION = 57557
const SEQUENCE = 57558
const ENABLE = 57559
const DISABLE = 57560
const EACH = 57561
const ROW = 57562
const BEFORE = 57563
const FOLLOWS = 57564
const PRECEDES = 57565
const DEFINER = 57566
const INVOKER = 57567
const INOUT = 57568
const OUT = 57569
const DETERMINISTIC = 57570
const CONTAINS = 57571
const READS = 57572
const MODIFIES = 57573
const SQL = 57574
const SECURITY = 57575
const TEMPORARY = 57576
const ALGORITHM = 57577
const MERGE = 57578
const TEMPTABLE = 57579
const UNDEFINED = 57580
const CLASS_ORIGIN = 57581
const SUBCLASS_ORIGIN = 57582
const MESSAGE_TEXT = 57583
const MYSQL_ERRNO = 57584
const CONSTRAINT_CATALOG = 57585
const CONSTRAINT_SCHEMA = 57586
const CONSTRAINT_NAME = 57587
const CATALOG_NAME = 57588
const SCHEMA_NAME = 57589
const TABLE_NAME = 57590
const COLUMN_NAME = 57591
const CURSOR_NAME = 57592
const SIGNAL = 57593
const RESIGNAL = 57594
const SQLSTATE = 57595
const DECLARE = 57596
const CONDITION = 57597
const CURSOR = 57598
const CONTINUE = 57599
const EXIT = 57600
const UNDO = 57601
const HANDLER = 57602
const FOUND = 57603
const SQLWARNING = 57604
const SQLEXCEPTION = 57605
const USER = 57606
const IDENTIFIED = 57607
const ROLE = 57608
const REUSE = 57609
const GRANT = 57610
const GRANTS = 57611
const REVOKE = 57612
const NONE = 57613
const ATTRIBUTE = 57614
const RANDOM = 57615
const PASSWORD = 57616
const INITIAL = 57617
const AUTHENTICATION = 57618
const SSL = 57619
const X509 = 57620
const CIPHER = 57621
const ISSUER = 57622
const SUBJECT = 57623
const ACCOUNT = 57624
const EXPIRE = 57625
const NEVER = 57626
const DAY = 57627
const OPTION = 57628
const OPTIONAL = 57629
const EXCEPT = 57630
const ADMIN = 57631
const PRIVILEGES = 57632
const MAX_QUERIES_PER_HOUR = 57633
const MAX_UPDATES_PER_HOUR = 57634
const MAX_CONNECTIONS_PER_HOUR = 57635
const MAX_USER_CONNECTIONS = 57636
const FLUSH = 57637
const FAILED_LOGIN_ATTEMPTS = 57638
const PASSWORD_LOCK_TIME = 57639
const REQUIRE = 57640
const PROXY = 57641
const ROUTINE = 57642
const TABLESPACE = 57643
const CLIENT = 57644
const SLAVE = 57645
const EVENT = 57646
const EXECUTE = 57647
const FILE = 57648
const RELOAD = 57649
const REPLICATION = 57650
const SHUTDOWN = 57651
const SUPER = 57652
const USAGE = 57653
const LOGS = 57654
const ENGINE = 57655
const ERROR = 57656
const GENERAL = 57657
const HOSTS = 57658
const OPTIMIZER_COSTS = 57659
const RELAY = 57660
const SLOW = 57661
const USER_RESOURCES = 57662
const NO_WRITE_TO_BINLOG = 57663
const CHANNEL = 57664
const BEGIN = 57665
const START = 57666
const TRANSACTION = 57667
const COMMIT = 57668
const ROLLBACK = 57669
const SAVEPOINT = 57670
const WORK = 57671
const RELEASE = 57672
const BIT = 57673
const TINYINT = 57674
const SMALLINT = 57675
const MEDIUMINT = 57676
const INT = 57677
const INTEGER = 57678
const BIGINT = 57679
const INTNUM = 57680
const SERIAL = 57681
const REAL = 57682
const DOUBLE = 57683
const FLOAT_TYPE = 57684
const DECIMAL = 57685
const NUMERIC = 57686
const DEC = 57687
const FIXED = 57688
const PRECISION = 57689
const TIME = 57690
const TIMESTAMP = 57691
const DATETIME = 57692
const YEAR = 57693
const CHAR = 57694
const VARCHAR = 57695
const BOOL = 57696
const CHARACTER = 57697
const VARBINARY = 57698
const NCHAR = 57699
const NVARCHAR = 57700
const NATIONAL = 57701
const VARYING = 57702
const TEXT = 57703
const TINYTEXT = 57704
const MEDIUMTEXT = 57705
const LONGTEXT = 57706
const LONG = 57707
const BLOB = 57708
const TINYBLOB = 57709
const MEDIUMBLOB = 57710
const LONGBLOB = 57711
const JSON = 57712
const ENUM = 57713
const GEOMETRY = 57714
const POINT = 57715
const LINESTRING = 57716
const POLYGON = 57717
const GEOMETRYCOLLECTION = 57718
const MULTIPOINT = 57719
const MULTILINESTRING = 57720
const MULTIPOLYGON = 57721
const LOCAL = 57722
const LOW_PRIORITY = 57723
const NULLX = 57724
const AUTO_INCREMENT = 57725
const APPROXNUM = 57726
const SIGNED = 57727
const UNSIGNED = 57728
const ZEROFILL = 57729
const SRID = 57730
const COLLATION = 57731
const DATABASES = 57732
const SCHEMAS = 57733
const TABLES = 57734
const FULL = 57735
const PROCESSLIST = 57736
const COLUMNS = 57737
const FIELDS = 57738
const ENGINES = 57739
const PLUGINS = 57740
const NAMES = 57741
const CHARSET = 57742
const GLOBAL = 57743
const SESSION = 57744
const ISOLATION = 57745
const LEVEL = 57746
const READ = 57747
const WRITE = 57748
const ONLY = 57749
const REPEATABLE = 57750
const COMMITTED = 57751
const UNCOMMITTED = 57752
const SERIALIZABLE = 57753
const ENCRYPTION = 57754
const CURRENT_TIMESTAMP = 57755
const DATABASE = 57756
const CURRENT_DATE = 57757
const CURRENT_USER = 57758
const CURRENT_TIME = 57759
const LOCALTIME = 57760
const LOCALTIMESTAMP = 57761
const UTC_DATE = 57762
const UTC_TIME = 57763
const UTC_TIMESTAMP = 57764
const REPLACE = 57765
const CONVERT = 57766
const CAST = 57767
const SUBSTR = 57768
const SUBSTRING = 57769
const TRIM = 57770
const LEADING = 57771
const TRAILING = 57772
const BOTH = 57773
const GROUP_CONCAT = 57774
const SEPARATOR = 57775
const TIMESTAMPADD = 57776
const TIMESTAMPDIFF = 57777
const OVER = 57778
const WINDOW = 57779
const GROUPING = 57780
const CURRENT = 57781
const AVG = 57782
const BIT_AND = 57783
const BIT_OR = 57784
const BIT_XOR = 57785
const COUNT = 57786
const JSON_ARRAYAGG = 57787
const JSON_OBJECTAGG = 57788
const MAX = 57789
const MIN = 57790
const STDDEV_POP = 57791
const STDDEV = 57792
const STD = 57793
const STDDEV_SAMP = 57794
const SUM = 57795
const VAR_POP = 57796
const VARIANCE = 57797
const VAR_SAMP = 57798
const CUME_DIST = 57799
const DENSE_RANK = 57800
const FIRST_VALUE = 57801
const LAG = 57802
const LAST_VALUE = 57803
const LEAD = 57804
const NTH_VALUE = 57805
const NTILE = 57806
const ROW_NUMBER = 57807
const PERCENT_RANK = 57808
const RANK = 57809
const JSON_TABLE = 57810
const PATH = 57811
const MATCH = 57812
const AGAINST = 57813
const BOOLEAN = 57814
const LANGUAGE = 57815
const WITH = 57816
const QUERY = 57817
const EXPANSION = 57818
const ACCESSIBLE = 57819
const ASENSITIVE = 57820
const CUBE = 57821
const DAY_HOUR = 57822
const DAY_MICROSECOND = 57823
const DAY_MINUTE = 57824
const DAY_SECOND = 57825
const DELAYED = 57826
const DISTINCTROW = 57827
const DUAL = 57828
const EMPTY = 57829
const FETCH = 57830
const FLOAT4 = 57831
const FLOAT8 = 57832
const GET = 57833
const HIGH_PRIORITY = 57834
const HOUR_MICROSECOND = 57835
const HOUR_MINUTE = 57836
const HOUR_SECOND = 57837
const INSENSITIVE = 57838
const INT1 = 57839
const INT2 = 57840
const INT3 = 57841
const INT4 = 57842
const INT8 = 57843
const IO_AFTER_GTIDS = 57844
const IO_BEFORE_GTIDS = 57845
const ITERATE = 57846
const LEAVE = 57847
const LINEAR = 57848
const LOOP = 57849
const MASTER_BIND = 57850
const MASTER_SSL_VERIFY_SERVER_CERT = 57851
const MIDDLEINT = 57852
const MINUTE_MICROSECOND = 57853
const MINUTE_SECOND = 57854
const PURGE = 57855
const READ_WRITE = 57856
const REPEAT = 57857
const RETURN = 57858
const RLIKE = 57859
const SECOND_MICROSECOND = 57860
const SENSITIVE = 57861
const SPECIFIC = 57862
const SQL_BIG_RESULT = 57863
const SQL_SMALL_RESULT = 57864
const VARCHARACTER = 57865
const WHILE = 57866
const YEAR_MONTH = 57867
const UNUSED = 57868
const DESCRIPTION = 57869
const LATERAL = 57870
const MEMBER = 57871
const RECURSIVE = 57872
const BUCKETS = 57873
const CLONE = 57874
const COMPONENT = 57875
const DEFINITION = 57876
const ENFORCED = 57877
const EXCLUDE = 57878
const GEOMCOLLECTION = 57879
const GET_MASTER_PUBLIC_KEY = 57880
const HISTOGRAM = 57881
const HISTORY = 57882
const INACTIVE = 57883
const INVISIBLE = 57884
const LOCKED = 57885
const MASTER_COMPRESSION_ALGORITHMS = 57886
const MASTER_PUBLIC_KEY_PATH = 57887
const MASTER_TLS_CIPHERSUITES = 57888
const MASTER_ZSTD_COMPRESSION_LEVEL = 57889
const NESTED = 57890
const NETWORK_NAMESPACE = 57891
const NOWAIT = 57892
const NULLS = 57893
const OJ = 57894
const OLD = 57895
const ORDINALITY = 57896
const ORGANIZATION = 57897
const OTHERS = 57898
const PERSIST = 57899
const PERSIST_ONLY = 57900
const PRIVILEGE_CHECKS_USER = 57901
const PROCESS = 57902
const REFERENCE = 57903
const REQUIRE_ROW_FORMAT = 57904
const RESOURCE = 57905
const RESPECT = 57906
const RESTART = 57907
const RETAIN = 57908
const SECONDARY = 57909
const SECONDARY_ENGINE = 57910
const SECONDARY_LOAD = 57911
const SECONDARY_UNLOAD = 57912
const SKIP = 57913
const THREAD_PRIORITY = 57914
const TIES = 57915
const VCPU = 57916
const VISIBLE = 57917
const SYSTEM = 57918
const INFILE = 57919
const ACTIVE = 57920
const AGGREGATE = 57921
const ANY = 57922
const ARRAY = 57923
const ASCII = 57924
const AT = 57925
const AUTOEXTEND_SIZE = 57926
const ENDS = 57927
const EVENTS = 57928
const GENERATED = 57929
const ALWAYS = 57930
const STORED = 57931
const VIRTUAL = 57932
const NVAR = 57933
const PASSWORD_LOCK = 57934

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DUMPFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"INTO",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB3",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"ENABLE",
	"DISABLE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"ALGORITHM",
	"MERGE",
	"TEMPTABLE",
	"UNDEFINED",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTION",
	"OPTIONAL",
	"EXCEPT",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EVENT",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"SRID",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ENCRYPTION",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"JSON_TABLE",
	"PATH",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ACCESSIBLE",
	"ASENSITIVE",
	"CUBE",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"DELAYED",
	"DISTINCTROW",
	"DUAL",
	"EMPTY",
	"FETCH",
	"FLOAT4",
	"FLOAT8",
	"GET",
	"HIGH_PRIORITY",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"INSENSITIVE",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"IO_AFTER_GTIDS",
	"IO_BEFORE_GTIDS",
	"ITERATE",
	"LEAVE",
	"LINEAR",
	"LOOP",
	"MASTER_BIND",
	"MASTER_SSL_VERIFY_SERVER_CERT",
	"MIDDLEINT",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"PURGE",
	"READ_WRITE",
	"REPEAT",
	"RETURN",
	"RLIKE",
	"SECOND_MICROSECOND",
	"SENSITIVE",
	"SPECIFIC",
	"SQL_BIG_RESULT",
	"SQL_SMALL_RESULT",
	"VARCHARACTER",
	"WHILE",
	"YEAR_MONTH",
	"UNUSED",
	"DESCRIPTION",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"ACTIVE",
	"AGGREGATE",
	"ANY",
	"ARRAY",
	"ASCII",
	"AT",
	"AUTOEXTEND_SIZE",
	"ENDS",
	"EVENTS",
	"GENERATED",
	"ALWAYS",
	"STORED",
	"VIRTUAL",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 35,
	611, 35,
	-2, 55,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 35,
	5, 60,
	-2, 1159,
	-1, 41,
	189, 1223,
	190, 1242,
	-2, 247,
	-1, 47,
	228, 735,
	229, 735,
	-2, 724,
	-1, 490,
	177, 1252,
	-2, 1246,
	-1, 491,
	177, 1253,
	-2, 1247,
	-1, 632,
	100, 1663,
	177, 1663,
	-2, 1207,
	-1, 633,
	100, 1756,
	177, 1756,
	-2, 1208,
	-1, 638,
	100, 1682,
	177, 1682,
	-2, 1209,
	-1, 639,
	100, 1719,
	177, 1719,
	-2, 1210,
	-1, 640,
	100, 1720,
	177, 1720,
	-2, 1211,
	-1, 641,
	100, 1618,
	177, 1618,
	-2, 1215,
	-1, 643,
	100, 1701,
	177, 1701,
	-2, 1217,
	-1, 1391,
	1, 514,
	611, 514,
	-2, 512,
	-1, 1393,
	1, 514,
	611, 514,
	-2, 512,
	-1, 1560,
	177, 1255,
	-2, 1251,
	-1, 1671,
	1, 834,
	5, 834,
	12, 834,
	13, 834,
	14, 834,
	15, 834,
	17, 834,
	19, 834,
	29, 834,
	30, 834,
	56, 834,
	57, 834,
	58, 834,
	59, 834,
	60, 834,
	62, 834,
	63, 834,
	66, 834,
	67, 834,
	69, 834,
	70, 834,
	87, 834,
	455, 834,
	611, 834,
	-2, 866,
	-1, 1678,
	67, 77,
	69, 77,
	-2, 81,
	-1, 1713,
	44, 580,
	-2, 1321,
	-1, 1717,
	68, 578,
	72, 578,
	-2, 1389,
	-1, 1718,
	68, 580,
	-2, 1572,
	-1, 1721,
	68, 576,
	72, 576,
	-2, 1407,
	-1, 1722,
	68, 577,
	72, 577,
	-2, 1430,
	-1, 1770,
	1, 515,
	611, 515,
	-2, 512,
	-1, 1855,
	44, 623,
	196, 625,
	198, 623,
	199, 623,
	-2, 660,
	-1, 1923,
	5, 61,
	-2, 945,
	-1, 2396,
	196, 626,
	-2, 624,
	-1, 2463,
	69, 1527,
	70, 1527,
	177, 1527,
	-2, 767,
	-1, 2487,
	1, 899,
	5, 899,
	12, 899,
	13, 899,
	14, 899,
	15, 899,
	17, 899,
	19, 899,
	29, 899,
	30, 899,
	56, 899,
	57, 899,
	58, 899,
	59, 899,
	60, 899,
	62, 899,
	63, 899,
	66, 899,
	67, 899,
	69, 899,
	70, 899,
	87, 899,
	455, 899,
	611, 899,
	-2, 866,
	-1, 2618,
	5, 61,
	-2, 1179,
	-1, 2703,
	41, 1262,
	-2, 1260,
	-1, 2901,
	5, 61,
	-2, 1182,
	-1, 2916,
	278, 313,
	-2, 1324,
	-1, 2917,
	278, 314,
	-2, 1369,
	-1, 2918,
	278, 315,
	-2, 1570,
	-1, 3084,
	95, 299,
	97, 299,
	99, 299,
	-2, 55,
	-1, 3111,
	97, 306,
	98, 306,
	99, 306,
	-2, 55,
}

const yyPrivate = 57344

const yyLast = 38467

var yyAct = [...]int{
	545, 76, 3036, 3018, 3067, 3076, 3017, 2921, 2082, 417,
	2830, 7, 371, 3038, 2893, 2920, 2980, 994, 2937, 2942,
	2829, 6, 2960, 2238, 2828, 5, 2339, 2822, 2884, 493,
	2903, 2800, 2802, 1326, 2641, 2831, 8, 2891, 2251, 2292,
	2760, 2703, 2480, 1248, 2456, 657, 1989, 1987, 544, 2457,
	2116, 2166, 475, 1982, 482, 1765, 1247, 2180, 2501, 2705,
	2018, 496, 491, 2574, 1789, 2550, 2544, 2356, 1723, 354,
	357, 79, 2528, 1537, 2823, 2024, 2293, 76, 402, 91,
	2453, 2380, 396, 396, 2098, 2465, 2252, 508, 1028, 2472,
	2390, 1714, 1530, 104, 498, 1693, 1884, 1704, 1854, 2179,
	1667, 1703, 1528, 1756, 1052, 1647, 655, 1705, 127, 1972,
	1428, 127, 2211, 652, 1478, 1585, 1594, 127, 1666, 1710,
	1402, 1965, 1817, 1773, 1545, 1449, 1772, 399, 399, 1771,
	1752, 2827, 3, 472, 1011, 2073, 634, 2025, 127, 1306,
	1426, 1157, 1302, 1640, 2144, 1562, 2190, 1834, 1671, 1164,
	1081, 637, 1160, 1060, 1769, 127, 660, 651, 478, 630,
	1305, 631, 1178, 1680, 416, 1483, 374, 1007, 1059, 373,
	500, 1091, 1265, 1397, 1168, 127, 399, 1394, 660, 977,
	982, 411, 1266, 3111, 3107, 100, 127, 1740, 96, 3101,
	81, 2038, 3084, 3082, 3062, 3031, 2042, 2968, 78, 2762,
	2761, 653, 2307, 1476, 2682, 1425, 2337, 2515, 473, 3105,
	3094, 366, 2047, 2046, 3048, 2889, 36, 3012, 68, 2808,
	2680, 36, 2529, 1802, 36, 36, 1802, 2695, 83, 2110,
	89, 39, 2531, 2983, 2043, 2683, 2876, 2353, 2888, 2246,
	2232, 2990, 3016, 2807, 2897, 2780, 2938, 1954, 2449, 2049,
	976, 2031, 2897, 1833, 993, 2006, 2287, 2247, 2005, 2032,
	389, 2007, 383, 394, 377, 2740, 1984, 87, 85, 86,
	2892, 2288, 2289, 1150, 2089, 625, 626, 627, 77, 979,
	2894, 984, 985, 77, 384, 1479, 77, 77, 2894, 2733,
	414, 987, 1690, 1691, 1689, 474, 1596, 1193, 1192, 1202,
	1203, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1194, 1482,
	601, 1204, 607, 609, 608, 605, 606, 604, 603, 602,
	1524, 1525, 1307, 1031, 1308, 1032, 1033, 2748, 67, 1117,
	1499, 2506, 2507, 1480, 1481, 1109, 365, 364, 2051, 1038,
	1015, 1016, 1725, 1726, 1019, 2898, 406, 2534, 1832, 1078,
	1728, 76, 76, 2898, 1728, 1732, 1734, 1746, 1733, 1741,
	1741, 1047, 2601, 2436, 2045, 1753, 2434, 2048, 1462, 368,
	1042, 1049, 363, 413, 2141, 1048, 1017, 1018, 1520, 1519,
	484, 1518, 1517, 127, 1516, 1515, 494, 2532, 2533, 2535,
	2536, 2537, 1039, 1040, 1113, 1114, 2105, 1093, 2133, 2545,
	3005, 1124, 348, 2212, 1125, 407, 2708, 2548, 1050, 2379,
	1146, 2864, 118, 114, 115, 2138, 116, 1845, 1154, 2923,
	647, 2546, 2547, 2551, 2552, 2553, 2554, 127, 2922, 2363,
	2109, 2866, 2784, 2354, 376, 375, 378, 2782, 2774, 2357,
	2358, 2359, 2360, 2361, 382, 2562, 2570, 1846, 120, 119,
	2357, 2358, 2359, 2360, 2361, 1790, 2677, 1510, 2699, 2366,
	2930, 386, 419, 1093, 1093, 390, 2107, 2560, 3071, 112,
	2965, 2963, 2964, 2675, 358, 2670, 1400, 2681, 127, 393,
	106, 2674, 1046, 473, 2214, 355, 3033, 1409, 1410, 1408,
	1213, 111, 2673, 1215, 1062, 1063, 1064, 1065, 1066, 1067,
	1068, 1069, 1070, 1071, 1072, 1073, 121, 1029, 122, 1030,
	1032, 1033, 2948, 2672, 2671, 2087, 2669, 359, 983, 2770,
	2771, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233,
	1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243,
	1244, 1245, 1131, 3026, 1246, 1116, 1250, 1181, 1094, 1101,
	1102, 1104, 1105, 1106, 1107, 1108, 349, 1110, 1111, 1112,
	2088, 1115, 113, 1118, 1119, 1120, 1121, 1122, 1352, 2044,
	474, 2825, 2090, 106, 2040, 2631, 379, 380, 381, 387,
	1489, 391, 392, 395, 1014, 2272, 2776, 1214, 1100, 1251,
	1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1143,
	1263, 1264, 1267, 1267, 1267, 1273, 1267, 1267, 1273, 1267,
	1273, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290,
	1291, 1292, 1293, 1294, 1295, 1296, 2895, 1352, 1780, 367,
	2766, 2216, 2530, 2108, 2895, 1027, 2220, 1141, 2215, 108,
	2213, 2978, 1463, 1126, 1043, 2218, 2381, 1092, 1098, 1839,
	3042, 2124, 2125, 3037, 2781, 2041, 117, 1779, 2217, 1024,
	2058, 1482, 1755, 1741, 1731, 2678, 1023, 2967, 2336, 3040,
	2806, 2734, 1339, 2219, 2221, 2698, 2365, 473, 1099, 1103,
	1095, 3008, 356, 97, 356, 1480, 1481, 3080, 2865, 3096,
	127, 1484, 637, 351, 75, 981, 980, 637, 2758, 660,
	88, 108, 75, 2696, 2989, 2111, 1152, 75, 1784, 1785,
	75, 75, 2775, 2642, 1096, 1097, 356, 1137, 1325, 1319,
	2395, 983, 2908, 2909, 1025, 1026, 1486, 2644, 352, 1485,
	1325, 1339, 2575, 2576, 2152, 1433, 3112, 2150, 1145, 1136,
	1132, 1133, 1134, 1135, 1138, 1139, 1140, 1142, 1325, 2296,
	3109, 1324, 3102, 1353, 1325, 1992, 1994, 3085, 2152, 978,
	996, 1385, 2786, 412, 474, 1323, 2586, 1310, 2585, 2132,
	2163, 1768, 1311, 2039, 1165, 1268, 1270, 1272, 1274, 1276,
	1278, 1279, 1281, 99, 1185, 1269, 1271, 2129, 1275, 1277,
	2113, 1280, 2023, 110, 109, 1300, 2112, 1840, 1414, 1412,
	1044, 975, 419, 2280, 2279, 2278, 974, 1297, 1298, 2023,
	2127, 1149, 1353, 1862, 1856, 1857, 986, 1855, 1858, 1859,
	1193, 1192, 1202, 1203, 1195, 1196, 1197, 1198, 1199, 1200,
	1201, 1194, 385, 320, 1204, 1644, 2028, 106, 2421, 1320,
	1216, 1217, 1249, 2663, 2413, 2286, 2643, 107, 111, 356,
	2131, 2130, 2023, 1865, 2023, 110, 109, 2023, 3039, 3041,
	2010, 3078, 2589, 1932, 3079, 1901, 3077, 1864, 1863, 1799,
	1889, 1182, 1089, 1870, 1798, 1929, 1783, 101, 1781, 102,
	1685, 1540, 1318, 1184, 1006, 1993, 2779, 1204, 1366, 1369,
	1370, 1371, 1372, 1373, 1374, 1262, 1375, 1376, 1377, 1378,
	1379, 1380, 1381, 1382, 2664, 1354, 1355, 1356, 1357, 1333,
	1337, 1367, 1334, 1340, 1336, 1338, 1335, 1818, 1341, 1342,
	1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1358,
	1359, 1360, 1361, 1362, 1363, 1364, 1365, 2022, 2584, 2522,
	2162, 1041, 1694, 2657, 2159, 1694, 2655, 1366, 1369, 1370,
	1371, 1372, 1373, 1374, 2022, 1375, 1376, 1377, 1378, 1379,
	1380, 1381, 1382, 1675, 1354, 1355, 1356, 1357, 1333, 1337,
	1367, 1334, 1340, 1336, 1338, 1335, 1694, 1341, 1342, 1343,
	1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1358, 1359,
	1360, 1361, 1362, 1363, 1364, 1365, 1088, 2022, 1404, 2022,
	2523, 1936, 2022, 396, 2150, 2158, 2150, 2520, 1325, 124,
	2155, 2151, 2152, 2154, 2157, 2590, 2325, 1427, 353, 1694,
	2509, 2002, 396, 1694, 2328, 1694, 2324, 98, 2375, 1368,
	1216, 1217, 1459, 1861, 1694, 2320, 2801, 660, 127, 1694,
	2318, 1384, 1216, 1217, 1694, 2071, 2613, 399, 399, 1694,
	2069, 399, 1430, 1694, 2067, 2171, 649, 1966, 127, 1533,
	1156, 127, 1694, 2065, 1694, 2062, 399, 399, 2521, 127,
	1197, 1198, 1199, 1200, 1201, 1194, 991, 2326, 1204, 127,
	127, 127, 127, 127, 2949, 2950, 1177, 1005, 1368, 1192,
	1202, 1203, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1194,
	399, 2925, 1204, 1194, 127, 2167, 1204, 396, 1193, 1192,
	1202, 1203, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1194,
	1474, 2470, 1204, 2946, 2947, 1403, 2811, 2810, 2685, 1407,
	1202, 1203, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1194,
	2469, 1508, 1204, 1471, 94, 1434, 1450, 76, 1013, 1809,
	1021, 399, 399, 399, 1569, 1453, 660, 1454, 1445, 1446,
	1447, 1448, 1390, 1416, 2686, 1389, 1405, 1034, 1406, 1567,
	1568, 1566, 1176, 1174, 1316, 1051, 1424, 2926, 1457, 1423,
	1175, 1176, 1174, 1436, 989, 1927, 399, 1926, 3104, 93,
	1177, 399, 399, 1174, 1438, 1439, 1175, 1176, 1174, 1177,
	1175, 1176, 1174, 1522, 3030, 988, 1175, 1176, 1174, 2961,
	1177, 2994, 127, 2993, 127, 1177, 76, 660, 995, 1177,
	1175, 1176, 1174, 1466, 1467, 1177, 2234, 1469, 2962, 92,
	1560, 1492, 1641, 1538, 1539, 127, 1563, 1392, 1641, 1177,
	1944, 3100, 1181, 1472, 1012, 1451, 1589, 1590, 1810, 1022,
	2984, 1250, 1487, 3088, 3068, 3087, 1491, 1488, 3028, 2561,
	2189, 2555, 1529, 1036, 1493, 2416, 2591, 1496, 1497, 1498,
	1514, 1500, 1501, 1828, 1531, 1502, 2305, 3097, 473, 1171,
	2862, 1503, 1564, 1531, 1008, 1504, 1505, 660, 1506, 1507,
	1509, 1928, 1559, 1512, 1490, 1558, 1175, 1176, 1174, 1672,
	77, 2869, 1521, 660, 660, 2861, 1542, 1621, 1155, 2819,
	1437, 1565, 1552, 1554, 1555, 1177, 1526, 2693, 1627, 1630,
	1553, 1886, 1887, 1888, 3052, 1642, 1161, 2863, 1082, 1162,
	1543, 1455, 3098, 1544, 1513, 998, 999, 1000, 1001, 1002,
	1003, 1004, 1556, 2777, 2692, 94, 2691, 473, 1175, 1176,
	1174, 2690, 1665, 2684, 2514, 2961, 1175, 1176, 1174, 2513,
	127, 127, 127, 2308, 1560, 474, 637, 1177, 2078, 1175,
	1176, 1174, 1700, 1249, 2076, 1177, 2079, 2236, 2052, 3051,
	1084, 1586, 473, 1587, 660, 660, 1992, 1994, 1177, 2008,
	2778, 2009, 1057, 1676, 1175, 1176, 1174, 1415, 1083, 3053,
	1592, 3015, 2970, 2969, 1600, 1653, 2927, 1655, 2924, 1605,
	1606, 2875, 2773, 1177, 2772, 1056, 2757, 1613, 2700, 2668,
	2632, 1617, 2611, 2558, 2557, 2556, 1698, 2524, 2511, 1699,
	653, 1385, 2386, 1796, 474, 1638, 1711, 2315, 2309, 2273,
	1193, 1192, 1202, 1203, 1195, 1196, 1197, 1198, 1199, 1200,
	1201, 1194, 2176, 2175, 1204, 2074, 1829, 1804, 1468, 1273,
	1719, 2958, 2957, 2783, 1687, 1683, 1686, 1679, 127, 474,
	1692, 1548, 1549, 1550, 127, 127, 399, 399, 399, 1701,
	1708, 127, 2755, 1758, 1759, 1760, 1761, 2717, 2028, 1831,
	1762, 1763, 2711, 2582, 2452, 2409, 127, 2405, 2397, 2367,
	2119, 1825, 513, 512, 515, 516, 517, 518, 1754, 2118,
	1822, 514, 519, 127, 127, 127, 1993, 1195, 1196, 1197,
	1198, 1199, 1200, 1201, 1194, 1806, 1805, 1204, 1867, 1588,
	1742, 1743, 1744, 1745, 1464, 1461, 1422, 1421, 419, 1393,
	127, 1391, 127, 3095, 1079, 1807, 660, 1249, 1777, 1123,
	660, 1625, 1626, 1009, 1794, 1795, 362, 360, 1815, 1156,
	1890, 2651, 2991, 2496, 2976, 2710, 1182, 1974, 1977, 1978,
	1979, 1975, 660, 1976, 1980, 660, 2709, 2473, 2474, 2953,
	1156, 2496, 2934, 2659, 1811, 2658, 1560, 2454, 1156, 1816,
	2468, 1008, 2231, 2346, 660, 1193, 1192, 1202, 1203, 1195,
	1196, 1197, 1198, 1199, 1200, 1201, 1194, 2882, 1156, 1204,
	2496, 2878, 2316, 1697, 1681, 1563, 2651, 2816, 2496, 2764,
	2651, 1156, 1676, 80, 1824, 2651, 2746, 1089, 1830, 2651,
	2650, 1820, 2622, 1156, 2416, 1837, 1193, 1192, 1202, 1203,
	1195, 1196, 1197, 1198, 1199, 1200, 1201, 1194, 1559, 3009,
	1204, 1699, 1869, 1156, 1997, 2442, 1433, 1844, 2496, 2495,
	1847, 1564, 2334, 2333, 2330, 2331, 2330, 2329, 1969, 1156,
	1682, 1843, 1684, 1985, 1681, 1986, 1866, 1899, 1995, 1899,
	1156, 1672, 2117, 1764, 1672, 1991, 1878, 1876, 1877, 1842,
	1841, 1619, 1826, 1895, 1619, 1156, 1851, 1322, 1321, 1193,
	1192, 1202, 1203, 1195, 1196, 1197, 1198, 1199, 1200, 1201,
	1194, 1384, 1891, 1204, 2117, 1128, 1127, 1086, 2982, 1087,
	1087, 1535, 2468, 1921, 2616, 1619, 127, 1969, 1802, 1968,
	1682, 1430, 1433, 1788, 1998, 127, 2485, 1999, 127, 1969,
	2482, 2347, 2332, 127, 2174, 2143, 127, 127, 127, 637,
	2012, 1981, 1688, 1899, 1193, 1192, 1202, 1203, 1195, 1196,
	1197, 1198, 1199, 1200, 1201, 1194, 660, 1676, 1204, 1969,
	2441, 2468, 1534, 1089, 1787, 1676, 1916, 1915, 1676, 2027,
	2029, 1470, 1801, 1943, 1974, 1977, 1978, 1979, 1975, 1536,
	1976, 1980, 1151, 1511, 1477, 1433, 1413, 648, 1953, 1955,
	1996, 2013, 1727, 1411, 473, 1961, 1962, 1963, 1964, 1304,
	77, 2905, 2879, 2481, 2797, 2714, 2628, 2516, 1728, 1766,
	1385, 1757, 2015, 2304, 1310, 2473, 2474, 2000, 2003, 660,
	1753, 127, 2123, 1165, 2016, 1093, 2061, 396, 2064, 2066,
	2068, 2070, 2011, 1782, 660, 660, 660, 1748, 1747, 1386,
	399, 1076, 1819, 3074, 2021, 3057, 2026, 370, 3055, 77,
	3019, 2476, 2454, 2345, 127, 399, 419, 2080, 76, 1193,
	1192, 1202, 1203, 1195, 1196, 1197, 1198, 1199, 1200, 1201,
	1194, 1418, 399, 1204, 2075, 1129, 2077, 1090, 1085, 1885,
	2264, 474, 2479, 2262, 2086, 2265, 2478, 2084, 2263, 2266,
	2085, 1978, 1979, 399, 2261, 660, 2260, 2944, 2106, 479,
	480, 399, 2887, 2177, 1875, 1546, 1922, 2053, 2054, 1169,
	1170, 2936, 2619, 401, 2060, 1883, 1882, 2737, 1403, 2581,
	2499, 2404, 660, 660, 2072, 2403, 2030, 2314, 1945, 1388,
	2120, 2313, 127, 2115, 2312, 2020, 2128, 1560, 1167, 2126,
	2121, 2298, 660, 2788, 2791, 2239, 2874, 2873, 2704, 1008,
	2702, 2769, 1420, 2768, 361, 1465, 2248, 2250, 2170, 2148,
	1672, 1672, 1672, 1672, 1672, 2147, 2142, 2172, 2173, 2169,
	1440, 1441, 1442, 1443, 1444, 2341, 1985, 2687, 2688, 2274,
	2063, 2268, 1317, 2145, 2156, 2161, 2183, 2182, 1672, 473,
	2276, 2153, 1074, 2164, 2165, 1058, 1055, 2168, 1158, 1559,
	1054, 1010, 2192, 2233, 2254, 2184, 2188, 660, 3001, 1159,
	2721, 2720, 2249, 1775, 1538, 1539, 1776, 2614, 1417, 3014,
	2253, 3010, 127, 127, 127, 127, 127, 2867, 2277, 2306,
	2706, 2223, 1621, 2222, 127, 2563, 2134, 2282, 127, 2284,
	2285, 2283, 2564, 127, 2140, 2504, 1053, 2340, 1169, 1170,
	127, 94, 419, 1767, 1676, 1676, 1676, 1676, 1676, 1527,
	1881, 2256, 2257, 660, 2259, 660, 3000, 660, 1880, 660,
	1676, 2300, 2301, 1618, 1620, 2302, 474, 2303, 2255, 1624,
	2267, 2258, 1676, 1147, 1148, 2999, 2998, 473, 2665, 1850,
	2019, 2281, 1037, 2240, 2241, 2242, 2243, 2244, 2440, 2297,
	476, 2299, 2291, 1523, 2290, 2929, 2928, 473, 2182, 2886,
	2362, 2871, 1651, 1652, 1762, 396, 1763, 2792, 2736, 1658,
	1659, 1660, 1661, 2348, 488, 477, 1547, 80, 2885, 1648,
	2342, 2343, 2344, 127, 2803, 2117, 2092, 2093, 2094, 2317,
	2319, 3059, 3058, 82, 2594, 2384, 2323, 2139, 2137, 2136,
	1933, 1930, 1848, 660, 660, 660, 1452, 1172, 2327, 3058,
	399, 3059, 2813, 2311, 2364, 127, 399, 1532, 408, 648,
	410, 2841, 50, 53, 474, 2843, 19, 2842, 18, 1,
	127, 1838, 399, 1494, 660, 399, 2844, 20, 2543, 399,
	399, 2542, 399, 2549, 474, 2352, 2393, 1193, 1192, 1202,
	1203, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1194, 660,
	2355, 1204, 2104, 127, 660, 2371, 2845, 21, 2840, 15,
	2559, 660, 1401, 2447, 660, 2417, 2676, 660, 992, 2387,
	2394, 2235, 2388, 2321, 2839, 14, 2833, 10, 2459, 76,
	2856, 34, 2854, 33, 2369, 2408, 1786, 1166, 1385, 2853,
	32, 1664, 1080, 1678, 2852, 28, 2851, 27, 2850, 26,
	2848, 23, 2415, 2484, 2847, 22, 2849, 24, 2872, 2489,
	2490, 2491, 2838, 13, 2787, 2455, 2835, 12, 2834, 11,
	2832, 9, 2254, 2789, 2701, 1821, 2458, 2566, 2527, 2526,
	2097, 2096, 2467, 125, 1075, 2460, 347, 1475, 2253, 2146,
	2149, 660, 125, 660, 2372, 1797, 1860, 2799, 1849, 1130,
	2432, 2483, 1712, 2488, 1702, 2902, 650, 90, 1808, 1020,
	328, 1709, 2036, 418, 2494, 2374, 2790, 660, 2378, 1077,
	76, 485, 2382, 2383, 2035, 2385, 2050, 645, 2477, 2518,
	125, 2462, 1724, 660, 2493, 1770, 1529, 1774, 1852, 2034,
	2486, 2033, 2785, 2037, 1868, 1330, 1328, 660, 419, 1791,
	125, 1329, 1327, 1332, 2500, 1792, 1793, 419, 1331, 3050,
	473, 125, 1800, 2539, 2540, 2541, 2988, 332, 2013, 1312,
	2915, 2451, 1173, 2519, 105, 54, 2517, 1803, 2583, 2505,
	2160, 404, 405, 2295, 95, 103, 334, 1212, 127, 1879,
	660, 2004, 635, 636, 2370, 628, 1814, 2508, 1871, 1153,
	2809, 2979, 2907, 1163, 1897, 2577, 2578, 2939, 1942, 1900,
	1261, 1639, 2538, 497, 1902, 1903, 2271, 1905, 1906, 1907,
	1908, 1082, 2612, 1911, 1912, 1913, 1914, 399, 2941, 2579,
	1918, 1919, 1920, 1551, 511, 510, 2568, 1923, 1924, 1925,
	2569, 2567, 509, 2410, 506, 1931, 507, 474, 1934, 1935,
	2580, 473, 2587, 1940, 2595, 2596, 660, 484, 1946, 1947,
	2573, 1948, 1949, 1950, 660, 1951, 1952, 2572, 2297, 1956,
	1957, 1958, 1959, 1960, 2896, 1541, 2245, 1186, 2335, 495,
	2588, 486, 1670, 1762, 1662, 2653, 2565, 1240, 1241, 1827,
	1973, 1971, 1970, 1419, 2254, 1301, 2475, 2510, 2471, 2512,
	1983, 2592, 1669, 1668, 1673, 38, 2661, 127, 2593, 2182,
	2253, 2392, 1035, 2450, 2634, 350, 2615, 2448, 2019, 2623,
	2630, 2399, 2401, 2732, 660, 2662, 2639, 84, 2636, 2637,
	2638, 2392, 660, 660, 660, 2624, 2660, 409, 474, 660,
	2648, 2649, 481, 25, 17, 1045, 16, 2635, 1853, 990,
	2640, 2646, 2647, 2645, 40, 42, 2091, 1778, 125, 660,
	2914, 3035, 1061, 3066, 2666, 2959, 31, 30, 29, 2846,
	2571, 2855, 2722, 2837, 2836, 1672, 3021, 3020, 4, 1144,
	2667, 69, 35, 646, 2, 0, 2654, 0, 2656, 0,
	2679, 0, 543, 0, 0, 2689, 0, 2459, 2600, 0,
	2459, 2742, 125, 2694, 0, 0, 2697, 1967, 0, 2707,
	0, 0, 2484, 0, 1218, 1219, 1220, 1221, 1222, 1223,
	1224, 2715, 2716, 1991, 2723, 2750, 2712, 2713, 2724, 660,
	2725, 0, 2719, 0, 0, 0, 0, 127, 0, 0,
	0, 0, 0, 76, 2739, 2458, 2738, 0, 2458, 0,
	0, 0, 0, 418, 0, 2754, 2744, 2741, 0, 0,
	2747, 2749, 0, 0, 2735, 660, 0, 2745, 0, 1676,
	0, 660, 0, 2767, 0, 2756, 127, 0, 127, 0,
	0, 0, 644, 0, 0, 0, 656, 2439, 0, 0,
	1672, 0, 0, 0, 660, 0, 0, 0, 0, 2765,
	0, 0, 0, 0, 0, 0, 0, 0, 997, 0,
	0, 0, 2083, 0, 2187, 0, 0, 0, 0, 0,
	2195, 2459, 0, 76, 0, 2198, 2199, 0, 0, 2817,
	0, 0, 473, 2206, 2795, 0, 1249, 2210, 0, 0,
	0, 0, 0, 2794, 0, 2114, 2625, 2626, 76, 399,
	2627, 2796, 127, 2629, 2824, 2826, 2392, 660, 0, 0,
	2812, 1249, 0, 2804, 0, 2814, 0, 0, 0, 2458,
	0, 0, 0, 0, 473, 0, 2392, 2818, 0, 2815,
	0, 0, 0, 0, 1676, 0, 1193, 1192, 1202, 1203,
	1195, 1196, 1197, 1198, 1199, 1200, 1201, 1194, 2269, 2270,
	1204, 127, 0, 0, 0, 0, 0, 0, 2868, 2870,
	0, 0, 0, 0, 0, 2910, 0, 2880, 0, 474,
	0, 0, 0, 2178, 0, 2877, 0, 2793, 0, 2899,
	0, 419, 2900, 0, 0, 0, 0, 0, 2754, 2254,
	660, 76, 2906, 0, 660, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 473, 2253, 0, 0, 0, 0,
	660, 474, 0, 2295, 0, 1303, 0, 0, 645, 0,
	0, 0, 484, 645, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2295, 0, 0, 2932, 2945, 0, 0,
	2931, 0, 0, 0, 2935, 0, 2956, 0, 0, 2933,
	0, 0, 660, 0, 0, 2904, 0, 0, 2951, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2954, 0,
	0, 0, 660, 2974, 0, 0, 0, 0, 396, 2966,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2975, 474, 2977, 76, 2955, 0, 0, 2919, 660, 76,
	0, 0, 0, 0, 0, 0, 3004, 0, 2997, 0,
	0, 0, 2995, 2992, 2987, 0, 0, 0, 0, 0,
	0, 0, 0, 399, 3006, 76, 0, 0, 0, 3013,
	76, 660, 3011, 3025, 3007, 0, 0, 0, 0, 3045,
	3029, 2239, 3032, 3024, 660, 0, 660, 3023, 3044, 2418,
	419, 3054, 419, 396, 3049, 3056, 3046, 76, 3022, 3060,
	660, 76, 76, 1249, 3047, 0, 76, 0, 0, 3004,
	0, 0, 3061, 3069, 2338, 0, 3063, 2428, 0, 0,
	0, 0, 0, 0, 0, 0, 3034, 0, 2437, 2438,
	0, 2904, 0, 76, 2443, 3081, 76, 0, 399, 0,
	3004, 3089, 660, 3091, 0, 3002, 2368, 127, 0, 0,
	0, 3086, 0, 76, 2461, 76, 0, 0, 0, 76,
	3004, 2373, 3004, 0, 0, 0, 0, 0, 0, 0,
	0, 2295, 76, 0, 3103, 76, 0, 0, 76, 3004,
	0, 0, 76, 2230, 0, 3004, 0, 2492, 0, 3004,
	3108, 0, 0, 0, 2406, 0, 0, 0, 0, 0,
	0, 473, 0, 0, 0, 0, 1729, 1730, 2426, 1735,
	1736, 1737, 1738, 1739, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2911, 2912, 0, 1749, 1750, 1751,
	0, 0, 0, 2193, 2194, 0, 0, 0, 2196, 2197,
	0, 1456, 2200, 2201, 2202, 2203, 0, 0, 0, 2207,
	2208, 2209, 2940, 2943, 2295, 0, 0, 1193, 1192, 1202,
	1203, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1194, 0,
	0, 1204, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3027, 0, 0, 0, 0, 0, 0, 474, 0,
	1193, 1192, 1202, 1203, 1195, 1196, 1197, 1198, 1199, 1200,
	1201, 1194, 0, 125, 1204, 0, 0, 0, 1396, 1399,
	0, 0, 0, 644, 0, 0, 0, 0, 644, 1313,
	0, 0, 0, 125, 0, 0, 125, 0, 2996, 1396,
	1399, 0, 0, 0, 1429, 0, 2295, 0, 0, 0,
	0, 0, 0, 0, 125, 125, 125, 125, 125, 2943,
	2606, 2607, 2608, 0, 2610, 0, 0, 0, 0, 0,
	0, 2425, 0, 0, 0, 2617, 2618, 0, 2620, 1460,
	0, 2621, 0, 0, 0, 0, 0, 0, 0, 2525,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1561, 2633, 0, 1570, 1571, 1572, 1573, 1574, 1575,
	1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 2652,
	1193, 1192, 1202, 1203, 1195, 1196, 1197, 1198, 1199, 1200,
	1201, 1194, 0, 0, 1204, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3090, 1593, 1598, 1599, 0,
	1601, 1602, 1603, 1604, 0, 0, 1607, 1608, 1609, 1610,
	0, 0, 0, 1614, 1615, 1616, 0, 0, 0, 0,
	0, 1622, 1623, 1633, 0, 0, 1629, 1632, 0, 1637,
	0, 419, 1645, 0, 1643, 0, 0, 125, 0, 418,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1646, 0, 1649, 1650, 0, 0, 0, 1654,
	125, 1656, 1657, 0, 2726, 2727, 0, 0, 2728, 2729,
	2730, 2731, 1429, 0, 0, 0, 0, 0, 2420, 0,
	0, 0, 0, 0, 0, 0, 2422, 0, 0, 2423,
	2424, 0, 0, 0, 0, 0, 0, 2427, 0, 0,
	0, 0, 2751, 2752, 2753, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1597, 1597, 1597, 0, 1597, 1597,
	1597, 1597, 0, 0, 1597, 1597, 1597, 1597, 0, 0,
	0, 1597, 1597, 1597, 0, 0, 0, 0, 0, 1597,
	1597, 0, 0, 0, 1597, 1597, 0, 1597, 0, 0,
	0, 645, 1597, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2055, 2056, 2057, 2059, 0, 0,
	1597, 1597, 1597, 1597, 0, 0, 1597, 1597, 1597, 1597,
	1597, 0, 0, 0, 0, 125, 125, 125, 0, 0,
	0, 0, 645, 0, 0, 0, 0, 0, 2805, 0,
	0, 2229, 0, 0, 2185, 0, 1429, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1387, 0, 0,
	0, 0, 0, 1395, 1398, 0, 0, 0, 0, 2821,
	1823, 0, 1193, 1192, 1202, 1203, 1195, 1196, 1197, 1198,
	1199, 1200, 1201, 1194, 1395, 1398, 1204, 0, 0, 0,
	0, 0, 0, 0, 0, 343, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2881, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2890, 0, 0, 0, 0,
	0, 2901, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 125, 0, 0, 0, 0, 0, 125,
	125, 0, 0, 0, 0, 0, 125, 0, 1193, 1192,
	1202, 1203, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1194,
	0, 125, 1204, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1892, 1893, 1894, 0, 1495, 0, 1812, 1813,
	125, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2820, 0, 0, 0, 321, 0, 0, 0,
	0, 0, 1898, 0, 0, 125, 0, 418, 2952, 0,
	1904, 0, 0, 0, 0, 1909, 1910, 0, 0, 0,
	0, 0, 0, 1917, 1193, 1192, 1202, 1203, 1195, 1196,
	1197, 1198, 1199, 1200, 1201, 1194, 0, 656, 1204, 1937,
	1938, 1939, 0, 324, 0, 0, 0, 1896, 1941, 0,
	0, 36, 333, 341, 342, 0, 0, 0, 2986, 0,
	0, 0, 0, 0, 0, 57, 0, 656, 1429, 0,
	0, 74, 0, 0, 39, 1193, 1192, 1202, 1203, 1195,
	1196, 1197, 1198, 1199, 1200, 1201, 1194, 330, 0, 1204,
	331, 0, 0, 339, 340, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1591, 0, 0,
	0, 0, 0, 77, 0, 0, 0, 0, 0, 0,
	1597, 0, 0, 1611, 1612, 0, 0, 0, 1597, 0,
	0, 2322, 0, 1597, 1597, 0, 0, 0, 0, 2857,
	0, 1597, 3065, 3068, 3064, 1597, 644, 0, 0, 0,
	336, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1597, 0, 0, 0,
	0, 337, 0, 0, 0, 0, 0, 0, 3092, 3093,
	0, 0, 0, 0, 0, 0, 0, 644, 0, 0,
	0, 125, 0, 0, 0, 0, 0, 0, 0, 0,
	125, 656, 0, 418, 656, 656, 0, 0, 125, 0,
	0, 125, 2001, 1429, 0, 645, 0, 0, 0, 0,
	0, 0, 0, 2122, 0, 41, 70, 44, 43, 46,
	0, 0, 0, 0, 0, 0, 322, 0, 0, 0,
	2858, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 47, 73, 72, 0,
	0, 0, 0, 45, 0, 0, 0, 0, 0, 0,
	335, 325, 326, 0, 346, 0, 0, 0, 327, 329,
	0, 323, 345, 344, 0, 2429, 2430, 0, 2431, 0,
	0, 2433, 0, 2435, 0, 0, 125, 0, 0, 0,
	0, 2186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 55, 56, 0, 2859, 0, 0,
	2204, 2205, 0, 0, 0, 338, 0, 0, 0, 125,
	0, 64, 0, 65, 2224, 2225, 0, 2226, 2227, 0,
	0, 2228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 66, 0,
	0, 0, 0, 0, 0, 0, 1836, 2497, 2498, 0,
	1836, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2860, 71, 0, 51,
	52, 59, 1836, 60, 0, 1836, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 466, 0, 125, 0, 0,
	0, 0, 0, 0, 1874, 0, 0, 0, 1597, 0,
	0, 0, 0, 656, 0, 0, 2396, 1597, 0, 1429,
	0, 1188, 0, 1191, 0, 471, 0, 0, 0, 0,
	1205, 1206, 1207, 1208, 1209, 1210, 1211, 2310, 1189, 1190,
	1187, 0, 0, 431, 0, 0, 0, 0, 1193, 1192,
	1202, 1203, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1194,
	0, 438, 1204, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 645, 125, 125, 125,
	125, 125, 0, 0, 0, 0, 0, 0, 0, 418,
	0, 0, 0, 125, 0, 0, 0, 0, 418, 0,
	0, 0, 0, 1597, 0, 125, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 75, 0, 0,
	0, 0, 0, 0, 0, 0, 470, 0, 0, 0,
	0, 0, 0, 0, 0, 1325, 0, 0, 0, 0,
	0, 0, 0, 437, 0, 0, 0, 0, 0, 0,
	644, 0, 0, 440, 0, 0, 0, 0, 0, 0,
	0, 0, 457, 0, 0, 432, 656, 429, 0, 0,
	2419, 0, 0, 0, 439, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 125, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 443, 441, 2444, 2445, 2446, 444, 0, 0,
	125, 0, 0, 449, 423, 0, 451, 0, 0, 2081,
	0, 0, 0, 0, 421, 125, 0, 0, 0, 0,
	0, 0, 0, 0, 2095, 2099, 2103, 0, 435, 453,
	0, 0, 0, 0, 0, 0, 433, 434, 436, 455,
	2487, 456, 462, 0, 0, 0, 0, 0, 125, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 485, 0,
	0, 2503, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2135, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 656, 656, 0, 424, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 442, 0, 0, 0, 0,
	0, 0, 656, 0, 645, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 656, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 463, 464, 0, 0,
	0, 0, 425, 426, 427, 428, 430, 445, 446, 447,
	448, 460, 459, 458, 461, 465, 468, 467, 469, 0,
	2598, 2599, 0, 0, 0, 0, 0, 2237, 0, 466,
	0, 0, 0, 0, 2602, 2603, 2604, 2605, 0, 0,
	0, 644, 2609, 0, 0, 0, 2389, 0, 0, 0,
	2391, 0, 0, 0, 0, 0, 0, 0, 0, 471,
	0, 0, 0, 125, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 431, 0, 0,
	0, 0, 0, 656, 0, 656, 0, 656, 0, 2294,
	0, 0, 0, 0, 0, 438, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 454, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 422, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 450, 452, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	470, 0, 0, 2349, 2350, 2351, 0, 0, 0, 0,
	0, 0, 418, 0, 0, 0, 645, 437, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 440, 0, 0,
	0, 0, 0, 0, 2377, 0, 457, 0, 0, 432,
	0, 429, 0, 0, 0, 0, 0, 0, 439, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2402,
	0, 0, 0, 0, 2407, 0, 0, 0, 0, 0,
	0, 2411, 0, 0, 2412, 0, 0, 2414, 2763, 0,
	0, 0, 0, 0, 0, 0, 443, 441, 0, 0,
	0, 444, 0, 0, 0, 0, 0, 449, 423, 0,
	451, 0, 0, 0, 0, 0, 0, 0, 421, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 435, 453, 0, 0, 0, 0, 0, 0,
	433, 434, 436, 455, 0, 456, 462, 0, 0, 0,
	0, 0, 125, 485, 0, 2798, 0, 0, 0, 644,
	0, 656, 0, 2466, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 36, 37, 0, 0, 0, 0, 2466, 0, 0,
	0, 418, 0, 418, 0, 57, 0, 0, 0, 0,
	0, 74, 0, 656, 39, 61, 62, 0, 0, 0,
	0, 0, 58, 0, 0, 0, 0, 2502, 0, 424,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 442,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 48,
	0, 0, 0, 77, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2099, 0, 0, 0, 0, 0, 0, 125, 0, 0,
	463, 464, 0, 466, 0, 0, 425, 426, 427, 428,
	430, 445, 446, 447, 448, 460, 459, 458, 461, 465,
	468, 467, 469, 0, 2017, 0, 0, 0, 0, 0,
	0, 0, 0, 471, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 125, 0, 0, 0,
	0, 431, 0, 0, 0, 0, 656, 0, 0, 0,
	0, 0, 0, 0, 656, 0, 0, 0, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 41, 70, 44, 43, 46,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 644, 0, 0, 0, 0, 47, 73, 72, 0,
	0, 0, 0, 45, 2502, 0, 454, 0, 0, 0,
	0, 0, 2502, 2502, 2502, 0, 0, 63, 0, 2294,
	0, 0, 0, 0, 470, 0, 0, 422, 0, 0,
	0, 0, 0, 1325, 0, 0, 0, 450, 452, 2294,
	0, 437, 0, 0, 0, 0, 3043, 0, 0, 0,
	0, 440, 0, 0, 55, 56, 0, 0, 0, 0,
	457, 0, 0, 432, 0, 429, 0, 0, 0, 0,
	0, 64, 439, 65, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3072, 0, 0, 0, 0, 0, 0, 3075, 66, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2718,
	443, 441, 0, 0, 0, 444, 0, 0, 0, 0,
	0, 449, 423, 1435, 451, 0, 49, 71, 0, 51,
	52, 59, 421, 60, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2743, 435, 453, 0, 0,
	0, 2502, 0, 0, 433, 434, 436, 455, 0, 456,
	462, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2759, 0, 0, 0, 0, 0,
	0, 0, 418, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	583, 584, 585, 586, 587, 0, 0, 0, 0, 0,
	0, 0, 0, 424, 0, 0, 0, 2294, 0, 0,
	0, 0, 0, 442, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 75, 0, 0,
	0, 0, 0, 0, 463, 464, 0, 0, 0, 0,
	425, 426, 427, 428, 430, 445, 446, 447, 448, 460,
	459, 458, 461, 465, 468, 467, 469, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2294, 0, 0, 0, 2883, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 644, 0, 0, 0,
	656, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 656, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2294, 0, 0, 0, 0, 0, 0, 0,
	454, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2502, 0,
	0, 422, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 450, 452, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2981, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2985, 0, 656, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	656, 943, 899, 290, 783, 947, 719, 759, 966, 766,
	770, 857, 684, 821, 236, 754, 685, 664, 724, 669,
	740, 670, 721, 170, 717, 902, 824, 945, 803, 849,
	860, 169, 161, 813, 812, 931, 736, 733, 855, 917,
	944, 802, 2981, 954, 204, 914, 840, 955, 283, 221,
	0, 0, 798, 924, 819, 891, 781, 859, 701, 839,
	949, 755, 851, 950, 0, 0, 0, 0, 659, 0,
	1706, 1707, 0, 0, 0, 0, 0, 693, 0, 846,
	941, 744, 850, 793, 856, 971, 667, 842, 0, 676,
	687, 965, 932, 730, 731, 734, 2014, 0, 0, 0,
	0, 0, 0, 796, 820, 880, 778, 307, 862, 875,
	894, 768, 251, 752, 0, 0, 0, 0, 0, 0,
	0, 0, 726, 0, 837, 0, 0, 0, 691, 678,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 792, 0, 0, 0, 700, 665, 728, 883,
	666, 663, 222, 688, 896, 930, 779, 195, 963, 938,
	777, 776, 868, 692, 907, 761, 202, 1431, 128, 686,
	1432, 756, 233, 879, 888, 747, 131, 903, 722, 742,
	162, 0, 261, 852, 306, 757, 829, 260, 205, 299,
	869, 940, 305, 762, 918, 312, 316, 735, 804, 695,
	280, 171, 168, 729, 893, 675, 753, 250, 165, 198,
	782, 858, 723, 158, 873, 838, 909, 279, 296, 133,
	219, 297, 315, 146, 291, 220, 226, 155, 157, 156,
	142, 274, 295, 151, 160, 905, 887, 911, 716, 694,
	707, 696, 741, 942, 769, 758, 912, 910, 310, 775,
	270, 269, 765, 190, 890, 841, 672, 257, 863, 196,
	135, 916, 318, 145, 200, 292, 662, 180, 232, 164,
	854, 240, 738, 130, 253, 216, 217, 215, 218, 183,
	743, 865, 886, 255, 272, 294, 147, 286, 737, 739,
	746, 882, 263, 904, 928, 948, 210, 174, 177, 184,
	191, 853, 259, 287, 311, 843, 143, 136, 289, 304,
	152, 271, 273, 317, 881, 138, 936, 906, 831, 785,
	791, 677, 0, 137, 877, 727, 749, 715, 847, 714,
	182, 867, 302, 303, 163, 319, 689, 957, 139, 690,
	956, 229, 0, 228, 960, 298, 937, 832, 816, 814,
	682, 935, 830, 815, 201, 176, 186, 248, 207, 249,
	187, 224, 223, 225, 208, 818, 0, 673, 0, 284,
	946, 973, 288, 149, 709, 897, 293, 760, 254, 150,
	181, 175, 247, 227, 144, 189, 282, 199, 206, 872,
	970, 239, 262, 153, 308, 281, 172, 705, 708, 703,
	706, 704, 822, 823, 951, 952, 953, 885, 697, 0,
	925, 926, 0, 809, 939, 683, 0, 901, 933, 934,
	861, 968, 767, 159, 674, 679, 680, 681, 698, 799,
	800, 828, 835, 921, 920, 919, 922, 927, 961, 959,
	962, 699, 720, 748, 805, 806, 808, 844, 845, 895,
	866, 876, 801, 244, 827, 132, 140, 203, 969, 256,
	179, 661, 671, 702, 710, 711, 712, 713, 718, 725,
	0, 732, 745, 750, 751, 764, 771, 772, 773, 774,
	784, 786, 787, 788, 789, 790, 794, 795, 797, 810,
	811, 817, 825, 826, 834, 836, 0, 871, 874, 884,
	889, 892, 898, 900, 908, 913, 915, 958, 967, 972,
	309, 167, 807, 833, 878, 141, 148, 154, 166, 173,
	178, 185, 188, 192, 193, 194, 197, 209, 211, 212,
	213, 214, 230, 231, 234, 235, 237, 238, 241, 242,
	243, 245, 246, 252, 870, 258, 264, 265, 266, 267,
	268, 275, 276, 277, 278, 285, 300, 301, 313, 314,
	929, 780, 129, 0, 0, 668, 0, 0, 0, 0,
	0, 763, 134, 923, 964, 848, 864, 943, 2463, 290,
	783, 947, 719, 759, 966, 766, 770, 857, 684, 821,
	236, 754, 685, 664, 724, 669, 740, 670, 721, 170,
	717, 902, 824, 945, 803, 849, 860, 169, 161, 813,
	812, 931, 736, 733, 855, 917, 944, 802, 0, 954,
	204, 914, 840, 955, 283, 221, 0, 0, 798, 924,
	819, 891, 781, 859, 701, 839, 949, 755, 851, 950,
	77, 0, 1156, 0, 659, 0, 0, 0, 0, 0,
	0, 0, 0, 693, 0, 846, 941, 744, 850, 793,
	856, 971, 667, 842, 0, 676, 687, 965, 932, 730,
	731, 734, 0, 0, 0, 0, 0, 0, 0, 796,
	820, 880, 778, 307, 862, 875, 894, 768, 251, 752,
	0, 0, 0, 0, 0, 0, 0, 0, 726, 0,
	837, 0, 0, 0, 691, 678, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 792, 0,
	0, 0, 700, 665, 728, 883, 666, 663, 222, 688,
	896, 930, 779, 195, 963, 938, 777, 776, 868, 692,
	907, 761, 202, 1431, 128, 686, 1432, 756, 233, 879,
	888, 747, 131, 903, 722, 742, 162, 0, 261, 852,
	306, 757, 829, 260, 205, 299, 869, 940, 305, 762,
	918, 312, 316, 735, 804, 695, 280, 171, 168, 729,
	893, 675, 753, 250, 165, 198, 782, 858, 723, 158,
	873, 838, 909, 279, 296, 133, 219, 297, 315, 146,
	291, 220, 226, 155, 157, 156, 142, 274, 295, 151,
	160, 905, 887, 911, 716, 694, 707, 696, 741, 942,
	769, 758, 912, 910, 310, 775, 270, 269, 765, 190,
	890, 841, 672, 257, 863, 196, 135, 916, 318, 145,
	200, 292, 662, 180, 232, 164, 854, 240, 738, 130,
	253, 216, 217, 215, 218, 183, 743, 865, 886, 255,
	272, 294, 147, 286, 737, 739, 746, 882, 263, 904,
	928, 948, 210, 174, 177, 184, 191, 853, 259, 287,
	311, 843, 143, 136, 289, 304, 152, 271, 273, 317,
	881, 138, 936, 906, 831, 785, 791, 677, 0, 137,
	877, 727, 749, 715, 847, 714, 182, 867, 302, 303,
	163, 319, 689, 957, 139, 690, 956, 229, 0, 228,
	960, 298, 937, 832, 816, 814, 682, 935, 830, 815,
	201, 176, 186, 248, 207, 249, 187, 224, 223, 225,
	208, 818, 0, 673, 0, 284, 946, 973, 288, 149,
	709, 897, 293, 760, 254, 150, 181, 175, 247, 227,
	144, 189, 282, 199, 206, 872, 970, 239, 262, 153,
	308, 281, 172, 705, 708, 703, 706, 704, 822, 823,
	951, 952, 953, 885, 697, 0, 925, 926, 0, 809,
	939, 683, 0, 901, 933, 934, 861, 968, 767, 159,
	674, 679, 680, 681, 698, 799, 800, 828, 835, 921,
	920, 919, 922, 927, 961, 959, 962, 699, 720, 748,
	805, 806, 808, 844, 845, 895, 866, 876, 801, 244,
	827, 132, 140, 203, 2464, 256, 179, 661, 671, 702,
	710, 711, 712, 713, 718, 725, 0, 732, 745, 750,
	751, 764, 771, 772, 773, 774, 784, 786, 787, 788,
	789, 790, 794, 795, 797, 810, 811, 817, 825, 826,
	834, 836, 0, 871, 874, 884, 889, 892, 898, 900,
	908, 913, 915, 958, 967, 972, 309, 167, 807, 833,
	878, 141, 148, 154, 166, 173, 178, 185, 188, 192,
	193, 194, 197, 209, 211, 212, 213, 214, 230, 231,
	234, 235, 237, 238, 241, 242, 243, 245, 246, 252,
	870, 258, 264, 265, 266, 267, 268, 275, 276, 277,
	278, 285, 300, 301, 313, 314, 929, 780, 129, 0,
	0, 668, 0, 0, 0, 0, 0, 763, 134, 923,
	964, 848, 864, 943, 899, 290, 783, 947, 719, 759,
	966, 766, 770, 857, 684, 821, 236, 754, 685, 664,
	724, 669, 740, 670, 721, 170, 717, 902, 824, 945,
	803, 849, 860, 169, 161, 813, 812, 931, 736, 733,
	855, 917, 944, 802, 0, 954, 204, 914, 840, 955,
	283, 221, 0, 0, 798, 924, 819, 891, 781, 859,
	701, 839, 949, 755, 851, 950, 0, 0, 0, 0,
	659, 0, 1706, 1707, 0, 0, 0, 0, 0, 693,
	0, 846, 941, 744, 850, 793, 856, 971, 667, 842,
	0, 676, 687, 965, 932, 730, 731, 734, 0, 0,
	0, 0, 0, 0, 0, 796, 820, 880, 778, 307,
	862, 875, 894, 768, 251, 752, 0, 0, 0, 0,
	0, 0, 0, 0, 726, 0, 837, 0, 0, 0,
	691, 678, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 792, 0, 0, 0, 700, 665,
	728, 883, 666, 663, 222, 688, 896, 930, 779, 195,
	963, 938, 777, 776, 868, 692, 907, 761, 202, 1431,
	128, 686, 1432, 756, 233, 879, 888, 747, 131, 903,
	722, 742, 162, 0, 261, 852, 306, 757, 829, 260,
	205, 299, 869, 940, 305, 762, 918, 312, 316, 735,
	804, 695, 280, 171, 168, 729, 893, 675, 753, 250,
	165, 198, 782, 858, 723, 158, 873, 838, 909, 279,
	296, 133, 219, 297, 315, 146, 291, 220, 226, 155,
	157, 156, 142, 274, 295, 151, 160, 905, 887, 911,
	716, 694, 707, 696, 741, 942, 769, 758, 912, 910,
	310, 775, 270, 269, 765, 190, 890, 841, 672, 257,
	863, 196, 135, 916, 318, 145, 200, 292, 662, 180,
	232, 164, 854, 240, 738, 130, 253, 216, 217, 215,
	218, 183, 743, 865, 886, 255, 272, 294, 147, 286,
	737, 739, 746, 882, 263, 904, 928, 948, 210, 174,
	177, 184, 191, 853, 259, 287, 311, 843, 143, 136,
	289, 304, 152, 271, 273, 317, 881, 138, 936, 906,
	831, 785, 791, 677, 0, 137, 877, 727, 749, 715,
	847, 714, 182, 867, 302, 303, 163, 319, 689, 957,
	139, 690, 956, 229, 0, 228, 960, 298, 937, 832,
	816, 814, 682, 935, 830, 815, 201, 176, 186, 248,
	207, 249, 187, 224, 223, 225, 208, 818, 0, 673,
	0, 284, 946, 973, 288, 149, 709, 897, 293, 760,
	254, 150, 181, 175, 247, 227, 144, 189, 282, 199,
	206, 872, 970, 239, 262, 153, 308, 281, 172, 705,
	708, 703, 706, 704, 822, 823, 951, 952, 953, 885,
	697, 0, 925, 926, 0, 809, 939, 683, 0, 901,
	933, 934, 861, 968, 767, 159, 674, 679, 680, 681,
	698, 799, 800, 828, 835, 921, 920, 919, 922, 927,
	961, 959, 962, 699, 720, 748, 805, 806, 808, 844,
	845, 895, 866, 876, 801, 244, 827, 132, 140, 203,
	969, 256, 179, 661, 671, 702, 710, 711, 712, 713,
	718, 725, 0, 732, 745, 750, 751, 764, 771, 772,
	773, 774, 784, 786, 787, 788, 789, 790, 794, 795,
	797, 810, 811, 817, 825, 826, 834, 836, 0, 871,
	874, 884, 889, 892, 898, 900, 908, 913, 915, 958,
	967, 972, 309, 167, 807, 833, 878, 141, 148, 154,
	166, 173, 178, 185, 188, 192, 193, 194, 197, 209,
	211, 212, 213, 214, 230, 231, 234, 235, 237, 238,
	241, 242, 243, 245, 246, 252, 870, 258, 264, 265,
	266, 267, 268, 275, 276, 277, 278, 285, 300, 301,
	313, 314, 929, 780, 129, 0, 0, 668, 0, 0,
	0, 0, 0, 763, 134, 923, 964, 848, 864, 943,
	899, 290, 783, 947, 719, 759, 966, 766, 770, 857,
	684, 821, 236, 754, 685, 664, 724, 669, 740, 670,
	721, 170, 717, 902, 824, 945, 803, 849, 860, 169,
	161, 813, 812, 931, 736, 733, 855, 917, 944, 802,
	0, 954, 204, 914, 840, 955, 283, 221, 0, 0,
	798, 924, 819, 891, 781, 859, 701, 839, 949, 755,
	851, 950, 0, 0, 0, 0, 659, 0, 0, 0,
	0, 0, 0, 0, 0, 693, 0, 846, 941, 744,
	850, 793, 856, 971, 667, 842, 0, 676, 687, 965,
	932, 730, 731, 734, 0, 0, 0, 0, 0, 0,
	0, 796, 820, 880, 778, 307, 862, 875, 894, 768,
	251, 752, 0, 0, 0, 0, 0, 0, 2597, 0,
	726, 0, 837, 0, 0, 0, 691, 678, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	792, 0, 0, 0, 700, 665, 728, 883, 666, 663,
	222, 688, 896, 930, 779, 195, 963, 938, 777, 776,
	868, 692, 907, 761, 202, 1431, 128, 686, 1432, 756,
	233, 879, 888, 747, 131, 903, 722, 742, 162, 0,
	261, 852, 306, 757, 829, 260, 205, 299, 869, 940,
	305, 762, 918, 312, 316, 735, 804, 695, 280, 171,
	168, 729, 893, 675, 753, 250, 165, 198, 782, 858,
	723, 158, 873, 838, 909, 279, 296, 133, 219, 297,
	315, 146, 291, 220, 226, 155, 157, 156, 142, 274,
	295, 151, 160, 905, 887, 911, 716, 694, 707, 696,
	741, 942, 769, 758, 912, 910, 310, 775, 270, 269,
	765, 190, 890, 841, 672, 257, 863, 196, 135, 916,
	318, 145, 200, 292, 662, 180, 232, 164, 854, 240,
	738, 130, 253, 216, 217, 215, 218, 183, 743, 865,
	886, 255, 272, 294, 147, 286, 737, 739, 746, 882,
	263, 904, 928, 948, 210, 174, 177, 184, 191, 853,
	259, 287, 311, 843, 143, 136, 289, 304, 152, 271,
	273, 317, 881, 138, 936, 906, 831, 785, 791, 677,
	0, 137, 877, 727, 749, 715, 847, 714, 182, 867,
	302, 303, 163, 319, 689, 957, 139, 690, 956, 229,
	0, 228, 960, 298, 937, 832, 816, 814, 682, 935,
	830, 815, 201, 176, 186, 248, 207, 249, 187, 224,
	223, 225, 208, 818, 0, 673, 0, 284, 946, 973,
	288, 149, 709, 897, 293, 760, 254, 150, 181, 175,
	247, 227, 144, 189, 282, 199, 206, 872, 970, 239,
	262, 153, 308, 281, 172, 705, 708, 703, 706, 704,
	822, 823, 951, 952, 953, 885, 697, 0, 925, 926,
	0, 809, 939, 683, 0, 901, 933, 934, 861, 968,
	767, 159, 674, 679, 680, 681, 698, 799, 800, 828,
	835, 921, 920, 919, 922, 927, 961, 959, 962, 699,
	720, 748, 805, 806, 808, 844, 845, 895, 866, 876,
	801, 244, 827, 132, 140, 203, 969, 256, 179, 661,
	671, 702, 710, 711, 712, 713, 718, 725, 0, 732,
	745, 750, 751, 764, 771, 772, 773, 774, 784, 786,
	787, 788, 789, 790, 794, 795, 797, 810, 811, 817,
	825, 826, 834, 836, 0, 871, 874, 884, 889, 892,
	898, 900, 908, 913, 915, 958, 967, 972, 309, 167,
	807, 833, 878, 141, 148, 154, 166, 173, 178, 185,
	188, 192, 193, 194, 197, 209, 211, 212, 213, 214,
	230, 231, 234, 235, 237, 238, 241, 242, 243, 245,
	246, 252, 870, 258, 264, 265, 266, 267, 268, 275,
	276, 277, 278, 285, 300, 301, 313, 314, 929, 780,
	129, 0, 0, 668, 0, 0, 0, 0, 0, 763,
	134, 923, 964, 848, 864, 943, 899, 290, 783, 947,
	719, 759, 966, 766, 770, 857, 684, 821, 236, 754,
	685, 664, 724, 669, 740, 670, 721, 170, 717, 902,
	824, 945, 803, 849, 860, 169, 161, 813, 812, 931,
	736, 733, 855, 917, 944, 802, 0, 954, 204, 914,
	840, 955, 283, 221, 0, 0, 798, 924, 819, 891,
	781, 859, 701, 839, 949, 755, 851, 950, 0, 0,
	0, 0, 490, 0, 0, 0, 0, 0, 0, 0,
	0, 693, 0, 846, 941, 744, 850, 793, 856, 971,
	667, 842, 0, 676, 687, 965, 932, 730, 731, 734,
	0, 0, 0, 0, 0, 0, 0, 796, 820, 880,
	778, 307, 862, 875, 894, 768, 251, 752, 0, 0,
	0, 0, 0, 0, 2191, 0, 726, 0, 837, 0,
	0, 0, 691, 678, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 792, 0, 0, 0,
	700, 665, 728, 883, 666, 663, 222, 688, 896, 930,
	779, 195, 963, 938, 777, 776, 868, 692, 907, 761,
	202, 1431, 128, 686, 1432, 756, 233, 879, 888, 747,
	131, 903, 722, 742, 162, 0, 261, 852, 306, 757,
	829, 260, 205, 299, 869, 940, 305, 762, 918, 312,
	316, 735, 804, 695, 280, 171, 168, 729, 893, 675,
	753, 250, 165, 198, 782, 858, 723, 158, 873, 838,
	909, 279, 296, 133, 219, 297, 315, 146, 291, 220,
	226, 155, 157, 156, 142, 274, 295, 151, 160, 905,
	887, 911, 716, 694, 707, 696, 741, 942, 769, 758,
	912, 910, 310, 775, 270, 269, 765, 190, 890, 841,
	672, 257, 863, 196, 135, 916, 318, 145, 200, 292,
	662, 180, 232, 164, 854, 240, 738, 130, 253, 216,
	217, 215, 218, 183, 743, 865, 886, 255, 272, 294,
	147, 286, 737, 739, 746, 882, 263, 904, 928, 948,
	210, 174, 177, 184, 191, 853, 259, 287, 311, 843,
	143, 136, 289, 304, 152, 271, 273, 317, 881, 138,
	936, 906, 831, 785, 791, 677, 0, 137, 877, 727,
	749, 715, 847, 714, 182, 867, 302, 303, 163, 319,
	689, 957, 139, 690, 956, 229, 0, 228, 960, 298,
	937, 832, 816, 814, 682, 935, 830, 815, 201, 176,
	186, 248, 207, 249, 187, 224, 223, 225, 208, 818,
	0, 673, 0, 284, 946, 973, 288, 149, 709, 897,
	293, 760, 254, 150, 181, 175, 247, 227, 144, 189,
	282, 199, 206, 872, 970, 239, 262, 153, 308, 281,
	172, 705, 708, 703, 706, 704, 822, 823, 951, 952,
	953, 885, 697, 0, 925, 926, 0, 809, 939, 683,
	0, 901, 933, 934, 861, 968, 767, 159, 674, 679,
	680, 681, 698, 799, 800, 828, 835, 921, 920, 919,
	922, 927, 961, 959, 962, 699, 720, 748, 805, 806,
	808, 844, 845, 895, 866, 876, 801, 244, 827, 132,
	140, 203, 969, 256, 179, 661, 671, 702, 710, 711,
	712, 713, 718, 725, 0, 732, 745, 750, 751, 764,
	771, 772, 773, 774, 784, 786, 787, 788, 789, 790,
	794, 795, 797, 810, 811, 817, 825, 826, 834, 836,
	0, 871, 874, 884, 889, 892, 898, 900, 908, 913,
	915, 958, 967, 972, 309, 167, 807, 833, 878, 141,
	148, 154, 166, 173, 178, 185, 188, 192, 193, 194,
	197, 209, 211, 212, 213, 214, 230, 231, 234, 235,
	237, 238, 241, 242, 243, 245, 246, 252, 870, 258,
	264, 265, 266, 267, 268, 275, 276, 277, 278, 285,
	300, 301, 313, 314, 929, 780, 129, 0, 0, 668,
	0, 0, 0, 0, 0, 763, 134, 923, 964, 848,
	864, 943, 899, 290, 783, 947, 719, 759, 966, 766,
	770, 857, 684, 821, 236, 754, 685, 664, 724, 669,
	740, 670, 721, 170, 717, 902, 824, 945, 803, 849,
	860, 169, 161, 813, 812, 931, 736, 733, 855, 917,
	944, 802, 0, 954, 204, 914, 840, 955, 283, 221,
	0, 0, 798, 924, 819, 891, 781, 859, 701, 839,
	949, 755, 851, 950, 0, 0, 0, 0, 659, 0,
	0, 0, 0, 0, 0, 0, 0, 693, 0, 846,
	941, 744, 850, 793, 856, 971, 667, 842, 0, 676,
	687, 965, 932, 730, 731, 734, 0, 0, 0, 0,
	0, 0, 0, 796, 820, 880, 778, 307, 862, 875,
	894, 768, 251, 752, 0, 0, 0, 0, 0, 0,
	2181, 0, 726, 0, 837, 0, 0, 0, 691, 678,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 792, 0, 0, 0, 700, 665, 728, 883,
	666, 663, 222, 688, 896, 930, 779, 195, 963, 938,
	777, 776, 868, 692, 907, 761, 202, 1431, 128, 686,
	1432, 756, 233, 879, 888, 747, 131, 903, 722, 742,
	162, 0, 261, 852, 306, 757, 829, 260, 205, 299,
	869, 940, 305, 762, 918, 312, 316, 735, 804, 695,
	280, 171, 168, 729, 893, 675, 753, 250, 165, 198,
	782, 858, 723, 158, 873, 838, 909, 279, 296, 133,
	219, 297, 315, 146, 291, 220, 226, 155, 157, 156,
	142, 274, 295, 151, 160, 905, 887, 911, 716, 694,
	707, 696, 741, 942, 769, 758, 912, 910, 310, 775,
	270, 269, 765, 190, 890, 841, 672, 257, 863, 196,
	135, 916, 318, 145, 200, 292, 662, 180, 232, 164,
	854, 240, 738, 130, 253, 216, 217, 215, 218, 183,
	743, 865, 886, 255, 272, 294, 147, 286, 737, 739,
	746, 882, 263, 904, 928, 948, 210, 174, 177, 184,
	191, 853, 259, 287, 311, 843, 143, 136, 289, 304,
	152, 271, 273, 317, 881, 138, 936, 906, 831, 785,
	791, 677, 0, 137, 877, 727, 749, 715, 847, 714,
	182, 867, 302, 303, 163, 319, 689, 957, 139, 690,
	956, 229, 0, 228, 960, 298, 937, 832, 816, 814,
	682, 935, 830, 815, 201, 176, 186, 248, 207, 249,
	187, 224, 223, 225, 208, 818, 0, 673, 0, 284,
	946, 973, 288, 149, 709, 897, 293, 760, 254, 150,
	181, 175, 247, 227, 144, 189, 282, 199, 206, 872,
	970, 239, 262, 153, 308, 281, 172, 705, 708, 703,
	706, 704, 822, 823, 951, 952, 953, 885, 697, 0,
	925, 926, 0, 809, 939, 683, 0, 901, 933, 934,
	861, 968, 767, 159, 674, 679, 680, 681, 698, 799,
	800, 828, 835, 921, 920, 919, 922, 927, 961, 959,
	962, 699, 720, 748, 805, 806, 808, 844, 845, 895,
	866, 876, 801, 244, 827, 132, 140, 203, 969, 256,
	179, 661, 671, 702, 710, 711, 712, 713, 718, 725,
	0, 732, 745, 750, 751, 764, 771, 772, 773, 774,
	784, 786, 787, 788, 789, 790, 794, 795, 797, 810,
	811, 817, 825, 826, 834, 836, 0, 871, 874, 884,
	889, 892, 898, 900, 908, 913, 915, 958, 967, 972,
	309, 167, 807, 833, 878, 141, 148, 154, 166, 173,
	178, 185, 188, 192, 193, 194, 197, 209, 211, 212,
	213, 214, 230, 231, 234, 235, 237, 238, 241, 242,
	243, 245, 246, 252, 870, 258, 264, 265, 266, 267,
	268, 275, 276, 277, 278, 285, 300, 301, 313, 314,
	929, 780, 129, 0, 0, 668, 0, 0, 0, 0,
	0, 763, 134, 923, 964, 848, 864, 943, 899, 290,
	783, 947, 719, 759, 966, 766, 770, 857, 684, 821,
	236, 754, 685, 664, 724, 669, 740, 670, 721, 170,
	717, 902, 824, 945, 803, 849, 860, 169, 161, 813,
	812, 931, 736, 733, 855, 917, 944, 802, 0, 954,
	204, 914, 840, 955, 283, 221, 0, 0, 798, 924,
	819, 891, 781, 859, 701, 839, 949, 755, 851, 950,
	0, 0, 0, 0, 126, 0, 0, 0, 0, 0,
	0, 0, 0, 693, 0, 846, 941, 744, 850, 793,
	856, 971, 667, 842, 0, 676, 687, 965, 932, 730,
	731, 734, 0, 0, 0, 0, 0, 0, 0, 796,
	820, 880, 778, 307, 862, 875, 894, 768, 251, 752,
	0, 0, 0, 0, 0, 0, 2002, 0, 726, 0,
	837, 0, 0, 0, 691, 678, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 792, 0,
	0, 0, 700, 665, 728, 883, 666, 663, 222, 688,
	896, 930, 779, 195, 963, 938, 777, 776, 868, 692,
	907, 761, 202, 1431, 128, 686, 1432, 756, 233, 879,
	888, 747, 131, 903, 722, 742, 162, 0, 261, 852,
	306, 757, 829, 260, 205, 299, 869, 940, 305, 762,
	918, 312, 316, 735, 804, 695, 280, 171, 168, 729,
	893, 675, 753, 250, 165, 198, 782, 858, 723, 158,
	873, 838, 909, 279, 296, 133, 219, 297, 315, 146,
	291, 220, 226, 155, 157, 156, 142, 274, 295, 151,
	160, 905, 887, 911, 716, 694, 707, 696, 741, 942,
	769, 758, 912, 910, 310, 775, 270, 269, 765, 190,
	890, 841, 672, 257, 863, 196, 135, 916, 318, 145,
	200, 292, 662, 180, 232, 164, 854, 240, 738, 130,
	253, 216, 217, 215, 218, 183, 743, 865, 886, 255,
	272, 294, 147, 286, 737, 739, 746, 882, 263, 904,
	928, 948, 210, 174, 177, 184, 191, 853, 259, 287,
	311, 843, 143, 136, 289, 304, 152, 271, 273, 317,
	881, 138, 936, 906, 831, 785, 791, 677, 0, 137,
	877, 727, 749, 715, 847, 714, 182, 867, 302, 303,
	163, 319, 689, 957, 139, 690, 956, 229, 0, 228,
	960, 298, 937, 832, 816, 814, 682, 935, 830, 815,
	201, 176, 186, 248, 207, 249, 187, 224, 223, 225,
	208, 818, 0, 673, 0, 284, 946, 973, 288, 149,
	709, 897, 293, 760, 254, 150, 181, 175, 247, 227,
	144, 189, 282, 199, 206, 872, 970, 239, 262, 153,
	308, 281, 172, 705, 708, 703, 706, 704, 822, 823,
	951, 952, 953, 885, 697, 0, 925, 926, 0, 809,
	939, 683, 0, 901, 933, 934, 861, 968, 767, 159,
	674, 679, 680, 681, 698, 799, 800, 828, 835, 921,
	920, 919, 922, 927, 961, 959, 962, 699, 720, 748,
	805, 806, 808, 844, 845, 895, 866, 876, 801, 244,
	827, 132, 140, 203, 969, 256, 179, 661, 671, 702,
	710, 711, 712, 713, 718, 725, 0, 732, 745, 750,
	751, 764, 771, 772, 773, 774, 784, 786, 787, 788,
	789, 790, 794, 795, 797, 810, 811, 817, 825, 826,
	834, 836, 0, 871, 874, 884, 889, 892, 898, 900,
	908, 913, 915, 958, 967, 972, 309, 167, 807, 833,
	878, 141, 148, 154, 166, 173, 178, 185, 188, 192,
	193, 194, 197, 209, 211, 212, 213, 214, 230, 231,
	234, 235, 237, 238, 241, 242, 243, 245, 246, 252,
	870, 258, 264, 265, 266, 267, 268, 275, 276, 277,
	278, 285, 300, 301, 313, 314, 929, 780, 129, 0,
	0, 668, 0, 0, 0, 0, 0, 763, 134, 923,
	964, 848, 864, 943, 899, 290, 783, 947, 719, 759,
	966, 766, 770, 857, 684, 821, 236, 754, 685, 664,
	724, 669, 740, 670, 721, 170, 717, 902, 824, 945,
	803, 849, 860, 169, 161, 813, 812, 931, 736, 733,
	855, 917, 944, 802, 0, 954, 204, 914, 840, 955,
	283, 221, 0, 0, 798, 924, 819, 891, 781, 859,
	701, 839, 949, 755, 851, 950, 0, 0, 0, 0,
	490, 0, 0, 0, 0, 0, 0, 0, 0, 693,
	0, 846, 941, 744, 850, 793, 856, 971, 667, 842,
	0, 676, 687, 965, 932, 730, 731, 734, 0, 0,
	0, 0, 0, 0, 0, 796, 820, 880, 778, 307,
	862, 875, 894, 768, 251, 752, 0, 0, 0, 0,
	0, 0, 1557, 0, 726, 0, 837, 0, 0, 0,
	691, 678, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 792, 0, 0, 0, 700, 665,
	728, 883, 666, 663, 222, 688, 896, 930, 779, 195,
	963, 938, 777, 776, 868, 692, 907, 761, 202, 1431,
	128, 686, 1432, 756, 233, 879, 888, 747, 131, 903,
	722, 742, 162, 0, 261, 852, 306, 757, 829, 260,
	205, 299, 869, 940, 305, 762, 918, 312, 316, 735,
	804, 695, 280, 171, 168, 729, 893, 675, 753, 250,
	165, 198, 782, 858, 723, 158, 873, 838, 909, 279,
	296, 133, 219, 297, 315, 146, 291, 220, 226, 155,
	157, 156, 142, 274, 295, 151, 160, 905, 887, 911,
	716, 694, 707, 696, 741, 942, 769, 758, 912, 910,
	310, 775, 270, 269, 765, 190, 890, 841, 672, 257,
	863, 196, 135, 916, 318, 145, 200, 292, 662, 180,
	232, 164, 854, 240, 738, 130, 253, 216, 217, 215,
	218, 183, 743, 865, 886, 255, 272, 294, 147, 286,
	737, 739, 746, 882, 263, 904, 928, 948, 210, 174,
	177, 184, 191, 853, 259, 287, 311, 843, 143, 136,
	289, 304, 152, 271, 273, 317, 881, 138, 936, 906,
	831, 785, 791, 677, 0, 137, 877, 727, 749, 715,
	847, 714, 182, 867, 302, 303, 163, 319, 689, 957,
	139, 690, 956, 229, 0, 228, 960, 298, 937, 832,
	816, 814, 682, 935, 830, 815, 201, 176, 186, 248,
	207, 249, 187, 224, 223, 225, 208, 818, 0, 673,
	0, 284, 946, 973, 288, 149, 709, 897, 293, 760,
	254, 150, 181, 175, 247, 227, 144, 189, 282, 199,
	206, 872, 970, 239, 262, 153, 308, 281, 172, 705,
	708, 703, 706, 704, 822, 823, 951, 952, 953, 885,
	697, 0, 925, 926, 0, 809, 939, 683, 0, 901,
	933, 934, 861, 968, 767, 159, 674, 679, 680, 681,
	698, 799, 800, 828, 835, 921, 920, 919, 922, 927,
	961, 959, 962, 699, 720, 748, 805, 806, 808, 844,
	845, 895, 866, 876, 801, 244, 827, 132, 140, 203,
	969, 256, 179, 661, 671, 702, 710, 711, 712, 713,
	718, 725, 0, 732, 745, 750, 751, 764, 771, 772,
	773, 774, 784, 786, 787, 788, 789, 790, 794, 795,
	797, 810, 811, 817, 825, 826, 834, 836, 0, 871,
	874, 884, 889, 892, 898, 900, 908, 913, 915, 958,
	967, 972, 309, 167, 807, 833, 878, 141, 148, 154,
	166, 173, 178, 185, 188, 192, 193, 194, 197, 209,
	211, 212, 213, 214, 230, 231, 234, 235, 237, 238,
	241, 242, 243, 245, 246, 252, 870, 258, 264, 265,
	266, 267, 268, 275, 276, 277, 278, 285, 300, 301,
	313, 314, 929, 780, 129, 0, 0, 668, 0, 0,
	0, 0, 0, 763, 134, 923, 964, 848, 864, 943,
	899, 290, 783, 947, 719, 759, 966, 766, 770, 857,
	684, 821, 236, 754, 685, 664, 724, 669, 740, 670,
	721, 170, 717, 902, 824, 945, 803, 849, 860, 169,
	161, 813, 812, 931, 736, 733, 855, 917, 944, 802,
	0, 954, 204, 914, 840, 955, 283, 221, 0, 0,
	798, 924, 819, 891, 781, 859, 701, 839, 949, 755,
	851, 950, 0, 0, 0, 0, 659, 0, 0, 0,
	0, 0, 0, 0, 0, 693, 0, 846, 941, 744,
	850, 793, 856, 971, 667, 842, 0, 676, 687, 965,
	932, 730, 731, 734, 0, 0, 0, 0, 0, 0,
	0, 796, 820, 880, 778, 307, 862, 875, 894, 768,
	251, 752, 0, 0, 0, 0, 0, 0, 0, 0,
	726, 0, 837, 0, 0, 0, 691, 678, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	792, 0, 0, 0, 700, 665, 728, 883, 666, 663,
	222, 688, 896, 930, 779, 195, 963, 938, 777, 776,
	868, 692, 907, 761, 202, 1431, 128, 686, 1432, 756,
	233, 879, 888, 747, 131, 903, 722, 742, 162, 0,
	261, 852, 306, 757, 829, 260, 205, 299, 869, 940,
	305, 762, 918, 312, 316, 735, 804, 695, 280, 171,
	168, 729, 893, 675, 753, 250, 165, 198, 782, 858,
	723, 158, 873, 838, 909, 279, 296, 133, 219, 297,
	315, 146, 291, 220, 226, 155, 157, 156, 142, 274,
	295, 151, 160, 905, 887, 911, 716, 694, 707, 696,
	741, 942, 769, 758, 912, 910, 310, 775, 270, 269,
	765, 190, 890, 841, 672, 257, 863, 196, 135, 916,
	318, 145, 200, 292, 662, 180, 232, 164, 854, 240,
	738, 130, 253, 216, 217, 215, 218, 183, 743, 865,
	886, 255, 272, 294, 147, 286, 737, 739, 746, 882,
	263, 904, 928, 948, 210, 174, 177, 184, 191, 853,
	259, 287, 311, 843, 143, 136, 289, 304, 152, 271,
	273, 317, 881, 138, 936, 906, 831, 785, 791, 677,
	0, 137, 877, 727, 749, 715, 847, 714, 182, 867,
	302, 303, 163, 319, 689, 957, 139, 690, 956, 229,
	0, 228, 960, 298, 937, 832, 816, 814, 682, 935,
	830, 815, 201, 176, 186, 248, 207, 249, 187, 224,
	223, 225, 208, 818, 0, 673, 0, 284, 946, 973,
	288, 149, 709, 897, 293, 760, 254, 150, 181, 175,
	247, 227, 144, 189, 282, 199, 206, 872, 970, 239,
	262, 153, 308, 281, 172, 705, 708, 703, 706, 704,
	822, 823, 951, 952, 953, 885, 697, 0, 925, 926,
	0, 809, 939, 683, 0, 901, 933, 934, 861, 968,
	767, 159, 674, 679, 680, 681, 698, 799, 800, 828,
	835, 921, 920, 919, 922, 927, 961, 959, 962, 699,
	720, 748, 805, 806, 808, 844, 845, 895, 866, 876,
	801, 244, 827, 132, 140, 203, 969, 256, 179, 661,
	671, 702, 710, 711, 712, 713, 718, 725, 0, 732,
	745, 750, 751, 764, 771, 772, 773, 774, 784, 786,
	787, 788, 789, 790, 794, 795, 797, 810, 811, 817,
	825, 826, 834, 836, 0, 871, 874, 884, 889, 892,
	898, 900, 908, 913, 915, 958, 967, 972, 309, 167,
	807, 833, 878, 141, 148, 154, 166, 173, 178, 185,
	188, 192, 193, 194, 197, 209, 211, 212, 213, 214,
	230, 231, 234, 235, 237, 238, 241, 242, 243, 245,
	246, 252, 870, 258, 264, 265, 266, 267, 268, 275,
	276, 277, 278, 285, 300, 301, 313, 314, 929, 780,
	129, 0, 0, 668, 0, 0, 0, 0, 0, 763,
	134, 923, 964, 848, 864, 943, 899, 290, 783, 947,
	719, 759, 966, 766, 770, 857, 684, 821, 236, 754,
	685, 664, 724, 669, 740, 670, 721, 170, 717, 902,
	824, 945, 803, 849, 860, 169, 161, 813, 812, 931,
	736, 733, 855, 917, 944, 802, 0, 954, 204, 914,
	840, 955, 283, 221, 0, 0, 798, 924, 819, 891,
	781, 859, 701, 839, 949, 755, 851, 950, 0, 0,
	0, 0, 2913, 0, 0, 0, 0, 0, 0, 0,
	0, 693, 0, 846, 941, 744, 850, 793, 856, 971,
	667, 842, 0, 676, 687, 965, 932, 730, 731, 734,
	0, 0, 0, 0, 0, 0, 0, 796, 820, 880,
	778, 307, 862, 875, 894, 768, 251, 752, 0, 0,
	0, 0, 0, 0, 0, 0, 726, 0, 837, 0,
	0, 0, 691, 678, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 792, 0, 0, 0,
	700, 665, 728, 883, 666, 663, 222, 688, 896, 930,
	779, 195, 963, 938, 777, 776, 868, 692, 907, 761,
	202, 1431, 128, 686, 1432, 756, 233, 879, 888, 747,
	131, 903, 722, 742, 162, 0, 261, 852, 306, 757,
	829, 260, 205, 299, 869, 940, 305, 762, 918, 312,
	316, 735, 804, 695, 280, 171, 168, 729, 893, 675,
	753, 250, 165, 198, 782, 858, 723, 158, 873, 838,
	909, 279, 296, 133, 219, 297, 315, 146, 291, 220,
	226, 155, 157, 156, 142, 274, 295, 151, 160, 905,
	887, 911, 716, 694, 707, 2916, 2917, 2918, 769, 758,
	912, 910, 310, 775, 270, 269, 765, 190, 890, 841,
	672, 257, 863, 196, 135, 916, 318, 145, 200, 292,
	662, 180, 232, 164, 854, 240, 738, 130, 253, 216,
	217, 215, 218, 183, 743, 865, 886, 255, 272, 294,
	147, 286, 737, 739, 746, 882, 263, 904, 928, 948,
	210, 174, 177, 184, 191, 853, 259, 287, 311, 843,
	143, 136, 289, 304, 152, 271, 273, 317, 881, 138,
	936, 906, 831, 785, 791, 677, 0, 137, 877, 727,
	749, 715, 847, 714, 182, 867, 302, 303, 163, 319,
	689, 957, 139, 690, 956, 229, 0, 228, 960, 298,
	937, 832, 816, 814, 682, 935, 830, 815, 201, 176,
	186, 248, 207, 249, 187, 224, 223, 225, 208, 818,
	0, 673, 0, 284, 946, 973, 288, 149, 709, 897,
	293, 760, 254, 150, 181, 175, 247, 227, 144, 189,
	282, 199, 206, 872, 970, 239, 262, 153, 308, 281,
	172, 705, 708, 703, 706, 704, 822, 823, 951, 952,
	953, 885, 697, 0, 925, 926, 0, 809, 939, 683,
	0, 901, 933, 934, 861, 968, 767, 159, 674, 679,
	680, 681, 698, 799, 800, 828, 835, 921, 920, 919,
	922, 927, 961, 959, 962, 699, 720, 748, 805, 806,
	808, 844, 845, 895, 866, 876, 801, 244, 827, 132,
	140, 203, 969, 256, 179, 661, 671, 702, 710, 711,
	712, 713, 718, 725, 0, 732, 745, 750, 751, 764,
	771, 772, 773, 774, 784, 786, 787, 788, 789, 790,
	794, 795, 797, 810, 811, 817, 825, 826, 834, 836,
	0, 871, 874, 884, 889, 892, 898, 900, 908, 913,
	915, 958, 967, 972, 309, 167, 807, 833, 878, 141,
	148, 154, 166, 173, 178, 185, 188, 192, 193, 194,
	197, 209, 211, 212, 213, 214, 230, 231, 234, 235,
	237, 238, 241, 242, 243, 245, 246, 252, 870, 258,
	264, 265, 266, 267, 268, 275, 276, 277, 278, 285,
	300, 301, 313, 314, 929, 780, 129, 0, 0, 668,
	0, 0, 0, 0, 0, 763, 134, 923, 964, 848,
	864, 943, 899, 290, 783, 947, 719, 759, 966, 766,
	770, 857, 684, 821, 236, 754, 685, 664, 724, 669,
	740, 670, 721, 170, 717, 902, 824, 945, 803, 849,
	860, 169, 161, 813, 812, 931, 736, 733, 855, 917,
	944, 802, 0, 954, 204, 914, 840, 955, 283, 221,
	0, 0, 798, 924, 819, 891, 781, 859, 701, 839,
	949, 755, 851, 950, 0, 0, 0, 0, 490, 0,
	0, 0, 0, 0, 0, 0, 0, 693, 0, 846,
	941, 744, 850, 793, 856, 971, 667, 842, 0, 676,
	687, 965, 932, 730, 731, 734, 0, 0, 0, 0,
	0, 0, 0, 796, 820, 880, 778, 307, 862, 875,
	894, 768, 251, 752, 0, 0, 0, 0, 0, 0,
	0, 0, 726, 0, 837, 0, 0, 0, 691, 678,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 792, 0, 0, 0, 700, 665, 728, 883,
	666, 663, 222, 688, 896, 930, 779, 195, 963, 938,
	777, 776, 868, 692, 907, 761, 202, 1431, 128, 686,
	1432, 756, 233, 879, 888, 747, 131, 903, 722, 742,
	162, 0, 261, 852, 306, 757, 829, 260, 205, 299,
	869, 940, 305, 762, 918, 312, 316, 735, 804, 695,
	280, 171, 168, 729, 893, 675, 753, 250, 165, 198,
	782, 858, 723, 158, 873, 838, 909, 279, 296, 133,
	219, 297, 315, 146, 291, 220, 226, 155, 157, 156,
	142, 274, 295, 151, 160, 905, 887, 911, 716, 694,
	707, 696, 741, 942, 769, 758, 912, 910, 310, 775,
	270, 269, 765, 190, 890, 841, 672, 257, 863, 196,
	135, 916, 318, 145, 200, 292, 662, 180, 232, 164,
	854, 240, 738, 130, 253, 216, 217, 215, 218, 183,
	743, 865, 886, 255, 272, 294, 147, 286, 737, 739,
	746, 882, 263, 904, 928, 948, 210, 174, 177, 184,
	191, 853, 259, 287, 311, 843, 143, 136, 289, 304,
	152, 271, 273, 317, 881, 138, 936, 906, 831, 785,
	791, 677, 0, 137, 877, 727, 749, 715, 847, 714,
	182, 867, 302, 303, 163, 319, 689, 957, 139, 690,
	956, 229, 0, 228, 960, 298, 937, 832, 816, 814,
	682, 935, 830, 815, 201, 176, 186, 248, 207, 249,
	187, 224, 223, 225, 208, 818, 0, 673, 0, 284,
	946, 973, 288, 149, 709, 897, 293, 760, 254, 150,
	181, 175, 247, 227, 144, 189, 282, 199, 206, 872,
	970, 239, 262, 153, 308, 281, 172, 705, 708, 703,
	706, 704, 822, 823, 951, 952, 953, 885, 697, 0,
	925, 926, 0, 809, 939, 683, 0, 901, 933, 934,
	861, 968, 767, 159, 674, 679, 680, 681, 698, 799,
	800, 828, 835, 921, 920, 919, 922, 927, 961, 959,
	962, 699, 720, 748, 805, 806, 808, 844, 845, 895,
	866, 876, 801, 244, 827, 132, 140, 203, 969, 256,
	179, 661, 671, 702, 710, 711, 712, 713, 718, 725,
	0, 732, 745, 750, 751, 764, 771, 772, 773, 774,
	784, 786, 787, 788, 789, 790, 794, 795, 797, 810,
	811, 817, 825, 826, 834, 836, 0, 871, 874, 884,
	889, 892, 898, 900, 908, 913, 915, 958, 967, 972,
	309, 167, 807, 833, 878, 141, 148, 154, 166, 173,
	178, 185, 188, 192, 193, 194, 197, 209, 211, 212,
	213, 214, 230, 231, 234, 235, 237, 238, 241, 242,
	243, 245, 246, 252, 870, 258, 264, 265, 266, 267,
	268, 275, 276, 277, 278, 285, 300, 301, 313, 314,
	929, 780, 129, 0, 0, 668, 0, 0, 0, 0,
	0, 763, 134, 923, 964, 848, 864, 943, 899, 290,
	783, 947, 719, 759, 966, 766, 770, 857, 684, 821,
	236, 754, 685, 664, 724, 669, 740, 670, 721, 170,
	717, 902, 824, 945, 803, 849, 860, 169, 161, 813,
	812, 931, 736, 733, 855, 917, 1718, 1722, 0, 954,
	204, 914, 840, 955, 283, 221, 0, 0, 798, 924,
	819, 891, 781, 859, 701, 839, 949, 755, 851, 950,
	0, 0, 0, 0, 659, 0, 0, 0, 0, 0,
	0, 0, 0, 693, 0, 846, 941, 744, 850, 793,
	856, 971, 667, 842, 0, 676, 687, 965, 932, 730,
	731, 734, 0, 0, 0, 0, 0, 0, 0, 796,
	820, 880, 778, 307, 862, 875, 894, 768, 251, 752,
	0, 0, 0, 0, 0, 0, 0, 0, 726, 0,
	837, 0, 0, 0, 691, 678, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 792, 0,
	0, 0, 700, 665, 728, 883, 666, 663, 222, 688,
	896, 930, 1721, 195, 963, 938, 777, 776, 1715, 692,
	1716, 1717, 202, 658, 128, 686, 1713, 1720, 233, 879,
	888, 747, 131, 903, 722, 742, 162, 0, 261, 852,
	306, 757, 829, 260, 205, 299, 869, 940, 305, 762,
	918, 312, 316, 735, 804, 695, 280, 171, 168, 729,
	893, 675, 753, 250, 165, 198, 782, 858, 723, 158,
	873, 838, 909, 279, 296, 133, 219, 297, 315, 146,
	291, 220, 226, 155, 157, 156, 142, 274, 295, 151,
	160, 905, 887, 911, 716, 694, 707, 696, 741, 942,
	769, 758, 912, 910, 310, 775, 270, 269, 765, 190,
	890, 841, 672, 257, 863, 196, 135, 916, 318, 145,
	200, 292, 662, 180, 232, 164, 854, 240, 738, 130,
	253, 216, 217, 215, 218, 183, 743, 865, 886, 255,
	272, 294, 147, 286, 737, 739, 746, 882, 263, 904,
	928, 948, 210, 174, 177, 184, 191, 853, 259, 287,
	311, 843, 143, 136, 289, 304, 152, 271, 273, 317,
	881, 138, 936, 906, 831, 785, 791, 677, 0, 137,
	877, 727, 749, 715, 847, 714, 182, 867, 302, 303,
	163, 319, 689, 957, 139, 690, 956, 229, 0, 228,
	960, 298, 937, 832, 816, 814, 682, 935, 830, 815,
	201, 176, 186, 248, 207, 249, 187, 224, 223, 225,
	208, 818, 0, 673, 0, 284, 946, 973, 288, 149,
	709, 897, 293, 760, 254, 150, 181, 175, 247, 227,
	144, 189, 282, 199, 206, 872, 970, 239, 262, 153,
	308, 281, 172, 705, 708, 703, 706, 704, 822, 823,
	951, 952, 953, 885, 697, 0, 925, 926, 0, 809,
	939, 683, 0, 901, 933, 934, 861, 968, 767, 159,
	674, 679, 680, 681, 698, 799, 800, 828, 835, 921,
	920, 919, 922, 927, 961, 959, 962, 699, 720, 748,
	805, 806, 808, 844, 845, 895, 866, 876, 801, 244,
	827, 132, 140, 203, 969, 256, 179, 661, 671, 702,
	710, 711, 712, 713, 718, 725, 0, 732, 745, 750,
	751, 764, 771, 772, 773, 774, 784, 786, 787, 788,
	789, 790, 794, 795, 797, 810, 811, 817, 825, 826,
	834, 836, 0, 871, 874, 884, 889, 892, 898, 900,
	908, 913, 915, 958, 967, 972, 309, 167, 807, 833,
	878, 141, 148, 154, 166, 173, 178, 185, 188, 192,
	193, 194, 197, 209, 211, 212, 213, 214, 230, 231,
	234, 235, 237, 238, 241, 242, 243, 245, 246, 252,
	870, 258, 264, 265, 266, 267, 268, 275, 276, 277,
	278, 285, 300, 301, 313, 314, 929, 780, 129, 0,
	0, 668, 0, 0, 0, 0, 0, 763, 134, 923,
	964, 848, 864, 943, 899, 290, 783, 947, 719, 759,
	966, 766, 770, 857, 684, 821, 236, 754, 685, 664,
	724, 669, 740, 670, 721, 170, 717, 902, 824, 945,
	803, 849, 860, 169, 161, 813, 812, 931, 736, 733,
	855, 917, 944, 802, 0, 954, 204, 914, 840, 955,
	283, 221, 0, 0, 798, 924, 819, 891, 781, 859,
	701, 839, 949, 755, 851, 950, 0, 0, 0, 0,
	126, 0, 0, 0, 0, 0, 0, 0, 0, 693,
	0, 846, 941, 744, 850, 793, 856, 971, 667, 842,
	0, 676, 687, 965, 932, 730, 731, 734, 0, 0,
	0, 0, 0, 0, 0, 796, 820, 880, 778, 307,
	862, 875, 894, 768, 251, 752, 0, 0, 0, 0,
	0, 0, 0, 0, 726, 0, 837, 0, 0, 0,
	691, 678, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 792, 0, 0, 0, 700, 665,
	728, 883, 666, 663, 222, 688, 896, 930, 779, 195,
	963, 938, 777, 776, 868, 692, 907, 761, 202, 1431,
	128, 686, 1432, 756, 233, 879, 888, 747, 131, 903,
	722, 742, 162, 0, 261, 852, 306, 757, 829, 260,
	205, 299, 869, 940, 305, 762, 918, 312, 316, 735,
	804, 695, 280, 171, 168, 729, 893, 675, 753, 250,
	165, 198, 782, 858, 723, 158, 873, 838, 909, 279,
	296, 133, 219, 297, 315, 146, 291, 220, 226, 155,
	157, 156, 142, 274, 295, 151, 160, 905, 887, 911,
	716, 694, 707, 696, 741, 942, 769, 758, 912, 910,
	310, 775, 270, 269, 765, 190, 890, 841, 672, 257,
	863, 196, 135, 916, 318, 145, 200, 292, 662, 180,
	232, 164, 854, 240, 738, 130, 253, 216, 217, 215,
	218, 183, 743, 865, 886, 255, 272, 294, 147, 286,
	737, 739, 746, 882, 263, 904, 928, 948, 210, 174,
	177, 184, 191, 853, 259, 287, 311, 843, 143, 136,
	289, 304, 152, 271, 273, 317, 881, 138, 936, 906,
	831, 785, 791, 677, 0, 137, 877, 727, 749, 715,
	847, 714, 182, 867, 302, 303, 163, 319, 689, 957,
	139, 690, 956, 229, 0, 228, 960, 298, 937, 832,
	816, 814, 682, 935, 830, 815, 201, 176, 186, 248,
	207, 249, 187, 224, 223, 225, 208, 818, 0, 673,
	0, 284, 946, 973, 288, 149, 709, 897, 293, 760,
	254, 150, 181, 175, 247, 227, 144, 189, 282, 199,
	206, 872, 970, 239, 262, 153, 308, 281, 172, 705,
	708, 703, 706, 704, 822, 823, 951, 952, 953, 885,
	697, 0, 925, 926, 0, 809, 939, 683, 0, 901,
	933, 934, 861, 968, 767, 159, 674, 679, 680, 681,
	698, 799, 800, 828, 835, 921, 920, 919, 922, 927,
	961, 959, 962, 699, 720, 748, 805, 806, 808, 844,
	845, 895, 866, 876, 801, 244, 827, 132, 140, 203,
	969, 256, 179, 661, 671, 702, 710, 711, 712, 713,
	718, 725, 0, 732, 745, 750, 751, 764, 771, 772,
	773, 774, 784, 786, 787, 788, 789, 790, 794, 795,
	797, 810, 811, 817, 825, 826, 834, 836, 0, 871,
	874, 884, 889, 892, 898, 900, 908, 913, 915, 958,
	967, 972, 309, 167, 807, 833, 878, 141, 148, 154,
	166, 173, 178, 185, 188, 192, 193, 194, 197, 209,
	211, 212, 213, 214, 230, 231, 234, 235, 237, 238,
	241, 242, 243, 245, 246, 252, 870, 258, 264, 265,
	266, 267, 268, 275, 276, 277, 278, 285, 300, 301,
	313, 314, 929, 780, 129, 0, 0, 668, 0, 0,
	0, 0, 0, 763, 134, 923, 964, 848, 864, 943,
	899, 290, 783, 947, 719, 759, 966, 766, 770, 857,
	684, 821, 236, 754, 685, 664, 724, 669, 740, 670,
	721, 170, 717, 902, 824, 945, 803, 849, 860, 169,
	161, 813, 812, 931, 736, 733, 855, 917, 944, 802,
	0, 954, 204, 914, 840, 955, 283, 221, 0, 0,
	798, 924, 819, 891, 781, 859, 701, 839, 949, 755,
	851, 950, 0, 0, 0, 0, 659, 0, 0, 0,
	0, 0, 0, 0, 0, 693, 0, 846, 941, 744,
	850, 793, 856, 971, 667, 842, 0, 676, 687, 965,
	932, 730, 731, 734, 0, 0, 0, 0, 0, 0,
	0, 796, 820, 880, 778, 307, 862, 875, 894, 768,
	251, 752, 0, 0, 0, 0, 0, 0, 0, 0,
	726, 0, 837, 0, 0, 0, 691, 678, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	792, 0, 0, 0, 700, 665, 728, 883, 666, 663,
	222, 688, 896, 930, 779, 195, 963, 938, 777, 776,
	868, 692, 907, 761, 202, 658, 128, 686, 654, 756,
	233, 879, 888, 747, 131, 903, 722, 742, 162, 0,
	261, 852, 306, 757, 829, 260, 205, 299, 869, 940,
	305, 762, 918, 312, 316, 735, 804, 695, 280, 171,
	168, 729, 893, 675, 753, 250, 165, 198, 782, 858,
	723, 158, 873, 838, 909, 279, 296, 133, 219, 297,
	315, 146, 291, 220, 226, 155, 157, 156, 142, 274,
	295, 151, 160, 905, 887, 911, 716, 694, 707, 696,
	741, 942, 769, 758, 912, 910, 310, 775, 270, 269,
	765, 190, 890, 841, 672, 257, 863, 196, 135, 916,
	318, 145, 200, 292, 662, 180, 232, 164, 854, 240,
	738, 130, 253, 216, 217, 215, 218, 183, 743, 865,
	886, 255, 272, 294, 147, 286, 737, 739, 746, 882,
	263, 904, 928, 948, 210, 174, 177, 184, 191, 853,
	259, 287, 311, 843, 143, 136, 289, 304, 152, 271,
	273, 317, 881, 138, 936, 906, 831, 785, 791, 677,
	0, 137, 877, 727, 749, 715, 847, 714, 182, 867,
	302, 303, 163, 319, 689, 957, 139, 690, 956, 229,
	0, 228, 960, 298, 937, 832, 816, 814, 682, 935,
	830, 815, 201, 176, 186, 248, 207, 249, 187, 224,
	223, 225, 208, 818, 0, 673, 0, 284, 946, 973,
	288, 149, 709, 897, 293, 760, 254, 150, 181, 175,
	247, 227, 144, 189, 282, 199, 206, 872, 970, 239,
	262, 153, 308, 281, 172, 705, 708, 703, 706, 704,
	822, 823, 951, 952, 953, 885, 697, 0, 925, 926,
	0, 809, 939, 683, 0, 901, 933, 934, 861, 968,
	767, 159, 674, 679, 680, 681, 698, 799, 800, 828,
	835, 921, 920, 919, 922, 927, 961, 959, 962, 699,
	720, 748, 805, 806, 808, 844, 845, 895, 866, 876,
	801, 244, 827, 132, 140, 203, 969, 256, 179, 661,
	671, 702, 710, 711, 712, 713, 718, 725, 0, 732,
	745, 750, 751, 764, 771, 772, 773, 774, 784, 786,
	787, 788, 789, 790, 794, 795, 797, 810, 811, 817,
	825, 826, 834, 836, 0, 871, 874, 884, 889, 892,
	898, 900, 908, 913, 915, 958, 967, 972, 309, 167,
	807, 833, 878, 141, 148, 154, 166, 173, 178, 185,
	188, 192, 193, 194, 197, 209, 211, 212, 213, 214,
	230, 231, 234, 235, 237, 238, 241, 242, 243, 245,
	246, 252, 870, 258, 264, 265, 266, 267, 268, 275,
	276, 277, 278, 285, 300, 301, 313, 314, 929, 780,
	129, 0, 0, 668, 290, 0, 0, 0, 0, 763,
	134, 923, 964, 848, 864, 236, 0, 0, 0, 0,
	0, 492, 0, 0, 170, 489, 0, 0, 0, 0,
	0, 0, 169, 161, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 599, 204, 0, 0, 466, 283,
	221, 0, 0, 0, 0, 588, 589, 0, 0, 0,
	0, 0, 0, 1695, 0, 77, 0, 0, 0, 490,
	513, 512, 515, 516, 517, 518, 0, 0, 471, 514,
	519, 541, 542, 1696, 0, 0, 0, 0, 487, 504,
	0, 598, 0, 0, 0, 0, 431, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 307, 0,
	0, 0, 0, 251, 438, 0, 0, 0, 0, 501,
	502, 0, 0, 0, 0, 612, 0, 503, 0, 0,
	499, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 583, 584,
	585, 586, 587, 505, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 590, 0, 0, 195, 470,
	0, 0, 610, 0, 0, 0, 0, 202, 0, 128,
	0, 0, 0, 233, 0, 0, 525, 131, 0, 0,
	0, 162, 0, 261, 0, 306, 526, 0, 260, 205,
	299, 0, 0, 305, 0, 457, 312, 316, 432, 0,
	429, 280, 171, 168, 0, 0, 0, 439, 250, 165,
	198, 0, 0, 0, 158, 0, 0, 0, 279, 296,
	133, 219, 297, 315, 146, 291, 220, 226, 155, 157,
	156, 142, 274, 295, 151, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 443, 441, 0, 0, 310,
	444, 270, 269, 0, 190, 0, 449, 423, 257, 451,
	196, 135, 0, 318, 145, 200, 292, 421, 180, 232,
	164, 0, 240, 0, 130, 253, 216, 217, 215, 218,
	183, 435, 453, 0, 255, 272, 294, 147, 286, 433,
	434, 436, 455, 263, 456, 462, 0, 210, 174, 177,
	184, 191, 0, 259, 287, 311, 0, 143, 136, 289,
	304, 152, 271, 273, 317, 0, 138, 0, 0, 0,
	0, 0, 0, 0, 137, 0, 0, 0, 0, 0,
	0, 182, 0, 302, 303, 163, 319, 0, 0, 139,
	0, 0, 229, 0, 228, 0, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 201, 176, 186, 248, 207,
	249, 187, 224, 223, 225, 208, 0, 0, 424, 0,
	284, 0, 0, 288, 149, 0, 0, 293, 442, 254,
	150, 181, 175, 247, 227, 144, 189, 282, 199, 206,
	0, 0, 239, 262, 153, 308, 281, 172, 601, 611,
	607, 609, 608, 605, 606, 604, 603, 602, 613, 591,
	592, 593, 594, 595, 0, 0, 0, 597, 0, 535,
	536, 0, 0, 0, 159, 520, 521, 522, 523, 524,
	527, 528, 529, 530, 533, 532, 531, 534, 537, 539,
	538, 540, 614, 615, 616, 617, 618, 619, 620, 621,
	624, 622, 623, 0, 244, 596, 132, 140, 203, 0,
	256, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	600, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 167, 0, 0, 0, 141, 148, 154, 166,
	173, 178, 185, 188, 192, 193, 194, 197, 209, 211,
	212, 213, 214, 230, 231, 234, 235, 237, 238, 241,
	242, 243, 245, 246, 252, 454, 258, 264, 265, 266,
	267, 268, 275, 276, 277, 278, 285, 300, 301, 313,
	314, 0, 0, 129, 0, 0, 422, 36, 290, 0,
	0, 0, 0, 134, 0, 0, 450, 452, 0, 236,
	0, 0, 0, 0, 0, 492, 0, 0, 170, 489,
	0, 0, 0, 0, 0, 0, 169, 161, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 599, 204,
	0, 0, 466, 283, 221, 0, 0, 0, 0, 588,
	589, 0, 0, 0, 0, 0, 0, 0, 0, 77,
	0, 0, 0, 490, 513, 512, 515, 516, 517, 518,
	0, 0, 471, 514, 519, 541, 542, 0, 0, 0,
	0, 0, 487, 504, 0, 598, 0, 0, 0, 0,
	431, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 307, 0, 0, 0, 0, 251, 438, 0,
	0, 0, 0, 501, 502, 0, 0, 0, 0, 612,
	0, 503, 0, 0, 499, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 585, 586, 587, 505, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 590,
	0, 0, 195, 470, 0, 0, 610, 0, 0, 0,
	0, 202, 0, 128, 0, 0, 0, 233, 0, 0,
	525, 131, 0, 0, 0, 162, 0, 261, 0, 306,
	526, 0, 260, 205, 299, 0, 0, 305, 0, 457,
	312, 316, 432, 0, 429, 280, 171, 168, 0, 0,
	0, 439, 250, 165, 198, 0, 0, 0, 158, 0,
	0, 0, 279, 296, 133, 219, 297, 315, 146, 291,
	220, 226, 155, 157, 156, 142, 274, 295, 151, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 443,
	441, 0, 0, 310, 444, 270, 269, 0, 190, 0,
	449, 423, 257, 451, 196, 135, 0, 318, 145, 200,
	292, 421, 180, 232, 164, 0, 240, 0, 130, 253,
	216, 217, 215, 218, 183, 435, 453, 0, 255, 272,
	294, 147, 286, 433, 434, 436, 455, 263, 456, 462,
	0, 210, 174, 177, 184, 191, 0, 259, 287, 311,
	0, 143, 136, 289, 304, 152, 271, 273, 317, 0,
	138, 0, 0, 0, 0, 0, 0, 0, 137, 0,
	0, 0, 0, 0, 0, 182, 0, 302, 303, 163,
	319, 0, 0, 139, 0, 0, 229, 0, 228, 0,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 201,
	176, 186, 248, 207, 249, 187, 224, 223, 225, 208,
	0, 0, 424, 0, 284, 0, 0, 288, 149, 0,
	0, 293, 442, 254, 150, 181, 175, 247, 227, 144,
	189, 282, 199, 206, 0, 0, 239, 262, 153, 308,
	281, 172, 601, 611, 607, 609, 608, 605, 606, 604,
	603, 602, 613, 591, 592, 593, 594, 595, 0, 0,
	0, 597, 0, 535, 536, 0, 0, 0, 159, 520,
	521, 522, 523, 524, 527, 528, 529, 530, 533, 532,
	531, 534, 537, 539, 538, 540, 614, 615, 616, 617,
	618, 619, 620, 621, 624, 622, 623, 0, 244, 596,
	132, 140, 203, 75, 256, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 600, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 167, 0, 0, 0,
	141, 148, 154, 166, 173, 178, 185, 188, 192, 193,
	194, 197, 209, 211, 212, 213, 214, 230, 231, 234,
	235, 237, 238, 241, 242, 243, 245, 246, 252, 454,
	258, 264, 265, 266, 267, 268, 275, 276, 277, 278,
	285, 300, 301, 313, 314, 290, 0, 129, 0, 0,
	422, 0, 0, 0, 0, 0, 236, 134, 0, 0,
	450, 452, 492, 0, 0, 170, 489, 0, 0, 0,
	0, 0, 0, 169, 161, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 599, 204, 0, 0, 466,
	283, 221, 0, 0, 0, 0, 588, 589, 0, 0,
	0, 0, 0, 0, 0, 0, 77, 0, 0, 0,
	490, 513, 512, 515, 516, 517, 518, 0, 0, 471,
	514, 519, 541, 542, 0, 0, 0, 0, 0, 487,
	504, 0, 598, 0, 0, 0, 0, 431, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 307,
	0, 0, 0, 0, 251, 438, 0, 0, 0, 0,
	501, 502, 483, 0, 0, 0, 612, 0, 503, 0,
	0, 499, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 585, 586, 587, 505, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 0, 590, 0, 0, 195,
	470, 0, 0, 610, 0, 0, 0, 0, 202, 0,
	128, 0, 0, 0, 233, 0, 0, 525, 131, 0,
	0, 0, 162, 0, 261, 0, 306, 526, 0, 260,
	205, 299, 0, 0, 305, 0, 457, 312, 316, 432,
	0, 429, 280, 171, 168, 0, 0, 0, 439, 250,
	165, 198, 0, 0, 0, 158, 0, 0, 0, 279,
	296, 133, 219, 297, 315, 146, 291, 220, 226, 155,
	157, 156, 142, 274, 295, 151, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 443, 441, 0, 0,
	310, 444, 270, 269, 0, 190, 0, 449, 423, 257,
	451, 196, 135, 0, 318, 145, 200, 292, 421, 180,
	232, 164, 0, 240, 0, 130, 253, 216, 217, 215,
	218, 183, 435, 453, 0, 255, 272, 294, 147, 286,
	433, 434, 436, 455, 263, 456, 462, 0, 210, 174,
	177, 184, 191, 0, 259, 287, 311, 0, 143, 136,
	289, 304, 152, 271, 273, 317, 0, 138, 0, 0,
	0, 0, 0, 0, 0, 137, 0, 0, 0, 0,
	0, 0, 182, 0, 302, 303, 163, 319, 0, 0,
	139, 0, 0, 229, 0, 228, 0, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 201, 176, 186, 248,
	207, 249, 187, 224, 223, 225, 208, 0, 0, 424,
	0, 284, 0, 0, 288, 149, 0, 0, 293, 442,
	254, 150, 181, 175, 247, 227, 144, 189, 282, 199,
	206, 0, 0, 239, 262, 153, 308, 281, 172, 601,
	611, 607, 609, 608, 605, 606, 604, 603, 602, 613,
	591, 592, 593, 594, 595, 0, 0, 0, 597, 0,
	535, 536, 0, 0, 0, 159, 520, 521, 522, 523,
	524, 527, 528, 529, 530, 533, 532, 531, 534, 537,
	539, 538, 540, 614, 615, 616, 617, 618, 619, 620,
	621, 624, 622, 623, 0, 244, 596, 132, 140, 203,
	0, 256, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 600, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 167, 0, 0, 0, 141, 148, 154,
	166, 173, 178, 185, 188, 192, 193, 194, 197, 209,
	211, 212, 213, 214, 230, 231, 234, 235, 237, 238,
	241, 242, 243, 245, 246, 252, 454, 258, 264, 265,
	266, 267, 268, 275, 276, 277, 278, 285, 300, 301,
	313, 314, 290, 0, 129, 0, 0, 422, 0, 0,
	0, 0, 0, 236, 134, 0, 0, 450, 452, 492,
	0, 0, 170, 489, 0, 0, 0, 0, 0, 0,
	169, 161, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 599, 204, 0, 0, 466, 283, 221, 0,
	0, 0, 0, 588, 589, 0, 0, 0, 0, 0,
	0, 0, 0, 77, 0, 1156, 0, 490, 513, 512,
	515, 516, 517, 518, 0, 0, 471, 514, 519, 541,
	542, 0, 0, 0, 0, 0, 487, 504, 0, 598,
	0, 0, 0, 0, 431, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 307, 0, 0, 0,
	0, 251, 438, 0, 0, 0, 0, 501, 502, 0,
	0, 0, 0, 612, 0, 503, 0, 0, 499, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 583, 584, 585, 586,
	587, 505, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 590, 0, 0, 195, 470, 0, 0,
	610, 0, 0, 0, 0, 202, 0, 128, 0, 0,
	0, 233, 0, 0, 525, 131, 0, 0, 0, 162,
	0, 261, 0, 306, 526, 0, 260, 205, 299, 0,
	0, 305, 0, 457, 312, 316, 432, 0, 429, 280,
	171, 168, 0, 0, 0, 439, 250, 165, 198, 0,
	0, 0, 158, 0, 0, 0, 279, 296, 133, 219,
	297, 315, 146, 291, 220, 226, 155, 157, 156, 142,
	274, 295, 151, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 443, 441, 0, 0, 310, 444, 270,
	269, 0, 190, 0, 449, 423, 257, 451, 196, 135,
	0, 318, 145, 200, 292, 421, 180, 232, 164, 0,
	240, 0, 130, 253, 216, 217, 215, 218, 183, 435,
	453, 0, 255, 272, 294, 147, 286, 433, 434, 436,
	455, 263, 456, 462, 0, 210, 174, 177, 184, 191,
	0, 259, 287, 311, 0, 143, 136, 289, 304, 152,
	271, 273, 317, 0, 138, 0, 0, 0, 0, 0,
	0, 0, 137, 0, 0, 0, 0, 0, 0, 182,
	0, 302, 303, 163, 319, 0, 0, 139, 0, 0,
	229, 0, 228, 0, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 201, 176, 186, 248, 207, 249, 187,
	224, 223, 225, 208, 0, 0, 424, 0, 284, 0,
	0, 288, 149, 0, 0, 293, 442, 254, 150, 181,
	175, 247, 227, 144, 189, 282, 199, 206, 0, 0,
	239, 262, 153, 308, 281, 172, 601, 611, 607, 609,
	608, 605, 606, 604, 603, 602, 613, 591, 592, 593,
	594, 595, 0, 0, 0, 597, 0, 535, 536, 0,
	0, 0, 159, 520, 521, 522, 523, 524, 527, 528,
	529, 530, 533, 532, 531, 534, 537, 539, 538, 540,
	614, 615, 616, 617, 618, 619, 620, 621, 624, 622,
	623, 0, 244, 596, 132, 140, 203, 0, 256, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 600, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	167, 0, 0, 0, 141, 148, 154, 166, 173, 178,
	185, 188, 192, 193, 194, 197, 209, 211, 212, 213,
	214, 230, 231, 234, 235, 237, 238, 241, 242, 243,
	245, 246, 252, 454, 258, 264, 265, 266, 267, 268,
	275, 276, 277, 278, 285, 300, 301, 313, 314, 290,
	0, 129, 0, 0, 422, 0, 0, 0, 0, 0,
	236, 134, 0, 0, 450, 452, 492, 0, 0, 170,
	489, 0, 0, 0, 0, 0, 0, 169, 161, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 599,
	204, 0, 0, 466, 283, 221, 0, 0, 0, 0,
	588, 589, 0, 0, 0, 0, 0, 0, 0, 0,
	77, 0, 0, 0, 490, 513, 512, 515, 516, 517,
	518, 0, 0, 471, 514, 519, 541, 542, 0, 0,
	0, 0, 0, 487, 504, 0, 598, 0, 0, 0,
	0, 431, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 307, 0, 0, 0, 0, 251, 438,
	0, 0, 0, 0, 501, 502, 1595, 0, 0, 0,
	612, 0, 503, 0, 0, 499, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 583, 584, 585, 586, 587, 505, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 222, 0,
	590, 0, 0, 195, 470, 0, 0, 610, 0, 0,
	0, 0, 202, 0, 128, 0, 0, 0, 233, 0,
	0, 525, 131, 0, 0, 0, 162, 0, 261, 0,
	306, 526, 0, 260, 205, 299, 0, 0, 305, 0,
	457, 312, 316, 432, 0, 429, 280, 171, 168, 0,
	0, 0, 439, 250, 165, 198, 0, 0, 0, 158,
	0, 0, 0, 279, 296, 133, 219, 297, 315, 146,
	291, 220, 226, 155, 157, 156, 142, 274, 295, 151,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	443, 441, 0, 0, 310, 444, 270, 269, 0, 190,
	0, 449, 423, 257, 451, 196, 135, 0, 318, 145,
	200, 292, 421, 180, 232, 164, 0, 240, 0, 130,
	253, 216, 217, 215, 218, 183, 435, 453, 0, 255,
	272, 294, 147, 286, 433, 434, 436, 455, 263, 456,
	462, 0, 210, 174, 177, 184, 191, 0, 259, 287,
	311, 0, 143, 136, 289, 304, 152, 271, 273, 317,
	0, 138, 0, 0, 0, 0, 0, 0, 0, 137,
	0, 0, 0, 0, 0, 0, 182, 0, 302, 303,
	163, 319, 0, 0, 139, 0, 0, 229, 0, 228,
	0, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	201, 176, 186, 248, 207, 249, 187, 224, 223, 225,
	208, 0, 0, 424, 0, 284, 0, 0, 288, 149,
	0, 0, 293, 442, 254, 150, 181, 175, 247, 227,
	144, 189, 282, 199, 206, 0, 0, 239, 262, 153,
	308, 281, 172, 601, 611, 607, 609, 608, 605, 606,
	604, 603, 602, 613, 591, 592, 593, 594, 595, 0,
	0, 0, 597, 0, 535, 536, 0, 0, 0, 159,
	520, 521, 522, 523, 524, 527, 528, 529, 530, 533,
	532, 531, 534, 537, 539, 538, 540, 614, 615, 616,
	617, 618, 619, 620, 621, 624, 622, 623, 0, 244,
	596, 132, 140, 203, 0, 256, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 600, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 167, 0, 0,
	0, 141, 148, 154, 166, 173, 178, 185, 188, 192,
	193, 194, 197, 209, 211, 212, 213, 214, 230, 231,
	234, 235, 237, 238, 241, 242, 243, 245, 246, 252,
	454, 258, 264, 265, 266, 267, 268, 275, 276, 277,
	278, 285, 300, 301, 313, 314, 290, 0, 129, 0,
	0, 422, 0, 0, 0, 0, 0, 236, 134, 0,
	0, 450, 452, 492, 0, 0, 170, 489, 0, 0,
	0, 0, 0, 0, 169, 161, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 599, 204, 0, 0,
	466, 283, 221, 0, 0, 0, 0, 588, 589, 0,
	0, 0, 0, 0, 0, 0, 0, 77, 0, 0,
	0, 490, 513, 1631, 515, 516, 517, 518, 0, 0,
	471, 514, 519, 541, 542, 0, 0, 0, 0, 0,
	487, 504, 0, 598, 0, 0, 0, 0, 431, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 0, 0, 0, 0, 251, 438, 0, 0, 0,
	0, 501, 502, 1595, 0, 0, 0, 612, 0, 503,
	0, 0, 499, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	583, 584, 585, 586, 587, 505, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 590, 0, 0,
	195, 470, 0, 0, 610, 0, 0, 0, 0, 202,
	0, 128, 0, 0, 0, 233, 0, 0, 525, 131,
	0, 0, 0, 162, 0, 261, 0, 306, 526, 0,
	260, 205, 299, 0, 0, 305, 0, 457, 312, 316,
	432, 0, 429, 280, 171, 168, 0, 0, 0, 439,
	250, 165, 198, 0, 0, 0, 158, 0, 0, 0,
	279, 296, 133, 219, 297, 315, 146, 291, 220, 226,
	155, 157, 156, 142, 274, 295, 151, 160, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 443, 441, 0,
	0, 310, 444, 270, 269, 0, 190, 0, 449, 423,
	257, 451, 196, 135, 0, 318, 145, 200, 292, 421,
	180, 232, 164, 0, 240, 0, 130, 253, 216, 217,
	215, 218, 183, 435, 453, 0, 255, 272, 294, 147,
	286, 433, 434, 436, 455, 263, 456, 462, 0, 210,
	174, 177, 184, 191, 0, 259, 287, 311, 0, 143,
	136, 289, 304, 152, 271, 273, 317, 0, 138, 0,
	0, 0, 0, 0, 0, 0, 137, 0, 0, 0,
	0, 0, 0, 182, 0, 302, 303, 163, 319, 0,
	0, 139, 0, 0, 229, 0, 228, 0, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 201, 176, 186,
	248, 207, 249, 187, 224, 223, 225, 208, 0, 0,
	424, 0, 284, 0, 0, 288, 149, 0, 0, 293,
	442, 254, 150, 181, 175, 247, 227, 144, 189, 282,
	199, 206, 0, 0, 239, 262, 153, 308, 281, 172,
	601, 611, 607, 609, 608, 605, 606, 604, 603, 602,
	613, 591, 592, 593, 594, 595, 0, 0, 0, 597,
	0, 535, 536, 0, 0, 0, 159, 520, 521, 522,
	523, 524, 527, 528, 529, 530, 533, 532, 531, 534,
	537, 539, 538, 540, 614, 615, 616, 617, 618, 619,
	620, 621, 624, 622, 623, 0, 244, 596, 132, 140,
	203, 0, 256, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 600, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 167, 0, 0, 0, 141, 148,
	154, 166, 173, 178, 185, 188, 192, 193, 194, 197,
	209, 211, 212, 213, 214, 230, 231, 234, 235, 237,
	238, 241, 242, 243, 245, 246, 252, 454, 258, 264,
	265, 266, 267, 268, 275, 276, 277, 278, 285, 300,
	301, 313, 314, 290, 0, 129, 0, 0, 422, 0,
	0, 0, 0, 0, 236, 134, 0, 0, 450, 452,
	492, 0, 0, 170, 489, 0, 0, 0, 0, 0,
	0, 169, 161, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 599, 204, 0, 0, 466, 283, 221,
	0, 0, 0, 0, 588, 589, 0, 0, 0, 0,
	0, 0, 0, 0, 77, 0, 0, 0, 490, 513,
	1628, 515, 516, 517, 518, 0, 0, 471, 514, 519,
	541, 542, 0, 0, 0, 0, 0, 487, 504, 0,
	598, 0, 0, 0, 0, 431, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 307, 0, 0,
	0, 0, 251, 438, 0, 0, 0, 0, 501, 502,
	1595, 0, 0, 0, 612, 0, 503, 0, 0, 499,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 585,
	586, 587, 505, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 0, 590, 0, 0, 195, 470, 0,
	0, 610, 0, 0, 0, 0, 202, 0, 128, 0,
	0, 0, 233, 0, 0, 525, 131, 0, 0, 0,
	162, 0, 261, 0, 306, 526, 0, 260, 205, 299,
	0, 0, 305, 0, 457, 312, 316, 432, 0, 429,
	280, 171, 168, 0, 0, 0, 439, 250, 165, 198,
	0, 0, 0, 158, 0, 0, 0, 279, 296, 133,
	219, 297, 315, 146, 291, 220, 226, 155, 157, 156,
	142, 274, 295, 151, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 443, 441, 0, 0, 310, 444,
	270, 269, 0, 190, 0, 449, 423, 257, 451, 196,
	135, 0, 318, 145, 200, 292, 421, 180, 232, 164,
	0, 240, 0, 130, 253, 216, 217, 215, 218, 183,
	435, 453, 0, 255, 272, 294, 147, 286, 433, 434,
	436, 455, 263, 456, 462, 0, 210, 174, 177, 184,
	191, 0, 259, 287, 311, 0, 143, 136, 289, 304,
	152, 271, 273, 317, 0, 138, 0, 0, 0, 0,
	0, 0, 0, 137, 0, 0, 0, 0, 0, 0,
	182, 0, 302, 303, 163, 319, 0, 0, 139, 0,
	0, 229, 0, 228, 0, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 201, 176, 186, 248, 207, 249,
	187, 224, 223, 225, 208, 0, 0, 424, 0, 284,
	0, 0, 288, 149, 0, 0, 293, 442, 254, 150,
	181, 175, 247, 227, 144, 189, 282, 199, 206, 0,
	0, 239, 262, 153, 308, 281, 172, 601, 611, 607,
	609, 608, 605, 606, 604, 603, 602, 613, 591, 592,
	593, 594, 595, 0, 0, 0, 597, 0, 535, 536,
	0, 0, 0, 159, 520, 521, 522, 523, 524, 527,
	528, 529, 530, 533, 532, 531, 534, 537, 539, 538,
	540, 614, 615, 616, 617, 618, 619, 620, 621, 624,
	622, 623, 0, 244, 596, 132, 140, 203, 0, 256,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 600,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 167, 0, 0, 0, 141, 148, 154, 166, 173,
	178, 185, 188, 192, 193, 194, 197, 209, 211, 212,
	213, 214, 230, 231, 234, 235, 237, 238, 241, 242,
	243, 245, 246, 252, 454, 258, 264, 265, 266, 267,
	268, 275, 276, 277, 278, 285, 300, 301, 313, 314,
	290, 0, 129, 0, 0, 422, 0, 0, 0, 0,
	0, 236, 134, 0, 0, 450, 452, 492, 0, 0,
	170, 489, 0, 0, 0, 0, 0, 0, 169, 161,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	599, 204, 0, 0, 466, 283, 221, 0, 0, 0,
	0, 588, 589, 0, 0, 0, 0, 0, 0, 0,
	0, 77, 0, 1473, 0, 490, 513, 512, 515, 516,
	517, 518, 0, 0, 471, 514, 519, 541, 542, 0,
	0, 0, 0, 0, 487, 504, 0, 598, 0, 0,
	0, 0, 431, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 307, 0, 0, 0, 0, 251,
	438, 0, 0, 0, 0, 501, 502, 0, 0, 0,
	0, 612, 0, 503, 0, 0, 499, 546, 547, 548,
	549, 550, 551, 552, 553, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 585, 586, 587, 505,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 590, 0, 0, 195, 470, 0, 0, 610, 0,
	0, 0, 0, 202, 0, 128, 0, 0, 0, 233,
	0, 0, 525, 131, 0, 0, 0, 162, 0, 261,
	0, 306, 526, 0, 260, 205, 299, 0, 0, 305,
	0, 457, 312, 316, 432, 0, 429, 280, 171, 168,
	0, 0, 0, 439, 250, 165, 198, 0, 0, 0,
	158, 0, 0, 0, 279, 296, 133, 219, 297, 315,
	146, 291, 220, 226, 155, 157, 156, 142, 274, 295,
	151, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 443, 441, 0, 0, 310, 444, 270, 269, 0,
	190, 0, 449, 423, 257, 451, 196, 135, 0, 318,
	145, 200, 292, 421, 180, 232, 164, 0, 240, 0,
	130, 253, 216, 217, 215, 218, 183, 435, 453, 0,
	255, 272, 294, 147, 286, 433, 434, 436, 455, 263,
	456, 462, 0, 210, 174, 177, 184, 191, 0, 259,
	287, 311, 0, 143, 136, 289, 304, 152, 271, 273,
	317, 0, 138, 0, 0, 0, 0, 0, 0, 0,
	137, 0, 0, 0, 0, 0, 0, 182, 0, 302,
	303, 163, 319, 0, 0, 139, 0, 0, 229, 0,
	228, 0, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 201, 176, 186, 248, 207, 249, 187, 224, 223,
	225, 208, 0, 0, 424, 0, 284, 0, 0, 288,
	149, 0, 0, 293, 442, 254, 150, 181, 175, 247,
	227, 144, 189, 282, 199, 206, 0, 0, 239, 262,
	153, 308, 281, 172, 601, 611, 607, 609, 608, 605,
	606, 604, 603, 602, 613, 591, 592, 593, 594, 595,
	0, 0, 0, 597, 0, 535, 536, 0, 0, 0,
	159, 520, 521, 522, 523, 524, 527, 528, 529, 530,
	533, 532, 531, 534, 537, 539, 538, 540, 614, 615,
	616, 617, 618, 619, 620, 621, 624, 622, 623, 0,
	244, 596, 132, 140, 203, 0, 256, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 600, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 309, 167, 0,
	0, 0, 141, 148, 154, 166, 173, 178, 185, 188,
	192, 193, 194, 197, 209, 211, 212, 213, 214, 230,
	231, 234, 235, 237, 238, 241, 242, 243, 245, 246,
	252, 454, 258, 264, 265, 266, 267, 268, 275, 276,
	277, 278, 285, 300, 301, 313, 314, 290, 0, 129,
	0, 0, 422, 0, 0, 0, 0, 0, 236, 134,
	0, 0, 450, 452, 492, 0, 0, 170, 489, 0,
	0, 0, 0, 0, 0, 169, 161, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 599, 204, 0,
	0, 466, 283, 221, 0, 0, 0, 0, 588, 589,
	0, 0, 0, 0, 0, 0, 0, 0, 77, 0,
	0, 0, 490, 513, 512, 515, 516, 517, 518, 0,
	0, 471, 514, 519, 541, 542, 0, 0, 0, 0,
	0, 487, 504, 0, 598, 0, 0, 0, 0, 431,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 307, 0, 0, 0, 0, 251, 438, 0, 0,
	0, 0, 501, 502, 0, 0, 0, 0, 612, 0,
	503, 0, 0, 499, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 583, 584, 585, 586, 587, 505, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 0, 590, 0,
	0, 195, 470, 0, 0, 610, 0, 0, 0, 0,
	202, 0, 128, 0, 0, 0, 233, 0, 0, 525,
	131, 0, 0, 0, 162, 0, 261, 0, 306, 526,
	0, 260, 205, 299, 0, 0, 305, 0, 457, 312,
	316, 432, 0, 429, 280, 171, 168, 0, 0, 0,
	439, 250, 165, 198, 0, 0, 0, 158, 0, 0,
	0, 279, 296, 133, 219, 297, 315, 146, 291, 220,
	226, 155, 157, 156, 142, 274, 295, 151, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 443, 441,
	0, 0, 310, 444, 270, 269, 0, 190, 0, 449,
	423, 257, 451, 196, 135, 0, 318, 145, 200, 292,
	421, 180, 232, 164, 0, 240, 0, 130, 253, 216,
	217, 215, 218, 183, 435, 453, 0, 255, 272, 294,
	147, 286, 433, 434, 436, 455, 263, 456, 462, 0,
	210, 174, 177, 184, 191, 0, 259, 287, 311, 0,
	143, 136, 289, 304, 152, 271, 273, 317, 0, 138,
	0, 0, 0, 0, 0, 0, 0, 137, 0, 0,
	0, 0, 0, 0, 182, 0, 302, 303, 163, 319,
	0, 0, 139, 0, 0, 229, 0, 228, 0, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 201, 176,
	186, 248, 207, 249, 187, 224, 223, 225, 208, 0,
	0, 424, 0, 284, 0, 0, 288, 149, 0, 0,
	293, 442, 254, 150, 181, 175, 247, 227, 144, 189,
	282, 199, 206, 0, 0, 239, 262, 153, 308, 281,
	172, 601, 611, 607, 609, 608, 605, 606, 604, 603,
	602, 613, 591, 592, 593, 594, 595, 0, 0, 0,
	597, 0, 535, 536, 0, 0, 0, 159, 520, 521,
	522, 523, 524, 527, 528, 529, 530, 533, 532, 531,
	534, 537, 539, 538, 540, 614, 615, 616, 617, 618,
	619, 620, 621, 624, 622, 623, 0, 244, 596, 132,
	140, 203, 0, 256, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 600, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 167, 0, 0, 0, 141,
	148, 154, 166, 173, 178, 185, 188, 192, 193, 194,
	197, 209, 211, 212, 213, 214, 230, 231, 234, 235,
	237, 238, 241, 242, 243, 245, 246, 252, 454, 258,
	264, 265, 266, 267, 268, 275, 276, 277, 278, 285,
	300, 301, 313, 314, 290, 0, 129, 0, 0, 422,
	0, 0, 0, 0, 0, 236, 134, 0, 0, 450,
	452, 0, 0, 0, 170, 0, 0, 0, 0, 0,
	0, 0, 169, 161, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 599, 204, 0, 0, 466, 283,
	221, 0, 0, 0, 0, 588, 589, 0, 0, 0,
	0, 0, 0, 0, 0, 77, 0, 0, 0, 490,
	513, 512, 515, 516, 517, 518, 0, 0, 471, 514,
	519, 541, 542, 0, 0, 0, 0, 0, 0, 504,
	0, 598, 0, 0, 0, 0, 431, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 307, 0,
	0, 0, 0, 251, 438, 0, 0, 0, 0, 501,
	502, 0, 0, 0, 0, 612, 0, 503, 0, 0,
	499, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 583, 584,
	585, 586, 587, 505, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 590, 0, 0, 195, 470,
	0, 0, 610, 0, 0, 0, 0, 202, 0, 128,
	0, 0, 0, 233, 0, 0, 525, 131, 0, 0,
	0, 162, 0, 261, 0, 306, 526, 0, 260, 205,
	299, 0, 0, 305, 0, 457, 312, 316, 432, 0,
	429, 280, 171, 168, 0, 0, 0, 439, 250, 165,
	198, 0, 0, 0, 158, 0, 0, 0, 279, 296,
	133, 219, 297, 315, 146, 291, 220, 226, 155, 157,
	156, 142, 274, 295, 151, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 443, 441, 0, 0, 310,
	444, 270, 269, 0, 190, 0, 449, 423, 257, 451,
	196, 135, 0, 318, 145, 200, 292, 421, 180, 232,
	164, 0, 240, 0, 130, 253, 216, 217, 215, 218,
	183, 435, 453, 0, 255, 272, 294, 147, 286, 433,
	434, 436, 455, 263, 456, 462, 0, 210, 174, 177,
	184, 191, 0, 259, 287, 311, 0, 143, 136, 289,
	304, 152, 271, 273, 317, 0, 138, 0, 0, 0,
	0, 0, 0, 0, 137, 0, 0, 0, 0, 0,
	0, 182, 0, 302, 303, 163, 319, 0, 0, 139,
	0, 0, 229, 0, 228, 0, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 201, 176, 186, 248, 207,
	249, 187, 224, 223, 225, 208, 0, 0, 424, 0,
	284, 0, 0, 288, 149, 0, 0, 293, 442, 254,
	150, 181, 175, 247, 227, 144, 189, 282, 199, 206,
	0, 0, 239, 262, 153, 308, 281, 172, 601, 611,
	607, 609, 608, 605, 606, 604, 603, 602, 613, 591,
	592, 593, 594, 595, 1634, 1635, 1636, 597, 0, 535,
	536, 0, 0, 0, 159, 520, 521, 522, 523, 524,
	527, 528, 529, 530, 533, 532, 531, 534, 537, 539,
	538, 540, 614, 615, 616, 617, 618, 619, 620, 621,
	624, 622, 623, 0, 244, 596, 132, 140, 203, 0,
	256, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	600, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 167, 0, 0, 0, 141, 148, 154, 166,
	173, 178, 185, 188, 192, 193, 194, 197, 209, 211,
	212, 213, 214, 230, 231, 234, 235, 237, 238, 241,
	242, 243, 245, 246, 252, 454, 258, 264, 265, 266,
	267, 268, 275, 276, 277, 278, 285, 300, 301, 313,
	314, 290, 0, 129, 0, 0, 422, 0, 0, 0,
	0, 0, 236, 134, 0, 0, 450, 452, 0, 0,
	0, 170, 0, 0, 0, 0, 0, 0, 0, 169,
	161, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 599, 204, 0, 0, 466, 283, 221, 0, 0,
	0, 0, 588, 589, 0, 0, 0, 0, 0, 0,
	0, 0, 77, 0, 0, 0, 490, 513, 512, 515,
	516, 517, 518, 0, 0, 471, 514, 519, 541, 542,
	0, 0, 0, 0, 0, 0, 504, 0, 598, 0,
	0, 0, 0, 431, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 307, 0, 0, 0, 0,
	251, 438, 0, 0, 0, 0, 501, 502, 0, 0,
	0, 0, 612, 0, 503, 0, 0, 499, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 583, 584, 585, 586, 587,
	505, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	222, 0, 590, 0, 0, 195, 470, 0, 0, 610,
	0, 0, 0, 0, 202, 0, 128, 0, 0, 0,
	233, 0, 0, 525, 131, 0, 0, 0, 162, 0,
	261, 0, 306, 526, 3073, 260, 205, 299, 0, 0,
	305, 0, 457, 312, 316, 432, 0, 429, 280, 171,
	168, 0, 0, 0, 439, 250, 165, 198, 0, 0,
	0, 158, 0, 0, 0, 279, 296, 133, 219, 297,
	315, 146, 291, 220, 226, 155, 157, 156, 142, 274,
	295, 151, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 443, 441, 0, 0, 310, 444, 270, 269,
	0, 190, 0, 449, 423, 257, 451, 196, 135, 0,
	318, 145, 200, 292, 421, 180, 232, 164, 0, 240,
	0, 130, 253, 216, 217, 215, 218, 183, 435, 453,
	0, 255, 272, 294, 147, 286, 433, 434, 436, 455,
	263, 456, 462, 0, 210, 174, 177, 184, 191, 0,
	259, 287, 311, 0, 143, 136, 289, 304, 152, 271,
	273, 317, 0, 138, 0, 0, 0, 0, 0, 0,
	0, 137, 0, 0, 0, 0, 0, 0, 182, 0,
	302, 303, 163, 319, 0, 0, 139, 0, 0, 229,
	0, 228, 0, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 201, 176, 186, 248, 207, 249, 187, 224,
	223, 225, 208, 0, 0, 424, 0, 284, 0, 0,
	288, 149, 0, 0, 293, 442, 254, 150, 181, 175,
	247, 227, 144, 189, 282, 199, 206, 0, 0, 239,
	262, 153, 308, 281, 172, 601, 611, 607, 609, 608,
	605, 606, 604, 603, 602, 613, 591, 592, 593, 594,
	595, 0, 0, 0, 597, 0, 535, 536, 0, 0,
	0, 159, 520, 521, 522, 523, 524, 527, 528, 529,
	530, 533, 532, 531, 534, 537, 539, 538, 540, 614,
	615, 616, 617, 618, 619, 620, 621, 624, 622, 623,
	0, 244, 596, 132, 140, 203, 0, 256, 179, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 600, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 167,
	0, 0, 0, 141, 148, 154, 166, 173, 178, 185,
	188, 192, 193, 194, 197, 209, 211, 212, 213, 214,
	230, 231, 234, 235, 237, 238, 241, 242, 243, 245,
	246, 252, 454, 258, 264, 265, 266, 267, 268, 275,
	276, 277, 278, 285, 300, 301, 313, 314, 290, 0,
	129, 0, 0, 422, 0, 0, 0, 0, 0, 236,
	134, 0, 0, 450, 452, 0, 0, 0, 170, 0,
	0, 0, 0, 0, 0, 0, 169, 161, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 599, 204,
	0, 0, 466, 283, 221, 0, 0, 0, 0, 588,
	589, 0, 0, 0, 0, 0, 0, 0, 0, 77,
	0, 1156, 0, 490, 513, 512, 515, 516, 517, 518,
	0, 0, 471, 514, 519, 541, 542, 0, 0, 0,
	0, 0, 0, 504, 0, 598, 0, 0, 0, 0,
	431, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 307, 0, 0, 0, 0, 251, 438, 0,
	0, 0, 0, 501, 502, 0, 0, 0, 0, 612,
	0, 503, 0, 0, 499, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 585, 586, 587, 505, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 590,
	0, 0, 195, 470, 0, 0, 610, 0, 0, 0,
	0, 202, 0, 128, 0, 0, 0, 233, 0, 0,
	525, 131, 0, 0, 0, 162, 0, 261, 0, 306,
	526, 0, 260, 205, 299, 0, 0, 305, 0, 457,
	312, 316, 432, 0, 429, 280, 171, 168, 0, 0,
	0, 439, 250, 165, 198, 0, 0, 0, 158, 0,
	0, 0, 279, 296, 133, 219, 297, 315, 146, 291,
	220, 226, 155, 157, 156, 142, 274, 295, 151, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 443,
	441, 0, 0, 310, 444, 270, 269, 0, 190, 0,
	449, 423, 257, 451, 196, 135, 0, 318, 145, 200,
	292, 421, 180, 232, 164, 0, 240, 0, 130, 253,
	216, 217, 215, 218, 183, 435, 453, 0, 255, 272,
	294, 147, 286, 433, 434, 436, 455, 263, 456, 462,
	0, 210, 174, 177, 184, 191, 0, 259, 287, 311,
	0, 143, 136, 289, 304, 152, 271, 273, 317, 0,
	138, 0, 0, 0, 0, 0, 0, 0, 137, 0,
	0, 0, 0, 0, 0, 182, 0, 302, 303, 163,
	319, 0, 0, 139, 0, 0, 229, 0, 228, 0,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 201,
	176, 186, 248, 207, 249, 187, 224, 223, 225, 208,
	0, 0, 424, 0, 284, 0, 0, 288, 149, 0,
	0, 293, 442, 254, 150, 181, 175, 247, 227, 144,
	189, 282, 199, 206, 0, 0, 239, 262, 153, 308,
	281, 172, 601, 611, 607, 609, 608, 605, 606, 604,
	603, 602, 613, 591, 592, 593, 594, 595, 0, 0,
	0, 597, 0, 535, 536, 0, 0, 0, 159, 520,
	521, 522, 523, 524, 527, 528, 529, 530, 533, 532,
	531, 534, 537, 539, 538, 540, 614, 615, 616, 617,
	618, 619, 620, 621, 624, 622, 623, 0, 244, 596,
	132, 140, 203, 0, 256, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 600, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 167, 0, 0, 0,
	141, 148, 154, 166, 173, 178, 185, 188, 192, 193,
	194, 197, 209, 211, 212, 213, 214, 230, 231, 234,
	235, 237, 238, 241, 242, 243, 245, 246, 252, 454,
	258, 264, 265, 266, 267, 268, 275, 276, 277, 278,
	285, 300, 301, 313, 314, 290, 0, 129, 0, 0,
	422, 0, 0, 0, 0, 0, 236, 134, 0, 0,
	450, 452, 0, 0, 0, 170, 0, 0, 0, 0,
	0, 0, 0, 169, 161, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 599, 204, 0, 0, 466,
	283, 221, 0, 0, 0, 0, 588, 589, 0, 0,
	0, 0, 0, 0, 0, 0, 77, 0, 0, 0,
	490, 513, 512, 515, 516, 517, 518, 0, 0, 471,
	514, 519, 541, 542, 0, 0, 0, 0, 0, 0,
	504, 0, 598, 0, 0, 0, 0, 431, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 307,
	0, 0, 0, 0, 251, 438, 0, 0, 0, 0,
	501, 502, 0, 0, 0, 0, 612, 0, 503, 0,
	0, 499, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 585, 586, 587, 505, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 0, 590, 0, 0, 195,
	470, 0, 0, 610, 0, 0, 0, 0, 202, 0,
	128, 0, 0, 0, 233, 0, 0, 525, 131, 0,
	0, 0, 162, 0, 261, 0, 306, 526, 0, 260,
	205, 299, 0, 0, 305, 0, 457, 312, 316, 432,
	0, 429, 280, 171, 168, 0, 0, 0, 439, 250,
	165, 198, 0, 0, 0, 158, 0, 0, 0, 279,
	296, 133, 219, 297, 315, 146, 291, 220, 226, 155,
	157, 156, 142, 274, 295, 151, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 443, 441, 0, 0,
	310, 444, 270, 269, 0, 190, 0, 449, 423, 257,
	451, 196, 135, 0, 318, 145, 200, 292, 421, 180,
	232, 164, 0, 240, 0, 130, 253, 216, 217, 215,
	218, 183, 435, 453, 0, 255, 272, 294, 147, 286,
	433, 434, 436, 455, 263, 456, 462, 0, 210, 174,
	177, 184, 191, 0, 259, 287, 311, 0, 143, 136,
	289, 304, 152, 271, 273, 317, 0, 138, 0, 0,
	0, 0, 0, 0, 0, 137, 0, 0, 0, 0,
	0, 0, 182, 0, 302, 303, 163, 319, 0, 0,
	139, 0, 0, 229, 0, 228, 0, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 201, 176, 186, 248,
	207, 249, 187, 224, 223, 225, 208, 0, 0, 424,
	0, 284, 0, 0, 288, 149, 0, 0, 293, 442,
	254, 150, 181, 175, 247, 227, 144, 189, 282, 199,
	206, 0, 0, 239, 262, 153, 308, 281, 172, 601,
	611, 607, 609, 608, 605, 606, 604, 603, 602, 613,
	591, 592, 593, 594, 595, 0, 0, 0, 597, 0,
	535, 536, 0, 0, 0, 159, 520, 521, 522, 523,
	524, 527, 528, 529, 530, 533, 532, 531, 534, 537,
	539, 538, 540, 614, 615, 616, 617, 618, 619, 620,
	621, 624, 622, 623, 0, 244, 596, 132, 140, 203,
	0, 256, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 600, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 167, 0, 0, 0, 141, 148, 154,
	166, 173, 178, 185, 188, 192, 193, 194, 197, 209,
	211, 212, 213, 214, 230, 231, 234, 235, 237, 238,
	241, 242, 243, 245, 246, 252, 454, 258, 264, 265,
	266, 267, 268, 275, 276, 277, 278, 285, 300, 301,
	313, 314, 0, 0, 129, 290, 0, 422, 0, 0,
	0, 0, 0, 0, 134, 0, 236, 450, 452, 0,
	0, 1990, 0, 0, 0, 170, 0, 0, 0, 0,
	0, 0, 0, 169, 161, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 204, 0, 0, 466,
	283, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1992, 1994, 0, 0, 0, 0, 0, 0,
	126, 0, 420, 0, 0, 0, 0, 0, 0, 471,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 431, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 307,
	1988, 0, 0, 0, 251, 438, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 0, 0, 0, 0, 195,
	470, 0, 1993, 0, 0, 0, 0, 0, 202, 0,
	128, 0, 0, 0, 233, 0, 0, 437, 131, 0,
	0, 0, 162, 0, 261, 0, 306, 440, 0, 260,
	205, 299, 0, 0, 305, 0, 457, 312, 316, 432,
	0, 429, 280, 171, 168, 0, 0, 0, 439, 250,
	165, 198, 0, 0, 0, 158, 0, 0, 0, 279,
	296, 133, 219, 297, 315, 146, 291, 220, 226, 155,
	157, 156, 142, 274, 295, 151, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 443, 441, 0, 0,
	310, 444, 270, 269, 0, 190, 0, 449, 423, 257,
	451, 196, 135, 0, 318, 145, 200, 292, 421, 180,
	232, 164, 0, 240, 0, 130, 253, 216, 217, 215,
	218, 183, 435, 453, 0, 255, 272, 294, 147, 286,
	433, 434, 436, 455, 263, 456, 462, 0, 210, 174,
	177, 184, 191, 0, 259, 287, 311, 0, 143, 136,
	289, 304, 152, 271, 273, 317, 0, 138, 0, 0,
	0, 0, 0, 0, 0, 137, 0, 0, 0, 0,
	0, 0, 182, 0, 302, 303, 163, 319, 0, 0,
	139, 0, 0, 229, 0, 228, 0, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 201, 176, 186, 248,
	207, 249, 187, 224, 223, 225, 208, 0, 0, 424,
	0, 284, 0, 0, 288, 149, 0, 0, 293, 442,
	254, 150, 181, 175, 247, 227, 144, 189, 282, 199,
	206, 0, 0, 239, 262, 153, 308, 281, 172, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	463, 464, 0, 0, 0, 159, 425, 426, 427, 428,
	430, 445, 446, 447, 448, 460, 459, 458, 461, 465,
	468, 467, 469, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 132, 140, 203,
	0, 256, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 167, 0, 0, 0, 141, 148, 154,
	166, 173, 178, 185, 188, 192, 193, 194, 197, 209,
	211, 212, 213, 214, 230, 231, 234, 235, 237, 238,
	241, 242, 243, 245, 246, 252, 454, 258, 264, 265,
	266, 267, 268, 275, 276, 277, 278, 285, 300, 301,
	313, 314, 0, 0, 129, 290, 0, 422, 0, 0,
	0, 0, 0, 0, 134, 0, 236, 450, 452, 0,
	0, 1179, 0, 0, 0, 170, 0, 0, 0, 0,
	0, 0, 0, 169, 161, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 204, 0, 0, 466,
	283, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1180, 0, 1183, 0, 0, 0, 0, 0, 0, 471,
	0, 0, 0, 0, 0, 0, 1175, 1176, 1174, 0,
	0, 0, 0, 0, 0, 0, 0, 431, 0, 0,
	0, 0, 0, 0, 0, 1177, 0, 0, 0, 307,
	0, 0, 0, 0, 251, 438, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 0, 0, 0, 0, 195,
	470, 0, 0, 0, 0, 0, 0, 0, 202, 0,
	128, 0, 0, 0, 233, 0, 0, 437, 131, 0,
	0, 0, 162, 0, 261, 0, 306, 440, 0, 260,
	205, 299, 0, 0, 305, 0, 457, 312, 316, 432,
	0, 429, 280, 171, 168, 0, 0, 0, 439, 250,
	165, 198, 0, 0, 0, 158, 0, 0, 0, 279,
	296, 133, 219, 297, 315, 146, 291, 220, 226, 155,
	157, 156, 142, 274, 295, 151, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 443, 441, 0, 0,
	310, 444, 270, 269, 0, 190, 0, 449, 423, 257,
	451, 196, 135, 0, 318, 145, 200, 292, 421, 180,
	232, 164, 0, 240, 0, 130, 253, 216, 217, 215,
	218, 183, 435, 453, 0, 255, 272, 294, 147, 286,
	433, 434, 436, 455, 263, 456, 462, 0, 210, 174,
	177, 184, 191, 0, 259, 287, 311, 0, 143, 136,
	289, 304, 152, 271, 273, 317, 0, 138, 0, 0,
	0, 0, 0, 0, 0, 137, 0, 0, 0, 0,
	0, 0, 182, 0, 302, 303, 163, 319, 0, 0,
	139, 0, 0, 229, 0, 228, 0, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 201, 176, 186, 248,
	207, 249, 187, 224, 223, 225, 208, 0, 0, 424,
	0, 284, 0, 0, 288, 149, 0, 0, 293, 442,
	254, 150, 181, 175, 247, 227, 144, 189, 282, 199,
	206, 0, 0, 239, 262, 153, 308, 281, 172, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	463, 464, 0, 0, 0, 159, 425, 426, 427, 428,
	430, 445, 446, 447, 448, 460, 459, 458, 461, 465,
	468, 467, 469, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 132, 140, 203,
	0, 256, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 167, 0, 0, 0, 141, 148, 154,
	166, 173, 178, 185, 188, 192, 193, 194, 197, 209,
	211, 212, 213, 214, 230, 231, 234, 235, 237, 238,
	241, 242, 243, 245, 246, 252, 454, 258, 264, 265,
	266, 267, 268, 275, 276, 277, 278, 285, 300, 301,
	313, 314, 0, 0, 129, 290, 0, 422, 0, 0,
	0, 0, 0, 0, 134, 0, 236, 450, 452, 0,
	0, 1990, 0, 0, 0, 170, 0, 0, 0, 0,
	0, 0, 0, 169, 161, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 204, 0, 0, 466,
	283, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1992, 1994, 0, 0, 0, 0, 0, 0,
	126, 0, 420, 0, 0, 0, 0, 0, 0, 471,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 431, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 307,
	0, 0, 0, 0, 251, 438, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 0, 0, 0, 0, 195,
	470, 0, 1993, 0, 0, 0, 0, 0, 202, 0,
	128, 0, 0, 0, 233, 0, 0, 437, 131, 0,
	0, 0, 162, 0, 261, 0, 306, 440, 0, 260,
	205, 299, 0, 0, 305, 0, 457, 312, 316, 432,
	0, 429, 280, 171, 168, 0, 0, 0, 439, 250,
	165, 198, 0, 0, 0, 158, 0, 0, 0, 279,
	296, 133, 219, 297, 315, 146, 291, 220, 226, 155,
	157, 156, 142, 274, 295, 151, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 443, 441, 0, 0,
	310, 444, 270, 269, 0, 190, 0, 449, 423, 257,
	451, 196, 135, 0, 318, 145, 200, 292, 421, 180,
	232, 164, 0, 240, 0, 130, 253, 216, 217, 215,
	218, 183, 435, 453, 0, 255, 272, 294, 147, 286,
	433, 434, 436, 455, 263, 456, 462, 0, 210, 174,
	177, 184, 191, 0, 259, 287, 311, 0, 143, 136,
	289, 304, 152, 271, 273, 317, 0, 138, 0, 0,
	0, 0, 0, 0, 0, 137, 0, 0, 0, 0,
	0, 0, 182, 0, 302, 303, 163, 319, 0, 0,
	139, 0, 0, 229, 0, 228, 0, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 201, 176, 186, 248,
	207, 249, 187, 224, 223, 225, 208, 0, 0, 424,
	0, 284, 0, 0, 288, 149, 0, 0, 293, 442,
	254, 150, 181, 175, 247, 227, 144, 189, 282, 199,
	206, 0, 0, 239, 262, 153, 308, 281, 172, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	463, 464, 0, 0, 0, 159, 425, 426, 427, 428,
	430, 445, 446, 447, 448, 460, 459, 458, 461, 465,
	468, 467, 469, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 132, 140, 203,
	0, 256, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 167, 0, 0, 0, 141, 148, 154,
	166, 173, 178, 185, 188, 192, 193, 194, 197, 209,
	211, 212, 213, 214, 230, 231, 234, 235, 237, 238,
	241, 242, 243, 245, 246, 252, 454, 258, 264, 265,
	266, 267, 268, 275, 276, 277, 278, 285, 300, 301,
	313, 314, 290, 0, 129, 0, 0, 422, 0, 0,
	0, 0, 0, 236, 134, 0, 0, 450, 452, 0,
	0, 0, 170, 0, 0, 0, 0, 0, 0, 0,
	169, 161, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 204, 0, 0, 466, 283, 221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 0, 420,
	0, 0, 0, 0, 0, 0, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 431, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 307, 0, 0, 0,
	0, 251, 438, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 0, 0, 0, 195, 470, 0, 0,
	0, 0, 0, 0, 0, 202, 0, 128, 0, 0,
	0, 233, 0, 0, 437, 131, 0, 0, 0, 162,
	0, 261, 0, 306, 440, 0, 260, 205, 299, 0,
	0, 305, 0, 457, 312, 316, 432, 0, 429, 280,
	171, 168, 0, 0, 0, 439, 250, 165, 198, 0,
	0, 0, 158, 0, 0, 0, 279, 296, 133, 219,
	297, 315, 146, 291, 220, 226, 155, 157, 156, 142,
	274, 295, 151, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 443, 441, 0, 0, 310, 444, 270,
	269, 0, 190, 0, 449, 423, 257, 451, 196, 135,
	0, 318, 145, 200, 292, 421, 180, 232, 164, 0,
	240, 0, 130, 253, 216, 217, 215, 218, 183, 435,
	453, 0, 255, 272, 294, 147, 286, 433, 434, 436,
	455, 263, 456, 462, 0, 210, 174, 177, 184, 191,
	0, 259, 287, 311, 0, 143, 136, 289, 304, 152,
	271, 273, 317, 0, 138, 0, 0, 0, 0, 0,
	0, 0, 137, 0, 0, 0, 0, 0, 0, 182,
	0, 302, 303, 163, 319, 0, 0, 139, 0, 0,
	229, 0, 228, 0, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 201, 176, 186, 248, 207, 249, 187,
	224, 223, 225, 208, 0, 0, 424, 0, 284, 0,
	0, 288, 149, 0, 0, 293, 442, 254, 150, 181,
	175, 247, 227, 144, 189, 282, 199, 206, 0, 0,
	239, 262, 153, 308, 281, 172, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 463, 464, 0,
	0, 0, 159, 425, 426, 427, 428, 430, 445, 446,
	447, 448, 460, 459, 458, 461, 465, 468, 467, 469,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 132, 140, 203, 0, 256, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	167, 0, 0, 415, 141, 148, 154, 166, 173, 178,
	185, 188, 192, 193, 194, 197, 209, 211, 212, 213,
	214, 230, 231, 234, 235, 237, 238, 241, 242, 243,
	245, 246, 252, 454, 258, 264, 265, 266, 267, 268,
	275, 276, 277, 278, 285, 300, 301, 313, 314, 290,
	0, 129, 0, 0, 422, 0, 0, 0, 0, 0,
	236, 134, 0, 0, 450, 452, 0, 0, 0, 170,
	0, 0, 0, 0, 0, 2275, 0, 169, 161, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 0, 0, 466, 283, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 0, 420, 0, 0, 0,
	0, 0, 0, 471, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 431, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 307, 0, 0, 0, 0, 251, 438,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 222, 0,
	0, 0, 0, 195, 470, 0, 0, 0, 0, 0,
	0, 0, 202, 0, 128, 0, 0, 0, 233, 0,
	0, 437, 131, 0, 0, 0, 162, 0, 261, 0,
	306, 440, 0, 260, 205, 299, 0, 0, 305, 0,
	457, 312, 316, 432, 0, 429, 280, 171, 168, 0,
	0, 0, 439, 250, 165, 198, 0, 0, 0, 158,
	0, 0, 0, 279, 296, 133, 219, 297, 315, 146,
	291, 220, 226, 155, 157, 156, 142, 274, 295, 151,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	443, 441, 0, 0, 310, 444, 270, 269, 0, 190,
	0, 449, 423, 257, 451, 196, 135, 0, 318, 145,
	200, 292, 421, 180, 232, 164, 0, 240, 0, 130,
	253, 216, 217, 215, 218, 183, 435, 453, 0, 255,
	272, 294, 147, 286, 433, 434, 436, 455, 263, 456,
	462, 0, 210, 174, 177, 184, 191, 0, 259, 287,
	311, 0, 143, 136, 289, 304, 152, 271, 273, 317,
	0, 138, 0, 0, 0, 0, 0, 0, 0, 137,
	0, 0, 0, 0, 0, 0, 182, 0, 302, 303,
	163, 319, 0, 0, 139, 0, 0, 229, 0, 228,
	0, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	201, 176, 186, 248, 207, 249, 187, 224, 223, 225,
	208, 0, 0, 424, 0, 284, 0, 0, 288, 149,
	0, 0, 293, 442, 254, 150, 181, 175, 247, 227,
	144, 189, 282, 199, 206, 0, 0, 239, 262, 153,
	308, 281, 172, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 463, 464, 0, 0, 0, 159,
	425, 426, 427, 428, 430, 445, 446, 447, 448, 460,
	459, 458, 461, 465, 468, 467, 469, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 132, 140, 203, 0, 256, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 167, 0, 0,
	0, 141, 148, 154, 166, 173, 178, 185, 188, 192,
	193, 194, 197, 209, 211, 212, 213, 214, 230, 231,
	234, 235, 237, 238, 241, 242, 243, 245, 246, 252,
	454, 258, 264, 265, 266, 267, 268, 275, 276, 277,
	278, 285, 300, 301, 313, 314, 290, 0, 129, 0,
	0, 422, 0, 0, 0, 0, 0, 236, 134, 0,
	0, 450, 452, 0, 0, 0, 170, 0, 0, 0,
	0, 0, 0, 0, 169, 161, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 204, 0, 0,
	466, 283, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 0, 420, 0, 0, 0, 0, 0, 0,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 431, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 0, 0, 0, 0, 251, 438, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	195, 470, 0, 0, 0, 0, 0, 0, 0, 202,
	0, 128, 0, 0, 0, 233, 0, 0, 437, 131,
	0, 0, 0, 162, 0, 261, 0, 306, 440, 0,
	260, 205, 299, 0, 0, 305, 0, 457, 312, 316,
	432, 0, 429, 280, 171, 168, 0, 0, 0, 439,
	250, 165, 198, 0, 0, 0, 158, 0, 0, 0,
	279, 296, 133, 219, 297, 315, 146, 291, 220, 226,
	155, 157, 156, 142, 274, 295, 151, 160, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 443, 441, 0,
	0, 310, 444, 270, 269, 0, 190, 0, 449, 423,
	257, 451, 196, 135, 0, 318, 145, 200, 292, 421,
	180, 232, 164, 0, 240, 0, 130, 253, 216, 217,
	215, 218, 183, 435, 453, 0, 255, 272, 294, 147,
	286, 433, 434, 436, 455, 263, 456, 462, 0, 210,
	174, 177, 184, 191, 0, 259, 287, 311, 0, 143,
	136, 289, 304, 152, 271, 273, 317, 0, 138, 0,
	0, 0, 0, 0, 0, 0, 137, 0, 0, 0,
	0, 0, 0, 182, 0, 302, 303, 163, 319, 0,
	0, 139, 0, 0, 229, 0, 228, 0, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 201, 176, 186,
	248, 207, 249, 187, 224, 223, 225, 208, 0, 0,
	424, 0, 284, 0, 0, 288, 149, 0, 0, 293,
	442, 254, 150, 181, 175, 247, 227, 144, 189, 282,
	199, 206, 0, 0, 239, 262, 153, 308, 281, 172,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 463, 464, 0, 0, 0, 159, 425, 426, 427,
	428, 430, 445, 446, 447, 448, 460, 459, 458, 461,
	465, 468, 467, 469, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 132, 140,
	203, 0, 256, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 167, 0, 0, 0, 141, 148,
	154, 166, 173, 178, 185, 188, 192, 193, 194, 197,
	209, 211, 212, 213, 214, 230, 231, 234, 235, 237,
	238, 241, 242, 243, 245, 246, 252, 454, 258, 264,
	265, 266, 267, 268, 275, 276, 277, 278, 285, 300,
	301, 313, 314, 290, 0, 129, 0, 0, 422, 0,
	0, 0, 0, 0, 236, 134, 0, 0, 450, 452,
	0, 0, 0, 170, 0, 0, 0, 0, 0, 0,
	0, 169, 161, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 204, 0, 0, 466, 283, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1180, 0,
	1183, 0, 0, 0, 0, 0, 0, 471, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 431, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 307, 0, 0,
	0, 0, 251, 438, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 0, 0, 0, 0, 195, 470, 0,
	0, 0, 0, 0, 0, 0, 202, 0, 128, 0,
	0, 0, 233, 0, 0, 437, 131, 0, 0, 0,
	162, 0, 261, 0, 306, 440, 0, 260, 205, 299,
	0, 0, 305, 0, 457, 312, 316, 432, 0, 429,
	280, 171, 168, 0, 0, 0, 439, 250, 165, 198,
	0, 0, 0, 158, 0, 0, 0, 279, 296, 133,
	219, 297, 315, 146, 291, 220, 226, 155, 157, 156,
	142, 274, 295, 151, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 443, 441, 0, 0, 310, 444,
	270, 269, 0, 190, 0, 449, 423, 257, 451, 196,
	135, 0, 318, 145, 200, 292, 421, 180, 232, 164,
	0, 240, 0, 130, 253, 216, 217, 215, 218, 183,
	435, 453, 0, 255, 272, 294, 147, 286, 433, 434,
	436, 455, 263, 456, 462, 0, 210, 174, 177, 184,
	191, 0, 259, 287, 311, 0, 143, 136, 289, 304,
	152, 271, 273, 317, 0, 138, 0, 0, 0, 0,
	0, 0, 0, 137, 0, 0, 0, 0, 0, 0,
	182, 0, 302, 303, 163, 319, 0, 0, 139, 0,
	0, 229, 0, 228, 0, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 201, 176, 186, 248, 207, 249,
	187, 224, 223, 225, 208, 0, 0, 424, 0, 284,
	0, 0, 288, 149, 0, 0, 293, 442, 254, 150,
	181, 175, 247, 227, 144, 189, 282, 199, 206, 0,
	0, 239, 262, 153, 308, 281, 172, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 463, 464,
	0, 0, 0, 159, 425, 426, 427, 428, 430, 445,
	446, 447, 448, 460, 459, 458, 461, 465, 468, 467,
	469, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 132, 140, 203, 0, 256,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 167, 0, 0, 0, 141, 148, 154, 166, 173,
	178, 185, 188, 192, 193, 194, 197, 209, 211, 212,
	213, 214, 230, 231, 234, 235, 237, 238, 241, 242,
	243, 245, 246, 252, 454, 258, 264, 265, 266, 267,
	268, 275, 276, 277, 278, 285, 300, 301, 313, 314,
	290, 0, 129, 0, 0, 422, 0, 0, 0, 0,
	0, 236, 134, 0, 0, 450, 452, 0, 0, 0,
	170, 0, 0, 0, 0, 0, 0, 0, 169, 161,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 204, 0, 0, 466, 283, 221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 659, 0, 0, 0, 0,
	0, 0, 0, 0, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 431, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 307, 0, 0, 0, 0, 251,
	438, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 0, 0, 0, 195, 470, 0, 0, 0, 0,
	0, 0, 0, 202, 0, 128, 0, 0, 0, 233,
	0, 0, 437, 131, 0, 0, 0, 162, 0, 261,
	0, 306, 440, 0, 260, 205, 299, 0, 0, 305,
	0, 457, 312, 316, 432, 0, 429, 280, 171, 168,
	0, 0, 0, 439, 250, 165, 198, 0, 0, 0,
	158, 0, 0, 0, 279, 296, 133, 219, 297, 315,
	146, 291, 220, 226, 155, 157, 156, 142, 274, 295,
	151, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 443, 441, 0, 0, 310, 444, 270, 269, 0,
	190, 0, 449, 423, 257, 451, 196, 135, 0, 318,
	145, 200, 292, 421, 180, 232, 164, 0, 240, 0,
	130, 253, 216, 217, 215, 218, 183, 435, 453, 0,
	255, 272, 294, 147, 286, 433, 434, 436, 455, 263,
	456, 462, 0, 210, 174, 177, 184, 191, 0, 259,
	287, 311, 0, 143, 136, 289, 304, 152, 271, 273,
	317, 0, 138, 0, 0, 0, 0, 0, 0, 0,
	137, 0, 0, 0, 0, 0, 0, 182, 0, 302,
	303, 163, 319, 0, 0, 139, 0, 0, 229, 0,
	228, 0, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 201, 176, 186, 248, 207, 249, 187, 224, 223,
	225, 208, 0, 0, 424, 0, 284, 0, 0, 288,
	149, 0, 0, 293, 442, 254, 150, 181, 175, 247,
	227, 144, 189, 282, 199, 206, 0, 0, 239, 262,
	153, 308, 281, 172, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 463, 464, 0, 0, 0,
	159, 425, 426, 427, 428, 430, 445, 446, 447, 448,
	460, 459, 458, 461, 465, 468, 467, 469, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 132, 140, 203, 0, 256, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 309, 167, 0,
	0, 0, 141, 148, 154, 166, 173, 178, 185, 188,
	192, 193, 194, 197, 209, 211, 212, 213, 214, 230,
	231, 234, 235, 237, 238, 241, 242, 243, 245, 246,
	252, 454, 258, 264, 265, 266, 267, 268, 275, 276,
	277, 278, 285, 300, 301, 313, 314, 0, 0, 129,
	0, 0, 422, 389, 290, 383, 394, 377, 0, 134,
	0, 0, 450, 452, 0, 236, 0, 0, 400, 0,
	0, 0, 0, 0, 170, 0, 0, 384, 0, 0,
	0, 0, 169, 161, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 204, 0, 0, 0, 283,
	221, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	0, 397, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 307, 0,
	0, 0, 0, 251, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 376, 375, 378,
	0, 0, 0, 222, 0, 0, 0, 382, 195, 0,
	0, 0, 0, 0, 0, 0, 0, 202, 0, 128,
	0, 0, 0, 233, 386, 0, 0, 131, 390, 0,
	0, 162, 0, 261, 0, 306, 0, 0, 260, 205,
	299, 0, 393, 305, 0, 0, 312, 316, 0, 0,
	0, 280, 171, 168, 0, 0, 0, 0, 250, 165,
	198, 0, 0, 0, 158, 0, 0, 0, 279, 296,
	133, 219, 297, 315, 146, 291, 220, 226, 155, 157,
	156, 142, 274, 295, 151, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	0, 270, 269, 0, 190, 0, 0, 0, 257, 0,
	196, 135, 0, 318, 145, 200, 292, 0, 180, 232,
	164, 0, 240, 0, 130, 253, 216, 217, 215, 218,
	183, 0, 0, 0, 403, 272, 294, 147, 286, 379,
	380, 381, 387, 388, 391, 392, 395, 210, 174, 177,
	184, 191, 0, 259, 287, 311, 0, 143, 136, 289,
	304, 152, 271, 273, 317, 0, 138, 0, 0, 0,
	0, 0, 0, 0, 137, 0, 0, 0, 0, 0,
	0, 182, 0, 302, 303, 163, 319, 0, 0, 139,
	0, 0, 229, 0, 228, 0, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 201, 176, 186, 248, 207,
	249, 187, 224, 223, 225, 208, 0, 0, 0, 0,
	284, 0, 0, 288, 149, 0, 0, 293, 0, 254,
	150, 181, 175, 247, 227, 144, 189, 282, 199, 206,
	0, 0, 239, 262, 153, 308, 281, 172, 0, 0,
	0, 0, 0, 0, 389, 290, 383, 394, 377, 0,
	0, 0, 0, 0, 0, 0, 236, 0, 0, 369,
	0, 0, 0, 0, 159, 170, 0, 0, 384, 0,
	0, 0, 0, 169, 161, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 204, 0, 0, 0,
	283, 221, 0, 0, 244, 0, 132, 140, 203, 0,
	256, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	398, 0, 397, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 307,
	0, 309, 167, 0, 251, 0, 141, 148, 154, 166,
	173, 178, 185, 188, 192, 193, 194, 197, 209, 211,
	212, 213, 214, 230, 231, 234, 235, 237, 238, 241,
	242, 243, 245, 246, 252, 385, 258, 264, 265, 266,
	267, 268, 275, 276, 277, 278, 285, 300, 301, 313,
	314, 0, 0, 129, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 134, 0, 0, 0, 0, 376, 375,
	378, 0, 0, 0, 222, 0, 0, 0, 382, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 202, 0,
	128, 0, 0, 0, 233, 386, 0, 0, 131, 390,
	0, 0, 162, 0, 261, 0, 306, 0, 0, 260,
	205, 299, 0, 393, 305, 0, 0, 312, 316, 0,
	0, 0, 280, 171, 168, 0, 0, 0, 0, 250,
	165, 198, 0, 0, 0, 158, 0, 0, 0, 279,
	296, 133, 219, 297, 315, 146, 291, 220, 226, 155,
	157, 156, 142, 274, 295, 151, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 0, 270, 269, 0, 190, 0, 0, 0, 257,
	0, 196, 135, 0, 318, 145, 200, 292, 0, 180,
	232, 164, 0, 240, 0, 130, 253, 216, 217, 215,
	218, 183, 0, 0, 0, 372, 272, 294, 147, 286,
	379, 380, 381, 387, 388, 391, 392, 395, 210, 174,
	177, 184, 191, 0, 259, 287, 311, 0, 143, 136,
	289, 304, 152, 271, 273, 317, 0, 138, 0, 0,
	0, 0, 0, 0, 0, 137, 0, 0, 0, 0,
	0, 0, 182, 0, 302, 303, 163, 319, 0, 0,
	139, 0, 0, 229, 0, 228, 0, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 201, 176, 186, 248,
	207, 249, 187, 224, 223, 225, 208, 0, 0, 0,
	0, 284, 0, 0, 288, 149, 0, 0, 293, 0,
	254, 150, 181, 175, 247, 227, 144, 189, 282, 199,
	206, 0, 0, 239, 262, 153, 308, 281, 172, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 159, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 132, 140, 203,
	0, 256, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 167, 0, 0, 0, 141, 148, 154,
	166, 173, 178, 185, 188, 192, 193, 194, 197, 209,
	211, 212, 213, 214, 230, 231, 234, 235, 237, 238,
	241, 242, 243, 245, 246, 252, 385, 258, 264, 265,
	266, 267, 268, 275, 276, 277, 278, 285, 300, 301,
	313, 314, 290, 0, 129, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 134, 0, 0, 0, 0, 0,
	0, 0, 170, 0, 0, 0, 0, 0, 0, 0,
	169, 161, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 204, 0, 0, 0, 283, 221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 659, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 307, 0, 0, 0,
	0, 251, 0, 1193, 1192, 1202, 1203, 1195, 1196, 1197,
	1198, 1199, 1200, 1201, 1194, 0, 0, 1204, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 0, 0, 0, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 202, 0, 128, 0, 0,
	0, 233, 0, 0, 0, 131, 0, 0, 0, 162,
	0, 261, 0, 306, 0, 0, 260, 205, 299, 0,
	0, 305, 0, 0, 312, 316, 0, 0, 0, 280,
	171, 168, 0, 0, 0, 0, 250, 165, 198, 0,
	0, 0, 158, 0, 0, 0, 279, 296, 133, 219,
	297, 315, 146, 291, 220, 226, 155, 157, 156, 142,
	274, 295, 151, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 0, 270,
	269, 0, 190, 0, 0, 0, 257, 0, 196, 135,
	0, 318, 145, 200, 292, 0, 180, 232, 164, 0,
	240, 0, 130, 253, 216, 217, 215, 218, 183, 0,
	0, 0, 255, 272, 294, 147, 286, 0, 0, 0,
	0, 263, 0, 0, 0, 210, 174, 177, 184, 191,
	0, 259, 287, 311, 0, 143, 136, 289, 304, 152,
	271, 273, 317, 0, 138, 0, 0, 0, 0, 0,
	0, 0, 137, 0, 0, 0, 0, 0, 0, 182,
	0, 302, 303, 163, 319, 0, 0, 139, 0, 0,
	229, 0, 228, 0, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 201, 176, 186, 248, 207, 249, 187,
	224, 223, 225, 208, 0, 0, 0, 0, 284, 0,
	0, 288, 149, 0, 0, 293, 0, 254, 150, 181,
	175, 247, 227, 144, 189, 282, 199, 206, 0, 0,
	239, 262, 153, 308, 281, 172, 0, 0, 36, 290,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 170,
	0, 0, 159, 0, 0, 0, 0, 169, 161, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1984,
	204, 0, 0, 0, 283, 221, 0, 0, 0, 0,
	0, 0, 244, 0, 132, 140, 203, 0, 256, 179,
	77, 0, 0, 0, 1677, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 307, 0, 0, 0, 0, 251, 309,
	167, 0, 0, 0, 141, 148, 154, 166, 173, 178,
	185, 188, 192, 193, 194, 197, 209, 211, 212, 213,
	214, 230, 231, 234, 235, 237, 238, 241, 242, 243,
	245, 246, 252, 0, 258, 264, 265, 266, 267, 268,
	275, 276, 277, 278, 285, 300, 301, 313, 314, 0,
	0, 129, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 134, 0, 0, 0, 0, 0, 0, 222, 0,
	0, 0, 0, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 202, 0, 128, 0, 0, 0, 233, 0,
	0, 0, 131, 0, 0, 0, 162, 0, 261, 0,
	306, 0, 0, 260, 205, 299, 0, 0, 305, 0,
	0, 312, 316, 0, 0, 0, 280, 171, 168, 0,
	0, 0, 0, 250, 165, 198, 0, 0, 0, 158,
	0, 0, 0, 279, 296, 133, 219, 297, 315, 146,
	291, 220, 226, 155, 157, 156, 142, 274, 295, 151,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 0, 270, 269, 0, 190,
	0, 0, 0, 257, 0, 196, 135, 0, 318, 145,
	200, 292, 0, 180, 232, 164, 0, 240, 0, 130,
	253, 216, 217, 215, 218, 183, 0, 0, 0, 255,
	272, 294, 147, 286, 0, 0, 0, 0, 263, 0,
	0, 0, 210, 174, 177, 184, 191, 0, 259, 287,
	311, 0, 143, 136, 289, 304, 152, 271, 273, 317,
	0, 138, 0, 0, 0, 0, 0, 0, 0, 137,
	0, 0, 0, 0, 0, 0, 182, 0, 302, 303,
	163, 319, 0, 0, 139, 0, 0, 229, 0, 228,
	0, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	201, 176, 186, 248, 207, 249, 187, 224, 223, 225,
	208, 0, 0, 0, 0, 284, 0, 0, 288, 149,
	0, 0, 293, 0, 254, 150, 181, 175, 247, 227,
	144, 189, 282, 199, 206, 0, 0, 239, 262, 153,
	308, 281, 172, 290, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 236, 0, 0, 2973, 0, 0,
	0, 0, 0, 170, 2971, 0, 0, 0, 0, 159,
	0, 169, 161, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 204, 0, 0, 0, 283, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 1674, 244,
	0, 132, 140, 203, 75, 256, 179, 0, 398, 0,
	397, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 307, 0, 0,
	0, 0, 251, 0, 0, 0, 309, 167, 0, 0,
	0, 141, 148, 154, 166, 173, 178, 185, 188, 192,
	193, 194, 197, 209, 211, 212, 213, 214, 230, 231,
	234, 235, 237, 238, 241, 242, 243, 245, 246, 252,
	0, 258, 264, 265, 266, 267, 268, 275, 276, 277,
	278, 285, 300, 301, 313, 314, 0, 0, 129, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 134, 0,
	0, 0, 222, 0, 0, 0, 0, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 202, 0, 128, 0,
	0, 0, 233, 0, 0, 0, 131, 0, 0, 0,
	162, 0, 261, 0, 306, 0, 0, 260, 205, 299,
	0, 0, 305, 0, 0, 312, 316, 0, 0, 0,
	280, 171, 168, 0, 0, 0, 0, 250, 165, 198,
	0, 0, 0, 158, 0, 0, 0, 279, 296, 133,
	219, 297, 315, 146, 291, 220, 226, 155, 157, 156,
	142, 274, 295, 151, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 0,
	270, 269, 0, 190, 0, 2972, 0, 257, 0, 196,
	135, 0, 318, 145, 200, 292, 0, 180, 232, 164,
	0, 240, 0, 130, 253, 216, 217, 215, 218, 183,
	0, 0, 0, 255, 272, 294, 147, 286, 0, 0,
	0, 0, 263, 0, 0, 0, 210, 174, 177, 184,
	191, 0, 259, 287, 311, 0, 143, 136, 289, 304,
	152, 271, 273, 317, 0, 138, 0, 0, 0, 0,
	0, 0, 0, 137, 0, 0, 0, 0, 0, 0,
	182, 0, 302, 303, 163, 319, 0, 0, 139, 0,
	0, 229, 0, 228, 0, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 201, 176, 186, 248, 207, 249,
	187, 224, 223, 225, 208, 0, 0, 0, 0, 284,
	0, 0, 288, 149, 0, 0, 293, 0, 254, 150,
	181, 175, 247, 227, 144, 189, 282, 199, 206, 290,
	0, 239, 262, 153, 308, 281, 172, 0, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 170,
	0, 0, 0, 0, 0, 0, 0, 169, 161, 0,
	0, 0, 0, 159, 0, 0, 0, 0, 0, 0,
	204, 0, 0, 0, 283, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 659, 132, 140, 203, 0, 256,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2100, 307, 0, 0, 0, 0, 251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 167, 0, 0, 0, 141, 148, 154, 166, 173,
	178, 185, 188, 192, 193, 194, 197, 209, 211, 212,
	213, 214, 230, 231, 234, 235, 237, 238, 241, 242,
	243, 245, 246, 252, 0, 258, 264, 265, 266, 267,
	268, 275, 276, 277, 278, 285, 300, 301, 313, 314,
	0, 0, 129, 0, 0, 0, 0, 0, 222, 0,
	0, 0, 134, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 202, 0, 128, 0, 0, 0, 233, 0,
	0, 0, 131, 0, 0, 0, 162, 0, 261, 0,
	306, 0, 0, 260, 205, 299, 0, 0, 305, 0,
	0, 312, 316, 0, 0, 0, 280, 171, 168, 0,
	0, 0, 0, 250, 165, 198, 2101, 2102, 0, 158,
	0, 0, 0, 279, 296, 133, 219, 297, 315, 146,
	291, 220, 226, 155, 157, 156, 142, 274, 295, 151,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 0, 270, 269, 0, 190,
	0, 0, 0, 257, 0, 196, 135, 0, 318, 145,
	200, 292, 0, 180, 232, 164, 0, 240, 0, 130,
	253, 216, 217, 215, 218, 183, 0, 0, 0, 255,
	272, 294, 147, 286, 0, 0, 0, 0, 263, 0,
	0, 0, 210, 174, 177, 184, 191, 0, 259, 287,
	311, 0, 143, 136, 289, 304, 152, 271, 273, 317,
	0, 138, 0, 0, 0, 0, 0, 0, 0, 137,
	0, 0, 0, 0, 0, 0, 182, 0, 302, 303,
	163, 319, 0, 0, 139, 0, 0, 229, 0, 228,
	0, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	201, 176, 186, 248, 207, 249, 187, 224, 223, 225,
	208, 0, 0, 0, 0, 284, 0, 0, 288, 149,
	0, 0, 293, 0, 254, 150, 181, 175, 247, 227,
	144, 189, 282, 199, 206, 290, 0, 239, 262, 153,
	308, 281, 172, 0, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 170, 0, 0, 0, 0,
	0, 0, 0, 169, 161, 0, 0, 0, 0, 159,
	0, 0, 0, 0, 0, 0, 204, 0, 0, 0,
	283, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 77, 0, 0, 244,
	1677, 132, 140, 203, 0, 256, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 307,
	0, 0, 0, 0, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 167, 0, 0,
	0, 141, 148, 154, 166, 173, 178, 185, 188, 192,
	193, 194, 197, 209, 211, 212, 213, 214, 230, 231,
	234, 235, 237, 238, 241, 242, 243, 245, 246, 252,
	0, 258, 264, 265, 266, 267, 268, 275, 276, 277,
	278, 285, 300, 301, 313, 314, 0, 0, 129, 0,
	0, 0, 0, 0, 222, 0, 0, 0, 134, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 202, 0,
	128, 0, 0, 0, 233, 0, 0, 0, 131, 0,
	0, 0, 162, 0, 261, 0, 306, 0, 0, 260,
	205, 299, 0, 0, 305, 0, 0, 312, 316, 0,
	0, 0, 280, 171, 168, 0, 0, 0, 0, 250,
	165, 198, 0, 0, 0, 158, 0, 0, 0, 279,
	296, 133, 219, 297, 315, 146, 291, 220, 226, 155,
	157, 156, 142, 274, 295, 151, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 0, 270, 269, 0, 190, 0, 0, 0, 257,
	0, 196, 135, 0, 318, 145, 200, 292, 0, 180,
	232, 164, 0, 240, 0, 130, 253, 216, 217, 215,
	218, 183, 0, 0, 0, 255, 272, 294, 147, 286,
	0, 0, 0, 0, 263, 0, 0, 0, 210, 174,
	177, 184, 191, 0, 259, 287, 311, 0, 143, 136,
	289, 304, 152, 271, 273, 317, 0, 138, 0, 0,
	0, 0, 0, 0, 0, 137, 0, 0, 0, 0,
	0, 0, 182, 0, 302, 303, 163, 319, 0, 0,
	139, 0, 0, 229, 0, 228, 0, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 201, 176, 186, 248,
	207, 249, 187, 224, 223, 225, 208, 0, 0, 0,
	0, 284, 0, 0, 288, 149, 0, 0, 293, 0,
	254, 150, 181, 175, 247, 227, 144, 189, 282, 199,
	206, 0, 0, 239, 262, 153, 308, 281, 172, 290,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 170,
	0, 0, 0, 0, 0, 159, 0, 169, 161, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 0, 0, 0, 283, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 1674, 244, 0, 132, 140, 203,
	0, 256, 179, 0, 398, 0, 397, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 307, 0, 0, 0, 0, 251, 0,
	0, 0, 309, 167, 0, 0, 0, 141, 148, 154,
	166, 173, 178, 185, 188, 192, 193, 194, 197, 209,
	211, 212, 213, 214, 230, 231, 234, 235, 237, 238,
	241, 242, 243, 245, 246, 252, 0, 258, 264, 265,
	266, 267, 268, 275, 276, 277, 278, 285, 300, 301,
	313, 314, 0, 0, 129, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 134, 0, 0, 0, 222, 0,
	0, 0, 0, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 202, 0, 128, 0, 0, 0, 233, 0,
	0, 0, 131, 0, 0, 0, 162, 0, 261, 0,
	306, 0, 0, 260, 205, 299, 0, 0, 305, 0,
	0, 312, 316, 0, 0, 0, 280, 171, 168, 0,
	0, 0, 0, 250, 165, 198, 0, 0, 0, 158,
	0, 0, 0, 279, 296, 133, 219, 297, 315, 146,
	291, 220, 226, 155, 157, 156, 142, 274, 295, 151,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 0, 270, 269, 0, 190,
	0, 0, 0, 257, 0, 196, 135, 0, 318, 145,
	200, 292, 0, 180, 232, 164, 0, 240, 0, 130,
	253, 216, 217, 215, 218, 183, 0, 0, 0, 255,
	272, 294, 147, 286, 0, 0, 0, 0, 263, 0,
	0, 0, 210, 174, 177, 184, 191, 0, 259, 287,
	311, 0, 143, 136, 289, 304, 152, 271, 273, 317,
	0, 138, 0, 0, 0, 0, 0, 0, 0, 137,
	0, 0, 0, 0, 0, 0, 182, 0, 302, 303,
	163, 319, 0, 0, 139, 0, 0, 229, 0, 228,
	0, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	201, 176, 186, 248, 207, 249, 187, 224, 223, 225,
	208, 0, 0, 0, 0, 284, 0, 0, 288, 149,
	0, 0, 293, 0, 254, 150, 181, 175, 247, 227,
	144, 189, 282, 199, 206, 0, 0, 239, 262, 153,
	308, 281, 172, 290, 0, 0, 1458, 0, 0, 0,
	0, 0, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 170, 1315, 0, 0, 0, 0, 159,
	0, 169, 161, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 204, 0, 0, 0, 283, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 132, 140, 203, 0, 256, 179, 0, 659, 0,
	1314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 307, 0, 0,
	0, 0, 251, 0, 0, 0, 309, 167, 0, 0,
	0, 141, 148, 154, 166, 173, 178, 185, 188, 192,
	193, 194, 197, 209, 211, 212, 213, 214, 230, 231,
	234, 235, 237, 238, 241, 242, 243, 245, 246, 252,
	0, 258, 264, 265, 266, 267, 268, 275, 276, 277,
	278, 285, 300, 301, 313, 314, 0, 0, 129, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 134, 0,
	0, 0, 222, 0, 0, 0, 0, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 202, 0, 128, 0,
	0, 0, 233, 0, 0, 0, 131, 0, 0, 0,
	162, 0, 261, 0, 306, 0, 0, 260, 205, 299,
	0, 0, 305, 0, 0, 312, 316, 0, 0, 0,
	280, 171, 168, 0, 0, 0, 0, 250, 165, 198,
	0, 0, 0, 158, 0, 0, 0, 279, 296, 133,
	219, 297, 315, 146, 291, 220, 226, 155, 157, 156,
	142, 274, 295, 151, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 0,
	270, 269, 0, 190, 0, 0, 0, 257, 0, 196,
	135, 0, 318, 145, 200, 292, 0, 180, 232, 164,
	0, 240, 0, 130, 253, 216, 217, 215, 218, 183,
	0, 0, 0, 255, 272, 294, 147, 286, 0, 0,
	0, 0, 263, 0, 0, 0, 210, 174, 177, 184,
	191, 0, 259, 287, 311, 0, 143, 136, 289, 304,
	152, 271, 273, 317, 0, 138, 0, 0, 0, 0,
	0, 0, 0, 137, 0, 0, 0, 0, 0, 0,
	182, 0, 302, 303, 163, 319, 0, 0, 139, 0,
	0, 229, 0, 228, 0, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 201, 176, 186, 248, 207, 249,
	187, 224, 223, 225, 208, 0, 0, 0, 0, 284,
	0, 0, 288, 149, 0, 0, 293, 0, 254, 150,
	181, 175, 247, 227, 144, 189, 282, 199, 206, 0,
	0, 239, 262, 153, 308, 281, 172, 290, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 170, 0, 0,
	0, 0, 0, 159, 0, 169, 161, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 204, 0,
	0, 0, 283, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 132, 140, 203, 0, 256,
	179, 0, 398, 0, 397, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 307, 0, 0, 0, 0, 251, 0, 0, 0,
	309, 167, 0, 0, 0, 141, 148, 154, 166, 173,
	178, 185, 188, 192, 193, 194, 197, 209, 211, 212,
	213, 214, 230, 231, 234, 235, 237, 238, 241, 242,
	243, 245, 246, 252, 0, 258, 264, 265, 266, 267,
	268, 275, 276, 277, 278, 285, 300, 301, 313, 314,
	0, 0, 129, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 134, 0, 0, 0, 222, 0, 0, 0,
	0, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	202, 0, 128, 0, 0, 0, 233, 0, 0, 0,
	131, 0, 0, 0, 162, 0, 261, 0, 306, 0,
	0, 260, 205, 299, 0, 0, 305, 0, 0, 312,
	316, 0, 0, 0, 280, 171, 168, 0, 0, 0,
	0, 250, 165, 198, 0, 0, 0, 158, 0, 0,
	0, 279, 296, 133, 219, 297, 315, 146, 291, 220,
	226, 155, 157, 156, 142, 274, 295, 151, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 0, 270, 269, 0, 190, 0, 0,
	0, 257, 0, 196, 135, 0, 318, 145, 200, 292,
	0, 180, 232, 164, 0, 240, 0, 130, 253, 216,
	217, 215, 218, 183, 0, 0, 0, 255, 272, 294,
	147, 286, 0, 0, 0, 0, 263, 0, 0, 0,
	210, 174, 177, 184, 191, 0, 259, 287, 311, 0,
	143, 136, 289, 304, 152, 271, 273, 317, 0, 138,
	0, 0, 0, 0, 0, 0, 0, 137, 0, 0,
	0, 0, 0, 0, 182, 0, 302, 303, 163, 319,
	0, 0, 139, 0, 0, 229, 0, 228, 0, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 201, 176,
	186, 248, 207, 249, 187, 224, 223, 225, 208, 0,
	0, 0, 0, 284, 0, 0, 288, 149, 0, 0,
	293, 0, 254, 150, 181, 175, 247, 227, 144, 189,
	282, 199, 206, 290, 0, 239, 262, 153, 308, 281,
	172, 0, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 170, 0, 0, 0, 0, 0, 0,
	0, 169, 161, 0, 0, 0, 0, 159, 0, 0,
	0, 0, 0, 0, 204, 0, 0, 0, 283, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 659, 132,
	140, 203, 0, 256, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 307, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 0, 0, 0,
	2376, 0, 0, 0, 309, 167, 0, 0, 0, 141,
	148, 154, 166, 173, 178, 185, 188, 192, 193, 194,
	197, 209, 211, 212, 213, 214, 230, 231, 234, 235,
	237, 238, 241, 242, 243, 245, 246, 252, 0, 258,
	264, 265, 266, 267, 268, 275, 276, 277, 278, 285,
	300, 301, 313, 314, 0, 0, 129, 0, 0, 0,
	0, 0, 222, 0, 0, 0, 134, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 202, 0, 128, 0,
	0, 0, 233, 0, 0, 0, 131, 0, 0, 0,
	162, 0, 261, 0, 306, 0, 0, 260, 205, 299,
	0, 0, 305, 0, 0, 312, 316, 0, 0, 0,
	280, 171, 168, 0, 0, 0, 0, 250, 165, 198,
	0, 0, 0, 158, 0, 0, 0, 279, 296, 133,
	219, 297, 315, 146, 291, 220, 226, 155, 157, 156,
	142, 274, 295, 151, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 0,
	270, 269, 0, 190, 0, 0, 0, 257, 0, 196,
	135, 0, 318, 145, 200, 292, 0, 180, 232, 164,
	0, 240, 0, 130, 253, 216, 217, 215, 218, 183,
	0, 0, 0, 255, 272, 294, 147, 286, 0, 0,
	0, 0, 263, 0, 0, 0, 210, 174, 177, 184,
	191, 0, 259, 287, 311, 0, 143, 136, 289, 304,
	152, 271, 273, 317, 0, 138, 0, 0, 0, 0,
	0, 0, 0, 137, 0, 0, 0, 0, 0, 0,
	182, 0, 302, 303, 163, 319, 0, 0, 139, 0,
	0, 229, 0, 228, 0, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 201, 176, 186, 248, 207, 249,
	187, 224, 223, 225, 208, 0, 0, 0, 0, 284,
	0, 0, 288, 149, 0, 0, 293, 0, 254, 150,
	181, 175, 247, 227, 144, 189, 282, 199, 206, 290,
	0, 239, 262, 153, 308, 281, 172, 0, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 170,
	0, 0, 0, 0, 0, 0, 0, 169, 161, 0,
	0, 0, 0, 159, 0, 0, 0, 0, 0, 0,
	204, 0, 0, 0, 283, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	77, 0, 0, 244, 1677, 132, 140, 203, 0, 256,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 307, 0, 0, 0, 0, 251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 167, 0, 0, 0, 141, 148, 154, 166, 173,
	178, 185, 188, 192, 193, 194, 197, 209, 211, 212,
	213, 214, 230, 231, 234, 235, 237, 238, 241, 242,
	243, 245, 246, 252, 0, 258, 264, 265, 266, 267,
	268, 275, 276, 277, 278, 285, 300, 301, 313, 314,
	0, 0, 129, 0, 0, 0, 0, 0, 222, 0,
	0, 0, 134, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 202, 0, 128, 0, 0, 0, 233, 0,
	0, 0, 131, 0, 0, 0, 162, 0, 261, 0,
	306, 0, 0, 260, 205, 299, 0, 0, 305, 0,
	0, 312, 316, 0, 0, 0, 280, 171, 168, 0,
	0, 0, 0, 250, 165, 198, 0, 0, 0, 158,
	0, 0, 0, 279, 296, 133, 219, 297, 315, 146,
	291, 220, 226, 155, 157, 156, 142, 274, 295, 151,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 0, 270, 269, 0, 190,
	0, 0, 0, 257, 0, 196, 135, 0, 318, 145,
	200, 292, 0, 180, 232, 164, 0, 240, 0, 130,
	253, 216, 217, 215, 218, 183, 0, 0, 0, 255,
	272, 294, 147, 286, 0, 0, 0, 0, 263, 0,
	0, 0, 210, 174, 177, 184, 191, 0, 259, 287,
	311, 0, 143, 136, 289, 304, 152, 271, 273, 317,
	0, 138, 0, 0, 0, 0, 0, 0, 0, 137,
	0, 0, 0, 0, 0, 0, 182, 0, 302, 303,
	163, 319, 0, 0, 139, 0, 0, 229, 0, 228,
	0, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	201, 176, 186, 248, 207, 249, 187, 224, 223, 225,
	208, 0, 0, 0, 0, 284, 0, 0, 288, 149,
	0, 0, 293, 0, 254, 150, 181, 175, 247, 227,
	144, 189, 282, 199, 206, 290, 0, 239, 262, 153,
	308, 281, 172, 0, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 170, 0, 0, 0, 0,
	0, 0, 0, 169, 161, 0, 0, 0, 0, 159,
	0, 0, 0, 0, 0, 0, 204, 0, 0, 0,
	283, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 77, 0, 0, 244,
	659, 132, 140, 203, 0, 256, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 307,
	0, 0, 0, 0, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 167, 0, 0,
	0, 141, 148, 154, 166, 173, 178, 185, 188, 192,
	193, 194, 197, 209, 211, 212, 213, 214, 230, 231,
	234, 235, 237, 238, 241, 242, 243, 245, 246, 252,
	0, 258, 264, 265, 266, 267, 268, 275, 276, 277,
	278, 285, 300, 301, 313, 314, 0, 0, 129, 0,
	0, 0, 0, 0, 222, 0, 0, 0, 134, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 202, 0,
	128, 0, 0, 0, 233, 0, 0, 0, 131, 0,
	0, 0, 162, 0, 261, 0, 306, 0, 0, 260,
	205, 299, 0, 0, 305, 0, 0, 312, 316, 0,
	0, 0, 280, 171, 168, 0, 0, 0, 0, 250,
	165, 198, 0, 0, 0, 158, 0, 0, 0, 279,
	296, 133, 219, 297, 315, 146, 291, 220, 226, 155,
	157, 156, 142, 274, 295, 151, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 0, 270, 269, 0, 190, 0, 0, 0, 257,
	0, 196, 135, 0, 318, 145, 200, 292, 0, 180,
	232, 164, 0, 240, 0, 130, 253, 216, 217, 215,
	218, 183, 0, 0, 0, 255, 272, 294, 147, 286,
	0, 0, 0, 0, 263, 0, 0, 0, 210, 174,
	177, 184, 191, 0, 259, 287, 311, 0, 143, 136,
	289, 304, 152, 271, 273, 317, 0, 138, 0, 0,
	0, 0, 0, 0, 0, 137, 0, 0, 0, 0,
	0, 0, 182, 0, 302, 303, 163, 319, 0, 0,
	139, 0, 0, 229, 0, 228, 0, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 201, 176, 186, 248,
	207, 249, 187, 224, 223, 225, 208, 0, 0, 0,
	0, 284, 0, 0, 288, 149, 0, 0, 293, 0,
	254, 150, 181, 175, 247, 227, 144, 189, 282, 199,
	206, 290, 0, 239, 262, 153, 308, 281, 172, 0,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 170, 0, 0, 0, 0, 0, 0, 1872, 1873,
	161, 0, 0, 0, 0, 159, 0, 0, 0, 0,
	0, 0, 204, 0, 0, 0, 283, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 659, 132, 140, 203,
	0, 256, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 307, 0, 0, 0, 0,
	251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 167, 0, 0, 0, 141, 148, 154,
	166, 173, 178, 185, 188, 192, 193, 194, 197, 209,
	211, 212, 213, 214, 230, 231, 234, 235, 237, 238,
	241, 242, 243, 245, 246, 252, 0, 258, 264, 265,
	266, 267, 268, 275, 276, 277, 278, 285, 300, 301,
	313, 314, 0, 0, 129, 0, 0, 0, 0, 0,
	222, 0, 0, 0, 134, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 202, 0, 128, 0, 0, 0,
	233, 0, 0, 0, 131, 0, 0, 0, 162, 0,
	261, 0, 306, 0, 0, 260, 205, 299, 0, 0,
	305, 0, 0, 312, 316, 0, 0, 0, 280, 171,
	168, 0, 0, 0, 0, 250, 165, 198, 0, 0,
	0, 158, 0, 0, 0, 279, 296, 133, 219, 297,
	315, 146, 291, 220, 226, 155, 157, 156, 142, 274,
	295, 151, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 0, 270, 269,
	0, 190, 0, 0, 0, 257, 0, 196, 135, 0,
	318, 145, 200, 292, 0, 180, 232, 164, 0, 240,
	0, 130, 253, 216, 217, 215, 218, 183, 0, 0,
	0, 255, 272, 294, 147, 286, 0, 0, 0, 0,
	263, 0, 0, 0, 210, 174, 177, 184, 191, 0,
	259, 287, 311, 0, 143, 136, 289, 304, 152, 271,
	273, 317, 0, 138, 0, 0, 0, 0, 0, 0,
	0, 137, 0, 0, 0, 0, 0, 0, 182, 0,
	302, 303, 163, 319, 0, 0, 139, 0, 0, 229,
	0, 228, 0, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 201, 176, 186, 248, 207, 249, 187, 224,
	223, 225, 208, 0, 0, 0, 0, 284, 0, 0,
	288, 149, 0, 0, 293, 0, 254, 150, 181, 175,
	247, 227, 144, 189, 282, 199, 206, 290, 0, 239,
	262, 153, 308, 281, 172, 0, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 170, 0, 0,
	0, 0, 0, 0, 0, 169, 161, 0, 0, 0,
	0, 159, 0, 0, 0, 0, 0, 0, 204, 0,
	0, 0, 283, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 659, 132, 140, 203, 0, 256, 179, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 307, 0, 0, 0, 0, 251, 0, 0, 0,
	0, 0, 0, 0, 1835, 0, 0, 0, 309, 167,
	0, 0, 0, 141, 148, 154, 166, 173, 178, 185,
	188, 192, 193, 194, 197, 209, 211, 212, 213, 214,
	230, 231, 234, 235, 237, 238, 241, 242, 243, 245,
	246, 252, 0, 258, 264, 265, 266, 267, 268, 275,
	276, 277, 278, 285, 300, 301, 313, 314, 0, 0,
	129, 0, 0, 0, 0, 0, 222, 0, 0, 0,
	134, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	202, 0, 128, 0, 0, 0, 233, 0, 0, 0,
	131, 0, 0, 0, 162, 0, 261, 0, 306, 0,
	0, 260, 205, 299, 0, 0, 305, 0, 0, 312,
	316, 0, 0, 0, 280, 171, 168, 0, 0, 0,
	0, 250, 165, 198, 0, 0, 0, 158, 0, 0,
	0, 279, 296, 133, 219, 297, 315, 146, 291, 220,
	226, 155, 157, 156, 142, 274, 295, 151, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 0, 270, 269, 0, 190, 0, 0,
	0, 257, 0, 196, 135, 0, 318, 145, 200, 292,
	0, 180, 232, 164, 0, 240, 0, 130, 253, 216,
	217, 215, 218, 183, 0, 0, 0, 255, 272, 294,
	147, 286, 0, 0, 0, 0, 263, 0, 0, 0,
	210, 174, 177, 184, 191, 0, 259, 287, 311, 0,
	143, 136, 289, 304, 152, 271, 273, 317, 0, 138,
	0, 0, 0, 0, 0, 0, 0, 137, 0, 0,
	0, 0, 0, 0, 182, 0, 302, 303, 163, 319,
	0, 0, 139, 0, 0, 229, 0, 228, 0, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 201, 176,
	186, 248, 207, 249, 187, 224, 223, 225, 208, 0,
	0, 0, 0, 284, 0, 0, 288, 149, 0, 0,
	293, 0, 254, 150, 181, 175, 247, 227, 144, 189,
	282, 199, 206, 290, 0, 239, 262, 153, 308, 281,
	172, 0, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 170, 0, 0, 0, 0, 0, 0,
	0, 169, 161, 0, 0, 0, 0, 159, 0, 0,
	0, 0, 0, 0, 204, 0, 0, 0, 283, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 490, 132,
	140, 203, 0, 256, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 307, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 167, 0, 0, 0, 141,
	148, 154, 166, 173, 178, 185, 188, 192, 193, 194,
	197, 209, 211, 212, 213, 214, 230, 231, 234, 235,
	237, 238, 241, 242, 243, 245, 246, 252, 0, 258,
	264, 265, 266, 267, 268, 275, 276, 277, 278, 285,
	300, 301, 313, 314, 0, 0, 129, 0, 0, 0,
	0, 0, 222, 0, 0, 0, 134, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 202, 0, 128, 0,
	0, 0, 233, 0, 0, 0, 131, 0, 0, 0,
	162, 0, 261, 0, 306, 0, 0, 260, 205, 299,
	0, 0, 305, 0, 0, 312, 316, 0, 0, 0,
	280, 171, 168, 0, 0, 0, 0, 250, 165, 198,
	0, 0, 0, 158, 0, 0, 0, 279, 296, 133,
	219, 297, 315, 146, 291, 220, 226, 155, 157, 156,
	142, 274, 295, 151, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 0,
	270, 269, 0, 190, 0, 0, 0, 257, 0, 196,
	135, 0, 318, 145, 200, 292, 0, 180, 232, 164,
	0, 240, 0, 130, 253, 216, 217, 215, 218, 183,
	0, 0, 0, 255, 272, 294, 147, 286, 0, 0,
	0, 0, 263, 0, 0, 0, 210, 174, 177, 184,
	191, 0, 259, 287, 311, 0, 143, 136, 289, 304,
	152, 271, 273, 317, 0, 138, 0, 0, 0, 0,
	0, 0, 0, 137, 0, 0, 0, 0, 0, 0,
	182, 0, 302, 303, 163, 319, 0, 0, 139, 642,
	0, 229, 0, 228, 0, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 201, 176, 186, 248, 207, 249,
	187, 224, 223, 225, 638, 0, 0, 0, 0, 284,
	0, 0, 288, 149, 0, 0, 293, 0, 254, 150,
	181, 175, 247, 643, 641, 632, 633, 199, 206, 290,
	0, 239, 262, 153, 308, 281, 172, 0, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 170,
	0, 0, 0, 0, 0, 0, 0, 169, 161, 0,
	0, 0, 0, 159, 0, 0, 0, 0, 0, 0,
	204, 0, 0, 0, 283, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 126, 132, 140, 203, 0, 256,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 1663,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 307, 0, 0, 0, 0, 251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 167, 0, 0, 0, 141, 148, 154, 166, 173,
	178, 185, 188, 192, 193, 194, 197, 209, 211, 212,
	213, 214, 230, 231, 234, 235, 237, 238, 241, 242,
	243, 639, 640, 252, 0, 258, 264, 265, 266, 267,
	268, 275, 276, 277, 278, 285, 300, 301, 313, 314,
	0, 0, 129, 0, 0, 0, 0, 0, 222, 0,
	0, 0, 134, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 202, 0, 128, 0, 0, 0, 233, 0,
	0, 0, 131, 0, 0, 0, 162, 0, 261, 0,
	306, 0, 0, 260, 205, 299, 0, 0, 305, 0,
	0, 312, 316, 0, 0, 0, 280, 171, 168, 0,
	0, 0, 0, 250, 165, 198, 0, 0, 0, 158,
	0, 0, 0, 279, 296, 133, 219, 297, 315, 146,
	291, 220, 226, 155, 157, 156, 142, 274, 295, 151,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 0, 270, 269, 0, 190,
	0, 0, 0, 257, 0, 196, 135, 0, 318, 145,
	200, 292, 0, 180, 232, 164, 0, 240, 0, 130,
	253, 216, 217, 215, 218, 183, 0, 0, 0, 255,
	272, 294, 147, 286, 0, 0, 0, 0, 263, 0,
	0, 0, 210, 174, 177, 184, 191, 0, 259, 287,
	311, 0, 143, 136, 289, 304, 152, 271, 273, 317,
	0, 138, 0, 0, 0, 0, 0, 0, 0, 137,
	0, 0, 0, 0, 0, 0, 182, 0, 302, 303,
	163, 319, 0, 0, 139, 0, 0, 229, 0, 228,
	0, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	201, 176, 186, 248, 207, 249, 187, 224, 223, 225,
	208, 0, 0, 0, 0, 284, 0, 0, 288, 149,
	0, 0, 293, 0, 254, 150, 181, 175, 247, 227,
	144, 189, 282, 199, 206, 0, 0, 239, 262, 153,
	308, 281, 172, 290, 0, 0, 0, 1299, 0, 0,
	0, 0, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 170, 0, 0, 0, 0, 0, 159,
	0, 169, 161, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 204, 0, 0, 0, 283, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 132, 140, 203, 0, 256, 179, 0, 126, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 307, 0, 0,
	0, 0, 251, 0, 0, 0, 309, 167, 0, 0,
	0, 141, 148, 154, 166, 173, 178, 185, 188, 192,
	193, 194, 197, 209, 211, 212, 213, 214, 230, 231,
	234, 235, 237, 238, 241, 242, 243, 245, 246, 252,
	0, 258, 264, 265, 266, 267, 268, 275, 276, 277,
	278, 285, 300, 301, 313, 314, 0, 0, 129, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 134, 0,
	0, 0, 222, 0, 0, 0, 0, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 202, 0, 128, 0,
	0, 0, 233, 0, 0, 0, 131, 0, 0, 0,
	162, 0, 261, 0, 306, 0, 0, 260, 205, 299,
	0, 0, 305, 0, 0, 312, 316, 0, 0, 0,
	280, 171, 168, 0, 0, 0, 0, 250, 165, 198,
	0, 0, 0, 158, 0, 0, 0, 279, 296, 133,
	219, 297, 315, 146, 291, 220, 226, 155, 157, 156,
	142, 274, 295, 151, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 0,
	270, 269, 0, 190, 0, 0, 0, 257, 0, 196,
	135, 0, 318, 145, 200, 292, 0, 180, 232, 164,
	0, 240, 0, 130, 253, 216, 217, 215, 218, 183,
	0, 0, 0, 255, 272, 294, 147, 286, 0, 0,
	0, 0, 263, 0, 0, 0, 210, 174, 177, 184,
	191, 0, 259, 287, 311, 0, 143, 136, 289, 304,
	152, 271, 273, 317, 0, 138, 0, 0, 0, 0,
	0, 0, 0, 137, 0, 0, 0, 0, 0, 0,
	182, 0, 302, 303, 163, 319, 0, 0, 139, 0,
	0, 229, 0, 228, 0, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 201, 176, 186, 248, 207, 249,
	187, 224, 223, 225, 208, 0, 0, 0, 0, 284,
	0, 0, 288, 149, 0, 0, 293, 0, 254, 150,
	181, 175, 247, 227, 144, 189, 282, 199, 206, 290,
	0, 239, 262, 153, 308, 281, 172, 0, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 170,
	0, 0, 0, 0, 0, 0, 0, 169, 161, 0,
	0, 0, 0, 159, 0, 0, 0, 0, 0, 0,
	204, 0, 0, 0, 283, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 490, 132, 140, 203, 0, 256,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 307, 0, 0, 0, 0, 251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 167, 0, 0, 0, 141, 148, 154, 166, 173,
	178, 185, 188, 192, 193, 194, 197, 209, 211, 212,
	213, 214, 230, 231, 234, 235, 237, 238, 241, 242,
	243, 245, 246, 252, 0, 258, 264, 265, 266, 267,
	268, 275, 276, 277, 278, 285, 300, 301, 313, 314,
	0, 0, 129, 0, 0, 0, 0, 0, 222, 0,
	0, 0, 134, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 202, 0, 128, 0, 0, 0, 233, 0,
	0, 0, 131, 0, 0, 0, 162, 0, 261, 0,
	306, 0, 0, 260, 205, 299, 0, 0, 305, 0,
	0, 312, 316, 0, 0, 0, 280, 171, 168, 0,
	0, 0, 0, 250, 165, 198, 0, 0, 0, 158,
	0, 0, 0, 279, 296, 133, 219, 297, 315, 146,
	291, 220, 226, 155, 157, 156, 142, 274, 295, 151,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 0, 270, 269, 0, 190,
	0, 0, 0, 257, 0, 196, 135, 0, 318, 145,
	200, 292, 0, 180, 232, 164, 0, 240, 0, 130,
	253, 216, 217, 215, 218, 183, 0, 0, 0, 255,
	272, 294, 147, 286, 0, 0, 0, 0, 263, 0,
	0, 0, 210, 174, 177, 184, 191, 0, 259, 287,
	311, 0, 143, 136, 289, 629, 152, 271, 273, 317,
	0, 138, 0, 0, 0, 0, 0, 0, 0, 137,
	0, 0, 0, 0, 0, 0, 182, 0, 302, 303,
	163, 319, 0, 0, 139, 642, 0, 229, 0, 228,
	0, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	201, 176, 186, 248, 207, 249, 187, 224, 223, 225,
	638, 0, 0, 0, 0, 284, 0, 0, 288, 149,
	0, 0, 293, 0, 254, 150, 181, 175, 247, 643,
	641, 632, 633, 199, 206, 290, 0, 239, 262, 153,
	308, 281, 172, 0, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 170, 0, 0, 0, 0,
	0, 0, 0, 169, 161, 0, 0, 0, 0, 159,
	0, 0, 0, 0, 0, 0, 204, 0, 0, 0,
	283, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	126, 132, 140, 203, 0, 256, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 307,
	0, 0, 0, 0, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 167, 0, 0,
	0, 141, 148, 154, 166, 173, 178, 185, 188, 192,
	193, 194, 197, 209, 211, 212, 213, 214, 230, 231,
	234, 235, 237, 238, 241, 242, 243, 639, 640, 252,
	0, 258, 264, 265, 266, 267, 268, 275, 276, 277,
	278, 285, 300, 301, 313, 314, 0, 0, 129, 0,
	0, 0, 0, 0, 222, 0, 0, 123, 134, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 202, 0,
	128, 0, 0, 0, 233, 0, 0, 0, 131, 0,
	0, 0, 162, 0, 261, 0, 306, 0, 0, 260,
	205, 299, 0, 0, 305, 0, 0, 312, 316, 0,
	0, 0, 280, 171, 168, 0, 0, 0, 0, 250,
	165, 198, 0, 0, 0, 158, 0, 0, 0, 279,
	296, 133, 219, 297, 315, 146, 291, 220, 226, 155,
	157, 156, 142, 274, 295, 151, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 0, 270, 269, 0, 190, 0, 0, 0, 257,
	0, 196, 135, 0, 318, 145, 200, 292, 0, 180,
	232, 164, 0, 240, 0, 130, 253, 216, 217, 215,
	218, 183, 0, 0, 0, 255, 272, 294, 147, 286,
	0, 0, 0, 0, 263, 0, 0, 0, 210, 174,
	177, 184, 191, 0, 259, 287, 311, 0, 143, 136,
	289, 304, 152, 271, 273, 317, 0, 138, 0, 0,
	0, 0, 0, 0, 0, 137, 0, 0, 0, 0,
	0, 0, 182, 0, 302, 303, 163, 319, 0, 0,
	139, 0, 0, 229, 0, 228, 0, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 201, 176, 186, 248,
	207, 249, 187, 224, 223, 225, 208, 0, 0, 0,
	0, 284, 0, 0, 288, 149, 0, 0, 293, 0,
	254, 150, 181, 175, 247, 227, 144, 189, 282, 199,
	206, 290, 0, 239, 262, 153, 308, 281, 172, 0,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 170, 0, 0, 0, 0, 0, 0, 0, 169,
	161, 0, 0, 0, 0, 159, 0, 0, 0, 0,
	0, 0, 204, 0, 0, 0, 283, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 659, 132, 140, 203,
	0, 256, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 307, 0, 0, 0, 0,
	251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 167, 0, 0, 0, 141, 148, 154,
	166, 173, 178, 185, 188, 192, 193, 194, 197, 209,
	211, 212, 213, 214, 230, 231, 234, 235, 237, 238,
	241, 242, 243, 245, 246, 252, 0, 258, 264, 265,
	266, 267, 268, 275, 276, 277, 278, 285, 300, 301,
	313, 314, 0, 0, 129, 0, 0, 0, 0, 0,
	222, 0, 0, 0, 134, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 202, 0, 128, 0, 0, 0,
	233, 0, 0, 0, 131, 0, 0, 0, 162, 0,
	261, 0, 306, 0, 0, 260, 205, 299, 0, 0,
	305, 0, 0, 312, 316, 0, 0, 0, 280, 171,
	168, 0, 0, 0, 0, 250, 165, 198, 0, 0,
	0, 158, 0, 0, 0, 279, 296, 133, 219, 297,
	315, 146, 291, 220, 226, 155, 157, 156, 142, 274,
	295, 151, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 0, 270, 269,
	0, 190, 0, 0, 0, 257, 0, 196, 135, 0,
	318, 145, 200, 292, 0, 180, 232, 164, 0, 240,
	0, 130, 253, 216, 217, 215, 218, 183, 0, 0,
	0, 255, 272, 294, 147, 286, 0, 0, 0, 0,
	263, 0, 0, 0, 210, 174, 177, 184, 191, 0,
	259, 287, 311, 0, 143, 136, 289, 304, 152, 271,
	273, 317, 0, 138, 0, 0, 0, 0, 0, 0,
	0, 137, 0, 0, 0, 0, 0, 0, 182, 0,
	302, 303, 163, 319, 0, 0, 139, 0, 0, 229,
	0, 228, 0, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 201, 176, 186, 248, 207, 249, 187, 224,
	223, 225, 208, 0, 0, 0, 0, 284, 0, 0,
	288, 149, 0, 0, 293, 0, 254, 150, 181, 175,
	247, 227, 144, 189, 282, 199, 206, 290, 0, 239,
	262, 153, 308, 281, 172, 0, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 170, 0, 0,
	0, 0, 0, 0, 0, 169, 161, 0, 0, 0,
	0, 159, 0, 0, 0, 0, 0, 0, 204, 0,
	0, 0, 283, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 126, 132, 140, 203, 0, 256, 179, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 307, 0, 0, 0, 0, 251, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 167,
	0, 0, 0, 141, 148, 154, 166, 173, 178, 185,
	188, 192, 193, 194, 197, 209, 211, 212, 213, 214,
	230, 231, 234, 235, 237, 238, 241, 242, 243, 245,
	246, 252, 0, 258, 264, 265, 266, 267, 268, 275,
	276, 277, 278, 285, 300, 301, 313, 314, 0, 0,
	129, 0, 0, 0, 0, 0, 222, 0, 0, 0,
	134, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	202, 0, 128, 0, 0, 0, 233, 0, 0, 0,
	131, 0, 0, 0, 162, 0, 261, 0, 306, 0,
	0, 260, 205, 299, 0, 0, 305, 0, 0, 312,
	316, 0, 0, 0, 280, 171, 168, 0, 0, 0,
	0, 250, 165, 198, 0, 0, 0, 158, 0, 0,
	0, 279, 296, 133, 219, 297, 315, 146, 291, 220,
	226, 155, 157, 156, 142, 274, 295, 151, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 0, 270, 269, 0, 190, 0, 0,
	0, 257, 0, 196, 135, 0, 318, 145, 200, 292,
	0, 180, 232, 164, 0, 240, 0, 130, 253, 216,
	217, 215, 218, 183, 0, 0, 0, 255, 272, 294,
	147, 286, 0, 0, 0, 0, 263, 0, 0, 0,
	210, 174, 177, 184, 191, 0, 259, 287, 311, 0,
	143, 136, 289, 304, 152, 271, 273, 317, 0, 138,
	0, 0, 0, 0, 0, 0, 0, 137, 0, 0,
	0, 0, 0, 0, 182, 0, 302, 303, 163, 319,
	0, 0, 139, 0, 0, 229, 0, 228, 0, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 201, 176,
	186, 248, 207, 249, 187, 224, 223, 225, 208, 0,
	0, 0, 0, 284, 0, 0, 288, 149, 0, 0,
	293, 0, 254, 150, 181, 175, 247, 227, 144, 189,
	282, 199, 206, 290, 0, 239, 262, 153, 308, 281,
	172, 0, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 170, 0, 0, 0, 0, 0, 0,
	0, 169, 161, 0, 0, 0, 0, 159, 0, 0,
	0, 0, 0, 0, 204, 0, 0, 0, 283, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 490, 132,
	140, 203, 0, 256, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 307, 0, 0,
	0, 0, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 167, 0, 0, 0, 141,
	148, 154, 166, 173, 178, 185, 188, 192, 193, 194,
	197, 209, 211, 212, 213, 214, 230, 231, 234, 235,
	237, 238, 241, 242, 243, 245, 246, 252, 0, 258,
	264, 265, 266, 267, 268, 275, 276, 277, 278, 285,
	300, 301, 313, 314, 0, 0, 129, 0, 0, 0,
	0, 0, 222, 0, 0, 0, 134, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 202, 0, 128, 0,
	0, 0, 233, 0, 0, 0, 131, 0, 0, 0,
	162, 0, 261, 0, 306, 0, 0, 260, 205, 299,
	0, 0, 305, 0, 0, 312, 316, 0, 0, 0,
	280, 171, 168, 0, 0, 0, 0, 250, 165, 198,
	0, 0, 0, 158, 0, 0, 0, 279, 296, 133,
	219, 297, 315, 146, 291, 220, 226, 155, 157, 156,
	142, 274, 295, 151, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 0,
	270, 269, 0, 190, 0, 0, 0, 257, 0, 196,
	135, 0, 318, 145, 200, 292, 0, 180, 232, 164,
	0, 240, 0, 130, 253, 216, 217, 215, 218, 183,
	0, 0, 0, 255, 272, 294, 147, 286, 0, 0,
	0, 0, 263, 0, 0, 0, 210, 174, 177, 184,
	191, 0, 259, 287, 311, 0, 143, 136, 289, 304,
	152, 271, 273, 317, 0, 138, 0, 0, 0, 0,
	0, 0, 0, 137, 0, 0, 0, 0, 0, 0,
	182, 0, 302, 303, 163, 319, 0, 0, 139, 0,
	0, 229, 0, 228, 0, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 201, 176, 186, 248, 207, 249,
	187, 224, 223, 225, 208, 0, 0, 0, 0, 284,
	0, 0, 288, 149, 0, 0, 293, 0, 254, 150,
	181, 175, 247, 227, 144, 189, 282, 199, 206, 290,
	0, 239, 262, 153, 308, 281, 172, 0, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 170,
	0, 0, 0, 0, 0, 0, 0, 169, 161, 0,
	0, 0, 0, 159, 0, 0, 0, 0, 0, 0,
	204, 0, 0, 0, 283, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 490, 132, 140, 203, 0, 256,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 307, 0, 0, 0, 0, 251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 167, 0, 0, 0, 141, 148, 154, 166, 173,
	178, 185, 188, 192, 193, 194, 197, 209, 211, 212,
	213, 214, 230, 231, 234, 235, 237, 238, 241, 242,
	243, 245, 246, 252, 0, 258, 264, 265, 266, 267,
	268, 275, 276, 277, 278, 285, 300, 301, 313, 314,
	0, 0, 129, 0, 0, 0, 0, 0, 222, 0,
	0, 0, 134, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 202, 0, 128, 0, 0, 0, 233, 0,
	0, 0, 131, 0, 0, 0, 162, 0, 261, 0,
	306, 0, 0, 260, 205, 299, 0, 0, 305, 0,
	0, 312, 316, 0, 0, 0, 280, 171, 168, 0,
	0, 0, 0, 250, 165, 198, 0, 0, 0, 158,
	0, 0, 0, 279, 296, 133, 219, 297, 315, 146,
	291, 220, 226, 155, 157, 156, 142, 274, 295, 151,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 0, 270, 269, 0, 190,
	0, 0, 0, 257, 0, 196, 135, 0, 318, 145,
	200, 292, 0, 180, 232, 164, 0, 240, 0, 130,
	253, 216, 217, 215, 218, 183, 0, 0, 0, 255,
	272, 294, 147, 286, 0, 0, 0, 0, 263, 0,
	0, 0, 210, 174, 177, 184, 191, 0, 259, 287,
	311, 0, 143, 136, 289, 1309, 152, 271, 273, 317,
	0, 138, 0, 0, 0, 0, 0, 0, 0, 137,
	0, 0, 0, 0, 0, 0, 182, 0, 302, 303,
	163, 319, 0, 0, 139, 0, 0, 229, 0, 228,
	0, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	201, 176, 186, 248, 207, 249, 187, 224, 223, 225,
	208, 0, 0, 0, 0, 284, 0, 0, 288, 149,
	0, 0, 293, 0, 254, 150, 181, 175, 247, 227,
	144, 189, 282, 199, 206, 0, 0, 239, 262, 153,
	308, 281, 172, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 466, 0, 0, 0, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1383, 0, 0, 0,
	0, 0, 0, 0, 466, 471, 0, 0, 0, 244,
	0, 132, 140, 203, 0, 256, 179, 0, 0, 0,
	0, 0, 0, 431, 0, 2391, 0, 0, 0, 0,
	0, 0, 0, 0, 471, 0, 0, 0, 0, 0,
	0, 438, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 431, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 167, 0, 0,
	438, 141, 148, 154, 166, 173, 178, 185, 188, 192,
	193, 194, 197, 209, 211, 212, 213, 214, 230, 231,
	234, 235, 237, 238, 241, 242, 243, 245, 246, 252,
	0, 258, 264, 265, 266, 267, 268, 275, 276, 277,
	278, 285, 300, 301, 313, 314, 470, 0, 129, 0,
	0, 0, 0, 0, 0, 1325, 0, 0, 134, 0,
	0, 0, 0, 437, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 440, 0, 470, 0, 0, 0, 0,
	0, 0, 457, 0, 0, 432, 0, 429, 0, 0,
	0, 0, 437, 0, 439, 0, 0, 0, 0, 0,
	0, 0, 440, 0, 0, 0, 0, 0, 0, 0,
	0, 457, 0, 0, 432, 0, 429, 0, 0, 0,
	0, 0, 0, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 443, 441, 0, 0, 0, 444, 0, 0,
	0, 0, 0, 449, 423, 0, 451, 0, 0, 0,
	0, 0, 0, 0, 421, 0, 0, 0, 0, 0,
	0, 443, 441, 0, 0, 0, 444, 0, 435, 453,
	0, 0, 449, 423, 0, 451, 433, 434, 436, 455,
	0, 456, 462, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 435, 453, 0,
	0, 0, 0, 0, 0, 433, 434, 436, 455, 0,
	456, 462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 466, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2400, 0,
	0, 0, 0, 0, 0, 424, 0, 471, 0, 0,
	0, 0, 0, 0, 0, 442, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 431, 0, 0, 0, 0,
	0, 0, 0, 0, 424, 0, 0, 0, 0, 0,
	0, 0, 0, 438, 442, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 463, 464, 0, 0,
	0, 0, 425, 426, 427, 428, 430, 445, 446, 447,
	448, 460, 459, 458, 461, 465, 468, 467, 469, 0,
	0, 0, 0, 0, 0, 463, 464, 0, 0, 0,
	0, 425, 426, 427, 428, 430, 445, 446, 447, 448,
	460, 459, 458, 461, 465, 468, 467, 469, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 470, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 437, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 457, 0, 0, 432, 0, 429,
	0, 0, 0, 0, 0, 0, 439, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	466, 0, 454, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2398, 0, 422, 443, 441, 0, 0, 0, 444,
	471, 454, 0, 450, 452, 449, 423, 0, 451, 0,
	0, 0, 0, 0, 0, 0, 421, 0, 431, 0,
	0, 0, 422, 0, 0, 0, 0, 0, 0, 0,
	435, 453, 450, 452, 0, 0, 438, 0, 433, 434,
	436, 455, 0, 456, 462, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 470, 0, 0, 0, 0, 0, 424, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 442, 437, 0,
	0, 0, 0, 0, 36, 0, 0, 0, 440, 0,
	0, 0, 0, 0, 0, 0, 0, 457, 57, 0,
	432, 0, 429, 0, 74, 0, 0, 39, 0, 439,
	0, 0, 0, 0, 0, 0, 0, 0, 463, 464,
	0, 0, 0, 0, 425, 426, 427, 428, 430, 445,
	446, 447, 448, 460, 459, 458, 461, 465, 468, 467,
	469, 0, 0, 0, 0, 0, 77, 443, 441, 0,
	0, 0, 444, 0, 0, 0, 0, 0, 449, 423,
	0, 451, 0, 0, 0, 0, 0, 0, 0, 421,
	0, 0, 2857, 0, 0, 0, 0, 3110, 0, 0,
	0, 0, 0, 435, 453, 0, 0, 0, 0, 0,
	0, 433, 434, 436, 455, 36, 456, 462, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 57,
	0, 0, 0, 0, 0, 74, 0, 0, 39, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 454, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 77, 41, 70,
	44, 43, 46, 0, 0, 422, 0, 0, 0, 0,
	424, 0, 0, 2858, 0, 450, 452, 0, 0, 0,
	442, 0, 0, 2857, 0, 0, 0, 0, 3106, 47,
	73, 72, 0, 0, 0, 0, 45, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 463, 464, 0, 0, 0, 0, 425, 426, 427,
	428, 430, 445, 446, 447, 448, 460, 459, 458, 461,
	465, 468, 467, 469, 0, 0, 0, 55, 56, 0,
	2859, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 64, 0, 65, 36, 0, 41,
	70, 44, 43, 46, 0, 0, 0, 0, 0, 0,
	0, 57, 0, 0, 2858, 0, 0, 74, 0, 0,
	39, 66, 0, 0, 0, 0, 0, 0, 0, 0,
	47, 73, 72, 0, 0, 0, 0, 45, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2860,
	71, 0, 51, 52, 59, 0, 60, 0, 0, 77,
	36, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 57, 0, 0, 454, 0, 0,
	74, 36, 0, 39, 0, 2857, 0, 0, 55, 56,
	3099, 2859, 0, 0, 0, 57, 0, 0, 422, 0,
	0, 74, 0, 0, 39, 64, 0, 65, 450, 452,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 77, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 66, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 77, 3070, 0, 0, 0, 2857, 0,
	0, 0, 0, 3083, 0, 0, 0, 0, 0, 0,
	2860, 71, 0, 51, 52, 59, 0, 60, 0, 2857,
	0, 41, 70, 44, 43, 46, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2858, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	75, 0, 47, 73, 72, 0, 0, 0, 0, 45,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 41, 70, 44, 43, 46, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2858,
	0, 0, 0, 0, 0, 41, 70, 44, 43, 46,
	55, 56, 0, 2859, 0, 47, 73, 72, 0, 36,
	2858, 0, 45, 0, 0, 0, 0, 64, 0, 65,
	0, 0, 0, 57, 0, 0, 47, 73, 72, 74,
	0, 0, 39, 45, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 66, 0, 0, 0, 0, 0,
	0, 75, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 55, 56, 0, 2859, 0, 0, 0,
	0, 77, 2860, 71, 0, 51, 52, 59, 0, 60,
	64, 0, 65, 0, 55, 56, 0, 2859, 0, 0,
	36, 0, 0, 0, 0, 0, 0, 2857, 0, 0,
	0, 64, 3003, 65, 57, 0, 0, 66, 0, 0,
	74, 0, 0, 39, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 66, 0,
	0, 0, 0, 0, 0, 2860, 71, 0, 51, 52,
	59, 0, 60, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 77, 0, 0, 0, 2860, 71, 0, 51,
	52, 59, 0, 60, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2857, 0,
	0, 0, 0, 41, 70, 44, 43, 46, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2858, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 47, 73, 72, 0, 0, 0,
	0, 45, 0, 75, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 41, 70, 44, 43, 46, 0,
	0, 0, 55, 56, 0, 2859, 0, 0, 0, 2858,
	0, 0, 0, 0, 0, 0, 75, 0, 0, 64,
	0, 65, 0, 0, 0, 47, 73, 72, 0, 0,
	0, 0, 45, 0, 0, 0, 0, 75, 0, 0,
	0, 0, 0, 0, 0, 0, 66, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2860, 71, 0, 51, 52, 59,
	0, 60, 0, 55, 56, 0, 2859, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	64, 0, 65, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 66, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2860, 71, 0, 51, 52,
	59, 0, 60, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 75, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 75,
}

var yyPact = [...]int{
	4875, -1000, -413, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2122, -1000, -1000, 259, -1000,
	1121, 595, -1000, 280, 224, 34538, 644, 3593, 35370, -1000,
	-1000, -1000, 209, 509, 35370, 413, 445, 1485, 1928, 1484,
	26, -73, -74, 136, 26828, 26397, 7, -1000, 2172, 2175,
	569, 30, -1000, -1000, -1000, 23455, 215, -1000, -1000, 2093,
	2119, 1855, -1000, 15228, -1000, -1000, -1000, -1000, -1000, 34122,
	-1000, 2173, 35370, 13454, -1000, 616, 609, -191, 564, 564,
	471, 564, 564, 627, -1000, 331, 1105, -1000, -1000, -1000,
	-1000, 1084, 35370, 30370, 565, 34954, 565, 565, 565, 565,
	565, 565, 565, 35370, -1000, 707, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	35370, 1481, 1982, 1136, 152, -1000, -1000, -1000, 1139, -1000,
	438, 431, 496, 407, 97, 1155, 2083, -1000, 1742, 2093,
	2093, -1000, -1000, -1000, -1000, -1000, -1000, 816, 298, 607,
	215, 215, 1075, 2033, 1981, 1977, 1341, 1976, 237, 1973,
	1783, -49, -1000, 1472, 35370, -1000, -1000, 1323, 1305, 1822,
	1651, 803, 1821, -1000, -1000, 329, 396, 1767, 395, 1767,
	1767, 1767, 1767, 1767, -75, 1767, 1767, 1767, 74, 1767,
	137, 1767, 1767, 1767, 1767, 1767, 1478, -1000, -1000, -1000,
	335, 1650, 1704, 1819, 409, -1000, -1000, -1000, -1000, 1791,
	2072, 622, -1000, -150, 1723, 24629, -1000, 1742, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1489, -1000, 2172, 1989, 1251, 18750, 1898, -1000,
	-1000, 1199, 2156, -1000, 22278, 706, -1000, 18750, 4070, 1742,
	-1000, -1000, 1742, -1000, -1000, -1000, 662, -1000, -1000, 21098,
	21098, 21098, 21098, 21098, 21098, 21098, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1742, 1742, 1742, 1742, 1742, 1742, 1742, 1742, 1742, 1742,
	1742, 1742, 1742, 1742, 1742, 1742, 1742, 1742, 1742, 1742,
	1742, -1000, -1000, 1742, -1000, 14641, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1742, 1742,
	1742, 1742, 1742, 1742, 1742, 1742, 1742, 1742, 18750, 1742,
	1742, 1742, 1742, 1742, 1742, 1742, 1742, 1742, 1742, 1742,
	1742, 1742, 1742, 1742, 1742, 1742, 1742, 1742, 1742, 1742,
	1742, 1742, 1742, 1742, 1742, 569, 569, 33706, 1740, -99,
	36202, -1000, -1000, -1000, -1000, 35786, 29946, 1074, -1000, -1000,
	-1000, -1000, 1963, -1000, -1000, 705, -1000, 2122, -1000, -1000,
	1628, 547, -1000, 539, 36604, -1000, -1000, -1000, 1781, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 34954, 35370, 238, 1469, 1146, 1467,
	35786, 35786, -1000, 225, 30370, 30370, 564, 268, 30370, 233,
	1734, 606, 1727, 605, 1326, 35370, 2004, 1815, 35370, 1465,
	1464, 35786, 35786, 30370, 30370, -1000, 12848, 1726, -1000, -1000,
	1136, -1000, 5139, 18750, 564, 564, 35370, 35370, 35370, 35370,
	35370, -1000, -1000, 1136, 1136, 1136, 1136, 1135, 2155, 1135,
	-1000, 1135, -1000, -1000, 18750, -1000, 21098, 29522, 908, -1000,
	-1000, 35370, -1000, 1463, 296, -1000, -1000, -1000, -1000, -1000,
	-1000, 1462, -1000, 1932, 237, 237, -1000, 1384, 237, 1712,
	-1000, 1043, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 237, -1000, 18163, -392, -1000, -1000,
	1725, -1000, 262, -1000, -1000, 502, 502, 254, 30370, 30370,
	30370, -1000, 1767, 34954, -1000, 1767, 1767, 1767, -80, 1767,
	1767, -1000, -1000, 1767, -1000, -1000, -1000, -1000, -1000, 1767,
	-1000, -1000, -1000, 1767, 1767, -1000, 1767, 1767, -1000, -1000,
	-1000, -1000, -1000, 30370, 502, 171, 1724, 502, 30370, 30370,
	-1000, 55, 54, 52, 51, -1000, -1000, -1000, -1000, 49,
	48, -1000, -1000, 1855, -1000, -1000, 215, -1000, -1000, 35370,
	-104, 24629, 1723, 2046, 10424, -1000, -1000, 1187, 2168, 949,
	1703, -1000, -1000, 1720, -1000, 1208, 704, 1255, 1866, -1000,
	-1000, -1000, 35370, -1000, 18750, 18750, 18750, 1229, -1000, 25216,
	-1000, -1000, -1000, -1000, 9818, 979, 21098, 1232, 1061, 21098,
	21098, 21098, 21098, 21098, 21098, 21098, 21098, 21098, 21098, 21098,
	21098, 21098, 21098, 21098, 1309, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1457, -1000, 215, 1429, 1429, 755, 755,
	755, 755, 755, 755, 27415, 2037, 16402, 16402, 16402, 2037,
	16402, 16402, 16402, 16402, 2037, 2037, 16402, 16402, 16402, 16402,
	34954, 34954, 2037, 16402, 16402, 16402, 2037, 1489, 1625, 1112,
	14641, 16402, 16402, 1489, 18750, 18750, 17576, 16989, 19337, 16402,
	2037, 1137, 1112, 35786, 16402, -1000, -1000, 20511, -1000, -1000,
	-1000, -1000, -1000, 1489, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 16402, 16402, 16402, 16402, 1489, 1489, 16402, 16402,
	16402, 16402, 16402, 1489, 1489, 1489, 1489, 33282, 29098, 35370,
	1663, 1603, -1000, 703, 32866, 1683, -1000, -128, -132, -99,
	-1000, -1000, 844, -1000, -1000, -1000, 14047, -1000, 11636, 2093,
	1855, 6788, 12242, -1000, 36604, 1781, -1000, -61, -1000, -1000,
	-1000, 1750, -1000, 1750, 286, -15, 1750, 1750, 1750, 1750,
	1750, -13, -13, -13, -13, -14, -1000, -1000, -1000, -1000,
	-1000, 1780, 1779, -1000, 1750, 1750, 1750, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1762, 297, 1753, 1753,
	1753, 1753, 1753, 517, 517, -1000, 18750, 1752, 2040, 579,
	268, 1995, 2002, 1995, 418, -1000, 701, 1775, -1000, 699,
	466, 1705, -1000, 172, 1558, 35370, -1000, -1000, -1000, -1000,
	-1000, 35370, 35370, 30370, 30370, 30370, 666, -1000, 35370, 1713,
	-1000, -1000, -1000, -1000, -1000, 1659, -1000, 1558, -1000, -1000,
	-1000, -1000, -1000, 35370, -1000, -1000, 1383, 1112, 1454, 1453,
	2033, -1000, -1000, -1000, 1138, -1000, -1000, -1000, -1000, 1136,
	35370, 35370, 35370, 2033, 1136, 1112, 702, 1785, 1742, 1489,
	-1000, -1000, -1000, 1438, -1000, 21098, 1712, 1712, -1000, 1712,
	237, 1429, 1712, -1000, 1622, 1186, 1382, 35370, -1000, 24629,
	-50, -1000, -171, 32450, -1000, -1000, -1000, 32450, -1000, 74,
	157, -1000, 604, -1000, 1620, -1000, -1000, -1000, -1000, 1767,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 32450,
	113, 161, 32450, 1659, 2151, -1000, -1000, -1000, -1000, 2080,
	-1000, 2037, 1489, 632, -1000, -1000, -1000, 1742, 1583, 696,
	-1000, 32034, -1000, 1862, 1251, 1251, 18750, -1000, -1000, -1000,
	11636, 2059, -1000, 1879, 1878, 1832, -1000, -1000, 979, 1083,
	1103, -1000, -1000, 1238, -1000, -1000, -1000, -1000, 693, 1742,
	-1000, 3636, -1000, -1000, -1000, -1000, 1232, 21098, 21098, 21098,
	702, 3636, 3687, 1010, 970, 755, 946, 946, 974, 974,
	974, 974, 974, 1395, 1395, -1000, -1000, -1000, 1489, -1000,
	-1000, -1000, 16402, 1610, -1000, -1000, 1112, 688, 1610, 1610,
	16402, 1610, 1610, 1610, 1610, 16402, 16402, 1610, 1610, 1610,
	1610, 1708, 1707, 16402, 1610, 1610, 1610, 16402, -1000, 18750,
	-1000, 1489, 1610, 1610, -1000, 1118, 1268, 864, 2150, 1610,
	852, 2149, 1610, 990, 21098, 21098, 21098, 1610, 16402, 1143,
	-1000, 18750, 1489, 1610, -1000, 1518, 1610, 1489, 1684, 1610,
	1610, -207, -207, 1489, 1610, 1489, 1610, 1610, -207, -207,
	-207, -207, 945, 35370, -1000, 1700, 1728, -1000, -1000, -1000,
	-1000, 2038, 27842, -1000, 1742, 21688, -1000, 1742, 945, 1587,
	29098, -1000, -1000, 29098, 35370, 9212, -1000, 35786, -99, -168,
	-1000, -1000, 1683, -1000, 1317, -1000, -1000, 1112, -1000, 683,
	1989, 2037, 1681, 5576, -1000, -1000, -1000, -1000, 547, -1000,
	-1000, -1000, 1766, 4922, -1000, 1900, 812, 812, 764, 1416,
	1891, -1000, -1000, 168, -67, -1000, -1000, -1000, 1303, -13,
	-13, 1750, 1750, 282, 1750, -1000, -13, -1000, -1000, -1000,
	932, 1961, 930, 921, 917, 912, -13, 1381, 1381, -1000,
	-1000, -1000, -1000, 1299, -1000, 1762, -1000, 1293, -1000, -1000,
	-1000, -1000, -1000, -1000, 1306, 1801, 34954, -1000, 35370, -1000,
	1995, -1000, -1000, -1000, 142, -1000, -1000, -1000, 2138, -1000,
	-1000, 34954, 28682, 34954, -1000, -1000, 80, 30370, 182, 340,
	213, -1000, 603, -1000, 597, -1000, -1000, -1000, -1000, -1000,
	-1000, 35370, 30370, -1000, -1000, -1000, -1000, -1000, 2133, 1437,
	1428, -1000, -1000, -1000, 1135, 1136, -1000, -1000, 21098, 30370,
	-1000, 421, -1000, 3636, -1000, -1000, -1000, 945, 621, -1000,
	-1000, -90, -1000, -1000, 594, 674, 673, 576, -1000, 91,
	30370, -1000, 34954, -1000, 2148, 2147, 111, 2146, 30370, -1000,
	34, 1866, -1000, 1676, -1000, 807, 809, 747, 540, 540,
	-1000, 1005, 540, 1947, 1936, 943, -1000, 219, -1000, 10424,
	10424, 1675, 1379, 1378, -1000, 1860, -1000, -1000, -1000, 35370,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 8606,
	16402, -1000, 702, 3636, 3484, -1000, 21098, -1000, 1610, 16402,
	-207, 8000, -207, -207, 1610, -1000, -1000, -207, -207, 1610,
	1610, -207, -207, -207, -207, 21098, 21098, 1610, -207, -207,
	-207, 1489, 1112, -1000, -1000, -1000, 270, 1309, 270, 21098,
	21098, -1000, 21098, 21098, -1000, -1000, 21098, 3560, 3102, 1581,
	-249, 1608, 1127, -1000, 18750, 1281, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 31618, -1000, -207, -207, -207, -207,
	-207, -1000, -1000, -1000, -1000, 210, 1742, -1000, 11636, 29098,
	31202, 31202, 29098, 31202, -1000, 1850, 1848, -1000, 1837, 1834,
	1843, 24629, 1599, 1489, 347, 27842, 1365, -1000, 1742, -1000,
	24042, 691, 615, 614, 613, 16402, 2133, 29098, 1670, 1670,
	-1000, 668, -1000, -1000, -1000, -167, -156, -1000, -1000, -1000,
	10424, -1000, 6788, -1000, 6788, -1000, 25803, 553, 1907, 529,
	1416, 1416, -1000, -1000, 1416, -1000, 1416, -1000, -1000, -1000,
	1755, -1000, 1193, -1000, -1000, -1000, -1000, -1000, 1742, -404,
	1288, 1364, 21098, 2164, -1000, 1899, -1000, 1896, 1892, 1363,
	-1000, -1000, 1542, 907, 902, -13, -1000, -1000, 1750, -1000,
	893, -1000, -1000, 944, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 891, 1597, -1000, 1595, 1673, -1000, 1593, 115,
	35370, -1000, -1000, 2034, -1000, -1000, -1000, 1956, 1005, 1005,
	1005, 1797, -1000, -1000, -1000, -1000, 1523, 1672, -1000, 539,
	34954, 34954, 34954, -1000, -255, 144, -1000, 30370, 135, 172,
	385, 1427, 35370, 30370, -1000, -1000, -1000, 18750, -1000, -1000,
	2033, -1000, 3636, 1558, -1000, -1000, -13, 35370, -1000, 30370,
	904, 30786, 30370, 105, 154, -1000, 30370, 30370, 2144, 30370,
	1659, 1358, 1832, 632, 4518, 1416, 657, -1000, -1000, 524,
	-1000, 4084, 1891, 1426, 37129, 36926, 34954, 1890, 1886, 1425,
	35370, 34954, -1000, -1000, 36633, 1423, 18750, -1000, 34954, -1000,
	-1000, 34954, 667, -1000, 34954, -1000, -1000, -1000, -1000, 1196,
	15228, -1000, -1000, 1489, -1000, 21098, 3636, -207, -1000, -1000,
	-1000, -1000, 661, -1000, -1000, -207, -1000, -1000, -207, -207,
	-1000, -1000, -1000, -1000, 3222, 3069, -207, -1000, -1000, -1000,
	-1000, 1489, 1750, 1750, -1000, 1750, 1753, -1000, 1750, 12,
	1750, 9, 1489, 1489, 2688, 2089, 1751, 1636, 1518, 21098,
	21098, 21098, 1742, -203, -1000, 1112, 18750, -1000, -1000, 1422,
	-1000, -1000, -1000, -1000, -1000, 1796, 11636, 1742, 6182, -1000,
	34954, 1702, -1000, 1040, 1021, 1728, 1759, 1795, 1511, -1000,
	-1000, -1000, -1000, 1840, -1000, 1836, -1000, -1000, 1745, -1000,
	-1000, 1671, 1742, 1667, 34954, 21098, 691, -1000, 1742, 1742,
	1742, 1489, 2122, 1670, -1000, -1000, 897, -1000, -1000, -1000,
	5576, -1000, 1589, -1000, 1750, 1750, 1885, -1000, 812, -1000,
	-1000, -1000, -1000, -1000, 34954, -1000, 21098, 2032, -1000, -1000,
	3636, -121, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 887, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -13,
	1354, -13, 1284, -1000, 1279, -1000, -1000, -346, 1749, 215,
	-1000, 1005, 935, 867, 1353, 35370, 141, 28682, -1000, 539,
	539, 539, 107, 114, -1000, 1171, -1000, -1000, -1000, 1351,
	1350, 1349, 1558, 184, 1169, 153, -1000, 2029, -1000, -1000,
	1112, 1136, -88, -1000, 154, -1000, -1000, -1000, 154, -1000,
	-1000, 160, 1659, 1659, 30370, 1659, -1000, -1000, -1000, 36633,
	523, 539, 539, 1752, 812, 1884, 529, -1000, -1000, -1000,
	-1000, -1000, -1000, 1421, -1000, 745, -1000, 573, 523, 36633,
	1112, 833, 1179, 10424, -1000, 2143, -1000, -1000, -1000, 3636,
	-1000, 7394, -1000, -1000, -1000, 21098, 21098, -1000, -1000, -1000,
	290, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 21098,
	21098, 21098, 21098, -1000, 1518, 1518, 1518, 21098, 1489, 1348,
	1112, 934, -1000, -1000, 2000, 1521, 1655, -1000, -1000, 15815,
	1489, 1875, 1583, -1000, 23455, 1563, -1000, 2122, 11636, 18750,
	18750, -1000, -1000, 18750, 1748, -1000, 18750, -1000, -1000, -1000,
	-1000, 34954, 337, -1000, 18750, 1346, 1563, 1322, -1000, 34954,
	34954, 34954, -1000, 2093, -1000, 646, 25803, 1999, 1999, 1416,
	1416, 1560, -1000, 1518, 1742, -1000, 1742, 1742, -1000, -1000,
	813, -1000, 810, 1515, 1513, -1000, 25803, -1000, -1000, 771,
	-1000, -1000, -1000, -1000, -1000, 2079, -1000, 141, -1000, 1345,
	266, 229, -1000, 264, 263, 242, 231, 222, -1000, -1000,
	-1000, -1000, 375, 107, -1000, -81, 1278, 1053, 1957, 114,
	-1000, 1276, 1271, 1269, 1242, 155, -1000, -1000, -1000, -1000,
	211, 172, -1000, 384, 1344, -1000, 1922, 1919, 2017, 2017,
	102, 1659, 1565, 1495, -1000, -1000, 1420, -1000, -1000, 1747,
	1416, 1416, -1000, 1415, -1000, -1000, 34954, -1000, 523, 1993,
	1992, 1742, -1000, 2133, 29098, 15228, -1000, -1000, 1518, 1518,
	-1000, -1000, 1518, 1518, 1518, 1518, -1000, -1000, -1000, 179,
	-1000, -1000, 2122, 2112, 1882, -1000, 1742, -1000, -1000, 1742,
	218, -1000, 34954, 2093, -1000, 1112, 1112, 1112, 34954, 1112,
	1556, 1742, -86, 22868, -1000, 24629, 1551, 1551, 1551, -1000,
	646, -1000, 1410, 1005, 1342, -1000, -1000, -1000, -1000, -1000,
	491, 34954, -408, 21098, -1000, -1000, -1000, -1000, -1000, -1000,
	1549, -1000, 215, -1000, -1000, 393, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1927, 1925, 277, -1000, 1340, 1338, -1000,
	410, 1315, 710, -212, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 363, 1391, -1000, 140, -1000,
	-1000, 568, 1910, 1912, 2111, -1000, 30370, -1000, -1000, 29098,
	-1000, -1000, 168, 168, 25803, 1752, 1746, -1000, -1000, -1000,
	21098, -1000, 924, 2131, 1658, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1489, 180, -274, 1013, 18750, 2163, -1000, 1655,
	1742, -1000, 215, -1000, -1000, 1547, -1000, -1000, 1742, -1000,
	691, -1000, -1000, -1000, -1000, -1000, 1234, -1000, 35370, -1000,
	-1000, -1000, -1000, 1518, 646, -1000, 333, 37974, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1230, -1000, -1000, 1252,
	383, 139, -1000, 2014, -1000, 1745, 1226, 1919, 2105, 1917,
	1915, -1000, 1337, -256, 1670, 1541, 1744, 25803, 3636, 1538,
	-1000, 34954, 2124, 2103, -1000, -1000, 1859, -253, -279, 1489,
	177, 177, 1656, 11636, 1655, 1489, -1000, 10424, -1000, -1000,
	1743, -408, -1000, 646, -1000, 482, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 18750, 18750, 11030,
	37974, 125, -1000, 116, -1000, -1000, -1000, 1334, -1000, 1063,
	-1000, 1332, -1000, 2100, 2099, -1000, 176, 2131, 646, 25803,
	1512, -1000, 924, 1874, -209, 18750, 18750, -1000, 1854, -1000,
	-1000, -1000, 169, -1000, 1007, 274, 968, -1000, 1429, -1000,
	1653, -1000, 1510, -1000, 539, 34954, -1000, -1000, 1390, 1389,
	-1000, 1260, 1132, 198, 192, 598, -1000, -1000, -1000, -1000,
	-414, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1329, 1328,
	28266, 2124, -1000, 1494, 646, -1000, 419, -1000, 34954, -1000,
	1112, 1649, -1000, 1112, -259, 1160, -1000, -1000, -1000, -1000,
	-1000, 34954, 1489, 10424, 217, 1492, -1000, -1000, -1000, 1114,
	-1000, 18750, 37974, 2077, 2076, 2057, 1990, 10424, 37893, -1000,
	-1000, -1000, -1000, 94, 1558, -209, 646, -1000, 458, 1580,
	-1000, 2008, 18750, -276, 169, -1000, 2006, -1000, -1000, 1327,
	-245, 1794, 202, 1164, 37974, -1000, 1108, -416, 411, 215,
	578, 21098, -1000, -1000, -1000, 30370, -1000, -1000, 1742, 34954,
	1742, -1000, -280, -1000, 24629, 1296, 1325, 1792, 1789, 2142,
	-1000, -1000, -1000, -1000, -1000, -1000, 37974, -1000, -1000, -417,
	37974, 3775, -1000, -1000, -1000, 37705, -1000, -1000, -1000, -1000,
	189, -1000, -1000, 3636, 1558, 19924, -1000, -1000, -1000, -1000,
	-1000, 1787, 21098, -1000, -1000, 2162, -1000, 2159, 658, 658,
	-1000, -418, 37684, -419, 562, 37974, 1156, -1000, 18750, -1000,
	578, -1000, 1518, 1489, -295, 1477, -1000, -1000, -1000, 487,
	1249, -1000, 37621, 1147, 37974, -1000, -422, 557, 37974, -1000,
	1092, -1000, -1000, -1000, -1000, -296, -1000, -1000, -1000, -1000,
	-1000, 37449, -1000, -427, 37974, -1000, 555, 37338, -428, -1000,
	541, 37974, -1000,
}

var yyPgo = [...]int{
	0, 2604, 2603, 131, 2602, 328, 2601, 2599, 56, 2598,
	24, 20, 10, 35, 2597, 2290, 2288, 2286, 2282, 2276,
	2596, 7, 2594, 2593, 2274, 2591, 2589, 2270, 2268, 2266,
	2264, 2588, 2587, 2586, 2259, 2252, 2250, 15, 2585, 22,
	2583, 4, 153, 168, 2582, 2, 2581, 2580, 13, 2577,
	2576, 2246, 2575, 2574, 2569, 98, 2568, 2244, 2228, 2566,
	2226, 2196, 2565, 2564, 2187, 2185, 2181, 2563, 190, 2562,
	2557, 2547, 174, 96, 158, 2543, 2537, 2535, 122, 99,
	2139, 105, 54, 116, 296, 2532, 19, 53, 290, 2528,
	218, 2525, 118, 2524, 100, 2523, 2522, 164, 2520, 148,
	94, 89, 2518, 2516, 167, 2515, 2513, 2512, 109, 2511,
	2510, 177, 963, 2509, 2504, 142, 2502, 47, 173, 46,
	50, 2501, 2499, 2498, 2497, 2496, 29, 2134, 2495, 104,
	152, 2494, 2466, 87, 2464, 2462, 182, 2455, 2454, 2453,
	145, 43, 2448, 2442, 44, 2436, 48, 49, 2433, 61,
	2431, 143, 2430, 2428, 32, 28, 2427, 71, 2423, 63,
	2422, 149, 146, 1260, 2421, 18, 16, 23, 2420, 37,
	14, 8, 57, 26, 73, 52, 141, 102, 2419, 58,
	42, 121, 85, 2418, 92, 80, 38, 2415, 160, 2413,
	86, 161, 136, 139, 159, 2412, 2411, 2409, 181, 2407,
	125, 88, 2406, 134, 1218, 179, 124, 2405, 93, 2404,
	2402, 2401, 2400, 2398, 79, 144, 2395, 2394, 185, 180,
	188, 45, 62, 386, 2612, 107, 162, 2392, 55, 2391,
	2390, 2389, 2257, 110, 9, 115, 170, 2387, 112, 33,
	68, 2386, 2379, 2378, 2373, 2372, 2371, 2366, 2365, 1802,
	2363, 2362, 2361, 2359, 187, 95, 2357, 129, 126, 123,
	2355, 154, 40, 2352, 2346, 130, 103, 2344, 2339, 2336,
	2332, 135, 90, 157, 30, 2331, 119, 113, 137, 2330,
	75, 2329, 2328, 60, 51, 2327, 2326, 2325, 2324, 101,
	97, 2322, 76, 39, 34, 74, 27, 2319, 2318, 91,
	106, 2317, 31, 2316, 5, 6, 3, 2315, 2310, 2309,
	2307, 2304, 2301, 2300, 84, 2299, 2298, 72, 2297, 2294,
	2293, 41, 2284, 2278, 2262, 150, 114, 140, 166, 205,
	12, 2256, 2238, 17, 2236, 120, 2232, 64, 2230, 67,
	2222, 2220, 65, 2205, 2203, 66, 2201, 2198, 169, 1857,
	171, 2193, 165, 147, 59, 81, 2191, 2189, 0, 835,
	163, 172, 2183, 2153,
}

var yyR1 = [...]int{
	0, 357, 357, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 67, 3, 3, 8,
	9, 4, 4, 4, 5, 89, 89, 184, 184, 184,
	184, 183, 183, 90, 90, 91, 91, 88, 88, 97,
	6, 6, 7, 7, 10, 10, 71, 71, 11, 12,
	12, 12, 12, 360, 360, 106, 106, 104, 104, 105,
	105, 181, 181, 13, 13, 13, 188, 188, 193, 193,
	193, 196, 196, 196, 196, 171, 172, 173, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	331, 331, 340, 340, 340, 341, 341, 339, 339, 339,
	339, 339, 343, 343, 344, 344, 342, 342, 342, 342,
	346, 346, 347, 347, 345, 345, 345, 345, 345, 345,
	345, 345, 345, 345, 345, 345, 345, 345, 334, 334,
	334, 34, 34, 34, 34, 35, 35, 35, 35, 35,
	35, 348, 348, 348, 348, 348, 348, 348, 348, 348,
	348, 348, 348, 348, 348, 348, 348, 348, 348, 348,
	348, 348, 348, 348, 348, 348, 348, 348, 348, 348,
	348, 348, 349, 349, 350, 350, 351, 351, 352, 352,
	352, 352, 353, 353, 353, 353, 353, 354, 354, 354,
	354, 354, 354, 354, 355, 355, 356, 356, 2, 312,
	312, 313, 313, 314, 314, 314, 314, 315, 315, 316,
	316, 317, 317, 317, 317, 317, 317, 317, 317, 317,
	317, 25, 220, 220, 217, 217, 217, 218, 218, 219,
	219, 219, 333, 333, 333, 327, 327, 327, 329, 329,
	328, 328, 328, 330, 330, 335, 335, 335, 335, 335,
	337, 337, 337, 337, 337, 337, 338, 338, 338, 336,
	336, 49, 49, 50, 50, 50, 160, 160, 160, 14,
	14, 14, 14, 14, 20, 22, 22, 38, 38, 39,
	23, 23, 23, 23, 40, 40, 41, 26, 26, 26,
	26, 26, 26, 47, 47, 47, 46, 46, 45, 45,
	45, 45, 45, 45, 24, 24, 24, 24, 48, 48,
	43, 43, 42, 44, 44, 44, 44, 44, 44, 44,
	44, 44, 44, 44, 44, 27, 27, 27, 27, 27,
	27, 19, 311, 311, 311, 37, 37, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 53, 285, 286,
	286, 286, 286, 286, 286, 286, 286, 272, 272, 273,
	262, 262, 262, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 239, 239, 239, 239, 245,
	245, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 244, 244, 244, 244, 244, 244, 244, 244, 246,
	246, 246, 246, 246, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 248, 248, 248, 248, 248, 248, 248, 248, 271,
	271, 249, 249, 265, 265, 266, 266, 266, 263, 263,
	263, 264, 264, 252, 253, 267, 254, 254, 254, 255,
	255, 255, 256, 256, 261, 261, 260, 260, 260, 260,
	260, 260, 257, 257, 257, 257, 258, 258, 259, 270,
	270, 270, 270, 270, 250, 36, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 298, 298,
	210, 210, 211, 211, 275, 275, 296, 296, 295, 295,
	294, 294, 294, 284, 284, 291, 291, 291, 291, 291,
	291, 291, 291, 279, 279, 279, 278, 278, 280, 280,
	283, 283, 293, 293, 292, 292, 276, 276, 276, 299,
	299, 299, 299, 299, 277, 277, 277, 277, 300, 281,
	281, 282, 282, 282, 305, 306, 304, 304, 304, 304,
	304, 123, 123, 123, 288, 288, 288, 289, 289, 289,
	290, 290, 290, 309, 309, 308, 308, 51, 52, 56,
	56, 55, 55, 55, 55, 55, 55, 55, 55, 55,
	55, 55, 55, 55, 55, 55, 55, 55, 55, 55,
	55, 55, 55, 55, 55, 55, 55, 159, 159, 159,
	215, 215, 303, 301, 301, 302, 302, 16, 16, 54,
	54, 332, 332, 17, 17, 17, 17, 17, 17, 17,
	17, 17, 307, 307, 307, 18, 18, 57, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 85, 202, 202, 201, 201, 200, 200,
	200, 203, 203, 203, 203, 237, 237, 237, 59, 59,
	59, 63, 63, 66, 66, 66, 64, 65, 28, 29,
	29, 29, 29, 30, 216, 216, 61, 61, 62, 62,
	62, 62, 77, 77, 362, 362, 60, 363, 68, 69,
	69, 70, 70, 70, 206, 206, 74, 74, 74, 72,
	72, 72, 73, 73, 79, 79, 83, 83, 83, 83,
	82, 82, 82, 82, 162, 162, 167, 229, 229, 143,
	143, 163, 163, 168, 168, 168, 169, 169, 170, 170,
	170, 170, 170, 165, 165, 164, 164, 166, 131, 131,
	227, 227, 227, 226, 226, 226, 226, 87, 87, 92,
	92, 92, 94, 94, 94, 94, 94, 98, 145, 145,
	116, 116, 117, 117, 117, 117, 117, 129, 129, 180,
	180, 179, 179, 182, 182, 93, 95, 95, 95, 95,
	101, 101, 102, 102, 103, 103, 214, 214, 234, 234,
	234, 107, 107, 107, 109, 108, 108, 108, 108, 110,
	110, 96, 287, 287, 274, 241, 241, 242, 242, 111,
	111, 113, 114, 114, 112, 112, 118, 118, 115, 119,
	119, 119, 119, 120, 120, 84, 84, 84, 84, 84,
	84, 84, 84, 199, 199, 122, 122, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 139, 139, 139,
	139, 139, 139, 124, 124, 124, 124, 124, 124, 124,
	78, 78, 140, 140, 140, 100, 99, 99, 81, 81,
	80, 80, 141, 141, 127, 127, 127, 127, 127, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 134, 134,
	138, 138, 138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 137, 137, 137,
	137, 137, 137, 137, 137, 137, 137, 137, 132, 132,
	132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
	132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 361, 361, 136,
	135, 135, 135, 135, 135, 135, 75, 75, 75, 75,
	75, 235, 235, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 152, 152,
	76, 76, 150, 150, 151, 153, 153, 149, 149, 149,
	126, 126, 126, 126, 126, 126, 126, 126, 128, 128,
	128, 154, 154, 142, 142, 86, 155, 155, 156, 157,
	157, 158, 158, 161, 174, 174, 174, 175, 175, 175,
	175, 130, 130, 176, 176, 176, 125, 125, 125, 125,
	125, 125, 125, 178, 178, 177, 177, 177, 177, 185,
	185, 144, 144, 147, 147, 146, 148, 186, 186, 190,
	190, 187, 187, 191, 191, 191, 191, 194, 194, 195,
	195, 195, 192, 192, 192, 189, 189, 189, 231, 231,
	231, 197, 197, 207, 207, 204, 204, 205, 205, 198,
	198, 251, 251, 251, 213, 213, 212, 212, 212, 208,
	208, 208, 209, 209, 228, 228, 224, 224, 230, 230,
	225, 225, 232, 232, 233, 233, 310, 310, 268, 268,
	320, 320, 269, 269, 321, 321, 323, 323, 318, 318,
	319, 319, 322, 322, 31, 324, 324, 325, 325, 326,
	326, 326, 326, 32, 33, 33, 33, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 358, 359,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 11, 5, 7, 1,
	5, 1, 14, 3, 13, 0, 2, 0, 2, 3,
	3, 1, 3, 2, 3, 0, 1, 1, 3, 4,
	1, 3, 1, 3, 8, 9, 1, 1, 10, 9,
	8, 7, 7, 1, 1, 1, 3, 1, 3, 1,
	3, 0, 4, 3, 4, 5, 1, 3, 3, 2,
	2, 2, 2, 2, 1, 0, 0, 0, 2, 3,
	3, 11, 9, 11, 5, 5, 16, 12, 9, 4,
	0, 3, 0, 2, 2, 1, 3, 1, 1, 2,
	2, 2, 0, 2, 1, 2, 2, 2, 2, 2,
	0, 1, 1, 2, 3, 3, 5, 3, 3, 4,
	5, 4, 4, 2, 2, 2, 2, 2, 0, 2,
	2, 9, 9, 5, 7, 7, 7, 7, 8, 4,
	6, 2, 3, 2, 3, 3, 3, 4, 3, 3,
	2, 2, 3, 2, 2, 2, 2, 2, 3, 2,
	2, 2, 3, 3, 2, 3, 3, 2, 2, 2,
	2, 2, 1, 3, 0, 3, 1, 3, 0, 1,
	1, 1, 1, 3, 1, 3, 3, 0, 2, 5,
	5, 5, 7, 5, 0, 3, 0, 3, 4, 0,
	1, 1, 3, 2, 3, 3, 3, 0, 1, 1,
	2, 2, 2, 2, 1, 2, 2, 3, 3, 3,
	3, 4, 2, 3, 3, 3, 3, 0, 3, 0,
	3, 3, 1, 1, 1, 3, 2, 1, 1, 3,
	3, 2, 1, 1, 3, 1, 2, 5, 4, 6,
	4, 3, 3, 6, 5, 5, 4, 3, 5, 1,
	3, 1, 1, 1, 1, 1, 0, 2, 2, 1,
	1, 1, 1, 1, 4, 5, 8, 1, 2, 5,
	7, 10, 8, 11, 1, 2, 5, 5, 5, 5,
	6, 3, 5, 1, 1, 1, 1, 3, 1, 1,
	1, 2, 1, 1, 2, 4, 2, 4, 2, 3,
	1, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 4, 3, 2,
	4, 3, 0, 2, 3, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 5, 4, 1,
	1, 2, 3, 4, 3, 3, 3, 3, 3, 3,
	0, 1, 1, 0, 2, 3, 2, 2, 2, 2,
	2, 6, 8, 3, 3, 3, 1, 1, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 3, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 1, 4, 4, 3, 3, 2, 4,
	5, 2, 3, 4, 2, 2, 3, 3, 3, 3,
	3, 4, 1, 1, 1, 1, 1, 6, 6, 4,
	4, 4, 5, 3, 3, 3, 3, 3, 4, 6,
	6, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 3, 0, 5, 0, 3, 5, 0, 1,
	1, 0, 1, 2, 3, 1, 0, 3, 3, 0,
	2, 2, 0, 1, 0, 1, 1, 1, 1, 2,
	2, 2, 5, 5, 4, 4, 4, 4, 4, 2,
	1, 2, 1, 2, 2, 3, 2, 2, 2, 2,
	1, 1, 1, 1, 3, 2, 1, 1, 0, 3,
	1, 1, 0, 1, 5, 4, 0, 1, 1, 2,
	2, 3, 2, 0, 1, 3, 5, 3, 3, 5,
	3, 2, 2, 1, 1, 1, 1, 1, 0, 1,
	0, 1, 1, 3, 3, 3, 3, 3, 1, 10,
	11, 11, 12, 12, 3, 3, 2, 1, 5, 1,
	1, 0, 2, 2, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 2, 0, 1, 3, 1, 2, 3,
	1, 1, 1, 0, 2, 0, 2, 1, 5, 1,
	3, 5, 4, 3, 5, 3, 8, 10, 3, 3,
	3, 3, 3, 5, 4, 5, 1, 2, 2, 4,
	3, 6, 5, 3, 9, 2, 2, 0, 1, 2,
	0, 1, 7, 1, 3, 8, 8, 3, 3, 3,
	5, 3, 5, 5, 5, 4, 4, 4, 4, 4,
	4, 4, 0, 1, 1, 3, 2, 3, 3, 4,
	3, 5, 5, 5, 4, 4, 4, 2, 2, 2,
	6, 2, 4, 4, 4, 5, 8, 6, 3, 5,
	4, 2, 4, 3, 2, 4, 5, 6, 2, 6,
	6, 3, 3, 3, 0, 1, 1, 1, 0, 2,
	2, 0, 2, 3, 2, 0, 1, 1, 2, 4,
	1, 1, 1, 2, 4, 4, 1, 1, 2, 3,
	4, 4, 5, 3, 1, 1, 3, 3, 1, 1,
	1, 1, 0, 3, 1, 1, 3, 0, 2, 0,
	2, 1, 2, 2, 0, 1, 0, 1, 1, 0,
	1, 1, 0, 1, 3, 5, 1, 1, 3, 5,
	1, 2, 3, 5, 2, 2, 6, 0, 1, 0,
	3, 0, 1, 0, 2, 2, 4, 1, 2, 2,
	2, 2, 2, 0, 2, 1, 3, 3, 1, 3,
	0, 1, 2, 1, 1, 1, 1, 1, 3, 1,
	1, 1, 1, 4, 1, 3, 1, 2, 2, 4,
	2, 6, 1, 4, 6, 3, 2, 0, 3, 0,
	3, 1, 3, 1, 3, 4, 4, 4, 4, 3,
	2, 4, 0, 1, 0, 2, 0, 1, 1, 1,
	1, 1, 2, 2, 1, 2, 3, 2, 3, 2,
	2, 12, 1, 3, 3, 3, 3, 3, 4, 1,
	3, 3, 2, 1, 1, 3, 1, 3, 3, 0,
	5, 5, 5, 0, 2, 1, 3, 3, 3, 2,
	3, 1, 2, 0, 3, 1, 1, 3, 3, 4,
	4, 5, 3, 4, 5, 6, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	0, 2, 1, 1, 1, 3, 1, 3, 0, 1,
	1, 3, 1, 3, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 2, 2, 2,
	2, 3, 1, 1, 1, 1, 1, 1, 5, 6,
	6, 6, 5, 5, 5, 6, 5, 5, 6, 5,
	5, 5, 5, 6, 5, 5, 5, 4, 4, 5,
	5, 5, 5, 5, 4, 4, 4, 4, 4, 4,
	4, 3, 6, 6, 6, 8, 8, 8, 8, 4,
	6, 7, 7, 7, 9, 4, 7, 5, 4, 4,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 8, 8, 0, 2, 3,
	4, 4, 4, 4, 4, 4, 0, 3, 4, 7,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 3, 3, 1, 2,
	2, 1, 2, 1, 2, 2, 1, 2, 0, 1,
	0, 2, 1, 2, 4, 0, 2, 1, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 0, 3, 1, 3, 1, 0, 2, 1, 0,
	3, 1, 3, 2, 0, 1, 1, 0, 2, 4,
	4, 1, 1, 0, 2, 4, 2, 4, 1, 3,
	5, 4, 6, 0, 3, 1, 3, 3, 5, 0,
	5, 1, 3, 1, 2, 3, 1, 1, 3, 3,
	3, 1, 3, 1, 2, 2, 3, 1, 1, 1,
	1, 1, 3, 3, 3, 1, 2, 1, 1, 1,
	1, 1, 1, 0, 1, 0, 2, 0, 3, 0,
	1, 0, 3, 3, 1, 1, 0, 1, 1, 1,
	1, 1, 0, 1, 0, 2, 1, 1, 1, 3,
	1, 1, 1, 1, 1, 1, 0, 2, 0, 1,
	0, 4, 0, 1, 0, 3, 0, 3, 0, 4,
	0, 3, 0, 3, 3, 1, 3, 2, 4, 1,
	2, 1, 2, 2, 2, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -357, -1, -3, -9, -10, -11, -12, -13, -15,
	-51, -16, -17, -18, -57, -58, -59, -63, -64, -65,
	-61, -60, -24, -27, -19, -67, -28, -29, -30, -31,
	-32, -33, -34, -35, -36, -4, 6, 7, -91, 29,
	-53, 180, -52, 183, 182, 218, 184, 211, 64, 341,
	-66, 344, 345, -362, -216, 269, 270, 20, 37, 346,
	348, 30, 31, 232, 286, 288, 313, -5, -90, -6,
	181, 342, 213, 212, 26, 492, -358, 68, 611, -157,
	15, -68, -363, -68, -71, 9, 10, 8, 441, -68,
	-285, -214, 108, 68, 23, -209, -220, 88, 432, 188,
	-218, 282, 284, -207, -208, -217, 242, 252, 44, 199,
	198, 253, 189, 282, 189, 190, 192, 432, 188, 225,
	224, 282, 284, 189, -112, -232, 72, -222, 202, 596,
	307, 210, 489, 253, 606, 294, 341, 357, 349, 372,
	490, 549, 264, 340, 418, 297, 257, 320, 550, 407,
	413, 267, 344, 427, 551, 261, 263, 262, 247, 457,
	268, 36, 214, 368, 303, 242, 552, 545, 236, 35,
	27, 235, 430, 553, 331, 415, 389, 332, 554, 494,
	301, 414, 364, 313, 333, 555, 390, 394, 556, 419,
	287, 334, 557, 558, 559, 191, 293, 560, 243, 421,
	298, 388, 200, 491, 48, 222, 422, 392, 398, 561,
	330, 562, 563, 564, 565, 311, 309, 310, 312, 254,
	259, 53, 186, 396, 395, 397, 260, 417, 377, 375,
	566, 567, 302, 206, 568, 569, 18, 570, 571, 425,
	305, 572, 573, 574, 487, 575, 576, 416, 391, 393,
	241, 116, 577, 308, 412, 317, 493, 291, 579, 336,
	221, 216, 426, 326, 580, 581, 582, 583, 584, 285,
	284, 345, 318, 346, 265, 585, 586, 587, 588, 251,
	234, 429, 420, 52, 403, 589, 321, 337, 406, 342,
	7, 258, 299, 410, 319, 266, 252, 255, 379, 223,
	590, 591, 366, 367, 343, 226, 218, 111, 428, 544,
	282, 338, 229, 592, 593, 256, 230, 347, 296, 369,
	189, 133, 373, 418, 180, 408, 409, 415, -279, 416,
	224, 227, -237, 189, -202, 407, 287, 308, 462, 230,
	231, 190, 191, 32, 420, 419, 411, -232, 193, 347,
	-77, 184, 219, -112, -48, 72, 271, -48, 29, 72,
	72, 36, 72, 346, 410, 410, 75, 493, 233, 21,
	-349, -330, 317, -348, -328, 181, 180, 10, 182, 322,
	323, 324, 190, 8, 30, 578, 207, 325, 326, 6,
	211, 327, 328, 225, 9, 329, -333, 74, 72, -222,
	21, -349, -330, 317, -211, -210, 339, 398, 6, -70,
	5, -198, 194, 343, -88, 548, -97, -234, -232, -223,
	74, 300, 599, 290, 401, 458, 459, 460, 461, 233,
	462, 99, 231, 322, 323, 314, 324, 209, 117, 240,
	219, 279, 411, 278, 283, 463, 464, 465, 466, 289,
	609, 292, 610, 315, 578, 325, 327, 228, 469, 468,
	467, 470, 328, 452, 453, 471, 51, 473, 472, 474,
	192, 81, -8, -3, -90, -175, 17, 16, -74, 54,
	55, -69, -82, 124, -84, -232, -121, 91, -127, 28,
	72, -222, 24, -126, -223, -122, -149, -148, -100, 133,
	-236, 122, 123, 130, 92, 176, -134, -132, -133, -135,
	-137, -138, 74, 73, 82, 75, 76, 77, 78, 83,
	458, 459, 460, 461, 462, 209, 219, 463, 464, 465,
	466, 469, 468, 467, 470, 452, 453, 471, 473, 472,
	474, 84, 85, -224, -146, -358, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 58, 59,
	188, 442, 443, 444, 445, 446, 488, 450, 94, 47,
	533, 431, 440, 439, 438, 436, 437, 433, 435, 434,
	195, 432, 128, 441, 475, 476, 477, 478, 479, 480,
	481, 482, 484, 485, 483, -68, -68, -68, -187, 343,
	-194, -191, 419, 420, -192, -195, -189, -149, 398, 575,
	576, 418, 373, 417, -224, -232, -2, -5, 6, -112,
	-286, -273, -277, -225, 204, -300, -224, -221, 201, 72,
	-222, 495, 300, 185, 21, 181, 184, 90, 599, 23,
	25, 496, 290, 401, 458, 239, 93, 355, 133, 459,
	460, 461, 384, 449, 16, 20, 203, 94, 187, 370,
	373, 132, 197, 81, 273, 233, 275, 442, 462, 475,
	180, 62, 497, 433, 435, 431, 434, 274, 432, 408,
	498, 499, 500, 501, 363, 361, 272, 28, 502, 10,
	476, 26, 212, 246, 22, 503, 126, 359, 182, 237,
	97, 98, 505, 41, 99, 231, 40, 322, 306, 323,
	24, 276, 213, 314, 85, 506, 324, 209, 477, 360,
	507, 508, 117, 240, 19, 65, 205, 219, 279, 11,
	411, 199, 227, 605, 509, 286, 13, 456, 115, 278,
	14, 510, 511, 512, 513, 283, 195, 194, 110, 190,
	595, 60, 244, 8, 514, 353, 515, 516, 517, 518,
	519, 354, 176, 87, 520, 521, 107, 522, 56, 463,
	464, 486, 45, 32, 232, 478, 479, 546, 480, 447,
	523, 524, 38, 37, 383, 387, 382, 525, 399, 58,
	108, 17, 436, 437, 30, 526, 527, 488, 465, 220,
	386, 352, 381, 547, 528, 466, 529, 128, 249, 63,
	50, 289, 91, 339, 481, 482, 83, 362, 609, 33,
	86, 66, 217, 335, 304, 42, 88, 15, 245, 61,
	34, 454, 112, 292, 610, 315, 484, 365, 196, 224,
	578, 531, 423, 248, 532, 113, 485, 358, 548, 207,
	109, 348, 325, 183, 533, 441, 316, 270, 208, 534,
	288, 59, 535, 238, 114, 483, 188, 409, 536, 6,
	537, 451, 29, 211, 327, 269, 351, 198, 538, 250,
	281, 271, 280, 539, 49, 540, 295, 43, 228, 469,
	468, 467, 470, 607, 57, 444, 445, 471, 328, 594,
	189, 39, 96, 452, 453, 385, 350, 380, 193, 448,
	225, 84, 277, 5, 44, 31, 404, 9, 329, 64,
	67, 438, 439, 440, 47, 51, 374, 371, 541, 473,
	378, 472, 474, 192, 608, 95, 12, 542, 455, 492,
	424, 89, 543, 405, 190, 192, 441, -205, 195, -205,
	225, 224, -219, 250, -205, -205, 189, -218, 100, 100,
	-54, -112, -332, -327, -333, -204, 195, -224, -204, -204,
	-204, -204, -204, -204, -204, -112, 177, -104, -112, 72,
	29, -203, 108, 12, 432, 188, 189, 224, 225, 192,
	-281, 11, 110, 228, 228, 228, 229, 228, -201, 410,
	412, 226, 413, 414, 12, -85, 108, 19, -358, -175,
	-175, 125, 72, 346, 193, -62, -3, -12, -10, -11,
	-8, 100, -129, 23, 29, 29, 74, 51, 29, -43,
	-42, -44, 257, 258, 259, 260, 261, 262, 263, 264,
	265, 266, 267, 268, 29, -311, 68, -268, 398, 72,
	-324, -325, -112, 75, 75, 66, 66, 69, 193, 69,
	66, -350, 318, 68, -350, 284, 318, 319, 252, 282,
	192, -350, -350, 284, -350, -350, -350, -350, -350, 410,
	-350, -350, -350, 320, 321, -350, 408, 192, -350, -350,
	-350, -350, -350, 71, 66, 69, 308, 66, 11, 66,
	-297, 133, 331, 332, 333, 334, 330, 308, 335, 336,
	337, 228, 338, -68, -7, -5, -358, 21, 22, 189,
	423, 69, -88, -178, -358, -359, 70, -176, 19, 30,
	-130, 75, 78, -158, -161, -84, -232, 50, -72, 21,
	22, 80, 11, -227, 90, 88, 89, 107, -226, 23,
	72, -222, -223, 74, 177, -84, -124, 110, 91, 108,
	109, 93, 119, 118, 129, 122, 123, 124, 125, 126,
	127, 128, 120, 121, 132, 100, 101, 102, 103, 104,
	105, 106, -199, -358, -100, -358, 178, 179, -127, -127,
	-127, -127, -127, -127, -127, -358, -358, -358, -358, -358,
	-358, -358, -358, -358, -358, -358, -358, -358, -358, -358,
	-358, -358, -358, -358, -358, -358, -358, -8, -141, -84,
	-358, -358, -358, -358, -358, -358, -358, -358, -358, -358,
	-358, -152, -84, -358, -358, -361, -136, -358, -361, -136,
	-361, -136, -361, -358, -361, -136, -361, -136, -361, -361,
	-136, -361, -358, -358, -358, -358, -358, -358, -358, -358,
	-358, -358, -358, -358, -358, -358, -358, -198, -198, 11,
	-104, -105, -115, -232, 69, -188, -193, 421, 423, 343,
	-192, -192, -231, -224, 74, 28, 100, 29, 177, -157,
	-68, 70, 69, -277, 204, 201, -239, -245, -247, -246,
	-248, -243, -244, 370, 373, 377, 375, 371, 376, 133,
	374, 379, 380, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 29, 214, 366, 367, 368, 369, 390, 391,
	392, 393, 394, 395, 396, 397, 349, 372, 490, 350,
	351, 352, 353, 354, 355, 357, 358, 359, 360, 361,
	362, 363, 364, 72, -223, -300, 68, -224, -112, -220,
	-218, 72, 91, 72, -111, -224, -232, -118, -224, -232,
	251, -336, -335, -327, -330, -205, -219, -327, 256, 254,
	255, 69, 193, 69, 193, 71, -104, 24, 66, -106,
	-112, 72, 72, -111, -118, -329, -327, -330, -233, -232,
	-221, 201, 204, 69, -203, 74, -236, -84, -205, -205,
	-112, -112, -112, -112, -112, -203, -203, -203, -203, -200,
	11, 110, 11, -200, -200, -84, -127, -327, 434, 124,
	-232, 72, 72, 346, 72, 33, -43, -43, 74, -43,
	69, 100, -43, 70, -141, -310, 595, 69, -326, 23,
	423, 424, 399, -352, 189, 227, 224, -352, -348, 326,
	-329, -328, -327, -350, -351, -224, -350, -350, -350, 410,
	-350, -350, -350, -350, -350, -350, -350, -350, -333, -352,
	286, 69, -352, -329, -327, 330, 330, 330, 330, 330,
	330, -74, -8, -112, 424, 425, -97, 23, -177, -225,
	-184, 87, 9, 110, 69, 18, 69, -174, 25, 26,
	177, -128, 51, 75, 78, -206, 49, -112, -84, -84,
	-84, -139, 83, 91, 84, 85, -226, 124, -233, -225,
	-221, -127, -140, -146, -100, 79, 110, 108, 109, 93,
	-127, -127, -127, -127, -127, -127, -127, -127, -127, -127,
	-127, -127, -127, -127, -127, -235, 72, 74, 72, -126,
	-126, -224, -72, -80, -83, 124, -84, -232, -80, -80,
	-72, -80, -80, -80, -80, -72, -72, -80, -80, -80,
	-80, -224, -224, -72, -80, -80, -80, -72, -359, 69,
	-359, -8, -80, -80, -359, -84, -84, -149, 74, -80,
	-149, 74, -80, -127, 447, 448, 449, -80, -72, -150,
	-151, 95, -149, -80, -359, -127, -80, -81, -80, -80,
	-80, -359, -359, -83, -80, -83, -80, -80, -359, -359,
	-359, -359, -114, 87, -112, -87, -92, -94, -95, -96,
	-116, -99, -358, -93, 486, -112, -100, 72, -112, -104,
	-360, 11, 67, -360, 69, 177, -191, -194, 69, 422,
	424, 425, -188, -255, 132, 66, 86, -84, -225, -233,
	-175, -74, -288, -289, -290, -225, 74, 75, -273, -275,
	-276, -277, -291, 204, -299, 196, 198, 199, 44, -278,
	205, 190, 45, -240, -263, 403, 404, -249, 68, -249,
	-249, 378, 370, 373, 371, -249, -249, -249, -249, -249,
	-254, 373, -254, -254, -254, -254, 371, 68, 68, -249,
	-249, -249, -265, 68, -265, 365, -266, 68, -266, -266,
	-266, -266, -300, -300, -84, -228, 67, 23, 192, -261,
	-260, -257, -258, -259, -256, 28, 24, -261, -49, 239,
	210, 177, 68, 177, 242, 243, -331, 69, 28, -337,
	283, -112, -112, -112, -327, -327, -333, -307, 208, 203,
	-112, 69, 69, -112, 74, 72, 72, -129, -282, 11,
	110, -203, -232, -232, -112, -129, -203, -78, 215, 67,
	-361, -359, 72, -127, -42, -126, 70, -113, 87, 74,
	-325, -234, 398, 424, -353, 124, -224, -353, -356, 492,
	193, 70, 69, -350, -353, 304, 286, -353, 11, -298,
	19, -72, -359, -56, -55, 185, 182, 183, 186, 187,
	-303, 401, 181, 236, 235, 221, -99, -358, -359, 69,
	177, -183, 34, 35, -224, 52, -130, -130, -161, -197,
	19, 11, 47, 47, -73, 57, 83, 84, 85, 177,
	-358, -140, -127, -127, -127, -78, 90, -359, -80, 69,
	-359, 177, -359, -359, -80, -359, -359, -359, -359, -80,
	-80, -359, -359, -359, -359, 69, 69, -80, -359, -359,
	-359, -81, -84, -359, -359, -359, 69, 67, 23, 11,
	11, -359, 11, 11, -359, -359, 11, -127, -127, -127,
	-359, -80, -153, -151, 97, -84, -359, -359, -359, -359,
	-359, -359, -359, -162, 454, -162, -359, -359, -359, -359,
	-359, -162, -162, -162, -162, -181, 112, -112, 29, 69,
	-107, -109, -108, -110, 56, 60, 62, 57, 58, 59,
	63, -214, -87, -98, 47, -358, -358, -117, 112, -119,
	23, -234, 64, 194, 65, -358, -181, 67, -87, -87,
	-115, -232, 124, -193, -196, 426, 423, 429, 72, 74,
	177, -176, 69, -290, 100, -277, 68, 72, -283, -223,
	45, -278, 190, 45, -280, -278, -278, -283, 72, -283,
	45, 83, 91, -252, -253, -267, -270, -250, 23, 605,
	406, 487, 28, 66, 401, 196, 45, 44, 199, 81,
	-264, 405, 75, -254, -254, -249, -249, -249, 378, -249,
	-254, -255, 133, 29, -255, 133, -255, 133, -255, 133,
	-255, 133, -254, -271, 74, -271, 75, -265, 75, 70,
	66, -224, -171, -112, -258, -257, -259, 373, 418, 132,
	430, -50, 8, 9, 10, -224, -312, -313, -314, -224,
	110, 244, 245, -224, -340, 316, -335, 284, 293, 90,
	16, 492, 193, 193, -112, -327, -120, 12, 72, 72,
	-200, -203, -127, -330, 230, 231, -181, 189, -326, 193,
	177, 177, 193, 307, -329, -224, 11, 11, 304, 11,
	-329, 340, -206, 69, -215, -278, -309, -276, -277, -308,
	197, 204, 205, -215, 204, 201, -278, 205, 196, 197,
	-212, -278, 193, 23, -215, -215, -284, 100, -215, 32,
	32, 112, -225, -225, 69, 74, 74, 53, -112, -79,
	-172, 124, -225, -81, -78, 90, -127, -359, -83, -163,
	-162, 124, -233, -163, -163, -359, -163, -163, -359, -359,
	-163, -163, -163, -163, -127, -127, -359, -163, -163, -163,
	-359, -238, 133, 370, 214, 368, 361, 388, 375, 403,
	366, 404, -235, -238, -127, -127, -127, -127, -127, 11,
	11, 11, 489, -157, 99, -84, 96, -224, -167, -358,
	-162, -162, -162, -162, -162, -125, 29, 47, -358, -8,
	-358, -186, -190, -149, -221, -92, -94, -94, -92, -94,
	56, 56, 56, 61, 56, 61, 56, -108, -234, -359,
	-359, -145, 238, 74, -358, 33, -234, -119, 190, 190,
	190, -81, -120, -87, -120, -120, 177, 423, 427, 428,
	-289, -290, -293, -292, -224, -223, 196, -299, 44, -299,
	-283, -283, -283, -283, 68, 83, -358, 606, 75, 74,
	-127, 9, 45, 45, 45, 74, 70, -255, 133, -255,
	133, -254, -249, -255, 133, 72, 133, -255, 133, 70,
	69, 70, 69, 70, 69, -123, 553, 91, -112, -173,
	23, 29, -284, -284, -284, 66, 70, 69, -239, -224,
	-224, -224, -343, 492, 289, -341, -339, 295, 296, 297,
	298, 299, -330, 294, -337, 291, 74, 72, -112, -327,
	-84, -129, -254, -112, -329, 124, 124, -224, -329, 304,
	-355, 492, -329, -329, 11, -329, 74, -73, -55, 68,
	-272, 72, -223, -283, -208, 196, 72, 72, 72, -223,
	72, -223, -224, 45, 45, 72, -112, -224, -272, 72,
	-84, -224, -224, 177, -224, -184, 69, -82, -359, -127,
	-163, 177, -163, -163, -163, 69, 69, -163, -359, -249,
	-249, -249, -266, -249, 354, -249, 354, -359, -359, 19,
	19, 19, 19, -359, -127, -127, -127, -358, -76, 451,
	-84, -229, 72, -185, 66, -186, -144, -147, -146, -358,
	-8, -359, -177, 6, 492, -182, -224, -120, 69, 100,
	100, -102, -101, 66, 67, -103, 66, -101, 56, 56,
	-180, 68, 69, -146, -358, 69, -182, -127, -119, -358,
	-358, -358, -359, -157, -120, 70, 69, -249, -249, 45,
	-280, -179, -224, -127, 23, -133, 452, 453, -255, 133,
	-254, 74, -254, 75, 75, 553, 68, -8, -171, -284,
	72, 133, 72, 133, 74, -112, -315, -316, -317, 81,
	491, 91, 246, 247, 206, 248, 249, 250, -314, -239,
	-239, -239, -346, -347, -345, 292, 314, 315, 300, -344,
	-342, 309, 310, 311, 312, 90, 74, 74, 74, -338,
	283, 90, 292, 16, 23, -203, -318, -201, -355, -355,
	286, -329, -79, -272, -159, 209, 210, -239, -239, -228,
	-280, 45, 72, -213, 193, 23, 193, -159, -272, 29,
	182, 87, -225, -89, 11, -172, -172, 124, -127, -127,
	-254, 72, -127, -127, -127, -127, -359, -359, -359, -127,
	-359, 74, -143, 112, 27, -185, 69, -359, -359, 47,
	-359, -359, 69, -157, -190, -84, -84, -84, 68, -84,
	-179, 238, 74, -359, -119, -214, -179, -179, -179, -175,
	-295, -294, 67, 200, 81, -292, -174, -174, -283, -283,
	70, 69, -359, -358, -255, 133, -255, 133, 70, 70,
	-293, -171, -173, 72, 133, 19, -172, -317, 74, 250,
	246, 250, 250, 250, 250, 251, -334, 81, 290, -345,
	301, 558, 285, 316, 75, 75, 111, 30, 31, -342,
	75, 75, 75, 75, -339, 16, 492, -337, 291, 74,
	74, -319, 38, -321, 39, -354, 23, -354, 304, 11,
	70, 72, -240, -240, 68, -283, -283, 72, -224, -159,
	28, 28, -358, -120, -87, -82, -359, -359, -359, -359,
	-359, -359, -75, 110, 492, -157, 16, 45, -147, -144,
	47, -8, -358, -224, -175, -179, 70, -146, 413, -117,
	-234, -359, -359, -359, -294, 72, -284, 74, 207, -224,
	-262, 608, 607, -127, 70, -8, 237, -173, 36, 36,
	242, 243, 74, 74, 28, 302, 176, 28, 75, 176,
	457, 291, 74, 72, 292, -251, 194, -322, 43, -320,
	-269, 42, 16, -327, -87, -293, -228, 68, -127, -301,
	-302, 112, -154, 13, -172, -359, 490, 63, 493, -168,
	114, 113, -141, 9, -144, -8, 70, -358, -119, 75,
	-112, -359, -296, -295, -171, 238, -21, -3, -10, -11,
	-12, -13, -15, -51, -16, -17, -22, -23, -18, -57,
	-58, -66, -64, -65, -61, -60, -26, -24, -27, -19,
	-28, -29, -30, -34, -35, -25, -36, 94, 195, 272,
	341, 75, 28, 75, 28, 305, 292, 23, -180, 75,
	-321, 16, -323, 40, 41, 74, 492, -120, 70, 68,
	-293, -359, 69, -224, -155, 14, 16, 53, 491, 494,
	-359, -169, 93, -170, 111, 457, -131, 75, 176, -169,
	-186, -359, -287, -274, -225, 68, -262, -160, 240, 241,
	-171, -84, -84, 72, -47, -230, 275, 276, 277, -225,
	-37, -21, 303, 303, 74, 38, 114, 74, 16, 16,
	284, -154, -296, -293, 70, -302, 47, -165, 455, -156,
	-84, -142, -86, -84, 53, -170, 116, 117, 238, 116,
	117, -126, -359, 69, -239, -179, -171, 72, 72, -38,
	-39, 95, 96, 273, 274, 278, -239, 69, 611, 74,
	74, 28, 289, 21, -330, -155, 70, -296, 222, -164,
	-166, -224, 69, 492, 90, -224, -359, -274, -241, 487,
	24, 70, -173, 99, 97, -39, -84, -37, 19, 19,
	19, 28, -225, 99, -21, 306, -165, -296, 223, 69,
	23, -86, 493, -170, 23, 74, 487, -305, -306, 66,
	-14, -20, -13, -10, -11, -12, 341, -90, 94, -37,
	96, 611, -48, 75, -8, -46, -45, 75, -48, 280,
	91, 281, 72, -127, -330, -358, -166, -167, 494, -234,
	-242, 83, 28, 74, -306, 66, -305, 66, 10, 9,
	-171, -37, 611, -37, 99, 97, -40, -41, 98, -21,
	69, 279, -127, 220, 66, -127, -304, 208, 203, 206,
	29, -304, 611, 99, 611, 195, -37, 99, 97, -41,
	-84, -45, -359, -359, 505, 66, 202, 28, 83, 99,
	94, 611, 195, -37, 96, 505, 99, 611, -37, 195,
	99, 611, 195,
}

var yyDef = [...]int{
	-2, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, -2, 767, 767, 0, 767,
	866, -2, 627, 0, 0, 0, 0, -2, 740, 741,
	742, 746, 747, 762, 764, 0, 345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 552, 41, 56, 0,
	1229, 0, 765, 754, 755, 0, 0, 1845, 2, 1167,
	0, 776, 769, 0, 767, 767, 767, 66, 67, 0,
	98, 0, 0, 0, 867, 0, 0, 0, 1227, 1227,
	249, 1227, 1227, 0, 1243, 247, 0, 1224, 1239, 1240,
	1241, 0, 0, 0, 1225, 0, 1225, 1225, 1225, 1225,
	1225, 1225, 1225, 0, 686, 894, 1252, 1253, 1602, 1603,
	1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613,
	1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623,
	1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633,
	1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643,
	1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653,
	1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663,
	1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673,
	1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683,
	1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693,
	1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703,
	1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713,
	1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723,
	1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733,
	1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743,
	1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753,
	1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763,
	1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773,
	1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783,
	1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793,
	0, 0, 0, 731, 0, 697, 698, 699, 0, 701,
	0, 0, 0, 0, 0, 711, 714, 718, 0, 1167,
	1167, 573, 574, 575, 736, 737, 725, 738, 0, 0,
	55, 0, 0, 847, 324, 326, 0, 346, 0, 349,
	352, 1258, 748, 0, 0, 1283, 1284, 0, 0, 0,
	0, 0, 1729, 192, 263, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 0, 194, 194, 194, 1737, 194,
	0, 194, 194, 194, 194, 194, 262, 252, 253, 254,
	0, 0, 0, 1729, 0, 553, 550, 551, 767, 0,
	771, 0, 1230, 743, 53, 0, 57, 1183, 868, 869,
	870, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802,
	1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812,
	1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822,
	1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832,
	1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842,
	1843, 1844, 0, 39, 0, 1173, 0, 0, 779, 777,
	778, 768, 0, 790, 820, 0, 905, 0, 911, 913,
	-2, -2, 0, 954, 955, 956, 957, 958, 959, 0,
	0, 0, 0, 0, 0, 0, 982, 983, 984, 985,
	986, 987, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147,
	1798, 1799, 1800, 1801, 1803, 1810, 1813, 1818, 1819, 1820,
	1821, 1831, 1832, 1833, 1834, 1836, 1837, 1838, 1840, 1841,
	1842, 915, 916, 1137, 1196, 0, 1073, 1074, 1075, 1076,
	1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086,
	1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096,
	1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106,
	1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1128, 0,
	0, 1057, 1057, 1057, 1057, 1057, 1057, 1057, 1057, 1057,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1229, 1229, 0, 83, 1778,
	0, 1201, -2, -2, 1203, 0, 0, 0, -2, -2,
	-2, -2, 0, -2, 1137, 0, 99, 1159, 767, 100,
	0, 389, 390, 0, 1321, 597, 1250, 1251, 1317, 1246,
	1247, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295,
	1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305,
	1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315,
	1316, 1318, 1319, 1320, 1322, 1323, 1324, 1325, 1326, 1327,
	1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337,
	1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347,
	1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357,
	1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367,
	1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377,
	1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387,
	1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397,
	1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407,
	1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417,
	1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427,
	1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437,
	1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447,
	1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457,
	1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467,
	1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477,
	1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487,
	1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497,
	1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507,
	1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517,
	1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527,
	1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537,
	1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547,
	1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557,
	1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567,
	1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577,
	1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587,
	1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597,
	1598, 1599, 1600, 1601, 0, 0, 247, 0, 0, 0,
	0, 0, 242, 0, 0, 0, 1227, 249, 0, 0,
	667, 0, 668, 0, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 685, 0, 687, 77, 688,
	731, 690, 0, 0, 1227, 1227, 0, 0, 0, 0,
	0, 599, 600, 731, 731, 731, 731, 728, 0, 728,
	708, 728, 726, 727, 0, 713, 0, 0, 0, 721,
	722, 0, 749, 0, 0, 756, 758, 759, 760, 761,
	757, 0, 766, 0, 0, 0, 328, 0, 0, 348,
	330, 0, 333, 334, 335, 336, 337, 338, 339, 340,
	341, 342, 343, 344, 0, 351, 0, 1256, 1259, 753,
	1274, 1275, 0, 1285, 1286, 198, 198, 0, 0, 0,
	0, 161, 194, 0, 163, 194, 194, 194, 0, 194,
	194, 170, 171, 194, 173, 174, 175, 176, 177, 194,
	179, 180, 181, 194, 194, 184, 194, 194, 187, 188,
	189, 190, 191, 261, 198, 0, 0, 198, 0, 0,
	535, 0, 0, 0, 0, 540, 541, 542, 543, 0,
	0, 546, 547, 776, 43, 62, 0, 772, 773, 0,
	0, 0, 54, 0, 0, 61, 1846, 47, 0, 0,
	1168, 1171, 1172, 1160, 1161, 1164, 0, 0, 774, 780,
	781, 770, 0, 791, 0, 0, 0, 0, 821, 0,
	823, 824, 825, 826, 0, 909, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 933, 934, 935, 936, 937,
	938, 939, 912, 0, 926, 0, 0, 0, 975, 976,
	977, 978, 979, 980, 0, 779, 0, 0, 0, 779,
	0, 0, 0, 0, 779, 779, 0, 0, 0, 0,
	0, 0, 779, 0, 0, 0, 779, 0, 0, 952,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	779, 0, 1129, 0, 0, 1040, 1049, 0, 1041, 1050,
	1042, 1051, 1043, 0, 1044, 1052, 1045, 1053, 1046, 1047,
	1054, 1048, 0, 948, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 79, 894, 0, 84, 86, 0, 0, 1778,
	1204, 1205, 509, 1218, 1219, 1220, 0, 1216, 0, 1167,
	776, 614, 0, 391, 0, 0, 403, 498, 416, 417,
	418, 491, 420, 491, 491, 0, 491, 491, 491, 491,
	491, 506, 506, 506, 506, 506, 462, 463, 464, 465,
	466, 0, 0, 439, 491, 491, 491, 443, 481, 482,
	483, 484, 485, 486, 487, 488, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 493, 493, 495, 495,
	495, 495, 495, 0, 0, 596, 0, 1244, 0, 0,
	249, -2, 0, -2, 0, 889, 0, 0, 896, 0,
	0, 110, 279, 265, 109, 0, 243, 248, 244, 245,
	246, 0, 0, 0, 0, 256, 682, 1226, 0, 675,
	75, 676, 677, 678, 679, 680, 258, 681, 895, 1254,
	1255, 1317, 1321, 0, 689, 732, 0, 734, 0, 0,
	847, 694, 695, 696, 601, 702, 703, 704, 710, 731,
	0, 0, 0, 847, 731, 712, 940, 715, 1057, 0,
	739, 751, 750, 0, 763, 0, 325, 327, 329, 347,
	0, 0, 350, 353, 0, 0, 0, 0, 1277, 0,
	1279, 1281, 0, 0, 199, 200, 201, 0, 193, 0,
	216, 264, 0, 162, 0, 196, 164, 165, 166, 194,
	168, 169, 172, 178, 182, 183, 185, 186, 260, 0,
	0, 0, 0, 159, 0, 536, 537, 538, 539, 548,
	545, 779, 0, 0, 744, 745, 58, 0, 0, 1185,
	37, 0, 1174, 0, 0, 0, 0, 1163, 1165, 1166,
	0, 0, 1148, 0, 0, 782, 775, 40, 906, 907,
	908, 910, 927, 0, 929, 931, 822, 792, 0, 1138,
	-2, 917, 918, 942, 943, 944, 0, 0, 0, 0,
	940, 922, 0, 960, 961, 962, 963, 964, 965, 966,
	967, 968, 969, 970, 971, 974, 1071, 1072, 0, 972,
	973, 981, 0, 0, 950, 786, 787, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 948, 945, 0,
	1195, 0, 0, 0, 1021, 0, 0, 957, 1140, 0,
	957, 1140, 0, 0, 0, 0, 0, 0, 0, 1135,
	1132, 0, 0, 0, 1058, 0, 0, 0, 949, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 81, 0, 893, 0, 827, 829, 830, 831,
	832, -2, 0, 836, 0, 899, 946, 1252, -2, 0,
	0, 73, 74, 0, 0, 0, 1202, 0, 0, 0,
	89, 90, 85, 1206, 0, 1212, 1213, 1214, 1138, 0,
	1173, 779, 388, 615, 617, 620, 621, 622, 392, 394,
	395, 396, 0, -2, 588, 1496, 1535, -2, -2, 580,
	1384, -2, -2, 399, 501, 499, 500, 419, 0, 506,
	506, 491, 491, 491, 491, 448, 506, 451, 454, 455,
	509, 0, 509, 509, 509, 509, 506, 0, 0, 440,
	441, 442, 431, 0, 432, 493, 434, 0, 435, 436,
	437, 438, 594, 595, 0, 0, 0, 95, 0, 104,
	-2, 516, 517, 518, 0, 513, 1228, 105, 0, 281,
	282, 0, 219, 0, 250, 251, 112, 0, 0, 266,
	0, 387, 0, 669, 0, 671, 255, 673, 683, 684,
	674, 0, 0, 78, 733, 691, 692, 693, 903, 0,
	0, 705, 729, 730, 728, 731, 709, 723, 0, 0,
	716, 0, 752, 848, 331, 332, 354, 81, 0, 1257,
	1276, 0, 1280, 1282, 0, 202, 204, 0, 153, 0,
	0, 195, 0, 167, 0, 0, 0, 0, 0, 544,
	0, 774, 63, 628, 629, -2, 660, 1236, 660, 660,
	646, 563, 660, 0, 0, 0, 59, 0, 1184, 0,
	0, 48, 0, 1643, 51, 0, 1169, 1170, 1162, 0,
	1221, 1222, 1149, 1150, 96, 783, 928, 930, 932, 0,
	948, 919, 940, 923, 0, 920, 0, 914, 0, 0,
	801, 0, 801, 801, 0, 1035, 1020, 801, 801, 0,
	0, 801, 801, 801, 801, 0, 0, 0, 801, 801,
	801, 0, 953, -2, 1018, 1019, 0, 0, 0, 0,
	0, 1064, 0, 0, 1065, 1029, 0, 0, 0, 0,
	0, 1159, 0, 1133, 0, 0, 1038, 1039, 1059, 1060,
	1061, 1062, 1063, 1007, 0, 1008, 0, 0, 0, 0,
	0, 1014, 1015, 1016, 1017, 0, 0, 892, 0, 0,
	0, 0, 0, 0, 871, 0, 0, 874, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 840, 0, 842,
	0, 899, 0, 0, 0, 948, 903, 0, 903, 903,
	80, 0, 898, 87, 88, 0, 0, 94, 510, 511,
	0, 218, 0, 618, 0, 393, 0, 581, 0, 0,
	580, 580, 576, 577, 580, 579, 580, 571, 581, 572,
	0, 404, 0, 406, 407, 408, 409, 410, 0, 0,
	0, 0, 0, 0, 505, 0, 530, 532, 0, 0,
	415, 502, 0, 509, 509, 506, 446, 447, 491, 452,
	509, 456, 473, 0, 457, 474, 458, 475, 459, 476,
	460, 477, 509, 0, 489, 0, 0, 433, 0, 611,
	0, 1245, 97, 0, 519, 520, 521, 0, 563, 563,
	563, 0, 283, 284, 285, 890, 0, 220, 221, 0,
	0, 0, 0, 897, 122, 0, 280, 0, 0, 0,
	0, 0, 0, 0, 76, 259, 700, 0, 602, 603,
	847, 707, 941, 717, 719, 720, 506, 0, 1278, 0,
	0, 0, 0, 0, 214, 197, 0, 0, 0, 0,
	160, 0, 782, 0, 0, 580, 0, 647, 648, 0,
	661, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1237, 1238, 0, 0, 0, 564, 0, 655,
	656, 0, 1187, 1186, 0, 49, 50, 1175, 38, 47,
	0, 793, 1139, 0, 921, 0, 924, 801, 951, 992,
	802, 788, 0, 993, 994, 801, 996, 997, 801, 801,
	1001, 1000, 999, 1002, 0, 0, 801, 1005, 1004, 1006,
	988, 0, 491, 491, 1118, 491, 495, 1121, 491, 1123,
	491, 1126, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1130, 1037, 1136, 0, 794, 795, 797,
	1009, 1010, 1011, 1012, 1013, 1189, 0, 0, 0, 1178,
	0, 903, 1197, 0, 0, 828, 862, 864, 0, 859,
	872, 873, 875, 0, 877, 0, 879, 880, 849, 835,
	947, 837, 0, 0, 0, 0, 899, 846, 0, 0,
	0, 0, 1159, 903, 71, 72, 0, 91, 92, 93,
	616, 619, 0, 582, 491, 491, 0, 586, 578, 587,
	565, 567, 568, 570, 0, 405, 0, 0, 413, 414,
	503, 0, 529, 531, 533, 534, 492, 444, 469, 445,
	470, 509, 453, 449, 471, 507, 508, 461, 478, 506,
	0, 506, 0, 496, 0, 598, 612, 0, 0, 0,
	95, 563, 0, 0, 0, 0, 227, 0, 223, 0,
	0, 0, 130, 0, 113, 114, 115, 117, 118, 0,
	0, 0, 111, 0, 268, 0, 271, 272, 670, 672,
	904, 731, 1268, 891, 214, 203, 205, 206, 214, 217,
	154, 0, 155, 157, 0, 156, 549, 96, 630, 0,
	657, 0, 0, 1244, 578, 0, -2, 633, 638, 639,
	640, 641, 642, 0, 653, 0, 635, 0, 657, 0,
	650, 0, 0, 0, 52, 45, 96, 96, 989, 925,
	991, 0, 995, 990, 998, 0, 0, 1003, 1022, 1115,
	506, 1119, 1120, 1122, 1124, 1125, 1127, 1024, 1023, 0,
	0, 0, 0, 1030, 0, 0, 0, 0, 0, 0,
	1134, 799, 798, 64, 0, 1189, 1176, 1191, 1193, 0,
	0, 0, 0, -2, 1597, 0, 853, 1159, 0, 0,
	0, 856, 863, 0, 0, 857, 0, 858, 876, 878,
	833, 0, 0, 838, 0, 0, 0, -2, 845, 0,
	0, 0, 855, 1167, 70, 555, 0, 1164, 1164, 580,
	580, 0, 851, 0, 0, 504, 0, 0, 450, 472,
	509, 490, 509, 0, 0, 613, 0, 95, 97, 0,
	524, 525, 526, 527, 528, 0, 96, 228, 229, 0,
	0, 0, 234, 0, 0, 0, 0, 0, 222, 224,
	225, 226, 148, 131, 132, 0, 0, 0, 0, 123,
	124, 0, 0, 0, 0, 0, 119, 120, 121, 267,
	0, 0, 270, 0, 0, 706, 1270, 1264, 207, 207,
	0, 158, 0, 0, 632, 658, 0, 403, 403, 0,
	580, 580, 649, 0, 1234, 1235, 0, 644, 657, 0,
	0, 0, 1188, 903, 0, 0, 784, 789, 0, 0,
	1116, 1117, 0, 0, 0, 0, 1031, 1032, 1033, 1066,
	1036, 1131, 1159, 0, 0, 65, 0, 1194, -2, 0,
	0, 82, 0, 1167, 1198, 1199, 1200, 860, 0, 865,
	0, 0, 0, 899, 843, 0, 0, 0, 0, 69,
	554, 558, 0, 563, 0, 583, 584, 585, 566, 569,
	0, 0, 400, 0, 467, 479, 468, 480, 494, 497,
	0, 102, 0, 522, 523, 0, 97, 230, 231, 232,
	233, 235, 236, 0, 0, 0, 108, 0, 0, 133,
	0, 0, 0, 0, 143, 144, 145, 146, 147, 125,
	126, 127, 128, 129, 116, 0, 0, 269, 0, 274,
	275, 1231, 1272, -2, 0, 151, 0, 152, 215, 0,
	631, 659, 397, 398, 0, 1244, 0, 634, 643, 645,
	0, 652, 0, 1151, 46, 96, 1055, 1056, 1025, 1027,
	1026, 1028, 0, 0, 0, 803, 0, 0, 1192, 1177,
	0, 1181, 0, 854, 68, 0, 850, 839, 0, 841,
	899, 900, 901, 902, 559, 560, 0, 562, 0, 852,
	411, 401, 402, 0, 556, 95, 0, 55, 237, 238,
	239, 240, 149, 150, 134, 135, 0, 137, 138, 0,
	0, 0, 277, 0, 273, 849, 0, 1264, 0, 1266,
	0, 1263, 0, 208, 903, 0, 0, 0, 651, 0,
	663, 0, 1156, 0, 785, 1034, 0, 0, 0, 0,
	0, 0, 800, 0, 1180, 0, 861, 0, 844, 561,
	0, 400, 101, 557, 103, 286, 95, 357, 358, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 0, 0, 0,
	55, 0, 139, 0, 141, 142, 276, 0, 36, 0,
	1271, 0, 1269, 0, 0, 1265, 0, 1151, 556, 0,
	0, 662, 0, 0, 813, 0, 0, 1067, 0, 1070,
	796, 804, 0, 807, 0, 0, 0, 818, 0, 805,
	1190, -2, 0, 882, 0, 0, 412, 95, 0, 0,
	107, 0, 0, 1246, 0, 0, -2, -2, -2, 1248,
	0, 355, 136, 140, 278, 1232, 1233, 1273, 0, 0,
	0, 1156, 636, 0, 556, 664, 0, 44, 0, 1157,
	1158, 1152, 1153, 1155, 1068, 0, 808, 809, 810, 811,
	812, 0, 0, 0, 0, 0, 97, 287, 288, 0,
	297, 0, 55, 0, 0, 0, 311, 0, 55, 1267,
	1261, 209, 210, 211, 213, 813, 556, 654, 0, 814,
	815, 0, 0, 0, 0, 819, 0, 883, 884, 0,
	0, 589, 55, 0, 55, 298, 0, 0, 0, 0,
	0, 0, 1249, 241, 356, 0, 42, 637, 0, 0,
	0, 1154, 0, 806, 0, 0, 0, 590, 591, 0,
	95, 289, 290, 291, 292, 293, 55, 56, 295, 0,
	55, 55, 307, 308, 309, 55, 316, 318, 319, 320,
	0, 322, 323, 312, 212, 0, 816, 817, 1069, 881,
	885, 0, 0, 886, 592, 0, 593, 0, 0, 0,
	106, 0, 55, 0, 0, 55, 0, 304, 0, 310,
	0, 321, 0, 0, 0, 0, 604, 606, 607, 0,
	0, 605, 55, 0, -2, 300, 0, 0, 55, 305,
	0, 317, 665, 666, 887, 0, 608, 609, 610, 294,
	296, 55, 302, 0, 55, 888, 0, 55, 0, 301,
	0, -2, 303,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 92, 3, 3, 3, 127, 119, 3,
	68, 70, 124, 122, 69, 123, 177, 125, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 611,
	101, 100, 102, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 129, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 118, 3, 130,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 82, 83, 84, 85,
	86, 87, 88, 89, 90, 91, 93, 94, 95, 96,
	97, 98, 99, 103, 104, 105, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 116, 117, 120, 121,
	126, 128, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 274, 275,
}

var yyTok3 = [...]int{
	57600, 276, 57601, 277, 57602, 278, 57603, 279, 57604, 280,
	57605, 281, 57606, 282, 57607, 283, 57608, 284, 57609, 285,
	57610, 286, 57611, 287, 57612, 288, 57613, 289, 57614, 290,
	57615, 291, 57616, 292, 57617, 293, 57618, 294, 57619, 295,
	57620, 296, 57621, 297, 57622, 298, 57623, 299, 57624, 300,
	57625, 301, 57626, 302, 57627, 303, 57628, 304, 57629, 305,
	57630, 306, 57631, 307, 57632, 308, 57633, 309, 57634, 310,
	57635, 311, 57636, 312, 57637, 313, 57638, 314, 57639, 315,
	57640, 316, 57641, 317, 57642, 318, 57643, 319, 57644, 320,
	57645, 321, 57646, 322, 57647, 323, 57648, 324, 57649, 325,
	57650, 326, 57651, 327, 57652, 328, 57653, 329, 57654, 330,
	57655, 331, 57656, 332, 57657, 333, 57658, 334, 57659, 335,
	57660, 336, 57661, 337, 57662, 338, 57663, 339, 57664, 340,
	57665, 341, 57666, 342, 57667, 343, 57668, 344, 57669, 345,
	57670, 346, 57671, 347, 57672, 348, 57673, 349, 57674, 350,
	57675, 351, 57676, 352, 57677, 353, 57678, 354, 57679, 355,
	57680, 356, 57681, 357, 57682, 358, 57683, 359, 57684, 360,
	57685, 361, 57686, 362, 57687, 363, 57688, 364, 57689, 365,
	57690, 366, 57691, 367, 57692, 368, 57693, 369, 57694, 370,
	57695, 371, 57696, 372, 57697, 373, 57698, 374, 57699, 375,
	57700, 376, 57701, 377, 57702, 378, 57703, 379, 57704, 380,
	57705, 381, 57706, 382, 57707, 383, 57708, 384, 57709, 385,
	57710, 386, 57711, 387, 57712, 388, 57713, 389, 57714, 390,
	57715, 391, 57716, 392, 57717, 393, 57718, 394, 57719, 395,
	57720, 396, 57721, 397, 57722, 398, 57723, 399, 57724, 400,
	57725, 401, 57726, 402, 57727, 403, 57728, 404, 57729, 405,
	57730, 406, 57731, 407, 57732, 408, 57733, 409, 57734, 410,
	57735, 411, 57736, 412, 57737, 413, 57738, 414, 57739, 415,
	57740, 416, 57741, 417, 57742, 418, 57743, 419, 57744, 420,
	57745, 421, 57746, 422, 57747, 423, 57748, 424, 57749, 425,
	57750, 426, 57751, 427, 57752, 428, 57753, 429, 57754, 430,
	57755, 431, 57756, 432, 57757, 433, 57758, 434, 57759, 435,
	57760, 436, 57761, 437, 57762, 438, 57763, 439, 57764, 440,
	57765, 441, 57766, 442, 57767, 443, 57768, 444, 57769, 445,
	57770, 446, 57771, 447, 57772, 448, 57773, 449, 57774, 450,
	57775, 451, 57776, 452, 57777, 453, 57778, 454, 57779, 455,
	57780, 456, 57781, 457, 57782, 458, 57783, 459, 57784, 460,
	57785, 461, 57786, 462, 57787, 463, 57788, 464, 57789, 465,
	57790, 466, 57791, 467, 57792, 468, 57793, 469, 57794, 470,
	57795, 471, 57796, 472, 57797, 473, 57798, 474, 57799, 475,
	57800, 476, 57801, 477, 57802, 478, 57803, 479, 57804, 480,
	57805, 481, 57806, 482, 57807, 483, 57808, 484, 57809, 485,
	57810, 486, 57811, 487, 57812, 488, 57813, 489, 57814, 490,
	57815, 491, 57816, 492, 57817, 493, 57818, 494, 57819, 495,
	57820, 496, 57821, 497, 57822, 498, 57823, 499, 57824, 500,
	57825, 501, 57826, 502, 57827, 503, 57828, 504, 57829, 505,
	57830, 506, 57831, 507, 57832, 508, 57833, 509, 57834, 510,
	57835, 511, 57836, 512, 57837, 513, 57838, 514, 57839, 515,
	57840, 516, 57841, 517, 57842, 518, 57843, 519, 57844, 520,
	57845, 521, 57846, 522, 57847, 523, 57848, 524, 57849, 525,
	57850, 526, 57851, 527, 57852, 528, 57853, 529, 57854, 530,
	57855, 531, 57856, 532, 57857, 533, 57858, 534, 57859, 535,
	57860, 536, 57861, 537, 57862, 538, 57863, 539, 57864, 540,
	57865, 541, 57866, 542, 57867, 543, 57868, 544, 57869, 545,
	57870, 546, 57871, 547, 57872, 548, 57873, 549, 57874, 550,
	57875, 551, 57876, 552, 57877, 553, 57878, 554, 57879, 555,
	57880, 556, 57881, 557, 57882, 558, 57883, 559, 57884, 560,
	57885, 561, 57886, 562, 57887, 563, 57888, 564, 57889, 565,
	57890, 566, 57891, 567, 57892, 568, 57893, 569, 57894, 570,
	57895, 571, 57896, 572, 57897, 573, 57898, 574, 57899, 575,
	57900, 576, 57901, 577, 57902, 578, 57903, 579, 57904, 580,
	57905, 581, 57906, 582, 57907, 583, 57908, 584, 57909, 585,
	57910, 586, 57911, 587, 57912, 588, 57913, 589, 57914, 590,
	57915, 591, 57916, 592, 57917, 593, 57918, 594, 57919, 595,
	57920, 596, 57921, 597, 57922, 598, 57923, 599, 57924, 600,
	57925, 601, 57926, 602, 57927, 603, 57928, 604, 57929, 605,
	57930, 606, 57931, 607, 57932, 608, 57933, 609, 57934, 610,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:541
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:545
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:552
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:587
		{
			setParseTree(yylex, nil)
		}
	case 36:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:593
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 37:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:599
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			if err := yyDollar[1].selStmt.SetInto(yyDollar[5].into); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 38:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:610
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:616
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 40:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:626
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:633
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 42:
		yyDollar = yyS[yypt-14 : yypt+1]
//line sql.y:637
		{
			yyVAL.selStmt = &Select{With: yyDollar[1].with, Comments: Comments(yyDollar[3].bytes2), Cache: yyDollar[4].str, Distinct: yyDollar[5].str, Hints: yyDollar[7].str, SelectExprs: yyDollar[8].selectExprs, From: yyDollar[10].tableExprs, Where: NewWhere(WhereStr, yyDollar[11].expr), GroupBy: GroupBy(yyDollar[12].exprs), Having: NewWhere(HavingStr, yyDollar[13].expr), Window: yyDollar[14].window}
			if yyDollar[6].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 43:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:644
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 44:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:650
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr), Window: yyDollar[13].window, Into: yyDollar[8].into}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 45:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:658
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:662
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:671
		{
			yyVAL.into = nil
		}
	case 48:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:675
		{
			yyVAL.into = &Into{Variables: yyDollar[2].variables}
		}
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:679
		{
			yyVAL.into = &Into{Outfile: string(yyDollar[3].bytes)}
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:683
		{
			yyVAL.into = &Into{Dumpfile: string(yyDollar[3].bytes)}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:689
		{
			yyVAL.variables = Variables{yyDollar[1].colIdent}
		}
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:693
		{
			yyVAL.variables = append(yyVAL.variables, yyDollar[3].colIdent)
		}
	case 53:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:699
		{
			yyVAL.with = &With{Ctes: yyDollar[2].tableExprs, Recursive: false}
		}
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:703
		{
			yyVAL.with = &With{Ctes: yyDollar[3].tableExprs, Recursive: true}
		}
	case 55:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:708
		{
			yyVAL.with = nil
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:712
		{
			yyVAL.with = yyDollar[1].with
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:718
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:722
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 59:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:728
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[4].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[2].columns}
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:734
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:742
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:748
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:756
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 64:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:762
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[7].ins
			ins.Action = yyDollar[2].str
			ins.Comments = yyDollar[3].bytes2
			ins.Ignore = yyDollar[4].str
			ins.Table = yyDollar[5].tableName
			ins.Partitions = yyDollar[6].partitions
			ins.OnDup = OnDup(yyDollar[8].assignExprs)
			ins.With = yyDollar[1].with
			yyVAL.statement = ins
		}
	case 65:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:775
		{
			cols := make(Columns, 0, len(yyDollar[8].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[9].assignExprs))
			for _, updateList := range yyDollar[8].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[2].str, Comments: Comments(yyDollar[3].bytes2), Ignore: yyDollar[4].str, Table: yyDollar[5].tableName, Partitions: yyDollar[6].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[9].assignExprs), With: yyDollar[1].with}
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:787
		{
			yyVAL.str = InsertStr
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:791
		{
			yyVAL.str = ReplaceStr
		}
	case 68:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:797
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[3].bytes2), Ignore: yyDollar[4].str, TableExprs: yyDollar[5].tableExprs, Exprs: yyDollar[7].assignExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), OrderBy: yyDollar[9].orderBy, Limit: yyDollar[10].limit, With: yyDollar[1].with}
		}
	case 69:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:803
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitions, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit, With: yyDollar[1].with}
		}
	case 70:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:807
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[5].tableNames, TableExprs: yyDollar[7].tableExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), With: yyDollar[1].with}
		}
	case 71:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:811
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), With: yyDollar[1].with}
		}
	case 72:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:815
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), With: yyDollar[1].with}
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:820
		{
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:821
		{
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:825
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:829
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:835
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:839
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:845
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:849
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 81:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:854
		{
			yyVAL.partitions = nil
		}
	case 82:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:858
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 83:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:864
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 84:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:868
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 85:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:875
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:884
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:888
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:894
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 89:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:898
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:902
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 91:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:908
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:912
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:916
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:920
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 95:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:925
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:930
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 97:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:935
		{
			yyVAL.boolean = yySpecialCommentMode(yylex)
		}
	case 98:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:941
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:950
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:955
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 101:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:960
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 102:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:964
		{
			yyDollar[2].viewSpec.ViewName = yyDollar[4].tableName.ToViewName()
			yyDollar[2].viewSpec.ViewExpr = yyDollar[8].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[2].viewSpec, SpecialCommentMode: yyDollar[7].boolean, SubStatementPositionStart: yyDollar[6].int, SubStatementPositionEnd: yyDollar[9].int - 1}
		}
	case 103:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:970
		{
			yyDollar[4].viewSpec.ViewName = yyDollar[6].tableName.ToViewName()
			yyDollar[4].viewSpec.ViewExpr = yyDollar[10].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[4].viewSpec, SpecialCommentMode: yyDollar[9].boolean, SubStatementPositionStart: yyDollar[8].int, SubStatementPositionEnd: yyDollar[11].int - 1, OrReplace: true}
		}
	case 104:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:976
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 105:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:984
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 106:
		yyDollar = yyS[yypt-16 : yypt+1]
//line sql.y:992
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName, Definer: yyDollar[2].str, Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[15].statement}, SpecialCommentMode: yyDollar[14].boolean, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[16].int - 1}
		}
	case 107:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:996
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName, Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[11].statement}, SpecialCommentMode: yyDollar[10].boolean, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[12].int - 1}
		}
	case 108:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1000
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].tlsOptionItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].accountLimitItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].passLockItems)
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames, TLSOptions: tlsOptions, AccountLimits: accountLimits, PasswordOptions: passwordOptions, Locked: locked, Attribute: yyDollar[9].str}
		}
	case 109:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1019
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 110:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1028
		{
			yyVAL.accountNames = nil
		}
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1032
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1037
		{
			yyVAL.tlsOptionItems = nil
		}
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1041
		{
			yyVAL.tlsOptionItems = nil
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1045
		{
			yyVAL.tlsOptionItems = yyDollar[2].tlsOptionItems
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1051
		{
			yyVAL.tlsOptionItems = []TLSOptionItem{yyDollar[1].tlsOptionItem}
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1055
		{
			yyVAL.tlsOptionItems = append(yyDollar[1].tlsOptionItems, yyDollar[3].tlsOptionItem)
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1061
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1065
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1069
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1073
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1077
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 122:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1082
		{
			yyVAL.accountLimitItems = nil
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1086
		{
			yyVAL.accountLimitItems = yyDollar[2].accountLimitItems
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1092
		{
			yyVAL.accountLimitItems = []AccountLimitItem{yyDollar[1].accountLimitItem}
		}
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1096
		{
			yyVAL.accountLimitItems = append(yyDollar[1].accountLimitItems, yyDollar[2].accountLimitItem)
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1102
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1106
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1110
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1114
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1119
		{
			yyVAL.passLockItems = nil
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1123
		{
			yyVAL.passLockItems = yyDollar[1].passLockItems
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1129
		{
			yyVAL.passLockItems = []PassLockItem{yyDollar[1].passLockItem}
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1133
		{
			yyVAL.passLockItems = append(yyDollar[1].passLockItems, yyDollar[2].passLockItem)
		}
	case 134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1139
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1143
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 136:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1147
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 137:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1151
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1155
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 139:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1159
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 140:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1163
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 141:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1167
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 142:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1171
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1175
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1179
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1183
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1187
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1191
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 148:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1196
		{
			yyVAL.str = ""
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1200
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.str = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1205
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 151:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1211
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 152:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1216
		{
			yyVAL.statement = &GrantPrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 153:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1220
		{
			yyVAL.statement = &GrantRole{Roles: yyDollar[2].accountNames, To: yyDollar[4].accountNames, WithAdminOption: yyDollar[5].boolean}
		}
	case 154:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1224
		{
			yyVAL.statement = &GrantProxy{On: yyDollar[4].accountName, To: yyDollar[6].accountNames, WithGrantOption: yyDollar[7].boolean}
		}
	case 155:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1230
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &RevokePrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 156:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1235
		{
			yyVAL.statement = &RevokePrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 157:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1239
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[7].accountNames}
		}
	case 158:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1243
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[8].accountNames}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1247
		{
			yyVAL.statement = &RevokeRole{Roles: yyDollar[2].accountNames, From: yyDollar[4].accountNames}
		}
	case 160:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1251
		{
			yyVAL.statement = &RevokeProxy{On: yyDollar[4].accountName, From: yyDollar[6].accountNames}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1257
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].strs}
		}
	case 162:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1261
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].strs}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1265
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].strs}
		}
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1269
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].strs}
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1273
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].strs}
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1277
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].strs}
		}
	case 167:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1281
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].strs}
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1285
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].strs}
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1289
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].strs}
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1293
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].strs}
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1297
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].strs}
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1301
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].strs}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1305
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].strs}
		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1309
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].strs}
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1313
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].strs}
		}
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1317
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].strs}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1321
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].strs}
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1325
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].strs}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1329
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].strs}
		}
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1333
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].strs}
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1337
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].strs}
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1341
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].strs}
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1345
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].strs}
		}
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1349
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].strs}
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1353
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].strs}
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1357
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].strs}
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1361
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].strs}
		}
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1365
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].strs}
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1369
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].strs}
		}
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1373
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].strs}
		}
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1377
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].strs}
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1383
		{
			yyVAL.grantPrivileges = []Privilege{yyDollar[1].grantPrivilege}
		}
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1387
		{
			yyVAL.grantPrivileges = append(yyDollar[1].grantPrivileges, yyDollar[3].grantPrivilege)
		}
	case 194:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1392
		{
			yyVAL.strs = nil
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1396
		{
			yyVAL.strs = yyDollar[2].strs
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1402
		{
			yyVAL.strs = []string{yyDollar[1].colIdent.String()}
		}
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1406
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].colIdent.String())
		}
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1411
		{
			yyVAL.grantObjectType = GrantObjectType_Any
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1415
		{
			yyVAL.grantObjectType = GrantObjectType_Table
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1419
		{
			yyVAL.grantObjectType = GrantObjectType_Function
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1423
		{
			yyVAL.grantObjectType = GrantObjectType_Procedure
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1429
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1433
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1437
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].colIdent.String()}
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1441
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: "*"}
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1445
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: yyDollar[3].colIdent.String()}
		}
	case 207:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1450
		{
			yyVAL.grantAssumption = nil
		}
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1454
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 209:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1458
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 210:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1462
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].accountName, Roles: nil}
		}
	case 211:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1466
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].accountName, Roles: nil}
		}
	case 212:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1470
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].accountName, Roles: yyDollar[7].accountNames}
		}
	case 213:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1474
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].accountName, Roles: yyDollar[5].accountNames}
		}
	case 214:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1479
		{
			yyVAL.boolean = false
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1483
		{
			yyVAL.boolean = true
		}
	case 216:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1488
		{
			yyVAL.boolean = false
		}
	case 217:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1492
		{
			yyVAL.boolean = true
		}
	case 218:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1499
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 219:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1511
		{
			yyVAL.procedureParams = nil
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1515
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1521
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1525
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1531
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[1].colIdent.String(), Type: yyDollar[2].columnType}
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1535
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1539
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1543
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 227:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1548
		{
			yyVAL.characteristics = nil
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1552
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1558
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1562
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1568
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1572
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1576
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1580
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1584
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1588
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1592
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1596
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1600
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1604
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 241:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1610
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1616
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: "", Definer: yyDollar[1].str, Security: yyDollar[2].str}
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1620
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: yyDollar[1].str, Definer: yyDollar[2].str, Security: yyDollar[3].str}
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1626
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1630
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1634
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 247:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1639
		{
			yyVAL.str = ""
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1643
		{
			yyVAL.str = yyDollar[3].accountName.String()
		}
	case 249:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1648
		{
			yyVAL.str = ""
		}
	case 250:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1652
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 251:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1656
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1662
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1666
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1670
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1676
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 256:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1684
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1688
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1694
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1698
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1704
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1712
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1720
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1730
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 264:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1734
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1740
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1744
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 267:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1748
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 268:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1752
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 269:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1756
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1762
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1766
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1770
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 273:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1774
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 274:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1778
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 275:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1782
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 276:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1788
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1792
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 278:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1796
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1802
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1806
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1812
		{
			yyVAL.str = BeforeStr
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1816
		{
			yyVAL.str = AfterStr
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1822
		{
			yyVAL.str = InsertStr
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1826
		{
			yyVAL.str = UpdateStr
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1830
		{
			yyVAL.str = DeleteStr
		}
	case 286:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1835
		{
			yyVAL.triggerOrder = nil
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1839
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1843
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1849
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 294:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1859
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 295:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1865
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 296:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1869
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1875
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1879
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 299:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1885
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 300:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1891
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 301:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1896
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 302:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1901
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 303:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1907
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1915
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1919
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 306:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1925
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 307:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1931
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 308:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1935
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 309:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1939
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 310:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1943
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1947
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 312:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1951
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1958
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1962
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1966
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1972
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1976
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1982
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1986
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1990
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1994
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1998
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2002
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2008
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 325:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2012
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2016
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2020
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2026
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2030
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2036
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2040
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2046
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2052
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2056
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2060
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2064
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2068
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2072
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2076
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2080
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2084
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2088
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2092
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2096
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2102
		{
			yyVAL.statement = &Resignal{}
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2106
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 347:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2110
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2114
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2118
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 350:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2122
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2128
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 352:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2133
		{
			yyVAL.exprs = nil
		}
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2137
		{
			yyVAL.exprs = nil
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2141
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2147
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2151
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2157
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 387:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2192
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
		}
	case 388:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2208
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2215
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2220
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2225
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2231
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 393:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2235
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2240
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2244
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2248
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2254
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2262
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2272
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 400:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2281
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2285
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2289
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 403:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2294
		{
			yyVAL.columnType = ColumnType{}
		}
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2298
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2307
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2316
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2325
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2334
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2343
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2352
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 411:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2361
		{
			opt := ColumnType{GeneratedExpr: yyDollar[4].expr, Stored: yyDollar[6].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 412:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2370
		{
			opt := ColumnType{GeneratedExpr: yyDollar[6].expr, Stored: yyDollar[8].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2379
		{
			opt := ColumnType{SRID: NewIntVal(yyDollar[3].bytes)}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2388
		{
			opt := ColumnType{Path: string(yyDollar[3].bytes)}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2399
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2410
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2415
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2421
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2425
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2429
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2433
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2437
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2441
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2445
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2449
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2453
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2457
		{
			yyVAL.columnType = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2463
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2469
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2475
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2481
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 435:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2487
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2493
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2499
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2505
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2513
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2517
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 441:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2521
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2525
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2529
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2535
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2539
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2543
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2547
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2551
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 449:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2555
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 450:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2559
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2563
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2567
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2571
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2575
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2579
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2583
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2587
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2591
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2595
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2599
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2603
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2607
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2611
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2615
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2619
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2623
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 467:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2627
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 468:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2632
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2636
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2640
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 471:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2644
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 472:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2648
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, BinaryCollate: true}
		}
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2652
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2656
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2660
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2664
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2668
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 478:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2672
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 479:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2676
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, BinaryCollate: true}
		}
	case 480:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2680
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, BinaryCollate: true}
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2686
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2690
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2694
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2698
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2702
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2706
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2710
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2714
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2720
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2725
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2730
		{
			yyVAL.sqlVal = nil
		}
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2734
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2739
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 494:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2743
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2751
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2755
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 497:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2761
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2769
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2773
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2777
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 501:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2782
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2786
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2792
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2798
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2804
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 506:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2809
		{
			yyVAL.str = ""
		}
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2813
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2817
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 509:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2822
		{
			yyVAL.str = ""
		}
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2826
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 511:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2830
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 512:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2835
		{
			yyVAL.boolean = false
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2839
		{
			yyVAL.boolean = true
		}
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2844
		{
			yyVAL.charsetCollates = nil
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2848
		{
			yyVAL.charsetCollates = yyDollar[1].charsetCollates
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2854
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2858
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2862
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2866
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2870
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2874
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 522:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2880
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 523:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2884
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 524:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2888
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 525:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2892
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 526:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2898
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 527:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2902
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 528:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2908
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 529:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2914
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2918
		{
			yyVAL.colKeyOpt = colKey
		}
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2922
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2926
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2930
		{
			yyVAL.colKeyOpt = colKeyFulltextKey
		}
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2936
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2942
		{
			yyVAL.statement = &Flush{Type: yyDollar[2].str, Option: yyDollar[3].flushOption}
		}
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2948
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2952
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2956
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 539:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2960
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2964
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2968
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2972
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2976
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2980
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].str}
		}
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2984
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2988
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2992
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 548:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2997
		{
			yyVAL.str = ""
		}
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2999
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3003
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3005
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 552:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3008
		{
			yyVAL.str = ""
		}
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3010
		{
			yyVAL.str = yyDollar[1].str
		}
	case 554:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3014
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 555:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3018
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 556:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3023
		{
			yyVAL.indexOptions = nil
		}
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3027
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3033
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3037
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3043
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3047
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3052
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 563:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3058
		{
			yyVAL.str = ""
		}
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3062
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3070
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 566:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3074
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3078
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3082
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true}
		}
	case 569:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3086
		{
			var name string
			name = yyDollar[2].str
			if name == "" {
				name = yyDollar[5].str
			}
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].str), Name: NewColIdent(name), Unique: true}
		}
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3095
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3099
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 572:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3103
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3109
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3113
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 575:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3117
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3123
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3127
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 578:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3132
		{
			yyVAL.str = ""
		}
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3136
		{
			yyVAL.str = yyDollar[1].str
		}
	case 580:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3141
		{
			yyVAL.str = ""
		}
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3145
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3151
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3155
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3161
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3165
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3171
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3175
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3179
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 589:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3185
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 590:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3189
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 591:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3193
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 592:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3197
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 593:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3201
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3207
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3211
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3215
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3219
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 598:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3225
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3231
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3235
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 601:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3240
		{
			yyVAL.str = ""
		}
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3244
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3248
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3254
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3260
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3266
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3270
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3274
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3278
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3282
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3287
		{
			yyVAL.boolean = true
		}
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3291
		{
			yyVAL.boolean = true
		}
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3295
		{
			yyVAL.boolean = false
		}
	case 614:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3300
		{
			yyVAL.str = ""
		}
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3304
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3308
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3316
		{
			yyVAL.str = yyDollar[1].str
		}
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3320
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3324
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3330
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3334
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3338
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 623:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3343
		{
			yyVAL.str = ""
		}
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3347
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 625:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3352
		{
			yyVAL.str = string("")
		}
	case 626:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3356
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 628:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3365
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3378
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3382
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 631:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3388
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 632:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3395
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3402
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 634:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3406
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3410
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 636:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3415
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 637:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3419
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3423
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3428
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3433
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3438
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3443
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 643:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3447
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 644:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3451
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 645:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3458
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3464
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3468
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3474
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 649:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3480
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3485
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 651:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3489
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 652:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3493
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3497
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 654:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3503
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[7].indexColumns, Options: yyDollar[9].indexOptions}
			yyVAL.ddl = ddl
		}
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3509
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3513
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 657:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3518
		{
			yyVAL.columnOrder = nil
		}
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3522
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3526
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 660:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3531
		{
		}
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3533
		{
		}
	case 662:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3537
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3543
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3547
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 665:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3553
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 666:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3557
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3563
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3567
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3573
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 670:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3577
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3585
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 672:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3589
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 673:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3595
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 674:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3603
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 675:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3607
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 676:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3615
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 677:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3623
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 678:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3631
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName}, IfExists: exists}
		}
	case 679:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3639
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName}, IfExists: exists}
		}
	case 680:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3647
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 681:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3655
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 682:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3664
		{

		}
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3668
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3672
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3678
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3682
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3688
		{
			yyVAL.statement = &Analyze{Tables: yyDollar[3].tableNames}
		}
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3694
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 689:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3699
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3703
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 691:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3707
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 692:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3711
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 693:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3715
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 694:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3720
		{
			yyVAL.statement = &Show{Type: CreateProcedureStr, Table: yyDollar[4].tableName}
		}
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3724
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 696:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3728
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3732
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3736
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3740
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 700:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3744
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3748
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3752
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 703:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3756
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 704:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3760
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 705:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3764
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 706:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3768
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, AsOf: yyDollar[7].expr, Filter: yyDollar[8].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, Table: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 707:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3773
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3778
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 709:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3782
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3786
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3790
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3794
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3800
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3808
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 715:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3812
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 716:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3817
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 717:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3821
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3826
		{
			yyVAL.statement = &ShowPrivileges{}
		}
	case 719:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3830
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 720:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3834
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3838
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3842
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3848
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 724:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3854
		{
			yyVAL.boolean = false
		}
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3858
		{
			yyVAL.boolean = true
		}
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3864
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3868
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 728:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3874
		{
			yyVAL.str = ""
		}
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3878
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3882
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 731:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3888
		{
			yyVAL.showFilter = nil
		}
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3892
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3896
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[3].bytes)}
		}
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3900
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 735:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3906
		{
			yyVAL.str = ""
		}
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3910
		{
			yyVAL.str = SessionStr
		}
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3914
		{
			yyVAL.str = GlobalStr
		}
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3920
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3924
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: yyDollar[2].tableIdent.v + "/" + yyDollar[4].tableIdent.v}}
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3928
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3934
		{
			yyVAL.statement = &Begin{}
		}
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3938
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3944
		{
			yyVAL.statement = &Begin{}
		}
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3948
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 745:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3952
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3958
		{
			yyVAL.statement = &Commit{}
		}
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3964
		{
			yyVAL.statement = &Rollback{}
		}
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3970
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3976
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 750:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3980
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 751:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3984
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 752:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3988
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3994
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3999
		{
		}
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4000
		{
		}
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4004
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4008
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4014
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 762:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4022
		{
			yyVAL.str = ""
		}
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4026
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4037
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[3].expr}
			yyVAL.statement = &Show{Type: "columns", Table: yyDollar[2].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 767:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4043
		{
			setAllowComments(yylex, true)
		}
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4047
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 769:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4053
		{
			yyVAL.bytes2 = nil
		}
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4057
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4063
		{
			yyVAL.str = UnionStr
		}
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4067
		{
			yyVAL.str = UnionAllStr
		}
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4071
		{
			yyVAL.str = UnionDistinctStr
		}
	case 774:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4076
		{
			yyVAL.byt = 0
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4080
		{
			yyVAL.byt = 1
		}
	case 776:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4085
		{
			yyVAL.str = ""
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4089
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4093
		{
			yyVAL.str = SQLCacheStr
		}
	case 779:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4098
		{
			yyVAL.str = ""
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4102
		{
			yyVAL.str = ""
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4106
		{
			yyVAL.str = DistinctStr
		}
	case 782:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4111
		{
			yyVAL.str = ""
		}
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4115
		{
			yyVAL.str = StraightJoinHint
		}
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4121
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 785:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4129
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4140
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4144
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4148
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 789:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4152
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4158
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4162
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4166
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 793:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4170
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4176
		{
			yyVAL.over = &Over{NameRef: yyDollar[2].colIdent}
		}
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4180
		{
			yyVAL.over = (*Over)(yyDollar[2].windowDef)
		}
	case 796:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4186
		{
			yyVAL.windowDef = &WindowDef{NameRef: yyDollar[2].colIdent, PartitionBy: yyDollar[3].exprs, OrderBy: yyDollar[4].orderBy, Frame: yyDollar[5].frame}
		}
	case 797:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4191
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4194
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 799:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4199
		{
			yyVAL.exprs = nil
		}
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4203
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 801:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4208
		{
			yyVAL.over = nil
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4212
		{
			yyVAL.over = yyDollar[1].over
		}
	case 803:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4217
		{
			yyVAL.frame = nil
		}
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4221
		{
			yyVAL.frame = &Frame{Unit: RowsUnit, Extent: yyDollar[2].frameExtent}
		}
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4225
		{
			yyVAL.frame = &Frame{Unit: RangeUnit, Extent: yyDollar[2].frameExtent}
		}
	case 806:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4232
		{
			startBound := yyDollar[2].frameBound
			endBound := yyDollar[4].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound, End: endBound}
		}
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4255
		{
			startBound := yyDollar[1].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound}
		}
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4270
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedPreceding}
		}
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4274
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedFollowing}
		}
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4278
		{
			yyVAL.frameBound = &FrameBound{Type: CurrentRow}
		}
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4282
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprPreceding,
			}
		}
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4289
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprFollowing,
			}
		}
	case 813:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4297
		{
			yyVAL.window = nil
		}
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4300
		{
			yyVAL.window = yyDollar[2].window
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4306
		{
			yyVAL.window = Window{yyDollar[1].windowDef}
		}
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4309
		{
			yyVAL.window = append(yyDollar[1].window, yyDollar[3].windowDef)
		}
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4315
		{
			def := yyDollar[3].windowDef
			def.Name = yyDollar[1].colIdent
			yyVAL.windowDef = def
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4324
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4328
		{
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 820:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4333
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4337
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4341
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4347
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4351
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4355
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4359
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4365
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4369
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4380
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 833:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4384
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4394
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4400
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4407
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 838:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4413
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 839:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4417
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4423
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 841:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4428
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4439
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 843:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4443
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 844:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4447
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4451
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 846:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4455
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 847:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4466
		{
			yyVAL.expr = nil
		}
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4470
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 849:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4475
		{
			yyVAL.columns = nil
		}
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4479
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4485
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4489
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4495
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4499
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 855:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4505
		{
			yyVAL.tableExpr = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].selectExprs}
		}
	case 856:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4519
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 857:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4523
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 858:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4527
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4531
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4537
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 861:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4539
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 862:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4543
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4545
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 864:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4549
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4551
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 866:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4554
		{
			yyVAL.empty = struct{}{}
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4556
		{
			yyVAL.empty = struct{}{}
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4561
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4565
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4571
		{
			yyVAL.str = JoinStr
		}
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4575
		{
			yyVAL.str = JoinStr
		}
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4579
		{
			yyVAL.str = JoinStr
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4585
		{
			yyVAL.str = StraightJoinStr
		}
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4591
		{
			yyVAL.str = LeftJoinStr
		}
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4595
		{
			yyVAL.str = LeftJoinStr
		}
	case 877:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4599
		{
			yyVAL.str = RightJoinStr
		}
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4603
		{
			yyVAL.str = RightJoinStr
		}
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4609
		{
			yyVAL.str = NaturalJoinStr
		}
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4613
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 881:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:4623
		{
			yyVAL.tableExpr = &JSONTableExpr{Data: yyDollar[3].bytes, Path: string(yyDollar[5].bytes), Columns: yyDollar[8].TableSpec, Alias: yyDollar[12].tableIdent}
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4629
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4634
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4642
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4654
		{
			yyVAL.columnType = ColumnType{Path: string(yyDollar[2].bytes)}
		}
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4658
		{
			yyVAL.columnType = ColumnType{Path: string(yyDollar[3].bytes)}
		}
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4665
		{

		}
	case 888:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4669
		{

		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4694
		{
			yyVAL.triggerName = TriggerName{Name: yyDollar[1].colIdent}
		}
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4698
		{
			yyVAL.triggerName = TriggerName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4704
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4710
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4714
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4720
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4724
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4730
		{
			yyVAL.procedureName = ProcedureName{Name: yyDollar[1].colIdent}
		}
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4734
		{
			yyVAL.procedureName = ProcedureName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4740
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 899:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4745
		{
			yyVAL.indexHints = nil
		}
	case 900:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4749
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 901:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4753
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 902:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4757
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 903:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4762
		{
			yyVAL.expr = nil
		}
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4766
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4772
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4776
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4780
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4784
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 909:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4788
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4792
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4796
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 912:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4800
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 913:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4806
		{
			yyVAL.str = ""
		}
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4810
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4816
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4820
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4826
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4830
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 919:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4834
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 920:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4838
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 921:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4842
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4846
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 923:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4850
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 924:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4854
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 925:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4858
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4862
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4868
		{
			yyVAL.str = IsNullStr
		}
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4872
		{
			yyVAL.str = IsNotNullStr
		}
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4876
		{
			yyVAL.str = IsTrueStr
		}
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4880
		{
			yyVAL.str = IsNotTrueStr
		}
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4884
		{
			yyVAL.str = IsFalseStr
		}
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4888
		{
			yyVAL.str = IsNotFalseStr
		}
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4894
		{
			yyVAL.str = EqualStr
		}
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4898
		{
			yyVAL.str = LessThanStr
		}
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4902
		{
			yyVAL.str = GreaterThanStr
		}
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4906
		{
			yyVAL.str = LessEqualStr
		}
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4910
		{
			yyVAL.str = GreaterEqualStr
		}
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4914
		{
			yyVAL.str = NotEqualStr
		}
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4918
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 940:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4923
		{
			yyVAL.expr = nil
		}
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4927
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4933
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4937
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4941
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4947
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4953
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4957
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 948:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4963
		{
			yyVAL.selectExprs = nil
		}
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4970
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4974
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4980
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4984
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4990
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4994
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4998
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5002
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5006
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5010
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5014
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5018
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5022
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5026
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5030
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 965:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5034
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5038
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5042
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5046
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5050
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5054
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5058
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5062
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5066
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5070
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5074
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5078
		{
			yyVAL.expr = &UnaryExpr{Operator: yyDollar[1].str, Expr: yyDollar[2].expr}
		}
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5082
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5090
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5104
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5108
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5112
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 988:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5132
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 989:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5136
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 990:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5146
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 991:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5150
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 992:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5154
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 993:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5158
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 994:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5162
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 995:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5166
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 996:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5170
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 997:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5174
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 998:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5178
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 999:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5182
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1000:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5186
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1001:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5190
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1002:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5194
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1003:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5198
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1004:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5202
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1005:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5206
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1006:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5210
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1007:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5219
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1008:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5223
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1009:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5227
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 1010:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5231
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1011:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5235
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 1012:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5239
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1013:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5243
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1014:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5247
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1015:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5251
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1016:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5255
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1017:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5259
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1018:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5270
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1019:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5274
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1020:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5278
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5282
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1022:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5286
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 1023:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5290
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 1024:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5294
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 1025:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5298
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1026:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5302
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1027:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5306
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1028:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5310
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1029:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5314
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 1030:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5318
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 1031:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5322
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 1032:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5326
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 1033:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5330
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 1034:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5334
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 1035:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5338
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1036:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5342
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 1037:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5346
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 1038:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5350
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 1039:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5354
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1040:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5364
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1041:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5368
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5372
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1043:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5377
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1044:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5382
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1045:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5387
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1046:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5393
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1047:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5398
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1048:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5402
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1049:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5407
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1050:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5411
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1051:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5415
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1052:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5420
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1053:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5425
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1054:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5430
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1055:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5434
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1056:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5438
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1059:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5449
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1060:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5459
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1061:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5463
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1062:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5467
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1063:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5471
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1064:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5475
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1065:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5479
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1066:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5485
		{
			yyVAL.str = ""
		}
	case 1067:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5489
		{
			yyVAL.str = BooleanModeStr
		}
	case 1068:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5493
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 1069:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5497
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5501
		{
			yyVAL.str = QueryExpansionStr
		}
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5507
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5511
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5517
		{
			yyVAL.str = Armscii8Str
		}
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5521
		{
			yyVAL.str = AsciiStr
		}
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5525
		{
			yyVAL.str = Big5Str
		}
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5529
		{
			yyVAL.str = UBinaryStr
		}
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5533
		{
			yyVAL.str = Cp1250Str
		}
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5537
		{
			yyVAL.str = Cp1251Str
		}
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5541
		{
			yyVAL.str = Cp1256Str
		}
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5545
		{
			yyVAL.str = Cp1257Str
		}
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5549
		{
			yyVAL.str = Cp850Str
		}
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5553
		{
			yyVAL.str = Cp852Str
		}
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5557
		{
			yyVAL.str = Cp866Str
		}
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5561
		{
			yyVAL.str = Cp932Str
		}
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5565
		{
			yyVAL.str = Dec8Str
		}
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5569
		{
			yyVAL.str = EucjpmsStr
		}
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5573
		{
			yyVAL.str = EuckrStr
		}
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5577
		{
			yyVAL.str = Gb18030Str
		}
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5581
		{
			yyVAL.str = Gb2312Str
		}
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5585
		{
			yyVAL.str = GbkStr
		}
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5589
		{
			yyVAL.str = Geostd8Str
		}
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5593
		{
			yyVAL.str = GreekStr
		}
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5597
		{
			yyVAL.str = HebrewStr
		}
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5601
		{
			yyVAL.str = Hp8Str
		}
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5605
		{
			yyVAL.str = Keybcs2Str
		}
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5609
		{
			yyVAL.str = Koi8rStr
		}
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5613
		{
			yyVAL.str = Koi8uStr
		}
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5617
		{
			yyVAL.str = Latin1Str
		}
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5621
		{
			yyVAL.str = Latin2Str
		}
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5625
		{
			yyVAL.str = Latin5Str
		}
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5629
		{
			yyVAL.str = Latin7Str
		}
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5633
		{
			yyVAL.str = MacceStr
		}
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5637
		{
			yyVAL.str = MacromanStr
		}
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5641
		{
			yyVAL.str = SjisStr
		}
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5645
		{
			yyVAL.str = Swe7Str
		}
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5649
		{
			yyVAL.str = Tis620Str
		}
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5653
		{
			yyVAL.str = Ucs2Str
		}
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5657
		{
			yyVAL.str = UjisStr
		}
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5661
		{
			yyVAL.str = Utf16Str
		}
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5665
		{
			yyVAL.str = Utf16leStr
		}
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5669
		{
			yyVAL.str = Utf32Str
		}
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5673
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5677
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5681
		{
			yyVAL.str = Utf8mb4Str
		}
	case 1115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5687
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5691
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5695
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5699
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5703
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5707
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5713
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5717
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5721
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5725
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1125:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5729
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5733
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5737
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1128:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5742
		{
			yyVAL.expr = nil
		}
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5746
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1130:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5751
		{
			yyVAL.str = string("")
		}
	case 1131:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5755
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5761
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 1133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5765
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 1134:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5771
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 1135:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5776
		{
			yyVAL.expr = nil
		}
	case 1136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5780
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5786
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 1138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5790
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 1139:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5794
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5800
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5804
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5808
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5812
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5816
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5820
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5824
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5828
		{
			yyVAL.expr = &NullVal{}
		}
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5834
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 1149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5838
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5842
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1151:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5847
		{
			yyVAL.exprs = nil
		}
	case 1152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5851
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5857
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1154:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5861
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5867
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1156:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5872
		{
			yyVAL.expr = nil
		}
	case 1157:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5876
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5882
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1159:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5887
		{
			yyVAL.orderBy = nil
		}
	case 1160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5891
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5897
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 1162:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5901
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 1163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5907
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 1164:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5912
		{
			yyVAL.str = AscScr
		}
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5916
		{
			yyVAL.str = AscScr
		}
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5920
		{
			yyVAL.str = DescScr
		}
	case 1167:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5925
		{
			yyVAL.limit = nil
		}
	case 1168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5929
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 1169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5933
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 1170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5937
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5943
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5947
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1173:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5952
		{
			yyVAL.str = ""
		}
	case 1174:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5956
		{
			yyVAL.str = ForUpdateStr
		}
	case 1175:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5960
		{
			yyVAL.str = ShareModeStr
		}
	case 1176:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5973
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 1177:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5977
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5981
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 1179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5985
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 1180:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5990
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 1181:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5994
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 1182:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5998
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 1183:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6004
		{
			yyVAL.columns = nil
		}
	case 1184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6008
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6014
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6018
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 1187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6022
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1188:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6026
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 1189:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6031
		{
			yyVAL.assignExprs = nil
		}
	case 1190:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6035
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6041
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 1192:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6045
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6051
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 1194:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6055
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 1195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6061
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6067
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6077
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 1198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6081
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 1199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6087
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 1200:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6090
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6096
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 1202:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6100
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6106
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 1204:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6117
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1205:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6130
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6143
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6149
		{
			yyVAL.setScope = SetScope_Global
		}
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6153
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6159
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6163
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6167
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 1212:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6173
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6177
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1214:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6181
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 1216:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6188
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6195
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6199
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6203
		{
			yyVAL.expr = &Default{}
		}
	case 1223:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6212
		{
			yyVAL.byt = 0
		}
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6214
		{
			yyVAL.byt = 1
		}
	case 1225:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6217
		{
			yyVAL.byt = 0
		}
	case 1226:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6219
		{
			yyVAL.byt = 1
		}
	case 1227:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6222
		{
			yyVAL.byt = 0
		}
	case 1228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6224
		{
			yyVAL.byt = 1
		}
	case 1229:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6227
		{
			yyVAL.str = ""
		}
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6229
		{
			yyVAL.str = IgnoreStr
		}
	case 1231:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6232
		{
			yyVAL.sqlVal = nil
		}
	case 1232:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6234
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1233:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6236
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6240
		{
			yyVAL.empty = struct{}{}
		}
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6242
		{
			yyVAL.empty = struct{}{}
		}
	case 1236:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6245
		{
			yyVAL.empty = struct{}{}
		}
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6247
		{
			yyVAL.empty = struct{}{}
		}
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6249
		{
			yyVAL.empty = struct{}{}
		}
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6253
		{
			yyVAL.str = UniqueStr
		}
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6255
		{
			yyVAL.str = FulltextStr
		}
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6257
		{
			yyVAL.str = SpatialStr
		}
	case 1242:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6260
		{
			yyVAL.str = ""
		}
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6262
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1244:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6265
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 1245:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6267
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6271
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6275
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6281
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 1249:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6285
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6292
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6298
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6302
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6309
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1256:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6314
		{
			yyVAL.str = string("")
		}
	case 1257:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6316
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1258:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6319
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6321
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1260:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6324
		{
			yyVAL.EnclosedBy = nil
		}
	case 1261:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6328
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1262:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6333
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6337
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1264:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6342
		{
			yyVAL.sqlVal = nil
		}
	case 1265:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6346
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1266:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6351
		{
			yyVAL.sqlVal = nil
		}
	case 1267:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6355
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1268:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6360
		{
			yyVAL.Fields = nil
		}
	case 1269:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6364
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1270:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6369
		{
			yyVAL.Lines = nil
		}
	case 1271:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6373
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1272:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6378
		{
			yyVAL.sqlVal = nil
		}
	case 1273:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6382
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1274:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6388
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6394
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1276:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6398
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1277:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6404
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1278:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6408
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6414
		{
			yyVAL.lockType = LockRead
		}
	case 1280:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6418
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6422
		{
			yyVAL.lockType = LockWrite
		}
	case 1282:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6426
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1283:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6432
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1284:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6438
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[2].bytes)}
		}
	case 1285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6442
		{
			yyVAL.statement = &Kill{ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1286:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6446
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1845:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7041
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7050
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
