// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

//import "runtime/debug"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

func yySpecialCommentMode(yylex interface{}) bool {
	tkn := yylex.(*Tokenizer)
	return tkn.specialComment != nil
}

//line sql.y:64
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	variables                Variables
	into                     *Into
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	triggerName              TriggerName
	tableName                TableName
	tableNames               TableNames
	procedureName            ProcedureName
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	flushOption              *FlushOption
	replicationOption        *ReplicationOption
	replicationOptions       []*ReplicationOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	viewSpec                 *ViewSpec
	showFilter               *ShowFilter
	frame                    *Frame
	frameExtent              *FrameExtent
	frameBound               *FrameBound
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	charsetCollate           *CharsetAndCollate
	charsetCollates          []*CharsetAndCollate
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptionItem            TLSOptionItem
	tlsOptionItems           []TLSOptionItem
	accountLimitItem         AccountLimitItem
	accountLimitItems        []AccountLimitItem
	passLockItem             PassLockItem
	passLockItems            []PassLockItem
	grantPrivilege           Privilege
	grantPrivileges          []Privilege
	grantObjectType          GrantObjectType
	privilegeLevel           PrivilegeLevel
	grantAssumption          *GrantUserAssumption
	with                     *With
	window                   Window
	over                     *Over
	windowDef                *WindowDef
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const DUPLICATE = 57369
const DEFAULT = 57370
const SET = 57371
const LOCK = 57372
const UNLOCK = 57373
const KEYS = 57374
const OF = 57375
const OUTFILE = 57376
const DUMPFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const INTO = 57425
const OR = 57426
const XOR = 57427
const AND = 57428
const NOT = 57429
const BETWEEN = 57430
const CASE = 57431
const WHEN = 57432
const THEN = 57433
const ELSE = 57434
const ELSEIF = 57435
const END = 57436
const LE = 57437
const GE = 57438
const NE = 57439
const NULL_SAFE_EQUAL = 57440
const IS = 57441
const LIKE = 57442
const REGEXP = 57443
const IN = 57444
const UNBOUNDED = 57445
const PARTITION = 57446
const RANGE = 57447
const ROWS = 57448
const GROUPS = 57449
const PRECEDING = 57450
const FOLLOWING = 57451
const SHIFT_LEFT = 57452
const SHIFT_RIGHT = 57453
const DIV = 57454
const MOD = 57455
const UNARY = 57456
const COLLATE = 57457
const BINARY = 57458
const UNDERSCORE_ARMSCII8 = 57459
const UNDERSCORE_ASCII = 57460
const UNDERSCORE_BIG5 = 57461
const UNDERSCORE_BINARY = 57462
const UNDERSCORE_CP1250 = 57463
const UNDERSCORE_CP1251 = 57464
const UNDERSCORE_CP1256 = 57465
const UNDERSCORE_CP1257 = 57466
const UNDERSCORE_CP850 = 57467
const UNDERSCORE_CP852 = 57468
const UNDERSCORE_CP866 = 57469
const UNDERSCORE_CP932 = 57470
const UNDERSCORE_DEC8 = 57471
const UNDERSCORE_EUCJPMS = 57472
const UNDERSCORE_EUCKR = 57473
const UNDERSCORE_GB18030 = 57474
const UNDERSCORE_GB2312 = 57475
const UNDERSCORE_GBK = 57476
const UNDERSCORE_GEOSTD8 = 57477
const UNDERSCORE_GREEK = 57478
const UNDERSCORE_HEBREW = 57479
const UNDERSCORE_HP8 = 57480
const UNDERSCORE_KEYBCS2 = 57481
const UNDERSCORE_KOI8R = 57482
const UNDERSCORE_KOI8U = 57483
const UNDERSCORE_LATIN1 = 57484
const UNDERSCORE_LATIN2 = 57485
const UNDERSCORE_LATIN5 = 57486
const UNDERSCORE_LATIN7 = 57487
const UNDERSCORE_MACCE = 57488
const UNDERSCORE_MACROMAN = 57489
const UNDERSCORE_SJIS = 57490
const UNDERSCORE_SWE7 = 57491
const UNDERSCORE_TIS620 = 57492
const UNDERSCORE_UCS2 = 57493
const UNDERSCORE_UJIS = 57494
const UNDERSCORE_UTF16 = 57495
const UNDERSCORE_UTF16LE = 57496
const UNDERSCORE_UTF32 = 57497
const UNDERSCORE_UTF8 = 57498
const UNDERSCORE_UTF8MB3 = 57499
const UNDERSCORE_UTF8MB4 = 57500
const INTERVAL = 57501
const JSON_EXTRACT_OP = 57502
const JSON_UNQUOTE_EXTRACT_OP = 57503
const CREATE = 57504
const ALTER = 57505
const DROP = 57506
const RENAME = 57507
const ANALYZE = 57508
const ADD = 57509
const MODIFY = 57510
const CHANGE = 57511
const SCHEMA = 57512
const TABLE = 57513
const INDEX = 57514
const INDEXES = 57515
const VIEW = 57516
const TO = 57517
const IGNORE = 57518
const IF = 57519
const PRIMARY = 57520
const COLUMN = 57521
const SPATIAL = 57522
const FULLTEXT = 57523
const KEY_BLOCK_SIZE = 57524
const CHECK = 57525
const ACTION = 57526
const CASCADE = 57527
const CONSTRAINT = 57528
const FOREIGN = 57529
const NO = 57530
const REFERENCES = 57531
const RESTRICT = 57532
const FIRST = 57533
const AFTER = 57534
const LAST = 57535
const SHOW = 57536
const DESCRIBE = 57537
const EXPLAIN = 57538
const DATE = 57539
const ESCAPE = 57540
const REPAIR = 57541
const OPTIMIZE = 57542
const TRUNCATE = 57543
const FORMAT = 57544
const EXTENDED = 57545
const MAXVALUE = 57546
const REORGANIZE = 57547
const LESS = 57548
const THAN = 57549
const PROCEDURE = 57550
const TRIGGER = 57551
const TRIGGERS = 57552
const FUNCTION = 57553
const STATUS = 57554
const VARIABLES = 57555
const WARNINGS = 57556
const ERRORS = 57557
const KILL = 57558
const CONNECTION = 57559
const SEQUENCE = 57560
const ENABLE = 57561
const DISABLE = 57562
const EACH = 57563
const ROW = 57564
const BEFORE = 57565
const FOLLOWS = 57566
const PRECEDES = 57567
const DEFINER = 57568
const INVOKER = 57569
const INOUT = 57570
const OUT = 57571
const DETERMINISTIC = 57572
const CONTAINS = 57573
const READS = 57574
const MODIFIES = 57575
const SQL = 57576
const SECURITY = 57577
const TEMPORARY = 57578
const ALGORITHM = 57579
const MERGE = 57580
const TEMPTABLE = 57581
const UNDEFINED = 57582
const CLASS_ORIGIN = 57583
const SUBCLASS_ORIGIN = 57584
const MESSAGE_TEXT = 57585
const MYSQL_ERRNO = 57586
const CONSTRAINT_CATALOG = 57587
const CONSTRAINT_SCHEMA = 57588
const CONSTRAINT_NAME = 57589
const CATALOG_NAME = 57590
const SCHEMA_NAME = 57591
const TABLE_NAME = 57592
const COLUMN_NAME = 57593
const CURSOR_NAME = 57594
const SIGNAL = 57595
const RESIGNAL = 57596
const SQLSTATE = 57597
const DECLARE = 57598
const CONDITION = 57599
const CURSOR = 57600
const CONTINUE = 57601
const EXIT = 57602
const UNDO = 57603
const HANDLER = 57604
const FOUND = 57605
const SQLWARNING = 57606
const SQLEXCEPTION = 57607
const FETCH = 57608
const OPEN = 57609
const CLOSE = 57610
const LOOP = 57611
const LEAVE = 57612
const ITERATE = 57613
const USER = 57614
const IDENTIFIED = 57615
const ROLE = 57616
const REUSE = 57617
const GRANT = 57618
const GRANTS = 57619
const REVOKE = 57620
const NONE = 57621
const ATTRIBUTE = 57622
const RANDOM = 57623
const PASSWORD = 57624
const INITIAL = 57625
const AUTHENTICATION = 57626
const SSL = 57627
const X509 = 57628
const CIPHER = 57629
const ISSUER = 57630
const SUBJECT = 57631
const ACCOUNT = 57632
const EXPIRE = 57633
const NEVER = 57634
const DAY = 57635
const OPTION = 57636
const OPTIONAL = 57637
const EXCEPT = 57638
const ADMIN = 57639
const PRIVILEGES = 57640
const MAX_QUERIES_PER_HOUR = 57641
const MAX_UPDATES_PER_HOUR = 57642
const MAX_CONNECTIONS_PER_HOUR = 57643
const MAX_USER_CONNECTIONS = 57644
const FLUSH = 57645
const FAILED_LOGIN_ATTEMPTS = 57646
const PASSWORD_LOCK_TIME = 57647
const REQUIRE = 57648
const PROXY = 57649
const ROUTINE = 57650
const TABLESPACE = 57651
const CLIENT = 57652
const SLAVE = 57653
const EVENT = 57654
const EXECUTE = 57655
const FILE = 57656
const RELOAD = 57657
const REPLICATION = 57658
const SHUTDOWN = 57659
const SUPER = 57660
const USAGE = 57661
const LOGS = 57662
const ENGINE = 57663
const ERROR = 57664
const GENERAL = 57665
const HOSTS = 57666
const OPTIMIZER_COSTS = 57667
const RELAY = 57668
const SLOW = 57669
const USER_RESOURCES = 57670
const NO_WRITE_TO_BINLOG = 57671
const CHANNEL = 57672
const REPLICA = 57673
const SOURCE = 57674
const STOP = 57675
const SOURCE_HOST = 57676
const SOURCE_USER = 57677
const SOURCE_PASSWORD = 57678
const SOURCE_PORT = 57679
const BEGIN = 57680
const START = 57681
const TRANSACTION = 57682
const COMMIT = 57683
const ROLLBACK = 57684
const SAVEPOINT = 57685
const WORK = 57686
const RELEASE = 57687
const CHAIN = 57688
const BIT = 57689
const TINYINT = 57690
const SMALLINT = 57691
const MEDIUMINT = 57692
const INT = 57693
const INTEGER = 57694
const BIGINT = 57695
const INTNUM = 57696
const SERIAL = 57697
const REAL = 57698
const DOUBLE = 57699
const FLOAT_TYPE = 57700
const DECIMAL = 57701
const NUMERIC = 57702
const DEC = 57703
const FIXED = 57704
const PRECISION = 57705
const TIME = 57706
const TIMESTAMP = 57707
const DATETIME = 57708
const YEAR = 57709
const CHAR = 57710
const VARCHAR = 57711
const BOOL = 57712
const CHARACTER = 57713
const VARBINARY = 57714
const NCHAR = 57715
const NVARCHAR = 57716
const NATIONAL = 57717
const VARYING = 57718
const TEXT = 57719
const TINYTEXT = 57720
const MEDIUMTEXT = 57721
const LONGTEXT = 57722
const LONG = 57723
const BLOB = 57724
const TINYBLOB = 57725
const MEDIUMBLOB = 57726
const LONGBLOB = 57727
const JSON = 57728
const ENUM = 57729
const GEOMETRY = 57730
const POINT = 57731
const LINESTRING = 57732
const POLYGON = 57733
const GEOMETRYCOLLECTION = 57734
const MULTIPOINT = 57735
const MULTILINESTRING = 57736
const MULTIPOLYGON = 57737
const LOCAL = 57738
const LOW_PRIORITY = 57739
const NULLX = 57740
const AUTO_INCREMENT = 57741
const APPROXNUM = 57742
const SIGNED = 57743
const UNSIGNED = 57744
const ZEROFILL = 57745
const SRID = 57746
const COLLATION = 57747
const DATABASES = 57748
const SCHEMAS = 57749
const TABLES = 57750
const FULL = 57751
const PROCESSLIST = 57752
const COLUMNS = 57753
const FIELDS = 57754
const ENGINES = 57755
const PLUGINS = 57756
const NAMES = 57757
const CHARSET = 57758
const GLOBAL = 57759
const SESSION = 57760
const ISOLATION = 57761
const LEVEL = 57762
const READ = 57763
const WRITE = 57764
const ONLY = 57765
const REPEATABLE = 57766
const COMMITTED = 57767
const UNCOMMITTED = 57768
const SERIALIZABLE = 57769
const ENCRYPTION = 57770
const CURRENT_TIMESTAMP = 57771
const NOW = 57772
const DATABASE = 57773
const CURRENT_DATE = 57774
const CURRENT_USER = 57775
const CURRENT_TIME = 57776
const LOCALTIME = 57777
const LOCALTIMESTAMP = 57778
const UTC_DATE = 57779
const UTC_TIME = 57780
const UTC_TIMESTAMP = 57781
const REPLACE = 57782
const CONVERT = 57783
const CAST = 57784
const SUBSTR = 57785
const SUBSTRING = 57786
const TRIM = 57787
const LEADING = 57788
const TRAILING = 57789
const BOTH = 57790
const GROUP_CONCAT = 57791
const SEPARATOR = 57792
const TIMESTAMPADD = 57793
const TIMESTAMPDIFF = 57794
const OVER = 57795
const WINDOW = 57796
const GROUPING = 57797
const CURRENT = 57798
const AVG = 57799
const BIT_AND = 57800
const BIT_OR = 57801
const BIT_XOR = 57802
const COUNT = 57803
const JSON_ARRAYAGG = 57804
const JSON_OBJECTAGG = 57805
const MAX = 57806
const MIN = 57807
const STDDEV_POP = 57808
const STDDEV = 57809
const STD = 57810
const STDDEV_SAMP = 57811
const SUM = 57812
const VAR_POP = 57813
const VARIANCE = 57814
const VAR_SAMP = 57815
const CUME_DIST = 57816
const DENSE_RANK = 57817
const FIRST_VALUE = 57818
const LAG = 57819
const LAST_VALUE = 57820
const LEAD = 57821
const NTH_VALUE = 57822
const NTILE = 57823
const ROW_NUMBER = 57824
const PERCENT_RANK = 57825
const RANK = 57826
const DUAL = 57827
const JSON_TABLE = 57828
const PATH = 57829
const AVG_ROW_LENGTH = 57830
const CHECKSUM = 57831
const COMPRESSION = 57832
const DIRECTORY = 57833
const DELAY_KEY_WRITE = 57834
const ENGINE_ATTRIBUTE = 57835
const INSERT_METHOD = 57836
const MAX_ROWS = 57837
const MIN_ROWS = 57838
const PACK_KEYS = 57839
const ROW_FORMAT = 57840
const SECONDARY_ENGINE_ATTRIBUTE = 57841
const STATS_AUTO_RECALC = 57842
const STATS_PERSISTENT = 57843
const STATS_SAMPLE_PAGES = 57844
const STORAGE = 57845
const DISK = 57846
const MEMORY = 57847
const DYNAMIC = 57848
const COMPRESSED = 57849
const REDUNDANT = 57850
const COMPACT = 57851
const LIST = 57852
const HASH = 57853
const PARTITIONS = 57854
const SUBPARTITION = 57855
const SUBPARTITIONS = 57856
const PREPARE = 57857
const DEALLOCATE = 57858
const MATCH = 57859
const AGAINST = 57860
const BOOLEAN = 57861
const LANGUAGE = 57862
const WITH = 57863
const QUERY = 57864
const EXPANSION = 57865
const ACCESSIBLE = 57866
const ASENSITIVE = 57867
const CUBE = 57868
const DAY_HOUR = 57869
const DAY_MICROSECOND = 57870
const DAY_MINUTE = 57871
const DAY_SECOND = 57872
const DELAYED = 57873
const DISTINCTROW = 57874
const EMPTY = 57875
const FLOAT4 = 57876
const FLOAT8 = 57877
const GET = 57878
const HIGH_PRIORITY = 57879
const HOUR_MICROSECOND = 57880
const HOUR_MINUTE = 57881
const HOUR_SECOND = 57882
const INSENSITIVE = 57883
const INT1 = 57884
const INT2 = 57885
const INT3 = 57886
const INT4 = 57887
const INT8 = 57888
const IO_AFTER_GTIDS = 57889
const IO_BEFORE_GTIDS = 57890
const LINEAR = 57891
const MASTER_BIND = 57892
const MASTER_SSL_VERIFY_SERVER_CERT = 57893
const MIDDLEINT = 57894
const MINUTE_MICROSECOND = 57895
const MINUTE_SECOND = 57896
const PURGE = 57897
const READ_WRITE = 57898
const REPEAT = 57899
const RETURN = 57900
const RLIKE = 57901
const SECOND_MICROSECOND = 57902
const SENSITIVE = 57903
const SPECIFIC = 57904
const SQL_BIG_RESULT = 57905
const SQL_SMALL_RESULT = 57906
const VARCHARACTER = 57907
const WHILE = 57908
const YEAR_MONTH = 57909
const UNUSED = 57910
const DESCRIPTION = 57911
const LATERAL = 57912
const MEMBER = 57913
const RECURSIVE = 57914
const BUCKETS = 57915
const CLONE = 57916
const COMPONENT = 57917
const DEFINITION = 57918
const ENFORCED = 57919
const EXCLUDE = 57920
const GEOMCOLLECTION = 57921
const GET_MASTER_PUBLIC_KEY = 57922
const HISTOGRAM = 57923
const HISTORY = 57924
const INACTIVE = 57925
const INVISIBLE = 57926
const LOCKED = 57927
const MASTER_COMPRESSION_ALGORITHMS = 57928
const MASTER_PUBLIC_KEY_PATH = 57929
const MASTER_TLS_CIPHERSUITES = 57930
const MASTER_ZSTD_COMPRESSION_LEVEL = 57931
const NESTED = 57932
const NETWORK_NAMESPACE = 57933
const NOWAIT = 57934
const NULLS = 57935
const OJ = 57936
const OLD = 57937
const ORDINALITY = 57938
const ORGANIZATION = 57939
const OTHERS = 57940
const PERSIST = 57941
const PERSIST_ONLY = 57942
const PRIVILEGE_CHECKS_USER = 57943
const PROCESS = 57944
const REFERENCE = 57945
const REQUIRE_ROW_FORMAT = 57946
const RESOURCE = 57947
const RESPECT = 57948
const RESTART = 57949
const RETAIN = 57950
const SECONDARY = 57951
const SECONDARY_ENGINE = 57952
const SECONDARY_LOAD = 57953
const SECONDARY_UNLOAD = 57954
const SKIP = 57955
const THREAD_PRIORITY = 57956
const TIES = 57957
const VCPU = 57958
const VISIBLE = 57959
const SYSTEM = 57960
const INFILE = 57961
const ACTIVE = 57962
const AGGREGATE = 57963
const ANY = 57964
const ARRAY = 57965
const ASCII = 57966
const AT = 57967
const AUTOEXTEND_SIZE = 57968
const ENDS = 57969
const EVENTS = 57970
const GENERATED = 57971
const ALWAYS = 57972
const STORED = 57973
const VIRTUAL = 57974
const NVAR = 57975
const PASSWORD_LOCK = 57976

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DUMPFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"':'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"INTO",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB3",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"LAST",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"EXTENDED",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"ENABLE",
	"DISABLE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"ALGORITHM",
	"MERGE",
	"TEMPTABLE",
	"UNDEFINED",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"FETCH",
	"OPEN",
	"CLOSE",
	"LOOP",
	"LEAVE",
	"ITERATE",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTION",
	"OPTIONAL",
	"EXCEPT",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EVENT",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"REPLICA",
	"SOURCE",
	"STOP",
	"SOURCE_HOST",
	"SOURCE_USER",
	"SOURCE_PASSWORD",
	"SOURCE_PORT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"CHAIN",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"SRID",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ENCRYPTION",
	"CURRENT_TIMESTAMP",
	"NOW",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"DUAL",
	"JSON_TABLE",
	"PATH",
	"AVG_ROW_LENGTH",
	"CHECKSUM",
	"COMPRESSION",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"DISK",
	"MEMORY",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"LIST",
	"HASH",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"PREPARE",
	"DEALLOCATE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ACCESSIBLE",
	"ASENSITIVE",
	"CUBE",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"DELAYED",
	"DISTINCTROW",
	"EMPTY",
	"FLOAT4",
	"FLOAT8",
	"GET",
	"HIGH_PRIORITY",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"INSENSITIVE",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"IO_AFTER_GTIDS",
	"IO_BEFORE_GTIDS",
	"LINEAR",
	"MASTER_BIND",
	"MASTER_SSL_VERIFY_SERVER_CERT",
	"MIDDLEINT",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"PURGE",
	"READ_WRITE",
	"REPEAT",
	"RETURN",
	"RLIKE",
	"SECOND_MICROSECOND",
	"SENSITIVE",
	"SPECIFIC",
	"SQL_BIG_RESULT",
	"SQL_SMALL_RESULT",
	"VARCHARACTER",
	"WHILE",
	"YEAR_MONTH",
	"UNUSED",
	"DESCRIPTION",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"ACTIVE",
	"AGGREGATE",
	"ANY",
	"ARRAY",
	"ASCII",
	"AT",
	"AUTOEXTEND_SIZE",
	"ENDS",
	"EVENTS",
	"GENERATED",
	"ALWAYS",
	"STORED",
	"VIRTUAL",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 39,
	654, 39,
	-2, 61,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 45,
	190, 1413,
	191, 1432,
	-2, 255,
	-1, 55,
	231, 882,
	232, 882,
	-2, 871,
	-1, 77,
	5, 66,
	-2, 47,
	-1, 451,
	1, 2093,
	23, 2093,
	178, 2093,
	654, 2093,
	-2, 916,
	-1, 464,
	178, 1442,
	-2, 1436,
	-1, 465,
	178, 1443,
	-2, 1437,
	-1, 526,
	1, 556,
	654, 556,
	-2, 554,
	-1, 548,
	178, 1803,
	-2, 1080,
	-1, 578,
	178, 1911,
	-2, 1331,
	-1, 579,
	178, 1992,
	-2, 1082,
	-1, 580,
	178, 1823,
	-2, 1083,
	-1, 647,
	178, 1774,
	-2, 1301,
	-1, 650,
	178, 1791,
	-2, 1230,
	-1, 651,
	178, 2004,
	-2, 1230,
	-1, 652,
	178, 2003,
	-2, 1230,
	-1, 653,
	178, 2002,
	-2, 1230,
	-1, 654,
	178, 1891,
	-2, 1230,
	-1, 655,
	178, 1892,
	-2, 1230,
	-1, 656,
	178, 1789,
	-2, 1230,
	-1, 657,
	178, 1790,
	-2, 1230,
	-1, 658,
	178, 1792,
	-2, 1230,
	-1, 906,
	101, 2105,
	178, 2105,
	-2, 1397,
	-1, 907,
	101, 2215,
	178, 2215,
	-2, 1398,
	-1, 912,
	101, 2129,
	178, 2129,
	-2, 1399,
	-1, 913,
	101, 2173,
	178, 2173,
	-2, 1400,
	-1, 914,
	101, 2174,
	178, 2174,
	-2, 1401,
	-1, 915,
	101, 2042,
	178, 2042,
	-2, 1405,
	-1, 917,
	101, 2150,
	178, 2150,
	-2, 1407,
	-1, 1081,
	364, 895,
	-2, 899,
	-1, 1083,
	364, 895,
	-2, 899,
	-1, 1191,
	5, 66,
	-2, 48,
	-1, 1196,
	1, 556,
	654, 556,
	-2, 554,
	-1, 1198,
	1, 557,
	654, 557,
	-2, 554,
	-1, 1461,
	1, 556,
	654, 556,
	-2, 554,
	-1, 1463,
	1, 556,
	654, 556,
	-2, 554,
	-1, 1939,
	178, 1445,
	-2, 1441,
	-1, 2059,
	1, 991,
	5, 991,
	12, 991,
	13, 991,
	14, 991,
	15, 991,
	17, 991,
	19, 991,
	29, 991,
	30, 991,
	56, 991,
	57, 991,
	58, 991,
	59, 991,
	60, 991,
	62, 991,
	63, 991,
	66, 991,
	67, 991,
	69, 991,
	70, 991,
	88, 991,
	428, 991,
	473, 991,
	654, 991,
	-2, 1024,
	-1, 2067,
	67, 83,
	69, 83,
	-2, 87,
	-1, 2085,
	178, 1915,
	-2, 1402,
	-1, 2252,
	44, 746,
	197, 748,
	199, 746,
	200, 746,
	-2, 792,
	-1, 2301,
	5, 67,
	-2, 1112,
	-1, 2872,
	197, 749,
	-2, 747,
	-1, 2945,
	69, 1687,
	70, 1687,
	178, 1687,
	-2, 922,
	-1, 2971,
	1, 1066,
	5, 1066,
	12, 1066,
	13, 1066,
	14, 1066,
	15, 1066,
	17, 1066,
	19, 1066,
	29, 1066,
	30, 1066,
	56, 1066,
	57, 1066,
	58, 1066,
	59, 1066,
	60, 1066,
	62, 1066,
	63, 1066,
	66, 1066,
	67, 1066,
	69, 1066,
	70, 1066,
	88, 1066,
	428, 1066,
	473, 1066,
	654, 1066,
	-2, 1024,
	-1, 3160,
	5, 67,
	-2, 1363,
	-1, 3263,
	41, 1452,
	-2, 1450,
	-1, 3503,
	5, 67,
	-2, 1366,
	-1, 3526,
	281, 322,
	-2, 1507,
	-1, 3527,
	281, 323,
	-2, 1548,
	-1, 3528,
	281, 324,
	-2, 1724,
	-1, 3724,
	96, 307,
	98, 307,
	100, 307,
	-2, 61,
	-1, 3760,
	98, 314,
	99, 314,
	100, 314,
	-2, 61,
}

const yyPrivate = 57344

const yyLast = 55089

var yyAct = [...]int{
	590, 85, 3540, 3701, 3667, 3716, 1212, 2500, 3649, 1023,
	3413, 3, 2648, 2082, 476, 3605, 3648, 522, 3560, 3408,
	3669, 3582, 1295, 3416, 7, 2461, 3495, 2462, 3415, 6,
	2810, 3414, 5, 3417, 8, 3034, 2839, 3201, 1887, 3505,
	3332, 1391, 2981, 3493, 554, 3375, 550, 3376, 2674, 3263,
	2965, 2386, 2763, 1296, 2938, 2602, 2384, 2150, 589, 2939,
	541, 534, 2108, 3265, 2167, 2380, 2823, 88, 3117, 1494,
	3087, 3093, 3071, 1911, 3409, 2675, 1319, 2764, 2935, 2866,
	2452, 502, 502, 455, 458, 518, 85, 508, 3533, 1067,
	100, 2849, 2527, 567, 1493, 1893, 532, 2509, 2947, 2099,
	2112, 1885, 1964, 2956, 1904, 993, 2063, 2448, 531, 2411,
	2251, 113, 2233, 553, 2369, 2056, 2136, 1094, 2055, 1048,
	2024, 2618, 2753, 1970, 2095, 2197, 2216, 986, 2453, 1496,
	1886, 1835, 2752, 1799, 2362, 1780, 1470, 2491, 2132, 1373,
	557, 908, 1213, 911, 547, 1369, 2015, 1220, 1941, 2059,
	1216, 1125, 2656, 1103, 1197, 1840, 985, 134, 1372, 537,
	2570, 904, 905, 2069, 1038, 1224, 1201, 479, 453, 1200,
	2114, 1199, 1234, 521, 77, 478, 1811, 2678, 1087, 1006,
	1102, 1812, 1779, 559, 1464, 461, 1011, 109, 105, 90,
	527, 3760, 1022, 3755, 3746, 2469, 3724, 3722, 3696, 3676,
	2473, 3662, 3594, 3590, 87, 3334, 3333, 2778, 983, 1833,
	2808, 3064, 2985, 3757, 3753, 3751, 2478, 2477, 3242, 40,
	40, 3683, 3491, 3641, 471, 3384, 43, 3255, 1020, 2181,
	40, 92, 2520, 98, 3240, 3608, 3479, 40, 2474, 40,
	1036, 3072, 495, 2669, 489, 500, 482, 2181, 2820, 3243,
	3490, 3074, 3383, 2640, 2480, 415, 2459, 3575, 3316, 3185,
	3301, 2670, 83, 2655, 2460, 3191, 490, 3198, 3199, 3026,
	520, 2382, 2735, 127, 123, 124, 1136, 125, 2734, 2982,
	990, 86, 86, 899, 900, 901, 3646, 3356, 1008, 3556,
	1013, 1014, 86, 2339, 2484, 2929, 1005, 3615, 1081, 86,
	450, 86, 1016, 528, 2215, 2084, 2463, 1374, 1900, 1375,
	117, 129, 128, 2404, 3499, 2716, 2403, 1177, 3292, 2405,
	2717, 2718, 1836, 3499, 2078, 2025, 1251, 1250, 1260, 1261,
	1253, 1254, 1255, 1256, 1257, 1258, 1259, 1252, 3014, 3050,
	1262, 3494, 3056, 3058, 3057, 3054, 3055, 3053, 3052, 3051,
	3496, 96, 94, 95, 1857, 106, 1052, 1053, 1839, 3496,
	1056, 3059, 3060, 981, 2079, 2080, 3077, 1875, 1876, 2476,
	1071, 1072, 2479, 3314, 1155, 130, 86, 131, 2872, 470,
	469, 86, 1837, 1838, 473, 2371, 2374, 2375, 2376, 2372,
	2482, 2373, 2378, 1163, 1054, 1055, 2110, 2111, 1070, 2214,
	516, 1122, 2118, 2120, 2472, 2119, 2447, 3141, 3075, 3076,
	3078, 3079, 3080, 2126, 2915, 3500, 2913, 481, 480, 483,
	2203, 2115, 2115, 1452, 3500, 2202, 2695, 488, 2375, 2376,
	2133, 1817, 445, 448, 1084, 1077, 1972, 468, 511, 2727,
	512, 2747, 1176, 513, 492, 2558, 1882, 512, 1881, 496,
	1880, 85, 1879, 85, 3714, 108, 2234, 2235, 2236, 2237,
	1878, 1088, 1877, 532, 499, 119, 118, 517, 510, 2754,
	2755, 1159, 1160, 2545, 1089, 1093, 2756, 1138, 2515, 1091,
	3542, 3635, 1090, 2371, 2374, 2375, 2376, 2372, 3541, 2373,
	2378, 2830, 3269, 2957, 2958, 2848, 3467, 1078, 1079, 2259,
	2253, 2254, 3469, 2252, 2255, 2256, 2550, 1002, 2228, 1152,
	3713, 115, 3094, 3095, 3096, 3097, 3088, 1039, 3360, 85,
	3358, 116, 120, 1195, 3091, 3241, 3105, 3114, 3549, 543,
	1207, 487, 1129, 2517, 126, 1002, 1453, 2229, 3089, 3090,
	1057, 2262, 3706, 1417, 2519, 1869, 2168, 3103, 3350, 1271,
	1273, 3734, 1002, 1275, 3657, 2261, 2260, 110, 526, 111,
	3675, 3259, 2472, 3591, 1453, 1898, 2833, 484, 485, 486,
	493, 1847, 497, 498, 501, 1138, 1126, 1170, 3587, 459,
	1171, 1453, 1287, 3589, 3237, 1290, 1291, 1292, 1293, 1294,
	2475, 1299, 3585, 3586, 3235, 2471, 1068, 115, 1069, 1071,
	1072, 532, 449, 1468, 3234, 2821, 456, 3664, 120, 121,
	1899, 2824, 2825, 2826, 2827, 2828, 3233, 1051, 132, 3232,
	3231, 3229, 1901, 460, 86, 1162, 2824, 2825, 2826, 2827,
	2828, 1477, 1478, 1476, 1300, 1301, 1302, 1303, 1304, 1305,
	1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1404, 1316,
	1317, 1320, 1320, 1320, 1326, 1320, 1320, 1326, 1320, 1326,
	1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344,
	1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354,
	1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 472,
	1272, 3016, 1012, 1191, 2983, 2758, 2726, 3352, 3073, 3230,
	2850, 2485, 115, 1280, 1281, 1282, 1283, 1284, 1285, 1286,
	122, 3566, 3411, 3497, 2807, 1839, 107, 3175, 2222, 2701,
	1818, 1241, 3497, 1085, 2472, 2757, 2619, 3382, 1322, 1324,
	1418, 1328, 1330, 2985, 1333, 2258, 1137, 3658, 3189, 1837,
	1838, 2725, 465, 3187, 2135, 3357, 1083, 3293, 2489, 2117,
	3190, 3256, 1092, 533, 533, 2518, 2521, 2377, 1139, 1146,
	1147, 1149, 1150, 1151, 533, 1153, 1154, 3715, 1156, 1157,
	1158, 533, 1161, 78, 1164, 1165, 1166, 1167, 1168, 3614,
	1179, 141, 3468, 1130, 3342, 142, 3258, 3637, 143, 144,
	1192, 2832, 1206, 140, 145, 412, 414, 1066, 2377, 140,
	1148, 3238, 97, 1063, 140, 457, 1062, 457, 2621, 141,
	1061, 1138, 3324, 142, 505, 505, 143, 144, 3346, 3347,
	2470, 140, 145, 2159, 457, 3603, 141, 454, 1172, 3720,
	142, 3351, 1841, 143, 144, 3015, 3017, 3018, 3019, 145,
	1010, 1009, 2162, 2163, 140, 995, 1318, 3518, 3519, 3673,
	2535, 2536, 3668, 3330, 2158, 2377, 1813, 491, 1064, 1065,
	3118, 3119, 3741, 117, 140, 505, 1012, 995, 3671, 1843,
	1776, 1002, 1842, 2576, 1002, 1035, 140, 1189, 2105, 2871,
	1431, 1434, 1435, 1436, 1437, 1438, 1439, 2588, 1440, 1441,
	1442, 1443, 1444, 1445, 1446, 1447, 3761, 1419, 1420, 1421,
	1422, 1398, 1402, 1432, 1399, 1405, 1401, 1403, 1400, 2107,
	1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415,
	1416, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 3005,
	1002, 3758, 3006, 992, 3007, 2107, 1145, 1105, 1106, 1107,
	1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 911,
	86, 2389, 2391, 3747, 911, 3725, 572, 571, 574, 575,
	576, 577, 2107, 1185, 1007, 573, 1976, 2789, 2790, 2767,
	2623, 1025, 3362, 1221, 1002, 2627, 3128, 2622, 2105, 2620,
	528, 1134, 3129, 1243, 2625, 1184, 1180, 1181, 1182, 1183,
	1186, 1187, 1188, 1190, 2107, 2153, 3202, 2624, 1143, 2846,
	2544, 2540, 2523, 2522, 3718, 2178, 2782, 3719, 1039, 3717,
	2177, 3204, 2626, 2628, 2223, 1874, 1482, 1480, 119, 118,
	1086, 1004, 2456, 2107, 502, 2708, 2707, 1297, 2706, 1472,
	1448, 1449, 1450, 1451, 1144, 1003, 1140, 2538, 1204, 1015,
	410, 2314, 86, 502, 3132, 1276, 1377, 1274, 1495, 1386,
	457, 1378, 1433, 2311, 2901, 2106, 1277, 1278, 2587, 3670,
	3672, 2952, 2584, 2715, 2542, 3355, 1367, 2541, 3038, 2408,
	1141, 1142, 2293, 2282, 2244, 2160, 2074, 1914, 1279, 1385,
	1289, 2106, 2390, 1471, 1315, 1288, 1242, 1475, 2576, 1120,
	1364, 1365, 1002, 85, 1037, 2577, 2105, 1252, 1455, 2084,
	1262, 1262, 1080, 1088, 2400, 2861, 1133, 2862, 2106, 2843,
	2565, 1458, 2566, 1390, 2583, 2576, 1089, 1809, 3377, 2580,
	3544, 1091, 2579, 2582, 1090, 2562, 3155, 2563, 1907, 3039,
	3203, 1039, 3245, 1498, 1488, 3567, 3568, 103, 1279, 1948,
	2106, 3564, 3565, 1233, 502, 3745, 1807, 3127, 3387, 3386,
	3404, 2595, 1276, 140, 1946, 1947, 1945, 2363, 1045, 1800,
	1790, 1791, 1792, 1793, 2247, 1794, 2863, 1784, 3246, 2106,
	2189, 2567, 1387, 1830, 2954, 1059, 3728, 3702, 3727, 1867,
	1050, 1795, 102, 1796, 1797, 1798, 2564, 2953, 3583, 1484,
	3621, 1073, 3620, 1460, 1459, 1473, 1467, 3545, 3133, 1230,
	2951, 2557, 1803, 1474, 1804, 1850, 1232, 1230, 85, 1277,
	1278, 2556, 140, 85, 3659, 1491, 1233, 1492, 532, 2555,
	1806, 1277, 1278, 101, 1233, 2554, 1783, 1827, 1848, 2642,
	1903, 1788, 1789, 1786, 1260, 1261, 1253, 1254, 1255, 1256,
	1257, 1258, 1259, 1252, 1383, 1873, 1262, 1251, 1250, 1260,
	1261, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1252, 1801,
	1815, 1262, 140, 1096, 1814, 2016, 1231, 1232, 1230, 1872,
	2190, 1819, 1018, 3583, 85, 1060, 140, 1049, 1822, 1823,
	1462, 1934, 1825, 1017, 532, 1233, 1237, 1845, 1075, 1253,
	1254, 1255, 1256, 1257, 1258, 1259, 1252, 3609, 1828, 1262,
	1299, 2016, 1849, 2327, 1942, 3633, 3104, 3098, 1846, 1082,
	532, 1902, 3134, 1968, 2897, 1974, 2279, 2280, 2281, 2210,
	2776, 3752, 1992, 1905, 1975, 1977, 1868, 1981, 1983, 1871,
	2784, 2787, 1916, 1905, 3742, 1921, 2785, 2786, 1939, 1255,
	1256, 1257, 1258, 1259, 1252, 2198, 86, 1262, 1926, 1928,
	1929, 1894, 1227, 2001, 2004, 3616, 1927, 1917, 1944, 3514,
	1918, 2017, 1912, 1913, 3472, 1897, 2060, 1883, 1895, 3464,
	1896, 3405, 1933, 1890, 1251, 1250, 1260, 1261, 1253, 1254,
	1255, 1256, 1257, 1258, 1259, 1252, 1943, 1191, 1262, 1940,
	3743, 3317, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956,
	1957, 1958, 1959, 1960, 1961, 1962, 1963, 2083, 1930, 1217,
	3253, 3252, 1218, 1241, 1851, 3465, 911, 1854, 1855, 1856,
	3686, 1858, 1859, 3251, 2088, 1860, 1231, 1232, 1230, 1861,
	3353, 2054, 1862, 1231, 1232, 1230, 1863, 1864, 3023, 1865,
	1866, 3749, 1231, 1232, 1230, 1233, 3250, 439, 2090, 3021,
	3661, 3244, 1233, 1980, 3063, 2007, 1984, 1985, 1986, 1987,
	1988, 1233, 1965, 3466, 1966, 2020, 2306, 2030, 2305, 2032,
	3062, 2053, 3011, 2067, 3001, 1231, 1232, 1230, 3354, 2013,
	2994, 1939, 2859, 3584, 2779, 2496, 3024, 1787, 1231, 1232,
	1230, 3750, 2494, 2175, 1233, 2019, 2483, 3022, 1321, 1323,
	1325, 1327, 1329, 1331, 1332, 1334, 2064, 1233, 1128, 1127,
	1805, 2142, 2143, 2144, 2145, 2089, 1100, 2096, 2104, 3645,
	2129, 2130, 2131, 1231, 1232, 1230, 3596, 2406, 1024, 2407,
	3595, 2068, 2072, 2076, 2075, 2081, 1231, 1232, 1230, 3546,
	1099, 2246, 1233, 3543, 2644, 3478, 2093, 2091, 3349, 416,
	3348, 2173, 2174, 3329, 2307, 1233, 1297, 3260, 2146, 2147,
	2148, 2138, 2139, 2140, 2141, 3228, 3197, 990, 3196, 3182,
	2116, 2497, 2121, 2122, 2123, 2124, 2125, 3151, 3101, 3100,
	2169, 2134, 3099, 3061, 3020, 3012, 2171, 2172, 3004, 3002,
	1231, 1232, 1230, 2179, 2998, 2997, 419, 2996, 2860, 103,
	2858, 1969, 2857, 2856, 2795, 429, 437, 438, 2598, 1233,
	2597, 2568, 2318, 2492, 2211, 2184, 2154, 1824, 2156, 1778,
	1231, 1232, 1230, 1777, 3735, 3678, 1993, 1994, 1995, 3592,
	1203, 3580, 1999, 2000, 2003, 2006, 3579, 2011, 2012, 1233,
	2389, 2391, 425, 2018, 140, 427, 3536, 3535, 435, 436,
	3531, 3530, 3359, 995, 1027, 1028, 1029, 1030, 1031, 1032,
	1033, 3277, 2456, 2023, 3271, 2026, 2027, 1922, 1923, 1924,
	2031, 1211, 2033, 2034, 1134, 1196, 3125, 2934, 2039, 2040,
	2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050,
	2891, 2887, 2873, 2834, 2530, 1251, 1250, 1260, 1261, 1253,
	1254, 1255, 1256, 1257, 1258, 1259, 1252, 2529, 2204, 1262,
	2186, 432, 2185, 1967, 1821, 1816, 1490, 1489, 1463, 1461,
	1251, 1250, 1260, 1261, 1253, 1254, 1255, 1256, 1257, 1258,
	1259, 1252, 433, 1123, 1262, 1046, 1297, 467, 475, 3534,
	1483, 1997, 1998, 3211, 1211, 3709, 995, 140, 3402, 572,
	571, 574, 575, 576, 577, 1169, 505, 505, 573, 1976,
	505, 2309, 1211, 2291, 1211, 426, 3270, 140, 3211, 3618,
	140, 2390, 3029, 3601, 2977, 505, 505, 3484, 1211, 3221,
	140, 3571, 1211, 3029, 3552, 1782, 1782, 3029, 3480, 3211,
	3392, 3029, 3340, 2291, 1211, 3220, 140, 140, 140, 140,
	2813, 140, 3211, 3307, 2798, 417, 3211, 3210, 3638, 1326,
	2797, 507, 572, 571, 574, 575, 576, 577, 2528, 505,
	2087, 573, 1976, 140, 1251, 1250, 1260, 1261, 1253, 1254,
	1255, 1256, 1257, 1258, 1259, 1252, 3164, 1211, 1262, 431,
	420, 421, 2796, 442, 2243, 1211, 2932, 422, 424, 2365,
	418, 441, 440, 2166, 2213, 3029, 3028, 2805, 2804, 2801,
	2802, 2801, 2800, 995, 2366, 1211, 2225, 2224, 1990, 2208,
	2070, 2070, 1990, 1211, 2207, 2366, 505, 505, 505, 1389,
	1388, 995, 2528, 2182, 2936, 2241, 89, 2950, 2395, 2366,
	1776, 1909, 1174, 2149, 2165, 434, 1251, 1250, 1260, 1261,
	1253, 1254, 1255, 1256, 1257, 1258, 1259, 1252, 2187, 2194,
	1262, 1173, 505, 1131, 1132, 3607, 1132, 505, 505, 2191,
	2950, 2195, 3158, 1990, 2196, 2366, 2071, 2071, 2073, 1776,
	2181, 2967, 2814, 2803, 2596, 2283, 140, 2569, 995, 2950,
	2291, 1126, 1908, 2553, 2077, 2291, 2333, 140, 2332, 1826,
	1134, 2183, 2180, 1934, 1250, 1260, 1261, 1253, 1254, 1255,
	1256, 1257, 1258, 1259, 1252, 2205, 1910, 1262, 982, 1193,
	1870, 140, 2220, 1834, 1776, 1481, 1479, 1371, 1237, 86,
	2206, 3515, 3481, 2966, 3373, 3274, 2212, 3172, 3065, 2113,
	2957, 2958, 444, 2137, 2115, 2227, 2775, 2133, 2230, 2446,
	2219, 1138, 2161, 2128, 1942, 2127, 1456, 1119, 2151, 2199,
	1939, 1043, 1042, 3740, 3738, 3690, 3688, 995, 3650, 995,
	2960, 2936, 995, 2812, 2498, 2064, 1844, 1210, 2278, 995,
	86, 995, 995, 1486, 2240, 1175, 1135, 2694, 2691, 2964,
	2689, 140, 2693, 2692, 2089, 2690, 2963, 2962, 2688, 2687,
	538, 539, 446, 447, 3562, 3489, 2599, 2268, 2271, 2269,
	2270, 2383, 1920, 3538, 3554, 3161, 2392, 2393, 1225, 1226,
	2060, 532, 2276, 2060, 2275, 2288, 3298, 3124, 995, 995,
	3032, 2388, 2886, 2885, 2794, 2793, 1943, 2792, 2458, 2450,
	2769, 2285, 2286, 2287, 2284, 3477, 3364, 1223, 3367, 3476,
	3264, 2294, 3539, 3262, 3345, 3344, 466, 140, 140, 140,
	1820, 3247, 3248, 1214, 2594, 2593, 2991, 2780, 2728, 2245,
	1384, 911, 1117, 3707, 1215, 1101, 1098, 1097, 1047, 3281,
	3280, 1203, 995, 3156, 2226, 2396, 1912, 1913, 2397, 3106,
	2155, 1485, 3639, 3470, 3266, 3037, 3107, 1095, 2811, 103,
	2379, 1225, 1226, 2319, 2320, 2321, 2152, 1884, 2274, 2364,
	535, 2326, 1208, 1209, 3627, 3626, 2273, 3625, 3225, 2239,
	1498, 1076, 3548, 3547, 3488, 3474, 3396, 3368, 3297, 2720,
	536, 2338, 2340, 89, 3487, 3379, 2528, 3593, 2346, 2347,
	2348, 2349, 2503, 2504, 2505, 3692, 3691, 982, 3136, 2853,
	2551, 2064, 2394, 2549, 1455, 2548, 2315, 2312, 2231, 502,
	2064, 2455, 2457, 2064, 2534, 1802, 140, 2401, 1377, 2398,
	1228, 2445, 140, 140, 505, 505, 505, 1041, 1040, 140,
	2451, 3691, 2454, 2409, 3692, 1471, 3389, 2791, 530, 1906,
	3430, 58, 85, 3432, 22, 3431, 21, 3433, 23, 3434,
	24, 2525, 532, 3428, 17, 3427, 16, 3426, 15, 3712,
	2501, 3429, 18, 3425, 14, 91, 2493, 3419, 10, 3451,
	38, 3449, 36, 61, 2495, 3448, 35, 3447, 31, 3446,
	30, 3445, 29, 2560, 3443, 26, 3537, 2524, 2486, 2487,
	2488, 2490, 3442, 25, 3444, 27, 3424, 13, 1, 1211,
	3421, 12, 2516, 3420, 11, 3418, 9, 2221, 1852, 3086,
	2295, 2296, 2297, 2298, 2299, 2532, 3085, 3092, 2546, 2526,
	2819, 2604, 2822, 2514, 3102, 1469, 2552, 3236, 2531, 1021,
	2164, 1124, 1934, 3475, 3363, 3365, 3261, 3109, 3070, 2324,
	2649, 3069, 2508, 2533, 2537, 2539, 2543, 1221, 1251, 1250,
	1260, 1261, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1252,
	2507, 1118, 1262, 2671, 2673, 1832, 2572, 2060, 2060, 2060,
	2060, 2060, 2575, 532, 2559, 2176, 2257, 2573, 2238, 2600,
	2574, 2571, 2581, 2586, 2383, 2672, 2702, 2232, 1178, 1939,
	2097, 3574, 2641, 3315, 532, 3184, 2060, 2697, 2984, 2980,
	2410, 3013, 2092, 3504, 2605, 2704, 1992, 984, 99, 2629,
	2676, 2606, 2631, 2188, 2578, 2609, 2589, 2590, 1058, 423,
	2592, 1890, 2094, 2611, 2467, 3366, 1121, 2300, 2466, 2630,
	2481, 2109, 1198, 1202, 2608, 2465, 2464, 3361, 2468, 1395,
	2705, 1393, 1394, 1392, 1397, 1396, 3685, 2604, 3613, 428,
	1379, 3525, 2933, 2328, 1229, 583, 2632, 2633, 114, 2634,
	2635, 2712, 3126, 2636, 2585, 514, 515, 104, 112, 1919,
	2777, 430, 1270, 2272, 2788, 2402, 909, 2645, 2646, 910,
	902, 2264, 1194, 2683, 2684, 2682, 2686, 2711, 2685, 2713,
	2714, 3385, 3555, 2696, 2650, 2651, 2652, 2653, 2654, 3604,
	3517, 1219, 3557, 3486, 3378, 2325, 1314, 2064, 2064, 2064,
	2064, 2064, 2014, 2709, 2931, 556, 2700, 3154, 3559, 140,
	2781, 1925, 2719, 570, 2064, 569, 568, 502, 565, 566,
	3498, 1915, 2829, 2668, 1244, 2806, 2064, 545, 2710, 2761,
	2058, 2051, 2209, 140, 140, 140, 2370, 2768, 2368, 2770,
	2367, 1487, 2815, 2146, 1368, 2148, 2959, 2955, 2771, 2772,
	2773, 2381, 2774, 2840, 1251, 1250, 1260, 1261, 1253, 1254,
	1255, 1256, 1257, 1258, 1259, 1252, 2062, 140, 1262, 140,
	2057, 2061, 42, 995, 2831, 3135, 1074, 2783, 995, 2601,
	2928, 3291, 2277, 2836, 93, 529, 540, 28, 20, 19,
	2250, 1019, 44, 46, 47, 2809, 2502, 2157, 3524, 3666,
	1104, 995, 3677, 3700, 995, 2657, 2658, 2659, 2660, 2661,
	2662, 2663, 2664, 2665, 2666, 2667, 3581, 37, 34, 2835,
	33, 32, 3440, 3439, 3438, 2842, 3441, 3437, 3436, 2847,
	3435, 2927, 3450, 2851, 2852, 2841, 2854, 3423, 995, 2838,
	3422, 3652, 3651, 4, 1205, 2200, 84, 39, 980, 2,
	2799, 0, 0, 2898, 0, 0, 2855, 0, 0, 2890,
	0, 2941, 85, 0, 0, 0, 0, 0, 0, 2869,
	2864, 0, 532, 1455, 2870, 0, 0, 0, 0, 0,
	0, 0, 2888, 0, 2942, 0, 0, 0, 0, 0,
	0, 0, 2969, 0, 0, 0, 2896, 2973, 2974, 2975,
	0, 0, 0, 0, 2676, 0, 0, 0, 2937, 0,
	2908, 2909, 0, 2910, 0, 0, 2912, 0, 2914, 2940,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2911, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2900, 0, 0, 0, 2972, 2878, 2883, 0,
	2968, 0, 0, 0, 2643, 0, 0, 2949, 0, 0,
	0, 0, 0, 2944, 0, 0, 0, 0, 0, 2978,
	0, 0, 2924, 2925, 2926, 3042, 3044, 3046, 3047, 2961,
	0, 1989, 1991, 0, 0, 140, 0, 0, 0, 1996,
	0, 2970, 0, 140, 0, 2979, 140, 0, 0, 0,
	0, 85, 140, 0, 0, 140, 140, 140, 0, 3067,
	0, 532, 0, 0, 0, 0, 2761, 2989, 0, 3040,
	0, 0, 0, 3066, 2761, 0, 0, 2028, 2029, 0,
	0, 0, 0, 0, 2035, 2036, 2037, 2038, 2971, 1890,
	3033, 0, 0, 2995, 2986, 2987, 2988, 0, 3082, 3083,
	3084, 3003, 0, 0, 0, 0, 3030, 3031, 0, 0,
	0, 0, 0, 0, 3008, 3009, 3010, 2902, 2903, 2904,
	2905, 2906, 0, 0, 3025, 3049, 0, 0, 0, 0,
	0, 0, 0, 0, 995, 3027, 140, 0, 0, 0,
	0, 0, 0, 995, 995, 0, 0, 0, 505, 3120,
	3121, 0, 3081, 0, 0, 0, 0, 0, 0, 3068,
	0, 0, 3036, 140, 505, 0, 1782, 3122, 0, 3110,
	0, 0, 0, 3048, 3111, 2840, 0, 0, 0, 3113,
	2604, 3112, 505, 0, 0, 3116, 3140, 0, 3115, 0,
	0, 3123, 0, 3137, 3138, 0, 0, 0, 3108, 3130,
	0, 0, 995, 0, 0, 2837, 505, 0, 995, 0,
	0, 3131, 2768, 0, 505, 0, 0, 0, 2146, 0,
	0, 0, 0, 3186, 3188, 0, 995, 995, 0, 0,
	0, 0, 0, 0, 0, 2676, 0, 0, 0, 0,
	0, 0, 3174, 0, 0, 0, 0, 0, 0, 3179,
	3180, 3181, 0, 0, 0, 140, 3157, 3165, 0, 0,
	0, 0, 0, 3177, 0, 995, 3166, 0, 2892, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3213, 543,
	3183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1320, 1320, 1320, 1326, 1320, 1320, 1326, 1320, 1326,
	1335, 1336, 3178, 0, 3142, 3143, 3144, 3145, 0, 0,
	0, 0, 3149, 0, 3223, 0, 3152, 3153, 0, 0,
	0, 2930, 995, 0, 0, 0, 0, 0, 2761, 0,
	0, 0, 0, 3192, 0, 0, 3195, 0, 3224, 0,
	0, 0, 0, 3200, 3206, 3207, 0, 3205, 0, 140,
	140, 140, 140, 140, 0, 3194, 0, 0, 3222, 0,
	0, 0, 140, 0, 0, 3226, 140, 0, 1322, 1324,
	140, 1328, 1330, 0, 1333, 3282, 0, 2060, 140, 0,
	3208, 3209, 0, 3227, 0, 0, 0, 0, 0, 0,
	0, 995, 0, 0, 0, 0, 0, 3239, 0, 2941,
	0, 0, 2941, 3303, 3249, 3254, 0, 0, 0, 3257,
	0, 0, 0, 532, 0, 0, 2969, 3268, 0, 0,
	0, 0, 0, 3272, 3273, 3302, 2760, 0, 3319, 995,
	3321, 3322, 3323, 0, 2388, 0, 3310, 0, 3286, 0,
	3279, 0, 3285, 0, 3267, 0, 0, 0, 3306, 0,
	0, 0, 0, 0, 0, 0, 3300, 2940, 3299, 0,
	2940, 0, 3296, 0, 0, 85, 0, 3305, 3283, 0,
	0, 3275, 3276, 3309, 3308, 532, 0, 0, 3326, 0,
	0, 140, 0, 0, 0, 0, 0, 3341, 0, 0,
	0, 0, 0, 0, 995, 995, 995, 3343, 0, 0,
	505, 0, 0, 0, 0, 140, 505, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2064, 0, 0,
	0, 140, 2761, 505, 2761, 995, 0, 505, 0, 0,
	0, 505, 505, 0, 505, 0, 3325, 0, 2761, 0,
	0, 0, 2941, 0, 85, 2201, 0, 0, 0, 3318,
	0, 3320, 0, 2868, 532, 3394, 3395, 0, 0, 0,
	0, 0, 2876, 2881, 995, 3327, 3391, 3371, 140, 995,
	0, 3370, 2868, 3372, 0, 995, 3369, 0, 995, 995,
	0, 0, 3380, 0, 85, 0, 0, 0, 0, 3410,
	0, 3388, 0, 0, 0, 3398, 3390, 3400, 3335, 3403,
	2940, 0, 3393, 0, 0, 0, 0, 0, 3214, 3401,
	3215, 0, 3216, 3218, 0, 0, 0, 0, 1297, 0,
	0, 2242, 0, 0, 0, 0, 0, 0, 3167, 3168,
	3169, 3170, 0, 0, 3171, 0, 0, 3173, 0, 2263,
	0, 0, 0, 0, 0, 0, 1297, 0, 0, 0,
	0, 0, 3471, 3473, 995, 0, 995, 0, 0, 0,
	3520, 0, 0, 0, 0, 3374, 3482, 0, 0, 0,
	0, 3501, 3412, 3506, 2676, 0, 0, 3406, 3502, 3508,
	0, 3507, 2248, 2249, 0, 995, 0, 3326, 3516, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 85,
	0, 3532, 0, 2290, 85, 2292, 0, 0, 0, 0,
	0, 0, 0, 2760, 0, 0, 0, 0, 0, 0,
	0, 2760, 0, 0, 0, 0, 0, 0, 2301, 2302,
	2303, 2304, 0, 0, 3529, 2308, 2310, 0, 0, 2313,
	3550, 0, 2316, 2317, 0, 0, 0, 2322, 2323, 0,
	0, 0, 0, 2329, 2330, 3576, 2331, 0, 995, 2334,
	2335, 3563, 2336, 2337, 0, 3578, 2341, 2342, 2343, 2344,
	2345, 0, 3553, 0, 3551, 2350, 2351, 2352, 2353, 2354,
	2355, 2356, 2357, 2358, 2359, 2360, 2361, 3569, 3572, 0,
	0, 3577, 0, 0, 0, 140, 0, 995, 0, 502,
	0, 0, 0, 0, 3600, 0, 0, 3588, 0, 0,
	0, 0, 3602, 0, 543, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 85, 0, 3624, 0, 505,
	0, 85, 85, 0, 3632, 85, 505, 0, 0, 0,
	0, 0, 0, 3622, 0, 0, 0, 0, 2868, 3619,
	3506, 3612, 3617, 0, 2840, 0, 0, 0, 0, 0,
	0, 3636, 85, 0, 3660, 3628, 3640, 85, 3629, 3644,
	0, 3041, 3043, 3045, 2868, 0, 3642, 532, 3680, 0,
	2649, 0, 3674, 3656, 995, 502, 3663, 0, 3655, 3665,
	3679, 3654, 3682, 3653, 3681, 0, 2083, 3687, 85, 3693,
	3694, 3684, 85, 85, 3697, 3695, 3689, 85, 0, 0,
	0, 0, 0, 0, 0, 1222, 0, 85, 0, 3631,
	0, 0, 0, 3631, 0, 0, 0, 0, 0, 140,
	0, 0, 0, 0, 0, 0, 0, 85, 3721, 0,
	85, 0, 3726, 0, 3729, 85, 0, 0, 0, 995,
	3732, 0, 0, 0, 0, 0, 995, 995, 995, 0,
	0, 0, 0, 85, 0, 85, 135, 0, 0, 85,
	0, 3748, 443, 0, 1297, 2760, 0, 135, 0, 0,
	463, 0, 0, 0, 0, 0, 0, 85, 0, 0,
	85, 3631, 3756, 0, 523, 3703, 85, 0, 0, 0,
	2922, 85, 0, 0, 0, 3631, 0, 0, 544, 0,
	0, 0, 995, 0, 919, 0, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 3631, 0, 2561, 0, 0,
	2612, 2613, 2614, 2615, 2616, 2617, 0, 135, 0, 0,
	2591, 0, 0, 0, 0, 0, 0, 0, 995, 135,
	0, 3631, 0, 3631, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3710, 0, 0, 0, 0,
	0, 0, 2921, 0, 0, 3631, 0, 0, 0, 0,
	0, 0, 0, 0, 3631, 0, 0, 0, 0, 3631,
	0, 0, 3733, 0, 0, 0, 0, 0, 0, 3739,
	1251, 1250, 1260, 1261, 1253, 1254, 1255, 1256, 1257, 1258,
	1259, 1252, 995, 0, 1262, 0, 2698, 2699, 0, 140,
	0, 0, 0, 0, 0, 0, 0, 2920, 0, 3521,
	3522, 0, 0, 0, 0, 0, 0, 0, 1321, 1323,
	1325, 1327, 1329, 1331, 1332, 1334, 0, 995, 0, 0,
	0, 0, 0, 0, 0, 995, 0, 0, 0, 140,
	0, 140, 2919, 0, 3558, 3561, 0, 0, 0, 2760,
	0, 2760, 1251, 1250, 1260, 1261, 1253, 1254, 1255, 1256,
	1257, 1258, 1259, 1252, 0, 2760, 1262, 0, 0, 0,
	0, 0, 0, 0, 995, 0, 2721, 2722, 2723, 2724,
	0, 0, 2729, 2730, 2731, 2732, 2733, 0, 0, 2736,
	2737, 2738, 2739, 2740, 2741, 2742, 2743, 2744, 2745, 2746,
	0, 2748, 2749, 2750, 2751, 0, 2762, 1251, 1250, 1260,
	1261, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1252, 0,
	0, 1262, 0, 0, 0, 0, 0, 0, 0, 505,
	0, 0, 0, 0, 2444, 0, 0, 995, 0, 0,
	3623, 0, 1251, 1250, 1260, 1261, 1253, 1254, 1255, 1256,
	1257, 1258, 1259, 1252, 0, 0, 1262, 2418, 0, 2639,
	0, 0, 0, 0, 3561, 2425, 0, 0, 0, 0,
	0, 0, 0, 0, 2444, 0, 0, 0, 0, 0,
	0, 0, 995, 0, 995, 0, 995, 0, 0, 0,
	0, 0, 0, 140, 0, 0, 0, 2418, 2412, 0,
	0, 0, 0, 0, 555, 2425, 135, 0, 0, 0,
	0, 2422, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2899, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2907, 0, 995, 2638, 0, 0,
	995, 0, 2413, 0, 0, 2916, 2917, 2918, 0, 0,
	0, 2422, 2923, 0, 0, 136, 0, 995, 0, 3730,
	0, 0, 2421, 0, 0, 135, 136, 1251, 1250, 1260,
	1261, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1252, 0,
	0, 1262, 0, 524, 0, 0, 0, 2943, 0, 0,
	1251, 1250, 1260, 1261, 1253, 1254, 1255, 1256, 1257, 1258,
	1259, 1252, 2421, 920, 1262, 0, 136, 988, 0, 0,
	0, 0, 0, 0, 0, 523, 0, 0, 995, 0,
	2426, 0, 0, 0, 0, 2976, 136, 0, 0, 523,
	2432, 0, 0, 0, 0, 0, 0, 0, 136, 0,
	0, 0, 0, 0, 995, 1251, 1250, 1260, 1261, 1253,
	1254, 1255, 1256, 1257, 1258, 1259, 1252, 0, 0, 1262,
	2426, 0, 0, 0, 0, 2424, 0, 0, 0, 0,
	2432, 0, 0, 0, 0, 0, 0, 0, 995, 0,
	0, 0, 0, 581, 0, 0, 0, 2990, 0, 2992,
	2993, 0, 0, 0, 0, 0, 2999, 3000, 0, 0,
	0, 0, 0, 0, 0, 2424, 0, 0, 0, 0,
	0, 0, 505, 0, 0, 0, 0, 0, 0, 995,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2436, 0, 995, 0, 995, 0, 0, 0, 0, 995,
	0, 0, 0, 0, 0, 0, 0, 0, 462, 0,
	0, 0, 995, 0, 0, 0, 0, 2443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2429,
	2436, 0, 0, 0, 140, 0, 0, 0, 0, 0,
	2637, 0, 918, 0, 0, 0, 987, 2438, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2443, 505, 0,
	0, 995, 0, 0, 0, 0, 140, 0, 1026, 2429,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2419,
	0, 140, 0, 0, 0, 0, 0, 2438, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3146, 3147, 3148, 0, 3150, 0, 0, 2415, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3159, 3160, 2419,
	3162, 0, 0, 3163, 2417, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2428, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3176, 2415, 1251, 1250,
	1260, 1261, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1252,
	0, 0, 1262, 0, 2417, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 136, 2428, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2416, 2420, 2423, 0,
	2427, 2430, 2431, 2433, 2434, 2435, 2437, 2439, 2440, 2441,
	2442, 0, 3212, 3193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3217, 3219, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 136, 0, 2416, 2420, 2423, 0,
	2427, 2430, 2431, 2433, 2434, 2435, 2437, 2439, 2440, 2441,
	2442, 0, 0, 0, 0, 0, 0, 1370, 0, 1246,
	919, 1249, 0, 0, 0, 919, 0, 0, 1263, 1264,
	1265, 1266, 1267, 1268, 1269, 0, 1247, 1248, 1245, 0,
	0, 0, 0, 0, 524, 0, 1251, 1250, 1260, 1261,
	1253, 1254, 1255, 1256, 1257, 1258, 1259, 1252, 524, 0,
	1262, 0, 0, 0, 0, 0, 0, 2607, 1238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3287, 3288,
	3289, 3290, 0, 0, 0, 0, 582, 0, 3294, 3295,
	0, 0, 0, 0, 2414, 1251, 1250, 1260, 1261, 1253,
	1254, 1255, 1256, 1257, 1258, 1259, 1252, 0, 0, 1262,
	0, 0, 0, 0, 0, 3311, 3312, 3313, 0, 0,
	135, 0, 0, 0, 0, 1466, 463, 0, 0, 0,
	0, 0, 0, 0, 2414, 0, 0, 137, 0, 0,
	135, 0, 0, 135, 0, 0, 1466, 463, 137, 0,
	3336, 3337, 3338, 1497, 3339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 135,
	135, 135, 135, 0, 135, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3328, 0, 0, 137, 989,
	0, 0, 0, 0, 0, 0, 1810, 0, 0, 0,
	2289, 0, 0, 0, 0, 0, 0, 0, 137, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	137, 0, 0, 0, 0, 0, 0, 3381, 1251, 1250,
	1260, 1261, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1252,
	0, 0, 1262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3397, 0, 3399, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3407, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 523,
	0, 3483, 0, 0, 0, 0, 1417, 0, 0, 0,
	135, 3492, 0, 0, 0, 0, 0, 3503, 0, 0,
	0, 0, 0, 0, 3509, 0, 3510, 3511, 3512, 3513,
	0, 0, 0, 0, 135, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1497, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1973, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 523, 0, 1973, 1973, 1973, 0,
	0, 1404, 1973, 1973, 1973, 1973, 136, 1973, 1973, 920,
	0, 0, 919, 1973, 920, 0, 0, 0, 0, 0,
	3570, 0, 0, 3573, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1973, 1973, 1973, 1973, 0, 0, 1973,
	1973, 1973, 1973, 1973, 0, 0, 0, 0, 1973, 1973,
	1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973, 1973,
	135, 135, 135, 0, 0, 0, 0, 919, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 137, 0, 0,
	0, 1497, 0, 1418, 0, 0, 3611, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1454, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 136,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 136,
	0, 0, 136, 3647, 0, 0, 137, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 136, 136,
	136, 136, 0, 136, 0, 0, 0, 40, 41, 135,
	0, 0, 0, 0, 0, 135, 135, 0, 0, 0,
	0, 64, 135, 0, 0, 0, 0, 82, 918, 0,
	43, 68, 69, 918, 1380, 0, 0, 0, 65, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 56, 3736, 3737, 0, 86,
	0, 0, 0, 1431, 1434, 1435, 1436, 1437, 1438, 1439,
	0, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 0,
	1419, 1420, 1421, 1422, 1398, 1402, 1432, 1399, 1405, 1401,
	1403, 1400, 0, 1406, 1407, 1408, 1409, 1410, 1411, 1412,
	1413, 1414, 1415, 1416, 1423, 1424, 1425, 1426, 1427, 1428,
	1429, 1430, 0, 0, 0, 0, 0, 1457, 0, 0,
	0, 0, 0, 1465, 462, 0, 0, 0, 524, 0,
	1888, 0, 0, 0, 0, 0, 0, 0, 0, 136,
	0, 0, 0, 0, 1465, 462, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 136, 0, 0, 0, 0, 0, 0,
	1238, 0, 45, 79, 49, 48, 51, 1936, 0, 73,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 55, 81, 80, 0, 0, 0,
	0, 50, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 70, 0, 0, 0,
	0, 0, 0, 524, 1831, 1433, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 920, 1853, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 62, 63, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 71, 0, 72, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 136,
	136, 136, 135, 0, 0, 0, 920, 0, 0, 1892,
	0, 0, 0, 76, 0, 0, 0, 0, 0, 0,
	1936, 0, 0, 53, 988, 0, 2192, 2193, 135, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 75, 0, 0, 0, 0, 57, 74,
	0, 59, 60, 66, 0, 67, 1892, 0, 0, 0,
	135, 0, 523, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1892, 0,
	1892, 0, 0, 1978, 0, 0, 0, 0, 137, 0,
	1979, 0, 1892, 1892, 40, 0, 0, 0, 136, 0,
	0, 0, 0, 0, 136, 136, 0, 0, 64, 0,
	0, 136, 0, 0, 82, 0, 0, 43, 0, 0,
	918, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1497, 0, 0, 0, 0, 0, 0, 0, 0, 2021,
	2022, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 86, 0, 0, 0,
	0, 3459, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 918, 0, 0, 0, 0,
	0, 0, 0, 3452, 0, 0, 3699, 3702, 3698, 1892,
	0, 137, 0, 987, 0, 0, 1973, 0, 0, 0,
	1973, 1973, 1973, 1973, 1973, 0, 0, 0, 0, 0,
	0, 137, 0, 0, 137, 52, 54, 0, 0, 0,
	0, 78, 0, 0, 0, 0, 0, 0, 0, 1973,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	137, 137, 137, 137, 0, 137, 0, 0, 0, 1785,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 135, 45,
	79, 49, 48, 51, 0, 0, 135, 0, 0, 523,
	0, 0, 0, 0, 3453, 135, 0, 0, 135, 2399,
	1497, 0, 919, 0, 0, 0, 0, 0, 0, 0,
	0, 55, 81, 80, 0, 0, 0, 0, 50, 591,
	592, 593, 594, 595, 596, 597, 598, 599, 600, 601,
	602, 603, 604, 605, 606, 607, 608, 609, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 626, 627, 628, 629, 630, 631,
	632, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	62, 63, 0, 3455, 0, 0, 0, 0, 0, 135,
	0, 0, 0, 3462, 3456, 3457, 3458, 3460, 3461, 0,
	0, 0, 1889, 71, 0, 72, 0, 0, 0, 0,
	0, 137, 0, 0, 0, 0, 135, 0, 0, 0,
	0, 136, 0, 0, 0, 0, 0, 0, 0, 0,
	76, 0, 0, 0, 0, 137, 0, 0, 0, 0,
	53, 0, 1240, 0, 0, 0, 0, 136, 0, 1935,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3463, 3454, 0, 59, 60,
	66, 0, 67, 0, 0, 0, 0, 0, 0, 136,
	0, 524, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 135, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1973,
	0, 0, 0, 40, 0, 0, 0, 1973, 0, 1497,
	0, 0, 0, 0, 0, 0, 0, 64, 0, 0,
	0, 0, 0, 82, 0, 0, 43, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1936,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 137, 137, 137, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 86, 0, 0, 0, 0,
	3459, 0, 1935, 0, 0, 0, 989, 0, 0, 0,
	0, 919, 135, 135, 135, 135, 135, 0, 0, 0,
	0, 0, 3452, 0, 0, 523, 0, 3759, 0, 135,
	0, 0, 0, 523, 0, 0, 0, 0, 1973, 0,
	0, 135, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 52, 54, 0, 0, 0, 0, 78, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2218, 0, 0, 0, 0, 2218,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	137, 0, 0, 0, 0, 0, 137, 137, 0, 0,
	0, 0, 2218, 137, 0, 2218, 0, 136, 45, 79,
	49, 48, 51, 0, 0, 136, 0, 0, 524, 0,
	0, 0, 0, 3453, 136, 0, 0, 136, 0, 0,
	0, 920, 0, 0, 0, 0, 0, 0, 0, 2267,
	55, 81, 80, 0, 135, 0, 0, 50, 1892, 0,
	0, 0, 0, 2449, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 135, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 135, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 62,
	63, 0, 3455, 0, 0, 0, 0, 0, 136, 0,
	0, 0, 3462, 3456, 3457, 3458, 3460, 3461, 0, 0,
	0, 0, 71, 0, 72, 0, 0, 0, 0, 0,
	0, 135, 0, 0, 0, 136, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 544, 76,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 53,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3463, 3454, 0, 59, 60, 66,
	0, 67, 0, 0, 0, 0, 0, 0, 1888, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	918, 0, 0, 0, 0, 919, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 136, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 40, 1936, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 64, 0, 0, 0, 0, 0, 82, 0, 0,
	43, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2499, 0, 0, 0, 0,
	0, 0, 0, 137, 2506, 2510, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 86,
	0, 0, 0, 0, 3459, 0, 0, 0, 0, 137,
	2677, 136, 136, 136, 136, 136, 0, 0, 0, 0,
	0, 0, 0, 0, 524, 0, 3452, 0, 136, 0,
	0, 3754, 524, 0, 0, 0, 0, 0, 0, 0,
	136, 137, 0, 2218, 0, 0, 0, 0, 135, 2547,
	0, 52, 54, 0, 0, 0, 0, 78, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1892, 1892, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2766, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1892, 0, 0, 0,
	0, 0, 45, 79, 49, 48, 51, 1892, 0, 0,
	0, 1935, 0, 0, 0, 0, 0, 3453, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 136, 55, 81, 80, 0, 0, 0,
	0, 50, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2647, 0, 0, 0, 136, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 523, 136, 0, 0, 919, 0, 0, 918,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 62, 63, 0, 3455, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3462, 3456, 3457, 3458,
	3460, 3461, 2449, 0, 2875, 2880, 71, 0, 72, 0,
	136, 0, 1892, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 76, 0, 0, 0, 0, 0, 137,
	0, 0, 0, 53, 0, 0, 0, 137, 0, 0,
	2765, 0, 0, 0, 0, 0, 137, 0, 1973, 137,
	1973, 0, 1973, 1973, 0, 0, 0, 0, 3463, 3454,
	0, 59, 60, 66, 0, 67, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2677, 0, 1888, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2816, 2817, 2818, 0, 40,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 64, 0, 0, 0, 0, 0, 82,
	137, 0, 43, 0, 0, 0, 2845, 0, 0, 0,
	0, 0, 135, 544, 0, 0, 0, 0, 0, 0,
	40, 0, 0, 0, 0, 0, 0, 137, 0, 0,
	0, 0, 0, 0, 64, 0, 0, 0, 0, 0,
	82, 86, 0, 43, 0, 2884, 3459, 0, 0, 0,
	2889, 0, 523, 0, 523, 0, 2893, 0, 0, 2894,
	2895, 0, 0, 0, 0, 0, 0, 0, 3452, 0,
	0, 0, 0, 3744, 0, 0, 0, 0, 0, 0,
	0, 0, 86, 0, 0, 0, 0, 3459, 0, 0,
	1889, 0, 0, 0, 0, 0, 0, 136, 0, 0,
	0, 0, 0, 0, 0, 52, 54, 0, 0, 3452,
	0, 78, 0, 0, 3731, 0, 0, 0, 0, 137,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 918, 0, 1892, 0, 2948, 0, 0,
	1935, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 45, 79, 49, 48, 51, 0,
	0, 0, 0, 0, 0, 0, 2948, 0, 0, 3453,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 55, 81, 80, 0,
	0, 0, 0, 50, 0, 45, 79, 49, 48, 51,
	0, 0, 0, 0, 0, 0, 135, 0, 0, 0,
	3453, 0, 0, 137, 137, 137, 137, 137, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 55, 81, 80,
	137, 524, 0, 0, 50, 2677, 0, 0, 0, 3035,
	0, 0, 137, 0, 0, 62, 63, 0, 3455, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3462, 3456,
	3457, 3458, 3460, 3461, 0, 919, 0, 0, 71, 0,
	72, 0, 0, 0, 0, 0, 0, 0, 2510, 0,
	0, 0, 0, 0, 0, 0, 62, 63, 0, 3455,
	0, 0, 0, 0, 0, 76, 0, 0, 0, 3462,
	3456, 3457, 3458, 3460, 3461, 53, 0, 0, 0, 71,
	0, 72, 0, 0, 2766, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3463, 3454, 0, 59, 60, 66, 76, 67, 0, 0,
	0, 0, 0, 0, 0, 137, 53, 0, 0, 0,
	2766, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1892, 40, 0, 0, 137,
	0, 3463, 3454, 0, 59, 60, 66, 0, 67, 0,
	64, 0, 0, 0, 0, 137, 82, 0, 0, 43,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 918, 0, 0, 0, 0, 0,
	0, 136, 0, 0, 0, 0, 2877, 2882, 86, 0,
	3035, 0, 137, 3459, 0, 0, 0, 3035, 3035, 3035,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3452, 0, 0, 0, 0,
	3723, 524, 0, 524, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 523, 0, 0,
	0, 0, 0, 2765, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 52, 54, 0,
	0, 0, 0, 78, 0, 0, 0, 0, 1889, 523,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2765,
	0, 0, 0, 0, 523, 0, 0, 0, 0, 0,
	0, 45, 79, 49, 48, 51, 0, 0, 52, 54,
	0, 0, 0, 0, 78, 0, 3453, 0, 0, 2766,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 55, 81, 80, 0, 0, 0, 0,
	50, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 136, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3304, 0,
	0, 0, 62, 63, 0, 3455, 3035, 0, 0, 0,
	0, 0, 0, 0, 0, 3462, 3456, 3457, 3458, 3460,
	3461, 0, 0, 0, 0, 71, 0, 72, 2766, 137,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2677, 3331, 0, 0, 0, 0,
	0, 0, 76, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 53, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3463, 3454, 0,
	59, 60, 66, 0, 67, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2765, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2766, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3035, 0, 3035, 0, 3035, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2765, 0, 0,
	0, 3485, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 918, 0, 0, 0, 0, 1892, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 52, 54, 524, 0, 0, 0,
	78, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1892,
	0, 0, 0, 0, 0, 0, 0, 0, 524, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 524, 0, 2765, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3035,
	0, 0, 0, 137, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3606, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3610, 0, 1892, 0, 0, 0, 0,
	3035, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 878, 1892, 377, 640, 882, 725, 748, 891,
	754, 756, 819, 701, 796, 304, 745, 702, 0, 0,
	693, 549, 694, 726, 221, 548, 852, 797, 880, 782,
	812, 822, 220, 208, 789, 788, 869, 737, 736, 817,
	865, 879, 0, 0, 648, 267, 0, 0, 401, 359,
	287, 0, 3606, 780, 0, 633, 634, 765, 821, 713,
	808, 884, 746, 813, 885, 86, 0, 1211, 0, 0,
	464, 572, 571, 574, 575, 576, 577, 0, 0, 147,
	573, 578, 579, 580, 0, 775, 818, 896, 692, 546,
	563, 697, 647, 0, 870, 733, 734, 225, 0, 0,
	0, 0, 0, 0, 0, 778, 795, 837, 762, 396,
	824, 833, 847, 755, 322, 240, 0, 0, 0, 0,
	560, 561, 1971, 0, 0, 0, 663, 137, 562, 0,
	707, 558, 591, 592, 593, 594, 595, 596, 597, 598,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 611, 612, 613, 614, 615, 616, 617, 618,
	619, 620, 621, 622, 623, 624, 625, 626, 627, 628,
	629, 630, 631, 632, 564, 0, 0, 0, 712, 690,
	731, 839, 691, 689, 288, 704, 636, 868, 763, 256,
	164, 874, 761, 661, 827, 708, 856, 749, 264, 706,
	165, 703, 709, 747, 299, 836, 842, 645, 168, 266,
	853, 727, 740, 209, 0, 334, 814, 395, 552, 236,
	800, 333, 268, 388, 828, 876, 394, 750, 371, 402,
	406, 232, 783, 200, 356, 223, 218, 732, 846, 696,
	241, 321, 213, 260, 766, 820, 728, 205, 831, 807,
	858, 355, 385, 170, 284, 386, 405, 188, 378, 285,
	292, 202, 204, 203, 182, 349, 384, 194, 207, 854,
	841, 860, 723, 710, 715, 711, 739, 877, 250, 242,
	861, 859, 741, 308, 191, 793, 786, 779, 399, 154,
	344, 343, 753, 249, 844, 155, 146, 329, 156, 257,
	173, 864, 408, 187, 262, 379, 551, 235, 298, 211,
	816, 309, 738, 167, 325, 280, 282, 279, 283, 239,
	150, 157, 840, 327, 346, 383, 189, 362, 148, 149,
	151, 159, 337, 160, 161, 883, 274, 227, 231, 243,
	254, 815, 332, 363, 400, 809, 184, 336, 364, 375,
	365, 368, 366, 367, 176, 370, 393, 195, 345, 348,
	407, 838, 183, 178, 872, 855, 802, 768, 774, 698,
	0, 177, 834, 730, 742, 722, 810, 721, 238, 826,
	391, 392, 210, 409, 639, 887, 179, 705, 886, 295,
	303, 294, 889, 387, 873, 803, 792, 790, 699, 871,
	801, 791, 263, 230, 245, 319, 270, 320, 246, 290,
	289, 291, 272, 794, 0, 174, 0, 360, 881, 898,
	369, 192, 716, 848, 382, 153, 326, 193, 237, 228,
	318, 293, 185, 248, 358, 261, 269, 830, 895, 307,
	335, 199, 397, 357, 224, 650, 300, 662, 656, 658,
	657, 654, 655, 653, 652, 651, 664, 637, 638, 641,
	642, 643, 785, 875, 700, 646, 851, 659, 660, 823,
	893, 635, 206, 584, 676, 677, 678, 585, 679, 680,
	586, 587, 681, 682, 683, 684, 588, 685, 686, 687,
	665, 666, 667, 668, 669, 670, 671, 672, 675, 673,
	674, 0, 781, 315, 175, 186, 198, 217, 215, 229,
	258, 281, 286, 313, 347, 352, 372, 373, 374, 376,
	219, 0, 222, 197, 330, 196, 271, 251, 314, 380,
	381, 323, 212, 644, 169, 180, 265, 894, 328, 234,
	688, 695, 714, 717, 718, 719, 720, 724, 729, 735,
	743, 744, 752, 757, 758, 759, 760, 767, 769, 770,
	771, 772, 773, 776, 777, 787, 798, 799, 805, 806,
	0, 829, 832, 649, 843, 845, 849, 850, 857, 862,
	863, 888, 892, 897, 398, 216, 784, 804, 835, 181,
	190, 201, 214, 226, 233, 244, 247, 252, 253, 255,
	259, 273, 275, 276, 277, 278, 296, 297, 301, 302,
	305, 306, 310, 311, 312, 316, 317, 324, 158, 331,
	338, 339, 340, 341, 342, 350, 351, 353, 354, 361,
	389, 390, 403, 404, 867, 764, 166, 0, 0, 172,
	0, 0, 0, 0, 0, 751, 171, 866, 890, 811,
	825, 878, 0, 377, 640, 882, 725, 748, 891, 754,
	756, 819, 701, 796, 304, 745, 702, 0, 0, 693,
	549, 694, 726, 221, 548, 852, 797, 880, 782, 812,
	822, 220, 208, 789, 788, 869, 737, 736, 817, 865,
	879, 0, 0, 648, 267, 0, 0, 401, 359, 287,
	0, 0, 780, 0, 633, 634, 765, 821, 713, 808,
	884, 746, 813, 885, 86, 0, 0, 0, 0, 464,
	572, 571, 574, 575, 576, 577, 0, 0, 147, 573,
	578, 579, 580, 0, 775, 818, 896, 692, 546, 563,
	697, 647, 0, 870, 733, 734, 225, 0, 0, 0,
	0, 0, 0, 0, 778, 795, 837, 762, 396, 824,
	833, 847, 755, 322, 240, 0, 0, 0, 0, 560,
	561, 542, 0, 0, 0, 663, 0, 562, 0, 707,
	558, 591, 592, 593, 594, 595, 596, 597, 598, 599,
	600, 601, 602, 603, 604, 605, 606, 607, 608, 609,
	610, 611, 612, 613, 614, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 626, 627, 628, 629,
	630, 631, 632, 564, 0, 0, 0, 712, 690, 731,
	839, 691, 689, 288, 704, 636, 868, 763, 256, 164,
	874, 761, 661, 827, 708, 856, 749, 264, 706, 165,
	703, 709, 747, 299, 836, 842, 645, 168, 266, 853,
	727, 740, 209, 0, 334, 814, 395, 552, 236, 800,
	333, 268, 388, 828, 876, 394, 750, 371, 402, 406,
	232, 783, 200, 356, 223, 218, 732, 846, 696, 241,
	321, 213, 260, 766, 820, 728, 205, 831, 807, 858,
	355, 385, 170, 284, 386, 405, 188, 378, 285, 292,
	202, 204, 203, 182, 349, 384, 194, 207, 854, 841,
	860, 723, 710, 715, 711, 739, 877, 250, 242, 861,
	859, 741, 308, 191, 793, 786, 779, 399, 154, 344,
	343, 753, 249, 844, 155, 146, 329, 156, 257, 173,
	864, 408, 187, 262, 379, 551, 235, 298, 211, 816,
	309, 738, 167, 325, 280, 282, 279, 283, 239, 150,
	157, 840, 327, 346, 383, 189, 362, 148, 149, 151,
	159, 337, 160, 161, 883, 274, 227, 231, 243, 254,
	815, 332, 363, 400, 809, 184, 336, 364, 375, 365,
	368, 366, 367, 176, 370, 393, 195, 345, 348, 407,
	838, 183, 178, 872, 855, 802, 768, 774, 698, 0,
	177, 834, 730, 742, 722, 810, 721, 238, 826, 391,
	392, 210, 409, 639, 887, 179, 705, 886, 295, 303,
	294, 889, 387, 873, 803, 792, 790, 699, 871, 801,
	791, 263, 230, 245, 319, 270, 320, 246, 290, 289,
	291, 272, 794, 0, 174, 0, 360, 881, 898, 369,
	192, 716, 848, 382, 153, 326, 193, 237, 228, 318,
	293, 185, 248, 358, 261, 269, 830, 895, 307, 335,
	199, 397, 357, 224, 650, 300, 662, 656, 658, 657,
	654, 655, 653, 652, 651, 664, 637, 638, 641, 642,
	643, 785, 875, 700, 646, 851, 659, 660, 823, 893,
	635, 206, 584, 676, 677, 678, 585, 679, 680, 586,
	587, 681, 682, 683, 684, 588, 685, 686, 687, 665,
	666, 667, 668, 669, 670, 671, 672, 675, 673, 674,
	0, 781, 315, 175, 186, 198, 217, 215, 229, 258,
	281, 286, 313, 347, 352, 372, 373, 374, 376, 219,
	0, 222, 197, 330, 196, 271, 251, 314, 380, 381,
	323, 212, 644, 169, 180, 265, 894, 328, 234, 688,
	695, 714, 717, 718, 719, 720, 724, 729, 735, 743,
	744, 752, 757, 758, 759, 760, 767, 769, 770, 771,
	772, 773, 776, 777, 787, 798, 799, 805, 806, 0,
	829, 832, 649, 843, 845, 849, 850, 857, 862, 863,
	888, 892, 897, 398, 216, 784, 804, 835, 181, 190,
	201, 214, 226, 233, 244, 247, 252, 253, 255, 259,
	273, 275, 276, 277, 278, 296, 297, 301, 302, 305,
	306, 310, 311, 312, 316, 317, 324, 158, 331, 338,
	339, 340, 341, 342, 350, 351, 353, 354, 361, 389,
	390, 403, 404, 867, 764, 166, 0, 0, 172, 0,
	0, 0, 0, 0, 751, 171, 866, 890, 811, 825,
	878, 0, 377, 640, 882, 725, 748, 891, 754, 756,
	819, 701, 796, 304, 745, 702, 0, 0, 693, 549,
	694, 726, 221, 548, 852, 797, 880, 782, 812, 822,
	220, 208, 789, 788, 869, 737, 736, 817, 865, 879,
	0, 0, 648, 267, 0, 0, 401, 359, 287, 0,
	0, 780, 0, 633, 634, 765, 821, 713, 808, 884,
	746, 813, 885, 86, 0, 1211, 0, 0, 464, 572,
	571, 574, 575, 576, 577, 0, 0, 147, 573, 578,
	579, 580, 0, 775, 818, 896, 692, 546, 563, 697,
	647, 0, 870, 733, 734, 225, 0, 0, 0, 0,
	0, 0, 0, 778, 795, 837, 762, 396, 824, 833,
	847, 755, 322, 240, 0, 0, 0, 0, 560, 561,
	0, 0, 0, 0, 663, 0, 562, 0, 707, 558,
	591, 592, 593, 594, 595, 596, 597, 598, 599, 600,
	601, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	611, 612, 613, 614, 615, 616, 617, 618, 619, 620,
	621, 622, 623, 624, 625, 626, 627, 628, 629, 630,
	631, 632, 564, 0, 0, 0, 712, 690, 731, 839,
	691, 689, 288, 704, 636, 868, 763, 256, 164, 874,
	761, 661, 827, 708, 856, 749, 264, 706, 165, 703,
	709, 747, 299, 836, 842, 645, 168, 266, 853, 727,
	740, 209, 0, 334, 814, 395, 552, 236, 800, 333,
	268, 388, 828, 876, 394, 750, 371, 402, 406, 232,
	783, 200, 356, 223, 218, 732, 846, 696, 241, 321,
	213, 260, 766, 820, 728, 205, 831, 807, 858, 355,
	385, 170, 284, 386, 405, 188, 378, 285, 292, 202,
	204, 203, 182, 349, 384, 194, 207, 854, 841, 860,
	723, 710, 715, 711, 739, 877, 250, 242, 861, 859,
	741, 308, 191, 793, 786, 779, 399, 154, 344, 343,
	753, 249, 844, 155, 146, 329, 156, 257, 173, 864,
	408, 187, 262, 379, 551, 235, 298, 211, 816, 309,
	738, 167, 325, 280, 282, 279, 283, 239, 150, 157,
	840, 327, 346, 383, 189, 362, 148, 149, 151, 159,
	337, 160, 161, 883, 274, 227, 231, 243, 254, 815,
	332, 363, 400, 809, 184, 336, 364, 375, 365, 368,
	366, 367, 176, 370, 393, 195, 345, 348, 407, 838,
	183, 178, 872, 855, 802, 768, 774, 698, 0, 177,
	834, 730, 742, 722, 810, 721, 238, 826, 391, 392,
	210, 409, 639, 887, 179, 705, 886, 295, 303, 294,
	889, 387, 873, 803, 792, 790, 699, 871, 801, 791,
	263, 230, 245, 319, 270, 320, 246, 290, 289, 291,
	272, 794, 0, 174, 0, 360, 881, 898, 369, 192,
	716, 848, 382, 153, 326, 193, 237, 228, 318, 293,
	185, 248, 358, 261, 269, 830, 895, 307, 335, 199,
	397, 357, 224, 650, 300, 662, 656, 658, 657, 654,
	655, 653, 652, 651, 664, 637, 638, 641, 642, 643,
	785, 875, 700, 646, 851, 659, 660, 823, 893, 635,
	206, 584, 676, 677, 678, 585, 679, 680, 586, 587,
	681, 682, 683, 684, 588, 685, 686, 687, 665, 666,
	667, 668, 669, 670, 671, 672, 675, 673, 674, 0,
	781, 315, 175, 186, 198, 217, 215, 229, 258, 281,
	286, 313, 347, 352, 372, 373, 374, 376, 219, 0,
	222, 197, 330, 196, 271, 251, 314, 380, 381, 323,
	212, 644, 169, 180, 265, 894, 328, 234, 688, 695,
	714, 717, 718, 719, 720, 724, 729, 735, 743, 744,
	752, 757, 758, 759, 760, 767, 769, 770, 771, 772,
	773, 776, 777, 787, 798, 799, 805, 806, 0, 829,
	832, 649, 843, 845, 849, 850, 857, 862, 863, 888,
	892, 897, 398, 216, 784, 804, 835, 181, 190, 201,
	214, 226, 233, 244, 247, 252, 253, 255, 259, 273,
	275, 276, 277, 278, 296, 297, 301, 302, 305, 306,
	310, 311, 312, 316, 317, 324, 158, 331, 338, 339,
	340, 341, 342, 350, 351, 353, 354, 361, 389, 390,
	403, 404, 867, 764, 166, 0, 0, 172, 0, 0,
	0, 0, 0, 751, 171, 866, 890, 811, 825, 878,
	0, 377, 640, 882, 725, 748, 891, 754, 756, 819,
	701, 796, 304, 745, 702, 0, 0, 693, 549, 694,
	726, 221, 548, 852, 797, 880, 782, 812, 822, 220,
	208, 789, 788, 869, 737, 736, 817, 865, 879, 0,
	0, 648, 267, 0, 0, 401, 359, 287, 0, 0,
	780, 0, 633, 634, 765, 821, 713, 808, 884, 746,
	813, 885, 86, 0, 0, 0, 0, 464, 572, 571,
	574, 575, 576, 577, 0, 0, 147, 573, 578, 579,
	580, 0, 775, 818, 896, 692, 546, 563, 697, 647,
	0, 870, 733, 734, 225, 0, 0, 0, 0, 0,
	0, 0, 778, 795, 837, 762, 396, 824, 833, 847,
	755, 322, 240, 0, 0, 0, 0, 560, 561, 1971,
	0, 0, 0, 663, 0, 562, 0, 707, 558, 591,
	592, 593, 594, 595, 596, 597, 598, 599, 600, 601,
	602, 603, 604, 605, 606, 607, 608, 609, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 626, 627, 628, 629, 630, 631,
	632, 564, 0, 0, 0, 712, 690, 731, 839, 691,
	689, 288, 704, 636, 868, 763, 256, 164, 874, 761,
	661, 827, 708, 856, 749, 264, 706, 165, 703, 709,
	747, 299, 836, 842, 645, 168, 266, 853, 727, 740,
	209, 0, 334, 814, 395, 552, 236, 800, 333, 268,
	388, 828, 876, 394, 750, 371, 402, 406, 232, 783,
	200, 356, 223, 218, 732, 846, 696, 241, 321, 213,
	260, 766, 820, 728, 205, 831, 807, 858, 355, 385,
	170, 284, 386, 405, 188, 378, 285, 292, 202, 204,
	203, 182, 349, 384, 194, 207, 854, 841, 860, 723,
	710, 715, 711, 739, 877, 250, 242, 861, 859, 741,
	308, 191, 793, 786, 779, 399, 154, 344, 343, 753,
	249, 844, 155, 146, 329, 156, 257, 173, 864, 408,
	187, 262, 379, 551, 235, 298, 211, 816, 309, 738,
	167, 325, 280, 282, 279, 283, 239, 150, 157, 840,
	327, 346, 383, 189, 362, 148, 149, 151, 159, 337,
	160, 161, 883, 274, 227, 231, 243, 254, 815, 332,
	363, 400, 809, 184, 336, 364, 375, 365, 368, 366,
	367, 176, 370, 393, 195, 345, 348, 407, 838, 183,
	178, 872, 855, 802, 768, 774, 698, 0, 177, 834,
	730, 742, 722, 810, 721, 238, 826, 391, 392, 210,
	409, 639, 887, 179, 705, 886, 295, 303, 294, 889,
	387, 873, 803, 792, 790, 699, 871, 801, 791, 263,
	230, 245, 319, 270, 320, 246, 290, 289, 291, 272,
	794, 0, 174, 0, 360, 881, 898, 369, 192, 716,
	848, 382, 153, 326, 193, 237, 228, 318, 293, 185,
	248, 358, 261, 269, 830, 895, 307, 335, 199, 397,
	357, 224, 650, 300, 662, 656, 658, 657, 654, 655,
	653, 652, 651, 664, 637, 638, 641, 642, 643, 785,
	875, 700, 646, 851, 659, 660, 823, 893, 635, 206,
	584, 676, 677, 678, 585, 679, 680, 586, 587, 681,
	682, 683, 684, 588, 685, 686, 687, 665, 666, 667,
	668, 669, 670, 671, 672, 675, 673, 674, 0, 781,
	315, 175, 186, 198, 217, 215, 229, 258, 281, 286,
	313, 347, 352, 372, 373, 374, 376, 219, 0, 222,
	197, 330, 196, 271, 251, 314, 380, 381, 323, 212,
	644, 169, 180, 265, 894, 328, 234, 688, 695, 714,
	717, 718, 719, 720, 724, 729, 735, 743, 744, 752,
	757, 758, 759, 760, 767, 769, 770, 771, 772, 773,
	776, 777, 787, 798, 799, 805, 806, 0, 829, 832,
	649, 843, 845, 849, 850, 857, 862, 863, 888, 892,
	897, 398, 216, 784, 804, 835, 181, 190, 201, 214,
	226, 233, 244, 247, 252, 253, 255, 259, 273, 275,
	276, 277, 278, 296, 297, 301, 302, 305, 306, 310,
	311, 312, 316, 317, 324, 158, 331, 338, 339, 340,
	341, 342, 350, 351, 353, 354, 361, 389, 390, 403,
	404, 867, 764, 166, 0, 0, 172, 0, 0, 0,
	0, 0, 751, 171, 866, 890, 811, 825, 878, 0,
	377, 640, 882, 725, 748, 891, 754, 756, 819, 701,
	796, 304, 745, 702, 0, 0, 693, 549, 694, 726,
	221, 548, 852, 797, 880, 782, 812, 822, 220, 208,
	789, 788, 869, 737, 736, 817, 865, 879, 0, 0,
	648, 267, 0, 0, 401, 359, 287, 0, 0, 780,
	0, 633, 634, 765, 821, 713, 808, 884, 746, 2085,
	885, 86, 0, 0, 0, 0, 464, 572, 571, 574,
	575, 576, 577, 0, 0, 147, 573, 578, 579, 580,
	2086, 775, 818, 896, 692, 546, 563, 697, 647, 0,
	870, 733, 734, 225, 0, 0, 0, 0, 0, 0,
	0, 778, 795, 837, 762, 396, 824, 833, 847, 755,
	322, 240, 0, 0, 0, 0, 560, 561, 0, 0,
	0, 0, 663, 0, 562, 0, 707, 558, 591, 592,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 611, 612,
	613, 614, 615, 616, 617, 618, 619, 620, 621, 622,
	623, 624, 625, 626, 627, 628, 629, 630, 631, 632,
	564, 0, 0, 0, 712, 690, 731, 839, 691, 689,
	288, 704, 636, 868, 763, 256, 164, 874, 761, 661,
	827, 708, 856, 749, 264, 706, 165, 703, 709, 747,
	299, 836, 842, 645, 168, 266, 853, 727, 740, 209,
	0, 334, 814, 395, 552, 236, 800, 333, 268, 388,
	828, 876, 394, 750, 371, 402, 406, 232, 783, 200,
	356, 223, 218, 732, 846, 696, 241, 321, 213, 260,
	766, 820, 728, 205, 831, 807, 858, 355, 385, 170,
	284, 386, 405, 188, 378, 285, 292, 202, 204, 203,
	182, 349, 384, 194, 207, 854, 841, 860, 723, 710,
	715, 711, 739, 877, 250, 242, 861, 859, 741, 308,
	191, 793, 786, 779, 399, 154, 344, 343, 753, 249,
	844, 155, 146, 329, 156, 257, 173, 864, 408, 187,
	262, 379, 551, 235, 298, 211, 816, 309, 738, 167,
	325, 280, 282, 279, 283, 239, 150, 157, 840, 327,
	346, 383, 189, 362, 148, 149, 151, 159, 337, 160,
	161, 883, 274, 227, 231, 243, 254, 815, 332, 363,
	400, 809, 184, 336, 364, 375, 365, 368, 366, 367,
	176, 370, 393, 195, 345, 348, 407, 838, 183, 178,
	872, 855, 802, 768, 774, 698, 0, 177, 834, 730,
	742, 722, 810, 721, 238, 826, 391, 392, 210, 409,
	639, 887, 179, 705, 886, 295, 303, 294, 889, 387,
	873, 803, 792, 790, 699, 871, 801, 791, 263, 230,
	245, 319, 270, 320, 246, 290, 289, 291, 272, 794,
	0, 174, 0, 360, 881, 898, 369, 192, 716, 848,
	382, 153, 326, 193, 237, 228, 318, 293, 185, 248,
	358, 261, 269, 830, 895, 307, 335, 199, 397, 357,
	224, 650, 300, 662, 656, 658, 657, 654, 655, 653,
	652, 651, 664, 637, 638, 641, 642, 643, 785, 875,
	700, 646, 851, 659, 660, 823, 893, 635, 206, 584,
	676, 677, 678, 585, 679, 680, 586, 587, 681, 682,
	683, 684, 588, 685, 686, 687, 665, 666, 667, 668,
	669, 670, 671, 672, 675, 673, 674, 0, 781, 315,
	175, 186, 198, 217, 215, 229, 258, 281, 286, 313,
	347, 352, 372, 373, 374, 376, 219, 0, 222, 197,
	330, 196, 271, 251, 314, 380, 381, 323, 212, 644,
	169, 180, 265, 894, 328, 234, 688, 695, 714, 717,
	718, 719, 720, 724, 729, 735, 743, 744, 752, 757,
	758, 759, 760, 767, 769, 770, 771, 772, 773, 776,
	777, 787, 798, 799, 805, 806, 0, 829, 832, 649,
	843, 845, 849, 850, 857, 862, 863, 888, 892, 897,
	398, 216, 784, 804, 835, 181, 190, 201, 214, 226,
	233, 244, 247, 252, 253, 255, 259, 273, 275, 276,
	277, 278, 296, 297, 301, 302, 305, 306, 310, 311,
	312, 316, 317, 324, 158, 331, 338, 339, 340, 341,
	342, 350, 351, 353, 354, 361, 389, 390, 403, 404,
	867, 764, 166, 0, 0, 172, 0, 0, 0, 0,
	0, 751, 171, 866, 890, 811, 825, 878, 0, 377,
	640, 882, 725, 748, 891, 754, 756, 819, 701, 796,
	304, 745, 702, 0, 0, 693, 938, 694, 726, 221,
	936, 852, 797, 880, 782, 812, 822, 220, 208, 789,
	788, 869, 737, 736, 817, 865, 879, 0, 0, 648,
	267, 0, 0, 401, 359, 287, 0, 0, 780, 0,
	633, 634, 765, 821, 713, 808, 884, 746, 813, 885,
	86, 0, 1211, 0, 0, 464, 572, 571, 574, 575,
	576, 577, 0, 0, 147, 573, 578, 579, 580, 0,
	775, 818, 896, 692, 955, 563, 697, 647, 0, 870,
	733, 734, 225, 0, 0, 0, 0, 0, 0, 0,
	778, 795, 837, 762, 396, 824, 833, 847, 755, 322,
	240, 0, 0, 0, 0, 560, 561, 0, 0, 0,
	0, 663, 0, 562, 0, 707, 558, 591, 592, 593,
	594, 595, 596, 597, 598, 599, 600, 601, 602, 603,
	604, 605, 606, 607, 608, 609, 610, 611, 612, 613,
	614, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 626, 627, 628, 629, 630, 631, 632, 564,
	0, 0, 0, 712, 690, 731, 839, 691, 689, 288,
	704, 636, 868, 763, 256, 164, 874, 761, 661, 827,
	708, 856, 749, 264, 706, 165, 703, 709, 747, 299,
	836, 842, 645, 168, 266, 853, 727, 740, 209, 0,
	334, 814, 395, 552, 236, 800, 333, 268, 388, 828,
	876, 394, 750, 371, 402, 406, 232, 783, 200, 356,
	223, 218, 732, 846, 696, 241, 321, 213, 260, 766,
	820, 728, 205, 831, 807, 858, 355, 385, 170, 284,
	386, 405, 188, 378, 285, 292, 202, 204, 203, 182,
	349, 384, 194, 207, 854, 841, 860, 723, 710, 715,
	711, 739, 877, 250, 242, 861, 859, 741, 308, 191,
	793, 786, 779, 399, 154, 344, 343, 753, 249, 844,
	155, 146, 329, 156, 257, 173, 864, 408, 187, 262,
	379, 551, 235, 298, 211, 816, 309, 738, 167, 325,
	280, 282, 279, 283, 239, 150, 157, 840, 327, 346,
	383, 189, 362, 148, 149, 151, 159, 337, 160, 161,
	883, 274, 227, 231, 243, 254, 815, 332, 363, 400,
	809, 184, 336, 364, 375, 365, 368, 366, 367, 176,
	370, 393, 195, 345, 348, 407, 838, 183, 178, 872,
	855, 802, 768, 774, 698, 0, 177, 834, 730, 742,
	722, 810, 721, 238, 826, 391, 392, 210, 409, 639,
	887, 179, 705, 886, 295, 303, 294, 889, 387, 873,
	803, 792, 790, 699, 871, 801, 791, 263, 230, 245,
	319, 270, 320, 246, 290, 289, 291, 272, 794, 0,
	174, 0, 360, 881, 898, 369, 192, 716, 848, 382,
	153, 326, 193, 237, 228, 318, 293, 185, 248, 358,
	261, 269, 830, 895, 307, 335, 199, 397, 357, 224,
	650, 300, 662, 656, 658, 657, 654, 655, 653, 652,
	651, 664, 637, 638, 641, 642, 643, 785, 875, 700,
	646, 851, 659, 660, 823, 893, 635, 206, 584, 676,
	677, 678, 585, 679, 680, 586, 587, 681, 682, 683,
	684, 588, 685, 686, 687, 665, 666, 667, 668, 669,
	670, 671, 672, 675, 673, 674, 0, 781, 315, 175,
	186, 198, 217, 215, 229, 258, 281, 286, 313, 347,
	352, 372, 373, 374, 376, 219, 0, 222, 197, 330,
	196, 271, 251, 314, 380, 381, 323, 212, 644, 169,
	180, 265, 894, 328, 234, 688, 695, 714, 717, 718,
	719, 720, 724, 729, 735, 743, 744, 752, 757, 758,
	759, 760, 767, 769, 770, 771, 772, 773, 776, 777,
	787, 798, 799, 805, 806, 0, 829, 832, 649, 843,
	845, 849, 850, 857, 862, 863, 888, 892, 897, 398,
	216, 784, 804, 835, 181, 190, 201, 214, 226, 233,
	244, 247, 252, 253, 255, 259, 273, 275, 276, 277,
	278, 296, 297, 301, 302, 305, 306, 310, 311, 312,
	316, 317, 324, 158, 331, 338, 339, 340, 341, 342,
	350, 351, 353, 354, 361, 389, 390, 403, 404, 867,
	764, 166, 0, 0, 172, 0, 0, 0, 0, 0,
	751, 171, 866, 890, 811, 825, 878, 0, 377, 640,
	882, 725, 748, 891, 754, 756, 819, 701, 796, 304,
	745, 702, 0, 0, 693, 549, 694, 726, 221, 548,
	852, 797, 880, 782, 812, 822, 220, 208, 789, 788,
	869, 737, 736, 817, 865, 879, 0, 0, 648, 267,
	0, 0, 401, 359, 287, 0, 0, 780, 0, 633,
	634, 765, 821, 713, 808, 884, 746, 813, 885, 86,
	0, 0, 0, 0, 464, 572, 2005, 574, 575, 576,
	577, 0, 0, 147, 573, 578, 579, 580, 0, 775,
	818, 896, 692, 546, 563, 697, 647, 0, 870, 733,
	734, 225, 0, 0, 0, 0, 0, 0, 0, 778,
	795, 837, 762, 396, 824, 833, 847, 755, 322, 240,
	0, 0, 0, 0, 560, 561, 1971, 0, 0, 0,
	663, 0, 562, 0, 707, 558, 591, 592, 593, 594,
	595, 596, 597, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 620, 621, 622, 623, 624,
	625, 626, 627, 628, 629, 630, 631, 632, 564, 0,
	0, 0, 712, 690, 731, 839, 691, 689, 288, 704,
	636, 868, 763, 256, 164, 874, 761, 661, 827, 708,
	856, 749, 264, 706, 165, 703, 709, 747, 299, 836,
	842, 645, 168, 266, 853, 727, 740, 209, 0, 334,
	814, 395, 552, 236, 800, 333, 268, 388, 828, 876,
	394, 750, 371, 402, 406, 232, 783, 200, 356, 223,
	218, 732, 846, 696, 241, 321, 213, 260, 766, 820,
	728, 205, 831, 807, 858, 355, 385, 170, 284, 386,
	405, 188, 378, 285, 292, 202, 204, 203, 182, 349,
	384, 194, 207, 854, 841, 860, 723, 710, 715, 711,
	739, 877, 250, 242, 861, 859, 741, 308, 191, 793,
	786, 779, 399, 154, 344, 343, 753, 249, 844, 155,
	146, 329, 156, 257, 173, 864, 408, 187, 262, 379,
	551, 235, 298, 211, 816, 309, 738, 167, 325, 280,
	282, 279, 283, 239, 150, 157, 840, 327, 346, 383,
	189, 362, 148, 149, 151, 159, 337, 160, 161, 883,
	274, 227, 231, 243, 254, 815, 332, 363, 400, 809,
	184, 336, 364, 375, 365, 368, 366, 367, 176, 370,
	393, 195, 345, 348, 407, 838, 183, 178, 872, 855,
	802, 768, 774, 698, 0, 177, 834, 730, 742, 722,
	810, 721, 238, 826, 391, 392, 210, 409, 639, 887,
	179, 705, 886, 295, 303, 294, 889, 387, 873, 803,
	792, 790, 699, 871, 801, 791, 263, 230, 245, 319,
	270, 320, 246, 290, 289, 291, 272, 794, 0, 174,
	0, 360, 881, 898, 369, 192, 716, 848, 382, 153,
	326, 193, 237, 228, 318, 293, 185, 248, 358, 261,
	269, 830, 895, 307, 335, 199, 397, 357, 224, 650,
	300, 662, 656, 658, 657, 654, 655, 653, 652, 651,
	664, 637, 638, 641, 642, 643, 785, 875, 700, 646,
	851, 659, 660, 823, 893, 635, 206, 584, 676, 677,
	678, 585, 679, 680, 586, 587, 681, 682, 683, 684,
	588, 685, 686, 687, 665, 666, 667, 668, 669, 670,
	671, 672, 675, 673, 674, 0, 781, 315, 175, 186,
	198, 217, 215, 229, 258, 281, 286, 313, 347, 352,
	372, 373, 374, 376, 219, 0, 222, 197, 330, 196,
	271, 251, 314, 380, 381, 323, 212, 644, 169, 180,
	265, 894, 328, 234, 688, 695, 714, 717, 718, 719,
	720, 724, 729, 735, 743, 744, 752, 757, 758, 759,
	760, 767, 769, 770, 771, 772, 773, 776, 777, 787,
	798, 799, 805, 806, 0, 829, 832, 649, 843, 845,
	849, 850, 857, 862, 863, 888, 892, 897, 398, 216,
	784, 804, 835, 181, 190, 201, 214, 226, 233, 244,
	247, 252, 253, 255, 259, 273, 275, 276, 277, 278,
	296, 297, 301, 302, 305, 306, 310, 311, 312, 316,
	317, 324, 158, 331, 338, 339, 340, 341, 342, 350,
	351, 353, 354, 361, 389, 390, 403, 404, 867, 764,
	166, 0, 0, 172, 0, 0, 0, 0, 0, 751,
	171, 866, 890, 811, 825, 878, 0, 377, 640, 882,
	725, 748, 891, 754, 756, 819, 701, 796, 304, 745,
	702, 0, 0, 693, 549, 694, 726, 221, 548, 852,
	797, 880, 782, 812, 822, 220, 208, 789, 788, 869,
	737, 736, 817, 865, 879, 0, 0, 648, 267, 0,
	0, 401, 359, 287, 0, 0, 780, 0, 633, 634,
	765, 821, 713, 808, 884, 746, 813, 885, 86, 0,
	0, 0, 0, 464, 572, 2002, 574, 575, 576, 577,
	0, 0, 147, 573, 578, 579, 580, 0, 775, 818,
	896, 692, 546, 563, 697, 647, 0, 870, 733, 734,
	225, 0, 0, 0, 0, 0, 0, 0, 778, 795,
	837, 762, 396, 824, 833, 847, 755, 322, 240, 0,
	0, 0, 0, 560, 561, 1971, 0, 0, 0, 663,
	0, 562, 0, 707, 558, 591, 592, 593, 594, 595,
	596, 597, 598, 599, 600, 601, 602, 603, 604, 605,
	606, 607, 608, 609, 610, 611, 612, 613, 614, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	626, 627, 628, 629, 630, 631, 632, 564, 0, 0,
	0, 712, 690, 731, 839, 691, 689, 288, 704, 636,
	868, 763, 256, 164, 874, 761, 661, 827, 708, 856,
	749, 264, 706, 165, 703, 709, 747, 299, 836, 842,
	645, 168, 266, 853, 727, 740, 209, 0, 334, 814,
	395, 552, 236, 800, 333, 268, 388, 828, 876, 394,
	750, 371, 402, 406, 232, 783, 200, 356, 223, 218,
	732, 846, 696, 241, 321, 213, 260, 766, 820, 728,
	205, 831, 807, 858, 355, 385, 170, 284, 386, 405,
	188, 378, 285, 292, 202, 204, 203, 182, 349, 384,
	194, 207, 854, 841, 860, 723, 710, 715, 711, 739,
	877, 250, 242, 861, 859, 741, 308, 191, 793, 786,
	779, 399, 154, 344, 343, 753, 249, 844, 155, 146,
	329, 156, 257, 173, 864, 408, 187, 262, 379, 551,
	235, 298, 211, 816, 309, 738, 167, 325, 280, 282,
	279, 283, 239, 150, 157, 840, 327, 346, 383, 189,
	362, 148, 149, 151, 159, 337, 160, 161, 883, 274,
	227, 231, 243, 254, 815, 332, 363, 400, 809, 184,
	336, 364, 375, 365, 368, 366, 367, 176, 370, 393,
	195, 345, 348, 407, 838, 183, 178, 872, 855, 802,
	768, 774, 698, 0, 177, 834, 730, 742, 722, 810,
	721, 238, 826, 391, 392, 210, 409, 639, 887, 179,
	705, 886, 295, 303, 294, 889, 387, 873, 803, 792,
	790, 699, 871, 801, 791, 263, 230, 245, 319, 270,
	320, 246, 290, 289, 291, 272, 794, 0, 174, 0,
	360, 881, 898, 369, 192, 716, 848, 382, 153, 326,
	193, 237, 228, 318, 293, 185, 248, 358, 261, 269,
	830, 895, 307, 335, 199, 397, 357, 224, 650, 300,
	662, 656, 658, 657, 654, 655, 653, 652, 651, 664,
	637, 638, 641, 642, 643, 785, 875, 700, 646, 851,
	659, 660, 823, 893, 635, 206, 584, 676, 677, 678,
	585, 679, 680, 586, 587, 681, 682, 683, 684, 588,
	685, 686, 687, 665, 666, 667, 668, 669, 670, 671,
	672, 675, 673, 674, 0, 781, 315, 175, 186, 198,
	217, 215, 229, 258, 281, 286, 313, 347, 352, 372,
	373, 374, 376, 219, 0, 222, 197, 330, 196, 271,
	251, 314, 380, 381, 323, 212, 644, 169, 180, 265,
	894, 328, 234, 688, 695, 714, 717, 718, 719, 720,
	724, 729, 735, 743, 744, 752, 757, 758, 759, 760,
	767, 769, 770, 771, 772, 773, 776, 777, 787, 798,
	799, 805, 806, 0, 829, 832, 649, 843, 845, 849,
	850, 857, 862, 863, 888, 892, 897, 398, 216, 784,
	804, 835, 181, 190, 201, 214, 226, 233, 244, 247,
	252, 253, 255, 259, 273, 275, 276, 277, 278, 296,
	297, 301, 302, 305, 306, 310, 311, 312, 316, 317,
	324, 158, 331, 338, 339, 340, 341, 342, 350, 351,
	353, 354, 361, 389, 390, 403, 404, 867, 764, 166,
	0, 0, 172, 0, 0, 0, 0, 0, 751, 171,
	866, 890, 811, 825, 878, 40, 377, 640, 882, 725,
	748, 891, 754, 756, 819, 701, 796, 304, 745, 702,
	0, 0, 693, 549, 694, 726, 221, 548, 852, 797,
	880, 782, 812, 822, 220, 208, 789, 788, 869, 737,
	736, 817, 865, 879, 0, 0, 648, 267, 0, 0,
	401, 359, 287, 0, 0, 780, 0, 633, 634, 765,
	821, 713, 808, 884, 746, 813, 885, 86, 0, 0,
	0, 0, 464, 572, 571, 574, 575, 576, 577, 0,
	0, 147, 573, 578, 579, 580, 0, 775, 818, 896,
	692, 546, 563, 697, 647, 0, 870, 733, 734, 225,
	0, 0, 0, 0, 0, 0, 0, 778, 795, 837,
	762, 396, 824, 833, 847, 755, 322, 240, 0, 0,
	0, 0, 560, 561, 0, 0, 0, 0, 663, 0,
	562, 0, 707, 558, 591, 592, 593, 594, 595, 596,
	597, 598, 599, 600, 601, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 611, 612, 613, 614, 615, 616,
	617, 618, 619, 620, 621, 622, 623, 624, 625, 626,
	627, 628, 629, 630, 631, 632, 564, 0, 0, 0,
	712, 690, 731, 839, 691, 689, 288, 704, 636, 868,
	763, 256, 164, 874, 761, 661, 827, 708, 856, 749,
	264, 706, 165, 703, 709, 747, 299, 836, 842, 645,
	168, 266, 853, 727, 740, 209, 0, 334, 814, 395,
	552, 236, 800, 333, 268, 388, 828, 876, 394, 750,
	371, 402, 406, 232, 783, 200, 356, 223, 218, 732,
	846, 696, 241, 321, 213, 260, 766, 820, 728, 205,
	831, 807, 858, 355, 385, 170, 284, 386, 405, 188,
	378, 285, 292, 202, 204, 203, 182, 349, 384, 194,
	207, 854, 841, 860, 723, 710, 715, 711, 739, 877,
	250, 242, 861, 859, 741, 308, 191, 793, 786, 779,
	399, 154, 344, 343, 753, 249, 844, 155, 146, 329,
	156, 257, 173, 864, 408, 187, 262, 379, 551, 235,
	298, 211, 816, 309, 738, 167, 325, 280, 282, 279,
	283, 239, 150, 157, 840, 327, 346, 383, 189, 362,
	148, 149, 151, 159, 337, 160, 161, 883, 274, 227,
	231, 243, 254, 815, 332, 363, 400, 809, 184, 336,
	364, 375, 365, 368, 366, 367, 176, 370, 393, 195,
	345, 348, 407, 838, 183, 178, 872, 855, 802, 768,
	774, 698, 0, 177, 834, 730, 742, 722, 810, 721,
	238, 826, 391, 392, 210, 409, 639, 887, 179, 705,
	886, 295, 303, 294, 889, 387, 873, 803, 792, 790,
	699, 871, 801, 791, 263, 230, 245, 319, 270, 320,
	246, 290, 289, 291, 272, 794, 0, 174, 0, 360,
	881, 898, 369, 192, 716, 848, 382, 153, 326, 193,
	237, 228, 318, 293, 185, 248, 358, 261, 269, 830,
	895, 307, 335, 199, 397, 357, 224, 650, 300, 662,
	656, 658, 657, 654, 655, 653, 652, 651, 664, 637,
	638, 641, 642, 643, 785, 875, 700, 646, 851, 659,
	660, 823, 893, 635, 206, 584, 676, 677, 678, 585,
	679, 680, 586, 587, 681, 682, 683, 684, 588, 685,
	686, 687, 665, 666, 667, 668, 669, 670, 671, 672,
	675, 673, 674, 0, 781, 315, 175, 186, 198, 217,
	215, 229, 258, 281, 286, 313, 347, 352, 372, 373,
	374, 376, 219, 0, 222, 197, 330, 196, 271, 251,
	314, 380, 381, 323, 212, 644, 169, 180, 265, 1298,
	328, 234, 688, 695, 714, 717, 718, 719, 720, 724,
	729, 735, 743, 744, 752, 757, 758, 759, 760, 767,
	769, 770, 771, 772, 773, 776, 777, 787, 798, 799,
	805, 806, 0, 829, 832, 649, 843, 845, 849, 850,
	857, 862, 863, 888, 892, 897, 398, 216, 784, 804,
	835, 181, 190, 201, 214, 226, 233, 244, 247, 252,
	253, 255, 259, 273, 275, 276, 277, 278, 296, 297,
	301, 302, 305, 306, 310, 311, 312, 316, 317, 324,
	158, 331, 338, 339, 340, 341, 342, 350, 351, 353,
	354, 361, 389, 390, 403, 404, 867, 764, 166, 0,
	0, 172, 0, 0, 0, 0, 0, 751, 171, 866,
	890, 811, 825, 878, 0, 377, 640, 882, 725, 748,
	891, 754, 756, 819, 701, 796, 304, 745, 702, 0,
	0, 693, 549, 694, 726, 221, 548, 852, 797, 880,
	782, 812, 822, 220, 208, 789, 788, 869, 737, 736,
	817, 865, 879, 0, 0, 648, 267, 0, 0, 401,
	359, 287, 0, 0, 780, 0, 633, 634, 765, 821,
	713, 808, 884, 746, 813, 885, 86, 0, 1829, 0,
	0, 464, 572, 571, 574, 575, 576, 577, 0, 0,
	147, 573, 578, 579, 580, 0, 775, 818, 896, 692,
	546, 563, 697, 647, 0, 870, 733, 734, 225, 0,
	0, 0, 0, 0, 0, 0, 778, 795, 837, 762,
	396, 824, 833, 847, 755, 322, 240, 0, 0, 0,
	0, 560, 561, 0, 0, 0, 0, 663, 0, 562,
	0, 707, 558, 591, 592, 593, 594, 595, 596, 597,
	598, 599, 600, 601, 602, 603, 604, 605, 606, 607,
	608, 609, 610, 611, 612, 613, 614, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 626, 627,
	628, 629, 630, 631, 632, 564, 0, 0, 0, 712,
	690, 731, 839, 691, 689, 288, 704, 636, 868, 763,
	256, 164, 874, 761, 661, 827, 708, 856, 749, 264,
	706, 165, 703, 709, 747, 299, 836, 842, 645, 168,
	266, 853, 727, 740, 209, 0, 334, 814, 395, 552,
	236, 800, 333, 268, 388, 828, 876, 394, 750, 371,
	402, 406, 232, 783, 200, 356, 223, 218, 732, 846,
	696, 241, 321, 213, 260, 766, 820, 728, 205, 831,
	807, 858, 355, 385, 170, 284, 386, 405, 188, 378,
	285, 292, 202, 204, 203, 182, 349, 384, 194, 207,
	854, 841, 860, 723, 710, 715, 711, 739, 877, 250,
	242, 861, 859, 741, 308, 191, 793, 786, 779, 399,
	154, 344, 343, 753, 249, 844, 155, 146, 329, 156,
	257, 173, 864, 408, 187, 262, 379, 551, 235, 298,
	211, 816, 309, 738, 167, 325, 280, 282, 279, 283,
	239, 150, 157, 840, 327, 346, 383, 189, 362, 148,
	149, 151, 159, 337, 160, 161, 883, 274, 227, 231,
	243, 254, 815, 332, 363, 400, 809, 184, 336, 364,
	375, 365, 368, 366, 367, 176, 370, 393, 195, 345,
	348, 407, 838, 183, 178, 872, 855, 802, 768, 774,
	698, 0, 177, 834, 730, 742, 722, 810, 721, 238,
	826, 391, 392, 210, 409, 639, 887, 179, 705, 886,
	295, 303, 294, 889, 387, 873, 803, 792, 790, 699,
	871, 801, 791, 263, 230, 245, 319, 270, 320, 246,
	290, 289, 291, 272, 794, 0, 174, 0, 360, 881,
	898, 369, 192, 716, 848, 382, 153, 326, 193, 237,
	228, 318, 293, 185, 248, 358, 261, 269, 830, 895,
	307, 335, 199, 397, 357, 224, 650, 300, 662, 656,
	658, 657, 654, 655, 653, 652, 651, 664, 637, 638,
	641, 642, 643, 785, 875, 700, 646, 851, 659, 660,
	823, 893, 635, 206, 584, 676, 677, 678, 585, 679,
	680, 586, 587, 681, 682, 683, 684, 588, 685, 686,
	687, 665, 666, 667, 668, 669, 670, 671, 672, 675,
	673, 674, 0, 781, 315, 175, 186, 198, 217, 215,
	229, 258, 281, 286, 313, 347, 352, 372, 373, 374,
	376, 219, 0, 222, 197, 330, 196, 271, 251, 314,
	380, 381, 323, 212, 644, 169, 180, 265, 894, 328,
	234, 688, 695, 714, 717, 718, 719, 720, 724, 729,
	735, 743, 744, 752, 757, 758, 759, 760, 767, 769,
	770, 771, 772, 773, 776, 777, 787, 798, 799, 805,
	806, 0, 829, 832, 649, 843, 845, 849, 850, 857,
	862, 863, 888, 892, 897, 398, 216, 784, 804, 835,
	181, 190, 201, 214, 226, 233, 244, 247, 252, 253,
	255, 259, 273, 275, 276, 277, 278, 296, 297, 301,
	302, 305, 306, 310, 311, 312, 316, 317, 324, 158,
	331, 338, 339, 340, 341, 342, 350, 351, 353, 354,
	361, 389, 390, 403, 404, 867, 764, 166, 0, 0,
	172, 0, 0, 0, 0, 0, 751, 171, 866, 890,
	811, 825, 878, 0, 377, 640, 882, 725, 748, 891,
	754, 756, 819, 701, 796, 304, 745, 702, 0, 0,
	693, 938, 694, 726, 221, 936, 852, 797, 880, 782,
	812, 822, 220, 208, 789, 788, 869, 737, 736, 817,
	865, 879, 0, 0, 648, 267, 0, 0, 401, 359,
	287, 0, 0, 780, 0, 633, 634, 765, 821, 713,
	808, 884, 746, 813, 885, 86, 0, 0, 0, 0,
	464, 572, 571, 574, 575, 576, 577, 0, 0, 147,
	573, 578, 579, 580, 0, 775, 818, 896, 692, 955,
	563, 697, 647, 0, 870, 733, 734, 225, 0, 0,
	0, 0, 0, 0, 0, 778, 795, 837, 762, 396,
	824, 833, 847, 755, 322, 240, 0, 0, 0, 0,
	560, 561, 0, 0, 0, 0, 663, 0, 562, 0,
	707, 558, 591, 592, 593, 594, 595, 596, 597, 598,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 611, 612, 613, 614, 615, 616, 617, 618,
	619, 620, 621, 622, 623, 624, 625, 626, 627, 628,
	629, 630, 631, 632, 564, 0, 0, 0, 712, 690,
	731, 839, 691, 689, 288, 704, 636, 868, 763, 256,
	164, 874, 761, 661, 827, 708, 856, 749, 264, 706,
	165, 703, 709, 747, 299, 836, 842, 645, 168, 266,
	853, 727, 740, 209, 0, 334, 814, 395, 552, 236,
	800, 333, 268, 388, 828, 876, 394, 750, 371, 402,
	406, 232, 783, 200, 356, 223, 218, 732, 846, 696,
	241, 321, 213, 260, 766, 820, 728, 205, 831, 807,
	858, 355, 385, 170, 284, 386, 405, 188, 378, 285,
	292, 202, 204, 203, 182, 349, 384, 194, 207, 854,
	841, 860, 723, 710, 715, 711, 739, 877, 250, 242,
	861, 859, 741, 308, 191, 793, 786, 779, 399, 154,
	344, 343, 753, 249, 844, 155, 146, 329, 156, 257,
	173, 864, 408, 187, 262, 379, 551, 235, 298, 211,
	816, 309, 738, 167, 325, 280, 282, 279, 283, 239,
	150, 157, 840, 327, 346, 383, 189, 362, 148, 149,
	151, 159, 337, 160, 161, 883, 274, 227, 231, 243,
	254, 815, 332, 363, 400, 809, 184, 336, 364, 375,
	365, 368, 366, 367, 176, 370, 393, 195, 345, 348,
	407, 838, 183, 178, 872, 855, 802, 768, 774, 698,
	0, 177, 834, 730, 742, 722, 810, 721, 238, 826,
	391, 392, 210, 409, 639, 887, 179, 705, 886, 295,
	303, 294, 889, 387, 873, 803, 792, 790, 699, 871,
	801, 791, 263, 230, 245, 319, 270, 320, 246, 290,
	289, 291, 272, 794, 0, 174, 0, 360, 881, 898,
	369, 192, 716, 848, 382, 153, 326, 193, 237, 228,
	318, 293, 185, 248, 358, 261, 269, 830, 895, 307,
	335, 199, 397, 357, 224, 650, 300, 662, 656, 658,
	657, 654, 655, 653, 652, 651, 664, 637, 638, 641,
	642, 643, 785, 875, 700, 646, 851, 659, 660, 823,
	893, 635, 206, 584, 676, 677, 678, 585, 679, 680,
	586, 587, 681, 682, 683, 684, 588, 685, 686, 687,
	665, 666, 667, 668, 669, 670, 671, 672, 675, 673,
	674, 0, 781, 315, 175, 186, 198, 217, 215, 229,
	258, 281, 286, 313, 347, 352, 372, 373, 374, 376,
	219, 0, 222, 197, 330, 196, 271, 251, 314, 380,
	381, 323, 212, 644, 169, 180, 265, 894, 328, 234,
	688, 695, 714, 717, 718, 719, 720, 724, 729, 735,
	743, 744, 752, 757, 758, 759, 760, 767, 769, 770,
	771, 772, 773, 776, 777, 787, 798, 799, 805, 806,
	0, 829, 832, 649, 843, 845, 849, 850, 857, 862,
	863, 888, 892, 897, 398, 216, 784, 804, 835, 181,
	190, 201, 214, 226, 233, 244, 247, 252, 253, 255,
	259, 273, 275, 276, 277, 278, 296, 297, 301, 302,
	305, 306, 310, 311, 312, 316, 317, 324, 158, 331,
	338, 339, 340, 341, 342, 350, 351, 353, 354, 361,
	389, 390, 403, 404, 867, 764, 166, 0, 0, 172,
	0, 0, 0, 0, 0, 751, 171, 866, 890, 811,
	825, 878, 0, 377, 640, 882, 725, 748, 891, 754,
	756, 819, 701, 796, 304, 745, 702, 0, 0, 693,
	549, 694, 726, 221, 548, 852, 797, 880, 782, 812,
	822, 220, 208, 789, 788, 869, 737, 736, 817, 865,
	879, 0, 0, 648, 267, 0, 0, 401, 359, 287,
	0, 0, 780, 0, 633, 634, 765, 821, 713, 808,
	884, 746, 813, 885, 86, 0, 0, 0, 0, 464,
	572, 571, 574, 575, 576, 577, 0, 0, 147, 573,
	578, 579, 580, 0, 775, 818, 896, 692, 546, 563,
	697, 647, 0, 870, 733, 734, 225, 0, 0, 0,
	0, 0, 0, 0, 778, 795, 837, 762, 396, 824,
	833, 847, 755, 322, 240, 0, 0, 0, 0, 560,
	561, 0, 0, 0, 0, 663, 0, 562, 0, 707,
	558, 591, 592, 593, 594, 595, 596, 597, 598, 599,
	600, 601, 602, 603, 604, 605, 606, 607, 608, 609,
	610, 611, 612, 613, 614, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 626, 627, 628, 629,
	630, 631, 632, 564, 0, 0, 0, 712, 690, 731,
	839, 691, 689, 288, 704, 636, 868, 763, 256, 164,
	874, 761, 661, 827, 708, 856, 749, 264, 706, 165,
	703, 709, 747, 299, 836, 842, 645, 168, 266, 853,
	727, 740, 209, 0, 334, 814, 395, 552, 236, 800,
	333, 268, 388, 828, 876, 394, 750, 371, 402, 406,
	232, 783, 200, 356, 223, 218, 732, 846, 696, 241,
	321, 213, 260, 766, 820, 728, 205, 831, 807, 858,
	355, 385, 170, 284, 386, 405, 188, 378, 285, 292,
	202, 204, 203, 182, 349, 384, 194, 207, 854, 841,
	860, 723, 710, 715, 711, 739, 877, 250, 242, 861,
	859, 741, 308, 191, 793, 786, 779, 399, 154, 344,
	343, 753, 249, 844, 155, 146, 329, 156, 257, 173,
	864, 408, 187, 262, 379, 551, 235, 298, 211, 816,
	309, 738, 167, 325, 280, 282, 279, 283, 239, 150,
	157, 840, 327, 346, 383, 189, 362, 148, 149, 151,
	159, 337, 160, 161, 883, 274, 227, 231, 243, 254,
	815, 332, 363, 400, 809, 184, 336, 364, 375, 365,
	368, 366, 367, 176, 370, 393, 195, 345, 348, 407,
	838, 183, 178, 872, 855, 802, 768, 774, 698, 0,
	177, 834, 730, 742, 722, 810, 721, 238, 826, 391,
	392, 210, 409, 639, 887, 179, 705, 886, 295, 303,
	294, 889, 387, 873, 803, 792, 790, 699, 871, 801,
	791, 263, 230, 245, 319, 270, 320, 246, 290, 289,
	291, 272, 794, 0, 174, 0, 360, 881, 898, 369,
	192, 716, 848, 382, 153, 326, 193, 237, 228, 318,
	293, 185, 248, 358, 261, 269, 830, 895, 307, 335,
	199, 397, 357, 224, 650, 300, 662, 656, 658, 657,
	654, 655, 653, 652, 651, 664, 637, 638, 641, 642,
	643, 785, 875, 700, 646, 851, 659, 660, 823, 893,
	635, 206, 584, 676, 677, 678, 585, 679, 680, 586,
	587, 681, 682, 683, 684, 588, 685, 686, 687, 665,
	666, 667, 668, 669, 670, 671, 672, 675, 673, 674,
	0, 781, 315, 175, 186, 198, 217, 215, 229, 258,
	281, 286, 313, 347, 352, 372, 373, 374, 376, 219,
	0, 222, 197, 330, 196, 271, 251, 314, 380, 381,
	323, 212, 644, 169, 180, 265, 894, 328, 234, 688,
	695, 714, 717, 718, 719, 720, 724, 729, 735, 743,
	744, 752, 757, 758, 759, 760, 767, 769, 770, 771,
	772, 773, 776, 777, 787, 798, 799, 805, 806, 0,
	829, 832, 649, 843, 845, 849, 850, 857, 862, 863,
	888, 892, 897, 398, 216, 784, 804, 835, 181, 190,
	201, 214, 226, 233, 244, 247, 252, 253, 255, 259,
	273, 275, 276, 277, 278, 296, 297, 301, 302, 305,
	306, 310, 311, 312, 316, 317, 324, 158, 331, 338,
	339, 340, 341, 342, 350, 351, 353, 354, 361, 389,
	390, 403, 404, 867, 764, 166, 0, 0, 172, 0,
	0, 0, 0, 0, 751, 171, 866, 890, 811, 825,
	878, 0, 377, 640, 882, 725, 748, 891, 754, 756,
	819, 701, 796, 304, 745, 702, 0, 0, 693, 938,
	694, 726, 221, 936, 852, 797, 880, 782, 812, 822,
	220, 208, 789, 788, 869, 737, 736, 817, 865, 879,
	0, 0, 648, 267, 0, 0, 401, 359, 287, 0,
	0, 780, 0, 633, 634, 765, 821, 713, 808, 884,
	746, 813, 885, 86, 0, 0, 0, 0, 464, 572,
	571, 574, 575, 576, 577, 0, 0, 147, 573, 578,
	579, 580, 0, 775, 818, 896, 692, 955, 563, 697,
	647, 0, 870, 733, 734, 225, 0, 0, 0, 0,
	0, 0, 0, 778, 795, 837, 762, 396, 824, 833,
	847, 755, 322, 240, 0, 0, 0, 0, 560, 561,
	0, 0, 0, 0, 663, 0, 562, 0, 707, 558,
	591, 592, 593, 594, 595, 596, 597, 598, 599, 600,
	601, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	611, 612, 613, 614, 615, 616, 617, 618, 619, 620,
	621, 622, 623, 624, 625, 626, 627, 628, 629, 630,
	631, 632, 564, 0, 0, 0, 712, 690, 731, 839,
	691, 689, 288, 704, 636, 868, 763, 256, 164, 874,
	761, 661, 827, 708, 856, 749, 264, 706, 165, 703,
	709, 747, 299, 836, 842, 645, 168, 266, 853, 727,
	740, 209, 0, 334, 814, 395, 552, 236, 3711, 333,
	268, 388, 828, 876, 394, 750, 371, 402, 406, 232,
	783, 200, 356, 223, 218, 732, 846, 696, 241, 321,
	213, 260, 766, 820, 728, 205, 831, 807, 858, 355,
	385, 170, 284, 386, 405, 188, 378, 285, 292, 202,
	204, 203, 182, 349, 384, 194, 207, 854, 841, 860,
	723, 710, 715, 711, 739, 877, 250, 242, 861, 859,
	741, 308, 191, 793, 786, 779, 399, 154, 344, 343,
	753, 249, 844, 155, 146, 329, 156, 257, 173, 864,
	408, 187, 262, 379, 551, 235, 298, 211, 816, 309,
	738, 167, 325, 280, 282, 279, 283, 239, 150, 157,
	840, 327, 346, 383, 189, 362, 148, 149, 151, 159,
	337, 160, 161, 883, 274, 227, 231, 243, 254, 815,
	332, 363, 400, 809, 184, 336, 364, 375, 365, 368,
	366, 367, 176, 370, 393, 195, 345, 348, 407, 838,
	183, 178, 872, 855, 802, 768, 774, 698, 0, 177,
	834, 730, 742, 722, 810, 721, 238, 826, 391, 392,
	210, 409, 639, 887, 179, 705, 886, 295, 303, 294,
	889, 387, 873, 803, 792, 790, 699, 871, 801, 791,
	263, 230, 245, 319, 270, 320, 246, 290, 289, 291,
	272, 794, 0, 174, 0, 360, 881, 898, 369, 192,
	716, 848, 382, 153, 326, 193, 237, 228, 318, 293,
	185, 248, 358, 261, 269, 830, 895, 307, 335, 199,
	397, 357, 224, 650, 300, 662, 656, 658, 657, 654,
	655, 653, 652, 651, 664, 637, 638, 641, 642, 643,
	785, 875, 700, 646, 851, 659, 660, 823, 893, 635,
	206, 584, 676, 677, 678, 585, 679, 680, 586, 587,
	681, 682, 683, 684, 588, 685, 686, 687, 665, 666,
	667, 668, 669, 670, 671, 672, 675, 673, 674, 0,
	781, 315, 175, 186, 198, 217, 215, 229, 258, 281,
	286, 313, 347, 352, 372, 373, 374, 376, 219, 0,
	222, 197, 330, 196, 271, 251, 314, 380, 381, 323,
	212, 644, 169, 180, 265, 894, 328, 234, 688, 695,
	714, 717, 718, 719, 720, 724, 729, 735, 743, 744,
	752, 757, 758, 759, 760, 767, 769, 770, 771, 772,
	773, 776, 777, 787, 798, 799, 805, 806, 0, 829,
	832, 649, 843, 845, 849, 850, 857, 862, 863, 888,
	892, 897, 398, 216, 784, 804, 835, 181, 190, 201,
	214, 226, 233, 244, 247, 252, 253, 255, 259, 273,
	275, 276, 277, 278, 296, 297, 301, 302, 305, 306,
	310, 311, 312, 316, 317, 324, 158, 331, 338, 339,
	340, 341, 342, 350, 351, 353, 354, 361, 389, 390,
	403, 404, 867, 764, 166, 0, 0, 172, 0, 0,
	0, 0, 0, 751, 171, 866, 890, 811, 825, 878,
	0, 377, 640, 882, 725, 748, 891, 754, 756, 819,
	701, 796, 304, 745, 702, 0, 0, 693, 938, 694,
	726, 221, 936, 852, 797, 880, 782, 812, 822, 220,
	208, 789, 788, 869, 737, 736, 817, 865, 879, 0,
	0, 648, 267, 0, 0, 401, 359, 287, 0, 0,
	780, 0, 633, 634, 765, 821, 713, 808, 884, 746,
	813, 885, 86, 0, 0, 0, 0, 464, 572, 571,
	574, 575, 576, 577, 0, 0, 147, 573, 578, 579,
	580, 0, 775, 818, 896, 692, 955, 563, 697, 647,
	0, 870, 733, 734, 225, 0, 0, 0, 0, 0,
	0, 0, 778, 795, 837, 762, 396, 824, 833, 847,
	755, 322, 240, 0, 0, 0, 0, 560, 561, 0,
	0, 0, 0, 663, 0, 562, 0, 707, 558, 591,
	592, 593, 594, 595, 596, 597, 598, 599, 600, 601,
	602, 603, 604, 605, 606, 607, 608, 609, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 626, 627, 628, 629, 630, 631,
	632, 564, 0, 0, 0, 712, 690, 731, 839, 691,
	689, 288, 704, 636, 868, 763, 256, 164, 874, 761,
	661, 827, 708, 856, 749, 264, 706, 165, 703, 709,
	747, 299, 836, 842, 645, 168, 266, 853, 727, 740,
	209, 0, 334, 814, 395, 552, 236, 800, 333, 268,
	388, 828, 876, 394, 750, 371, 402, 406, 232, 783,
	200, 356, 223, 218, 732, 846, 696, 241, 321, 213,
	260, 766, 820, 728, 205, 831, 807, 858, 355, 385,
	170, 284, 386, 405, 188, 378, 285, 292, 202, 204,
	203, 182, 349, 384, 194, 207, 854, 841, 860, 723,
	710, 715, 711, 739, 877, 250, 242, 861, 859, 741,
	308, 191, 793, 786, 779, 399, 154, 344, 343, 753,
	249, 844, 155, 146, 329, 156, 257, 173, 864, 408,
	187, 262, 379, 551, 235, 298, 211, 816, 309, 738,
	167, 325, 280, 282, 279, 283, 239, 150, 157, 840,
	327, 346, 383, 189, 362, 148, 149, 151, 159, 337,
	160, 161, 883, 274, 227, 231, 243, 254, 815, 332,
	363, 400, 809, 184, 336, 364, 375, 365, 368, 366,
	367, 176, 370, 393, 195, 345, 348, 407, 838, 183,
	178, 872, 855, 802, 768, 774, 698, 0, 177, 834,
	730, 742, 722, 810, 721, 238, 826, 391, 392, 210,
	409, 639, 887, 179, 705, 886, 295, 303, 294, 889,
	387, 873, 803, 792, 790, 699, 871, 801, 791, 263,
	230, 245, 319, 270, 320, 246, 290, 289, 291, 272,
	794, 0, 174, 0, 360, 881, 898, 369, 192, 716,
	848, 382, 153, 326, 193, 237, 228, 318, 293, 185,
	248, 358, 261, 269, 830, 895, 307, 335, 199, 397,
	357, 224, 650, 300, 662, 656, 658, 657, 654, 655,
	653, 652, 651, 664, 637, 638, 641, 642, 643, 2008,
	2009, 2010, 646, 851, 659, 660, 823, 893, 635, 206,
	584, 676, 677, 678, 585, 679, 680, 586, 587, 681,
	682, 683, 684, 588, 685, 686, 687, 665, 666, 667,
	668, 669, 670, 671, 672, 675, 673, 674, 0, 781,
	315, 175, 186, 198, 217, 215, 229, 258, 281, 286,
	313, 347, 352, 372, 373, 374, 376, 219, 0, 222,
	197, 330, 196, 271, 251, 314, 380, 381, 323, 212,
	644, 169, 180, 265, 894, 328, 234, 688, 695, 714,
	717, 718, 719, 720, 724, 729, 735, 743, 744, 752,
	757, 758, 759, 760, 767, 769, 770, 771, 772, 773,
	776, 777, 787, 798, 799, 805, 806, 0, 829, 832,
	649, 843, 845, 849, 850, 857, 862, 863, 888, 892,
	897, 398, 216, 784, 804, 835, 181, 190, 201, 214,
	226, 233, 244, 247, 252, 253, 255, 259, 273, 275,
	276, 277, 278, 296, 297, 301, 302, 305, 306, 310,
	311, 312, 316, 317, 324, 158, 331, 338, 339, 340,
	341, 342, 350, 351, 353, 354, 361, 389, 390, 403,
	404, 867, 764, 166, 0, 0, 172, 0, 0, 0,
	0, 0, 751, 171, 866, 890, 811, 825, 1747, 2945,
	377, 1602, 1751, 1551, 1581, 1768, 1587, 1590, 1671, 1517,
	1640, 304, 1578, 1518, 1501, 1556, 1505, 1569, 1506, 1553,
	221, 1549, 1712, 1643, 1749, 1622, 1664, 1674, 220, 208,
	1632, 1631, 1737, 1567, 1566, 1669, 1726, 1748, 1621, 0,
	1758, 267, 1723, 998, 401, 359, 287, 1001, 1000, 1617,
	1732, 1638, 1701, 1600, 1673, 1533, 1656, 1753, 1579, 1665,
	1754, 86, 0, 1211, 0, 0, 994, 0, 0, 0,
	0, 0, 0, 0, 0, 147, 0, 1661, 1745, 1572,
	999, 1612, 1670, 1773, 1504, 1657, 0, 1509, 1520, 1767,
	1738, 1563, 1564, 225, 0, 0, 0, 0, 0, 0,
	0, 1615, 1639, 1691, 1597, 396, 1676, 1686, 1704, 1589,
	322, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	1558, 0, 1654, 0, 0, 0, 1525, 1511, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1611, 0, 0, 0, 1532, 1502, 1560, 1693, 1503, 1500,
	288, 1521, 1706, 1736, 1598, 256, 164, 1742, 1596, 1595,
	1680, 1526, 1716, 1582, 264, 1524, 165, 1519, 1527, 1580,
	299, 1690, 1698, 152, 168, 266, 1713, 1554, 1571, 209,
	1891, 334, 1666, 395, 997, 236, 1647, 333, 268, 388,
	1681, 1744, 394, 1583, 371, 402, 406, 232, 1623, 200,
	356, 223, 218, 1562, 1703, 1508, 241, 321, 213, 260,
	1601, 1672, 1555, 205, 1684, 1655, 1718, 355, 385, 170,
	284, 386, 405, 188, 378, 285, 292, 202, 204, 203,
	182, 349, 384, 194, 207, 1714, 1697, 1720, 1548, 1528,
	1539, 1529, 1570, 1746, 250, 242, 1721, 1719, 1573, 308,
	191, 1636, 1629, 1616, 399, 154, 344, 343, 1586, 249,
	1700, 155, 146, 329, 156, 257, 173, 1725, 408, 187,
	262, 379, 996, 235, 298, 211, 1668, 309, 1568, 167,
	325, 280, 282, 279, 283, 239, 150, 157, 1696, 327,
	346, 383, 189, 362, 148, 149, 151, 159, 337, 160,
	161, 1752, 274, 227, 231, 243, 254, 1667, 332, 363,
	400, 1658, 184, 336, 364, 375, 365, 368, 366, 367,
	176, 370, 393, 195, 345, 348, 407, 1692, 183, 178,
	1740, 1715, 1649, 1604, 1610, 1510, 0, 177, 1688, 1559,
	1575, 1547, 1662, 1546, 238, 1679, 391, 392, 210, 409,
	1522, 1760, 179, 1523, 1759, 295, 303, 294, 1763, 387,
	1741, 1650, 1635, 1633, 1515, 1739, 1648, 1634, 263, 230,
	245, 319, 270, 320, 246, 290, 289, 291, 272, 1637,
	0, 174, 0, 360, 1750, 1775, 369, 192, 1541, 1707,
	382, 153, 326, 193, 237, 228, 318, 293, 185, 248,
	358, 261, 269, 1683, 1772, 307, 335, 199, 397, 357,
	224, 1537, 300, 1540, 1535, 1538, 1536, 1641, 1642, 1755,
	1756, 1757, 1695, 1530, 0, 1733, 1734, 0, 1628, 1743,
	1516, 0, 1711, 162, 163, 1675, 1770, 1588, 206, 141,
	1512, 1513, 1514, 142, 1618, 1619, 143, 144, 1729, 1728,
	1727, 1730, 145, 1764, 1762, 1765, 1531, 1552, 1574, 1624,
	1625, 1627, 1659, 1660, 1705, 1678, 1687, 1561, 1620, 315,
	175, 186, 198, 217, 215, 229, 258, 281, 286, 313,
	347, 352, 372, 373, 374, 376, 219, 0, 222, 197,
	330, 196, 271, 251, 314, 380, 381, 323, 212, 1646,
	169, 180, 265, 2946, 328, 234, 1499, 1507, 1534, 1542,
	1543, 1544, 1545, 1550, 1557, 1565, 1576, 1577, 1585, 1591,
	1592, 1593, 1594, 1603, 1605, 1606, 1607, 1608, 1609, 1613,
	1614, 1630, 1644, 1645, 1652, 1653, 0, 1682, 1685, 1694,
	1699, 1702, 1708, 1710, 1717, 1722, 1724, 1761, 1769, 1774,
	398, 216, 1626, 1651, 1689, 181, 190, 201, 214, 226,
	233, 244, 247, 252, 253, 255, 259, 273, 275, 276,
	277, 278, 296, 297, 301, 302, 305, 306, 310, 311,
	312, 316, 317, 324, 158, 331, 338, 339, 340, 341,
	342, 350, 351, 353, 354, 361, 389, 390, 403, 404,
	1735, 1599, 166, 0, 0, 172, 0, 0, 0, 0,
	0, 1584, 171, 1731, 1766, 1663, 1677, 1747, 1709, 377,
	1602, 1751, 1551, 1581, 1768, 1587, 1590, 1671, 1517, 1640,
	304, 1578, 1518, 1501, 1556, 1505, 1569, 1506, 1553, 221,
	1549, 1712, 1643, 1749, 1622, 1664, 1674, 220, 208, 1632,
	1631, 1737, 1567, 1566, 1669, 1726, 1748, 1621, 0, 1758,
	267, 1723, 998, 401, 359, 287, 1001, 1000, 1617, 1732,
	1638, 1701, 1600, 1673, 1533, 1656, 1753, 1579, 1665, 1754,
	0, 0, 0, 0, 0, 994, 0, 0, 0, 0,
	0, 0, 0, 0, 147, 0, 1661, 1745, 1572, 999,
	1612, 1670, 1773, 1504, 1657, 0, 1509, 1520, 1767, 1738,
	1563, 1564, 225, 0, 0, 0, 0, 0, 0, 0,
	1615, 1639, 1691, 1597, 396, 1676, 1686, 1704, 1589, 322,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 1558,
	0, 1654, 0, 0, 0, 1525, 1511, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1611,
	0, 0, 0, 1532, 1502, 1560, 1693, 1503, 1500, 288,
	1521, 1706, 1736, 1598, 256, 164, 1742, 1596, 1595, 1680,
	1526, 1716, 1582, 264, 1524, 165, 1519, 1527, 1580, 299,
	1690, 1698, 152, 168, 266, 1713, 1554, 1571, 209, 1891,
	334, 1666, 395, 997, 236, 1647, 333, 268, 388, 1681,
	1744, 394, 1583, 371, 402, 406, 232, 1623, 200, 356,
	223, 218, 1562, 1703, 1508, 241, 321, 213, 260, 1601,
	1672, 1555, 205, 1684, 1655, 1718, 355, 385, 170, 284,
	386, 405, 188, 378, 285, 292, 202, 204, 203, 182,
	349, 384, 194, 207, 1714, 1697, 1720, 1548, 1528, 1539,
	1529, 1570, 1746, 250, 242, 1721, 1719, 1573, 308, 191,
	1636, 1629, 1616, 399, 154, 344, 343, 1586, 249, 1700,
	155, 146, 329, 156, 257, 173, 1725, 408, 187, 262,
	379, 996, 235, 298, 211, 1668, 309, 1568, 167, 325,
	280, 282, 279, 283, 239, 150, 157, 1696, 327, 346,
	383, 189, 362, 148, 149, 151, 159, 337, 160, 161,
	1752, 274, 227, 231, 243, 254, 1667, 332, 363, 400,
	1658, 184, 336, 364, 375, 365, 368, 366, 367, 176,
	370, 393, 195, 345, 348, 407, 1692, 183, 178, 1740,
	1715, 1649, 1604, 1610, 1510, 0, 177, 1688, 1559, 1575,
	1547, 1662, 1546, 238, 1679, 391, 392, 210, 409, 1522,
	1760, 179, 1523, 1759, 295, 303, 294, 1763, 387, 1741,
	1650, 1635, 1633, 1515, 1739, 1648, 1634, 263, 230, 245,
	319, 270, 320, 246, 290, 289, 291, 272, 1637, 0,
	174, 0, 360, 1750, 1775, 369, 192, 1541, 1707, 382,
	153, 326, 193, 237, 228, 318, 293, 185, 248, 358,
	261, 269, 1683, 1772, 307, 335, 199, 397, 357, 224,
	1537, 300, 1540, 1535, 1538, 1536, 1641, 1642, 1755, 1756,
	1757, 1695, 1530, 0, 1733, 1734, 0, 1628, 1743, 1516,
	0, 1711, 162, 163, 1675, 1770, 1588, 206, 141, 1512,
	1513, 1514, 142, 1618, 1619, 143, 144, 1729, 1728, 1727,
	1730, 145, 1764, 1762, 1765, 1531, 1552, 1574, 1624, 1625,
	1627, 1659, 1660, 1705, 1678, 1687, 1561, 1620, 315, 175,
	186, 198, 217, 215, 229, 258, 281, 286, 313, 347,
	352, 372, 373, 374, 376, 219, 0, 222, 197, 330,
	196, 271, 251, 314, 380, 381, 323, 212, 1646, 169,
	180, 265, 1771, 328, 234, 1499, 1507, 1534, 1542, 1543,
	1544, 1545, 1550, 1557, 1565, 1576, 1577, 1585, 1591, 1592,
	1593, 1594, 1603, 1605, 1606, 1607, 1608, 1609, 1613, 1614,
	1630, 1644, 1645, 1652, 1653, 0, 1682, 1685, 1694, 1699,
	1702, 1708, 1710, 1717, 1722, 1724, 1761, 1769, 1774, 398,
	216, 1626, 1651, 1689, 181, 190, 201, 214, 226, 233,
	244, 247, 252, 253, 255, 259, 273, 275, 276, 277,
	278, 296, 297, 301, 302, 305, 306, 310, 311, 312,
	316, 317, 324, 158, 331, 338, 339, 340, 341, 342,
	350, 351, 353, 354, 361, 389, 390, 403, 404, 1735,
	1599, 166, 0, 0, 172, 0, 0, 0, 0, 0,
	1584, 171, 1731, 1766, 1663, 1677, 1747, 1709, 377, 1602,
	1751, 1551, 1581, 1768, 1587, 1590, 1671, 1517, 1640, 304,
	1578, 1518, 1501, 1556, 1505, 1569, 1506, 1553, 221, 1549,
	1712, 1643, 1749, 1622, 1664, 1674, 220, 208, 1632, 1631,
	1737, 1567, 1566, 1669, 1726, 1748, 1621, 0, 1758, 267,
	1723, 0, 401, 359, 287, 0, 0, 1617, 1732, 1638,
	1701, 1600, 1673, 1533, 1656, 1753, 1579, 1665, 1754, 0,
	0, 0, 0, 0, 464, 0, 0, 0, 0, 0,
	0, 0, 0, 147, 0, 1661, 1745, 1572, 0, 1612,
	1670, 1773, 1504, 1657, 0, 1509, 1520, 1767, 1738, 1563,
	1564, 225, 0, 0, 0, 0, 0, 0, 0, 1615,
	1639, 1691, 1597, 396, 1676, 1686, 1704, 1589, 322, 240,
	0, 0, 0, 0, 0, 0, 2610, 0, 1558, 0,
	1654, 0, 0, 0, 1525, 1511, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1611, 0,
	0, 0, 1532, 1502, 1560, 1693, 1503, 1500, 288, 1521,
	1706, 1736, 1598, 256, 164, 1742, 1596, 1595, 1680, 1526,
	1716, 1582, 264, 1524, 165, 1519, 1527, 1580, 299, 1690,
	1698, 152, 168, 266, 1713, 1554, 1571, 209, 0, 334,
	1666, 395, 1938, 236, 1647, 333, 268, 388, 1681, 1744,
	394, 1583, 371, 402, 406, 232, 1623, 200, 356, 223,
	218, 1562, 1703, 1508, 241, 321, 213, 260, 1601, 1672,
	1555, 205, 1684, 1655, 1718, 355, 385, 170, 284, 386,
	405, 188, 378, 285, 292, 202, 204, 203, 182, 349,
	384, 194, 207, 1714, 1697, 1720, 1548, 1528, 1539, 1529,
	1570, 1746, 250, 242, 1721, 1719, 1573, 308, 191, 1636,
	1629, 1616, 399, 154, 344, 343, 1586, 249, 1700, 155,
	146, 329, 156, 257, 173, 1725, 408, 187, 262, 379,
	1937, 235, 298, 211, 1668, 309, 1568, 167, 325, 280,
	282, 279, 283, 239, 150, 157, 1696, 327, 346, 383,
	189, 362, 148, 149, 151, 159, 337, 160, 161, 1752,
	274, 227, 231, 243, 254, 1667, 332, 363, 400, 1658,
	184, 336, 364, 375, 365, 368, 366, 367, 176, 370,
	393, 195, 345, 348, 407, 1692, 183, 178, 1740, 1715,
	1649, 1604, 1610, 1510, 0, 177, 1688, 1559, 1575, 1547,
	1662, 1546, 238, 1679, 391, 392, 210, 409, 1522, 1760,
	179, 1523, 1759, 295, 303, 294, 1763, 387, 1741, 1650,
	1635, 1633, 1515, 1739, 1648, 1634, 263, 230, 245, 319,
	270, 320, 246, 290, 289, 291, 272, 1637, 0, 174,
	0, 360, 1750, 1775, 369, 192, 1541, 1707, 382, 153,
	326, 193, 237, 228, 318, 293, 185, 248, 358, 261,
	269, 1683, 1772, 307, 335, 199, 397, 357, 224, 1537,
	300, 1540, 1535, 1538, 1536, 1641, 1642, 1755, 1756, 1757,
	1695, 1530, 0, 1733, 1734, 0, 1628, 1743, 1516, 0,
	1711, 162, 163, 1675, 1770, 1588, 206, 141, 1512, 1513,
	1514, 142, 1618, 1619, 143, 144, 1729, 1728, 1727, 1730,
	145, 1764, 1762, 1765, 1531, 1552, 1574, 1624, 1625, 1627,
	1659, 1660, 1705, 1678, 1687, 1561, 1620, 315, 175, 186,
	198, 217, 215, 229, 258, 281, 286, 313, 347, 352,
	372, 373, 374, 376, 219, 0, 222, 197, 330, 196,
	271, 251, 314, 380, 381, 323, 212, 1646, 169, 180,
	265, 1771, 328, 234, 1499, 1507, 1534, 1542, 1543, 1544,
	1545, 1550, 1557, 1565, 1576, 1577, 1585, 1591, 1592, 1593,
	1594, 1603, 1605, 1606, 1607, 1608, 1609, 1613, 1614, 1630,
	1644, 1645, 1652, 1653, 0, 1682, 1685, 1694, 1699, 1702,
	1708, 1710, 1717, 1722, 1724, 1761, 1769, 1774, 398, 216,
	1626, 1651, 1689, 181, 190, 201, 214, 226, 233, 244,
	247, 252, 253, 255, 259, 273, 275, 276, 277, 278,
	296, 297, 301, 302, 305, 306, 310, 311, 312, 316,
	317, 324, 158, 331, 338, 339, 340, 341, 342, 350,
	351, 353, 354, 361, 389, 390, 403, 404, 1735, 1599,
	166, 0, 0, 172, 0, 0, 0, 0, 0, 1584,
	171, 1731, 1766, 1663, 1677, 1747, 1709, 377, 1602, 1751,
	1551, 1581, 1768, 1587, 1590, 1671, 1517, 1640, 304, 1578,
	1518, 1501, 1556, 1505, 1569, 1506, 1553, 221, 1549, 1712,
	1643, 1749, 1622, 1664, 1674, 220, 208, 1632, 1631, 1737,
	1567, 1566, 1669, 1726, 1748, 1621, 0, 1758, 267, 1723,
	0, 401, 359, 287, 0, 0, 1617, 1732, 1638, 1701,
	1600, 1673, 1533, 1656, 1753, 1579, 1665, 1754, 0, 0,
	0, 0, 0, 464, 0, 0, 0, 0, 0, 0,
	0, 0, 147, 0, 1661, 1745, 1572, 0, 1612, 1670,
	1773, 1504, 1657, 0, 1509, 1520, 1767, 1738, 1563, 1564,
	225, 0, 0, 0, 0, 0, 0, 0, 1615, 1639,
	1691, 1597, 396, 1676, 1686, 1704, 1589, 322, 240, 0,
	0, 0, 0, 0, 0, 1932, 0, 1558, 0, 1654,
	0, 0, 0, 1525, 1511, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1611, 0, 0,
	0, 1532, 1502, 1560, 1693, 1503, 1500, 288, 1521, 1706,
	1736, 1598, 256, 164, 1742, 1596, 1595, 1680, 1526, 1716,
	1582, 264, 1524, 165, 1519, 1527, 1580, 299, 1690, 1698,
	152, 168, 266, 1713, 1554, 1571, 209, 0, 334, 1666,
	395, 1938, 236, 1647, 333, 268, 388, 1681, 1744, 394,
	1583, 371, 402, 406, 232, 1623, 200, 356, 223, 218,
	1562, 1703, 1508, 241, 321, 213, 260, 1601, 1672, 1555,
	205, 1684, 1655, 1718, 355, 385, 170, 284, 386, 405,
	188, 378, 285, 292, 202, 204, 203, 182, 349, 384,
	194, 207, 1714, 1697, 1720, 1548, 1528, 1539, 1529, 1570,
	1746, 250, 242, 1721, 1719, 1573, 308, 191, 1636, 1629,
	1616, 399, 154, 344, 343, 1586, 249, 1700, 155, 146,
	329, 156, 257, 173, 1725, 408, 187, 262, 379, 1937,
	235, 298, 211, 1668, 309, 1568, 167, 325, 280, 282,
	279, 283, 239, 150, 157, 1696, 327, 346, 383, 189,
	362, 148, 149, 151, 159, 337, 160, 161, 1752, 274,
	227, 231, 243, 254, 1667, 332, 363, 400, 1658, 184,
	336, 364, 375, 365, 368, 366, 367, 176, 370, 393,
	195, 345, 348, 407, 1692, 183, 178, 1740, 1715, 1649,
	1604, 1610, 1510, 0, 177, 1688, 1559, 1575, 1547, 1662,
	1546, 238, 1679, 391, 392, 210, 409, 1522, 1760, 179,
	1523, 1759, 295, 303, 294, 1763, 387, 1741, 1650, 1635,
	1633, 1515, 1739, 1648, 1634, 263, 230, 245, 319, 270,
	320, 246, 290, 289, 291, 272, 1637, 0, 174, 0,
	360, 1750, 1775, 369, 192, 1541, 1707, 382, 153, 326,
	193, 237, 228, 318, 293, 185, 248, 358, 261, 269,
	1683, 1772, 307, 335, 199, 397, 357, 224, 1537, 300,
	1540, 1535, 1538, 1536, 1641, 1642, 1755, 1756, 1757, 1695,
	1530, 0, 1733, 1734, 0, 1628, 1743, 1516, 0, 1711,
	162, 163, 1675, 1770, 1588, 206, 141, 1512, 1513, 1514,
	142, 1618, 1619, 143, 144, 1729, 1728, 1727, 1730, 145,
	1764, 1762, 1765, 1531, 1552, 1574, 1624, 1625, 1627, 1659,
	1660, 1705, 1678, 1687, 1561, 1620, 315, 175, 186, 198,
	217, 215, 229, 258, 281, 286, 313, 347, 352, 372,
	373, 374, 376, 219, 0, 222, 197, 330, 196, 271,
	251, 314, 380, 381, 323, 212, 1646, 169, 180, 265,
	1771, 328, 234, 1499, 1507, 1534, 1542, 1543, 1544, 1545,
	1550, 1557, 1565, 1576, 1577, 1585, 1591, 1592, 1593, 1594,
	1603, 1605, 1606, 1607, 1608, 1609, 1613, 1614, 1630, 1644,
	1645, 1652, 1653, 0, 1682, 1685, 1694, 1699, 1702, 1708,
	1710, 1717, 1722, 1724, 1761, 1769, 1774, 398, 216, 1626,
	1651, 1689, 181, 190, 201, 214, 226, 233, 244, 247,
	252, 253, 255, 259, 273, 275, 276, 277, 278, 296,
	297, 301, 302, 305, 306, 310, 311, 312, 316, 317,
	324, 158, 331, 338, 339, 340, 341, 342, 350, 351,
	353, 354, 361, 389, 390, 403, 404, 1735, 1599, 166,
	0, 0, 172, 0, 0, 0, 0, 0, 1584, 171,
	1731, 1766, 1663, 1677, 1747, 1709, 377, 1602, 1751, 1551,
	1581, 1768, 1587, 1590, 1671, 1517, 1640, 304, 1578, 1518,
	1501, 1556, 1505, 1569, 1506, 1553, 221, 1549, 1712, 1643,
	1749, 1622, 1664, 1674, 220, 208, 1632, 1631, 1737, 1567,
	1566, 1669, 1726, 1748, 1621, 0, 1758, 267, 1723, 0,
	401, 359, 287, 0, 0, 1617, 1732, 1638, 1701, 1600,
	1673, 1533, 1656, 1753, 1579, 1665, 1754, 0, 0, 0,
	0, 0, 464, 0, 0, 0, 0, 0, 0, 0,
	0, 147, 0, 1661, 1745, 1572, 0, 1612, 1670, 1773,
	1504, 1657, 0, 1509, 1520, 1767, 1738, 1563, 1564, 225,
	0, 0, 0, 0, 0, 0, 0, 1615, 1639, 1691,
	1597, 396, 1676, 1686, 1704, 1589, 322, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 1558, 0, 1654, 0,
	0, 0, 1525, 1511, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1611, 0, 0, 0,
	1532, 1502, 1560, 1693, 1503, 1500, 288, 1521, 1706, 1736,
	1598, 256, 164, 1742, 1596, 1595, 1680, 1526, 1716, 1582,
	264, 1524, 165, 1519, 1527, 1580, 299, 1690, 1698, 152,
	168, 266, 1713, 1554, 1571, 209, 0, 334, 1666, 395,
	1938, 236, 1647, 333, 268, 388, 1681, 1744, 394, 1583,
	371, 402, 406, 232, 1623, 200, 356, 223, 218, 1562,
	1703, 1508, 241, 321, 213, 260, 1601, 1672, 1555, 205,
	1684, 1655, 1718, 355, 385, 170, 284, 386, 405, 188,
	378, 285, 292, 202, 204, 203, 182, 349, 384, 194,
	207, 1714, 1697, 1720, 1548, 1528, 1539, 1529, 1570, 1746,
	250, 242, 1721, 1719, 1573, 308, 191, 1636, 1629, 1616,
	399, 154, 344, 343, 1586, 249, 1700, 155, 146, 329,
	156, 257, 173, 1725, 408, 187, 262, 379, 1937, 235,
	298, 211, 1668, 309, 1568, 167, 325, 280, 282, 279,
	283, 239, 150, 157, 1696, 327, 346, 383, 189, 362,
	148, 149, 151, 159, 337, 160, 161, 1752, 274, 227,
	231, 243, 254, 1667, 332, 363, 400, 1658, 184, 336,
	364, 375, 365, 368, 366, 367, 176, 370, 393, 195,
	345, 348, 407, 1692, 183, 178, 1740, 1715, 1649, 1604,
	1610, 1510, 0, 177, 1688, 1559, 1575, 1547, 1662, 1546,
	238, 1679, 391, 392, 210, 409, 1522, 1760, 179, 1523,
	1759, 295, 303, 294, 1763, 387, 1741, 1650, 1635, 1633,
	1515, 1739, 1648, 1634, 263, 230, 245, 319, 270, 320,
	246, 290, 289, 291, 272, 1637, 0, 174, 0, 360,
	1750, 1775, 369, 192, 1541, 1707, 382, 153, 326, 193,
	237, 228, 318, 293, 185, 248, 358, 261, 269, 1683,
	1772, 307, 335, 199, 397, 357, 224, 1537, 300, 1540,
	1535, 1538, 1536, 1641, 1642, 1755, 1756, 1757, 1695, 1530,
	0, 1733, 1734, 0, 1628, 1743, 1516, 0, 1711, 162,
	163, 1675, 1770, 1588, 206, 141, 1512, 1513, 1514, 142,
	1618, 1619, 143, 144, 1729, 1728, 1727, 1730, 145, 1764,
	1762, 1765, 1531, 1552, 1574, 1624, 1625, 1627, 1659, 1660,
	1705, 1678, 1687, 1561, 1620, 315, 175, 186, 198, 217,
	215, 229, 258, 281, 286, 313, 347, 352, 372, 373,
	374, 376, 219, 0, 222, 197, 330, 196, 271, 251,
	314, 380, 381, 323, 212, 1646, 169, 180, 265, 1771,
	328, 234, 1499, 1507, 1534, 1542, 1543, 1544, 1545, 1550,
	1557, 1565, 1576, 1577, 1585, 1591, 1592, 1593, 1594, 1603,
	1605, 1606, 1607, 1608, 1609, 1613, 1614, 1630, 1644, 1645,
	1652, 1653, 0, 1682, 1685, 1694, 1699, 1702, 1708, 1710,
	1717, 1722, 1724, 1761, 1769, 1774, 398, 216, 1626, 1651,
	1689, 181, 190, 201, 214, 226, 233, 244, 247, 252,
	253, 255, 259, 273, 275, 276, 277, 278, 296, 297,
	301, 302, 305, 306, 310, 311, 312, 316, 317, 324,
	158, 331, 338, 339, 340, 341, 342, 350, 351, 353,
	354, 361, 389, 390, 403, 404, 1735, 1599, 166, 0,
	0, 172, 0, 0, 0, 0, 0, 1584, 171, 1731,
	1766, 1663, 1677, 878, 0, 377, 943, 882, 725, 748,
	891, 754, 756, 819, 701, 796, 304, 745, 702, 0,
	0, 693, 938, 694, 726, 221, 936, 852, 797, 880,
	782, 812, 822, 220, 208, 789, 788, 869, 737, 736,
	817, 865, 879, 0, 0, 976, 267, 0, 998, 401,
	359, 287, 1001, 1000, 780, 0, 950, 963, 765, 821,
	713, 808, 884, 746, 813, 885, 0, 0, 0, 0,
	0, 464, 0, 0, 0, 0, 0, 0, 0, 0,
	147, 0, 958, 972, 939, 999, 775, 818, 896, 692,
	955, 0, 697, 927, 0, 870, 733, 734, 225, 0,
	0, 0, 0, 0, 0, 0, 778, 795, 837, 762,
	396, 824, 833, 847, 755, 322, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 954, 0, 0,
	0, 707, 923, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 944, 0, 0, 0, 712,
	690, 731, 839, 691, 689, 288, 704, 965, 868, 763,
	256, 164, 874, 761, 942, 827, 708, 856, 749, 264,
	706, 165, 703, 709, 747, 299, 836, 842, 152, 168,
	266, 853, 727, 740, 209, 2679, 334, 814, 395, 2681,
	236, 800, 333, 268, 388, 828, 876, 394, 750, 371,
	402, 406, 232, 783, 200, 356, 223, 218, 732, 846,
	696, 241, 321, 213, 260, 766, 820, 728, 205, 831,
	807, 858, 355, 385, 170, 284, 386, 405, 188, 378,
	285, 292, 202, 204, 203, 182, 349, 384, 194, 207,
	854, 841, 860, 723, 710, 715, 711, 739, 877, 250,
	242, 861, 859, 741, 308, 191, 793, 786, 779, 399,
	154, 344, 343, 753, 249, 844, 155, 146, 329, 156,
	257, 173, 864, 408, 187, 262, 379, 2680, 235, 298,
	211, 816, 309, 738, 167, 325, 280, 282, 279, 283,
	239, 150, 157, 840, 327, 346, 383, 189, 362, 148,
	149, 151, 159, 337, 160, 161, 883, 274, 227, 231,
	243, 254, 815, 332, 363, 400, 809, 184, 336, 364,
	375, 365, 368, 366, 367, 176, 370, 393, 195, 345,
	348, 407, 838, 183, 178, 872, 855, 802, 768, 774,
	698, 0, 177, 834, 730, 742, 722, 810, 721, 238,
	826, 391, 392, 210, 409, 928, 887, 179, 705, 886,
	295, 303, 294, 889, 387, 873, 803, 792, 790, 699,
	871, 801, 791, 263, 230, 245, 319, 270, 320, 246,
	290, 289, 291, 272, 794, 0, 174, 0, 360, 881,
	898, 369, 192, 716, 848, 382, 153, 326, 193, 237,
	228, 318, 293, 185, 248, 358, 261, 269, 830, 895,
	307, 335, 199, 397, 357, 224, 933, 300, 935, 931,
	934, 932, 951, 952, 973, 974, 975, 962, 929, 0,
	970, 971, 0, 785, 875, 700, 0, 851, 162, 163,
	823, 893, 941, 206, 141, 924, 925, 926, 142, 945,
	946, 143, 144, 968, 967, 966, 969, 145, 978, 977,
	979, 930, 937, 940, 947, 948, 949, 956, 957, 964,
	959, 960, 0, 781, 315, 175, 186, 198, 217, 215,
	229, 258, 281, 286, 313, 347, 352, 372, 373, 374,
	376, 219, 0, 222, 197, 330, 196, 271, 251, 314,
	380, 381, 323, 212, 953, 169, 180, 265, 894, 328,
	234, 688, 695, 714, 717, 718, 719, 720, 724, 729,
	735, 743, 744, 752, 757, 758, 759, 760, 767, 769,
	770, 771, 772, 773, 776, 777, 787, 798, 799, 805,
	806, 0, 829, 832, 961, 843, 845, 849, 850, 857,
	862, 863, 888, 892, 897, 398, 216, 784, 804, 835,
	181, 190, 201, 214, 226, 233, 244, 247, 252, 253,
	255, 259, 273, 275, 276, 277, 278, 296, 297, 301,
	302, 305, 306, 310, 311, 312, 316, 317, 324, 158,
	331, 338, 339, 340, 341, 342, 350, 351, 353, 354,
	361, 389, 390, 403, 404, 867, 764, 166, 0, 0,
	172, 0, 0, 0, 0, 0, 751, 171, 866, 890,
	811, 825, 878, 0, 377, 943, 882, 725, 748, 891,
	754, 756, 819, 701, 796, 304, 745, 702, 0, 0,
	693, 938, 694, 726, 221, 936, 852, 797, 880, 782,
	812, 822, 220, 208, 789, 788, 869, 737, 736, 817,
	865, 879, 0, 0, 976, 267, 0, 0, 401, 359,
	287, 0, 0, 780, 0, 950, 963, 765, 821, 713,
	808, 884, 746, 813, 885, 0, 0, 0, 0, 0,
	464, 0, 0, 0, 0, 0, 0, 0, 0, 147,
	0, 958, 972, 939, 0, 775, 818, 896, 692, 955,
	0, 697, 927, 0, 870, 733, 734, 225, 0, 0,
	0, 0, 0, 0, 0, 778, 795, 837, 762, 396,
	824, 833, 847, 755, 322, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 954, 0, 0, 0,
	707, 923, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 944, 0, 0, 0, 712, 690,
	731, 839, 691, 689, 288, 704, 965, 868, 763, 256,
	164, 874, 761, 942, 827, 708, 856, 749, 264, 706,
	165, 703, 709, 747, 299, 836, 842, 152, 168, 266,
	853, 727, 740, 209, 0, 334, 814, 395, 922, 236,
	800, 333, 268, 388, 828, 876, 394, 750, 371, 402,
	406, 232, 783, 200, 356, 223, 218, 732, 846, 696,
	241, 321, 213, 260, 766, 820, 728, 205, 831, 807,
	858, 355, 385, 170, 284, 386, 405, 188, 378, 285,
	292, 202, 204, 203, 182, 349, 384, 194, 207, 854,
	841, 860, 723, 710, 715, 711, 739, 877, 250, 242,
	861, 859, 741, 308, 191, 793, 786, 779, 399, 154,
	344, 343, 753, 249, 844, 155, 146, 329, 156, 257,
	173, 864, 408, 187, 262, 379, 921, 235, 298, 211,
	816, 309, 738, 167, 325, 280, 282, 279, 283, 239,
	150, 157, 840, 327, 346, 383, 189, 362, 148, 149,
	151, 159, 337, 160, 161, 883, 274, 227, 231, 243,
	254, 815, 332, 363, 400, 809, 184, 336, 364, 375,
	365, 368, 366, 367, 176, 370, 393, 195, 345, 348,
	407, 838, 183, 178, 872, 855, 802, 768, 774, 698,
	0, 177, 834, 730, 742, 722, 810, 721, 238, 826,
	391, 392, 210, 409, 928, 887, 179, 705, 886, 295,
	303, 294, 889, 387, 873, 803, 792, 790, 699, 871,
	801, 791, 263, 230, 245, 319, 270, 320, 246, 290,
	289, 291, 272, 794, 0, 174, 0, 360, 881, 898,
	369, 192, 716, 848, 382, 153, 326, 193, 237, 228,
	318, 293, 185, 248, 358, 261, 269, 830, 895, 307,
	335, 199, 397, 357, 224, 933, 300, 935, 931, 934,
	932, 951, 952, 973, 974, 975, 962, 929, 0, 970,
	971, 0, 785, 875, 700, 0, 851, 162, 163, 823,
	893, 941, 206, 141, 924, 925, 926, 142, 945, 946,
	143, 144, 968, 967, 966, 969, 145, 978, 977, 979,
	930, 937, 940, 947, 948, 949, 956, 957, 964, 959,
	960, 0, 781, 315, 175, 186, 198, 217, 215, 229,
	258, 281, 286, 313, 347, 352, 372, 373, 374, 376,
	219, 0, 222, 197, 330, 196, 271, 251, 314, 380,
	381, 323, 212, 953, 169, 180, 265, 894, 328, 234,
	688, 695, 714, 717, 718, 719, 720, 724, 729, 735,
	743, 744, 752, 757, 758, 759, 760, 767, 769, 770,
	771, 772, 773, 776, 777, 787, 798, 799, 805, 806,
	0, 829, 832, 961, 843, 845, 849, 850, 857, 862,
	863, 888, 892, 897, 398, 216, 784, 804, 835, 181,
	190, 201, 214, 226, 233, 244, 247, 252, 253, 255,
	259, 273, 275, 276, 277, 278, 296, 297, 301, 302,
	305, 306, 310, 311, 312, 316, 317, 324, 158, 331,
	338, 339, 340, 341, 342, 350, 351, 353, 354, 361,
	389, 390, 403, 404, 867, 764, 166, 0, 0, 172,
	0, 0, 0, 0, 0, 751, 171, 866, 890, 811,
	825, 878, 0, 377, 943, 882, 725, 748, 891, 754,
	756, 819, 701, 796, 304, 745, 702, 0, 0, 693,
	938, 694, 726, 221, 936, 852, 797, 880, 782, 812,
	822, 220, 208, 789, 788, 869, 737, 736, 817, 865,
	879, 0, 0, 976, 267, 0, 0, 401, 359, 287,
	0, 0, 780, 0, 950, 963, 765, 821, 713, 808,
	884, 746, 813, 885, 0, 0, 0, 0, 0, 464,
	0, 0, 0, 0, 0, 0, 0, 0, 147, 0,
	958, 972, 939, 0, 775, 818, 896, 692, 955, 0,
	697, 927, 0, 870, 733, 734, 225, 0, 0, 0,
	0, 0, 0, 0, 778, 795, 837, 762, 396, 824,
	833, 847, 755, 322, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 954, 0, 0, 0, 707,
	923, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 944, 0, 0, 0, 712, 690, 731,
	839, 691, 689, 288, 704, 965, 868, 763, 256, 164,
	874, 761, 942, 827, 708, 856, 749, 264, 706, 165,
	703, 709, 747, 299, 836, 842, 152, 168, 266, 853,
	727, 740, 209, 0, 334, 814, 395, 922, 236, 800,
	333, 268, 388, 828, 876, 394, 750, 371, 402, 406,
	232, 783, 200, 356, 223, 218, 732, 846, 696, 241,
	321, 213, 260, 766, 820, 728, 205, 831, 807, 858,
	355, 385, 170, 284, 386, 405, 188, 378, 285, 292,
	202, 204, 203, 182, 349, 384, 194, 207, 854, 841,
	860, 723, 710, 715, 711, 739, 877, 250, 242, 861,
	859, 741, 308, 191, 793, 786, 779, 399, 154, 344,
	343, 753, 249, 844, 155, 146, 329, 156, 257, 173,
	864, 408, 187, 262, 379, 921, 235, 298, 211, 816,
	309, 738, 167, 325, 280, 282, 279, 283, 239, 150,
	157, 840, 327, 346, 383, 189, 362, 148, 149, 151,
	159, 337, 160, 161, 883, 274, 227, 231, 243, 254,
	815, 332, 363, 400, 809, 184, 336, 364, 375, 365,
	368, 366, 367, 176, 370, 393, 195, 345, 348, 407,
	838, 183, 178, 872, 855, 802, 768, 774, 698, 0,
	177, 834, 730, 742, 722, 810, 721, 238, 826, 391,
	392, 210, 409, 928, 887, 179, 916, 886, 295, 303,
	294, 889, 387, 873, 803, 792, 790, 699, 871, 801,
	791, 263, 230, 245, 319, 270, 320, 246, 290, 289,
	291, 912, 794, 0, 174, 0, 360, 881, 898, 369,
	192, 716, 848, 382, 153, 326, 193, 237, 228, 318,
	917, 915, 906, 907, 261, 269, 830, 895, 307, 335,
	199, 397, 357, 224, 933, 300, 935, 931, 934, 932,
	951, 952, 973, 974, 975, 962, 929, 0, 970, 971,
	0, 785, 875, 700, 0, 851, 162, 163, 823, 893,
	941, 206, 141, 924, 925, 926, 142, 945, 946, 143,
	144, 968, 967, 966, 969, 145, 978, 977, 979, 930,
	937, 940, 947, 948, 949, 956, 957, 964, 959, 960,
	0, 781, 315, 175, 186, 198, 217, 215, 229, 258,
	281, 286, 313, 347, 352, 372, 373, 374, 376, 219,
	0, 222, 197, 330, 196, 271, 251, 314, 380, 381,
	323, 212, 953, 169, 180, 265, 894, 328, 234, 688,
	695, 714, 717, 718, 719, 720, 724, 729, 735, 743,
	744, 752, 757, 758, 759, 760, 767, 769, 770, 771,
	772, 773, 776, 777, 787, 798, 799, 805, 806, 0,
	829, 832, 961, 843, 845, 849, 850, 857, 862, 863,
	888, 892, 897, 398, 216, 784, 804, 835, 181, 190,
	201, 214, 226, 233, 244, 247, 252, 253, 255, 259,
	273, 275, 276, 277, 278, 296, 297, 301, 302, 305,
	306, 310, 311, 312, 913, 914, 324, 158, 331, 338,
	339, 340, 341, 342, 350, 351, 353, 354, 361, 389,
	390, 403, 404, 867, 764, 166, 0, 0, 172, 0,
	0, 0, 0, 0, 751, 171, 866, 890, 811, 825,
	878, 0, 377, 943, 882, 725, 748, 891, 754, 756,
	819, 701, 796, 304, 745, 702, 0, 0, 693, 938,
	694, 726, 221, 936, 852, 797, 880, 782, 812, 822,
	220, 208, 789, 788, 869, 737, 736, 817, 865, 879,
	0, 0, 976, 267, 0, 0, 401, 359, 287, 0,
	0, 780, 0, 950, 963, 765, 821, 713, 808, 884,
	746, 813, 885, 0, 0, 0, 0, 0, 464, 0,
	0, 0, 0, 0, 0, 0, 0, 147, 0, 958,
	972, 939, 0, 775, 818, 896, 692, 955, 0, 697,
	927, 0, 870, 733, 734, 225, 0, 0, 0, 0,
	0, 0, 0, 778, 795, 837, 762, 396, 824, 833,
	847, 755, 322, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 954, 0, 0, 0, 707, 923,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 944, 0, 0, 0, 712, 690, 731, 839,
	691, 689, 288, 704, 965, 868, 763, 256, 164, 874,
	761, 942, 827, 708, 856, 749, 264, 706, 165, 703,
	709, 747, 299, 836, 842, 152, 168, 266, 853, 727,
	740, 209, 0, 334, 814, 395, 922, 236, 800, 333,
	268, 388, 828, 876, 394, 750, 371, 402, 406, 232,
	783, 200, 356, 223, 218, 732, 846, 696, 241, 321,
	213, 260, 766, 820, 728, 205, 831, 807, 858, 355,
	385, 170, 284, 386, 405, 188, 378, 285, 292, 202,
	204, 203, 182, 349, 384, 194, 207, 854, 841, 860,
	723, 710, 715, 711, 739, 877, 250, 242, 861, 859,
	741, 308, 191, 793, 786, 779, 399, 154, 344, 343,
	753, 249, 844, 155, 146, 329, 156, 257, 173, 864,
	408, 187, 262, 379, 921, 235, 298, 211, 816, 309,
	738, 167, 325, 280, 282, 279, 283, 239, 150, 157,
	840, 327, 346, 383, 189, 362, 148, 149, 151, 159,
	337, 160, 161, 883, 274, 227, 231, 243, 254, 815,
	332, 363, 400, 809, 184, 336, 364, 375, 365, 368,
	366, 367, 176, 370, 1376, 195, 345, 348, 407, 838,
	183, 178, 872, 855, 802, 768, 774, 698, 0, 177,
	834, 730, 742, 722, 810, 721, 238, 826, 391, 392,
	210, 409, 928, 887, 179, 705, 886, 295, 303, 294,
	889, 387, 873, 803, 792, 790, 699, 871, 801, 791,
	263, 230, 245, 319, 270, 320, 246, 290, 289, 291,
	272, 794, 0, 174, 0, 360, 881, 898, 369, 192,
	716, 848, 382, 153, 326, 193, 237, 228, 318, 293,
	185, 248, 358, 261, 269, 830, 895, 307, 335, 199,
	397, 357, 224, 933, 300, 935, 931, 934, 932, 951,
	952, 973, 974, 975, 962, 929, 0, 970, 971, 0,
	785, 875, 700, 0, 851, 162, 163, 823, 893, 941,
	206, 141, 924, 925, 926, 142, 945, 946, 143, 144,
	968, 967, 966, 969, 145, 978, 977, 979, 930, 937,
	940, 947, 948, 949, 956, 957, 964, 959, 960, 0,
	781, 315, 175, 186, 198, 217, 215, 229, 258, 281,
	286, 313, 347, 352, 372, 373, 374, 376, 219, 0,
	222, 197, 330, 196, 271, 251, 314, 380, 381, 323,
	212, 953, 169, 180, 265, 894, 328, 234, 688, 695,
	714, 717, 718, 719, 720, 724, 729, 735, 743, 744,
	752, 757, 758, 759, 760, 767, 769, 770, 771, 772,
	773, 776, 777, 787, 798, 799, 805, 806, 0, 829,
	832, 961, 843, 845, 849, 850, 857, 862, 863, 888,
	892, 897, 398, 216, 784, 804, 835, 181, 190, 201,
	214, 226, 233, 244, 247, 252, 253, 255, 259, 273,
	275, 276, 277, 278, 296, 297, 301, 302, 305, 306,
	310, 311, 312, 316, 317, 324, 158, 331, 338, 339,
	340, 341, 342, 350, 351, 353, 354, 361, 389, 390,
	403, 404, 867, 764, 166, 0, 0, 172, 0, 0,
	0, 0, 0, 751, 171, 866, 890, 811, 825, 878,
	0, 377, 943, 882, 725, 748, 891, 754, 756, 819,
	701, 796, 304, 745, 702, 0, 0, 693, 938, 694,
	726, 221, 936, 852, 797, 880, 782, 812, 822, 220,
	208, 789, 788, 869, 737, 736, 817, 865, 879, 0,
	0, 976, 267, 0, 0, 401, 359, 287, 0, 0,
	780, 0, 950, 963, 765, 821, 713, 808, 884, 746,
	813, 885, 0, 0, 0, 0, 0, 464, 0, 0,
	0, 0, 0, 0, 0, 0, 147, 0, 958, 972,
	939, 0, 775, 818, 896, 692, 955, 0, 697, 927,
	0, 870, 733, 734, 225, 0, 0, 0, 0, 0,
	0, 0, 778, 795, 837, 762, 396, 824, 833, 847,
	755, 322, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 954, 0, 0, 0, 707, 923, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 944, 0, 0, 0, 712, 690, 731, 839, 691,
	689, 288, 704, 965, 868, 763, 256, 164, 874, 761,
	942, 827, 708, 856, 749, 264, 706, 165, 703, 709,
	747, 299, 836, 842, 152, 168, 266, 853, 727, 740,
	209, 0, 334, 814, 395, 922, 236, 800, 333, 268,
	388, 828, 876, 394, 750, 371, 402, 406, 232, 783,
	200, 356, 223, 218, 732, 846, 696, 241, 321, 213,
	260, 766, 820, 728, 205, 831, 807, 858, 355, 385,
	170, 284, 386, 405, 188, 378, 285, 292, 202, 204,
	203, 182, 349, 384, 194, 207, 854, 841, 860, 723,
	710, 715, 711, 739, 877, 250, 242, 861, 859, 741,
	308, 191, 793, 786, 779, 399, 154, 344, 343, 753,
	249, 844, 155, 146, 329, 156, 257, 173, 864, 408,
	187, 262, 379, 921, 235, 298, 211, 816, 309, 738,
	167, 325, 280, 282, 279, 283, 239, 150, 157, 840,
	327, 346, 383, 189, 362, 148, 149, 151, 159, 337,
	160, 161, 883, 274, 227, 231, 243, 254, 815, 332,
	363, 400, 809, 184, 336, 364, 375, 365, 368, 366,
	367, 176, 370, 903, 195, 345, 348, 407, 838, 183,
	178, 872, 855, 802, 768, 774, 698, 0, 177, 834,
	730, 742, 722, 810, 721, 238, 826, 391, 392, 210,
	409, 928, 887, 179, 916, 886, 295, 303, 294, 889,
	387, 873, 803, 792, 790, 699, 871, 801, 791, 263,
	230, 245, 319, 270, 320, 246, 290, 289, 291, 912,
	794, 0, 174, 0, 360, 881, 898, 369, 192, 716,
	848, 382, 153, 326, 193, 237, 228, 318, 917, 915,
	906, 907, 261, 269, 830, 895, 307, 335, 199, 397,
	357, 224, 933, 300, 935, 931, 934, 932, 951, 952,
	973, 974, 975, 962, 929, 0, 970, 971, 0, 785,
	875, 700, 0, 851, 162, 163, 823, 893, 941, 206,
	141, 924, 925, 926, 142, 945, 946, 143, 144, 968,
	967, 966, 969, 145, 978, 977, 979, 930, 937, 940,
	947, 948, 949, 956, 957, 964, 959, 960, 0, 781,
	315, 175, 186, 198, 217, 215, 229, 258, 281, 286,
	313, 347, 352, 372, 373, 374, 376, 219, 0, 222,
	197, 330, 196, 271, 251, 314, 380, 381, 323, 212,
	953, 169, 180, 265, 894, 328, 234, 688, 695, 714,
	717, 718, 719, 720, 724, 729, 735, 743, 744, 752,
	757, 758, 759, 760, 767, 769, 770, 771, 772, 773,
	776, 777, 787, 798, 799, 805, 806, 0, 829, 832,
	961, 843, 845, 849, 850, 857, 862, 863, 888, 892,
	897, 398, 216, 784, 804, 835, 181, 190, 201, 214,
	226, 233, 244, 247, 252, 253, 255, 259, 273, 275,
	276, 277, 278, 296, 297, 301, 302, 305, 306, 310,
	311, 312, 913, 914, 324, 158, 331, 338, 339, 340,
	341, 342, 350, 351, 353, 354, 361, 389, 390, 403,
	404, 867, 764, 166, 0, 0, 172, 0, 0, 0,
	0, 0, 751, 171, 866, 890, 811, 825, 1747, 1709,
	377, 1602, 1751, 1551, 1581, 1768, 1587, 1590, 1671, 1517,
	1640, 304, 1578, 1518, 1501, 1556, 1505, 1569, 1506, 1553,
	221, 1549, 1712, 1643, 1749, 1622, 1664, 1674, 220, 208,
	1632, 1631, 1737, 1567, 1566, 1669, 1726, 1748, 1621, 0,
	1758, 267, 1723, 0, 401, 359, 287, 0, 0, 1617,
	1732, 1638, 1701, 1600, 1673, 1533, 1656, 1753, 1579, 1665,
	1754, 0, 0, 0, 0, 0, 2759, 0, 2754, 2755,
	0, 0, 0, 0, 0, 2756, 0, 1661, 1745, 1572,
	0, 1612, 1670, 1773, 1504, 1657, 0, 1509, 1520, 1767,
	1738, 1563, 1564, 225, 0, 0, 0, 0, 0, 0,
	0, 1615, 1639, 1691, 1597, 396, 1676, 1686, 1704, 1589,
	322, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	1558, 0, 1654, 0, 0, 0, 1525, 1511, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1611, 0, 0, 0, 1532, 1502, 1560, 1693, 1503, 1500,
	288, 1521, 1706, 1736, 1598, 256, 0, 1742, 1596, 1595,
	1680, 1526, 1716, 1582, 264, 1524, 165, 1519, 1527, 1580,
	299, 1690, 1698, 0, 168, 266, 1713, 1554, 1571, 209,
	0, 334, 1666, 395, 0, 236, 1647, 333, 268, 388,
	1681, 1744, 394, 1583, 371, 402, 406, 232, 1623, 200,
	356, 223, 218, 1562, 1703, 1508, 241, 321, 213, 260,
	1601, 1672, 1555, 205, 1684, 1655, 1718, 355, 385, 170,
	284, 386, 405, 188, 378, 285, 292, 202, 204, 203,
	182, 349, 384, 194, 207, 1714, 1697, 1720, 1548, 1528,
	1539, 1529, 1570, 1746, 250, 242, 1721, 1719, 1573, 308,
	191, 1636, 1629, 1616, 399, 0, 344, 343, 1586, 249,
	1700, 0, 0, 329, 2758, 257, 173, 1725, 408, 187,
	262, 379, 0, 235, 298, 211, 1668, 309, 1568, 167,
	325, 280, 282, 279, 283, 239, 0, 0, 1696, 327,
	346, 383, 189, 362, 2757, 0, 0, 0, 337, 0,
	0, 1752, 274, 227, 231, 243, 254, 1667, 332, 363,
	400, 1658, 184, 336, 364, 375, 365, 368, 366, 367,
	176, 370, 393, 195, 345, 348, 407, 1692, 183, 178,
	1740, 1715, 1649, 1604, 1610, 1510, 0, 177, 1688, 1559,
	1575, 1547, 1662, 1546, 238, 1679, 391, 392, 210, 409,
	1522, 1760, 179, 1523, 1759, 295, 303, 294, 1763, 387,
	1741, 1650, 1635, 1633, 1515, 1739, 1648, 1634, 263, 230,
	245, 319, 270, 320, 246, 290, 289, 291, 272, 1637,
	0, 174, 0, 360, 1750, 1775, 369, 192, 1541, 1707,
	382, 0, 326, 193, 237, 228, 318, 293, 185, 248,
	358, 261, 269, 1683, 1772, 307, 335, 199, 397, 357,
	224, 1537, 300, 1540, 1535, 1538, 1536, 1641, 1642, 1755,
	1756, 1757, 1695, 1530, 0, 1733, 1734, 0, 1628, 1743,
	1516, 0, 1711, 0, 0, 1675, 1770, 1588, 206, 0,
	1512, 1513, 1514, 0, 1618, 1619, 0, 0, 1729, 1728,
	1727, 1730, 0, 1764, 1762, 1765, 1531, 1552, 1574, 1624,
	1625, 1627, 1659, 1660, 1705, 1678, 1687, 1561, 1620, 315,
	175, 186, 198, 217, 215, 229, 258, 281, 286, 313,
	347, 352, 372, 373, 374, 376, 219, 0, 222, 197,
	330, 196, 271, 251, 314, 380, 381, 323, 212, 1646,
	169, 180, 265, 1771, 328, 234, 1499, 1507, 1534, 1542,
	1543, 1544, 1545, 1550, 1557, 1565, 1576, 1577, 1585, 1591,
	1592, 1593, 1594, 1603, 1605, 1606, 1607, 1608, 1609, 1613,
	1614, 1630, 1644, 1645, 1652, 1653, 0, 1682, 1685, 1694,
	1699, 1702, 1708, 1710, 1717, 1722, 1724, 1761, 1769, 1774,
	398, 216, 1626, 1651, 1689, 181, 190, 201, 214, 226,
	233, 244, 247, 252, 253, 255, 259, 273, 275, 276,
	277, 278, 296, 297, 301, 302, 305, 306, 310, 311,
	312, 316, 317, 324, 0, 331, 338, 339, 340, 341,
	342, 350, 351, 353, 354, 361, 389, 390, 403, 404,
	1735, 1599, 166, 0, 0, 172, 0, 0, 0, 0,
	0, 1584, 171, 1731, 1766, 1663, 1677, 1747, 1709, 377,
	1602, 1751, 1551, 1581, 1768, 1587, 1590, 1671, 1517, 1640,
	304, 1578, 1518, 1501, 1556, 1505, 1569, 1506, 1553, 221,
	1549, 1712, 1643, 1749, 1622, 1664, 1674, 220, 208, 1632,
	1631, 1737, 1567, 1566, 1669, 1726, 1748, 1621, 0, 1758,
	267, 1723, 0, 401, 359, 287, 0, 0, 1617, 1732,
	1638, 1701, 1600, 1673, 1533, 1656, 1753, 1579, 1665, 1754,
	0, 0, 0, 0, 0, 994, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1661, 1745, 1572, 0,
	1612, 1670, 1773, 1504, 1657, 0, 1509, 1520, 1767, 1738,
	1563, 1564, 225, 0, 0, 0, 0, 0, 0, 0,
	1615, 1639, 1691, 1597, 396, 1676, 1686, 1704, 1589, 322,
	240, 0, 0, 0, 0, 0, 0, 3139, 0, 1558,
	0, 1654, 0, 0, 0, 1525, 1511, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1611,
	0, 0, 0, 1532, 1502, 1560, 1693, 1503, 1500, 288,
	1521, 1706, 1736, 1598, 256, 0, 1742, 1596, 1595, 1680,
	1526, 1716, 1582, 264, 1524, 165, 1519, 1527, 1580, 299,
	1690, 1698, 0, 168, 266, 1713, 1554, 1571, 209, 0,
	334, 1666, 395, 0, 236, 1647, 333, 268, 388, 1681,
	1744, 394, 1583, 371, 402, 406, 232, 1623, 200, 356,
	223, 218, 1562, 1703, 1508, 241, 321, 213, 260, 1601,
	1672, 1555, 205, 1684, 1655, 1718, 355, 385, 170, 284,
	386, 405, 188, 378, 285, 292, 202, 204, 203, 182,
	349, 384, 194, 207, 1714, 1697, 1720, 1548, 1528, 1539,
	1529, 1570, 1746, 250, 242, 1721, 1719, 1573, 308, 191,
	1636, 1629, 1616, 399, 0, 344, 343, 1586, 249, 1700,
	0, 0, 329, 0, 257, 173, 1725, 408, 187, 262,
	379, 0, 235, 298, 211, 1668, 309, 1568, 167, 325,
	280, 282, 279, 283, 239, 0, 0, 1696, 327, 346,
	383, 189, 362, 0, 0, 0, 0, 337, 0, 0,
	1752, 274, 227, 231, 243, 254, 1667, 332, 363, 400,
	1658, 184, 336, 364, 375, 365, 368, 366, 367, 176,
	370, 393, 195, 345, 348, 407, 1692, 183, 178, 1740,
	1715, 1649, 1604, 1610, 1510, 0, 177, 1688, 1559, 1575,
	1547, 1662, 1546, 238, 1679, 391, 392, 210, 409, 1522,
	1760, 179, 1523, 1759, 295, 303, 294, 1763, 387, 1741,
	1650, 1635, 1633, 1515, 1739, 1648, 1634, 263, 230, 245,
	319, 270, 320, 246, 290, 289, 291, 272, 1637, 0,
	174, 0, 360, 1750, 1775, 369, 192, 1541, 1707, 382,
	0, 326, 193, 237, 228, 318, 293, 185, 248, 358,
	261, 269, 1683, 1772, 307, 335, 199, 397, 357, 224,
	1537, 300, 1540, 1535, 1538, 1536, 1641, 1642, 1755, 1756,
	1757, 1695, 1530, 0, 1733, 1734, 0, 1628, 1743, 1516,
	0, 1711, 0, 0, 1675, 1770, 1588, 206, 0, 1512,
	1513, 1514, 0, 1618, 1619, 0, 0, 1729, 1728, 1727,
	1730, 0, 1764, 1762, 1765, 1531, 1552, 1574, 1624, 1625,
	1627, 1659, 1660, 1705, 1678, 1687, 1561, 1620, 315, 175,
	186, 198, 217, 215, 229, 258, 281, 286, 313, 347,
	352, 372, 373, 374, 376, 219, 0, 222, 197, 330,
	196, 271, 251, 314, 380, 381, 323, 212, 1646, 169,
	180, 265, 1771, 328, 234, 1499, 1507, 1534, 1542, 1543,
	1544, 1545, 1550, 1557, 1565, 1576, 1577, 1585, 1591, 1592,
	1593, 1594, 1603, 1605, 1606, 1607, 1608, 1609, 1613, 1614,
	1630, 1644, 1645, 1652, 1653, 0, 1682, 1685, 1694, 1699,
	1702, 1708, 1710, 1717, 1722, 1724, 1761, 1769, 1774, 398,
	216, 1626, 1651, 1689, 181, 190, 201, 214, 226, 233,
	244, 247, 252, 253, 255, 259, 273, 275, 276, 277,
	278, 296, 297, 301, 302, 305, 306, 310, 311, 312,
	316, 317, 324, 0, 331, 338, 339, 340, 341, 342,
	350, 351, 353, 354, 361, 389, 390, 403, 404, 1735,
	1599, 166, 0, 0, 172, 0, 0, 0, 0, 0,
	1584, 171, 1731, 1766, 1663, 1677, 1747, 1709, 377, 1602,
	1751, 1551, 1581, 1768, 1587, 1590, 1671, 1517, 1640, 304,
	1578, 1518, 1501, 1556, 1505, 1569, 1506, 1553, 221, 1549,
	1712, 1643, 1749, 1622, 1664, 1674, 220, 208, 1632, 1631,
	1737, 1567, 1566, 1669, 1726, 1748, 1621, 0, 1758, 267,
	1723, 0, 401, 359, 287, 0, 0, 1617, 1732, 1638,
	1701, 1600, 1673, 1533, 1656, 1753, 1579, 1665, 1754, 0,
	0, 0, 0, 0, 994, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1661, 1745, 1572, 0, 1612,
	1670, 1773, 1504, 1657, 0, 1509, 1520, 1767, 1738, 1563,
	1564, 225, 0, 0, 0, 0, 0, 0, 0, 1615,
	1639, 1691, 1597, 396, 1676, 1686, 1704, 1589, 322, 240,
	0, 0, 0, 0, 0, 0, 2603, 0, 1558, 0,
	1654, 0, 0, 0, 1525, 1511, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1611, 0,
	0, 0, 1532, 1502, 1560, 1693, 1503, 1500, 288, 1521,
	1706, 1736, 1598, 256, 0, 1742, 1596, 1595, 1680, 1526,
	1716, 1582, 264, 1524, 165, 1519, 1527, 1580, 299, 1690,
	1698, 0, 168, 266, 1713, 1554, 1571, 209, 0, 334,
	1666, 395, 0, 236, 1647, 333, 268, 388, 1681, 1744,
	394, 1583, 371, 402, 406, 232, 1623, 200, 356, 223,
	218, 1562, 1703, 1508, 241, 321, 213, 260, 1601, 1672,
	1555, 205, 1684, 1655, 1718, 355, 385, 170, 284, 386,
	405, 188, 378, 285, 292, 202, 204, 203, 182, 349,
	384, 194, 207, 1714, 1697, 1720, 1548, 1528, 1539, 1529,
	1570, 1746, 250, 242, 1721, 1719, 1573, 308, 191, 1636,
	1629, 1616, 399, 0, 344, 343, 1586, 249, 1700, 0,
	0, 329, 0, 257, 173, 1725, 408, 187, 262, 379,
	0, 235, 298, 211, 1668, 309, 1568, 167, 325, 280,
	282, 279, 283, 239, 0, 0, 1696, 327, 346, 383,
	189, 362, 0, 0, 0, 0, 337, 0, 0, 1752,
	274, 227, 231, 243, 254, 1667, 332, 363, 400, 1658,
	184, 336, 364, 375, 365, 368, 366, 367, 176, 370,
	393, 195, 345, 348, 407, 1692, 183, 178, 1740, 1715,
	1649, 1604, 1610, 1510, 0, 177, 1688, 1559, 1575, 1547,
	1662, 1546, 238, 1679, 391, 392, 210, 409, 1522, 1760,
	179, 1523, 1759, 295, 303, 294, 1763, 387, 1741, 1650,
	1635, 1633, 1515, 1739, 1648, 1634, 263, 230, 245, 319,
	270, 320, 246, 290, 289, 291, 272, 1637, 0, 174,
	0, 360, 1750, 1775, 369, 192, 1541, 1707, 382, 0,
	326, 193, 237, 228, 318, 293, 185, 248, 358, 261,
	269, 1683, 1772, 307, 335, 199, 397, 357, 224, 1537,
	300, 1540, 1535, 1538, 1536, 1641, 1642, 1755, 1756, 1757,
	1695, 1530, 0, 1733, 1734, 0, 1628, 1743, 1516, 0,
	1711, 0, 0, 1675, 1770, 1588, 206, 0, 1512, 1513,
	1514, 0, 1618, 1619, 0, 0, 1729, 1728, 1727, 1730,
	0, 1764, 1762, 1765, 1531, 1552, 1574, 1624, 1625, 1627,
	1659, 1660, 1705, 1678, 1687, 1561, 1620, 315, 175, 186,
	198, 217, 215, 229, 258, 281, 286, 313, 347, 352,
	372, 373, 374, 376, 219, 0, 222, 197, 330, 196,
	271, 251, 314, 380, 381, 323, 212, 1646, 169, 180,
	265, 1771, 328, 234, 1499, 1507, 1534, 1542, 1543, 1544,
	1545, 1550, 1557, 1565, 1576, 1577, 1585, 1591, 1592, 1593,
	1594, 1603, 1605, 1606, 1607, 1608, 1609, 1613, 1614, 1630,
	1644, 1645, 1652, 1653, 0, 1682, 1685, 1694, 1699, 1702,
	1708, 1710, 1717, 1722, 1724, 1761, 1769, 1774, 398, 216,
	1626, 1651, 1689, 181, 190, 201, 214, 226, 233, 244,
	247, 252, 253, 255, 259, 273, 275, 276, 277, 278,
	296, 297, 301, 302, 305, 306, 310, 311, 312, 316,
	317, 324, 0, 331, 338, 339, 340, 341, 342, 350,
	351, 353, 354, 361, 389, 390, 403, 404, 1735, 1599,
	166, 0, 0, 172, 0, 0, 0, 0, 0, 1584,
	171, 1731, 1766, 1663, 1677, 1747, 1709, 377, 1602, 1751,
	1551, 1581, 1768, 1587, 1590, 1671, 1517, 1640, 304, 1578,
	1518, 1501, 1556, 1505, 1569, 1506, 1553, 221, 1549, 1712,
	1643, 1749, 1622, 1664, 1674, 220, 208, 1632, 1631, 1737,
	1567, 1566, 1669, 1726, 1748, 1621, 0, 1758, 267, 1723,
	0, 401, 359, 287, 0, 0, 1617, 1732, 1638, 1701,
	1600, 1673, 1533, 1656, 1753, 1579, 1665, 1754, 0, 0,
	0, 0, 0, 139, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1661, 1745, 1572, 0, 1612, 1670,
	1773, 1504, 1657, 0, 1509, 1520, 1767, 1738, 1563, 1564,
	225, 0, 0, 0, 0, 0, 0, 0, 1615, 1639,
	1691, 1597, 396, 1676, 1686, 1704, 1589, 322, 240, 0,
	0, 0, 0, 0, 0, 2400, 0, 1558, 0, 1654,
	0, 0, 0, 1525, 1511, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1611, 0, 0,
	0, 1532, 1502, 1560, 1693, 1503, 1500, 288, 1521, 1706,
	1736, 1598, 256, 0, 1742, 1596, 1595, 1680, 1526, 1716,
	1582, 264, 1524, 165, 1519, 1527, 1580, 299, 1690, 1698,
	0, 168, 266, 1713, 1554, 1571, 209, 0, 334, 1666,
	395, 0, 236, 1647, 333, 268, 388, 1681, 1744, 394,
	1583, 371, 402, 406, 232, 1623, 200, 356, 223, 218,
	1562, 1703, 1508, 241, 321, 213, 260, 1601, 1672, 1555,
	205, 1684, 1655, 1718, 355, 385, 170, 284, 386, 405,
	188, 378, 285, 292, 202, 204, 203, 182, 349, 384,
	194, 207, 1714, 1697, 1720, 1548, 1528, 1539, 1529, 1570,
	1746, 250, 242, 1721, 1719, 1573, 308, 191, 1636, 1629,
	1616, 399, 0, 344, 343, 1586, 249, 1700, 0, 0,
	329, 0, 257, 173, 1725, 408, 187, 262, 379, 0,
	235, 298, 211, 1668, 309, 1568, 167, 325, 280, 282,
	279, 283, 239, 0, 0, 1696, 327, 346, 383, 189,
	362, 0, 0, 0, 0, 337, 0, 0, 1752, 274,
	227, 231, 243, 254, 1667, 332, 363, 400, 1658, 184,
	336, 364, 375, 365, 368, 366, 367, 176, 370, 393,
	195, 345, 348, 407, 1692, 183, 178, 1740, 1715, 1649,
	1604, 1610, 1510, 0, 177, 1688, 1559, 1575, 1547, 1662,
	1546, 238, 1679, 391, 392, 210, 409, 1522, 1760, 179,
	1523, 1759, 295, 303, 294, 1763, 387, 1741, 1650, 1635,
	1633, 1515, 1739, 1648, 1634, 263, 230, 245, 319, 270,
	320, 246, 290, 289, 291, 272, 1637, 0, 174, 0,
	360, 1750, 1775, 369, 192, 1541, 1707, 382, 0, 326,
	193, 237, 228, 318, 293, 185, 248, 358, 261, 269,
	1683, 1772, 307, 335, 199, 397, 357, 224, 1537, 300,
	1540, 1535, 1538, 1536, 1641, 1642, 1755, 1756, 1757, 1695,
	1530, 0, 1733, 1734, 0, 1628, 1743, 1516, 0, 1711,
	0, 0, 1675, 1770, 1588, 206, 0, 1512, 1513, 1514,
	0, 1618, 1619, 0, 0, 1729, 1728, 1727, 1730, 0,
	1764, 1762, 1765, 1531, 1552, 1574, 1624, 1625, 1627, 1659,
	1660, 1705, 1678, 1687, 1561, 1620, 315, 175, 186, 198,
	217, 215, 229, 258, 281, 286, 313, 347, 352, 372,
	373, 374, 376, 219, 0, 222, 197, 330, 196, 271,
	251, 314, 380, 381, 323, 212, 1646, 169, 180, 265,
	1771, 328, 234, 1499, 1507, 1534, 1542, 1543, 1544, 1545,
	1550, 1557, 1565, 1576, 1577, 1585, 1591, 1592, 1593, 1594,
	1603, 1605, 1606, 1607, 1608, 1609, 1613, 1614, 1630, 1644,
	1645, 1652, 1653, 0, 1682, 1685, 1694, 1699, 1702, 1708,
	1710, 1717, 1722, 1724, 1761, 1769, 1774, 398, 216, 1626,
	1651, 1689, 181, 190, 201, 214, 226, 233, 244, 247,
	252, 253, 255, 259, 273, 275, 276, 277, 278, 296,
	297, 301, 302, 305, 306, 310, 311, 312, 316, 317,
	324, 0, 331, 338, 339, 340, 341, 342, 350, 351,
	353, 354, 361, 389, 390, 403, 404, 1735, 1599, 166,
	0, 0, 172, 0, 0, 0, 0, 0, 1584, 171,
	1731, 1766, 1663, 1677, 1747, 1709, 377, 1602, 1751, 1551,
	1581, 1768, 1587, 1590, 1671, 1517, 1640, 304, 1578, 1518,
	1501, 1556, 1505, 1569, 1506, 1553, 221, 1549, 1712, 1643,
	1749, 1622, 1664, 1674, 220, 208, 1632, 1631, 1737, 1567,
	1566, 1669, 1726, 1748, 1621, 0, 1758, 267, 1723, 0,
	401, 359, 287, 0, 0, 1617, 1732, 1638, 1701, 1600,
	1673, 1533, 1656, 1753, 1579, 1665, 1754, 0, 0, 0,
	0, 0, 994, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1661, 1745, 1572, 0, 1612, 1670, 1773,
	1504, 1657, 0, 1509, 1520, 1767, 1738, 1563, 1564, 225,
	0, 0, 0, 0, 0, 0, 0, 1615, 1639, 1691,
	1597, 396, 1676, 1686, 1704, 1589, 322, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 1558, 0, 1654, 0,
	0, 0, 1525, 1511, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1611, 0, 0, 0,
	1532, 1502, 1560, 1693, 1503, 1500, 288, 1521, 1706, 1736,
	1598, 256, 0, 1742, 1596, 1595, 1680, 1526, 1716, 1582,
	264, 1524, 165, 1519, 1527, 1580, 299, 1690, 1698, 0,
	168, 266, 1713, 1554, 1571, 209, 0, 334, 1666, 395,
	0, 236, 1647, 333, 268, 388, 1681, 1744, 394, 1583,
	371, 402, 406, 232, 1623, 200, 356, 223, 218, 1562,
	1703, 1508, 241, 321, 213, 260, 1601, 1672, 1555, 205,
	1684, 1655, 1718, 355, 385, 170, 284, 386, 405, 188,
	378, 285, 292, 202, 204, 203, 182, 349, 384, 194,
	207, 1714, 1697, 1720, 1548, 1528, 1539, 1529, 1570, 1746,
	250, 242, 1721, 1719, 1573, 308, 191, 1636, 1629, 1616,
	399, 0, 344, 343, 1586, 249, 1700, 0, 0, 329,
	0, 257, 173, 1725, 408, 187, 262, 379, 0, 235,
	298, 211, 1668, 309, 1568, 167, 325, 280, 282, 279,
	283, 239, 0, 0, 1696, 327, 346, 383, 189, 362,
	0, 0, 0, 0, 337, 0, 0, 1752, 274, 227,
	231, 243, 254, 1667, 332, 363, 400, 1658, 184, 336,
	364, 375, 365, 368, 366, 367, 176, 370, 393, 195,
	345, 348, 407, 1692, 183, 178, 1740, 1715, 1649, 1604,
	1610, 1510, 0, 177, 1688, 1559, 1575, 1547, 1662, 1546,
	238, 1679, 391, 392, 210, 409, 1522, 1760, 179, 1523,
	1759, 295, 303, 294, 1763, 387, 1741, 1650, 1635, 1633,
	1515, 1739, 1648, 1634, 263, 230, 245, 319, 270, 320,
	246, 290, 289, 291, 272, 1637, 0, 174, 0, 360,
	1750, 1775, 369, 192, 1541, 1707, 382, 1982, 326, 193,
	237, 228, 318, 293, 185, 248, 358, 261, 269, 1683,
	1772, 307, 335, 199, 397, 357, 224, 1537, 300, 1540,
	1535, 1538, 1536, 1641, 1642, 1755, 1756, 1757, 1695, 1530,
	0, 1733, 1734, 0, 1628, 1743, 1516, 0, 1711, 0,
	0, 1675, 1770, 1588, 206, 0, 1512, 1513, 1514, 0,
	1618, 1619, 0, 0, 1729, 1728, 1727, 1730, 0, 1764,
	1762, 1765, 1531, 1552, 1574, 1624, 1625, 1627, 1659, 1660,
	1705, 1678, 1687, 1561, 1620, 315, 175, 186, 198, 217,
	215, 229, 258, 281, 286, 313, 347, 352, 372, 373,
	374, 376, 219, 0, 222, 197, 330, 196, 271, 251,
	314, 380, 381, 323, 212, 1646, 169, 180, 265, 1771,
	328, 234, 1499, 1507, 1534, 1542, 1543, 1544, 1545, 1550,
	1557, 1565, 1576, 1577, 1585, 1591, 1592, 1593, 1594, 1603,
	1605, 1606, 1607, 1608, 1609, 1613, 1614, 1630, 1644, 1645,
	1652, 1653, 0, 1682, 1685, 1694, 1699, 1702, 1708, 1710,
	1717, 1722, 1724, 1761, 1769, 1774, 398, 216, 1626, 1651,
	1689, 181, 190, 201, 214, 226, 233, 244, 247, 252,
	253, 255, 259, 273, 275, 276, 277, 278, 296, 297,
	301, 302, 305, 306, 310, 311, 312, 316, 317, 324,
	0, 331, 338, 339, 340, 341, 342, 350, 351, 353,
	354, 361, 389, 390, 403, 404, 1735, 1599, 166, 0,
	0, 172, 0, 0, 0, 0, 0, 1584, 171, 1731,
	1766, 1663, 1677, 1747, 1709, 377, 1602, 1751, 1551, 1581,
	1768, 1587, 1590, 1671, 1517, 1640, 304, 1578, 1518, 1501,
	1556, 1505, 1569, 1506, 1553, 221, 1549, 1712, 1643, 1749,
	1622, 1664, 1674, 220, 208, 1632, 1631, 1737, 1567, 1566,
	1669, 1726, 1748, 1621, 0, 1758, 267, 1723, 0, 401,
	359, 287, 0, 0, 1617, 1732, 1638, 1701, 1600, 1673,
	1533, 1656, 1753, 1579, 1665, 1754, 0, 0, 0, 0,
	0, 994, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1661, 1745, 1572, 0, 1612, 1670, 1773, 1504,
	1657, 0, 1509, 1520, 1767, 1738, 1563, 1564, 225, 0,
	0, 0, 0, 0, 0, 0, 1615, 1639, 1691, 1597,
	396, 1676, 1686, 1704, 1589, 322, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 1558, 0, 1654, 0, 0,
	0, 1525, 1511, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1611, 0, 0, 0, 1532,
	1502, 1560, 1693, 1503, 1500, 288, 1521, 1706, 1736, 1598,
	256, 0, 1742, 1596, 1595, 1680, 1526, 1716, 1582, 264,
	1524, 165, 1519, 1527, 1580, 299, 1690, 1698, 0, 168,
	266, 1713, 1554, 1571, 209, 0, 334, 1666, 395, 0,
	236, 1647, 333, 268, 388, 1681, 1744, 394, 1583, 371,
	402, 406, 232, 1623, 200, 356, 223, 218, 1562, 1703,
	1508, 241, 321, 213, 260, 1601, 1672, 1555, 205, 1684,
	1655, 1718, 355, 385, 170, 284, 386, 405, 188, 378,
	285, 292, 202, 204, 203, 182, 349, 384, 194, 207,
	1714, 1697, 1720, 1548, 1528, 1539, 1529, 1570, 1746, 250,
	242, 1721, 1719, 1573, 308, 191, 1636, 1629, 1616, 399,
	0, 344, 343, 1586, 249, 1700, 0, 0, 329, 0,
	257, 173, 1725, 408, 187, 262, 379, 0, 235, 298,
	211, 1668, 309, 1568, 167, 325, 280, 282, 279, 283,
	239, 0, 0, 1696, 327, 346, 383, 189, 362, 0,
	0, 0, 0, 337, 0, 0, 1752, 274, 227, 231,
	243, 254, 1667, 332, 363, 400, 1658, 184, 336, 364,
	375, 365, 368, 366, 367, 176, 370, 393, 195, 345,
	348, 407, 1692, 183, 178, 1740, 1715, 1649, 1604, 1610,
	1510, 0, 177, 1688, 1559, 1575, 1547, 1662, 1546, 238,
	1679, 391, 392, 210, 409, 1522, 1760, 179, 1523, 1759,
	295, 303, 294, 1763, 387, 1741, 1650, 1635, 1633, 1515,
	1739, 1648, 1634, 263, 230, 245, 319, 270, 320, 246,
	290, 289, 291, 272, 1637, 0, 174, 0, 360, 1750,
	1775, 369, 192, 1541, 1707, 382, 0, 326, 193, 237,
	228, 318, 293, 185, 248, 358, 261, 269, 1683, 1772,
	307, 335, 199, 397, 357, 224, 1537, 300, 1540, 1535,
	1538, 1536, 1641, 1642, 1755, 1756, 1757, 1695, 1530, 0,
	1733, 1734, 0, 1628, 1743, 1516, 0, 1711, 0, 0,
	1675, 1770, 1588, 206, 0, 1512, 1513, 1514, 0, 1618,
	1619, 0, 0, 1729, 1728, 1727, 1730, 0, 1764, 1762,
	1765, 1531, 1552, 1574, 1624, 1625, 1627, 1659, 1660, 1705,
	1678, 1687, 1561, 1620, 315, 175, 186, 198, 217, 215,
	229, 258, 281, 286, 313, 347, 352, 372, 373, 374,
	376, 219, 0, 222, 197, 330, 196, 271, 251, 314,
	380, 381, 323, 212, 1646, 169, 180, 265, 1771, 328,
	234, 1499, 1507, 1534, 1542, 1543, 1544, 1545, 1550, 1557,
	1565, 1576, 1577, 1585, 1591, 1592, 1593, 1594, 1603, 1605,
	1606, 1607, 1608, 1609, 1613, 1614, 1630, 1644, 1645, 1652,
	1653, 0, 1682, 1685, 1694, 1699, 1702, 1708, 1710, 1717,
	1722, 1724, 1761, 1769, 1774, 398, 216, 1626, 1651, 1689,
	181, 190, 201, 214, 226, 233, 244, 247, 252, 253,
	255, 259, 273, 275, 276, 277, 278, 296, 297, 301,
	302, 305, 306, 310, 311, 312, 316, 317, 324, 0,
	331, 338, 339, 340, 341, 342, 350, 351, 353, 354,
	361, 389, 390, 403, 404, 1735, 1599, 166, 0, 0,
	172, 0, 0, 0, 0, 0, 1584, 171, 1731, 1766,
	1663, 1677, 1747, 1709, 377, 1602, 1751, 1551, 1581, 1768,
	1587, 1590, 1671, 1517, 1640, 304, 1578, 1518, 1501, 1556,
	1505, 1569, 1506, 1553, 221, 1549, 1712, 1643, 1749, 1622,
	1664, 1674, 220, 208, 1632, 1631, 1737, 1567, 1566, 1669,
	1726, 1748, 1621, 0, 1758, 267, 1723, 0, 401, 359,
	287, 0, 0, 1617, 1732, 1638, 1701, 1600, 1673, 1533,
	1656, 1753, 1579, 1665, 1754, 0, 0, 0, 0, 0,
	3523, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1661, 1745, 1572, 0, 1612, 1670, 1773, 1504, 1657,
	0, 1509, 1520, 1767, 1738, 1563, 1564, 225, 0, 0,
	0, 0, 0, 0, 0, 1615, 1639, 1691, 1597, 396,
	1676, 1686, 1704, 1589, 322, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 1558, 0, 1654, 0, 0, 0,
	1525, 1511, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1611, 0, 0, 0, 1532, 1502,
	1560, 1693, 1503, 1500, 288, 1521, 1706, 1736, 1598, 256,
	0, 1742, 1596, 1595, 1680, 1526, 1716, 1582, 264, 1524,
	165, 1519, 1527, 1580, 299, 1690, 1698, 0, 168, 266,
	1713, 1554, 1571, 209, 0, 334, 1666, 395, 0, 236,
	1647, 333, 268, 388, 1681, 1744, 394, 1583, 371, 402,
	406, 232, 1623, 200, 356, 223, 218, 1562, 1703, 1508,
	241, 321, 213, 260, 1601, 1672, 1555, 205, 1684, 1655,
	1718, 355, 385, 170, 284, 386, 405, 188, 378, 285,
	292, 202, 204, 203, 182, 349, 384, 194, 207, 1714,
	1697, 1720, 1548, 1528, 1539, 3526, 3527, 3528, 250, 242,
	1721, 1719, 1573, 308, 191, 1636, 1629, 1616, 399, 0,
	344, 343, 1586, 249, 1700, 0, 0, 329, 0, 257,
	173, 1725, 408, 187, 262, 379, 0, 235, 298, 211,
	1668, 309, 1568, 167, 325, 280, 282, 279, 283, 239,
	0, 0, 1696, 327, 346, 383, 189, 362, 0, 0,
	0, 0, 337, 0, 0, 1752, 274, 227, 231, 243,
	254, 1667, 332, 363, 400, 1658, 184, 336, 364, 375,
	365, 368, 366, 367, 176, 370, 393, 195, 345, 348,
	407, 1692, 183, 178, 1740, 1715, 1649, 1604, 1610, 1510,
	0, 177, 1688, 1559, 1575, 1547, 1662, 1546, 238, 1679,
	391, 392, 210, 409, 1522, 1760, 179, 1523, 1759, 295,
	303, 294, 1763, 387, 1741, 1650, 1635, 1633, 1515, 1739,
	1648, 1634, 263, 230, 245, 319, 270, 320, 246, 290,
	289, 291, 272, 1637, 0, 174, 0, 360, 1750, 1775,
	369, 192, 1541, 1707, 382, 0, 326, 193, 237, 228,
	318, 293, 185, 248, 358, 261, 269, 1683, 1772, 307,
	335, 199, 397, 357, 224, 1537, 300, 1540, 1535, 1538,
	1536, 1641, 1642, 1755, 1756, 1757, 1695, 1530, 0, 1733,
	1734, 0, 1628, 1743, 1516, 0, 1711, 0, 0, 1675,
	1770, 1588, 206, 0, 1512, 1513, 1514, 0, 1618, 1619,
	0, 0, 1729, 1728, 1727, 1730, 0, 1764, 1762, 1765,
	1531, 1552, 1574, 1624, 1625, 1627, 1659, 1660, 1705, 1678,
	1687, 1561, 1620, 315, 175, 186, 198, 217, 215, 229,
	258, 281, 286, 313, 347, 352, 372, 373, 374, 376,
	219, 0, 222, 197, 330, 196, 271, 251, 314, 380,
	381, 323, 212, 1646, 169, 180, 265, 1771, 328, 234,
	1499, 1507, 1534, 1542, 1543, 1544, 1545, 1550, 1557, 1565,
	1576, 1577, 1585, 1591, 1592, 1593, 1594, 1603, 1605, 1606,
	1607, 1608, 1609, 1613, 1614, 1630, 1644, 1645, 1652, 1653,
	0, 1682, 1685, 1694, 1699, 1702, 1708, 1710, 1717, 1722,
	1724, 1761, 1769, 1774, 398, 216, 1626, 1651, 1689, 181,
	190, 201, 214, 226, 233, 244, 247, 252, 253, 255,
	259, 273, 275, 276, 277, 278, 296, 297, 301, 302,
	305, 306, 310, 311, 312, 316, 317, 324, 0, 331,
	338, 339, 340, 341, 342, 350, 351, 353, 354, 361,
	389, 390, 403, 404, 1735, 1599, 166, 0, 0, 172,
	0, 0, 0, 0, 0, 1584, 171, 1731, 1766, 1663,
	1677, 1747, 1709, 377, 1602, 1751, 1551, 1581, 1768, 1587,
	1590, 1671, 1517, 1640, 304, 1578, 1518, 1501, 1556, 1505,
	1569, 1506, 1553, 221, 1549, 1712, 1643, 1749, 1622, 1664,
	1674, 220, 208, 1632, 1631, 1737, 1567, 1566, 1669, 1726,
	1748, 1621, 0, 1758, 267, 1723, 0, 401, 359, 287,
	0, 0, 1617, 1732, 1638, 1701, 1600, 1673, 1533, 1656,
	1753, 1579, 1665, 1754, 0, 0, 0, 0, 0, 2759,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1661, 1745, 1572, 0, 1612, 1670, 1773, 1504, 1657, 0,
	1509, 1520, 1767, 1738, 1563, 1564, 225, 0, 0, 0,
	0, 0, 0, 0, 1615, 1639, 1691, 1597, 396, 1676,
	1686, 1704, 1589, 322, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 1558, 0, 1654, 0, 0, 0, 1525,
	1511, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1611, 0, 0, 0, 1532, 1502, 1560,
	1693, 1503, 1500, 288, 1521, 1706, 1736, 1598, 256, 0,
	1742, 1596, 1595, 1680, 1526, 1716, 1582, 264, 1524, 165,
	1519, 1527, 1580, 299, 1690, 1698, 0, 168, 266, 1713,
	1554, 1571, 209, 0, 334, 1666, 395, 0, 236, 1647,
	333, 268, 388, 1681, 1744, 394, 1583, 371, 402, 406,
	232, 1623, 200, 356, 223, 218, 1562, 1703, 1508, 241,
	321, 213, 260, 1601, 1672, 1555, 205, 1684, 1655, 1718,
	355, 385, 170, 284, 386, 405, 188, 378, 285, 292,
	202, 204, 203, 182, 349, 384, 194, 207, 1714, 1697,
	1720, 1548, 1528, 1539, 1529, 1570, 1746, 250, 242, 1721,
	1719, 1573, 308, 191, 1636, 1629, 1616, 399, 0, 344,
	343, 1586, 249, 1700, 0, 0, 329, 0, 257, 173,
	1725, 408, 187, 262, 379, 0, 235, 298, 211, 1668,
	309, 1568, 167, 325, 280, 282, 279, 283, 239, 0,
	0, 1696, 327, 346, 383, 189, 362, 0, 0, 0,
	0, 337, 0, 0, 1752, 274, 227, 231, 243, 254,
	1667, 332, 363, 400, 1658, 184, 336, 364, 375, 365,
	368, 366, 367, 176, 370, 393, 195, 345, 348, 407,
	1692, 183, 178, 1740, 1715, 1649, 1604, 1610, 1510, 0,
	177, 1688, 1559, 1575, 1547, 1662, 1546, 238, 1679, 391,
	392, 210, 409, 1522, 1760, 179, 1523, 1759, 295, 303,
	294, 1763, 387, 1741, 1650, 1635, 1633, 1515, 1739, 1648,
	1634, 263, 230, 245, 319, 270, 320, 246, 290, 289,
	291, 272, 1637, 0, 174, 0, 360, 1750, 1775, 369,
	192, 1541, 1707, 382, 0, 326, 193, 237, 228, 318,
	293, 185, 248, 358, 261, 269, 1683, 1772, 307, 335,
	199, 397, 357, 224, 1537, 300, 1540, 1535, 1538, 1536,
	1641, 1642, 1755, 1756, 1757, 1695, 1530, 0, 1733, 1734,
	0, 1628, 1743, 1516, 0, 1711, 0, 0, 1675, 1770,
	1588, 206, 0, 1512, 1513, 1514, 0, 1618, 1619, 0,
	0, 1729, 1728, 1727, 1730, 0, 1764, 1762, 1765, 1531,
	1552, 1574, 1624, 1625, 1627, 1659, 1660, 1705, 1678, 1687,
	1561, 1620, 315, 175, 186, 198, 217, 215, 229, 258,
	281, 286, 313, 347, 352, 372, 373, 374, 376, 219,
	0, 222, 197, 330, 196, 271, 251, 314, 380, 381,
	323, 212, 1646, 169, 180, 265, 1771, 328, 234, 1499,
	1507, 1534, 1542, 1543, 1544, 1545, 1550, 1557, 1565, 1576,
	1577, 1585, 1591, 1592, 1593, 1594, 1603, 1605, 1606, 1607,
	1608, 1609, 1613, 1614, 1630, 1644, 1645, 1652, 1653, 0,
	1682, 1685, 1694, 1699, 1702, 1708, 1710, 1717, 1722, 1724,
	1761, 1769, 1774, 398, 216, 1626, 1651, 1689, 181, 190,
	201, 214, 226, 233, 244, 247, 252, 253, 255, 259,
	273, 275, 276, 277, 278, 296, 297, 301, 302, 305,
	306, 310, 311, 312, 316, 317, 324, 0, 331, 338,
	339, 340, 341, 342, 350, 351, 353, 354, 361, 389,
	390, 403, 404, 1735, 1599, 166, 0, 0, 172, 0,
	0, 0, 0, 0, 1584, 171, 1731, 1766, 1663, 1677,
	1747, 1709, 377, 1602, 1751, 1551, 1581, 1768, 1587, 1590,
	1671, 1517, 1640, 304, 1578, 1518, 1501, 1556, 1505, 1569,
	1506, 1553, 221, 1549, 1712, 1643, 1749, 1622, 1664, 1674,
	220, 208, 1632, 1631, 1737, 1567, 1566, 1669, 1726, 1748,
	1621, 0, 1758, 267, 1723, 0, 401, 359, 287, 0,
	0, 1617, 1732, 1638, 1701, 1600, 1673, 1533, 1656, 1753,
	1579, 1665, 1754, 0, 0, 0, 0, 0, 139, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1661,
	1745, 1572, 0, 1612, 1670, 1773, 1504, 1657, 0, 1509,
	1520, 1767, 1738, 1563, 1564, 225, 0, 0, 0, 0,
	0, 0, 0, 1615, 1639, 1691, 1597, 396, 1676, 1686,
	1704, 1589, 322, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 1558, 0, 1654, 0, 0, 0, 1525, 1511,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1611, 0, 0, 0, 1532, 1502, 1560, 1693,
	1503, 1500, 288, 1521, 1706, 1736, 1598, 256, 0, 1742,
	1596, 1595, 1680, 1526, 1716, 1582, 264, 1524, 165, 1519,
	1527, 1580, 299, 1690, 1698, 0, 168, 266, 1713, 1554,
	1571, 209, 0, 334, 1666, 395, 0, 236, 1647, 333,
	268, 388, 1681, 1744, 394, 1583, 371, 402, 406, 232,
	1623, 200, 356, 223, 218, 1562, 1703, 1508, 241, 321,
	213, 260, 1601, 1672, 1555, 205, 1684, 1655, 1718, 355,
	385, 170, 284, 386, 405, 188, 378, 285, 292, 202,
	204, 203, 182, 349, 384, 194, 207, 1714, 1697, 1720,
	1548, 1528, 1539, 1529, 1570, 1746, 250, 242, 1721, 1719,
	1573, 308, 191, 1636, 1629, 1616, 399, 0, 344, 343,
	1586, 249, 1700, 0, 0, 329, 0, 257, 173, 1725,
	408, 187, 262, 379, 0, 235, 298, 211, 1668, 309,
	1568, 167, 325, 280, 282, 279, 283, 239, 0, 0,
	1696, 327, 346, 383, 189, 362, 0, 0, 0, 0,
	337, 0, 0, 1752, 274, 227, 231, 243, 254, 1667,
	332, 363, 400, 1658, 184, 336, 364, 375, 365, 368,
	366, 367, 176, 370, 393, 195, 345, 348, 407, 1692,
	183, 178, 1740, 1715, 1649, 1604, 1610, 1510, 0, 177,
	1688, 1559, 1575, 1547, 1662, 1546, 238, 1679, 391, 392,
	210, 409, 1522, 1760, 179, 1523, 1759, 295, 303, 294,
	1763, 387, 1741, 1650, 1635, 1633, 1515, 1739, 1648, 1634,
	263, 230, 245, 319, 270, 320, 246, 290, 289, 291,
	272, 1637, 0, 174, 0, 360, 1750, 1775, 369, 192,
	1541, 1707, 382, 0, 326, 193, 237, 228, 318, 293,
	185, 248, 358, 261, 269, 1683, 1772, 307, 335, 199,
	397, 357, 224, 1537, 300, 1540, 1535, 1538, 1536, 1641,
	1642, 1755, 1756, 1757, 1695, 1530, 0, 1733, 1734, 0,
	1628, 1743, 1516, 0, 1711, 0, 0, 1675, 1770, 1588,
	206, 0, 1512, 1513, 1514, 0, 1618, 1619, 0, 0,
	1729, 1728, 1727, 1730, 0, 1764, 1762, 1765, 1531, 1552,
	1574, 1624, 1625, 1627, 1659, 1660, 1705, 1678, 1687, 1561,
	1620, 315, 175, 186, 198, 217, 215, 229, 258, 281,
	286, 313, 347, 352, 372, 373, 374, 376, 219, 0,
	222, 197, 330, 196, 271, 251, 314, 380, 381, 323,
	212, 1646, 169, 180, 265, 1771, 328, 234, 1499, 1507,
	1534, 1542, 1543, 1544, 1545, 1550, 1557, 1565, 1576, 1577,
	1585, 1591, 1592, 1593, 1594, 1603, 1605, 1606, 1607, 1608,
	1609, 1613, 1614, 1630, 1644, 1645, 1652, 1653, 0, 1682,
	1685, 1694, 1699, 1702, 1708, 1710, 1717, 1722, 1724, 1761,
	1769, 1774, 398, 216, 1626, 1651, 1689, 181, 190, 201,
	214, 226, 233, 244, 247, 252, 253, 255, 259, 273,
	275, 276, 277, 278, 296, 297, 301, 302, 305, 306,
	310, 311, 312, 316, 317, 324, 0, 331, 338, 339,
	340, 341, 342, 350, 351, 353, 354, 361, 389, 390,
	403, 404, 1735, 1599, 166, 0, 0, 172, 377, 0,
	0, 0, 0, 1584, 171, 1731, 1766, 1663, 1677, 304,
	0, 0, 0, 0, 0, 0, 0, 0, 221, 0,
	0, 0, 0, 0, 0, 0, 220, 208, 0, 0,
	0, 0, 0, 0, 0, 2103, 2107, 0, 0, 267,
	0, 998, 401, 359, 287, 1001, 1000, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 994, 0, 0, 0, 0, 0,
	0, 0, 0, 147, 0, 0, 0, 0, 999, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 396, 0, 0, 0, 0, 322, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 0,
	0, 0, 2106, 256, 164, 0, 0, 0, 2100, 0,
	2101, 2102, 264, 1002, 165, 0, 2098, 2105, 299, 0,
	0, 152, 168, 266, 0, 0, 0, 209, 991, 334,
	0, 395, 997, 236, 0, 333, 268, 388, 0, 0,
	394, 0, 371, 402, 406, 232, 0, 200, 356, 223,
	218, 0, 0, 0, 241, 321, 213, 260, 0, 0,
	0, 205, 0, 0, 0, 355, 385, 170, 284, 386,
	405, 188, 378, 285, 292, 202, 204, 203, 182, 349,
	384, 194, 207, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 242, 0, 0, 0, 308, 191, 0,
	0, 0, 399, 154, 344, 343, 0, 249, 0, 155,
	146, 329, 156, 257, 173, 0, 408, 187, 262, 379,
	996, 235, 298, 211, 0, 309, 0, 167, 325, 280,
	282, 279, 283, 239, 150, 157, 0, 327, 346, 383,
	189, 362, 148, 149, 151, 159, 337, 160, 161, 0,
	274, 227, 231, 243, 254, 0, 332, 363, 400, 0,
	184, 336, 364, 375, 365, 368, 366, 367, 176, 370,
	393, 195, 345, 348, 407, 0, 183, 178, 0, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 238, 0, 391, 392, 210, 409, 0, 0,
	179, 0, 0, 295, 303, 294, 0, 387, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 230, 245, 319,
	270, 320, 246, 290, 289, 291, 272, 0, 0, 174,
	0, 360, 0, 0, 369, 192, 0, 0, 382, 153,
	326, 193, 237, 228, 318, 293, 185, 248, 358, 261,
	269, 0, 0, 307, 335, 199, 397, 357, 224, 0,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 162, 163, 0, 0, 0, 206, 141, 0, 0,
	0, 142, 0, 0, 143, 144, 0, 0, 0, 0,
	145, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 175, 186,
	198, 217, 215, 229, 258, 281, 286, 313, 347, 352,
	372, 373, 374, 376, 219, 0, 222, 197, 330, 196,
	271, 251, 314, 380, 381, 323, 212, 0, 169, 180,
	265, 0, 328, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 398, 216,
	0, 0, 0, 181, 190, 201, 214, 226, 233, 244,
	247, 252, 253, 255, 259, 273, 275, 276, 277, 278,
	296, 297, 301, 302, 305, 306, 310, 311, 312, 316,
	317, 324, 158, 331, 338, 339, 340, 341, 342, 350,
	351, 353, 354, 361, 389, 390, 403, 404, 377, 0,
	166, 0, 0, 172, 0, 0, 0, 0, 0, 304,
	171, 0, 0, 0, 1235, 0, 0, 0, 221, 0,
	0, 0, 0, 0, 0, 0, 220, 208, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 998, 401, 359, 287, 1001, 1000, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1236, 0, 1239, 0, 0, 0,
	0, 0, 0, 147, 0, 0, 0, 0, 999, 0,
	1231, 1232, 1230, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 0, 0, 0, 0, 0, 0, 1233,
	0, 0, 0, 396, 0, 0, 0, 0, 322, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 0,
	0, 0, 0, 256, 164, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 165, 0, 0, 0, 299, 0,
	0, 152, 168, 266, 0, 0, 0, 209, 0, 334,
	0, 395, 997, 236, 0, 333, 268, 388, 0, 0,
	394, 0, 371, 402, 406, 232, 0, 200, 356, 223,
	218, 0, 0, 0, 241, 321, 213, 260, 0, 0,
	0, 205, 0, 0, 0, 355, 385, 170, 284, 386,
	405, 188, 378, 285, 292, 202, 204, 203, 182, 349,
	384, 194, 207, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 242, 0, 0, 0, 308, 191, 0,
	0, 0, 399, 154, 344, 343, 0, 249, 0, 155,
	146, 329, 156, 257, 173, 0, 408, 187, 262, 379,
	996, 235, 298, 211, 0, 309, 0, 167, 325, 280,
	282, 279, 283, 239, 150, 157, 0, 327, 346, 383,
	189, 362, 148, 149, 151, 159, 337, 160, 161, 0,
	274, 227, 231, 243, 254, 0, 332, 363, 400, 0,
	184, 336, 364, 375, 365, 368, 366, 367, 176, 370,
	393, 195, 345, 348, 407, 0, 183, 178, 0, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 238, 0, 391, 392, 210, 409, 0, 0,
	179, 0, 0, 295, 303, 294, 0, 387, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 230, 245, 319,
	270, 320, 246, 290, 289, 291, 272, 0, 0, 174,
	0, 360, 0, 0, 369, 192, 0, 0, 382, 153,
	326, 193, 237, 228, 318, 293, 185, 248, 358, 261,
	269, 0, 0, 307, 335, 199, 397, 357, 224, 0,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 162, 163, 0, 0, 0, 206, 141, 0, 0,
	0, 142, 0, 0, 143, 144, 0, 0, 0, 0,
	145, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 175, 186,
	198, 217, 215, 229, 258, 281, 286, 313, 347, 352,
	372, 373, 374, 376, 219, 0, 222, 197, 330, 196,
	271, 251, 314, 380, 381, 323, 212, 0, 169, 180,
	265, 0, 328, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 398, 216,
	0, 0, 0, 181, 190, 201, 214, 226, 233, 244,
	247, 252, 253, 255, 259, 273, 275, 276, 277, 278,
	296, 297, 301, 302, 305, 306, 310, 311, 312, 316,
	317, 324, 158, 331, 338, 339, 340, 341, 342, 350,
	351, 353, 354, 361, 389, 390, 403, 404, 377, 0,
	166, 0, 0, 172, 0, 0, 0, 0, 0, 304,
	171, 0, 0, 0, 0, 0, 0, 0, 221, 0,
	0, 0, 0, 0, 0, 0, 220, 208, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 998, 401, 359, 287, 1001, 1000, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 994, 0, 0, 0, 0, 0,
	0, 0, 0, 147, 0, 0, 0, 0, 999, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 396, 0, 0, 0, 0, 322, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 0,
	0, 0, 0, 256, 164, 0, 0, 0, 0, 0,
	0, 0, 264, 1002, 165, 0, 992, 0, 299, 0,
	0, 152, 168, 266, 0, 0, 0, 209, 991, 334,
	0, 395, 997, 236, 0, 333, 268, 388, 0, 0,
	394, 0, 371, 402, 406, 232, 0, 200, 356, 223,
	218, 0, 0, 0, 241, 321, 213, 260, 0, 0,
	0, 205, 0, 0, 0, 355, 385, 170, 284, 386,
	405, 188, 378, 285, 292, 202, 204, 203, 182, 349,
	384, 194, 207, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 242, 0, 0, 0, 308, 191, 0,
	0, 0, 399, 154, 344, 343, 0, 249, 0, 155,
	146, 329, 156, 257, 173, 0, 408, 187, 262, 379,
	996, 235, 298, 211, 0, 309, 0, 167, 325, 280,
	282, 279, 283, 239, 150, 157, 0, 327, 346, 383,
	189, 362, 148, 149, 151, 159, 337, 160, 161, 0,
	274, 227, 231, 243, 254, 0, 332, 363, 400, 0,
	184, 336, 364, 375, 365, 368, 366, 367, 176, 370,
	393, 195, 345, 348, 407, 0, 183, 178, 0, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 238, 0, 391, 392, 210, 409, 0, 0,
	179, 0, 0, 295, 303, 294, 0, 387, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 230, 245, 319,
	270, 320, 246, 290, 289, 291, 272, 0, 0, 174,
	0, 360, 0, 0, 369, 192, 0, 0, 382, 153,
	326, 193, 237, 228, 318, 293, 185, 248, 358, 261,
	269, 0, 0, 307, 335, 199, 397, 357, 224, 0,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 162, 163, 0, 0, 0, 206, 141, 0, 0,
	0, 142, 0, 0, 143, 144, 0, 0, 0, 0,
	145, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 175, 186,
	198, 217, 215, 229, 258, 281, 286, 313, 347, 352,
	372, 373, 374, 376, 219, 0, 222, 197, 330, 196,
	271, 251, 314, 380, 381, 323, 212, 0, 169, 180,
	265, 0, 328, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 398, 216,
	0, 0, 0, 181, 190, 201, 214, 226, 233, 244,
	247, 252, 253, 255, 259, 273, 275, 276, 277, 278,
	296, 297, 301, 302, 305, 306, 310, 311, 312, 316,
	317, 324, 158, 331, 338, 339, 340, 341, 342, 350,
	351, 353, 354, 361, 389, 390, 403, 404, 377, 0,
	166, 0, 0, 172, 0, 0, 0, 0, 0, 304,
	171, 0, 0, 0, 0, 0, 0, 0, 221, 0,
	0, 0, 0, 0, 0, 0, 220, 208, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 998, 401, 359, 287, 1001, 1000, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1236, 0, 1239, 0, 0, 0,
	0, 0, 0, 147, 0, 0, 0, 0, 999, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 396, 0, 0, 0, 0, 322, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 0,
	0, 0, 0, 256, 164, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 165, 0, 0, 0, 299, 0,
	0, 152, 168, 266, 0, 0, 0, 209, 1931, 334,
	0, 395, 997, 236, 0, 333, 268, 388, 0, 0,
	394, 0, 371, 402, 406, 232, 0, 200, 356, 223,
	218, 0, 0, 0, 241, 321, 213, 260, 0, 0,
	0, 205, 0, 0, 0, 355, 385, 170, 284, 386,
	405, 188, 378, 285, 292, 202, 204, 203, 182, 349,
	384, 194, 207, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 242, 0, 0, 0, 308, 191, 0,
	0, 0, 399, 154, 344, 343, 0, 249, 0, 155,
	146, 329, 156, 257, 173, 0, 408, 187, 262, 379,
	996, 235, 298, 211, 0, 309, 0, 167, 325, 280,
	282, 279, 283, 239, 150, 157, 0, 327, 346, 383,
	189, 362, 148, 149, 151, 159, 337, 160, 161, 0,
	274, 227, 231, 243, 254, 0, 332, 363, 400, 0,
	184, 336, 364, 375, 365, 368, 366, 367, 176, 370,
	393, 195, 345, 348, 407, 0, 183, 178, 0, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 238, 0, 391, 392, 210, 409, 0, 0,
	179, 0, 0, 295, 303, 294, 0, 387, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 230, 245, 319,
	270, 320, 246, 290, 289, 291, 272, 0, 0, 174,
	0, 360, 0, 0, 369, 192, 0, 0, 382, 153,
	326, 193, 237, 228, 318, 293, 185, 248, 358, 261,
	269, 0, 0, 307, 335, 199, 397, 357, 224, 0,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 162, 163, 0, 0, 0, 206, 141, 0, 0,
	0, 142, 0, 0, 143, 144, 0, 0, 0, 0,
	145, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 175, 186,
	198, 217, 215, 229, 258, 281, 286, 313, 347, 352,
	372, 373, 374, 376, 219, 0, 222, 197, 330, 196,
	271, 251, 314, 380, 381, 323, 212, 0, 169, 180,
	265, 0, 328, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 398, 216,
	0, 0, 0, 181, 190, 201, 214, 226, 233, 244,
	247, 252, 253, 255, 259, 273, 275, 276, 277, 278,
	296, 297, 301, 302, 305, 306, 310, 311, 312, 316,
	317, 324, 158, 331, 338, 339, 340, 341, 342, 350,
	351, 353, 354, 361, 389, 390, 403, 404, 377, 0,
	166, 0, 0, 172, 0, 0, 0, 0, 0, 304,
	171, 0, 0, 0, 0, 0, 0, 0, 221, 0,
	0, 0, 0, 0, 0, 0, 220, 208, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 998, 401, 359, 287, 1001, 1000, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2879, 0, 0, 0, 0, 0,
	0, 0, 0, 147, 0, 0, 0, 0, 999, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 396, 0, 0, 0, 0, 322, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 0,
	0, 0, 0, 256, 164, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 165, 0, 0, 0, 299, 0,
	0, 152, 168, 266, 0, 0, 0, 209, 0, 334,
	0, 395, 997, 236, 0, 333, 268, 388, 0, 0,
	394, 0, 371, 402, 406, 232, 0, 200, 356, 223,
	218, 0, 0, 0, 241, 321, 213, 260, 0, 0,
	0, 205, 0, 0, 0, 355, 385, 170, 284, 386,
	405, 188, 378, 285, 292, 202, 204, 203, 182, 349,
	384, 194, 207, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 242, 0, 0, 0, 308, 191, 0,
	0, 0, 399, 154, 344, 343, 0, 249, 0, 155,
	146, 329, 156, 257, 173, 0, 408, 187, 262, 379,
	996, 235, 298, 211, 0, 309, 0, 167, 325, 280,
	282, 279, 283, 239, 150, 157, 0, 327, 346, 383,
	189, 362, 148, 149, 151, 159, 337, 160, 161, 0,
	274, 227, 231, 243, 254, 0, 332, 363, 400, 0,
	184, 336, 364, 375, 365, 368, 366, 367, 176, 370,
	393, 195, 345, 348, 407, 0, 183, 178, 0, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 238, 0, 391, 392, 210, 409, 0, 0,
	179, 0, 0, 295, 303, 294, 0, 387, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 230, 245, 319,
	270, 320, 246, 290, 289, 291, 272, 0, 0, 174,
	0, 360, 0, 0, 369, 192, 0, 0, 382, 153,
	326, 193, 237, 228, 318, 293, 185, 248, 358, 261,
	269, 0, 0, 307, 335, 199, 397, 357, 224, 0,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 162, 163, 0, 0, 0, 206, 141, 0, 0,
	0, 142, 0, 0, 143, 144, 0, 0, 0, 0,
	145, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 175, 186,
	198, 217, 215, 229, 258, 281, 286, 313, 347, 352,
	372, 373, 374, 376, 219, 0, 222, 197, 330, 196,
	271, 251, 314, 380, 381, 323, 212, 0, 169, 180,
	265, 0, 328, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 398, 216,
	0, 0, 0, 181, 190, 201, 214, 226, 233, 244,
	247, 252, 253, 255, 259, 273, 275, 276, 277, 278,
	296, 297, 301, 302, 305, 306, 310, 311, 312, 316,
	317, 324, 158, 331, 338, 339, 340, 341, 342, 350,
	351, 353, 354, 361, 389, 390, 403, 404, 377, 0,
	166, 0, 0, 172, 0, 0, 0, 0, 0, 304,
	171, 0, 0, 0, 0, 0, 0, 0, 221, 0,
	0, 0, 0, 0, 0, 0, 220, 208, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 998, 401, 359, 287, 1001, 1000, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2874, 0, 0, 0, 0, 0,
	0, 0, 0, 147, 0, 0, 0, 0, 999, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 396, 0, 0, 0, 0, 322, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 0,
	0, 0, 0, 256, 164, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 165, 0, 0, 0, 299, 0,
	0, 152, 168, 266, 0, 0, 0, 209, 0, 334,
	0, 395, 997, 236, 0, 333, 268, 388, 0, 0,
	394, 0, 371, 402, 406, 232, 0, 200, 356, 223,
	218, 0, 0, 0, 241, 321, 213, 260, 0, 0,
	0, 205, 0, 0, 0, 355, 385, 170, 284, 386,
	405, 188, 378, 285, 292, 202, 204, 203, 182, 349,
	384, 194, 207, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 242, 0, 0, 0, 308, 191, 0,
	0, 0, 399, 154, 344, 343, 0, 249, 0, 155,
	146, 329, 156, 257, 173, 0, 408, 187, 262, 379,
	996, 235, 298, 211, 0, 309, 0, 167, 325, 280,
	282, 279, 283, 239, 150, 157, 0, 327, 346, 383,
	189, 362, 148, 149, 151, 159, 337, 160, 161, 0,
	274, 227, 231, 243, 254, 0, 332, 363, 400, 0,
	184, 336, 364, 375, 365, 368, 366, 367, 176, 370,
	393, 195, 345, 348, 407, 0, 183, 178, 0, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 238, 0, 391, 392, 210, 409, 0, 0,
	179, 0, 0, 295, 303, 294, 0, 387, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 230, 245, 319,
	270, 320, 246, 290, 289, 291, 272, 0, 0, 174,
	0, 360, 0, 0, 369, 192, 0, 0, 382, 153,
	326, 193, 237, 228, 318, 293, 185, 248, 358, 261,
	269, 0, 0, 307, 335, 199, 397, 357, 224, 0,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 162, 163, 0, 0, 0, 206, 141, 0, 0,
	0, 142, 0, 0, 143, 144, 0, 0, 0, 0,
	145, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 175, 186,
	198, 217, 215, 229, 258, 281, 286, 313, 347, 352,
	372, 373, 374, 376, 219, 0, 222, 197, 330, 196,
	271, 251, 314, 380, 381, 323, 212, 0, 169, 180,
	265, 0, 328, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 398, 216,
	0, 0, 0, 181, 190, 201, 214, 226, 233, 244,
	247, 252, 253, 255, 259, 273, 275, 276, 277, 278,
	296, 297, 301, 302, 305, 306, 310, 311, 312, 316,
	317, 324, 158, 331, 338, 339, 340, 341, 342, 350,
	351, 353, 354, 361, 389, 390, 403, 404, 0, 0,
	166, 40, 377, 172, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 304, 0, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 0, 0, 0, 0, 0, 0,
	220, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2382, 267, 0, 0, 401, 359, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 86, 0, 0, 0, 0, 2065, 0,
	0, 0, 0, 0, 0, 0, 0, 147, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 322, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 0, 0, 0, 256, 164, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 165, 0,
	0, 0, 299, 0, 0, 152, 168, 266, 0, 0,
	0, 209, 0, 334, 0, 395, 0, 236, 0, 333,
	268, 388, 0, 0, 394, 0, 371, 402, 406, 232,
	0, 200, 356, 223, 218, 0, 0, 0, 241, 321,
	213, 260, 0, 0, 0, 205, 0, 0, 0, 355,
	385, 170, 284, 386, 405, 188, 378, 285, 292, 202,
	204, 203, 182, 349, 384, 194, 207, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 242, 0, 0,
	0, 308, 191, 0, 0, 0, 399, 154, 344, 343,
	0, 249, 0, 155, 146, 329, 156, 257, 173, 0,
	408, 187, 262, 379, 138, 235, 298, 211, 0, 309,
	0, 167, 325, 280, 282, 279, 283, 239, 150, 157,
	0, 327, 346, 383, 189, 362, 148, 149, 151, 159,
	337, 160, 161, 0, 274, 227, 231, 243, 254, 0,
	332, 363, 400, 0, 184, 336, 364, 375, 365, 368,
	366, 367, 176, 370, 393, 195, 345, 348, 407, 0,
	183, 178, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 238, 0, 391, 392,
	210, 409, 0, 0, 179, 0, 0, 295, 303, 294,
	0, 387, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 230, 245, 319, 270, 320, 246, 290, 289, 291,
	272, 0, 0, 174, 0, 360, 0, 0, 369, 192,
	0, 0, 382, 153, 326, 193, 237, 228, 318, 293,
	185, 248, 358, 261, 269, 0, 0, 307, 335, 199,
	397, 357, 224, 0, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 162, 163, 0, 0, 0,
	206, 141, 0, 0, 0, 142, 0, 0, 143, 144,
	0, 0, 0, 0, 145, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2066, 315, 175, 186, 198, 217, 215, 229, 258, 281,
	286, 313, 347, 352, 372, 373, 374, 376, 219, 0,
	222, 197, 330, 196, 271, 251, 314, 380, 381, 323,
	212, 0, 169, 180, 265, 533, 328, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 398, 216, 0, 0, 0, 181, 190, 201,
	214, 226, 233, 244, 247, 252, 253, 255, 259, 273,
	275, 276, 277, 278, 296, 297, 301, 302, 305, 306,
	310, 311, 312, 316, 317, 324, 158, 331, 338, 339,
	340, 341, 342, 350, 351, 353, 354, 361, 389, 390,
	403, 404, 377, 0, 166, 0, 0, 172, 0, 0,
	0, 0, 0, 304, 171, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 0, 0, 0, 0, 0, 0,
	220, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 401, 359, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 86, 0, 0, 0, 0, 2065, 0,
	0, 0, 0, 0, 0, 0, 0, 147, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 322, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 0, 0, 0, 256, 164, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 165, 0,
	0, 0, 299, 0, 0, 152, 168, 266, 0, 0,
	0, 209, 0, 334, 0, 395, 0, 236, 0, 333,
	268, 388, 0, 0, 394, 0, 371, 402, 406, 232,
	0, 200, 356, 223, 218, 0, 0, 0, 241, 321,
	213, 260, 0, 0, 0, 205, 0, 0, 0, 355,
	385, 170, 284, 386, 405, 188, 378, 285, 292, 202,
	204, 203, 182, 349, 384, 194, 207, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 242, 0, 0,
	0, 308, 191, 0, 0, 0, 399, 154, 344, 343,
	0, 249, 0, 155, 146, 329, 156, 257, 173, 0,
	408, 187, 262, 379, 138, 235, 298, 211, 0, 309,
	0, 167, 325, 280, 282, 279, 283, 239, 150, 157,
	0, 327, 346, 383, 189, 362, 148, 149, 151, 159,
	337, 160, 161, 0, 274, 227, 231, 243, 254, 0,
	332, 363, 400, 0, 184, 336, 364, 375, 365, 368,
	366, 367, 176, 370, 393, 195, 345, 348, 407, 0,
	183, 178, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 238, 0, 391, 392,
	210, 409, 0, 0, 179, 0, 0, 295, 303, 294,
	0, 387, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 230, 245, 319, 270, 320, 246, 290, 289, 291,
	272, 0, 0, 174, 0, 360, 0, 0, 369, 192,
	0, 0, 382, 153, 326, 193, 237, 228, 318, 293,
	185, 248, 358, 261, 269, 0, 0, 307, 335, 199,
	397, 357, 224, 0, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 162, 163, 0, 0, 0,
	206, 141, 0, 0, 0, 142, 0, 0, 143, 144,
	0, 0, 0, 0, 145, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3284,
	2066, 315, 175, 186, 198, 217, 215, 229, 258, 281,
	286, 313, 347, 352, 372, 373, 374, 376, 219, 0,
	222, 197, 330, 196, 271, 251, 314, 380, 381, 323,
	212, 0, 169, 180, 265, 0, 328, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 398, 216, 0, 0, 0, 181, 190, 201,
	214, 226, 233, 244, 247, 252, 253, 255, 259, 273,
	275, 276, 277, 278, 296, 297, 301, 302, 305, 306,
	310, 311, 312, 316, 317, 324, 158, 331, 338, 339,
	340, 341, 342, 350, 351, 353, 354, 361, 389, 390,
	403, 404, 377, 0, 166, 0, 0, 172, 0, 0,
	0, 0, 0, 304, 171, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 0, 0, 0, 0, 0, 0,
	220, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 401, 359, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 86, 0, 0, 0, 0, 2065, 0,
	0, 0, 0, 0, 0, 0, 0, 147, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 322, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 0, 0, 0, 256, 164, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 165, 0,
	0, 0, 299, 0, 0, 152, 168, 266, 0, 0,
	0, 209, 0, 334, 0, 395, 0, 236, 0, 333,
	268, 388, 0, 0, 394, 0, 371, 402, 406, 232,
	0, 200, 356, 223, 218, 0, 0, 0, 241, 321,
	213, 260, 0, 0, 0, 205, 0, 0, 0, 355,
	385, 170, 284, 386, 405, 188, 378, 285, 292, 202,
	204, 203, 182, 349, 384, 194, 207, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 242, 0, 0,
	0, 308, 191, 0, 0, 0, 399, 154, 344, 343,
	0, 249, 0, 155, 146, 329, 156, 257, 173, 0,
	408, 187, 262, 379, 138, 235, 298, 211, 0, 309,
	0, 167, 325, 280, 282, 279, 283, 239, 150, 157,
	0, 327, 346, 383, 189, 362, 148, 149, 151, 159,
	337, 160, 161, 0, 274, 227, 231, 243, 254, 0,
	332, 363, 400, 0, 184, 336, 364, 375, 365, 368,
	366, 367, 176, 370, 393, 195, 345, 348, 407, 0,
	183, 178, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 238, 0, 391, 392,
	210, 409, 0, 0, 179, 0, 0, 295, 303, 294,
	0, 387, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 230, 245, 319, 270, 320, 246, 290, 289, 291,
	272, 0, 0, 174, 0, 360, 0, 0, 369, 192,
	0, 0, 382, 153, 326, 193, 237, 228, 318, 293,
	185, 248, 358, 261, 269, 0, 0, 307, 335, 199,
	397, 357, 224, 0, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 162, 163, 0, 0, 0,
	206, 141, 0, 0, 0, 142, 0, 0, 143, 144,
	0, 0, 0, 0, 145, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2066, 315, 175, 186, 198, 217, 215, 229, 258, 281,
	286, 313, 347, 352, 372, 373, 374, 376, 219, 0,
	222, 197, 330, 196, 271, 251, 314, 380, 381, 323,
	212, 0, 169, 180, 265, 0, 328, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 398, 216, 0, 0, 0, 181, 190, 201,
	214, 226, 233, 244, 247, 252, 253, 255, 259, 273,
	275, 276, 277, 278, 296, 297, 301, 302, 305, 306,
	310, 311, 312, 316, 317, 324, 158, 331, 338, 339,
	340, 341, 342, 350, 351, 353, 354, 361, 389, 390,
	403, 404, 377, 0, 166, 0, 0, 172, 0, 0,
	0, 0, 0, 304, 171, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 0, 0, 0, 0, 0, 0,
	220, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 401, 359, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 139, 0,
	0, 0, 0, 0, 0, 0, 0, 147, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 322, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	452, 0, 288, 0, 0, 0, 0, 256, 164, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 165, 0,
	0, 0, 299, 0, 0, 152, 168, 266, 0, 0,
	0, 209, 0, 334, 0, 395, 454, 451, 0, 333,
	268, 388, 0, 0, 394, 0, 371, 402, 406, 232,
	0, 200, 356, 223, 218, 0, 0, 0, 241, 321,
	213, 260, 0, 0, 0, 205, 0, 0, 0, 355,
	385, 170, 284, 386, 405, 188, 378, 285, 292, 202,
	204, 203, 182, 349, 384, 194, 207, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 242, 0, 0,
	0, 308, 191, 0, 0, 0, 399, 154, 344, 343,
	0, 249, 0, 155, 146, 329, 156, 257, 173, 0,
	408, 187, 262, 379, 138, 235, 298, 211, 0, 309,
	0, 167, 325, 280, 282, 279, 283, 239, 150, 157,
	0, 327, 346, 383, 189, 362, 148, 149, 151, 159,
	337, 160, 161, 0, 274, 227, 231, 243, 254, 0,
	332, 363, 400, 0, 184, 336, 364, 375, 365, 368,
	366, 367, 176, 370, 393, 195, 345, 348, 407, 0,
	183, 178, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 238, 0, 391, 392,
	210, 409, 0, 0, 179, 0, 0, 295, 303, 294,
	0, 387, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 230, 245, 319, 270, 320, 246, 290, 289, 291,
	272, 0, 0, 174, 0, 360, 0, 0, 369, 192,
	0, 0, 382, 153, 326, 193, 237, 228, 318, 293,
	185, 248, 358, 261, 269, 0, 0, 307, 335, 199,
	397, 357, 224, 0, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 162, 163, 0, 0, 0,
	206, 141, 0, 0, 0, 142, 0, 0, 143, 144,
	0, 0, 0, 0, 145, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 175, 186, 198, 217, 215, 229, 258, 281,
	286, 313, 347, 352, 372, 373, 374, 376, 219, 0,
	222, 197, 330, 196, 271, 251, 314, 380, 381, 323,
	212, 0, 169, 180, 265, 0, 328, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 398, 216, 0, 0, 0, 181, 190, 201,
	214, 226, 233, 244, 247, 252, 253, 255, 259, 273,
	275, 276, 277, 278, 296, 297, 301, 302, 305, 306,
	310, 311, 312, 316, 317, 324, 158, 331, 338, 339,
	340, 341, 342, 350, 351, 353, 354, 361, 389, 390,
	403, 404, 377, 0, 166, 0, 0, 172, 0, 0,
	0, 0, 0, 304, 171, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 0, 0, 0, 0, 0, 0,
	220, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 401, 359, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 139, 0,
	0, 0, 0, 0, 0, 0, 0, 147, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 322, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 0, 0, 0, 256, 164, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 165, 0,
	0, 0, 299, 0, 0, 152, 168, 266, 0, 0,
	0, 209, 0, 334, 0, 395, 2170, 236, 0, 333,
	268, 388, 0, 0, 394, 0, 371, 402, 406, 232,
	0, 200, 356, 223, 218, 0, 0, 0, 241, 321,
	213, 260, 0, 0, 0, 205, 0, 0, 0, 355,
	385, 170, 284, 386, 405, 188, 378, 285, 292, 202,
	204, 203, 182, 349, 384, 194, 207, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 242, 0, 0,
	0, 308, 191, 0, 0, 0, 399, 154, 344, 343,
	0, 249, 0, 155, 146, 329, 156, 257, 173, 0,
	408, 187, 262, 379, 138, 235, 298, 211, 0, 309,
	0, 167, 325, 280, 282, 279, 283, 239, 150, 157,
	0, 327, 346, 383, 189, 362, 148, 149, 151, 159,
	337, 160, 161, 0, 274, 227, 231, 243, 254, 0,
	332, 363, 400, 0, 184, 336, 364, 375, 365, 368,
	366, 367, 176, 370, 393, 195, 345, 348, 407, 0,
	183, 178, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 238, 0, 391, 392,
	210, 409, 0, 0, 179, 0, 0, 295, 303, 294,
	0, 387, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 230, 245, 319, 270, 320, 246, 290, 289, 291,
	272, 0, 0, 174, 0, 360, 0, 0, 369, 192,
	0, 0, 382, 153, 326, 193, 237, 228, 318, 293,
	185, 248, 358, 261, 269, 0, 0, 307, 335, 199,
	397, 357, 224, 0, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 162, 163, 0, 0, 0,
	206, 141, 0, 0, 0, 142, 0, 0, 143, 144,
	0, 0, 0, 0, 145, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 175, 186, 198, 217, 215, 229, 258, 281,
	286, 313, 347, 352, 372, 373, 374, 376, 219, 0,
	222, 197, 330, 196, 271, 251, 314, 380, 381, 323,
	212, 0, 169, 180, 265, 0, 328, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 398, 216, 0, 0, 0, 181, 190, 201,
	214, 226, 233, 244, 247, 252, 253, 255, 259, 273,
	275, 276, 277, 278, 296, 297, 301, 302, 305, 306,
	310, 311, 312, 316, 317, 324, 158, 331, 338, 339,
	340, 341, 342, 350, 351, 353, 354, 361, 389, 390,
	403, 404, 377, 0, 166, 0, 0, 172, 0, 0,
	0, 0, 0, 304, 171, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 0, 0, 0, 0, 0, 0,
	220, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 401, 359, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 139, 0,
	0, 0, 0, 0, 0, 0, 0, 147, 0, 0,
	0, 0, 0, 2052, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 322, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 0, 0, 0, 256, 164, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 165, 0,
	0, 0, 299, 0, 0, 152, 168, 266, 0, 0,
	0, 209, 0, 334, 0, 395, 0, 236, 0, 333,
	268, 388, 0, 0, 394, 0, 371, 402, 406, 232,
	0, 200, 356, 223, 218, 0, 0, 0, 241, 321,
	213, 260, 0, 0, 0, 205, 0, 0, 0, 355,
	385, 170, 284, 386, 405, 188, 378, 285, 292, 202,
	204, 203, 182, 349, 384, 194, 207, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 242, 0, 0,
	0, 308, 191, 0, 0, 0, 399, 154, 344, 343,
	0, 249, 0, 155, 146, 329, 156, 257, 173, 0,
	408, 187, 262, 379, 138, 235, 298, 211, 0, 309,
	0, 167, 325, 280, 282, 279, 283, 239, 150, 157,
	0, 327, 346, 383, 189, 362, 148, 149, 151, 159,
	337, 160, 161, 0, 274, 227, 231, 243, 254, 0,
	332, 363, 400, 0, 184, 336, 364, 375, 365, 368,
	366, 367, 176, 370, 393, 195, 345, 348, 407, 0,
	183, 178, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 238, 0, 391, 392,
	210, 409, 0, 0, 179, 0, 0, 295, 303, 294,
	0, 387, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 230, 245, 319, 270, 320, 246, 290, 289, 291,
	272, 0, 0, 174, 0, 360, 0, 0, 369, 192,
	0, 0, 382, 153, 326, 193, 237, 228, 318, 293,
	185, 248, 358, 261, 269, 0, 0, 307, 335, 199,
	397, 357, 224, 0, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 162, 163, 0, 0, 0,
	206, 141, 0, 0, 0, 142, 0, 0, 143, 144,
	0, 0, 0, 0, 145, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 175, 186, 198, 217, 215, 229, 258, 281,
	286, 313, 347, 352, 372, 373, 374, 376, 219, 0,
	222, 197, 330, 196, 271, 251, 314, 380, 381, 323,
	212, 0, 169, 180, 265, 0, 328, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 398, 216, 0, 0, 0, 181, 190, 201,
	214, 226, 233, 244, 247, 252, 253, 255, 259, 273,
	275, 276, 277, 278, 296, 297, 301, 302, 305, 306,
	310, 311, 312, 316, 317, 324, 158, 331, 338, 339,
	340, 341, 342, 350, 351, 353, 354, 361, 389, 390,
	403, 404, 377, 0, 166, 0, 1366, 172, 0, 0,
	0, 0, 0, 304, 171, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 0, 0, 0, 0, 0, 0,
	220, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 401, 359, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 139, 0,
	0, 0, 0, 0, 0, 0, 0, 147, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 322, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 0, 0, 0, 256, 164, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 165, 0,
	0, 0, 299, 0, 0, 152, 168, 266, 0, 0,
	0, 209, 0, 334, 0, 395, 0, 236, 0, 333,
	268, 388, 0, 0, 394, 0, 371, 402, 406, 232,
	0, 200, 356, 223, 218, 0, 0, 0, 241, 321,
	213, 260, 0, 0, 0, 205, 0, 0, 0, 355,
	385, 170, 284, 386, 405, 188, 378, 285, 292, 202,
	204, 203, 182, 349, 384, 194, 207, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 242, 0, 0,
	0, 308, 191, 0, 0, 0, 399, 154, 344, 343,
	0, 249, 0, 155, 146, 329, 156, 257, 173, 0,
	408, 187, 262, 379, 138, 235, 298, 211, 0, 309,
	0, 167, 325, 280, 282, 279, 283, 239, 150, 157,
	0, 327, 346, 383, 189, 362, 148, 149, 151, 159,
	337, 160, 161, 0, 274, 227, 231, 243, 254, 0,
	332, 363, 400, 0, 184, 336, 364, 375, 365, 368,
	366, 367, 176, 370, 393, 195, 345, 348, 407, 0,
	183, 178, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 238, 0, 391, 392,
	210, 409, 0, 0, 179, 0, 0, 295, 303, 294,
	0, 387, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 230, 245, 319, 270, 320, 246, 290, 289, 291,
	272, 0, 0, 174, 0, 360, 0, 0, 369, 192,
	0, 0, 382, 153, 326, 193, 237, 228, 318, 293,
	185, 248, 358, 261, 269, 0, 0, 307, 335, 199,
	397, 357, 224, 0, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 162, 163, 0, 0, 0,
	206, 141, 0, 0, 0, 142, 0, 0, 143, 144,
	0, 0, 0, 0, 145, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 175, 186, 198, 217, 215, 229, 258, 281,
	286, 313, 347, 352, 372, 373, 374, 376, 219, 0,
	222, 197, 330, 196, 271, 251, 314, 380, 381, 323,
	212, 0, 169, 180, 265, 0, 328, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 398, 216, 0, 0, 0, 181, 190, 201,
	214, 226, 233, 244, 247, 252, 253, 255, 259, 273,
	275, 276, 277, 278, 296, 297, 301, 302, 305, 306,
	310, 311, 312, 316, 317, 324, 158, 331, 338, 339,
	340, 341, 342, 350, 351, 353, 354, 361, 389, 390,
	403, 404, 377, 0, 166, 0, 0, 172, 0, 0,
	0, 0, 0, 304, 171, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 0, 0, 0, 0, 0, 0,
	220, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 401, 359, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 139, 0,
	0, 0, 0, 0, 0, 0, 0, 147, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 322, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 0, 133, 0, 256, 164, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 165, 0,
	0, 0, 299, 0, 0, 152, 168, 266, 0, 0,
	0, 209, 0, 334, 0, 395, 0, 236, 0, 333,
	268, 388, 0, 0, 394, 0, 371, 402, 406, 232,
	0, 200, 356, 223, 218, 0, 0, 0, 241, 321,
	213, 260, 0, 0, 0, 205, 0, 0, 0, 355,
	385, 170, 284, 386, 405, 188, 378, 285, 292, 202,
	204, 203, 182, 349, 384, 194, 207, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 242, 0, 0,
	0, 308, 191, 0, 0, 0, 399, 154, 344, 343,
	0, 249, 0, 155, 146, 329, 156, 257, 173, 0,
	408, 187, 262, 379, 138, 235, 298, 211, 0, 309,
	0, 167, 325, 280, 282, 279, 283, 239, 150, 157,
	0, 327, 346, 383, 189, 362, 148, 149, 151, 159,
	337, 160, 161, 0, 274, 227, 231, 243, 254, 0,
	332, 363, 400, 0, 184, 336, 364, 375, 365, 368,
	366, 367, 176, 370, 393, 195, 345, 348, 407, 0,
	183, 178, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 238, 0, 391, 392,
	210, 409, 0, 0, 179, 0, 0, 295, 303, 294,
	0, 387, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 230, 245, 319, 270, 320, 246, 290, 289, 291,
	272, 0, 0, 174, 0, 360, 0, 0, 369, 192,
	0, 0, 382, 153, 326, 193, 237, 228, 318, 293,
	185, 248, 358, 261, 269, 0, 0, 307, 335, 199,
	397, 357, 224, 0, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 162, 163, 0, 0, 0,
	206, 141, 0, 0, 0, 142, 0, 0, 143, 144,
	0, 0, 0, 0, 145, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 175, 186, 198, 217, 215, 229, 258, 281,
	286, 313, 347, 352, 372, 373, 374, 376, 219, 0,
	222, 197, 330, 196, 271, 251, 314, 380, 381, 323,
	212, 0, 169, 180, 265, 0, 328, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 398, 216, 0, 0, 0, 181, 190, 201,
	214, 226, 233, 244, 247, 252, 253, 255, 259, 273,
	275, 276, 277, 278, 296, 297, 301, 302, 305, 306,
	310, 311, 312, 316, 317, 324, 158, 331, 338, 339,
	340, 341, 342, 350, 351, 353, 354, 361, 389, 390,
	403, 404, 377, 0, 166, 0, 0, 172, 0, 0,
	0, 0, 0, 304, 171, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 0, 0, 0, 0, 0, 0,
	220, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 401, 359, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 139, 0,
	0, 0, 0, 0, 0, 0, 0, 147, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 322, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 0, 0, 0, 256, 164, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 165, 0,
	0, 0, 299, 0, 0, 152, 168, 266, 0, 0,
	0, 209, 0, 334, 0, 395, 0, 236, 0, 333,
	268, 388, 0, 0, 394, 0, 371, 402, 406, 232,
	0, 200, 356, 223, 218, 0, 0, 0, 241, 321,
	213, 260, 0, 0, 0, 205, 0, 0, 0, 355,
	385, 170, 284, 386, 405, 188, 378, 285, 292, 202,
	204, 203, 182, 349, 384, 194, 207, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 242, 0, 0,
	0, 308, 191, 0, 0, 0, 399, 154, 344, 343,
	0, 249, 0, 155, 146, 329, 156, 257, 173, 0,
	408, 187, 262, 379, 138, 235, 298, 211, 0, 309,
	0, 167, 325, 280, 282, 279, 283, 239, 150, 157,
	0, 327, 346, 383, 189, 362, 148, 149, 151, 159,
	337, 160, 161, 0, 274, 227, 231, 243, 254, 0,
	332, 363, 400, 0, 184, 336, 364, 375, 365, 368,
	366, 367, 176, 370, 393, 195, 345, 348, 407, 0,
	183, 178, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 238, 0, 391, 392,
	210, 409, 0, 0, 179, 0, 0, 295, 303, 294,
	0, 387, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 230, 245, 319, 270, 320, 246, 290, 289, 291,
	272, 0, 0, 174, 0, 360, 0, 0, 369, 192,
	0, 0, 382, 153, 326, 193, 237, 228, 318, 293,
	185, 248, 358, 261, 269, 0, 0, 307, 335, 199,
	397, 357, 224, 0, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 162, 163, 0, 0, 0,
	206, 141, 0, 0, 0, 142, 0, 0, 143, 144,
	0, 0, 0, 0, 145, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 175, 186, 198, 217, 215, 229, 258, 281,
	286, 313, 347, 352, 372, 373, 374, 376, 219, 0,
	222, 197, 330, 196, 271, 251, 314, 380, 381, 323,
	212, 0, 169, 180, 265, 0, 328, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 398, 216, 0, 0, 0, 181, 190, 201,
	214, 226, 233, 244, 247, 252, 253, 255, 259, 273,
	275, 276, 277, 278, 296, 297, 301, 302, 305, 306,
	310, 311, 312, 316, 317, 324, 158, 331, 338, 339,
	340, 341, 342, 350, 351, 353, 354, 361, 389, 390,
	403, 404, 0, 0, 166, 0, 0, 172, 495, 377,
	489, 500, 482, 0, 171, 0, 0, 0, 0, 0,
	304, 0, 0, 506, 0, 0, 0, 0, 0, 221,
	0, 0, 490, 0, 0, 0, 0, 220, 208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	267, 0, 0, 401, 359, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 504, 0, 503, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 396, 0, 0, 0, 0, 322,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 481, 480, 483, 0, 0, 0, 288,
	0, 0, 0, 488, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 0, 165, 0, 0, 0, 299,
	492, 0, 0, 168, 266, 496, 0, 0, 209, 0,
	334, 0, 395, 0, 236, 0, 333, 268, 388, 0,
	499, 394, 0, 371, 402, 406, 232, 0, 200, 356,
	223, 218, 0, 0, 0, 241, 321, 213, 260, 0,
	0, 0, 205, 0, 0, 0, 355, 385, 170, 284,
	386, 405, 188, 378, 285, 292, 202, 204, 203, 182,
	349, 384, 194, 207, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 242, 0, 0, 0, 308, 191,
	0, 0, 0, 399, 0, 344, 343, 487, 249, 0,
	0, 0, 329, 0, 257, 173, 0, 408, 187, 262,
	379, 0, 235, 298, 211, 0, 309, 0, 167, 325,
	280, 282, 279, 283, 239, 0, 0, 0, 509, 346,
	383, 189, 362, 484, 485, 486, 493, 494, 497, 498,
	501, 274, 227, 231, 243, 254, 0, 332, 363, 400,
	0, 184, 336, 364, 375, 365, 368, 366, 367, 176,
	370, 393, 195, 345, 348, 407, 0, 183, 178, 0,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 0, 0, 238, 0, 391, 392, 210, 409, 0,
	0, 179, 0, 0, 295, 303, 294, 0, 387, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 230, 245,
	319, 270, 320, 246, 290, 289, 291, 272, 0, 0,
	174, 0, 360, 0, 0, 369, 192, 0, 0, 382,
	0, 326, 193, 237, 228, 318, 293, 185, 248, 358,
	261, 269, 0, 0, 307, 335, 199, 397, 357, 224,
	0, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 206, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 175,
	186, 198, 217, 215, 229, 258, 281, 286, 313, 347,
	352, 372, 373, 374, 376, 219, 0, 222, 197, 330,
	196, 271, 251, 314, 380, 381, 323, 212, 0, 169,
	180, 265, 0, 328, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	216, 0, 0, 0, 181, 190, 201, 214, 226, 233,
	244, 247, 252, 253, 255, 259, 273, 275, 276, 277,
	278, 296, 297, 301, 302, 305, 306, 310, 311, 312,
	316, 317, 324, 491, 331, 338, 339, 340, 341, 342,
	350, 351, 353, 354, 361, 389, 390, 403, 404, 0,
	0, 166, 0, 0, 172, 495, 377, 489, 500, 482,
	0, 171, 0, 0, 0, 0, 0, 304, 0, 0,
	474, 0, 0, 0, 0, 0, 221, 0, 0, 490,
	0, 0, 0, 0, 220, 208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 267, 0, 0,
	401, 359, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 504, 0, 503, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 396, 0, 0, 0, 0, 322, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	481, 480, 483, 0, 0, 0, 288, 0, 0, 0,
	488, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 165, 0, 0, 0, 299, 492, 0, 0,
	168, 266, 496, 0, 0, 209, 0, 334, 0, 395,
	0, 236, 0, 333, 268, 388, 0, 499, 394, 0,
	371, 402, 406, 232, 0, 200, 356, 223, 218, 0,
	0, 0, 241, 321, 213, 260, 0, 0, 0, 205,
	0, 0, 0, 355, 385, 170, 284, 386, 405, 188,
	378, 285, 292, 202, 204, 203, 182, 349, 384, 194,
	207, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 242, 0, 0, 0, 308, 191, 0, 0, 0,
	399, 0, 344, 343, 487, 249, 0, 0, 0, 329,
	0, 257, 173, 0, 408, 187, 262, 379, 0, 235,
	298, 211, 0, 309, 0, 167, 325, 280, 282, 279,
	283, 239, 0, 0, 0, 477, 346, 383, 189, 362,
	484, 485, 486, 493, 494, 497, 498, 501, 274, 227,
	231, 243, 254, 0, 332, 363, 400, 0, 184, 336,
	364, 375, 365, 368, 366, 367, 176, 370, 393, 195,
	345, 348, 407, 0, 183, 178, 0, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 0, 0, 0, 0,
	238, 0, 391, 392, 210, 409, 0, 0, 179, 0,
	0, 295, 303, 294, 0, 387, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 230, 245, 319, 270, 320,
	246, 290, 289, 291, 272, 0, 0, 174, 0, 360,
	0, 0, 369, 192, 0, 0, 382, 0, 326, 193,
	237, 228, 318, 293, 185, 248, 358, 261, 269, 0,
	0, 307, 335, 199, 397, 357, 224, 0, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	0, 0, 0, 0, 206, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 220, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 401, 359, 287, 0, 315, 175, 186, 198, 217,
	215, 229, 258, 281, 286, 313, 347, 352, 372, 373,
	374, 376, 219, 994, 222, 197, 330, 196, 271, 251,
	314, 380, 381, 323, 212, 0, 169, 180, 265, 0,
	328, 234, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 396, 0, 0, 0, 0, 322, 240, 1251,
	1250, 1260, 1261, 1253, 1254, 1255, 1256, 1257, 1258, 1259,
	1252, 0, 0, 1262, 0, 0, 398, 216, 0, 0,
	0, 181, 190, 201, 214, 226, 233, 244, 247, 252,
	253, 255, 259, 273, 275, 276, 277, 278, 296, 297,
	301, 302, 305, 306, 310, 311, 312, 316, 317, 324,
	491, 331, 338, 339, 340, 341, 342, 350, 351, 353,
	354, 361, 389, 390, 403, 404, 0, 288, 166, 0,
	0, 172, 256, 0, 0, 0, 0, 0, 171, 0,
	0, 264, 0, 165, 0, 0, 0, 299, 0, 0,
	0, 168, 266, 0, 0, 0, 209, 0, 334, 0,
	395, 0, 236, 0, 333, 268, 388, 0, 0, 394,
	0, 371, 402, 406, 232, 0, 200, 356, 223, 218,
	0, 0, 0, 241, 321, 213, 260, 0, 0, 0,
	205, 0, 0, 0, 355, 385, 170, 284, 386, 405,
	188, 378, 285, 292, 202, 204, 203, 182, 349, 384,
	194, 207, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 242, 0, 0, 0, 308, 191, 0, 0,
	0, 399, 0, 344, 343, 0, 249, 0, 0, 0,
	329, 0, 257, 173, 0, 408, 187, 262, 379, 0,
	235, 298, 211, 0, 309, 0, 167, 325, 280, 282,
	279, 283, 239, 0, 0, 0, 327, 346, 383, 189,
	362, 0, 0, 0, 0, 337, 0, 0, 0, 274,
	227, 231, 243, 254, 0, 332, 363, 400, 0, 184,
	336, 364, 375, 365, 368, 366, 367, 176, 370, 393,
	195, 345, 348, 407, 0, 183, 178, 0, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 238, 0, 391, 392, 210, 409, 0, 0, 179,
	0, 0, 295, 303, 294, 0, 387, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 230, 245, 319, 270,
	320, 246, 290, 289, 291, 272, 0, 0, 174, 0,
	360, 0, 0, 369, 192, 0, 0, 382, 0, 326,
	193, 237, 228, 318, 293, 185, 248, 358, 261, 269,
	0, 0, 307, 335, 199, 397, 357, 224, 0, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 206, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 175, 186, 198,
	217, 215, 229, 258, 281, 286, 313, 347, 352, 372,
	373, 374, 376, 219, 0, 222, 197, 330, 196, 271,
	251, 314, 380, 381, 323, 212, 0, 169, 180, 265,
	0, 328, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 216, 0,
	0, 0, 181, 190, 201, 214, 226, 233, 244, 247,
	252, 253, 255, 259, 273, 275, 276, 277, 278, 296,
	297, 301, 302, 305, 306, 310, 311, 312, 316, 317,
	324, 0, 331, 338, 339, 340, 341, 342, 350, 351,
	353, 354, 361, 389, 390, 403, 404, 377, 0, 166,
	0, 0, 172, 0, 0, 0, 0, 0, 304, 171,
	0, 0, 0, 2387, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 220, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 401, 359, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2389, 2391, 0, 0, 0, 0,
	0, 0, 0, 139, 0, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 396, 2385, 0, 0, 0, 322, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 0,
	0, 0, 256, 0, 0, 2390, 0, 0, 0, 0,
	0, 264, 0, 165, 0, 0, 0, 299, 0, 0,
	0, 168, 266, 0, 0, 0, 209, 0, 334, 0,
	395, 0, 236, 0, 333, 268, 388, 0, 0, 394,
	0, 371, 402, 406, 232, 0, 200, 356, 223, 218,
	0, 0, 0, 241, 321, 213, 260, 0, 0, 0,
	205, 0, 0, 0, 355, 385, 170, 284, 386, 405,
	188, 378, 285, 292, 202, 204, 203, 182, 349, 384,
	194, 207, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 242, 0, 0, 0, 308, 191, 0, 0,
	0, 399, 0, 344, 343, 0, 249, 0, 0, 0,
	329, 0, 257, 173, 0, 408, 187, 262, 379, 0,
	235, 298, 211, 0, 309, 0, 167, 325, 280, 282,
	279, 283, 239, 0, 0, 0, 327, 346, 383, 189,
	362, 0, 0, 0, 0, 337, 0, 0, 0, 274,
	227, 231, 243, 254, 0, 332, 363, 400, 0, 184,
	336, 364, 375, 365, 368, 366, 367, 176, 370, 393,
	195, 345, 348, 407, 0, 183, 178, 0, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 238, 0, 391, 392, 210, 409, 0, 0, 179,
	0, 0, 295, 303, 294, 0, 387, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 230, 245, 319, 270,
	320, 246, 290, 289, 291, 272, 0, 0, 174, 0,
	360, 0, 0, 369, 192, 0, 0, 382, 0, 326,
	193, 237, 228, 318, 293, 185, 248, 358, 261, 269,
	0, 0, 307, 335, 199, 397, 357, 224, 0, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 206, 141, 0, 0, 0,
	142, 0, 0, 143, 144, 0, 0, 0, 0, 145,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 175, 186, 198,
	217, 215, 229, 258, 281, 286, 313, 347, 352, 372,
	373, 374, 376, 219, 0, 222, 197, 330, 196, 271,
	251, 314, 380, 381, 323, 212, 0, 169, 180, 265,
	0, 328, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 216, 0,
	0, 0, 181, 190, 201, 214, 226, 233, 244, 247,
	252, 253, 255, 259, 273, 275, 276, 277, 278, 296,
	297, 301, 302, 305, 306, 310, 311, 312, 316, 317,
	324, 0, 331, 338, 339, 340, 341, 342, 350, 351,
	353, 354, 361, 389, 390, 403, 404, 377, 0, 166,
	0, 0, 172, 0, 0, 0, 0, 0, 304, 171,
	0, 0, 0, 2387, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 220, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 401, 359, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2389, 2391, 0, 0, 0, 0,
	0, 0, 0, 139, 0, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 396, 0, 0, 0, 0, 322, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 0,
	0, 0, 256, 0, 0, 2390, 0, 0, 0, 0,
	0, 264, 0, 165, 0, 0, 0, 299, 0, 0,
	0, 168, 266, 0, 0, 0, 209, 0, 334, 0,
	395, 0, 236, 0, 333, 268, 388, 0, 0, 394,
	0, 371, 402, 406, 232, 0, 200, 356, 223, 218,
	0, 0, 0, 241, 321, 213, 260, 0, 0, 0,
	205, 0, 0, 0, 355, 385, 170, 284, 386, 405,
	188, 378, 285, 292, 202, 204, 203, 182, 349, 384,
	194, 207, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 242, 0, 0, 0, 308, 191, 0, 0,
	0, 399, 0, 344, 343, 0, 249, 0, 0, 0,
	329, 0, 257, 173, 0, 408, 187, 262, 379, 0,
	235, 298, 211, 0, 309, 0, 167, 325, 280, 282,
	279, 283, 239, 0, 0, 0, 327, 346, 383, 189,
	362, 0, 0, 0, 0, 337, 0, 0, 0, 274,
	227, 231, 243, 254, 0, 332, 363, 400, 0, 184,
	336, 364, 375, 365, 368, 366, 367, 176, 370, 393,
	195, 345, 348, 407, 0, 183, 178, 0, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 238, 0, 391, 392, 210, 409, 0, 0, 179,
	0, 0, 295, 303, 294, 0, 387, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 230, 245, 319, 270,
	320, 246, 290, 289, 291, 272, 0, 0, 174, 0,
	360, 0, 0, 369, 192, 0, 0, 382, 0, 326,
	193, 237, 228, 318, 293, 185, 248, 358, 261, 269,
	0, 0, 307, 335, 199, 397, 357, 224, 0, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 206, 141, 0, 0, 0,
	142, 0, 0, 143, 144, 0, 0, 0, 0, 145,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 175, 186, 198,
	217, 215, 229, 258, 281, 286, 313, 347, 352, 372,
	373, 374, 376, 219, 0, 222, 197, 330, 196, 271,
	251, 314, 380, 381, 323, 212, 0, 169, 180, 265,
	0, 328, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 216, 0,
	0, 0, 181, 190, 201, 214, 226, 233, 244, 247,
	252, 253, 255, 259, 273, 275, 276, 277, 278, 296,
	297, 301, 302, 305, 306, 310, 311, 312, 316, 317,
	324, 0, 331, 338, 339, 340, 341, 342, 350, 351,
	353, 354, 361, 389, 390, 403, 404, 377, 0, 166,
	0, 0, 172, 0, 0, 0, 0, 0, 304, 171,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 220, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 401, 359, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 139, 0, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 396, 0, 0, 0, 0, 322, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 0,
	0, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 264, 0, 165, 0, 0, 0, 299, 0, 0,
	0, 168, 266, 0, 0, 0, 209, 0, 334, 0,
	395, 0, 236, 0, 333, 268, 388, 0, 0, 394,
	0, 371, 402, 406, 232, 0, 200, 356, 223, 218,
	0, 0, 0, 241, 321, 213, 260, 0, 0, 0,
	205, 0, 0, 0, 355, 385, 170, 284, 386, 405,
	188, 378, 285, 292, 202, 204, 203, 182, 349, 384,
	194, 207, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 242, 0, 0, 0, 308, 191, 0, 0,
	0, 399, 0, 344, 343, 0, 249, 0, 0, 0,
	329, 0, 257, 173, 0, 408, 187, 262, 379, 0,
	235, 298, 211, 0, 309, 0, 167, 325, 280, 282,
	279, 283, 239, 0, 0, 0, 327, 346, 383, 189,
	362, 0, 0, 0, 0, 337, 0, 0, 0, 274,
	227, 231, 243, 254, 0, 332, 363, 400, 0, 184,
	336, 364, 375, 365, 368, 366, 367, 176, 370, 393,
	195, 345, 348, 407, 0, 183, 178, 0, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 238, 0, 391, 392, 210, 409, 0, 0, 179,
	0, 0, 295, 303, 294, 0, 387, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 230, 245, 319, 270,
	320, 246, 290, 289, 291, 272, 0, 0, 174, 0,
	360, 0, 0, 369, 192, 0, 0, 382, 0, 326,
	193, 237, 228, 318, 293, 185, 248, 358, 261, 269,
	0, 0, 307, 335, 199, 397, 357, 224, 0, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 206, 141, 0, 0, 0,
	142, 0, 0, 143, 144, 0, 0, 0, 0, 145,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 175, 186, 198,
	217, 215, 229, 258, 281, 286, 313, 347, 352, 372,
	373, 374, 376, 219, 0, 222, 197, 330, 196, 271,
	251, 314, 380, 381, 323, 212, 0, 169, 180, 265,
	0, 328, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 216, 0,
	0, 519, 181, 190, 201, 214, 226, 233, 244, 247,
	252, 253, 255, 259, 273, 275, 276, 277, 278, 296,
	297, 301, 302, 305, 306, 310, 311, 312, 316, 317,
	324, 0, 331, 338, 339, 340, 341, 342, 350, 351,
	353, 354, 361, 389, 390, 403, 404, 377, 0, 166,
	0, 0, 172, 0, 0, 0, 0, 0, 304, 171,
	0, 0, 0, 3643, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 220, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 401, 359, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 139, 0, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 396, 0, 0, 0, 0, 322, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 0,
	0, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 264, 0, 165, 0, 0, 0, 299, 0, 0,
	0, 168, 266, 0, 0, 0, 209, 0, 334, 0,
	395, 0, 236, 0, 333, 268, 388, 0, 0, 394,
	0, 371, 402, 406, 232, 0, 200, 356, 223, 218,
	0, 0, 0, 241, 321, 213, 260, 0, 0, 0,
	205, 0, 0, 0, 355, 385, 170, 284, 386, 405,
	188, 378, 285, 292, 202, 204, 203, 182, 349, 384,
	194, 207, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 242, 0, 0, 0, 308, 191, 0, 0,
	0, 399, 0, 344, 343, 0, 249, 0, 0, 0,
	329, 0, 257, 173, 0, 408, 187, 262, 379, 0,
	235, 298, 211, 0, 309, 0, 167, 325, 280, 282,
	279, 283, 239, 0, 0, 0, 327, 346, 383, 189,
	362, 0, 0, 0, 0, 337, 0, 0, 0, 274,
	227, 231, 243, 254, 0, 332, 363, 400, 0, 184,
	336, 364, 375, 365, 368, 366, 367, 176, 370, 393,
	195, 345, 348, 407, 0, 183, 178, 0, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 238, 0, 391, 392, 210, 409, 0, 0, 179,
	0, 0, 295, 303, 294, 0, 387, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 230, 245, 319, 270,
	320, 246, 290, 289, 291, 272, 0, 0, 174, 0,
	360, 0, 0, 369, 192, 0, 0, 382, 0, 326,
	193, 237, 228, 318, 293, 185, 248, 358, 261, 269,
	0, 0, 307, 335, 199, 397, 357, 224, 0, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 206, 141, 0, 0, 0,
	142, 0, 0, 143, 144, 0, 0, 0, 0, 145,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 175, 186, 198,
	217, 215, 229, 258, 281, 286, 313, 347, 352, 372,
	373, 374, 376, 219, 0, 222, 197, 330, 196, 271,
	251, 314, 380, 381, 323, 212, 0, 169, 180, 265,
	0, 328, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 216, 0,
	0, 0, 181, 190, 201, 214, 226, 233, 244, 247,
	252, 253, 255, 259, 273, 275, 276, 277, 278, 296,
	297, 301, 302, 305, 306, 310, 311, 312, 316, 317,
	324, 0, 331, 338, 339, 340, 341, 342, 350, 351,
	353, 354, 361, 389, 390, 403, 404, 377, 0, 166,
	0, 0, 172, 0, 0, 0, 0, 0, 304, 171,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 2703, 0, 220, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 401, 359, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 139, 0, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 396, 0, 0, 0, 0, 322, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 0,
	0, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 264, 0, 165, 0, 0, 0, 299, 0, 0,
	0, 168, 266, 0, 0, 0, 209, 0, 334, 0,
	395, 0, 236, 0, 333, 268, 388, 0, 0, 394,
	0, 371, 402, 406, 232, 0, 200, 356, 223, 218,
	0, 0, 0, 241, 321, 213, 260, 0, 0, 0,
	205, 0, 0, 0, 355, 385, 170, 284, 386, 405,
	188, 378, 285, 292, 202, 204, 203, 182, 349, 384,
	194, 207, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 242, 0, 0, 0, 308, 191, 0, 0,
	0, 399, 0, 344, 343, 0, 249, 0, 0, 0,
	329, 0, 257, 173, 0, 408, 187, 262, 379, 0,
	235, 298, 211, 0, 309, 0, 167, 325, 280, 282,
	279, 283, 239, 0, 0, 0, 327, 346, 383, 189,
	362, 0, 0, 0, 0, 337, 0, 0, 0, 274,
	227, 231, 243, 254, 0, 332, 363, 400, 0, 184,
	336, 364, 375, 365, 368, 366, 367, 176, 370, 393,
	195, 345, 348, 407, 0, 183, 178, 0, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 238, 0, 391, 392, 210, 409, 0, 0, 179,
	0, 0, 295, 303, 294, 0, 387, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 230, 245, 319, 270,
	320, 246, 290, 289, 291, 272, 0, 0, 174, 0,
	360, 0, 0, 369, 192, 0, 0, 382, 0, 326,
	193, 237, 228, 318, 293, 185, 248, 358, 261, 269,
	0, 0, 307, 335, 199, 397, 357, 224, 0, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 206, 141, 0, 0, 0,
	142, 0, 0, 143, 144, 0, 0, 0, 0, 145,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 175, 186, 198,
	217, 215, 229, 258, 281, 286, 313, 347, 352, 372,
	373, 374, 376, 219, 0, 222, 197, 330, 196, 271,
	251, 314, 380, 381, 323, 212, 0, 169, 180, 265,
	0, 328, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 216, 0,
	0, 0, 181, 190, 201, 214, 226, 233, 244, 247,
	252, 253, 255, 259, 273, 275, 276, 277, 278, 296,
	297, 301, 302, 305, 306, 310, 311, 312, 316, 317,
	324, 0, 331, 338, 339, 340, 341, 342, 350, 351,
	353, 354, 361, 389, 390, 403, 404, 377, 0, 166,
	0, 0, 172, 0, 0, 0, 0, 0, 304, 171,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 220, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 401, 359, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 139, 0, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 396, 0, 0, 0, 0, 322, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 0,
	0, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 264, 0, 165, 0, 0, 0, 299, 0, 0,
	0, 168, 266, 0, 0, 0, 209, 0, 334, 0,
	395, 0, 236, 0, 333, 268, 388, 0, 0, 394,
	0, 371, 402, 406, 232, 0, 200, 356, 223, 218,
	0, 0, 0, 241, 321, 213, 260, 0, 0, 0,
	205, 0, 0, 0, 355, 385, 170, 284, 386, 405,
	188, 378, 285, 292, 202, 204, 203, 182, 349, 384,
	194, 207, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 242, 0, 0, 0, 308, 191, 0, 0,
	0, 399, 0, 344, 343, 0, 249, 0, 0, 0,
	329, 0, 257, 173, 0, 408, 187, 262, 379, 0,
	235, 298, 211, 0, 309, 0, 167, 325, 280, 282,
	279, 283, 239, 0, 0, 0, 327, 346, 383, 189,
	362, 0, 0, 0, 0, 337, 0, 0, 0, 274,
	227, 231, 243, 254, 0, 332, 363, 400, 0, 184,
	336, 364, 375, 365, 368, 366, 367, 176, 370, 393,
	195, 345, 348, 407, 0, 183, 178, 0, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 238, 0, 391, 392, 210, 409, 0, 0, 179,
	0, 0, 295, 303, 294, 0, 387, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 230, 245, 319, 270,
	320, 246, 290, 289, 291, 272, 0, 0, 174, 0,
	360, 0, 0, 369, 192, 0, 0, 382, 0, 326,
	193, 237, 228, 318, 293, 185, 248, 358, 261, 269,
	0, 0, 307, 335, 199, 397, 357, 224, 0, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 304,
	0, 0, 0, 0, 0, 206, 141, 0, 221, 0,
	142, 0, 0, 143, 144, 0, 220, 208, 0, 145,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 401, 359, 287, 0, 315, 175, 186, 198,
	217, 215, 229, 258, 281, 286, 313, 347, 352, 372,
	373, 374, 376, 219, 994, 222, 197, 330, 196, 271,
	251, 314, 380, 381, 323, 212, 0, 169, 180, 265,
	0, 328, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 396, 0, 0, 0, 0, 322, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 216, 0,
	0, 0, 181, 190, 201, 214, 226, 233, 244, 247,
	252, 253, 255, 259, 273, 275, 276, 277, 278, 296,
	297, 301, 302, 305, 306, 310, 311, 312, 316, 317,
	324, 0, 331, 338, 339, 340, 341, 342, 350, 351,
	353, 354, 361, 389, 390, 403, 404, 0, 288, 166,
	0, 0, 172, 256, 0, 0, 0, 0, 0, 171,
	0, 0, 264, 0, 165, 0, 0, 0, 299, 0,
	0, 0, 168, 266, 0, 0, 0, 209, 0, 334,
	0, 395, 0, 236, 0, 333, 268, 388, 0, 0,
	394, 0, 371, 402, 406, 232, 0, 200, 356, 223,
	218, 0, 0, 0, 241, 321, 213, 260, 0, 0,
	0, 205, 0, 0, 0, 355, 385, 170, 284, 386,
	405, 188, 378, 285, 292, 202, 204, 203, 182, 349,
	384, 194, 207, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 242, 0, 0, 0, 308, 191, 0,
	0, 0, 399, 0, 344, 343, 0, 249, 0, 0,
	0, 329, 0, 257, 173, 0, 408, 187, 262, 379,
	0, 235, 298, 211, 0, 309, 0, 167, 325, 280,
	282, 279, 283, 239, 0, 0, 0, 327, 346, 383,
	189, 362, 0, 0, 0, 0, 337, 0, 0, 0,
	274, 227, 231, 243, 254, 0, 332, 363, 400, 0,
	184, 336, 364, 375, 365, 368, 366, 367, 176, 370,
	393, 195, 345, 348, 407, 0, 183, 178, 0, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 238, 0, 391, 392, 210, 409, 0, 0,
	179, 0, 0, 295, 303, 294, 0, 387, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 230, 245, 319,
	270, 320, 246, 290, 289, 291, 272, 0, 0, 174,
	0, 360, 0, 0, 369, 192, 0, 0, 382, 0,
	326, 193, 237, 228, 318, 293, 185, 248, 358, 261,
	269, 0, 0, 307, 335, 199, 397, 357, 224, 0,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 206, 141, 0, 0,
	0, 142, 0, 0, 143, 144, 0, 0, 0, 0,
	145, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 175, 186,
	198, 217, 215, 229, 258, 281, 286, 313, 347, 352,
	372, 373, 374, 376, 219, 0, 222, 197, 330, 196,
	271, 251, 314, 380, 381, 323, 212, 0, 169, 180,
	265, 0, 328, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 398, 216,
	0, 0, 0, 181, 190, 201, 214, 226, 233, 244,
	247, 252, 253, 255, 259, 273, 275, 276, 277, 278,
	296, 297, 301, 302, 305, 306, 310, 311, 312, 316,
	317, 324, 0, 331, 338, 339, 340, 341, 342, 350,
	351, 353, 354, 361, 389, 390, 403, 404, 377, 0,
	166, 0, 0, 172, 0, 0, 0, 0, 0, 304,
	171, 0, 3599, 0, 0, 0, 0, 0, 221, 3597,
	0, 0, 0, 0, 0, 0, 220, 208, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 401, 359, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 504, 0, 503, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 396, 0, 0, 0, 0, 322, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 0,
	0, 0, 0, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 165, 0, 0, 0, 299, 0,
	0, 0, 168, 266, 0, 0, 0, 209, 0, 334,
	0, 395, 0, 236, 0, 333, 268, 388, 0, 0,
	394, 0, 371, 402, 406, 232, 0, 200, 356, 223,
	218, 0, 0, 0, 241, 321, 213, 260, 0, 0,
	0, 205, 0, 0, 0, 355, 385, 170, 284, 386,
	405, 188, 378, 285, 292, 202, 204, 203, 182, 349,
	384, 194, 207, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 242, 0, 0, 0, 308, 191, 0,
	0, 0, 399, 0, 344, 343, 0, 249, 0, 3598,
	0, 329, 0, 257, 173, 0, 408, 187, 262, 379,
	0, 235, 298, 211, 0, 309, 0, 167, 325, 280,
	282, 279, 283, 239, 0, 0, 0, 327, 346, 383,
	189, 362, 0, 0, 0, 0, 337, 0, 0, 0,
	274, 227, 231, 243, 254, 0, 332, 363, 400, 0,
	184, 336, 364, 375, 365, 368, 366, 367, 176, 370,
	393, 195, 345, 348, 407, 0, 183, 178, 0, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 238, 0, 391, 392, 210, 409, 0, 0,
	179, 0, 0, 295, 303, 294, 0, 387, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 230, 245, 319,
	270, 320, 246, 290, 289, 291, 272, 0, 0, 174,
	0, 360, 0, 0, 369, 192, 0, 0, 382, 0,
	326, 193, 237, 228, 318, 293, 185, 248, 358, 261,
	269, 0, 0, 307, 335, 199, 397, 357, 224, 0,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	304, 0, 0, 0, 0, 0, 206, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 220, 208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	267, 0, 0, 401, 359, 287, 0, 315, 175, 186,
	198, 217, 215, 229, 258, 281, 286, 313, 347, 352,
	372, 373, 374, 376, 219, 994, 222, 197, 330, 196,
	271, 251, 314, 380, 381, 323, 212, 0, 169, 180,
	265, 0, 328, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2511, 396, 0, 0, 0, 0, 322,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 398, 216,
	0, 0, 0, 181, 190, 201, 214, 226, 233, 244,
	247, 252, 253, 255, 259, 273, 275, 276, 277, 278,
	296, 297, 301, 302, 305, 306, 310, 311, 312, 316,
	317, 324, 0, 331, 338, 339, 340, 341, 342, 350,
	351, 353, 354, 361, 389, 390, 403, 404, 0, 288,
	166, 0, 0, 172, 256, 0, 0, 0, 0, 0,
	171, 0, 0, 264, 0, 165, 0, 0, 0, 299,
	0, 0, 0, 168, 266, 0, 0, 0, 209, 0,
	334, 0, 395, 0, 236, 0, 333, 268, 388, 0,
	0, 394, 0, 371, 402, 406, 232, 0, 200, 356,
	223, 218, 0, 0, 0, 241, 321, 213, 260, 2512,
	2513, 0, 205, 0, 0, 0, 355, 385, 170, 284,
	386, 405, 188, 378, 285, 292, 202, 204, 203, 182,
	349, 384, 194, 207, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 242, 0, 0, 0, 308, 191,
	0, 0, 0, 399, 0, 344, 343, 0, 249, 0,
	0, 0, 329, 0, 257, 173, 0, 408, 187, 262,
	379, 0, 235, 298, 211, 0, 309, 0, 167, 325,
	280, 282, 279, 283, 239, 0, 0, 0, 327, 346,
	383, 189, 362, 0, 0, 0, 0, 337, 0, 0,
	0, 274, 227, 231, 243, 254, 0, 332, 363, 400,
	0, 184, 336, 364, 375, 365, 368, 366, 367, 176,
	370, 393, 195, 345, 348, 407, 0, 183, 178, 0,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 0, 0, 238, 0, 391, 392, 210, 409, 0,
	0, 179, 0, 0, 295, 303, 294, 0, 387, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 230, 245,
	319, 270, 320, 246, 290, 289, 291, 272, 0, 0,
	174, 0, 360, 0, 0, 369, 192, 0, 0, 382,
	0, 326, 193, 237, 228, 318, 293, 185, 248, 358,
	261, 269, 0, 0, 307, 335, 199, 397, 357, 224,
	0, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 206, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 175,
	186, 198, 217, 215, 229, 258, 281, 286, 313, 347,
	352, 372, 373, 374, 376, 219, 0, 222, 197, 330,
	196, 271, 251, 314, 380, 381, 323, 212, 0, 169,
	180, 265, 0, 328, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	216, 0, 0, 0, 181, 190, 201, 214, 226, 233,
	244, 247, 252, 253, 255, 259, 273, 275, 276, 277,
	278, 296, 297, 301, 302, 305, 306, 310, 311, 312,
	316, 317, 324, 0, 331, 338, 339, 340, 341, 342,
	350, 351, 353, 354, 361, 389, 390, 403, 404, 377,
	0, 166, 0, 0, 172, 0, 0, 0, 0, 0,
	304, 171, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 220, 208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	267, 0, 0, 401, 359, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 504, 0, 503, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 396, 0, 0, 0, 0, 322,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 0, 0, 0, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 0, 165, 0, 0, 0, 299,
	0, 0, 0, 168, 266, 0, 0, 0, 209, 0,
	334, 0, 395, 0, 236, 0, 333, 268, 388, 0,
	0, 394, 0, 371, 402, 406, 232, 0, 200, 356,
	223, 218, 0, 0, 0, 241, 321, 213, 260, 0,
	0, 0, 205, 0, 0, 0, 355, 385, 170, 284,
	386, 405, 188, 378, 285, 292, 202, 204, 203, 182,
	349, 384, 194, 207, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 242, 0, 0, 0, 308, 191,
	0, 0, 0, 399, 0, 344, 343, 0, 249, 0,
	0, 0, 329, 0, 257, 173, 0, 408, 187, 262,
	379, 0, 235, 298, 211, 0, 309, 0, 167, 325,
	280, 282, 279, 283, 239, 0, 0, 0, 327, 346,
	383, 189, 362, 0, 0, 0, 0, 337, 0, 0,
	0, 274, 227, 231, 243, 254, 0, 332, 363, 400,
	0, 184, 336, 364, 375, 365, 368, 366, 367, 176,
	370, 393, 195, 345, 348, 407, 0, 183, 178, 0,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 0, 0, 238, 0, 391, 392, 210, 409, 0,
	0, 179, 0, 0, 295, 303, 294, 0, 387, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 230, 245,
	319, 270, 320, 246, 290, 289, 291, 272, 0, 0,
	174, 0, 360, 0, 0, 369, 192, 0, 0, 382,
	0, 326, 193, 237, 228, 318, 293, 185, 248, 358,
	261, 269, 0, 0, 307, 335, 199, 397, 357, 224,
	0, 300, 0, 0, 1808, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 206, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 175,
	186, 198, 217, 215, 229, 258, 281, 286, 313, 347,
	352, 372, 373, 374, 376, 219, 0, 222, 197, 330,
	196, 271, 251, 314, 380, 381, 323, 212, 0, 169,
	180, 265, 0, 328, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	216, 0, 0, 0, 181, 190, 201, 214, 226, 233,
	244, 247, 252, 253, 255, 259, 273, 275, 276, 277,
	278, 296, 297, 301, 302, 305, 306, 310, 311, 312,
	316, 317, 324, 0, 331, 338, 339, 340, 341, 342,
	350, 351, 353, 354, 361, 389, 390, 403, 404, 377,
	0, 166, 0, 0, 172, 0, 0, 0, 0, 0,
	304, 171, 0, 0, 0, 0, 0, 0, 0, 221,
	1382, 0, 0, 0, 0, 0, 0, 220, 208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	267, 0, 0, 401, 359, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 994, 0, 1381, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 396, 0, 0, 0, 0, 322,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 0, 0, 0, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 0, 165, 0, 0, 0, 299,
	0, 0, 0, 168, 266, 0, 0, 0, 209, 0,
	334, 0, 395, 0, 236, 0, 333, 268, 388, 0,
	0, 394, 0, 371, 402, 406, 232, 0, 200, 356,
	223, 218, 0, 0, 0, 241, 321, 213, 260, 0,
	0, 0, 205, 0, 0, 0, 355, 385, 170, 284,
	386, 405, 188, 378, 285, 292, 202, 204, 203, 182,
	349, 384, 194, 207, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 242, 0, 0, 0, 308, 191,
	0, 0, 0, 399, 0, 344, 343, 0, 249, 0,
	0, 0, 329, 0, 257, 173, 0, 408, 187, 262,
	379, 0, 235, 298, 211, 0, 309, 0, 167, 325,
	280, 282, 279, 283, 239, 0, 0, 0, 327, 346,
	383, 189, 362, 0, 0, 0, 0, 337, 0, 0,
	0, 274, 227, 231, 243, 254, 0, 332, 363, 400,
	0, 184, 336, 364, 375, 365, 368, 366, 367, 176,
	370, 393, 195, 345, 348, 407, 0, 183, 178, 0,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 0, 0, 238, 0, 391, 392, 210, 409, 0,
	0, 179, 0, 0, 295, 303, 294, 0, 387, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 230, 245,
	319, 270, 320, 246, 290, 289, 291, 272, 0, 0,
	174, 0, 360, 0, 0, 369, 192, 0, 0, 382,
	0, 326, 193, 237, 228, 318, 293, 185, 248, 358,
	261, 269, 0, 0, 307, 335, 199, 397, 357, 224,
	0, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 206, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 175,
	186, 198, 217, 215, 229, 258, 281, 286, 313, 347,
	352, 372, 373, 374, 376, 219, 0, 222, 197, 330,
	196, 271, 251, 314, 380, 381, 323, 212, 0, 169,
	180, 265, 0, 328, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	216, 0, 0, 0, 181, 190, 201, 214, 226, 233,
	244, 247, 252, 253, 255, 259, 273, 275, 276, 277,
	278, 296, 297, 301, 302, 305, 306, 310, 311, 312,
	316, 317, 324, 0, 331, 338, 339, 340, 341, 342,
	350, 351, 353, 354, 361, 389, 390, 403, 404, 377,
	0, 166, 0, 0, 172, 0, 0, 0, 0, 0,
	304, 171, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 220, 208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	267, 0, 0, 401, 359, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 504, 0, 503, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 396, 0, 0, 0, 0, 322,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 0, 0, 0, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 0, 165, 0, 0, 0, 299,
	0, 0, 0, 168, 266, 0, 0, 0, 209, 0,
	334, 0, 395, 0, 236, 0, 333, 268, 388, 0,
	0, 394, 0, 371, 402, 406, 232, 0, 200, 356,
	223, 218, 0, 0, 0, 241, 321, 213, 260, 0,
	0, 0, 205, 0, 0, 0, 355, 385, 170, 284,
	386, 405, 188, 378, 285, 292, 202, 204, 203, 182,
	349, 384, 194, 207, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 242, 0, 0, 0, 308, 191,
	0, 0, 0, 399, 0, 344, 343, 0, 249, 0,
	0, 0, 329, 0, 257, 173, 0, 408, 187, 262,
	379, 0, 235, 298, 211, 0, 309, 0, 167, 325,
	280, 282, 279, 283, 239, 0, 0, 0, 327, 346,
	383, 189, 362, 0, 0, 0, 0, 337, 0, 0,
	0, 274, 227, 231, 243, 254, 0, 332, 363, 400,
	0, 184, 336, 364, 375, 365, 368, 366, 367, 176,
	370, 393, 195, 345, 348, 407, 0, 183, 178, 0,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 0, 0, 238, 0, 391, 392, 210, 409, 0,
	0, 179, 0, 0, 295, 303, 294, 0, 387, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 230, 245,
	319, 270, 320, 246, 290, 289, 291, 272, 0, 0,
	174, 0, 360, 0, 0, 369, 192, 0, 0, 382,
	0, 326, 193, 237, 228, 318, 293, 185, 248, 358,
	261, 269, 0, 0, 307, 335, 199, 397, 357, 224,
	0, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 206, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 175,
	186, 198, 217, 215, 229, 258, 281, 286, 313, 347,
	352, 372, 373, 374, 376, 219, 0, 222, 197, 330,
	196, 271, 251, 314, 380, 381, 323, 212, 0, 169,
	180, 265, 0, 328, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	216, 0, 0, 0, 181, 190, 201, 214, 226, 233,
	244, 247, 252, 253, 255, 259, 273, 275, 276, 277,
	278, 296, 297, 301, 302, 305, 306, 310, 311, 312,
	316, 317, 324, 0, 331, 338, 339, 340, 341, 342,
	350, 351, 353, 354, 361, 389, 390, 403, 404, 377,
	0, 166, 0, 0, 172, 0, 0, 0, 0, 0,
	304, 171, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 220, 208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	267, 0, 0, 401, 359, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2865, 0, 0, 0, 0, 2867, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 396, 0, 0, 0, 0, 322,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 0, 0, 0, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 0, 165, 0, 0, 0, 299,
	0, 0, 0, 168, 266, 0, 0, 0, 209, 0,
	334, 0, 395, 0, 236, 0, 333, 268, 388, 0,
	0, 394, 0, 371, 402, 406, 232, 0, 200, 356,
	223, 218, 0, 0, 0, 241, 321, 213, 260, 0,
	0, 0, 205, 0, 0, 0, 355, 385, 170, 284,
	386, 405, 188, 378, 285, 292, 202, 204, 203, 182,
	349, 384, 194, 207, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 242, 0, 0, 0, 308, 191,
	0, 0, 0, 399, 0, 344, 343, 0, 249, 0,
	0, 0, 329, 0, 257, 173, 0, 408, 187, 262,
	379, 0, 235, 298, 211, 0, 309, 0, 167, 325,
	280, 282, 279, 283, 239, 0, 0, 0, 327, 346,
	383, 189, 362, 0, 0, 0, 0, 337, 0, 0,
	0, 274, 227, 231, 243, 254, 0, 332, 363, 400,
	0, 184, 336, 364, 375, 365, 368, 366, 367, 176,
	370, 393, 195, 345, 348, 407, 0, 183, 178, 0,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 0, 0, 238, 0, 391, 392, 210, 409, 0,
	0, 179, 0, 0, 295, 303, 294, 0, 387, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 230, 245,
	319, 270, 320, 246, 290, 289, 291, 272, 0, 0,
	174, 0, 360, 0, 0, 369, 192, 0, 0, 382,
	0, 326, 193, 237, 228, 318, 293, 185, 248, 358,
	261, 269, 0, 0, 307, 335, 199, 397, 357, 224,
	0, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 304, 0, 0, 0, 0, 0, 206, 0, 0,
	221, 0, 0, 0, 0, 0, 0, 0, 220, 208,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 401, 359, 287, 0, 315, 175,
	186, 198, 217, 215, 229, 258, 281, 286, 313, 347,
	352, 372, 373, 374, 376, 219, 994, 222, 197, 330,
	196, 271, 251, 314, 380, 381, 323, 212, 0, 169,
	180, 265, 0, 328, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 396, 0, 0, 0, 0,
	322, 240, 0, 0, 0, 0, 0, 0, 2844, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	216, 0, 0, 0, 181, 190, 201, 214, 226, 233,
	244, 247, 252, 253, 255, 259, 273, 275, 276, 277,
	278, 296, 297, 301, 302, 305, 306, 310, 311, 312,
	316, 317, 324, 0, 331, 338, 339, 340, 341, 342,
	350, 351, 353, 354, 361, 389, 390, 403, 404, 0,
	288, 166, 0, 0, 172, 256, 0, 0, 0, 0,
	0, 171, 0, 0, 264, 0, 165, 0, 0, 0,
	299, 0, 0, 0, 168, 266, 0, 0, 0, 209,
	0, 334, 0, 395, 0, 236, 0, 333, 268, 388,
	0, 0, 394, 0, 371, 402, 406, 232, 0, 200,
	356, 223, 218, 0, 0, 0, 241, 321, 213, 260,
	0, 0, 0, 205, 0, 0, 0, 355, 385, 170,
	284, 386, 405, 188, 378, 285, 292, 202, 204, 203,
	182, 349, 384, 194, 207, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 242, 0, 0, 0, 308,
	191, 0, 0, 0, 399, 0, 344, 343, 0, 249,
	0, 0, 0, 329, 0, 257, 173, 0, 408, 187,
	262, 379, 0, 235, 298, 211, 0, 309, 0, 167,
	325, 280, 282, 279, 283, 239, 0, 0, 0, 327,
	346, 383, 189, 362, 0, 0, 0, 0, 337, 0,
	0, 0, 274, 227, 231, 243, 254, 0, 332, 363,
	400, 0, 184, 336, 364, 375, 365, 368, 366, 367,
	176, 370, 393, 195, 345, 348, 407, 0, 183, 178,
	0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 238, 0, 391, 392, 210, 409,
	0, 0, 179, 0, 0, 295, 303, 294, 0, 387,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 230,
	245, 319, 270, 320, 246, 290, 289, 291, 272, 0,
	0, 174, 0, 360, 0, 0, 369, 192, 0, 0,
	382, 0, 326, 193, 237, 228, 318, 293, 185, 248,
	358, 261, 269, 0, 0, 307, 335, 199, 397, 357,
	224, 0, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 206, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	175, 186, 198, 217, 215, 229, 258, 281, 286, 313,
	347, 352, 372, 373, 374, 376, 219, 0, 222, 197,
	330, 196, 271, 251, 314, 380, 381, 323, 212, 0,
	169, 180, 265, 0, 328, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	398, 216, 0, 0, 0, 181, 190, 201, 214, 226,
	233, 244, 247, 252, 253, 255, 259, 273, 275, 276,
	277, 278, 296, 297, 301, 302, 305, 306, 310, 311,
	312, 316, 317, 324, 0, 331, 338, 339, 340, 341,
	342, 350, 351, 353, 354, 361, 389, 390, 403, 404,
	377, 0, 166, 0, 0, 172, 0, 0, 0, 0,
	0, 304, 171, 0, 0, 0, 0, 0, 0, 0,
	221, 0, 0, 0, 0, 0, 0, 0, 220, 208,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 401, 359, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 86, 0, 0, 0, 0, 994, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 396, 0, 0, 0, 0,
	322, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 0, 0, 0, 0, 256, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 165, 0, 0, 0,
	299, 0, 0, 0, 168, 266, 0, 0, 0, 209,
	0, 334, 0, 395, 0, 236, 0, 333, 268, 388,
	0, 0, 394, 0, 371, 402, 406, 232, 0, 200,
	356, 223, 218, 0, 0, 0, 241, 321, 213, 260,
	0, 0, 0, 205, 0, 0, 0, 355, 385, 170,
	284, 386, 405, 188, 378, 285, 292, 202, 204, 203,
	182, 349, 384, 194, 207, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 242, 0, 0, 0, 308,
	191, 0, 0, 0, 399, 0, 344, 343, 0, 249,
	0, 0, 0, 329, 0, 257, 173, 0, 408, 187,
	262, 379, 0, 235, 298, 211, 0, 309, 0, 167,
	325, 280, 282, 279, 283, 239, 0, 0, 0, 327,
	346, 383, 189, 362, 0, 0, 0, 0, 337, 0,
	0, 0, 274, 227, 231, 243, 254, 0, 332, 363,
	400, 0, 184, 336, 364, 375, 365, 368, 366, 367,
	176, 370, 393, 195, 345, 348, 407, 0, 183, 178,
	0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 238, 0, 391, 392, 210, 409,
	0, 0, 179, 0, 0, 295, 303, 294, 0, 387,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 230,
	245, 319, 270, 320, 246, 290, 289, 291, 272, 0,
	0, 174, 0, 360, 0, 0, 369, 192, 0, 0,
	382, 0, 326, 193, 237, 228, 318, 293, 185, 248,
	358, 261, 269, 0, 0, 307, 335, 199, 397, 357,
	224, 0, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 377, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 304, 0, 0, 0, 0, 0, 206, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 220,
	208, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 267, 0, 0, 401, 359, 287, 0, 315,
	175, 186, 198, 217, 215, 229, 258, 281, 286, 313,
	347, 352, 372, 373, 374, 376, 219, 994, 222, 197,
	330, 196, 271, 251, 314, 380, 381, 323, 212, 0,
	169, 180, 265, 0, 328, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 396, 0, 0, 0,
	0, 322, 240, 0, 0, 0, 0, 0, 0, 2217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	398, 216, 0, 0, 0, 181, 190, 201, 214, 226,
	233, 244, 247, 252, 253, 255, 259, 273, 275, 276,
	277, 278, 296, 297, 301, 302, 305, 306, 310, 311,
	312, 316, 317, 324, 0, 331, 338, 339, 340, 341,
	342, 350, 351, 353, 354, 361, 389, 390, 403, 404,
	0, 288, 166, 0, 0, 172, 256, 0, 0, 0,
	0, 0, 171, 0, 0, 264, 0, 165, 0, 0,
	0, 299, 0, 0, 0, 168, 266, 0, 0, 0,
	209, 0, 334, 0, 395, 0, 236, 0, 333, 268,
	388, 0, 0, 394, 0, 371, 402, 406, 232, 0,
	200, 356, 223, 218, 0, 0, 0, 241, 321, 213,
	260, 0, 0, 0, 205, 0, 0, 0, 355, 385,
	170, 284, 386, 405, 188, 378, 285, 292, 202, 204,
	203, 182, 349, 384, 194, 207, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 242, 0, 0, 0,
	308, 191, 0, 0, 0, 399, 0, 344, 343, 0,
	249, 0, 0, 0, 329, 0, 257, 173, 0, 408,
	187, 262, 379, 0, 235, 298, 211, 0, 309, 0,
	167, 325, 280, 282, 279, 283, 239, 0, 0, 0,
	327, 346, 383, 189, 362, 0, 0, 0, 0, 337,
	0, 0, 0, 274, 227, 231, 243, 254, 0, 332,
	363, 400, 0, 184, 336, 364, 375, 365, 368, 366,
	367, 176, 370, 393, 195, 345, 348, 407, 0, 183,
	178, 0, 0, 0, 0, 0, 0, 0, 177, 0,
	0, 0, 0, 0, 0, 238, 0, 391, 392, 210,
	409, 0, 0, 179, 0, 0, 295, 303, 294, 0,
	387, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	230, 245, 319, 270, 320, 246, 290, 289, 291, 272,
	0, 0, 174, 0, 360, 0, 0, 369, 192, 0,
	0, 382, 0, 326, 193, 237, 228, 318, 293, 185,
	248, 358, 261, 269, 0, 0, 307, 335, 199, 397,
	357, 224, 0, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 0, 0, 0, 0, 0, 206,
	0, 0, 221, 0, 0, 0, 0, 0, 0, 2265,
	2266, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 401, 359, 287, 0,
	315, 175, 186, 198, 217, 215, 229, 258, 281, 286,
	313, 347, 352, 372, 373, 374, 376, 219, 994, 222,
	197, 330, 196, 271, 251, 314, 380, 381, 323, 212,
	0, 169, 180, 265, 0, 328, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 322, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 398, 216, 0, 0, 0, 181, 190, 201, 214,
	226, 233, 244, 247, 252, 253, 255, 259, 273, 275,
	276, 277, 278, 296, 297, 301, 302, 305, 306, 310,
	311, 312, 316, 317, 324, 0, 331, 338, 339, 340,
	341, 342, 350, 351, 353, 354, 361, 389, 390, 403,
	404, 0, 288, 166, 0, 0, 172, 256, 0, 0,
	0, 0, 0, 171, 0, 0, 264, 0, 165, 0,
	0, 0, 299, 0, 0, 0, 168, 266, 0, 0,
	0, 209, 0, 334, 0, 395, 0, 236, 0, 333,
	268, 388, 0, 0, 394, 0, 371, 402, 406, 232,
	0, 200, 356, 223, 218, 0, 0, 0, 241, 321,
	213, 260, 0, 0, 0, 205, 0, 0, 0, 355,
	385, 170, 284, 386, 405, 188, 378, 285, 292, 202,
	204, 203, 182, 349, 384, 194, 207, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 242, 0, 0,
	0, 308, 191, 0, 0, 0, 399, 0, 344, 343,
	0, 249, 0, 0, 0, 329, 0, 257, 173, 0,
	408, 187, 262, 379, 0, 235, 298, 211, 0, 309,
	0, 167, 325, 280, 282, 279, 283, 239, 0, 0,
	0, 327, 346, 383, 189, 362, 0, 0, 0, 0,
	337, 0, 0, 0, 274, 227, 231, 243, 254, 0,
	332, 363, 400, 0, 184, 336, 364, 375, 365, 368,
	366, 367, 176, 370, 393, 195, 345, 348, 407, 0,
	183, 178, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 238, 0, 391, 392,
	210, 409, 0, 0, 179, 0, 0, 295, 303, 294,
	0, 387, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 230, 245, 319, 270, 320, 246, 290, 289, 291,
	272, 0, 0, 174, 0, 360, 0, 0, 369, 192,
	0, 0, 382, 0, 326, 193, 237, 228, 318, 293,
	185, 248, 358, 261, 269, 0, 0, 307, 335, 199,
	397, 357, 224, 0, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 304, 0, 0, 0, 0, 0,
	206, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	0, 220, 208, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 401, 359, 287,
	0, 315, 175, 186, 198, 217, 215, 229, 258, 281,
	286, 313, 347, 352, 372, 373, 374, 376, 219, 994,
	222, 197, 330, 196, 271, 251, 314, 380, 381, 323,
	212, 0, 169, 180, 265, 0, 328, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 396, 0,
	0, 0, 0, 322, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 398, 216, 0, 0, 0, 181, 190, 201,
	214, 226, 233, 244, 247, 252, 253, 255, 259, 273,
	275, 276, 277, 278, 296, 297, 301, 302, 305, 306,
	310, 311, 312, 316, 317, 324, 0, 331, 338, 339,
	340, 341, 342, 350, 351, 353, 354, 361, 389, 390,
	403, 404, 0, 288, 166, 0, 0, 172, 256, 0,
	0, 0, 0, 0, 171, 0, 0, 264, 0, 165,
	0, 0, 0, 299, 0, 0, 0, 168, 266, 0,
	0, 0, 209, 0, 334, 0, 395, 0, 236, 0,
	333, 268, 388, 0, 0, 394, 0, 371, 402, 406,
	232, 0, 200, 356, 223, 218, 0, 0, 0, 241,
	321, 213, 260, 0, 0, 0, 205, 0, 0, 0,
	355, 385, 170, 284, 386, 405, 188, 378, 285, 292,
	202, 204, 203, 182, 349, 384, 194, 207, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 242, 0,
	0, 0, 308, 191, 0, 0, 0, 399, 0, 344,
	343, 0, 249, 0, 0, 0, 329, 0, 257, 173,
	0, 408, 187, 262, 379, 0, 235, 298, 211, 0,
	309, 0, 167, 325, 280, 282, 279, 283, 239, 0,
	0, 0, 327, 346, 383, 189, 362, 0, 0, 0,
	0, 337, 0, 0, 0, 274, 227, 231, 243, 254,
	0, 332, 363, 400, 0, 184, 336, 364, 375, 365,
	368, 366, 367, 176, 370, 393, 195, 345, 348, 407,
	0, 183, 178, 0, 0, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 0, 0, 238, 0, 391,
	392, 210, 409, 0, 0, 179, 0, 0, 295, 303,
	294, 0, 387, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 230, 245, 319, 270, 320, 246, 290, 289,
	291, 272, 0, 0, 174, 0, 360, 0, 0, 369,
	192, 0, 0, 382, 0, 326, 193, 237, 228, 318,
	293, 185, 248, 358, 261, 269, 0, 0, 307, 335,
	199, 397, 357, 224, 0, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 304, 0, 0, 0, 0,
	0, 206, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 0, 220, 208, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 0, 401, 359,
	287, 0, 315, 175, 186, 198, 217, 215, 229, 258,
	281, 286, 313, 347, 352, 372, 373, 374, 376, 219,
	2867, 222, 197, 330, 196, 271, 251, 314, 380, 381,
	323, 212, 0, 169, 180, 265, 0, 328, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 396,
	0, 0, 0, 0, 322, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 398, 216, 0, 0, 0, 181, 190,
	201, 214, 226, 233, 244, 247, 252, 253, 255, 259,
	273, 275, 276, 277, 278, 296, 297, 301, 302, 305,
	306, 310, 311, 312, 316, 317, 324, 0, 331, 338,
	339, 340, 341, 342, 350, 351, 353, 354, 361, 389,
	390, 403, 404, 0, 288, 166, 0, 0, 172, 256,
	0, 0, 0, 0, 0, 171, 0, 0, 264, 0,
	165, 0, 0, 0, 299, 0, 0, 0, 168, 266,
	0, 0, 0, 209, 0, 334, 0, 395, 0, 236,
	0, 333, 268, 388, 0, 0, 394, 0, 371, 402,
	406, 232, 0, 200, 356, 223, 218, 0, 0, 0,
	241, 321, 213, 260, 0, 0, 0, 205, 0, 0,
	0, 355, 385, 170, 284, 386, 405, 188, 378, 285,
	292, 202, 204, 203, 182, 349, 384, 194, 207, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 242,
	0, 0, 0, 308, 191, 0, 0, 0, 399, 0,
	344, 343, 0, 249, 0, 0, 0, 329, 0, 257,
	173, 0, 408, 187, 262, 379, 0, 235, 298, 211,
	0, 309, 0, 167, 325, 280, 282, 279, 283, 239,
	0, 0, 0, 327, 346, 383, 189, 362, 0, 0,
	0, 0, 337, 0, 0, 0, 274, 227, 231, 243,
	254, 0, 332, 363, 400, 0, 184, 336, 364, 375,
	365, 368, 366, 367, 176, 370, 393, 195, 345, 348,
	407, 0, 183, 178, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 0, 0, 238, 0,
	391, 392, 210, 409, 0, 0, 179, 0, 0, 295,
	303, 294, 0, 387, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 230, 245, 319, 270, 320, 246, 290,
	289, 291, 272, 0, 0, 174, 0, 360, 0, 0,
	369, 192, 0, 0, 382, 0, 326, 193, 237, 228,
	318, 293, 185, 248, 358, 261, 269, 0, 0, 307,
	335, 199, 397, 357, 224, 0, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 304, 0, 0, 0,
	0, 0, 206, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 0, 220, 208, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 401,
	359, 287, 0, 315, 175, 186, 198, 217, 215, 229,
	258, 281, 286, 313, 347, 352, 372, 373, 374, 376,
	219, 1781, 222, 197, 330, 196, 271, 251, 314, 380,
	381, 323, 212, 0, 169, 180, 265, 0, 328, 234,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	396, 0, 0, 0, 0, 322, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 398, 216, 0, 0, 0, 181,
	190, 201, 214, 226, 233, 244, 247, 252, 253, 255,
	259, 273, 275, 276, 277, 278, 296, 297, 301, 302,
	305, 306, 310, 311, 312, 316, 317, 324, 0, 331,
	338, 339, 340, 341, 342, 350, 351, 353, 354, 361,
	389, 390, 403, 404, 0, 288, 166, 0, 0, 172,
	256, 0, 0, 0, 0, 0, 171, 0, 0, 264,
	0, 165, 0, 0, 0, 299, 0, 0, 0, 168,
	266, 0, 0, 0, 209, 0, 334, 0, 395, 0,
	236, 0, 333, 268, 388, 0, 0, 394, 0, 371,
	402, 406, 232, 0, 200, 356, 223, 218, 0, 0,
	0, 241, 321, 213, 260, 0, 0, 0, 205, 0,
	0, 0, 355, 385, 170, 284, 386, 405, 188, 378,
	285, 292, 202, 204, 203, 182, 349, 384, 194, 207,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	242, 0, 0, 0, 308, 191, 0, 0, 0, 399,
	0, 344, 343, 0, 249, 0, 0, 0, 329, 0,
	257, 173, 0, 408, 187, 262, 379, 0, 235, 298,
	211, 0, 309, 0, 167, 325, 280, 282, 279, 283,
	239, 0, 0, 0, 327, 346, 383, 189, 362, 0,
	0, 0, 0, 337, 0, 0, 0, 274, 227, 231,
	243, 254, 0, 332, 363, 400, 0, 184, 336, 364,
	375, 365, 368, 366, 367, 176, 370, 393, 195, 345,
	348, 407, 0, 183, 178, 0, 0, 0, 0, 0,
	0, 0, 177, 0, 0, 0, 0, 0, 0, 238,
	0, 391, 392, 210, 409, 0, 0, 179, 0, 0,
	295, 303, 294, 0, 387, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 230, 245, 319, 270, 320, 246,
	290, 289, 291, 272, 0, 0, 174, 0, 360, 0,
	0, 369, 192, 0, 0, 382, 0, 326, 193, 237,
	228, 318, 293, 185, 248, 358, 261, 269, 0, 0,
	307, 335, 199, 397, 357, 224, 0, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 304, 0, 0,
	0, 0, 0, 206, 0, 0, 221, 0, 0, 0,
	0, 0, 0, 0, 220, 208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 267, 0, 0,
	401, 359, 287, 0, 315, 175, 186, 198, 217, 215,
	229, 258, 281, 286, 313, 347, 352, 372, 373, 374,
	376, 219, 139, 222, 197, 330, 196, 271, 251, 314,
	380, 381, 323, 212, 0, 169, 180, 265, 0, 328,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 396, 0, 0, 0, 0, 322, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 398, 216, 0, 0, 0,
	181, 190, 201, 214, 226, 233, 244, 247, 252, 253,
	255, 259, 273, 275, 276, 277, 278, 296, 297, 301,
	302, 305, 306, 310, 311, 312, 316, 317, 324, 0,
	331, 338, 339, 340, 341, 342, 350, 351, 353, 354,
	361, 389, 390, 403, 404, 0, 288, 166, 0, 0,
	172, 256, 0, 0, 0, 0, 0, 171, 0, 0,
	264, 0, 165, 0, 0, 0, 299, 0, 0, 0,
	168, 266, 0, 0, 0, 209, 0, 334, 0, 395,
	0, 236, 0, 333, 268, 388, 0, 0, 394, 0,
	371, 402, 406, 232, 0, 200, 356, 223, 218, 0,
	0, 0, 241, 321, 213, 260, 0, 0, 0, 205,
	0, 0, 0, 355, 385, 170, 284, 386, 405, 188,
	378, 285, 292, 202, 204, 203, 182, 349, 384, 194,
	207, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 242, 0, 0, 0, 308, 191, 0, 0, 0,
	399, 0, 344, 343, 0, 249, 0, 0, 0, 329,
	0, 257, 173, 0, 408, 187, 262, 379, 0, 235,
	298, 211, 0, 309, 0, 167, 325, 280, 282, 279,
	283, 239, 0, 0, 0, 327, 346, 383, 189, 362,
	0, 0, 0, 0, 337, 0, 0, 0, 274, 227,
	231, 243, 254, 0, 332, 363, 400, 0, 184, 336,
	364, 375, 365, 368, 366, 367, 176, 370, 393, 195,
	345, 348, 407, 0, 183, 178, 0, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 0, 0, 0, 0,
	238, 0, 391, 392, 210, 409, 0, 0, 179, 0,
	0, 295, 303, 294, 0, 387, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 230, 245, 319, 270, 320,
	246, 290, 289, 291, 272, 0, 0, 174, 0, 360,
	0, 0, 369, 192, 0, 0, 382, 0, 326, 193,
	237, 228, 318, 293, 185, 248, 358, 261, 269, 0,
	0, 307, 335, 199, 397, 357, 224, 0, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	0, 0, 0, 0, 206, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 220, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 401, 359, 287, 0, 315, 175, 186, 198, 217,
	215, 229, 258, 281, 286, 313, 347, 352, 372, 373,
	374, 376, 219, 464, 222, 197, 330, 196, 271, 251,
	314, 380, 381, 323, 212, 0, 169, 180, 265, 0,
	328, 234, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 396, 0, 0, 0, 0, 322, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 398, 216, 0, 0,
	0, 181, 190, 201, 214, 226, 233, 244, 247, 252,
	253, 255, 259, 273, 275, 276, 277, 278, 296, 297,
	301, 302, 305, 306, 310, 311, 312, 316, 317, 324,
	0, 331, 338, 339, 340, 341, 342, 350, 351, 353,
	354, 361, 389, 390, 403, 404, 0, 288, 166, 0,
	0, 172, 256, 0, 0, 0, 0, 0, 171, 0,
	0, 264, 0, 165, 0, 0, 0, 299, 0, 0,
	0, 168, 266, 0, 0, 0, 209, 0, 334, 0,
	395, 0, 236, 0, 333, 268, 388, 0, 0, 394,
	0, 371, 402, 406, 232, 0, 200, 356, 223, 218,
	0, 0, 0, 241, 321, 213, 260, 0, 0, 0,
	205, 0, 0, 0, 355, 385, 170, 284, 386, 405,
	188, 378, 285, 292, 202, 204, 203, 182, 349, 384,
	194, 207, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 242, 0, 0, 0, 308, 191, 0, 0,
	0, 399, 0, 344, 343, 0, 249, 0, 0, 0,
	329, 0, 257, 173, 0, 408, 187, 262, 379, 0,
	235, 298, 211, 0, 309, 0, 167, 325, 280, 282,
	279, 283, 239, 0, 0, 0, 327, 346, 383, 189,
	362, 0, 0, 0, 0, 337, 0, 0, 0, 274,
	227, 231, 243, 254, 0, 332, 363, 400, 0, 184,
	336, 364, 375, 365, 368, 366, 367, 176, 370, 393,
	195, 345, 348, 407, 0, 183, 178, 0, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 238, 0, 391, 392, 210, 409, 0, 0, 179,
	0, 0, 295, 303, 294, 0, 387, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 230, 245, 319, 270,
	320, 246, 290, 289, 291, 272, 0, 0, 174, 0,
	360, 0, 0, 369, 192, 0, 0, 382, 0, 326,
	193, 237, 228, 318, 293, 185, 248, 358, 261, 269,
	0, 0, 307, 335, 199, 397, 357, 224, 0, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 304,
	0, 0, 0, 0, 0, 206, 0, 0, 221, 0,
	0, 0, 0, 0, 0, 0, 220, 208, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 401, 359, 287, 0, 315, 175, 186, 198,
	217, 215, 229, 258, 281, 286, 313, 347, 352, 372,
	373, 374, 376, 219, 1044, 222, 197, 330, 196, 271,
	251, 314, 380, 381, 323, 212, 0, 169, 180, 265,
	0, 328, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 396, 0, 0, 0, 0, 322, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 216, 0,
	0, 0, 181, 190, 201, 214, 226, 233, 244, 247,
	252, 253, 255, 259, 273, 275, 276, 277, 278, 296,
	297, 301, 302, 305, 306, 310, 311, 312, 316, 317,
	324, 0, 331, 338, 339, 340, 341, 342, 350, 351,
	353, 354, 361, 389, 390, 403, 404, 0, 288, 166,
	0, 0, 172, 256, 0, 0, 0, 0, 0, 171,
	0, 0, 264, 0, 165, 0, 0, 0, 299, 0,
	0, 0, 168, 266, 0, 0, 0, 209, 0, 334,
	0, 395, 0, 236, 0, 333, 268, 388, 0, 0,
	394, 0, 371, 402, 406, 232, 0, 200, 356, 223,
	218, 0, 0, 0, 241, 321, 213, 260, 0, 0,
	0, 205, 0, 0, 0, 355, 385, 170, 284, 386,
	405, 188, 378, 285, 292, 202, 204, 203, 182, 349,
	384, 194, 207, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 242, 0, 0, 0, 308, 191, 0,
	0, 0, 399, 0, 344, 343, 0, 249, 0, 0,
	0, 329, 0, 257, 173, 0, 408, 187, 262, 379,
	0, 235, 298, 211, 0, 309, 0, 167, 325, 280,
	282, 279, 283, 239, 0, 0, 0, 327, 346, 383,
	189, 362, 0, 0, 0, 0, 337, 0, 0, 0,
	274, 227, 231, 243, 254, 0, 332, 363, 400, 0,
	184, 336, 364, 375, 365, 368, 366, 367, 176, 370,
	393, 195, 345, 348, 407, 0, 183, 178, 0, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 238, 0, 391, 392, 210, 409, 0, 0,
	179, 0, 0, 295, 303, 294, 0, 387, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 230, 245, 319,
	270, 320, 246, 290, 289, 291, 272, 0, 0, 174,
	0, 360, 0, 0, 369, 192, 0, 0, 382, 0,
	326, 193, 237, 228, 318, 293, 185, 248, 358, 261,
	269, 0, 0, 307, 335, 199, 397, 357, 224, 0,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	304, 0, 0, 0, 0, 0, 206, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 220, 208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	267, 0, 0, 401, 359, 287, 0, 315, 175, 186,
	198, 217, 215, 229, 258, 281, 286, 313, 347, 352,
	372, 373, 374, 376, 219, 1034, 222, 197, 330, 196,
	271, 251, 314, 380, 381, 323, 212, 0, 169, 180,
	265, 0, 328, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 396, 0, 0, 0, 0, 322,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 398, 216,
	0, 0, 0, 181, 190, 201, 214, 226, 233, 244,
	247, 252, 253, 255, 259, 273, 275, 276, 277, 278,
	296, 297, 301, 302, 305, 306, 310, 311, 312, 316,
	317, 324, 0, 331, 338, 339, 340, 341, 342, 350,
	351, 353, 354, 361, 389, 390, 403, 404, 0, 288,
	166, 0, 0, 172, 256, 0, 0, 0, 0, 0,
	171, 0, 0, 264, 0, 165, 0, 0, 0, 299,
	0, 0, 0, 168, 266, 0, 0, 0, 209, 0,
	334, 0, 395, 0, 236, 0, 333, 268, 388, 0,
	0, 394, 0, 371, 402, 406, 232, 0, 200, 356,
	223, 218, 0, 0, 0, 241, 321, 213, 260, 0,
	0, 0, 205, 0, 0, 0, 355, 385, 170, 284,
	386, 405, 188, 378, 285, 292, 202, 204, 203, 182,
	349, 384, 194, 207, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 242, 0, 0, 0, 308, 191,
	0, 0, 0, 399, 0, 344, 343, 0, 249, 0,
	0, 0, 329, 0, 257, 173, 0, 408, 187, 262,
	379, 0, 235, 298, 211, 0, 309, 0, 167, 325,
	280, 282, 279, 283, 239, 0, 0, 0, 327, 346,
	383, 189, 362, 0, 0, 0, 0, 337, 0, 0,
	0, 274, 227, 231, 243, 254, 0, 332, 363, 400,
	0, 184, 336, 364, 375, 365, 368, 366, 367, 176,
	370, 393, 195, 345, 348, 407, 0, 183, 178, 0,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 0, 0, 238, 0, 391, 392, 210, 409, 0,
	0, 179, 0, 0, 295, 303, 294, 0, 387, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 230, 245,
	319, 270, 320, 246, 290, 289, 291, 272, 0, 0,
	174, 0, 360, 0, 0, 369, 192, 0, 0, 382,
	0, 326, 193, 237, 228, 318, 293, 185, 248, 358,
	261, 269, 0, 0, 307, 335, 199, 397, 357, 224,
	0, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 304, 0, 0, 0, 0, 0, 206, 0, 0,
	221, 0, 0, 0, 0, 0, 0, 0, 220, 208,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 401, 359, 287, 0, 315, 175,
	186, 198, 217, 215, 229, 258, 281, 286, 313, 347,
	352, 372, 373, 374, 376, 219, 413, 222, 197, 330,
	196, 271, 251, 314, 380, 381, 323, 212, 0, 169,
	180, 265, 0, 328, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 396, 0, 0, 0, 0,
	322, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	216, 0, 0, 0, 181, 190, 201, 214, 226, 233,
	244, 247, 252, 253, 255, 259, 273, 275, 276, 277,
	278, 296, 297, 301, 302, 305, 306, 310, 311, 312,
	316, 317, 324, 0, 331, 338, 339, 340, 341, 342,
	350, 351, 353, 354, 361, 389, 390, 403, 404, 0,
	288, 166, 0, 0, 172, 256, 0, 0, 0, 0,
	0, 171, 0, 0, 264, 0, 165, 0, 0, 0,
	299, 0, 0, 0, 168, 266, 0, 0, 0, 209,
	0, 334, 0, 395, 0, 236, 0, 333, 268, 388,
	0, 0, 394, 0, 371, 402, 406, 232, 0, 200,
	356, 223, 218, 0, 0, 0, 241, 321, 213, 260,
	0, 0, 0, 205, 0, 0, 0, 355, 385, 170,
	284, 386, 405, 188, 378, 285, 292, 202, 204, 203,
	182, 349, 384, 194, 207, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 242, 0, 0, 0, 308,
	191, 0, 0, 0, 399, 0, 344, 343, 0, 249,
	0, 0, 0, 329, 0, 257, 173, 0, 408, 187,
	262, 379, 0, 235, 298, 211, 0, 309, 0, 167,
	325, 280, 282, 279, 283, 239, 0, 0, 0, 327,
	346, 383, 189, 362, 0, 0, 0, 0, 337, 0,
	0, 0, 274, 227, 231, 243, 254, 0, 332, 363,
	400, 0, 184, 336, 364, 375, 365, 368, 366, 367,
	176, 370, 393, 195, 345, 348, 407, 0, 183, 178,
	0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 238, 0, 391, 392, 210, 409,
	0, 0, 179, 0, 0, 295, 303, 294, 0, 387,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 230,
	245, 319, 270, 320, 246, 290, 289, 291, 272, 0,
	0, 174, 0, 360, 0, 0, 369, 192, 0, 0,
	382, 0, 326, 193, 237, 228, 318, 293, 185, 248,
	358, 261, 269, 0, 0, 307, 335, 199, 397, 357,
	224, 0, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 377, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 304, 0, 0, 0, 0, 0, 206, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 220,
	208, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 267, 0, 0, 401, 359, 287, 0, 315,
	175, 186, 198, 217, 215, 229, 258, 281, 286, 313,
	347, 352, 372, 373, 374, 376, 219, 411, 222, 197,
	330, 196, 271, 251, 314, 380, 381, 323, 212, 0,
	169, 180, 265, 0, 328, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 396, 0, 0, 0,
	0, 322, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	398, 216, 0, 0, 0, 181, 190, 201, 214, 226,
	233, 244, 247, 252, 253, 255, 259, 273, 275, 276,
	277, 278, 296, 297, 301, 302, 305, 306, 310, 311,
	312, 316, 317, 324, 0, 331, 338, 339, 340, 341,
	342, 350, 351, 353, 354, 361, 389, 390, 403, 404,
	0, 288, 166, 0, 0, 172, 256, 0, 0, 0,
	0, 0, 171, 0, 0, 264, 0, 165, 0, 0,
	0, 299, 0, 0, 0, 168, 266, 0, 0, 0,
	209, 0, 334, 0, 395, 0, 236, 0, 333, 268,
	388, 0, 0, 394, 0, 371, 402, 406, 232, 0,
	200, 356, 223, 218, 0, 0, 0, 241, 321, 213,
	260, 0, 0, 0, 205, 0, 0, 0, 355, 385,
	170, 284, 386, 405, 188, 378, 285, 292, 202, 204,
	203, 182, 349, 384, 194, 207, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 242, 0, 0, 0,
	308, 191, 0, 0, 0, 399, 0, 344, 343, 0,
	249, 0, 0, 0, 329, 0, 257, 173, 0, 408,
	187, 262, 379, 0, 235, 298, 211, 0, 309, 0,
	167, 325, 280, 282, 279, 283, 239, 0, 0, 0,
	327, 346, 383, 189, 362, 0, 0, 0, 0, 337,
	0, 0, 0, 274, 227, 231, 243, 254, 0, 332,
	363, 400, 0, 184, 336, 364, 375, 365, 368, 366,
	367, 176, 370, 393, 195, 345, 348, 407, 0, 183,
	178, 0, 0, 0, 0, 0, 0, 0, 177, 0,
	0, 0, 0, 0, 0, 238, 0, 391, 392, 210,
	409, 0, 0, 179, 0, 0, 295, 303, 294, 0,
	387, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	230, 245, 319, 270, 320, 246, 290, 289, 291, 272,
	0, 0, 174, 0, 360, 0, 0, 369, 192, 0,
	0, 382, 0, 326, 193, 237, 228, 318, 293, 185,
	248, 358, 261, 269, 0, 0, 307, 335, 199, 397,
	357, 224, 0, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 206,
	0, 0, 40, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 64, 0, 0, 0,
	0, 0, 82, 0, 0, 43, 0, 0, 0, 0,
	315, 175, 186, 198, 217, 215, 229, 258, 281, 286,
	313, 347, 352, 372, 373, 374, 376, 219, 0, 222,
	197, 330, 196, 271, 251, 314, 380, 381, 323, 212,
	0, 169, 180, 265, 86, 328, 234, 0, 0, 3459,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3452, 0, 0, 0, 0, 3708, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 398, 216, 0, 0, 0, 181, 190, 201, 214,
	226, 233, 244, 247, 252, 253, 255, 259, 273, 275,
	276, 277, 278, 296, 297, 301, 302, 305, 306, 310,
	311, 312, 316, 317, 324, 0, 331, 338, 339, 340,
	341, 342, 350, 351, 353, 354, 361, 389, 390, 403,
	404, 0, 40, 166, 0, 0, 172, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 64, 45, 79, 49,
	48, 51, 82, 0, 0, 43, 0, 0, 0, 0,
	0, 0, 3453, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 40, 0, 0, 0, 0, 0, 55,
	81, 80, 0, 0, 0, 0, 50, 64, 0, 0,
	0, 0, 0, 82, 86, 3705, 43, 0, 0, 3459,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3452, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 86, 0, 0, 62, 63,
	3459, 3455, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3462, 3456, 3457, 3458, 3460, 3461, 0, 0, 0,
	0, 71, 3452, 72, 0, 0, 0, 3634, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 76, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 53, 0,
	0, 0, 0, 0, 0, 0, 0, 45, 79, 49,
	48, 51, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3453, 3463, 3454, 0, 59, 60, 66, 0,
	67, 0, 0, 40, 0, 0, 0, 0, 0, 55,
	81, 80, 0, 0, 0, 0, 50, 64, 45, 79,
	49, 48, 51, 82, 0, 0, 43, 0, 0, 0,
	0, 0, 0, 3453, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 40, 0, 0, 0, 0, 0,
	55, 81, 80, 0, 0, 0, 0, 50, 64, 0,
	0, 0, 0, 0, 82, 86, 0, 43, 62, 63,
	3459, 3455, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3462, 3456, 3457, 3458, 3460, 3461, 0, 0, 0,
	0, 71, 3452, 72, 0, 0, 0, 3630, 0, 0,
	0, 0, 0, 0, 0, 0, 86, 0, 0, 62,
	63, 3459, 3455, 0, 0, 0, 0, 0, 76, 0,
	0, 0, 3462, 3456, 3457, 3458, 3460, 3461, 53, 0,
	0, 0, 71, 3452, 72, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3704, 3454, 0, 59, 60, 66, 76,
	67, 0, 0, 0, 0, 0, 0, 0, 0, 53,
	52, 54, 0, 0, 0, 0, 78, 0, 45, 79,
	49, 48, 51, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3453, 3463, 3454, 0, 59, 60, 66,
	0, 67, 0, 0, 0, 0, 0, 0, 0, 0,
	55, 81, 80, 0, 0, 0, 0, 50, 0, 45,
	79, 49, 48, 51, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3453, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 55, 81, 80, 0, 0, 0, 0, 50, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 62,
	63, 0, 3455, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3462, 3456, 3457, 3458, 3460, 3461, 0, 0,
	0, 0, 71, 0, 72, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	62, 63, 0, 3455, 0, 0, 0, 0, 0, 76,
	0, 0, 0, 3462, 3456, 3457, 3458, 3460, 3461, 53,
	52, 54, 0, 71, 0, 72, 78, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3463, 3454, 0, 59, 60, 66,
	76, 67, 0, 0, 0, 0, 0, 0, 0, 0,
	53, 52, 54, 0, 0, 0, 0, 78, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3463, 3454, 0, 59, 60,
	66, 0, 67, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 52, 54, 0, 0, 0, 0, 78, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 52, 54, 0, 0, 0, 0, 78,
}

var yyPact = [...]int{
	5141, -1000, -450, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2168,
	-1000, -1000, 343, -1000, 1114, 266, -1000, -1000, 419, 84,
	37445, 850, 53674, 53223, -279, 1415, 51419, 69, -1000, 69,
	239, 34925, 533, 550, 51870, 2070, 1664, 75, -47, -48,
	148, 39349, 38712, 133, 88, 93, 52, -1000, 41690, 108,
	-1000, -1000, -1000, -1000, 2233, 231, -1000, -1000, 2143, 2164,
	1996, -1000, 8496, -1000, -1000, -1000, -1000, -1000, 22774, -1000,
	2191, 38075, 30511, -1000, 844, 828, -163, 768, 768, 613,
	768, 768, 849, -1000, 457, 1182, -1000, -1000, -1000, -1000,
	1171, 38075, 47002, 775, 50066, 775, 775, 775, 775, 775,
	775, 775, 52772, 38075, -1000, 916, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	38075, 2217, 2216, 1945, 1944, 52321, 1662, 2099, 1168, 167,
	1168, -1000, -1000, 1164, -1000, 579, 575, 572, 627, 566,
	169, 1179, 2152, -1000, 1911, 2143, 2143, -1000, -1000, -1000,
	-1000, -1000, -1000, 976, -1000, -1000, 1218, 1218, 361, 826,
	233, 606, 231, 2124, 1162, 2098, 2097, 1465, 2096, 677,
	2093, 1939, -1000, 911, -1000, -1000, -14, -1000, 1660, 38075,
	-1000, -1000, 1433, 1432, 466, 1847, 912, 1970, -1000, -1000,
	409, 743, 1933, 507, 1933, 1933, 1933, 196, 1933, 1933,
	-53, 1933, 1933, 1933, 142, 1933, 200, 1933, 1933, 1933,
	1933, 1933, 1684, -1000, -1000, -1000, 511, 1845, 1881, 1969,
	91, -1000, -123, -1000, 646, -1000, -1000, -1000, 1962, 43580,
	1900, -1000, 1911, -1000, -1000, -1000, 1602, 848, -1000, 1962,
	2141, 1692, -1000, 41690, 2094, 1333, 14986, 2047, -1000, -1000,
	1271, 2209, -1000, 29881, 908, -1000, 14986, 4487, 1911, 1911,
	-1000, 869, 974, -1000, 877, 900, -1000, -1000, 14337, 14337,
	14337, 14337, 14337, 14337, 14337, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1911, 907, 902, 1911, 1911, 1911, 1911, 1911, -1000,
	13039, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1911, 1911, 1911, 1911, 1911, 1911, 1911,
	1911, 1911, 1911, 1911, 1911, 1911, 1911, 14986, 1911, 1911,
	1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911,
	1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911,
	1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911,
	1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 785,
	785, 36815, 1908, -131, 22125, -1000, -1000, -1000, -1000, 20827,
	46372, 1143, -1000, -1000, -1000, -1000, 2091, -1000, -1000, 901,
	900, 869, 867, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2168, -1000, -1000, 1810, 728, -1000, 4847, 4847, 4847,
	4847, 4847, 350, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1938, 50066, 38075, 352, 1646, 1188, 1645, 51870,
	51870, -1000, 349, 47002, 47002, 768, 439, 47002, 374, 1907,
	823, 1906, 822, 1669, 38075, 2117, 1967, 38075, 1644, 1643,
	51870, 51870, 47002, 47002, -1000, -1000, -1000, 28615, 1905, -1000,
	1548, 1544, 50968, 50968, -1000, -1000, -1000, 1168, -1000, 5634,
	14986, 768, 768, 38075, 38075, 38075, 38075, -1000, 38075, -1000,
	-1000, 1168, -1000, 1168, 1168, 1168, 1148, 2204, 1148, -1000,
	1148, -1000, -1000, 14986, -1000, 14337, 45742, 992, -1000, -1000,
	51419, 649, 649, 649, -1000, 1642, 358, -1000, -1000, -1000,
	-1000, -1000, 233, -1000, -1000, 2077, 1641, 677, 677, -1000,
	1542, 677, 1880, -1000, 1126, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 677, -1000, 13688,
	50066, -429, -1000, -1000, 1904, -1000, 299, -1000, -1000, 642,
	1960, 642, 236, 47002, 47002, 47002, -1000, 1933, 50066, -1000,
	1933, 1933, 1933, -73, 1933, 1933, -1000, -1000, 1933, -1000,
	-1000, -1000, 1933, -1000, -1000, 1933, -1000, -1000, -1000, 1933,
	1933, -1000, 1933, 1933, -1000, -1000, -1000, -1000, -1000, 47002,
	642, 250, 1901, 642, 47002, 47002, 821, -74, -1000, 123,
	121, 113, 111, -1000, -1000, -1000, -1000, 109, 107, -1000,
	-1000, -1000, 1900, 43580, 2134, 17582, 2103, -1000, 2103, -1000,
	-1000, -1000, 175, -1000, 38075, -1000, -1000, 231, -1000, -1000,
	-1000, -1000, 1962, 1235, 2230, 1017, 1873, -1000, -1000, 1897,
	-1000, 1337, 899, 1281, 2013, -1000, -1000, -1000, 38075, -1000,
	14986, 14986, 14986, 1264, -1000, 31141, -1000, -1000, -1000, -1000,
	-1000, -1000, 18880, 1035, 14337, 1278, 1045, 14337, 14337, 14337,
	14337, 14337, 14337, 14337, 14337, 14337, 14337, 14337, 14337, 14337,
	14337, 14337, 1389, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1640, -1000, 231, 26668, 9794, 26668, 1738, 1738, 50066,
	968, 968, 968, 968, 968, 968, 39800, 2130, 26019, 26668,
	2130, 2130, 2130, 2130, 2130, 1692, 1803, 1434, 41690, 13039,
	9794, 9794, 9794, 1692, 14986, 14986, 9794, 9794, 12390, 11741,
	16284, 9794, 9794, 2130, 1169, 1434, 20827, 9794, -1000, -1000,
	11092, -1000, -1000, -1000, -1000, -1000, 1692, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 50066, 50066, 9794, 9794, 9794,
	9794, 1692, 1692, 9794, 9794, 9794, 9794, 9794, 1692, 1692,
	1692, 1692, 9794, 9794, 9794, 9794, 9794, 9794, 9794, 9794,
	9794, 9794, 9794, 9794, 36185, 34295, 38075, 1860, 1859, -1000,
	898, 21476, 1875, -1000, -115, -77, -131, -1000, -1000, 966,
	-1000, -1000, -1000, 10443, -1000, 19529, 2143, 1996, -1000, 29251,
	-1000, -1000, -24, -1000, -1000, -1000, 1921, -1000, 1926, 354,
	15, 1926, 1926, 1926, 1926, 1926, -1000, -1000, -1000, -1000,
	25, -1000, -1000, -1000, -1000, -1000, 1937, 1935, -1000, 1921,
	1921, 1921, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1929, 362, 1925, 1925, 1925, 1925, 1925, -1000, -1000,
	-1000, -1000, 669, 669, 669, -1000, 14986, 1941, 2133, 802,
	439, 2103, 2116, 2103, 612, -1000, 897, 1934, 597, 1825,
	-1000, 254, 1605, 35555, -1000, -1000, -1000, -1000, -1000, 38075,
	38075, 47002, 47002, 47002, 801, -1000, 38075, 1883, -1000, -1000,
	-1000, -1000, -1000, 1861, -1000, 1605, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 38075, -1000, -1000, 1882,
	-1000, -1000, -1000, 1882, -1000, -1000, 1540, 1434, 1639, 1637,
	2124, -1000, -1000, -1000, 1159, -1000, -1000, -1000, -1000, 1168,
	51419, 51419, 38075, 2124, 1168, 1434, 1128, 1942, 1911, 1692,
	-1000, -1000, 61, -1000, 55, -1000, -1000, -1000, 1635, -1000,
	14337, -1000, 1880, 1880, -1000, 1880, 677, 1738, 1880, -1000,
	1799, -1000, 1231, 1539, 38075, -1000, 43580, -16, -1000, -137,
	49164, -1000, -1000, -1000, 642, 49164, -1000, 142, 178, -1000,
	820, -1000, 1797, -1000, -1000, -1000, -1000, 1933, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 49164, 195,
	242, 49164, 1861, 2197, 103, -1000, -1000, -1000, -1000, -1000,
	-1000, 2150, -1000, -1000, 1911, 1775, -1000, 896, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2090, 1063,
	1063, 1063, 317, 1692, -1000, 49615, -1000, 2005, 1333, 1333,
	14986, -1000, -1000, -1000, 19529, 2147, -1000, 2027, 2025, 1971,
	-1000, -1000, 1035, 1116, 1108, -1000, -1000, 1232, -1000, -1000,
	-1000, -1000, -1000, 895, 1911, -1000, -1000, -1000, -1000, -1000,
	4051, -1000, -1000, -1000, -1000, 1278, 14337, 14337, 14337, 1128,
	4051, 4669, 1113, 1834, 968, 1214, 1214, 967, 967, 967,
	967, 967, 1166, 1166, -1000, -1000, -1000, 1692, -1000, 1724,
	-1000, -1000, 1434, 894, -1000, -1000, -1000, -1000, -1000, -1000,
	9794, -1000, -1000, -1000, 9794, 9794, 9794, 9794, 9794, -1000,
	14986, -1000, 1692, 1724, 1724, 1724, -1000, 1399, 1531, 1694,
	1724, 1042, 2196, 1724, 1030, 2195, 1724, 1601, 14337, 14337,
	14337, 1724, 1724, 9794, 1205, -1000, 14986, 1692, 1724, -1000,
	2229, 1879, 1877, 1724, 1692, 1876, 1724, 1724, -179, -179,
	1692, 1724, 1692, 1724, 1724, -179, -179, -179, -179, 1724,
	1724, 1724, 1724, 1724, 1724, 1724, 1724, 1724, 1724, 1724,
	1724, 1044, 38075, -1000, 1820, 329, -1000, -1000, -1000, 2126,
	33035, -1000, -1000, 40430, -1000, 1911, 1911, 1044, 1821, 34295,
	-1000, -1000, 34295, 51419, 25370, -1000, 20827, -131, -127, -1000,
	-1000, 1875, -1000, -1000, 1454, -1000, -1000, 1434, -1000, 891,
	2094, 2130, 4009, 728, -1000, -1000, -1000, 1931, 333, -1000,
	2044, 978, 978, 949, 1589, 2043, -1000, -1000, 172, -32,
	-1000, -1000, -1000, 1420, -1000, 218, -1000, 1926, 1926, 353,
	1926, -1000, -1000, -1000, -1000, -1000, -1000, 1538, 1538, -1000,
	-1000, -1000, -1000, 1416, -1000, 1929, -1000, 1409, -1000, -1000,
	-1000, -1000, 172, 172, 172, 172, -1000, -1000, -1000, 1501,
	1958, 50066, -1000, 38075, -1000, -1000, -1000, 2184, -1000, -1000,
	50066, 45112, -1000, -1000, 153, 47002, 240, 453, 216, -1000,
	-1000, 809, -1000, 808, -1000, -1000, -1000, -1000, -1000, -1000,
	38075, 47002, -1000, 50968, -1000, -1000, -1000, -1000, 2174, 1634,
	1621, -1000, -1000, -1000, 1148, 1168, -1000, -1000, 14337, 47002,
	-1000, 617, -1000, -1000, -1000, 4051, -1000, -1000, -1000, 1044,
	847, -1000, -1000, -58, -1000, -1000, 807, 889, 886, 49164,
	806, -1000, 157, 47002, -1000, 50066, -1000, 2194, 2192, 193,
	2189, 47002, 1874, -1000, 1124, 1118, 1110, 1100, -1000, 96,
	-1000, 224, -1000, 17582, 26668, 1063, 1052, -1000, 1037, 1536,
	1868, -1000, 890, 917, 864, 675, 675, -1000, 1063, 675,
	2083, 2082, 1038, -1000, 1865, 1535, 1533, -1000, 2003, -1000,
	-1000, -1000, 38075, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 24721, 9794, -1000, 1128, 4051, 4536, -1000, 14337,
	-1000, 9794, -1000, 18231, 1692, 1724, 1724, 1724, 1724, 1724,
	1434, -1000, -1000, -1000, -1000, 592, 1389, 592, -1000, 1389,
	-1000, 14337, 14337, -1000, 14337, 14337, -1000, -1000, 14337, 4349,
	4106, 4028, -284, -1000, 1871, 1129, -1000, 14986, 1447, -1000,
	-1000, -1000, 14337, 14337, -1000, -1000, -1000, -1000, -1000, 48713,
	-1000, -179, -179, -179, -179, -179, -1000, -1000, -1000, -1000,
	-179, -179, -179, -179, -179, -179, -179, -179, -179, -179,
	-179, -179, 214, 1911, -1000, 20178, 34295, 34295, 34295, 34295,
	34295, -1000, 1993, 1992, -1000, 1984, 1982, 1981, 370, 43580,
	1795, 1692, 478, 33035, -1000, 1911, -1000, 42950, 887, 837,
	835, 834, 9794, 14337, 2174, 34295, 1806, 1806, -1000, 885,
	-1000, -1000, -1000, -125, -124, -1000, -1000, -1000, 26668, -1000,
	-1000, -1000, 4049, 2163, 1063, 1063, 1063, 1063, 306, 2089,
	1063, 1063, 1063, 1063, 1063, -232, -238, 1063, 1063, 1063,
	1063, 1063, 1063, 1063, 1063, 1063, 1063, 1063, 82, 1063,
	1063, 1063, 1063, 23423, 1063, -1000, 44031, 772, 2046, 672,
	1589, 1589, 1589, -1000, 1589, -1000, -1000, -1000, 1928, -1000,
	1236, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1911,
	-442, 1408, 2088, 882, 2228, -1000, 2042, -1000, 2040, 2039,
	1529, -1000, -1000, 1772, 1740, 1734, -1000, -1000, -1000, 1926,
	-1000, 1792, -1000, 1790, 1864, -1000, 1788, 118, 38075, -1000,
	-1000, 2125, 1957, -1000, -1000, -1000, -1000, 1730, 1863, -1000,
	4847, 50066, 50066, 50066, -292, 307, -1000, 47002, 188, 254,
	491, 1620, 38075, 47002, -1000, -1000, -1000, -1000, 14986, -1000,
	-1000, 2124, -1000, 4051, 1605, -1000, -1000, 14, 38075, -1000,
	47002, 984, 48083, 805, 47002, 182, 160, -1000, 47002, 47002,
	2188, 47002, 1861, 103, 1528, 1527, 1525, 1406, 1523, -1000,
	-1000, 1032, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 317,
	47632, 1589, 819, -1000, -1000, 682, -1000, 305, 1619, 32401,
	31771, 50066, 2038, 2037, 1618, 38075, 50066, -1000, -1000, 50517,
	1617, 14986, 50066, -1000, -1000, 50066, 50066, -1000, -1000, -1000,
	-1000, 1245, 8496, -1000, -1000, 1692, -1000, 14337, 4051, -1000,
	-1000, 876, -1000, -179, -179, -179, -179, -179, 1692, 1921,
	1921, -1000, 1921, 1925, -1000, 1921, 45, 1921, 43, 1692,
	1692, 1692, 3903, 3868, 3813, 3741, 2229, 14337, 14337, 14337,
	1911, -174, -1000, 1434, 14986, 2445, 1777, -1000, -1000, 1604,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1955, 20178,
	1911, 16933, -1000, 50066, 1870, -1000, 1099, 960, 1086, 1073,
	869, 867, 329, 1924, 1954, 427, -1000, -1000, -1000, -1000,
	1991, -1000, 1990, 1983, -1000, -1000, -1000, 1915, -1000, -1000,
	1862, 1911, 50066, 14337, 887, -1000, 1911, 1911, 1911, 1692,
	1705, 2168, 1806, -1000, -1000, 979, -1000, -1000, -1000, -1000,
	165, 394, 394, 394, 1389, 1063, 2087, 1063, 1063, 1404,
	27966, 1522, 1520, 1519, 1063, 1063, 1398, 1514, 27966, 1513,
	722, 394, 394, 394, 1396, 1510, 310, -1000, 1509, 1421,
	1410, 394, -1000, -253, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 394, 1786, -1000, 1921, 1921, 2035, -1000, 978,
	-1000, -1000, -1000, -1000, -1000, 50066, -1000, 14337, 2122, -1000,
	995, -1000, 1738, -1000, 1911, 1911, 1911, 1911, 14337, -1000,
	-1000, -109, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1508, -1000, 1394, -1000, 1378, -1000, -1000, -385, 1920,
	231, -1000, 38075, 159, 45112, -1000, 4847, 4847, 4847, 215,
	194, -1000, 1216, -1000, -1000, -1000, 1507, 1504, 1503, 1605,
	255, 1215, 225, -1000, 2123, -1000, -1000, 1434, 1168, -60,
	-1000, -1000, 160, -1000, -1000, -1000, 47002, 160, -1000, -1000,
	232, 1861, 1861, 47002, 1861, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 50517, 650, 4847, 4847, 1941,
	978, 2032, 672, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1603, -1000, 953, -1000, 788,
	650, 50517, 1434, 1015, 1224, -1000, 2187, -1000, -1000, -1000,
	4051, 24072, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 334,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 14337,
	14337, 14337, 14337, -1000, 2229, 2229, 2229, 14337, 1692, 1502,
	1434, 14337, 14337, 1013, -1000, -1000, 2106, 1818, 1853, -1000,
	-1000, 9145, 1692, 2018, 1775, -1000, 41690, 1767, -1000, 2168,
	20178, 14986, 14986, 14986, 14986, -1000, -1000, 14986, 1919, -1000,
	14986, -1000, -1000, -1000, -1000, -1000, 50066, 476, -1000, 14986,
	1767, 1576, -1000, 50066, 50066, 50066, -1000, 1494, 2143, -1000,
	-272, -1000, 313, 308, 220, -1000, -1000, -1000, -1000, -1000,
	1389, 1063, 27966, 1389, -1000, -1000, -1000, -1000, -1000, 1493,
	1491, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -256, -1000, 929, 44031,
	2111, 2111, 1589, 1589, 1737, -1000, 2229, 1911, -1000, -1000,
	-1000, -1000, 7847, -1000, 7847, -1000, 7847, 7847, 2229, -1000,
	1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911,
	1911, -1000, 1725, 1709, -1000, 44031, -1000, -1000, 2149, -1000,
	159, -1000, 1490, 368, 450, -1000, 367, 366, 363, 351,
	340, -1000, -1000, -1000, -1000, 502, 215, -1000, -76, 1375,
	1056, 2081, 194, -1000, 1370, 1347, 1335, 1334, 322, -1000,
	-1000, -1000, -1000, 211, 254, -1000, 486, 1482, -1000, 2065,
	2061, 2121, 160, 2121, 179, 1861, 1696, -1000, -1000, 1591,
	-1000, -1000, 1917, 1589, 1589, -1000, 1588, -1000, -1000, 50066,
	-1000, 650, 2102, 2101, 1911, 2174, 33665, 8496, -1000, -1000,
	-1000, -1000, 2229, 2229, 2229, 2229, -1000, -1000, -1000, 207,
	-1000, -1000, 2229, 2229, 2168, 2162, 2031, -1000, 1911, -1000,
	-1000, 1911, 213, -1000, 50066, 2143, -1000, 1434, 1434, 1434,
	1434, 1434, 50066, 1434, 1733, 1911, 41060, -1000, 43580, 1674,
	1674, 1674, -57, -1000, -274, 1315, 27966, 1911, 27966, 1911,
	1911, 556, -1000, 1389, -1000, -1000, -1000, -1000, -1000, -1000,
	929, -1000, 27966, 1063, 1478, -1000, -1000, -1000, -1000, -1000,
	645, 50066, -445, 14337, 1724, 1724, 1724, -1000, 1724, -1000,
	-1000, -1000, 1722, -1000, 231, 544, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2069, 2068, 573, -1000, 1475, 1473, -1000,
	520, 1402, 888, -188, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 445, 1579, -1000, 217, -1000,
	-1000, 777, 2053, 2056, 2161, -1000, 47002, 2121, -1000, -1000,
	-1000, -1000, 172, 172, 44031, 1941, 1916, -1000, -1000, -1000,
	14337, -1000, 1005, 2172, -1000, 1856, -1000, -1000, -1000, -1000,
	-1000, 1692, 189, -316, -1000, -1000, 1034, 14986, 2227, -1000,
	1853, 1911, -1000, 231, -1000, -1000, 1720, -1000, -1000, -1000,
	887, -1000, -1000, -1000, 1911, 1911, 2160, -1000, 1692, 50066,
	1692, 50066, 1675, 50066, 1049, -1000, -1000, -1000, 1295, -1000,
	38075, -1000, -1000, -1000, -1000, 2229, -1000, -1000, -1000, -1000,
	929, -1000, 471, 54548, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1293, -1000, -1000, 1387, 468, 201, -1000, 2120,
	-1000, 1915, 1288, 2061, 2159, 2059, 2054, -1000, 1470, -304,
	-1000, 1718, 1914, 44031, 4051, 1708, -1000, 50066, 2170, 2158,
	-1000, -1000, 2002, -289, -320, 1692, 247, 247, 1854, 20178,
	1853, 1692, -1000, -1000, 26668, 1005, -356, -1000, 1674, -1000,
	1674, 1692, 1692, 1674, 1283, -1000, 1913, -445, -1000, 929,
	-1000, 604, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 14986, 14986, 81, 27317, 1578, 1577, 54548, 1667,
	1574, 1573, 2052, 54548, 176, -1000, 168, -1000, -1000, -1000,
	1468, -1000, 1082, -1000, 1464, -1000, 2157, 2156, -1000, 235,
	929, 44031, 1714, -1000, 1005, 2017, -184, 14986, 14986, -1000,
	2001, -1000, -1000, -1000, 238, -1000, 1024, 470, 1018, -1000,
	1738, -1000, 1851, -1000, 1712, -1000, 4847, 1708, -276, -1000,
	-1000, -1000, -1000, -1000, 1911, 50066, -1000, -1000, 1563, 1558,
	-1000, 1177, 1386, 316, 297, 514, -1000, -1000, -1000, -1000,
	-1000, -1000, -451, -1000, 275, -1000, -1000, 1556, -1000, 2176,
	-452, -1000, -1000, -1000, -1000, -1000, -1000, 1455, 1451, 44661,
	-1000, 1703, 929, -1000, 600, -1000, 50066, -1000, 1434, 1846,
	-1000, 1434, -305, 1206, -1000, -1000, -1000, -1000, -1000, 50066,
	1692, 26668, 273, -1000, -1000, 1279, 50066, 1699, -1000, -1000,
	-1000, 1092, -1000, 14986, 54548, 2148, 2146, 2145, 14, 26668,
	54507, 54548, 1217, -1000, 54347, -1000, -1000, -1000, -1000, 166,
	1605, 929, -1000, 561, 1739, -1000, 2119, 14986, -318, 238,
	-1000, 42320, -1000, -1000, 1444, -220, -1000, 1674, 1952, 197,
	1119, 54548, -1000, 1353, -453, 531, 231, 776, 966, -1000,
	272, -1000, -455, 1552, -1000, 47002, -1000, 1911, 50066, 1911,
	-1000, -321, -1000, 43580, -1000, -1000, 1345, -1000, 1950, 1949,
	2186, -1000, -1000, -1000, -1000, -1000, -1000, 54548, 41690, -1000,
	-456, 54548, 5548, -1000, -1000, -1000, 54306, -1000, -1000, -1000,
	-1000, 260, -1000, -1000, 2095, -1000, 54146, 1676, -1000, 1605,
	15635, -1000, -1000, -1000, -1000, 426, -1000, -1000, 2225, -1000,
	2221, 800, 800, -1000, -457, -1000, 7160, -458, 759, 54548,
	1078, -1000, 14986, -1000, 6814, 776, -1000, 14337, 263, 1551,
	2229, 1692, -1000, 1948, 14337, 1947, -1000, -1000, -1000, 659,
	1306, -1000, 6773, 1050, 54548, -1000, -460, 757, 54548, -1000,
	1344, -1000, -1000, 4051, 1418, -1000, -1000, -1000, -337, 1255,
	-338, -1000, -1000, -1000, -1000, -1000, 6371, -1000, -461, 54548,
	-1000, -1000, -339, -1000, 735, 5957, -463, -1000, -1000, 700,
	54548, -1000,
}

var yyPgo = [...]int{
	0, 2659, 2658, 10, 174, 2657, 262, 2656, 2654, 22,
	2653, 31, 28, 23, 33, 2652, 2305, 2303, 2300, 2296,
	2294, 2651, 88, 2650, 2647, 2292, 2642, 2640, 2284, 2638,
	2637, 2636, 2634, 2633, 2632, 2281, 2279, 2277, 2631, 2630,
	2628, 2275, 2271, 2269, 2627, 2, 2626, 21, 2613, 3,
	2612, 153, 180, 2610, 4, 2609, 2608, 20, 2607, 2606,
	2267, 2604, 2603, 2602, 2601, 110, 2600, 2263, 2261, 2599,
	2257, 2255, 2253, 2249, 2247, 178, 2598, 2245, 2243, 2240,
	2597, 1992, 181, 298, 176, 189, 2596, 2595, 2594, 165,
	2592, 159, 2591, 2590, 300, 125, 2589, 325, 120, 60,
	123, 436, 2586, 18, 65, 270, 2585, 6, 2582, 118,
	2581, 115, 2580, 2576, 173, 2561, 149, 140, 103, 2557,
	2556, 164, 2554, 2551, 2550, 114, 2548, 2546, 184, 106,
	2542, 2541, 145, 2540, 56, 185, 51, 92, 2537, 113,
	2535, 2534, 2533, 46, 144, 2531, 117, 150, 2530, 2529,
	93, 2528, 2526, 76, 2525, 2523, 2521, 148, 53, 2518,
	2517, 54, 2516, 58, 59, 2515, 44, 2512, 146, 2506,
	2505, 2504, 2503, 2502, 67, 2501, 68, 2500, 147, 152,
	263, 2499, 2492, 15, 12, 2491, 43, 26, 7, 55,
	30, 73, 61, 142, 130, 101, 2482, 35, 50, 134,
	98, 2481, 182, 135, 104, 78, 48, 2480, 158, 2479,
	75, 162, 141, 139, 161, 2476, 2475, 2473, 190, 2472,
	133, 89, 2471, 119, 1528, 179, 2469, 2468, 111, 2467,
	2466, 2465, 2464, 2462, 90, 160, 2458, 187, 186, 188,
	95, 2455, 742, 4084, 4646, 177, 4263, 38, 172, 2454,
	57, 2452, 2451, 2450, 3675, 129, 17, 102, 183, 2449,
	121, 41, 62, 2448, 2446, 2445, 2444, 2443, 2442, 2441,
	2439, 170, 100, 2438, 2437, 2436, 2435, 36, 25, 13,
	27, 2433, 171, 169, 166, 2432, 154, 40, 2431, 2430,
	138, 116, 2428, 2426, 2425, 2424, 137, 79, 156, 39,
	2422, 124, 127, 128, 2419, 80, 2418, 2413, 107, 1541,
	2408, 2407, 2403, 2402, 109, 132, 2401, 2400, 2399, 42,
	2398, 2395, 2393, 2391, 2390, 77, 52, 37, 74, 19,
	2388, 2387, 112, 2378, 99, 105, 45, 47, 2376, 5,
	16, 8, 2375, 2372, 2366, 2365, 2361, 2360, 2342, 97,
	2341, 2338, 72, 2337, 2336, 2335, 49, 2334, 2333, 2331,
	151, 131, 69, 167, 94, 14, 2330, 2329, 9, 2327,
	136, 2325, 64, 2324, 66, 2323, 2322, 71, 2320, 2317,
	70, 2316, 2309, 175, 1738, 276, 2308, 155, 126, 63,
	91, 2307, 122, 2298, 0, 1495, 163, 2286, 846, 2273,
	2265, 2259,
}

var yyR1 = [...]int{
	0, 393, 393, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	80, 3, 3, 9, 10, 4, 4, 5, 5, 107,
	107, 6, 106, 106, 106, 204, 204, 204, 204, 201,
	201, 108, 108, 105, 105, 114, 7, 7, 8, 8,
	11, 11, 88, 88, 12, 13, 13, 13, 13, 396,
	396, 123, 123, 121, 121, 122, 122, 199, 199, 14,
	14, 14, 208, 208, 213, 213, 213, 216, 216, 216,
	216, 188, 189, 190, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 366, 366, 375, 375,
	375, 376, 376, 374, 374, 374, 374, 374, 378, 378,
	379, 379, 377, 377, 377, 377, 381, 381, 382, 382,
	380, 380, 380, 380, 380, 380, 380, 380, 380, 380,
	380, 380, 380, 380, 369, 369, 369, 41, 41, 41,
	41, 41, 42, 42, 42, 42, 42, 42, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 383,
	384, 384, 385, 385, 386, 386, 387, 387, 387, 387,
	388, 388, 388, 388, 388, 389, 389, 389, 389, 389,
	389, 389, 390, 390, 391, 391, 2, 347, 347, 348,
	348, 349, 349, 349, 349, 350, 350, 351, 351, 352,
	352, 352, 352, 352, 352, 352, 352, 352, 352, 26,
	239, 239, 236, 236, 236, 237, 237, 238, 238, 238,
	368, 368, 368, 362, 362, 362, 364, 364, 363, 363,
	363, 365, 365, 370, 370, 370, 370, 370, 372, 372,
	372, 372, 372, 372, 373, 373, 373, 371, 371, 58,
	58, 59, 59, 59, 177, 177, 177, 15, 15, 15,
	15, 15, 21, 23, 23, 46, 46, 47, 24, 24,
	24, 24, 48, 48, 49, 27, 27, 27, 27, 27,
	27, 27, 56, 56, 56, 55, 55, 54, 54, 54,
	54, 54, 54, 29, 30, 31, 397, 397, 397, 50,
	50, 32, 32, 32, 33, 34, 25, 25, 25, 25,
	57, 57, 52, 52, 51, 53, 53, 53, 53, 53,
	53, 53, 53, 53, 53, 53, 53, 28, 28, 28,
	28, 28, 28, 20, 346, 346, 346, 45, 45, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 63, 63,
	310, 311, 311, 311, 311, 311, 311, 311, 311, 297,
	297, 298, 298, 298, 298, 298, 287, 287, 287, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 261, 261, 261, 261, 267, 267, 265,
	265, 265, 265, 265, 265, 265, 265, 265, 265, 266,
	266, 266, 266, 266, 266, 266, 266, 268, 268, 268,
	268, 268, 269, 269, 269, 269, 269, 269, 269, 269,
	269, 269, 269, 269, 269, 269, 269, 269, 269, 269,
	269, 269, 269, 269, 269, 269, 269, 270, 270, 270,
	270, 270, 270, 270, 270, 296, 296, 272, 272, 271,
	271, 271, 290, 290, 291, 291, 291, 288, 288, 288,
	289, 289, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 276, 292, 277, 277, 278, 278,
	279, 279, 280, 280, 281, 281, 286, 286, 285, 285,
	285, 285, 285, 285, 282, 282, 282, 282, 282, 282,
	283, 283, 283, 284, 295, 295, 295, 295, 295, 273,
	43, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 333, 333, 230, 230, 231, 231, 44,
	44, 44, 331, 331, 332, 332, 332, 332, 300, 300,
	329, 329, 328, 328, 327, 327, 327, 309, 309, 324,
	324, 324, 324, 324, 324, 324, 324, 304, 304, 304,
	303, 303, 305, 305, 308, 308, 326, 326, 325, 325,
	301, 301, 301, 334, 334, 334, 334, 334, 302, 302,
	302, 302, 302, 335, 306, 306, 307, 307, 307, 340,
	341, 339, 339, 339, 339, 339, 140, 140, 140, 313,
	313, 313, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 315, 315, 315, 315, 315, 316, 316, 316,
	316, 316, 316, 392, 392, 392, 317, 317, 317, 318,
	318, 318, 318, 318, 319, 319, 319, 319, 320, 320,
	321, 321, 322, 322, 323, 323, 344, 344, 343, 343,
	60, 60, 62, 62, 61, 66, 66, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 176,
	176, 176, 235, 235, 338, 336, 336, 337, 337, 17,
	17, 64, 64, 367, 367, 18, 18, 18, 18, 18,
	18, 18, 18, 18, 342, 342, 342, 19, 19, 67,
	70, 70, 202, 202, 203, 203, 71, 71, 71, 71,
	72, 72, 72, 72, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	102, 222, 222, 221, 221, 220, 220, 220, 223, 223,
	223, 223, 259, 259, 259, 69, 69, 69, 81, 81,
	76, 76, 79, 79, 79, 82, 82, 83, 83, 84,
	84, 77, 78, 35, 36, 36, 36, 36, 37, 74,
	74, 74, 75, 75, 75, 75, 94, 94, 399, 399,
	399, 73, 400, 85, 86, 86, 87, 87, 87, 226,
	226, 91, 91, 91, 89, 89, 89, 90, 90, 96,
	96, 100, 100, 100, 100, 99, 99, 99, 99, 179,
	179, 184, 251, 251, 160, 160, 180, 180, 185, 185,
	185, 186, 186, 187, 187, 187, 187, 187, 182, 182,
	181, 181, 183, 148, 148, 249, 249, 249, 249, 248,
	248, 248, 248, 248, 248, 104, 104, 109, 109, 111,
	111, 111, 111, 111, 111, 115, 162, 162, 133, 133,
	134, 134, 134, 134, 134, 146, 146, 198, 198, 197,
	197, 200, 200, 110, 112, 112, 112, 112, 118, 118,
	119, 119, 120, 120, 234, 234, 256, 256, 256, 124,
	124, 124, 126, 125, 125, 125, 125, 125, 125, 127,
	127, 113, 113, 312, 312, 299, 263, 263, 264, 401,
	401, 401, 401, 128, 128, 130, 131, 131, 129, 129,
	129, 129, 129, 135, 135, 132, 136, 136, 136, 136,
	137, 137, 101, 101, 101, 101, 101, 101, 101, 101,
	219, 219, 139, 139, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 156, 156, 156, 156, 156, 156,
	141, 141, 141, 141, 141, 141, 141, 95, 95, 157,
	157, 157, 117, 116, 116, 98, 98, 97, 97, 158,
	158, 144, 144, 144, 144, 144, 144, 144, 144, 144,
	144, 144, 144, 144, 144, 144, 144, 144, 144, 144,
	144, 144, 144, 144, 144, 144, 144, 144, 144, 144,
	144, 144, 144, 144, 144, 144, 144, 151, 151, 155,
	155, 155, 155, 155, 155, 155, 155, 155, 155, 155,
	155, 155, 155, 155, 155, 155, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 149, 149, 149,
	149, 149, 149, 149, 149, 149, 149, 149, 149, 149,
	149, 149, 149, 149, 149, 149, 149, 149, 149, 149,
	149, 149, 149, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	398, 398, 153, 152, 152, 152, 152, 152, 152, 92,
	92, 92, 92, 92, 257, 257, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 260, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 260, 260,
	260, 169, 169, 93, 93, 167, 167, 168, 170, 170,
	166, 166, 166, 166, 166, 166, 166, 166, 166, 166,
	166, 166, 166, 166, 143, 143, 143, 143, 143, 143,
	143, 143, 145, 145, 145, 171, 171, 159, 159, 103,
	172, 172, 173, 174, 174, 175, 175, 178, 191, 191,
	191, 192, 192, 192, 192, 147, 147, 193, 193, 193,
	142, 142, 142, 142, 142, 142, 142, 196, 196, 195,
	195, 194, 194, 194, 194, 194, 194, 205, 205, 161,
	161, 164, 164, 163, 165, 206, 206, 210, 210, 210,
	210, 207, 207, 211, 211, 211, 211, 214, 214, 215,
	215, 215, 212, 212, 212, 209, 209, 209, 253, 253,
	253, 217, 217, 227, 227, 224, 224, 225, 225, 218,
	218, 274, 274, 274, 233, 233, 232, 232, 232, 228,
	228, 228, 229, 229, 250, 250, 246, 246, 252, 252,
	247, 247, 254, 254, 255, 255, 345, 345, 293, 293,
	355, 355, 294, 294, 356, 356, 358, 358, 353, 353,
	354, 354, 357, 357, 38, 359, 359, 360, 360, 361,
	361, 361, 361, 39, 40, 40, 40, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 245, 245, 245, 245,
	245, 245, 243, 243, 243, 243, 243, 394, 395,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	11, 5, 7, 1, 5, 1, 3, 1, 3, 2,
	1, 13, 0, 2, 2, 0, 2, 3, 3, 1,
	3, 0, 2, 1, 3, 4, 1, 3, 1, 3,
	8, 9, 1, 1, 10, 9, 8, 7, 7, 1,
	1, 1, 3, 1, 3, 1, 3, 0, 4, 3,
	4, 5, 1, 3, 3, 2, 2, 2, 2, 2,
	1, 0, 0, 0, 2, 3, 3, 11, 9, 11,
	5, 5, 16, 12, 9, 4, 0, 3, 0, 2,
	2, 1, 3, 1, 1, 2, 2, 2, 0, 2,
	1, 2, 2, 2, 2, 2, 0, 1, 1, 2,
	3, 3, 5, 3, 3, 4, 5, 4, 4, 2,
	2, 2, 2, 2, 0, 2, 2, 9, 10, 9,
	5, 7, 7, 7, 7, 8, 4, 6, 2, 3,
	2, 3, 3, 3, 4, 3, 3, 2, 2, 3,
	2, 2, 2, 3, 2, 2, 3, 2, 2, 2,
	3, 3, 2, 3, 3, 2, 2, 2, 2, 2,
	1, 3, 0, 3, 1, 3, 0, 1, 1, 1,
	1, 3, 1, 3, 3, 0, 2, 5, 5, 5,
	7, 5, 0, 3, 0, 3, 4, 0, 1, 1,
	3, 2, 3, 3, 3, 0, 1, 1, 2, 2,
	2, 2, 1, 2, 2, 3, 3, 3, 3, 4,
	2, 3, 3, 3, 3, 0, 3, 0, 3, 3,
	1, 1, 1, 3, 2, 1, 1, 3, 3, 2,
	1, 1, 3, 1, 2, 5, 4, 6, 4, 3,
	3, 6, 5, 5, 4, 3, 5, 1, 3, 1,
	1, 1, 1, 1, 0, 2, 2, 1, 1, 1,
	1, 1, 4, 5, 8, 1, 2, 5, 7, 10,
	8, 11, 1, 2, 5, 5, 5, 5, 6, 7,
	5, 7, 1, 1, 1, 1, 3, 1, 1, 1,
	2, 1, 1, 2, 2, 5, 0, 1, 2, 1,
	3, 5, 7, 8, 2, 2, 2, 4, 2, 4,
	2, 3, 1, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 4,
	3, 2, 4, 3, 0, 2, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 5, 5,
	5, 1, 1, 2, 3, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 0, 1, 1, 0,
	2, 3, 2, 2, 2, 2, 2, 2, 2, 2,
	6, 8, 3, 3, 1, 1, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 3, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 1, 2, 2, 3, 3, 2, 2, 3, 2,
	3, 4, 2, 2, 1, 1, 1, 1, 1, 2,
	1, 1, 1, 1, 1, 4, 4, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 3, 0,
	3, 3, 0, 5, 0, 3, 5, 0, 1, 1,
	0, 1, 2, 3, 2, 3, 5, 3, 5, 3,
	5, 4, 5, 4, 3, 1, 0, 1, 3, 3,
	0, 1, 2, 2, 0, 1, 0, 1, 1, 1,
	1, 2, 2, 2, 5, 5, 5, 4, 4, 4,
	4, 4, 4, 4, 2, 1, 2, 1, 2, 2,
	3, 2, 2, 2, 2, 1, 1, 1, 1, 3,
	2, 1, 1, 0, 3, 1, 1, 0, 1, 5,
	2, 2, 1, 3, 3, 3, 3, 3, 5, 4,
	0, 1, 1, 2, 2, 3, 2, 0, 1, 3,
	5, 3, 3, 5, 3, 2, 2, 1, 1, 1,
	1, 1, 0, 1, 0, 1, 1, 3, 3, 3,
	3, 3, 1, 10, 11, 11, 12, 12, 3, 3,
	3, 2, 1, 5, 1, 1, 0, 2, 2, 3,
	3, 1, 1, 2, 2, 2, 0, 1, 2, 0,
	2, 3, 3, 3, 3, 3, 4, 4, 5, 3,
	3, 4, 3, 3, 3, 4, 4, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 3, 3, 3, 3, 3, 3, 2, 2, 4,
	4, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 5, 8, 1,
	4, 5, 4, 5, 5, 5, 5, 8, 0, 1,
	0, 2, 0, 4, 0, 2, 0, 2, 0, 2,
	1, 1, 4, 3, 5, 1, 3, 5, 4, 3,
	5, 3, 8, 10, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 5, 4, 5, 1, 2,
	2, 4, 3, 6, 5, 3, 9, 2, 2, 0,
	1, 2, 0, 1, 7, 1, 3, 8, 8, 3,
	3, 3, 5, 3, 5, 5, 5, 4, 4, 4,
	4, 4, 4, 4, 0, 1, 1, 3, 2, 3,
	4, 4, 1, 3, 1, 1, 2, 2, 4, 4,
	3, 3, 3, 3, 3, 4, 3, 5, 5, 5,
	4, 4, 4, 3, 2, 2, 6, 2, 4, 3,
	4, 4, 5, 8, 6, 3, 5, 4, 2, 4,
	3, 2, 4, 5, 6, 2, 6, 6, 3, 3,
	3, 0, 1, 1, 1, 0, 2, 2, 0, 2,
	3, 2, 0, 1, 1, 2, 4, 1, 0, 1,
	2, 1, 2, 4, 4, 0, 1, 0, 3, 0,
	2, 4, 4, 2, 3, 4, 4, 5, 3, 3,
	4, 3, 1, 1, 1, 1, 0, 3, 1, 1,
	1, 3, 0, 2, 0, 2, 1, 2, 2, 0,
	1, 0, 1, 1, 0, 1, 1, 0, 1, 3,
	5, 1, 1, 3, 5, 1, 2, 3, 5, 2,
	2, 6, 0, 1, 0, 3, 0, 1, 0, 2,
	2, 4, 1, 2, 2, 2, 2, 2, 0, 2,
	1, 3, 3, 1, 3, 0, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 1, 1,
	4, 1, 3, 1, 1, 2, 2, 4, 2, 6,
	1, 4, 6, 3, 2, 0, 3, 0, 3, 1,
	3, 1, 3, 4, 4, 4, 4, 3, 2, 4,
	0, 1, 0, 2, 0, 1, 1, 1, 1, 1,
	2, 2, 1, 2, 3, 2, 3, 3, 2, 2,
	2, 12, 11, 1, 3, 3, 4, 3, 0, 0,
	3, 4, 3, 1, 3, 3, 2, 1, 1, 3,
	1, 1, 1, 1, 3, 3, 0, 5, 5, 5,
	0, 2, 1, 3, 3, 3, 2, 3, 1, 2,
	0, 3, 1, 1, 3, 3, 4, 4, 5, 3,
	4, 5, 6, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 0, 2, 1,
	1, 1, 3, 1, 3, 0, 1, 1, 3, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 2, 2, 2, 2, 2,
	3, 1, 1, 1, 1, 1, 1, 5, 6, 6,
	6, 5, 5, 5, 6, 5, 5, 6, 5, 5,
	5, 5, 6, 5, 5, 5, 4, 4, 5, 5,
	5, 5, 5, 4, 4, 4, 4, 4, 4, 4,
	4, 3, 6, 6, 4, 6, 6, 4, 8, 8,
	8, 8, 4, 6, 7, 7, 7, 9, 4, 7,
	5, 4, 4, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 8, 8,
	0, 2, 3, 4, 4, 4, 4, 4, 4, 0,
	3, 4, 7, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 3,
	3, 1, 2, 2, 1, 2, 1, 2, 2, 1,
	2, 0, 1, 0, 2, 1, 2, 4, 0, 2,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 0, 3, 1, 3, 1,
	0, 2, 1, 0, 3, 1, 3, 2, 0, 1,
	1, 0, 2, 4, 4, 1, 1, 0, 2, 4,
	2, 4, 1, 3, 5, 4, 6, 0, 3, 1,
	3, 3, 1, 1, 1, 1, 1, 0, 5, 1,
	3, 1, 2, 3, 1, 1, 3, 3, 3, 3,
	3, 1, 3, 1, 2, 2, 3, 1, 1, 1,
	1, 1, 3, 3, 3, 1, 2, 1, 1, 1,
	1, 1, 1, 0, 1, 0, 2, 0, 3, 0,
	1, 0, 3, 3, 1, 1, 0, 1, 1, 1,
	1, 1, 0, 1, 0, 2, 1, 1, 1, 3,
	1, 1, 1, 1, 1, 1, 0, 2, 0, 1,
	0, 4, 0, 1, 0, 3, 0, 3, 0, 4,
	0, 3, 0, 3, 3, 1, 3, 2, 4, 1,
	2, 1, 2, 2, 2, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -393, -1, -3, -10, -11, -12, -13, -14, -16,
	-60, -17, -18, -19, -67, -70, -71, -72, -68, -69,
	-76, -77, -78, -74, -73, -25, -28, -20, -80, -35,
	-36, -37, -38, -39, -40, -41, -42, -44, -43, -5,
	6, 7, -108, 29, -63, 181, -62, -61, 184, 183,
	220, 185, 534, 332, 535, 213, 64, 357, -79, 360,
	361, -399, 272, 273, 20, 37, 362, 364, 30, 31,
	235, 295, 297, 188, 358, 352, 322, -4, 540, 182,
	215, 214, 26, -6, -7, -394, 68, 654, -174, 15,
	-85, -400, -85, -88, 9, 10, 8, 459, -85, -310,
	-234, 109, 68, 23, -229, -239, 89, 450, 189, -237,
	291, 293, -227, -228, -236, 245, 255, 44, 200, 199,
	256, 190, 291, 190, 191, 193, 450, 189, 228, 227,
	291, 293, 534, 190, -129, -254, -243, -244, 309, 73,
	-242, 476, 480, 483, 484, 489, 299, 82, 331, 332,
	323, 333, 210, 428, 292, 298, 301, 324, 621, 334,
	336, 337, 470, 471, 193, 203, 639, 316, 211, 537,
	256, 649, 642, 303, 418, 507, 357, 374, 366, 389,
	538, 592, 267, 365, 349, 435, 508, 306, 260, 329,
	593, 287, 424, 430, 270, 360, 528, 526, 509, 444,
	236, 594, 264, 266, 265, 250, 475, 271, 36, 216,
	385, 312, 535, 245, 595, 511, 588, 510, 239, 523,
	35, 27, 525, 238, 447, 100, 596, 340, 432, 512,
	406, 341, 234, 597, 542, 310, 222, 431, 381, 322,
	118, 243, 282, 342, 598, 407, 411, 599, 436, 296,
	281, 530, 600, 601, 343, 602, 192, 302, 513, 603,
	246, 438, 307, 405, 201, 539, 212, 48, 225, 439,
	409, 529, 415, 604, 339, 605, 606, 607, 608, 320,
	318, 514, 319, 321, 257, 262, 515, 53, 187, 413,
	412, 414, 263, 434, 394, 392, 609, 610, 311, 207,
	449, 611, 612, 393, 18, 613, 614, 442, 286, 314,
	615, 616, 617, 516, 531, 506, 618, 619, 433, 408,
	410, 244, 117, 534, 620, 317, 429, 326, 541, 300,
	527, 622, 345, 224, 218, 443, 350, 335, 623, 624,
	625, 626, 627, 294, 293, 361, 327, 517, 362, 268,
	628, 629, 518, 630, 631, 254, 237, 446, 437, 52,
	420, 632, 330, 346, 351, 353, 355, 356, 354, 423,
	358, 231, 519, 520, 521, 352, 522, 7, 261, 308,
	532, 533, 427, 328, 269, 255, 258, 396, 226, 633,
	634, 383, 384, 359, 229, 220, 112, 445, 587, 291,
	347, 51, 232, 635, 636, 259, 233, 363, 305, 386,
	190, 73, -242, 73, -242, 534, 134, 390, 435, 181,
	425, 426, 432, -304, 433, 227, 350, 230, -259, 190,
	-222, 424, 296, 317, 480, 233, 234, 191, 192, 32,
	437, 436, 428, -254, -81, 363, -81, -81, 194, 363,
	-94, 222, 185, -129, 221, -57, 73, 274, -57, 29,
	73, -135, -246, -254, 73, -242, 36, 73, 362, 427,
	427, 76, 541, 236, 21, -384, -365, 326, -383, -363,
	182, 181, 10, 183, 331, 332, 333, 295, 191, 8,
	30, 621, 208, 334, 335, 6, 213, 336, 337, 228,
	9, 338, -368, 75, 73, -242, 21, -384, -365, 326,
	335, 350, 359, 350, -231, -230, 348, 415, -107, 591,
	-105, -114, -256, -254, -243, 75, 450, -218, 195, -87,
	5, -9, -3, 540, -192, 17, 16, -91, 54, 55,
	-86, -99, 125, -101, -254, -138, 92, -144, 28, 24,
	-143, 309, 221, -139, -166, -243, -165, -117, 134, -258,
	123, 124, 131, 93, 177, -151, -149, -150, -152, -154,
	-155, 75, 74, 83, 76, 77, 78, 79, 84, 85,
	86, -246, -244, -241, 476, 480, 483, 484, 489, -163,
	-394, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 176, 58, 59, 474, 189, 460, 461, 387,
	8, 462, 463, 464, 536, 210, 468, 95, 47, 576,
	448, 458, 457, 456, 454, 455, 451, 453, 452, 470,
	471, 196, 450, 129, 459, 493, 494, 495, 496, 497,
	498, 499, 500, 502, 503, 501, 477, 478, 479, 481,
	482, 485, 486, 487, 488, 490, 491, 492, 543, 186,
	182, 185, 91, 23, 25, 544, 242, 94, 372, 401,
	467, 16, 20, 204, 188, 390, 202, 133, 198, 205,
	276, 278, 181, 62, 545, 277, 425, 546, 547, 548,
	549, 380, 378, 275, 550, 10, 26, 214, 249, 551,
	376, 183, 240, 98, 99, 552, 41, 40, 315, 279,
	215, 285, 377, 553, 554, 19, 65, 206, 11, 200,
	230, 648, 555, 295, 13, 116, 14, 556, 557, 558,
	559, 195, 111, 191, 638, 60, 247, 560, 370, 561,
	562, 563, 564, 565, 371, 88, 566, 567, 108, 290,
	56, 505, 32, 235, 589, 465, 289, 568, 38, 37,
	400, 404, 399, 288, 416, 109, 17, 30, 569, 570,
	223, 403, 369, 398, 590, 571, 572, 252, 63, 348,
	379, 652, 33, 66, 219, 344, 313, 42, 89, 15,
	248, 61, 34, 472, 113, 653, 382, 197, 227, 574,
	440, 251, 575, 114, 375, 591, 208, 110, 364, 184,
	325, 273, 209, 577, 297, 578, 241, 115, 426, 579,
	580, 469, 29, 213, 272, 368, 199, 581, 253, 284,
	274, 283, 582, 583, 304, 43, 650, 637, 190, 39,
	97, 402, 367, 397, 194, 466, 228, 280, 5, 44,
	31, 421, 9, 338, 64, 67, 391, 388, 584, 395,
	651, 12, 585, 473, 540, 441, 90, 586, 422, -85,
	-85, -85, -207, 359, -214, -211, 436, 437, -212, -215,
	-209, -166, 415, 618, 619, 435, 390, 434, -246, -254,
	-243, 309, 221, 134, 477, 478, 479, 95, 387, 460,
	493, 451, 453, 448, 452, 450, 28, 494, 24, 86,
	495, 474, 196, 8, 177, 481, 482, 496, 497, 498,
	58, 454, 455, 536, 129, 92, 499, 500, 84, 502,
	503, 576, 459, 59, 501, 189, 487, 486, 485, 488,
	462, 463, 85, 456, 457, 458, 47, 491, 490, 492,
	-2, -6, 6, -129, -311, -298, -302, -246, -243, -244,
	-245, 217, 205, -335, 73, -242, 309, 221, 50, 87,
	55, 54, 202, 191, 193, 459, -225, 196, -225, 228,
	227, -238, 253, -225, -225, 190, -237, 101, 101, -64,
	-129, -367, -362, -368, -224, 196, -246, -224, -224, -224,
	-224, -224, -224, -224, 73, -242, -129, 178, -121, -129,
	11, 11, 67, 67, 73, -242, 73, 29, -223, 109,
	12, 450, 189, 190, 227, 228, 193, -223, -306, 11,
	111, 231, 231, 231, 231, 232, 231, -221, 427, 429,
	229, 430, 431, 12, -102, 109, 19, -394, -192, -192,
	126, -83, 91, -83, 73, 362, 194, -75, -3, -13,
	-11, -12, -94, -9, -146, 23, 101, 29, 29, 75,
	51, 29, -52, -51, -53, 260, 261, 262, 263, 264,
	265, 266, 267, 268, 269, 270, 271, 29, -346, 68,
	178, -293, 415, 73, -359, -360, -129, 76, 76, 66,
	317, 66, 69, 194, 69, 66, -385, 327, 68, -385,
	293, 327, 328, 255, 291, 193, -385, -385, 293, -385,
	-385, -385, 313, -385, -385, 427, -385, -385, -385, 329,
	330, -385, 425, 193, -385, -385, -385, -385, -385, 71,
	66, 69, 317, 66, 11, 66, 351, 440, -330, 134,
	340, 341, 342, 343, 339, 317, 344, 345, 346, 231,
	347, -4, -105, 69, -196, -394, 73, -286, -285, -282,
	-283, -284, -281, 28, 190, -8, -6, -394, 21, 22,
	-395, 70, -107, -193, 19, 30, -147, 76, 79, -175,
	-178, -101, -254, 50, -89, 21, 22, 81, 11, -249,
	91, 89, 90, 108, -248, 23, 73, -242, -243, 75,
	-244, -245, 178, -101, -141, 111, 92, 109, 110, 94,
	120, 119, 130, 123, 124, 125, 126, 127, 128, 129,
	121, 122, 133, 101, 102, 103, 104, 105, 106, 107,
	-219, -394, -117, -394, 178, -394, 178, 179, 180, 178,
	-144, -144, -144, -144, -144, -144, -144, -394, 178, 178,
	-394, -394, -394, -394, -394, -9, -158, -101, 540, -394,
	-394, -394, -394, -394, -394, -394, -394, -394, -394, -394,
	-394, -394, -394, -394, -169, -101, -394, -394, -398, -153,
	-394, -398, -153, -398, -153, -398, -394, -398, -153, -398,
	-153, -398, -398, -153, -398, -394, -394, -394, -394, -394,
	-394, -394, -394, -394, -394, -394, -394, -394, -394, -394,
	-394, -394, -394, -394, -394, -394, -394, -394, -394, -394,
	-394, -394, -394, -394, -218, -218, 11, -121, -122, -132,
	-254, 69, -208, -213, 438, 440, 359, -212, -212, -253,
	-246, 75, 28, 101, 29, 178, -174, -85, 70, 69,
	-302, -261, -267, -269, -268, -270, -265, -266, 387, 390,
	394, 392, 388, 393, 134, 391, 396, 397, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 29, 216, 383,
	384, 385, 386, 407, 408, 409, 410, 411, 412, 413,
	414, 366, 389, 538, 367, 368, 369, 370, 371, 372,
	374, 375, 376, 377, 378, 379, 380, 381, -261, -261,
	-261, -261, 73, 231, -243, -335, 68, -246, -129, -239,
	-237, 73, 92, 73, -128, -246, -254, -135, 254, -371,
	-370, -362, -365, -225, -238, -362, 259, 257, 258, 69,
	194, 69, 194, 71, -121, 24, 66, -123, -129, 73,
	73, -128, -135, -364, -362, -365, -255, -254, -240, 543,
	186, 21, 182, 185, 91, 23, 25, 544, 242, 94,
	372, 134, 477, 478, 479, 401, 467, 16, 20, 204,
	95, 188, 387, 390, 202, 133, 198, 205, 276, 278,
	460, 493, 181, 62, 545, 451, 453, 448, 452, 277,
	450, 425, 546, 547, 548, 549, 380, 378, 275, 28,
	550, 10, 494, 26, 214, 249, 22, 551, 127, 376,
	183, 504, 240, 98, 99, 552, 41, 40, 315, 24,
	279, 215, 86, 285, 495, 377, 553, 554, 19, 65,
	206, 11, 200, 230, 648, 555, 295, 13, 474, 116,
	14, 556, 557, 558, 559, 196, 195, 111, 191, 638,
	60, 247, 8, 560, 370, 561, 562, 563, 564, 565,
	371, 177, 88, 566, 567, 108, 290, 56, 481, 482,
	505, 45, 32, 235, 496, 497, 589, 498, 465, 289,
	568, 38, 37, 400, 404, 399, 288, 416, 58, 109,
	17, 454, 455, 30, 569, 570, 536, 223, 403, 369,
	398, 590, 571, 572, 129, 252, 63, 92, 348, 499,
	500, 84, 379, 652, 33, 66, 219, 344, 313, 42,
	89, 15, 248, 61, 34, 472, 113, 653, 502, 382,
	197, 227, 574, 440, 251, 575, 114, 503, 375, 591,
	208, 110, 364, 184, 576, 459, 325, 273, 209, 577,
	297, 59, 578, 241, 115, 501, 189, 426, 579, 6,
	580, 469, 29, 213, 272, 368, 199, 581, 253, 284,
	274, 283, 582, 49, 583, 304, 43, 487, 486, 485,
	488, 650, 57, 462, 463, 637, 190, 39, 97, 402,
	367, 397, 194, 466, 228, 85, 280, 5, 44, 31,
	421, 9, 338, 64, 67, 456, 457, 458, 47, 391,
	388, 584, 491, 395, 490, 492, 651, 96, 12, 585,
	473, 540, 441, 90, 586, 422, 69, 75, 75, -202,
	-203, 73, -242, -202, -223, 75, -258, -101, -225, -225,
	-129, -129, -129, -129, -129, -223, -223, -223, -223, -220,
	11, 111, 11, -220, -220, -101, -144, -362, 452, 125,
	-254, -84, -82, 207, -82, -84, 73, 73, 362, -75,
	33, 73, -52, -52, 75, -52, 69, 101, -52, 70,
	-158, -246, -345, 638, 69, -361, 23, 440, 441, 416,
	-387, 190, 230, 227, 66, -387, -383, 335, -364, -363,
	-362, -385, -386, -246, -385, -385, -385, 427, -385, -385,
	-385, -385, -385, -385, -385, -385, -385, -368, -387, 295,
	69, -387, -364, -362, 194, 441, 442, 339, 339, 339,
	339, 339, 339, -114, 23, -195, -194, -247, -243, -244,
	-245, 217, -246, -240, -286, -283, -282, -284, 390, 435,
	133, 447, -129, -9, -204, 88, 9, 111, 69, 18,
	69, -191, 25, 26, 178, -145, 51, 76, 79, -226,
	49, -129, -101, -101, -101, -156, 84, 92, 85, 86,
	-248, 217, 125, -255, -247, -244, -243, 309, 221, -240,
	-144, -157, -163, -117, 80, 111, 109, 110, 94, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -144, -144, -144, -257, 73, 75, 73, -247, -97,
	-100, 125, -101, -254, -247, -143, 84, -143, -246, -246,
	-89, -247, 428, -247, -89, -89, -89, -89, -89, -395,
	69, -395, -9, -97, -97, -97, -395, -101, -101, -97,
	-97, -166, 75, -97, -166, 75, -97, -144, 465, 466,
	467, -97, -97, -89, -167, -168, 96, -166, -97, -395,
	-144, -246, -246, -97, -98, -97, -97, -97, -395, -395,
	-100, -97, -100, -97, -97, -395, -395, -395, -395, -97,
	-97, -97, -97, -97, -97, -97, -97, -97, -97, -97,
	-97, -131, 88, -129, -104, -109, -111, -112, -133, -116,
	-394, -110, -113, -129, -117, 73, 505, -129, -121, -396,
	11, 67, -396, 69, 178, -211, -214, 69, 439, 441,
	442, -208, -279, -280, 133, 66, 87, -101, -247, -255,
	-192, -91, -313, -298, -300, -301, -302, -324, 205, -334,
	197, 199, 200, 44, -303, 206, 191, 45, -262, -288,
	420, 421, -272, 68, -271, 68, -271, 395, 387, 390,
	388, -271, -271, -271, -271, -271, 388, 68, 68, -272,
	-272, -272, -290, 68, -290, 382, -291, 68, -291, -291,
	-291, -291, -262, -262, -262, -262, -335, -335, -335, -101,
	-250, 67, 23, 193, -286, 24, -286, -58, 242, 211,
	178, 68, 245, 246, -366, 69, 28, -372, 292, -129,
	221, -129, -129, -362, -362, -368, -342, 209, 204, -129,
	69, 69, -129, 69, 75, 73, 73, -146, -307, 11,
	111, -223, -254, -254, -129, -146, -223, -95, 217, 67,
	-398, -395, 364, 365, 73, -144, -51, -143, 70, -130,
	88, 75, -360, -256, 415, 441, -388, 125, -246, -387,
	-388, -391, 540, 194, 70, 69, -385, -388, 313, 295,
	-388, 11, -331, -332, 353, 354, 355, 356, -333, 19,
	-116, -394, -395, 69, 178, 29, -309, 101, -309, -309,
	-66, -65, 186, 183, 184, 187, 188, -338, 418, 182,
	239, 238, 224, -395, -201, 34, 35, -246, 52, -147,
	-147, -178, -217, 19, 11, 47, 47, -90, 57, 84,
	85, 86, 178, -394, -157, -144, -144, -144, -95, 91,
	-395, 69, -395, 178, -98, -97, -97, -97, -97, -97,
	-101, -395, -395, -395, -395, 69, 67, 23, -395, 67,
	-395, 11, 11, -395, 11, 11, -395, -395, 11, -144,
	-144, -144, -395, -395, -97, -170, -168, 98, -101, -395,
	-395, -395, 69, 69, -395, -395, -395, -395, -179, 472,
	-179, -395, -395, -395, -395, -395, -179, -179, -179, -179,
	-395, -395, -395, -395, -395, -395, -395, -395, -395, -395,
	-395, -395, -199, 113, -129, 29, 69, -124, -126, -125,
	-127, 56, 60, 62, 57, 58, 59, 428, 63, -234,
	-104, -115, 47, -394, -134, 113, -136, 23, -256, 64,
	195, 65, -394, -394, -199, 67, -104, -104, -132, -254,
	125, -213, -216, 443, 440, 446, 73, 75, 178, -193,
	-317, -314, 69, 113, 645, 418, 507, 435, 28, 390,
	508, 133, 82, 509, 236, 36, 191, 511, 447, 340,
	512, 513, 201, 514, 515, 516, 301, 517, 358, 518,
	519, 520, 521, 328, 5, -302, 68, 73, -308, -243,
	45, -303, -305, -303, -303, -308, 73, -308, 45, 84,
	92, -278, -280, 134, -275, -276, -292, -295, -273, 23,
	648, 423, 390, 28, 66, 418, 197, 45, 44, 200,
	82, -289, 422, 76, 76, 483, -271, -271, -271, 395,
	-271, -296, 75, -296, 76, -290, 76, 70, 66, -246,
	-188, -129, -59, 8, 9, 10, -246, -347, -348, -349,
	-246, 111, 247, 248, -375, 325, -370, 293, 302, 91,
	16, 540, 194, 194, -129, -362, -203, -137, 12, 73,
	73, -220, -223, -144, -365, 233, 234, -199, 190, -361,
	194, 178, 178, -388, 194, 316, -364, -246, 11, 11,
	313, 11, -364, 69, 101, 101, 101, 101, 349, -194,
	-247, -309, 73, 75, 134, 73, 75, 134, 75, 69,
	-235, -303, -344, -301, -302, -343, 198, 205, -235, 205,
	202, -303, 206, 197, 198, -232, -303, 194, 23, -235,
	-235, -309, -235, 32, 32, 113, 69, 75, 75, 53,
	-129, -96, -189, 125, -247, -98, -95, 91, -144, -100,
	125, -255, -395, -395, -395, -395, -395, -395, -260, 134,
	387, 216, 385, 378, 405, 392, 420, 383, 421, -257,
	-260, -257, -144, -144, -144, -144, -144, 11, 11, 11,
	537, -174, 100, -101, 97, -144, -144, -246, -184, -394,
	-179, -179, -179, -179, -179, -180, -179, -180, -180, -180,
	-180, -180, -180, -180, -180, -180, -180, -180, -142, 29,
	47, -394, -9, -394, -206, -210, -166, -243, -245, 217,
	309, 221, -109, -111, -111, -109, -111, 56, 56, 56,
	61, 56, 61, 61, 56, 56, -125, -256, -395, -395,
	-162, 241, -394, 33, -256, -136, 191, 191, 191, -98,
	-144, -137, -104, -137, -137, 178, 440, 444, 445, -314,
	16, -309, -309, -309, -309, 435, 390, 133, 29, -309,
	-309, -309, -309, -309, 510, 510, -309, -309, -309, -309,
	-309, -309, -309, -309, -309, -309, -309, 359, -309, -309,
	-309, -309, -315, -392, 75, 76, 82, 331, 301, 73,
	-242, -240, -309, -326, -325, -246, -243, 197, -334, 44,
	-334, -308, -308, -308, -308, 68, 84, -394, 649, 76,
	29, -143, 124, -139, 448, 454, 455, 449, -394, 85,
	86, 9, 45, 45, 45, 75, 70, 70, 70, -271,
	70, 69, 70, 69, 70, 69, -140, 596, 92, -129,
	-190, 23, 66, 70, 69, -261, -246, -246, -246, -378,
	540, 298, -376, -374, 304, 305, 306, 307, 308, -365,
	303, -372, 300, 75, 73, -129, -362, -101, -146, -277,
	-278, -129, -364, 125, 125, -246, 194, -364, 313, -390,
	540, -364, -364, 11, -364, -332, 75, 75, 75, 76,
	75, 73, 75, 134, -65, 68, -297, 73, -242, -308,
	-228, 197, 73, 73, 73, -243, -242, -244, -245, 73,
	-243, -242, -244, -245, -246, 45, 45, 73, -129, -246,
	-297, 73, -101, -246, -246, -246, -204, 69, -99, -395,
	-144, 178, -180, -180, -180, -180, -180, -395, -272, -272,
	-272, -291, -272, 371, -272, 371, -395, -395, -395, 19,
	19, 19, 19, -395, -144, -144, -144, -394, -93, 469,
	-101, 69, 69, -251, 73, -205, 66, -206, -161, -164,
	-163, -394, -9, -395, -195, 6, 540, -200, -246, -137,
	69, 101, 101, 101, 101, -119, -118, 66, 67, -120,
	66, -118, 56, 56, 56, -198, 68, 69, -163, -394,
	-200, -144, -136, -394, -394, -394, -395, 69, -174, -137,
	-318, -319, 114, 529, -320, 568, -315, -315, -315, -257,
	-309, 29, -309, -309, 76, -392, 75, 75, 75, -309,
	-309, 76, 75, -392, 75, 207, 210, 212, -315, -315,
	-315, 76, 75, -316, 28, 525, 381, 526, 527, 528,
	75, 28, 76, 28, 76, -315, 522, -315, 70, 69,
	-272, -272, 45, -305, -197, -246, -144, 23, 73, 134,
	-143, -398, -394, -398, -394, -398, -394, -394, -144, -150,
	448, 458, 457, 456, 454, 455, 451, 453, 452, 470,
	471, 75, 76, 76, 596, 68, -9, -188, -129, -350,
	-351, -352, 82, 539, 92, 249, 250, 207, 251, 252,
	253, -349, -261, -261, -261, -381, -382, -380, 301, 323,
	324, 309, -379, -377, 318, 319, 320, 321, 91, 75,
	75, 75, -373, 292, 91, 301, 16, 23, -223, -353,
	-221, -390, -364, -390, 295, -364, -297, -176, 210, 211,
	-261, -261, -250, -305, 45, 73, -233, 194, 23, 194,
	-176, -297, 29, 183, 88, -106, 11, -189, -189, 125,
	-277, 73, -144, -144, -144, -144, -395, -395, -395, -144,
	-395, 75, -144, -144, -160, 113, 27, -205, 69, -395,
	-395, 47, -395, -395, 69, -174, -210, -101, -101, -101,
	-101, -101, 68, -101, -197, 241, -395, -136, -234, -197,
	-197, -197, 75, -192, -321, 531, -394, 430, -394, 430,
	530, 45, -257, -309, -392, -257, 75, 75, 523, 524,
	-328, -327, 67, 201, 82, -325, -191, -191, -308, -308,
	70, 69, -395, -394, -97, -97, -97, -395, -97, -395,
	70, 70, -326, -188, -190, 19, -189, -352, 75, 253,
	249, 253, 253, 253, 253, 254, -369, 82, 299, -380,
	310, 601, 294, 325, 76, 76, 112, 30, 31, -377,
	76, 76, 76, 76, -374, 16, 540, -372, 300, 75,
	75, -354, 38, -356, 39, -389, 23, -390, -389, 313,
	70, 73, -262, -262, 68, -308, -308, 73, -246, -176,
	28, 28, -394, -137, 504, -104, -99, -395, -395, -395,
	-395, -92, 111, 540, -395, -395, -174, 16, 45, -164,
	-161, 47, -9, -394, -246, -192, -197, 70, -163, -134,
	-256, -395, -395, -395, 430, -322, 532, 76, -392, -394,
	-392, -394, -394, -394, 256, -257, -327, -392, -309, 75,
	208, -246, -287, 651, 650, -144, -395, -395, -395, -395,
	70, -9, 240, -190, 36, 36, 245, 246, 75, 75,
	28, 311, 177, 28, 76, 177, 475, 300, 75, 73,
	301, -274, 195, -357, 43, -355, -294, 42, 16, -362,
	-389, -326, -250, 68, -144, -336, -337, 113, -171, 13,
	-189, -395, 538, 63, 541, -185, 115, 114, -158, 9,
	-161, -9, 70, -136, -394, -394, 16, -395, -197, -395,
	-197, -143, 73, -197, 101, 76, -129, -395, -329, -328,
	-188, 241, -22, -3, -11, -12, -13, -14, -16, -60,
	-17, -18, -23, -24, -19, -67, -70, -71, -72, -68,
	-79, -77, -78, -74, -73, -27, -29, -30, -32, -33,
	-34, -31, -25, -28, -20, -35, -36, -37, -41, -42,
	-26, -43, 95, 196, 358, 275, 286, 287, 288, 73,
	289, 290, 285, 357, 76, 28, 76, 28, 314, 301,
	23, -198, 76, -356, 16, -358, 40, 41, 75, 540,
	70, 68, -326, -395, 69, -246, -172, 14, 16, 53,
	539, 542, -395, -186, 94, -187, 112, 475, -148, 76,
	177, -186, -206, -395, -312, -299, -247, -336, -319, -395,
	-395, -395, -395, -395, 76, 68, -287, -177, 243, 244,
	-188, -101, -101, 73, -56, -252, 278, 279, 280, -247,
	73, 73, -45, -22, 72, 73, 73, -397, 11, 50,
	-45, 312, 312, 75, 38, 115, 75, 16, 16, 293,
	-329, -326, 70, -337, 47, -182, 473, -173, -101, -159,
	-103, -101, 53, -187, 117, 118, 241, 117, 118, -143,
	-395, 69, -261, -395, -323, 533, -394, -197, -188, 73,
	73, -46, -47, 96, 97, 276, 277, 281, -261, 69,
	654, 288, 73, 11, 654, 75, 75, 28, 298, 21,
	-365, 70, -329, 225, -181, -183, -246, 69, 540, 91,
	-246, -395, -299, -263, 506, 24, 76, -197, 70, -190,
	100, 98, -47, -101, -45, 19, 19, 19, -277, -247,
	100, -22, -45, 88, 100, 315, -329, 226, 69, 23,
	-103, 541, -187, 23, -256, 75, 506, -395, -340, -341,
	66, -15, -21, -14, -11, -12, -13, 357, 540, 95,
	-45, 97, 654, -57, 76, -9, -55, -54, 76, -57,
	283, 92, 284, 73, -279, 288, 654, -50, 73, -365,
	-394, -183, -184, 542, -256, -264, 75, -341, 66, -340,
	66, 10, 9, -188, -45, -107, 654, -45, 100, 98,
	-48, -49, 99, -22, 357, 69, 282, 28, 100, 69,
	-144, 223, -401, 84, 28, 341, -339, 209, 204, 207,
	29, -339, 654, 100, 654, 196, -45, 100, 98, -49,
	-101, 100, -54, -144, 288, 73, -395, -395, 66, -144,
	66, 203, 28, 84, 100, 95, 654, 196, -45, 97,
	73, 552, 66, 552, 100, 654, -45, 552, 196, 100,
	654, 196,
}

var yyDef = [...]int{
	-2, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, 35, 36, 37, 38, 1343,
	922, 922, 0, 922, 1024, -2, 750, 751, 0, 0,
	0, 0, 0, 0, 0, -2, 887, 888, 891, 888,
	888, 916, 0, 367, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 597, -2, 0, 1419,
	918, 919, 920, 45, 0, 0, 2297, 2, 1351, 0,
	931, 924, 0, 922, 922, 922, 72, 73, 0, 104,
	0, 0, 0, 1025, 0, 0, 0, 1417, 1417, 257,
	1417, 1417, 0, 1433, 255, 0, 1414, 1429, 1430, 1431,
	0, 0, 0, 1415, 0, 1415, 1415, 1415, 1415, 1415,
	1415, 1415, 0, 0, 818, 1058, 1060, 1061, 1062, 1442,
	1443, 2292, 2293, 2294, 2295, 2296, 2267, 2268, 2269, 2270,
	2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280,
	2281, 2282, 2283, 2284, 2285, 2022, 2023, 2024, 2025, 2026,
	2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036,
	2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046,
	2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056,
	2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066,
	2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076,
	2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086,
	2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096,
	2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106,
	2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116,
	2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126,
	2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136,
	2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146,
	2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156,
	2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166,
	2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176,
	2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186,
	2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196,
	2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206,
	2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216,
	2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226,
	2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236,
	2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246,
	2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256,
	2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266,
	0, 0, 0, 826, 827, 0, 0, 0, 878, 0,
	878, 844, 845, 0, 847, 0, 0, 0, 0, 0,
	0, 858, 861, 865, 0, 1351, 1351, 627, 628, 629,
	883, 884, 872, 885, 890, 889, 897, 897, 0, 889,
	61, -2, 0, 1005, 0, 346, 348, 0, 368, 0,
	371, 374, 1063, 0, -2, -2, 1448, 903, 0, 0,
	1473, 1474, 0, 0, 0, 0, 0, 2184, 200, 271,
	202, 202, 202, 202, 202, 202, 202, 0, 202, 202,
	0, 202, 202, 202, 2194, 202, 0, 202, 202, 202,
	202, 202, 270, 260, 261, 262, 0, 0, 0, 2184,
	0, 600, 892, 601, 0, 598, 595, 596, 62, 0,
	50, 63, 1367, 1026, 1027, 1028, -2, 0, 1420, 0,
	926, 0, 43, 0, 1357, 0, 0, 934, 932, 933,
	923, 0, 945, 975, 0, 1072, 1907, 1078, -2, 1820,
	1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1765, 0,
	0, 0, 0, 0, 1862, 1151, 1152, 1153, 1154, 1155,
	1156, 1324, 1325, 1326, 1327, 1328, 1329, 1330, -2, -2,
	-2, 1310, 1311, 0, 2292, 2293, 2294, 2295, 2296, 1384,
	0, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254,
	1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264,
	1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274,
	1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284,
	1285, 1286, 1287, 1888, 1951, 1839, 1956, 1784, 0, 1776,
	1853, 1980, 1981, 0, 1896, 2273, 0, -2, 2005, 1944,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, 2283,
	2284, 1846, 1794, 1904, 1945, 1785, 1806, 1825, 1874, 1875,
	1877, 1909, 1910, 1928, 1937, 1955, 1766, 1767, 1768, 1869,
	1870, 1977, 1976, 1975, 1978, 2011, 2009, 2012, 1754, 1755,
	1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1769,
	1770, 1771, 1772, 1773, 1775, 1777, 1778, 1779, 1780, 1781,
	1782, 1783, 1786, 1787, 1788, 1793, 1795, 1796, 1797, 1798,
	1799, 1800, 1801, 1802, 1804, 1805, 1807, 1808, 1809, 1810,
	1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821,
	1822, 1824, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833,
	1834, 1835, 1836, 1837, 1838, 1840, 1841, 1842, 1843, 1844,
	1845, 1847, 1848, 1849, 1850, 1851, 1852, 1854, 1855, 1856,
	1857, 1858, 1859, 1860, 1861, 1863, 1864, 1865, 1866, 1867,
	1868, 1871, 1872, 1873, 1876, 1878, 1879, 1880, 1881, 1882,
	1883, 1884, 1885, 1886, 1887, 1889, 1890, 1893, 1894, 1895,
	1897, 1898, 1899, 1900, 1901, 1902, 1903, 1905, 1906, 1908,
	1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921,
	1922, 1923, 1924, 1925, 1926, 1927, 1929, 1930, 1931, 1932,
	1933, 1934, 1935, 1936, 1938, 1939, 1940, 1941, 1942, 1943,
	1946, 1947, 1948, 1949, 1950, 1952, 1953, 1954, 1957, 1958,
	1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968,
	1969, 1970, 1971, 1972, 1973, 1974, 1979, 1982, 1983, 1984,
	1985, 1986, 1987, 1988, 1989, 1990, 1991, 1993, 1994, 1995,
	1996, 1997, 1998, 1999, 2000, 2001, 2006, 2007, 2008, 2010,
	2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 1419,
	1419, 0, 89, 2250, 0, 1391, -2, -2, 1393, 0,
	0, 0, -2, -2, -2, -2, 1777, -2, 1310, 0,
	0, 0, 0, 1765, 1766, 1767, 1768, 1774, 1776, 1784,
	1785, 1789, 1790, 1791, 1792, 1794, 1803, 1806, 1820, 1823,
	1825, 1839, 1846, 1853, 1862, 1869, 1870, 1874, 1875, 1877,
	1888, 1891, 1892, 1896, 1904, 1907, 1909, 1910, 1911, 1928,
	1937, 1944, 1945, 1951, 1955, 1956, 1975, 1976, 1977, 1978,
	1980, 1981, 1992, 2002, 2003, 2004, 2005, 2009, 2011, 2012,
	105, 1343, 922, 106, 0, 421, 422, 0, 0, 0,
	0, 0, 0, 652, 1436, 1437, 2286, 2287, 2288, 2289,
	2290, 2291, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 250, 0, 0, 0, 1417, 257, 0, 0, 799,
	0, 800, 0, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 832, 833, 817, 0, 819, 83,
	0, 0, 0, 0, 830, 831, 834, 878, 836, 0,
	0, 1417, 1417, 0, 0, 0, 0, 843, 0, 654,
	655, 878, 849, 878, 878, 878, 875, 0, 875, 855,
	875, 873, 874, 0, 860, 0, 0, 0, 868, 869,
	0, -2, 895, -2, 904, 0, 0, 909, 912, 913,
	914, 915, 61, 911, 921, 0, 0, 0, 0, 350,
	0, 0, 370, 352, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 363, 364, 365, 366, 0, 373, 0,
	0, 1446, 1449, 908, 1464, 1465, 0, 1475, 1476, 206,
	0, 206, 0, 0, 0, 0, 168, 202, 0, 170,
	202, 202, 202, 0, 202, 202, 177, 178, 202, 180,
	181, 182, 202, 184, 185, 202, 187, 188, 189, 202,
	202, 192, 202, 202, 195, 196, 197, 198, 199, 269,
	206, 0, 0, 206, 0, 0, 0, 0, 580, 0,
	0, 0, 0, 585, 586, 587, 588, 0, 0, 591,
	592, -2, 49, 0, 0, 0, -2, 753, -2, 558,
	559, 560, 0, 555, 0, 46, 68, 0, 927, 928,
	67, 2298, 0, 55, 0, 0, 1352, 1355, 1356, 1344,
	1345, 1348, 0, 0, 929, 935, 936, 925, 0, 946,
	0, 0, 0, 0, 976, 0, 979, 980, 981, 982,
	983, 984, 0, 1076, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1100, 1101, 1102, 1103, 1104, 1105, 1106,
	1079, 0, 1093, 0, 0, 0, 0, 0, 0, 0,
	1144, 1145, 1146, 1147, 1148, 1149, 0, 934, 0, 0,
	934, 934, 934, 934, 934, 0, 0, 1119, 2017, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 934, 0, 1302, 0, 0, 1213, 1222,
	0, 1214, 1223, 1215, 1224, 1216, 0, 1217, 1225, 1218,
	1226, 1219, 1220, 1227, 1221, 0, 0, 0, 1115, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 85,
	1058, 0, 90, 92, 0, 0, 2250, 1394, 1395, 550,
	1408, 1409, 1410, 0, 1406, 0, 1351, 931, 669, 0,
	423, 439, 527, 454, 455, 456, 517, 458, 519, 519,
	0, 519, 519, 519, 519, 519, 494, 495, 496, 497,
	498, 500, 501, 502, 503, 504, 0, 0, 477, 517,
	517, 517, 481, 507, 508, 509, 510, 511, 512, 513,
	514, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 522, 522, 524, 524, 524, 524, 524, 439, 439,
	439, 439, 0, 0, 0, 651, 0, 1434, 0, 0,
	257, -2, 0, -2, 0, 1053, 0, 0, 0, 116,
	287, 273, 115, 0, 251, 256, 252, 253, 254, 0,
	0, 0, 0, 264, 814, 1416, 0, 807, 81, 808,
	809, 810, 811, 812, 266, 813, 1059, 1444, 1445, 1477,
	1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487,
	1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497,
	1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507,
	1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517,
	1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527,
	1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537,
	1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547,
	1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557,
	1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567,
	1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577,
	1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587,
	1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597,
	1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607,
	1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617,
	1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627,
	1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637,
	1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647,
	1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657,
	1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667,
	1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677,
	1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687,
	1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697,
	1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707,
	1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717,
	1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727,
	1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737,
	1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747,
	1748, 1749, 1750, 1751, 1752, 1753, 0, 820, 821, 828,
	822, 824, 825, 829, 835, 879, 0, 881, 0, 0,
	1005, 840, 841, 842, 656, 848, 850, 851, 857, 878,
	0, 0, 0, 1005, 878, 859, 1107, 862, 1230, 0,
	886, 901, 0, 896, 0, 902, 906, 905, 0, 910,
	0, 917, 347, 349, 351, 369, 0, 0, 372, 375,
	0, 1064, 0, 0, 0, 1467, 0, 1469, 1471, 0,
	0, 207, 208, 209, 206, 0, 201, 0, 224, 272,
	0, 169, 0, 204, 171, 172, 173, 202, 175, 176,
	179, 183, 186, 190, 191, 193, 194, 268, 0, 0,
	0, 0, 166, 0, 0, 893, 894, 581, 582, 583,
	584, 593, 590, 64, 0, 0, 1369, 1372, 1373, 1374,
	1375, 1376, 1440, 1441, 752, 561, 562, 563, 0, 617,
	617, 617, 0, 0, 41, 0, 1358, 0, 0, 0,
	0, 1347, 1349, 1350, 0, 0, 1332, 0, 0, 937,
	930, 44, 1073, 1074, 1075, 1077, 1094, 0, 1096, 1098,
	977, 978, 947, 0, 1312, 1313, 1314, 1315, 1316, -2,
	1084, 1085, 1109, 1110, 1111, 0, 0, 0, 0, 1107,
	1089, 0, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136,
	1137, 1138, 1139, 1140, 1143, 1244, 1245, 0, 1321, 0,
	1117, 941, 942, 0, 1322, 1141, 1331, 1142, 1317, 1150,
	1115, 1319, 1320, 1318, 0, 0, 0, 0, 0, 1112,
	0, 1383, 0, 0, 0, 0, 1191, 0, 0, 0,
	0, 1125, 1324, 0, 1125, 1324, 0, 0, 1878, 1990,
	1770, 0, 0, 0, 1308, 1305, 0, 0, 0, 1231,
	0, 0, 0, 0, 0, 1116, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 87, 0, 1057, 0, 985, 987, 988, 989, -2,
	0, 993, 994, 1066, 1113, 1442, 0, -2, 0, 0,
	79, 80, 0, 0, 0, 1392, 0, 0, 0, 95,
	96, 91, 1396, 551, 0, -2, 1403, 1404, 1312, 0,
	1357, 934, 726, 424, 426, 427, 428, 0, 634, 642,
	0, 0, 632, 634, 634, 0, 630, 631, 431, 530,
	528, 529, 457, 0, 482, 0, 483, 519, 519, 519,
	519, 486, 487, 489, 492, 493, 499, 0, 0, 478,
	479, 480, 469, 0, 470, 522, 472, 0, 473, 474,
	475, 476, 432, 433, 434, 435, 648, 649, 650, 0,
	0, 0, 101, 0, 110, 1418, 111, 0, 289, 290,
	0, 227, 258, 259, 118, 0, 0, 274, 0, 418,
	419, 0, 801, 0, 803, 263, 805, 815, 816, 806,
	0, 0, 84, 0, 880, 837, 838, 839, 1070, 0,
	0, 852, 876, 877, 875, 878, 856, 870, 0, 0,
	863, 0, 900, 898, 907, 1006, 353, 354, 376, 87,
	0, 1447, 1466, 0, 1470, 1472, 0, 210, 212, 0,
	0, 160, 0, 0, 203, 0, 174, 0, 0, 0,
	0, 0, 599, 602, 0, 0, 0, 0, 589, 0,
	65, 0, 1368, 0, 0, 617, 0, 618, 0, 0,
	754, 755, -2, 792, 1426, 792, 792, 778, 617, 792,
	0, 0, 0, 69, 56, 0, 2077, 59, 0, 1353,
	1354, 1346, 0, 1411, 1412, 1333, 1334, 102, 938, 1095,
	1097, 1099, 0, 1115, 1086, 1107, 1090, 0, 1087, 0,
	1081, 0, 1189, 0, 0, 0, 0, 0, 0, 0,
	1120, -2, 1187, 1188, 1190, 0, 0, 0, 1194, 0,
	1197, 0, 0, 1237, 0, 0, 1238, 1202, 0, 0,
	0, 0, 0, 1208, 1343, 0, 1306, 0, 0, 1211,
	1212, 1232, 0, 0, 1233, 1234, 1235, 1236, 1176, 0,
	1177, 0, 0, 0, 0, 0, 1183, 1184, 1185, 1186,
	956, 956, 956, 956, 956, 956, 956, 956, 956, 956,
	956, 956, 0, 0, 1056, 0, 0, 0, 0, 0,
	0, 1029, 0, 0, 1032, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 998, 0, 1000, 0, 1066, 0,
	0, 0, 1115, 0, 1070, 0, 1070, 1070, 86, 0,
	1065, 93, 94, 0, 0, 100, 552, 553, 0, 226,
	420, 670, 0, 0, 617, 617, 617, 617, 0, 0,
	617, 617, 617, 617, 617, 0, 0, 617, 617, 617,
	617, 617, 617, 617, 617, 617, 617, 617, 0, 617,
	617, 617, 617, 0, 617, 425, 0, 635, 0, 0,
	634, 634, 634, 633, 634, 625, 635, 626, 0, 440,
	0, 442, 443, 444, 445, 446, 447, 448, 449, 0,
	0, 0, 0, 0, 0, 545, 0, 575, 577, 0,
	0, 453, 531, 0, 0, 0, 488, 484, 485, 519,
	490, 0, 515, 0, 0, 471, 0, 666, 0, 1435,
	103, 0, 0, 291, 292, 293, 1054, 0, 228, 229,
	0, 0, 0, 0, 128, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 82, 267, 823, 846, 0, 657,
	658, 1005, 854, 1108, 864, 866, 867, 546, 0, 1468,
	0, 0, 0, 0, 0, 0, 222, 205, 0, 0,
	0, 0, 167, 0, 0, 0, 0, 0, 0, 1370,
	1371, 0, 567, 568, 569, 570, 571, 572, 573, 0,
	0, 634, 0, 779, 780, 0, 793, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1427, 1428, 0,
	0, 0, 0, 787, 788, 0, 0, 57, 58, 1359,
	42, 55, 0, 948, 1323, 0, 1088, 0, 1091, 1118,
	943, 0, 1157, 956, 956, 956, 956, 956, 0, 517,
	517, 1291, 517, 524, 1294, 517, 1296, 517, 1299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1303, 1210, 1309, 0, 0, 0, 949, 950, 952,
	1178, 1179, 1180, 1181, 1182, 1161, 957, 1162, 1163, 1165,
	1166, 1168, 1169, 1170, 1171, 1173, 1174, 1175, 1377, 0,
	0, 0, 1362, 0, 1070, 1385, 0, 0, 0, 0,
	2286, 2287, 986, 1020, 1022, 0, 1017, 1030, 1031, 1033,
	0, 1035, 0, 0, 1038, 1039, 1040, 1007, 992, 1114,
	995, 0, 0, 0, 1066, 1004, 0, 0, 0, 0,
	0, 1343, 1070, 77, 78, 0, 97, 98, 99, 671,
	738, 0, 0, 0, 0, 617, 0, 617, 617, 0,
	0, 0, 0, 0, 617, 617, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 700, 0, 0,
	0, 0, 707, 708, 712, 713, 714, 715, 716, 723,
	724, 725, 0, 0, 636, 517, 517, 0, 640, 632,
	641, 619, 621, 622, 624, 0, 441, 0, 0, 452,
	0, 532, 0, 534, 1230, 1230, 1230, 0, 0, 1082,
	1083, 0, 574, 576, 578, 579, 518, 520, 521, 491,
	505, 0, 506, 0, 525, 0, 653, 667, 0, 0,
	0, 101, 0, 235, 0, 231, 0, 0, 0, 136,
	0, 119, 120, 121, 123, 124, 0, 0, 0, 117,
	0, 276, 0, 279, 280, 802, 804, 1071, 878, 1458,
	547, 1055, 222, 211, 213, 214, 0, 222, 225, 161,
	0, 162, 164, 0, 163, 603, 604, 605, 606, 607,
	594, 564, 565, 566, 756, 0, 789, 0, 0, 1434,
	632, 0, -2, 759, 764, 765, 766, 767, 768, 769,
	770, 771, 772, 773, 774, 0, 785, 0, 761, 0,
	789, 0, 782, 0, 0, 60, 52, 102, 102, 1158,
	1092, 0, 1160, 1164, 1159, 1167, 1172, 1192, 1288, 546,
	1292, 1293, 1295, 1297, 1298, 1300, 1196, 1193, 1195, 0,
	0, 0, 0, 1203, 0, 0, 0, 0, 0, 0,
	1307, 0, 0, 954, 953, 70, 0, 1377, 1360, 1379,
	1381, 0, 0, 0, 0, -2, 1749, 0, 1011, 1343,
	0, 0, 0, 0, 0, 1014, 1021, 0, 0, 1015,
	0, 1016, 1034, 1036, 1037, 990, 0, 0, 996, 0,
	0, -2, 1003, 0, 0, 0, 1013, 0, 1351, 76,
	740, 729, 0, 0, 0, 739, 672, 673, 674, 675,
	0, 617, 0, 0, 679, 680, 682, 683, 684, 0,
	0, 687, 688, 689, 690, 691, 692, 693, 694, 695,
	696, 697, 698, 699, 717, 718, 719, 720, 721, 722,
	701, 702, 703, 704, 705, 706, 0, 711, 609, 0,
	1348, 1348, 634, 634, 0, 1009, 0, 0, 548, 549,
	533, 535, 0, 537, 0, 539, 0, 0, 0, 544,
	1230, 1230, 1230, 1230, 1230, 1230, 1230, 1230, 1230, 0,
	0, 516, 0, 0, 668, 0, 101, 103, 0, 102,
	236, 237, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 230, 232, 233, 234, 154, 137, 138, 0, 0,
	0, 0, 129, 130, 0, 0, 0, 0, 0, 125,
	126, 127, 275, 0, 0, 278, 0, 0, 853, 1460,
	1454, 215, 222, 215, 0, 165, 0, 758, 790, 0,
	439, 439, 0, 634, 634, 781, 0, 1424, 1425, 0,
	776, 789, 0, 0, 0, 1070, 0, 0, 939, 944,
	1289, 1290, 0, 0, 0, 0, 1204, 1205, 1206, 1239,
	1209, 1304, 0, 0, 1343, 0, 0, 71, 0, 1382,
	-2, 0, 0, 88, 0, 1351, 1386, 1387, 1388, 1389,
	1390, 1018, 0, 1023, 0, 0, 1066, 1001, 0, 0,
	0, 0, 0, 75, 742, 0, 0, 0, 0, 0,
	0, 0, 676, 0, 681, 677, 685, 686, 709, 710,
	608, 612, 0, 617, 0, 637, 638, 639, 620, 623,
	0, 0, 436, 0, 0, 0, 0, 541, 0, 543,
	523, 526, 0, 108, 0, 0, 103, 238, 239, 240,
	241, 243, 244, 0, 0, 0, 114, 0, 0, 139,
	0, 0, 0, 0, 149, 150, 151, 152, 153, 131,
	132, 133, 134, 135, 122, 0, 0, 277, 0, 282,
	283, 1421, 1462, -2, 0, 157, 0, 215, 159, 223,
	757, 791, 429, 430, 0, 1434, 0, 760, 775, 777,
	0, 784, 0, 1335, 53, 54, 102, 1198, 1200, 1199,
	1201, 0, 0, 0, 1228, 1229, 958, 0, 0, 1380,
	1361, 0, 1365, 0, 1012, 74, 0, 1008, 997, 999,
	1066, 1067, 1068, 1069, 0, 727, 0, 741, 0, 0,
	0, 0, 0, 0, 0, 678, 613, 614, 0, 616,
	0, 1010, 450, 437, 438, 0, 536, 538, 540, 542,
	610, 101, 0, 61, 245, 246, 247, 248, 155, 156,
	140, 141, 0, 143, 144, 0, 0, 0, 285, 0,
	281, 1007, 0, 1454, 0, 1456, 0, 1453, 0, 216,
	158, 0, 0, 0, 783, 0, 795, 0, 1340, 0,
	940, 1207, 0, 0, 0, 0, 0, 0, 955, 0,
	1364, 0, 1019, 1002, 0, 0, 738, 730, 0, 732,
	0, 0, 0, 0, 0, 615, 0, 436, 107, 611,
	109, 294, 101, 379, 380, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 393, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 0, 0, 0, 0, 0, 0, 61, 0,
	0, 0, 336, 61, 0, 145, 0, 147, 148, 284,
	0, 40, 0, 1461, 0, 1459, 0, 0, 1455, 0,
	610, 0, 0, 794, 0, 0, 968, 0, 0, 1240,
	0, 1243, 951, 959, 0, 962, 0, 0, 0, 973,
	0, 960, 1378, -2, 0, 1043, 0, 0, 744, 731,
	733, 734, 735, 736, 0, 0, 451, 101, 0, 0,
	113, 0, 0, 1436, 0, 0, -2, -2, -2, 1438,
	333, 334, 0, 377, 0, 344, 345, 0, 337, 0,
	0, 142, 146, 286, 1422, 1423, 1463, 0, 0, 0,
	762, 0, 610, 796, 0, 51, 0, 1341, 1342, 1336,
	1337, 1339, 1241, 0, 963, 964, 965, 966, 967, 0,
	0, 0, 0, 728, 743, 0, 0, 0, 103, 295,
	296, 0, 305, 0, 61, 0, 0, 0, 546, 0,
	61, 61, 0, 338, 61, 1457, 1451, 217, 218, 219,
	221, 610, 786, 0, 969, 970, 0, 0, 0, 0,
	974, 0, 1044, 1045, 0, 0, 745, 0, 643, 61,
	0, 61, 306, 0, 0, 0, 0, 0, 550, 1439,
	0, 378, 0, 0, 249, 0, 763, 0, 0, 0,
	1338, 0, 961, 0, 1042, 1048, 0, 737, 644, 645,
	0, 101, 297, 298, 299, 300, 301, 61, 0, 303,
	0, 61, 61, 315, 316, 317, 61, 325, 327, 328,
	329, 0, 331, 332, 320, 341, 61, 335, 339, 220,
	0, 971, 972, 1242, 1041, 1049, 1047, 646, 0, 647,
	0, 0, 0, 112, 0, 62, 61, 0, 0, 61,
	0, 312, 0, 318, 61, 0, 330, 0, 0, 0,
	0, 1897, 1046, 0, 0, 0, 659, 661, 662, 0,
	0, 660, 61, 0, -2, 308, 0, 0, 61, 313,
	0, 319, 326, 321, 342, 340, 797, 798, 0, 0,
	0, 663, 664, 665, 302, 304, 61, 310, 0, 61,
	343, 1050, 0, 1052, 0, 61, 0, 1051, 309, 0,
	-2, 311,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 93, 3, 3, 3, 128, 120, 3,
	68, 70, 125, 123, 69, 124, 178, 126, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 72, 654,
	102, 101, 103, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 130, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 119, 3, 131,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 73, 74, 75, 76,
	77, 78, 79, 80, 81, 82, 83, 84, 85, 86,
	87, 88, 89, 90, 91, 92, 94, 95, 96, 97,
	98, 99, 100, 104, 105, 106, 107, 108, 109, 110,
	111, 112, 113, 114, 115, 116, 117, 118, 121, 122,
	127, 129, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
	251, 252, 253, 254, 255, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 270,
	271, 272, 273, 274, 275, 276,
}

var yyTok3 = [...]int{
	57600, 277, 57601, 278, 57602, 279, 57603, 280, 57604, 281,
	57605, 282, 57606, 283, 57607, 284, 57608, 285, 57609, 286,
	57610, 287, 57611, 288, 57612, 289, 57613, 290, 57614, 291,
	57615, 292, 57616, 293, 57617, 294, 57618, 295, 57619, 296,
	57620, 297, 57621, 298, 57622, 299, 57623, 300, 57624, 301,
	57625, 302, 57626, 303, 57627, 304, 57628, 305, 57629, 306,
	57630, 307, 57631, 308, 57632, 309, 57633, 310, 57634, 311,
	57635, 312, 57636, 313, 57637, 314, 57638, 315, 57639, 316,
	57640, 317, 57641, 318, 57642, 319, 57643, 320, 57644, 321,
	57645, 322, 57646, 323, 57647, 324, 57648, 325, 57649, 326,
	57650, 327, 57651, 328, 57652, 329, 57653, 330, 57654, 331,
	57655, 332, 57656, 333, 57657, 334, 57658, 335, 57659, 336,
	57660, 337, 57661, 338, 57662, 339, 57663, 340, 57664, 341,
	57665, 342, 57666, 343, 57667, 344, 57668, 345, 57669, 346,
	57670, 347, 57671, 348, 57672, 349, 57673, 350, 57674, 351,
	57675, 352, 57676, 353, 57677, 354, 57678, 355, 57679, 356,
	57680, 357, 57681, 358, 57682, 359, 57683, 360, 57684, 361,
	57685, 362, 57686, 363, 57687, 364, 57688, 365, 57689, 366,
	57690, 367, 57691, 368, 57692, 369, 57693, 370, 57694, 371,
	57695, 372, 57696, 373, 57697, 374, 57698, 375, 57699, 376,
	57700, 377, 57701, 378, 57702, 379, 57703, 380, 57704, 381,
	57705, 382, 57706, 383, 57707, 384, 57708, 385, 57709, 386,
	57710, 387, 57711, 388, 57712, 389, 57713, 390, 57714, 391,
	57715, 392, 57716, 393, 57717, 394, 57718, 395, 57719, 396,
	57720, 397, 57721, 398, 57722, 399, 57723, 400, 57724, 401,
	57725, 402, 57726, 403, 57727, 404, 57728, 405, 57729, 406,
	57730, 407, 57731, 408, 57732, 409, 57733, 410, 57734, 411,
	57735, 412, 57736, 413, 57737, 414, 57738, 415, 57739, 416,
	57740, 417, 57741, 418, 57742, 419, 57743, 420, 57744, 421,
	57745, 422, 57746, 423, 57747, 424, 57748, 425, 57749, 426,
	57750, 427, 57751, 428, 57752, 429, 57753, 430, 57754, 431,
	57755, 432, 57756, 433, 57757, 434, 57758, 435, 57759, 436,
	57760, 437, 57761, 438, 57762, 439, 57763, 440, 57764, 441,
	57765, 442, 57766, 443, 57767, 444, 57768, 445, 57769, 446,
	57770, 447, 57771, 448, 57772, 449, 57773, 450, 57774, 451,
	57775, 452, 57776, 453, 57777, 454, 57778, 455, 57779, 456,
	57780, 457, 57781, 458, 57782, 459, 57783, 460, 57784, 461,
	57785, 462, 57786, 463, 57787, 464, 57788, 465, 57789, 466,
	57790, 467, 57791, 468, 57792, 469, 57793, 470, 57794, 471,
	57795, 472, 57796, 473, 57797, 474, 57798, 475, 57799, 476,
	57800, 477, 57801, 478, 57802, 479, 57803, 480, 57804, 481,
	57805, 482, 57806, 483, 57807, 484, 57808, 485, 57809, 486,
	57810, 487, 57811, 488, 57812, 489, 57813, 490, 57814, 491,
	57815, 492, 57816, 493, 57817, 494, 57818, 495, 57819, 496,
	57820, 497, 57821, 498, 57822, 499, 57823, 500, 57824, 501,
	57825, 502, 57826, 503, 57827, 504, 57828, 505, 57829, 506,
	57830, 507, 57831, 508, 57832, 509, 57833, 510, 57834, 511,
	57835, 512, 57836, 513, 57837, 514, 57838, 515, 57839, 516,
	57840, 517, 57841, 518, 57842, 519, 57843, 520, 57844, 521,
	57845, 522, 57846, 523, 57847, 524, 57848, 525, 57849, 526,
	57850, 527, 57851, 528, 57852, 529, 57853, 530, 57854, 531,
	57855, 532, 57856, 533, 57857, 534, 57858, 535, 57859, 536,
	57860, 537, 57861, 538, 57862, 539, 57863, 540, 57864, 541,
	57865, 542, 57866, 543, 57867, 544, 57868, 545, 57869, 546,
	57870, 547, 57871, 548, 57872, 549, 57873, 550, 57874, 551,
	57875, 552, 57876, 553, 57877, 554, 57878, 555, 57879, 556,
	57880, 557, 57881, 558, 57882, 559, 57883, 560, 57884, 561,
	57885, 562, 57886, 563, 57887, 564, 57888, 565, 57889, 566,
	57890, 567, 57891, 568, 57892, 569, 57893, 570, 57894, 571,
	57895, 572, 57896, 573, 57897, 574, 57898, 575, 57899, 576,
	57900, 577, 57901, 578, 57902, 579, 57903, 580, 57904, 581,
	57905, 582, 57906, 583, 57907, 584, 57908, 585, 57909, 586,
	57910, 587, 57911, 588, 57912, 589, 57913, 590, 57914, 591,
	57915, 592, 57916, 593, 57917, 594, 57918, 595, 57919, 596,
	57920, 597, 57921, 598, 57922, 599, 57923, 600, 57924, 601,
	57925, 602, 57926, 603, 57927, 604, 57928, 605, 57929, 606,
	57930, 607, 57931, 608, 57932, 609, 57933, 610, 57934, 611,
	57935, 612, 57936, 613, 57937, 614, 57938, 615, 57939, 616,
	57940, 617, 57941, 618, 57942, 619, 57943, 620, 57944, 621,
	57945, 622, 57946, 623, 57947, 624, 57948, 625, 57949, 626,
	57950, 627, 57951, 628, 57952, 629, 57953, 630, 57954, 631,
	57955, 632, 57956, 633, 57957, 634, 57958, 635, 57959, 636,
	57960, 637, 57961, 638, 57962, 639, 57963, 640, 57964, 641,
	57965, 642, 57966, 643, 57967, 644, 57968, 645, 57969, 646,
	57970, 647, 57971, 648, 57972, 649, 57973, 650, 57974, 651,
	57975, 652, 57976, 653, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:564
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:568
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:575
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 39:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:614
		{
			setParseTree(yylex, nil)
		}
	case 40:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:620
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 41:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:626
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			if err := yyDollar[1].selStmt.SetInto(yyDollar[5].into); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 42:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:637
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:643
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 44:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:653
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:660
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:664
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:670
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:674
		{
			yyDollar[3].selStmt.SetWith(yyDollar[2].with)
			yyVAL.selStmt = yyDollar[3].selStmt
		}
	case 49:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:681
		{
			yyVAL.with = &With{Ctes: yyDollar[2].tableExprs, Recursive: true}
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:684
		{
			yyVAL.with = &With{Ctes: yyDollar[1].tableExprs, Recursive: false}
		}
	case 51:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:690
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr), Window: yyDollar[13].window, Into: yyDollar[8].into}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 52:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:698
		{
			yyVAL.tableExprs = nil
		}
	case 53:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:702
		{
			yyVAL.tableExprs = nil
		}
	case 54:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:706
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 55:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:715
		{
			yyVAL.into = nil
		}
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:719
		{
			yyVAL.into = &Into{Variables: yyDollar[2].variables}
		}
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:723
		{
			yyVAL.into = &Into{Outfile: string(yyDollar[3].bytes)}
		}
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:727
		{
			yyVAL.into = &Into{Dumpfile: string(yyDollar[3].bytes)}
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:733
		{
			yyVAL.variables = Variables{yyDollar[1].colIdent}
		}
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:737
		{
			yyVAL.variables = append(yyVAL.variables, yyDollar[3].colIdent)
		}
	case 61:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:742
		{
			yyVAL.with = nil
		}
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:746
		{
			yyVAL.with = yyDollar[2].with
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:752
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:756
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 65:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:762
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[4].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[2].columns}
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:768
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:776
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:782
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:790
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 70:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:796
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[7].ins
			ins.Action = yyDollar[2].str
			ins.Comments = yyDollar[3].bytes2
			ins.Ignore = yyDollar[4].str
			ins.Table = yyDollar[5].tableName
			ins.Partitions = yyDollar[6].partitions
			ins.OnDup = OnDup(yyDollar[8].assignExprs)
			ins.With = yyDollar[1].with
			yyVAL.statement = ins
		}
	case 71:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:809
		{
			cols := make(Columns, 0, len(yyDollar[8].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[9].assignExprs))
			for _, updateList := range yyDollar[8].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[2].str, Comments: Comments(yyDollar[3].bytes2), Ignore: yyDollar[4].str, Table: yyDollar[5].tableName, Partitions: yyDollar[6].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[9].assignExprs), With: yyDollar[1].with}
		}
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:821
		{
			yyVAL.str = InsertStr
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:825
		{
			yyVAL.str = ReplaceStr
		}
	case 74:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:831
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[3].bytes2), Ignore: yyDollar[4].str, TableExprs: yyDollar[5].tableExprs, Exprs: yyDollar[7].assignExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), OrderBy: yyDollar[9].orderBy, Limit: yyDollar[10].limit, With: yyDollar[1].with}
		}
	case 75:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:837
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitions, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit, With: yyDollar[1].with}
		}
	case 76:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:841
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[5].tableNames, TableExprs: yyDollar[7].tableExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), With: yyDollar[1].with}
		}
	case 77:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:845
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), With: yyDollar[1].with}
		}
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:849
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), With: yyDollar[1].with}
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:854
		{
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:855
		{
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:859
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 82:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:863
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:869
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:873
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:879
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:883
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 87:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:888
		{
			yyVAL.partitions = nil
		}
	case 88:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:892
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:898
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 90:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:902
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 91:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:909
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:918
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:922
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:928
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 95:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:932
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 96:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:936
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:942
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 98:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:946
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 99:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:950
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:954
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 101:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:959
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 102:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:964
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 103:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:969
		{
			yyVAL.boolean = yySpecialCommentMode(yylex)
		}
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:975
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:984
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:989
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 107:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:994
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 108:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:998
		{
			yyDollar[2].viewSpec.ViewName = yyDollar[4].tableName.ToViewName()
			yyDollar[2].viewSpec.ViewExpr = yyDollar[8].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[2].viewSpec, SpecialCommentMode: yyDollar[7].boolean, SubStatementPositionStart: yyDollar[6].int, SubStatementPositionEnd: yyDollar[9].int - 1}
		}
	case 109:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1004
		{
			yyDollar[4].viewSpec.ViewName = yyDollar[6].tableName.ToViewName()
			yyDollar[4].viewSpec.ViewExpr = yyDollar[10].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[4].viewSpec, SpecialCommentMode: yyDollar[9].boolean, SubStatementPositionStart: yyDollar[8].int, SubStatementPositionEnd: yyDollar[11].int - 1, OrReplace: true}
		}
	case 110:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1010
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 111:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1018
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 112:
		yyDollar = yyS[yypt-16 : yypt+1]
//line sql.y:1026
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName, Definer: yyDollar[2].str, Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[15].statement}, SpecialCommentMode: yyDollar[14].boolean, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[16].int - 1}
		}
	case 113:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1030
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName, Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[11].statement}, SpecialCommentMode: yyDollar[10].boolean, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[12].int - 1}
		}
	case 114:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1034
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].tlsOptionItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].accountLimitItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].passLockItems)
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames, TLSOptions: tlsOptions, AccountLimits: accountLimits, PasswordOptions: passwordOptions, Locked: locked, Attribute: yyDollar[9].str}
		}
	case 115:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1053
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 116:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1062
		{
			yyVAL.accountNames = nil
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1066
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1071
		{
			yyVAL.tlsOptionItems = nil
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1075
		{
			yyVAL.tlsOptionItems = nil
		}
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1079
		{
			yyVAL.tlsOptionItems = yyDollar[2].tlsOptionItems
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1085
		{
			yyVAL.tlsOptionItems = []TLSOptionItem{yyDollar[1].tlsOptionItem}
		}
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1089
		{
			yyVAL.tlsOptionItems = append(yyDollar[1].tlsOptionItems, yyDollar[3].tlsOptionItem)
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1095
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1099
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1103
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1107
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1111
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 128:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1116
		{
			yyVAL.accountLimitItems = nil
		}
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1120
		{
			yyVAL.accountLimitItems = yyDollar[2].accountLimitItems
		}
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1126
		{
			yyVAL.accountLimitItems = []AccountLimitItem{yyDollar[1].accountLimitItem}
		}
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1130
		{
			yyVAL.accountLimitItems = append(yyDollar[1].accountLimitItems, yyDollar[2].accountLimitItem)
		}
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1136
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1140
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1144
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1148
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 136:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1153
		{
			yyVAL.passLockItems = nil
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1157
		{
			yyVAL.passLockItems = yyDollar[1].passLockItems
		}
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1163
		{
			yyVAL.passLockItems = []PassLockItem{yyDollar[1].passLockItem}
		}
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1167
		{
			yyVAL.passLockItems = append(yyDollar[1].passLockItems, yyDollar[2].passLockItem)
		}
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1173
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1177
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 142:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1181
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1185
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1189
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1193
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 146:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1197
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1201
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1205
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1209
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1213
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1217
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1221
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1225
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 154:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1230
		{
			yyVAL.str = ""
		}
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1234
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.str = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1239
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 157:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1245
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 158:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1250
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[5].grantObjectType, PrivilegeLevel: yyDollar[6].privilegeLevel, To: yyDollar[8].accountNames, WithGrantOption: yyDollar[9].boolean, As: yyDollar[10].grantAssumption}
		}
	case 159:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1255
		{
			yyVAL.statement = &GrantPrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 160:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1259
		{
			yyVAL.statement = &GrantRole{Roles: yyDollar[2].accountNames, To: yyDollar[4].accountNames, WithAdminOption: yyDollar[5].boolean}
		}
	case 161:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1263
		{
			yyVAL.statement = &GrantProxy{On: yyDollar[4].accountName, To: yyDollar[6].accountNames, WithGrantOption: yyDollar[7].boolean}
		}
	case 162:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1269
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &RevokePrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 163:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1274
		{
			yyVAL.statement = &RevokePrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 164:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1278
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[7].accountNames}
		}
	case 165:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1282
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[8].accountNames}
		}
	case 166:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1286
		{
			yyVAL.statement = &RevokeRole{Roles: yyDollar[2].accountNames, From: yyDollar[4].accountNames}
		}
	case 167:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1290
		{
			yyVAL.statement = &RevokeProxy{On: yyDollar[4].accountName, From: yyDollar[6].accountNames}
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1296
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].strs}
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1300
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].strs}
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1304
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].strs}
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1308
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].strs}
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1312
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].strs}
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1316
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].strs}
		}
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1320
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].strs}
		}
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1324
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].strs}
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1328
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].strs}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1332
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].strs}
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1336
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].strs}
		}
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1340
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].strs}
		}
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1344
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].strs}
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1348
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].strs}
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1352
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].strs}
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1356
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_GrantOption, Columns: yyDollar[3].strs}
		}
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1360
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].strs}
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1364
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].strs}
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1368
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].strs}
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1372
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].strs}
		}
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1376
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].strs}
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1380
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].strs}
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1384
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].strs}
		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1388
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].strs}
		}
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1392
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].strs}
		}
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1396
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].strs}
		}
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1400
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].strs}
		}
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1404
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].strs}
		}
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1408
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].strs}
		}
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1412
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].strs}
		}
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1416
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].strs}
		}
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1420
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].strs}
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1426
		{
			yyVAL.grantPrivileges = []Privilege{yyDollar[1].grantPrivilege}
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1430
		{
			yyVAL.grantPrivileges = append(yyDollar[1].grantPrivileges, yyDollar[3].grantPrivilege)
		}
	case 202:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1435
		{
			yyVAL.strs = nil
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1439
		{
			yyVAL.strs = yyDollar[2].strs
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1445
		{
			yyVAL.strs = []string{yyDollar[1].colIdent.String()}
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1449
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].colIdent.String())
		}
	case 206:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1454
		{
			yyVAL.grantObjectType = GrantObjectType_Any
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1458
		{
			yyVAL.grantObjectType = GrantObjectType_Table
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1462
		{
			yyVAL.grantObjectType = GrantObjectType_Function
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1466
		{
			yyVAL.grantObjectType = GrantObjectType_Procedure
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1472
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1476
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1480
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].colIdent.String()}
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1484
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: "*"}
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1488
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: yyDollar[3].colIdent.String()}
		}
	case 215:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1493
		{
			yyVAL.grantAssumption = nil
		}
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1497
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 217:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1501
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 218:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1505
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].accountName, Roles: nil}
		}
	case 219:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1509
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].accountName, Roles: nil}
		}
	case 220:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1513
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].accountName, Roles: yyDollar[7].accountNames}
		}
	case 221:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1517
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].accountName, Roles: yyDollar[5].accountNames}
		}
	case 222:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1522
		{
			yyVAL.boolean = false
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1526
		{
			yyVAL.boolean = true
		}
	case 224:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1531
		{
			yyVAL.boolean = false
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1535
		{
			yyVAL.boolean = true
		}
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1542
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 227:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1554
		{
			yyVAL.procedureParams = nil
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1558
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1564
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1568
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1574
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[1].colIdent.String(), Type: yyDollar[2].columnType}
		}
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1578
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1582
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1586
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 235:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1591
		{
			yyVAL.characteristics = nil
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1595
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1601
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1605
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 239:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1611
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1615
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1619
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1623
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1627
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1631
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1635
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1639
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1643
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1647
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1653
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1659
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: "", Definer: yyDollar[1].str, Security: yyDollar[2].str}
		}
	case 251:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1663
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: yyDollar[1].str, Definer: yyDollar[2].str, Security: yyDollar[3].str}
		}
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1669
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1673
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1677
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 255:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1682
		{
			yyVAL.str = ""
		}
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1686
		{
			yyVAL.str = yyDollar[3].accountName.String()
		}
	case 257:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1691
		{
			yyVAL.str = ""
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1695
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1699
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1705
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1709
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1713
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1719
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1727
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1731
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1737
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1741
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 268:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1747
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1755
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1763
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1773
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1777
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1783
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 274:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1787
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 275:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1791
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 276:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1795
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 277:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1799
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1805
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1809
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1813
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 281:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1817
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 282:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1821
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 283:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1825
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 284:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1831
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1835
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 286:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1839
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1845
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1849
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1855
		{
			yyVAL.str = BeforeStr
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1859
		{
			yyVAL.str = AfterStr
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1865
		{
			yyVAL.str = InsertStr
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1869
		{
			yyVAL.str = UpdateStr
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1873
		{
			yyVAL.str = DeleteStr
		}
	case 294:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1878
		{
			yyVAL.triggerOrder = nil
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1882
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 296:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1886
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1892
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 302:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1902
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 303:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1908
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 304:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1912
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1918
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1922
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 307:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1928
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 308:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1934
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 309:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1939
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 310:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1944
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 311:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1950
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1958
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1962
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 314:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1968
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 315:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1974
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 316:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1978
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 317:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1982
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 318:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1986
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 319:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1990
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: &BeginEndBlock{}}}
		}
	case 320:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1994
		{
			yyDollar[3].columnType.Charset = yyDollar[4].str
			yyDollar[3].columnType.Collate = yyDollar[5].str
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 321:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2000
		{
			yyDollar[3].columnType.Charset = yyDollar[4].str
			yyDollar[3].columnType.Collate = yyDollar[5].str
			yyDollar[3].columnType.Default = yyDollar[7].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2009
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2013
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2017
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2023
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2027
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2033
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2037
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2041
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2045
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2049
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2053
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2059
		{
			yyVAL.statement = &OpenCursor{Name: string(yyDollar[2].bytes)}
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2065
		{
			yyVAL.statement = &CloseCursor{Name: string(yyDollar[2].bytes)}
		}
	case 335:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2071
		{
			yyVAL.statement = &FetchCursor{Name: string(yyDollar[3].bytes), Variables: yyDollar[5].strs}
		}
	case 336:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2076
		{
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2079
		{
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2083
		{
			yyVAL.strs = []string{string(yyDollar[1].bytes)}
		}
	case 340:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2087
		{
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[3].bytes))
		}
	case 341:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2093
		{
			yyVAL.statement = &Loop{Label: "", Statements: yyDollar[2].statements}
		}
	case 342:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2097
		{
			yyVAL.statement = &Loop{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].statements}
		}
	case 343:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2101
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[8].bytes) {
				yylex.Error("End-label " + string(yyDollar[8].bytes) + " without match")
				return 1
			}
			yyVAL.statement = &Loop{Label: label, Statements: yyDollar[4].statements}
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2112
		{
			yyVAL.statement = &Leave{Label: string(yyDollar[2].bytes)}
		}
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2118
		{
			yyVAL.statement = &Iterate{Label: string(yyDollar[2].bytes)}
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2124
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 347:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2128
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2132
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 349:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2136
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2142
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2146
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2152
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2156
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2162
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2168
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2172
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2176
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2180
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2184
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2188
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2192
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2196
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2200
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2204
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2208
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2212
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2218
		{
			yyVAL.statement = &Resignal{}
		}
	case 368:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2222
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 369:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2226
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2230
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2234
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 372:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2238
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2244
		{
			yyVAL.statement = &Call{ProcName: yyDollar[2].procedureName, Params: yyDollar[3].exprs}
		}
	case 374:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2249
		{
			yyVAL.exprs = nil
		}
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2253
		{
			yyVAL.exprs = nil
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2257
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2263
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2267
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2273
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 418:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2317
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
		}
	case 419:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2331
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: TableName{Name: NewTableIdent(string(yyDollar[5].bytes))}, IfNotExists: ne, Temporary: neTemp}
		}
	case 420:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2347
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str + yyDollar[5].str
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2354
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2359
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2364
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2370
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 425:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2374
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2379
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2383
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2387
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2393
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2401
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2411
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2419
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2427
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2435
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2443
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 436:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2452
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2456
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2460
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 439:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2465
		{
			yyVAL.columnType = ColumnType{}
		}
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2469
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2478
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2487
		{
			opt := ColumnType{Charset: yyDollar[2].str}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2496
		{
			opt := ColumnType{Collate: yyDollar[2].str}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2505
		{
			opt := ColumnType{BinaryCollate: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 445:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2514
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2523
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2532
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2541
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2550
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 450:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2559
		{
			opt := ColumnType{GeneratedExpr: yyDollar[4].expr, Stored: yyDollar[6].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 451:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2568
		{
			opt := ColumnType{GeneratedExpr: yyDollar[6].expr, Stored: yyDollar[8].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2577
		{
			opt := ColumnType{SRID: NewIntVal(yyDollar[3].bytes)}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2588
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2599
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2604
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2610
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2614
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2618
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2622
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2626
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2630
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2634
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2638
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2642
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2646
		{
			yyVAL.columnType = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 469:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2652
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 470:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2658
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2664
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 472:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2670
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2676
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2682
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2688
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2694
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2702
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2706
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2710
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2714
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2718
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 482:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2724
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2728
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2732
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2736
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2740
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2744
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2748
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2752
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2756
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 491:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2760
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2764
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2768
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2772
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2776
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2780
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2784
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2788
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2792
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2796
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2800
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2804
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2808
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2812
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 505:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2816
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs}
		}
	case 506:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2821
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs}
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2827
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2831
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2835
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2839
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2843
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2847
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2851
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2855
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2861
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2866
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2871
		{
			yyVAL.sqlVal = nil
		}
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2875
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2880
		{
			yyVAL.sqlVal = nil
		}
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2884
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 521:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2888
		{
			yyVAL.sqlVal = NewValArg(yyDollar[2].bytes)
		}
	case 522:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2893
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 523:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2897
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 524:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2905
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2909
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 526:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2915
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2923
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2927
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2931
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 530:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2936
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2940
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2946
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2950
		{
			if num, ok := yyDollar[3].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.optVal = num
				} else {
					yyVAL.optVal = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.optVal = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[3].expr}
			}
		}
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2964
		{
			yyVAL.optVal = yyDollar[2].boolVal
		}
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2968
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2972
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes)), Exprs: yyDollar[4].selectExprs}
		}
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2976
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 538:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2980
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes)), Exprs: yyDollar[4].selectExprs}
		}
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2984
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 540:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2988
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes)), Exprs: yyDollar[4].selectExprs}
		}
	case 541:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2992
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 542:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2996
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes)), Exprs: yyDollar[4].selectExprs}
		}
	case 543:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3000
		{
			yyVAL.optVal = &ParenExpr{yyDollar[3].expr}
		}
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3006
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3012
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 546:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3017
		{
			yyVAL.str = ""
		}
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3021
		{
			yyVAL.str = yyDollar[1].str
		}
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3027
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3031
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 550:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3036
		{
			yyVAL.str = ""
		}
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3040
		{
			yyVAL.str = yyDollar[1].str
		}
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3046
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3050
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 554:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3055
		{
			yyVAL.boolean = false
		}
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3059
		{
			yyVAL.boolean = true
		}
	case 556:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3064
		{
			yyVAL.charsetCollates = nil
		}
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3068
		{
			yyVAL.charsetCollates = yyDollar[1].charsetCollates
		}
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3074
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3078
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3082
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3086
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3090
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3094
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 564:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3100
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 565:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3104
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 566:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3108
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 567:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3112
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 568:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3116
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 569:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3120
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 570:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3126
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 571:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3130
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 572:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3134
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 573:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3140
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3146
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 575:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3150
		{
			yyVAL.colKeyOpt = colKey
		}
	case 576:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3154
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3158
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3162
		{
			yyVAL.colKeyOpt = colKeyFulltextKey
		}
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3168
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3174
		{
			yyVAL.statement = &Flush{Type: yyDollar[2].str, Option: yyDollar[3].flushOption}
		}
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3180
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 582:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3184
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3188
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 584:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3192
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3196
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3200
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3204
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3208
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3212
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].str}
		}
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3216
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3220
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3224
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 593:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3229
		{
			yyVAL.str = ""
		}
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3231
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3235
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3237
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 597:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3240
		{
			yyVAL.str = ""
		}
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3242
		{
			yyVAL.str = yyDollar[1].str
		}
	case 599:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3246
		{
			yyVAL.statement = &ChangeReplicationSource{Options: yyDollar[5].replicationOptions}
		}
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3250
		{
			yyVAL.statement = &StartReplica{}
		}
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3254
		{
			yyVAL.statement = &StopReplica{}
		}
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3260
		{
			yyVAL.replicationOptions = []*ReplicationOption{yyDollar[1].replicationOption}
		}
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3264
		{
			yyVAL.replicationOptions = append(yyVAL.replicationOptions, yyDollar[3].replicationOption)
		}
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3270
		{
			yyVAL.replicationOption = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3274
		{
			yyVAL.replicationOption = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3278
		{
			yyVAL.replicationOption = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3282
		{
			yyVAL.replicationOption = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 608:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3288
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 609:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3292
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 610:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3297
		{
			yyVAL.indexOptions = nil
		}
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3301
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3307
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3311
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 614:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3317
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3321
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3326
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 617:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3332
		{
			yyVAL.str = ""
		}
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3336
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3344
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 620:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3348
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3352
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3356
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true}
		}
	case 623:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3360
		{
			var name string
			name = yyDollar[2].str
			if name == "" {
				name = yyDollar[5].str
			}
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].str), Name: NewColIdent(name), Unique: true}
		}
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3369
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3373
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 626:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3377
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3383
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3387
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3391
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3397
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3401
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 632:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3406
		{
			yyVAL.str = ""
		}
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3410
		{
			yyVAL.str = yyDollar[1].str
		}
	case 634:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3415
		{
			yyVAL.str = ""
		}
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3419
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3425
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3429
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3435
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3439
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3445
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3449
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3453
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 643:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3459
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 644:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3463
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 645:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3467
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 646:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3471
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 647:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3475
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3481
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3486
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3490
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3494
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3498
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 653:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3504
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3510
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3514
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 656:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3519
		{
			yyVAL.str = ""
		}
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3523
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3527
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3533
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3539
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3545
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3549
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3553
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3557
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3561
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 666:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3566
		{
			yyVAL.boolean = true
		}
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3570
		{
			yyVAL.boolean = true
		}
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3574
		{
			yyVAL.boolean = false
		}
	case 669:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3579
		{
			yyVAL.str = ""
		}
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3583
		{
			yyVAL.str = yyDollar[1].str + " " + string(yyDollar[2].str)
		}
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3587
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3593
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3597
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3601
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3605
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].str) + " "
		}
	case 676:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3609
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + yyDollar[3].str
		}
	case 677:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3613
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + yyDollar[4].str
		}
	case 678:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3617
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + yyDollar[5].str
		}
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3621
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3625
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 681:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3629
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[4].bytes)
		}
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3633
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3637
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3641
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 685:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3645
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + "'" + string(yyDollar[4].bytes) + "'"
		}
	case 686:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3649
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + "'" + string(yyDollar[4].bytes) + "'"
		}
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3653
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3657
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3661
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3665
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3669
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3673
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3677
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3681
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3685
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3689
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3693
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3697
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3701
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3705
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3709
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3713
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3717
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3721
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3725
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3729
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3733
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str
		}
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3737
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3741
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)
		}
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3745
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)
		}
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3749
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3755
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3759
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3764
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3768
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3772
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3778
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3782
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3786
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3790
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3794
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3798
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 726:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3809
		{
			yyVAL.str = ""
		}
	case 727:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3813
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + yyDollar[3].str + yyDollar[4].str + yyDollar[5].str
		}
	case 728:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3817
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + yyDollar[3].str + yyDollar[4].str + yyDollar[5].str + "(partition_definitions)"
		}
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3823
		{
			yyVAL.str = yyDollar[1].str
		}
	case 730:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3827
		{
			yyVAL.str = string(yyDollar[1].bytes) + " (" + string(yyDollar[3].bytes) + ")"
		}
	case 731:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3831
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " (column_list)"
		}
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3835
		{
			yyVAL.str = string(yyDollar[1].bytes) + " (" + string(yyDollar[3].bytes) + ")"
		}
	case 733:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3839
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " (column_list)"
		}
	case 734:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3845
		{
			yyVAL.str = yyDollar[1].str + string(yyDollar[2].bytes) + " (value)"
		}
	case 735:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3849
		{
			yyVAL.str = yyDollar[1].str + string(yyDollar[2].bytes) + " (" + string(yyDollar[4].bytes) + ")"
		}
	case 736:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3853
		{
			yyVAL.str = yyDollar[1].str + string(yyDollar[2].bytes) + " (column_list)"
		}
	case 737:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3857
		{
			yyVAL.str = yyDollar[1].str + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[5].bytes) + " (column_list)"
		}
	case 738:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3862
		{
			yyVAL.str = ""
		}
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3866
		{
			yyVAL.str = string(yyDollar[1].bytes) + " "
		}
	case 740:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3871
		{
			yyVAL.str = ""
		}
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3875
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " "
		}
	case 742:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3880
		{
			yyVAL.str = ""
		}
	case 743:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3884
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + yyDollar[3].str + " " + yyDollar[4].str
		}
	case 744:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3889
		{
			yyVAL.str = ""
		}
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3893
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " "
		}
	case 746:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3898
		{
			yyVAL.str = ""
		}
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3902
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 748:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3907
		{
			yyVAL.str = string("")
		}
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3911
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 752:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3921
		{
			yyVAL.statement = &DBDDL{Action: AlterStr, DBName: string(yyDollar[3].bytes), CharsetCollate: yyDollar[4].charsetCollates}
		}
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3925
		{
			yyVAL.statement = &DBDDL{Action: AlterStr, CharsetCollate: yyDollar[3].charsetCollates}
		}
	case 754:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3931
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3944
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3948
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 757:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3954
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 758:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3961
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3968
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 760:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3972
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3976
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 762:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3981
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 763:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3985
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3989
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3994
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3999
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4004
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4009
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4014
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4019
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4024
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4029
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4034
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4039
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 775:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4043
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 776:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4047
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 777:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4054
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4060
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4064
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4070
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 781:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4076
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4081
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 783:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4085
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 784:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4089
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4093
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 786:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:4099
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[7].indexColumns, Options: yyDollar[9].indexOptions}
			yyVAL.ddl = ddl
		}
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4105
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4109
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 789:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4114
		{
			yyVAL.columnOrder = nil
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4118
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4122
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 792:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4127
		{
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4129
		{
		}
	case 794:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4133
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4139
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4143
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 797:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4149
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 798:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4153
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4159
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4163
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4169
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 802:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4173
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4181
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 804:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4185
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 805:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4191
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 806:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4199
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 807:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4203
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 808:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4211
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 809:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4219
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 810:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4227
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName}, IfExists: exists}
		}
	case 811:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4235
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName}, IfExists: exists}
		}
	case 812:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4243
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 813:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4251
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 814:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4260
		{

		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4264
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4268
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4274
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4278
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4284
		{
			yyVAL.statement = &Analyze{Tables: yyDollar[3].tableNames}
		}
	case 820:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4290
		{
			yyVAL.statement = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].bytes)}
		}
	case 821:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4294
		{
			yyVAL.statement = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].bytes)}
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4300
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4304
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4311
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4315
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4321
		{
			yyVAL.statement = &Execute{Name: string(yyDollar[2].bytes)}
		}
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4325
		{
			yyVAL.statement = &Execute{Name: string(yyDollar[2].bytes)}
		}
	case 828:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4329
		{
			yyVAL.statement = &Execute{Name: string(yyDollar[2].bytes), VarList: yyDollar[4].strs}
		}
	case 829:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4333
		{
			yyVAL.statement = &Execute{Name: string(yyDollar[2].bytes), VarList: yyDollar[4].strs}
		}
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4339
		{
			yyVAL.statement = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4343
		{
			yyVAL.statement = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4347
		{
			yyVAL.statement = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4351
		{
			yyVAL.statement = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4357
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 835:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4362
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4366
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 837:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4370
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 838:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4374
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 839:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4378
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 840:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4383
		{
			yyVAL.statement = &Show{Type: CreateProcedureStr, Table: yyDollar[4].tableName}
		}
	case 841:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4387
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 842:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4391
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4395
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4399
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 845:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4403
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 846:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4407
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 847:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4411
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 848:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4415
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4419
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 850:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4423
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 851:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4427
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 852:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4431
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 853:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4435
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, AsOf: yyDollar[7].expr, Filter: yyDollar[8].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, Table: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 854:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4440
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4445
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 856:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4449
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 857:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4453
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4457
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 859:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4461
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4467
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4475
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 862:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4479
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 863:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4484
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 864:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4488
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4493
		{
			yyVAL.statement = &ShowPrivileges{}
		}
	case 866:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4497
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 867:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4501
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4505
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4509
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4515
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 871:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4521
		{
			yyVAL.boolean = false
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4525
		{
			yyVAL.boolean = true
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4531
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4535
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 875:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4541
		{
			yyVAL.str = ""
		}
	case 876:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4545
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 877:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4549
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 878:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4555
		{
			yyVAL.showFilter = nil
		}
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4559
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4563
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[3].bytes)}
		}
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4567
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 882:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4573
		{
			yyVAL.str = ""
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4577
		{
			yyVAL.str = SessionStr
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4581
		{
			yyVAL.str = GlobalStr
		}
	case 885:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4587
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 886:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4591
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: yyDollar[2].tableIdent.v + "/" + yyDollar[4].tableIdent.v}}
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4595
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 888:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4600
		{
			yyVAL.bytes = nil
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4604
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 890:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4610
		{
			yyVAL.statement = &Begin{}
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4614
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4620
		{
			yyVAL.statement = &Begin{}
		}
	case 893:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4624
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 894:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4628
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 895:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4633
		{
			yyVAL.bytes = nil
		}
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4637
		{
			yyVAL.bytes = nil
		}
	case 897:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4642
		{
			yyVAL.bytes = nil
		}
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4646
		{
			yyVAL.bytes = nil
		}
	case 899:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4651
		{
			yyVAL.bytes = nil
		}
	case 900:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4655
		{
			yyVAL.bytes = nil
		}
	case 901:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4661
		{
			yyVAL.statement = &Commit{}
		}
	case 902:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4667
		{
			yyVAL.statement = &Rollback{}
		}
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4673
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4679
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 905:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4683
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 906:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4687
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 907:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4691
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4697
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4703
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 910:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4707
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[3].str, Statement: yyDollar[4].statement}
		}
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4711
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4717
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 916:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4725
		{
			yyVAL.str = ""
		}
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4729
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4741
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[3].expr}
			yyVAL.statement = &Show{Type: "columns", Table: yyDollar[2].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 922:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4747
		{
			setAllowComments(yylex, true)
		}
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4751
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 924:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4757
		{
			yyVAL.bytes2 = nil
		}
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4761
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4767
		{
			yyVAL.str = UnionStr
		}
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4771
		{
			yyVAL.str = UnionAllStr
		}
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4775
		{
			yyVAL.str = UnionDistinctStr
		}
	case 929:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4780
		{
			yyVAL.byt = 0
		}
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4784
		{
			yyVAL.byt = 1
		}
	case 931:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4789
		{
			yyVAL.str = ""
		}
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4793
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4797
		{
			yyVAL.str = SQLCacheStr
		}
	case 934:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4802
		{
			yyVAL.str = ""
		}
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4806
		{
			yyVAL.str = ""
		}
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4810
		{
			yyVAL.str = DistinctStr
		}
	case 937:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4815
		{
			yyVAL.str = ""
		}
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4819
		{
			yyVAL.str = StraightJoinHint
		}
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4825
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 940:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4833
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4844
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4848
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4852
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 944:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4856
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4862
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4866
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4870
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 948:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4874
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4880
		{
			yyVAL.over = &Over{NameRef: yyDollar[2].colIdent}
		}
	case 950:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4884
		{
			yyVAL.over = (*Over)(yyDollar[2].windowDef)
		}
	case 951:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4890
		{
			yyVAL.windowDef = &WindowDef{NameRef: yyDollar[2].colIdent, PartitionBy: yyDollar[3].exprs, OrderBy: yyDollar[4].orderBy, Frame: yyDollar[5].frame}
		}
	case 952:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4895
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4898
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 954:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4903
		{
			yyVAL.exprs = nil
		}
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4907
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 956:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4912
		{
			yyVAL.over = nil
		}
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4916
		{
			yyVAL.over = yyDollar[1].over
		}
	case 958:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4921
		{
			yyVAL.frame = nil
		}
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4925
		{
			yyVAL.frame = &Frame{Unit: RowsUnit, Extent: yyDollar[2].frameExtent}
		}
	case 960:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4929
		{
			yyVAL.frame = &Frame{Unit: RangeUnit, Extent: yyDollar[2].frameExtent}
		}
	case 961:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4936
		{
			startBound := yyDollar[2].frameBound
			endBound := yyDollar[4].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound, End: endBound}
		}
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4959
		{
			startBound := yyDollar[1].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound}
		}
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4974
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedPreceding}
		}
	case 964:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4978
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedFollowing}
		}
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4982
		{
			yyVAL.frameBound = &FrameBound{Type: CurrentRow}
		}
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4986
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprPreceding,
			}
		}
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4993
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprFollowing,
			}
		}
	case 968:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5001
		{
			yyVAL.window = nil
		}
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5004
		{
			yyVAL.window = yyDollar[2].window
		}
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5010
		{
			yyVAL.window = Window{yyDollar[1].windowDef}
		}
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5013
		{
			yyVAL.window = append(yyDollar[1].window, yyDollar[3].windowDef)
		}
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5019
		{
			def := yyDollar[3].windowDef
			def.Name = yyDollar[1].colIdent
			yyVAL.windowDef = def
		}
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5028
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5032
		{
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 975:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5037
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5041
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5045
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5049
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[2].bytes))
		}
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5055
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5059
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5063
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5067
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5071
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5075
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5081
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5085
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5095
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 990:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5099
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5109
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5115
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5123
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 996:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5129
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 997:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5133
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5139
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 999:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5144
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5155
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 1001:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5159
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 1002:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5163
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5167
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 1004:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5171
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 1005:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5182
		{
			yyVAL.expr = nil
		}
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5186
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 1007:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5191
		{
			yyVAL.columns = nil
		}
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5195
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5201
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5205
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5211
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5215
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 1013:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5221
		{
			yyVAL.tableExpr = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].selectExprs}
		}
	case 1014:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5235
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 1015:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5239
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 1016:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5243
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5247
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5253
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 1019:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5255
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 1020:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5259
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5261
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 1022:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5265
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 1023:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5267
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 1024:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5270
		{
			yyVAL.empty = struct{}{}
		}
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5272
		{
			yyVAL.empty = struct{}{}
		}
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5277
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5281
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5287
		{
			yyVAL.str = JoinStr
		}
	case 1030:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5291
		{
			yyVAL.str = JoinStr
		}
	case 1031:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5295
		{
			yyVAL.str = JoinStr
		}
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5301
		{
			yyVAL.str = StraightJoinStr
		}
	case 1033:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5307
		{
			yyVAL.str = LeftJoinStr
		}
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5311
		{
			yyVAL.str = LeftJoinStr
		}
	case 1035:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5315
		{
			yyVAL.str = RightJoinStr
		}
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5319
		{
			yyVAL.str = RightJoinStr
		}
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5323
		{
			yyVAL.str = FullOuterJoinStr
		}
	case 1038:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5327
		{
			yyVAL.str = FullOuterJoinStr
		}
	case 1039:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5333
		{
			yyVAL.str = NaturalJoinStr
		}
	case 1040:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5337
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 1041:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:5347
		{
			yyVAL.tableExpr = &JSONTableExpr{Data: yyDollar[3].expr, Path: string(yyDollar[5].bytes), Spec: yyDollar[8].TableSpec, Alias: yyDollar[12].tableIdent}
		}
	case 1042:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:5351
		{
			yyVAL.tableExpr = &JSONTableExpr{Data: yyDollar[3].expr, Path: string(yyDollar[5].bytes), Spec: yyDollar[8].TableSpec, Alias: yyDollar[11].tableIdent}
		}
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5357
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5362
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5370
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 1046:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5382
		{
			yyVAL.columnType = ColumnType{Path: string(yyDollar[2].bytes)}
		}
	case 1047:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5386
		{
			yyVAL.columnType = ColumnType{Path: string(yyDollar[3].bytes)}
		}
	case 1048:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5392
		{

		}
	case 1049:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5410
		{

		}
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5414
		{

		}
	case 1051:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5418
		{

		}
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5422
		{

		}
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5428
		{
			yyVAL.triggerName = TriggerName{Name: yyDollar[1].colIdent}
		}
	case 1054:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5432
		{
			yyVAL.triggerName = TriggerName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 1055:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5438
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5444
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5448
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5454
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 1059:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5458
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5462
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5466
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5470
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5476
		{
			yyVAL.procedureName = ProcedureName{Name: yyDollar[1].colIdent}
		}
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5480
		{
			yyVAL.procedureName = ProcedureName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5486
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 1066:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5491
		{
			yyVAL.indexHints = nil
		}
	case 1067:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5495
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 1068:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5499
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 1069:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5503
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 1070:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5508
		{
			yyVAL.expr = nil
		}
	case 1071:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5512
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5518
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1073:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5522
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 1074:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5526
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 1075:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5530
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5534
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 1077:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5538
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5542
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1079:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5546
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 1080:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5552
		{
			yyVAL.str = ""
		}
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5556
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5562
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5566
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5572
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5576
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 1086:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5580
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 1087:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5584
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 1088:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5588
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 1089:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5592
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 1090:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5596
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 1091:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5600
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 1092:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5604
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 1093:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5608
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5614
		{
			yyVAL.str = IsNullStr
		}
	case 1095:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5618
		{
			yyVAL.str = IsNotNullStr
		}
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5622
		{
			yyVAL.str = IsTrueStr
		}
	case 1097:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5626
		{
			yyVAL.str = IsNotTrueStr
		}
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5630
		{
			yyVAL.str = IsFalseStr
		}
	case 1099:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5634
		{
			yyVAL.str = IsNotFalseStr
		}
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5640
		{
			yyVAL.str = EqualStr
		}
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5644
		{
			yyVAL.str = LessThanStr
		}
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5648
		{
			yyVAL.str = GreaterThanStr
		}
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5652
		{
			yyVAL.str = LessEqualStr
		}
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5656
		{
			yyVAL.str = GreaterEqualStr
		}
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5660
		{
			yyVAL.str = NotEqualStr
		}
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5664
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 1107:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5669
		{
			yyVAL.expr = nil
		}
	case 1108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5673
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5679
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5683
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5687
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5693
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5699
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5703
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 1115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5709
		{
			yyVAL.selectExprs = nil
		}
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5716
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5720
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5726
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5730
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5736
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5740
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5744
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5748
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5752
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5756
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5760
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5764
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 1129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5768
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5772
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 1131:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5776
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 1132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5780
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 1133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5784
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 1134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5788
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 1135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5792
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 1136:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5796
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 1137:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5800
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 1138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5804
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 1139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5808
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 1140:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5812
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 1141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5816
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 1142:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5820
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 1143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5824
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 1144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5828
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 1145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5832
		{
			yyVAL.expr = &UnaryExpr{Operator: yyDollar[1].str, Expr: yyDollar[2].expr}
		}
	case 1146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5836
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 1147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5844
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 1148:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5858
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 1149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5862
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 1150:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5866
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 1157:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5886
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 1158:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5890
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 1159:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5900
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1160:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5904
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1161:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5908
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1162:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5912
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1163:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5916
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1164:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5920
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1165:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5924
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1166:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5928
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1167:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5932
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1168:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5936
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1169:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5940
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1170:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5944
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1171:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5948
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1172:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5952
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1173:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5956
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1174:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5960
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1175:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5964
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1176:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5973
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1177:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5977
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1178:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5981
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 1179:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5985
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1180:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5989
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 1181:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5993
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1182:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5997
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1183:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6001
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1184:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6005
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1185:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6009
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1186:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6013
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1187:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6024
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1188:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6028
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1189:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6032
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1190:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6036
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1191:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6040
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1192:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6044
		{
			yyVAL.expr = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 1193:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6048
		{
			yyVAL.expr = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 1194:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6052
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1195:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6056
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1196:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6060
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 1197:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6064
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1198:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6068
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1199:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6072
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1200:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6076
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1201:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6080
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1202:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6084
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 1203:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6088
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 1204:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:6092
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 1205:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:6096
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 1206:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:6100
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 1207:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:6104
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 1208:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6108
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1209:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:6112
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 1210:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6116
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 1211:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6120
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 1212:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6124
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1213:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6134
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1214:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6138
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1215:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6142
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1216:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6147
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1217:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6152
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1218:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6157
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6163
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1220:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6168
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6172
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6177
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1223:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6181
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1224:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6185
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1225:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6190
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1226:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6195
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1227:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6200
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1228:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6204
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1229:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6208
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1232:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6219
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1233:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6229
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1234:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6233
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1235:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6237
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1236:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6241
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1237:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6245
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1238:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6249
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1239:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6255
		{
			yyVAL.str = ""
		}
	case 1240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6259
		{
			yyVAL.str = BooleanModeStr
		}
	case 1241:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6263
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 1242:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:6267
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 1243:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6271
		{
			yyVAL.str = QueryExpansionStr
		}
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6277
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6281
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6287
		{
			yyVAL.str = Armscii8Str
		}
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6291
		{
			yyVAL.str = AsciiStr
		}
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6295
		{
			yyVAL.str = Big5Str
		}
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6299
		{
			yyVAL.str = UBinaryStr
		}
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6303
		{
			yyVAL.str = Cp1250Str
		}
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6307
		{
			yyVAL.str = Cp1251Str
		}
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6311
		{
			yyVAL.str = Cp1256Str
		}
	case 1253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6315
		{
			yyVAL.str = Cp1257Str
		}
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6319
		{
			yyVAL.str = Cp850Str
		}
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6323
		{
			yyVAL.str = Cp852Str
		}
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6327
		{
			yyVAL.str = Cp866Str
		}
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6331
		{
			yyVAL.str = Cp932Str
		}
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6335
		{
			yyVAL.str = Dec8Str
		}
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6339
		{
			yyVAL.str = EucjpmsStr
		}
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6343
		{
			yyVAL.str = EuckrStr
		}
	case 1261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6347
		{
			yyVAL.str = Gb18030Str
		}
	case 1262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6351
		{
			yyVAL.str = Gb2312Str
		}
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6355
		{
			yyVAL.str = GbkStr
		}
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6359
		{
			yyVAL.str = Geostd8Str
		}
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6363
		{
			yyVAL.str = GreekStr
		}
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6367
		{
			yyVAL.str = HebrewStr
		}
	case 1267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6371
		{
			yyVAL.str = Hp8Str
		}
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6375
		{
			yyVAL.str = Keybcs2Str
		}
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6379
		{
			yyVAL.str = Koi8rStr
		}
	case 1270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6383
		{
			yyVAL.str = Koi8uStr
		}
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6387
		{
			yyVAL.str = Latin1Str
		}
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6391
		{
			yyVAL.str = Latin2Str
		}
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6395
		{
			yyVAL.str = Latin5Str
		}
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6399
		{
			yyVAL.str = Latin7Str
		}
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6403
		{
			yyVAL.str = MacceStr
		}
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6407
		{
			yyVAL.str = MacromanStr
		}
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6411
		{
			yyVAL.str = SjisStr
		}
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6415
		{
			yyVAL.str = Swe7Str
		}
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6419
		{
			yyVAL.str = Tis620Str
		}
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6423
		{
			yyVAL.str = Ucs2Str
		}
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6427
		{
			yyVAL.str = UjisStr
		}
	case 1282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6431
		{
			yyVAL.str = Utf16Str
		}
	case 1283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6435
		{
			yyVAL.str = Utf16leStr
		}
	case 1284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6439
		{
			yyVAL.str = Utf32Str
		}
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6443
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6447
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6451
		{
			yyVAL.str = Utf8mb4Str
		}
	case 1288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6457
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1289:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6461
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 1290:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6465
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 1291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6469
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6473
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6477
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 1294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6483
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1295:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6487
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6491
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1297:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6495
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6499
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6503
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6507
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1301:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6512
		{
			yyVAL.expr = nil
		}
	case 1302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6516
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1303:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6521
		{
			yyVAL.str = string("")
		}
	case 1304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6525
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6531
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 1306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6535
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 1307:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6541
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 1308:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6546
		{
			yyVAL.expr = nil
		}
	case 1309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6550
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6556
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 1311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6560
		{
			yyVAL.colName = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6564
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 1313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6568
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1314:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6572
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1315:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6576
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1316:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6580
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1317:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6584
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1318:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6588
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6592
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1320:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6596
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1321:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6600
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1322:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6604
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1323:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6608
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 1324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6614
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6618
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 1326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6622
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 1327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6626
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6630
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 1329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6634
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 1330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6638
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6642
		{
			yyVAL.expr = &NullVal{}
		}
	case 1332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6648
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 1333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6652
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6656
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1335:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6661
		{
			yyVAL.exprs = nil
		}
	case 1336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6665
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 1337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6671
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1338:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6675
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6681
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1340:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6686
		{
			yyVAL.expr = nil
		}
	case 1341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6690
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6696
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1343:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6701
		{
			yyVAL.orderBy = nil
		}
	case 1344:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6705
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 1345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6711
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 1346:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6715
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 1347:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6721
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 1348:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6726
		{
			yyVAL.str = AscScr
		}
	case 1349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6730
		{
			yyVAL.str = AscScr
		}
	case 1350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6734
		{
			yyVAL.str = DescScr
		}
	case 1351:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6739
		{
			yyVAL.limit = nil
		}
	case 1352:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6743
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 1353:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6747
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 1354:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6751
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 1355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6757
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6761
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1357:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6766
		{
			yyVAL.str = ""
		}
	case 1358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6770
		{
			yyVAL.str = ForUpdateStr
		}
	case 1359:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6774
		{
			yyVAL.str = ShareModeStr
		}
	case 1360:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6787
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 1361:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6791
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 1362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6795
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 1363:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6799
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 1364:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6804
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 1365:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6808
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 1366:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6812
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 1367:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6818
		{
			yyVAL.columns = nil
		}
	case 1368:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6822
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 1369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6828
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1370:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6832
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1371:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6838
		{
			yyVAL.colIdent = yyDollar[3].colIdent
		}
	case 1372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6842
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1373:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6846
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1374:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6850
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1375:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6854
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1376:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6858
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6863
		{
			yyVAL.assignExprs = nil
		}
	case 1378:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6867
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 1379:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6873
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 1380:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6877
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 1381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6883
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 1382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6887
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 1383:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6893
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 1384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6899
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 1385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6909
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 1386:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6913
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 1387:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6919
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 1388:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6922
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1389:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6926
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1390:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6930
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6936
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 1392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6940
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 1393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6946
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 1394:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6957
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1395:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6970
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1396:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6983
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 1397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6989
		{
			yyVAL.setScope = SetScope_Global
		}
	case 1398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6993
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6999
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7003
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 1401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7007
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 1402:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7013
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7017
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1404:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7021
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 1406:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7028
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1408:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7035
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 1409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7039
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7043
		{
			yyVAL.expr = &Default{}
		}
	case 1413:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7052
		{
			yyVAL.byt = 0
		}
	case 1414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7054
		{
			yyVAL.byt = 1
		}
	case 1415:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7057
		{
			yyVAL.byt = 0
		}
	case 1416:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7059
		{
			yyVAL.byt = 1
		}
	case 1417:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7062
		{
			yyVAL.byt = 0
		}
	case 1418:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7064
		{
			yyVAL.byt = 1
		}
	case 1419:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7067
		{
			yyVAL.str = ""
		}
	case 1420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7069
		{
			yyVAL.str = IgnoreStr
		}
	case 1421:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7072
		{
			yyVAL.sqlVal = nil
		}
	case 1422:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7074
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1423:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7076
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7080
		{
			yyVAL.empty = struct{}{}
		}
	case 1425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7082
		{
			yyVAL.empty = struct{}{}
		}
	case 1426:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7085
		{
			yyVAL.empty = struct{}{}
		}
	case 1427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7087
		{
			yyVAL.empty = struct{}{}
		}
	case 1428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7089
		{
			yyVAL.empty = struct{}{}
		}
	case 1429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7093
		{
			yyVAL.str = UniqueStr
		}
	case 1430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7095
		{
			yyVAL.str = FulltextStr
		}
	case 1431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7097
		{
			yyVAL.str = SpatialStr
		}
	case 1432:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7100
		{
			yyVAL.str = ""
		}
	case 1433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7102
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1434:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7105
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 1435:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7107
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 1436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7111
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7115
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7121
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 1439:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7125
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 1441:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7132
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1442:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7138
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7142
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7149
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1446:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7154
		{
			yyVAL.str = string("")
		}
	case 1447:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7156
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1448:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7159
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7161
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1450:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7164
		{
			yyVAL.EnclosedBy = nil
		}
	case 1451:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7168
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1452:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7173
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7177
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1454:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7182
		{
			yyVAL.sqlVal = nil
		}
	case 1455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7186
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1456:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7191
		{
			yyVAL.sqlVal = nil
		}
	case 1457:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7195
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1458:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7200
		{
			yyVAL.Fields = nil
		}
	case 1459:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7204
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1460:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7209
		{
			yyVAL.Lines = nil
		}
	case 1461:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7213
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1462:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7218
		{
			yyVAL.sqlVal = nil
		}
	case 1463:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7222
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7228
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7234
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1466:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7238
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1467:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7244
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1468:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7248
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7254
		{
			yyVAL.lockType = LockRead
		}
	case 1470:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7258
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7262
		{
			yyVAL.lockType = LockWrite
		}
	case 1472:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7266
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7272
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1474:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7278
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[2].bytes)}
		}
	case 1475:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7282
		{
			yyVAL.statement = &Kill{ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1476:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7286
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 2297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8148
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8157
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
