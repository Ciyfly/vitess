// Code generated by goyacc -o sql.go -v y.output sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

//import "runtime/debug"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

func yySpecialCommentMode(yylex interface{}) bool {
	tkn := yylex.(*Tokenizer)
	return tkn.specialComment != nil
}

//line sql.y:64
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	variables                Variables
	into                     *Into
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	triggerName              TriggerName
	tableName                TableName
	tableNames               TableNames
	procedureName            ProcedureName
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	flushOption              *FlushOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	viewSpec                 *ViewSpec
	showFilter               *ShowFilter
	frame                    *Frame
	frameExtent              *FrameExtent
	frameBound               *FrameBound
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	charsetCollate           *CharsetAndCollate
	charsetCollates          []*CharsetAndCollate
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptionItem            TLSOptionItem
	tlsOptionItems           []TLSOptionItem
	accountLimitItem         AccountLimitItem
	accountLimitItems        []AccountLimitItem
	passLockItem             PassLockItem
	passLockItems            []PassLockItem
	grantPrivilege           Privilege
	grantPrivileges          []Privilege
	grantObjectType          GrantObjectType
	privilegeLevel           PrivilegeLevel
	grantAssumption          *GrantUserAssumption
	with                     *With
	window                   Window
	over                     *Over
	windowDef                *WindowDef
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const DUPLICATE = 57369
const DEFAULT = 57370
const SET = 57371
const LOCK = 57372
const UNLOCK = 57373
const KEYS = 57374
const OF = 57375
const OUTFILE = 57376
const DUMPFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const INTO = 57425
const OR = 57426
const XOR = 57427
const AND = 57428
const NOT = 57429
const BETWEEN = 57430
const CASE = 57431
const WHEN = 57432
const THEN = 57433
const ELSE = 57434
const ELSEIF = 57435
const END = 57436
const LE = 57437
const GE = 57438
const NE = 57439
const NULL_SAFE_EQUAL = 57440
const IS = 57441
const LIKE = 57442
const REGEXP = 57443
const IN = 57444
const UNBOUNDED = 57445
const PARTITION = 57446
const RANGE = 57447
const ROWS = 57448
const GROUPS = 57449
const PRECEDING = 57450
const FOLLOWING = 57451
const SHIFT_LEFT = 57452
const SHIFT_RIGHT = 57453
const DIV = 57454
const MOD = 57455
const UNARY = 57456
const COLLATE = 57457
const BINARY = 57458
const UNDERSCORE_ARMSCII8 = 57459
const UNDERSCORE_ASCII = 57460
const UNDERSCORE_BIG5 = 57461
const UNDERSCORE_BINARY = 57462
const UNDERSCORE_CP1250 = 57463
const UNDERSCORE_CP1251 = 57464
const UNDERSCORE_CP1256 = 57465
const UNDERSCORE_CP1257 = 57466
const UNDERSCORE_CP850 = 57467
const UNDERSCORE_CP852 = 57468
const UNDERSCORE_CP866 = 57469
const UNDERSCORE_CP932 = 57470
const UNDERSCORE_DEC8 = 57471
const UNDERSCORE_EUCJPMS = 57472
const UNDERSCORE_EUCKR = 57473
const UNDERSCORE_GB18030 = 57474
const UNDERSCORE_GB2312 = 57475
const UNDERSCORE_GBK = 57476
const UNDERSCORE_GEOSTD8 = 57477
const UNDERSCORE_GREEK = 57478
const UNDERSCORE_HEBREW = 57479
const UNDERSCORE_HP8 = 57480
const UNDERSCORE_KEYBCS2 = 57481
const UNDERSCORE_KOI8R = 57482
const UNDERSCORE_KOI8U = 57483
const UNDERSCORE_LATIN1 = 57484
const UNDERSCORE_LATIN2 = 57485
const UNDERSCORE_LATIN5 = 57486
const UNDERSCORE_LATIN7 = 57487
const UNDERSCORE_MACCE = 57488
const UNDERSCORE_MACROMAN = 57489
const UNDERSCORE_SJIS = 57490
const UNDERSCORE_SWE7 = 57491
const UNDERSCORE_TIS620 = 57492
const UNDERSCORE_UCS2 = 57493
const UNDERSCORE_UJIS = 57494
const UNDERSCORE_UTF16 = 57495
const UNDERSCORE_UTF16LE = 57496
const UNDERSCORE_UTF32 = 57497
const UNDERSCORE_UTF8 = 57498
const UNDERSCORE_UTF8MB3 = 57499
const UNDERSCORE_UTF8MB4 = 57500
const INTERVAL = 57501
const JSON_EXTRACT_OP = 57502
const JSON_UNQUOTE_EXTRACT_OP = 57503
const CREATE = 57504
const ALTER = 57505
const DROP = 57506
const RENAME = 57507
const ANALYZE = 57508
const ADD = 57509
const MODIFY = 57510
const CHANGE = 57511
const SCHEMA = 57512
const TABLE = 57513
const INDEX = 57514
const INDEXES = 57515
const VIEW = 57516
const TO = 57517
const IGNORE = 57518
const IF = 57519
const PRIMARY = 57520
const COLUMN = 57521
const SPATIAL = 57522
const FULLTEXT = 57523
const KEY_BLOCK_SIZE = 57524
const CHECK = 57525
const ACTION = 57526
const CASCADE = 57527
const CONSTRAINT = 57528
const FOREIGN = 57529
const NO = 57530
const REFERENCES = 57531
const RESTRICT = 57532
const FIRST = 57533
const AFTER = 57534
const LAST = 57535
const SHOW = 57536
const DESCRIBE = 57537
const EXPLAIN = 57538
const DATE = 57539
const ESCAPE = 57540
const REPAIR = 57541
const OPTIMIZE = 57542
const TRUNCATE = 57543
const FORMAT = 57544
const MAXVALUE = 57545
const REORGANIZE = 57546
const LESS = 57547
const THAN = 57548
const PROCEDURE = 57549
const TRIGGER = 57550
const TRIGGERS = 57551
const FUNCTION = 57552
const STATUS = 57553
const VARIABLES = 57554
const WARNINGS = 57555
const ERRORS = 57556
const KILL = 57557
const CONNECTION = 57558
const SEQUENCE = 57559
const ENABLE = 57560
const DISABLE = 57561
const EACH = 57562
const ROW = 57563
const BEFORE = 57564
const FOLLOWS = 57565
const PRECEDES = 57566
const DEFINER = 57567
const INVOKER = 57568
const INOUT = 57569
const OUT = 57570
const DETERMINISTIC = 57571
const CONTAINS = 57572
const READS = 57573
const MODIFIES = 57574
const SQL = 57575
const SECURITY = 57576
const TEMPORARY = 57577
const ALGORITHM = 57578
const MERGE = 57579
const TEMPTABLE = 57580
const UNDEFINED = 57581
const CLASS_ORIGIN = 57582
const SUBCLASS_ORIGIN = 57583
const MESSAGE_TEXT = 57584
const MYSQL_ERRNO = 57585
const CONSTRAINT_CATALOG = 57586
const CONSTRAINT_SCHEMA = 57587
const CONSTRAINT_NAME = 57588
const CATALOG_NAME = 57589
const SCHEMA_NAME = 57590
const TABLE_NAME = 57591
const COLUMN_NAME = 57592
const CURSOR_NAME = 57593
const SIGNAL = 57594
const RESIGNAL = 57595
const SQLSTATE = 57596
const DECLARE = 57597
const CONDITION = 57598
const CURSOR = 57599
const CONTINUE = 57600
const EXIT = 57601
const UNDO = 57602
const HANDLER = 57603
const FOUND = 57604
const SQLWARNING = 57605
const SQLEXCEPTION = 57606
const USER = 57607
const IDENTIFIED = 57608
const ROLE = 57609
const REUSE = 57610
const GRANT = 57611
const GRANTS = 57612
const REVOKE = 57613
const NONE = 57614
const ATTRIBUTE = 57615
const RANDOM = 57616
const PASSWORD = 57617
const INITIAL = 57618
const AUTHENTICATION = 57619
const SSL = 57620
const X509 = 57621
const CIPHER = 57622
const ISSUER = 57623
const SUBJECT = 57624
const ACCOUNT = 57625
const EXPIRE = 57626
const NEVER = 57627
const DAY = 57628
const OPTION = 57629
const OPTIONAL = 57630
const EXCEPT = 57631
const ADMIN = 57632
const PRIVILEGES = 57633
const MAX_QUERIES_PER_HOUR = 57634
const MAX_UPDATES_PER_HOUR = 57635
const MAX_CONNECTIONS_PER_HOUR = 57636
const MAX_USER_CONNECTIONS = 57637
const FLUSH = 57638
const FAILED_LOGIN_ATTEMPTS = 57639
const PASSWORD_LOCK_TIME = 57640
const REQUIRE = 57641
const PROXY = 57642
const ROUTINE = 57643
const TABLESPACE = 57644
const CLIENT = 57645
const SLAVE = 57646
const EVENT = 57647
const EXECUTE = 57648
const FILE = 57649
const RELOAD = 57650
const REPLICATION = 57651
const SHUTDOWN = 57652
const SUPER = 57653
const USAGE = 57654
const LOGS = 57655
const ENGINE = 57656
const ERROR = 57657
const GENERAL = 57658
const HOSTS = 57659
const OPTIMIZER_COSTS = 57660
const RELAY = 57661
const SLOW = 57662
const USER_RESOURCES = 57663
const NO_WRITE_TO_BINLOG = 57664
const CHANNEL = 57665
const BEGIN = 57666
const START = 57667
const TRANSACTION = 57668
const COMMIT = 57669
const ROLLBACK = 57670
const SAVEPOINT = 57671
const WORK = 57672
const RELEASE = 57673
const BIT = 57674
const TINYINT = 57675
const SMALLINT = 57676
const MEDIUMINT = 57677
const INT = 57678
const INTEGER = 57679
const BIGINT = 57680
const INTNUM = 57681
const SERIAL = 57682
const REAL = 57683
const DOUBLE = 57684
const FLOAT_TYPE = 57685
const DECIMAL = 57686
const NUMERIC = 57687
const DEC = 57688
const FIXED = 57689
const PRECISION = 57690
const TIME = 57691
const TIMESTAMP = 57692
const DATETIME = 57693
const YEAR = 57694
const CHAR = 57695
const VARCHAR = 57696
const BOOL = 57697
const CHARACTER = 57698
const VARBINARY = 57699
const NCHAR = 57700
const NVARCHAR = 57701
const NATIONAL = 57702
const VARYING = 57703
const TEXT = 57704
const TINYTEXT = 57705
const MEDIUMTEXT = 57706
const LONGTEXT = 57707
const LONG = 57708
const BLOB = 57709
const TINYBLOB = 57710
const MEDIUMBLOB = 57711
const LONGBLOB = 57712
const JSON = 57713
const ENUM = 57714
const GEOMETRY = 57715
const POINT = 57716
const LINESTRING = 57717
const POLYGON = 57718
const GEOMETRYCOLLECTION = 57719
const MULTIPOINT = 57720
const MULTILINESTRING = 57721
const MULTIPOLYGON = 57722
const LOCAL = 57723
const LOW_PRIORITY = 57724
const NULLX = 57725
const AUTO_INCREMENT = 57726
const APPROXNUM = 57727
const SIGNED = 57728
const UNSIGNED = 57729
const ZEROFILL = 57730
const SRID = 57731
const COLLATION = 57732
const DATABASES = 57733
const SCHEMAS = 57734
const TABLES = 57735
const FULL = 57736
const PROCESSLIST = 57737
const COLUMNS = 57738
const FIELDS = 57739
const ENGINES = 57740
const PLUGINS = 57741
const NAMES = 57742
const CHARSET = 57743
const GLOBAL = 57744
const SESSION = 57745
const ISOLATION = 57746
const LEVEL = 57747
const READ = 57748
const WRITE = 57749
const ONLY = 57750
const REPEATABLE = 57751
const COMMITTED = 57752
const UNCOMMITTED = 57753
const SERIALIZABLE = 57754
const ENCRYPTION = 57755
const CURRENT_TIMESTAMP = 57756
const DATABASE = 57757
const CURRENT_DATE = 57758
const CURRENT_USER = 57759
const CURRENT_TIME = 57760
const LOCALTIME = 57761
const LOCALTIMESTAMP = 57762
const UTC_DATE = 57763
const UTC_TIME = 57764
const UTC_TIMESTAMP = 57765
const REPLACE = 57766
const CONVERT = 57767
const CAST = 57768
const SUBSTR = 57769
const SUBSTRING = 57770
const TRIM = 57771
const LEADING = 57772
const TRAILING = 57773
const BOTH = 57774
const GROUP_CONCAT = 57775
const SEPARATOR = 57776
const TIMESTAMPADD = 57777
const TIMESTAMPDIFF = 57778
const OVER = 57779
const WINDOW = 57780
const GROUPING = 57781
const CURRENT = 57782
const AVG = 57783
const BIT_AND = 57784
const BIT_OR = 57785
const BIT_XOR = 57786
const COUNT = 57787
const JSON_ARRAYAGG = 57788
const JSON_OBJECTAGG = 57789
const MAX = 57790
const MIN = 57791
const STDDEV_POP = 57792
const STDDEV = 57793
const STD = 57794
const STDDEV_SAMP = 57795
const SUM = 57796
const VAR_POP = 57797
const VARIANCE = 57798
const VAR_SAMP = 57799
const CUME_DIST = 57800
const DENSE_RANK = 57801
const FIRST_VALUE = 57802
const LAG = 57803
const LAST_VALUE = 57804
const LEAD = 57805
const NTH_VALUE = 57806
const NTILE = 57807
const ROW_NUMBER = 57808
const PERCENT_RANK = 57809
const RANK = 57810
const JSON_TABLE = 57811
const PATH = 57812
const AVG_ROW_LENGTH = 57813
const CHECKSUM = 57814
const COMPRESSION = 57815
const DIRECTORY = 57816
const DELAY_KEY_WRITE = 57817
const ENGINE_ATTRIBUTE = 57818
const INSERT_METHOD = 57819
const MAX_ROWS = 57820
const MIN_ROWS = 57821
const PACK_KEYS = 57822
const ROW_FORMAT = 57823
const SECONDARY_ENGINE_ATTRIBUTE = 57824
const STATS_AUTO_RECALC = 57825
const STATS_PERSISTENT = 57826
const STATS_SAMPLE_PAGES = 57827
const TABLESPACE_NAME = 57828
const STORAGE = 57829
const DISK = 57830
const MEMORY = 57831
const DYNAMIC = 57832
const COMPRESSED = 57833
const REDUNDANT = 57834
const COMPACT = 57835
const MATCH = 57836
const AGAINST = 57837
const BOOLEAN = 57838
const LANGUAGE = 57839
const WITH = 57840
const QUERY = 57841
const EXPANSION = 57842
const ACCESSIBLE = 57843
const ASENSITIVE = 57844
const CUBE = 57845
const DAY_HOUR = 57846
const DAY_MICROSECOND = 57847
const DAY_MINUTE = 57848
const DAY_SECOND = 57849
const DELAYED = 57850
const DISTINCTROW = 57851
const DUAL = 57852
const EMPTY = 57853
const FETCH = 57854
const FLOAT4 = 57855
const FLOAT8 = 57856
const GET = 57857
const HIGH_PRIORITY = 57858
const HOUR_MICROSECOND = 57859
const HOUR_MINUTE = 57860
const HOUR_SECOND = 57861
const INSENSITIVE = 57862
const INT1 = 57863
const INT2 = 57864
const INT3 = 57865
const INT4 = 57866
const INT8 = 57867
const IO_AFTER_GTIDS = 57868
const IO_BEFORE_GTIDS = 57869
const ITERATE = 57870
const LEAVE = 57871
const LINEAR = 57872
const LOOP = 57873
const MASTER_BIND = 57874
const MASTER_SSL_VERIFY_SERVER_CERT = 57875
const MIDDLEINT = 57876
const MINUTE_MICROSECOND = 57877
const MINUTE_SECOND = 57878
const PURGE = 57879
const READ_WRITE = 57880
const REPEAT = 57881
const RETURN = 57882
const RLIKE = 57883
const SECOND_MICROSECOND = 57884
const SENSITIVE = 57885
const SPECIFIC = 57886
const SQL_BIG_RESULT = 57887
const SQL_SMALL_RESULT = 57888
const VARCHARACTER = 57889
const WHILE = 57890
const YEAR_MONTH = 57891
const UNUSED = 57892
const DESCRIPTION = 57893
const LATERAL = 57894
const MEMBER = 57895
const RECURSIVE = 57896
const BUCKETS = 57897
const CLONE = 57898
const COMPONENT = 57899
const DEFINITION = 57900
const ENFORCED = 57901
const EXCLUDE = 57902
const GEOMCOLLECTION = 57903
const GET_MASTER_PUBLIC_KEY = 57904
const HISTOGRAM = 57905
const HISTORY = 57906
const INACTIVE = 57907
const INVISIBLE = 57908
const LOCKED = 57909
const MASTER_COMPRESSION_ALGORITHMS = 57910
const MASTER_PUBLIC_KEY_PATH = 57911
const MASTER_TLS_CIPHERSUITES = 57912
const MASTER_ZSTD_COMPRESSION_LEVEL = 57913
const NESTED = 57914
const NETWORK_NAMESPACE = 57915
const NOWAIT = 57916
const NULLS = 57917
const OJ = 57918
const OLD = 57919
const ORDINALITY = 57920
const ORGANIZATION = 57921
const OTHERS = 57922
const PERSIST = 57923
const PERSIST_ONLY = 57924
const PRIVILEGE_CHECKS_USER = 57925
const PROCESS = 57926
const REFERENCE = 57927
const REQUIRE_ROW_FORMAT = 57928
const RESOURCE = 57929
const RESPECT = 57930
const RESTART = 57931
const RETAIN = 57932
const SECONDARY = 57933
const SECONDARY_ENGINE = 57934
const SECONDARY_LOAD = 57935
const SECONDARY_UNLOAD = 57936
const SKIP = 57937
const THREAD_PRIORITY = 57938
const TIES = 57939
const VCPU = 57940
const VISIBLE = 57941
const SYSTEM = 57942
const INFILE = 57943
const ACTIVE = 57944
const AGGREGATE = 57945
const ANY = 57946
const ARRAY = 57947
const ASCII = 57948
const AT = 57949
const AUTOEXTEND_SIZE = 57950
const ENDS = 57951
const EVENTS = 57952
const GENERATED = 57953
const ALWAYS = 57954
const STORED = 57955
const VIRTUAL = 57956
const NVAR = 57957
const PASSWORD_LOCK = 57958

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DUMPFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"INTO",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'0'",
	"'1'",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB3",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"LAST",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"ENABLE",
	"DISABLE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"ALGORITHM",
	"MERGE",
	"TEMPTABLE",
	"UNDEFINED",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTION",
	"OPTIONAL",
	"EXCEPT",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EVENT",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"SRID",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ENCRYPTION",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"JSON_TABLE",
	"PATH",
	"AVG_ROW_LENGTH",
	"CHECKSUM",
	"COMPRESSION",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"TABLESPACE_NAME",
	"STORAGE",
	"DISK",
	"MEMORY",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ACCESSIBLE",
	"ASENSITIVE",
	"CUBE",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"DELAYED",
	"DISTINCTROW",
	"DUAL",
	"EMPTY",
	"FETCH",
	"FLOAT4",
	"FLOAT8",
	"GET",
	"HIGH_PRIORITY",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"INSENSITIVE",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"IO_AFTER_GTIDS",
	"IO_BEFORE_GTIDS",
	"ITERATE",
	"LEAVE",
	"LINEAR",
	"LOOP",
	"MASTER_BIND",
	"MASTER_SSL_VERIFY_SERVER_CERT",
	"MIDDLEINT",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"PURGE",
	"READ_WRITE",
	"REPEAT",
	"RETURN",
	"RLIKE",
	"SECOND_MICROSECOND",
	"SENSITIVE",
	"SPECIFIC",
	"SQL_BIG_RESULT",
	"SQL_SMALL_RESULT",
	"VARCHARACTER",
	"WHILE",
	"YEAR_MONTH",
	"UNUSED",
	"DESCRIPTION",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"ACTIVE",
	"AGGREGATE",
	"ANY",
	"ARRAY",
	"ASCII",
	"AT",
	"AUTOEXTEND_SIZE",
	"ENDS",
	"EVENTS",
	"GENERATED",
	"ALWAYS",
	"STORED",
	"VIRTUAL",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 35,
	637, 35,
	-2, 56,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 41,
	191, 1322,
	192, 1341,
	-2, 249,
	-1, 47,
	231, 799,
	232, 799,
	-2, 788,
	-1, 67,
	5, 61,
	-2, 43,
	-1, 495,
	179, 1711,
	-2, 989,
	-1, 496,
	179, 1351,
	-2, 1345,
	-1, 497,
	179, 1352,
	-2, 1346,
	-1, 527,
	179, 1819,
	-2, 1240,
	-1, 528,
	179, 1900,
	-2, 991,
	-1, 529,
	179, 1731,
	-2, 992,
	-1, 596,
	179, 1682,
	-2, 1210,
	-1, 599,
	179, 1699,
	-2, 1139,
	-1, 600,
	179, 1912,
	-2, 1139,
	-1, 601,
	179, 1911,
	-2, 1139,
	-1, 602,
	179, 1910,
	-2, 1139,
	-1, 603,
	179, 1799,
	-2, 1139,
	-1, 604,
	179, 1800,
	-2, 1139,
	-1, 605,
	179, 1697,
	-2, 1139,
	-1, 606,
	179, 1698,
	-2, 1139,
	-1, 607,
	179, 1700,
	-2, 1139,
	-1, 855,
	100, 2006,
	179, 2006,
	-2, 1306,
	-1, 856,
	100, 2108,
	179, 2108,
	-2, 1307,
	-1, 861,
	100, 2028,
	179, 2028,
	-2, 1308,
	-1, 862,
	100, 2069,
	179, 2069,
	-2, 1309,
	-1, 863,
	100, 2070,
	179, 2070,
	-2, 1310,
	-1, 864,
	100, 1949,
	179, 1949,
	-2, 1314,
	-1, 866,
	100, 2049,
	179, 2049,
	-2, 1316,
	-1, 1122,
	5, 61,
	-2, 44,
	-1, 1385,
	1, 523,
	637, 523,
	-2, 521,
	-1, 1387,
	1, 523,
	637, 523,
	-2, 521,
	-1, 1840,
	179, 1354,
	-2, 1350,
	-1, 1960,
	1, 900,
	5, 900,
	12, 900,
	13, 900,
	14, 900,
	15, 900,
	17, 900,
	19, 900,
	29, 900,
	30, 900,
	56, 900,
	57, 900,
	58, 900,
	59, 900,
	60, 900,
	62, 900,
	63, 900,
	66, 900,
	67, 900,
	69, 900,
	70, 900,
	87, 900,
	414, 900,
	458, 900,
	637, 900,
	-2, 933,
	-1, 1968,
	67, 78,
	69, 78,
	-2, 82,
	-1, 1985,
	179, 1823,
	-2, 1311,
	-1, 2092,
	1, 524,
	637, 524,
	-2, 521,
	-1, 2182,
	44, 681,
	198, 683,
	200, 681,
	201, 681,
	-2, 724,
	-1, 2231,
	5, 62,
	-2, 1021,
	-1, 2808,
	198, 684,
	-2, 682,
	-1, 2881,
	69, 1595,
	70, 1595,
	179, 1595,
	-2, 831,
	-1, 2907,
	1, 975,
	5, 975,
	12, 975,
	13, 975,
	14, 975,
	15, 975,
	17, 975,
	19, 975,
	29, 975,
	30, 975,
	56, 975,
	57, 975,
	58, 975,
	59, 975,
	60, 975,
	62, 975,
	63, 975,
	66, 975,
	67, 975,
	69, 975,
	70, 975,
	87, 975,
	414, 975,
	458, 975,
	637, 975,
	-2, 933,
	-1, 3054,
	5, 62,
	-2, 1272,
	-1, 3142,
	41, 1361,
	-2, 1359,
	-1, 3339,
	5, 62,
	-2, 1275,
	-1, 3354,
	281, 315,
	-2, 1416,
	-1, 3355,
	281, 316,
	-2, 1456,
	-1, 3356,
	281, 317,
	-2, 1632,
	-1, 3521,
	95, 301,
	97, 301,
	99, 301,
	-2, 56,
	-1, 3552,
	97, 308,
	98, 308,
	99, 308,
	-2, 56,
}

const yyPrivate = 57344

const yyLast = 48987

var yyAct = [...]int{
	539, 76, 3502, 3513, 2445, 3472, 3454, 2588, 3358, 1136,
	3359, 3453, 469, 3474, 1219, 3397, 428, 2751, 3269, 7,
	3416, 3239, 972, 3268, 6, 499, 3267, 5, 3341, 3261,
	3270, 8, 3379, 3080, 3199, 1794, 3329, 3142, 2703, 2316,
	2901, 2614, 1220, 2929, 538, 2874, 2314, 2542, 3331, 481,
	1315, 2087, 3144, 2875, 2530, 2111, 488, 2768, 1420, 2793,
	3011, 2479, 2039, 79, 2987, 497, 2981, 2965, 1812, 411,
	414, 2704, 2310, 503, 3262, 1865, 1243, 76, 465, 1006,
	2615, 91, 459, 2030, 2871, 516, 2802, 453, 453, 2386,
	2461, 478, 2667, 2883, 2892, 1805, 2043, 1792, 1030, 1993,
	3266, 3, 104, 1956, 2181, 1925, 2558, 989, 2299, 2140,
	2073, 130, 1871, 1422, 130, 942, 1746, 1793, 2509, 2157,
	130, 1957, 1137, 2026, 2292, 1396, 2095, 2094, 2093, 1293,
	456, 456, 2436, 2069, 130, 1717, 1842, 935, 1144, 1916,
	1960, 1140, 857, 1297, 1059, 1038, 1751, 2091, 2387, 484,
	2618, 1296, 853, 1970, 934, 1158, 985, 854, 130, 944,
	468, 431, 430, 860, 2057, 508, 1037, 1391, 96, 1388,
	81, 955, 971, 960, 100, 1800, 67, 479, 130, 456,
	3552, 944, 3547, 1920, 473, 3539, 3521, 3519, 3497, 130,
	2595, 2400, 3467, 3405, 78, 2718, 2403, 3201, 3200, 1744,
	2045, 1148, 446, 1242, 440, 451, 434, 3121, 83, 2371,
	89, 2749, 2408, 2407, 2952, 3549, 3545, 3543, 506, 36,
	3484, 2382, 423, 3119, 3327, 3447, 441, 39, 3247, 2966,
	2125, 3419, 3315, 2125, 2404, 2765, 3326, 3246, 3122, 2968,
	36, 36, 2609, 36, 939, 2580, 36, 2701, 2596, 2410,
	2354, 2393, 3134, 2353, 2473, 848, 849, 850, 3452, 2394,
	2610, 2373, 2374, 2921, 2922, 2415, 3219, 3375, 2375, 74,
	2269, 957, 2865, 962, 963, 954, 3170, 1298, 3426, 1299,
	965, 77, 3179, 2156, 2312, 2656, 1175, 1174, 1184, 1185,
	1177, 1178, 1179, 1180, 1181, 1182, 1183, 1176, 1070, 2689,
	1186, 467, 77, 77, 3335, 77, 108, 1979, 77, 2657,
	2658, 1980, 1981, 2808, 1926, 2934, 1747, 2940, 2942, 2941,
	2938, 2939, 2937, 2936, 2935, 1128, 3335, 87, 85, 86,
	118, 114, 115, 1750, 116, 1964, 2943, 2944, 1802, 1803,
	2334, 3192, 3332, 2333, 3330, 1096, 2335, 1768, 1010, 1011,
	97, 1088, 422, 421, 2412, 463, 2971, 1748, 1749, 2155,
	2635, 930, 2305, 2306, 3332, 1056, 2406, 120, 119, 2409,
	3035, 1009, 2041, 2042, 1983, 1419, 2058, 2851, 433, 432,
	435, 124, 2063, 425, 2058, 2046, 2070, 2849, 439, 405,
	410, 2046, 2049, 2051, 1730, 2050, 1016, 2969, 2970, 2972,
	2973, 2974, 2347, 420, 2452, 443, 2366, 3336, 76, 76,
	447, 1020, 993, 994, 464, 475, 997, 2505, 1789, 3511,
	1788, 1787, 1786, 1028, 450, 121, 1025, 122, 932, 3336,
	1785, 1027, 1784, 2468, 1026, 1092, 1093, 2497, 2381, 3441,
	1063, 1072, 3303, 130, 951, 2982, 1017, 1018, 969, 995,
	996, 1103, 99, 2985, 1104, 2988, 2989, 2990, 2991, 983,
	3148, 494, 110, 109, 2792, 2502, 76, 2983, 2984, 2169,
	1126, 3361, 1377, 3360, 3510, 2775, 3305, 1131, 3223, 2373,
	2374, 3221, 2377, 2999, 3008, 2112, 2375, 130, 2301, 2304,
	2305, 2306, 2302, 3116, 2303, 2308, 1195, 2170, 1779, 1197,
	3213, 2472, 1199, 3120, 3368, 2470, 2997, 106, 1024, 479,
	1072, 3402, 2376, 3506, 3114, 1394, 1376, 107, 111, 3113,
	3138, 436, 437, 438, 444, 1758, 448, 449, 452, 3400,
	3401, 1211, 130, 1341, 1214, 1215, 1216, 1217, 1218, 3112,
	1223, 2778, 3462, 3111, 406, 3110, 130, 101, 3108, 102,
	2769, 2770, 2771, 2772, 2773, 1007, 1161, 1008, 1010, 1011,
	106, 3469, 1095, 961, 400, 412, 112, 3346, 3347, 951,
	3385, 111, 2405, 3404, 3109, 117, 106, 2402, 1403, 1404,
	1402, 3209, 3210, 1224, 1225, 1226, 1227, 1228, 1229, 1230,
	1231, 1232, 1233, 1234, 1235, 1236, 1237, 1377, 1240, 1241,
	1244, 1244, 1244, 1250, 1244, 1244, 1250, 1244, 1250, 1259,
	1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269,
	1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279,
	1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 2691, 1328,
	479, 1165, 1122, 2102, 2346, 2766, 2450, 951, 2106, 2107,
	3215, 2769, 2770, 2771, 2772, 2773, 3264, 992, 2416, 3069,
	113, 2641, 1134, 3205, 1005, 2967, 424, 378, 2487, 2488,
	1002, 1731, 1001, 2101, 2058, 1377, 3443, 1246, 1248, 2794,
	1252, 1254, 2163, 1257, 3171, 1064, 2072, 3414, 1021, 3333,
	3245, 2451, 2559, 2372, 1071, 1750, 1105, 98, 2421, 2748,
	2377, 3220, 131, 2453, 2048, 3117, 132, 2471, 3197, 133,
	134, 3333, 3534, 986, 381, 135, 3463, 1196, 2307, 1748,
	1749, 1342, 3304, 390, 398, 399, 3512, 951, 1072, 1082,
	2376, 480, 1073, 1080, 1081, 1083, 1084, 1085, 1086, 1087,
	3137, 1089, 1090, 1091, 3425, 1094, 1130, 1097, 1098, 1099,
	1100, 1101, 480, 480, 3135, 480, 2474, 1060, 68, 387,
	413, 2777, 388, 88, 2807, 396, 397, 413, 1123, 2301,
	2304, 2305, 2306, 2302, 2561, 2303, 2308, 3214, 415, 2893,
	2894, 2690, 2692, 2693, 2694, 2515, 959, 958, 408, 2189,
	2183, 2184, 3553, 2182, 2185, 2186, 1003, 1004, 2680, 2401,
	442, 2681, 1752, 2682, 1245, 1247, 1249, 1251, 1253, 1255,
	1256, 1258, 961, 951, 3012, 3013, 1701, 2036, 3550, 3540,
	951, 416, 393, 941, 409, 3081, 3522, 131, 108, 3478,
	2192, 132, 3473, 3517, 133, 134, 2319, 2321, 1754, 3083,
	135, 1753, 2707, 394, 2191, 2190, 2307, 951, 3476, 956,
	974, 2036, 3225, 474, 1079, 3022, 1355, 1358, 1359, 1360,
	1361, 1362, 1363, 3023, 1364, 1365, 1366, 1367, 1368, 1369,
	1370, 1371, 2790, 1343, 1344, 1345, 1346, 1322, 1326, 1356,
	1323, 1329, 1325, 1327, 1324, 1068, 1330, 1331, 1332, 1333,
	1334, 1335, 1336, 1337, 1338, 1339, 1340, 1347, 1348, 1349,
	1350, 1351, 1352, 1353, 1354, 131, 2496, 2492, 379, 132,
	2476, 2475, 133, 134, 1873, 1077, 130, 2527, 135, 2164,
	1408, 2563, 2038, 1406, 1022, 944, 2567, 860, 2562, 2090,
	2560, 2038, 860, 953, 2648, 2565, 2647, 2646, 952, 2038,
	2038, 2490, 392, 382, 383, 1078, 403, 1074, 2564, 3026,
	384, 386, 2122, 380, 402, 401, 1127, 2121, 2390, 2038,
	3082, 964, 377, 2566, 2568, 1201, 1202, 2888, 2320, 1204,
	1205, 1206, 1207, 1208, 1209, 1210, 1200, 1110, 1198, 77,
	1398, 1075, 1076, 3218, 110, 109, 453, 2837, 1372, 1373,
	1374, 1375, 2244, 2655, 1310, 3102, 1301, 395, 490, 1421,
	2241, 1302, 2494, 2493, 2338, 453, 2223, 1291, 2212, 3515,
	2188, 1067, 3516, 2179, 3514, 2105, 2103, 1975, 944, 130,
	1357, 1397, 1815, 413, 1203, 1401, 1309, 3021, 456, 456,
	1213, 413, 456, 1288, 1289, 1212, 1166, 984, 2959, 130,
	3475, 3477, 130, 1984, 3096, 2957, 1203, 456, 456, 1186,
	130, 1179, 1180, 1181, 1182, 1183, 1176, 1379, 3103, 1186,
	130, 130, 130, 130, 130, 1984, 3094, 1984, 2946, 2037,
	1984, 2740, 1314, 1120, 1725, 2522, 2515, 2737, 2037, 1176,
	2519, 456, 1186, 2518, 2521, 130, 2037, 2037, 1984, 2526,
	1200, 453, 1019, 2523, 1984, 2736, 1702, 1742, 1984, 2732,
	2330, 2960, 1311, 2787, 3027, 1727, 2037, 3240, 2958, 1713,
	1714, 1715, 1716, 2515, 1984, 2728, 3363, 951, 1984, 2434,
	2516, 2036, 973, 1383, 3049, 1777, 2535, 2307, 1761, 1384,
	1410, 2293, 76, 456, 456, 456, 1399, 76, 944, 1400,
	2738, 1984, 2432, 1721, 1808, 1722, 1804, 1718, 1418, 1417,
	1984, 2430, 2132, 1116, 1984, 2428, 1704, 1984, 2425, 3124,
	1424, 1201, 1202, 1157, 1706, 1707, 2582, 1783, 456, 1201,
	1202, 3386, 3387, 456, 456, 1115, 1111, 1112, 1113, 1114,
	1117, 1118, 1119, 1121, 3383, 3384, 986, 3250, 3249, 1849,
	130, 991, 944, 130, 3364, 999, 1154, 3125, 76, 1734,
	1735, 1012, 1835, 1737, 1847, 1848, 1846, 1155, 1156, 1154,
	2531, 2342, 1756, 1157, 1843, 3542, 2890, 2889, 130, 1740,
	3525, 3503, 3524, 1917, 1223, 1161, 1157, 1876, 1878, 1757,
	1760, 3538, 479, 3398, 1869, 3430, 1875, 3429, 1893, 976,
	977, 978, 979, 980, 981, 982, 1719, 2887, 1882, 1884,
	1778, 2133, 2236, 1781, 2235, 1177, 1178, 1179, 1180, 1181,
	1182, 1183, 1176, 1739, 944, 1186, 944, 1307, 1029, 944,
	967, 966, 3464, 1155, 1156, 1154, 944, 1797, 944, 944,
	1834, 1386, 94, 1813, 1814, 1790, 3028, 990, 130, 1382,
	1961, 1917, 1157, 2257, 1000, 3420, 2998, 1014, 479, 2992,
	1155, 1156, 1154, 1155, 1156, 1154, 1902, 1905, 3466, 986,
	1165, 3399, 1414, 1122, 1918, 1831, 1155, 1156, 1154, 1157,
	2151, 2442, 1157, 3398, 479, 944, 944, 93, 1806, 2716,
	1708, 1709, 1710, 1711, 1712, 1157, 1827, 1829, 1830, 1155,
	1156, 1154, 1840, 1151, 1828, 1988, 1155, 1156, 1154, 1155,
	1156, 1154, 3535, 77, 130, 130, 130, 2584, 1157, 3308,
	1990, 2237, 1955, 3301, 1845, 1157, 1817, 92, 1157, 860,
	1762, 1156, 1154, 1765, 1766, 1767, 3300, 1769, 1770, 944,
	1931, 1771, 1933, 1155, 1156, 1154, 3216, 1772, 1844, 1157,
	1818, 1773, 1774, 1819, 1775, 1776, 2833, 2698, 1145, 2209,
	2210, 2211, 1157, 1890, 1892, 3258, 1141, 3536, 1167, 1142,
	3302, 1897, 3132, 1881, 1806, 3131, 1885, 1886, 1887, 1888,
	1889, 3130, 2696, 1989, 3129, 3123, 1155, 1156, 1154, 1866,
	2951, 1867, 2119, 3217, 2950, 2079, 2080, 2081, 2082, 1914,
	2066, 2067, 2068, 1759, 2699, 1157, 1973, 1969, 1977, 1929,
	1930, 2027, 1982, 1976, 1221, 2719, 1936, 1937, 1938, 1939,
	2686, 1991, 2035, 1801, 939, 130, 2117, 2118, 2024, 2697,
	2676, 130, 130, 456, 456, 456, 1724, 2666, 130, 2075,
	2076, 2077, 2078, 1782, 2441, 1840, 2439, 2413, 1822, 2336,
	1062, 2337, 2083, 2084, 2085, 1061, 2059, 2060, 2061, 2062,
	2071, 3487, 1035, 3451, 3407, 3406, 3365, 3362, 1965, 3314,
	3212, 1239, 3211, 3196, 1870, 3139, 3107, 3076, 3045, 2995,
	2994, 2993, 2961, 2948, 2047, 1034, 2052, 2053, 2054, 2055,
	2056, 2920, 2919, 2799, 2725, 2099, 2695, 2687, 2679, 1894,
	1895, 1896, 2677, 2673, 2672, 1900, 1901, 1904, 1907, 2671,
	1912, 1913, 2538, 2537, 2437, 2858, 1919, 1040, 1041, 1042,
	1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 2152,
	2248, 2127, 1736, 3395, 3394, 3222, 1924, 3194, 1927, 1928,
	3156, 2390, 3150, 1932, 3019, 1934, 1935, 2870, 2827, 2823,
	2809, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948,
	1949, 1950, 1951, 1175, 1174, 1184, 1185, 1177, 1178, 1179,
	1180, 1181, 1182, 1183, 1176, 2779, 2482, 1186, 521, 520,
	523, 524, 525, 526, 1954, 2481, 1968, 522, 1877, 1135,
	1841, 1135, 2145, 1850, 1851, 1852, 1853, 1854, 1855, 1856,
	1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 2239, 2129,
	2221, 1135, 2128, 3149, 1868, 36, 1175, 1174, 1184, 1185,
	1177, 1178, 1179, 1180, 1181, 1182, 1183, 1176, 1732, 57,
	1186, 1729, 1416, 1415, 1387, 73, 1385, 1057, 39, 1175,
	1174, 1184, 1185, 1177, 1178, 1179, 1180, 1181, 1182, 1183,
	1176, 987, 419, 1186, 417, 1409, 1908, 1102, 94, 3090,
	3427, 2141, 2924, 3412, 3390, 1135, 1921, 2924, 3371, 3320,
	1135, 3098, 2341, 3097, 3544, 2924, 3316, 77, 3505, 3090,
	3255, 2924, 3203, 3090, 1135, 3090, 3185, 1250, 3090, 3089,
	3058, 1135, 2178, 1135, 2480, 2113, 2924, 2923, 2758, 2319,
	2321, 2115, 2116, 3296, 2872, 2746, 2745, 2886, 2123, 1174,
	1184, 1185, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1176,
	2154, 2730, 1186, 2742, 2743, 2148, 2729, 130, 1175, 1174,
	1184, 1185, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1176,
	2742, 2741, 1186, 1971, 130, 130, 130, 2296, 1135, 2221,
	1135, 2296, 2176, 2166, 2165, 1175, 1174, 1184, 1185, 1177,
	1178, 1179, 1180, 1181, 1182, 1183, 1176, 2130, 2726, 1186,
	1971, 130, 2480, 130, 1891, 2149, 2295, 944, 1891, 1135,
	2138, 80, 944, 1313, 1312, 2134, 2325, 1107, 1701, 1810,
	2139, 41, 69, 44, 43, 46, 2213, 2110, 1068, 1972,
	1106, 1974, 1065, 1066, 944, 1066, 3297, 944, 3444, 3418,
	2886, 1835, 3052, 1891, 2296, 2125, 2296, 2903, 2759, 2744,
	2536, 2508, 2340, 47, 72, 71, 1972, 1978, 1701, 2886,
	45, 2320, 944, 2221, 2263, 2221, 2161, 2262, 2109, 1738,
	1809, 2124, 1811, 931, 2147, 1068, 1124, 1780, 1745, 1701,
	2153, 1843, 1407, 1405, 1295, 77, 3343, 3317, 2168, 2902,
	3236, 2171, 2160, 3153, 3066, 2953, 1705, 2044, 2893, 2894,
	2088, 2144, 2074, 2046, 2715, 2070, 2380, 1072, 2104, 2065,
	2064, 55, 56, 1380, 3298, 1054, 2142, 1723, 3533, 1989,
	2143, 3531, 2175, 3491, 3489, 3455, 2896, 2872, 64, 2757,
	65, 2443, 1755, 427, 1412, 77, 1108, 1069, 2634, 2631,
	2201, 2199, 2200, 2633, 2632, 2208, 2629, 2900, 2899, 2898,
	2218, 2630, 2313, 2628, 2627, 66, 3381, 2322, 2323, 1221,
	3325, 1961, 485, 486, 1961, 2539, 2177, 2318, 2198, 1149,
	1150, 1821, 3373, 2214, 3055, 2206, 2205, 2224, 2193, 3176,
	3018, 1840, 2927, 3299, 70, 2822, 51, 52, 59, 2821,
	60, 2724, 2723, 3313, 2722, 2392, 2384, 2709, 1147, 458,
	1965, 3227, 3230, 3312, 3143, 3141, 3208, 3207, 418, 130,
	1733, 3126, 3127, 1138, 2534, 2533, 2753, 130, 2664, 2426,
	130, 2345, 1308, 3437, 1139, 1052, 130, 2126, 1036, 130,
	130, 130, 2309, 2326, 1033, 1032, 2327, 988, 3160, 3159,
	2097, 860, 2220, 3050, 2222, 2256, 2137, 1813, 1814, 3000,
	2098, 1411, 479, 3445, 3306, 1844, 3001, 2167, 3145, 1823,
	1824, 1825, 2932, 1031, 2752, 1149, 1150, 2231, 2232, 2233,
	2234, 1060, 94, 2089, 2238, 2240, 1791, 2204, 2243, 1132,
	1133, 2246, 2247, 2324, 3436, 2203, 2252, 2253, 3435, 3434,
	3104, 2174, 2259, 2260, 2328, 2261, 1015, 482, 2264, 2265,
	3367, 2266, 2267, 2339, 3366, 2271, 2272, 2273, 2274, 2275,
	1301, 3324, 2331, 3310, 2280, 2281, 2282, 2283, 2284, 2285,
	2286, 2287, 2288, 2289, 2290, 2291, 3231, 3175, 1221, 483,
	80, 3323, 3242, 1898, 1899, 1379, 2480, 2455, 2456, 2457,
	3492, 1424, 3493, 3492, 944, 3030, 130, 2797, 2503, 2486,
	2501, 2500, 2379, 2245, 2242, 453, 2172, 68, 1397, 944,
	944, 944, 1720, 1152, 3493, 456, 3252, 76, 2268, 2270,
	1965, 2385, 2721, 2388, 2478, 2276, 2277, 2278, 2279, 1965,
	130, 456, 1965, 1807, 931, 2146, 477, 3509, 2438, 82,
	2225, 2226, 2227, 2228, 2229, 53, 2440, 1, 456, 2162,
	2414, 1763, 2417, 3280, 50, 2507, 3282, 19, 2423, 2449,
	2447, 2448, 1987, 3281, 18, 2980, 944, 2979, 2435, 2254,
	456, 2986, 944, 3283, 20, 2469, 2579, 2764, 456, 3284,
	21, 3279, 15, 2767, 944, 944, 2484, 2467, 2544, 2418,
	2419, 2420, 2422, 3278, 14, 2996, 2389, 2391, 1395, 1835,
	3272, 10, 3295, 34, 3293, 33, 3292, 32, 130, 3115,
	2589, 2491, 970, 2483, 2108, 2489, 1058, 479, 944, 3311,
	2495, 3291, 28, 3290, 27, 3289, 26, 3287, 23, 2294,
	3286, 22, 3226, 2611, 2613, 2086, 2506, 1961, 1961, 1961,
	1961, 1961, 2517, 3228, 2528, 2529, 2512, 2612, 2532, 2215,
	2216, 2217, 2569, 3140, 2313, 2571, 2642, 3003, 2581, 2545,
	2513, 2964, 2637, 3288, 24, 2546, 1961, 2963, 1893, 1797,
	2644, 2510, 2520, 2525, 2549, 944, 2460, 2551, 3277, 13,
	3274, 12, 3273, 11, 2570, 1175, 1174, 1184, 1185, 1177,
	1178, 1179, 1180, 1181, 1182, 1183, 1176, 2459, 2645, 1186,
	3271, 9, 130, 130, 130, 130, 130, 1053, 1743, 2616,
	2511, 2249, 2250, 2251, 2544, 130, 2514, 2120, 1146, 130,
	2187, 3238, 2173, 130, 1109, 2028, 2651, 2688, 2653, 2654,
	1992, 130, 3340, 479, 933, 90, 2131, 998, 2652, 1840,
	2622, 2717, 385, 2625, 944, 2025, 2398, 3229, 2552, 2553,
	2554, 2555, 2556, 2557, 479, 2669, 1055, 2636, 2397, 2623,
	2624, 2411, 2626, 2669, 125, 2040, 2446, 404, 2649, 2092,
	2096, 2396, 2424, 125, 2427, 2429, 2431, 2433, 2395, 3224,
	2659, 2399, 1319, 1317, 1318, 1316, 944, 470, 1321, 1320,
	2678, 3486, 3424, 389, 1303, 3353, 2869, 1153, 532, 105,
	2477, 54, 491, 3020, 2524, 2708, 461, 2710, 868, 462,
	95, 125, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604,
	2605, 2606, 2607, 103, 1820, 391, 1194, 2774, 2202, 2332,
	858, 125, 859, 453, 2638, 2639, 851, 2083, 2194, 2085,
	1125, 3248, 125, 3374, 3415, 3345, 2754, 2755, 2756, 130,
	1143, 3376, 3322, 2760, 3241, 1965, 1965, 1965, 1965, 1965,
	2590, 2591, 2592, 2593, 2594, 2670, 2255, 1238, 2776, 944,
	944, 944, 1965, 2670, 1915, 2781, 456, 505, 2540, 2640,
	2498, 130, 456, 3048, 1965, 3378, 1826, 519, 2504, 518,
	517, 2660, 514, 2661, 2662, 515, 130, 3334, 456, 1816,
	944, 2608, 456, 1168, 2747, 502, 456, 456, 492, 456,
	2683, 2684, 2685, 1959, 1952, 2804, 2150, 2300, 2298, 2297,
	2700, 2863, 2783, 2733, 2812, 2817, 944, 1413, 2702, 1292,
	130, 944, 2895, 2891, 2804, 2311, 1963, 1958, 944, 2834,
	1962, 944, 944, 2485, 38, 3029, 2711, 2712, 2713, 1013,
	2714, 2877, 76, 2800, 2806, 2826, 2541, 407, 2864, 3169,
	2207, 84, 2734, 476, 487, 25, 2878, 17, 1023, 16,
	2180, 968, 1379, 40, 42, 2454, 2100, 2832, 1135, 3352,
	3471, 1039, 2905, 3501, 3396, 31, 30, 2909, 2910, 2911,
	29, 2873, 3285, 3294, 2784, 2876, 2844, 2845, 3276, 2846,
	3275, 3457, 2848, 3456, 2850, 4, 1129, 75, 35, 2814,
	2819, 929, 2, 0, 2847, 0, 2885, 944, 0, 944,
	0, 2548, 0, 2616, 2908, 0, 2904, 0, 1175, 1174,
	1184, 1185, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1176,
	0, 0, 1186, 2572, 2573, 0, 2574, 2575, 944, 2880,
	2576, 0, 479, 0, 2915, 2914, 0, 0, 0, 0,
	2897, 0, 0, 0, 2585, 2586, 1145, 0, 0, 2835,
	0, 2669, 2805, 0, 0, 0, 2906, 0, 0, 2916,
	0, 0, 2843, 0, 2838, 2839, 2840, 2841, 2842, 0,
	0, 0, 76, 2852, 2853, 2854, 125, 2955, 2918, 0,
	2859, 0, 1797, 0, 0, 0, 2954, 0, 1184, 1185,
	1177, 1178, 1179, 1180, 1181, 1182, 1183, 1176, 0, 2750,
	1186, 944, 0, 0, 0, 2650, 0, 0, 0, 2727,
	0, 0, 2731, 0, 0, 2879, 0, 0, 2735, 2928,
	125, 0, 2925, 2926, 0, 0, 2230, 2933, 2956, 0,
	2739, 2780, 2976, 2977, 2978, 0, 0, 0, 0, 0,
	0, 0, 0, 130, 0, 944, 2785, 0, 0, 0,
	0, 0, 2258, 2912, 0, 0, 0, 0, 0, 0,
	0, 2670, 0, 0, 0, 470, 3005, 0, 0, 0,
	2975, 3007, 479, 0, 3014, 3015, 456, 3016, 0, 470,
	2824, 0, 0, 456, 3004, 2720, 0, 2804, 2786, 0,
	0, 0, 2791, 2544, 0, 0, 2795, 2796, 0, 2798,
	0, 3031, 3032, 0, 0, 0, 0, 3024, 3010, 0,
	0, 3002, 2708, 2804, 0, 0, 3017, 0, 0, 0,
	0, 0, 0, 944, 0, 0, 2947, 0, 2949, 0,
	0, 504, 0, 0, 3025, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2083, 0, 0, 0, 0, 0,
	0, 0, 0, 3092, 0, 1244, 1244, 1244, 1250, 1244,
	1244, 1250, 1244, 1250, 1259, 1260, 3068, 3071, 130, 3059,
	0, 0, 0, 3073, 3074, 3075, 0, 126, 3051, 3100,
	2616, 0, 0, 0, 3077, 0, 126, 3060, 944, 0,
	0, 0, 0, 3101, 0, 944, 944, 944, 0, 0,
	471, 0, 530, 0, 0, 0, 0, 0, 0, 3072,
	944, 0, 3099, 3078, 3085, 3086, 3084, 0, 3079, 0,
	0, 869, 0, 0, 126, 937, 0, 0, 0, 2836,
	3034, 3105, 1246, 1248, 0, 1252, 1254, 0, 1257, 944,
	0, 0, 0, 0, 126, 0, 0, 0, 0, 3161,
	0, 1961, 3106, 0, 0, 126, 0, 0, 0, 2860,
	2861, 2862, 0, 0, 3040, 3041, 3042, 3118, 3044, 0,
	3133, 3128, 0, 2877, 3136, 0, 2877, 3181, 0, 0,
	3147, 3053, 3054, 0, 3056, 0, 3146, 3057, 0, 0,
	2905, 3180, 867, 0, 0, 0, 936, 3151, 3152, 0,
	0, 0, 0, 2318, 0, 3188, 3158, 0, 3164, 944,
	3070, 3162, 0, 2962, 0, 0, 130, 2876, 975, 0,
	2876, 3178, 76, 3163, 0, 2907, 3177, 0, 2945, 3183,
	3184, 0, 3174, 3193, 3186, 3091, 3204, 3187, 0, 0,
	0, 0, 0, 3206, 944, 0, 0, 0, 0, 0,
	0, 0, 944, 0, 0, 0, 130, 3195, 130, 1245,
	1247, 1249, 1251, 1253, 1255, 1256, 1258, 0, 0, 3087,
	3088, 0, 0, 0, 0, 0, 944, 479, 0, 0,
	0, 0, 0, 0, 0, 0, 3006, 0, 0, 0,
	0, 0, 2583, 3009, 0, 0, 0, 0, 0, 2931,
	2877, 0, 76, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3234, 3257, 0, 0, 3254, 0, 0, 3233,
	0, 0, 479, 0, 3232, 0, 3235, 76, 0, 3263,
	0, 456, 3243, 0, 0, 0, 0, 3265, 3251, 944,
	3165, 3166, 3167, 3168, 2876, 3253, 0, 0, 3256, 1294,
	3172, 3173, 868, 0, 0, 0, 0, 868, 0, 3154,
	3155, 0, 0, 0, 0, 0, 0, 0, 0, 1965,
	0, 0, 0, 0, 0, 0, 0, 3189, 3190, 3191,
	0, 0, 0, 130, 3309, 3307, 0, 0, 0, 0,
	3348, 0, 0, 0, 0, 3318, 0, 0, 0, 0,
	0, 0, 479, 0, 0, 0, 0, 3337, 0, 126,
	0, 0, 0, 3342, 3338, 3344, 3193, 0, 0, 0,
	76, 0, 944, 0, 0, 0, 944, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3036, 3037, 3038,
	3039, 0, 3093, 944, 3095, 3043, 2616, 0, 0, 3046,
	3047, 0, 125, 126, 3357, 0, 0, 1390, 1393, 0,
	0, 0, 3372, 0, 0, 0, 3369, 0, 0, 0,
	3393, 0, 125, 3244, 0, 125, 3370, 0, 1390, 1393,
	0, 0, 3388, 1423, 944, 0, 0, 0, 0, 0,
	0, 0, 0, 125, 125, 125, 125, 125, 471, 3382,
	0, 0, 0, 944, 0, 3411, 3260, 3392, 0, 0,
	0, 453, 471, 3391, 0, 2782, 0, 0, 1728, 0,
	76, 3413, 1162, 0, 3403, 0, 76, 0, 3433, 944,
	0, 3428, 3431, 0, 0, 0, 3440, 0, 0, 3423,
	0, 0, 3319, 0, 0, 0, 3342, 0, 0, 0,
	0, 76, 3328, 0, 456, 3450, 76, 0, 3339, 3465,
	3438, 944, 3442, 0, 3481, 2828, 2589, 3461, 3468, 0,
	3470, 3446, 3460, 3483, 944, 3459, 944, 490, 3480, 3458,
	3488, 3494, 3485, 76, 453, 3482, 3490, 76, 76, 3448,
	944, 3495, 76, 3496, 0, 3498, 0, 0, 3440, 0,
	0, 0, 3504, 0, 0, 0, 0, 0, 130, 0,
	0, 0, 0, 0, 0, 0, 0, 3518, 76, 2866,
	0, 76, 0, 470, 3526, 0, 125, 456, 3440, 3523,
	944, 3528, 0, 0, 0, 130, 2578, 0, 0, 0,
	76, 0, 76, 0, 3389, 0, 76, 0, 0, 130,
	3440, 125, 3440, 3259, 3541, 0, 479, 0, 0, 0,
	76, 0, 0, 76, 0, 1423, 0, 0, 76, 0,
	3440, 3548, 0, 76, 3202, 0, 0, 1170, 3440, 1173,
	0, 0, 0, 3440, 0, 0, 1187, 1188, 1189, 1190,
	1191, 1192, 1193, 3422, 1171, 1172, 1169, 0, 1874, 0,
	0, 0, 0, 0, 0, 0, 1175, 1174, 1184, 1185,
	1177, 1178, 1179, 1180, 1181, 1182, 1183, 1176, 0, 0,
	1186, 470, 0, 1874, 1874, 1874, 0, 0, 0, 1874,
	1874, 1874, 1874, 0, 1874, 1874, 0, 0, 0, 868,
	1874, 3237, 0, 0, 531, 1175, 1174, 1184, 1185, 1177,
	1178, 1179, 1180, 1181, 1182, 1183, 1176, 0, 0, 1186,
	1874, 1874, 1874, 1874, 0, 0, 1874, 1874, 1874, 1874,
	1874, 0, 0, 0, 0, 1874, 1874, 1874, 1874, 1874,
	1874, 1874, 1874, 1874, 1874, 1874, 1874, 125, 125, 125,
	127, 0, 0, 0, 868, 0, 0, 0, 0, 127,
	2023, 0, 0, 0, 0, 0, 0, 0, 1423, 0,
	0, 3529, 3530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1998, 0, 0, 0, 0, 2343, 2344,
	0, 2004, 2348, 2349, 2350, 2351, 2352, 127, 938, 2355,
	2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365,
	0, 2367, 2368, 2369, 2370, 0, 2378, 127, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 127, 0,
	0, 0, 0, 0, 0, 0, 2001, 0, 0, 0,
	0, 0, 126, 0, 0, 869, 0, 0, 0, 0,
	869, 0, 2913, 0, 0, 0, 0, 0, 125, 0,
	0, 0, 0, 0, 125, 125, 0, 0, 0, 0,
	0, 125, 1221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3061, 3062, 3063, 3064, 0, 0, 3065, 2000,
	0, 3067, 0, 0, 0, 0, 0, 0, 0, 0,
	1221, 0, 0, 1175, 1174, 1184, 1185, 1177, 1178, 1179,
	1180, 1181, 1182, 1183, 1176, 0, 867, 1186, 0, 0,
	0, 867, 1304, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1378, 0, 0, 0, 0, 0, 0,
	0, 2868, 0, 0, 0, 126, 0, 2005, 0, 0,
	0, 0, 0, 2857, 0, 0, 0, 2011, 0, 0,
	0, 0, 0, 0, 0, 126, 0, 0, 126, 0,
	0, 0, 0, 0, 0, 0, 2867, 0, 0, 3479,
	0, 0, 0, 0, 0, 0, 126, 126, 126, 126,
	126, 2003, 1175, 1174, 1184, 1185, 1177, 1178, 1179, 1180,
	1181, 1182, 1183, 1176, 0, 0, 1186, 0, 0, 0,
	0, 0, 0, 0, 0, 1381, 0, 0, 0, 0,
	0, 1389, 1392, 3507, 0, 0, 490, 1175, 1174, 1184,
	1185, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1176, 0,
	0, 1186, 1389, 1392, 0, 0, 0, 0, 0, 0,
	2015, 0, 0, 3532, 1175, 1174, 1184, 1185, 1177, 1178,
	1179, 1180, 1181, 1182, 1183, 1176, 0, 0, 1186, 0,
	0, 0, 0, 2547, 0, 0, 0, 2022, 0, 0,
	0, 0, 127, 0, 0, 0, 0, 0, 0, 2008,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2017, 0, 0, 1175, 1174, 1184, 1185, 1177, 1178, 1179,
	1180, 1181, 1182, 1183, 1176, 2856, 471, 1186, 1795, 126,
	0, 0, 0, 0, 0, 0, 127, 0, 0, 0,
	0, 1997, 0, 0, 0, 1764, 0, 0, 2663, 0,
	2665, 0, 0, 0, 126, 0, 2674, 2675, 0, 0,
	0, 1162, 0, 0, 0, 0, 0, 0, 1837, 1995,
	125, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1221, 0, 0, 0, 0, 0, 0, 2135, 2136, 125,
	0, 0, 0, 0, 0, 0, 0, 0, 2007, 1799,
	0, 0, 0, 0, 0, 1164, 0, 0, 0, 0,
	0, 0, 0, 0, 125, 2855, 470, 0, 0, 0,
	0, 0, 0, 0, 471, 2577, 1175, 1174, 1184, 1185,
	1177, 1178, 1179, 1180, 1181, 1182, 1183, 1176, 0, 1799,
	1186, 0, 869, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1996, 1999, 2002, 0,
	2006, 2009, 2010, 2012, 2013, 2014, 2016, 2018, 2019, 2020,
	2021, 1799, 1341, 1799, 0, 0, 1879, 0, 0, 0,
	0, 0, 0, 1880, 1423, 1799, 1799, 0, 0, 0,
	126, 126, 126, 0, 0, 0, 0, 869, 0, 0,
	0, 3349, 3350, 0, 0, 0, 0, 0, 0, 0,
	0, 1837, 0, 867, 0, 937, 1175, 1174, 1184, 1185,
	1177, 1178, 1179, 1180, 1181, 1182, 1183, 1176, 3377, 3380,
	1186, 0, 1922, 1923, 1175, 1174, 1184, 1185, 1177, 1178,
	1179, 1180, 1181, 1182, 1183, 1176, 0, 0, 1186, 0,
	1874, 0, 0, 0, 1874, 1874, 1874, 1874, 1874, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 867, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1328, 0,
	0, 0, 1799, 1874, 0, 0, 936, 0, 0, 0,
	0, 0, 0, 1994, 0, 0, 0, 0, 0, 0,
	0, 126, 0, 3432, 0, 0, 0, 126, 126, 0,
	0, 0, 0, 0, 126, 0, 0, 2219, 0, 0,
	0, 0, 125, 3380, 0, 0, 0, 0, 0, 0,
	125, 0, 0, 470, 0, 0, 0, 0, 0, 125,
	0, 0, 125, 2329, 1423, 0, 868, 1175, 1174, 1184,
	1185, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1176, 0,
	1342, 1186, 0, 0, 0, 0, 0, 2917, 0, 36,
	1175, 1174, 1184, 1185, 1177, 1178, 1179, 1180, 1181, 1182,
	1183, 1176, 0, 57, 1186, 0, 0, 0, 0, 73,
	0, 0, 39, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3527, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 77, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3296, 0, 125,
	3500, 3503, 3499, 0, 0, 127, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 125, 0, 1355, 1358, 1359, 1360, 1361,
	1362, 1363, 0, 1364, 1365, 1366, 1367, 1368, 1369, 1370,
	1371, 0, 1343, 1344, 1345, 1346, 1322, 1326, 1356, 1323,
	1329, 1325, 1327, 1324, 0, 1330, 1331, 1332, 1333, 1334,
	1335, 1336, 1337, 1338, 1339, 1340, 1347, 1348, 1349, 1350,
	1351, 1352, 1353, 1354, 0, 41, 69, 44, 43, 46,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3297, 0, 0, 0, 0, 0, 0, 0, 127, 0,
	0, 125, 0, 0, 0, 0, 0, 47, 72, 71,
	0, 0, 1874, 0, 45, 0, 0, 0, 127, 0,
	1874, 127, 1423, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 126, 0, 0, 0, 0, 0, 127,
	127, 127, 127, 127, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 55, 56, 0, 3298, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 0, 471,
	0, 0, 64, 0, 65, 0, 0, 0, 0, 1357,
	0, 0, 0, 0, 868, 125, 125, 125, 125, 125,
	0, 0, 0, 0, 0, 0, 0, 0, 470, 66,
	0, 0, 125, 0, 0, 0, 470, 0, 0, 0,
	0, 1874, 0, 0, 125, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3299, 70, 0,
	51, 52, 59, 0, 60, 0, 0, 1837, 0, 0,
	0, 0, 0, 0, 2159, 0, 0, 0, 0, 2159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1796, 127, 0, 0, 0, 0, 0, 0, 0,
	0, 2159, 0, 0, 2159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 127, 0, 0,
	0, 0, 0, 0, 1164, 36, 37, 0, 0, 2197,
	0, 1836, 0, 0, 0, 0, 0, 0, 1799, 57,
	0, 0, 0, 0, 0, 73, 0, 0, 39, 61,
	62, 0, 0, 0, 0, 0, 58, 0, 0, 0,
	0, 0, 125, 0, 0, 0, 0, 0, 0, 0,
	36, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 48, 57, 0, 0, 77, 0, 0,
	73, 0, 0, 39, 125, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 0, 0, 0, 125,
	0, 0, 0, 126, 0, 0, 471, 0, 0, 0,
	0, 0, 126, 0, 0, 126, 0, 0, 0, 869,
	0, 68, 77, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 125, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 127, 127, 127, 0, 0, 3296, 0,
	0, 491, 0, 3551, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1836, 0, 0, 0, 938, 0,
	0, 2383, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	867, 41, 69, 44, 43, 46, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 868, 0,
	0, 0, 0, 47, 72, 71, 0, 0, 0, 0,
	45, 0, 126, 0, 0, 36, 41, 69, 44, 43,
	46, 0, 0, 0, 63, 0, 0, 0, 0, 57,
	0, 3297, 0, 0, 127, 73, 0, 0, 39, 0,
	127, 127, 0, 0, 0, 0, 126, 127, 47, 72,
	71, 0, 0, 0, 0, 45, 0, 0, 0, 0,
	0, 55, 56, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 77, 64, 0,
	65, 2444, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2458, 2462, 2466, 0,
	1795, 0, 0, 3296, 0, 66, 55, 56, 3546, 3298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 64, 126, 65, 0, 0, 0, 0,
	0, 0, 0, 49, 70, 0, 51, 52, 59, 0,
	60, 0, 0, 0, 0, 1837, 125, 0, 0, 0,
	66, 0, 0, 2159, 0, 0, 0, 0, 0, 2499,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1799, 1799, 0, 0, 0, 0, 0, 3299, 70,
	0, 51, 52, 59, 0, 60, 0, 0, 0, 0,
	0, 41, 69, 44, 43, 46, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1799, 3297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1799, 2617, 126, 126,
	126, 126, 126, 47, 72, 71, 0, 0, 0, 0,
	45, 471, 0, 0, 0, 126, 0, 0, 0, 471,
	0, 0, 0, 0, 0, 0, 0, 126, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2587, 0, 0, 0, 0, 0, 0, 0,
	0, 470, 0, 0, 0, 868, 0, 0, 0, 0,
	0, 55, 56, 0, 3298, 0, 0, 0, 867, 36,
	0, 0, 0, 0, 0, 0, 0, 0, 64, 0,
	65, 0, 2706, 57, 0, 0, 0, 68, 0, 73,
	0, 0, 39, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 66, 0, 0, 0, 0,
	0, 1799, 0, 0, 0, 0, 127, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 77, 68, 3299, 70, 127, 51, 52, 59, 0,
	60, 0, 0, 0, 0, 126, 0, 0, 0, 0,
	0, 0, 0, 2705, 0, 0, 0, 3296, 0, 0,
	127, 0, 3537, 0, 0, 36, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 0, 57,
	0, 0, 0, 0, 0, 73, 0, 0, 39, 0,
	0, 0, 126, 0, 0, 0, 0, 0, 0, 125,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2383, 0,
	2811, 2816, 0, 0, 0, 0, 126, 77, 0, 0,
	1836, 0, 0, 0, 0, 0, 2761, 2762, 2763, 470,
	0, 470, 0, 0, 0, 41, 69, 44, 43, 46,
	0, 0, 0, 3296, 0, 0, 0, 0, 3520, 0,
	3297, 0, 0, 0, 0, 0, 0, 2789, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 47, 72, 71,
	0, 0, 0, 0, 45, 0, 0, 0, 0, 0,
	0, 0, 0, 2820, 0, 0, 0, 0, 2825, 0,
	0, 0, 0, 0, 0, 2829, 0, 68, 2830, 2831,
	0, 2617, 0, 1795, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 55, 56, 0, 3298, 0,
	0, 41, 69, 44, 43, 46, 0, 0, 0, 0,
	0, 0, 64, 0, 65, 0, 3297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 125, 0, 127, 0,
	0, 0, 0, 47, 72, 71, 127, 0, 0, 66,
	45, 0, 867, 0, 1799, 127, 2884, 0, 127, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3299, 70, 0,
	51, 52, 59, 0, 60, 2884, 0, 0, 0, 0,
	0, 868, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 55, 56, 0, 3298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 64, 0,
	65, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 66, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2930, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3299, 70, 127, 51, 52, 59, 0,
	60, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 36, 0,
	0, 0, 2462, 0, 0, 0, 0, 0, 0, 127,
	0, 0, 57, 0, 0, 0, 0, 0, 73, 0,
	0, 39, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 68, 0, 0, 471, 0, 0, 0, 2617, 0,
	77, 470, 0, 1796, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 36, 0,
	1799, 0, 0, 0, 0, 0, 3296, 127, 470, 0,
	0, 3439, 57, 0, 0, 0, 2706, 0, 73, 0,
	0, 39, 470, 0, 0, 0, 0, 0, 1836, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2706, 0, 0, 0, 867,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	77, 0, 0, 0, 0, 2930, 0, 68, 0, 0,
	0, 0, 2930, 2930, 2930, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3296, 2705, 0, 0,
	0, 0, 0, 0, 41, 69, 44, 43, 46, 0,
	0, 127, 127, 127, 127, 127, 0, 0, 0, 3297,
	0, 0, 0, 0, 0, 0, 2705, 0, 127, 0,
	0, 0, 126, 0, 0, 0, 47, 72, 71, 0,
	127, 0, 0, 45, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 471, 0, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 41, 69, 44, 43, 46, 0,
	0, 0, 0, 0, 55, 56, 3157, 3298, 0, 3297,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 64, 0, 65, 0, 0, 47, 72, 71, 0,
	0, 0, 0, 45, 0, 0, 0, 0, 0, 0,
	0, 3182, 0, 0, 0, 0, 0, 0, 66, 2930,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2706, 0, 0, 127, 0,
	0, 0, 0, 3198, 0, 0, 3299, 70, 0, 51,
	52, 59, 0, 60, 55, 56, 0, 3298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	127, 64, 0, 65, 1703, 0, 0, 0, 0, 126,
	0, 0, 0, 0, 0, 127, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 66, 0,
	0, 0, 0, 0, 0, 0, 2705, 0, 0, 0,
	0, 0, 0, 2813, 2818, 0, 0, 0, 2706, 127,
	0, 0, 0, 0, 0, 0, 3299, 70, 0, 51,
	52, 59, 0, 60, 2617, 0, 540, 541, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2705,
	0, 0, 0, 3321, 0, 0, 0, 0, 0, 2706,
	0, 0, 0, 0, 0, 867, 1796, 0, 0, 0,
	1799, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	68, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1799, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2705, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2930, 0, 0, 0,
	68, 0, 0, 0, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3417, 0,
	0, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3421, 0, 1799, 0, 471, 0, 0, 0, 0,
	0, 0, 127, 0, 0, 0, 0, 1799, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3417, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 127, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 827, 0, 346, 589, 831, 674,
	697, 840, 703, 705, 768, 650, 745, 284, 694, 651,
	0, 0, 642, 498, 643, 675, 206, 495, 801, 746,
	829, 731, 761, 771, 205, 194, 738, 737, 818, 686,
	685, 766, 814, 828, 0, 0, 597, 249, 0, 0,
	368, 334, 268, 0, 0, 729, 0, 582, 583, 714,
	770, 662, 757, 833, 695, 762, 834, 77, 0, 0,
	0, 496, 521, 520, 523, 524, 525, 526, 0, 0,
	137, 522, 527, 528, 529, 0, 724, 767, 845, 641,
	493, 512, 646, 596, 0, 819, 682, 683, 209, 0,
	0, 0, 0, 0, 0, 0, 727, 744, 786, 711,
	0, 0, 363, 773, 782, 796, 704, 300, 223, 0,
	0, 0, 0, 509, 510, 489, 0, 0, 0, 612,
	0, 511, 127, 656, 507, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 513, 0, 0,
	0, 661, 639, 680, 788, 640, 638, 269, 653, 585,
	817, 712, 238, 154, 823, 710, 610, 776, 657, 805,
	698, 246, 655, 155, 652, 658, 696, 280, 785, 791,
	594, 158, 248, 802, 676, 689, 195, 0, 310, 763,
	362, 501, 749, 309, 250, 355, 777, 825, 361, 699,
	341, 369, 373, 216, 732, 186, 331, 207, 203, 681,
	795, 645, 224, 299, 198, 242, 715, 769, 677, 191,
	780, 756, 807, 330, 352, 160, 265, 353, 372, 177,
	347, 266, 273, 188, 190, 189, 172, 324, 351, 182,
	193, 803, 790, 809, 672, 659, 664, 660, 688, 826,
	233, 225, 810, 808, 366, 144, 319, 318, 702, 232,
	793, 145, 136, 306, 146, 239, 163, 813, 375, 176,
	244, 348, 500, 219, 279, 197, 765, 288, 687, 157,
	302, 261, 263, 260, 264, 222, 140, 147, 789, 304,
	321, 350, 178, 337, 138, 139, 141, 149, 312, 150,
	151, 832, 255, 211, 215, 226, 236, 764, 308, 338,
	367, 758, 173, 166, 340, 360, 183, 320, 323, 374,
	787, 168, 821, 804, 751, 717, 723, 647, 0, 167,
	783, 679, 691, 671, 759, 670, 221, 775, 358, 359,
	196, 376, 588, 836, 169, 654, 835, 276, 283, 275,
	838, 354, 822, 752, 741, 739, 648, 820, 750, 740,
	245, 214, 228, 297, 252, 298, 229, 271, 270, 272,
	253, 743, 0, 164, 0, 335, 830, 847, 339, 180,
	665, 797, 349, 143, 303, 181, 220, 212, 296, 274,
	174, 231, 333, 243, 251, 779, 844, 287, 311, 185,
	364, 332, 208, 599, 611, 605, 607, 606, 603, 604,
	602, 601, 600, 613, 586, 587, 590, 591, 592, 734,
	824, 649, 595, 800, 608, 609, 772, 842, 584, 192,
	533, 625, 626, 627, 534, 628, 629, 535, 536, 630,
	631, 632, 633, 537, 634, 635, 636, 614, 615, 616,
	617, 618, 619, 620, 621, 624, 622, 623, 730, 293,
	165, 175, 184, 202, 200, 213, 240, 262, 267, 292,
	322, 327, 342, 343, 344, 0, 345, 204, 0, 0,
	0, 0, 0, 593, 159, 170, 247, 843, 305, 218,
	637, 644, 663, 666, 667, 668, 669, 673, 678, 0,
	684, 690, 692, 693, 701, 706, 707, 708, 709, 716,
	718, 719, 720, 721, 722, 725, 726, 728, 735, 736,
	742, 747, 748, 754, 755, 0, 778, 781, 598, 792,
	794, 798, 799, 806, 811, 812, 837, 841, 846, 365,
	201, 733, 753, 784, 171, 179, 187, 199, 210, 217,
	227, 230, 234, 235, 237, 241, 254, 256, 257, 258,
	259, 277, 278, 281, 282, 285, 286, 289, 290, 291,
	294, 295, 301, 148, 307, 313, 314, 315, 316, 317,
	325, 326, 328, 329, 336, 356, 357, 370, 371, 816,
	713, 156, 0, 0, 162, 0, 0, 0, 0, 0,
	700, 161, 815, 839, 760, 774, 827, 0, 346, 589,
	831, 674, 697, 840, 703, 705, 768, 650, 745, 284,
	694, 651, 0, 0, 642, 498, 643, 675, 206, 495,
	801, 746, 829, 731, 761, 771, 205, 194, 738, 737,
	818, 686, 685, 766, 814, 828, 0, 0, 597, 249,
	0, 0, 368, 334, 268, 0, 0, 729, 0, 582,
	583, 714, 770, 662, 757, 833, 695, 762, 834, 77,
	0, 1135, 0, 496, 521, 520, 523, 524, 525, 526,
	0, 0, 137, 522, 527, 528, 529, 0, 724, 767,
	845, 641, 493, 512, 646, 596, 0, 819, 682, 683,
	209, 0, 0, 0, 0, 0, 0, 0, 727, 744,
	786, 711, 0, 0, 363, 773, 782, 796, 704, 300,
	223, 0, 0, 0, 0, 509, 510, 0, 0, 0,
	0, 612, 0, 511, 0, 656, 507, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 513,
	0, 0, 0, 661, 639, 680, 788, 640, 638, 269,
	653, 585, 817, 712, 238, 154, 823, 710, 610, 776,
	657, 805, 698, 246, 655, 155, 652, 658, 696, 280,
	785, 791, 594, 158, 248, 802, 676, 689, 195, 0,
	310, 763, 362, 501, 749, 309, 250, 355, 777, 825,
	361, 699, 341, 369, 373, 216, 732, 186, 331, 207,
	203, 681, 795, 645, 224, 299, 198, 242, 715, 769,
	677, 191, 780, 756, 807, 330, 352, 160, 265, 353,
	372, 177, 347, 266, 273, 188, 190, 189, 172, 324,
	351, 182, 193, 803, 790, 809, 672, 659, 664, 660,
	688, 826, 233, 225, 810, 808, 366, 144, 319, 318,
	702, 232, 793, 145, 136, 306, 146, 239, 163, 813,
	375, 176, 244, 348, 500, 219, 279, 197, 765, 288,
	687, 157, 302, 261, 263, 260, 264, 222, 140, 147,
	789, 304, 321, 350, 178, 337, 138, 139, 141, 149,
	312, 150, 151, 832, 255, 211, 215, 226, 236, 764,
	308, 338, 367, 758, 173, 166, 340, 360, 183, 320,
	323, 374, 787, 168, 821, 804, 751, 717, 723, 647,
	0, 167, 783, 679, 691, 671, 759, 670, 221, 775,
	358, 359, 196, 376, 588, 836, 169, 654, 835, 276,
	283, 275, 838, 354, 822, 752, 741, 739, 648, 820,
	750, 740, 245, 214, 228, 297, 252, 298, 229, 271,
	270, 272, 253, 743, 0, 164, 0, 335, 830, 847,
	339, 180, 665, 797, 349, 143, 303, 181, 220, 212,
	296, 274, 174, 231, 333, 243, 251, 779, 844, 287,
	311, 185, 364, 332, 208, 599, 611, 605, 607, 606,
	603, 604, 602, 601, 600, 613, 586, 587, 590, 591,
	592, 734, 824, 649, 595, 800, 608, 609, 772, 842,
	584, 192, 533, 625, 626, 627, 534, 628, 629, 535,
	536, 630, 631, 632, 633, 537, 634, 635, 636, 614,
	615, 616, 617, 618, 619, 620, 621, 624, 622, 623,
	730, 293, 165, 175, 184, 202, 200, 213, 240, 262,
	267, 292, 322, 327, 342, 343, 344, 0, 345, 204,
	0, 0, 0, 0, 0, 593, 159, 170, 247, 843,
	305, 218, 637, 644, 663, 666, 667, 668, 669, 673,
	678, 0, 684, 690, 692, 693, 701, 706, 707, 708,
	709, 716, 718, 719, 720, 721, 722, 725, 726, 728,
	735, 736, 742, 747, 748, 754, 755, 0, 778, 781,
	598, 792, 794, 798, 799, 806, 811, 812, 837, 841,
	846, 365, 201, 733, 753, 784, 171, 179, 187, 199,
	210, 217, 227, 230, 234, 235, 237, 241, 254, 256,
	257, 258, 259, 277, 278, 281, 282, 285, 286, 289,
	290, 291, 294, 295, 301, 148, 307, 313, 314, 315,
	316, 317, 325, 326, 328, 329, 336, 356, 357, 370,
	371, 816, 713, 156, 0, 0, 162, 0, 0, 0,
	0, 0, 700, 161, 815, 839, 760, 774, 827, 0,
	346, 589, 831, 674, 697, 840, 703, 705, 768, 650,
	745, 284, 694, 651, 0, 0, 642, 498, 643, 675,
	206, 495, 801, 746, 829, 731, 761, 771, 205, 194,
	738, 737, 818, 686, 685, 766, 814, 828, 0, 0,
	597, 249, 0, 0, 368, 334, 268, 0, 0, 729,
	0, 582, 583, 714, 770, 662, 757, 833, 695, 762,
	834, 77, 0, 0, 0, 496, 521, 520, 523, 524,
	525, 526, 0, 0, 137, 522, 527, 528, 529, 0,
	724, 767, 845, 641, 493, 512, 646, 596, 0, 819,
	682, 683, 209, 0, 0, 0, 0, 0, 0, 0,
	727, 744, 786, 711, 0, 0, 363, 773, 782, 796,
	704, 300, 223, 0, 0, 0, 0, 509, 510, 1872,
	0, 0, 0, 612, 0, 511, 0, 656, 507, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 513, 0, 0, 0, 661, 639, 680, 788, 640,
	638, 269, 653, 585, 817, 712, 238, 154, 823, 710,
	610, 776, 657, 805, 698, 246, 655, 155, 652, 658,
	696, 280, 785, 791, 594, 158, 248, 802, 676, 689,
	195, 0, 310, 763, 362, 501, 749, 309, 250, 355,
	777, 825, 361, 699, 341, 369, 373, 216, 732, 186,
	331, 207, 203, 681, 795, 645, 224, 299, 198, 242,
	715, 769, 677, 191, 780, 756, 807, 330, 352, 160,
	265, 353, 372, 177, 347, 266, 273, 188, 190, 189,
	172, 324, 351, 182, 193, 803, 790, 809, 672, 659,
	664, 660, 688, 826, 233, 225, 810, 808, 366, 144,
	319, 318, 702, 232, 793, 145, 136, 306, 146, 239,
	163, 813, 375, 176, 244, 348, 500, 219, 279, 197,
	765, 288, 687, 157, 302, 261, 263, 260, 264, 222,
	140, 147, 789, 304, 321, 350, 178, 337, 138, 139,
	141, 149, 312, 150, 151, 832, 255, 211, 215, 226,
	236, 764, 308, 338, 367, 758, 173, 166, 340, 360,
	183, 320, 323, 374, 787, 168, 821, 804, 751, 717,
	723, 647, 0, 167, 783, 679, 691, 671, 759, 670,
	221, 775, 358, 359, 196, 376, 588, 836, 169, 654,
	835, 276, 283, 275, 838, 354, 822, 752, 741, 739,
	648, 820, 750, 740, 245, 214, 228, 297, 252, 298,
	229, 271, 270, 272, 253, 743, 0, 164, 0, 335,
	830, 847, 339, 180, 665, 797, 349, 143, 303, 181,
	220, 212, 296, 274, 174, 231, 333, 243, 251, 779,
	844, 287, 311, 185, 364, 332, 208, 599, 611, 605,
	607, 606, 603, 604, 602, 601, 600, 613, 586, 587,
	590, 591, 592, 734, 824, 649, 595, 800, 608, 609,
	772, 842, 584, 192, 533, 625, 626, 627, 534, 628,
	629, 535, 536, 630, 631, 632, 633, 537, 634, 635,
	636, 614, 615, 616, 617, 618, 619, 620, 621, 624,
	622, 623, 730, 293, 165, 175, 184, 202, 200, 213,
	240, 262, 267, 292, 322, 327, 342, 343, 344, 0,
	345, 204, 0, 0, 0, 0, 0, 593, 159, 170,
	247, 843, 305, 218, 637, 644, 663, 666, 667, 668,
	669, 673, 678, 0, 684, 690, 692, 693, 701, 706,
	707, 708, 709, 716, 718, 719, 720, 721, 722, 725,
	726, 728, 735, 736, 742, 747, 748, 754, 755, 0,
	778, 781, 598, 792, 794, 798, 799, 806, 811, 812,
	837, 841, 846, 365, 201, 733, 753, 784, 171, 179,
	187, 199, 210, 217, 227, 230, 234, 235, 237, 241,
	254, 256, 257, 258, 259, 277, 278, 281, 282, 285,
	286, 289, 290, 291, 294, 295, 301, 148, 307, 313,
	314, 315, 316, 317, 325, 326, 328, 329, 336, 356,
	357, 370, 371, 816, 713, 156, 0, 0, 162, 0,
	0, 0, 0, 0, 700, 161, 815, 839, 760, 774,
	827, 0, 346, 589, 831, 674, 697, 840, 703, 705,
	768, 650, 745, 284, 694, 651, 0, 0, 642, 498,
	643, 675, 206, 495, 801, 746, 829, 731, 761, 771,
	205, 194, 738, 737, 818, 686, 685, 766, 814, 828,
	0, 0, 597, 249, 0, 0, 368, 334, 268, 0,
	0, 729, 0, 582, 583, 714, 770, 662, 757, 833,
	695, 1985, 834, 77, 0, 0, 0, 496, 521, 520,
	523, 524, 525, 526, 0, 0, 137, 522, 527, 528,
	529, 1986, 724, 767, 845, 641, 493, 512, 646, 596,
	0, 819, 682, 683, 209, 0, 0, 0, 0, 0,
	0, 0, 727, 744, 786, 711, 0, 0, 363, 773,
	782, 796, 704, 300, 223, 0, 0, 0, 0, 509,
	510, 0, 0, 0, 0, 612, 0, 511, 0, 656,
	507, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 513, 0, 0, 0, 661, 639, 680,
	788, 640, 638, 269, 653, 585, 817, 712, 238, 154,
	823, 710, 610, 776, 657, 805, 698, 246, 655, 155,
	652, 658, 696, 280, 785, 791, 594, 158, 248, 802,
	676, 689, 195, 0, 310, 763, 362, 501, 749, 309,
	250, 355, 777, 825, 361, 699, 341, 369, 373, 216,
	732, 186, 331, 207, 203, 681, 795, 645, 224, 299,
	198, 242, 715, 769, 677, 191, 780, 756, 807, 330,
	352, 160, 265, 353, 372, 177, 347, 266, 273, 188,
	190, 189, 172, 324, 351, 182, 193, 803, 790, 809,
	672, 659, 664, 660, 688, 826, 233, 225, 810, 808,
	366, 144, 319, 318, 702, 232, 793, 145, 136, 306,
	146, 239, 163, 813, 375, 176, 244, 348, 500, 219,
	279, 197, 765, 288, 687, 157, 302, 261, 263, 260,
	264, 222, 140, 147, 789, 304, 321, 350, 178, 337,
	138, 139, 141, 149, 312, 150, 151, 832, 255, 211,
	215, 226, 236, 764, 308, 338, 367, 758, 173, 166,
	340, 360, 183, 320, 323, 374, 787, 168, 821, 804,
	751, 717, 723, 647, 0, 167, 783, 679, 691, 671,
	759, 670, 221, 775, 358, 359, 196, 376, 588, 836,
	169, 654, 835, 276, 283, 275, 838, 354, 822, 752,
	741, 739, 648, 820, 750, 740, 245, 214, 228, 297,
	252, 298, 229, 271, 270, 272, 253, 743, 0, 164,
	0, 335, 830, 847, 339, 180, 665, 797, 349, 143,
	303, 181, 220, 212, 296, 274, 174, 231, 333, 243,
	251, 779, 844, 287, 311, 185, 364, 332, 208, 599,
	611, 605, 607, 606, 603, 604, 602, 601, 600, 613,
	586, 587, 590, 591, 592, 734, 824, 649, 595, 800,
	608, 609, 772, 842, 584, 192, 533, 625, 626, 627,
	534, 628, 629, 535, 536, 630, 631, 632, 633, 537,
	634, 635, 636, 614, 615, 616, 617, 618, 619, 620,
	621, 624, 622, 623, 730, 293, 165, 175, 184, 202,
	200, 213, 240, 262, 267, 292, 322, 327, 342, 343,
	344, 0, 345, 204, 0, 0, 0, 0, 0, 593,
	159, 170, 247, 843, 305, 218, 637, 644, 663, 666,
	667, 668, 669, 673, 678, 0, 684, 690, 692, 693,
	701, 706, 707, 708, 709, 716, 718, 719, 720, 721,
	722, 725, 726, 728, 735, 736, 742, 747, 748, 754,
	755, 0, 778, 781, 598, 792, 794, 798, 799, 806,
	811, 812, 837, 841, 846, 365, 201, 733, 753, 784,
	171, 179, 187, 199, 210, 217, 227, 230, 234, 235,
	237, 241, 254, 256, 257, 258, 259, 277, 278, 281,
	282, 285, 286, 289, 290, 291, 294, 295, 301, 148,
	307, 313, 314, 315, 316, 317, 325, 326, 328, 329,
	336, 356, 357, 370, 371, 816, 713, 156, 0, 0,
	162, 0, 0, 0, 0, 0, 700, 161, 815, 839,
	760, 774, 827, 0, 346, 589, 831, 674, 697, 840,
	703, 705, 768, 650, 745, 284, 694, 651, 0, 0,
	642, 887, 643, 675, 206, 885, 801, 746, 829, 731,
	761, 771, 205, 194, 738, 737, 818, 686, 685, 766,
	814, 828, 0, 0, 597, 249, 0, 0, 368, 334,
	268, 0, 0, 729, 0, 582, 583, 714, 770, 662,
	757, 833, 695, 762, 834, 77, 0, 1135, 0, 496,
	521, 520, 523, 524, 525, 526, 0, 0, 137, 522,
	527, 528, 529, 0, 724, 767, 845, 641, 904, 512,
	646, 596, 0, 819, 682, 683, 209, 0, 0, 0,
	0, 0, 0, 0, 727, 744, 786, 711, 0, 0,
	363, 773, 782, 796, 704, 300, 223, 0, 0, 0,
	0, 509, 510, 0, 0, 0, 0, 612, 0, 511,
	0, 656, 507, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 513, 0, 0, 0, 661,
	639, 680, 788, 640, 638, 269, 653, 585, 817, 712,
	238, 154, 823, 710, 610, 776, 657, 805, 698, 246,
	655, 155, 652, 658, 696, 280, 785, 791, 594, 158,
	248, 802, 676, 689, 195, 0, 310, 763, 362, 501,
	749, 309, 250, 355, 777, 825, 361, 699, 341, 369,
	373, 216, 732, 186, 331, 207, 203, 681, 795, 645,
	224, 299, 198, 242, 715, 769, 677, 191, 780, 756,
	807, 330, 352, 160, 265, 353, 372, 177, 347, 266,
	273, 188, 190, 189, 172, 324, 351, 182, 193, 803,
	790, 809, 672, 659, 664, 660, 688, 826, 233, 225,
	810, 808, 366, 144, 319, 318, 702, 232, 793, 145,
	136, 306, 146, 239, 163, 813, 375, 176, 244, 348,
	500, 219, 279, 197, 765, 288, 687, 157, 302, 261,
	263, 260, 264, 222, 140, 147, 789, 304, 321, 350,
	178, 337, 138, 139, 141, 149, 312, 150, 151, 832,
	255, 211, 215, 226, 236, 764, 308, 338, 367, 758,
	173, 166, 340, 360, 183, 320, 323, 374, 787, 168,
	821, 804, 751, 717, 723, 647, 0, 167, 783, 679,
	691, 671, 759, 670, 221, 775, 358, 359, 196, 376,
	588, 836, 169, 654, 835, 276, 283, 275, 838, 354,
	822, 752, 741, 739, 648, 820, 750, 740, 245, 214,
	228, 297, 252, 298, 229, 271, 270, 272, 253, 743,
	0, 164, 0, 335, 830, 847, 339, 180, 665, 797,
	349, 143, 303, 181, 220, 212, 296, 274, 174, 231,
	333, 243, 251, 779, 844, 287, 311, 185, 364, 332,
	208, 599, 611, 605, 607, 606, 603, 604, 602, 601,
	600, 613, 586, 587, 590, 591, 592, 734, 824, 649,
	595, 800, 608, 609, 772, 842, 584, 192, 533, 625,
	626, 627, 534, 628, 629, 535, 536, 630, 631, 632,
	633, 537, 634, 635, 636, 614, 615, 616, 617, 618,
	619, 620, 621, 624, 622, 623, 730, 293, 165, 175,
	184, 202, 200, 213, 240, 262, 267, 292, 322, 327,
	342, 343, 344, 0, 345, 204, 0, 0, 0, 0,
	0, 593, 159, 170, 247, 843, 305, 218, 637, 644,
	663, 666, 667, 668, 669, 673, 678, 0, 684, 690,
	692, 693, 701, 706, 707, 708, 709, 716, 718, 719,
	720, 721, 722, 725, 726, 728, 735, 736, 742, 747,
	748, 754, 755, 0, 778, 781, 598, 792, 794, 798,
	799, 806, 811, 812, 837, 841, 846, 365, 201, 733,
	753, 784, 171, 179, 187, 199, 210, 217, 227, 230,
	234, 235, 237, 241, 254, 256, 257, 258, 259, 277,
	278, 281, 282, 285, 286, 289, 290, 291, 294, 295,
	301, 148, 307, 313, 314, 315, 316, 317, 325, 326,
	328, 329, 336, 356, 357, 370, 371, 816, 713, 156,
	0, 0, 162, 0, 0, 0, 0, 0, 700, 161,
	815, 839, 760, 774, 827, 0, 346, 589, 831, 674,
	697, 840, 703, 705, 768, 650, 745, 284, 694, 651,
	0, 0, 642, 498, 643, 675, 206, 495, 801, 746,
	829, 731, 761, 771, 205, 194, 738, 737, 818, 686,
	685, 766, 814, 828, 0, 0, 597, 249, 0, 0,
	368, 334, 268, 0, 0, 729, 0, 582, 583, 714,
	770, 662, 757, 833, 695, 762, 834, 77, 0, 0,
	0, 496, 521, 1906, 523, 524, 525, 526, 0, 0,
	137, 522, 527, 528, 529, 0, 724, 767, 845, 641,
	493, 512, 646, 596, 0, 819, 682, 683, 209, 0,
	0, 0, 0, 0, 0, 0, 727, 744, 786, 711,
	0, 0, 363, 773, 782, 796, 704, 300, 223, 0,
	0, 0, 0, 509, 510, 1872, 0, 0, 0, 612,
	0, 511, 0, 656, 507, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 513, 0, 0,
	0, 661, 639, 680, 788, 640, 638, 269, 653, 585,
	817, 712, 238, 154, 823, 710, 610, 776, 657, 805,
	698, 246, 655, 155, 652, 658, 696, 280, 785, 791,
	594, 158, 248, 802, 676, 689, 195, 0, 310, 763,
	362, 501, 749, 309, 250, 355, 777, 825, 361, 699,
	341, 369, 373, 216, 732, 186, 331, 207, 203, 681,
	795, 645, 224, 299, 198, 242, 715, 769, 677, 191,
	780, 756, 807, 330, 352, 160, 265, 353, 372, 177,
	347, 266, 273, 188, 190, 189, 172, 324, 351, 182,
	193, 803, 790, 809, 672, 659, 664, 660, 688, 826,
	233, 225, 810, 808, 366, 144, 319, 318, 702, 232,
	793, 145, 136, 306, 146, 239, 163, 813, 375, 176,
	244, 348, 500, 219, 279, 197, 765, 288, 687, 157,
	302, 261, 263, 260, 264, 222, 140, 147, 789, 304,
	321, 350, 178, 337, 138, 139, 141, 149, 312, 150,
	151, 832, 255, 211, 215, 226, 236, 764, 308, 338,
	367, 758, 173, 166, 340, 360, 183, 320, 323, 374,
	787, 168, 821, 804, 751, 717, 723, 647, 0, 167,
	783, 679, 691, 671, 759, 670, 221, 775, 358, 359,
	196, 376, 588, 836, 169, 654, 835, 276, 283, 275,
	838, 354, 822, 752, 741, 739, 648, 820, 750, 740,
	245, 214, 228, 297, 252, 298, 229, 271, 270, 272,
	253, 743, 0, 164, 0, 335, 830, 847, 339, 180,
	665, 797, 349, 143, 303, 181, 220, 212, 296, 274,
	174, 231, 333, 243, 251, 779, 844, 287, 311, 185,
	364, 332, 208, 599, 611, 605, 607, 606, 603, 604,
	602, 601, 600, 613, 586, 587, 590, 591, 592, 734,
	824, 649, 595, 800, 608, 609, 772, 842, 584, 192,
	533, 625, 626, 627, 534, 628, 629, 535, 536, 630,
	631, 632, 633, 537, 634, 635, 636, 614, 615, 616,
	617, 618, 619, 620, 621, 624, 622, 623, 730, 293,
	165, 175, 184, 202, 200, 213, 240, 262, 267, 292,
	322, 327, 342, 343, 344, 0, 345, 204, 0, 0,
	0, 0, 0, 593, 159, 170, 247, 843, 305, 218,
	637, 644, 663, 666, 667, 668, 669, 673, 678, 0,
	684, 690, 692, 693, 701, 706, 707, 708, 709, 716,
	718, 719, 720, 721, 722, 725, 726, 728, 735, 736,
	742, 747, 748, 754, 755, 0, 778, 781, 598, 792,
	794, 798, 799, 806, 811, 812, 837, 841, 846, 365,
	201, 733, 753, 784, 171, 179, 187, 199, 210, 217,
	227, 230, 234, 235, 237, 241, 254, 256, 257, 258,
	259, 277, 278, 281, 282, 285, 286, 289, 290, 291,
	294, 295, 301, 148, 307, 313, 314, 315, 316, 317,
	325, 326, 328, 329, 336, 356, 357, 370, 371, 816,
	713, 156, 0, 0, 162, 0, 0, 0, 0, 0,
	700, 161, 815, 839, 760, 774, 827, 0, 346, 589,
	831, 674, 697, 840, 703, 705, 768, 650, 745, 284,
	694, 651, 0, 0, 642, 498, 643, 675, 206, 495,
	801, 746, 829, 731, 761, 771, 205, 194, 738, 737,
	818, 686, 685, 766, 814, 828, 0, 0, 597, 249,
	0, 0, 368, 334, 268, 0, 0, 729, 0, 582,
	583, 714, 770, 662, 757, 833, 695, 762, 834, 77,
	0, 0, 0, 496, 521, 1903, 523, 524, 525, 526,
	0, 0, 137, 522, 527, 528, 529, 0, 724, 767,
	845, 641, 493, 512, 646, 596, 0, 819, 682, 683,
	209, 0, 0, 0, 0, 0, 0, 0, 727, 744,
	786, 711, 0, 0, 363, 773, 782, 796, 704, 300,
	223, 0, 0, 0, 0, 509, 510, 1872, 0, 0,
	0, 612, 0, 511, 0, 656, 507, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 513,
	0, 0, 0, 661, 639, 680, 788, 640, 638, 269,
	653, 585, 817, 712, 238, 154, 823, 710, 610, 776,
	657, 805, 698, 246, 655, 155, 652, 658, 696, 280,
	785, 791, 594, 158, 248, 802, 676, 689, 195, 0,
	310, 763, 362, 501, 749, 309, 250, 355, 777, 825,
	361, 699, 341, 369, 373, 216, 732, 186, 331, 207,
	203, 681, 795, 645, 224, 299, 198, 242, 715, 769,
	677, 191, 780, 756, 807, 330, 352, 160, 265, 353,
	372, 177, 347, 266, 273, 188, 190, 189, 172, 324,
	351, 182, 193, 803, 790, 809, 672, 659, 664, 660,
	688, 826, 233, 225, 810, 808, 366, 144, 319, 318,
	702, 232, 793, 145, 136, 306, 146, 239, 163, 813,
	375, 176, 244, 348, 500, 219, 279, 197, 765, 288,
	687, 157, 302, 261, 263, 260, 264, 222, 140, 147,
	789, 304, 321, 350, 178, 337, 138, 139, 141, 149,
	312, 150, 151, 832, 255, 211, 215, 226, 236, 764,
	308, 338, 367, 758, 173, 166, 340, 360, 183, 320,
	323, 374, 787, 168, 821, 804, 751, 717, 723, 647,
	0, 167, 783, 679, 691, 671, 759, 670, 221, 775,
	358, 359, 196, 376, 588, 836, 169, 654, 835, 276,
	283, 275, 838, 354, 822, 752, 741, 739, 648, 820,
	750, 740, 245, 214, 228, 297, 252, 298, 229, 271,
	270, 272, 253, 743, 0, 164, 0, 335, 830, 847,
	339, 180, 665, 797, 349, 143, 303, 181, 220, 212,
	296, 274, 174, 231, 333, 243, 251, 779, 844, 287,
	311, 185, 364, 332, 208, 599, 611, 605, 607, 606,
	603, 604, 602, 601, 600, 613, 586, 587, 590, 591,
	592, 734, 824, 649, 595, 800, 608, 609, 772, 842,
	584, 192, 533, 625, 626, 627, 534, 628, 629, 535,
	536, 630, 631, 632, 633, 537, 634, 635, 636, 614,
	615, 616, 617, 618, 619, 620, 621, 624, 622, 623,
	730, 293, 165, 175, 184, 202, 200, 213, 240, 262,
	267, 292, 322, 327, 342, 343, 344, 0, 345, 204,
	0, 0, 0, 0, 0, 593, 159, 170, 247, 843,
	305, 218, 637, 644, 663, 666, 667, 668, 669, 673,
	678, 0, 684, 690, 692, 693, 701, 706, 707, 708,
	709, 716, 718, 719, 720, 721, 722, 725, 726, 728,
	735, 736, 742, 747, 748, 754, 755, 0, 778, 781,
	598, 792, 794, 798, 799, 806, 811, 812, 837, 841,
	846, 365, 201, 733, 753, 784, 171, 179, 187, 199,
	210, 217, 227, 230, 234, 235, 237, 241, 254, 256,
	257, 258, 259, 277, 278, 281, 282, 285, 286, 289,
	290, 291, 294, 295, 301, 148, 307, 313, 314, 315,
	316, 317, 325, 326, 328, 329, 336, 356, 357, 370,
	371, 816, 713, 156, 0, 0, 162, 0, 0, 0,
	0, 0, 700, 161, 815, 839, 760, 774, 827, 36,
	346, 589, 831, 674, 697, 840, 703, 705, 768, 650,
	745, 284, 694, 651, 0, 0, 642, 498, 643, 675,
	206, 495, 801, 746, 829, 731, 761, 771, 205, 194,
	738, 737, 818, 686, 685, 766, 814, 828, 0, 0,
	597, 249, 0, 0, 368, 334, 268, 0, 0, 729,
	0, 582, 583, 714, 770, 662, 757, 833, 695, 762,
	834, 77, 0, 0, 0, 496, 521, 520, 523, 524,
	525, 526, 0, 0, 137, 522, 527, 528, 529, 0,
	724, 767, 845, 641, 493, 512, 646, 596, 0, 819,
	682, 683, 209, 0, 0, 0, 0, 0, 0, 0,
	727, 744, 786, 711, 0, 0, 363, 773, 782, 796,
	704, 300, 223, 0, 0, 0, 0, 509, 510, 0,
	0, 0, 0, 612, 0, 511, 0, 656, 507, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 513, 0, 0, 0, 661, 639, 680, 788, 640,
	638, 269, 653, 585, 817, 712, 238, 154, 823, 710,
	610, 776, 657, 805, 698, 246, 655, 155, 652, 658,
	696, 280, 785, 791, 594, 158, 248, 802, 676, 689,
	195, 0, 310, 763, 362, 501, 749, 309, 250, 355,
	777, 825, 361, 699, 341, 369, 373, 216, 732, 186,
	331, 207, 203, 681, 795, 645, 224, 299, 198, 242,
	715, 769, 677, 191, 780, 756, 807, 330, 352, 160,
	265, 353, 372, 177, 347, 266, 273, 188, 190, 189,
	172, 324, 351, 182, 193, 803, 790, 809, 672, 659,
	664, 660, 688, 826, 233, 225, 810, 808, 366, 144,
	319, 318, 702, 232, 793, 145, 136, 306, 146, 239,
	163, 813, 375, 176, 244, 348, 500, 219, 279, 197,
	765, 288, 687, 157, 302, 261, 263, 260, 264, 222,
	140, 147, 789, 304, 321, 350, 178, 337, 138, 139,
	141, 149, 312, 150, 151, 832, 255, 211, 215, 226,
	236, 764, 308, 338, 367, 758, 173, 166, 340, 360,
	183, 320, 323, 374, 787, 168, 821, 804, 751, 717,
	723, 647, 0, 167, 783, 679, 691, 671, 759, 670,
	221, 775, 358, 359, 196, 376, 588, 836, 169, 654,
	835, 276, 283, 275, 838, 354, 822, 752, 741, 739,
	648, 820, 750, 740, 245, 214, 228, 297, 252, 298,
	229, 271, 270, 272, 253, 743, 0, 164, 0, 335,
	830, 847, 339, 180, 665, 797, 349, 143, 303, 181,
	220, 212, 296, 274, 174, 231, 333, 243, 251, 779,
	844, 287, 311, 185, 364, 332, 208, 599, 611, 605,
	607, 606, 603, 604, 602, 601, 600, 613, 586, 587,
	590, 591, 592, 734, 824, 649, 595, 800, 608, 609,
	772, 842, 584, 192, 533, 625, 626, 627, 534, 628,
	629, 535, 536, 630, 631, 632, 633, 537, 634, 635,
	636, 614, 615, 616, 617, 618, 619, 620, 621, 624,
	622, 623, 730, 293, 165, 175, 184, 202, 200, 213,
	240, 262, 267, 292, 322, 327, 342, 343, 344, 0,
	345, 204, 0, 0, 0, 0, 0, 593, 159, 170,
	247, 1222, 305, 218, 637, 644, 663, 666, 667, 668,
	669, 673, 678, 0, 684, 690, 692, 693, 701, 706,
	707, 708, 709, 716, 718, 719, 720, 721, 722, 725,
	726, 728, 735, 736, 742, 747, 748, 754, 755, 0,
	778, 781, 598, 792, 794, 798, 799, 806, 811, 812,
	837, 841, 846, 365, 201, 733, 753, 784, 171, 179,
	187, 199, 210, 217, 227, 230, 234, 235, 237, 241,
	254, 256, 257, 258, 259, 277, 278, 281, 282, 285,
	286, 289, 290, 291, 294, 295, 301, 148, 307, 313,
	314, 315, 316, 317, 325, 326, 328, 329, 336, 356,
	357, 370, 371, 816, 713, 156, 0, 0, 162, 0,
	0, 0, 0, 0, 700, 161, 815, 839, 760, 774,
	827, 0, 346, 589, 831, 674, 697, 840, 703, 705,
	768, 650, 745, 284, 694, 651, 0, 0, 642, 498,
	643, 675, 206, 495, 801, 746, 829, 731, 761, 771,
	205, 194, 738, 737, 818, 686, 685, 766, 814, 828,
	0, 0, 597, 249, 0, 0, 368, 334, 268, 0,
	0, 729, 0, 582, 583, 714, 770, 662, 757, 833,
	695, 762, 834, 77, 0, 1741, 0, 496, 521, 520,
	523, 524, 525, 526, 0, 0, 137, 522, 527, 528,
	529, 0, 724, 767, 845, 641, 493, 512, 646, 596,
	0, 819, 682, 683, 209, 0, 0, 0, 0, 0,
	0, 0, 727, 744, 786, 711, 0, 0, 363, 773,
	782, 796, 704, 300, 223, 0, 0, 0, 0, 509,
	510, 0, 0, 0, 0, 612, 0, 511, 0, 656,
	507, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 513, 0, 0, 0, 661, 639, 680,
	788, 640, 638, 269, 653, 585, 817, 712, 238, 154,
	823, 710, 610, 776, 657, 805, 698, 246, 655, 155,
	652, 658, 696, 280, 785, 791, 594, 158, 248, 802,
	676, 689, 195, 0, 310, 763, 362, 501, 749, 309,
	250, 355, 777, 825, 361, 699, 341, 369, 373, 216,
	732, 186, 331, 207, 203, 681, 795, 645, 224, 299,
	198, 242, 715, 769, 677, 191, 780, 756, 807, 330,
	352, 160, 265, 353, 372, 177, 347, 266, 273, 188,
	190, 189, 172, 324, 351, 182, 193, 803, 790, 809,
	672, 659, 664, 660, 688, 826, 233, 225, 810, 808,
	366, 144, 319, 318, 702, 232, 793, 145, 136, 306,
	146, 239, 163, 813, 375, 176, 244, 348, 500, 219,
	279, 197, 765, 288, 687, 157, 302, 261, 263, 260,
	264, 222, 140, 147, 789, 304, 321, 350, 178, 337,
	138, 139, 141, 149, 312, 150, 151, 832, 255, 211,
	215, 226, 236, 764, 308, 338, 367, 758, 173, 166,
	340, 360, 183, 320, 323, 374, 787, 168, 821, 804,
	751, 717, 723, 647, 0, 167, 783, 679, 691, 671,
	759, 670, 221, 775, 358, 359, 196, 376, 588, 836,
	169, 654, 835, 276, 283, 275, 838, 354, 822, 752,
	741, 739, 648, 820, 750, 740, 245, 214, 228, 297,
	252, 298, 229, 271, 270, 272, 253, 743, 0, 164,
	0, 335, 830, 847, 339, 180, 665, 797, 349, 143,
	303, 181, 220, 212, 296, 274, 174, 231, 333, 243,
	251, 779, 844, 287, 311, 185, 364, 332, 208, 599,
	611, 605, 607, 606, 603, 604, 602, 601, 600, 613,
	586, 587, 590, 591, 592, 734, 824, 649, 595, 800,
	608, 609, 772, 842, 584, 192, 533, 625, 626, 627,
	534, 628, 629, 535, 536, 630, 631, 632, 633, 537,
	634, 635, 636, 614, 615, 616, 617, 618, 619, 620,
	621, 624, 622, 623, 730, 293, 165, 175, 184, 202,
	200, 213, 240, 262, 267, 292, 322, 327, 342, 343,
	344, 0, 345, 204, 0, 0, 0, 0, 0, 593,
	159, 170, 247, 843, 305, 218, 637, 644, 663, 666,
	667, 668, 669, 673, 678, 0, 684, 690, 692, 693,
	701, 706, 707, 708, 709, 716, 718, 719, 720, 721,
	722, 725, 726, 728, 735, 736, 742, 747, 748, 754,
	755, 0, 778, 781, 598, 792, 794, 798, 799, 806,
	811, 812, 837, 841, 846, 365, 201, 733, 753, 784,
	171, 179, 187, 199, 210, 217, 227, 230, 234, 235,
	237, 241, 254, 256, 257, 258, 259, 277, 278, 281,
	282, 285, 286, 289, 290, 291, 294, 295, 301, 148,
	307, 313, 314, 315, 316, 317, 325, 326, 328, 329,
	336, 356, 357, 370, 371, 816, 713, 156, 0, 0,
	162, 0, 0, 0, 0, 0, 700, 161, 815, 839,
	760, 774, 827, 0, 346, 589, 831, 674, 697, 840,
	703, 705, 768, 650, 745, 284, 694, 651, 0, 0,
	642, 887, 643, 675, 206, 885, 801, 746, 829, 731,
	761, 771, 205, 194, 738, 737, 818, 686, 685, 766,
	814, 828, 0, 0, 597, 249, 0, 0, 368, 334,
	268, 0, 0, 729, 0, 582, 583, 714, 770, 662,
	757, 833, 695, 762, 834, 77, 0, 0, 0, 496,
	521, 520, 523, 524, 525, 526, 0, 0, 137, 522,
	527, 528, 529, 0, 724, 767, 845, 641, 904, 512,
	646, 596, 0, 819, 682, 683, 209, 0, 0, 0,
	0, 0, 0, 0, 727, 744, 786, 711, 0, 0,
	363, 773, 782, 796, 704, 300, 223, 0, 0, 0,
	0, 509, 510, 0, 0, 0, 0, 612, 0, 511,
	0, 656, 507, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 513, 0, 0, 0, 661,
	639, 680, 788, 640, 638, 269, 653, 585, 817, 712,
	238, 154, 823, 710, 610, 776, 657, 805, 698, 246,
	655, 155, 652, 658, 696, 280, 785, 791, 594, 158,
	248, 802, 676, 689, 195, 0, 310, 763, 362, 501,
	749, 309, 250, 355, 777, 825, 361, 699, 341, 369,
	373, 216, 732, 186, 331, 207, 203, 681, 795, 645,
	224, 299, 198, 242, 715, 769, 677, 191, 780, 756,
	807, 330, 352, 160, 265, 353, 372, 177, 347, 266,
	273, 188, 190, 189, 172, 324, 351, 182, 193, 803,
	790, 809, 672, 659, 664, 660, 688, 826, 233, 225,
	810, 808, 366, 144, 319, 318, 702, 232, 793, 145,
	136, 306, 146, 239, 163, 813, 375, 176, 244, 348,
	500, 219, 279, 197, 765, 288, 687, 157, 302, 261,
	263, 260, 264, 222, 140, 147, 789, 304, 321, 350,
	178, 337, 138, 139, 141, 149, 312, 150, 151, 832,
	255, 211, 215, 226, 236, 764, 308, 338, 367, 758,
	173, 166, 340, 360, 183, 320, 323, 374, 787, 168,
	821, 804, 751, 717, 723, 647, 0, 167, 783, 679,
	691, 671, 759, 670, 221, 775, 358, 359, 196, 376,
	588, 836, 169, 654, 835, 276, 283, 275, 838, 354,
	822, 752, 741, 739, 648, 820, 750, 740, 245, 214,
	228, 297, 252, 298, 229, 271, 270, 272, 253, 743,
	0, 164, 0, 335, 830, 847, 339, 180, 665, 797,
	349, 143, 303, 181, 220, 212, 296, 274, 174, 231,
	333, 243, 251, 779, 844, 287, 311, 185, 364, 332,
	208, 599, 611, 605, 607, 606, 603, 604, 602, 601,
	600, 613, 586, 587, 590, 591, 592, 734, 824, 649,
	595, 800, 608, 609, 772, 842, 584, 192, 533, 625,
	626, 627, 534, 628, 629, 535, 536, 630, 631, 632,
	633, 537, 634, 635, 636, 614, 615, 616, 617, 618,
	619, 620, 621, 624, 622, 623, 730, 293, 165, 175,
	184, 202, 200, 213, 240, 262, 267, 292, 322, 327,
	342, 343, 344, 0, 345, 204, 0, 0, 0, 0,
	0, 593, 159, 170, 247, 843, 305, 218, 637, 644,
	663, 666, 667, 668, 669, 673, 678, 0, 684, 690,
	692, 693, 701, 706, 707, 708, 709, 716, 718, 719,
	720, 721, 722, 725, 726, 728, 735, 736, 742, 747,
	748, 754, 755, 0, 778, 781, 598, 792, 794, 798,
	799, 806, 811, 812, 837, 841, 846, 365, 201, 733,
	753, 784, 171, 179, 187, 199, 210, 217, 227, 230,
	234, 235, 237, 241, 254, 256, 257, 258, 259, 277,
	278, 281, 282, 285, 286, 289, 290, 291, 294, 295,
	301, 148, 307, 313, 314, 315, 316, 317, 325, 326,
	328, 329, 336, 356, 357, 370, 371, 816, 713, 156,
	0, 0, 162, 0, 0, 0, 0, 0, 700, 161,
	815, 839, 760, 774, 827, 0, 346, 589, 831, 674,
	697, 840, 703, 705, 768, 650, 745, 284, 694, 651,
	0, 0, 642, 498, 643, 675, 206, 495, 801, 746,
	829, 731, 761, 771, 205, 194, 738, 737, 818, 686,
	685, 766, 814, 828, 0, 0, 597, 249, 0, 0,
	368, 334, 268, 0, 0, 729, 0, 582, 583, 714,
	770, 662, 757, 833, 695, 762, 834, 77, 0, 0,
	0, 496, 521, 520, 523, 524, 525, 526, 0, 0,
	137, 522, 527, 528, 529, 0, 724, 767, 845, 641,
	493, 512, 646, 596, 0, 819, 682, 683, 209, 0,
	0, 0, 0, 0, 0, 0, 727, 744, 786, 711,
	0, 0, 363, 773, 782, 796, 704, 300, 223, 0,
	0, 0, 0, 509, 510, 0, 0, 0, 0, 612,
	0, 511, 0, 656, 507, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 513, 0, 0,
	0, 661, 639, 680, 788, 640, 638, 269, 653, 585,
	817, 712, 238, 154, 823, 710, 610, 776, 657, 805,
	698, 246, 655, 155, 652, 658, 696, 280, 785, 791,
	594, 158, 248, 802, 676, 689, 195, 0, 310, 763,
	362, 501, 749, 309, 250, 355, 777, 825, 361, 699,
	341, 369, 373, 216, 732, 186, 331, 207, 203, 681,
	795, 645, 224, 299, 198, 242, 715, 769, 677, 191,
	780, 756, 807, 330, 352, 160, 265, 353, 372, 177,
	347, 266, 273, 188, 190, 189, 172, 324, 351, 182,
	193, 803, 790, 809, 672, 659, 664, 660, 688, 826,
	233, 225, 810, 808, 366, 144, 319, 318, 702, 232,
	793, 145, 136, 306, 146, 239, 163, 813, 375, 176,
	244, 348, 500, 219, 279, 197, 765, 288, 687, 157,
	302, 261, 263, 260, 264, 222, 140, 147, 789, 304,
	321, 350, 178, 337, 138, 139, 141, 149, 312, 150,
	151, 832, 255, 211, 215, 226, 236, 764, 308, 338,
	367, 758, 173, 166, 340, 360, 183, 320, 323, 374,
	787, 168, 821, 804, 751, 717, 723, 647, 0, 167,
	783, 679, 691, 671, 759, 670, 221, 775, 358, 359,
	196, 376, 588, 836, 169, 654, 835, 276, 283, 275,
	838, 354, 822, 752, 741, 739, 648, 820, 750, 740,
	245, 214, 228, 297, 252, 298, 229, 271, 270, 272,
	253, 743, 0, 164, 0, 335, 830, 847, 339, 180,
	665, 797, 349, 143, 303, 181, 220, 212, 296, 274,
	174, 231, 333, 243, 251, 779, 844, 287, 311, 185,
	364, 332, 208, 599, 611, 605, 607, 606, 603, 604,
	602, 601, 600, 613, 586, 587, 590, 591, 592, 734,
	824, 649, 595, 800, 608, 609, 772, 842, 584, 192,
	533, 625, 626, 627, 534, 628, 629, 535, 536, 630,
	631, 632, 633, 537, 634, 635, 636, 614, 615, 616,
	617, 618, 619, 620, 621, 624, 622, 623, 730, 293,
	165, 175, 184, 202, 200, 213, 240, 262, 267, 292,
	322, 327, 342, 343, 344, 0, 345, 204, 0, 0,
	0, 0, 0, 593, 159, 170, 247, 843, 305, 218,
	637, 644, 663, 666, 667, 668, 669, 673, 678, 0,
	684, 690, 692, 693, 701, 706, 707, 708, 709, 716,
	718, 719, 720, 721, 722, 725, 726, 728, 735, 736,
	742, 747, 748, 754, 755, 0, 778, 781, 598, 792,
	794, 798, 799, 806, 811, 812, 837, 841, 846, 365,
	201, 733, 753, 784, 171, 179, 187, 199, 210, 217,
	227, 230, 234, 235, 237, 241, 254, 256, 257, 258,
	259, 277, 278, 281, 282, 285, 286, 289, 290, 291,
	294, 295, 301, 148, 307, 313, 314, 315, 316, 317,
	325, 326, 328, 329, 336, 356, 357, 370, 371, 816,
	713, 156, 0, 0, 162, 0, 0, 0, 0, 0,
	700, 161, 815, 839, 760, 774, 827, 0, 346, 589,
	831, 674, 697, 840, 703, 705, 768, 650, 745, 284,
	694, 651, 0, 0, 642, 887, 643, 675, 206, 885,
	801, 746, 829, 731, 761, 771, 205, 194, 738, 737,
	818, 686, 685, 766, 814, 828, 0, 0, 597, 249,
	0, 0, 368, 334, 268, 0, 0, 729, 0, 582,
	583, 714, 770, 662, 757, 833, 695, 762, 834, 77,
	0, 0, 0, 496, 521, 520, 523, 524, 525, 526,
	0, 0, 137, 522, 527, 528, 529, 0, 724, 767,
	845, 641, 904, 512, 646, 596, 0, 819, 682, 683,
	209, 0, 0, 0, 0, 0, 0, 0, 727, 744,
	786, 711, 0, 0, 363, 773, 782, 796, 704, 300,
	223, 0, 0, 0, 0, 509, 510, 0, 0, 0,
	0, 612, 0, 511, 0, 656, 507, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 513,
	0, 0, 0, 661, 639, 680, 788, 640, 638, 269,
	653, 585, 817, 712, 238, 154, 823, 710, 610, 776,
	657, 805, 698, 246, 655, 155, 652, 658, 696, 280,
	785, 791, 594, 158, 248, 802, 676, 689, 195, 0,
	310, 763, 362, 501, 3508, 309, 250, 355, 777, 825,
	361, 699, 341, 369, 373, 216, 732, 186, 331, 207,
	203, 681, 795, 645, 224, 299, 198, 242, 715, 769,
	677, 191, 780, 756, 807, 330, 352, 160, 265, 353,
	372, 177, 347, 266, 273, 188, 190, 189, 172, 324,
	351, 182, 193, 803, 790, 809, 672, 659, 664, 660,
	688, 826, 233, 225, 810, 808, 366, 144, 319, 318,
	702, 232, 793, 145, 136, 306, 146, 239, 163, 813,
	375, 176, 244, 348, 500, 219, 279, 197, 765, 288,
	687, 157, 302, 261, 263, 260, 264, 222, 140, 147,
	789, 304, 321, 350, 178, 337, 138, 139, 141, 149,
	312, 150, 151, 832, 255, 211, 215, 226, 236, 764,
	308, 338, 367, 758, 173, 166, 340, 360, 183, 320,
	323, 374, 787, 168, 821, 804, 751, 717, 723, 647,
	0, 167, 783, 679, 691, 671, 759, 670, 221, 775,
	358, 359, 196, 376, 588, 836, 169, 654, 835, 276,
	283, 275, 838, 354, 822, 752, 741, 739, 648, 820,
	750, 740, 245, 214, 228, 297, 252, 298, 229, 271,
	270, 272, 253, 743, 0, 164, 0, 335, 830, 847,
	339, 180, 665, 797, 349, 143, 303, 181, 220, 212,
	296, 274, 174, 231, 333, 243, 251, 779, 844, 287,
	311, 185, 364, 332, 208, 599, 611, 605, 607, 606,
	603, 604, 602, 601, 600, 613, 586, 587, 590, 591,
	592, 734, 824, 649, 595, 800, 608, 609, 772, 842,
	584, 192, 533, 625, 626, 627, 534, 628, 629, 535,
	536, 630, 631, 632, 633, 537, 634, 635, 636, 614,
	615, 616, 617, 618, 619, 620, 621, 624, 622, 623,
	730, 293, 165, 175, 184, 202, 200, 213, 240, 262,
	267, 292, 322, 327, 342, 343, 344, 0, 345, 204,
	0, 0, 0, 0, 0, 593, 159, 170, 247, 843,
	305, 218, 637, 644, 663, 666, 667, 668, 669, 673,
	678, 0, 684, 690, 692, 693, 701, 706, 707, 708,
	709, 716, 718, 719, 720, 721, 722, 725, 726, 728,
	735, 736, 742, 747, 748, 754, 755, 0, 778, 781,
	598, 792, 794, 798, 799, 806, 811, 812, 837, 841,
	846, 365, 201, 733, 753, 784, 171, 179, 187, 199,
	210, 217, 227, 230, 234, 235, 237, 241, 254, 256,
	257, 258, 259, 277, 278, 281, 282, 285, 286, 289,
	290, 291, 294, 295, 301, 148, 307, 313, 314, 315,
	316, 317, 325, 326, 328, 329, 336, 356, 357, 370,
	371, 816, 713, 156, 0, 0, 162, 0, 0, 0,
	0, 0, 700, 161, 815, 839, 760, 774, 827, 0,
	346, 589, 831, 674, 697, 840, 703, 705, 768, 650,
	745, 284, 694, 651, 0, 0, 642, 887, 643, 675,
	206, 885, 801, 746, 829, 731, 761, 771, 205, 194,
	738, 737, 818, 686, 685, 766, 814, 828, 0, 0,
	597, 249, 0, 0, 368, 334, 268, 0, 0, 729,
	0, 582, 583, 714, 770, 662, 757, 833, 695, 762,
	834, 77, 0, 0, 0, 496, 521, 520, 523, 524,
	525, 526, 0, 0, 137, 522, 527, 528, 529, 0,
	724, 767, 845, 641, 904, 512, 646, 596, 0, 819,
	682, 683, 209, 0, 0, 0, 0, 0, 0, 0,
	727, 744, 786, 711, 0, 0, 363, 773, 782, 796,
	704, 300, 223, 0, 0, 0, 0, 509, 510, 0,
	0, 0, 0, 612, 0, 511, 0, 656, 507, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 513, 0, 0, 0, 661, 639, 680, 788, 640,
	638, 269, 653, 585, 817, 712, 238, 154, 823, 710,
	610, 776, 657, 805, 698, 246, 655, 155, 652, 658,
	696, 280, 785, 791, 594, 158, 248, 802, 676, 689,
	195, 0, 310, 763, 362, 501, 749, 309, 250, 355,
	777, 825, 361, 699, 341, 369, 373, 216, 732, 186,
	331, 207, 203, 681, 795, 645, 224, 299, 198, 242,
	715, 769, 677, 191, 780, 756, 807, 330, 352, 160,
	265, 353, 372, 177, 347, 266, 273, 188, 190, 189,
	172, 324, 351, 182, 193, 803, 790, 809, 672, 659,
	664, 660, 688, 826, 233, 225, 810, 808, 366, 144,
	319, 318, 702, 232, 793, 145, 136, 306, 146, 239,
	163, 813, 375, 176, 244, 348, 500, 219, 279, 197,
	765, 288, 687, 157, 302, 261, 263, 260, 264, 222,
	140, 147, 789, 304, 321, 350, 178, 337, 138, 139,
	141, 149, 312, 150, 151, 832, 255, 211, 215, 226,
	236, 764, 308, 338, 367, 758, 173, 166, 340, 360,
	183, 320, 323, 374, 787, 168, 821, 804, 751, 717,
	723, 647, 0, 167, 783, 679, 691, 671, 759, 670,
	221, 775, 358, 359, 196, 376, 588, 836, 169, 654,
	835, 276, 283, 275, 838, 354, 822, 752, 741, 739,
	648, 820, 750, 740, 245, 214, 228, 297, 252, 298,
	229, 271, 270, 272, 253, 743, 0, 164, 0, 335,
	830, 847, 339, 180, 665, 797, 349, 143, 303, 181,
	220, 212, 296, 274, 174, 231, 333, 243, 251, 779,
	844, 287, 311, 185, 364, 332, 208, 599, 611, 605,
	607, 606, 603, 604, 602, 601, 600, 613, 586, 587,
	590, 591, 592, 1909, 1910, 1911, 595, 800, 608, 609,
	772, 842, 584, 192, 533, 625, 626, 627, 534, 628,
	629, 535, 536, 630, 631, 632, 633, 537, 634, 635,
	636, 614, 615, 616, 617, 618, 619, 620, 621, 624,
	622, 623, 730, 293, 165, 175, 184, 202, 200, 213,
	240, 262, 267, 292, 322, 327, 342, 343, 344, 0,
	345, 204, 0, 0, 0, 0, 0, 593, 159, 170,
	247, 843, 305, 218, 637, 644, 663, 666, 667, 668,
	669, 673, 678, 0, 684, 690, 692, 693, 701, 706,
	707, 708, 709, 716, 718, 719, 720, 721, 722, 725,
	726, 728, 735, 736, 742, 747, 748, 754, 755, 0,
	778, 781, 598, 792, 794, 798, 799, 806, 811, 812,
	837, 841, 846, 365, 201, 733, 753, 784, 171, 179,
	187, 199, 210, 217, 227, 230, 234, 235, 237, 241,
	254, 256, 257, 258, 259, 277, 278, 281, 282, 285,
	286, 289, 290, 291, 294, 295, 301, 148, 307, 313,
	314, 315, 316, 317, 325, 326, 328, 329, 336, 356,
	357, 370, 371, 816, 713, 156, 0, 0, 162, 0,
	0, 0, 0, 0, 700, 161, 815, 839, 760, 774,
	1672, 2881, 346, 1527, 1676, 1477, 1506, 1693, 1512, 1515,
	1596, 1443, 1565, 284, 1503, 1444, 1427, 1482, 1431, 1494,
	1432, 1479, 206, 1475, 1637, 1568, 1674, 1547, 1589, 1599,
	205, 194, 1557, 1556, 1662, 1492, 1491, 1594, 1651, 1673,
	1546, 0, 1683, 249, 1648, 947, 368, 334, 268, 950,
	949, 1542, 1657, 1563, 1626, 1525, 1598, 1459, 1581, 1678,
	1504, 1590, 1679, 77, 0, 1135, 0, 943, 0, 0,
	0, 0, 0, 0, 0, 0, 137, 0, 1586, 1670,
	1497, 948, 1537, 1595, 1698, 1430, 1582, 0, 1435, 1446,
	1692, 1663, 1488, 1489, 209, 0, 0, 0, 0, 0,
	0, 0, 1540, 1564, 1616, 1522, 0, 0, 363, 1601,
	1611, 1629, 1514, 300, 223, 0, 0, 0, 0, 0,
	0, 0, 0, 1484, 0, 1579, 0, 0, 0, 1451,
	1437, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1536, 0, 0, 0, 1458, 1428, 1486,
	1618, 1429, 1426, 269, 1447, 1631, 1661, 1523, 238, 154,
	1667, 1521, 1520, 1605, 1452, 1641, 1507, 246, 1450, 155,
	1445, 1453, 1505, 280, 1615, 1623, 142, 158, 248, 1638,
	1480, 1496, 195, 1798, 310, 1591, 362, 946, 1572, 309,
	250, 355, 1606, 1669, 361, 1508, 341, 369, 373, 216,
	1548, 186, 331, 207, 203, 1487, 1628, 1434, 224, 299,
	198, 242, 1526, 1597, 1481, 191, 1609, 1580, 1643, 330,
	352, 160, 265, 353, 372, 177, 347, 266, 273, 188,
	190, 189, 172, 324, 351, 182, 193, 1639, 1622, 1645,
	1474, 1454, 1465, 1455, 1495, 1671, 233, 225, 1646, 1644,
	366, 144, 319, 318, 1511, 232, 1625, 145, 136, 306,
	146, 239, 163, 1650, 375, 176, 244, 348, 945, 219,
	279, 197, 1593, 288, 1493, 157, 302, 261, 263, 260,
	264, 222, 140, 147, 1621, 304, 321, 350, 178, 337,
	138, 139, 141, 149, 312, 150, 151, 1677, 255, 211,
	215, 226, 236, 1592, 308, 338, 367, 1583, 173, 166,
	340, 360, 183, 320, 323, 374, 1617, 168, 1665, 1640,
	1574, 1529, 1535, 1436, 0, 167, 1613, 1485, 1500, 1473,
	1587, 1472, 221, 1604, 358, 359, 196, 376, 1448, 1685,
	169, 1449, 1684, 276, 283, 275, 1688, 354, 1666, 1575,
	1560, 1558, 1441, 1664, 1573, 1559, 245, 214, 228, 297,
	252, 298, 229, 271, 270, 272, 253, 1562, 0, 164,
	0, 335, 1675, 1700, 339, 180, 1467, 1632, 349, 143,
	303, 181, 220, 212, 296, 274, 174, 231, 333, 243,
	251, 1608, 1697, 287, 311, 185, 364, 332, 208, 1463,
	1466, 1461, 1464, 1462, 1566, 1567, 1680, 1681, 1682, 1620,
	1456, 0, 1658, 1659, 0, 1553, 1668, 1442, 0, 1636,
	152, 153, 1600, 1695, 1513, 192, 131, 1438, 1439, 1440,
	132, 1543, 1544, 133, 134, 1654, 1653, 1652, 1655, 135,
	1689, 1687, 1690, 1457, 1478, 1499, 1549, 1550, 1552, 1584,
	1585, 1630, 1603, 1612, 1545, 293, 165, 175, 184, 202,
	200, 213, 240, 262, 267, 292, 322, 327, 342, 343,
	344, 0, 345, 204, 0, 0, 0, 0, 0, 1571,
	159, 170, 247, 2882, 305, 218, 1425, 1433, 1460, 1468,
	1469, 1470, 1471, 1476, 1483, 0, 1490, 1498, 1501, 1502,
	1510, 1516, 1517, 1518, 1519, 1528, 1530, 1531, 1532, 1533,
	1534, 1538, 1539, 1541, 1554, 1555, 1561, 1569, 1570, 1577,
	1578, 0, 1607, 1610, 1619, 1624, 1627, 1633, 1635, 1642,
	1647, 1649, 1686, 1694, 1699, 365, 201, 1551, 1576, 1614,
	171, 179, 187, 199, 210, 217, 227, 230, 234, 235,
	237, 241, 254, 256, 257, 258, 259, 277, 278, 281,
	282, 285, 286, 289, 290, 291, 294, 295, 301, 148,
	307, 313, 314, 315, 316, 317, 325, 326, 328, 329,
	336, 356, 357, 370, 371, 1660, 1524, 156, 0, 0,
	162, 0, 0, 0, 0, 0, 1509, 161, 1656, 1691,
	1588, 1602, 1672, 1634, 346, 1527, 1676, 1477, 1506, 1693,
	1512, 1515, 1596, 1443, 1565, 284, 1503, 1444, 1427, 1482,
	1431, 1494, 1432, 1479, 206, 1475, 1637, 1568, 1674, 1547,
	1589, 1599, 205, 194, 1557, 1556, 1662, 1492, 1491, 1594,
	1651, 1673, 1546, 0, 1683, 249, 1648, 947, 368, 334,
	268, 950, 949, 1542, 1657, 1563, 1626, 1525, 1598, 1459,
	1581, 1678, 1504, 1590, 1679, 0, 0, 0, 0, 943,
	0, 0, 0, 0, 0, 0, 0, 0, 137, 0,
	1586, 1670, 1497, 948, 1537, 1595, 1698, 1430, 1582, 0,
	1435, 1446, 1692, 1663, 1488, 1489, 209, 0, 0, 0,
	0, 0, 0, 0, 1540, 1564, 1616, 1522, 0, 0,
	363, 1601, 1611, 1629, 1514, 300, 223, 0, 0, 0,
	0, 0, 0, 0, 0, 1484, 0, 1579, 0, 0,
	0, 1451, 1437, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1536, 0, 0, 0, 1458,
	1428, 1486, 1618, 1429, 1426, 269, 1447, 1631, 1661, 1523,
	238, 154, 1667, 1521, 1520, 1605, 1452, 1641, 1507, 246,
	1450, 155, 1445, 1453, 1505, 280, 1615, 1623, 142, 158,
	248, 1638, 1480, 1496, 195, 1798, 310, 1591, 362, 946,
	1572, 309, 250, 355, 1606, 1669, 361, 1508, 341, 369,
	373, 216, 1548, 186, 331, 207, 203, 1487, 1628, 1434,
	224, 299, 198, 242, 1526, 1597, 1481, 191, 1609, 1580,
	1643, 330, 352, 160, 265, 353, 372, 177, 347, 266,
	273, 188, 190, 189, 172, 324, 351, 182, 193, 1639,
	1622, 1645, 1474, 1454, 1465, 1455, 1495, 1671, 233, 225,
	1646, 1644, 366, 144, 319, 318, 1511, 232, 1625, 145,
	136, 306, 146, 239, 163, 1650, 375, 176, 244, 348,
	945, 219, 279, 197, 1593, 288, 1493, 157, 302, 261,
	263, 260, 264, 222, 140, 147, 1621, 304, 321, 350,
	178, 337, 138, 139, 141, 149, 312, 150, 151, 1677,
	255, 211, 215, 226, 236, 1592, 308, 338, 367, 1583,
	173, 166, 340, 360, 183, 320, 323, 374, 1617, 168,
	1665, 1640, 1574, 1529, 1535, 1436, 0, 167, 1613, 1485,
	1500, 1473, 1587, 1472, 221, 1604, 358, 359, 196, 376,
	1448, 1685, 169, 1449, 1684, 276, 283, 275, 1688, 354,
	1666, 1575, 1560, 1558, 1441, 1664, 1573, 1559, 245, 214,
	228, 297, 252, 298, 229, 271, 270, 272, 253, 1562,
	0, 164, 0, 335, 1675, 1700, 339, 180, 1467, 1632,
	349, 143, 303, 181, 220, 212, 296, 274, 174, 231,
	333, 243, 251, 1608, 1697, 287, 311, 185, 364, 332,
	208, 1463, 1466, 1461, 1464, 1462, 1566, 1567, 1680, 1681,
	1682, 1620, 1456, 0, 1658, 1659, 0, 1553, 1668, 1442,
	0, 1636, 152, 153, 1600, 1695, 1513, 192, 131, 1438,
	1439, 1440, 132, 1543, 1544, 133, 134, 1654, 1653, 1652,
	1655, 135, 1689, 1687, 1690, 1457, 1478, 1499, 1549, 1550,
	1552, 1584, 1585, 1630, 1603, 1612, 1545, 293, 165, 175,
	184, 202, 200, 213, 240, 262, 267, 292, 322, 327,
	342, 343, 344, 0, 345, 204, 0, 0, 0, 0,
	0, 1571, 159, 170, 247, 1696, 305, 218, 1425, 1433,
	1460, 1468, 1469, 1470, 1471, 1476, 1483, 0, 1490, 1498,
	1501, 1502, 1510, 1516, 1517, 1518, 1519, 1528, 1530, 1531,
	1532, 1533, 1534, 1538, 1539, 1541, 1554, 1555, 1561, 1569,
	1570, 1577, 1578, 0, 1607, 1610, 1619, 1624, 1627, 1633,
	1635, 1642, 1647, 1649, 1686, 1694, 1699, 365, 201, 1551,
	1576, 1614, 171, 179, 187, 199, 210, 217, 227, 230,
	234, 235, 237, 241, 254, 256, 257, 258, 259, 277,
	278, 281, 282, 285, 286, 289, 290, 291, 294, 295,
	301, 148, 307, 313, 314, 315, 316, 317, 325, 326,
	328, 329, 336, 356, 357, 370, 371, 1660, 1524, 156,
	0, 0, 162, 0, 0, 0, 0, 0, 1509, 161,
	1656, 1691, 1588, 1602, 1672, 1634, 346, 1527, 1676, 1477,
	1506, 1693, 1512, 1515, 1596, 1443, 1565, 284, 1503, 1444,
	1427, 1482, 1431, 1494, 1432, 1479, 206, 1475, 1637, 1568,
	1674, 1547, 1589, 1599, 205, 194, 1557, 1556, 1662, 1492,
	1491, 1594, 1651, 1673, 1546, 0, 1683, 249, 1648, 0,
	368, 334, 268, 0, 0, 1542, 1657, 1563, 1626, 1525,
	1598, 1459, 1581, 1678, 1504, 1590, 1679, 0, 0, 0,
	0, 496, 0, 0, 0, 0, 0, 0, 0, 0,
	137, 0, 1586, 1670, 1497, 0, 1537, 1595, 1698, 1430,
	1582, 0, 1435, 1446, 1692, 1663, 1488, 1489, 209, 0,
	0, 0, 0, 0, 0, 0, 1540, 1564, 1616, 1522,
	0, 0, 363, 1601, 1611, 1629, 1514, 300, 223, 0,
	0, 0, 0, 0, 0, 2550, 0, 1484, 0, 1579,
	0, 0, 0, 1451, 1437, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1536, 0, 0,
	0, 1458, 1428, 1486, 1618, 1429, 1426, 269, 1447, 1631,
	1661, 1523, 238, 154, 1667, 1521, 1520, 1605, 1452, 1641,
	1507, 246, 1450, 155, 1445, 1453, 1505, 280, 1615, 1623,
	142, 158, 248, 1638, 1480, 1496, 195, 0, 310, 1591,
	362, 1839, 1572, 309, 250, 355, 1606, 1669, 361, 1508,
	341, 369, 373, 216, 1548, 186, 331, 207, 203, 1487,
	1628, 1434, 224, 299, 198, 242, 1526, 1597, 1481, 191,
	1609, 1580, 1643, 330, 352, 160, 265, 353, 372, 177,
	347, 266, 273, 188, 190, 189, 172, 324, 351, 182,
	193, 1639, 1622, 1645, 1474, 1454, 1465, 1455, 1495, 1671,
	233, 225, 1646, 1644, 366, 144, 319, 318, 1511, 232,
	1625, 145, 136, 306, 146, 239, 163, 1650, 375, 176,
	244, 348, 1838, 219, 279, 197, 1593, 288, 1493, 157,
	302, 261, 263, 260, 264, 222, 140, 147, 1621, 304,
	321, 350, 178, 337, 138, 139, 141, 149, 312, 150,
	151, 1677, 255, 211, 215, 226, 236, 1592, 308, 338,
	367, 1583, 173, 166, 340, 360, 183, 320, 323, 374,
	1617, 168, 1665, 1640, 1574, 1529, 1535, 1436, 0, 167,
	1613, 1485, 1500, 1473, 1587, 1472, 221, 1604, 358, 359,
	196, 376, 1448, 1685, 169, 1449, 1684, 276, 283, 275,
	1688, 354, 1666, 1575, 1560, 1558, 1441, 1664, 1573, 1559,
	245, 214, 228, 297, 252, 298, 229, 271, 270, 272,
	253, 1562, 0, 164, 0, 335, 1675, 1700, 339, 180,
	1467, 1632, 349, 143, 303, 181, 220, 212, 296, 274,
	174, 231, 333, 243, 251, 1608, 1697, 287, 311, 185,
	364, 332, 208, 1463, 1466, 1461, 1464, 1462, 1566, 1567,
	1680, 1681, 1682, 1620, 1456, 0, 1658, 1659, 0, 1553,
	1668, 1442, 0, 1636, 152, 153, 1600, 1695, 1513, 192,
	131, 1438, 1439, 1440, 132, 1543, 1544, 133, 134, 1654,
	1653, 1652, 1655, 135, 1689, 1687, 1690, 1457, 1478, 1499,
	1549, 1550, 1552, 1584, 1585, 1630, 1603, 1612, 1545, 293,
	165, 175, 184, 202, 200, 213, 240, 262, 267, 292,
	322, 327, 342, 343, 344, 0, 345, 204, 0, 0,
	0, 0, 0, 1571, 159, 170, 247, 1696, 305, 218,
	1425, 1433, 1460, 1468, 1469, 1470, 1471, 1476, 1483, 0,
	1490, 1498, 1501, 1502, 1510, 1516, 1517, 1518, 1519, 1528,
	1530, 1531, 1532, 1533, 1534, 1538, 1539, 1541, 1554, 1555,
	1561, 1569, 1570, 1577, 1578, 0, 1607, 1610, 1619, 1624,
	1627, 1633, 1635, 1642, 1647, 1649, 1686, 1694, 1699, 365,
	201, 1551, 1576, 1614, 171, 179, 187, 199, 210, 217,
	227, 230, 234, 235, 237, 241, 254, 256, 257, 258,
	259, 277, 278, 281, 282, 285, 286, 289, 290, 291,
	294, 295, 301, 148, 307, 313, 314, 315, 316, 317,
	325, 326, 328, 329, 336, 356, 357, 370, 371, 1660,
	1524, 156, 0, 0, 162, 0, 0, 0, 0, 0,
	1509, 161, 1656, 1691, 1588, 1602, 1672, 1634, 346, 1527,
	1676, 1477, 1506, 1693, 1512, 1515, 1596, 1443, 1565, 284,
	1503, 1444, 1427, 1482, 1431, 1494, 1432, 1479, 206, 1475,
	1637, 1568, 1674, 1547, 1589, 1599, 205, 194, 1557, 1556,
	1662, 1492, 1491, 1594, 1651, 1673, 1546, 0, 1683, 249,
	1648, 0, 368, 334, 268, 0, 0, 1542, 1657, 1563,
	1626, 1525, 1598, 1459, 1581, 1678, 1504, 1590, 1679, 0,
	0, 0, 0, 496, 0, 0, 0, 0, 0, 0,
	0, 0, 137, 0, 1586, 1670, 1497, 0, 1537, 1595,
	1698, 1430, 1582, 0, 1435, 1446, 1692, 1663, 1488, 1489,
	209, 0, 0, 0, 0, 0, 0, 0, 1540, 1564,
	1616, 1522, 0, 0, 363, 1601, 1611, 1629, 1514, 300,
	223, 0, 0, 0, 0, 0, 0, 1833, 0, 1484,
	0, 1579, 0, 0, 0, 1451, 1437, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1536,
	0, 0, 0, 1458, 1428, 1486, 1618, 1429, 1426, 269,
	1447, 1631, 1661, 1523, 238, 154, 1667, 1521, 1520, 1605,
	1452, 1641, 1507, 246, 1450, 155, 1445, 1453, 1505, 280,
	1615, 1623, 142, 158, 248, 1638, 1480, 1496, 195, 0,
	310, 1591, 362, 1839, 1572, 309, 250, 355, 1606, 1669,
	361, 1508, 341, 369, 373, 216, 1548, 186, 331, 207,
	203, 1487, 1628, 1434, 224, 299, 198, 242, 1526, 1597,
	1481, 191, 1609, 1580, 1643, 330, 352, 160, 265, 353,
	372, 177, 347, 266, 273, 188, 190, 189, 172, 324,
	351, 182, 193, 1639, 1622, 1645, 1474, 1454, 1465, 1455,
	1495, 1671, 233, 225, 1646, 1644, 366, 144, 319, 318,
	1511, 232, 1625, 145, 136, 306, 146, 239, 163, 1650,
	375, 176, 244, 348, 1838, 219, 279, 197, 1593, 288,
	1493, 157, 302, 261, 263, 260, 264, 222, 140, 147,
	1621, 304, 321, 350, 178, 337, 138, 139, 141, 149,
	312, 150, 151, 1677, 255, 211, 215, 226, 236, 1592,
	308, 338, 367, 1583, 173, 166, 340, 360, 183, 320,
	323, 374, 1617, 168, 1665, 1640, 1574, 1529, 1535, 1436,
	0, 167, 1613, 1485, 1500, 1473, 1587, 1472, 221, 1604,
	358, 359, 196, 376, 1448, 1685, 169, 1449, 1684, 276,
	283, 275, 1688, 354, 1666, 1575, 1560, 1558, 1441, 1664,
	1573, 1559, 245, 214, 228, 297, 252, 298, 229, 271,
	270, 272, 253, 1562, 0, 164, 0, 335, 1675, 1700,
	339, 180, 1467, 1632, 349, 143, 303, 181, 220, 212,
	296, 274, 174, 231, 333, 243, 251, 1608, 1697, 287,
	311, 185, 364, 332, 208, 1463, 1466, 1461, 1464, 1462,
	1566, 1567, 1680, 1681, 1682, 1620, 1456, 0, 1658, 1659,
	0, 1553, 1668, 1442, 0, 1636, 152, 153, 1600, 1695,
	1513, 192, 131, 1438, 1439, 1440, 132, 1543, 1544, 133,
	134, 1654, 1653, 1652, 1655, 135, 1689, 1687, 1690, 1457,
	1478, 1499, 1549, 1550, 1552, 1584, 1585, 1630, 1603, 1612,
	1545, 293, 165, 175, 184, 202, 200, 213, 240, 262,
	267, 292, 322, 327, 342, 343, 344, 0, 345, 204,
	0, 0, 0, 0, 0, 1571, 159, 170, 247, 1696,
	305, 218, 1425, 1433, 1460, 1468, 1469, 1470, 1471, 1476,
	1483, 0, 1490, 1498, 1501, 1502, 1510, 1516, 1517, 1518,
	1519, 1528, 1530, 1531, 1532, 1533, 1534, 1538, 1539, 1541,
	1554, 1555, 1561, 1569, 1570, 1577, 1578, 0, 1607, 1610,
	1619, 1624, 1627, 1633, 1635, 1642, 1647, 1649, 1686, 1694,
	1699, 365, 201, 1551, 1576, 1614, 171, 179, 187, 199,
	210, 217, 227, 230, 234, 235, 237, 241, 254, 256,
	257, 258, 259, 277, 278, 281, 282, 285, 286, 289,
	290, 291, 294, 295, 301, 148, 307, 313, 314, 315,
	316, 317, 325, 326, 328, 329, 336, 356, 357, 370,
	371, 1660, 1524, 156, 0, 0, 162, 0, 0, 0,
	0, 0, 1509, 161, 1656, 1691, 1588, 1602, 1672, 1634,
	346, 1527, 1676, 1477, 1506, 1693, 1512, 1515, 1596, 1443,
	1565, 284, 1503, 1444, 1427, 1482, 1431, 1494, 1432, 1479,
	206, 1475, 1637, 1568, 1674, 1547, 1589, 1599, 205, 194,
	1557, 1556, 1662, 1492, 1491, 1594, 1651, 1673, 1546, 0,
	1683, 249, 1648, 0, 368, 334, 268, 0, 0, 1542,
	1657, 1563, 1626, 1525, 1598, 1459, 1581, 1678, 1504, 1590,
	1679, 0, 0, 0, 0, 496, 0, 0, 0, 0,
	0, 0, 0, 0, 137, 0, 1586, 1670, 1497, 0,
	1537, 1595, 1698, 1430, 1582, 0, 1435, 1446, 1692, 1663,
	1488, 1489, 209, 0, 0, 0, 0, 0, 0, 0,
	1540, 1564, 1616, 1522, 0, 0, 363, 1601, 1611, 1629,
	1514, 300, 223, 0, 0, 0, 0, 0, 0, 0,
	0, 1484, 0, 1579, 0, 0, 0, 1451, 1437, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1536, 0, 0, 0, 1458, 1428, 1486, 1618, 1429,
	1426, 269, 1447, 1631, 1661, 1523, 238, 154, 1667, 1521,
	1520, 1605, 1452, 1641, 1507, 246, 1450, 155, 1445, 1453,
	1505, 280, 1615, 1623, 142, 158, 248, 1638, 1480, 1496,
	195, 0, 310, 1591, 362, 1839, 1572, 309, 250, 355,
	1606, 1669, 361, 1508, 341, 369, 373, 216, 1548, 186,
	331, 207, 203, 1487, 1628, 1434, 224, 299, 198, 242,
	1526, 1597, 1481, 191, 1609, 1580, 1643, 330, 352, 160,
	265, 353, 372, 177, 347, 266, 273, 188, 190, 189,
	172, 324, 351, 182, 193, 1639, 1622, 1645, 1474, 1454,
	1465, 1455, 1495, 1671, 233, 225, 1646, 1644, 366, 144,
	319, 318, 1511, 232, 1625, 145, 136, 306, 146, 239,
	163, 1650, 375, 176, 244, 348, 1838, 219, 279, 197,
	1593, 288, 1493, 157, 302, 261, 263, 260, 264, 222,
	140, 147, 1621, 304, 321, 350, 178, 337, 138, 139,
	141, 149, 312, 150, 151, 1677, 255, 211, 215, 226,
	236, 1592, 308, 338, 367, 1583, 173, 166, 340, 360,
	183, 320, 323, 374, 1617, 168, 1665, 1640, 1574, 1529,
	1535, 1436, 0, 167, 1613, 1485, 1500, 1473, 1587, 1472,
	221, 1604, 358, 359, 196, 376, 1448, 1685, 169, 1449,
	1684, 276, 283, 275, 1688, 354, 1666, 1575, 1560, 1558,
	1441, 1664, 1573, 1559, 245, 214, 228, 297, 252, 298,
	229, 271, 270, 272, 253, 1562, 0, 164, 0, 335,
	1675, 1700, 339, 180, 1467, 1632, 349, 143, 303, 181,
	220, 212, 296, 274, 174, 231, 333, 243, 251, 1608,
	1697, 287, 311, 185, 364, 332, 208, 1463, 1466, 1461,
	1464, 1462, 1566, 1567, 1680, 1681, 1682, 1620, 1456, 0,
	1658, 1659, 0, 1553, 1668, 1442, 0, 1636, 152, 153,
	1600, 1695, 1513, 192, 131, 1438, 1439, 1440, 132, 1543,
	1544, 133, 134, 1654, 1653, 1652, 1655, 135, 1689, 1687,
	1690, 1457, 1478, 1499, 1549, 1550, 1552, 1584, 1585, 1630,
	1603, 1612, 1545, 293, 165, 175, 184, 202, 200, 213,
	240, 262, 267, 292, 322, 327, 342, 343, 344, 0,
	345, 204, 0, 0, 0, 0, 0, 1571, 159, 170,
	247, 1696, 305, 218, 1425, 1433, 1460, 1468, 1469, 1470,
	1471, 1476, 1483, 0, 1490, 1498, 1501, 1502, 1510, 1516,
	1517, 1518, 1519, 1528, 1530, 1531, 1532, 1533, 1534, 1538,
	1539, 1541, 1554, 1555, 1561, 1569, 1570, 1577, 1578, 0,
	1607, 1610, 1619, 1624, 1627, 1633, 1635, 1642, 1647, 1649,
	1686, 1694, 1699, 365, 201, 1551, 1576, 1614, 171, 179,
	187, 199, 210, 217, 227, 230, 234, 235, 237, 241,
	254, 256, 257, 258, 259, 277, 278, 281, 282, 285,
	286, 289, 290, 291, 294, 295, 301, 148, 307, 313,
	314, 315, 316, 317, 325, 326, 328, 329, 336, 356,
	357, 370, 371, 1660, 1524, 156, 0, 0, 162, 0,
	0, 0, 0, 0, 1509, 161, 1656, 1691, 1588, 1602,
	827, 0, 346, 892, 831, 674, 697, 840, 703, 705,
	768, 650, 745, 284, 694, 651, 0, 0, 642, 887,
	643, 675, 206, 885, 801, 746, 829, 731, 761, 771,
	205, 194, 738, 737, 818, 686, 685, 766, 814, 828,
	0, 0, 925, 249, 0, 947, 368, 334, 268, 950,
	949, 729, 0, 899, 912, 714, 770, 662, 757, 833,
	695, 762, 834, 0, 0, 0, 0, 496, 0, 0,
	0, 0, 0, 0, 0, 0, 137, 0, 907, 921,
	888, 948, 724, 767, 845, 641, 904, 0, 646, 876,
	0, 819, 682, 683, 209, 0, 0, 0, 0, 0,
	0, 0, 727, 744, 786, 711, 0, 0, 363, 773,
	782, 796, 704, 300, 223, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 903, 0, 0, 0, 656,
	872, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 893, 0, 0, 0, 661, 639, 680,
	788, 640, 638, 269, 653, 914, 817, 712, 238, 154,
	823, 710, 891, 776, 657, 805, 698, 246, 655, 155,
	652, 658, 696, 280, 785, 791, 142, 158, 248, 802,
	676, 689, 195, 2619, 310, 763, 362, 2621, 749, 309,
	250, 355, 777, 825, 361, 699, 341, 369, 373, 216,
	732, 186, 331, 207, 203, 681, 795, 645, 224, 299,
	198, 242, 715, 769, 677, 191, 780, 756, 807, 330,
	352, 160, 265, 353, 372, 177, 347, 266, 273, 188,
	190, 189, 172, 324, 351, 182, 193, 803, 790, 809,
	672, 659, 664, 660, 688, 826, 233, 225, 810, 808,
	366, 144, 319, 318, 702, 232, 793, 145, 136, 306,
	146, 239, 163, 813, 375, 176, 244, 348, 2620, 219,
	279, 197, 765, 288, 687, 157, 302, 261, 263, 260,
	264, 222, 140, 147, 789, 304, 321, 350, 178, 337,
	138, 139, 141, 149, 312, 150, 151, 832, 255, 211,
	215, 226, 236, 764, 308, 338, 367, 758, 173, 166,
	340, 360, 183, 320, 323, 374, 787, 168, 821, 804,
	751, 717, 723, 647, 0, 167, 783, 679, 691, 671,
	759, 670, 221, 775, 358, 359, 196, 376, 877, 836,
	169, 654, 835, 276, 283, 275, 838, 354, 822, 752,
	741, 739, 648, 820, 750, 740, 245, 214, 228, 297,
	252, 298, 229, 271, 270, 272, 253, 743, 0, 164,
	0, 335, 830, 847, 339, 180, 665, 797, 349, 143,
	303, 181, 220, 212, 296, 274, 174, 231, 333, 243,
	251, 779, 844, 287, 311, 185, 364, 332, 208, 882,
	884, 880, 883, 881, 900, 901, 922, 923, 924, 911,
	878, 0, 919, 920, 0, 734, 824, 649, 0, 800,
	152, 153, 772, 842, 890, 192, 131, 873, 874, 875,
	132, 894, 895, 133, 134, 917, 916, 915, 918, 135,
	927, 926, 928, 879, 886, 889, 896, 897, 898, 905,
	906, 913, 908, 909, 730, 293, 165, 175, 184, 202,
	200, 213, 240, 262, 267, 292, 322, 327, 342, 343,
	344, 0, 345, 204, 0, 0, 0, 0, 0, 902,
	159, 170, 247, 843, 305, 218, 637, 644, 663, 666,
	667, 668, 669, 673, 678, 0, 684, 690, 692, 693,
	701, 706, 707, 708, 709, 716, 718, 719, 720, 721,
	722, 725, 726, 728, 735, 736, 742, 747, 748, 754,
	755, 0, 778, 781, 910, 792, 794, 798, 799, 806,
	811, 812, 837, 841, 846, 365, 201, 733, 753, 784,
	171, 179, 187, 199, 210, 217, 227, 230, 234, 235,
	237, 241, 254, 256, 257, 258, 259, 277, 278, 281,
	282, 285, 286, 289, 290, 291, 294, 295, 301, 148,
	307, 313, 314, 315, 316, 317, 325, 326, 328, 329,
	336, 356, 357, 370, 371, 816, 713, 156, 0, 0,
	162, 0, 0, 0, 0, 0, 700, 161, 815, 839,
	760, 774, 827, 0, 346, 892, 831, 674, 697, 840,
	703, 705, 768, 650, 745, 284, 694, 651, 0, 0,
	642, 887, 643, 675, 206, 885, 801, 746, 829, 731,
	761, 771, 205, 194, 738, 737, 818, 686, 685, 766,
	814, 828, 0, 0, 925, 249, 0, 0, 368, 334,
	268, 0, 0, 729, 0, 899, 912, 714, 770, 662,
	757, 833, 695, 762, 834, 0, 0, 0, 0, 496,
	0, 0, 0, 0, 0, 0, 0, 0, 137, 0,
	907, 921, 888, 0, 724, 767, 845, 641, 904, 0,
	646, 876, 0, 819, 682, 683, 209, 0, 0, 0,
	0, 0, 0, 0, 727, 744, 786, 711, 0, 0,
	363, 773, 782, 796, 704, 300, 223, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 903, 0, 0,
	0, 656, 872, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 893, 0, 0, 0, 661,
	639, 680, 788, 640, 638, 269, 653, 914, 817, 712,
	238, 154, 823, 710, 891, 776, 657, 805, 698, 246,
	655, 155, 652, 658, 696, 280, 785, 791, 142, 158,
	248, 802, 676, 689, 195, 0, 310, 763, 362, 871,
	749, 309, 250, 355, 777, 825, 361, 699, 341, 369,
	373, 216, 732, 186, 331, 207, 203, 681, 795, 645,
	224, 299, 198, 242, 715, 769, 677, 191, 780, 756,
	807, 330, 352, 160, 265, 353, 372, 177, 347, 266,
	273, 188, 190, 189, 172, 324, 351, 182, 193, 803,
	790, 809, 672, 659, 664, 660, 688, 826, 233, 225,
	810, 808, 366, 144, 319, 318, 702, 232, 793, 145,
	136, 306, 146, 239, 163, 813, 375, 176, 244, 348,
	870, 219, 279, 197, 765, 288, 687, 157, 302, 261,
	263, 260, 264, 222, 140, 147, 789, 304, 321, 350,
	178, 337, 138, 139, 141, 149, 312, 150, 151, 832,
	255, 211, 215, 226, 236, 764, 308, 338, 367, 758,
	173, 166, 340, 360, 183, 320, 323, 374, 787, 168,
	821, 804, 751, 717, 723, 647, 0, 167, 783, 679,
	691, 671, 759, 670, 221, 775, 358, 359, 196, 376,
	877, 836, 169, 654, 835, 276, 283, 275, 838, 354,
	822, 752, 741, 739, 648, 820, 750, 740, 245, 214,
	228, 297, 252, 298, 229, 271, 270, 272, 253, 743,
	0, 164, 0, 335, 830, 847, 339, 180, 665, 797,
	349, 143, 303, 181, 220, 212, 296, 274, 174, 231,
	333, 243, 251, 779, 844, 287, 311, 185, 364, 332,
	208, 882, 884, 880, 883, 881, 900, 901, 922, 923,
	924, 911, 878, 0, 919, 920, 0, 734, 824, 649,
	0, 800, 152, 153, 772, 842, 890, 192, 131, 873,
	874, 875, 132, 894, 895, 133, 134, 917, 916, 915,
	918, 135, 927, 926, 928, 879, 886, 889, 896, 897,
	898, 905, 906, 913, 908, 909, 730, 293, 165, 175,
	184, 202, 200, 213, 240, 262, 267, 292, 322, 327,
	342, 343, 344, 0, 345, 204, 0, 0, 0, 0,
	0, 902, 159, 170, 247, 843, 305, 218, 637, 644,
	663, 666, 667, 668, 669, 673, 678, 0, 684, 690,
	692, 693, 701, 706, 707, 708, 709, 716, 718, 719,
	720, 721, 722, 725, 726, 728, 735, 736, 742, 747,
	748, 754, 755, 0, 778, 781, 910, 792, 794, 798,
	799, 806, 811, 812, 837, 841, 846, 365, 201, 733,
	753, 784, 171, 179, 187, 199, 210, 217, 227, 230,
	234, 235, 237, 241, 254, 256, 257, 258, 259, 277,
	278, 281, 282, 285, 286, 289, 290, 291, 294, 295,
	301, 148, 307, 313, 314, 315, 316, 317, 325, 326,
	328, 329, 336, 356, 357, 370, 371, 816, 713, 156,
	0, 0, 162, 0, 0, 0, 0, 0, 700, 161,
	815, 839, 760, 774, 827, 0, 346, 892, 831, 674,
	697, 840, 703, 705, 768, 650, 745, 284, 694, 651,
	0, 0, 642, 887, 643, 675, 206, 885, 801, 746,
	829, 731, 761, 771, 205, 194, 738, 737, 818, 686,
	685, 766, 814, 828, 0, 0, 925, 249, 0, 0,
	368, 334, 268, 0, 0, 729, 0, 899, 912, 714,
	770, 662, 757, 833, 695, 762, 834, 0, 0, 0,
	0, 496, 0, 0, 0, 0, 0, 0, 0, 0,
	137, 0, 907, 921, 888, 0, 724, 767, 845, 641,
	904, 0, 646, 876, 0, 819, 682, 683, 209, 0,
	0, 0, 0, 0, 0, 0, 727, 744, 786, 711,
	0, 0, 363, 773, 782, 796, 704, 300, 223, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 903,
	0, 0, 0, 656, 872, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 893, 0, 0,
	0, 661, 639, 680, 788, 640, 638, 269, 653, 914,
	817, 712, 238, 154, 823, 710, 891, 776, 657, 805,
	698, 246, 655, 155, 652, 658, 696, 280, 785, 791,
	142, 158, 248, 802, 676, 689, 195, 0, 310, 763,
	362, 871, 749, 309, 250, 355, 777, 825, 361, 699,
	341, 369, 373, 216, 732, 186, 331, 207, 203, 681,
	795, 645, 224, 299, 198, 242, 715, 769, 677, 191,
	780, 756, 807, 330, 352, 160, 265, 353, 372, 177,
	347, 266, 273, 188, 190, 189, 172, 324, 351, 182,
	193, 803, 790, 809, 672, 659, 664, 660, 688, 826,
	233, 225, 810, 808, 366, 144, 319, 318, 702, 232,
	793, 145, 136, 306, 146, 239, 163, 813, 375, 176,
	244, 348, 870, 219, 279, 197, 765, 288, 687, 157,
	302, 261, 263, 260, 264, 222, 140, 147, 789, 304,
	321, 350, 178, 337, 138, 139, 141, 149, 312, 150,
	151, 832, 255, 211, 215, 226, 236, 764, 308, 338,
	367, 758, 173, 166, 340, 360, 183, 320, 323, 374,
	787, 168, 821, 804, 751, 717, 723, 647, 0, 167,
	783, 679, 691, 671, 759, 670, 221, 775, 358, 359,
	196, 376, 877, 836, 169, 865, 835, 276, 283, 275,
	838, 354, 822, 752, 741, 739, 648, 820, 750, 740,
	245, 214, 228, 297, 252, 298, 229, 271, 270, 272,
	861, 743, 0, 164, 0, 335, 830, 847, 339, 180,
	665, 797, 349, 143, 303, 181, 220, 212, 296, 866,
	864, 855, 856, 243, 251, 779, 844, 287, 311, 185,
	364, 332, 208, 882, 884, 880, 883, 881, 900, 901,
	922, 923, 924, 911, 878, 0, 919, 920, 0, 734,
	824, 649, 0, 800, 152, 153, 772, 842, 890, 192,
	131, 873, 874, 875, 132, 894, 895, 133, 134, 917,
	916, 915, 918, 135, 927, 926, 928, 879, 886, 889,
	896, 897, 898, 905, 906, 913, 908, 909, 730, 293,
	165, 175, 184, 202, 200, 213, 240, 262, 267, 292,
	322, 327, 342, 343, 344, 0, 345, 204, 0, 0,
	0, 0, 0, 902, 159, 170, 247, 843, 305, 218,
	637, 644, 663, 666, 667, 668, 669, 673, 678, 0,
	684, 690, 692, 693, 701, 706, 707, 708, 709, 716,
	718, 719, 720, 721, 722, 725, 726, 728, 735, 736,
	742, 747, 748, 754, 755, 0, 778, 781, 910, 792,
	794, 798, 799, 806, 811, 812, 837, 841, 846, 365,
	201, 733, 753, 784, 171, 179, 187, 199, 210, 217,
	227, 230, 234, 235, 237, 241, 254, 256, 257, 258,
	259, 277, 278, 281, 282, 285, 286, 289, 290, 291,
	862, 863, 301, 148, 307, 313, 314, 315, 316, 317,
	325, 326, 328, 329, 336, 356, 357, 370, 371, 816,
	713, 156, 0, 0, 162, 0, 0, 0, 0, 0,
	700, 161, 815, 839, 760, 774, 827, 0, 346, 892,
	831, 674, 697, 840, 703, 705, 768, 650, 745, 284,
	694, 651, 0, 0, 642, 887, 643, 675, 206, 885,
	801, 746, 829, 731, 761, 771, 205, 194, 738, 737,
	818, 686, 685, 766, 814, 828, 0, 0, 925, 249,
	0, 0, 368, 334, 268, 0, 0, 729, 0, 899,
	912, 714, 770, 662, 757, 833, 695, 762, 834, 0,
	0, 0, 0, 496, 0, 0, 0, 0, 0, 0,
	0, 0, 137, 0, 907, 921, 888, 0, 724, 767,
	845, 641, 904, 0, 646, 876, 0, 819, 682, 683,
	209, 0, 0, 0, 0, 0, 0, 0, 727, 744,
	786, 711, 0, 0, 363, 773, 782, 796, 704, 300,
	223, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 903, 0, 0, 0, 656, 872, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 893,
	0, 0, 0, 661, 639, 680, 788, 640, 638, 269,
	653, 914, 817, 712, 238, 154, 823, 710, 891, 776,
	657, 805, 698, 246, 655, 155, 652, 658, 696, 280,
	785, 791, 142, 158, 248, 802, 676, 689, 195, 0,
	310, 763, 362, 871, 749, 309, 250, 355, 777, 825,
	361, 699, 341, 369, 373, 216, 732, 186, 331, 207,
	203, 681, 795, 645, 224, 299, 198, 242, 715, 769,
	677, 191, 780, 756, 807, 330, 352, 160, 265, 353,
	372, 177, 347, 266, 273, 188, 190, 189, 172, 324,
	351, 182, 193, 803, 790, 809, 672, 659, 664, 660,
	688, 826, 233, 225, 810, 808, 366, 144, 319, 318,
	702, 232, 793, 145, 136, 306, 146, 239, 163, 813,
	375, 176, 244, 348, 870, 219, 279, 197, 765, 288,
	687, 157, 302, 261, 263, 260, 264, 222, 140, 147,
	789, 304, 321, 350, 178, 337, 138, 139, 141, 149,
	312, 150, 151, 832, 255, 211, 215, 226, 236, 764,
	308, 338, 367, 758, 173, 166, 340, 1300, 183, 320,
	323, 374, 787, 168, 821, 804, 751, 717, 723, 647,
	0, 167, 783, 679, 691, 671, 759, 670, 221, 775,
	358, 359, 196, 376, 877, 836, 169, 654, 835, 276,
	283, 275, 838, 354, 822, 752, 741, 739, 648, 820,
	750, 740, 245, 214, 228, 297, 252, 298, 229, 271,
	270, 272, 253, 743, 0, 164, 0, 335, 830, 847,
	339, 180, 665, 797, 349, 143, 303, 181, 220, 212,
	296, 274, 174, 231, 333, 243, 251, 779, 844, 287,
	311, 185, 364, 332, 208, 882, 884, 880, 883, 881,
	900, 901, 922, 923, 924, 911, 878, 0, 919, 920,
	0, 734, 824, 649, 0, 800, 152, 153, 772, 842,
	890, 192, 131, 873, 874, 875, 132, 894, 895, 133,
	134, 917, 916, 915, 918, 135, 927, 926, 928, 879,
	886, 889, 896, 897, 898, 905, 906, 913, 908, 909,
	730, 293, 165, 175, 184, 202, 200, 213, 240, 262,
	267, 292, 322, 327, 342, 343, 344, 0, 345, 204,
	0, 0, 0, 0, 0, 902, 159, 170, 247, 843,
	305, 218, 637, 644, 663, 666, 667, 668, 669, 673,
	678, 0, 684, 690, 692, 693, 701, 706, 707, 708,
	709, 716, 718, 719, 720, 721, 722, 725, 726, 728,
	735, 736, 742, 747, 748, 754, 755, 0, 778, 781,
	910, 792, 794, 798, 799, 806, 811, 812, 837, 841,
	846, 365, 201, 733, 753, 784, 171, 179, 187, 199,
	210, 217, 227, 230, 234, 235, 237, 241, 254, 256,
	257, 258, 259, 277, 278, 281, 282, 285, 286, 289,
	290, 291, 294, 295, 301, 148, 307, 313, 314, 315,
	316, 317, 325, 326, 328, 329, 336, 356, 357, 370,
	371, 816, 713, 156, 0, 0, 162, 0, 0, 0,
	0, 0, 700, 161, 815, 839, 760, 774, 827, 0,
	346, 892, 831, 674, 697, 840, 703, 705, 768, 650,
	745, 284, 694, 651, 0, 0, 642, 887, 643, 675,
	206, 885, 801, 746, 829, 731, 761, 771, 205, 194,
	738, 737, 818, 686, 685, 766, 814, 828, 0, 0,
	925, 249, 0, 0, 368, 334, 268, 0, 0, 729,
	0, 899, 912, 714, 770, 662, 757, 833, 695, 762,
	834, 0, 0, 0, 0, 496, 0, 0, 0, 0,
	0, 0, 0, 0, 137, 0, 907, 921, 888, 0,
	724, 767, 845, 641, 904, 0, 646, 876, 0, 819,
	682, 683, 209, 0, 0, 0, 0, 0, 0, 0,
	727, 744, 786, 711, 0, 0, 363, 773, 782, 796,
	704, 300, 223, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 903, 0, 0, 0, 656, 872, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 893, 0, 0, 0, 661, 639, 680, 788, 640,
	638, 269, 653, 914, 817, 712, 238, 154, 823, 710,
	891, 776, 657, 805, 698, 246, 655, 155, 652, 658,
	696, 280, 785, 791, 142, 158, 248, 802, 676, 689,
	195, 0, 310, 763, 362, 871, 749, 309, 250, 355,
	777, 825, 361, 699, 341, 369, 373, 216, 732, 186,
	331, 207, 203, 681, 795, 645, 224, 299, 198, 242,
	715, 769, 677, 191, 780, 756, 807, 330, 352, 160,
	265, 353, 372, 177, 347, 266, 273, 188, 190, 189,
	172, 324, 351, 182, 193, 803, 790, 809, 672, 659,
	664, 660, 688, 826, 233, 225, 810, 808, 366, 144,
	319, 318, 702, 232, 793, 145, 136, 306, 146, 239,
	163, 813, 375, 176, 244, 348, 870, 219, 279, 197,
	765, 288, 687, 157, 302, 261, 263, 260, 264, 222,
	140, 147, 789, 304, 321, 350, 178, 337, 138, 139,
	141, 149, 312, 150, 151, 832, 255, 211, 215, 226,
	236, 764, 308, 338, 367, 758, 173, 166, 340, 852,
	183, 320, 323, 374, 787, 168, 821, 804, 751, 717,
	723, 647, 0, 167, 783, 679, 691, 671, 759, 670,
	221, 775, 358, 359, 196, 376, 877, 836, 169, 865,
	835, 276, 283, 275, 838, 354, 822, 752, 741, 739,
	648, 820, 750, 740, 245, 214, 228, 297, 252, 298,
	229, 271, 270, 272, 861, 743, 0, 164, 0, 335,
	830, 847, 339, 180, 665, 797, 349, 143, 303, 181,
	220, 212, 296, 866, 864, 855, 856, 243, 251, 779,
	844, 287, 311, 185, 364, 332, 208, 882, 884, 880,
	883, 881, 900, 901, 922, 923, 924, 911, 878, 0,
	919, 920, 0, 734, 824, 649, 0, 800, 152, 153,
	772, 842, 890, 192, 131, 873, 874, 875, 132, 894,
	895, 133, 134, 917, 916, 915, 918, 135, 927, 926,
	928, 879, 886, 889, 896, 897, 898, 905, 906, 913,
	908, 909, 730, 293, 165, 175, 184, 202, 200, 213,
	240, 262, 267, 292, 322, 327, 342, 343, 344, 0,
	345, 204, 0, 0, 0, 0, 0, 902, 159, 170,
	247, 843, 305, 218, 637, 644, 663, 666, 667, 668,
	669, 673, 678, 0, 684, 690, 692, 693, 701, 706,
	707, 708, 709, 716, 718, 719, 720, 721, 722, 725,
	726, 728, 735, 736, 742, 747, 748, 754, 755, 0,
	778, 781, 910, 792, 794, 798, 799, 806, 811, 812,
	837, 841, 846, 365, 201, 733, 753, 784, 171, 179,
	187, 199, 210, 217, 227, 230, 234, 235, 237, 241,
	254, 256, 257, 258, 259, 277, 278, 281, 282, 285,
	286, 289, 290, 291, 862, 863, 301, 148, 307, 313,
	314, 315, 316, 317, 325, 326, 328, 329, 336, 356,
	357, 370, 371, 816, 713, 156, 0, 0, 162, 0,
	0, 0, 0, 0, 700, 161, 815, 839, 760, 774,
	1672, 1634, 346, 1527, 1676, 1477, 1506, 1693, 1512, 1515,
	1596, 1443, 1565, 284, 1503, 1444, 1427, 1482, 1431, 1494,
	1432, 1479, 206, 1475, 1637, 1568, 1674, 1547, 1589, 1599,
	205, 194, 1557, 1556, 1662, 1492, 1491, 1594, 1651, 1673,
	1546, 0, 1683, 249, 1648, 0, 368, 334, 268, 0,
	0, 1542, 1657, 1563, 1626, 1525, 1598, 1459, 1581, 1678,
	1504, 1590, 1679, 0, 0, 0, 0, 943, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1586, 1670,
	1497, 0, 1537, 1595, 1698, 1430, 1582, 0, 1435, 1446,
	1692, 1663, 1488, 1489, 209, 0, 0, 0, 0, 0,
	0, 0, 1540, 1564, 1616, 1522, 0, 0, 363, 1601,
	1611, 1629, 1514, 300, 223, 0, 0, 0, 0, 0,
	0, 3033, 0, 1484, 0, 1579, 0, 0, 0, 1451,
	1437, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1536, 0, 0, 0, 1458, 1428, 1486,
	1618, 1429, 1426, 269, 1447, 1631, 1661, 1523, 238, 0,
	1667, 1521, 1520, 1605, 1452, 1641, 1507, 246, 1450, 155,
	1445, 1453, 1505, 280, 1615, 1623, 0, 158, 248, 1638,
	1480, 1496, 195, 0, 310, 1591, 362, 0, 1572, 309,
	250, 355, 1606, 1669, 361, 1508, 341, 369, 373, 216,
	1548, 186, 331, 207, 203, 1487, 1628, 1434, 224, 299,
	198, 242, 1526, 1597, 1481, 191, 1609, 1580, 1643, 330,
	352, 160, 265, 353, 372, 177, 347, 266, 273, 188,
	190, 189, 172, 324, 351, 182, 193, 1639, 1622, 1645,
	1474, 1454, 1465, 1455, 1495, 1671, 233, 225, 1646, 1644,
	366, 0, 319, 318, 1511, 232, 1625, 0, 0, 306,
	0, 239, 163, 1650, 375, 176, 244, 348, 0, 219,
	279, 197, 1593, 288, 1493, 157, 302, 261, 263, 260,
	264, 222, 0, 0, 1621, 304, 321, 350, 178, 337,
	0, 0, 0, 0, 312, 0, 0, 1677, 255, 211,
	215, 226, 236, 1592, 308, 338, 367, 1583, 173, 166,
	340, 360, 183, 320, 323, 374, 1617, 168, 1665, 1640,
	1574, 1529, 1535, 1436, 0, 167, 1613, 1485, 1500, 1473,
	1587, 1472, 221, 1604, 358, 359, 196, 376, 1448, 1685,
	169, 1449, 1684, 276, 283, 275, 1688, 354, 1666, 1575,
	1560, 1558, 1441, 1664, 1573, 1559, 245, 214, 228, 297,
	252, 298, 229, 271, 270, 272, 253, 1562, 0, 164,
	0, 335, 1675, 1700, 339, 180, 1467, 1632, 349, 0,
	303, 181, 220, 212, 296, 274, 174, 231, 333, 243,
	251, 1608, 1697, 287, 311, 185, 364, 332, 208, 1463,
	1466, 1461, 1464, 1462, 1566, 1567, 1680, 1681, 1682, 1620,
	1456, 0, 1658, 1659, 0, 1553, 1668, 1442, 0, 1636,
	0, 0, 1600, 1695, 1513, 192, 0, 1438, 1439, 1440,
	0, 1543, 1544, 0, 0, 1654, 1653, 1652, 1655, 0,
	1689, 1687, 1690, 1457, 1478, 1499, 1549, 1550, 1552, 1584,
	1585, 1630, 1603, 1612, 1545, 293, 165, 175, 184, 202,
	200, 213, 240, 262, 267, 292, 322, 327, 342, 343,
	344, 0, 345, 204, 0, 0, 0, 0, 0, 1571,
	159, 170, 247, 1696, 305, 218, 1425, 1433, 1460, 1468,
	1469, 1470, 1471, 1476, 1483, 0, 1490, 1498, 1501, 1502,
	1510, 1516, 1517, 1518, 1519, 1528, 1530, 1531, 1532, 1533,
	1534, 1538, 1539, 1541, 1554, 1555, 1561, 1569, 1570, 1577,
	1578, 0, 1607, 1610, 1619, 1624, 1627, 1633, 1635, 1642,
	1647, 1649, 1686, 1694, 1699, 365, 201, 1551, 1576, 1614,
	171, 179, 187, 199, 210, 217, 227, 230, 234, 235,
	237, 241, 254, 256, 257, 258, 259, 277, 278, 281,
	282, 285, 286, 289, 290, 291, 294, 295, 301, 0,
	307, 313, 314, 315, 316, 317, 325, 326, 328, 329,
	336, 356, 357, 370, 371, 1660, 1524, 156, 0, 0,
	162, 0, 0, 0, 0, 0, 1509, 161, 1656, 1691,
	1588, 1602, 1672, 1634, 346, 1527, 1676, 1477, 1506, 1693,
	1512, 1515, 1596, 1443, 1565, 284, 1503, 1444, 1427, 1482,
	1431, 1494, 1432, 1479, 206, 1475, 1637, 1568, 1674, 1547,
	1589, 1599, 205, 194, 1557, 1556, 1662, 1492, 1491, 1594,
	1651, 1673, 1546, 0, 1683, 249, 1648, 0, 368, 334,
	268, 0, 0, 1542, 1657, 1563, 1626, 1525, 1598, 1459,
	1581, 1678, 1504, 1590, 1679, 0, 0, 0, 0, 943,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1586, 1670, 1497, 0, 1537, 1595, 1698, 1430, 1582, 0,
	1435, 1446, 1692, 1663, 1488, 1489, 209, 0, 0, 0,
	0, 0, 0, 0, 1540, 1564, 1616, 1522, 0, 0,
	363, 1601, 1611, 1629, 1514, 300, 223, 0, 0, 0,
	0, 0, 0, 2543, 0, 1484, 0, 1579, 0, 0,
	0, 1451, 1437, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1536, 0, 0, 0, 1458,
	1428, 1486, 1618, 1429, 1426, 269, 1447, 1631, 1661, 1523,
	238, 0, 1667, 1521, 1520, 1605, 1452, 1641, 1507, 246,
	1450, 155, 1445, 1453, 1505, 280, 1615, 1623, 0, 158,
	248, 1638, 1480, 1496, 195, 0, 310, 1591, 362, 0,
	1572, 309, 250, 355, 1606, 1669, 361, 1508, 341, 369,
	373, 216, 1548, 186, 331, 207, 203, 1487, 1628, 1434,
	224, 299, 198, 242, 1526, 1597, 1481, 191, 1609, 1580,
	1643, 330, 352, 160, 265, 353, 372, 177, 347, 266,
	273, 188, 190, 189, 172, 324, 351, 182, 193, 1639,
	1622, 1645, 1474, 1454, 1465, 1455, 1495, 1671, 233, 225,
	1646, 1644, 366, 0, 319, 318, 1511, 232, 1625, 0,
	0, 306, 0, 239, 163, 1650, 375, 176, 244, 348,
	0, 219, 279, 197, 1593, 288, 1493, 157, 302, 261,
	263, 260, 264, 222, 0, 0, 1621, 304, 321, 350,
	178, 337, 0, 0, 0, 0, 312, 0, 0, 1677,
	255, 211, 215, 226, 236, 1592, 308, 338, 367, 1583,
	173, 166, 340, 360, 183, 320, 323, 374, 1617, 168,
	1665, 1640, 1574, 1529, 1535, 1436, 0, 167, 1613, 1485,
	1500, 1473, 1587, 1472, 221, 1604, 358, 359, 196, 376,
	1448, 1685, 169, 1449, 1684, 276, 283, 275, 1688, 354,
	1666, 1575, 1560, 1558, 1441, 1664, 1573, 1559, 245, 214,
	228, 297, 252, 298, 229, 271, 270, 272, 253, 1562,
	0, 164, 0, 335, 1675, 1700, 339, 180, 1467, 1632,
	349, 0, 303, 181, 220, 212, 296, 274, 174, 231,
	333, 243, 251, 1608, 1697, 287, 311, 185, 364, 332,
	208, 1463, 1466, 1461, 1464, 1462, 1566, 1567, 1680, 1681,
	1682, 1620, 1456, 0, 1658, 1659, 0, 1553, 1668, 1442,
	0, 1636, 0, 0, 1600, 1695, 1513, 192, 0, 1438,
	1439, 1440, 0, 1543, 1544, 0, 0, 1654, 1653, 1652,
	1655, 0, 1689, 1687, 1690, 1457, 1478, 1499, 1549, 1550,
	1552, 1584, 1585, 1630, 1603, 1612, 1545, 293, 165, 175,
	184, 202, 200, 213, 240, 262, 267, 292, 322, 327,
	342, 343, 344, 0, 345, 204, 0, 0, 0, 0,
	0, 1571, 159, 170, 247, 1696, 305, 218, 1425, 1433,
	1460, 1468, 1469, 1470, 1471, 1476, 1483, 0, 1490, 1498,
	1501, 1502, 1510, 1516, 1517, 1518, 1519, 1528, 1530, 1531,
	1532, 1533, 1534, 1538, 1539, 1541, 1554, 1555, 1561, 1569,
	1570, 1577, 1578, 0, 1607, 1610, 1619, 1624, 1627, 1633,
	1635, 1642, 1647, 1649, 1686, 1694, 1699, 365, 201, 1551,
	1576, 1614, 171, 179, 187, 199, 210, 217, 227, 230,
	234, 235, 237, 241, 254, 256, 257, 258, 259, 277,
	278, 281, 282, 285, 286, 289, 290, 291, 294, 295,
	301, 0, 307, 313, 314, 315, 316, 317, 325, 326,
	328, 329, 336, 356, 357, 370, 371, 1660, 1524, 156,
	0, 0, 162, 0, 0, 0, 0, 0, 1509, 161,
	1656, 1691, 1588, 1602, 1672, 1634, 346, 1527, 1676, 1477,
	1506, 1693, 1512, 1515, 1596, 1443, 1565, 284, 1503, 1444,
	1427, 1482, 1431, 1494, 1432, 1479, 206, 1475, 1637, 1568,
	1674, 1547, 1589, 1599, 205, 194, 1557, 1556, 1662, 1492,
	1491, 1594, 1651, 1673, 1546, 0, 1683, 249, 1648, 0,
	368, 334, 268, 0, 0, 1542, 1657, 1563, 1626, 1525,
	1598, 1459, 1581, 1678, 1504, 1590, 1679, 0, 0, 0,
	0, 129, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1586, 1670, 1497, 0, 1537, 1595, 1698, 1430,
	1582, 0, 1435, 1446, 1692, 1663, 1488, 1489, 209, 0,
	0, 0, 0, 0, 0, 0, 1540, 1564, 1616, 1522,
	0, 0, 363, 1601, 1611, 1629, 1514, 300, 223, 0,
	0, 0, 0, 0, 0, 2330, 0, 1484, 0, 1579,
	0, 0, 0, 1451, 1437, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1536, 0, 0,
	0, 1458, 1428, 1486, 1618, 1429, 1426, 269, 1447, 1631,
	1661, 1523, 238, 0, 1667, 1521, 1520, 1605, 1452, 1641,
	1507, 246, 1450, 155, 1445, 1453, 1505, 280, 1615, 1623,
	0, 158, 248, 1638, 1480, 1496, 195, 0, 310, 1591,
	362, 0, 1572, 309, 250, 355, 1606, 1669, 361, 1508,
	341, 369, 373, 216, 1548, 186, 331, 207, 203, 1487,
	1628, 1434, 224, 299, 198, 242, 1526, 1597, 1481, 191,
	1609, 1580, 1643, 330, 352, 160, 265, 353, 372, 177,
	347, 266, 273, 188, 190, 189, 172, 324, 351, 182,
	193, 1639, 1622, 1645, 1474, 1454, 1465, 1455, 1495, 1671,
	233, 225, 1646, 1644, 366, 0, 319, 318, 1511, 232,
	1625, 0, 0, 306, 0, 239, 163, 1650, 375, 176,
	244, 348, 0, 219, 279, 197, 1593, 288, 1493, 157,
	302, 261, 263, 260, 264, 222, 0, 0, 1621, 304,
	321, 350, 178, 337, 0, 0, 0, 0, 312, 0,
	0, 1677, 255, 211, 215, 226, 236, 1592, 308, 338,
	367, 1583, 173, 166, 340, 360, 183, 320, 323, 374,
	1617, 168, 1665, 1640, 1574, 1529, 1535, 1436, 0, 167,
	1613, 1485, 1500, 1473, 1587, 1472, 221, 1604, 358, 359,
	196, 376, 1448, 1685, 169, 1449, 1684, 276, 283, 275,
	1688, 354, 1666, 1575, 1560, 1558, 1441, 1664, 1573, 1559,
	245, 214, 228, 297, 252, 298, 229, 271, 270, 272,
	253, 1562, 0, 164, 0, 335, 1675, 1700, 339, 180,
	1467, 1632, 349, 0, 303, 181, 220, 212, 296, 274,
	174, 231, 333, 243, 251, 1608, 1697, 287, 311, 185,
	364, 332, 208, 1463, 1466, 1461, 1464, 1462, 1566, 1567,
	1680, 1681, 1682, 1620, 1456, 0, 1658, 1659, 0, 1553,
	1668, 1442, 0, 1636, 0, 0, 1600, 1695, 1513, 192,
	0, 1438, 1439, 1440, 0, 1543, 1544, 0, 0, 1654,
	1653, 1652, 1655, 0, 1689, 1687, 1690, 1457, 1478, 1499,
	1549, 1550, 1552, 1584, 1585, 1630, 1603, 1612, 1545, 293,
	165, 175, 184, 202, 200, 213, 240, 262, 267, 292,
	322, 327, 342, 343, 344, 0, 345, 204, 0, 0,
	0, 0, 0, 1571, 159, 170, 247, 1696, 305, 218,
	1425, 1433, 1460, 1468, 1469, 1470, 1471, 1476, 1483, 0,
	1490, 1498, 1501, 1502, 1510, 1516, 1517, 1518, 1519, 1528,
	1530, 1531, 1532, 1533, 1534, 1538, 1539, 1541, 1554, 1555,
	1561, 1569, 1570, 1577, 1578, 0, 1607, 1610, 1619, 1624,
	1627, 1633, 1635, 1642, 1647, 1649, 1686, 1694, 1699, 365,
	201, 1551, 1576, 1614, 171, 179, 187, 199, 210, 217,
	227, 230, 234, 235, 237, 241, 254, 256, 257, 258,
	259, 277, 278, 281, 282, 285, 286, 289, 290, 291,
	294, 295, 301, 0, 307, 313, 314, 315, 316, 317,
	325, 326, 328, 329, 336, 356, 357, 370, 371, 1660,
	1524, 156, 0, 0, 162, 0, 0, 0, 0, 0,
	1509, 161, 1656, 1691, 1588, 1602, 1672, 1634, 346, 1527,
	1676, 1477, 1506, 1693, 1512, 1515, 1596, 1443, 1565, 284,
	1503, 1444, 1427, 1482, 1431, 1494, 1432, 1479, 206, 1475,
	1637, 1568, 1674, 1547, 1589, 1599, 205, 194, 1557, 1556,
	1662, 1492, 1491, 1594, 1651, 1673, 1546, 0, 1683, 249,
	1648, 0, 368, 334, 268, 0, 0, 1542, 1657, 1563,
	1626, 1525, 1598, 1459, 1581, 1678, 1504, 1590, 1679, 0,
	0, 0, 0, 943, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1586, 1670, 1497, 0, 1537, 1595,
	1698, 1430, 1582, 0, 1435, 1446, 1692, 1663, 1488, 1489,
	209, 0, 0, 0, 0, 0, 0, 0, 1540, 1564,
	1616, 1522, 0, 0, 363, 1601, 1611, 1629, 1514, 300,
	223, 0, 0, 0, 0, 0, 0, 0, 0, 1484,
	0, 1579, 0, 0, 0, 1451, 1437, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1536,
	0, 0, 0, 1458, 1428, 1486, 1618, 1429, 1426, 269,
	1447, 1631, 1661, 1523, 238, 0, 1667, 1521, 1520, 1605,
	1452, 1641, 1507, 246, 1450, 155, 1445, 1453, 1505, 280,
	1615, 1623, 0, 158, 248, 1638, 1480, 1496, 195, 0,
	310, 1591, 362, 0, 1572, 309, 250, 355, 1606, 1669,
	361, 1508, 341, 369, 373, 216, 1548, 186, 331, 207,
	203, 1487, 1628, 1434, 224, 299, 198, 242, 1526, 1597,
	1481, 191, 1609, 1580, 1643, 330, 352, 160, 265, 353,
	372, 177, 347, 266, 273, 188, 190, 189, 172, 324,
	351, 182, 193, 1639, 1622, 1645, 1474, 1454, 1465, 1455,
	1495, 1671, 233, 225, 1646, 1644, 366, 0, 319, 318,
	1511, 232, 1625, 0, 0, 306, 0, 239, 163, 1650,
	375, 176, 244, 348, 0, 219, 279, 197, 1593, 288,
	1493, 157, 302, 261, 263, 260, 264, 222, 0, 0,
	1621, 304, 321, 350, 178, 337, 0, 0, 0, 0,
	312, 0, 0, 1677, 255, 211, 215, 226, 236, 1592,
	308, 338, 367, 1583, 173, 166, 340, 360, 183, 320,
	323, 374, 1617, 168, 1665, 1640, 1574, 1529, 1535, 1436,
	0, 167, 1613, 1485, 1500, 1473, 1587, 1472, 221, 1604,
	358, 359, 196, 376, 1448, 1685, 169, 1449, 1684, 276,
	283, 275, 1688, 354, 1666, 1575, 1560, 1558, 1441, 1664,
	1573, 1559, 245, 214, 228, 297, 252, 298, 229, 271,
	270, 272, 253, 1562, 0, 164, 0, 335, 1675, 1700,
	339, 180, 1467, 1632, 349, 1883, 303, 181, 220, 212,
	296, 274, 174, 231, 333, 243, 251, 1608, 1697, 287,
	311, 185, 364, 332, 208, 1463, 1466, 1461, 1464, 1462,
	1566, 1567, 1680, 1681, 1682, 1620, 1456, 0, 1658, 1659,
	0, 1553, 1668, 1442, 0, 1636, 0, 0, 1600, 1695,
	1513, 192, 0, 1438, 1439, 1440, 0, 1543, 1544, 0,
	0, 1654, 1653, 1652, 1655, 0, 1689, 1687, 1690, 1457,
	1478, 1499, 1549, 1550, 1552, 1584, 1585, 1630, 1603, 1612,
	1545, 293, 165, 175, 184, 202, 200, 213, 240, 262,
	267, 292, 322, 327, 342, 343, 344, 0, 345, 204,
	0, 0, 0, 0, 0, 1571, 159, 170, 247, 1696,
	305, 218, 1425, 1433, 1460, 1468, 1469, 1470, 1471, 1476,
	1483, 0, 1490, 1498, 1501, 1502, 1510, 1516, 1517, 1518,
	1519, 1528, 1530, 1531, 1532, 1533, 1534, 1538, 1539, 1541,
	1554, 1555, 1561, 1569, 1570, 1577, 1578, 0, 1607, 1610,
	1619, 1624, 1627, 1633, 1635, 1642, 1647, 1649, 1686, 1694,
	1699, 365, 201, 1551, 1576, 1614, 171, 179, 187, 199,
	210, 217, 227, 230, 234, 235, 237, 241, 254, 256,
	257, 258, 259, 277, 278, 281, 282, 285, 286, 289,
	290, 291, 294, 295, 301, 0, 307, 313, 314, 315,
	316, 317, 325, 326, 328, 329, 336, 356, 357, 370,
	371, 1660, 1524, 156, 0, 0, 162, 0, 0, 0,
	0, 0, 1509, 161, 1656, 1691, 1588, 1602, 1672, 1634,
	346, 1527, 1676, 1477, 1506, 1693, 1512, 1515, 1596, 1443,
	1565, 284, 1503, 1444, 1427, 1482, 1431, 1494, 1432, 1479,
	206, 1475, 1637, 1568, 1674, 1547, 1589, 1599, 205, 194,
	1557, 1556, 1662, 1492, 1491, 1594, 1651, 1673, 1546, 0,
	1683, 249, 1648, 0, 368, 334, 268, 0, 0, 1542,
	1657, 1563, 1626, 1525, 1598, 1459, 1581, 1678, 1504, 1590,
	1679, 0, 0, 0, 0, 943, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1586, 1670, 1497, 0,
	1537, 1595, 1698, 1430, 1582, 0, 1435, 1446, 1692, 1663,
	1488, 1489, 209, 0, 0, 0, 0, 0, 0, 0,
	1540, 1564, 1616, 1522, 0, 0, 363, 1601, 1611, 1629,
	1514, 300, 223, 0, 0, 0, 0, 0, 0, 0,
	0, 1484, 0, 1579, 0, 0, 0, 1451, 1437, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1536, 0, 0, 0, 1458, 1428, 1486, 1618, 1429,
	1426, 269, 1447, 1631, 1661, 1523, 238, 0, 1667, 1521,
	1520, 1605, 1452, 1641, 1507, 246, 1450, 155, 1445, 1453,
	1505, 280, 1615, 1623, 0, 158, 248, 1638, 1480, 1496,
	195, 0, 310, 1591, 362, 0, 1572, 309, 250, 355,
	1606, 1669, 361, 1508, 341, 369, 373, 216, 1548, 186,
	331, 207, 203, 1487, 1628, 1434, 224, 299, 198, 242,
	1526, 1597, 1481, 191, 1609, 1580, 1643, 330, 352, 160,
	265, 353, 372, 177, 347, 266, 273, 188, 190, 189,
	172, 324, 351, 182, 193, 1639, 1622, 1645, 1474, 1454,
	1465, 1455, 1495, 1671, 233, 225, 1646, 1644, 366, 0,
	319, 318, 1511, 232, 1625, 0, 0, 306, 0, 239,
	163, 1650, 375, 176, 244, 348, 0, 219, 279, 197,
	1593, 288, 1493, 157, 302, 261, 263, 260, 264, 222,
	0, 0, 1621, 304, 321, 350, 178, 337, 0, 0,
	0, 0, 312, 0, 0, 1677, 255, 211, 215, 226,
	236, 1592, 308, 338, 367, 1583, 173, 166, 340, 360,
	183, 320, 323, 374, 1617, 168, 1665, 1640, 1574, 1529,
	1535, 1436, 0, 167, 1613, 1485, 1500, 1473, 1587, 1472,
	221, 1604, 358, 359, 196, 376, 1448, 1685, 169, 1449,
	1684, 276, 283, 275, 1688, 354, 1666, 1575, 1560, 1558,
	1441, 1664, 1573, 1559, 245, 214, 228, 297, 252, 298,
	229, 271, 270, 272, 253, 1562, 0, 164, 0, 335,
	1675, 1700, 339, 180, 1467, 1632, 349, 0, 303, 181,
	220, 212, 296, 274, 174, 231, 333, 243, 251, 1608,
	1697, 287, 311, 185, 364, 332, 208, 1463, 1466, 1461,
	1464, 1462, 1566, 1567, 1680, 1681, 1682, 1620, 1456, 0,
	1658, 1659, 0, 1553, 1668, 1442, 0, 1636, 0, 0,
	1600, 1695, 1513, 192, 0, 1438, 1439, 1440, 0, 1543,
	1544, 0, 0, 1654, 1653, 1652, 1655, 0, 1689, 1687,
	1690, 1457, 1478, 1499, 1549, 1550, 1552, 1584, 1585, 1630,
	1603, 1612, 1545, 293, 165, 175, 184, 202, 200, 213,
	240, 262, 267, 292, 322, 327, 342, 343, 344, 0,
	345, 204, 0, 0, 0, 0, 0, 1571, 159, 170,
	247, 1696, 305, 218, 1425, 1433, 1460, 1468, 1469, 1470,
	1471, 1476, 1483, 0, 1490, 1498, 1501, 1502, 1510, 1516,
	1517, 1518, 1519, 1528, 1530, 1531, 1532, 1533, 1534, 1538,
	1539, 1541, 1554, 1555, 1561, 1569, 1570, 1577, 1578, 0,
	1607, 1610, 1619, 1624, 1627, 1633, 1635, 1642, 1647, 1649,
	1686, 1694, 1699, 365, 201, 1551, 1576, 1614, 171, 179,
	187, 199, 210, 217, 227, 230, 234, 235, 237, 241,
	254, 256, 257, 258, 259, 277, 278, 281, 282, 285,
	286, 289, 290, 291, 294, 295, 301, 0, 307, 313,
	314, 315, 316, 317, 325, 326, 328, 329, 336, 356,
	357, 370, 371, 1660, 1524, 156, 0, 0, 162, 0,
	0, 0, 0, 0, 1509, 161, 1656, 1691, 1588, 1602,
	1672, 1634, 346, 1527, 1676, 1477, 1506, 1693, 1512, 1515,
	1596, 1443, 1565, 284, 1503, 1444, 1427, 1482, 1431, 1494,
	1432, 1479, 206, 1475, 1637, 1568, 1674, 1547, 1589, 1599,
	205, 194, 1557, 1556, 1662, 1492, 1491, 1594, 1651, 1673,
	1546, 0, 1683, 249, 1648, 0, 368, 334, 268, 0,
	0, 1542, 1657, 1563, 1626, 1525, 1598, 1459, 1581, 1678,
	1504, 1590, 1679, 0, 0, 0, 0, 3351, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1586, 1670,
	1497, 0, 1537, 1595, 1698, 1430, 1582, 0, 1435, 1446,
	1692, 1663, 1488, 1489, 209, 0, 0, 0, 0, 0,
	0, 0, 1540, 1564, 1616, 1522, 0, 0, 363, 1601,
	1611, 1629, 1514, 300, 223, 0, 0, 0, 0, 0,
	0, 0, 0, 1484, 0, 1579, 0, 0, 0, 1451,
	1437, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1536, 0, 0, 0, 1458, 1428, 1486,
	1618, 1429, 1426, 269, 1447, 1631, 1661, 1523, 238, 0,
	1667, 1521, 1520, 1605, 1452, 1641, 1507, 246, 1450, 155,
	1445, 1453, 1505, 280, 1615, 1623, 0, 158, 248, 1638,
	1480, 1496, 195, 0, 310, 1591, 362, 0, 1572, 309,
	250, 355, 1606, 1669, 361, 1508, 341, 369, 373, 216,
	1548, 186, 331, 207, 203, 1487, 1628, 1434, 224, 299,
	198, 242, 1526, 1597, 1481, 191, 1609, 1580, 1643, 330,
	352, 160, 265, 353, 372, 177, 347, 266, 273, 188,
	190, 189, 172, 324, 351, 182, 193, 1639, 1622, 1645,
	1474, 1454, 1465, 3354, 3355, 3356, 233, 225, 1646, 1644,
	366, 0, 319, 318, 1511, 232, 1625, 0, 0, 306,
	0, 239, 163, 1650, 375, 176, 244, 348, 0, 219,
	279, 197, 1593, 288, 1493, 157, 302, 261, 263, 260,
	264, 222, 0, 0, 1621, 304, 321, 350, 178, 337,
	0, 0, 0, 0, 312, 0, 0, 1677, 255, 211,
	215, 226, 236, 1592, 308, 338, 367, 1583, 173, 166,
	340, 360, 183, 320, 323, 374, 1617, 168, 1665, 1640,
	1574, 1529, 1535, 1436, 0, 167, 1613, 1485, 1500, 1473,
	1587, 1472, 221, 1604, 358, 359, 196, 376, 1448, 1685,
	169, 1449, 1684, 276, 283, 275, 1688, 354, 1666, 1575,
	1560, 1558, 1441, 1664, 1573, 1559, 245, 214, 228, 297,
	252, 298, 229, 271, 270, 272, 253, 1562, 0, 164,
	0, 335, 1675, 1700, 339, 180, 1467, 1632, 349, 0,
	303, 181, 220, 212, 296, 274, 174, 231, 333, 243,
	251, 1608, 1697, 287, 311, 185, 364, 332, 208, 1463,
	1466, 1461, 1464, 1462, 1566, 1567, 1680, 1681, 1682, 1620,
	1456, 0, 1658, 1659, 0, 1553, 1668, 1442, 0, 1636,
	0, 0, 1600, 1695, 1513, 192, 0, 1438, 1439, 1440,
	0, 1543, 1544, 0, 0, 1654, 1653, 1652, 1655, 0,
	1689, 1687, 1690, 1457, 1478, 1499, 1549, 1550, 1552, 1584,
	1585, 1630, 1603, 1612, 1545, 293, 165, 175, 184, 202,
	200, 213, 240, 262, 267, 292, 322, 327, 342, 343,
	344, 0, 345, 204, 0, 0, 0, 0, 0, 1571,
	159, 170, 247, 1696, 305, 218, 1425, 1433, 1460, 1468,
	1469, 1470, 1471, 1476, 1483, 0, 1490, 1498, 1501, 1502,
	1510, 1516, 1517, 1518, 1519, 1528, 1530, 1531, 1532, 1533,
	1534, 1538, 1539, 1541, 1554, 1555, 1561, 1569, 1570, 1577,
	1578, 0, 1607, 1610, 1619, 1624, 1627, 1633, 1635, 1642,
	1647, 1649, 1686, 1694, 1699, 365, 201, 1551, 1576, 1614,
	171, 179, 187, 199, 210, 217, 227, 230, 234, 235,
	237, 241, 254, 256, 257, 258, 259, 277, 278, 281,
	282, 285, 286, 289, 290, 291, 294, 295, 301, 0,
	307, 313, 314, 315, 316, 317, 325, 326, 328, 329,
	336, 356, 357, 370, 371, 1660, 1524, 156, 0, 0,
	162, 0, 0, 0, 0, 0, 1509, 161, 1656, 1691,
	1588, 1602, 1672, 1634, 346, 1527, 1676, 1477, 1506, 1693,
	1512, 1515, 1596, 1443, 1565, 284, 1503, 1444, 1427, 1482,
	1431, 1494, 1432, 1479, 206, 1475, 1637, 1568, 1674, 1547,
	1589, 1599, 205, 194, 1557, 1556, 1662, 1492, 1491, 1594,
	1651, 1673, 1546, 0, 1683, 249, 1648, 0, 368, 334,
	268, 0, 0, 1542, 1657, 1563, 1626, 1525, 1598, 1459,
	1581, 1678, 1504, 1590, 1679, 0, 0, 0, 0, 2668,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1586, 1670, 1497, 0, 1537, 1595, 1698, 1430, 1582, 0,
	1435, 1446, 1692, 1663, 1488, 1489, 209, 0, 0, 0,
	0, 0, 0, 0, 1540, 1564, 1616, 1522, 0, 0,
	363, 1601, 1611, 1629, 1514, 300, 223, 0, 0, 0,
	0, 0, 0, 0, 0, 1484, 0, 1579, 0, 0,
	0, 1451, 1437, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1536, 0, 0, 0, 1458,
	1428, 1486, 1618, 1429, 1426, 269, 1447, 1631, 1661, 1523,
	238, 0, 1667, 1521, 1520, 1605, 1452, 1641, 1507, 246,
	1450, 155, 1445, 1453, 1505, 280, 1615, 1623, 0, 158,
	248, 1638, 1480, 1496, 195, 0, 310, 1591, 362, 0,
	1572, 309, 250, 355, 1606, 1669, 361, 1508, 341, 369,
	373, 216, 1548, 186, 331, 207, 203, 1487, 1628, 1434,
	224, 299, 198, 242, 1526, 1597, 1481, 191, 1609, 1580,
	1643, 330, 352, 160, 265, 353, 372, 177, 347, 266,
	273, 188, 190, 189, 172, 324, 351, 182, 193, 1639,
	1622, 1645, 1474, 1454, 1465, 1455, 1495, 1671, 233, 225,
	1646, 1644, 366, 0, 319, 318, 1511, 232, 1625, 0,
	0, 306, 0, 239, 163, 1650, 375, 176, 244, 348,
	0, 219, 279, 197, 1593, 288, 1493, 157, 302, 261,
	263, 260, 264, 222, 0, 0, 1621, 304, 321, 350,
	178, 337, 0, 0, 0, 0, 312, 0, 0, 1677,
	255, 211, 215, 226, 236, 1592, 308, 338, 367, 1583,
	173, 166, 340, 360, 183, 320, 323, 374, 1617, 168,
	1665, 1640, 1574, 1529, 1535, 1436, 0, 167, 1613, 1485,
	1500, 1473, 1587, 1472, 221, 1604, 358, 359, 196, 376,
	1448, 1685, 169, 1449, 1684, 276, 283, 275, 1688, 354,
	1666, 1575, 1560, 1558, 1441, 1664, 1573, 1559, 245, 214,
	228, 297, 252, 298, 229, 271, 270, 272, 253, 1562,
	0, 164, 0, 335, 1675, 1700, 339, 180, 1467, 1632,
	349, 0, 303, 181, 220, 212, 296, 274, 174, 231,
	333, 243, 251, 1608, 1697, 287, 311, 185, 364, 332,
	208, 1463, 1466, 1461, 1464, 1462, 1566, 1567, 1680, 1681,
	1682, 1620, 1456, 0, 1658, 1659, 0, 1553, 1668, 1442,
	0, 1636, 0, 0, 1600, 1695, 1513, 192, 0, 1438,
	1439, 1440, 0, 1543, 1544, 0, 0, 1654, 1653, 1652,
	1655, 0, 1689, 1687, 1690, 1457, 1478, 1499, 1549, 1550,
	1552, 1584, 1585, 1630, 1603, 1612, 1545, 293, 165, 175,
	184, 202, 200, 213, 240, 262, 267, 292, 322, 327,
	342, 343, 344, 0, 345, 204, 0, 0, 0, 0,
	0, 1571, 159, 170, 247, 1696, 305, 218, 1425, 1433,
	1460, 1468, 1469, 1470, 1471, 1476, 1483, 0, 1490, 1498,
	1501, 1502, 1510, 1516, 1517, 1518, 1519, 1528, 1530, 1531,
	1532, 1533, 1534, 1538, 1539, 1541, 1554, 1555, 1561, 1569,
	1570, 1577, 1578, 0, 1607, 1610, 1619, 1624, 1627, 1633,
	1635, 1642, 1647, 1649, 1686, 1694, 1699, 365, 201, 1551,
	1576, 1614, 171, 179, 187, 199, 210, 217, 227, 230,
	234, 235, 237, 241, 254, 256, 257, 258, 259, 277,
	278, 281, 282, 285, 286, 289, 290, 291, 294, 295,
	301, 0, 307, 313, 314, 315, 316, 317, 325, 326,
	328, 329, 336, 356, 357, 370, 371, 1660, 1524, 156,
	0, 0, 162, 0, 0, 0, 0, 0, 1509, 161,
	1656, 1691, 1588, 1602, 1672, 1634, 346, 1527, 1676, 1477,
	1506, 1693, 1512, 1515, 1596, 1443, 1565, 284, 1503, 1444,
	1427, 1482, 1431, 1494, 1432, 1479, 206, 1475, 1637, 1568,
	1674, 1547, 1589, 1599, 205, 194, 1557, 1556, 1662, 1492,
	1491, 1594, 1651, 1673, 1546, 0, 1683, 249, 1648, 0,
	368, 334, 268, 0, 0, 1542, 1657, 1563, 1626, 1525,
	1598, 1459, 1581, 1678, 1504, 1590, 1679, 0, 0, 0,
	0, 129, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1586, 1670, 1497, 0, 1537, 1595, 1698, 1430,
	1582, 0, 1435, 1446, 1692, 1663, 1488, 1489, 209, 0,
	0, 0, 0, 0, 0, 0, 1540, 1564, 1616, 1522,
	0, 0, 363, 1601, 1611, 1629, 1514, 300, 223, 0,
	0, 0, 0, 0, 0, 0, 0, 1484, 0, 1579,
	0, 0, 0, 1451, 1437, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1536, 0, 0,
	0, 1458, 1428, 1486, 1618, 1429, 1426, 269, 1447, 1631,
	1661, 1523, 238, 0, 1667, 1521, 1520, 1605, 1452, 1641,
	1507, 246, 1450, 155, 1445, 1453, 1505, 280, 1615, 1623,
	0, 158, 248, 1638, 1480, 1496, 195, 0, 310, 1591,
	362, 0, 1572, 309, 250, 355, 1606, 1669, 361, 1508,
	341, 369, 373, 216, 1548, 186, 331, 207, 203, 1487,
	1628, 1434, 224, 299, 198, 242, 1526, 1597, 1481, 191,
	1609, 1580, 1643, 330, 352, 160, 265, 353, 372, 177,
	347, 266, 273, 188, 190, 189, 172, 324, 351, 182,
	193, 1639, 1622, 1645, 1474, 1454, 1465, 1455, 1495, 1671,
	233, 225, 1646, 1644, 366, 0, 319, 318, 1511, 232,
	1625, 0, 0, 306, 0, 239, 163, 1650, 375, 176,
	244, 348, 0, 219, 279, 197, 1593, 288, 1493, 157,
	302, 261, 263, 260, 264, 222, 0, 0, 1621, 304,
	321, 350, 178, 337, 0, 0, 0, 0, 312, 0,
	0, 1677, 255, 211, 215, 226, 236, 1592, 308, 338,
	367, 1583, 173, 166, 340, 360, 183, 320, 323, 374,
	1617, 168, 1665, 1640, 1574, 1529, 1535, 1436, 0, 167,
	1613, 1485, 1500, 1473, 1587, 1472, 221, 1604, 358, 359,
	196, 376, 1448, 1685, 169, 1449, 1684, 276, 283, 275,
	1688, 354, 1666, 1575, 1560, 1558, 1441, 1664, 1573, 1559,
	245, 214, 228, 297, 252, 298, 229, 271, 270, 272,
	253, 1562, 0, 164, 0, 335, 1675, 1700, 339, 180,
	1467, 1632, 349, 0, 303, 181, 220, 212, 296, 274,
	174, 231, 333, 243, 251, 1608, 1697, 287, 311, 185,
	364, 332, 208, 1463, 1466, 1461, 1464, 1462, 1566, 1567,
	1680, 1681, 1682, 1620, 1456, 0, 1658, 1659, 0, 1553,
	1668, 1442, 0, 1636, 0, 0, 1600, 1695, 1513, 192,
	0, 1438, 1439, 1440, 0, 1543, 1544, 0, 0, 1654,
	1653, 1652, 1655, 0, 1689, 1687, 1690, 1457, 1478, 1499,
	1549, 1550, 1552, 1584, 1585, 1630, 1603, 1612, 1545, 293,
	165, 175, 184, 202, 200, 213, 240, 262, 267, 292,
	322, 327, 342, 343, 344, 0, 345, 204, 0, 0,
	0, 0, 0, 1571, 159, 170, 247, 1696, 305, 218,
	1425, 1433, 1460, 1468, 1469, 1470, 1471, 1476, 1483, 0,
	1490, 1498, 1501, 1502, 1510, 1516, 1517, 1518, 1519, 1528,
	1530, 1531, 1532, 1533, 1534, 1538, 1539, 1541, 1554, 1555,
	1561, 1569, 1570, 1577, 1578, 0, 1607, 1610, 1619, 1624,
	1627, 1633, 1635, 1642, 1647, 1649, 1686, 1694, 1699, 365,
	201, 1551, 1576, 1614, 171, 179, 187, 199, 210, 217,
	227, 230, 234, 235, 237, 241, 254, 256, 257, 258,
	259, 277, 278, 281, 282, 285, 286, 289, 290, 291,
	294, 295, 301, 0, 307, 313, 314, 315, 316, 317,
	325, 326, 328, 329, 336, 356, 357, 370, 371, 1660,
	1524, 156, 0, 0, 162, 346, 0, 0, 0, 0,
	1509, 161, 1656, 1691, 1588, 1602, 284, 0, 0, 0,
	0, 0, 0, 0, 0, 206, 0, 0, 0, 0,
	0, 0, 0, 205, 194, 0, 0, 0, 0, 0,
	0, 0, 2034, 2038, 0, 0, 249, 0, 947, 368,
	334, 268, 950, 949, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	943, 0, 0, 0, 0, 0, 0, 0, 0, 137,
	0, 0, 0, 0, 948, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 363, 0, 0, 0, 0, 300, 223, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	2037, 238, 154, 0, 0, 0, 2031, 0, 2032, 2033,
	246, 951, 155, 0, 2029, 2036, 280, 0, 0, 142,
	158, 248, 0, 0, 0, 195, 940, 310, 0, 362,
	946, 0, 309, 250, 355, 0, 0, 361, 0, 341,
	369, 373, 216, 0, 186, 331, 207, 203, 0, 0,
	0, 224, 299, 198, 242, 0, 0, 0, 191, 0,
	0, 0, 330, 352, 160, 265, 353, 372, 177, 347,
	266, 273, 188, 190, 189, 172, 324, 351, 182, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	225, 0, 0, 366, 144, 319, 318, 0, 232, 0,
	145, 136, 306, 146, 239, 163, 0, 375, 176, 244,
	348, 945, 219, 279, 197, 0, 288, 0, 157, 302,
	261, 263, 260, 264, 222, 140, 147, 0, 304, 321,
	350, 178, 337, 138, 139, 141, 149, 312, 150, 151,
	0, 255, 211, 215, 226, 236, 0, 308, 338, 367,
	0, 173, 166, 340, 360, 183, 320, 323, 374, 0,
	168, 0, 0, 0, 0, 0, 0, 0, 167, 0,
	0, 0, 0, 0, 0, 221, 0, 358, 359, 196,
	376, 0, 0, 169, 0, 0, 276, 283, 275, 0,
	354, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	214, 228, 297, 252, 298, 229, 271, 270, 272, 253,
	0, 0, 164, 0, 335, 0, 0, 339, 180, 0,
	0, 349, 143, 303, 181, 220, 212, 296, 274, 174,
	231, 333, 243, 251, 0, 0, 287, 311, 185, 364,
	332, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 152, 153, 0, 0, 0, 192, 131,
	0, 0, 0, 132, 0, 0, 133, 134, 0, 0,
	0, 0, 135, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 165,
	175, 184, 202, 200, 213, 240, 262, 267, 292, 322,
	327, 342, 343, 344, 0, 345, 204, 0, 0, 0,
	0, 0, 0, 159, 170, 247, 0, 305, 218, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 365, 201,
	0, 0, 0, 171, 179, 187, 199, 210, 217, 227,
	230, 234, 235, 237, 241, 254, 256, 257, 258, 259,
	277, 278, 281, 282, 285, 286, 289, 290, 291, 294,
	295, 301, 148, 307, 313, 314, 315, 316, 317, 325,
	326, 328, 329, 336, 356, 357, 370, 371, 346, 0,
	156, 0, 0, 162, 0, 0, 0, 0, 0, 284,
	161, 0, 0, 0, 1159, 0, 0, 0, 206, 0,
	0, 0, 0, 0, 0, 0, 205, 194, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 947, 368, 334, 268, 950, 949, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1160, 0, 1163, 0, 0, 0, 0,
	0, 0, 137, 0, 0, 0, 0, 948, 0, 1155,
	1156, 1154, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 1157, 0,
	0, 0, 0, 0, 363, 0, 0, 0, 0, 300,
	223, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 238, 154, 0, 0, 0, 0,
	0, 0, 0, 246, 0, 155, 0, 0, 0, 280,
	0, 0, 142, 158, 248, 0, 0, 0, 195, 0,
	310, 0, 362, 946, 0, 309, 250, 355, 0, 0,
	361, 0, 341, 369, 373, 216, 0, 186, 331, 207,
	203, 0, 0, 0, 224, 299, 198, 242, 0, 0,
	0, 191, 0, 0, 0, 330, 352, 160, 265, 353,
	372, 177, 347, 266, 273, 188, 190, 189, 172, 324,
	351, 182, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 225, 0, 0, 366, 144, 319, 318,
	0, 232, 0, 145, 136, 306, 146, 239, 163, 0,
	375, 176, 244, 348, 945, 219, 279, 197, 0, 288,
	0, 157, 302, 261, 263, 260, 264, 222, 140, 147,
	0, 304, 321, 350, 178, 337, 138, 139, 141, 149,
	312, 150, 151, 0, 255, 211, 215, 226, 236, 0,
	308, 338, 367, 0, 173, 166, 340, 360, 183, 320,
	323, 374, 0, 168, 0, 0, 0, 0, 0, 0,
	0, 167, 0, 0, 0, 0, 0, 0, 221, 0,
	358, 359, 196, 376, 0, 0, 169, 0, 0, 276,
	283, 275, 0, 354, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 214, 228, 297, 252, 298, 229, 271,
	270, 272, 253, 0, 0, 164, 0, 335, 0, 0,
	339, 180, 0, 0, 349, 143, 303, 181, 220, 212,
	296, 274, 174, 231, 333, 243, 251, 0, 0, 287,
	311, 185, 364, 332, 208, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 152, 153, 0, 0,
	0, 192, 131, 0, 0, 0, 132, 0, 0, 133,
	134, 0, 0, 0, 0, 135, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 165, 175, 184, 202, 200, 213, 240, 262,
	267, 292, 322, 327, 342, 343, 344, 0, 345, 204,
	0, 0, 0, 0, 0, 0, 159, 170, 247, 0,
	305, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 365, 201, 0, 0, 0, 171, 179, 187, 199,
	210, 217, 227, 230, 234, 235, 237, 241, 254, 256,
	257, 258, 259, 277, 278, 281, 282, 285, 286, 289,
	290, 291, 294, 295, 301, 148, 307, 313, 314, 315,
	316, 317, 325, 326, 328, 329, 336, 356, 357, 370,
	371, 346, 0, 156, 0, 0, 162, 0, 0, 0,
	0, 0, 284, 161, 0, 0, 0, 0, 0, 0,
	0, 206, 0, 0, 0, 0, 0, 0, 0, 205,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 947, 368, 334, 268, 950, 949,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 943, 0, 0, 0,
	0, 0, 0, 0, 0, 137, 0, 0, 0, 0,
	948, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 363, 0, 0,
	0, 0, 300, 223, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 238, 154, 0,
	0, 0, 0, 0, 0, 0, 246, 951, 155, 0,
	941, 0, 280, 0, 0, 142, 158, 248, 0, 0,
	0, 195, 940, 310, 0, 362, 946, 0, 309, 250,
	355, 0, 0, 361, 0, 341, 369, 373, 216, 0,
	186, 331, 207, 203, 0, 0, 0, 224, 299, 198,
	242, 0, 0, 0, 191, 0, 0, 0, 330, 352,
	160, 265, 353, 372, 177, 347, 266, 273, 188, 190,
	189, 172, 324, 351, 182, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 225, 0, 0, 366,
	144, 319, 318, 0, 232, 0, 145, 136, 306, 146,
	239, 163, 0, 375, 176, 244, 348, 945, 219, 279,
	197, 0, 288, 0, 157, 302, 261, 263, 260, 264,
	222, 140, 147, 0, 304, 321, 350, 178, 337, 138,
	139, 141, 149, 312, 150, 151, 0, 255, 211, 215,
	226, 236, 0, 308, 338, 367, 0, 173, 166, 340,
	360, 183, 320, 323, 374, 0, 168, 0, 0, 0,
	0, 0, 0, 0, 167, 0, 0, 0, 0, 0,
	0, 221, 0, 358, 359, 196, 376, 0, 0, 169,
	0, 0, 276, 283, 275, 0, 354, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 214, 228, 297, 252,
	298, 229, 271, 270, 272, 253, 0, 0, 164, 0,
	335, 0, 0, 339, 180, 0, 0, 349, 143, 303,
	181, 220, 212, 296, 274, 174, 231, 333, 243, 251,
	0, 0, 287, 311, 185, 364, 332, 208, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 152,
	153, 0, 0, 0, 192, 131, 0, 0, 0, 132,
	0, 0, 133, 134, 0, 0, 0, 0, 135, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 165, 175, 184, 202, 200,
	213, 240, 262, 267, 292, 322, 327, 342, 343, 344,
	0, 345, 204, 0, 0, 0, 0, 0, 0, 159,
	170, 247, 0, 305, 218, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 365, 201, 0, 0, 0, 171,
	179, 187, 199, 210, 217, 227, 230, 234, 235, 237,
	241, 254, 256, 257, 258, 259, 277, 278, 281, 282,
	285, 286, 289, 290, 291, 294, 295, 301, 148, 307,
	313, 314, 315, 316, 317, 325, 326, 328, 329, 336,
	356, 357, 370, 371, 346, 0, 156, 0, 0, 162,
	0, 0, 0, 0, 0, 284, 161, 0, 0, 0,
	0, 0, 0, 0, 206, 0, 0, 0, 0, 0,
	0, 0, 205, 194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 947, 368, 334,
	268, 950, 949, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1160,
	0, 1163, 0, 0, 0, 0, 0, 0, 137, 0,
	0, 0, 0, 948, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	363, 0, 0, 0, 0, 300, 223, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	238, 154, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 155, 0, 0, 0, 280, 0, 0, 142, 158,
	248, 0, 0, 0, 195, 1832, 310, 0, 362, 946,
	0, 309, 250, 355, 0, 0, 361, 0, 341, 369,
	373, 216, 0, 186, 331, 207, 203, 0, 0, 0,
	224, 299, 198, 242, 0, 0, 0, 191, 0, 0,
	0, 330, 352, 160, 265, 353, 372, 177, 347, 266,
	273, 188, 190, 189, 172, 324, 351, 182, 193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 225,
	0, 0, 366, 144, 319, 318, 0, 232, 0, 145,
	136, 306, 146, 239, 163, 0, 375, 176, 244, 348,
	945, 219, 279, 197, 0, 288, 0, 157, 302, 261,
	263, 260, 264, 222, 140, 147, 0, 304, 321, 350,
	178, 337, 138, 139, 141, 149, 312, 150, 151, 0,
	255, 211, 215, 226, 236, 0, 308, 338, 367, 0,
	173, 166, 340, 360, 183, 320, 323, 374, 0, 168,
	0, 0, 0, 0, 0, 0, 0, 167, 0, 0,
	0, 0, 0, 0, 221, 0, 358, 359, 196, 376,
	0, 0, 169, 0, 0, 276, 283, 275, 0, 354,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 214,
	228, 297, 252, 298, 229, 271, 270, 272, 253, 0,
	0, 164, 0, 335, 0, 0, 339, 180, 0, 0,
	349, 143, 303, 181, 220, 212, 296, 274, 174, 231,
	333, 243, 251, 0, 0, 287, 311, 185, 364, 332,
	208, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 152, 153, 0, 0, 0, 192, 131, 0,
	0, 0, 132, 0, 0, 133, 134, 0, 0, 0,
	0, 135, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 165, 175,
	184, 202, 200, 213, 240, 262, 267, 292, 322, 327,
	342, 343, 344, 0, 345, 204, 0, 0, 0, 0,
	0, 0, 159, 170, 247, 0, 305, 218, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 365, 201, 0,
	0, 0, 171, 179, 187, 199, 210, 217, 227, 230,
	234, 235, 237, 241, 254, 256, 257, 258, 259, 277,
	278, 281, 282, 285, 286, 289, 290, 291, 294, 295,
	301, 148, 307, 313, 314, 315, 316, 317, 325, 326,
	328, 329, 336, 356, 357, 370, 371, 346, 0, 156,
	0, 0, 162, 0, 0, 0, 0, 0, 284, 161,
	0, 0, 0, 0, 0, 0, 0, 206, 0, 0,
	0, 0, 0, 0, 0, 205, 194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	947, 368, 334, 268, 950, 949, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2815, 0, 0, 0, 0, 0, 0, 0,
	0, 137, 0, 0, 0, 0, 948, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 363, 0, 0, 0, 0, 300, 223,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 238, 154, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 155, 0, 0, 0, 280, 0,
	0, 142, 158, 248, 0, 0, 0, 195, 0, 310,
	0, 362, 946, 0, 309, 250, 355, 0, 0, 361,
	0, 341, 369, 373, 216, 0, 186, 331, 207, 203,
	0, 0, 0, 224, 299, 198, 242, 0, 0, 0,
	191, 0, 0, 0, 330, 352, 160, 265, 353, 372,
	177, 347, 266, 273, 188, 190, 189, 172, 324, 351,
	182, 193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 225, 0, 0, 366, 144, 319, 318, 0,
	232, 0, 145, 136, 306, 146, 239, 163, 0, 375,
	176, 244, 348, 945, 219, 279, 197, 0, 288, 0,
	157, 302, 261, 263, 260, 264, 222, 140, 147, 0,
	304, 321, 350, 178, 337, 138, 139, 141, 149, 312,
	150, 151, 0, 255, 211, 215, 226, 236, 0, 308,
	338, 367, 0, 173, 166, 340, 360, 183, 320, 323,
	374, 0, 168, 0, 0, 0, 0, 0, 0, 0,
	167, 0, 0, 0, 0, 0, 0, 221, 0, 358,
	359, 196, 376, 0, 0, 169, 0, 0, 276, 283,
	275, 0, 354, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 214, 228, 297, 252, 298, 229, 271, 270,
	272, 253, 0, 0, 164, 0, 335, 0, 0, 339,
	180, 0, 0, 349, 143, 303, 181, 220, 212, 296,
	274, 174, 231, 333, 243, 251, 0, 0, 287, 311,
	185, 364, 332, 208, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 152, 153, 0, 0, 0,
	192, 131, 0, 0, 0, 132, 0, 0, 133, 134,
	0, 0, 0, 0, 135, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 165, 175, 184, 202, 200, 213, 240, 262, 267,
	292, 322, 327, 342, 343, 344, 0, 345, 204, 0,
	0, 0, 0, 0, 0, 159, 170, 247, 0, 305,
	218, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	365, 201, 0, 0, 0, 171, 179, 187, 199, 210,
	217, 227, 230, 234, 235, 237, 241, 254, 256, 257,
	258, 259, 277, 278, 281, 282, 285, 286, 289, 290,
	291, 294, 295, 301, 148, 307, 313, 314, 315, 316,
	317, 325, 326, 328, 329, 336, 356, 357, 370, 371,
	346, 0, 156, 0, 0, 162, 0, 0, 0, 0,
	0, 284, 161, 0, 0, 0, 0, 0, 0, 0,
	206, 0, 0, 0, 0, 0, 0, 0, 205, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 947, 368, 334, 268, 950, 949, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2810, 0, 0, 0, 0,
	0, 0, 0, 0, 137, 0, 0, 0, 0, 948,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 363, 0, 0, 0,
	0, 300, 223, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 238, 154, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 155, 0, 0,
	0, 280, 0, 0, 142, 158, 248, 0, 0, 0,
	195, 0, 310, 0, 362, 946, 0, 309, 250, 355,
	0, 0, 361, 0, 341, 369, 373, 216, 0, 186,
	331, 207, 203, 0, 0, 0, 224, 299, 198, 242,
	0, 0, 0, 191, 0, 0, 0, 330, 352, 160,
	265, 353, 372, 177, 347, 266, 273, 188, 190, 189,
	172, 324, 351, 182, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 225, 0, 0, 366, 144,
	319, 318, 0, 232, 0, 145, 136, 306, 146, 239,
	163, 0, 375, 176, 244, 348, 945, 219, 279, 197,
	0, 288, 0, 157, 302, 261, 263, 260, 264, 222,
	140, 147, 0, 304, 321, 350, 178, 337, 138, 139,
	141, 149, 312, 150, 151, 0, 255, 211, 215, 226,
	236, 0, 308, 338, 367, 0, 173, 166, 340, 360,
	183, 320, 323, 374, 0, 168, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 0, 0, 0, 0, 0,
	221, 0, 358, 359, 196, 376, 0, 0, 169, 0,
	0, 276, 283, 275, 0, 354, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 214, 228, 297, 252, 298,
	229, 271, 270, 272, 253, 0, 0, 164, 0, 335,
	0, 0, 339, 180, 0, 0, 349, 143, 303, 181,
	220, 212, 296, 274, 174, 231, 333, 243, 251, 0,
	0, 287, 311, 185, 364, 332, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 152, 153,
	0, 0, 0, 192, 131, 0, 0, 0, 132, 0,
	0, 133, 134, 0, 0, 0, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 165, 175, 184, 202, 200, 213,
	240, 262, 267, 292, 322, 327, 342, 343, 344, 0,
	345, 204, 0, 0, 0, 0, 0, 0, 159, 170,
	247, 0, 305, 218, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 365, 201, 0, 0, 0, 171, 179,
	187, 199, 210, 217, 227, 230, 234, 235, 237, 241,
	254, 256, 257, 258, 259, 277, 278, 281, 282, 285,
	286, 289, 290, 291, 294, 295, 301, 148, 307, 313,
	314, 315, 316, 317, 325, 326, 328, 329, 336, 356,
	357, 370, 371, 0, 0, 156, 36, 346, 162, 0,
	0, 0, 0, 0, 0, 161, 0, 0, 284, 0,
	0, 0, 0, 0, 0, 0, 0, 206, 0, 0,
	0, 0, 0, 0, 0, 205, 194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2312, 249, 0,
	0, 368, 334, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 77, 0,
	0, 0, 1966, 0, 0, 0, 0, 0, 0, 0,
	0, 137, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 363, 0, 0, 0, 0, 300, 223,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 238, 154, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 155, 0, 0, 0, 280, 0,
	0, 142, 158, 248, 0, 0, 0, 195, 0, 310,
	0, 362, 0, 0, 309, 250, 355, 0, 0, 361,
	0, 341, 369, 373, 216, 0, 186, 331, 207, 203,
	0, 0, 0, 224, 299, 198, 242, 0, 0, 0,
	191, 0, 0, 0, 330, 352, 160, 265, 353, 372,
	177, 347, 266, 273, 188, 190, 189, 172, 324, 351,
	182, 193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 225, 0, 0, 366, 144, 319, 318, 0,
	232, 0, 145, 136, 306, 146, 239, 163, 0, 375,
	176, 244, 348, 128, 219, 279, 197, 0, 288, 0,
	157, 302, 261, 263, 260, 264, 222, 140, 147, 0,
	304, 321, 350, 178, 337, 138, 139, 141, 149, 312,
	150, 151, 0, 255, 211, 215, 226, 236, 0, 308,
	338, 367, 0, 173, 166, 340, 360, 183, 320, 323,
	374, 0, 168, 0, 0, 0, 0, 0, 0, 0,
	167, 0, 0, 0, 0, 0, 0, 221, 0, 358,
	359, 196, 376, 0, 0, 169, 0, 0, 276, 283,
	275, 0, 354, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 214, 228, 297, 252, 298, 229, 271, 270,
	272, 253, 0, 0, 164, 0, 335, 0, 0, 339,
	180, 0, 0, 349, 143, 303, 181, 220, 212, 296,
	274, 174, 231, 333, 243, 251, 0, 0, 287, 311,
	185, 364, 332, 208, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 152, 153, 0, 0, 0,
	192, 131, 0, 0, 0, 132, 0, 0, 133, 134,
	0, 0, 0, 0, 135, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1967,
	293, 165, 175, 184, 202, 200, 213, 240, 262, 267,
	292, 322, 327, 342, 343, 344, 0, 345, 204, 0,
	0, 0, 0, 0, 0, 159, 170, 247, 480, 305,
	218, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	365, 201, 0, 0, 0, 171, 179, 187, 199, 210,
	217, 227, 230, 234, 235, 237, 241, 254, 256, 257,
	258, 259, 277, 278, 281, 282, 285, 286, 289, 290,
	291, 294, 295, 301, 148, 307, 313, 314, 315, 316,
	317, 325, 326, 328, 329, 336, 356, 357, 370, 371,
	346, 0, 156, 0, 0, 162, 0, 0, 0, 0,
	0, 284, 161, 0, 0, 0, 0, 0, 0, 0,
	206, 0, 0, 0, 0, 0, 0, 0, 205, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 368, 334, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 77, 0, 0, 0, 1966, 0, 0, 0, 0,
	0, 0, 0, 0, 137, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 363, 0, 0, 0,
	0, 300, 223, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 238, 154, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 155, 0, 0,
	0, 280, 0, 0, 142, 158, 248, 0, 0, 0,
	195, 0, 310, 0, 362, 0, 0, 309, 250, 355,
	0, 0, 361, 0, 341, 369, 373, 216, 0, 186,
	331, 207, 203, 0, 0, 0, 224, 299, 198, 242,
	0, 0, 0, 191, 0, 0, 0, 330, 352, 160,
	265, 353, 372, 177, 347, 266, 273, 188, 190, 189,
	172, 324, 351, 182, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 225, 0, 0, 366, 144,
	319, 318, 0, 232, 0, 145, 136, 306, 146, 239,
	163, 0, 375, 176, 244, 348, 128, 219, 279, 197,
	0, 288, 0, 157, 302, 261, 263, 260, 264, 222,
	140, 147, 0, 304, 321, 350, 178, 337, 138, 139,
	141, 149, 312, 150, 151, 0, 255, 211, 215, 226,
	236, 0, 308, 338, 367, 0, 173, 166, 340, 360,
	183, 320, 323, 374, 0, 168, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 0, 0, 0, 0, 0,
	221, 0, 358, 359, 196, 376, 0, 0, 169, 0,
	0, 276, 283, 275, 0, 354, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 214, 228, 297, 252, 298,
	229, 271, 270, 272, 253, 0, 0, 164, 0, 335,
	0, 0, 339, 180, 0, 0, 349, 143, 303, 181,
	220, 212, 296, 274, 174, 231, 333, 243, 251, 0,
	0, 287, 311, 185, 364, 332, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 152, 153,
	0, 0, 0, 192, 131, 0, 0, 0, 132, 0,
	0, 133, 134, 0, 0, 0, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1967, 293, 165, 175, 184, 202, 200, 213,
	240, 262, 267, 292, 322, 327, 342, 343, 344, 0,
	345, 204, 0, 0, 0, 0, 0, 0, 159, 170,
	247, 0, 305, 218, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 365, 201, 0, 0, 0, 171, 179,
	187, 199, 210, 217, 227, 230, 234, 235, 237, 241,
	254, 256, 257, 258, 259, 277, 278, 281, 282, 285,
	286, 289, 290, 291, 294, 295, 301, 148, 307, 313,
	314, 315, 316, 317, 325, 326, 328, 329, 336, 356,
	357, 370, 371, 346, 0, 156, 0, 0, 162, 0,
	0, 0, 0, 0, 284, 161, 0, 0, 0, 0,
	0, 0, 0, 206, 0, 0, 0, 0, 0, 0,
	0, 205, 194, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 368, 334, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 129, 0,
	0, 0, 0, 0, 0, 0, 0, 137, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 363,
	0, 0, 0, 0, 300, 223, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 238,
	154, 0, 0, 0, 0, 0, 0, 0, 246, 0,
	155, 0, 0, 0, 280, 0, 0, 142, 158, 248,
	0, 0, 0, 195, 0, 310, 0, 362, 2114, 0,
	309, 250, 355, 0, 0, 361, 0, 341, 369, 373,
	216, 0, 186, 331, 207, 203, 0, 0, 0, 224,
	299, 198, 242, 0, 0, 0, 191, 0, 0, 0,
	330, 352, 160, 265, 353, 372, 177, 347, 266, 273,
	188, 190, 189, 172, 324, 351, 182, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 225, 0,
	0, 366, 144, 319, 318, 0, 232, 0, 145, 136,
	306, 146, 239, 163, 0, 375, 176, 244, 348, 128,
	219, 279, 197, 0, 288, 0, 157, 302, 261, 263,
	260, 264, 222, 140, 147, 0, 304, 321, 350, 178,
	337, 138, 139, 141, 149, 312, 150, 151, 0, 255,
	211, 215, 226, 236, 0, 308, 338, 367, 0, 173,
	166, 340, 360, 183, 320, 323, 374, 0, 168, 0,
	0, 0, 0, 0, 0, 0, 167, 0, 0, 0,
	0, 0, 0, 221, 0, 358, 359, 196, 376, 0,
	0, 169, 0, 0, 276, 283, 275, 0, 354, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 214, 228,
	297, 252, 298, 229, 271, 270, 272, 253, 0, 0,
	164, 0, 335, 0, 0, 339, 180, 0, 0, 349,
	143, 303, 181, 220, 212, 296, 274, 174, 231, 333,
	243, 251, 0, 0, 287, 311, 185, 364, 332, 208,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 152, 153, 0, 0, 0, 192, 131, 0, 0,
	0, 132, 0, 0, 133, 134, 0, 0, 0, 0,
	135, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 165, 175, 184,
	202, 200, 213, 240, 262, 267, 292, 322, 327, 342,
	343, 344, 0, 345, 204, 0, 0, 0, 0, 0,
	0, 159, 170, 247, 0, 305, 218, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 365, 201, 0, 0,
	0, 171, 179, 187, 199, 210, 217, 227, 230, 234,
	235, 237, 241, 254, 256, 257, 258, 259, 277, 278,
	281, 282, 285, 286, 289, 290, 291, 294, 295, 301,
	148, 307, 313, 314, 315, 316, 317, 325, 326, 328,
	329, 336, 356, 357, 370, 371, 346, 0, 156, 0,
	0, 162, 0, 0, 0, 0, 0, 284, 161, 0,
	0, 0, 0, 0, 0, 0, 206, 0, 0, 0,
	0, 0, 0, 0, 205, 194, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	368, 334, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 129, 0, 0, 0, 0, 0, 0, 0, 0,
	137, 0, 0, 0, 0, 0, 1953, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 363, 0, 0, 0, 0, 300, 223, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 238, 154, 0, 0, 0, 0, 0, 0,
	0, 246, 0, 155, 0, 0, 0, 280, 0, 0,
	142, 158, 248, 0, 0, 0, 195, 0, 310, 0,
	362, 0, 0, 309, 250, 355, 0, 0, 361, 0,
	341, 369, 373, 216, 0, 186, 331, 207, 203, 0,
	0, 0, 224, 299, 198, 242, 0, 0, 0, 191,
	0, 0, 0, 330, 352, 160, 265, 353, 372, 177,
	347, 266, 273, 188, 190, 189, 172, 324, 351, 182,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 225, 0, 0, 366, 144, 319, 318, 0, 232,
	0, 145, 136, 306, 146, 239, 163, 0, 375, 176,
	244, 348, 128, 219, 279, 197, 0, 288, 0, 157,
	302, 261, 263, 260, 264, 222, 140, 147, 0, 304,
	321, 350, 178, 337, 138, 139, 141, 149, 312, 150,
	151, 0, 255, 211, 215, 226, 236, 0, 308, 338,
	367, 0, 173, 166, 340, 360, 183, 320, 323, 374,
	0, 168, 0, 0, 0, 0, 0, 0, 0, 167,
	0, 0, 0, 0, 0, 0, 221, 0, 358, 359,
	196, 376, 0, 0, 169, 0, 0, 276, 283, 275,
	0, 354, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 214, 228, 297, 252, 298, 229, 271, 270, 272,
	253, 0, 0, 164, 0, 335, 0, 0, 339, 180,
	0, 0, 349, 143, 303, 181, 220, 212, 296, 274,
	174, 231, 333, 243, 251, 0, 0, 287, 311, 185,
	364, 332, 208, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 152, 153, 0, 0, 0, 192,
	131, 0, 0, 0, 132, 0, 0, 133, 134, 0,
	0, 0, 0, 135, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	165, 175, 184, 202, 200, 213, 240, 262, 267, 292,
	322, 327, 342, 343, 344, 0, 345, 204, 0, 0,
	0, 0, 0, 0, 159, 170, 247, 0, 305, 218,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 365,
	201, 0, 0, 0, 171, 179, 187, 199, 210, 217,
	227, 230, 234, 235, 237, 241, 254, 256, 257, 258,
	259, 277, 278, 281, 282, 285, 286, 289, 290, 291,
	294, 295, 301, 148, 307, 313, 314, 315, 316, 317,
	325, 326, 328, 329, 336, 356, 357, 370, 371, 346,
	0, 156, 0, 1290, 162, 0, 0, 0, 0, 0,
	284, 161, 0, 0, 0, 0, 0, 0, 0, 206,
	0, 0, 0, 0, 0, 0, 0, 205, 194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 368, 334, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 129, 0, 0, 0, 0, 0,
	0, 0, 0, 137, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 363, 0, 0, 0, 0,
	300, 223, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 238, 154, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 155, 0, 0, 0,
	280, 0, 0, 142, 158, 248, 0, 0, 0, 195,
	0, 310, 0, 362, 0, 0, 309, 250, 355, 0,
	0, 361, 0, 341, 369, 373, 216, 0, 186, 331,
	207, 203, 0, 0, 0, 224, 299, 198, 242, 0,
	0, 0, 191, 0, 0, 0, 330, 352, 160, 265,
	353, 372, 177, 347, 266, 273, 188, 190, 189, 172,
	324, 351, 182, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 225, 0, 0, 366, 144, 319,
	318, 0, 232, 0, 145, 136, 306, 146, 239, 163,
	0, 375, 176, 244, 348, 128, 219, 279, 197, 0,
	288, 0, 157, 302, 261, 263, 260, 264, 222, 140,
	147, 0, 304, 321, 350, 178, 337, 138, 139, 141,
	149, 312, 150, 151, 0, 255, 211, 215, 226, 236,
	0, 308, 338, 367, 0, 173, 166, 340, 360, 183,
	320, 323, 374, 0, 168, 0, 0, 0, 0, 0,
	0, 0, 167, 0, 0, 0, 0, 0, 0, 221,
	0, 358, 359, 196, 376, 0, 0, 169, 0, 0,
	276, 283, 275, 0, 354, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 214, 228, 297, 252, 298, 229,
	271, 270, 272, 253, 0, 0, 164, 0, 335, 0,
	0, 339, 180, 0, 0, 349, 143, 303, 181, 220,
	212, 296, 274, 174, 231, 333, 243, 251, 0, 0,
	287, 311, 185, 364, 332, 208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 152, 153, 0,
	0, 0, 192, 131, 0, 0, 0, 132, 0, 0,
	133, 134, 0, 0, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 165, 175, 184, 202, 200, 213, 240,
	262, 267, 292, 322, 327, 342, 343, 344, 0, 345,
	204, 0, 0, 0, 0, 0, 0, 159, 170, 247,
	0, 305, 218, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 365, 201, 0, 0, 0, 171, 179, 187,
	199, 210, 217, 227, 230, 234, 235, 237, 241, 254,
	256, 257, 258, 259, 277, 278, 281, 282, 285, 286,
	289, 290, 291, 294, 295, 301, 148, 307, 313, 314,
	315, 316, 317, 325, 326, 328, 329, 336, 356, 357,
	370, 371, 346, 0, 156, 0, 0, 162, 0, 0,
	0, 0, 0, 284, 161, 0, 0, 0, 0, 0,
	0, 0, 206, 0, 0, 0, 0, 0, 0, 0,
	205, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 368, 334, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 129, 0, 0,
	0, 0, 0, 0, 0, 0, 137, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	0, 0, 0, 300, 223, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 123, 0, 238, 154,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 155,
	0, 0, 0, 280, 0, 0, 142, 158, 248, 0,
	0, 0, 195, 0, 310, 0, 362, 0, 0, 309,
	250, 355, 0, 0, 361, 0, 341, 369, 373, 216,
	0, 186, 331, 207, 203, 0, 0, 0, 224, 299,
	198, 242, 0, 0, 0, 191, 0, 0, 0, 330,
	352, 160, 265, 353, 372, 177, 347, 266, 273, 188,
	190, 189, 172, 324, 351, 182, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 225, 0, 0,
	366, 144, 319, 318, 0, 232, 0, 145, 136, 306,
	146, 239, 163, 0, 375, 176, 244, 348, 128, 219,
	279, 197, 0, 288, 0, 157, 302, 261, 263, 260,
	264, 222, 140, 147, 0, 304, 321, 350, 178, 337,
	138, 139, 141, 149, 312, 150, 151, 0, 255, 211,
	215, 226, 236, 0, 308, 338, 367, 0, 173, 166,
	340, 360, 183, 320, 323, 374, 0, 168, 0, 0,
	0, 0, 0, 0, 0, 167, 0, 0, 0, 0,
	0, 0, 221, 0, 358, 359, 196, 376, 0, 0,
	169, 0, 0, 276, 283, 275, 0, 354, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 214, 228, 297,
	252, 298, 229, 271, 270, 272, 253, 0, 0, 164,
	0, 335, 0, 0, 339, 180, 0, 0, 349, 143,
	303, 181, 220, 212, 296, 274, 174, 231, 333, 243,
	251, 0, 0, 287, 311, 185, 364, 332, 208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	152, 153, 0, 0, 0, 192, 131, 0, 0, 0,
	132, 0, 0, 133, 134, 0, 0, 0, 0, 135,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 165, 175, 184, 202,
	200, 213, 240, 262, 267, 292, 322, 327, 342, 343,
	344, 0, 345, 204, 0, 0, 0, 0, 0, 0,
	159, 170, 247, 0, 305, 218, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 365, 201, 0, 0, 0,
	171, 179, 187, 199, 210, 217, 227, 230, 234, 235,
	237, 241, 254, 256, 257, 258, 259, 277, 278, 281,
	282, 285, 286, 289, 290, 291, 294, 295, 301, 148,
	307, 313, 314, 315, 316, 317, 325, 326, 328, 329,
	336, 356, 357, 370, 371, 346, 0, 156, 0, 0,
	162, 0, 0, 0, 0, 0, 284, 161, 0, 0,
	0, 0, 0, 0, 0, 206, 0, 0, 0, 0,
	0, 0, 0, 205, 194, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 368,
	334, 268, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	129, 0, 0, 0, 0, 0, 0, 0, 0, 137,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 363, 0, 0, 0, 0, 300, 223, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 238, 154, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 155, 0, 0, 0, 280, 0, 0, 142,
	158, 248, 0, 0, 0, 195, 0, 310, 0, 362,
	0, 0, 309, 250, 355, 0, 0, 361, 0, 341,
	369, 373, 216, 0, 186, 331, 207, 203, 0, 0,
	0, 224, 299, 198, 242, 0, 0, 0, 191, 0,
	0, 0, 330, 352, 160, 265, 353, 372, 177, 347,
	266, 273, 188, 190, 189, 172, 324, 351, 182, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	225, 0, 0, 366, 144, 319, 318, 0, 232, 0,
	145, 136, 306, 146, 239, 163, 0, 375, 176, 244,
	348, 128, 219, 279, 197, 0, 288, 0, 157, 302,
	261, 263, 260, 264, 222, 140, 147, 0, 304, 321,
	350, 178, 337, 138, 139, 141, 149, 312, 150, 151,
	0, 255, 211, 215, 226, 236, 0, 308, 338, 367,
	0, 173, 166, 340, 360, 183, 320, 323, 374, 0,
	168, 0, 0, 0, 0, 0, 0, 0, 167, 0,
	0, 0, 0, 0, 0, 221, 0, 358, 359, 196,
	376, 0, 0, 169, 0, 0, 276, 283, 275, 0,
	354, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	214, 228, 297, 252, 298, 229, 271, 270, 272, 253,
	0, 0, 164, 0, 335, 0, 0, 339, 180, 0,
	0, 349, 143, 303, 181, 220, 212, 296, 274, 174,
	231, 333, 243, 251, 0, 0, 287, 311, 185, 364,
	332, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 152, 153, 0, 0, 0, 192, 131,
	0, 0, 0, 132, 0, 0, 133, 134, 0, 0,
	0, 0, 135, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 165,
	175, 184, 202, 200, 213, 240, 262, 267, 292, 322,
	327, 342, 343, 344, 0, 345, 204, 0, 0, 0,
	0, 0, 0, 159, 170, 247, 0, 305, 218, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 365, 201,
	0, 0, 0, 171, 179, 187, 199, 210, 217, 227,
	230, 234, 235, 237, 241, 254, 256, 257, 258, 259,
	277, 278, 281, 282, 285, 286, 289, 290, 291, 294,
	295, 301, 148, 307, 313, 314, 315, 316, 317, 325,
	326, 328, 329, 336, 356, 357, 370, 371, 0, 0,
	156, 0, 0, 162, 446, 346, 440, 451, 434, 0,
	161, 0, 0, 0, 0, 0, 284, 0, 0, 457,
	0, 0, 0, 0, 0, 206, 0, 0, 441, 0,
	0, 0, 0, 205, 194, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 368,
	334, 268, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	455, 0, 454, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 363, 0, 0, 0, 0, 300, 223, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	433, 432, 435, 0, 0, 0, 269, 0, 0, 0,
	439, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 155, 0, 0, 0, 280, 443, 0, 0,
	158, 248, 447, 0, 0, 195, 0, 310, 0, 362,
	0, 0, 309, 250, 355, 0, 450, 361, 0, 341,
	369, 373, 216, 0, 186, 331, 207, 203, 0, 0,
	0, 224, 299, 198, 242, 0, 0, 0, 191, 0,
	0, 0, 330, 352, 160, 265, 353, 372, 177, 347,
	266, 273, 188, 190, 189, 172, 324, 351, 182, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	225, 0, 0, 366, 0, 319, 318, 0, 232, 0,
	0, 0, 306, 0, 239, 163, 0, 375, 176, 244,
	348, 0, 219, 279, 197, 0, 288, 0, 157, 302,
	261, 263, 260, 264, 222, 0, 0, 0, 460, 321,
	350, 178, 337, 436, 437, 438, 444, 445, 448, 449,
	452, 255, 211, 215, 226, 236, 0, 308, 338, 367,
	0, 173, 166, 340, 360, 183, 320, 323, 374, 0,
	168, 0, 0, 0, 0, 0, 0, 0, 167, 0,
	0, 0, 0, 0, 0, 221, 0, 358, 359, 196,
	376, 0, 0, 169, 0, 0, 276, 283, 275, 0,
	354, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	214, 228, 297, 252, 298, 229, 271, 270, 272, 253,
	0, 0, 164, 0, 335, 0, 0, 339, 180, 0,
	0, 349, 0, 303, 181, 220, 212, 296, 274, 174,
	231, 333, 243, 251, 0, 0, 287, 311, 185, 364,
	332, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 165,
	175, 184, 202, 200, 213, 240, 262, 267, 292, 322,
	327, 342, 343, 344, 0, 345, 204, 0, 0, 0,
	0, 0, 0, 159, 170, 247, 0, 305, 218, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 365, 201,
	0, 0, 0, 171, 179, 187, 199, 210, 217, 227,
	230, 234, 235, 237, 241, 254, 256, 257, 258, 259,
	277, 278, 281, 282, 285, 286, 289, 290, 291, 294,
	295, 301, 442, 307, 313, 314, 315, 316, 317, 325,
	326, 328, 329, 336, 356, 357, 370, 371, 0, 0,
	156, 0, 0, 162, 446, 346, 440, 451, 434, 0,
	161, 0, 0, 0, 0, 0, 284, 0, 0, 426,
	0, 0, 0, 0, 0, 206, 0, 0, 441, 0,
	0, 0, 0, 205, 194, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 368,
	334, 268, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	455, 0, 454, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 363, 0, 0, 0, 0, 300, 223, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	433, 432, 435, 0, 0, 0, 269, 0, 0, 0,
	439, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 155, 0, 0, 0, 280, 443, 0, 0,
	158, 248, 447, 0, 0, 195, 0, 310, 0, 362,
	0, 0, 309, 250, 355, 0, 450, 361, 0, 341,
	369, 373, 216, 0, 186, 331, 207, 203, 0, 0,
	0, 224, 299, 198, 242, 0, 0, 0, 191, 0,
	0, 0, 330, 352, 160, 265, 353, 372, 177, 347,
	266, 273, 188, 190, 189, 172, 324, 351, 182, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	225, 0, 0, 366, 0, 319, 318, 0, 232, 0,
	0, 0, 306, 0, 239, 163, 0, 375, 176, 244,
	348, 0, 219, 279, 197, 0, 288, 0, 157, 302,
	261, 263, 260, 264, 222, 0, 0, 0, 429, 321,
	350, 178, 337, 436, 437, 438, 444, 445, 448, 449,
	452, 255, 211, 215, 226, 236, 0, 308, 338, 367,
	0, 173, 166, 340, 360, 183, 320, 323, 374, 0,
	168, 0, 0, 0, 0, 0, 0, 0, 167, 0,
	0, 0, 0, 0, 0, 221, 0, 358, 359, 196,
	376, 0, 0, 169, 0, 0, 276, 283, 275, 0,
	354, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	214, 228, 297, 252, 298, 229, 271, 270, 272, 253,
	0, 0, 164, 0, 335, 0, 0, 339, 180, 0,
	0, 349, 0, 303, 181, 220, 212, 296, 274, 174,
	231, 333, 243, 251, 0, 0, 287, 311, 185, 364,
	332, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 165,
	175, 184, 202, 200, 213, 240, 262, 267, 292, 322,
	327, 342, 343, 344, 0, 345, 204, 0, 0, 0,
	0, 0, 0, 159, 170, 247, 0, 305, 218, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 365, 201,
	0, 0, 0, 171, 179, 187, 199, 210, 217, 227,
	230, 234, 235, 237, 241, 254, 256, 257, 258, 259,
	277, 278, 281, 282, 285, 286, 289, 290, 291, 294,
	295, 301, 442, 307, 313, 314, 315, 316, 317, 325,
	326, 328, 329, 336, 356, 357, 370, 371, 346, 0,
	156, 0, 0, 162, 0, 0, 0, 0, 0, 284,
	161, 0, 0, 0, 0, 0, 0, 0, 206, 0,
	0, 0, 0, 0, 0, 0, 205, 194, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 368, 334, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 943, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 363, 0, 0, 0, 0, 300,
	223, 1175, 1174, 1184, 1185, 1177, 1178, 1179, 1180, 1181,
	1182, 1183, 1176, 0, 0, 1186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 0, 155, 0, 0, 0, 280,
	0, 0, 0, 158, 248, 0, 0, 0, 195, 0,
	310, 0, 362, 0, 0, 309, 250, 355, 0, 0,
	361, 0, 341, 369, 373, 216, 0, 186, 331, 207,
	203, 0, 0, 0, 224, 299, 198, 242, 0, 0,
	0, 191, 0, 0, 0, 330, 352, 160, 265, 353,
	372, 177, 347, 266, 273, 188, 190, 189, 172, 324,
	351, 182, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 225, 0, 0, 366, 0, 319, 318,
	0, 232, 0, 0, 0, 306, 0, 239, 163, 0,
	375, 176, 244, 348, 0, 219, 279, 197, 0, 288,
	0, 157, 302, 261, 263, 260, 264, 222, 0, 0,
	0, 304, 321, 350, 178, 337, 0, 0, 0, 0,
	312, 0, 0, 0, 255, 211, 215, 226, 236, 0,
	308, 338, 367, 0, 173, 166, 340, 360, 183, 320,
	323, 374, 0, 168, 0, 0, 0, 0, 0, 0,
	0, 167, 0, 0, 0, 0, 0, 0, 221, 0,
	358, 359, 196, 376, 0, 0, 169, 0, 0, 276,
	283, 275, 0, 354, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 214, 228, 297, 252, 298, 229, 271,
	270, 272, 253, 0, 0, 164, 0, 335, 0, 0,
	339, 180, 0, 0, 349, 0, 303, 181, 220, 212,
	296, 274, 174, 231, 333, 243, 251, 0, 0, 287,
	311, 185, 364, 332, 208, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 165, 175, 184, 202, 200, 213, 240, 262,
	267, 292, 322, 327, 342, 343, 344, 0, 345, 204,
	0, 0, 0, 0, 0, 0, 159, 170, 247, 0,
	305, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 365, 201, 0, 0, 0, 171, 179, 187, 199,
	210, 217, 227, 230, 234, 235, 237, 241, 254, 256,
	257, 258, 259, 277, 278, 281, 282, 285, 286, 289,
	290, 291, 294, 295, 301, 0, 307, 313, 314, 315,
	316, 317, 325, 326, 328, 329, 336, 356, 357, 370,
	371, 346, 0, 156, 0, 0, 162, 0, 0, 0,
	0, 0, 284, 161, 0, 0, 0, 2317, 0, 0,
	0, 206, 0, 0, 0, 0, 0, 0, 0, 205,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 368, 334, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2319, 2321,
	0, 0, 0, 0, 0, 0, 129, 0, 472, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 363, 2315, 0,
	0, 0, 300, 223, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 238, 0, 0,
	2320, 0, 0, 0, 0, 0, 246, 0, 155, 0,
	0, 0, 280, 0, 0, 0, 158, 248, 0, 0,
	0, 195, 0, 310, 0, 362, 0, 0, 309, 250,
	355, 0, 0, 361, 0, 341, 369, 373, 216, 0,
	186, 331, 207, 203, 0, 0, 0, 224, 299, 198,
	242, 0, 0, 0, 191, 0, 0, 0, 330, 352,
	160, 265, 353, 372, 177, 347, 266, 273, 188, 190,
	189, 172, 324, 351, 182, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 225, 0, 0, 366,
	0, 319, 318, 0, 232, 0, 0, 0, 306, 0,
	239, 163, 0, 375, 176, 244, 348, 0, 219, 279,
	197, 0, 288, 0, 157, 302, 261, 263, 260, 264,
	222, 0, 0, 0, 304, 321, 350, 178, 337, 0,
	0, 0, 0, 312, 0, 0, 0, 255, 211, 215,
	226, 236, 0, 308, 338, 367, 0, 173, 166, 340,
	360, 183, 320, 323, 374, 0, 168, 0, 0, 0,
	0, 0, 0, 0, 167, 0, 0, 0, 0, 0,
	0, 221, 0, 358, 359, 196, 376, 0, 0, 169,
	0, 0, 276, 283, 275, 0, 354, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 214, 228, 297, 252,
	298, 229, 271, 270, 272, 253, 0, 0, 164, 0,
	335, 0, 0, 339, 180, 0, 0, 349, 0, 303,
	181, 220, 212, 296, 274, 174, 231, 333, 243, 251,
	0, 0, 287, 311, 185, 364, 332, 208, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 131, 0, 0, 0, 132,
	0, 0, 133, 134, 0, 0, 0, 0, 135, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 165, 175, 184, 202, 200,
	213, 240, 262, 267, 292, 322, 327, 342, 343, 344,
	0, 345, 204, 0, 0, 0, 0, 0, 0, 159,
	170, 247, 0, 305, 218, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 365, 201, 0, 0, 0, 171,
	179, 187, 199, 210, 217, 227, 230, 234, 235, 237,
	241, 254, 256, 257, 258, 259, 277, 278, 281, 282,
	285, 286, 289, 290, 291, 294, 295, 301, 0, 307,
	313, 314, 315, 316, 317, 325, 326, 328, 329, 336,
	356, 357, 370, 371, 346, 0, 156, 0, 0, 162,
	0, 0, 0, 0, 0, 284, 161, 0, 0, 0,
	2317, 0, 0, 0, 206, 0, 0, 0, 0, 0,
	0, 0, 205, 194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 368, 334,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2319, 2321, 0, 0, 0, 0, 0, 0, 129,
	0, 472, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	363, 0, 0, 0, 0, 300, 223, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	238, 0, 0, 2320, 0, 0, 0, 0, 0, 246,
	0, 155, 0, 0, 0, 280, 0, 0, 0, 158,
	248, 0, 0, 0, 195, 0, 310, 0, 362, 0,
	0, 309, 250, 355, 0, 0, 361, 0, 341, 369,
	373, 216, 0, 186, 331, 207, 203, 0, 0, 0,
	224, 299, 198, 242, 0, 0, 0, 191, 0, 0,
	0, 330, 352, 160, 265, 353, 372, 177, 347, 266,
	273, 188, 190, 189, 172, 324, 351, 182, 193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 225,
	0, 0, 366, 0, 319, 318, 0, 232, 0, 0,
	0, 306, 0, 239, 163, 0, 375, 176, 244, 348,
	0, 219, 279, 197, 0, 288, 0, 157, 302, 261,
	263, 260, 264, 222, 0, 0, 0, 304, 321, 350,
	178, 337, 0, 0, 0, 0, 312, 0, 0, 0,
	255, 211, 215, 226, 236, 0, 308, 338, 367, 0,
	173, 166, 340, 360, 183, 320, 323, 374, 0, 168,
	0, 0, 0, 0, 0, 0, 0, 167, 0, 0,
	0, 0, 0, 0, 221, 0, 358, 359, 196, 376,
	0, 0, 169, 0, 0, 276, 283, 275, 0, 354,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 214,
	228, 297, 252, 298, 229, 271, 270, 272, 253, 0,
	0, 164, 0, 335, 0, 0, 339, 180, 0, 0,
	349, 0, 303, 181, 220, 212, 296, 274, 174, 231,
	333, 243, 251, 0, 0, 287, 311, 185, 364, 332,
	208, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 131, 0,
	0, 0, 132, 0, 0, 133, 134, 0, 0, 0,
	0, 135, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 165, 175,
	184, 202, 200, 213, 240, 262, 267, 292, 322, 327,
	342, 343, 344, 0, 345, 204, 0, 0, 0, 0,
	0, 0, 159, 170, 247, 0, 305, 218, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 365, 201, 0,
	0, 0, 171, 179, 187, 199, 210, 217, 227, 230,
	234, 235, 237, 241, 254, 256, 257, 258, 259, 277,
	278, 281, 282, 285, 286, 289, 290, 291, 294, 295,
	301, 0, 307, 313, 314, 315, 316, 317, 325, 326,
	328, 329, 336, 356, 357, 370, 371, 346, 0, 156,
	0, 0, 162, 0, 0, 0, 0, 0, 284, 161,
	0, 0, 0, 0, 0, 0, 0, 206, 0, 0,
	0, 0, 0, 0, 0, 205, 194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 368, 334, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 129, 0, 472, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 363, 0, 0, 0, 0, 300, 223,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 155, 0, 0, 0, 280, 0,
	0, 0, 158, 248, 0, 0, 0, 195, 0, 310,
	0, 362, 0, 0, 309, 250, 355, 0, 0, 361,
	0, 341, 369, 373, 216, 0, 186, 331, 207, 203,
	0, 0, 0, 224, 299, 198, 242, 0, 0, 0,
	191, 0, 0, 0, 330, 352, 160, 265, 353, 372,
	177, 347, 266, 273, 188, 190, 189, 172, 324, 351,
	182, 193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 225, 0, 0, 366, 0, 319, 318, 0,
	232, 0, 0, 0, 306, 0, 239, 163, 0, 375,
	176, 244, 348, 0, 219, 279, 197, 0, 288, 0,
	157, 302, 261, 263, 260, 264, 222, 0, 0, 0,
	304, 321, 350, 178, 337, 0, 0, 0, 0, 312,
	0, 0, 0, 255, 211, 215, 226, 236, 0, 308,
	338, 367, 0, 173, 166, 340, 360, 183, 320, 323,
	374, 0, 168, 0, 0, 0, 0, 0, 0, 0,
	167, 0, 0, 0, 0, 0, 0, 221, 0, 358,
	359, 196, 376, 0, 0, 169, 0, 0, 276, 283,
	275, 0, 354, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 214, 228, 297, 252, 298, 229, 271, 270,
	272, 253, 0, 0, 164, 0, 335, 0, 0, 339,
	180, 0, 0, 349, 0, 303, 181, 220, 212, 296,
	274, 174, 231, 333, 243, 251, 0, 0, 287, 311,
	185, 364, 332, 208, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 131, 0, 0, 0, 132, 0, 0, 133, 134,
	0, 0, 0, 0, 135, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 165, 175, 184, 202, 200, 213, 240, 262, 267,
	292, 322, 327, 342, 343, 344, 0, 345, 204, 0,
	0, 0, 0, 0, 0, 159, 170, 247, 0, 305,
	218, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	365, 201, 0, 0, 466, 171, 179, 187, 199, 210,
	217, 227, 230, 234, 235, 237, 241, 254, 256, 257,
	258, 259, 277, 278, 281, 282, 285, 286, 289, 290,
	291, 294, 295, 301, 0, 307, 313, 314, 315, 316,
	317, 325, 326, 328, 329, 336, 356, 357, 370, 371,
	346, 0, 156, 0, 0, 162, 0, 0, 0, 0,
	0, 284, 161, 0, 0, 0, 3449, 0, 0, 0,
	206, 0, 0, 0, 0, 0, 0, 0, 205, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 368, 334, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 129, 0, 472, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 363, 0, 0, 0,
	0, 300, 223, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 155, 0, 0,
	0, 280, 0, 0, 0, 158, 248, 0, 0, 0,
	195, 0, 310, 0, 362, 0, 0, 309, 250, 355,
	0, 0, 361, 0, 341, 369, 373, 216, 0, 186,
	331, 207, 203, 0, 0, 0, 224, 299, 198, 242,
	0, 0, 0, 191, 0, 0, 0, 330, 352, 160,
	265, 353, 372, 177, 347, 266, 273, 188, 190, 189,
	172, 324, 351, 182, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 225, 0, 0, 366, 0,
	319, 318, 0, 232, 0, 0, 0, 306, 0, 239,
	163, 0, 375, 176, 244, 348, 0, 219, 279, 197,
	0, 288, 0, 157, 302, 261, 263, 260, 264, 222,
	0, 0, 0, 304, 321, 350, 178, 337, 0, 0,
	0, 0, 312, 0, 0, 0, 255, 211, 215, 226,
	236, 0, 308, 338, 367, 0, 173, 166, 340, 360,
	183, 320, 323, 374, 0, 168, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 0, 0, 0, 0, 0,
	221, 0, 358, 359, 196, 376, 0, 0, 169, 0,
	0, 276, 283, 275, 0, 354, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 214, 228, 297, 252, 298,
	229, 271, 270, 272, 253, 0, 0, 164, 0, 335,
	0, 0, 339, 180, 0, 0, 349, 0, 303, 181,
	220, 212, 296, 274, 174, 231, 333, 243, 251, 0,
	0, 287, 311, 185, 364, 332, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 131, 0, 0, 0, 132, 0,
	0, 133, 134, 0, 0, 0, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 165, 175, 184, 202, 200, 213,
	240, 262, 267, 292, 322, 327, 342, 343, 344, 0,
	345, 204, 0, 0, 0, 0, 0, 0, 159, 170,
	247, 0, 305, 218, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 365, 201, 0, 0, 0, 171, 179,
	187, 199, 210, 217, 227, 230, 234, 235, 237, 241,
	254, 256, 257, 258, 259, 277, 278, 281, 282, 285,
	286, 289, 290, 291, 294, 295, 301, 0, 307, 313,
	314, 315, 316, 317, 325, 326, 328, 329, 336, 356,
	357, 370, 371, 346, 0, 156, 0, 0, 162, 0,
	0, 0, 0, 0, 284, 161, 0, 0, 0, 0,
	0, 0, 0, 206, 0, 0, 0, 0, 0, 2643,
	0, 205, 194, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 368, 334, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 129, 0,
	472, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 363,
	0, 0, 0, 0, 300, 223, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 0,
	155, 0, 0, 0, 280, 0, 0, 0, 158, 248,
	0, 0, 0, 195, 0, 310, 0, 362, 0, 0,
	309, 250, 355, 0, 0, 361, 0, 341, 369, 373,
	216, 0, 186, 331, 207, 203, 0, 0, 0, 224,
	299, 198, 242, 0, 0, 0, 191, 0, 0, 0,
	330, 352, 160, 265, 353, 372, 177, 347, 266, 273,
	188, 190, 189, 172, 324, 351, 182, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 225, 0,
	0, 366, 0, 319, 318, 0, 232, 0, 0, 0,
	306, 0, 239, 163, 0, 375, 176, 244, 348, 0,
	219, 279, 197, 0, 288, 0, 157, 302, 261, 263,
	260, 264, 222, 0, 0, 0, 304, 321, 350, 178,
	337, 0, 0, 0, 0, 312, 0, 0, 0, 255,
	211, 215, 226, 236, 0, 308, 338, 367, 0, 173,
	166, 340, 360, 183, 320, 323, 374, 0, 168, 0,
	0, 0, 0, 0, 0, 0, 167, 0, 0, 0,
	0, 0, 0, 221, 0, 358, 359, 196, 376, 0,
	0, 169, 0, 0, 276, 283, 275, 0, 354, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 214, 228,
	297, 252, 298, 229, 271, 270, 272, 253, 0, 0,
	164, 0, 335, 0, 0, 339, 180, 0, 0, 349,
	0, 303, 181, 220, 212, 296, 274, 174, 231, 333,
	243, 251, 0, 0, 287, 311, 185, 364, 332, 208,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 131, 0, 0,
	0, 132, 0, 0, 133, 134, 0, 0, 0, 0,
	135, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 165, 175, 184,
	202, 200, 213, 240, 262, 267, 292, 322, 327, 342,
	343, 344, 0, 345, 204, 0, 0, 0, 0, 0,
	0, 159, 170, 247, 0, 305, 218, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 365, 201, 0, 0,
	0, 171, 179, 187, 199, 210, 217, 227, 230, 234,
	235, 237, 241, 254, 256, 257, 258, 259, 277, 278,
	281, 282, 285, 286, 289, 290, 291, 294, 295, 301,
	0, 307, 313, 314, 315, 316, 317, 325, 326, 328,
	329, 336, 356, 357, 370, 371, 346, 0, 156, 0,
	0, 162, 0, 0, 0, 0, 0, 284, 161, 0,
	0, 0, 0, 0, 0, 0, 206, 0, 0, 0,
	0, 0, 0, 0, 205, 194, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	368, 334, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 129, 0, 472, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 363, 0, 0, 0, 0, 300, 223, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 0, 155, 0, 0, 0, 280, 0, 0,
	0, 158, 248, 0, 0, 0, 195, 0, 310, 0,
	362, 0, 0, 309, 250, 355, 0, 0, 361, 0,
	341, 369, 373, 216, 0, 186, 331, 207, 203, 0,
	0, 0, 224, 299, 198, 242, 0, 0, 0, 191,
	0, 0, 0, 330, 352, 160, 265, 353, 372, 177,
	347, 266, 273, 188, 190, 189, 172, 324, 351, 182,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 225, 0, 0, 366, 0, 319, 318, 0, 232,
	0, 0, 0, 306, 0, 239, 163, 0, 375, 176,
	244, 348, 0, 219, 279, 197, 0, 288, 0, 157,
	302, 261, 263, 260, 264, 222, 0, 0, 0, 304,
	321, 350, 178, 337, 0, 0, 0, 0, 312, 0,
	0, 0, 255, 211, 215, 226, 236, 0, 308, 338,
	367, 0, 173, 166, 340, 360, 183, 320, 323, 374,
	0, 168, 0, 0, 0, 0, 0, 0, 0, 167,
	0, 0, 0, 0, 0, 0, 221, 0, 358, 359,
	196, 376, 0, 0, 169, 0, 0, 276, 283, 275,
	0, 354, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 214, 228, 297, 252, 298, 229, 271, 270, 272,
	253, 0, 0, 164, 0, 335, 0, 0, 339, 180,
	0, 0, 349, 0, 303, 181, 220, 212, 296, 274,
	174, 231, 333, 243, 251, 0, 0, 287, 311, 185,
	364, 332, 208, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	131, 0, 0, 0, 132, 0, 0, 133, 134, 0,
	0, 0, 0, 135, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	165, 175, 184, 202, 200, 213, 240, 262, 267, 292,
	322, 327, 342, 343, 344, 0, 345, 204, 0, 0,
	0, 0, 0, 0, 159, 170, 247, 0, 305, 218,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 365,
	201, 0, 0, 0, 171, 179, 187, 199, 210, 217,
	227, 230, 234, 235, 237, 241, 254, 256, 257, 258,
	259, 277, 278, 281, 282, 285, 286, 289, 290, 291,
	294, 295, 301, 0, 307, 313, 314, 315, 316, 317,
	325, 326, 328, 329, 336, 356, 357, 370, 371, 346,
	0, 156, 0, 0, 162, 0, 0, 0, 0, 0,
	284, 161, 0, 0, 0, 0, 0, 0, 0, 206,
	0, 0, 0, 0, 0, 0, 0, 205, 194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 368, 334, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 943, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 363, 0, 0, 0, 0,
	300, 223, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 155, 0, 0, 0,
	280, 0, 0, 0, 158, 248, 0, 0, 0, 195,
	0, 310, 0, 362, 0, 0, 309, 250, 355, 0,
	0, 361, 0, 341, 369, 373, 216, 0, 186, 331,
	207, 203, 0, 0, 0, 224, 299, 198, 242, 0,
	0, 0, 191, 0, 0, 0, 330, 352, 160, 265,
	353, 372, 177, 347, 266, 273, 188, 190, 189, 172,
	324, 351, 182, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 225, 0, 0, 366, 0, 319,
	318, 0, 232, 0, 0, 0, 306, 0, 239, 163,
	0, 375, 176, 244, 348, 0, 219, 279, 197, 0,
	288, 0, 157, 302, 261, 263, 260, 264, 222, 0,
	0, 0, 304, 321, 350, 178, 337, 0, 0, 0,
	0, 312, 0, 0, 0, 255, 211, 215, 226, 236,
	0, 308, 338, 367, 0, 173, 166, 340, 360, 183,
	320, 323, 374, 0, 168, 0, 0, 0, 0, 0,
	0, 0, 167, 0, 0, 0, 0, 0, 0, 221,
	0, 358, 359, 196, 376, 0, 0, 169, 0, 0,
	276, 283, 275, 0, 354, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 214, 228, 297, 252, 298, 229,
	271, 270, 272, 253, 0, 0, 164, 0, 335, 0,
	0, 339, 180, 0, 0, 349, 0, 303, 181, 220,
	212, 296, 274, 174, 231, 333, 243, 251, 0, 0,
	287, 311, 185, 364, 332, 208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 131, 0, 0, 0, 132, 0, 0,
	133, 134, 0, 0, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 165, 175, 184, 202, 200, 213, 240,
	262, 267, 292, 322, 327, 342, 343, 344, 0, 345,
	204, 0, 0, 0, 0, 0, 0, 159, 170, 247,
	0, 305, 218, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 365, 201, 0, 0, 0, 171, 179, 187,
	199, 210, 217, 227, 230, 234, 235, 237, 241, 254,
	256, 257, 258, 259, 277, 278, 281, 282, 285, 286,
	289, 290, 291, 294, 295, 301, 0, 307, 313, 314,
	315, 316, 317, 325, 326, 328, 329, 336, 356, 357,
	370, 371, 346, 0, 156, 0, 0, 162, 0, 0,
	0, 0, 0, 284, 161, 0, 3410, 0, 0, 0,
	0, 0, 206, 3408, 0, 0, 0, 0, 0, 0,
	205, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 368, 334, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 455, 0, 454,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	0, 0, 0, 300, 223, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 155,
	0, 0, 0, 280, 0, 0, 0, 158, 248, 0,
	0, 0, 195, 0, 310, 0, 362, 0, 0, 309,
	250, 355, 0, 0, 361, 0, 341, 369, 373, 216,
	0, 186, 331, 207, 203, 0, 0, 0, 224, 299,
	198, 242, 0, 0, 0, 191, 0, 0, 0, 330,
	352, 160, 265, 353, 372, 177, 347, 266, 273, 188,
	190, 189, 172, 324, 351, 182, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 225, 0, 0,
	366, 0, 319, 318, 0, 232, 0, 3409, 0, 306,
	0, 239, 163, 0, 375, 176, 244, 348, 0, 219,
	279, 197, 0, 288, 0, 157, 302, 261, 263, 260,
	264, 222, 0, 0, 0, 304, 321, 350, 178, 337,
	0, 0, 0, 0, 312, 0, 0, 0, 255, 211,
	215, 226, 236, 0, 308, 338, 367, 0, 173, 166,
	340, 360, 183, 320, 323, 374, 0, 168, 0, 0,
	0, 0, 0, 0, 0, 167, 0, 0, 0, 0,
	0, 0, 221, 0, 358, 359, 196, 376, 0, 0,
	169, 0, 0, 276, 283, 275, 0, 354, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 214, 228, 297,
	252, 298, 229, 271, 270, 272, 253, 0, 0, 164,
	0, 335, 0, 0, 339, 180, 0, 0, 349, 0,
	303, 181, 220, 212, 296, 274, 174, 231, 333, 243,
	251, 0, 0, 287, 311, 185, 364, 332, 208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 165, 175, 184, 202,
	200, 213, 240, 262, 267, 292, 322, 327, 342, 343,
	344, 0, 345, 204, 0, 0, 0, 0, 0, 0,
	159, 170, 247, 0, 305, 218, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 365, 201, 0, 0, 0,
	171, 179, 187, 199, 210, 217, 227, 230, 234, 235,
	237, 241, 254, 256, 257, 258, 259, 277, 278, 281,
	282, 285, 286, 289, 290, 291, 294, 295, 301, 0,
	307, 313, 314, 315, 316, 317, 325, 326, 328, 329,
	336, 356, 357, 370, 371, 346, 0, 156, 0, 0,
	162, 0, 0, 0, 0, 0, 284, 161, 0, 0,
	0, 0, 0, 0, 0, 206, 0, 0, 0, 0,
	0, 0, 0, 205, 194, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 368,
	334, 268, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	943, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2463, 0,
	0, 363, 0, 0, 0, 0, 300, 223, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 155, 0, 0, 0, 280, 0, 0, 0,
	158, 248, 0, 0, 0, 195, 0, 310, 0, 362,
	0, 0, 309, 250, 355, 0, 0, 361, 0, 341,
	369, 373, 216, 0, 186, 331, 207, 203, 0, 0,
	0, 224, 299, 198, 242, 2464, 2465, 0, 191, 0,
	0, 0, 330, 352, 160, 265, 353, 372, 177, 347,
	266, 273, 188, 190, 189, 172, 324, 351, 182, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	225, 0, 0, 366, 0, 319, 318, 0, 232, 0,
	0, 0, 306, 0, 239, 163, 0, 375, 176, 244,
	348, 0, 219, 279, 197, 0, 288, 0, 157, 302,
	261, 263, 260, 264, 222, 0, 0, 0, 304, 321,
	350, 178, 337, 0, 0, 0, 0, 312, 0, 0,
	0, 255, 211, 215, 226, 236, 0, 308, 338, 367,
	0, 173, 166, 340, 360, 183, 320, 323, 374, 0,
	168, 0, 0, 0, 0, 0, 0, 0, 167, 0,
	0, 0, 0, 0, 0, 221, 0, 358, 359, 196,
	376, 0, 0, 169, 0, 0, 276, 283, 275, 0,
	354, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	214, 228, 297, 252, 298, 229, 271, 270, 272, 253,
	0, 0, 164, 0, 335, 0, 0, 339, 180, 0,
	0, 349, 0, 303, 181, 220, 212, 296, 274, 174,
	231, 333, 243, 251, 0, 0, 287, 311, 185, 364,
	332, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 165,
	175, 184, 202, 200, 213, 240, 262, 267, 292, 322,
	327, 342, 343, 344, 0, 345, 204, 0, 0, 0,
	0, 0, 0, 159, 170, 247, 0, 305, 218, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 365, 201,
	0, 0, 0, 171, 179, 187, 199, 210, 217, 227,
	230, 234, 235, 237, 241, 254, 256, 257, 258, 259,
	277, 278, 281, 282, 285, 286, 289, 290, 291, 294,
	295, 301, 0, 307, 313, 314, 315, 316, 317, 325,
	326, 328, 329, 336, 356, 357, 370, 371, 346, 0,
	156, 0, 0, 162, 0, 0, 0, 0, 0, 284,
	161, 0, 0, 0, 0, 0, 0, 0, 206, 0,
	0, 0, 0, 0, 0, 0, 205, 194, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 368, 334, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 455, 0, 454, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 363, 0, 0, 0, 0, 300,
	223, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 0, 155, 0, 0, 0, 280,
	0, 0, 0, 158, 248, 0, 0, 0, 195, 0,
	310, 0, 362, 0, 0, 309, 250, 355, 0, 0,
	361, 0, 341, 369, 373, 216, 0, 186, 331, 207,
	203, 0, 0, 0, 224, 299, 198, 242, 0, 0,
	0, 191, 0, 0, 0, 330, 352, 160, 265, 353,
	372, 177, 347, 266, 273, 188, 190, 189, 172, 324,
	351, 182, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 225, 0, 0, 366, 0, 319, 318,
	0, 232, 0, 0, 0, 306, 0, 239, 163, 0,
	375, 176, 244, 348, 0, 219, 279, 197, 0, 288,
	0, 157, 302, 261, 263, 260, 264, 222, 0, 0,
	0, 304, 321, 350, 178, 337, 0, 0, 0, 0,
	312, 0, 0, 0, 255, 211, 215, 226, 236, 0,
	308, 338, 367, 0, 173, 166, 340, 360, 183, 320,
	323, 374, 0, 168, 0, 0, 0, 0, 0, 0,
	0, 167, 0, 0, 0, 0, 0, 0, 221, 0,
	358, 359, 196, 376, 0, 0, 169, 0, 0, 276,
	283, 275, 0, 354, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 214, 228, 297, 252, 298, 229, 271,
	270, 272, 253, 0, 0, 164, 0, 335, 0, 0,
	339, 180, 0, 0, 349, 0, 303, 181, 220, 212,
	296, 274, 174, 231, 333, 243, 251, 0, 0, 287,
	311, 185, 364, 332, 208, 0, 0, 0, 1726, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 165, 175, 184, 202, 200, 213, 240, 262,
	267, 292, 322, 327, 342, 343, 344, 0, 345, 204,
	0, 0, 0, 0, 0, 0, 159, 170, 247, 0,
	305, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 365, 201, 0, 0, 0, 171, 179, 187, 199,
	210, 217, 227, 230, 234, 235, 237, 241, 254, 256,
	257, 258, 259, 277, 278, 281, 282, 285, 286, 289,
	290, 291, 294, 295, 301, 0, 307, 313, 314, 315,
	316, 317, 325, 326, 328, 329, 336, 356, 357, 370,
	371, 346, 0, 156, 0, 0, 162, 0, 0, 0,
	0, 0, 284, 161, 0, 0, 0, 0, 0, 0,
	0, 206, 1306, 0, 0, 0, 0, 0, 0, 205,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 368, 334, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 943, 0, 1305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 363, 0, 0,
	0, 0, 300, 223, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 0, 155, 0,
	0, 0, 280, 0, 0, 0, 158, 248, 0, 0,
	0, 195, 0, 310, 0, 362, 0, 0, 309, 250,
	355, 0, 0, 361, 0, 341, 369, 373, 216, 0,
	186, 331, 207, 203, 0, 0, 0, 224, 299, 198,
	242, 0, 0, 0, 191, 0, 0, 0, 330, 352,
	160, 265, 353, 372, 177, 347, 266, 273, 188, 190,
	189, 172, 324, 351, 182, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 225, 0, 0, 366,
	0, 319, 318, 0, 232, 0, 0, 0, 306, 0,
	239, 163, 0, 375, 176, 244, 348, 0, 219, 279,
	197, 0, 288, 0, 157, 302, 261, 263, 260, 264,
	222, 0, 0, 0, 304, 321, 350, 178, 337, 0,
	0, 0, 0, 312, 0, 0, 0, 255, 211, 215,
	226, 236, 0, 308, 338, 367, 0, 173, 166, 340,
	360, 183, 320, 323, 374, 0, 168, 0, 0, 0,
	0, 0, 0, 0, 167, 0, 0, 0, 0, 0,
	0, 221, 0, 358, 359, 196, 376, 0, 0, 169,
	0, 0, 276, 283, 275, 0, 354, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 214, 228, 297, 252,
	298, 229, 271, 270, 272, 253, 0, 0, 164, 0,
	335, 0, 0, 339, 180, 0, 0, 349, 0, 303,
	181, 220, 212, 296, 274, 174, 231, 333, 243, 251,
	0, 0, 287, 311, 185, 364, 332, 208, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 165, 175, 184, 202, 200,
	213, 240, 262, 267, 292, 322, 327, 342, 343, 344,
	0, 345, 204, 0, 0, 0, 0, 0, 0, 159,
	170, 247, 0, 305, 218, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 365, 201, 0, 0, 0, 171,
	179, 187, 199, 210, 217, 227, 230, 234, 235, 237,
	241, 254, 256, 257, 258, 259, 277, 278, 281, 282,
	285, 286, 289, 290, 291, 294, 295, 301, 0, 307,
	313, 314, 315, 316, 317, 325, 326, 328, 329, 336,
	356, 357, 370, 371, 346, 0, 156, 0, 0, 162,
	0, 0, 0, 0, 0, 284, 161, 0, 0, 0,
	0, 0, 0, 0, 206, 0, 0, 0, 0, 0,
	0, 0, 205, 194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 368, 334,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 455,
	0, 454, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	363, 0, 0, 0, 0, 300, 223, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 155, 0, 0, 0, 280, 0, 0, 0, 158,
	248, 0, 0, 0, 195, 0, 310, 0, 362, 0,
	0, 309, 250, 355, 0, 0, 361, 0, 341, 369,
	373, 216, 0, 186, 331, 207, 203, 0, 0, 0,
	224, 299, 198, 242, 0, 0, 0, 191, 0, 0,
	0, 330, 352, 160, 265, 353, 372, 177, 347, 266,
	273, 188, 190, 189, 172, 324, 351, 182, 193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 225,
	0, 0, 366, 0, 319, 318, 0, 232, 0, 0,
	0, 306, 0, 239, 163, 0, 375, 176, 244, 348,
	0, 219, 279, 197, 0, 288, 0, 157, 302, 261,
	263, 260, 264, 222, 0, 0, 0, 304, 321, 350,
	178, 337, 0, 0, 0, 0, 312, 0, 0, 0,
	255, 211, 215, 226, 236, 0, 308, 338, 367, 0,
	173, 166, 340, 360, 183, 320, 323, 374, 0, 168,
	0, 0, 0, 0, 0, 0, 0, 167, 0, 0,
	0, 0, 0, 0, 221, 0, 358, 359, 196, 376,
	0, 0, 169, 0, 0, 276, 283, 275, 0, 354,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 214,
	228, 297, 252, 298, 229, 271, 270, 272, 253, 0,
	0, 164, 0, 335, 0, 0, 339, 180, 0, 0,
	349, 0, 303, 181, 220, 212, 296, 274, 174, 231,
	333, 243, 251, 0, 0, 287, 311, 185, 364, 332,
	208, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 165, 175,
	184, 202, 200, 213, 240, 262, 267, 292, 322, 327,
	342, 343, 344, 0, 345, 204, 0, 0, 0, 0,
	0, 0, 159, 170, 247, 0, 305, 218, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 365, 201, 0,
	0, 0, 171, 179, 187, 199, 210, 217, 227, 230,
	234, 235, 237, 241, 254, 256, 257, 258, 259, 277,
	278, 281, 282, 285, 286, 289, 290, 291, 294, 295,
	301, 0, 307, 313, 314, 315, 316, 317, 325, 326,
	328, 329, 336, 356, 357, 370, 371, 346, 0, 156,
	0, 0, 162, 0, 0, 0, 0, 0, 284, 161,
	0, 0, 0, 0, 0, 0, 0, 206, 0, 0,
	0, 0, 0, 0, 0, 205, 194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 368, 334, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2801, 0,
	0, 0, 2803, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 363, 0, 0, 0, 0, 300, 223,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 155, 0, 0, 0, 280, 0,
	0, 0, 158, 248, 0, 0, 0, 195, 0, 310,
	0, 362, 0, 0, 309, 250, 355, 0, 0, 361,
	0, 341, 369, 373, 216, 0, 186, 331, 207, 203,
	0, 0, 0, 224, 299, 198, 242, 0, 0, 0,
	191, 0, 0, 0, 330, 352, 160, 265, 353, 372,
	177, 347, 266, 273, 188, 190, 189, 172, 324, 351,
	182, 193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 225, 0, 0, 366, 0, 319, 318, 0,
	232, 0, 0, 0, 306, 0, 239, 163, 0, 375,
	176, 244, 348, 0, 219, 279, 197, 0, 288, 0,
	157, 302, 261, 263, 260, 264, 222, 0, 0, 0,
	304, 321, 350, 178, 337, 0, 0, 0, 0, 312,
	0, 0, 0, 255, 211, 215, 226, 236, 0, 308,
	338, 367, 0, 173, 166, 340, 360, 183, 320, 323,
	374, 0, 168, 0, 0, 0, 0, 0, 0, 0,
	167, 0, 0, 0, 0, 0, 0, 221, 0, 358,
	359, 196, 376, 0, 0, 169, 0, 0, 276, 283,
	275, 0, 354, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 214, 228, 297, 252, 298, 229, 271, 270,
	272, 253, 0, 0, 164, 0, 335, 0, 0, 339,
	180, 0, 0, 349, 0, 303, 181, 220, 212, 296,
	274, 174, 231, 333, 243, 251, 0, 0, 287, 311,
	185, 364, 332, 208, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 165, 175, 184, 202, 200, 213, 240, 262, 267,
	292, 322, 327, 342, 343, 344, 0, 345, 204, 0,
	0, 0, 0, 0, 0, 159, 170, 247, 0, 305,
	218, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	365, 201, 0, 0, 0, 171, 179, 187, 199, 210,
	217, 227, 230, 234, 235, 237, 241, 254, 256, 257,
	258, 259, 277, 278, 281, 282, 285, 286, 289, 290,
	291, 294, 295, 301, 0, 307, 313, 314, 315, 316,
	317, 325, 326, 328, 329, 336, 356, 357, 370, 371,
	346, 0, 156, 0, 0, 162, 0, 0, 0, 0,
	0, 284, 161, 0, 0, 0, 0, 0, 0, 0,
	206, 0, 0, 0, 0, 0, 0, 0, 205, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 368, 334, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 943, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 363, 0, 0, 0,
	0, 300, 223, 0, 0, 0, 0, 0, 0, 2788,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 155, 0, 0,
	0, 280, 0, 0, 0, 158, 248, 0, 0, 0,
	195, 0, 310, 0, 362, 0, 0, 309, 250, 355,
	0, 0, 361, 0, 341, 369, 373, 216, 0, 186,
	331, 207, 203, 0, 0, 0, 224, 299, 198, 242,
	0, 0, 0, 191, 0, 0, 0, 330, 352, 160,
	265, 353, 372, 177, 347, 266, 273, 188, 190, 189,
	172, 324, 351, 182, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 225, 0, 0, 366, 0,
	319, 318, 0, 232, 0, 0, 0, 306, 0, 239,
	163, 0, 375, 176, 244, 348, 0, 219, 279, 197,
	0, 288, 0, 157, 302, 261, 263, 260, 264, 222,
	0, 0, 0, 304, 321, 350, 178, 337, 0, 0,
	0, 0, 312, 0, 0, 0, 255, 211, 215, 226,
	236, 0, 308, 338, 367, 0, 173, 166, 340, 360,
	183, 320, 323, 374, 0, 168, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 0, 0, 0, 0, 0,
	221, 0, 358, 359, 196, 376, 0, 0, 169, 0,
	0, 276, 283, 275, 0, 354, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 214, 228, 297, 252, 298,
	229, 271, 270, 272, 253, 0, 0, 164, 0, 335,
	0, 0, 339, 180, 0, 0, 349, 0, 303, 181,
	220, 212, 296, 274, 174, 231, 333, 243, 251, 0,
	0, 287, 311, 185, 364, 332, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 165, 175, 184, 202, 200, 213,
	240, 262, 267, 292, 322, 327, 342, 343, 344, 0,
	345, 204, 0, 0, 0, 0, 0, 0, 159, 170,
	247, 0, 305, 218, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 365, 201, 0, 0, 0, 171, 179,
	187, 199, 210, 217, 227, 230, 234, 235, 237, 241,
	254, 256, 257, 258, 259, 277, 278, 281, 282, 285,
	286, 289, 290, 291, 294, 295, 301, 0, 307, 313,
	314, 315, 316, 317, 325, 326, 328, 329, 336, 356,
	357, 370, 371, 346, 0, 156, 0, 0, 162, 0,
	0, 0, 0, 0, 284, 161, 0, 0, 0, 0,
	0, 0, 0, 206, 0, 0, 0, 0, 0, 0,
	0, 205, 194, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 368, 334, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 77, 0, 0, 0, 943, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 363,
	0, 0, 0, 0, 300, 223, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 0,
	155, 0, 0, 0, 280, 0, 0, 0, 158, 248,
	0, 0, 0, 195, 0, 310, 0, 362, 0, 0,
	309, 250, 355, 0, 0, 361, 0, 341, 369, 373,
	216, 0, 186, 331, 207, 203, 0, 0, 0, 224,
	299, 198, 242, 0, 0, 0, 191, 0, 0, 0,
	330, 352, 160, 265, 353, 372, 177, 347, 266, 273,
	188, 190, 189, 172, 324, 351, 182, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 225, 0,
	0, 366, 0, 319, 318, 0, 232, 0, 0, 0,
	306, 0, 239, 163, 0, 375, 176, 244, 348, 0,
	219, 279, 197, 0, 288, 0, 157, 302, 261, 263,
	260, 264, 222, 0, 0, 0, 304, 321, 350, 178,
	337, 0, 0, 0, 0, 312, 0, 0, 0, 255,
	211, 215, 226, 236, 0, 308, 338, 367, 0, 173,
	166, 340, 360, 183, 320, 323, 374, 0, 168, 0,
	0, 0, 0, 0, 0, 0, 167, 0, 0, 0,
	0, 0, 0, 221, 0, 358, 359, 196, 376, 0,
	0, 169, 0, 0, 276, 283, 275, 0, 354, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 214, 228,
	297, 252, 298, 229, 271, 270, 272, 253, 0, 0,
	164, 0, 335, 0, 0, 339, 180, 0, 0, 349,
	0, 303, 181, 220, 212, 296, 274, 174, 231, 333,
	243, 251, 0, 0, 287, 311, 185, 364, 332, 208,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 165, 175, 184,
	202, 200, 213, 240, 262, 267, 292, 322, 327, 342,
	343, 344, 0, 345, 204, 0, 0, 0, 0, 0,
	0, 159, 170, 247, 0, 305, 218, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 365, 201, 0, 0,
	0, 171, 179, 187, 199, 210, 217, 227, 230, 234,
	235, 237, 241, 254, 256, 257, 258, 259, 277, 278,
	281, 282, 285, 286, 289, 290, 291, 294, 295, 301,
	0, 307, 313, 314, 315, 316, 317, 325, 326, 328,
	329, 336, 356, 357, 370, 371, 346, 0, 156, 0,
	0, 162, 0, 0, 0, 0, 0, 284, 161, 0,
	0, 0, 0, 0, 0, 0, 206, 0, 0, 0,
	0, 0, 0, 0, 205, 194, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	368, 334, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 943, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 363, 0, 0, 0, 0, 300, 223, 0,
	0, 0, 0, 0, 0, 2158, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 0, 155, 0, 0, 0, 280, 0, 0,
	0, 158, 248, 0, 0, 0, 195, 0, 310, 0,
	362, 0, 0, 309, 250, 355, 0, 0, 361, 0,
	341, 369, 373, 216, 0, 186, 331, 207, 203, 0,
	0, 0, 224, 299, 198, 242, 0, 0, 0, 191,
	0, 0, 0, 330, 352, 160, 265, 353, 372, 177,
	347, 266, 273, 188, 190, 189, 172, 324, 351, 182,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 225, 0, 0, 366, 0, 319, 318, 0, 232,
	0, 0, 0, 306, 0, 239, 163, 0, 375, 176,
	244, 348, 0, 219, 279, 197, 0, 288, 0, 157,
	302, 261, 263, 260, 264, 222, 0, 0, 0, 304,
	321, 350, 178, 337, 0, 0, 0, 0, 312, 0,
	0, 0, 255, 211, 215, 226, 236, 0, 308, 338,
	367, 0, 173, 166, 340, 360, 183, 320, 323, 374,
	0, 168, 0, 0, 0, 0, 0, 0, 0, 167,
	0, 0, 0, 0, 0, 0, 221, 0, 358, 359,
	196, 376, 0, 0, 169, 0, 0, 276, 283, 275,
	0, 354, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 214, 228, 297, 252, 298, 229, 271, 270, 272,
	253, 0, 0, 164, 0, 335, 0, 0, 339, 180,
	0, 0, 349, 0, 303, 181, 220, 212, 296, 274,
	174, 231, 333, 243, 251, 0, 0, 287, 311, 185,
	364, 332, 208, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	165, 175, 184, 202, 200, 213, 240, 262, 267, 292,
	322, 327, 342, 343, 344, 0, 345, 204, 0, 0,
	0, 0, 0, 0, 159, 170, 247, 0, 305, 218,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 365,
	201, 0, 0, 0, 171, 179, 187, 199, 210, 217,
	227, 230, 234, 235, 237, 241, 254, 256, 257, 258,
	259, 277, 278, 281, 282, 285, 286, 289, 290, 291,
	294, 295, 301, 0, 307, 313, 314, 315, 316, 317,
	325, 326, 328, 329, 336, 356, 357, 370, 371, 346,
	0, 156, 0, 0, 162, 0, 0, 0, 0, 0,
	284, 161, 0, 0, 0, 0, 0, 0, 0, 206,
	0, 0, 0, 0, 0, 0, 2195, 2196, 194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 368, 334, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 943, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 363, 0, 0, 0, 0,
	300, 223, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 155, 0, 0, 0,
	280, 0, 0, 0, 158, 248, 0, 0, 0, 195,
	0, 310, 0, 362, 0, 0, 309, 250, 355, 0,
	0, 361, 0, 341, 369, 373, 216, 0, 186, 331,
	207, 203, 0, 0, 0, 224, 299, 198, 242, 0,
	0, 0, 191, 0, 0, 0, 330, 352, 160, 265,
	353, 372, 177, 347, 266, 273, 188, 190, 189, 172,
	324, 351, 182, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 225, 0, 0, 366, 0, 319,
	318, 0, 232, 0, 0, 0, 306, 0, 239, 163,
	0, 375, 176, 244, 348, 0, 219, 279, 197, 0,
	288, 0, 157, 302, 261, 263, 260, 264, 222, 0,
	0, 0, 304, 321, 350, 178, 337, 0, 0, 0,
	0, 312, 0, 0, 0, 255, 211, 215, 226, 236,
	0, 308, 338, 367, 0, 173, 166, 340, 360, 183,
	320, 323, 374, 0, 168, 0, 0, 0, 0, 0,
	0, 0, 167, 0, 0, 0, 0, 0, 0, 221,
	0, 358, 359, 196, 376, 0, 0, 169, 0, 0,
	276, 283, 275, 0, 354, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 214, 228, 297, 252, 298, 229,
	271, 270, 272, 253, 0, 0, 164, 0, 335, 0,
	0, 339, 180, 0, 0, 349, 0, 303, 181, 220,
	212, 296, 274, 174, 231, 333, 243, 251, 0, 0,
	287, 311, 185, 364, 332, 208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 165, 175, 184, 202, 200, 213, 240,
	262, 267, 292, 322, 327, 342, 343, 344, 0, 345,
	204, 0, 0, 0, 0, 0, 0, 159, 170, 247,
	0, 305, 218, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 365, 201, 0, 0, 0, 171, 179, 187,
	199, 210, 217, 227, 230, 234, 235, 237, 241, 254,
	256, 257, 258, 259, 277, 278, 281, 282, 285, 286,
	289, 290, 291, 294, 295, 301, 0, 307, 313, 314,
	315, 316, 317, 325, 326, 328, 329, 336, 356, 357,
	370, 371, 346, 0, 156, 0, 0, 162, 0, 0,
	0, 0, 0, 284, 161, 0, 0, 0, 0, 0,
	0, 0, 206, 0, 0, 0, 0, 0, 0, 0,
	205, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 368, 334, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 943, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	0, 0, 0, 300, 223, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 155,
	0, 0, 0, 280, 0, 0, 0, 158, 248, 0,
	0, 0, 195, 0, 310, 0, 362, 0, 0, 309,
	250, 355, 0, 0, 361, 0, 341, 369, 373, 216,
	0, 186, 331, 207, 203, 0, 0, 0, 224, 299,
	198, 242, 0, 0, 0, 191, 0, 0, 0, 330,
	352, 160, 265, 353, 372, 177, 347, 266, 273, 188,
	190, 189, 172, 324, 351, 182, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 225, 0, 0,
	366, 0, 319, 318, 0, 232, 0, 0, 0, 306,
	0, 239, 163, 0, 375, 176, 244, 348, 0, 219,
	279, 197, 0, 288, 0, 157, 302, 261, 263, 260,
	264, 222, 0, 0, 0, 304, 321, 350, 178, 337,
	0, 0, 0, 0, 312, 0, 0, 0, 255, 211,
	215, 226, 236, 0, 308, 338, 367, 0, 173, 166,
	340, 360, 183, 320, 323, 374, 0, 168, 0, 0,
	0, 0, 0, 0, 0, 167, 0, 0, 0, 0,
	0, 0, 221, 0, 358, 359, 196, 376, 0, 0,
	169, 0, 0, 276, 283, 275, 0, 354, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 214, 228, 297,
	252, 298, 229, 271, 270, 272, 253, 0, 0, 164,
	0, 335, 0, 0, 339, 180, 0, 0, 349, 0,
	303, 181, 220, 212, 296, 274, 174, 231, 333, 243,
	251, 0, 0, 287, 311, 185, 364, 332, 208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 165, 175, 184, 202,
	200, 213, 240, 262, 267, 292, 322, 327, 342, 343,
	344, 0, 345, 204, 0, 0, 0, 0, 0, 0,
	159, 170, 247, 0, 305, 218, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 365, 201, 0, 0, 0,
	171, 179, 187, 199, 210, 217, 227, 230, 234, 235,
	237, 241, 254, 256, 257, 258, 259, 277, 278, 281,
	282, 285, 286, 289, 290, 291, 294, 295, 301, 0,
	307, 313, 314, 315, 316, 317, 325, 326, 328, 329,
	336, 356, 357, 370, 371, 346, 0, 156, 0, 0,
	162, 0, 0, 0, 0, 0, 284, 161, 0, 0,
	0, 0, 0, 0, 0, 206, 0, 0, 0, 0,
	0, 0, 0, 205, 194, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 368,
	334, 268, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2803, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 363, 0, 0, 0, 0, 300, 223, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 155, 0, 0, 0, 280, 0, 0, 0,
	158, 248, 0, 0, 0, 195, 0, 310, 0, 362,
	0, 0, 309, 250, 355, 0, 0, 361, 0, 341,
	369, 373, 216, 0, 186, 331, 207, 203, 0, 0,
	0, 224, 299, 198, 242, 0, 0, 0, 191, 0,
	0, 0, 330, 352, 160, 265, 353, 372, 177, 347,
	266, 273, 188, 190, 189, 172, 324, 351, 182, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	225, 0, 0, 366, 0, 319, 318, 0, 232, 0,
	0, 0, 306, 0, 239, 163, 0, 375, 176, 244,
	348, 0, 219, 279, 197, 0, 288, 0, 157, 302,
	261, 263, 260, 264, 222, 0, 0, 0, 304, 321,
	350, 178, 337, 0, 0, 0, 0, 312, 0, 0,
	0, 255, 211, 215, 226, 236, 0, 308, 338, 367,
	0, 173, 166, 340, 360, 183, 320, 323, 374, 0,
	168, 0, 0, 0, 0, 0, 0, 0, 167, 0,
	0, 0, 0, 0, 0, 221, 0, 358, 359, 196,
	376, 0, 0, 169, 0, 0, 276, 283, 275, 0,
	354, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	214, 228, 297, 252, 298, 229, 271, 270, 272, 253,
	0, 0, 164, 0, 335, 0, 0, 339, 180, 0,
	0, 349, 0, 303, 181, 220, 212, 296, 274, 174,
	231, 333, 243, 251, 0, 0, 287, 311, 185, 364,
	332, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 165,
	175, 184, 202, 200, 213, 240, 262, 267, 292, 322,
	327, 342, 343, 344, 0, 345, 204, 0, 0, 0,
	0, 0, 0, 159, 170, 247, 0, 305, 218, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 365, 201,
	0, 0, 0, 171, 179, 187, 199, 210, 217, 227,
	230, 234, 235, 237, 241, 254, 256, 257, 258, 259,
	277, 278, 281, 282, 285, 286, 289, 290, 291, 294,
	295, 301, 0, 307, 313, 314, 315, 316, 317, 325,
	326, 328, 329, 336, 356, 357, 370, 371, 346, 0,
	156, 0, 0, 162, 0, 0, 0, 0, 0, 284,
	161, 0, 0, 0, 0, 0, 0, 0, 206, 0,
	0, 0, 0, 0, 0, 0, 205, 194, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 368, 334, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 129, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 363, 0, 0, 0, 0, 300,
	223, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 0, 155, 0, 0, 0, 280,
	0, 0, 0, 158, 248, 0, 0, 0, 195, 0,
	310, 0, 362, 0, 0, 309, 250, 355, 0, 0,
	361, 0, 341, 369, 373, 216, 0, 186, 331, 207,
	203, 0, 0, 0, 224, 299, 198, 242, 0, 0,
	0, 191, 0, 0, 0, 330, 352, 160, 265, 353,
	372, 177, 347, 266, 273, 188, 190, 189, 172, 324,
	351, 182, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 225, 0, 0, 366, 0, 319, 318,
	0, 232, 0, 0, 0, 306, 0, 239, 163, 0,
	375, 176, 244, 348, 0, 219, 279, 197, 0, 288,
	0, 157, 302, 261, 263, 260, 264, 222, 0, 0,
	0, 304, 321, 350, 178, 337, 0, 0, 0, 0,
	312, 0, 0, 0, 255, 211, 215, 226, 236, 0,
	308, 338, 367, 0, 173, 166, 340, 360, 183, 320,
	323, 374, 0, 168, 0, 0, 0, 0, 0, 0,
	0, 167, 0, 0, 0, 0, 0, 0, 221, 0,
	358, 359, 196, 376, 0, 0, 169, 0, 0, 276,
	283, 275, 0, 354, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 214, 228, 297, 252, 298, 229, 271,
	270, 272, 253, 0, 0, 164, 0, 335, 0, 0,
	339, 180, 0, 0, 349, 0, 303, 181, 220, 212,
	296, 274, 174, 231, 333, 243, 251, 0, 0, 287,
	311, 185, 364, 332, 208, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 165, 175, 184, 202, 200, 213, 240, 262,
	267, 292, 322, 327, 342, 343, 344, 0, 345, 204,
	0, 0, 0, 0, 0, 0, 159, 170, 247, 0,
	305, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 365, 201, 0, 0, 0, 171, 179, 187, 199,
	210, 217, 227, 230, 234, 235, 237, 241, 254, 256,
	257, 258, 259, 277, 278, 281, 282, 285, 286, 289,
	290, 291, 294, 295, 301, 0, 307, 313, 314, 315,
	316, 317, 325, 326, 328, 329, 336, 356, 357, 370,
	371, 346, 0, 156, 0, 0, 162, 0, 0, 0,
	0, 0, 284, 161, 0, 0, 0, 0, 0, 0,
	0, 206, 0, 0, 0, 0, 0, 0, 0, 205,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 368, 334, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 496, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 363, 0, 0,
	0, 0, 300, 223, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 0, 155, 0,
	0, 0, 280, 0, 0, 0, 158, 248, 0, 0,
	0, 195, 0, 310, 0, 362, 0, 0, 309, 250,
	355, 0, 0, 361, 0, 341, 369, 373, 216, 0,
	186, 331, 207, 203, 0, 0, 0, 224, 299, 198,
	242, 0, 0, 0, 191, 0, 0, 0, 330, 352,
	160, 265, 353, 372, 177, 347, 266, 273, 188, 190,
	189, 172, 324, 351, 182, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 225, 0, 0, 366,
	0, 319, 318, 0, 232, 0, 0, 0, 306, 0,
	239, 163, 0, 375, 176, 244, 348, 0, 219, 279,
	197, 0, 288, 0, 157, 302, 261, 263, 260, 264,
	222, 0, 0, 0, 304, 321, 350, 178, 337, 0,
	0, 0, 0, 312, 0, 0, 0, 255, 211, 215,
	226, 236, 0, 308, 338, 367, 0, 173, 166, 340,
	360, 183, 320, 323, 374, 0, 168, 0, 0, 0,
	0, 0, 0, 0, 167, 0, 0, 0, 0, 0,
	0, 221, 0, 358, 359, 196, 376, 0, 0, 169,
	0, 0, 276, 283, 275, 0, 354, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 214, 228, 297, 252,
	298, 229, 271, 270, 272, 253, 0, 0, 164, 0,
	335, 0, 0, 339, 180, 0, 0, 349, 0, 303,
	181, 220, 212, 296, 274, 174, 231, 333, 243, 251,
	0, 0, 287, 311, 185, 364, 332, 208, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 165, 175, 184, 202, 200,
	213, 240, 262, 267, 292, 322, 327, 342, 343, 344,
	0, 345, 204, 0, 0, 0, 0, 0, 0, 159,
	170, 247, 0, 305, 218, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 365, 201, 0, 0, 0, 171,
	179, 187, 199, 210, 217, 227, 230, 234, 235, 237,
	241, 254, 256, 257, 258, 259, 277, 278, 281, 282,
	285, 286, 289, 290, 291, 294, 295, 301, 0, 307,
	313, 314, 315, 316, 317, 325, 326, 328, 329, 336,
	356, 357, 370, 371, 0, 0, 156, 0, 0, 162,
	0, 0, 0, 0, 0, 0, 161,
}

var yyPact = [...]int{
	4779, -1000, -443, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2125, -1000, -1000, 319, -1000,
	1259, 262, -1000, 375, 140, 33015, 771, 532, 47741, -1000,
	-1000, -1000, 194, 602, 33628, 493, 749, 1622, 1982, 1620,
	54, -60, -61, 147, 34868, 34248, 13, -1000, 37320, 657,
	69, -1000, -1000, -1000, -1000, 2191, 234, -1000, -1000, 2090,
	2123, 1918, -1000, 6689, -1000, -1000, -1000, -1000, -1000, 20593,
	-1000, 2188, 33628, 27494, -1000, 746, 739, -169, 652, 652,
	559, 652, 652, 770, -1000, 331, 1171, -1000, -1000, -1000,
	-1000, 1170, 33628, 42837, 653, 46515, 653, 653, 653, 653,
	653, 653, 653, 33628, -1000, 858, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 33628, 1619, 2018,
	1179, 222, -1000, -1000, -1000, 1184, -1000, 441, 439, 565,
	433, 142, 1189, 2087, -1000, 1827, 2090, 2090, -1000, -1000,
	-1000, -1000, -1000, -1000, 965, 339, 729, 240, 234, 1168,
	2050, 2016, 2015, 1451, 2009, 1297, 2006, 1857, -36, -1000,
	1605, 33628, -1000, -1000, 1420, 1415, 374, 1776, 816, 1881,
	-1000, -1000, 373, 660, 1849, 442, 1849, 1849, 1849, 1849,
	1849, -62, 1849, 1849, 1849, 112, 1849, 151, 1849, 1849,
	1849, 1849, 1849, 1626, -1000, -1000, -1000, 385, 1774, 1816,
	1880, 842, -1000, -1000, -1000, 1877, 39159, 1817, -1000, 1827,
	-1000, -1000, -1000, 765, -1000, -101, 1877, 2068, 1561, -1000,
	37320, 2004, 1331, 13009, 1958, -1000, -1000, 1263, 2162, -1000,
	26881, 857, -1000, 13009, 3466, 1827, -1000, -1000, 1827, -1000,
	799, 911, -1000, 785, 845, -1000, -1000, 12377, 12377, 12377,
	12377, 12377, 12377, 12377, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1827, 856, 851, 1827, 1827, 1827, 1827, 1827, -1000, 11113,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1827, 1827, 1827, 1827, 1827, 1827, 1827, 1827,
	1827, 1827, 1827, 1827, 1827, 1827, 13009, 1827, 1827, 1827,
	1827, 1827, 1827, 1827, 1827, 1827, 1827, 1827, 1827, 1827,
	1827, 1827, 1827, 1827, 1827, 1827, 1827, 1827, 1827, 1827,
	1827, 1827, 1827, 1827, 1827, 1827, 1827, 1827, 1827, 1827,
	1827, 1827, 1827, 1827, 1827, 1827, 1827, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 657, 657,
	32402, 1825, -147, 19961, -1000, -1000, -1000, -1000, 18697, 42224,
	1167, -1000, -1000, -1000, -1000, 2003, -1000, -1000, 847, 845,
	799, 797, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2125, -1000, -1000, 1754, 617, -1000, 4153, 4153, 4153, 4153,
	4153, 444, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1855, 46515, 33628, 315, 1604, 1190, 1602, 48354, 48354,
	-1000, 261, 42837, 42837, 652, 310, 42837, 321, 1824, 728,
	1823, 725, 1624, 33628, 2037, 1878, 33628, 1601, 1600, 48354,
	48354, 42837, 42837, -1000, 25649, 1820, -1000, -1000, 1179, -1000,
	6030, 13009, 652, 652, 33628, 33628, 33628, 33628, 33628, -1000,
	-1000, 1179, 1179, 1179, 1179, 1136, 2161, 1136, -1000, 1136,
	-1000, -1000, 13009, -1000, 12377, 41611, 979, -1000, -1000, 47741,
	-1000, 1599, 322, -1000, -1000, -1000, -1000, -1000, -1000, 1596,
	-1000, 1987, 1297, 1297, -1000, 1498, 1297, 1810, -1000, 1163,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1297, -1000, 11745, -422, -1000, -1000, 1819, -1000,
	293, -1000, -1000, 611, 1876, 611, 196, 42837, 42837, 42837,
	-1000, 1849, 46515, -1000, 1849, 1849, 1849, -66, 1849, 1849,
	-1000, -1000, 1849, -1000, -1000, -1000, -1000, -1000, 1849, -1000,
	-1000, -1000, 1849, 1849, -1000, 1849, 1849, -1000, -1000, -1000,
	-1000, -1000, 42837, 611, 209, 1818, 611, 42837, 42837, -1000,
	99, 97, 89, 88, -1000, -1000, -1000, -1000, 87, 85,
	-1000, -1000, -1000, 1817, 39159, 2063, 15537, 33628, -89, -1000,
	-1000, 234, -1000, -1000, -1000, -1000, 1877, 1241, 2184, 1034,
	1811, -1000, -1000, 1813, -1000, 1258, 843, 1315, 1932, -1000,
	-1000, -1000, 33628, -1000, 13009, 13009, 13009, 1253, -1000, 28107,
	-1000, -1000, -1000, -1000, -1000, -1000, 16801, 1056, 12377, 1285,
	1096, 12377, 12377, 12377, 12377, 12377, 12377, 12377, 12377, 12377,
	12377, 12377, 12377, 12377, 12377, 12377, 1357, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1582, -1000, 234, 23753, 7953,
	23753, 1545, 1545, 46515, 915, 915, 915, 915, 915, 915,
	35481, 2054, 23121, 23753, 2054, 2054, 2054, 2054, 2054, 1561,
	1749, 1295, 37320, 11113, 7953, 7953, 7953, 1561, 13009, 13009,
	7953, 7953, 10481, 9849, 14273, 7953, 7953, 2054, 1128, 1295,
	18697, 7953, -1000, -1000, 9217, -1000, -1000, -1000, -1000, -1000,
	1561, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 46515,
	46515, 7953, 7953, 7953, 7953, 1561, 1561, 7953, 7953, 7953,
	7953, 7953, 1561, 1561, 1561, 1561, 7953, 7953, 7953, 7953,
	7953, 7953, 7953, 7953, 7953, 7953, 7953, 7953, 31789, 30563,
	33628, 1799, 1772, -1000, 838, 19329, 1798, -1000, -118, -116,
	-147, -1000, -1000, 954, -1000, -1000, -1000, 8585, -1000, 17433,
	2090, 1918, 3675, 26268, -1000, -1000, -34, -1000, -1000, -1000,
	1839, -1000, 1845, 323, 19, 1845, 1845, 1845, 1845, 1845,
	0, 0, 0, 0, 8, -1000, -1000, -1000, -1000, -1000,
	1852, 1851, -1000, 1839, 1839, 1839, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1847, 318, 1844, 1844, 1844,
	1844, 1844, -1000, -1000, -1000, -1000, 524, 524, 524, -1000,
	13009, 1843, 2060, 735, 310, 2022, 2036, 2022, 431, -1000,
	837, 1850, -1000, 836, 403, 1809, -1000, 199, 1769, 31176,
	-1000, -1000, -1000, -1000, -1000, 33628, 33628, 42837, 42837, 42837,
	747, -1000, 33628, 1812, -1000, -1000, -1000, -1000, -1000, 1786,
	-1000, 1769, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 33628, -1000, -1000, 1497, 1295, 1580, 1577, 2050, -1000,
	-1000, -1000, 1141, -1000, -1000, -1000, -1000, 1179, 47741, 47741,
	33628, 2050, 1179, 1295, 1483, 1859, 1827, 1561, -1000, -1000,
	-1000, 1560, -1000, 12377, 1810, 1810, -1000, 1810, 1297, 1545,
	1810, -1000, 1745, 1233, 1495, 33628, -1000, 39159, -42, -1000,
	-144, 45289, -1000, -1000, -1000, 611, 45289, -1000, 112, 164,
	-1000, 724, -1000, 1724, -1000, -1000, -1000, -1000, 1849, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 45289, 162,
	208, 45289, 1786, 2155, -1000, -1000, -1000, -1000, 2082, -1000,
	-1000, 1827, 1663, -1000, 834, -1000, -1000, -1000, -1000, -1000,
	-1000, 606, -1000, -1000, 1561, -1000, 45902, -1000, 1926, 1331,
	1331, 13009, -1000, -1000, -1000, 17433, 2076, -1000, 1939, 1938,
	1898, -1000, -1000, 1056, 1282, 1106, -1000, -1000, 1316, -1000,
	-1000, -1000, -1000, -1000, 829, 1827, -1000, -1000, -1000, -1000,
	-1000, 4260, -1000, -1000, -1000, -1000, 1285, 12377, 12377, 12377,
	1483, 4260, 4237, 2646, 1628, 915, 925, 925, 948, 948,
	948, 948, 948, 1131, 1131, -1000, -1000, -1000, 1561, -1000,
	1720, -1000, -1000, 1295, 827, -1000, -1000, -1000, -1000, -1000,
	-1000, 7953, -1000, -1000, -1000, 7953, 7953, 7953, 7953, 7953,
	-1000, 13009, -1000, 1561, 1720, 1720, 1720, -1000, 1185, 1338,
	1581, 1720, 989, 2153, 1720, 981, 2152, 1720, 1559, 12377,
	12377, 12377, 1720, 1720, 7953, 1196, -1000, 13009, 1561, 1720,
	-1000, 2568, 1808, 1805, 1720, 1561, 1804, 1720, 1720, -187,
	-187, 1561, 1720, 1561, 1720, 1720, -187, -187, -187, -187,
	1720, 1720, 1720, 1720, 1720, 1720, 1720, 1720, 1720, 1720,
	1720, 1720, 1017, 33628, -1000, 1787, 432, -1000, -1000, -1000,
	2059, 29950, -1000, -1000, 36094, -1000, 1827, 1827, 1017, 1759,
	30563, -1000, -1000, 30563, 47741, 22489, -1000, 18697, -147, -86,
	-1000, -1000, 1798, -1000, 1417, -1000, -1000, 1295, -1000, 825,
	2004, 2054, 1793, -1000, 1111, 1111, 1111, 2002, 268, 1111,
	1111, 1111, 1111, 1111, -241, -244, 1111, 1111, 1111, 1111,
	1111, 1111, 1111, 1111, 1111, 1111, 1111, 60, 1111, 1111,
	1111, 1111, 187, 1111, 617, -1000, -1000, -1000, 1848, 366,
	-1000, 1961, 895, 895, 886, 1509, 1960, -1000, -1000, 168,
	-54, -1000, -1000, -1000, 1412, 0, 190, 0, 1845, 1845,
	317, 1845, -1000, 0, -1000, -1000, -1000, 1023, 2000, 1020,
	1016, 1007, 984, 0, 1480, 1480, -1000, -1000, -1000, -1000,
	1411, -1000, 1847, -1000, 1409, -1000, -1000, -1000, -1000, 168,
	168, 168, 168, -1000, -1000, -1000, 1251, 1875, 46515, -1000,
	33628, -1000, 2022, -1000, -1000, -1000, 270, -1000, -1000, -1000,
	2139, -1000, -1000, 46515, 40998, 46515, -1000, -1000, 114, 42837,
	218, 411, 238, -1000, -1000, 716, -1000, 715, -1000, -1000,
	-1000, -1000, -1000, -1000, 33628, 42837, -1000, -1000, -1000, -1000,
	-1000, 2134, 1553, 1544, -1000, -1000, -1000, 1136, 1179, -1000,
	-1000, 12377, 42837, -1000, 435, -1000, 4260, -1000, -1000, -1000,
	1017, 750, -1000, -1000, -69, -1000, -1000, 712, 824, 823,
	45289, 711, -1000, 127, 42837, -1000, 46515, -1000, 2150, 2149,
	158, 2147, 42837, -1000, 74, -1000, 237, -1000, 15537, 23753,
	1792, -1000, 914, 877, 894, 586, 586, -1000, 1110, 586,
	1993, 1992, 1012, -1000, 1791, 1479, 1478, -1000, 1922, -1000,
	-1000, -1000, 33628, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 21857, 7953, -1000, 1483, 4260, 3903, -1000, 12377,
	-1000, 7953, -1000, 16169, 1561, 1720, 1720, 1720, 1720, 1720,
	1295, -1000, -1000, -1000, -1000, 557, 1357, 557, -1000, 1357,
	-1000, 12377, 12377, -1000, 12377, 12377, -1000, -1000, 12377, 4124,
	3505, 2225, -270, -1000, 1806, 1067, -1000, 13009, 1261, -1000,
	-1000, -1000, 12377, 12377, -1000, -1000, -1000, -1000, -1000, 44676,
	-1000, -187, -187, -187, -187, -187, -1000, -1000, -1000, -1000,
	-187, -187, -187, -187, -187, -187, -187, -187, -187, -187,
	-187, -187, 213, 1827, -1000, 18065, 30563, 30563, 30563, 30563,
	30563, -1000, 1908, 1907, -1000, 1900, 1893, 1892, 304, 39159,
	1718, 1561, 420, 29950, -1000, 1827, -1000, 38546, 772, 745,
	744, 742, 7953, 12377, 2134, 30563, 1722, 1722, -1000, 814,
	-1000, -1000, -1000, -141, -121, -1000, -1000, -1000, 23753, -1000,
	3675, 405, -1000, 405, 405, 1111, 1999, 1111, 1402, 25017,
	1475, 1470, 1469, 1111, 1111, 1395, 1468, 25017, 1464, 590,
	405, 405, 405, 1385, 1463, 271, -1000, 1462, 1394, 1369,
	405, -1000, -260, -1000, -1000, -1000, -1000, -1000, 405, -1000,
	39772, 644, 1963, 610, 1509, 1509, 1509, -1000, 1509, -1000,
	-1000, -1000, 1846, -1000, 1246, -1000, -1000, -1000, -1000, -1000,
	1827, -437, 1380, 12377, 2173, -1000, 1959, -1000, 1957, 1956,
	1460, -1000, -1000, 1738, 980, 1696, 1691, 964, 0, -1000,
	-1000, 1845, -1000, 960, -1000, -1000, 1005, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 936, 1711, -1000, 1694, 1790,
	-1000, 1676, 120, 33628, -1000, -1000, 2051, -1000, -1000, -1000,
	1997, 1110, 1110, 1110, 1873, -1000, -1000, -1000, -1000, 1668,
	1789, -1000, 4153, 46515, 46515, 46515, -1000, -283, 353, -1000,
	42837, 178, 199, 467, 1543, 33628, 42837, -1000, -1000, -1000,
	13009, -1000, -1000, 2050, -1000, 4260, 1769, -1000, -1000, 0,
	33628, -1000, 42837, 977, 44063, 677, 42837, 157, 161, -1000,
	42837, 42837, 2146, 42837, 1786, 1459, -1000, -1000, 606, 43450,
	1509, 784, -1000, -1000, 566, -1000, 241, 1518, 29333, 28720,
	46515, 1954, 1950, 1517, 33628, 46515, -1000, -1000, 47128, 1516,
	13009, -1000, 46515, -1000, -1000, 46515, 46515, -1000, -1000, -1000,
	-1000, 1327, 6689, -1000, -1000, 1561, -1000, 12377, 4260, -1000,
	-1000, 808, -1000, -187, -187, -187, -187, -187, 1561, 1839,
	1839, -1000, 1839, 1844, -1000, 1839, 30, 1839, 20, 1561,
	1561, 1561, 4106, 4016, 3854, 1536, 2568, 12377, 12377, 12377,
	1827, -182, -1000, 1295, 13009, 3827, 3792, -1000, -1000, 1515,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1871, 18065,
	1827, 14905, -1000, 46515, 1800, -1000, 1147, 867, 1117, 1116,
	799, 797, 432, 1842, 1870, 713, -1000, -1000, -1000, -1000,
	1903, -1000, 1902, 1901, -1000, -1000, -1000, 1831, -1000, -1000,
	1788, 1827, 46515, 12377, 772, -1000, 1827, 1827, 1827, 1561,
	3703, 2125, 1722, -1000, -1000, 974, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1357, 1111, 25017, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1458, 1457, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -245, -1000, 1667, -1000, 1839, 1839, 1947, -1000, 895,
	-1000, -1000, -1000, -1000, -1000, 46515, -1000, 12377, 2049, -1000,
	4260, -119, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 933, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 0, 1449, 0, 1359, -1000, 1355, -1000, -1000, -365,
	1837, 234, -1000, 1110, 973, 966, 1448, 33628, 148, 40998,
	-1000, 4153, 4153, 4153, 150, 143, -1000, 1209, -1000, -1000,
	-1000, 1447, 1446, 1445, 1769, 220, 1206, 188, -1000, 2043,
	-1000, -1000, 1295, 1179, -68, -1000, 161, -1000, -1000, -1000,
	42837, 161, -1000, -1000, 195, 1786, 1786, 42837, 1786, -1000,
	-1000, 47128, 603, 4153, 4153, 1843, 895, 1945, 610, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1512, -1000, 832, -1000, 668, 603, 47128, 1295, 920,
	1199, -1000, 2144, -1000, -1000, -1000, 4260, 21225, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 298, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 12377, 12377, 12377, 12377, -1000,
	2568, 2568, 2568, 12377, 1561, 1444, 1295, 12377, 12377, 1010,
	-1000, -1000, 2026, 1678, 1783, -1000, -1000, 7321, 1561, 1937,
	1663, -1000, 37320, 1661, -1000, 2125, 18065, 13009, 13009, 13009,
	13009, -1000, -1000, 13009, 1836, -1000, 13009, -1000, -1000, -1000,
	-1000, -1000, 46515, 418, -1000, 13009, 1661, 1675, -1000, 46515,
	46515, 46515, -1000, 1443, 2090, -1000, -1000, 1357, -1000, -1000,
	-1000, -1000, -1000, 758, 39772, 2032, 2032, 1509, 1509, 1659,
	-1000, 2568, 1827, -1000, 1827, 1827, 1827, 1827, 1827, 1827,
	1827, 1827, 1827, 1827, 1827, -1000, -1000, 931, -1000, 909,
	1643, 1641, -1000, 39772, -1000, -1000, 923, -1000, -1000, -1000,
	-1000, -1000, 2081, -1000, 148, -1000, 1442, 295, 325, -1000,
	292, 290, 286, 266, 260, -1000, -1000, -1000, -1000, 412,
	150, -1000, -81, 1350, 1084, 1991, 143, -1000, 1349, 1346,
	1340, 1337, 252, -1000, -1000, -1000, -1000, 236, 199, -1000,
	446, 1441, -1000, 1977, 1975, 2045, 161, 2045, 153, 1786,
	1583, -1000, -1000, 1510, -1000, -1000, 1835, 1509, 1509, -1000,
	1508, -1000, -1000, 46515, -1000, 603, 2021, 2020, 1827, 2134,
	30563, 6689, -1000, -1000, -1000, -1000, 2568, 2568, 2568, 2568,
	-1000, -1000, -1000, 166, -1000, -1000, 2568, 2568, 2125, 2121,
	1944, -1000, 1827, -1000, -1000, 1827, 235, -1000, 46515, 2090,
	-1000, 1295, 1295, 1295, 1295, 1295, 46515, 1295, 1656, 1827,
	36707, -1000, 39159, 1654, 1654, 1654, -75, -1000, -1000, 758,
	-1000, 1505, 1110, 1439, -1000, -1000, -1000, -1000, -1000, 499,
	46515, -436, 12377, -1000, -1000, -1000, -1000, -1000, -1000, 1652,
	-1000, 234, -1000, -1000, 423, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1981, 1980, 336, -1000, 1438, 1436, -1000, 472,
	1358, 805, -194, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 407, 1503, -1000, 183, -1000, -1000,
	656, 1968, 1970, 2120, -1000, 42837, 2045, -1000, -1000, -1000,
	-1000, 168, 168, 39772, 1843, 1832, -1000, -1000, -1000, 12377,
	-1000, 993, 2129, 1785, -1000, -1000, -1000, -1000, -1000, 1561,
	174, -291, -1000, -1000, 1072, 13009, 2167, -1000, 1783, 1827,
	-1000, 234, -1000, -1000, 1650, -1000, -1000, -1000, 772, -1000,
	-1000, -1000, 1827, -1000, -1000, 1330, -1000, 33628, -1000, -1000,
	-1000, -1000, 2568, 758, -1000, 415, 5812, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1301, -1000, -1000, 1335, 414,
	181, -1000, 2041, -1000, 1831, 1284, 1975, 2107, 1973, 1962,
	-1000, 1435, -286, -1000, 1646, 1829, 39772, 4260, 1640, -1000,
	46515, 2127, 2105, -1000, -1000, 1917, -281, -296, 1561, 251,
	251, 1784, 18065, 1783, 1561, -1000, -1000, 23753, -1000, 1828,
	-436, -1000, 758, -1000, 324, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 13009, 13009, 24385, 5812,
	167, -1000, 165, -1000, -1000, -1000, 1433, -1000, 1078, -1000,
	1432, -1000, 2098, 2094, -1000, 217, 758, 39772, 1638, -1000,
	993, 1935, -191, 13009, 13009, -1000, 1913, -1000, -1000, -1000,
	229, -1000, 1066, 329, 1053, -1000, 1545, -1000, 1781, -1000,
	1635, -1000, 4153, 46515, -1000, -1000, 1502, 1501, -1000, 1228,
	1215, 253, 230, 504, -1000, -1000, -1000, -1000, -444, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1431, 1430, 40385, -1000,
	1633, 758, -1000, 462, -1000, 46515, -1000, 1295, 1780, -1000,
	1295, -287, 1205, -1000, -1000, -1000, -1000, -1000, 46515, 1561,
	23753, 254, 1630, -1000, -1000, -1000, 1138, -1000, 13009, 5812,
	2080, 2079, 2075, 2005, 23753, 5732, -1000, -1000, -1000, -1000,
	130, 1769, 758, -1000, 450, 1779, -1000, 2040, 13009, -294,
	229, -1000, 37933, -1000, -1000, 1429, -232, 1869, 198, 1178,
	5812, -1000, 1212, -445, 486, 234, 757, 12377, -1000, -1000,
	-1000, 42837, -1000, 1827, 46515, 1827, -1000, -300, -1000, 39159,
	-1000, -1000, 1427, 1868, 1867, 2143, -1000, -1000, -1000, -1000,
	-1000, -1000, 5812, 37320, -1000, -449, 5812, 4373, -1000, -1000,
	-1000, 1649, -1000, -1000, -1000, -1000, 231, -1000, -1000, 4260,
	1769, 13641, -1000, -1000, -1000, -1000, 391, -1000, -1000, 2165,
	-1000, 2140, 804, 804, -1000, -450, -1000, 5369, -451, 629,
	5812, 1123, -1000, 13009, -1000, 757, -1000, 2568, 1561, -1000,
	1865, 12377, 1862, -1000, -1000, -1000, 508, 1324, -1000, 5273,
	1137, 5812, -1000, -452, 622, 5812, -1000, 1119, -1000, -1000,
	-1000, -314, 1648, -315, -1000, -1000, -1000, -1000, -1000, 4999,
	-1000, -455, 5812, -1000, -316, -1000, 621, 4824, -457, -1000,
	-1000, 595, 5812, -1000,
}

var yyPgo = [...]int{
	0, 2672, 2671, 100, 176, 2668, 269, 2667, 2666, 14,
	2665, 26, 23, 18, 30, 2663, 2360, 2342, 2340, 2338,
	2323, 2661, 10, 2660, 2658, 2290, 2653, 2652, 2287, 2285,
	2283, 2281, 2650, 2646, 2645, 2266, 2264, 2262, 8, 2644,
	15, 2643, 2, 145, 166, 2641, 5, 2640, 2639, 13,
	2636, 2635, 2260, 2634, 2633, 2631, 104, 2630, 2253, 2241,
	2629, 2239, 2233, 2628, 2627, 2223, 2216, 2213, 2625, 170,
	2624, 2623, 2621, 201, 2620, 149, 2619, 2618, 2617, 109,
	2616, 314, 105, 56, 112, 914, 2609, 32, 72, 301,
	2605, 9, 2604, 103, 2600, 121, 2597, 2596, 160, 2595,
	140, 218, 94, 2593, 2592, 156, 2589, 2587, 2579, 108,
	2578, 2577, 169, 335, 2576, 2574, 129, 2573, 46, 167,
	39, 61, 2568, 2565, 2564, 2563, 2561, 25, 461, 2559,
	98, 141, 2557, 2555, 85, 2552, 2550, 76, 2549, 2547,
	2546, 136, 42, 2545, 2543, 45, 2539, 44, 53, 2537,
	73, 2534, 139, 2527, 2526, 2514, 2512, 2511, 63, 2510,
	60, 2505, 138, 248, 190, 2504, 2503, 20, 7, 2501,
	36, 48, 4, 47, 17, 68, 49, 122, 117, 97,
	2500, 43, 40, 124, 93, 2498, 95, 84, 41, 2496,
	151, 2492, 80, 157, 142, 143, 152, 2490, 2489, 2488,
	184, 2486, 135, 79, 2485, 107, 1122, 171, 2484, 2483,
	102, 2470, 2469, 2466, 2464, 2463, 81, 118, 2461, 2459,
	174, 173, 168, 175, 2458, 65, 2911, 3624, 150, 2982,
	35, 155, 2457, 51, 2456, 2455, 2454, 2378, 113, 12,
	75, 165, 2453, 106, 50, 62, 2452, 2451, 2449, 2448,
	2445, 2444, 2443, 2442, 200, 96, 2441, 2439, 2438, 2431,
	164, 374, 2430, 128, 127, 126, 2429, 147, 34, 2425,
	2421, 133, 110, 2418, 2416, 2407, 2406, 132, 86, 154,
	28, 2405, 123, 137, 148, 2402, 89, 2397, 2396, 221,
	54, 1712, 2395, 2394, 2392, 2390, 99, 209, 2387, 2385,
	71, 38, 33, 74, 29, 2384, 2382, 83, 115, 2381,
	21, 2380, 3, 11, 6, 2377, 2376, 2370, 2368, 2367,
	2357, 2336, 90, 2327, 2321, 67, 2317, 2313, 2303, 37,
	2292, 2279, 2276, 144, 116, 58, 161, 375, 16, 2274,
	2272, 22, 2269, 125, 2258, 55, 2255, 57, 2247, 2243,
	64, 2237, 2231, 66, 2227, 2225, 162, 1943, 298, 2211,
	146, 119, 52, 59, 2209, 92, 2207, 0, 183, 153,
	203, 2205, 2199, 2197,
}

var yyR1 = [...]int{
	0, 366, 366, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 68, 3, 3, 9,
	10, 4, 4, 5, 5, 91, 91, 6, 90, 90,
	186, 186, 186, 186, 185, 185, 92, 92, 89, 89,
	98, 7, 7, 8, 8, 11, 11, 72, 72, 12,
	13, 13, 13, 13, 369, 369, 107, 107, 105, 105,
	106, 106, 183, 183, 14, 14, 14, 190, 190, 195,
	195, 195, 198, 198, 198, 198, 172, 173, 174, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 339, 339, 348, 348, 348, 349, 349, 347, 347,
	347, 347, 347, 351, 351, 352, 352, 350, 350, 350,
	350, 354, 354, 355, 355, 353, 353, 353, 353, 353,
	353, 353, 353, 353, 353, 353, 353, 353, 353, 342,
	342, 342, 35, 35, 35, 35, 35, 36, 36, 36,
	36, 36, 36, 356, 356, 356, 356, 356, 356, 356,
	356, 356, 356, 356, 356, 356, 356, 356, 356, 356,
	356, 356, 356, 356, 356, 356, 356, 356, 356, 356,
	356, 356, 356, 356, 357, 357, 358, 358, 359, 359,
	360, 360, 360, 360, 361, 361, 361, 361, 361, 362,
	362, 362, 362, 362, 362, 362, 363, 363, 364, 364,
	2, 320, 320, 321, 321, 322, 322, 322, 322, 323,
	323, 324, 324, 325, 325, 325, 325, 325, 325, 325,
	325, 325, 325, 26, 222, 222, 219, 219, 219, 220,
	220, 221, 221, 221, 341, 341, 341, 335, 335, 335,
	337, 337, 336, 336, 336, 338, 338, 343, 343, 343,
	343, 343, 345, 345, 345, 345, 345, 345, 346, 346,
	346, 344, 344, 50, 50, 51, 51, 51, 161, 161,
	161, 15, 15, 15, 15, 15, 21, 23, 23, 39,
	39, 40, 24, 24, 24, 24, 41, 41, 42, 27,
	27, 27, 27, 27, 27, 48, 48, 48, 47, 47,
	46, 46, 46, 46, 46, 46, 25, 25, 25, 25,
	49, 49, 44, 44, 43, 45, 45, 45, 45, 45,
	45, 45, 45, 45, 45, 45, 45, 28, 28, 28,
	28, 28, 28, 20, 319, 319, 319, 38, 38, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 54,
	54, 292, 293, 293, 293, 293, 293, 293, 293, 293,
	278, 278, 279, 279, 279, 279, 279, 268, 268, 268,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 244, 244, 244, 244, 250, 250, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 249, 249, 249,
	249, 249, 249, 249, 249, 251, 251, 251, 251, 251,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 253, 253, 253,
	253, 253, 253, 253, 253, 277, 277, 255, 255, 254,
	254, 254, 271, 271, 272, 272, 272, 269, 269, 269,
	270, 270, 258, 259, 273, 260, 260, 260, 261, 261,
	261, 262, 262, 267, 267, 266, 266, 266, 266, 266,
	266, 263, 263, 263, 263, 264, 264, 265, 276, 276,
	276, 276, 276, 256, 37, 305, 305, 305, 305, 305,
	305, 305, 305, 305, 305, 305, 305, 306, 306, 212,
	212, 213, 213, 281, 281, 304, 304, 303, 303, 302,
	302, 302, 290, 290, 299, 299, 299, 299, 299, 299,
	299, 299, 285, 285, 285, 284, 284, 286, 286, 289,
	289, 301, 301, 300, 300, 282, 282, 282, 307, 307,
	307, 307, 307, 283, 283, 283, 283, 283, 308, 287,
	287, 288, 288, 288, 313, 314, 312, 312, 312, 312,
	312, 124, 124, 124, 295, 295, 295, 291, 291, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 297, 297, 297,
	297, 297, 298, 298, 298, 298, 298, 298, 365, 365,
	365, 317, 317, 316, 316, 52, 53, 57, 57, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 160, 160, 160, 217, 217, 311, 309, 309, 310,
	310, 17, 17, 55, 55, 340, 340, 18, 18, 18,
	18, 18, 18, 18, 18, 18, 315, 315, 315, 19,
	19, 58, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 86, 204, 204,
	203, 203, 202, 202, 202, 205, 205, 205, 205, 242,
	242, 242, 60, 60, 60, 64, 64, 67, 67, 67,
	65, 66, 29, 30, 30, 30, 30, 31, 218, 218,
	62, 62, 63, 63, 63, 63, 78, 78, 371, 371,
	61, 372, 69, 70, 70, 71, 71, 71, 208, 208,
	75, 75, 75, 73, 73, 73, 74, 74, 80, 80,
	84, 84, 84, 84, 83, 83, 83, 83, 163, 163,
	168, 234, 234, 144, 144, 164, 164, 169, 169, 169,
	170, 170, 171, 171, 171, 171, 171, 166, 166, 165,
	165, 167, 132, 132, 232, 232, 232, 232, 231, 231,
	231, 231, 231, 231, 88, 88, 93, 93, 95, 95,
	95, 95, 95, 95, 99, 146, 146, 117, 117, 118,
	118, 118, 118, 118, 130, 130, 182, 182, 181, 181,
	184, 184, 94, 96, 96, 96, 96, 102, 102, 103,
	103, 104, 104, 216, 216, 239, 239, 239, 108, 108,
	108, 110, 109, 109, 109, 109, 109, 109, 111, 111,
	97, 97, 294, 294, 280, 246, 246, 247, 373, 373,
	373, 373, 112, 112, 114, 115, 115, 113, 113, 113,
	113, 113, 119, 119, 116, 120, 120, 120, 120, 121,
	121, 85, 85, 85, 85, 85, 85, 85, 85, 201,
	201, 123, 123, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 140, 140, 140, 140, 140, 140, 125,
	125, 125, 125, 125, 125, 125, 79, 79, 141, 141,
	141, 101, 100, 100, 82, 82, 81, 81, 142, 142,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 135, 135, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 134, 134, 134, 134, 134, 134, 134, 134,
	134, 134, 134, 134, 134, 134, 134, 134, 134, 370,
	370, 137, 136, 136, 136, 136, 136, 136, 76, 76,
	76, 76, 76, 240, 240, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	153, 153, 77, 77, 151, 151, 152, 154, 154, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 127, 127, 127, 127, 127, 127, 127,
	127, 129, 129, 129, 155, 155, 143, 143, 87, 156,
	156, 157, 158, 158, 159, 159, 162, 175, 175, 175,
	176, 176, 176, 176, 131, 131, 177, 177, 177, 126,
	126, 126, 126, 126, 126, 126, 180, 180, 179, 179,
	178, 178, 178, 178, 178, 178, 187, 187, 145, 145,
	148, 148, 147, 149, 188, 188, 192, 192, 192, 192,
	189, 189, 193, 193, 193, 193, 196, 196, 197, 197,
	197, 194, 194, 194, 191, 191, 191, 236, 236, 236,
	199, 199, 209, 209, 206, 206, 207, 207, 200, 200,
	257, 257, 257, 215, 215, 214, 214, 214, 210, 210,
	210, 211, 211, 233, 233, 229, 229, 235, 235, 230,
	230, 237, 237, 238, 238, 318, 318, 274, 274, 328,
	328, 275, 275, 329, 329, 331, 331, 326, 326, 327,
	327, 330, 330, 32, 332, 332, 333, 333, 334, 334,
	334, 334, 33, 34, 34, 34, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 228, 228, 228, 228, 228, 228, 226, 226, 226,
	226, 226, 367, 368,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 11, 5, 7, 1,
	5, 1, 3, 1, 3, 2, 1, 13, 0, 2,
	0, 2, 3, 3, 1, 3, 0, 2, 1, 3,
	4, 1, 3, 1, 3, 8, 9, 1, 1, 10,
	9, 8, 7, 7, 1, 1, 1, 3, 1, 3,
	1, 3, 0, 4, 3, 4, 5, 1, 3, 3,
	2, 2, 2, 2, 2, 1, 0, 0, 0, 2,
	3, 3, 11, 9, 11, 5, 5, 16, 12, 9,
	4, 0, 3, 0, 2, 2, 1, 3, 1, 1,
	2, 2, 2, 0, 2, 1, 2, 2, 2, 2,
	2, 0, 1, 1, 2, 3, 3, 5, 3, 3,
	4, 5, 4, 4, 2, 2, 2, 2, 2, 0,
	2, 2, 9, 10, 9, 5, 7, 7, 7, 7,
	8, 4, 6, 2, 3, 2, 3, 3, 3, 4,
	3, 3, 2, 2, 3, 2, 2, 2, 2, 2,
	3, 2, 2, 2, 3, 3, 2, 3, 3, 2,
	2, 2, 2, 2, 1, 3, 0, 3, 1, 3,
	0, 1, 1, 1, 1, 3, 1, 3, 3, 0,
	2, 5, 5, 5, 7, 5, 0, 3, 0, 3,
	4, 0, 1, 1, 3, 2, 3, 3, 3, 0,
	1, 1, 2, 2, 2, 2, 1, 2, 2, 3,
	3, 3, 3, 4, 2, 3, 3, 3, 3, 0,
	3, 0, 3, 3, 1, 1, 1, 3, 2, 1,
	1, 3, 3, 2, 1, 1, 3, 1, 2, 5,
	4, 6, 4, 3, 3, 6, 5, 5, 4, 3,
	5, 1, 3, 1, 1, 1, 1, 1, 0, 2,
	2, 1, 1, 1, 1, 1, 4, 5, 8, 1,
	2, 5, 7, 10, 8, 11, 1, 2, 5, 5,
	5, 5, 6, 3, 5, 1, 1, 1, 1, 3,
	1, 1, 1, 2, 1, 1, 2, 4, 2, 4,
	2, 3, 1, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 4,
	3, 2, 4, 3, 0, 2, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 5,
	5, 4, 1, 1, 2, 3, 4, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 0, 1, 1,
	0, 2, 3, 2, 2, 2, 2, 2, 6, 8,
	3, 3, 1, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 3,
	2, 2, 2, 2, 2, 1, 2, 2, 2, 1,
	4, 4, 3, 3, 2, 4, 5, 2, 3, 4,
	2, 2, 3, 3, 3, 3, 3, 4, 1, 1,
	1, 1, 1, 6, 6, 4, 4, 4, 5, 3,
	3, 3, 3, 3, 4, 6, 6, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 3, 0,
	3, 3, 0, 5, 0, 3, 5, 0, 1, 1,
	0, 1, 2, 3, 1, 0, 3, 3, 0, 2,
	2, 0, 1, 0, 1, 1, 1, 1, 2, 2,
	2, 5, 5, 4, 4, 4, 4, 4, 2, 1,
	2, 1, 2, 2, 3, 2, 2, 2, 2, 1,
	1, 1, 1, 3, 2, 1, 1, 0, 3, 1,
	1, 0, 1, 5, 4, 0, 1, 1, 2, 2,
	3, 2, 0, 1, 3, 5, 3, 3, 5, 3,
	2, 2, 1, 1, 1, 1, 1, 0, 1, 0,
	1, 1, 3, 3, 3, 3, 3, 1, 10, 11,
	11, 12, 12, 3, 3, 3, 2, 1, 5, 1,
	1, 0, 2, 2, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 2, 0, 1, 3, 0, 1, 3,
	3, 3, 4, 5, 3, 3, 4, 3, 3, 3,
	4, 4, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 3, 3, 3, 3,
	3, 3, 2, 2, 4, 4, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 2, 0, 2, 1, 5, 1, 3, 5,
	4, 3, 5, 3, 8, 10, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 5, 4, 5,
	1, 2, 2, 4, 3, 6, 5, 3, 9, 2,
	2, 0, 1, 2, 0, 1, 7, 1, 3, 8,
	8, 3, 3, 3, 5, 3, 5, 5, 5, 4,
	4, 4, 4, 4, 4, 4, 0, 1, 1, 3,
	2, 3, 3, 4, 3, 5, 5, 5, 4, 4,
	4, 2, 2, 2, 6, 2, 4, 4, 4, 5,
	8, 6, 3, 5, 4, 2, 4, 3, 2, 4,
	5, 6, 2, 6, 6, 3, 3, 3, 0, 1,
	1, 1, 0, 2, 2, 0, 2, 3, 2, 0,
	1, 1, 2, 4, 1, 1, 1, 2, 4, 4,
	1, 1, 2, 3, 4, 4, 5, 3, 1, 1,
	3, 3, 1, 1, 1, 1, 0, 3, 1, 1,
	3, 0, 2, 0, 2, 1, 2, 2, 0, 1,
	0, 1, 1, 0, 1, 1, 0, 1, 3, 5,
	1, 1, 3, 5, 1, 2, 3, 5, 2, 2,
	6, 0, 1, 0, 3, 0, 1, 0, 2, 2,
	4, 1, 2, 2, 2, 2, 2, 0, 2, 1,
	3, 3, 1, 3, 0, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 1, 1, 4,
	1, 3, 1, 1, 2, 2, 4, 2, 6, 1,
	4, 6, 3, 2, 0, 3, 0, 3, 1, 3,
	1, 3, 4, 4, 4, 4, 3, 2, 4, 0,
	1, 0, 2, 0, 1, 1, 1, 1, 1, 2,
	2, 1, 2, 3, 2, 3, 3, 2, 2, 2,
	12, 11, 1, 3, 3, 4, 3, 0, 0, 3,
	4, 3, 1, 3, 3, 2, 1, 1, 3, 1,
	1, 1, 1, 3, 3, 0, 5, 5, 5, 0,
	2, 1, 3, 3, 3, 2, 3, 1, 2, 0,
	3, 1, 1, 3, 3, 4, 4, 5, 3, 4,
	5, 6, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 0, 2, 1, 1,
	1, 3, 1, 3, 0, 1, 1, 3, 1, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 2, 2, 2, 2, 3,
	1, 1, 1, 1, 1, 1, 5, 6, 6, 6,
	5, 5, 5, 6, 5, 5, 6, 5, 5, 5,
	5, 6, 5, 5, 5, 4, 4, 5, 5, 5,
	5, 5, 4, 4, 4, 4, 4, 4, 4, 4,
	3, 6, 6, 4, 6, 6, 4, 8, 8, 8,
	8, 4, 6, 7, 7, 7, 9, 4, 7, 5,
	4, 4, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 8, 8, 0,
	2, 3, 4, 4, 4, 4, 4, 4, 0, 3,
	4, 7, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 3, 3,
	1, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	0, 1, 0, 2, 1, 2, 4, 0, 2, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 0, 3, 1, 3, 1, 0,
	2, 1, 0, 3, 1, 3, 2, 0, 1, 1,
	0, 2, 4, 4, 1, 1, 0, 2, 4, 2,
	4, 1, 3, 5, 4, 6, 0, 3, 1, 3,
	3, 1, 1, 1, 1, 1, 0, 5, 1, 3,
	1, 2, 3, 1, 1, 3, 3, 3, 3, 3,
	1, 3, 1, 2, 2, 3, 1, 1, 1, 1,
	1, 3, 3, 3, 1, 2, 1, 1, 1, 1,
	1, 1, 0, 1, 0, 2, 0, 3, 0, 1,
	0, 3, 3, 1, 1, 0, 1, 1, 1, 1,
	1, 0, 1, 0, 2, 1, 1, 1, 3, 1,
	1, 1, 1, 1, 1, 0, 2, 0, 1, 0,
	4, 0, 1, 0, 3, 0, 3, 0, 4, 0,
	3, 0, 3, 3, 1, 3, 2, 4, 1, 2,
	1, 2, 2, 2, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -366, -1, -3, -10, -11, -12, -13, -14, -16,
	-52, -17, -18, -19, -58, -59, -60, -64, -65, -66,
	-62, -61, -25, -28, -20, -68, -29, -30, -31, -32,
	-33, -34, -35, -36, -37, -5, 6, 7, -92, 29,
	-54, 182, -53, 185, 184, 221, 186, 214, 64, 344,
	-67, 347, 348, -371, -218, 272, 273, 20, 37, 349,
	351, 30, 31, 235, 289, 291, 316, -4, 518, 183,
	345, 216, 215, 26, -6, -7, -367, 68, 637, -158,
	15, -69, -372, -69, -72, 9, 10, 8, 444, -69,
	-292, -216, 108, 68, 23, -211, -222, 88, 435, 190,
	-220, 285, 287, -209, -210, -219, 245, 255, 44, 201,
	200, 256, 191, 285, 191, 192, 194, 435, 190, 228,
	227, 285, 287, 191, -113, -237, -226, -227, 303, 72,
	-225, 461, 465, 468, 469, 474, 293, 81, 325, 326,
	317, 327, 211, 414, 286, 292, 295, 318, 604, 328,
	330, 331, 455, 456, 194, 204, 622, 310, 212, 515,
	256, 632, 625, 297, 404, 491, 344, 360, 352, 375,
	516, 575, 267, 343, 421, 492, 300, 260, 323, 576,
	410, 416, 270, 347, 493, 430, 236, 577, 264, 266,
	265, 250, 460, 271, 36, 217, 371, 306, 245, 578,
	495, 571, 494, 239, 508, 35, 27, 238, 433, 99,
	579, 334, 418, 496, 392, 335, 234, 580, 520, 304,
	417, 367, 316, 119, 243, 282, 336, 581, 393, 397,
	582, 422, 290, 281, 583, 584, 337, 585, 193, 296,
	497, 586, 246, 424, 301, 391, 202, 517, 213, 48,
	225, 425, 395, 401, 587, 333, 588, 589, 590, 591,
	314, 312, 498, 313, 315, 257, 262, 499, 53, 188,
	399, 398, 400, 263, 420, 380, 378, 592, 593, 305,
	208, 594, 595, 379, 18, 596, 597, 428, 308, 598,
	599, 600, 500, 490, 601, 602, 419, 394, 396, 244,
	118, 603, 311, 415, 320, 519, 294, 605, 339, 224,
	219, 429, 329, 606, 607, 608, 609, 610, 288, 287,
	348, 321, 501, 349, 268, 611, 612, 502, 613, 614,
	254, 237, 432, 423, 52, 406, 615, 324, 340, 409,
	345, 231, 503, 504, 505, 507, 7, 261, 302, 413,
	322, 269, 255, 258, 382, 226, 616, 617, 369, 370,
	346, 229, 221, 113, 431, 570, 285, 341, 51, 232,
	618, 619, 259, 233, 350, 299, 372, 191, 135, 376,
	421, 182, 411, 412, 418, -285, 419, 227, 230, -242,
	191, -204, 410, 290, 311, 465, 233, 234, 192, 193,
	32, 423, 422, 414, -237, 195, 350, -78, 186, 222,
	-113, -49, 72, 274, -49, 29, 72, 72, 36, 72,
	349, 413, 413, 75, 519, 236, 21, -357, -338, 320,
	-356, -336, 183, 182, 10, 184, 325, 326, 327, 192,
	8, 30, 604, 209, 328, 329, 6, 214, 330, 331,
	228, 9, 332, -341, 74, 72, -225, 21, -357, -338,
	320, -213, -212, 342, 401, -91, 574, -89, -98, -239,
	-237, -226, 74, -200, 196, 346, -71, 5, -9, -3,
	518, -176, 17, 16, -75, 54, 55, -70, -83, 126,
	-85, -237, -122, 91, -128, 28, 72, -225, 24, -127,
	303, 222, -123, -150, -226, -149, -101, 135, -241, 124,
	125, 132, 92, 178, -135, -133, -134, -136, -138, -139,
	74, 73, 82, 75, 76, 77, 78, 83, 84, 85,
	-229, -227, -224, 461, 465, 468, 469, 474, -147, -367,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 177, 58, 59, 459, 190, 445, 446, 373, 8,
	447, 448, 449, 514, 211, 453, 94, 47, 559, 434,
	443, 442, 441, 439, 440, 436, 438, 437, 455, 456,
	197, 435, 130, 444, 478, 479, 480, 481, 482, 483,
	484, 485, 487, 488, 486, 462, 463, 464, 466, 467,
	470, 471, 472, 473, 475, 476, 477, 521, 187, 183,
	186, 90, 23, 25, 522, 242, 93, 358, 387, 452,
	16, 20, 205, 189, 376, 203, 134, 199, 206, 276,
	278, 182, 62, 523, 277, 411, 524, 525, 526, 527,
	366, 364, 275, 528, 10, 26, 215, 249, 529, 362,
	184, 240, 97, 98, 531, 41, 40, 309, 279, 216,
	532, 363, 533, 534, 19, 65, 207, 11, 201, 230,
	631, 535, 289, 13, 117, 14, 536, 537, 538, 539,
	196, 110, 192, 621, 60, 247, 540, 356, 541, 542,
	543, 544, 545, 357, 87, 546, 547, 107, 548, 56,
	489, 32, 235, 572, 450, 549, 550, 38, 37, 386,
	390, 385, 551, 402, 108, 17, 30, 552, 553, 223,
	389, 355, 384, 573, 554, 555, 252, 63, 342, 365,
	635, 33, 66, 220, 338, 307, 42, 88, 15, 248,
	61, 34, 457, 114, 636, 368, 198, 227, 557, 426,
	251, 558, 115, 361, 574, 209, 109, 351, 185, 319,
	273, 210, 560, 291, 561, 241, 116, 412, 562, 563,
	454, 29, 214, 272, 354, 200, 564, 253, 284, 274,
	283, 565, 566, 298, 43, 633, 620, 191, 39, 96,
	388, 353, 383, 195, 451, 228, 280, 5, 44, 31,
	407, 9, 332, 64, 67, 377, 374, 567, 381, 634,
	12, 568, 458, 518, 427, 89, 569, 408, -69, -69,
	-69, -189, 346, -196, -193, 422, 423, -194, -197, -191,
	-150, 401, 601, 602, 421, 376, 420, -229, -237, -226,
	303, 222, 135, 462, 463, 464, 94, 373, 445, 478,
	436, 438, 434, 437, 435, 28, 479, 24, 85, 480,
	459, 197, 8, 178, 466, 467, 481, 482, 483, 58,
	439, 440, 514, 130, 91, 484, 485, 83, 487, 488,
	559, 444, 59, 486, 190, 472, 471, 470, 473, 447,
	448, 84, 441, 442, 443, 47, 476, 475, 477, -2,
	-6, 6, -113, -293, -279, -283, -229, -226, -227, -228,
	218, 206, -308, 72, -225, 303, 222, 50, 86, 55,
	54, 203, 192, 194, 444, -207, 197, -207, 228, 227,
	-221, 253, -207, -207, 191, -220, 100, 100, -55, -113,
	-340, -335, -341, -206, 197, -229, -206, -206, -206, -206,
	-206, -206, -206, -113, 179, -105, -113, 72, 29, -205,
	108, 12, 435, 190, 191, 227, 228, 194, -287, 11,
	110, 231, 231, 231, 232, 231, -203, 413, 415, 229,
	416, 417, 12, -86, 108, 19, -367, -176, -176, 127,
	72, 349, 195, -63, -3, -13, -11, -12, -9, 100,
	-130, 23, 29, 29, 74, 51, 29, -44, -43, -45,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 29, -319, 68, -274, 401, 72, -332, -333,
	-113, 75, 75, 66, 311, 66, 69, 195, 69, 66,
	-358, 321, 68, -358, 287, 321, 322, 255, 285, 194,
	-358, -358, 287, -358, -358, -358, -358, -358, 413, -358,
	-358, -358, 323, 324, -358, 411, 194, -358, -358, -358,
	-358, -358, 71, 66, 69, 311, 66, 11, 66, -305,
	135, 334, 335, 336, 337, 333, 311, 338, 339, 340,
	231, 341, -4, -89, 69, -180, -367, 191, 426, -8,
	-6, -367, 21, 22, -368, 70, -91, -177, 19, 30,
	-131, 75, 78, -159, -162, -85, -237, 50, -73, 21,
	22, 80, 11, -232, 90, 88, 89, 107, -231, 23,
	72, -225, -226, 74, -227, -228, 179, -85, -125, 110,
	91, 108, 109, 93, 121, 120, 131, 124, 125, 126,
	127, 128, 129, 130, 122, 123, 134, 100, 101, 102,
	103, 104, 105, 106, -201, -367, -101, -367, 179, -367,
	179, 180, 181, 179, -128, -128, -128, -128, -128, -128,
	-128, -367, 179, 179, -367, -367, -367, -367, -367, -9,
	-142, -85, 518, -367, -367, -367, -367, -367, -367, -367,
	-367, -367, -367, -367, -367, -367, -367, -367, -153, -85,
	-367, -367, -370, -137, -367, -370, -137, -370, -137, -370,
	-367, -370, -137, -370, -137, -370, -370, -137, -370, -367,
	-367, -367, -367, -367, -367, -367, -367, -367, -367, -367,
	-367, -367, -367, -367, -367, -367, -367, -367, -367, -367,
	-367, -367, -367, -367, -367, -367, -367, -367, -200, -200,
	11, -105, -106, -116, -237, 69, -190, -195, 424, 426,
	346, -194, -194, -236, -229, 74, 28, 100, 29, 179,
	-158, -69, 70, 69, -283, -244, -250, -252, -251, -253,
	-248, -249, 373, 376, 380, 378, 374, 379, 135, 377,
	382, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 29, 217, 369, 370, 371, 372, 393, 394, 395,
	396, 397, 398, 399, 400, 352, 375, 516, 353, 354,
	355, 356, 357, 358, 360, 361, 362, 363, 364, 365,
	366, 367, -244, -244, -244, -244, 72, 231, -226, -308,
	68, -229, -113, -222, -220, 72, 91, 72, -112, -229,
	-237, -119, -229, -237, 254, -344, -343, -335, -338, -207,
	-221, -335, 259, 257, 258, 69, 195, 69, 195, 71,
	-105, 24, 66, -107, -113, 72, 72, -112, -119, -337,
	-335, -338, -238, -237, -223, 521, 187, 21, 183, 186,
	90, 23, 25, 522, 242, 93, 358, 135, 462, 463,
	464, 387, 452, 16, 20, 205, 94, 189, 373, 376,
	203, 134, 199, 206, 276, 278, 445, 478, 182, 62,
	523, 436, 438, 434, 437, 277, 435, 411, 524, 525,
	526, 527, 366, 364, 275, 28, 528, 10, 479, 26,
	215, 249, 22, 529, 128, 362, 184, 240, 97, 98,
	531, 41, 40, 309, 24, 279, 216, 85, 532, 480,
	363, 533, 534, 19, 65, 207, 11, 201, 230, 631,
	535, 289, 13, 459, 117, 14, 536, 537, 538, 539,
	197, 196, 110, 192, 621, 60, 247, 8, 540, 356,
	541, 542, 543, 544, 545, 357, 178, 87, 546, 547,
	107, 548, 56, 466, 467, 489, 45, 32, 235, 481,
	482, 572, 483, 450, 549, 550, 38, 37, 386, 390,
	385, 551, 402, 58, 108, 17, 439, 440, 30, 552,
	553, 514, 223, 389, 355, 384, 573, 554, 555, 130,
	252, 63, 91, 342, 484, 485, 83, 365, 635, 33,
	66, 220, 338, 307, 42, 88, 15, 248, 61, 34,
	457, 114, 636, 487, 368, 198, 227, 557, 426, 251,
	558, 115, 488, 361, 574, 209, 109, 351, 185, 559,
	444, 319, 273, 210, 560, 291, 59, 561, 241, 116,
	486, 190, 412, 562, 6, 563, 454, 29, 214, 272,
	354, 200, 564, 253, 284, 274, 283, 565, 49, 566,
	298, 43, 472, 471, 470, 473, 633, 57, 447, 448,
	620, 191, 39, 96, 388, 353, 383, 195, 451, 228,
	84, 280, 5, 44, 31, 407, 9, 332, 64, 67,
	441, 442, 443, 47, 377, 374, 567, 476, 381, 475,
	477, 634, 95, 12, 568, 458, 518, 427, 89, 569,
	408, 69, -205, 74, -241, -85, -207, -207, -113, -113,
	-113, -113, -113, -205, -205, -205, -205, -202, 11, 110,
	11, -202, -202, -85, -128, -335, 437, 126, -237, 72,
	72, 349, 72, 33, -44, -44, 74, -44, 69, 100,
	-44, 70, -142, -318, 621, 69, -334, 23, 426, 427,
	402, -360, 191, 230, 227, 66, -360, -356, 329, -337,
	-336, -335, -358, -359, -229, -358, -358, -358, 413, -358,
	-358, -358, -358, -358, -358, -358, -358, -341, -360, 289,
	69, -360, -337, -335, 333, 333, 333, 333, 333, 333,
	-98, 23, -179, -178, -230, -226, -227, -228, 218, -229,
	-223, -113, 427, 428, -9, -186, 87, 9, 110, 69,
	18, 69, -175, 25, 26, 179, -129, 51, 75, 78,
	-208, 49, -113, -85, -85, -85, -140, 83, 91, 84,
	85, -231, 218, 126, -238, -230, -227, -226, 303, 222,
	-223, -128, -141, -147, -101, 79, 110, 108, 109, 93,
	-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
	-128, -128, -128, -128, -128, -240, 72, 74, 72, -230,
	-81, -84, 126, -85, -237, -230, -127, 83, -127, -229,
	-229, -73, -230, 414, -230, -73, -73, -73, -73, -73,
	-368, 69, -368, -9, -81, -81, -81, -368, -85, -85,
	-81, -81, -150, 74, -81, -150, 74, -81, -128, 450,
	451, 452, -81, -81, -73, -151, -152, 95, -150, -81,
	-368, -128, -229, -229, -81, -82, -81, -81, -81, -368,
	-368, -84, -81, -84, -81, -81, -368, -368, -368, -368,
	-81, -81, -81, -81, -81, -81, -81, -81, -81, -81,
	-81, -81, -115, 87, -113, -88, -93, -95, -96, -117,
	-100, -367, -94, -97, -113, -101, 72, 489, -113, -105,
	-369, 11, 67, -369, 69, 179, -193, -196, 69, 425,
	427, 428, -190, -261, 134, 66, 86, -85, -230, -238,
	-176, -75, -295, -296, 628, 404, 491, 376, 28, 492,
	134, 81, 493, 236, 36, 192, 495, 433, 334, 496,
	497, 202, 498, 499, 500, 295, 501, 345, 502, 503,
	504, 505, 322, 5, -279, -281, -282, -283, -299, 206,
	-307, 198, 200, 201, 44, -284, 207, 192, 45, -245,
	-269, 406, 407, -255, 68, -254, 68, -254, 381, 373,
	376, 374, -254, -254, -254, -254, -254, -260, 376, -260,
	-260, -260, -260, 374, 68, 68, -255, -255, -255, -271,
	68, -271, 368, -272, 68, -272, -272, -272, -272, -245,
	-245, -245, -245, -308, -308, -308, -85, -233, 67, 23,
	194, -267, -266, -263, -264, -265, -262, 28, 24, -267,
	-50, 242, 212, 179, 68, 179, 245, 246, -339, 69,
	28, -345, 286, -113, 222, -113, -113, -335, -335, -341,
	-315, 210, 205, -113, 69, 69, -113, 74, 72, 72,
	-130, -288, 11, 110, -205, -237, -237, -113, -130, -205,
	-79, 218, 67, -370, -368, 72, -128, -43, -127, 70,
	-114, 87, 74, -333, -239, 401, 427, -361, 126, -229,
	-360, -361, -364, 518, 195, 70, 69, -358, -361, 307,
	289, -361, 11, -306, 19, -100, -367, -368, 69, 179,
	-57, -56, 187, 184, 185, 188, 189, -311, 404, 183,
	239, 238, 224, -368, -185, 34, 35, -229, 52, -131,
	-131, -162, -199, 19, 11, 47, 47, -74, 57, 83,
	84, 85, 179, -367, -141, -128, -128, -128, -79, 90,
	-368, 69, -368, 179, -82, -81, -81, -81, -81, -81,
	-85, -368, -368, -368, -368, 69, 67, 23, -368, 67,
	-368, 11, 11, -368, 11, 11, -368, -368, 11, -128,
	-128, -128, -368, -368, -81, -154, -152, 97, -85, -368,
	-368, -368, 69, 69, -368, -368, -368, -368, -163, 457,
	-163, -368, -368, -368, -368, -368, -163, -163, -163, -163,
	-368, -368, -368, -368, -368, -368, -368, -368, -368, -368,
	-368, -368, -183, 114, -113, 29, 69, -108, -110, -109,
	-111, 56, 60, 62, 57, 58, 59, 414, 63, -216,
	-88, -99, 47, -367, -118, 114, -120, 23, -239, 64,
	196, 65, -367, -367, -183, 67, -88, -88, -116, -237,
	126, -195, -198, 429, 426, 432, 72, 74, 179, -177,
	69, -291, 100, -291, -291, 29, 376, 134, -291, -291,
	-291, -291, -291, 494, 494, -291, -291, -291, -291, -291,
	-291, -291, -291, -291, -291, -291, 346, -291, -291, -291,
	-291, -297, 506, 74, 75, 81, 325, 295, -291, -283,
	68, 72, -289, -226, 45, -284, -286, -284, -284, -289,
	72, -289, 45, 83, 91, -258, -259, -273, -276, -256,
	23, 631, 409, 28, 66, 404, 198, 45, 44, 201,
	81, -270, 408, 75, -260, 75, 468, -260, -254, -254,
	-254, 381, -254, -260, -261, 135, 29, -261, 135, -261,
	135, -261, 135, -261, 135, -260, -277, 74, -277, 75,
	-271, 75, 70, 66, -229, -172, -113, -264, -263, -265,
	376, 421, 134, 433, -51, 8, 9, 10, -229, -320,
	-321, -322, -229, 110, 247, 248, -229, -348, 319, -343,
	287, 296, 90, 16, 518, 195, 195, -113, -335, -121,
	12, 72, 72, -202, -205, -128, -338, 233, 234, -183,
	191, -334, 195, 179, 179, -361, 195, 310, -337, -229,
	11, 11, 307, 11, -337, 343, -178, -230, 69, -217,
	-284, -317, -282, -283, -316, 199, 206, -217, 206, 203,
	-284, 207, 198, 199, -214, -284, 195, 23, -217, -217,
	-290, 100, -217, 32, 32, 114, 69, 74, 74, 53,
	-113, -80, -173, 126, -230, -82, -79, 90, -128, -84,
	126, -238, -368, -368, -368, -368, -368, -368, -243, 135,
	373, 217, 371, 364, 391, 378, 406, 369, 407, -240,
	-243, -240, -128, -128, -128, -128, -128, 11, 11, 11,
	515, -158, 99, -85, 96, -128, -128, -229, -168, -367,
	-163, -163, -163, -163, -163, -164, -163, -164, -164, -164,
	-164, -164, -164, -164, -164, -164, -164, -164, -126, 29,
	47, -367, -9, -367, -188, -192, -150, -226, -228, 218,
	303, 222, -93, -95, -95, -93, -95, 56, 56, 56,
	61, 56, 61, 61, 56, 56, -109, -239, -368, -368,
	-146, 241, -367, 33, -239, -120, 192, 192, 192, -82,
	-128, -121, -88, -121, -121, 179, 426, 430, 431, -296,
	-297, -297, -297, -291, 29, -291, 75, -365, 72, -225,
	-223, 74, 74, 74, -291, -291, 75, 74, -365, 74,
	208, 211, 213, -297, -297, -297, 75, 74, -298, 28,
	510, 367, 511, 512, 513, 74, 28, 75, 28, 75,
	-297, 507, -297, -301, -300, -229, -226, 198, -307, 44,
	-307, -289, -289, -289, -289, 68, 83, -367, 632, 75,
	-128, 9, 45, 45, 45, 74, 70, -261, 135, 70,
	70, -261, 135, -260, -254, -261, 135, 72, 135, -261,
	135, 70, 69, 70, 69, 70, 69, -124, 579, 91,
	-113, -174, 23, 29, -290, -290, -290, 66, 70, 69,
	-244, -229, -229, -229, -351, 518, 292, -349, -347, 298,
	299, 300, 301, 302, -338, 297, -345, 294, 74, 72,
	-113, -335, -85, -130, -260, -113, -337, 126, 126, -229,
	195, -337, 307, -363, 518, -337, -337, 11, -337, 74,
	-56, 68, -278, 72, -225, -289, -210, 198, 72, 72,
	72, -226, -225, -227, -228, 72, -226, -225, -227, -228,
	-229, 45, 45, 72, -113, -229, -278, 72, -85, -229,
	-229, -229, -186, 69, -83, -368, -128, 179, -164, -164,
	-164, -164, -164, -368, -255, -255, -255, -272, -255, 357,
	-255, 357, -368, -368, -368, 19, 19, 19, 19, -368,
	-128, -128, -128, -367, -77, 454, -85, 69, 69, -234,
	72, -187, 66, -188, -145, -148, -147, -367, -9, -368,
	-179, 6, 518, -184, -229, -121, 69, 100, 100, 100,
	100, -103, -102, 66, 67, -104, 66, -102, 56, 56,
	56, -182, 68, 69, -147, -367, -184, -128, -120, -367,
	-367, -367, -368, 69, -158, -121, -240, -291, -365, 74,
	74, 508, 509, 70, 69, -255, -255, 45, -286, -181,
	-229, -128, 23, -134, 434, 443, 442, 441, 439, 440,
	436, 438, 437, 455, 456, -261, 135, -260, 74, -260,
	75, 75, 579, 68, -9, -172, -290, 72, 135, 72,
	135, 74, -113, -323, -324, -325, 81, 517, 91, 249,
	250, 208, 251, 252, 253, -322, -244, -244, -244, -354,
	-355, -353, 295, 317, 318, 303, -352, -350, 312, 313,
	314, 315, 90, 74, 74, 74, -346, 286, 90, 295,
	16, 23, -205, -326, -203, -363, -337, -363, 289, -337,
	-278, -160, 211, 212, -244, -244, -233, -286, 45, 72,
	-215, 195, 23, 195, -160, -278, 29, 184, 87, -90,
	11, -173, -173, 126, -260, 72, -128, -128, -128, -128,
	-368, -368, -368, -128, -368, 74, -128, -128, -144, 114,
	27, -187, 69, -368, -368, 47, -368, -368, 69, -158,
	-192, -85, -85, -85, -85, -85, 68, -85, -181, 241,
	-368, -120, -216, -181, -181, -181, 74, -176, -240, -303,
	-302, 67, 202, 81, -300, -175, -175, -289, -289, 70,
	69, -368, -367, -261, 135, -261, 135, 70, 70, -301,
	-172, -174, 72, 135, 19, -173, -325, 74, 253, 249,
	253, 253, 253, 253, 254, -342, 81, 293, -353, 304,
	584, 288, 319, 75, 75, 113, 30, 31, -350, 75,
	75, 75, 75, -347, 16, 518, -345, 294, 74, 74,
	-327, 38, -329, 39, -362, 23, -363, -362, 307, 70,
	72, -245, -245, 68, -289, -289, 72, -229, -160, 28,
	28, -367, -121, -88, -83, -368, -368, -368, -368, -76,
	110, 518, -368, -368, -158, 16, 45, -148, -145, 47,
	-9, -367, -229, -176, -181, 70, -147, -118, -239, -368,
	-368, -368, 416, -302, 72, -290, 74, 209, -229, -268,
	634, 633, -128, 70, -9, 240, -174, 36, 36, 245,
	246, 74, 74, 28, 305, 178, 28, 75, 178, 460,
	294, 74, 72, 295, -257, 196, -330, 43, -328, -275,
	42, 16, -335, -362, -301, -233, 68, -128, -309, -310,
	114, -155, 13, -173, -368, 516, 63, 519, -169, 116,
	115, -142, 9, -145, -9, 70, -120, -367, 75, -113,
	-368, -304, -303, -172, 241, -22, -3, -11, -12, -13,
	-14, -16, -52, -17, -18, -23, -24, -19, -58, -59,
	-67, -65, -66, -62, -61, -27, -25, -28, -20, -29,
	-30, -31, -35, -36, -26, -37, 94, 197, 275, 344,
	75, 28, 75, 28, 308, 295, 23, -182, 75, -329,
	16, -331, 40, 41, 74, 518, 70, 68, -301, -368,
	69, -229, -156, 14, 16, 53, 517, 520, -368, -170,
	93, -171, 113, 460, -132, 75, 178, -170, -188, -368,
	-294, -280, -230, 68, -268, -161, 243, 244, -172, -85,
	-85, 72, -48, -235, 278, 279, 280, -230, -38, -22,
	306, 306, 74, 38, 116, 74, 16, 16, 287, -304,
	-301, 70, -310, 47, -166, 458, -157, -85, -143, -87,
	-85, 53, -171, 118, 119, 241, 118, 119, -127, -368,
	69, -244, -181, -172, 72, 72, -39, -40, 95, 96,
	276, 277, 281, -244, 69, 637, 74, 74, 28, 292,
	21, -338, 70, -304, 225, -165, -167, -229, 69, 518,
	90, -229, -368, -280, -246, 490, 24, 70, -174, 99,
	97, -40, -85, -38, 19, 19, 19, 28, -230, 99,
	-22, 309, -304, 226, 69, 23, -87, 519, -171, 23,
	-239, 74, 490, -313, -314, 66, -15, -21, -14, -11,
	-12, -13, 344, 518, 94, -38, 96, 637, -49, 75,
	-9, -47, -46, 75, -49, 283, 91, 284, 72, -128,
	-338, -367, -167, -168, 520, -239, -247, 74, -314, 66,
	-313, 66, 10, 9, -172, -38, -91, 637, -38, 99,
	97, -41, -42, 98, -22, 69, 282, -128, 223, -373,
	83, 28, 335, -312, 210, 205, 208, 29, -312, 637,
	99, 637, 197, -38, 99, 97, -42, -85, -46, -368,
	-368, 66, -128, 66, 204, 28, 83, 99, 94, 637,
	197, -38, 96, 531, 66, 531, 99, 637, -38, 531,
	197, 99, 637, 197,
}

var yyDef = [...]int{
	-2, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, 1252, 831, 831, 0, 831,
	933, -2, 685, 0, 0, 0, 0, -2, 804, 805,
	806, 810, 811, 826, 828, 0, 347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 561, -2, 0, 1328,
	0, 829, 818, 819, 41, 0, 0, 2182, 2, 1260,
	0, 840, 833, 0, 831, 831, 831, 67, 68, 0,
	99, 0, 0, 0, 934, 0, 0, 0, 1326, 1326,
	251, 1326, 1326, 0, 1342, 249, 0, 1323, 1338, 1339,
	1340, 0, 0, 0, 1324, 0, 1324, 1324, 1324, 1324,
	1324, 1324, 1324, 0, 750, 967, 969, 970, 971, 1351,
	1352, 2177, 2178, 2179, 2180, 2181, 2152, 2153, 2154, 2155,
	2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165,
	2166, 2167, 2168, 2169, 2170, 1930, 1931, 1932, 1933, 1934,
	1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944,
	1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954,
	1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964,
	1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974,
	1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984,
	1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994,
	1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,
	2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014,
	2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024,
	2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034,
	2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044,
	2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054,
	2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064,
	2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074,
	2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084,
	2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094,
	2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104,
	2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114,
	2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124,
	2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134,
	2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144,
	2145, 2146, 2147, 2148, 2149, 2150, 2151, 0, 0, 0,
	795, 0, 761, 762, 763, 0, 765, 0, 0, 0,
	0, 0, 775, 778, 782, 0, 1260, 1260, 582, 583,
	584, 800, 801, 789, 802, 0, 0, 56, 0, 0,
	914, 326, 328, 0, 348, 0, 351, 354, 1357, 812,
	0, 0, 1382, 1383, 0, 0, 0, 0, 0, 2079,
	194, 265, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 0, 196, 196, 196, 2087, 196, 0, 196, 196,
	196, 196, 196, 264, 254, 255, 256, 0, 0, 0,
	2079, 0, 562, 559, 560, 57, 0, 46, 58, 1276,
	935, 936, 937, 0, 1329, 807, 0, 835, 0, 39,
	0, 1266, 0, 0, 843, 841, 842, 832, 0, 854,
	884, 0, 981, 1815, 987, -2, -2, -2, 1728, 1030,
	1031, 1032, 1033, 1034, 1035, 1036, 1037, 1673, 0, 0,
	0, 0, 0, 1770, 1060, 1061, 1062, 1063, 1064, 1065,
	1233, 1234, 1235, 1236, 1237, 1238, 1239, -2, -2, -2,
	1219, 1220, 0, 2177, 2178, 2179, 2180, 2181, 1293, 0,
	1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164,
	1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174,
	1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184,
	1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194,
	1195, 1196, 1796, 1859, 1747, 1864, 1692, 0, 1684, 1761,
	1888, 1889, 0, 1804, 2158, 0, -2, 1913, 1852, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, 2168, 2169,
	1754, 1702, 1812, 1853, 1693, 1714, 1733, 1782, 1783, 1785,
	1817, 1818, 1836, 1845, 1863, 1674, 1675, 1676, 1777, 1778,
	1885, 1884, 1883, 1886, 1919, 1917, 1920, 1662, 1663, 1664,
	1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1677, 1678,
	1679, 1680, 1681, 1683, 1685, 1686, 1687, 1688, 1689, 1690,
	1691, 1694, 1695, 1696, 1701, 1703, 1704, 1705, 1706, 1707,
	1708, 1709, 1710, 1712, 1713, 1715, 1716, 1717, 1718, 1719,
	1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1729, 1730,
	1732, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742,
	1743, 1744, 1745, 1746, 1748, 1749, 1750, 1751, 1752, 1753,
	1755, 1756, 1757, 1758, 1759, 1760, 1762, 1763, 1764, 1765,
	1766, 1767, 1768, 1769, 1771, 1772, 1773, 1774, 1775, 1776,
	1779, 1780, 1781, 1784, 1786, 1787, 1788, 1789, 1790, 1791,
	1792, 1793, 1794, 1795, 1797, 1798, 1801, 1802, 1803, 1805,
	1806, 1807, 1808, 1809, 1810, 1811, 1813, 1814, 1816, 1820,
	1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830,
	1831, 1832, 1833, 1834, 1835, 1837, 1838, 1839, 1840, 1841,
	1842, 1843, 1844, 1846, 1847, 1848, 1849, 1850, 1851, 1854,
	1855, 1856, 1857, 1858, 1860, 1861, 1862, 1865, 1866, 1867,
	1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877,
	1878, 1879, 1880, 1881, 1882, 1887, 1890, 1891, 1892, 1893,
	1894, 1895, 1896, 1897, 1898, 1899, 1901, 1902, 1903, 1904,
	1905, 1906, 1907, 1908, 1909, 1914, 1915, 1916, 1918, 1921,
	1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1328, 1328,
	0, 84, 2135, 0, 1300, -2, -2, 1302, 0, 0,
	0, -2, -2, -2, -2, 1685, -2, 1219, 0, 0,
	0, 0, 1673, 1674, 1675, 1676, 1682, 1684, 1692, 1693,
	1697, 1698, 1699, 1700, 1702, 1711, 1714, 1728, 1731, 1733,
	1747, 1754, 1761, 1770, 1777, 1778, 1782, 1783, 1785, 1796,
	1799, 1800, 1804, 1812, 1815, 1817, 1818, 1819, 1836, 1845,
	1852, 1853, 1859, 1863, 1864, 1883, 1884, 1885, 1886, 1888,
	1889, 1900, 1910, 1911, 1912, 1913, 1917, 1919, 1920, 100,
	1252, 831, 101, 0, 392, 393, 0, 0, 0, 0,
	0, 0, 607, 1345, 1346, 2171, 2172, 2173, 2174, 2175,
	2176, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 1326, 251, 0, 0, 731, 0,
	732, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 749, 0, 751, 78, 752, 795, 754,
	0, 0, 1326, 1326, 0, 0, 0, 0, 0, 609,
	610, 795, 795, 795, 795, 792, 0, 792, 772, 792,
	790, 791, 0, 777, 0, 0, 0, 785, 786, 0,
	813, 0, 0, 820, 822, 823, 824, 825, 821, 0,
	830, 0, 0, 0, 330, 0, 0, 350, 332, 0,
	335, 336, 337, 338, 339, 340, 341, 342, 343, 344,
	345, 346, 0, 353, 0, 1355, 1358, 817, 1373, 1374,
	0, 1384, 1385, 200, 0, 200, 0, 0, 0, 0,
	163, 196, 0, 165, 196, 196, 196, 0, 196, 196,
	172, 173, 196, 175, 176, 177, 178, 179, 196, 181,
	182, 183, 196, 196, 186, 196, 196, 189, 190, 191,
	192, 193, 263, 200, 0, 0, 200, 0, 0, 544,
	0, 0, 0, 0, 549, 550, 551, 552, 0, 0,
	555, 556, -2, 45, 0, 0, 0, 0, 0, 42,
	63, 0, 836, 837, 62, 2183, 0, 50, 0, 0,
	1261, 1264, 1265, 1253, 1254, 1257, 0, 0, 838, 844,
	845, 834, 0, 855, 0, 0, 0, 0, 885, 0,
	888, 889, 890, 891, 892, 893, 0, 985, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1009, 1010, 1011,
	1012, 1013, 1014, 1015, 988, 0, 1002, 0, 0, 0,
	0, 0, 0, 0, 1053, 1054, 1055, 1056, 1057, 1058,
	0, 843, 0, 0, 843, 843, 843, 843, 843, 0,
	0, 1028, 1925, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 843, 0, 1211,
	0, 0, 1122, 1131, 0, 1123, 1132, 1124, 1133, 1125,
	0, 1126, 1134, 1127, 1135, 1128, 1129, 1136, 1130, 0,
	0, 0, 1024, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 80, 967, 0, 85, 87, 0, 0,
	2135, 1303, 1304, 518, 1317, 1318, 1319, 0, 1315, 0,
	1260, 840, 624, 0, 394, 410, 507, 422, 423, 424,
	497, 426, 499, 499, 0, 499, 499, 499, 499, 499,
	515, 515, 515, 515, 515, 468, 469, 470, 471, 472,
	0, 0, 445, 497, 497, 497, 449, 487, 488, 489,
	490, 491, 492, 493, 494, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 502, 502, 504, 504, 504,
	504, 504, 410, 410, 410, 410, 0, 0, 0, 606,
	0, 1343, 0, 0, 251, -2, 0, -2, 0, 962,
	0, 0, 972, 0, 0, 111, 281, 267, 110, 0,
	245, 250, 246, 247, 248, 0, 0, 0, 0, 258,
	746, 1325, 0, 739, 76, 740, 741, 742, 743, 744,
	260, 745, 968, 1353, 1354, 1386, 1387, 1388, 1389, 1390,
	1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400,
	1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410,
	1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420,
	1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430,
	1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440,
	1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450,
	1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460,
	1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470,
	1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480,
	1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490,
	1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500,
	1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510,
	1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520,
	1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530,
	1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540,
	1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550,
	1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560,
	1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570,
	1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580,
	1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590,
	1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600,
	1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610,
	1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620,
	1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630,
	1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640,
	1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650,
	1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660,
	1661, 0, 753, 796, 0, 798, 0, 0, 914, 758,
	759, 760, 611, 766, 767, 768, 774, 795, 0, 0,
	0, 914, 795, 776, 1016, 779, 1139, 0, 803, 815,
	814, 0, 827, 0, 327, 329, 331, 349, 0, 0,
	352, 355, 0, 0, 0, 0, 1376, 0, 1378, 1380,
	0, 0, 201, 202, 203, 200, 0, 195, 0, 218,
	266, 0, 164, 0, 198, 166, 167, 168, 196, 170,
	171, 174, 180, 184, 185, 187, 188, 262, 0, 0,
	0, 0, 161, 0, 545, 546, 547, 548, 557, 554,
	59, 0, 0, 1278, 1281, 1282, 1283, 1284, 1285, 1349,
	1350, 0, 808, 809, 0, 37, 0, 1267, 0, 0,
	0, 0, 1256, 1258, 1259, 0, 0, 1241, 0, 0,
	846, 839, 40, 982, 983, 984, 986, 1003, 0, 1005,
	1007, 886, 887, 856, 0, 1221, 1222, 1223, 1224, 1225,
	-2, 993, 994, 1018, 1019, 1020, 0, 0, 0, 0,
	1016, 998, 0, 1038, 1039, 1040, 1041, 1042, 1043, 1044,
	1045, 1046, 1047, 1048, 1049, 1052, 1153, 1154, 0, 1230,
	0, 1026, 850, 851, 0, 1231, 1050, 1240, 1051, 1226,
	1059, 1024, 1228, 1229, 1227, 0, 0, 0, 0, 0,
	1021, 0, 1292, 0, 0, 0, 0, 1100, 0, 0,
	0, 0, 1034, 1233, 0, 1034, 1233, 0, 0, 1786,
	1898, 1678, 0, 0, 0, 1217, 1214, 0, 0, 0,
	1140, 0, 0, 0, 0, 0, 1025, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 82, 0, 966, 0, 894, 896, 897, 898,
	-2, 0, 902, 903, 975, 1022, 1351, 0, -2, 0,
	0, 74, 75, 0, 0, 0, 1301, 0, 0, 0,
	90, 91, 86, 1305, 0, -2, 1312, 1313, 1221, 0,
	1266, 843, 391, 625, 627, 627, 627, 0, 0, 627,
	627, 627, 627, 627, 0, 0, 627, 627, 627, 627,
	627, 627, 627, 627, 627, 627, 627, 0, 627, 627,
	627, 627, 0, 627, 395, 397, 398, 399, 0, 589,
	597, 0, 0, 587, 589, 589, 0, 585, 586, 402,
	510, 508, 509, 425, 0, 515, 0, 515, 499, 499,
	499, 499, 454, 515, 457, 460, 461, 518, 0, 518,
	518, 518, 518, 515, 0, 0, 446, 447, 448, 437,
	0, 438, 502, 440, 0, 441, 442, 443, 444, 403,
	404, 405, 406, 603, 604, 605, 0, 0, 0, 96,
	0, 105, -2, 525, 526, 527, 0, 522, 1327, 106,
	0, 283, 284, 0, 221, 0, 252, 253, 113, 0,
	0, 268, 0, 389, 390, 0, 733, 0, 735, 257,
	737, 747, 748, 738, 0, 0, 79, 797, 755, 756,
	757, 979, 0, 0, 769, 793, 794, 792, 795, 773,
	787, 0, 0, 780, 0, 816, 915, 333, 334, 356,
	82, 0, 1356, 1375, 0, 1379, 1381, 0, 204, 206,
	0, 0, 155, 0, 0, 197, 0, 169, 0, 0,
	0, 0, 0, 553, 0, 60, 0, 1277, 0, 0,
	686, 687, -2, 724, 1335, 724, 724, 710, 572, 724,
	0, 0, 0, 64, 51, 0, 1980, 54, 0, 1262,
	1263, 1255, 0, 1320, 1321, 1242, 1243, 97, 847, 1004,
	1006, 1008, 0, 1024, 995, 1016, 999, 0, 996, 0,
	990, 0, 1098, 0, 0, 0, 0, 0, 0, 0,
	1029, -2, 1096, 1097, 1099, 0, 0, 0, 1103, 0,
	1106, 0, 0, 1146, 0, 0, 1147, 1111, 0, 0,
	0, 0, 0, 1117, 1252, 0, 1215, 0, 0, 1120,
	1121, 1141, 0, 0, 1142, 1143, 1144, 1145, 1085, 0,
	1086, 0, 0, 0, 0, 0, 1092, 1093, 1094, 1095,
	865, 865, 865, 865, 865, 865, 865, 865, 865, 865,
	865, 865, 0, 0, 965, 0, 0, 0, 0, 0,
	0, 938, 0, 0, 941, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 907, 0, 909, 0, 975, 0,
	0, 0, 1024, 0, 979, 0, 979, 979, 81, 0,
	974, 88, 89, 0, 0, 95, 519, 520, 0, 220,
	0, 0, 628, 0, 0, 627, 0, 627, 0, 0,
	0, 0, 0, 627, 627, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 655, 0, 0, 0,
	0, 662, 663, 667, 668, 669, 670, 671, 0, 396,
	0, 590, 0, 0, 589, 589, 589, 588, 589, 580,
	590, 581, 0, 411, 0, 413, 414, 415, 416, 417,
	0, 0, 0, 0, 0, 514, 0, 539, 541, 0,
	0, 421, 511, 0, 518, 0, 0, 518, 515, 452,
	453, 499, 458, 518, 462, 479, 0, 463, 480, 464,
	481, 465, 482, 466, 483, 518, 0, 495, 0, 0,
	439, 0, 621, 0, 1344, 98, 0, 528, 529, 530,
	0, 572, 572, 572, 0, 285, 286, 287, 963, 0,
	222, 223, 0, 0, 0, 0, 973, 123, 0, 282,
	0, 0, 0, 0, 0, 0, 0, 77, 261, 764,
	0, 612, 613, 914, 771, 1017, 781, 783, 784, 515,
	0, 1377, 0, 0, 0, 0, 0, 0, 216, 199,
	0, 0, 0, 0, 162, 0, 1279, 1280, 0, 0,
	589, 0, 711, 712, 0, 725, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1336, 1337, 0, 0,
	0, 573, 0, 719, 720, 0, 0, 52, 53, 1268,
	38, 50, 0, 857, 1232, 0, 997, 0, 1000, 1027,
	852, 0, 1066, 865, 865, 865, 865, 865, 0, 497,
	497, 1200, 497, 504, 1203, 497, 1205, 497, 1208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1212, 1119, 1218, 0, 0, 0, 858, 859, 861,
	1087, 1088, 1089, 1090, 1091, 1070, 866, 1071, 1072, 1074,
	1075, 1077, 1078, 1079, 1080, 1082, 1083, 1084, 1286, 0,
	0, 0, 1271, 0, 979, 1294, 0, 0, 0, 0,
	2171, 2172, 895, 929, 931, 0, 926, 939, 940, 942,
	0, 944, 0, 0, 947, 948, 949, 916, 901, 1023,
	904, 0, 0, 0, 975, 913, 0, 0, 0, 0,
	0, 1252, 979, 72, 73, 0, 92, 93, 94, 626,
	629, 630, 631, 0, 627, 0, 634, 635, 678, 679,
	680, 637, 638, 639, 0, 0, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 672,
	673, 674, 675, 676, 677, 656, 657, 658, 659, 660,
	661, 0, 666, 0, 591, 497, 497, 0, 595, 587,
	596, 574, 576, 577, 579, 0, 412, 0, 0, 420,
	512, 0, 538, 540, 542, 543, 498, 450, 475, 500,
	501, 451, 476, 518, 459, 455, 477, 516, 517, 467,
	484, 515, 0, 515, 0, 505, 0, 608, 622, 0,
	0, 0, 96, 572, 0, 0, 0, 0, 229, 0,
	225, 0, 0, 0, 131, 0, 114, 115, 116, 118,
	119, 0, 0, 0, 112, 0, 270, 0, 273, 274,
	734, 736, 980, 795, 1367, 964, 216, 205, 207, 208,
	0, 216, 219, 156, 0, 157, 159, 0, 158, 558,
	688, 0, 721, 0, 0, 1343, 587, 0, -2, 691,
	696, 697, 698, 699, 700, 701, 702, 703, 704, 705,
	706, 0, 717, 0, 693, 0, 721, 0, 714, 0,
	0, 55, 48, 97, 97, 1067, 1001, 0, 1069, 1073,
	1068, 1076, 1081, 1101, 1197, 515, 1201, 1202, 1204, 1206,
	1207, 1209, 1105, 1102, 1104, 0, 0, 0, 0, 1112,
	0, 0, 0, 0, 0, 0, 1216, 0, 0, 863,
	862, 65, 0, 1286, 1269, 1288, 1290, 0, 0, 0,
	0, -2, 1657, 0, 920, 1252, 0, 0, 0, 0,
	0, 923, 930, 0, 0, 924, 0, 925, 943, 945,
	946, 899, 0, 0, 905, 0, 0, -2, 912, 0,
	0, 0, 922, 0, 1260, 71, 632, 0, 636, 640,
	641, 664, 665, 564, 0, 1257, 1257, 589, 589, 0,
	918, 0, 0, 513, 1139, 1139, 1139, 1139, 1139, 1139,
	1139, 1139, 1139, 0, 0, 456, 478, 518, 496, 518,
	0, 0, 623, 0, 96, 98, 0, 533, 534, 535,
	536, 537, 0, 97, 230, 231, 0, 0, 0, 236,
	0, 0, 0, 0, 0, 224, 226, 227, 228, 149,
	132, 133, 0, 0, 0, 0, 124, 125, 0, 0,
	0, 0, 0, 120, 121, 122, 269, 0, 0, 272,
	0, 0, 770, 1369, 1363, 209, 216, 209, 0, 160,
	0, 690, 722, 0, 410, 410, 0, 589, 589, 713,
	0, 1333, 1334, 0, 708, 721, 0, 0, 0, 979,
	0, 0, 848, 853, 1198, 1199, 0, 0, 0, 0,
	1113, 1114, 1115, 1148, 1118, 1213, 0, 0, 1252, 0,
	0, 66, 0, 1291, -2, 0, 0, 83, 0, 1260,
	1295, 1296, 1297, 1298, 1299, 927, 0, 932, 0, 0,
	975, 910, 0, 0, 0, 0, 0, 70, 633, 563,
	567, 0, 572, 0, 592, 593, 594, 575, 578, 0,
	0, 407, 0, 473, 485, 474, 486, 503, 506, 0,
	103, 0, 531, 532, 0, 98, 232, 233, 234, 235,
	237, 238, 0, 0, 0, 109, 0, 0, 134, 0,
	0, 0, 0, 144, 145, 146, 147, 148, 126, 127,
	128, 129, 130, 117, 0, 0, 271, 0, 276, 277,
	1330, 1371, -2, 0, 152, 0, 209, 154, 217, 689,
	723, 400, 401, 0, 1343, 0, 692, 707, 709, 0,
	716, 0, 1244, 49, 97, 1107, 1109, 1108, 1110, 0,
	0, 0, 1137, 1138, 867, 0, 0, 1289, 1270, 0,
	1274, 0, 921, 69, 0, 917, 906, 908, 975, 976,
	977, 978, 0, 568, 569, 0, 571, 0, 919, 418,
	408, 409, 0, 565, 96, 0, 56, 239, 240, 241,
	242, 150, 151, 135, 136, 0, 138, 139, 0, 0,
	0, 279, 0, 275, 916, 0, 1363, 0, 1365, 0,
	1362, 0, 210, 153, 0, 0, 0, 715, 0, 727,
	0, 1249, 0, 849, 1116, 0, 0, 0, 0, 0,
	0, 864, 0, 1273, 0, 928, 911, 0, 570, 0,
	407, 102, 566, 104, 288, 96, 359, 360, 361, 362,
	363, 364, 365, 366, 367, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	383, 384, 385, 386, 387, 388, 0, 0, 0, 56,
	0, 140, 0, 142, 143, 278, 0, 36, 0, 1370,
	0, 1368, 0, 0, 1364, 0, 565, 0, 0, 726,
	0, 0, 877, 0, 0, 1149, 0, 1152, 860, 868,
	0, 871, 0, 0, 0, 882, 0, 869, 1287, -2,
	0, 952, 0, 0, 419, 96, 0, 0, 108, 0,
	0, 1345, 0, 0, -2, -2, -2, 1347, 0, 357,
	137, 141, 280, 1331, 1332, 1372, 0, 0, 0, 694,
	0, 565, 728, 0, 47, 0, 1250, 1251, 1245, 1246,
	1248, 1150, 0, 872, 873, 874, 875, 876, 0, 0,
	0, 0, 0, 98, 289, 290, 0, 299, 0, 56,
	0, 0, 0, 313, 0, 56, 1366, 1360, 211, 212,
	213, 215, 565, 718, 0, 878, 879, 0, 0, 0,
	0, 883, 0, 953, 954, 0, 0, 598, 56, 0,
	56, 300, 0, 0, 0, 0, 0, 0, 1348, 243,
	358, 0, 695, 0, 0, 0, 1247, 0, 870, 0,
	951, 957, 0, 599, 600, 0, 96, 291, 292, 293,
	294, 295, 56, 0, 297, 0, 56, 56, 309, 310,
	311, 56, 318, 320, 321, 322, 0, 324, 325, 314,
	214, 0, 880, 881, 1151, 950, 958, 956, 601, 0,
	602, 0, 0, 0, 107, 0, 57, 56, 0, 0,
	56, 0, 306, 0, 312, 0, 323, 0, 1805, 955,
	0, 0, 0, 614, 616, 617, 0, 0, 615, 56,
	0, -2, 302, 0, 0, 56, 307, 0, 319, 729,
	730, 0, 0, 0, 618, 619, 620, 296, 298, 56,
	304, 0, 56, 959, 0, 961, 0, 56, 0, 960,
	303, 0, -2, 305,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 92, 3, 3, 3, 129, 121, 3,
	68, 70, 126, 124, 69, 125, 179, 127, 111, 112,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 637,
	101, 100, 102, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 131, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 120, 3, 132,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 82, 83, 84, 85,
	86, 87, 88, 89, 90, 91, 93, 94, 95, 96,
	97, 98, 99, 103, 104, 105, 106, 107, 108, 109,
	110, 113, 114, 115, 116, 117, 118, 119, 122, 123,
	128, 130, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 177, 178, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257, 258, 259, 260, 261,
	262, 263, 264, 265, 266, 267, 268, 269, 270, 271,
	272, 273, 274, 275, 276, 277,
}

var yyTok3 = [...]int{
	57600, 278, 57601, 279, 57602, 280, 57603, 281, 57604, 282,
	57605, 283, 57606, 284, 57607, 285, 57608, 286, 57609, 287,
	57610, 288, 57611, 289, 57612, 290, 57613, 291, 57614, 292,
	57615, 293, 57616, 294, 57617, 295, 57618, 296, 57619, 297,
	57620, 298, 57621, 299, 57622, 300, 57623, 301, 57624, 302,
	57625, 303, 57626, 304, 57627, 305, 57628, 306, 57629, 307,
	57630, 308, 57631, 309, 57632, 310, 57633, 311, 57634, 312,
	57635, 313, 57636, 314, 57637, 315, 57638, 316, 57639, 317,
	57640, 318, 57641, 319, 57642, 320, 57643, 321, 57644, 322,
	57645, 323, 57646, 324, 57647, 325, 57648, 326, 57649, 327,
	57650, 328, 57651, 329, 57652, 330, 57653, 331, 57654, 332,
	57655, 333, 57656, 334, 57657, 335, 57658, 336, 57659, 337,
	57660, 338, 57661, 339, 57662, 340, 57663, 341, 57664, 342,
	57665, 343, 57666, 344, 57667, 345, 57668, 346, 57669, 347,
	57670, 348, 57671, 349, 57672, 350, 57673, 351, 57674, 352,
	57675, 353, 57676, 354, 57677, 355, 57678, 356, 57679, 357,
	57680, 358, 57681, 359, 57682, 360, 57683, 361, 57684, 362,
	57685, 363, 57686, 364, 57687, 365, 57688, 366, 57689, 367,
	57690, 368, 57691, 369, 57692, 370, 57693, 371, 57694, 372,
	57695, 373, 57696, 374, 57697, 375, 57698, 376, 57699, 377,
	57700, 378, 57701, 379, 57702, 380, 57703, 381, 57704, 382,
	57705, 383, 57706, 384, 57707, 385, 57708, 386, 57709, 387,
	57710, 388, 57711, 389, 57712, 390, 57713, 391, 57714, 392,
	57715, 393, 57716, 394, 57717, 395, 57718, 396, 57719, 397,
	57720, 398, 57721, 399, 57722, 400, 57723, 401, 57724, 402,
	57725, 403, 57726, 404, 57727, 405, 57728, 406, 57729, 407,
	57730, 408, 57731, 409, 57732, 410, 57733, 411, 57734, 412,
	57735, 413, 57736, 414, 57737, 415, 57738, 416, 57739, 417,
	57740, 418, 57741, 419, 57742, 420, 57743, 421, 57744, 422,
	57745, 423, 57746, 424, 57747, 425, 57748, 426, 57749, 427,
	57750, 428, 57751, 429, 57752, 430, 57753, 431, 57754, 432,
	57755, 433, 57756, 434, 57757, 435, 57758, 436, 57759, 437,
	57760, 438, 57761, 439, 57762, 440, 57763, 441, 57764, 442,
	57765, 443, 57766, 444, 57767, 445, 57768, 446, 57769, 447,
	57770, 448, 57771, 449, 57772, 450, 57773, 451, 57774, 452,
	57775, 453, 57776, 454, 57777, 455, 57778, 456, 57779, 457,
	57780, 458, 57781, 459, 57782, 460, 57783, 461, 57784, 462,
	57785, 463, 57786, 464, 57787, 465, 57788, 466, 57789, 467,
	57790, 468, 57791, 469, 57792, 470, 57793, 471, 57794, 472,
	57795, 473, 57796, 474, 57797, 475, 57798, 476, 57799, 477,
	57800, 478, 57801, 479, 57802, 480, 57803, 481, 57804, 482,
	57805, 483, 57806, 484, 57807, 485, 57808, 486, 57809, 487,
	57810, 488, 57811, 489, 57812, 490, 57813, 491, 57814, 492,
	57815, 493, 57816, 494, 57817, 495, 57818, 496, 57819, 497,
	57820, 498, 57821, 499, 57822, 500, 57823, 501, 57824, 502,
	57825, 503, 57826, 504, 57827, 505, 57828, 506, 57829, 507,
	57830, 508, 57831, 509, 57832, 510, 57833, 511, 57834, 512,
	57835, 513, 57836, 514, 57837, 515, 57838, 516, 57839, 517,
	57840, 518, 57841, 519, 57842, 520, 57843, 521, 57844, 522,
	57845, 523, 57846, 524, 57847, 525, 57848, 526, 57849, 527,
	57850, 528, 57851, 529, 57852, 530, 57853, 531, 57854, 532,
	57855, 533, 57856, 534, 57857, 535, 57858, 536, 57859, 537,
	57860, 538, 57861, 539, 57862, 540, 57863, 541, 57864, 542,
	57865, 543, 57866, 544, 57867, 545, 57868, 546, 57869, 547,
	57870, 548, 57871, 549, 57872, 550, 57873, 551, 57874, 552,
	57875, 553, 57876, 554, 57877, 555, 57878, 556, 57879, 557,
	57880, 558, 57881, 559, 57882, 560, 57883, 561, 57884, 562,
	57885, 563, 57886, 564, 57887, 565, 57888, 566, 57889, 567,
	57890, 568, 57891, 569, 57892, 570, 57893, 571, 57894, 572,
	57895, 573, 57896, 574, 57897, 575, 57898, 576, 57899, 577,
	57900, 578, 57901, 579, 57902, 580, 57903, 581, 57904, 582,
	57905, 583, 57906, 584, 57907, 585, 57908, 586, 57909, 587,
	57910, 588, 57911, 589, 57912, 590, 57913, 591, 57914, 592,
	57915, 593, 57916, 594, 57917, 595, 57918, 596, 57919, 597,
	57920, 598, 57921, 599, 57922, 600, 57923, 601, 57924, 602,
	57925, 603, 57926, 604, 57927, 605, 57928, 606, 57929, 607,
	57930, 608, 57931, 609, 57932, 610, 57933, 611, 57934, 612,
	57935, 613, 57936, 614, 57937, 615, 57938, 616, 57939, 617,
	57940, 618, 57941, 619, 57942, 620, 57943, 621, 57944, 622,
	57945, 623, 57946, 624, 57947, 625, 57948, 626, 57949, 627,
	57950, 628, 57951, 629, 57952, 630, 57953, 631, 57954, 632,
	57955, 633, 57956, 634, 57957, 635, 57958, 636, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:549
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:553
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:560
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:595
		{
			setParseTree(yylex, nil)
		}
	case 36:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:601
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 37:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:607
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			if err := yyDollar[1].selStmt.SetInto(yyDollar[5].into); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 38:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:618
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:624
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 40:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:634
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:641
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 42:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:645
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:651
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:655
		{
			yyDollar[3].selStmt.SetWith(yyDollar[2].with)
			yyVAL.selStmt = yyDollar[3].selStmt
		}
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:662
		{
			yyVAL.with = &With{Ctes: yyDollar[2].tableExprs, Recursive: true}
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:665
		{
			yyVAL.with = &With{Ctes: yyDollar[1].tableExprs, Recursive: false}
		}
	case 47:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:671
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr), Window: yyDollar[13].window, Into: yyDollar[8].into}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 48:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:679
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 49:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:683
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 50:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:692
		{
			yyVAL.into = nil
		}
	case 51:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:696
		{
			yyVAL.into = &Into{Variables: yyDollar[2].variables}
		}
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:700
		{
			yyVAL.into = &Into{Outfile: string(yyDollar[3].bytes)}
		}
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:704
		{
			yyVAL.into = &Into{Dumpfile: string(yyDollar[3].bytes)}
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:710
		{
			yyVAL.variables = Variables{yyDollar[1].colIdent}
		}
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:714
		{
			yyVAL.variables = append(yyVAL.variables, yyDollar[3].colIdent)
		}
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:719
		{
			yyVAL.with = nil
		}
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:723
		{
			yyVAL.with = yyDollar[2].with
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:729
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:733
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:739
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[4].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[2].columns}
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:745
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:753
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:759
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:767
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 65:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:773
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[7].ins
			ins.Action = yyDollar[2].str
			ins.Comments = yyDollar[3].bytes2
			ins.Ignore = yyDollar[4].str
			ins.Table = yyDollar[5].tableName
			ins.Partitions = yyDollar[6].partitions
			ins.OnDup = OnDup(yyDollar[8].assignExprs)
			ins.With = yyDollar[1].with
			yyVAL.statement = ins
		}
	case 66:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:786
		{
			cols := make(Columns, 0, len(yyDollar[8].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[9].assignExprs))
			for _, updateList := range yyDollar[8].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[2].str, Comments: Comments(yyDollar[3].bytes2), Ignore: yyDollar[4].str, Table: yyDollar[5].tableName, Partitions: yyDollar[6].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[9].assignExprs), With: yyDollar[1].with}
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:798
		{
			yyVAL.str = InsertStr
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:802
		{
			yyVAL.str = ReplaceStr
		}
	case 69:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:808
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[3].bytes2), Ignore: yyDollar[4].str, TableExprs: yyDollar[5].tableExprs, Exprs: yyDollar[7].assignExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), OrderBy: yyDollar[9].orderBy, Limit: yyDollar[10].limit, With: yyDollar[1].with}
		}
	case 70:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:814
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitions, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit, With: yyDollar[1].with}
		}
	case 71:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:818
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[5].tableNames, TableExprs: yyDollar[7].tableExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), With: yyDollar[1].with}
		}
	case 72:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:822
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), With: yyDollar[1].with}
		}
	case 73:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:826
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), With: yyDollar[1].with}
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:831
		{
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:832
		{
		}
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:836
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:840
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:846
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:850
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:856
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 81:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:860
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 82:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:865
		{
			yyVAL.partitions = nil
		}
	case 83:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:869
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:875
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 85:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:879
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 86:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:886
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:895
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:899
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:905
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:909
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 91:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:913
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:919
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:923
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:927
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:931
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:936
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 97:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:941
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:946
		{
			yyVAL.boolean = yySpecialCommentMode(yylex)
		}
	case 99:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:952
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:961
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:966
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 102:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:971
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 103:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:975
		{
			yyDollar[2].viewSpec.ViewName = yyDollar[4].tableName.ToViewName()
			yyDollar[2].viewSpec.ViewExpr = yyDollar[8].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[2].viewSpec, SpecialCommentMode: yyDollar[7].boolean, SubStatementPositionStart: yyDollar[6].int, SubStatementPositionEnd: yyDollar[9].int - 1}
		}
	case 104:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:981
		{
			yyDollar[4].viewSpec.ViewName = yyDollar[6].tableName.ToViewName()
			yyDollar[4].viewSpec.ViewExpr = yyDollar[10].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[4].viewSpec, SpecialCommentMode: yyDollar[9].boolean, SubStatementPositionStart: yyDollar[8].int, SubStatementPositionEnd: yyDollar[11].int - 1, OrReplace: true}
		}
	case 105:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:987
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 106:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:995
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 107:
		yyDollar = yyS[yypt-16 : yypt+1]
//line sql.y:1003
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName, Definer: yyDollar[2].str, Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[15].statement}, SpecialCommentMode: yyDollar[14].boolean, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[16].int - 1}
		}
	case 108:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1007
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName, Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[11].statement}, SpecialCommentMode: yyDollar[10].boolean, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[12].int - 1}
		}
	case 109:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1011
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].tlsOptionItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].accountLimitItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].passLockItems)
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames, TLSOptions: tlsOptions, AccountLimits: accountLimits, PasswordOptions: passwordOptions, Locked: locked, Attribute: yyDollar[9].str}
		}
	case 110:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1030
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 111:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1039
		{
			yyVAL.accountNames = nil
		}
	case 112:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1043
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 113:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1048
		{
			yyVAL.tlsOptionItems = nil
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1052
		{
			yyVAL.tlsOptionItems = nil
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1056
		{
			yyVAL.tlsOptionItems = yyDollar[2].tlsOptionItems
		}
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1062
		{
			yyVAL.tlsOptionItems = []TLSOptionItem{yyDollar[1].tlsOptionItem}
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1066
		{
			yyVAL.tlsOptionItems = append(yyDollar[1].tlsOptionItems, yyDollar[3].tlsOptionItem)
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1072
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1076
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1080
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1084
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1088
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 123:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1093
		{
			yyVAL.accountLimitItems = nil
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1097
		{
			yyVAL.accountLimitItems = yyDollar[2].accountLimitItems
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1103
		{
			yyVAL.accountLimitItems = []AccountLimitItem{yyDollar[1].accountLimitItem}
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1107
		{
			yyVAL.accountLimitItems = append(yyDollar[1].accountLimitItems, yyDollar[2].accountLimitItem)
		}
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1113
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1117
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1121
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1125
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 131:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1130
		{
			yyVAL.passLockItems = nil
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1134
		{
			yyVAL.passLockItems = yyDollar[1].passLockItems
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1140
		{
			yyVAL.passLockItems = []PassLockItem{yyDollar[1].passLockItem}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1144
		{
			yyVAL.passLockItems = append(yyDollar[1].passLockItems, yyDollar[2].passLockItem)
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1150
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1154
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 137:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1158
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1162
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1166
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 140:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1170
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 141:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1174
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 142:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1178
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 143:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1182
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1186
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1190
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1194
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1198
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1202
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 149:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1207
		{
			yyVAL.str = ""
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1211
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.str = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1216
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 152:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1222
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 153:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1227
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[5].grantObjectType, PrivilegeLevel: yyDollar[6].privilegeLevel, To: yyDollar[8].accountNames, WithGrantOption: yyDollar[9].boolean, As: yyDollar[10].grantAssumption}
		}
	case 154:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1232
		{
			yyVAL.statement = &GrantPrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 155:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1236
		{
			yyVAL.statement = &GrantRole{Roles: yyDollar[2].accountNames, To: yyDollar[4].accountNames, WithAdminOption: yyDollar[5].boolean}
		}
	case 156:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1240
		{
			yyVAL.statement = &GrantProxy{On: yyDollar[4].accountName, To: yyDollar[6].accountNames, WithGrantOption: yyDollar[7].boolean}
		}
	case 157:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1246
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &RevokePrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 158:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1251
		{
			yyVAL.statement = &RevokePrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 159:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1255
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[7].accountNames}
		}
	case 160:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1259
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[8].accountNames}
		}
	case 161:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1263
		{
			yyVAL.statement = &RevokeRole{Roles: yyDollar[2].accountNames, From: yyDollar[4].accountNames}
		}
	case 162:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1267
		{
			yyVAL.statement = &RevokeProxy{On: yyDollar[4].accountName, From: yyDollar[6].accountNames}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1273
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].strs}
		}
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1277
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].strs}
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1281
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].strs}
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1285
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].strs}
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1289
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].strs}
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1293
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].strs}
		}
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1297
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].strs}
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1301
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].strs}
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1305
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].strs}
		}
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1309
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].strs}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1313
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].strs}
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1317
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].strs}
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1321
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].strs}
		}
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1325
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].strs}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1329
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].strs}
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1333
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].strs}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1337
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].strs}
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1341
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].strs}
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1345
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].strs}
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1349
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].strs}
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1353
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].strs}
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1357
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].strs}
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1361
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].strs}
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1365
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].strs}
		}
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1369
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].strs}
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1373
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].strs}
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1377
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].strs}
		}
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1381
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].strs}
		}
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1385
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].strs}
		}
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1389
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].strs}
		}
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1393
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].strs}
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1399
		{
			yyVAL.grantPrivileges = []Privilege{yyDollar[1].grantPrivilege}
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1403
		{
			yyVAL.grantPrivileges = append(yyDollar[1].grantPrivileges, yyDollar[3].grantPrivilege)
		}
	case 196:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1408
		{
			yyVAL.strs = nil
		}
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1412
		{
			yyVAL.strs = yyDollar[2].strs
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1418
		{
			yyVAL.strs = []string{yyDollar[1].colIdent.String()}
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1422
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].colIdent.String())
		}
	case 200:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1427
		{
			yyVAL.grantObjectType = GrantObjectType_Any
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1431
		{
			yyVAL.grantObjectType = GrantObjectType_Table
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1435
		{
			yyVAL.grantObjectType = GrantObjectType_Function
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1439
		{
			yyVAL.grantObjectType = GrantObjectType_Procedure
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1445
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1449
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1453
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].colIdent.String()}
		}
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1457
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: "*"}
		}
	case 208:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1461
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: yyDollar[3].colIdent.String()}
		}
	case 209:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1466
		{
			yyVAL.grantAssumption = nil
		}
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1470
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 211:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1474
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 212:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1478
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].accountName, Roles: nil}
		}
	case 213:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1482
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].accountName, Roles: nil}
		}
	case 214:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1486
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].accountName, Roles: yyDollar[7].accountNames}
		}
	case 215:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1490
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].accountName, Roles: yyDollar[5].accountNames}
		}
	case 216:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1495
		{
			yyVAL.boolean = false
		}
	case 217:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1499
		{
			yyVAL.boolean = true
		}
	case 218:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1504
		{
			yyVAL.boolean = false
		}
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1508
		{
			yyVAL.boolean = true
		}
	case 220:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1515
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 221:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1527
		{
			yyVAL.procedureParams = nil
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1531
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1537
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1541
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1547
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[1].colIdent.String(), Type: yyDollar[2].columnType}
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1551
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1555
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1559
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 229:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1564
		{
			yyVAL.characteristics = nil
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1568
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1574
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1578
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1584
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1588
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1592
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1596
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1600
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1604
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1608
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1612
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1616
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1620
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1626
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1632
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: "", Definer: yyDollar[1].str, Security: yyDollar[2].str}
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1636
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: yyDollar[1].str, Definer: yyDollar[2].str, Security: yyDollar[3].str}
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1642
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1646
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1650
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 249:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1655
		{
			yyVAL.str = ""
		}
	case 250:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1659
		{
			yyVAL.str = yyDollar[3].accountName.String()
		}
	case 251:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1664
		{
			yyVAL.str = ""
		}
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1668
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1672
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1678
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1682
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1686
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1692
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1700
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1704
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1710
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1714
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1720
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1728
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1736
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1746
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1750
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1756
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1760
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 269:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1764
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1768
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 271:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1772
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 272:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1778
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1782
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1786
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 275:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1790
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 276:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1794
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 277:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1798
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1804
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1808
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 280:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1812
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1818
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1822
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1828
		{
			yyVAL.str = BeforeStr
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1832
		{
			yyVAL.str = AfterStr
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1838
		{
			yyVAL.str = InsertStr
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1842
		{
			yyVAL.str = UpdateStr
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1846
		{
			yyVAL.str = DeleteStr
		}
	case 288:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1851
		{
			yyVAL.triggerOrder = nil
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1855
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1859
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1865
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 296:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1875
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 297:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1881
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 298:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1885
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1891
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1895
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 301:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1901
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 302:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1907
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 303:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1912
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 304:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1917
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 305:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1923
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1931
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1935
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 308:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1941
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 309:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1947
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 310:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1951
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 311:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1955
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 312:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1959
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1963
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 314:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1967
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1974
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1978
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1982
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1988
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1992
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1998
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2002
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2006
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2010
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2014
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2018
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2024
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2028
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2032
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 329:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2036
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2042
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2046
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2052
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2056
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2062
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2068
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2072
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2076
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2080
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2084
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2088
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2092
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2096
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2100
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2104
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2108
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2112
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2118
		{
			yyVAL.statement = &Resignal{}
		}
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2122
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 349:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2126
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2130
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2134
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 352:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2138
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2144
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 354:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2149
		{
			yyVAL.exprs = nil
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2153
		{
			yyVAL.exprs = nil
		}
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2157
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2163
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2167
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2173
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 389:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2208
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
		}
	case 390:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2222
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: TableName{Name: NewTableIdent(string(yyDollar[5].bytes))}, IfNotExists: ne, Temporary: neTemp}
		}
	case 391:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2238
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2245
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2250
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2255
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2261
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 396:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2265
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2270
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2274
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2278
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2284
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2292
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2302
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2310
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2318
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2326
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2334
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 407:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2343
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2347
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2351
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 410:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2356
		{
			yyVAL.columnType = ColumnType{}
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2360
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2369
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2378
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2387
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2396
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2405
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2414
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 418:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2423
		{
			opt := ColumnType{GeneratedExpr: yyDollar[4].expr, Stored: yyDollar[6].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 419:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2432
		{
			opt := ColumnType{GeneratedExpr: yyDollar[6].expr, Stored: yyDollar[8].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2441
		{
			opt := ColumnType{SRID: NewIntVal(yyDollar[3].bytes)}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2452
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2463
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2468
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2474
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2478
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2482
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2486
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2490
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2494
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2498
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2502
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2506
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2510
		{
			yyVAL.columnType = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2516
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2522
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2528
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2534
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 441:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2540
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2546
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2552
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2558
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2566
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2570
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2574
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2578
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2582
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2588
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2592
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2596
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2600
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2604
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 455:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2608
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 456:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2612
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2616
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2620
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 459:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2624
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 460:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2628
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2632
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2636
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2640
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2644
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2648
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2652
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 467:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2656
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2660
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2664
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2668
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2672
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2676
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 473:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2680
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 474:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2685
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2689
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 476:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2693
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 477:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2697
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 478:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2701
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, BinaryCollate: true}
		}
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2705
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2709
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2713
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2717
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2721
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 484:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2725
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 485:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2729
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, BinaryCollate: true}
		}
	case 486:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2733
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, BinaryCollate: true}
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2739
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2743
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2747
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2751
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2755
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2759
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2763
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2767
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2773
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2778
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2783
		{
			yyVAL.sqlVal = nil
		}
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2787
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 499:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2792
		{
			yyVAL.sqlVal = nil
		}
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2796
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2800
		{
			yyVAL.sqlVal = NewValArg(yyDollar[2].bytes)
		}
	case 502:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2806
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 503:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2810
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 504:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2818
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2822
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 506:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2828
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 507:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2836
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2840
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2844
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 510:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2849
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2853
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 512:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2859
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2865
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2871
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2876
		{
			yyVAL.str = ""
		}
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2880
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2884
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2889
		{
			yyVAL.str = ""
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2893
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2897
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2902
		{
			yyVAL.boolean = false
		}
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2906
		{
			yyVAL.boolean = true
		}
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2911
		{
			yyVAL.charsetCollates = nil
		}
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2915
		{
			yyVAL.charsetCollates = yyDollar[1].charsetCollates
		}
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2921
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2925
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2929
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2933
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 529:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2937
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2941
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 531:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2947
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 532:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2951
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2955
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2959
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2965
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2969
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 537:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2975
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2981
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2985
		{
			yyVAL.colKeyOpt = colKey
		}
	case 540:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2989
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2993
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2997
		{
			yyVAL.colKeyOpt = colKeyFulltextKey
		}
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3003
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3009
		{
			yyVAL.statement = &Flush{Type: yyDollar[2].str, Option: yyDollar[3].flushOption}
		}
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3015
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3019
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3023
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3027
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3031
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3035
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3039
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3043
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3047
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].str}
		}
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3051
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3055
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3059
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 557:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3064
		{
			yyVAL.str = ""
		}
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3066
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3070
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3072
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 561:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3075
		{
			yyVAL.str = ""
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3077
		{
			yyVAL.str = yyDollar[1].str
		}
	case 563:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3081
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 564:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3085
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 565:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3090
		{
			yyVAL.indexOptions = nil
		}
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3094
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3100
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3104
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3110
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3114
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3119
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 572:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3125
		{
			yyVAL.str = ""
		}
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3129
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3137
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 575:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3141
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3145
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3149
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true}
		}
	case 578:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3153
		{
			var name string
			name = yyDollar[2].str
			if name == "" {
				name = yyDollar[5].str
			}
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].str), Name: NewColIdent(name), Unique: true}
		}
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3162
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3166
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3170
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3176
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3180
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3184
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3190
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3194
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 587:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3199
		{
			yyVAL.str = ""
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3203
		{
			yyVAL.str = yyDollar[1].str
		}
	case 589:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3208
		{
			yyVAL.str = ""
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3212
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3218
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3222
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3228
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3232
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3238
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3242
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3246
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 598:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3252
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 599:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3256
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 600:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3260
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 601:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3264
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 602:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3268
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3274
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3279
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3283
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3287
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3291
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 608:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3297
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3303
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3307
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3312
		{
			yyVAL.str = ""
		}
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3316
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3320
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3326
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3332
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3338
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3342
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3346
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3350
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3354
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 621:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3359
		{
			yyVAL.boolean = true
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3363
		{
			yyVAL.boolean = true
		}
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3367
		{
			yyVAL.boolean = false
		}
	case 624:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3372
		{
			yyVAL.str = ""
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3376
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3380
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 627:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3385
		{
			yyVAL.str = " "
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3389
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3395
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + yyDollar[3].str
		}
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3399
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + yyDollar[3].str
		}
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3403
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + yyDollar[3].str
		}
	case 632:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3407
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + yyDollar[3].str + yyDollar[4].str
		}
	case 633:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3411
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + yyDollar[4].str + yyDollar[5].str
		}
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3415
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + string(yyDollar[3].bytes)
		}
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3419
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + string(yyDollar[3].bytes)
		}
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3423
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + yyDollar[3].str + string(yyDollar[4].bytes)
		}
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3427
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3431
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3435
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 640:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3439
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + yyDollar[3].str + "'" + string(yyDollar[4].bytes) + "'"
		}
	case 641:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3443
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + yyDollar[3].str + "'" + string(yyDollar[4].bytes) + "'"
		}
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3447
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + string(yyDollar[3].bytes)
		}
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3451
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3455
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + string(yyDollar[3].bytes)
		}
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3459
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3463
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + string(yyDollar[3].bytes)
		}
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3467
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + string(yyDollar[3].bytes)
		}
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3471
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + string(yyDollar[3].bytes)
		}
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3475
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + yyDollar[3].str
		}
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3479
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + yyDollar[3].str
		}
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3483
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + yyDollar[3].str
		}
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3487
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + string(yyDollar[3].bytes)
		}
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3491
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3495
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + yyDollar[3].str
		}
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3499
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3503
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3507
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + string(yyDollar[3].bytes)
		}
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3511
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + string(yyDollar[3].bytes)
		}
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3515
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + string(yyDollar[3].bytes)
		}
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3519
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + string(yyDollar[3].bytes)
		}
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3523
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + yyDollar[3].str
		}
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3527
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str
		}
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3531
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3535
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)
		}
	case 665:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3539
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)
		}
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3543
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + yyDollar[3].str
		}
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3549
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3553
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3558
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3562
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3566
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3572
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3576
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3580
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3584
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3588
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3592
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 681:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3603
		{
			yyVAL.str = ""
		}
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3607
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 683:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3612
		{
			yyVAL.str = string("")
		}
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3616
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 686:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3625
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3638
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3642
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 689:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3648
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 690:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3655
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3662
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 692:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3666
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3670
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 694:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3675
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 695:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3679
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3683
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3688
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3693
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3698
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3703
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3708
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3713
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3718
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3723
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3728
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3733
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 707:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3737
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 708:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3741
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 709:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3748
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3754
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3758
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3764
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 713:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3770
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3775
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 715:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3779
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 716:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3783
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3787
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 718:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3793
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[7].indexColumns, Options: yyDollar[9].indexOptions}
			yyVAL.ddl = ddl
		}
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3799
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3803
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 721:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3808
		{
			yyVAL.columnOrder = nil
		}
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3812
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3816
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 724:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3821
		{
		}
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3823
		{
		}
	case 726:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3827
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3833
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3837
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 729:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3843
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 730:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3847
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3853
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3857
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3863
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 734:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3867
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3875
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 736:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3879
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 737:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3885
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 738:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3893
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3897
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 740:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3905
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 741:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3913
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3921
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName}, IfExists: exists}
		}
	case 743:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3929
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName}, IfExists: exists}
		}
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3937
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 745:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3945
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 746:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3954
		{

		}
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3958
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3962
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3968
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3972
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3978
		{
			yyVAL.statement = &Analyze{Tables: yyDollar[3].tableNames}
		}
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3984
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 753:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3989
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3993
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 755:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3997
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 756:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4001
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 757:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4005
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 758:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4010
		{
			yyVAL.statement = &Show{Type: CreateProcedureStr, Table: yyDollar[4].tableName}
		}
	case 759:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4014
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 760:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4018
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4022
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4026
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4030
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 764:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4034
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4038
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 766:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4042
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4046
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 768:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4050
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 769:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4054
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 770:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4058
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, AsOf: yyDollar[7].expr, Filter: yyDollar[8].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, Table: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 771:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4063
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4068
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 773:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4072
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 774:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4076
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4080
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 776:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4084
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4090
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 778:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4098
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 779:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4102
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 780:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4107
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 781:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4111
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4116
		{
			yyVAL.statement = &ShowPrivileges{}
		}
	case 783:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4120
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 784:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4124
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4128
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4132
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4138
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 788:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4144
		{
			yyVAL.boolean = false
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4148
		{
			yyVAL.boolean = true
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4154
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4158
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 792:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4164
		{
			yyVAL.str = ""
		}
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4168
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4172
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 795:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4178
		{
			yyVAL.showFilter = nil
		}
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4182
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4186
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[3].bytes)}
		}
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4190
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 799:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4196
		{
			yyVAL.str = ""
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4200
		{
			yyVAL.str = SessionStr
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4204
		{
			yyVAL.str = GlobalStr
		}
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4210
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 803:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4214
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: yyDollar[2].tableIdent.v + "/" + yyDollar[4].tableIdent.v}}
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4218
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4224
		{
			yyVAL.statement = &Begin{}
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4228
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4234
		{
			yyVAL.statement = &Begin{}
		}
	case 808:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4238
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 809:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4242
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4248
		{
			yyVAL.statement = &Commit{}
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4254
		{
			yyVAL.statement = &Rollback{}
		}
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4260
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4266
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 814:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4270
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 815:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4274
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 816:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4278
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4284
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4289
		{
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4290
		{
		}
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4294
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4298
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4304
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 826:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4312
		{
			yyVAL.str = ""
		}
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4316
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4327
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[3].expr}
			yyVAL.statement = &Show{Type: "columns", Table: yyDollar[2].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 831:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4333
		{
			setAllowComments(yylex, true)
		}
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4337
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 833:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4343
		{
			yyVAL.bytes2 = nil
		}
	case 834:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4347
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4353
		{
			yyVAL.str = UnionStr
		}
	case 836:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4357
		{
			yyVAL.str = UnionAllStr
		}
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4361
		{
			yyVAL.str = UnionDistinctStr
		}
	case 838:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4366
		{
			yyVAL.byt = 0
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4370
		{
			yyVAL.byt = 1
		}
	case 840:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4375
		{
			yyVAL.str = ""
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4379
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4383
		{
			yyVAL.str = SQLCacheStr
		}
	case 843:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4388
		{
			yyVAL.str = ""
		}
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4392
		{
			yyVAL.str = ""
		}
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4396
		{
			yyVAL.str = DistinctStr
		}
	case 846:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4401
		{
			yyVAL.str = ""
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4405
		{
			yyVAL.str = StraightJoinHint
		}
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4411
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 849:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4419
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4430
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4434
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4438
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 853:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4442
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4448
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 855:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4452
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4456
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 857:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4460
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4466
		{
			yyVAL.over = &Over{NameRef: yyDollar[2].colIdent}
		}
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4470
		{
			yyVAL.over = (*Over)(yyDollar[2].windowDef)
		}
	case 860:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4476
		{
			yyVAL.windowDef = &WindowDef{NameRef: yyDollar[2].colIdent, PartitionBy: yyDollar[3].exprs, OrderBy: yyDollar[4].orderBy, Frame: yyDollar[5].frame}
		}
	case 861:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4481
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4484
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 863:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4489
		{
			yyVAL.exprs = nil
		}
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4493
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 865:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4498
		{
			yyVAL.over = nil
		}
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4502
		{
			yyVAL.over = yyDollar[1].over
		}
	case 867:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4507
		{
			yyVAL.frame = nil
		}
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4511
		{
			yyVAL.frame = &Frame{Unit: RowsUnit, Extent: yyDollar[2].frameExtent}
		}
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4515
		{
			yyVAL.frame = &Frame{Unit: RangeUnit, Extent: yyDollar[2].frameExtent}
		}
	case 870:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4522
		{
			startBound := yyDollar[2].frameBound
			endBound := yyDollar[4].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound, End: endBound}
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4545
		{
			startBound := yyDollar[1].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound}
		}
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4560
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedPreceding}
		}
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4564
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedFollowing}
		}
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4568
		{
			yyVAL.frameBound = &FrameBound{Type: CurrentRow}
		}
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4572
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprPreceding,
			}
		}
	case 876:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4579
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprFollowing,
			}
		}
	case 877:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4587
		{
			yyVAL.window = nil
		}
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4590
		{
			yyVAL.window = yyDollar[2].window
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4596
		{
			yyVAL.window = Window{yyDollar[1].windowDef}
		}
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4599
		{
			yyVAL.window = append(yyDollar[1].window, yyDollar[3].windowDef)
		}
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4605
		{
			def := yyDollar[3].windowDef
			def.Name = yyDollar[1].colIdent
			yyVAL.windowDef = def
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4614
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4618
		{
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 884:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4623
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4627
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 886:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4631
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 887:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4635
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[2].bytes))
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4641
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4645
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4649
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4653
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4657
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4661
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4667
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4671
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4681
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 899:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4685
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4695
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4701
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4709
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 905:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4715
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 906:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4719
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 907:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4725
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 908:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4730
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4741
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 910:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4745
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 911:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4749
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4753
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4757
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 914:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4768
		{
			yyVAL.expr = nil
		}
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4772
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 916:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4777
		{
			yyVAL.columns = nil
		}
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4781
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4787
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4791
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4797
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4801
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 922:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4807
		{
			yyVAL.tableExpr = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].selectExprs}
		}
	case 923:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4821
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 924:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4825
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 925:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4829
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4833
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4839
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 928:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4841
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 929:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4845
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4847
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 931:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4851
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4853
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 933:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4856
		{
			yyVAL.empty = struct{}{}
		}
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4858
		{
			yyVAL.empty = struct{}{}
		}
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4863
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4867
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4873
		{
			yyVAL.str = JoinStr
		}
	case 939:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4877
		{
			yyVAL.str = JoinStr
		}
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4881
		{
			yyVAL.str = JoinStr
		}
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4887
		{
			yyVAL.str = StraightJoinStr
		}
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4893
		{
			yyVAL.str = LeftJoinStr
		}
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4897
		{
			yyVAL.str = LeftJoinStr
		}
	case 944:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4901
		{
			yyVAL.str = RightJoinStr
		}
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4905
		{
			yyVAL.str = RightJoinStr
		}
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4909
		{
			yyVAL.str = FullOuterJoinStr
		}
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4913
		{
			yyVAL.str = FullOuterJoinStr
		}
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4919
		{
			yyVAL.str = NaturalJoinStr
		}
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4923
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 950:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:4933
		{
			yyVAL.tableExpr = &JSONTableExpr{Data: yyDollar[3].expr, Path: string(yyDollar[5].bytes), Spec: yyDollar[8].TableSpec, Alias: yyDollar[12].tableIdent}
		}
	case 951:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:4937
		{
			yyVAL.tableExpr = &JSONTableExpr{Data: yyDollar[3].expr, Path: string(yyDollar[5].bytes), Spec: yyDollar[8].TableSpec, Alias: yyDollar[11].tableIdent}
		}
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4943
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4948
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4956
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 955:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4968
		{
			yyVAL.columnType = ColumnType{Path: string(yyDollar[2].bytes)}
		}
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4972
		{
			yyVAL.columnType = ColumnType{Path: string(yyDollar[3].bytes)}
		}
	case 957:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4978
		{

		}
	case 958:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4996
		{

		}
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5000
		{

		}
	case 960:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5004
		{

		}
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5008
		{

		}
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5014
		{
			yyVAL.triggerName = TriggerName{Name: yyDollar[1].colIdent}
		}
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5018
		{
			yyVAL.triggerName = TriggerName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5024
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5030
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5034
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5040
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5044
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5048
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5052
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5056
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5062
		{
			yyVAL.procedureName = ProcedureName{Name: yyDollar[1].colIdent}
		}
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5066
		{
			yyVAL.procedureName = ProcedureName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5072
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 975:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5077
		{
			yyVAL.indexHints = nil
		}
	case 976:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5081
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 977:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5085
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 978:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5089
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 979:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5094
		{
			yyVAL.expr = nil
		}
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5098
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5104
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5108
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5112
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5116
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 985:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5120
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5124
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5128
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5132
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 989:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5138
		{
			yyVAL.str = ""
		}
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5142
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5148
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5152
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5158
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5162
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 995:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5166
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 996:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5170
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 997:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5174
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5178
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 999:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5182
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 1000:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5186
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 1001:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5190
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5194
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5200
		{
			yyVAL.str = IsNullStr
		}
	case 1004:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5204
		{
			yyVAL.str = IsNotNullStr
		}
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5208
		{
			yyVAL.str = IsTrueStr
		}
	case 1006:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5212
		{
			yyVAL.str = IsNotTrueStr
		}
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5216
		{
			yyVAL.str = IsFalseStr
		}
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5220
		{
			yyVAL.str = IsNotFalseStr
		}
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5226
		{
			yyVAL.str = EqualStr
		}
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5230
		{
			yyVAL.str = LessThanStr
		}
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5234
		{
			yyVAL.str = GreaterThanStr
		}
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5238
		{
			yyVAL.str = LessEqualStr
		}
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5242
		{
			yyVAL.str = GreaterEqualStr
		}
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5246
		{
			yyVAL.str = NotEqualStr
		}
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5250
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 1016:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5255
		{
			yyVAL.expr = nil
		}
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5259
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5265
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5269
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5273
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5279
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5285
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5289
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 1024:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5295
		{
			yyVAL.selectExprs = nil
		}
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5302
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5306
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5312
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5316
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5322
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5326
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5330
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5334
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5338
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5342
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5346
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5350
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5354
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 1039:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5358
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 1040:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5362
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 1041:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5366
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 1042:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5370
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5374
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5378
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5382
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 1046:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5386
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 1047:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5390
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 1048:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5394
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 1049:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5398
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5402
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5406
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5410
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 1053:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5414
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 1054:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5418
		{
			yyVAL.expr = &UnaryExpr{Operator: yyDollar[1].str, Expr: yyDollar[2].expr}
		}
	case 1055:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5422
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5430
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 1057:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5444
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 1058:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5448
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 1059:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5452
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 1066:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5472
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 1067:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5476
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 1068:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5486
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1069:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5490
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1070:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5494
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1071:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5498
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1072:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5502
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1073:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5506
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1074:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5510
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1075:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5514
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1076:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5518
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1077:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5522
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1078:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5526
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1079:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5530
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1080:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5534
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1081:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5538
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1082:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5542
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1083:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5546
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1084:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5550
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1085:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5559
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1086:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5563
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1087:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5567
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 1088:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5571
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1089:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5575
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 1090:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5579
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1091:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5583
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1092:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5587
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1093:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5591
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1094:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5595
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1095:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5599
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1096:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5610
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1097:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5614
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1098:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5618
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1099:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5622
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5626
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1101:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5630
		{
			yyVAL.expr = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 1102:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5634
		{
			yyVAL.expr = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 1103:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5638
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1104:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5642
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1105:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5646
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 1106:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5650
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1107:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5654
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1108:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5658
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1109:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5662
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1110:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5666
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1111:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5670
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 1112:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5674
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 1113:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5678
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 1114:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5682
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 1115:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5686
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 1116:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5690
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 1117:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5694
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1118:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5698
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 1119:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5702
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 1120:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5706
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 1121:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5710
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5720
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5724
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5728
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1125:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5733
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5738
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5743
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1128:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5749
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1129:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5754
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1130:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5758
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1131:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5763
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1132:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5767
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5771
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5776
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5781
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5786
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1137:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5790
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1138:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5794
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5805
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1142:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5815
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1143:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5819
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1144:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5823
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1145:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5827
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1146:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5831
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1147:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5835
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1148:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5841
		{
			yyVAL.str = ""
		}
	case 1149:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5845
		{
			yyVAL.str = BooleanModeStr
		}
	case 1150:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5849
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 1151:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5853
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 1152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5857
		{
			yyVAL.str = QueryExpansionStr
		}
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5863
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5867
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5873
		{
			yyVAL.str = Armscii8Str
		}
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5877
		{
			yyVAL.str = AsciiStr
		}
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5881
		{
			yyVAL.str = Big5Str
		}
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5885
		{
			yyVAL.str = UBinaryStr
		}
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5889
		{
			yyVAL.str = Cp1250Str
		}
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5893
		{
			yyVAL.str = Cp1251Str
		}
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5897
		{
			yyVAL.str = Cp1256Str
		}
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5901
		{
			yyVAL.str = Cp1257Str
		}
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5905
		{
			yyVAL.str = Cp850Str
		}
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5909
		{
			yyVAL.str = Cp852Str
		}
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5913
		{
			yyVAL.str = Cp866Str
		}
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5917
		{
			yyVAL.str = Cp932Str
		}
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5921
		{
			yyVAL.str = Dec8Str
		}
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5925
		{
			yyVAL.str = EucjpmsStr
		}
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5929
		{
			yyVAL.str = EuckrStr
		}
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5933
		{
			yyVAL.str = Gb18030Str
		}
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5937
		{
			yyVAL.str = Gb2312Str
		}
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5941
		{
			yyVAL.str = GbkStr
		}
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5945
		{
			yyVAL.str = Geostd8Str
		}
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5949
		{
			yyVAL.str = GreekStr
		}
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5953
		{
			yyVAL.str = HebrewStr
		}
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5957
		{
			yyVAL.str = Hp8Str
		}
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5961
		{
			yyVAL.str = Keybcs2Str
		}
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5965
		{
			yyVAL.str = Koi8rStr
		}
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5969
		{
			yyVAL.str = Koi8uStr
		}
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5973
		{
			yyVAL.str = Latin1Str
		}
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5977
		{
			yyVAL.str = Latin2Str
		}
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5981
		{
			yyVAL.str = Latin5Str
		}
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5985
		{
			yyVAL.str = Latin7Str
		}
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5989
		{
			yyVAL.str = MacceStr
		}
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5993
		{
			yyVAL.str = MacromanStr
		}
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5997
		{
			yyVAL.str = SjisStr
		}
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6001
		{
			yyVAL.str = Swe7Str
		}
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6005
		{
			yyVAL.str = Tis620Str
		}
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6009
		{
			yyVAL.str = Ucs2Str
		}
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6013
		{
			yyVAL.str = UjisStr
		}
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6017
		{
			yyVAL.str = Utf16Str
		}
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6021
		{
			yyVAL.str = Utf16leStr
		}
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6025
		{
			yyVAL.str = Utf32Str
		}
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6029
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6033
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6037
		{
			yyVAL.str = Utf8mb4Str
		}
	case 1197:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6043
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6047
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 1199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6051
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6055
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1201:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6059
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1202:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6063
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6069
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1204:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6073
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6077
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1206:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6081
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1207:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6085
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6089
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1209:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6093
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1210:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6098
		{
			yyVAL.expr = nil
		}
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6102
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1212:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6107
		{
			yyVAL.str = string("")
		}
	case 1213:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6111
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6117
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 1215:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6121
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 1216:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6127
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 1217:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6132
		{
			yyVAL.expr = nil
		}
	case 1218:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6136
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6142
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6146
		{
			yyVAL.colName = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1221:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6150
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 1222:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6154
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1223:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6158
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6162
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6166
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6170
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6174
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6178
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1229:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6182
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1230:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6186
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1231:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6190
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1232:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6194
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6200
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6204
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6208
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6212
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6216
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6220
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6224
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6228
		{
			yyVAL.expr = &NullVal{}
		}
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6234
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 1242:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6238
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1243:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6242
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1244:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6247
		{
			yyVAL.exprs = nil
		}
	case 1245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6251
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6257
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1247:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6261
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6267
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1249:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6272
		{
			yyVAL.expr = nil
		}
	case 1250:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6276
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6282
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1252:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6287
		{
			yyVAL.orderBy = nil
		}
	case 1253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6291
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6297
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 1255:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6301
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 1256:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6307
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 1257:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6312
		{
			yyVAL.str = AscScr
		}
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6316
		{
			yyVAL.str = AscScr
		}
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6320
		{
			yyVAL.str = DescScr
		}
	case 1260:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6325
		{
			yyVAL.limit = nil
		}
	case 1261:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6329
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 1262:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6333
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 1263:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6337
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6343
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6347
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1266:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6352
		{
			yyVAL.str = ""
		}
	case 1267:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6356
		{
			yyVAL.str = ForUpdateStr
		}
	case 1268:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6360
		{
			yyVAL.str = ShareModeStr
		}
	case 1269:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6373
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 1270:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6377
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6381
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 1272:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6385
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 1273:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6390
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 1274:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6394
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 1275:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6398
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 1276:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6404
		{
			yyVAL.columns = nil
		}
	case 1277:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6408
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6414
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1279:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6418
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1280:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6424
		{
			yyVAL.colIdent = yyDollar[3].colIdent
		}
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6428
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6432
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6436
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6440
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6444
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1286:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6449
		{
			yyVAL.assignExprs = nil
		}
	case 1287:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6453
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 1288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6459
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 1289:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6463
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 1290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6469
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 1291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6473
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 1292:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6479
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 1293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6485
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 1294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6495
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 1295:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6499
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 1296:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6505
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 1297:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6508
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1298:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6512
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1299:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6516
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6522
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 1301:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6526
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 1302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6532
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 1303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6543
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6556
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1305:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6569
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 1306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6575
		{
			yyVAL.setScope = SetScope_Global
		}
	case 1307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6579
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6585
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6589
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 1310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6593
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 1311:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6599
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6603
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6607
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 1315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6614
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6621
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 1318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6625
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6629
		{
			yyVAL.expr = &Default{}
		}
	case 1322:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6638
		{
			yyVAL.byt = 0
		}
	case 1323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6640
		{
			yyVAL.byt = 1
		}
	case 1324:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6643
		{
			yyVAL.byt = 0
		}
	case 1325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6645
		{
			yyVAL.byt = 1
		}
	case 1326:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6648
		{
			yyVAL.byt = 0
		}
	case 1327:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6650
		{
			yyVAL.byt = 1
		}
	case 1328:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6653
		{
			yyVAL.str = ""
		}
	case 1329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6655
		{
			yyVAL.str = IgnoreStr
		}
	case 1330:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6658
		{
			yyVAL.sqlVal = nil
		}
	case 1331:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6660
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6662
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6666
		{
			yyVAL.empty = struct{}{}
		}
	case 1334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6668
		{
			yyVAL.empty = struct{}{}
		}
	case 1335:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6671
		{
			yyVAL.empty = struct{}{}
		}
	case 1336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6673
		{
			yyVAL.empty = struct{}{}
		}
	case 1337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6675
		{
			yyVAL.empty = struct{}{}
		}
	case 1338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6679
		{
			yyVAL.str = UniqueStr
		}
	case 1339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6681
		{
			yyVAL.str = FulltextStr
		}
	case 1340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6683
		{
			yyVAL.str = SpatialStr
		}
	case 1341:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6686
		{
			yyVAL.str = ""
		}
	case 1342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6688
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1343:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6691
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 1344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6693
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 1345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6697
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6701
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6707
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 1348:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6711
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 1350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6718
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6724
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6728
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6735
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1355:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6740
		{
			yyVAL.str = string("")
		}
	case 1356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6742
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1357:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6745
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6747
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1359:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6750
		{
			yyVAL.EnclosedBy = nil
		}
	case 1360:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6754
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1361:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6759
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6763
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1363:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6768
		{
			yyVAL.sqlVal = nil
		}
	case 1364:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6772
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1365:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6777
		{
			yyVAL.sqlVal = nil
		}
	case 1366:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6781
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1367:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6786
		{
			yyVAL.Fields = nil
		}
	case 1368:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6790
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1369:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6795
		{
			yyVAL.Lines = nil
		}
	case 1370:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6799
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1371:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6804
		{
			yyVAL.sqlVal = nil
		}
	case 1372:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6808
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1373:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6814
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1374:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6820
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6824
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1376:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6830
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1377:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6834
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6840
		{
			yyVAL.lockType = LockRead
		}
	case 1379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6844
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6848
		{
			yyVAL.lockType = LockWrite
		}
	case 1381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6852
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6858
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1383:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6864
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[2].bytes)}
		}
	case 1384:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6868
		{
			yyVAL.statement = &Kill{ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1385:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6872
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 2182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7710
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7719
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
