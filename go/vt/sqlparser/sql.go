// Code generated by goyacc -o sql.go -v y.output sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

//import "runtime/debug"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

func yySpecialCommentMode(yylex interface{}) bool {
	tkn := yylex.(*Tokenizer)
	return tkn.specialComment != nil
}

//line sql.y:64
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	variables                Variables
	into                     *Into
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	triggerName              TriggerName
	tableName                TableName
	tableNames               TableNames
	procedureName            ProcedureName
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	flushOption              *FlushOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	viewSpec                 *ViewSpec
	showFilter               *ShowFilter
	frame                    *Frame
	frameExtent              *FrameExtent
	frameBound               *FrameBound
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	charsetCollate           *CharsetAndCollate
	charsetCollates          []*CharsetAndCollate
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptionItem            TLSOptionItem
	tlsOptionItems           []TLSOptionItem
	accountLimitItem         AccountLimitItem
	accountLimitItems        []AccountLimitItem
	passLockItem             PassLockItem
	passLockItems            []PassLockItem
	grantPrivilege           Privilege
	grantPrivileges          []Privilege
	grantObjectType          GrantObjectType
	privilegeLevel           PrivilegeLevel
	grantAssumption          *GrantUserAssumption
	with                     *With
	window                   Window
	over                     *Over
	windowDef                *WindowDef
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const DUPLICATE = 57369
const DEFAULT = 57370
const SET = 57371
const LOCK = 57372
const UNLOCK = 57373
const KEYS = 57374
const OF = 57375
const OUTFILE = 57376
const DUMPFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const INTO = 57425
const OR = 57426
const XOR = 57427
const AND = 57428
const NOT = 57429
const BETWEEN = 57430
const CASE = 57431
const WHEN = 57432
const THEN = 57433
const ELSE = 57434
const ELSEIF = 57435
const END = 57436
const LE = 57437
const GE = 57438
const NE = 57439
const NULL_SAFE_EQUAL = 57440
const IS = 57441
const LIKE = 57442
const REGEXP = 57443
const IN = 57444
const UNBOUNDED = 57445
const PARTITION = 57446
const RANGE = 57447
const ROWS = 57448
const GROUPS = 57449
const PRECEDING = 57450
const FOLLOWING = 57451
const SHIFT_LEFT = 57452
const SHIFT_RIGHT = 57453
const DIV = 57454
const MOD = 57455
const UNARY = 57456
const COLLATE = 57457
const BINARY = 57458
const UNDERSCORE_ARMSCII8 = 57459
const UNDERSCORE_ASCII = 57460
const UNDERSCORE_BIG5 = 57461
const UNDERSCORE_BINARY = 57462
const UNDERSCORE_CP1250 = 57463
const UNDERSCORE_CP1251 = 57464
const UNDERSCORE_CP1256 = 57465
const UNDERSCORE_CP1257 = 57466
const UNDERSCORE_CP850 = 57467
const UNDERSCORE_CP852 = 57468
const UNDERSCORE_CP866 = 57469
const UNDERSCORE_CP932 = 57470
const UNDERSCORE_DEC8 = 57471
const UNDERSCORE_EUCJPMS = 57472
const UNDERSCORE_EUCKR = 57473
const UNDERSCORE_GB18030 = 57474
const UNDERSCORE_GB2312 = 57475
const UNDERSCORE_GBK = 57476
const UNDERSCORE_GEOSTD8 = 57477
const UNDERSCORE_GREEK = 57478
const UNDERSCORE_HEBREW = 57479
const UNDERSCORE_HP8 = 57480
const UNDERSCORE_KEYBCS2 = 57481
const UNDERSCORE_KOI8R = 57482
const UNDERSCORE_KOI8U = 57483
const UNDERSCORE_LATIN1 = 57484
const UNDERSCORE_LATIN2 = 57485
const UNDERSCORE_LATIN5 = 57486
const UNDERSCORE_LATIN7 = 57487
const UNDERSCORE_MACCE = 57488
const UNDERSCORE_MACROMAN = 57489
const UNDERSCORE_SJIS = 57490
const UNDERSCORE_SWE7 = 57491
const UNDERSCORE_TIS620 = 57492
const UNDERSCORE_UCS2 = 57493
const UNDERSCORE_UJIS = 57494
const UNDERSCORE_UTF16 = 57495
const UNDERSCORE_UTF16LE = 57496
const UNDERSCORE_UTF32 = 57497
const UNDERSCORE_UTF8 = 57498
const UNDERSCORE_UTF8MB3 = 57499
const UNDERSCORE_UTF8MB4 = 57500
const INTERVAL = 57501
const JSON_EXTRACT_OP = 57502
const JSON_UNQUOTE_EXTRACT_OP = 57503
const CREATE = 57504
const ALTER = 57505
const DROP = 57506
const RENAME = 57507
const ANALYZE = 57508
const ADD = 57509
const MODIFY = 57510
const CHANGE = 57511
const SCHEMA = 57512
const TABLE = 57513
const INDEX = 57514
const INDEXES = 57515
const VIEW = 57516
const TO = 57517
const IGNORE = 57518
const IF = 57519
const PRIMARY = 57520
const COLUMN = 57521
const SPATIAL = 57522
const FULLTEXT = 57523
const KEY_BLOCK_SIZE = 57524
const CHECK = 57525
const ACTION = 57526
const CASCADE = 57527
const CONSTRAINT = 57528
const FOREIGN = 57529
const NO = 57530
const REFERENCES = 57531
const RESTRICT = 57532
const FIRST = 57533
const AFTER = 57534
const LAST = 57535
const SHOW = 57536
const DESCRIBE = 57537
const EXPLAIN = 57538
const DATE = 57539
const ESCAPE = 57540
const REPAIR = 57541
const OPTIMIZE = 57542
const TRUNCATE = 57543
const FORMAT = 57544
const MAXVALUE = 57545
const REORGANIZE = 57546
const LESS = 57547
const THAN = 57548
const PROCEDURE = 57549
const TRIGGER = 57550
const TRIGGERS = 57551
const FUNCTION = 57552
const STATUS = 57553
const VARIABLES = 57554
const WARNINGS = 57555
const ERRORS = 57556
const KILL = 57557
const CONNECTION = 57558
const SEQUENCE = 57559
const ENABLE = 57560
const DISABLE = 57561
const EACH = 57562
const ROW = 57563
const BEFORE = 57564
const FOLLOWS = 57565
const PRECEDES = 57566
const DEFINER = 57567
const INVOKER = 57568
const INOUT = 57569
const OUT = 57570
const DETERMINISTIC = 57571
const CONTAINS = 57572
const READS = 57573
const MODIFIES = 57574
const SQL = 57575
const SECURITY = 57576
const TEMPORARY = 57577
const ALGORITHM = 57578
const MERGE = 57579
const TEMPTABLE = 57580
const UNDEFINED = 57581
const CLASS_ORIGIN = 57582
const SUBCLASS_ORIGIN = 57583
const MESSAGE_TEXT = 57584
const MYSQL_ERRNO = 57585
const CONSTRAINT_CATALOG = 57586
const CONSTRAINT_SCHEMA = 57587
const CONSTRAINT_NAME = 57588
const CATALOG_NAME = 57589
const SCHEMA_NAME = 57590
const TABLE_NAME = 57591
const COLUMN_NAME = 57592
const CURSOR_NAME = 57593
const SIGNAL = 57594
const RESIGNAL = 57595
const SQLSTATE = 57596
const DECLARE = 57597
const CONDITION = 57598
const CURSOR = 57599
const CONTINUE = 57600
const EXIT = 57601
const UNDO = 57602
const HANDLER = 57603
const FOUND = 57604
const SQLWARNING = 57605
const SQLEXCEPTION = 57606
const USER = 57607
const IDENTIFIED = 57608
const ROLE = 57609
const REUSE = 57610
const GRANT = 57611
const GRANTS = 57612
const REVOKE = 57613
const NONE = 57614
const ATTRIBUTE = 57615
const RANDOM = 57616
const PASSWORD = 57617
const INITIAL = 57618
const AUTHENTICATION = 57619
const SSL = 57620
const X509 = 57621
const CIPHER = 57622
const ISSUER = 57623
const SUBJECT = 57624
const ACCOUNT = 57625
const EXPIRE = 57626
const NEVER = 57627
const DAY = 57628
const OPTION = 57629
const OPTIONAL = 57630
const EXCEPT = 57631
const ADMIN = 57632
const PRIVILEGES = 57633
const MAX_QUERIES_PER_HOUR = 57634
const MAX_UPDATES_PER_HOUR = 57635
const MAX_CONNECTIONS_PER_HOUR = 57636
const MAX_USER_CONNECTIONS = 57637
const FLUSH = 57638
const FAILED_LOGIN_ATTEMPTS = 57639
const PASSWORD_LOCK_TIME = 57640
const REQUIRE = 57641
const PROXY = 57642
const ROUTINE = 57643
const TABLESPACE = 57644
const CLIENT = 57645
const SLAVE = 57646
const EVENT = 57647
const EXECUTE = 57648
const FILE = 57649
const RELOAD = 57650
const REPLICATION = 57651
const SHUTDOWN = 57652
const SUPER = 57653
const USAGE = 57654
const LOGS = 57655
const ENGINE = 57656
const ERROR = 57657
const GENERAL = 57658
const HOSTS = 57659
const OPTIMIZER_COSTS = 57660
const RELAY = 57661
const SLOW = 57662
const USER_RESOURCES = 57663
const NO_WRITE_TO_BINLOG = 57664
const CHANNEL = 57665
const BEGIN = 57666
const START = 57667
const TRANSACTION = 57668
const COMMIT = 57669
const ROLLBACK = 57670
const SAVEPOINT = 57671
const WORK = 57672
const RELEASE = 57673
const BIT = 57674
const TINYINT = 57675
const SMALLINT = 57676
const MEDIUMINT = 57677
const INT = 57678
const INTEGER = 57679
const BIGINT = 57680
const INTNUM = 57681
const SERIAL = 57682
const REAL = 57683
const DOUBLE = 57684
const FLOAT_TYPE = 57685
const DECIMAL = 57686
const NUMERIC = 57687
const DEC = 57688
const FIXED = 57689
const PRECISION = 57690
const TIME = 57691
const TIMESTAMP = 57692
const DATETIME = 57693
const YEAR = 57694
const CHAR = 57695
const VARCHAR = 57696
const BOOL = 57697
const CHARACTER = 57698
const VARBINARY = 57699
const NCHAR = 57700
const NVARCHAR = 57701
const NATIONAL = 57702
const VARYING = 57703
const TEXT = 57704
const TINYTEXT = 57705
const MEDIUMTEXT = 57706
const LONGTEXT = 57707
const LONG = 57708
const BLOB = 57709
const TINYBLOB = 57710
const MEDIUMBLOB = 57711
const LONGBLOB = 57712
const JSON = 57713
const ENUM = 57714
const GEOMETRY = 57715
const POINT = 57716
const LINESTRING = 57717
const POLYGON = 57718
const GEOMETRYCOLLECTION = 57719
const MULTIPOINT = 57720
const MULTILINESTRING = 57721
const MULTIPOLYGON = 57722
const LOCAL = 57723
const LOW_PRIORITY = 57724
const NULLX = 57725
const AUTO_INCREMENT = 57726
const APPROXNUM = 57727
const SIGNED = 57728
const UNSIGNED = 57729
const ZEROFILL = 57730
const SRID = 57731
const COLLATION = 57732
const DATABASES = 57733
const SCHEMAS = 57734
const TABLES = 57735
const FULL = 57736
const PROCESSLIST = 57737
const COLUMNS = 57738
const FIELDS = 57739
const ENGINES = 57740
const PLUGINS = 57741
const NAMES = 57742
const CHARSET = 57743
const GLOBAL = 57744
const SESSION = 57745
const ISOLATION = 57746
const LEVEL = 57747
const READ = 57748
const WRITE = 57749
const ONLY = 57750
const REPEATABLE = 57751
const COMMITTED = 57752
const UNCOMMITTED = 57753
const SERIALIZABLE = 57754
const ENCRYPTION = 57755
const CURRENT_TIMESTAMP = 57756
const NOW = 57757
const DATABASE = 57758
const CURRENT_DATE = 57759
const CURRENT_USER = 57760
const CURRENT_TIME = 57761
const LOCALTIME = 57762
const LOCALTIMESTAMP = 57763
const UTC_DATE = 57764
const UTC_TIME = 57765
const UTC_TIMESTAMP = 57766
const REPLACE = 57767
const CONVERT = 57768
const CAST = 57769
const SUBSTR = 57770
const SUBSTRING = 57771
const TRIM = 57772
const LEADING = 57773
const TRAILING = 57774
const BOTH = 57775
const GROUP_CONCAT = 57776
const SEPARATOR = 57777
const TIMESTAMPADD = 57778
const TIMESTAMPDIFF = 57779
const OVER = 57780
const WINDOW = 57781
const GROUPING = 57782
const CURRENT = 57783
const AVG = 57784
const BIT_AND = 57785
const BIT_OR = 57786
const BIT_XOR = 57787
const COUNT = 57788
const JSON_ARRAYAGG = 57789
const JSON_OBJECTAGG = 57790
const MAX = 57791
const MIN = 57792
const STDDEV_POP = 57793
const STDDEV = 57794
const STD = 57795
const STDDEV_SAMP = 57796
const SUM = 57797
const VAR_POP = 57798
const VARIANCE = 57799
const VAR_SAMP = 57800
const CUME_DIST = 57801
const DENSE_RANK = 57802
const FIRST_VALUE = 57803
const LAG = 57804
const LAST_VALUE = 57805
const LEAD = 57806
const NTH_VALUE = 57807
const NTILE = 57808
const ROW_NUMBER = 57809
const PERCENT_RANK = 57810
const RANK = 57811
const JSON_TABLE = 57812
const PATH = 57813
const AVG_ROW_LENGTH = 57814
const CHECKSUM = 57815
const COMPRESSION = 57816
const DIRECTORY = 57817
const DELAY_KEY_WRITE = 57818
const ENGINE_ATTRIBUTE = 57819
const INSERT_METHOD = 57820
const MAX_ROWS = 57821
const MIN_ROWS = 57822
const PACK_KEYS = 57823
const ROW_FORMAT = 57824
const SECONDARY_ENGINE_ATTRIBUTE = 57825
const STATS_AUTO_RECALC = 57826
const STATS_PERSISTENT = 57827
const STATS_SAMPLE_PAGES = 57828
const STORAGE = 57829
const DISK = 57830
const MEMORY = 57831
const DYNAMIC = 57832
const COMPRESSED = 57833
const REDUNDANT = 57834
const COMPACT = 57835
const LIST = 57836
const HASH = 57837
const PARTITIONS = 57838
const SUBPARTITION = 57839
const SUBPARTITIONS = 57840
const MATCH = 57841
const AGAINST = 57842
const BOOLEAN = 57843
const LANGUAGE = 57844
const WITH = 57845
const QUERY = 57846
const EXPANSION = 57847
const ACCESSIBLE = 57848
const ASENSITIVE = 57849
const CUBE = 57850
const DAY_HOUR = 57851
const DAY_MICROSECOND = 57852
const DAY_MINUTE = 57853
const DAY_SECOND = 57854
const DELAYED = 57855
const DISTINCTROW = 57856
const DUAL = 57857
const EMPTY = 57858
const FETCH = 57859
const FLOAT4 = 57860
const FLOAT8 = 57861
const GET = 57862
const HIGH_PRIORITY = 57863
const HOUR_MICROSECOND = 57864
const HOUR_MINUTE = 57865
const HOUR_SECOND = 57866
const INSENSITIVE = 57867
const INT1 = 57868
const INT2 = 57869
const INT3 = 57870
const INT4 = 57871
const INT8 = 57872
const IO_AFTER_GTIDS = 57873
const IO_BEFORE_GTIDS = 57874
const ITERATE = 57875
const LEAVE = 57876
const LINEAR = 57877
const LOOP = 57878
const MASTER_BIND = 57879
const MASTER_SSL_VERIFY_SERVER_CERT = 57880
const MIDDLEINT = 57881
const MINUTE_MICROSECOND = 57882
const MINUTE_SECOND = 57883
const PURGE = 57884
const READ_WRITE = 57885
const REPEAT = 57886
const RETURN = 57887
const RLIKE = 57888
const SECOND_MICROSECOND = 57889
const SENSITIVE = 57890
const SPECIFIC = 57891
const SQL_BIG_RESULT = 57892
const SQL_SMALL_RESULT = 57893
const VARCHARACTER = 57894
const WHILE = 57895
const YEAR_MONTH = 57896
const UNUSED = 57897
const DESCRIPTION = 57898
const LATERAL = 57899
const MEMBER = 57900
const RECURSIVE = 57901
const BUCKETS = 57902
const CLONE = 57903
const COMPONENT = 57904
const DEFINITION = 57905
const ENFORCED = 57906
const EXCLUDE = 57907
const GEOMCOLLECTION = 57908
const GET_MASTER_PUBLIC_KEY = 57909
const HISTOGRAM = 57910
const HISTORY = 57911
const INACTIVE = 57912
const INVISIBLE = 57913
const LOCKED = 57914
const MASTER_COMPRESSION_ALGORITHMS = 57915
const MASTER_PUBLIC_KEY_PATH = 57916
const MASTER_TLS_CIPHERSUITES = 57917
const MASTER_ZSTD_COMPRESSION_LEVEL = 57918
const NESTED = 57919
const NETWORK_NAMESPACE = 57920
const NOWAIT = 57921
const NULLS = 57922
const OJ = 57923
const OLD = 57924
const ORDINALITY = 57925
const ORGANIZATION = 57926
const OTHERS = 57927
const PERSIST = 57928
const PERSIST_ONLY = 57929
const PRIVILEGE_CHECKS_USER = 57930
const PROCESS = 57931
const REFERENCE = 57932
const REQUIRE_ROW_FORMAT = 57933
const RESOURCE = 57934
const RESPECT = 57935
const RESTART = 57936
const RETAIN = 57937
const SECONDARY = 57938
const SECONDARY_ENGINE = 57939
const SECONDARY_LOAD = 57940
const SECONDARY_UNLOAD = 57941
const SKIP = 57942
const THREAD_PRIORITY = 57943
const TIES = 57944
const VCPU = 57945
const VISIBLE = 57946
const SYSTEM = 57947
const INFILE = 57948
const ACTIVE = 57949
const AGGREGATE = 57950
const ANY = 57951
const ARRAY = 57952
const ASCII = 57953
const AT = 57954
const AUTOEXTEND_SIZE = 57955
const ENDS = 57956
const EVENTS = 57957
const GENERATED = 57958
const ALWAYS = 57959
const STORED = 57960
const VIRTUAL = 57961
const NVAR = 57962
const PASSWORD_LOCK = 57963

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DUMPFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"INTO",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB3",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"LAST",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"ENABLE",
	"DISABLE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"ALGORITHM",
	"MERGE",
	"TEMPTABLE",
	"UNDEFINED",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTION",
	"OPTIONAL",
	"EXCEPT",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EVENT",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"SRID",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ENCRYPTION",
	"CURRENT_TIMESTAMP",
	"NOW",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"JSON_TABLE",
	"PATH",
	"AVG_ROW_LENGTH",
	"CHECKSUM",
	"COMPRESSION",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"DISK",
	"MEMORY",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"LIST",
	"HASH",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ACCESSIBLE",
	"ASENSITIVE",
	"CUBE",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"DELAYED",
	"DISTINCTROW",
	"DUAL",
	"EMPTY",
	"FETCH",
	"FLOAT4",
	"FLOAT8",
	"GET",
	"HIGH_PRIORITY",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"INSENSITIVE",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"IO_AFTER_GTIDS",
	"IO_BEFORE_GTIDS",
	"ITERATE",
	"LEAVE",
	"LINEAR",
	"LOOP",
	"MASTER_BIND",
	"MASTER_SSL_VERIFY_SERVER_CERT",
	"MIDDLEINT",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"PURGE",
	"READ_WRITE",
	"REPEAT",
	"RETURN",
	"RLIKE",
	"SECOND_MICROSECOND",
	"SENSITIVE",
	"SPECIFIC",
	"SQL_BIG_RESULT",
	"SQL_SMALL_RESULT",
	"VARCHARACTER",
	"WHILE",
	"YEAR_MONTH",
	"UNUSED",
	"DESCRIPTION",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"ACTIVE",
	"AGGREGATE",
	"ANY",
	"ARRAY",
	"ASCII",
	"AT",
	"AUTOEXTEND_SIZE",
	"ENDS",
	"EVENTS",
	"GENERATED",
	"ALWAYS",
	"STORED",
	"VIRTUAL",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 35,
	640, 35,
	-2, 56,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 41,
	189, 1349,
	190, 1368,
	-2, 249,
	-1, 47,
	229, 823,
	230, 823,
	-2, 812,
	-1, 67,
	5, 61,
	-2, 43,
	-1, 507,
	177, 1738,
	-2, 1016,
	-1, 508,
	177, 1378,
	-2, 1372,
	-1, 509,
	177, 1379,
	-2, 1373,
	-1, 539,
	177, 1846,
	-2, 1267,
	-1, 540,
	177, 1927,
	-2, 1018,
	-1, 541,
	177, 1758,
	-2, 1019,
	-1, 608,
	177, 1709,
	-2, 1237,
	-1, 611,
	177, 1726,
	-2, 1166,
	-1, 612,
	177, 1939,
	-2, 1166,
	-1, 613,
	177, 1938,
	-2, 1166,
	-1, 614,
	177, 1937,
	-2, 1166,
	-1, 615,
	177, 1826,
	-2, 1166,
	-1, 616,
	177, 1827,
	-2, 1166,
	-1, 617,
	177, 1724,
	-2, 1166,
	-1, 618,
	177, 1725,
	-2, 1166,
	-1, 619,
	177, 1727,
	-2, 1166,
	-1, 867,
	100, 2036,
	177, 2036,
	-2, 1333,
	-1, 868,
	100, 2143,
	177, 2143,
	-2, 1334,
	-1, 873,
	100, 2060,
	177, 2060,
	-2, 1335,
	-1, 874,
	100, 2103,
	177, 2103,
	-2, 1336,
	-1, 875,
	100, 2104,
	177, 2104,
	-2, 1337,
	-1, 876,
	100, 1976,
	177, 1976,
	-2, 1341,
	-1, 878,
	100, 2081,
	177, 2081,
	-2, 1343,
	-1, 1134,
	5, 61,
	-2, 44,
	-1, 1397,
	1, 527,
	640, 527,
	-2, 525,
	-1, 1399,
	1, 527,
	640, 527,
	-2, 525,
	-1, 1852,
	177, 1381,
	-2, 1377,
	-1, 1972,
	1, 927,
	5, 927,
	12, 927,
	13, 927,
	14, 927,
	15, 927,
	17, 927,
	19, 927,
	29, 927,
	30, 927,
	56, 927,
	57, 927,
	58, 927,
	59, 927,
	60, 927,
	62, 927,
	63, 927,
	66, 927,
	67, 927,
	69, 927,
	70, 927,
	87, 927,
	412, 927,
	457, 927,
	640, 927,
	-2, 960,
	-1, 1980,
	67, 78,
	69, 78,
	-2, 82,
	-1, 1998,
	177, 1850,
	-2, 1338,
	-1, 2068,
	1, 528,
	640, 528,
	-2, 525,
	-1, 2158,
	44, 705,
	196, 707,
	198, 705,
	199, 705,
	-2, 748,
	-1, 2207,
	5, 62,
	-2, 1048,
	-1, 2769,
	196, 708,
	-2, 706,
	-1, 2842,
	69, 1622,
	70, 1622,
	177, 1622,
	-2, 858,
	-1, 2868,
	1, 1002,
	5, 1002,
	12, 1002,
	13, 1002,
	14, 1002,
	15, 1002,
	17, 1002,
	19, 1002,
	29, 1002,
	30, 1002,
	56, 1002,
	57, 1002,
	58, 1002,
	59, 1002,
	60, 1002,
	62, 1002,
	63, 1002,
	66, 1002,
	67, 1002,
	69, 1002,
	70, 1002,
	87, 1002,
	412, 1002,
	457, 1002,
	640, 1002,
	-2, 960,
	-1, 3063,
	5, 62,
	-2, 1299,
	-1, 3168,
	41, 1388,
	-2, 1386,
	-1, 3390,
	5, 62,
	-2, 1302,
	-1, 3413,
	279, 315,
	-2, 1443,
	-1, 3414,
	279, 316,
	-2, 1483,
	-1, 3415,
	279, 317,
	-2, 1659,
	-1, 3588,
	95, 301,
	97, 301,
	99, 301,
	-2, 56,
	-1, 3620,
	97, 308,
	98, 308,
	99, 308,
	-2, 56,
}

const yyPrivate = 57344

const yyLast = 50769

var yyAct = [...]int{
	551, 76, 3417, 3538, 3519, 3568, 3580, 3418, 440, 1148,
	3520, 2549, 3540, 2406, 984, 2368, 3479, 481, 3438, 3312,
	1995, 3382, 3320, 7, 3460, 3319, 6, 2367, 2931, 2711,
	3318, 5, 2744, 3321, 8, 3392, 511, 2664, 3280, 3317,
	3, 3104, 509, 1231, 3236, 2878, 3380, 2862, 2575, 3279,
	3168, 1232, 2292, 2503, 515, 1432, 2835, 2063, 550, 3170,
	2290, 500, 2354, 2286, 493, 2836, 2728, 2754, 423, 426,
	2990, 3020, 2087, 1877, 471, 2996, 2974, 76, 477, 465,
	465, 1824, 3313, 79, 2665, 2576, 2358, 2832, 130, 2654,
	2440, 130, 1431, 2763, 2012, 1327, 1255, 130, 518, 1812,
	1018, 91, 2422, 528, 2853, 2844, 2021, 468, 468, 1806,
	1804, 130, 104, 1042, 2157, 1817, 491, 954, 2317, 1001,
	490, 514, 2275, 1937, 1969, 2519, 1883, 1434, 2049, 1968,
	2116, 2470, 1805, 1758, 2133, 130, 956, 2008, 1408, 2268,
	2071, 2027, 947, 2070, 872, 2359, 1729, 2069, 1149, 869,
	2045, 2397, 1854, 1305, 1309, 130, 468, 1928, 956, 1152,
	1156, 1972, 1071, 1050, 2067, 1763, 130, 1982, 1170, 983,
	2579, 946, 1308, 480, 496, 997, 865, 67, 866, 443,
	442, 1049, 520, 2653, 1403, 1160, 1400, 967, 100, 972,
	2375, 96, 3620, 485, 81, 2379, 3615, 3607, 2556, 3588,
	3586, 2025, 3563, 3533, 3468, 78, 3238, 3237, 2679, 1756,
	2709, 2384, 2383, 2961, 2882, 3617, 3613, 3611, 2975, 435,
	3550, 3147, 3378, 3512, 3288, 39, 3160, 2101, 2977, 3482,
	3366, 2725, 83, 2380, 89, 2101, 3377, 3145, 2557, 3287,
	2541, 2434, 458, 3453, 452, 463, 446, 2911, 2386, 3220,
	2365, 2879, 3148, 3094, 36, 36, 36, 36, 2366, 36,
	3088, 3101, 3102, 2923, 951, 2636, 453, 2635, 74, 3517,
	2390, 3260, 3434, 2245, 2826, 2769, 966, 2570, 2132, 860,
	861, 862, 479, 3489, 2413, 2618, 2619, 969, 1082, 974,
	975, 1992, 1993, 3196, 977, 2571, 3205, 2288, 2353, 1997,
	2369, 1187, 1186, 1196, 1197, 1189, 1190, 1191, 1192, 1193,
	1194, 1195, 1188, 3386, 1991, 1198, 77, 77, 77, 77,
	2617, 77, 2947, 1762, 1140, 2953, 2955, 2954, 2951, 2952,
	2950, 2949, 2948, 1814, 1815, 3386, 1022, 1023, 87, 85,
	86, 1021, 77, 2980, 2956, 2957, 77, 1760, 1761, 3383,
	3218, 1938, 2310, 3381, 1310, 2309, 1311, 506, 2311, 1780,
	942, 1100, 434, 2382, 433, 1759, 2385, 1388, 2388, 475,
	2596, 3383, 2281, 2282, 2023, 2024, 1108, 2131, 437, 1068,
	2031, 2033, 3044, 2032, 2978, 2979, 2981, 2982, 2983, 2378,
	2039, 2028, 2028, 2812, 2810, 416, 415, 432, 418, 1741,
	1033, 2648, 487, 2466, 963, 1801, 1028, 2046, 1800, 1799,
	1798, 2628, 1797, 3578, 3387, 1796, 445, 444, 447, 2429,
	76, 76, 1104, 1105, 2458, 1075, 451, 963, 476, 1084,
	130, 3506, 1389, 3354, 1885, 3174, 3387, 2997, 2998, 2999,
	3000, 2753, 1037, 455, 2991, 1039, 2463, 2145, 459, 3420,
	1038, 3419, 2994, 3356, 2735, 1389, 2433, 3264, 3008, 1036,
	491, 3017, 462, 2088, 1040, 2146, 2992, 2993, 3577, 1791,
	3427, 1029, 1030, 2431, 3006, 77, 130, 3572, 76, 1005,
	1006, 1115, 1138, 1009, 1116, 77, 112, 106, 3262, 1143,
	533, 532, 535, 536, 537, 538, 963, 3142, 111, 534,
	1889, 2690, 2691, 2277, 2280, 2281, 2282, 2278, 1207, 2279,
	2284, 1209, 3465, 3140, 1211, 427, 1007, 1008, 502, 3463,
	3464, 130, 3146, 424, 1389, 1019, 2411, 1020, 1022, 1023,
	2729, 2730, 2731, 2732, 2733, 130, 3164, 3254, 3528, 1084,
	2683, 2378, 1406, 1223, 3139, 1173, 1226, 1227, 1228, 1229,
	1230, 3138, 1235, 417, 1415, 1416, 1414, 2738, 428, 448,
	449, 450, 456, 1770, 460, 461, 464, 3535, 3137, 2381,
	3136, 2412, 3134, 973, 2377, 2277, 2280, 2281, 2282, 2278,
	113, 2279, 2284, 2414, 2913, 2854, 2855, 3135, 3250, 3251,
	106, 491, 3444, 1107, 3315, 1236, 1237, 1238, 1239, 1240,
	1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1208,
	1252, 1253, 1256, 1256, 1256, 1262, 1256, 1256, 1262, 1256,
	1262, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279,
	1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289,
	1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299,
	2880, 3078, 108, 2627, 1017, 1134, 3246, 2976, 36, 37,
	2432, 3228, 2391, 131, 2082, 2083, 436, 132, 1076, 2602,
	133, 134, 57, 1177, 1742, 1034, 135, 1014, 73, 2755,
	1083, 39, 61, 62, 2378, 3256, 131, 2139, 3092, 58,
	132, 2882, 3090, 133, 134, 3286, 97, 3384, 2626, 135,
	2520, 2708, 2395, 2030, 3197, 2048, 3261, 3143, 1013, 1258,
	1260, 3355, 1264, 1266, 3508, 1269, 48, 3529, 3579, 3384,
	77, 3093, 3477, 425, 1117, 1004, 2283, 2912, 2914, 2915,
	2916, 3161, 3584, 1254, 1085, 1092, 1093, 1095, 1096, 1097,
	1098, 1099, 1762, 1101, 1102, 1103, 2435, 1106, 3488, 1109,
	1110, 1111, 1112, 1113, 3163, 131, 1094, 1142, 425, 132,
	1084, 1135, 133, 134, 425, 2078, 1760, 1761, 135, 492,
	492, 492, 492, 88, 68, 2737, 1713, 118, 114, 115,
	3234, 116, 2522, 2165, 2159, 2160, 3602, 2158, 2161, 2162,
	1764, 2655, 2656, 3405, 3406, 2077, 99, 108, 2657, 971,
	970, 2376, 2448, 2449, 1015, 1016, 110, 109, 420, 2020,
	2726, 963, 3255, 2476, 120, 119, 2729, 2730, 2731, 2732,
	2733, 3021, 3022, 3621, 2168, 973, 1766, 1932, 963, 1765,
	2768, 953, 41, 69, 44, 43, 46, 2902, 2167, 2166,
	2903, 963, 2904, 454, 421, 2018, 2295, 2297, 3618, 2685,
	2688, 106, 3608, 3589, 3105, 2686, 2687, 3544, 2668, 2283,
	3539, 107, 111, 963, 47, 72, 71, 2018, 3107, 968,
	986, 45, 121, 3266, 122, 486, 3542, 1216, 1217, 1218,
	1219, 1220, 1221, 1222, 1091, 63, 3031, 3032, 2751, 1080,
	2457, 101, 2453, 102, 2488, 2437, 2020, 2436, 2140, 1420,
	1122, 1418, 1032, 2066, 965, 130, 3582, 3035, 2609, 3583,
	2098, 3581, 2608, 2020, 956, 2097, 2020, 2020, 2607, 964,
	872, 2451, 55, 56, 1139, 872, 976, 387, 2849, 2524,
	1157, 2283, 1213, 1214, 2528, 77, 2523, 1212, 2521, 64,
	1179, 65, 2220, 2526, 2362, 1089, 2217, 1210, 2798, 2616,
	2455, 110, 109, 2454, 2019, 2314, 2525, 2199, 2188, 3259,
	2483, 2476, 1997, 2155, 3128, 2480, 66, 2081, 2479, 2482,
	2079, 2527, 2529, 1987, 1827, 1090, 2296, 1086, 1215, 1321,
	1225, 1224, 1178, 996, 1410, 1188, 1233, 3106, 1198, 1198,
	465, 1031, 3281, 2306, 49, 70, 1132, 51, 52, 59,
	2748, 60, 2968, 1433, 2164, 1215, 1739, 956, 130, 465,
	2659, 1087, 1088, 1079, 2966, 1313, 3422, 468, 468, 3058,
	1314, 468, 2496, 117, 2269, 3129, 1322, 2935, 130, 1730,
	1409, 130, 3445, 3446, 1413, 1820, 468, 468, 1303, 130,
	2658, 2019, 98, 1251, 1212, 1384, 1385, 1386, 1387, 130,
	130, 130, 130, 130, 1300, 1301, 3030, 425, 2019, 1169,
	3036, 2019, 2019, 2969, 2487, 2476, 3541, 3543, 2484, 963,
	468, 1391, 2477, 2018, 130, 2967, 1128, 1191, 1192, 1193,
	1194, 1195, 1188, 1737, 1003, 1198, 3442, 3443, 2936, 1326,
	3291, 3290, 3423, 1168, 1166, 465, 1436, 3308, 1127, 1123,
	1124, 1125, 1126, 1129, 1130, 1131, 1133, 3150, 2492, 1213,
	1214, 1169, 2108, 1213, 1214, 1861, 2851, 1024, 1754, 2212,
	1714, 2211, 468, 468, 468, 2850, 2848, 956, 1731, 1789,
	1859, 1860, 1858, 1725, 1726, 1727, 1728, 1773, 1323, 1166,
	1167, 1168, 1166, 3151, 76, 1011, 1167, 1168, 1166, 76,
	1167, 1168, 1166, 1751, 3610, 1396, 1169, 468, 1395, 1169,
	1319, 1422, 468, 468, 1411, 1169, 1733, 1412, 1734, 1169,
	1825, 1826, 1771, 68, 1041, 979, 1795, 1430, 1429, 130,
	1002, 956, 130, 491, 94, 1716, 978, 1816, 3592, 3569,
	3591, 2543, 1718, 1719, 1052, 1053, 1054, 1055, 1056, 1057,
	1058, 1059, 1060, 1061, 1062, 1063, 1929, 130, 2233, 1929,
	76, 2109, 1794, 1026, 1173, 1186, 1196, 1197, 1189, 1190,
	1191, 1192, 1193, 1194, 1195, 1188, 1746, 1747, 1198, 93,
	1749, 3606, 3530, 1167, 1168, 1166, 1235, 1167, 1168, 1166,
	1855, 1398, 3483, 1768, 1012, 3532, 1752, 3007, 3001, 491,
	1888, 1890, 1169, 956, 2794, 956, 1169, 3037, 956, 1769,
	1772, 2127, 3461, 1818, 3495, 956, 3494, 956, 956, 92,
	3603, 2677, 1818, 1163, 3490, 491, 3401, 130, 1852, 1905,
	1856, 1790, 3352, 3359, 1793, 2185, 2186, 2187, 1847, 1196,
	1197, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1188, 1914,
	1917, 1198, 1973, 3351, 2213, 985, 1846, 1930, 3309, 1809,
	1802, 1167, 1168, 1166, 956, 956, 77, 3553, 1146, 3462,
	1881, 1153, 1887, 3516, 1154, 3604, 1134, 1857, 3221, 3353,
	1169, 1996, 3158, 3157, 1894, 1896, 3156, 3155, 3257, 1829,
	1843, 3149, 1177, 130, 130, 130, 1257, 1259, 1261, 1263,
	1265, 1267, 1268, 1270, 1189, 1190, 1191, 1192, 1193, 1194,
	1195, 1188, 872, 1830, 1198, 1967, 1831, 2960, 956, 1167,
	1168, 1166, 1774, 2920, 2959, 1777, 1778, 1779, 2491, 1781,
	1782, 2908, 2918, 1783, 1736, 3258, 2898, 2003, 1169, 1784,
	1839, 1841, 1842, 1785, 1786, 2891, 1787, 1788, 1840, 1878,
	1977, 1879, 1421, 2680, 2402, 2400, 1943, 2389, 1945, 1893,
	1074, 1073, 1897, 1898, 1899, 1900, 1901, 1047, 3458, 3457,
	2921, 1852, 988, 989, 990, 991, 992, 993, 994, 2919,
	3470, 2001, 1167, 1168, 1166, 1926, 2095, 2403, 1717, 3461,
	1046, 3263, 3306, 533, 532, 535, 536, 537, 538, 2002,
	3469, 1169, 534, 1889, 130, 1167, 1168, 1166, 3424, 1735,
	130, 130, 468, 468, 468, 3421, 3365, 130, 2009, 3253,
	3252, 2017, 1985, 3233, 1169, 2093, 2094, 2029, 1981, 2034,
	2035, 2036, 2037, 2038, 1989, 1994, 1988, 2312, 3165, 2313,
	3133, 2055, 2056, 2057, 2058, 3100, 951, 2006, 2004, 3182,
	3099, 1233, 3085, 3054, 3004, 3003, 2059, 2060, 2061, 2051,
	2052, 2053, 2054, 1167, 1168, 1166, 3002, 2970, 2958, 2917,
	410, 2545, 2909, 2901, 2899, 2895, 2894, 2893, 2760, 2047,
	2696, 2499, 1169, 2498, 2398, 2128, 2103, 1748, 1853, 2362,
	3176, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870,
	1871, 1872, 1873, 1874, 1875, 1876, 3028, 2042, 2043, 2044,
	1822, 2831, 2788, 1882, 2075, 1187, 1186, 1196, 1197, 1189,
	1190, 1191, 1192, 1193, 1194, 1195, 1188, 2784, 2770, 1198,
	2739, 1114, 533, 532, 535, 536, 537, 538, 1906, 1907,
	1908, 534, 1889, 2443, 1912, 1913, 1916, 1919, 2442, 1924,
	1925, 1835, 1836, 1837, 1920, 1931, 2215, 2121, 2197, 1147,
	2105, 1821, 2104, 1880, 1933, 2224, 1744, 1743, 1428, 1427,
	1399, 388, 1397, 1069, 999, 1936, 431, 1939, 1940, 429,
	3114, 1147, 1944, 1147, 1946, 1947, 3114, 3492, 2926, 3475,
	1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961,
	1962, 1963, 3371, 1147, 3449, 1147, 2926, 3430, 2926, 3367,
	3114, 3296, 3175, 2117, 2926, 3244, 2197, 1147, 391, 3124,
	1233, 1182, 3123, 1185, 1147, 1910, 1911, 400, 408, 409,
	1199, 1200, 1201, 1202, 1203, 1204, 1205, 2718, 1183, 1184,
	1181, 3114, 3211, 1147, 3114, 3113, 3067, 1147, 1187, 1186,
	1196, 1197, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1188,
	2154, 1147, 1198, 397, 2926, 2925, 398, 94, 2833, 406,
	407, 2847, 1187, 1186, 1196, 1197, 1189, 1190, 1191, 1192,
	1193, 1194, 1195, 1188, 2706, 2705, 1198, 2702, 2703, 1262,
	1983, 1187, 1186, 1196, 1197, 1189, 1190, 1191, 1192, 1193,
	1194, 1195, 1188, 2441, 2000, 1198, 130, 2699, 2295, 2297,
	2702, 2701, 2272, 1147, 2142, 2141, 1903, 2125, 1903, 1147,
	1325, 1324, 1983, 130, 130, 130, 403, 2130, 2441, 2698,
	2697, 1119, 2301, 80, 1713, 2271, 1118, 1080, 2124, 1078,
	2086, 1077, 3509, 3481, 1078, 2847, 1984, 404, 1986, 3061,
	130, 1903, 130, 2272, 2152, 2101, 956, 2864, 2719, 2704,
	2272, 956, 1187, 1186, 1196, 1197, 1189, 1190, 1191, 1192,
	1193, 1194, 1195, 1188, 3612, 2272, 1198, 2062, 1984, 2497,
	1713, 2085, 2469, 956, 2106, 2847, 956, 2197, 1990, 1080,
	2197, 2239, 2238, 1750, 2100, 1823, 1136, 2114, 2189, 2110,
	943, 1792, 1757, 1713, 2115, 1419, 1417, 1307, 77, 3402,
	3368, 956, 389, 2863, 3277, 3179, 3075, 2962, 2026, 2854,
	2855, 2184, 2050, 2028, 2676, 2046, 1187, 1186, 1196, 1197,
	1189, 1190, 1191, 1192, 1193, 1194, 1195, 1188, 2296, 2540,
	1198, 2874, 2352, 1084, 2080, 2041, 402, 392, 393, 2040,
	413, 1392, 1977, 2137, 394, 396, 1066, 390, 412, 411,
	2064, 3601, 77, 2118, 2123, 3599, 3557, 1855, 3555, 3521,
	2129, 2857, 2833, 2717, 2404, 2144, 1767, 1852, 2147, 1424,
	1120, 1081, 2861, 2136, 3440, 2860, 2859, 1847, 2589, 2588,
	1187, 1186, 1196, 1197, 1189, 1190, 1191, 1192, 1193, 1194,
	1195, 1188, 405, 2595, 1198, 2002, 439, 1856, 2594, 2592,
	3376, 2590, 497, 498, 2593, 2151, 2591, 2500, 2174, 1833,
	3432, 3064, 2182, 2181, 2289, 3202, 3027, 2929, 2783, 2298,
	2299, 2175, 2176, 1973, 2177, 2782, 1973, 2695, 2694, 1161,
	1162, 2693, 2364, 2194, 2294, 2356, 1187, 1186, 1196, 1197,
	1189, 1190, 1191, 1192, 1193, 1194, 1195, 1188, 130, 2670,
	1198, 2190, 3268, 491, 3271, 3364, 130, 2200, 1159, 130,
	3363, 3169, 470, 3167, 3249, 130, 3248, 430, 130, 130,
	130, 1745, 3152, 3153, 1150, 2495, 2494, 2888, 2713, 2829,
	2681, 2629, 1320, 1064, 872, 1151, 2302, 1048, 1045, 2303,
	1044, 1000, 3573, 3186, 3185, 2073, 1825, 1826, 3009, 1902,
	1904, 3059, 2074, 1423, 3510, 3010, 3357, 1909, 3171, 2143,
	2934, 1043, 1977, 2712, 2285, 1161, 1162, 3501, 94, 2361,
	2363, 1977, 2065, 1803, 1977, 2232, 3500, 1436, 1187, 1186,
	1196, 1197, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1188,
	1144, 1145, 1198, 2122, 3499, 1941, 1942, 956, 2180, 130,
	3130, 2150, 1948, 1949, 1950, 1951, 2179, 1027, 494, 3426,
	2300, 3425, 956, 956, 956, 3375, 3361, 2447, 468, 1391,
	3300, 3272, 3201, 465, 2621, 495, 80, 3374, 3283, 1313,
	2304, 1409, 2441, 130, 468, 2307, 2416, 2417, 2418, 2351,
	3559, 3558, 2315, 76, 3039, 2758, 2464, 2439, 2462, 2461,
	2357, 468, 2360, 2221, 2218, 2148, 1732, 1164, 3558, 3559,
	3293, 2692, 2392, 2393, 2394, 2396, 1819, 943, 489, 956,
	2244, 2246, 3576, 468, 82, 956, 53, 2252, 2253, 2254,
	2255, 468, 491, 2399, 3331, 50, 1, 956, 956, 2401,
	3333, 19, 3332, 18, 3334, 20, 3335, 21, 2138, 2410,
	3330, 15, 2408, 3329, 14, 1775, 2409, 2191, 2192, 2193,
	2989, 130, 3323, 10, 2430, 3346, 34, 3344, 33, 3343,
	32, 956, 2988, 2459, 2445, 3342, 28, 3341, 27, 3340,
	26, 2465, 3338, 23, 3337, 22, 2550, 3339, 24, 2201,
	2202, 2203, 2204, 2205, 3328, 13, 3325, 12, 1157, 2995,
	2444, 3324, 11, 2724, 2452, 2468, 2450, 3322, 9, 2572,
	2574, 2456, 2727, 1973, 1973, 1973, 1973, 1973, 2230, 2225,
	2226, 2227, 2428, 3005, 1407, 3141, 2530, 2467, 956, 2532,
	2289, 2478, 2603, 2489, 2490, 982, 2473, 2493, 2505, 1852,
	2084, 2474, 1973, 2598, 2471, 2481, 2486, 1070, 491, 1847,
	3362, 2605, 2573, 2506, 2542, 130, 130, 130, 130, 130,
	3267, 3269, 2507, 3166, 2510, 1809, 2577, 2512, 130, 491,
	3012, 2973, 130, 1905, 2972, 2421, 130, 2420, 2206, 2531,
	1065, 1755, 2472, 2475, 130, 2096, 2163, 2606, 2149, 1121,
	2010, 3452, 3219, 3087, 2881, 2877, 2316, 956, 2910, 2005,
	3391, 945, 90, 2107, 2234, 2613, 1010, 395, 2007, 2373,
	3270, 1977, 1977, 1977, 1977, 1977, 2678, 1067, 2372, 2387,
	2689, 2022, 2068, 2072, 2371, 2370, 3265, 2374, 1977, 1331,
	1329, 2612, 2661, 2614, 2615, 956, 1330, 2508, 2584, 2585,
	1977, 2587, 2583, 1328, 1333, 2586, 1332, 2597, 3552, 3487,
	399, 1315, 3412, 2830, 1165, 544, 2682, 105, 54, 2672,
	2673, 2674, 2610, 2675, 2505, 1187, 1186, 1196, 1197, 1189,
	1190, 1191, 1192, 1193, 1194, 1195, 1188, 2620, 3029, 1198,
	2734, 2485, 473, 474, 95, 103, 465, 130, 2669, 2662,
	2671, 1832, 401, 1206, 2178, 2308, 2558, 2559, 2560, 2561,
	2562, 2563, 2564, 2565, 2566, 2567, 2568, 956, 956, 956,
	870, 2059, 2119, 2061, 468, 2446, 871, 863, 2745, 130,
	468, 2170, 1137, 3289, 3433, 3478, 2551, 2552, 2553, 2554,
	2555, 3404, 1155, 2741, 130, 3435, 468, 3373, 956, 3282,
	468, 2684, 2231, 1250, 468, 468, 2736, 468, 1927, 517,
	2601, 3057, 3437, 2765, 1838, 531, 530, 529, 526, 2720,
	527, 3385, 2773, 2778, 956, 1828, 2569, 1180, 130, 956,
	2707, 504, 2765, 1971, 2766, 1964, 956, 2700, 2126, 956,
	956, 2276, 2824, 2274, 2273, 1425, 2747, 1304, 2856, 2852,
	2752, 2287, 1975, 2509, 2756, 2757, 1970, 2759, 2743, 1974,
	38, 3038, 1025, 2502, 419, 2795, 2825, 2120, 3195, 2183,
	84, 488, 2838, 76, 499, 2533, 2534, 25, 2535, 2536,
	17, 1035, 2537, 2787, 2761, 2767, 16, 2156, 980, 40,
	42, 2415, 2076, 3411, 3537, 1391, 2546, 2547, 1051, 3567,
	3459, 31, 30, 2866, 29, 3336, 3345, 3327, 2870, 2871,
	2872, 3326, 491, 3523, 3522, 956, 2839, 956, 2793, 2834,
	4, 1141, 75, 35, 941, 2577, 2, 0, 0, 0,
	2837, 0, 2153, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2169, 0, 956, 0, 0, 0,
	2775, 2780, 0, 2808, 0, 0, 0, 2611, 2869, 0,
	0, 2865, 0, 0, 0, 0, 2846, 0, 2544, 0,
	0, 0, 0, 0, 2661, 0, 0, 0, 0, 0,
	0, 0, 2661, 2841, 0, 0, 2939, 2941, 2943, 2944,
	0, 2858, 0, 0, 0, 0, 2875, 0, 0, 2886,
	0, 0, 0, 0, 2876, 0, 0, 0, 2196, 2867,
	2198, 0, 76, 2799, 2800, 2801, 2802, 2803, 0, 956,
	2937, 2892, 2805, 2806, 0, 2807, 2964, 0, 2809, 2900,
	2811, 2662, 0, 2207, 2208, 2209, 2210, 0, 0, 2662,
	2214, 2216, 0, 1809, 2219, 0, 0, 2222, 2223, 0,
	0, 491, 2228, 2229, 0, 2963, 0, 2930, 2235, 2236,
	130, 2237, 956, 0, 2240, 2241, 0, 2242, 2243, 0,
	0, 2247, 2248, 2249, 2250, 2251, 0, 0, 0, 0,
	2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265,
	2266, 2267, 0, 0, 468, 0, 2946, 0, 0, 0,
	0, 468, 0, 0, 0, 2765, 2883, 2884, 2885, 0,
	0, 0, 0, 0, 0, 3014, 0, 2985, 2986, 2987,
	3016, 0, 2984, 0, 3025, 0, 2905, 2906, 2907, 0,
	0, 2765, 0, 0, 2745, 0, 2922, 0, 0, 3043,
	0, 956, 0, 0, 3015, 3013, 0, 2924, 3040, 3041,
	0, 3018, 0, 0, 3026, 0, 3019, 0, 0, 3033,
	3023, 3024, 0, 3011, 2669, 0, 2797, 0, 2927, 2928,
	0, 0, 0, 0, 0, 0, 2742, 0, 0, 0,
	3089, 3091, 3034, 0, 0, 0, 130, 2059, 0, 0,
	0, 0, 3077, 0, 0, 0, 2821, 2822, 2823, 3082,
	3083, 3084, 2577, 0, 0, 0, 956, 0, 2505, 0,
	0, 0, 0, 956, 956, 956, 0, 0, 0, 0,
	0, 3080, 3060, 0, 0, 0, 2789, 0, 0, 0,
	3068, 0, 2661, 3069, 0, 3116, 0, 0, 502, 0,
	3086, 0, 0, 0, 0, 0, 0, 0, 1256, 1256,
	1256, 1262, 1256, 1256, 1262, 1256, 1262, 1271, 1272, 0,
	0, 3095, 2868, 0, 3098, 0, 0, 0, 0, 956,
	3081, 0, 0, 0, 0, 0, 0, 3126, 0, 3097,
	2827, 0, 0, 0, 0, 2195, 0, 0, 1158, 2662,
	0, 0, 3111, 3112, 3127, 0, 0, 0, 0, 0,
	3125, 0, 0, 0, 0, 956, 0, 0, 3103, 3109,
	3110, 3108, 0, 1187, 1186, 1196, 1197, 1189, 1190, 1191,
	1192, 1193, 1194, 1195, 1188, 0, 3131, 1198, 2513, 2514,
	2515, 2516, 2517, 2518, 125, 0, 2933, 414, 3187, 0,
	1973, 0, 0, 125, 0, 1258, 1260, 2945, 1264, 1266,
	3132, 1269, 0, 0, 0, 0, 0, 482, 0, 0,
	3144, 0, 2838, 0, 0, 2838, 3207, 0, 3159, 0,
	1976, 3154, 503, 0, 0, 956, 3173, 0, 880, 2866,
	3162, 125, 130, 3172, 0, 0, 0, 0, 0, 3180,
	3181, 3223, 0, 3225, 3226, 3227, 0, 2294, 0, 3214,
	0, 125, 3190, 3189, 3210, 491, 3184, 0, 0, 3206,
	956, 0, 125, 0, 2599, 2600, 124, 0, 956, 0,
	2837, 3204, 130, 2837, 130, 422, 0, 3203, 76, 3188,
	3177, 3178, 2661, 3209, 2661, 0, 0, 3212, 1977, 0,
	3213, 3200, 0, 0, 0, 3230, 0, 0, 2661, 0,
	0, 0, 0, 0, 0, 0, 0, 956, 0, 0,
	0, 3247, 0, 944, 0, 0, 0, 491, 0, 0,
	3229, 3245, 0, 0, 3045, 3046, 3047, 3048, 0, 3222,
	0, 3224, 3052, 981, 0, 0, 3055, 3056, 0, 2662,
	0, 2662, 0, 0, 995, 3231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2662, 2838, 0, 76, 0,
	0, 0, 0, 0, 468, 0, 0, 3275, 0, 3298,
	3299, 0, 956, 0, 0, 0, 0, 3273, 0, 0,
	0, 0, 3274, 0, 0, 0, 0, 0, 3276, 0,
	0, 0, 0, 0, 3284, 0, 0, 491, 76, 0,
	0, 3295, 3302, 3292, 3304, 3316, 3307, 0, 0, 3314,
	0, 0, 3294, 3305, 2837, 0, 956, 3297, 956, 0,
	956, 0, 0, 1233, 0, 0, 0, 130, 0, 0,
	0, 0, 0, 3070, 3071, 3072, 3073, 0, 0, 3074,
	0, 3117, 3076, 3118, 0, 3119, 3121, 0, 0, 0,
	0, 1233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3358, 0, 3369, 0, 0, 3360, 0,
	956, 0, 0, 0, 956, 0, 0, 0, 0, 0,
	3407, 0, 0, 0, 2796, 0, 0, 0, 3388, 0,
	516, 956, 3389, 0, 0, 0, 3395, 2804, 2577, 3394,
	0, 76, 0, 0, 0, 3230, 3403, 0, 2813, 2814,
	2815, 0, 0, 0, 0, 2820, 0, 0, 0, 0,
	0, 0, 542, 0, 0, 0, 125, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 3428, 0, 0,
	0, 0, 956, 0, 0, 126, 0, 0, 0, 0,
	2840, 0, 3454, 3441, 0, 0, 3429, 0, 3393, 483,
	3431, 956, 0, 0, 0, 0, 0, 0, 3456, 2938,
	2940, 2942, 125, 0, 3447, 0, 0, 0, 0, 0,
	881, 3455, 0, 126, 949, 0, 3474, 0, 2873, 0,
	0, 0, 465, 0, 0, 956, 0, 0, 0, 0,
	3476, 0, 0, 126, 0, 0, 0, 0, 998, 3416,
	0, 0, 879, 76, 126, 3498, 948, 482, 0, 76,
	468, 0, 0, 0, 3239, 502, 3505, 956, 0, 0,
	0, 482, 0, 3491, 3496, 3486, 3493, 0, 987, 3450,
	956, 0, 956, 0, 2745, 3507, 76, 956, 3531, 3502,
	3511, 76, 0, 3515, 1072, 3513, 0, 0, 3466, 3547,
	956, 2550, 3534, 0, 0, 3546, 3527, 0, 1996, 3526,
	0, 465, 3549, 3545, 3525, 3556, 3548, 3524, 130, 76,
	3554, 3561, 3551, 76, 76, 3564, 3560, 0, 76, 3562,
	491, 3505, 0, 3278, 3536, 3570, 0, 0, 0, 468,
	0, 0, 956, 0, 0, 0, 0, 130, 0, 3393,
	0, 0, 0, 0, 76, 0, 3585, 76, 0, 3590,
	0, 3505, 130, 3593, 0, 3595, 0, 3503, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 76, 0, 76,
	0, 0, 0, 76, 3505, 3609, 3505, 0, 0, 0,
	0, 0, 0, 0, 0, 2828, 0, 0, 76, 0,
	0, 76, 0, 3616, 0, 3505, 76, 0, 0, 0,
	0, 76, 0, 3505, 0, 0, 0, 0, 3505, 0,
	0, 2819, 0, 0, 0, 0, 1233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2818, 0, 0, 3049,
	3050, 3051, 0, 3053, 1187, 1186, 1196, 1197, 1189, 1190,
	1191, 1192, 1193, 1194, 1195, 1188, 3062, 3063, 1198, 3065,
	0, 0, 3066, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1257, 1259, 1261, 1263, 1265, 1267, 1268, 1270,
	0, 0, 0, 0, 0, 3079, 0, 0, 2817, 2622,
	2623, 2624, 2625, 0, 0, 2630, 2631, 2632, 2633, 2634,
	0, 0, 2637, 2638, 2639, 2640, 2641, 2642, 2643, 2644,
	2645, 2646, 2647, 0, 2649, 2650, 2651, 2652, 126, 2663,
	1187, 1186, 1196, 1197, 1189, 1190, 1191, 1192, 1193, 1194,
	1195, 1188, 0, 0, 1198, 1187, 1186, 1196, 1197, 1189,
	1190, 1191, 1192, 1193, 1194, 1195, 1188, 0, 0, 1198,
	0, 3115, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3120, 3122, 126, 0, 0, 0, 0, 0,
	0, 0, 3408, 3409, 0, 0, 0, 0, 0, 0,
	0, 2714, 2715, 2716, 0, 0, 0, 1187, 1186, 1196,
	1197, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1188, 3436,
	3439, 1198, 0, 0, 0, 0, 0, 0, 0, 483,
	1187, 1186, 1196, 1197, 1189, 1190, 1191, 1192, 1193, 1194,
	1195, 1188, 0, 483, 1198, 0, 0, 0, 0, 0,
	0, 0, 0, 1174, 0, 0, 0, 0, 0, 0,
	0, 1306, 0, 0, 880, 0, 0, 0, 0, 880,
	0, 0, 2816, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3191, 3192, 3193, 3194, 0, 0, 0,
	0, 0, 0, 3198, 3199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3497, 0, 0, 0,
	0, 0, 0, 0, 0, 3574, 0, 0, 0, 0,
	3215, 3216, 3217, 0, 0, 0, 3439, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3596, 0, 998, 0, 0, 3600, 0, 0, 0,
	0, 0, 0, 0, 0, 3240, 3241, 3242, 0, 3243,
	0, 0, 0, 0, 125, 0, 0, 0, 0, 1402,
	1405, 1187, 1186, 1196, 1197, 1189, 1190, 1191, 1192, 1193,
	1194, 1195, 1188, 0, 125, 1198, 0, 125, 543, 0,
	1402, 1405, 0, 0, 0, 1435, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 125, 125, 125, 125, 125,
	0, 0, 0, 0, 3594, 2887, 0, 2889, 2890, 0,
	0, 0, 0, 0, 2896, 2897, 0, 0, 0, 0,
	1740, 0, 0, 3285, 127, 0, 0, 0, 0, 2539,
	0, 0, 0, 127, 0, 0, 1394, 0, 0, 0,
	0, 0, 0, 0, 0, 2350, 0, 2538, 0, 0,
	3301, 0, 3303, 0, 0, 0, 998, 0, 0, 1426,
	0, 0, 0, 0, 0, 0, 0, 3311, 2324, 0,
	0, 127, 950, 0, 0, 0, 2331, 1720, 1721, 1722,
	1723, 1724, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 127, 2965, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 127, 0, 0, 0, 0, 3370, 0, 2318,
	0, 0, 0, 0, 0, 0, 0, 3379, 0, 0,
	0, 2328, 0, 3390, 0, 482, 0, 0, 125, 0,
	3396, 0, 3397, 3398, 3399, 3400, 1187, 1186, 1196, 1197,
	1189, 1190, 1191, 1192, 1193, 1194, 1195, 1188, 0, 0,
	1198, 0, 2319, 125, 1187, 1186, 1196, 1197, 1189, 1190,
	1191, 1192, 1193, 1194, 1195, 1188, 0, 1435, 1198, 0,
	0, 0, 2327, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1886, 0, 0, 126, 0, 0, 881, 0, 0, 0,
	1813, 881, 0, 0, 0, 0, 0, 0, 0, 3448,
	0, 0, 3451, 482, 0, 1886, 1886, 1886, 0, 0,
	2332, 1886, 1886, 1886, 1886, 1834, 1886, 1886, 879, 0,
	2338, 880, 1886, 879, 1316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1886, 1886, 1886, 1886, 0, 3096, 1886, 1886,
	1886, 1886, 1886, 0, 2330, 0, 3485, 1886, 1886, 1886,
	1886, 1886, 1886, 1886, 1886, 1886, 1886, 1886, 1886, 125,
	125, 125, 0, 0, 1390, 0, 880, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 0, 0, 0,
	1435, 0, 0, 0, 0, 0, 0, 0, 0, 3518,
	0, 0, 0, 0, 0, 0, 126, 0, 0, 126,
	0, 0, 0, 2342, 0, 0, 0, 1393, 0, 0,
	0, 0, 0, 1401, 1404, 0, 0, 126, 126, 126,
	126, 126, 0, 0, 0, 0, 0, 0, 0, 0,
	2349, 0, 0, 0, 1401, 1404, 127, 0, 0, 0,
	0, 1966, 2335, 1980, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	125, 0, 3597, 3598, 0, 0, 125, 125, 0, 0,
	0, 0, 127, 125, 2325, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2350,
	0, 0, 2321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1776, 0, 2323,
	0, 0, 2324, 0, 0, 0, 0, 0, 0, 0,
	2331, 2334, 0, 0, 0, 0, 0, 483, 0, 1807,
	126, 1176, 2089, 0, 0, 3232, 0, 0, 2091, 2092,
	0, 0, 0, 0, 0, 2099, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 0, 0, 0, 0,
	0, 1811, 1174, 0, 0, 2328, 0, 0, 0, 1849,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2322, 2326, 2329, 0, 2333, 2336, 2337, 2339, 2340, 2341,
	2343, 2345, 2346, 2347, 2348, 0, 0, 0, 0, 0,
	0, 1811, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2327, 36, 0, 0,
	0, 0, 0, 0, 0, 483, 0, 0, 0, 0,
	0, 57, 0, 1811, 0, 1811, 0, 73, 1891, 0,
	39, 0, 0, 881, 0, 1892, 0, 1811, 1811, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 36, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2332, 879, 57, 0, 0, 77,
	0, 0, 73, 0, 2338, 39, 0, 0, 0, 0,
	0, 126, 126, 126, 1934, 1935, 0, 0, 881, 0,
	0, 0, 0, 0, 0, 3347, 0, 0, 3566, 3569,
	3565, 0, 1849, 0, 0, 0, 949, 0, 2330, 0,
	0, 2320, 0, 0, 77, 0, 0, 0, 0, 0,
	879, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1811, 0, 0, 0, 948, 0,
	3347, 0, 125, 0, 0, 3619, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2111,
	2112, 125, 0, 0, 0, 0, 0, 2342, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 41, 69, 44, 43, 46, 125, 0, 482, 0,
	0, 0, 126, 0, 2349, 0, 3348, 0, 126, 126,
	0, 0, 0, 0, 0, 126, 2335, 0, 0, 0,
	0, 0, 0, 47, 72, 71, 0, 2344, 0, 0,
	45, 0, 0, 0, 2102, 0, 41, 69, 44, 43,
	46, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3348, 0, 2113, 0, 0, 0, 0, 2325, 0,
	0, 0, 0, 0, 0, 0, 1435, 0, 47, 72,
	71, 0, 0, 0, 0, 45, 0, 0, 1072, 0,
	0, 55, 56, 0, 3349, 0, 2321, 0, 0, 0,
	0, 127, 0, 0, 0, 0, 0, 0, 64, 0,
	65, 0, 0, 2323, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 66, 55, 56, 0, 3349,
	0, 0, 1886, 0, 0, 0, 1886, 1886, 1886, 1886,
	1886, 0, 0, 64, 0, 65, 0, 0, 0, 0,
	0, 0, 0, 3350, 70, 0, 51, 52, 59, 0,
	60, 0, 0, 0, 0, 1886, 0, 0, 0, 0,
	66, 0, 0, 0, 2322, 2326, 2329, 0, 2333, 2336,
	2337, 2339, 2340, 2341, 2343, 2345, 2346, 2347, 2348, 0,
	0, 0, 0, 0, 127, 0, 0, 0, 3350, 70,
	0, 51, 52, 59, 125, 60, 0, 0, 0, 0,
	0, 0, 125, 0, 127, 482, 0, 127, 0, 0,
	0, 125, 0, 0, 125, 2305, 1435, 0, 880, 0,
	0, 0, 0, 0, 0, 127, 127, 127, 127, 127,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 36, 0,
	0, 0, 0, 0, 0, 0, 2270, 0, 0, 0,
	0, 0, 57, 0, 0, 0, 0, 0, 73, 0,
	0, 39, 0, 0, 126, 125, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2320, 0, 0, 0, 0,
	0, 0, 0, 126, 0, 0, 0, 0, 0, 0,
	0, 0, 68, 0, 0, 0, 0, 0, 0, 125,
	77, 0, 0, 0, 0, 0, 0, 0, 126, 0,
	483, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3347, 1808, 127, 0,
	0, 3614, 0, 0, 0, 0, 0, 68, 0, 0,
	0, 0, 0, 0, 0, 0, 2135, 2407, 0, 0,
	0, 2135, 0, 127, 0, 0, 0, 0, 0, 0,
	1176, 0, 0, 0, 0, 0, 0, 1848, 0, 0,
	0, 0, 0, 2135, 0, 0, 2135, 125, 1849, 0,
	0, 2438, 0, 0, 0, 0, 0, 0, 1886, 0,
	0, 0, 0, 0, 0, 0, 1886, 0, 1435, 0,
	0, 2173, 0, 0, 0, 0, 0, 0, 0, 0,
	1811, 0, 41, 69, 44, 43, 46, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3348, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 47, 72, 71, 0, 0, 0,
	0, 45, 0, 0, 0, 0, 0, 0, 0, 2501,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	880, 125, 125, 125, 125, 125, 0, 0, 0, 0,
	0, 0, 0, 0, 482, 0, 0, 0, 125, 127,
	127, 127, 482, 0, 0, 0, 0, 1886, 0, 0,
	125, 0, 55, 56, 0, 3349, 0, 0, 0, 0,
	1848, 0, 0, 0, 950, 0, 126, 0, 0, 64,
	0, 65, 0, 0, 126, 0, 0, 483, 0, 0,
	0, 0, 0, 126, 36, 0, 126, 0, 0, 0,
	881, 0, 0, 0, 0, 0, 66, 0, 57, 0,
	0, 0, 0, 0, 73, 0, 0, 39, 0, 0,
	0, 0, 2355, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 879, 0, 3350, 70, 0, 51, 52, 59,
	0, 60, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 77, 0, 0, 0,
	127, 0, 0, 125, 0, 0, 127, 127, 0, 0,
	0, 0, 0, 127, 0, 0, 0, 126, 0, 0,
	0, 0, 3347, 0, 0, 0, 0, 3605, 0, 0,
	0, 0, 0, 0, 0, 125, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2405, 0, 0,
	125, 126, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2419, 2423, 2427, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 125, 2710, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 503, 0, 0, 1807, 0, 0, 41, 69,
	44, 43, 46, 0, 0, 0, 36, 2740, 0, 2135,
	0, 0, 0, 3348, 0, 2460, 0, 0, 0, 126,
	57, 0, 2746, 0, 0, 0, 73, 1811, 1811, 39,
	47, 72, 71, 0, 0, 0, 0, 45, 0, 0,
	1849, 0, 0, 68, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2785, 0, 0, 880,
	0, 1811, 0, 0, 0, 0, 0, 0, 77, 0,
	0, 0, 1811, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 55, 56,
	0, 3349, 0, 0, 3347, 0, 0, 0, 0, 3587,
	0, 0, 0, 0, 0, 64, 0, 65, 0, 0,
	0, 0, 2578, 126, 126, 126, 126, 126, 2548, 0,
	0, 0, 0, 0, 0, 0, 483, 0, 0, 0,
	126, 0, 66, 0, 483, 0, 0, 0, 0, 0,
	0, 0, 126, 0, 879, 0, 0, 0, 1353, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3350, 70, 0, 51, 52, 59, 0, 60, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	41, 69, 44, 43, 46, 0, 0, 1811, 3467, 0,
	0, 0, 127, 2667, 0, 3348, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 125, 0, 0, 0,
	0, 127, 47, 72, 71, 0, 0, 0, 0, 45,
	0, 0, 0, 0, 0, 2666, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 0, 0, 0, 0,
	0, 0, 1340, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	55, 56, 0, 3349, 0, 0, 0, 126, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 64, 2971, 65,
	0, 0, 126, 0, 0, 0, 0, 2721, 2722, 2723,
	0, 0, 0, 0, 0, 0, 1848, 0, 0, 0,
	0, 0, 0, 0, 66, 0, 0, 0, 2355, 0,
	2772, 2777, 0, 0, 0, 0, 126, 0, 2750, 0,
	0, 0, 482, 0, 1354, 0, 880, 0, 0, 68,
	0, 0, 3350, 70, 0, 51, 52, 59, 0, 60,
	0, 0, 0, 0, 2781, 0, 0, 0, 36, 2786,
	0, 0, 0, 0, 0, 0, 2790, 0, 0, 2791,
	2792, 0, 57, 0, 0, 0, 0, 0, 73, 0,
	0, 39, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2578, 0, 1807, 0, 0, 0, 0, 0, 0,
	77, 3571, 0, 0, 0, 0, 0, 0, 1886, 0,
	1886, 0, 1886, 1886, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 879, 127, 1811, 3347, 2845, 0, 0,
	0, 0, 127, 0, 0, 0, 0, 0, 0, 0,
	0, 127, 0, 0, 127, 0, 0, 0, 0, 1367,
	1370, 1371, 1372, 1373, 1374, 1375, 2845, 1376, 1377, 1378,
	1379, 1380, 1381, 1382, 1383, 0, 1355, 1356, 1357, 1358,
	1334, 1338, 1368, 1335, 1341, 1337, 1339, 1336, 0, 1342,
	1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352,
	1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 0, 0,
	0, 68, 0, 0, 0, 0, 0, 0, 125, 503,
	0, 0, 41, 69, 44, 43, 46, 0, 0, 0,
	0, 0, 0, 0, 0, 127, 0, 3348, 0, 2932,
	0, 0, 0, 0, 0, 0, 0, 0, 126, 0,
	0, 0, 0, 0, 47, 72, 71, 0, 482, 0,
	482, 45, 0, 0, 0, 0, 0, 0, 0, 127,
	0, 0, 0, 0, 0, 0, 0, 0, 36, 0,
	0, 0, 2423, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 57, 0, 0, 0, 0, 0, 73, 0,
	0, 39, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 55, 56, 0, 3349, 0, 0, 0, 0,
	0, 0, 0, 1808, 0, 0, 0, 0, 1369, 64,
	0, 65, 0, 0, 0, 0, 0, 0, 0, 0,
	77, 0, 0, 0, 36, 0, 0, 127, 0, 0,
	0, 0, 0, 0, 0, 0, 66, 0, 57, 0,
	0, 1811, 0, 0, 73, 0, 3347, 39, 1848, 0,
	0, 3504, 0, 0, 483, 0, 0, 0, 2578, 0,
	0, 0, 0, 0, 3350, 70, 0, 51, 52, 59,
	0, 60, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 77, 0, 0, 0,
	879, 0, 0, 125, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2932, 0, 0, 0,
	0, 0, 3347, 2932, 2932, 2932, 0, 0, 0, 0,
	0, 127, 127, 127, 127, 127, 0, 0, 0, 0,
	0, 0, 41, 69, 44, 43, 46, 2667, 127, 0,
	0, 0, 0, 0, 0, 0, 0, 3348, 0, 0,
	127, 0, 880, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 47, 72, 71, 0, 0, 2666,
	0, 45, 0, 2667, 0, 3310, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 41, 69,
	44, 43, 46, 0, 0, 2666, 0, 0, 0, 0,
	0, 0, 0, 3348, 0, 0, 0, 0, 0, 0,
	0, 0, 55, 56, 0, 3349, 0, 0, 0, 0,
	47, 72, 71, 0, 0, 0, 0, 45, 0, 64,
	0, 65, 0, 68, 0, 0, 0, 0, 0, 0,
	126, 0, 0, 127, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 66, 0, 0, 0,
	0, 0, 0, 0, 1353, 3183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 127, 0, 0, 55, 56,
	483, 3349, 483, 0, 3350, 70, 0, 51, 52, 59,
	127, 60, 0, 0, 0, 64, 0, 65, 0, 0,
	3208, 0, 0, 0, 0, 0, 0, 0, 2932, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2774, 2779,
	0, 0, 66, 0, 127, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 482, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3235, 0, 0,
	3350, 70, 0, 51, 52, 59, 0, 60, 0, 0,
	0, 0, 0, 482, 0, 0, 0, 0, 1340, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 482, 0,
	2667, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1808, 2666, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1354, 0, 0, 0, 0, 0, 2932, 0, 2932, 0,
	2932, 0, 0, 68, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2667, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2578, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2666, 0, 0, 0, 3372, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 879, 0, 0, 68,
	0, 1811, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2667,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1811, 0, 0, 1367, 1370, 1371, 1372, 1373,
	1374, 1375, 0, 1376, 1377, 1378, 1379, 1380, 1381, 1382,
	1383, 2666, 1355, 1356, 1357, 1358, 1334, 1338, 1368, 1335,
	1341, 1337, 1339, 1336, 0, 1342, 1343, 1344, 1345, 1346,
	1347, 1348, 1349, 1350, 1351, 1352, 1359, 1360, 1361, 1362,
	1363, 1364, 1365, 1366, 0, 2932, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3480, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3484, 0, 1811, 0, 0, 0, 483, 2932, 0, 0,
	0, 0, 0, 0, 0, 1715, 0, 0, 0, 0,
	1811, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 483, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	483, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1369, 552, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 583, 584, 585, 586,
	587, 588, 589, 590, 591, 592, 593, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 839, 0, 354, 601, 843, 686, 709, 852,
	715, 717, 780, 662, 757, 290, 706, 663, 127, 0,
	654, 510, 655, 687, 208, 507, 813, 758, 841, 743,
	773, 783, 207, 196, 750, 749, 830, 698, 697, 778,
	826, 840, 0, 0, 609, 253, 0, 0, 378, 342,
	273, 0, 0, 741, 0, 594, 595, 726, 782, 674,
	769, 845, 707, 774, 846, 77, 0, 1147, 0, 508,
	533, 532, 535, 536, 537, 538, 0, 0, 137, 534,
	539, 540, 541, 0, 736, 779, 857, 653, 505, 524,
	658, 608, 0, 831, 694, 695, 212, 0, 0, 0,
	0, 0, 0, 0, 739, 756, 798, 723, 373, 785,
	794, 808, 716, 307, 226, 0, 0, 0, 0, 521,
	522, 1884, 0, 0, 0, 624, 0, 523, 0, 668,
	519, 552, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 585, 586, 587, 588, 589, 590,
	591, 592, 593, 525, 0, 0, 0, 673, 651, 692,
	800, 652, 650, 274, 665, 597, 829, 724, 242, 154,
	835, 722, 622, 788, 669, 817, 710, 250, 667, 155,
	664, 670, 708, 285, 797, 803, 606, 158, 252, 814,
	688, 701, 197, 127, 318, 775, 372, 513, 761, 317,
	254, 365, 789, 837, 371, 711, 349, 379, 383, 219,
	744, 188, 339, 210, 205, 693, 807, 657, 227, 306,
	200, 246, 727, 781, 689, 193, 792, 768, 819, 338,
	362, 160, 270, 363, 382, 177, 355, 271, 278, 190,
	192, 191, 172, 332, 361, 182, 195, 815, 802, 821,
	684, 671, 676, 672, 700, 838, 236, 228, 822, 820,
	376, 144, 327, 326, 714, 235, 805, 145, 136, 313,
	146, 243, 163, 825, 385, 176, 248, 356, 512, 222,
	284, 199, 777, 294, 699, 157, 309, 266, 268, 265,
	269, 225, 140, 147, 801, 311, 329, 360, 178, 345,
	138, 139, 141, 149, 320, 150, 151, 844, 260, 214,
	218, 229, 240, 776, 316, 346, 377, 770, 173, 166,
	348, 370, 183, 328, 331, 384, 799, 168, 833, 816,
	763, 729, 735, 659, 0, 167, 795, 691, 703, 683,
	771, 682, 224, 787, 368, 369, 198, 386, 600, 848,
	169, 666, 847, 281, 289, 280, 850, 364, 834, 764,
	753, 751, 660, 832, 762, 752, 249, 217, 231, 304,
	256, 305, 232, 276, 275, 277, 258, 755, 0, 164,
	0, 343, 842, 859, 347, 180, 677, 809, 359, 143,
	310, 181, 223, 215, 303, 279, 174, 234, 341, 247,
	255, 791, 856, 293, 319, 187, 374, 340, 211, 611,
	286, 623, 617, 619, 618, 615, 616, 614, 613, 612,
	625, 598, 599, 602, 603, 604, 746, 836, 661, 607,
	812, 620, 621, 784, 854, 596, 194, 545, 637, 638,
	639, 546, 640, 641, 547, 548, 642, 643, 644, 645,
	549, 646, 647, 648, 626, 627, 628, 629, 630, 631,
	632, 633, 636, 634, 635, 742, 300, 165, 175, 186,
	204, 202, 216, 244, 267, 272, 298, 330, 335, 350,
	351, 352, 353, 206, 0, 209, 185, 314, 184, 257,
	237, 299, 357, 358, 605, 159, 170, 251, 855, 312,
	221, 649, 656, 675, 678, 679, 680, 681, 685, 690,
	0, 696, 702, 704, 705, 713, 718, 719, 720, 721,
	728, 730, 731, 732, 733, 734, 737, 738, 740, 747,
	748, 754, 759, 760, 766, 767, 0, 790, 793, 610,
	804, 806, 810, 811, 818, 823, 824, 849, 853, 858,
	375, 203, 745, 765, 796, 171, 179, 189, 201, 213,
	220, 230, 233, 238, 239, 241, 245, 259, 261, 262,
	263, 264, 282, 283, 287, 288, 291, 292, 295, 296,
	297, 301, 302, 308, 148, 315, 321, 322, 323, 324,
	325, 333, 334, 336, 337, 344, 366, 367, 380, 381,
	828, 725, 156, 0, 0, 162, 0, 0, 0, 0,
	0, 712, 161, 827, 851, 772, 786, 839, 0, 354,
	601, 843, 686, 709, 852, 715, 717, 780, 662, 757,
	290, 706, 663, 0, 0, 654, 510, 655, 687, 208,
	507, 813, 758, 841, 743, 773, 783, 207, 196, 750,
	749, 830, 698, 697, 778, 826, 840, 0, 0, 609,
	253, 0, 0, 378, 342, 273, 0, 0, 741, 0,
	594, 595, 726, 782, 674, 769, 845, 707, 774, 846,
	77, 0, 0, 0, 508, 533, 532, 535, 536, 537,
	538, 0, 0, 137, 534, 539, 540, 541, 0, 736,
	779, 857, 653, 505, 524, 658, 608, 0, 831, 694,
	695, 212, 0, 0, 0, 0, 0, 0, 0, 739,
	756, 798, 723, 373, 785, 794, 808, 716, 307, 226,
	0, 0, 0, 0, 521, 522, 501, 0, 0, 0,
	624, 0, 523, 0, 668, 519, 552, 553, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 592, 593, 525, 0,
	0, 0, 673, 651, 692, 800, 652, 650, 274, 665,
	597, 829, 724, 242, 154, 835, 722, 622, 788, 669,
	817, 710, 250, 667, 155, 664, 670, 708, 285, 797,
	803, 606, 158, 252, 814, 688, 701, 197, 0, 318,
	775, 372, 513, 761, 317, 254, 365, 789, 837, 371,
	711, 349, 379, 383, 219, 744, 188, 339, 210, 205,
	693, 807, 657, 227, 306, 200, 246, 727, 781, 689,
	193, 792, 768, 819, 338, 362, 160, 270, 363, 382,
	177, 355, 271, 278, 190, 192, 191, 172, 332, 361,
	182, 195, 815, 802, 821, 684, 671, 676, 672, 700,
	838, 236, 228, 822, 820, 376, 144, 327, 326, 714,
	235, 805, 145, 136, 313, 146, 243, 163, 825, 385,
	176, 248, 356, 512, 222, 284, 199, 777, 294, 699,
	157, 309, 266, 268, 265, 269, 225, 140, 147, 801,
	311, 329, 360, 178, 345, 138, 139, 141, 149, 320,
	150, 151, 844, 260, 214, 218, 229, 240, 776, 316,
	346, 377, 770, 173, 166, 348, 370, 183, 328, 331,
	384, 799, 168, 833, 816, 763, 729, 735, 659, 0,
	167, 795, 691, 703, 683, 771, 682, 224, 787, 368,
	369, 198, 386, 600, 848, 169, 666, 847, 281, 289,
	280, 850, 364, 834, 764, 753, 751, 660, 832, 762,
	752, 249, 217, 231, 304, 256, 305, 232, 276, 275,
	277, 258, 755, 0, 164, 0, 343, 842, 859, 347,
	180, 677, 809, 359, 143, 310, 181, 223, 215, 303,
	279, 174, 234, 341, 247, 255, 791, 856, 293, 319,
	187, 374, 340, 211, 611, 286, 623, 617, 619, 618,
	615, 616, 614, 613, 612, 625, 598, 599, 602, 603,
	604, 746, 836, 661, 607, 812, 620, 621, 784, 854,
	596, 194, 545, 637, 638, 639, 546, 640, 641, 547,
	548, 642, 643, 644, 645, 549, 646, 647, 648, 626,
	627, 628, 629, 630, 631, 632, 633, 636, 634, 635,
	742, 300, 165, 175, 186, 204, 202, 216, 244, 267,
	272, 298, 330, 335, 350, 351, 352, 353, 206, 0,
	209, 185, 314, 184, 257, 237, 299, 357, 358, 605,
	159, 170, 251, 855, 312, 221, 649, 656, 675, 678,
	679, 680, 681, 685, 690, 0, 696, 702, 704, 705,
	713, 718, 719, 720, 721, 728, 730, 731, 732, 733,
	734, 737, 738, 740, 747, 748, 754, 759, 760, 766,
	767, 0, 790, 793, 610, 804, 806, 810, 811, 818,
	823, 824, 849, 853, 858, 375, 203, 745, 765, 796,
	171, 179, 189, 201, 213, 220, 230, 233, 238, 239,
	241, 245, 259, 261, 262, 263, 264, 282, 283, 287,
	288, 291, 292, 295, 296, 297, 301, 302, 308, 148,
	315, 321, 322, 323, 324, 325, 333, 334, 336, 337,
	344, 366, 367, 380, 381, 828, 725, 156, 0, 0,
	162, 0, 0, 0, 0, 0, 712, 161, 827, 851,
	772, 786, 839, 0, 354, 601, 843, 686, 709, 852,
	715, 717, 780, 662, 757, 290, 706, 663, 0, 0,
	654, 510, 655, 687, 208, 507, 813, 758, 841, 743,
	773, 783, 207, 196, 750, 749, 830, 698, 697, 778,
	826, 840, 0, 0, 609, 253, 0, 0, 378, 342,
	273, 0, 0, 741, 0, 594, 595, 726, 782, 674,
	769, 845, 707, 774, 846, 77, 0, 1147, 0, 508,
	533, 532, 535, 536, 537, 538, 0, 0, 137, 534,
	539, 540, 541, 0, 736, 779, 857, 653, 505, 524,
	658, 608, 0, 831, 694, 695, 212, 0, 0, 0,
	0, 0, 0, 0, 739, 756, 798, 723, 373, 785,
	794, 808, 716, 307, 226, 0, 0, 0, 0, 521,
	522, 0, 0, 0, 0, 624, 0, 523, 0, 668,
	519, 552, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 585, 586, 587, 588, 589, 590,
	591, 592, 593, 525, 0, 0, 0, 673, 651, 692,
	800, 652, 650, 274, 665, 597, 829, 724, 242, 154,
	835, 722, 622, 788, 669, 817, 710, 250, 667, 155,
	664, 670, 708, 285, 797, 803, 606, 158, 252, 814,
	688, 701, 197, 0, 318, 775, 372, 513, 761, 317,
	254, 365, 789, 837, 371, 711, 349, 379, 383, 219,
	744, 188, 339, 210, 205, 693, 807, 657, 227, 306,
	200, 246, 727, 781, 689, 193, 792, 768, 819, 338,
	362, 160, 270, 363, 382, 177, 355, 271, 278, 190,
	192, 191, 172, 332, 361, 182, 195, 815, 802, 821,
	684, 671, 676, 672, 700, 838, 236, 228, 822, 820,
	376, 144, 327, 326, 714, 235, 805, 145, 136, 313,
	146, 243, 163, 825, 385, 176, 248, 356, 512, 222,
	284, 199, 777, 294, 699, 157, 309, 266, 268, 265,
	269, 225, 140, 147, 801, 311, 329, 360, 178, 345,
	138, 139, 141, 149, 320, 150, 151, 844, 260, 214,
	218, 229, 240, 776, 316, 346, 377, 770, 173, 166,
	348, 370, 183, 328, 331, 384, 799, 168, 833, 816,
	763, 729, 735, 659, 0, 167, 795, 691, 703, 683,
	771, 682, 224, 787, 368, 369, 198, 386, 600, 848,
	169, 666, 847, 281, 289, 280, 850, 364, 834, 764,
	753, 751, 660, 832, 762, 752, 249, 217, 231, 304,
	256, 305, 232, 276, 275, 277, 258, 755, 0, 164,
	0, 343, 842, 859, 347, 180, 677, 809, 359, 143,
	310, 181, 223, 215, 303, 279, 174, 234, 341, 247,
	255, 791, 856, 293, 319, 187, 374, 340, 211, 611,
	286, 623, 617, 619, 618, 615, 616, 614, 613, 612,
	625, 598, 599, 602, 603, 604, 746, 836, 661, 607,
	812, 620, 621, 784, 854, 596, 194, 545, 637, 638,
	639, 546, 640, 641, 547, 548, 642, 643, 644, 645,
	549, 646, 647, 648, 626, 627, 628, 629, 630, 631,
	632, 633, 636, 634, 635, 742, 300, 165, 175, 186,
	204, 202, 216, 244, 267, 272, 298, 330, 335, 350,
	351, 352, 353, 206, 0, 209, 185, 314, 184, 257,
	237, 299, 357, 358, 605, 159, 170, 251, 855, 312,
	221, 649, 656, 675, 678, 679, 680, 681, 685, 690,
	0, 696, 702, 704, 705, 713, 718, 719, 720, 721,
	728, 730, 731, 732, 733, 734, 737, 738, 740, 747,
	748, 754, 759, 760, 766, 767, 0, 790, 793, 610,
	804, 806, 810, 811, 818, 823, 824, 849, 853, 858,
	375, 203, 745, 765, 796, 171, 179, 189, 201, 213,
	220, 230, 233, 238, 239, 241, 245, 259, 261, 262,
	263, 264, 282, 283, 287, 288, 291, 292, 295, 296,
	297, 301, 302, 308, 148, 315, 321, 322, 323, 324,
	325, 333, 334, 336, 337, 344, 366, 367, 380, 381,
	828, 725, 156, 0, 0, 162, 0, 0, 0, 0,
	0, 712, 161, 827, 851, 772, 786, 839, 0, 354,
	601, 843, 686, 709, 852, 715, 717, 780, 662, 757,
	290, 706, 663, 0, 0, 654, 510, 655, 687, 208,
	507, 813, 758, 841, 743, 773, 783, 207, 196, 750,
	749, 830, 698, 697, 778, 826, 840, 0, 0, 609,
	253, 0, 0, 378, 342, 273, 0, 0, 741, 0,
	594, 595, 726, 782, 674, 769, 845, 707, 774, 846,
	77, 0, 0, 0, 508, 533, 532, 535, 536, 537,
	538, 0, 0, 137, 534, 539, 540, 541, 0, 736,
	779, 857, 653, 505, 524, 658, 608, 0, 831, 694,
	695, 212, 0, 0, 0, 0, 0, 0, 0, 739,
	756, 798, 723, 373, 785, 794, 808, 716, 307, 226,
	0, 0, 0, 0, 521, 522, 1884, 0, 0, 0,
	624, 0, 523, 0, 668, 519, 552, 553, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 592, 593, 525, 0,
	0, 0, 673, 651, 692, 800, 652, 650, 274, 665,
	597, 829, 724, 242, 154, 835, 722, 622, 788, 669,
	817, 710, 250, 667, 155, 664, 670, 708, 285, 797,
	803, 606, 158, 252, 814, 688, 701, 197, 0, 318,
	775, 372, 513, 761, 317, 254, 365, 789, 837, 371,
	711, 349, 379, 383, 219, 744, 188, 339, 210, 205,
	693, 807, 657, 227, 306, 200, 246, 727, 781, 689,
	193, 792, 768, 819, 338, 362, 160, 270, 363, 382,
	177, 355, 271, 278, 190, 192, 191, 172, 332, 361,
	182, 195, 815, 802, 821, 684, 671, 676, 672, 700,
	838, 236, 228, 822, 820, 376, 144, 327, 326, 714,
	235, 805, 145, 136, 313, 146, 243, 163, 825, 385,
	176, 248, 356, 512, 222, 284, 199, 777, 294, 699,
	157, 309, 266, 268, 265, 269, 225, 140, 147, 801,
	311, 329, 360, 178, 345, 138, 139, 141, 149, 320,
	150, 151, 844, 260, 214, 218, 229, 240, 776, 316,
	346, 377, 770, 173, 166, 348, 370, 183, 328, 331,
	384, 799, 168, 833, 816, 763, 729, 735, 659, 0,
	167, 795, 691, 703, 683, 771, 682, 224, 787, 368,
	369, 198, 386, 600, 848, 169, 666, 847, 281, 289,
	280, 850, 364, 834, 764, 753, 751, 660, 832, 762,
	752, 249, 217, 231, 304, 256, 305, 232, 276, 275,
	277, 258, 755, 0, 164, 0, 343, 842, 859, 347,
	180, 677, 809, 359, 143, 310, 181, 223, 215, 303,
	279, 174, 234, 341, 247, 255, 791, 856, 293, 319,
	187, 374, 340, 211, 611, 286, 623, 617, 619, 618,
	615, 616, 614, 613, 612, 625, 598, 599, 602, 603,
	604, 746, 836, 661, 607, 812, 620, 621, 784, 854,
	596, 194, 545, 637, 638, 639, 546, 640, 641, 547,
	548, 642, 643, 644, 645, 549, 646, 647, 648, 626,
	627, 628, 629, 630, 631, 632, 633, 636, 634, 635,
	742, 300, 165, 175, 186, 204, 202, 216, 244, 267,
	272, 298, 330, 335, 350, 351, 352, 353, 206, 0,
	209, 185, 314, 184, 257, 237, 299, 357, 358, 605,
	159, 170, 251, 855, 312, 221, 649, 656, 675, 678,
	679, 680, 681, 685, 690, 0, 696, 702, 704, 705,
	713, 718, 719, 720, 721, 728, 730, 731, 732, 733,
	734, 737, 738, 740, 747, 748, 754, 759, 760, 766,
	767, 0, 790, 793, 610, 804, 806, 810, 811, 818,
	823, 824, 849, 853, 858, 375, 203, 745, 765, 796,
	171, 179, 189, 201, 213, 220, 230, 233, 238, 239,
	241, 245, 259, 261, 262, 263, 264, 282, 283, 287,
	288, 291, 292, 295, 296, 297, 301, 302, 308, 148,
	315, 321, 322, 323, 324, 325, 333, 334, 336, 337,
	344, 366, 367, 380, 381, 828, 725, 156, 0, 0,
	162, 0, 0, 0, 0, 0, 712, 161, 827, 851,
	772, 786, 839, 0, 354, 601, 843, 686, 709, 852,
	715, 717, 780, 662, 757, 290, 706, 663, 0, 0,
	654, 510, 655, 687, 208, 507, 813, 758, 841, 743,
	773, 783, 207, 196, 750, 749, 830, 698, 697, 778,
	826, 840, 0, 0, 609, 253, 0, 0, 378, 342,
	273, 0, 0, 741, 0, 594, 595, 726, 782, 674,
	769, 845, 707, 1998, 846, 77, 0, 0, 0, 508,
	533, 532, 535, 536, 537, 538, 0, 0, 137, 534,
	539, 540, 541, 1999, 736, 779, 857, 653, 505, 524,
	658, 608, 0, 831, 694, 695, 212, 0, 0, 0,
	0, 0, 0, 0, 739, 756, 798, 723, 373, 785,
	794, 808, 716, 307, 226, 0, 0, 0, 0, 521,
	522, 0, 0, 0, 0, 624, 0, 523, 0, 668,
	519, 552, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 585, 586, 587, 588, 589, 590,
	591, 592, 593, 525, 0, 0, 0, 673, 651, 692,
	800, 652, 650, 274, 665, 597, 829, 724, 242, 154,
	835, 722, 622, 788, 669, 817, 710, 250, 667, 155,
	664, 670, 708, 285, 797, 803, 606, 158, 252, 814,
	688, 701, 197, 0, 318, 775, 372, 513, 761, 317,
	254, 365, 789, 837, 371, 711, 349, 379, 383, 219,
	744, 188, 339, 210, 205, 693, 807, 657, 227, 306,
	200, 246, 727, 781, 689, 193, 792, 768, 819, 338,
	362, 160, 270, 363, 382, 177, 355, 271, 278, 190,
	192, 191, 172, 332, 361, 182, 195, 815, 802, 821,
	684, 671, 676, 672, 700, 838, 236, 228, 822, 820,
	376, 144, 327, 326, 714, 235, 805, 145, 136, 313,
	146, 243, 163, 825, 385, 176, 248, 356, 512, 222,
	284, 199, 777, 294, 699, 157, 309, 266, 268, 265,
	269, 225, 140, 147, 801, 311, 329, 360, 178, 345,
	138, 139, 141, 149, 320, 150, 151, 844, 260, 214,
	218, 229, 240, 776, 316, 346, 377, 770, 173, 166,
	348, 370, 183, 328, 331, 384, 799, 168, 833, 816,
	763, 729, 735, 659, 0, 167, 795, 691, 703, 683,
	771, 682, 224, 787, 368, 369, 198, 386, 600, 848,
	169, 666, 847, 281, 289, 280, 850, 364, 834, 764,
	753, 751, 660, 832, 762, 752, 249, 217, 231, 304,
	256, 305, 232, 276, 275, 277, 258, 755, 0, 164,
	0, 343, 842, 859, 347, 180, 677, 809, 359, 143,
	310, 181, 223, 215, 303, 279, 174, 234, 341, 247,
	255, 791, 856, 293, 319, 187, 374, 340, 211, 611,
	286, 623, 617, 619, 618, 615, 616, 614, 613, 612,
	625, 598, 599, 602, 603, 604, 746, 836, 661, 607,
	812, 620, 621, 784, 854, 596, 194, 545, 637, 638,
	639, 546, 640, 641, 547, 548, 642, 643, 644, 645,
	549, 646, 647, 648, 626, 627, 628, 629, 630, 631,
	632, 633, 636, 634, 635, 742, 300, 165, 175, 186,
	204, 202, 216, 244, 267, 272, 298, 330, 335, 350,
	351, 352, 353, 206, 0, 209, 185, 314, 184, 257,
	237, 299, 357, 358, 605, 159, 170, 251, 855, 312,
	221, 649, 656, 675, 678, 679, 680, 681, 685, 690,
	0, 696, 702, 704, 705, 713, 718, 719, 720, 721,
	728, 730, 731, 732, 733, 734, 737, 738, 740, 747,
	748, 754, 759, 760, 766, 767, 0, 790, 793, 610,
	804, 806, 810, 811, 818, 823, 824, 849, 853, 858,
	375, 203, 745, 765, 796, 171, 179, 189, 201, 213,
	220, 230, 233, 238, 239, 241, 245, 259, 261, 262,
	263, 264, 282, 283, 287, 288, 291, 292, 295, 296,
	297, 301, 302, 308, 148, 315, 321, 322, 323, 324,
	325, 333, 334, 336, 337, 344, 366, 367, 380, 381,
	828, 725, 156, 0, 0, 162, 0, 0, 0, 0,
	0, 712, 161, 827, 851, 772, 786, 839, 0, 354,
	601, 843, 686, 709, 852, 715, 717, 780, 662, 757,
	290, 706, 663, 0, 0, 654, 899, 655, 687, 208,
	897, 813, 758, 841, 743, 773, 783, 207, 196, 750,
	749, 830, 698, 697, 778, 826, 840, 0, 0, 609,
	253, 0, 0, 378, 342, 273, 0, 0, 741, 0,
	594, 595, 726, 782, 674, 769, 845, 707, 774, 846,
	77, 0, 1147, 0, 508, 533, 532, 535, 536, 537,
	538, 0, 0, 137, 534, 539, 540, 541, 0, 736,
	779, 857, 653, 916, 524, 658, 608, 0, 831, 694,
	695, 212, 0, 0, 0, 0, 0, 0, 0, 739,
	756, 798, 723, 373, 785, 794, 808, 716, 307, 226,
	0, 0, 0, 0, 521, 522, 0, 0, 0, 0,
	624, 0, 523, 0, 668, 519, 552, 553, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 592, 593, 525, 0,
	0, 0, 673, 651, 692, 800, 652, 650, 274, 665,
	597, 829, 724, 242, 154, 835, 722, 622, 788, 669,
	817, 710, 250, 667, 155, 664, 670, 708, 285, 797,
	803, 606, 158, 252, 814, 688, 701, 197, 0, 318,
	775, 372, 513, 761, 317, 254, 365, 789, 837, 371,
	711, 349, 379, 383, 219, 744, 188, 339, 210, 205,
	693, 807, 657, 227, 306, 200, 246, 727, 781, 689,
	193, 792, 768, 819, 338, 362, 160, 270, 363, 382,
	177, 355, 271, 278, 190, 192, 191, 172, 332, 361,
	182, 195, 815, 802, 821, 684, 671, 676, 672, 700,
	838, 236, 228, 822, 820, 376, 144, 327, 326, 714,
	235, 805, 145, 136, 313, 146, 243, 163, 825, 385,
	176, 248, 356, 512, 222, 284, 199, 777, 294, 699,
	157, 309, 266, 268, 265, 269, 225, 140, 147, 801,
	311, 329, 360, 178, 345, 138, 139, 141, 149, 320,
	150, 151, 844, 260, 214, 218, 229, 240, 776, 316,
	346, 377, 770, 173, 166, 348, 370, 183, 328, 331,
	384, 799, 168, 833, 816, 763, 729, 735, 659, 0,
	167, 795, 691, 703, 683, 771, 682, 224, 787, 368,
	369, 198, 386, 600, 848, 169, 666, 847, 281, 289,
	280, 850, 364, 834, 764, 753, 751, 660, 832, 762,
	752, 249, 217, 231, 304, 256, 305, 232, 276, 275,
	277, 258, 755, 0, 164, 0, 343, 842, 859, 347,
	180, 677, 809, 359, 143, 310, 181, 223, 215, 303,
	279, 174, 234, 341, 247, 255, 791, 856, 293, 319,
	187, 374, 340, 211, 611, 286, 623, 617, 619, 618,
	615, 616, 614, 613, 612, 625, 598, 599, 602, 603,
	604, 746, 836, 661, 607, 812, 620, 621, 784, 854,
	596, 194, 545, 637, 638, 639, 546, 640, 641, 547,
	548, 642, 643, 644, 645, 549, 646, 647, 648, 626,
	627, 628, 629, 630, 631, 632, 633, 636, 634, 635,
	742, 300, 165, 175, 186, 204, 202, 216, 244, 267,
	272, 298, 330, 335, 350, 351, 352, 353, 206, 0,
	209, 185, 314, 184, 257, 237, 299, 357, 358, 605,
	159, 170, 251, 855, 312, 221, 649, 656, 675, 678,
	679, 680, 681, 685, 690, 0, 696, 702, 704, 705,
	713, 718, 719, 720, 721, 728, 730, 731, 732, 733,
	734, 737, 738, 740, 747, 748, 754, 759, 760, 766,
	767, 0, 790, 793, 610, 804, 806, 810, 811, 818,
	823, 824, 849, 853, 858, 375, 203, 745, 765, 796,
	171, 179, 189, 201, 213, 220, 230, 233, 238, 239,
	241, 245, 259, 261, 262, 263, 264, 282, 283, 287,
	288, 291, 292, 295, 296, 297, 301, 302, 308, 148,
	315, 321, 322, 323, 324, 325, 333, 334, 336, 337,
	344, 366, 367, 380, 381, 828, 725, 156, 0, 0,
	162, 0, 0, 0, 0, 0, 712, 161, 827, 851,
	772, 786, 839, 0, 354, 601, 843, 686, 709, 852,
	715, 717, 780, 662, 757, 290, 706, 663, 0, 0,
	654, 510, 655, 687, 208, 507, 813, 758, 841, 743,
	773, 783, 207, 196, 750, 749, 830, 698, 697, 778,
	826, 840, 0, 0, 609, 253, 0, 0, 378, 342,
	273, 0, 0, 741, 0, 594, 595, 726, 782, 674,
	769, 845, 707, 774, 846, 77, 0, 0, 0, 508,
	533, 1918, 535, 536, 537, 538, 0, 0, 137, 534,
	539, 540, 541, 0, 736, 779, 857, 653, 505, 524,
	658, 608, 0, 831, 694, 695, 212, 0, 0, 0,
	0, 0, 0, 0, 739, 756, 798, 723, 373, 785,
	794, 808, 716, 307, 226, 0, 0, 0, 0, 521,
	522, 1884, 0, 0, 0, 624, 0, 523, 0, 668,
	519, 552, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 585, 586, 587, 588, 589, 590,
	591, 592, 593, 525, 0, 0, 0, 673, 651, 692,
	800, 652, 650, 274, 665, 597, 829, 724, 242, 154,
	835, 722, 622, 788, 669, 817, 710, 250, 667, 155,
	664, 670, 708, 285, 797, 803, 606, 158, 252, 814,
	688, 701, 197, 0, 318, 775, 372, 513, 761, 317,
	254, 365, 789, 837, 371, 711, 349, 379, 383, 219,
	744, 188, 339, 210, 205, 693, 807, 657, 227, 306,
	200, 246, 727, 781, 689, 193, 792, 768, 819, 338,
	362, 160, 270, 363, 382, 177, 355, 271, 278, 190,
	192, 191, 172, 332, 361, 182, 195, 815, 802, 821,
	684, 671, 676, 672, 700, 838, 236, 228, 822, 820,
	376, 144, 327, 326, 714, 235, 805, 145, 136, 313,
	146, 243, 163, 825, 385, 176, 248, 356, 512, 222,
	284, 199, 777, 294, 699, 157, 309, 266, 268, 265,
	269, 225, 140, 147, 801, 311, 329, 360, 178, 345,
	138, 139, 141, 149, 320, 150, 151, 844, 260, 214,
	218, 229, 240, 776, 316, 346, 377, 770, 173, 166,
	348, 370, 183, 328, 331, 384, 799, 168, 833, 816,
	763, 729, 735, 659, 0, 167, 795, 691, 703, 683,
	771, 682, 224, 787, 368, 369, 198, 386, 600, 848,
	169, 666, 847, 281, 289, 280, 850, 364, 834, 764,
	753, 751, 660, 832, 762, 752, 249, 217, 231, 304,
	256, 305, 232, 276, 275, 277, 258, 755, 0, 164,
	0, 343, 842, 859, 347, 180, 677, 809, 359, 143,
	310, 181, 223, 215, 303, 279, 174, 234, 341, 247,
	255, 791, 856, 293, 319, 187, 374, 340, 211, 611,
	286, 623, 617, 619, 618, 615, 616, 614, 613, 612,
	625, 598, 599, 602, 603, 604, 746, 836, 661, 607,
	812, 620, 621, 784, 854, 596, 194, 545, 637, 638,
	639, 546, 640, 641, 547, 548, 642, 643, 644, 645,
	549, 646, 647, 648, 626, 627, 628, 629, 630, 631,
	632, 633, 636, 634, 635, 742, 300, 165, 175, 186,
	204, 202, 216, 244, 267, 272, 298, 330, 335, 350,
	351, 352, 353, 206, 0, 209, 185, 314, 184, 257,
	237, 299, 357, 358, 605, 159, 170, 251, 855, 312,
	221, 649, 656, 675, 678, 679, 680, 681, 685, 690,
	0, 696, 702, 704, 705, 713, 718, 719, 720, 721,
	728, 730, 731, 732, 733, 734, 737, 738, 740, 747,
	748, 754, 759, 760, 766, 767, 0, 790, 793, 610,
	804, 806, 810, 811, 818, 823, 824, 849, 853, 858,
	375, 203, 745, 765, 796, 171, 179, 189, 201, 213,
	220, 230, 233, 238, 239, 241, 245, 259, 261, 262,
	263, 264, 282, 283, 287, 288, 291, 292, 295, 296,
	297, 301, 302, 308, 148, 315, 321, 322, 323, 324,
	325, 333, 334, 336, 337, 344, 366, 367, 380, 381,
	828, 725, 156, 0, 0, 162, 0, 0, 0, 0,
	0, 712, 161, 827, 851, 772, 786, 839, 0, 354,
	601, 843, 686, 709, 852, 715, 717, 780, 662, 757,
	290, 706, 663, 0, 0, 654, 510, 655, 687, 208,
	507, 813, 758, 841, 743, 773, 783, 207, 196, 750,
	749, 830, 698, 697, 778, 826, 840, 0, 0, 609,
	253, 0, 0, 378, 342, 273, 0, 0, 741, 0,
	594, 595, 726, 782, 674, 769, 845, 707, 774, 846,
	77, 0, 0, 0, 508, 533, 1915, 535, 536, 537,
	538, 0, 0, 137, 534, 539, 540, 541, 0, 736,
	779, 857, 653, 505, 524, 658, 608, 0, 831, 694,
	695, 212, 0, 0, 0, 0, 0, 0, 0, 739,
	756, 798, 723, 373, 785, 794, 808, 716, 307, 226,
	0, 0, 0, 0, 521, 522, 1884, 0, 0, 0,
	624, 0, 523, 0, 668, 519, 552, 553, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 592, 593, 525, 0,
	0, 0, 673, 651, 692, 800, 652, 650, 274, 665,
	597, 829, 724, 242, 154, 835, 722, 622, 788, 669,
	817, 710, 250, 667, 155, 664, 670, 708, 285, 797,
	803, 606, 158, 252, 814, 688, 701, 197, 0, 318,
	775, 372, 513, 761, 317, 254, 365, 789, 837, 371,
	711, 349, 379, 383, 219, 744, 188, 339, 210, 205,
	693, 807, 657, 227, 306, 200, 246, 727, 781, 689,
	193, 792, 768, 819, 338, 362, 160, 270, 363, 382,
	177, 355, 271, 278, 190, 192, 191, 172, 332, 361,
	182, 195, 815, 802, 821, 684, 671, 676, 672, 700,
	838, 236, 228, 822, 820, 376, 144, 327, 326, 714,
	235, 805, 145, 136, 313, 146, 243, 163, 825, 385,
	176, 248, 356, 512, 222, 284, 199, 777, 294, 699,
	157, 309, 266, 268, 265, 269, 225, 140, 147, 801,
	311, 329, 360, 178, 345, 138, 139, 141, 149, 320,
	150, 151, 844, 260, 214, 218, 229, 240, 776, 316,
	346, 377, 770, 173, 166, 348, 370, 183, 328, 331,
	384, 799, 168, 833, 816, 763, 729, 735, 659, 0,
	167, 795, 691, 703, 683, 771, 682, 224, 787, 368,
	369, 198, 386, 600, 848, 169, 666, 847, 281, 289,
	280, 850, 364, 834, 764, 753, 751, 660, 832, 762,
	752, 249, 217, 231, 304, 256, 305, 232, 276, 275,
	277, 258, 755, 0, 164, 0, 343, 842, 859, 347,
	180, 677, 809, 359, 143, 310, 181, 223, 215, 303,
	279, 174, 234, 341, 247, 255, 791, 856, 293, 319,
	187, 374, 340, 211, 611, 286, 623, 617, 619, 618,
	615, 616, 614, 613, 612, 625, 598, 599, 602, 603,
	604, 746, 836, 661, 607, 812, 620, 621, 784, 854,
	596, 194, 545, 637, 638, 639, 546, 640, 641, 547,
	548, 642, 643, 644, 645, 549, 646, 647, 648, 626,
	627, 628, 629, 630, 631, 632, 633, 636, 634, 635,
	742, 300, 165, 175, 186, 204, 202, 216, 244, 267,
	272, 298, 330, 335, 350, 351, 352, 353, 206, 0,
	209, 185, 314, 184, 257, 237, 299, 357, 358, 605,
	159, 170, 251, 855, 312, 221, 649, 656, 675, 678,
	679, 680, 681, 685, 690, 0, 696, 702, 704, 705,
	713, 718, 719, 720, 721, 728, 730, 731, 732, 733,
	734, 737, 738, 740, 747, 748, 754, 759, 760, 766,
	767, 0, 790, 793, 610, 804, 806, 810, 811, 818,
	823, 824, 849, 853, 858, 375, 203, 745, 765, 796,
	171, 179, 189, 201, 213, 220, 230, 233, 238, 239,
	241, 245, 259, 261, 262, 263, 264, 282, 283, 287,
	288, 291, 292, 295, 296, 297, 301, 302, 308, 148,
	315, 321, 322, 323, 324, 325, 333, 334, 336, 337,
	344, 366, 367, 380, 381, 828, 725, 156, 0, 0,
	162, 0, 0, 0, 0, 0, 712, 161, 827, 851,
	772, 786, 839, 36, 354, 601, 843, 686, 709, 852,
	715, 717, 780, 662, 757, 290, 706, 663, 0, 0,
	654, 510, 655, 687, 208, 507, 813, 758, 841, 743,
	773, 783, 207, 196, 750, 749, 830, 698, 697, 778,
	826, 840, 0, 0, 609, 253, 0, 0, 378, 342,
	273, 0, 0, 741, 0, 594, 595, 726, 782, 674,
	769, 845, 707, 774, 846, 77, 0, 0, 0, 508,
	533, 532, 535, 536, 537, 538, 0, 0, 137, 534,
	539, 540, 541, 0, 736, 779, 857, 653, 505, 524,
	658, 608, 0, 831, 694, 695, 212, 0, 0, 0,
	0, 0, 0, 0, 739, 756, 798, 723, 373, 785,
	794, 808, 716, 307, 226, 0, 0, 0, 0, 521,
	522, 0, 0, 0, 0, 624, 0, 523, 0, 668,
	519, 552, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 585, 586, 587, 588, 589, 590,
	591, 592, 593, 525, 0, 0, 0, 673, 651, 692,
	800, 652, 650, 274, 665, 597, 829, 724, 242, 154,
	835, 722, 622, 788, 669, 817, 710, 250, 667, 155,
	664, 670, 708, 285, 797, 803, 606, 158, 252, 814,
	688, 701, 197, 0, 318, 775, 372, 513, 761, 317,
	254, 365, 789, 837, 371, 711, 349, 379, 383, 219,
	744, 188, 339, 210, 205, 693, 807, 657, 227, 306,
	200, 246, 727, 781, 689, 193, 792, 768, 819, 338,
	362, 160, 270, 363, 382, 177, 355, 271, 278, 190,
	192, 191, 172, 332, 361, 182, 195, 815, 802, 821,
	684, 671, 676, 672, 700, 838, 236, 228, 822, 820,
	376, 144, 327, 326, 714, 235, 805, 145, 136, 313,
	146, 243, 163, 825, 385, 176, 248, 356, 512, 222,
	284, 199, 777, 294, 699, 157, 309, 266, 268, 265,
	269, 225, 140, 147, 801, 311, 329, 360, 178, 345,
	138, 139, 141, 149, 320, 150, 151, 844, 260, 214,
	218, 229, 240, 776, 316, 346, 377, 770, 173, 166,
	348, 370, 183, 328, 331, 384, 799, 168, 833, 816,
	763, 729, 735, 659, 0, 167, 795, 691, 703, 683,
	771, 682, 224, 787, 368, 369, 198, 386, 600, 848,
	169, 666, 847, 281, 289, 280, 850, 364, 834, 764,
	753, 751, 660, 832, 762, 752, 249, 217, 231, 304,
	256, 305, 232, 276, 275, 277, 258, 755, 0, 164,
	0, 343, 842, 859, 347, 180, 677, 809, 359, 143,
	310, 181, 223, 215, 303, 279, 174, 234, 341, 247,
	255, 791, 856, 293, 319, 187, 374, 340, 211, 611,
	286, 623, 617, 619, 618, 615, 616, 614, 613, 612,
	625, 598, 599, 602, 603, 604, 746, 836, 661, 607,
	812, 620, 621, 784, 854, 596, 194, 545, 637, 638,
	639, 546, 640, 641, 547, 548, 642, 643, 644, 645,
	549, 646, 647, 648, 626, 627, 628, 629, 630, 631,
	632, 633, 636, 634, 635, 742, 300, 165, 175, 186,
	204, 202, 216, 244, 267, 272, 298, 330, 335, 350,
	351, 352, 353, 206, 0, 209, 185, 314, 184, 257,
	237, 299, 357, 358, 605, 159, 170, 251, 1234, 312,
	221, 649, 656, 675, 678, 679, 680, 681, 685, 690,
	0, 696, 702, 704, 705, 713, 718, 719, 720, 721,
	728, 730, 731, 732, 733, 734, 737, 738, 740, 747,
	748, 754, 759, 760, 766, 767, 0, 790, 793, 610,
	804, 806, 810, 811, 818, 823, 824, 849, 853, 858,
	375, 203, 745, 765, 796, 171, 179, 189, 201, 213,
	220, 230, 233, 238, 239, 241, 245, 259, 261, 262,
	263, 264, 282, 283, 287, 288, 291, 292, 295, 296,
	297, 301, 302, 308, 148, 315, 321, 322, 323, 324,
	325, 333, 334, 336, 337, 344, 366, 367, 380, 381,
	828, 725, 156, 0, 0, 162, 0, 0, 0, 0,
	0, 712, 161, 827, 851, 772, 786, 839, 0, 354,
	601, 843, 686, 709, 852, 715, 717, 780, 662, 757,
	290, 706, 663, 0, 0, 654, 510, 655, 687, 208,
	507, 813, 758, 841, 743, 773, 783, 207, 196, 750,
	749, 830, 698, 697, 778, 826, 840, 0, 0, 609,
	253, 0, 0, 378, 342, 273, 0, 0, 741, 0,
	594, 595, 726, 782, 674, 769, 845, 707, 774, 846,
	77, 0, 1753, 0, 508, 533, 532, 535, 536, 537,
	538, 0, 0, 137, 534, 539, 540, 541, 0, 736,
	779, 857, 653, 505, 524, 658, 608, 0, 831, 694,
	695, 212, 0, 0, 0, 0, 0, 0, 0, 739,
	756, 798, 723, 373, 785, 794, 808, 716, 307, 226,
	0, 0, 0, 0, 521, 522, 0, 0, 0, 0,
	624, 0, 523, 0, 668, 519, 552, 553, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 592, 593, 525, 0,
	0, 0, 673, 651, 692, 800, 652, 650, 274, 665,
	597, 829, 724, 242, 154, 835, 722, 622, 788, 669,
	817, 710, 250, 667, 155, 664, 670, 708, 285, 797,
	803, 606, 158, 252, 814, 688, 701, 197, 0, 318,
	775, 372, 513, 761, 317, 254, 365, 789, 837, 371,
	711, 349, 379, 383, 219, 744, 188, 339, 210, 205,
	693, 807, 657, 227, 306, 200, 246, 727, 781, 689,
	193, 792, 768, 819, 338, 362, 160, 270, 363, 382,
	177, 355, 271, 278, 190, 192, 191, 172, 332, 361,
	182, 195, 815, 802, 821, 684, 671, 676, 672, 700,
	838, 236, 228, 822, 820, 376, 144, 327, 326, 714,
	235, 805, 145, 136, 313, 146, 243, 163, 825, 385,
	176, 248, 356, 512, 222, 284, 199, 777, 294, 699,
	157, 309, 266, 268, 265, 269, 225, 140, 147, 801,
	311, 329, 360, 178, 345, 138, 139, 141, 149, 320,
	150, 151, 844, 260, 214, 218, 229, 240, 776, 316,
	346, 377, 770, 173, 166, 348, 370, 183, 328, 331,
	384, 799, 168, 833, 816, 763, 729, 735, 659, 0,
	167, 795, 691, 703, 683, 771, 682, 224, 787, 368,
	369, 198, 386, 600, 848, 169, 666, 847, 281, 289,
	280, 850, 364, 834, 764, 753, 751, 660, 832, 762,
	752, 249, 217, 231, 304, 256, 305, 232, 276, 275,
	277, 258, 755, 0, 164, 0, 343, 842, 859, 347,
	180, 677, 809, 359, 143, 310, 181, 223, 215, 303,
	279, 174, 234, 341, 247, 255, 791, 856, 293, 319,
	187, 374, 340, 211, 611, 286, 623, 617, 619, 618,
	615, 616, 614, 613, 612, 625, 598, 599, 602, 603,
	604, 746, 836, 661, 607, 812, 620, 621, 784, 854,
	596, 194, 545, 637, 638, 639, 546, 640, 641, 547,
	548, 642, 643, 644, 645, 549, 646, 647, 648, 626,
	627, 628, 629, 630, 631, 632, 633, 636, 634, 635,
	742, 300, 165, 175, 186, 204, 202, 216, 244, 267,
	272, 298, 330, 335, 350, 351, 352, 353, 206, 0,
	209, 185, 314, 184, 257, 237, 299, 357, 358, 605,
	159, 170, 251, 855, 312, 221, 649, 656, 675, 678,
	679, 680, 681, 685, 690, 0, 696, 702, 704, 705,
	713, 718, 719, 720, 721, 728, 730, 731, 732, 733,
	734, 737, 738, 740, 747, 748, 754, 759, 760, 766,
	767, 0, 790, 793, 610, 804, 806, 810, 811, 818,
	823, 824, 849, 853, 858, 375, 203, 745, 765, 796,
	171, 179, 189, 201, 213, 220, 230, 233, 238, 239,
	241, 245, 259, 261, 262, 263, 264, 282, 283, 287,
	288, 291, 292, 295, 296, 297, 301, 302, 308, 148,
	315, 321, 322, 323, 324, 325, 333, 334, 336, 337,
	344, 366, 367, 380, 381, 828, 725, 156, 0, 0,
	162, 0, 0, 0, 0, 0, 712, 161, 827, 851,
	772, 786, 839, 0, 354, 601, 843, 686, 709, 852,
	715, 717, 780, 662, 757, 290, 706, 663, 0, 0,
	654, 899, 655, 687, 208, 897, 813, 758, 841, 743,
	773, 783, 207, 196, 750, 749, 830, 698, 697, 778,
	826, 840, 0, 0, 609, 253, 0, 0, 378, 342,
	273, 0, 0, 741, 0, 594, 595, 726, 782, 674,
	769, 845, 707, 774, 846, 77, 0, 0, 0, 508,
	533, 532, 535, 536, 537, 538, 0, 0, 137, 534,
	539, 540, 541, 0, 736, 779, 857, 653, 916, 524,
	658, 608, 0, 831, 694, 695, 212, 0, 0, 0,
	0, 0, 0, 0, 739, 756, 798, 723, 373, 785,
	794, 808, 716, 307, 226, 0, 0, 0, 0, 521,
	522, 0, 0, 0, 0, 624, 0, 523, 0, 668,
	519, 552, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 585, 586, 587, 588, 589, 590,
	591, 592, 593, 525, 0, 0, 0, 673, 651, 692,
	800, 652, 650, 274, 665, 597, 829, 724, 242, 154,
	835, 722, 622, 788, 669, 817, 710, 250, 667, 155,
	664, 670, 708, 285, 797, 803, 606, 158, 252, 814,
	688, 701, 197, 0, 318, 775, 372, 513, 761, 317,
	254, 365, 789, 837, 371, 711, 349, 379, 383, 219,
	744, 188, 339, 210, 205, 693, 807, 657, 227, 306,
	200, 246, 727, 781, 689, 193, 792, 768, 819, 338,
	362, 160, 270, 363, 382, 177, 355, 271, 278, 190,
	192, 191, 172, 332, 361, 182, 195, 815, 802, 821,
	684, 671, 676, 672, 700, 838, 236, 228, 822, 820,
	376, 144, 327, 326, 714, 235, 805, 145, 136, 313,
	146, 243, 163, 825, 385, 176, 248, 356, 512, 222,
	284, 199, 777, 294, 699, 157, 309, 266, 268, 265,
	269, 225, 140, 147, 801, 311, 329, 360, 178, 345,
	138, 139, 141, 149, 320, 150, 151, 844, 260, 214,
	218, 229, 240, 776, 316, 346, 377, 770, 173, 166,
	348, 370, 183, 328, 331, 384, 799, 168, 833, 816,
	763, 729, 735, 659, 0, 167, 795, 691, 703, 683,
	771, 682, 224, 787, 368, 369, 198, 386, 600, 848,
	169, 666, 847, 281, 289, 280, 850, 364, 834, 764,
	753, 751, 660, 832, 762, 752, 249, 217, 231, 304,
	256, 305, 232, 276, 275, 277, 258, 755, 0, 164,
	0, 343, 842, 859, 347, 180, 677, 809, 359, 143,
	310, 181, 223, 215, 303, 279, 174, 234, 341, 247,
	255, 791, 856, 293, 319, 187, 374, 340, 211, 611,
	286, 623, 617, 619, 618, 615, 616, 614, 613, 612,
	625, 598, 599, 602, 603, 604, 746, 836, 661, 607,
	812, 620, 621, 784, 854, 596, 194, 545, 637, 638,
	639, 546, 640, 641, 547, 548, 642, 643, 644, 645,
	549, 646, 647, 648, 626, 627, 628, 629, 630, 631,
	632, 633, 636, 634, 635, 742, 300, 165, 175, 186,
	204, 202, 216, 244, 267, 272, 298, 330, 335, 350,
	351, 352, 353, 206, 0, 209, 185, 314, 184, 257,
	237, 299, 357, 358, 605, 159, 170, 251, 855, 312,
	221, 649, 656, 675, 678, 679, 680, 681, 685, 690,
	0, 696, 702, 704, 705, 713, 718, 719, 720, 721,
	728, 730, 731, 732, 733, 734, 737, 738, 740, 747,
	748, 754, 759, 760, 766, 767, 0, 790, 793, 610,
	804, 806, 810, 811, 818, 823, 824, 849, 853, 858,
	375, 203, 745, 765, 796, 171, 179, 189, 201, 213,
	220, 230, 233, 238, 239, 241, 245, 259, 261, 262,
	263, 264, 282, 283, 287, 288, 291, 292, 295, 296,
	297, 301, 302, 308, 148, 315, 321, 322, 323, 324,
	325, 333, 334, 336, 337, 344, 366, 367, 380, 381,
	828, 725, 156, 0, 0, 162, 0, 0, 0, 0,
	0, 712, 161, 827, 851, 772, 786, 839, 0, 354,
	601, 843, 686, 709, 852, 715, 717, 780, 662, 757,
	290, 706, 663, 0, 0, 654, 510, 655, 687, 208,
	507, 813, 758, 841, 743, 773, 783, 207, 196, 750,
	749, 830, 698, 697, 778, 826, 840, 0, 0, 609,
	253, 0, 0, 378, 342, 273, 0, 0, 741, 0,
	594, 595, 726, 782, 674, 769, 845, 707, 774, 846,
	77, 0, 0, 0, 508, 533, 532, 535, 536, 537,
	538, 0, 0, 137, 534, 539, 540, 541, 0, 736,
	779, 857, 653, 505, 524, 658, 608, 0, 831, 694,
	695, 212, 0, 0, 0, 0, 0, 0, 0, 739,
	756, 798, 723, 373, 785, 794, 808, 716, 307, 226,
	0, 0, 0, 0, 521, 522, 0, 0, 0, 0,
	624, 0, 523, 0, 668, 519, 552, 553, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 592, 593, 525, 0,
	0, 0, 673, 651, 692, 800, 652, 650, 274, 665,
	597, 829, 724, 242, 154, 835, 722, 622, 788, 669,
	817, 710, 250, 667, 155, 664, 670, 708, 285, 797,
	803, 606, 158, 252, 814, 688, 701, 197, 0, 318,
	775, 372, 513, 761, 317, 254, 365, 789, 837, 371,
	711, 349, 379, 383, 219, 744, 188, 339, 210, 205,
	693, 807, 657, 227, 306, 200, 246, 727, 781, 689,
	193, 792, 768, 819, 338, 362, 160, 270, 363, 382,
	177, 355, 271, 278, 190, 192, 191, 172, 332, 361,
	182, 195, 815, 802, 821, 684, 671, 676, 672, 700,
	838, 236, 228, 822, 820, 376, 144, 327, 326, 714,
	235, 805, 145, 136, 313, 146, 243, 163, 825, 385,
	176, 248, 356, 512, 222, 284, 199, 777, 294, 699,
	157, 309, 266, 268, 265, 269, 225, 140, 147, 801,
	311, 329, 360, 178, 345, 138, 139, 141, 149, 320,
	150, 151, 844, 260, 214, 218, 229, 240, 776, 316,
	346, 377, 770, 173, 166, 348, 370, 183, 328, 331,
	384, 799, 168, 833, 816, 763, 729, 735, 659, 0,
	167, 795, 691, 703, 683, 771, 682, 224, 787, 368,
	369, 198, 386, 600, 848, 169, 666, 847, 281, 289,
	280, 850, 364, 834, 764, 753, 751, 660, 832, 762,
	752, 249, 217, 231, 304, 256, 305, 232, 276, 275,
	277, 258, 755, 0, 164, 0, 343, 842, 859, 347,
	180, 677, 809, 359, 143, 310, 181, 223, 215, 303,
	279, 174, 234, 341, 247, 255, 791, 856, 293, 319,
	187, 374, 340, 211, 611, 286, 623, 617, 619, 618,
	615, 616, 614, 613, 612, 625, 598, 599, 602, 603,
	604, 746, 836, 661, 607, 812, 620, 621, 784, 854,
	596, 194, 545, 637, 638, 639, 546, 640, 641, 547,
	548, 642, 643, 644, 645, 549, 646, 647, 648, 626,
	627, 628, 629, 630, 631, 632, 633, 636, 634, 635,
	742, 300, 165, 175, 186, 204, 202, 216, 244, 267,
	272, 298, 330, 335, 350, 351, 352, 353, 206, 0,
	209, 185, 314, 184, 257, 237, 299, 357, 358, 605,
	159, 170, 251, 855, 312, 221, 649, 656, 675, 678,
	679, 680, 681, 685, 690, 0, 696, 702, 704, 705,
	713, 718, 719, 720, 721, 728, 730, 731, 732, 733,
	734, 737, 738, 740, 747, 748, 754, 759, 760, 766,
	767, 0, 790, 793, 610, 804, 806, 810, 811, 818,
	823, 824, 849, 853, 858, 375, 203, 745, 765, 796,
	171, 179, 189, 201, 213, 220, 230, 233, 238, 239,
	241, 245, 259, 261, 262, 263, 264, 282, 283, 287,
	288, 291, 292, 295, 296, 297, 301, 302, 308, 148,
	315, 321, 322, 323, 324, 325, 333, 334, 336, 337,
	344, 366, 367, 380, 381, 828, 725, 156, 0, 0,
	162, 0, 0, 0, 0, 0, 712, 161, 827, 851,
	772, 786, 839, 0, 354, 601, 843, 686, 709, 852,
	715, 717, 780, 662, 757, 290, 706, 663, 0, 0,
	654, 899, 655, 687, 208, 897, 813, 758, 841, 743,
	773, 783, 207, 196, 750, 749, 830, 698, 697, 778,
	826, 840, 0, 0, 609, 253, 0, 0, 378, 342,
	273, 0, 0, 741, 0, 594, 595, 726, 782, 674,
	769, 845, 707, 774, 846, 77, 0, 0, 0, 508,
	533, 532, 535, 536, 537, 538, 0, 0, 137, 534,
	539, 540, 541, 0, 736, 779, 857, 653, 916, 524,
	658, 608, 0, 831, 694, 695, 212, 0, 0, 0,
	0, 0, 0, 0, 739, 756, 798, 723, 373, 785,
	794, 808, 716, 307, 226, 0, 0, 0, 0, 521,
	522, 0, 0, 0, 0, 624, 0, 523, 0, 668,
	519, 552, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 585, 586, 587, 588, 589, 590,
	591, 592, 593, 525, 0, 0, 0, 673, 651, 692,
	800, 652, 650, 274, 665, 597, 829, 724, 242, 154,
	835, 722, 622, 788, 669, 817, 710, 250, 667, 155,
	664, 670, 708, 285, 797, 803, 606, 158, 252, 814,
	688, 701, 197, 0, 318, 775, 372, 513, 3575, 317,
	254, 365, 789, 837, 371, 711, 349, 379, 383, 219,
	744, 188, 339, 210, 205, 693, 807, 657, 227, 306,
	200, 246, 727, 781, 689, 193, 792, 768, 819, 338,
	362, 160, 270, 363, 382, 177, 355, 271, 278, 190,
	192, 191, 172, 332, 361, 182, 195, 815, 802, 821,
	684, 671, 676, 672, 700, 838, 236, 228, 822, 820,
	376, 144, 327, 326, 714, 235, 805, 145, 136, 313,
	146, 243, 163, 825, 385, 176, 248, 356, 512, 222,
	284, 199, 777, 294, 699, 157, 309, 266, 268, 265,
	269, 225, 140, 147, 801, 311, 329, 360, 178, 345,
	138, 139, 141, 149, 320, 150, 151, 844, 260, 214,
	218, 229, 240, 776, 316, 346, 377, 770, 173, 166,
	348, 370, 183, 328, 331, 384, 799, 168, 833, 816,
	763, 729, 735, 659, 0, 167, 795, 691, 703, 683,
	771, 682, 224, 787, 368, 369, 198, 386, 600, 848,
	169, 666, 847, 281, 289, 280, 850, 364, 834, 764,
	753, 751, 660, 832, 762, 752, 249, 217, 231, 304,
	256, 305, 232, 276, 275, 277, 258, 755, 0, 164,
	0, 343, 842, 859, 347, 180, 677, 809, 359, 143,
	310, 181, 223, 215, 303, 279, 174, 234, 341, 247,
	255, 791, 856, 293, 319, 187, 374, 340, 211, 611,
	286, 623, 617, 619, 618, 615, 616, 614, 613, 612,
	625, 598, 599, 602, 603, 604, 746, 836, 661, 607,
	812, 620, 621, 784, 854, 596, 194, 545, 637, 638,
	639, 546, 640, 641, 547, 548, 642, 643, 644, 645,
	549, 646, 647, 648, 626, 627, 628, 629, 630, 631,
	632, 633, 636, 634, 635, 742, 300, 165, 175, 186,
	204, 202, 216, 244, 267, 272, 298, 330, 335, 350,
	351, 352, 353, 206, 0, 209, 185, 314, 184, 257,
	237, 299, 357, 358, 605, 159, 170, 251, 855, 312,
	221, 649, 656, 675, 678, 679, 680, 681, 685, 690,
	0, 696, 702, 704, 705, 713, 718, 719, 720, 721,
	728, 730, 731, 732, 733, 734, 737, 738, 740, 747,
	748, 754, 759, 760, 766, 767, 0, 790, 793, 610,
	804, 806, 810, 811, 818, 823, 824, 849, 853, 858,
	375, 203, 745, 765, 796, 171, 179, 189, 201, 213,
	220, 230, 233, 238, 239, 241, 245, 259, 261, 262,
	263, 264, 282, 283, 287, 288, 291, 292, 295, 296,
	297, 301, 302, 308, 148, 315, 321, 322, 323, 324,
	325, 333, 334, 336, 337, 344, 366, 367, 380, 381,
	828, 725, 156, 0, 0, 162, 0, 0, 0, 0,
	0, 712, 161, 827, 851, 772, 786, 839, 0, 354,
	601, 843, 686, 709, 852, 715, 717, 780, 662, 757,
	290, 706, 663, 0, 0, 654, 899, 655, 687, 208,
	897, 813, 758, 841, 743, 773, 783, 207, 196, 750,
	749, 830, 698, 697, 778, 826, 840, 0, 0, 609,
	253, 0, 0, 378, 342, 273, 0, 0, 741, 0,
	594, 595, 726, 782, 674, 769, 845, 707, 774, 846,
	77, 0, 0, 0, 508, 533, 532, 535, 536, 537,
	538, 0, 0, 137, 534, 539, 540, 541, 0, 736,
	779, 857, 653, 916, 524, 658, 608, 0, 831, 694,
	695, 212, 0, 0, 0, 0, 0, 0, 0, 739,
	756, 798, 723, 373, 785, 794, 808, 716, 307, 226,
	0, 0, 0, 0, 521, 522, 0, 0, 0, 0,
	624, 0, 523, 0, 668, 519, 552, 553, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 592, 593, 525, 0,
	0, 0, 673, 651, 692, 800, 652, 650, 274, 665,
	597, 829, 724, 242, 154, 835, 722, 622, 788, 669,
	817, 710, 250, 667, 155, 664, 670, 708, 285, 797,
	803, 606, 158, 252, 814, 688, 701, 197, 0, 318,
	775, 372, 513, 761, 317, 254, 365, 789, 837, 371,
	711, 349, 379, 383, 219, 744, 188, 339, 210, 205,
	693, 807, 657, 227, 306, 200, 246, 727, 781, 689,
	193, 792, 768, 819, 338, 362, 160, 270, 363, 382,
	177, 355, 271, 278, 190, 192, 191, 172, 332, 361,
	182, 195, 815, 802, 821, 684, 671, 676, 672, 700,
	838, 236, 228, 822, 820, 376, 144, 327, 326, 714,
	235, 805, 145, 136, 313, 146, 243, 163, 825, 385,
	176, 248, 356, 512, 222, 284, 199, 777, 294, 699,
	157, 309, 266, 268, 265, 269, 225, 140, 147, 801,
	311, 329, 360, 178, 345, 138, 139, 141, 149, 320,
	150, 151, 844, 260, 214, 218, 229, 240, 776, 316,
	346, 377, 770, 173, 166, 348, 370, 183, 328, 331,
	384, 799, 168, 833, 816, 763, 729, 735, 659, 0,
	167, 795, 691, 703, 683, 771, 682, 224, 787, 368,
	369, 198, 386, 600, 848, 169, 666, 847, 281, 289,
	280, 850, 364, 834, 764, 753, 751, 660, 832, 762,
	752, 249, 217, 231, 304, 256, 305, 232, 276, 275,
	277, 258, 755, 0, 164, 0, 343, 842, 859, 347,
	180, 677, 809, 359, 143, 310, 181, 223, 215, 303,
	279, 174, 234, 341, 247, 255, 791, 856, 293, 319,
	187, 374, 340, 211, 611, 286, 623, 617, 619, 618,
	615, 616, 614, 613, 612, 625, 598, 599, 602, 603,
	604, 1921, 1922, 1923, 607, 812, 620, 621, 784, 854,
	596, 194, 545, 637, 638, 639, 546, 640, 641, 547,
	548, 642, 643, 644, 645, 549, 646, 647, 648, 626,
	627, 628, 629, 630, 631, 632, 633, 636, 634, 635,
	742, 300, 165, 175, 186, 204, 202, 216, 244, 267,
	272, 298, 330, 335, 350, 351, 352, 353, 206, 0,
	209, 185, 314, 184, 257, 237, 299, 357, 358, 605,
	159, 170, 251, 855, 312, 221, 649, 656, 675, 678,
	679, 680, 681, 685, 690, 0, 696, 702, 704, 705,
	713, 718, 719, 720, 721, 728, 730, 731, 732, 733,
	734, 737, 738, 740, 747, 748, 754, 759, 760, 766,
	767, 0, 790, 793, 610, 804, 806, 810, 811, 818,
	823, 824, 849, 853, 858, 375, 203, 745, 765, 796,
	171, 179, 189, 201, 213, 220, 230, 233, 238, 239,
	241, 245, 259, 261, 262, 263, 264, 282, 283, 287,
	288, 291, 292, 295, 296, 297, 301, 302, 308, 148,
	315, 321, 322, 323, 324, 325, 333, 334, 336, 337,
	344, 366, 367, 380, 381, 828, 725, 156, 0, 0,
	162, 0, 0, 0, 0, 0, 712, 161, 827, 851,
	772, 786, 1684, 2842, 354, 1539, 1688, 1489, 1518, 1705,
	1524, 1527, 1608, 1455, 1577, 290, 1515, 1456, 1439, 1494,
	1443, 1506, 1444, 1491, 208, 1487, 1649, 1580, 1686, 1559,
	1601, 1611, 207, 196, 1569, 1568, 1674, 1504, 1503, 1606,
	1663, 1685, 1558, 0, 1695, 253, 1660, 959, 378, 342,
	273, 962, 961, 1554, 1669, 1575, 1638, 1537, 1610, 1471,
	1593, 1690, 1516, 1602, 1691, 77, 0, 1147, 0, 955,
	0, 0, 0, 0, 0, 0, 0, 0, 137, 0,
	1598, 1682, 1509, 960, 1549, 1607, 1710, 1442, 1594, 0,
	1447, 1458, 1704, 1675, 1500, 1501, 212, 0, 0, 0,
	0, 0, 0, 0, 1552, 1576, 1628, 1534, 373, 1613,
	1623, 1641, 1526, 307, 226, 0, 0, 0, 0, 0,
	0, 0, 0, 1496, 0, 1591, 0, 0, 0, 1463,
	1449, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1548, 0, 0, 0, 1470, 1440, 1498,
	1630, 1441, 1438, 274, 1459, 1643, 1673, 1535, 242, 154,
	1679, 1533, 1532, 1617, 1464, 1653, 1519, 250, 1462, 155,
	1457, 1465, 1517, 285, 1627, 1635, 142, 158, 252, 1650,
	1492, 1508, 197, 1810, 318, 1603, 372, 958, 1584, 317,
	254, 365, 1618, 1681, 371, 1520, 349, 379, 383, 219,
	1560, 188, 339, 210, 205, 1499, 1640, 1446, 227, 306,
	200, 246, 1538, 1609, 1493, 193, 1621, 1592, 1655, 338,
	362, 160, 270, 363, 382, 177, 355, 271, 278, 190,
	192, 191, 172, 332, 361, 182, 195, 1651, 1634, 1657,
	1486, 1466, 1477, 1467, 1507, 1683, 236, 228, 1658, 1656,
	376, 144, 327, 326, 1523, 235, 1637, 145, 136, 313,
	146, 243, 163, 1662, 385, 176, 248, 356, 957, 222,
	284, 199, 1605, 294, 1505, 157, 309, 266, 268, 265,
	269, 225, 140, 147, 1633, 311, 329, 360, 178, 345,
	138, 139, 141, 149, 320, 150, 151, 1689, 260, 214,
	218, 229, 240, 1604, 316, 346, 377, 1595, 173, 166,
	348, 370, 183, 328, 331, 384, 1629, 168, 1677, 1652,
	1586, 1541, 1547, 1448, 0, 167, 1625, 1497, 1512, 1485,
	1599, 1484, 224, 1616, 368, 369, 198, 386, 1460, 1697,
	169, 1461, 1696, 281, 289, 280, 1700, 364, 1678, 1587,
	1572, 1570, 1453, 1676, 1585, 1571, 249, 217, 231, 304,
	256, 305, 232, 276, 275, 277, 258, 1574, 0, 164,
	0, 343, 1687, 1712, 347, 180, 1479, 1644, 359, 143,
	310, 181, 223, 215, 303, 279, 174, 234, 341, 247,
	255, 1620, 1709, 293, 319, 187, 374, 340, 211, 1475,
	286, 1478, 1473, 1476, 1474, 1578, 1579, 1692, 1693, 1694,
	1632, 1468, 0, 1670, 1671, 0, 1565, 1680, 1454, 0,
	1648, 152, 153, 1612, 1707, 1525, 194, 131, 1450, 1451,
	1452, 132, 1555, 1556, 133, 134, 1666, 1665, 1664, 1667,
	135, 1701, 1699, 1702, 1469, 1490, 1511, 1561, 1562, 1564,
	1596, 1597, 1642, 1615, 1624, 1557, 300, 165, 175, 186,
	204, 202, 216, 244, 267, 272, 298, 330, 335, 350,
	351, 352, 353, 206, 0, 209, 185, 314, 184, 257,
	237, 299, 357, 358, 1583, 159, 170, 251, 2843, 312,
	221, 1437, 1445, 1472, 1480, 1481, 1482, 1483, 1488, 1495,
	0, 1502, 1510, 1513, 1514, 1522, 1528, 1529, 1530, 1531,
	1540, 1542, 1543, 1544, 1545, 1546, 1550, 1551, 1553, 1566,
	1567, 1573, 1581, 1582, 1589, 1590, 0, 1619, 1622, 1631,
	1636, 1639, 1645, 1647, 1654, 1659, 1661, 1698, 1706, 1711,
	375, 203, 1563, 1588, 1626, 171, 179, 189, 201, 213,
	220, 230, 233, 238, 239, 241, 245, 259, 261, 262,
	263, 264, 282, 283, 287, 288, 291, 292, 295, 296,
	297, 301, 302, 308, 148, 315, 321, 322, 323, 324,
	325, 333, 334, 336, 337, 344, 366, 367, 380, 381,
	1672, 1536, 156, 0, 0, 162, 0, 0, 0, 0,
	0, 1521, 161, 1668, 1703, 1600, 1614, 1684, 1646, 354,
	1539, 1688, 1489, 1518, 1705, 1524, 1527, 1608, 1455, 1577,
	290, 1515, 1456, 1439, 1494, 1443, 1506, 1444, 1491, 208,
	1487, 1649, 1580, 1686, 1559, 1601, 1611, 207, 196, 1569,
	1568, 1674, 1504, 1503, 1606, 1663, 1685, 1558, 0, 1695,
	253, 1660, 959, 378, 342, 273, 962, 961, 1554, 1669,
	1575, 1638, 1537, 1610, 1471, 1593, 1690, 1516, 1602, 1691,
	0, 0, 0, 0, 955, 0, 0, 0, 0, 0,
	0, 0, 0, 137, 0, 1598, 1682, 1509, 960, 1549,
	1607, 1710, 1442, 1594, 0, 1447, 1458, 1704, 1675, 1500,
	1501, 212, 0, 0, 0, 0, 0, 0, 0, 1552,
	1576, 1628, 1534, 373, 1613, 1623, 1641, 1526, 307, 226,
	0, 0, 0, 0, 0, 0, 0, 0, 1496, 0,
	1591, 0, 0, 0, 1463, 1449, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1548, 0,
	0, 0, 1470, 1440, 1498, 1630, 1441, 1438, 274, 1459,
	1643, 1673, 1535, 242, 154, 1679, 1533, 1532, 1617, 1464,
	1653, 1519, 250, 1462, 155, 1457, 1465, 1517, 285, 1627,
	1635, 142, 158, 252, 1650, 1492, 1508, 197, 1810, 318,
	1603, 372, 958, 1584, 317, 254, 365, 1618, 1681, 371,
	1520, 349, 379, 383, 219, 1560, 188, 339, 210, 205,
	1499, 1640, 1446, 227, 306, 200, 246, 1538, 1609, 1493,
	193, 1621, 1592, 1655, 338, 362, 160, 270, 363, 382,
	177, 355, 271, 278, 190, 192, 191, 172, 332, 361,
	182, 195, 1651, 1634, 1657, 1486, 1466, 1477, 1467, 1507,
	1683, 236, 228, 1658, 1656, 376, 144, 327, 326, 1523,
	235, 1637, 145, 136, 313, 146, 243, 163, 1662, 385,
	176, 248, 356, 957, 222, 284, 199, 1605, 294, 1505,
	157, 309, 266, 268, 265, 269, 225, 140, 147, 1633,
	311, 329, 360, 178, 345, 138, 139, 141, 149, 320,
	150, 151, 1689, 260, 214, 218, 229, 240, 1604, 316,
	346, 377, 1595, 173, 166, 348, 370, 183, 328, 331,
	384, 1629, 168, 1677, 1652, 1586, 1541, 1547, 1448, 0,
	167, 1625, 1497, 1512, 1485, 1599, 1484, 224, 1616, 368,
	369, 198, 386, 1460, 1697, 169, 1461, 1696, 281, 289,
	280, 1700, 364, 1678, 1587, 1572, 1570, 1453, 1676, 1585,
	1571, 249, 217, 231, 304, 256, 305, 232, 276, 275,
	277, 258, 1574, 0, 164, 0, 343, 1687, 1712, 347,
	180, 1479, 1644, 359, 143, 310, 181, 223, 215, 303,
	279, 174, 234, 341, 247, 255, 1620, 1709, 293, 319,
	187, 374, 340, 211, 1475, 286, 1478, 1473, 1476, 1474,
	1578, 1579, 1692, 1693, 1694, 1632, 1468, 0, 1670, 1671,
	0, 1565, 1680, 1454, 0, 1648, 152, 153, 1612, 1707,
	1525, 194, 131, 1450, 1451, 1452, 132, 1555, 1556, 133,
	134, 1666, 1665, 1664, 1667, 135, 1701, 1699, 1702, 1469,
	1490, 1511, 1561, 1562, 1564, 1596, 1597, 1642, 1615, 1624,
	1557, 300, 165, 175, 186, 204, 202, 216, 244, 267,
	272, 298, 330, 335, 350, 351, 352, 353, 206, 0,
	209, 185, 314, 184, 257, 237, 299, 357, 358, 1583,
	159, 170, 251, 1708, 312, 221, 1437, 1445, 1472, 1480,
	1481, 1482, 1483, 1488, 1495, 0, 1502, 1510, 1513, 1514,
	1522, 1528, 1529, 1530, 1531, 1540, 1542, 1543, 1544, 1545,
	1546, 1550, 1551, 1553, 1566, 1567, 1573, 1581, 1582, 1589,
	1590, 0, 1619, 1622, 1631, 1636, 1639, 1645, 1647, 1654,
	1659, 1661, 1698, 1706, 1711, 375, 203, 1563, 1588, 1626,
	171, 179, 189, 201, 213, 220, 230, 233, 238, 239,
	241, 245, 259, 261, 262, 263, 264, 282, 283, 287,
	288, 291, 292, 295, 296, 297, 301, 302, 308, 148,
	315, 321, 322, 323, 324, 325, 333, 334, 336, 337,
	344, 366, 367, 380, 381, 1672, 1536, 156, 0, 0,
	162, 0, 0, 0, 0, 0, 1521, 161, 1668, 1703,
	1600, 1614, 1684, 1646, 354, 1539, 1688, 1489, 1518, 1705,
	1524, 1527, 1608, 1455, 1577, 290, 1515, 1456, 1439, 1494,
	1443, 1506, 1444, 1491, 208, 1487, 1649, 1580, 1686, 1559,
	1601, 1611, 207, 196, 1569, 1568, 1674, 1504, 1503, 1606,
	1663, 1685, 1558, 0, 1695, 253, 1660, 0, 378, 342,
	273, 0, 0, 1554, 1669, 1575, 1638, 1537, 1610, 1471,
	1593, 1690, 1516, 1602, 1691, 0, 0, 0, 0, 508,
	0, 0, 0, 0, 0, 0, 0, 0, 137, 0,
	1598, 1682, 1509, 0, 1549, 1607, 1710, 1442, 1594, 0,
	1447, 1458, 1704, 1675, 1500, 1501, 212, 0, 0, 0,
	0, 0, 0, 0, 1552, 1576, 1628, 1534, 373, 1613,
	1623, 1641, 1526, 307, 226, 0, 0, 0, 0, 0,
	0, 2511, 0, 1496, 0, 1591, 0, 0, 0, 1463,
	1449, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1548, 0, 0, 0, 1470, 1440, 1498,
	1630, 1441, 1438, 274, 1459, 1643, 1673, 1535, 242, 154,
	1679, 1533, 1532, 1617, 1464, 1653, 1519, 250, 1462, 155,
	1457, 1465, 1517, 285, 1627, 1635, 142, 158, 252, 1650,
	1492, 1508, 197, 0, 318, 1603, 372, 1851, 1584, 317,
	254, 365, 1618, 1681, 371, 1520, 349, 379, 383, 219,
	1560, 188, 339, 210, 205, 1499, 1640, 1446, 227, 306,
	200, 246, 1538, 1609, 1493, 193, 1621, 1592, 1655, 338,
	362, 160, 270, 363, 382, 177, 355, 271, 278, 190,
	192, 191, 172, 332, 361, 182, 195, 1651, 1634, 1657,
	1486, 1466, 1477, 1467, 1507, 1683, 236, 228, 1658, 1656,
	376, 144, 327, 326, 1523, 235, 1637, 145, 136, 313,
	146, 243, 163, 1662, 385, 176, 248, 356, 1850, 222,
	284, 199, 1605, 294, 1505, 157, 309, 266, 268, 265,
	269, 225, 140, 147, 1633, 311, 329, 360, 178, 345,
	138, 139, 141, 149, 320, 150, 151, 1689, 260, 214,
	218, 229, 240, 1604, 316, 346, 377, 1595, 173, 166,
	348, 370, 183, 328, 331, 384, 1629, 168, 1677, 1652,
	1586, 1541, 1547, 1448, 0, 167, 1625, 1497, 1512, 1485,
	1599, 1484, 224, 1616, 368, 369, 198, 386, 1460, 1697,
	169, 1461, 1696, 281, 289, 280, 1700, 364, 1678, 1587,
	1572, 1570, 1453, 1676, 1585, 1571, 249, 217, 231, 304,
	256, 305, 232, 276, 275, 277, 258, 1574, 0, 164,
	0, 343, 1687, 1712, 347, 180, 1479, 1644, 359, 143,
	310, 181, 223, 215, 303, 279, 174, 234, 341, 247,
	255, 1620, 1709, 293, 319, 187, 374, 340, 211, 1475,
	286, 1478, 1473, 1476, 1474, 1578, 1579, 1692, 1693, 1694,
	1632, 1468, 0, 1670, 1671, 0, 1565, 1680, 1454, 0,
	1648, 152, 153, 1612, 1707, 1525, 194, 131, 1450, 1451,
	1452, 132, 1555, 1556, 133, 134, 1666, 1665, 1664, 1667,
	135, 1701, 1699, 1702, 1469, 1490, 1511, 1561, 1562, 1564,
	1596, 1597, 1642, 1615, 1624, 1557, 300, 165, 175, 186,
	204, 202, 216, 244, 267, 272, 298, 330, 335, 350,
	351, 352, 353, 206, 0, 209, 185, 314, 184, 257,
	237, 299, 357, 358, 1583, 159, 170, 251, 1708, 312,
	221, 1437, 1445, 1472, 1480, 1481, 1482, 1483, 1488, 1495,
	0, 1502, 1510, 1513, 1514, 1522, 1528, 1529, 1530, 1531,
	1540, 1542, 1543, 1544, 1545, 1546, 1550, 1551, 1553, 1566,
	1567, 1573, 1581, 1582, 1589, 1590, 0, 1619, 1622, 1631,
	1636, 1639, 1645, 1647, 1654, 1659, 1661, 1698, 1706, 1711,
	375, 203, 1563, 1588, 1626, 171, 179, 189, 201, 213,
	220, 230, 233, 238, 239, 241, 245, 259, 261, 262,
	263, 264, 282, 283, 287, 288, 291, 292, 295, 296,
	297, 301, 302, 308, 148, 315, 321, 322, 323, 324,
	325, 333, 334, 336, 337, 344, 366, 367, 380, 381,
	1672, 1536, 156, 0, 0, 162, 0, 0, 0, 0,
	0, 1521, 161, 1668, 1703, 1600, 1614, 1684, 1646, 354,
	1539, 1688, 1489, 1518, 1705, 1524, 1527, 1608, 1455, 1577,
	290, 1515, 1456, 1439, 1494, 1443, 1506, 1444, 1491, 208,
	1487, 1649, 1580, 1686, 1559, 1601, 1611, 207, 196, 1569,
	1568, 1674, 1504, 1503, 1606, 1663, 1685, 1558, 0, 1695,
	253, 1660, 0, 378, 342, 273, 0, 0, 1554, 1669,
	1575, 1638, 1537, 1610, 1471, 1593, 1690, 1516, 1602, 1691,
	0, 0, 0, 0, 508, 0, 0, 0, 0, 0,
	0, 0, 0, 137, 0, 1598, 1682, 1509, 0, 1549,
	1607, 1710, 1442, 1594, 0, 1447, 1458, 1704, 1675, 1500,
	1501, 212, 0, 0, 0, 0, 0, 0, 0, 1552,
	1576, 1628, 1534, 373, 1613, 1623, 1641, 1526, 307, 226,
	0, 0, 0, 0, 0, 0, 1845, 0, 1496, 0,
	1591, 0, 0, 0, 1463, 1449, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1548, 0,
	0, 0, 1470, 1440, 1498, 1630, 1441, 1438, 274, 1459,
	1643, 1673, 1535, 242, 154, 1679, 1533, 1532, 1617, 1464,
	1653, 1519, 250, 1462, 155, 1457, 1465, 1517, 285, 1627,
	1635, 142, 158, 252, 1650, 1492, 1508, 197, 0, 318,
	1603, 372, 1851, 1584, 317, 254, 365, 1618, 1681, 371,
	1520, 349, 379, 383, 219, 1560, 188, 339, 210, 205,
	1499, 1640, 1446, 227, 306, 200, 246, 1538, 1609, 1493,
	193, 1621, 1592, 1655, 338, 362, 160, 270, 363, 382,
	177, 355, 271, 278, 190, 192, 191, 172, 332, 361,
	182, 195, 1651, 1634, 1657, 1486, 1466, 1477, 1467, 1507,
	1683, 236, 228, 1658, 1656, 376, 144, 327, 326, 1523,
	235, 1637, 145, 136, 313, 146, 243, 163, 1662, 385,
	176, 248, 356, 1850, 222, 284, 199, 1605, 294, 1505,
	157, 309, 266, 268, 265, 269, 225, 140, 147, 1633,
	311, 329, 360, 178, 345, 138, 139, 141, 149, 320,
	150, 151, 1689, 260, 214, 218, 229, 240, 1604, 316,
	346, 377, 1595, 173, 166, 348, 370, 183, 328, 331,
	384, 1629, 168, 1677, 1652, 1586, 1541, 1547, 1448, 0,
	167, 1625, 1497, 1512, 1485, 1599, 1484, 224, 1616, 368,
	369, 198, 386, 1460, 1697, 169, 1461, 1696, 281, 289,
	280, 1700, 364, 1678, 1587, 1572, 1570, 1453, 1676, 1585,
	1571, 249, 217, 231, 304, 256, 305, 232, 276, 275,
	277, 258, 1574, 0, 164, 0, 343, 1687, 1712, 347,
	180, 1479, 1644, 359, 143, 310, 181, 223, 215, 303,
	279, 174, 234, 341, 247, 255, 1620, 1709, 293, 319,
	187, 374, 340, 211, 1475, 286, 1478, 1473, 1476, 1474,
	1578, 1579, 1692, 1693, 1694, 1632, 1468, 0, 1670, 1671,
	0, 1565, 1680, 1454, 0, 1648, 152, 153, 1612, 1707,
	1525, 194, 131, 1450, 1451, 1452, 132, 1555, 1556, 133,
	134, 1666, 1665, 1664, 1667, 135, 1701, 1699, 1702, 1469,
	1490, 1511, 1561, 1562, 1564, 1596, 1597, 1642, 1615, 1624,
	1557, 300, 165, 175, 186, 204, 202, 216, 244, 267,
	272, 298, 330, 335, 350, 351, 352, 353, 206, 0,
	209, 185, 314, 184, 257, 237, 299, 357, 358, 1583,
	159, 170, 251, 1708, 312, 221, 1437, 1445, 1472, 1480,
	1481, 1482, 1483, 1488, 1495, 0, 1502, 1510, 1513, 1514,
	1522, 1528, 1529, 1530, 1531, 1540, 1542, 1543, 1544, 1545,
	1546, 1550, 1551, 1553, 1566, 1567, 1573, 1581, 1582, 1589,
	1590, 0, 1619, 1622, 1631, 1636, 1639, 1645, 1647, 1654,
	1659, 1661, 1698, 1706, 1711, 375, 203, 1563, 1588, 1626,
	171, 179, 189, 201, 213, 220, 230, 233, 238, 239,
	241, 245, 259, 261, 262, 263, 264, 282, 283, 287,
	288, 291, 292, 295, 296, 297, 301, 302, 308, 148,
	315, 321, 322, 323, 324, 325, 333, 334, 336, 337,
	344, 366, 367, 380, 381, 1672, 1536, 156, 0, 0,
	162, 0, 0, 0, 0, 0, 1521, 161, 1668, 1703,
	1600, 1614, 1684, 1646, 354, 1539, 1688, 1489, 1518, 1705,
	1524, 1527, 1608, 1455, 1577, 290, 1515, 1456, 1439, 1494,
	1443, 1506, 1444, 1491, 208, 1487, 1649, 1580, 1686, 1559,
	1601, 1611, 207, 196, 1569, 1568, 1674, 1504, 1503, 1606,
	1663, 1685, 1558, 0, 1695, 253, 1660, 0, 378, 342,
	273, 0, 0, 1554, 1669, 1575, 1638, 1537, 1610, 1471,
	1593, 1690, 1516, 1602, 1691, 0, 0, 0, 0, 508,
	0, 0, 0, 0, 0, 0, 0, 0, 137, 0,
	1598, 1682, 1509, 0, 1549, 1607, 1710, 1442, 1594, 0,
	1447, 1458, 1704, 1675, 1500, 1501, 212, 0, 0, 0,
	0, 0, 0, 0, 1552, 1576, 1628, 1534, 373, 1613,
	1623, 1641, 1526, 307, 226, 0, 0, 0, 0, 0,
	0, 0, 0, 1496, 0, 1591, 0, 0, 0, 1463,
	1449, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1548, 0, 0, 0, 1470, 1440, 1498,
	1630, 1441, 1438, 274, 1459, 1643, 1673, 1535, 242, 154,
	1679, 1533, 1532, 1617, 1464, 1653, 1519, 250, 1462, 155,
	1457, 1465, 1517, 285, 1627, 1635, 142, 158, 252, 1650,
	1492, 1508, 197, 0, 318, 1603, 372, 1851, 1584, 317,
	254, 365, 1618, 1681, 371, 1520, 349, 379, 383, 219,
	1560, 188, 339, 210, 205, 1499, 1640, 1446, 227, 306,
	200, 246, 1538, 1609, 1493, 193, 1621, 1592, 1655, 338,
	362, 160, 270, 363, 382, 177, 355, 271, 278, 190,
	192, 191, 172, 332, 361, 182, 195, 1651, 1634, 1657,
	1486, 1466, 1477, 1467, 1507, 1683, 236, 228, 1658, 1656,
	376, 144, 327, 326, 1523, 235, 1637, 145, 136, 313,
	146, 243, 163, 1662, 385, 176, 248, 356, 1850, 222,
	284, 199, 1605, 294, 1505, 157, 309, 266, 268, 265,
	269, 225, 140, 147, 1633, 311, 329, 360, 178, 345,
	138, 139, 141, 149, 320, 150, 151, 1689, 260, 214,
	218, 229, 240, 1604, 316, 346, 377, 1595, 173, 166,
	348, 370, 183, 328, 331, 384, 1629, 168, 1677, 1652,
	1586, 1541, 1547, 1448, 0, 167, 1625, 1497, 1512, 1485,
	1599, 1484, 224, 1616, 368, 369, 198, 386, 1460, 1697,
	169, 1461, 1696, 281, 289, 280, 1700, 364, 1678, 1587,
	1572, 1570, 1453, 1676, 1585, 1571, 249, 217, 231, 304,
	256, 305, 232, 276, 275, 277, 258, 1574, 0, 164,
	0, 343, 1687, 1712, 347, 180, 1479, 1644, 359, 143,
	310, 181, 223, 215, 303, 279, 174, 234, 341, 247,
	255, 1620, 1709, 293, 319, 187, 374, 340, 211, 1475,
	286, 1478, 1473, 1476, 1474, 1578, 1579, 1692, 1693, 1694,
	1632, 1468, 0, 1670, 1671, 0, 1565, 1680, 1454, 0,
	1648, 152, 153, 1612, 1707, 1525, 194, 131, 1450, 1451,
	1452, 132, 1555, 1556, 133, 134, 1666, 1665, 1664, 1667,
	135, 1701, 1699, 1702, 1469, 1490, 1511, 1561, 1562, 1564,
	1596, 1597, 1642, 1615, 1624, 1557, 300, 165, 175, 186,
	204, 202, 216, 244, 267, 272, 298, 330, 335, 350,
	351, 352, 353, 206, 0, 209, 185, 314, 184, 257,
	237, 299, 357, 358, 1583, 159, 170, 251, 1708, 312,
	221, 1437, 1445, 1472, 1480, 1481, 1482, 1483, 1488, 1495,
	0, 1502, 1510, 1513, 1514, 1522, 1528, 1529, 1530, 1531,
	1540, 1542, 1543, 1544, 1545, 1546, 1550, 1551, 1553, 1566,
	1567, 1573, 1581, 1582, 1589, 1590, 0, 1619, 1622, 1631,
	1636, 1639, 1645, 1647, 1654, 1659, 1661, 1698, 1706, 1711,
	375, 203, 1563, 1588, 1626, 171, 179, 189, 201, 213,
	220, 230, 233, 238, 239, 241, 245, 259, 261, 262,
	263, 264, 282, 283, 287, 288, 291, 292, 295, 296,
	297, 301, 302, 308, 148, 315, 321, 322, 323, 324,
	325, 333, 334, 336, 337, 344, 366, 367, 380, 381,
	1672, 1536, 156, 0, 0, 162, 0, 0, 0, 0,
	0, 1521, 161, 1668, 1703, 1600, 1614, 839, 0, 354,
	904, 843, 686, 709, 852, 715, 717, 780, 662, 757,
	290, 706, 663, 0, 0, 654, 899, 655, 687, 208,
	897, 813, 758, 841, 743, 773, 783, 207, 196, 750,
	749, 830, 698, 697, 778, 826, 840, 0, 0, 937,
	253, 0, 959, 378, 342, 273, 962, 961, 741, 0,
	911, 924, 726, 782, 674, 769, 845, 707, 774, 846,
	0, 0, 0, 0, 508, 0, 0, 0, 0, 0,
	0, 0, 0, 137, 0, 919, 933, 900, 960, 736,
	779, 857, 653, 916, 0, 658, 888, 0, 831, 694,
	695, 212, 0, 0, 0, 0, 0, 0, 0, 739,
	756, 798, 723, 373, 785, 794, 808, 716, 307, 226,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	915, 0, 0, 0, 668, 884, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 905, 0,
	0, 0, 673, 651, 692, 800, 652, 650, 274, 665,
	926, 829, 724, 242, 154, 835, 722, 903, 788, 669,
	817, 710, 250, 667, 155, 664, 670, 708, 285, 797,
	803, 142, 158, 252, 814, 688, 701, 197, 2580, 318,
	775, 372, 2582, 761, 317, 254, 365, 789, 837, 371,
	711, 349, 379, 383, 219, 744, 188, 339, 210, 205,
	693, 807, 657, 227, 306, 200, 246, 727, 781, 689,
	193, 792, 768, 819, 338, 362, 160, 270, 363, 382,
	177, 355, 271, 278, 190, 192, 191, 172, 332, 361,
	182, 195, 815, 802, 821, 684, 671, 676, 672, 700,
	838, 236, 228, 822, 820, 376, 144, 327, 326, 714,
	235, 805, 145, 136, 313, 146, 243, 163, 825, 385,
	176, 248, 356, 2581, 222, 284, 199, 777, 294, 699,
	157, 309, 266, 268, 265, 269, 225, 140, 147, 801,
	311, 329, 360, 178, 345, 138, 139, 141, 149, 320,
	150, 151, 844, 260, 214, 218, 229, 240, 776, 316,
	346, 377, 770, 173, 166, 348, 370, 183, 328, 331,
	384, 799, 168, 833, 816, 763, 729, 735, 659, 0,
	167, 795, 691, 703, 683, 771, 682, 224, 787, 368,
	369, 198, 386, 889, 848, 169, 666, 847, 281, 289,
	280, 850, 364, 834, 764, 753, 751, 660, 832, 762,
	752, 249, 217, 231, 304, 256, 305, 232, 276, 275,
	277, 258, 755, 0, 164, 0, 343, 842, 859, 347,
	180, 677, 809, 359, 143, 310, 181, 223, 215, 303,
	279, 174, 234, 341, 247, 255, 791, 856, 293, 319,
	187, 374, 340, 211, 894, 286, 896, 892, 895, 893,
	912, 913, 934, 935, 936, 923, 890, 0, 931, 932,
	0, 746, 836, 661, 0, 812, 152, 153, 784, 854,
	902, 194, 131, 885, 886, 887, 132, 906, 907, 133,
	134, 929, 928, 927, 930, 135, 939, 938, 940, 891,
	898, 901, 908, 909, 910, 917, 918, 925, 920, 921,
	742, 300, 165, 175, 186, 204, 202, 216, 244, 267,
	272, 298, 330, 335, 350, 351, 352, 353, 206, 0,
	209, 185, 314, 184, 257, 237, 299, 357, 358, 914,
	159, 170, 251, 855, 312, 221, 649, 656, 675, 678,
	679, 680, 681, 685, 690, 0, 696, 702, 704, 705,
	713, 718, 719, 720, 721, 728, 730, 731, 732, 733,
	734, 737, 738, 740, 747, 748, 754, 759, 760, 766,
	767, 0, 790, 793, 922, 804, 806, 810, 811, 818,
	823, 824, 849, 853, 858, 375, 203, 745, 765, 796,
	171, 179, 189, 201, 213, 220, 230, 233, 238, 239,
	241, 245, 259, 261, 262, 263, 264, 282, 283, 287,
	288, 291, 292, 295, 296, 297, 301, 302, 308, 148,
	315, 321, 322, 323, 324, 325, 333, 334, 336, 337,
	344, 366, 367, 380, 381, 828, 725, 156, 0, 0,
	162, 0, 0, 0, 0, 0, 712, 161, 827, 851,
	772, 786, 839, 0, 354, 904, 843, 686, 709, 852,
	715, 717, 780, 662, 757, 290, 706, 663, 0, 0,
	654, 899, 655, 687, 208, 897, 813, 758, 841, 743,
	773, 783, 207, 196, 750, 749, 830, 698, 697, 778,
	826, 840, 0, 0, 937, 253, 0, 0, 378, 342,
	273, 0, 0, 741, 0, 911, 924, 726, 782, 674,
	769, 845, 707, 774, 846, 0, 0, 0, 0, 508,
	0, 0, 0, 0, 0, 0, 0, 0, 137, 0,
	919, 933, 900, 0, 736, 779, 857, 653, 916, 0,
	658, 888, 0, 831, 694, 695, 212, 0, 0, 0,
	0, 0, 0, 0, 739, 756, 798, 723, 373, 785,
	794, 808, 716, 307, 226, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 915, 0, 0, 0, 668,
	884, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 905, 0, 0, 0, 673, 651, 692,
	800, 652, 650, 274, 665, 926, 829, 724, 242, 154,
	835, 722, 903, 788, 669, 817, 710, 250, 667, 155,
	664, 670, 708, 285, 797, 803, 142, 158, 252, 814,
	688, 701, 197, 0, 318, 775, 372, 883, 761, 317,
	254, 365, 789, 837, 371, 711, 349, 379, 383, 219,
	744, 188, 339, 210, 205, 693, 807, 657, 227, 306,
	200, 246, 727, 781, 689, 193, 792, 768, 819, 338,
	362, 160, 270, 363, 382, 177, 355, 271, 278, 190,
	192, 191, 172, 332, 361, 182, 195, 815, 802, 821,
	684, 671, 676, 672, 700, 838, 236, 228, 822, 820,
	376, 144, 327, 326, 714, 235, 805, 145, 136, 313,
	146, 243, 163, 825, 385, 176, 248, 356, 882, 222,
	284, 199, 777, 294, 699, 157, 309, 266, 268, 265,
	269, 225, 140, 147, 801, 311, 329, 360, 178, 345,
	138, 139, 141, 149, 320, 150, 151, 844, 260, 214,
	218, 229, 240, 776, 316, 346, 377, 770, 173, 166,
	348, 370, 183, 328, 331, 384, 799, 168, 833, 816,
	763, 729, 735, 659, 0, 167, 795, 691, 703, 683,
	771, 682, 224, 787, 368, 369, 198, 386, 889, 848,
	169, 666, 847, 281, 289, 280, 850, 364, 834, 764,
	753, 751, 660, 832, 762, 752, 249, 217, 231, 304,
	256, 305, 232, 276, 275, 277, 258, 755, 0, 164,
	0, 343, 842, 859, 347, 180, 677, 809, 359, 143,
	310, 181, 223, 215, 303, 279, 174, 234, 341, 247,
	255, 791, 856, 293, 319, 187, 374, 340, 211, 894,
	286, 896, 892, 895, 893, 912, 913, 934, 935, 936,
	923, 890, 0, 931, 932, 0, 746, 836, 661, 0,
	812, 152, 153, 784, 854, 902, 194, 131, 885, 886,
	887, 132, 906, 907, 133, 134, 929, 928, 927, 930,
	135, 939, 938, 940, 891, 898, 901, 908, 909, 910,
	917, 918, 925, 920, 921, 742, 300, 165, 175, 186,
	204, 202, 216, 244, 267, 272, 298, 330, 335, 350,
	351, 352, 353, 206, 0, 209, 185, 314, 184, 257,
	237, 299, 357, 358, 914, 159, 170, 251, 855, 312,
	221, 649, 656, 675, 678, 679, 680, 681, 685, 690,
	0, 696, 702, 704, 705, 713, 718, 719, 720, 721,
	728, 730, 731, 732, 733, 734, 737, 738, 740, 747,
	748, 754, 759, 760, 766, 767, 0, 790, 793, 922,
	804, 806, 810, 811, 818, 823, 824, 849, 853, 858,
	375, 203, 745, 765, 796, 171, 179, 189, 201, 213,
	220, 230, 233, 238, 239, 241, 245, 259, 261, 262,
	263, 264, 282, 283, 287, 288, 291, 292, 295, 296,
	297, 301, 302, 308, 148, 315, 321, 322, 323, 324,
	325, 333, 334, 336, 337, 344, 366, 367, 380, 381,
	828, 725, 156, 0, 0, 162, 0, 0, 0, 0,
	0, 712, 161, 827, 851, 772, 786, 839, 0, 354,
	904, 843, 686, 709, 852, 715, 717, 780, 662, 757,
	290, 706, 663, 0, 0, 654, 899, 655, 687, 208,
	897, 813, 758, 841, 743, 773, 783, 207, 196, 750,
	749, 830, 698, 697, 778, 826, 840, 0, 0, 937,
	253, 0, 0, 378, 342, 273, 0, 0, 741, 0,
	911, 924, 726, 782, 674, 769, 845, 707, 774, 846,
	0, 0, 0, 0, 508, 0, 0, 0, 0, 0,
	0, 0, 0, 137, 0, 919, 933, 900, 0, 736,
	779, 857, 653, 916, 0, 658, 888, 0, 831, 694,
	695, 212, 0, 0, 0, 0, 0, 0, 0, 739,
	756, 798, 723, 373, 785, 794, 808, 716, 307, 226,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	915, 0, 0, 0, 668, 884, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 905, 0,
	0, 0, 673, 651, 692, 800, 652, 650, 274, 665,
	926, 829, 724, 242, 154, 835, 722, 903, 788, 669,
	817, 710, 250, 667, 155, 664, 670, 708, 285, 797,
	803, 142, 158, 252, 814, 688, 701, 197, 0, 318,
	775, 372, 883, 761, 317, 254, 365, 789, 837, 371,
	711, 349, 379, 383, 219, 744, 188, 339, 210, 205,
	693, 807, 657, 227, 306, 200, 246, 727, 781, 689,
	193, 792, 768, 819, 338, 362, 160, 270, 363, 382,
	177, 355, 271, 278, 190, 192, 191, 172, 332, 361,
	182, 195, 815, 802, 821, 684, 671, 676, 672, 700,
	838, 236, 228, 822, 820, 376, 144, 327, 326, 714,
	235, 805, 145, 136, 313, 146, 243, 163, 825, 385,
	176, 248, 356, 882, 222, 284, 199, 777, 294, 699,
	157, 309, 266, 268, 265, 269, 225, 140, 147, 801,
	311, 329, 360, 178, 345, 138, 139, 141, 149, 320,
	150, 151, 844, 260, 214, 218, 229, 240, 776, 316,
	346, 377, 770, 173, 166, 348, 370, 183, 328, 331,
	384, 799, 168, 833, 816, 763, 729, 735, 659, 0,
	167, 795, 691, 703, 683, 771, 682, 224, 787, 368,
	369, 198, 386, 889, 848, 169, 877, 847, 281, 289,
	280, 850, 364, 834, 764, 753, 751, 660, 832, 762,
	752, 249, 217, 231, 304, 256, 305, 232, 276, 275,
	277, 873, 755, 0, 164, 0, 343, 842, 859, 347,
	180, 677, 809, 359, 143, 310, 181, 223, 215, 303,
	878, 876, 867, 868, 247, 255, 791, 856, 293, 319,
	187, 374, 340, 211, 894, 286, 896, 892, 895, 893,
	912, 913, 934, 935, 936, 923, 890, 0, 931, 932,
	0, 746, 836, 661, 0, 812, 152, 153, 784, 854,
	902, 194, 131, 885, 886, 887, 132, 906, 907, 133,
	134, 929, 928, 927, 930, 135, 939, 938, 940, 891,
	898, 901, 908, 909, 910, 917, 918, 925, 920, 921,
	742, 300, 165, 175, 186, 204, 202, 216, 244, 267,
	272, 298, 330, 335, 350, 351, 352, 353, 206, 0,
	209, 185, 314, 184, 257, 237, 299, 357, 358, 914,
	159, 170, 251, 855, 312, 221, 649, 656, 675, 678,
	679, 680, 681, 685, 690, 0, 696, 702, 704, 705,
	713, 718, 719, 720, 721, 728, 730, 731, 732, 733,
	734, 737, 738, 740, 747, 748, 754, 759, 760, 766,
	767, 0, 790, 793, 922, 804, 806, 810, 811, 818,
	823, 824, 849, 853, 858, 375, 203, 745, 765, 796,
	171, 179, 189, 201, 213, 220, 230, 233, 238, 239,
	241, 245, 259, 261, 262, 263, 264, 282, 283, 287,
	288, 291, 292, 295, 296, 297, 874, 875, 308, 148,
	315, 321, 322, 323, 324, 325, 333, 334, 336, 337,
	344, 366, 367, 380, 381, 828, 725, 156, 0, 0,
	162, 0, 0, 0, 0, 0, 712, 161, 827, 851,
	772, 786, 839, 0, 354, 904, 843, 686, 709, 852,
	715, 717, 780, 662, 757, 290, 706, 663, 0, 0,
	654, 899, 655, 687, 208, 897, 813, 758, 841, 743,
	773, 783, 207, 196, 750, 749, 830, 698, 697, 778,
	826, 840, 0, 0, 937, 253, 0, 0, 378, 342,
	273, 0, 0, 741, 0, 911, 924, 726, 782, 674,
	769, 845, 707, 774, 846, 0, 0, 0, 0, 508,
	0, 0, 0, 0, 0, 0, 0, 0, 137, 0,
	919, 933, 900, 0, 736, 779, 857, 653, 916, 0,
	658, 888, 0, 831, 694, 695, 212, 0, 0, 0,
	0, 0, 0, 0, 739, 756, 798, 723, 373, 785,
	794, 808, 716, 307, 226, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 915, 0, 0, 0, 668,
	884, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 905, 0, 0, 0, 673, 651, 692,
	800, 652, 650, 274, 665, 926, 829, 724, 242, 154,
	835, 722, 903, 788, 669, 817, 710, 250, 667, 155,
	664, 670, 708, 285, 797, 803, 142, 158, 252, 814,
	688, 701, 197, 0, 318, 775, 372, 883, 761, 317,
	254, 365, 789, 837, 371, 711, 349, 379, 383, 219,
	744, 188, 339, 210, 205, 693, 807, 657, 227, 306,
	200, 246, 727, 781, 689, 193, 792, 768, 819, 338,
	362, 160, 270, 363, 382, 177, 355, 271, 278, 190,
	192, 191, 172, 332, 361, 182, 195, 815, 802, 821,
	684, 671, 676, 672, 700, 838, 236, 228, 822, 820,
	376, 144, 327, 326, 714, 235, 805, 145, 136, 313,
	146, 243, 163, 825, 385, 176, 248, 356, 882, 222,
	284, 199, 777, 294, 699, 157, 309, 266, 268, 265,
	269, 225, 140, 147, 801, 311, 329, 360, 178, 345,
	138, 139, 141, 149, 320, 150, 151, 844, 260, 214,
	218, 229, 240, 776, 316, 346, 377, 770, 173, 166,
	348, 1312, 183, 328, 331, 384, 799, 168, 833, 816,
	763, 729, 735, 659, 0, 167, 795, 691, 703, 683,
	771, 682, 224, 787, 368, 369, 198, 386, 889, 848,
	169, 666, 847, 281, 289, 280, 850, 364, 834, 764,
	753, 751, 660, 832, 762, 752, 249, 217, 231, 304,
	256, 305, 232, 276, 275, 277, 258, 755, 0, 164,
	0, 343, 842, 859, 347, 180, 677, 809, 359, 143,
	310, 181, 223, 215, 303, 279, 174, 234, 341, 247,
	255, 791, 856, 293, 319, 187, 374, 340, 211, 894,
	286, 896, 892, 895, 893, 912, 913, 934, 935, 936,
	923, 890, 0, 931, 932, 0, 746, 836, 661, 0,
	812, 152, 153, 784, 854, 902, 194, 131, 885, 886,
	887, 132, 906, 907, 133, 134, 929, 928, 927, 930,
	135, 939, 938, 940, 891, 898, 901, 908, 909, 910,
	917, 918, 925, 920, 921, 742, 300, 165, 175, 186,
	204, 202, 216, 244, 267, 272, 298, 330, 335, 350,
	351, 352, 353, 206, 0, 209, 185, 314, 184, 257,
	237, 299, 357, 358, 914, 159, 170, 251, 855, 312,
	221, 649, 656, 675, 678, 679, 680, 681, 685, 690,
	0, 696, 702, 704, 705, 713, 718, 719, 720, 721,
	728, 730, 731, 732, 733, 734, 737, 738, 740, 747,
	748, 754, 759, 760, 766, 767, 0, 790, 793, 922,
	804, 806, 810, 811, 818, 823, 824, 849, 853, 858,
	375, 203, 745, 765, 796, 171, 179, 189, 201, 213,
	220, 230, 233, 238, 239, 241, 245, 259, 261, 262,
	263, 264, 282, 283, 287, 288, 291, 292, 295, 296,
	297, 301, 302, 308, 148, 315, 321, 322, 323, 324,
	325, 333, 334, 336, 337, 344, 366, 367, 380, 381,
	828, 725, 156, 0, 0, 162, 0, 0, 0, 0,
	0, 712, 161, 827, 851, 772, 786, 839, 0, 354,
	904, 843, 686, 709, 852, 715, 717, 780, 662, 757,
	290, 706, 663, 0, 0, 654, 899, 655, 687, 208,
	897, 813, 758, 841, 743, 773, 783, 207, 196, 750,
	749, 830, 698, 697, 778, 826, 840, 0, 0, 937,
	253, 0, 0, 378, 342, 273, 0, 0, 741, 0,
	911, 924, 726, 782, 674, 769, 845, 707, 774, 846,
	0, 0, 0, 0, 508, 0, 0, 0, 0, 0,
	0, 0, 0, 137, 0, 919, 933, 900, 0, 736,
	779, 857, 653, 916, 0, 658, 888, 0, 831, 694,
	695, 212, 0, 0, 0, 0, 0, 0, 0, 739,
	756, 798, 723, 373, 785, 794, 808, 716, 307, 226,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	915, 0, 0, 0, 668, 884, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 905, 0,
	0, 0, 673, 651, 692, 800, 652, 650, 274, 665,
	926, 829, 724, 242, 154, 835, 722, 903, 788, 669,
	817, 710, 250, 667, 155, 664, 670, 708, 285, 797,
	803, 142, 158, 252, 814, 688, 701, 197, 0, 318,
	775, 372, 883, 761, 317, 254, 365, 789, 837, 371,
	711, 349, 379, 383, 219, 744, 188, 339, 210, 205,
	693, 807, 657, 227, 306, 200, 246, 727, 781, 689,
	193, 792, 768, 819, 338, 362, 160, 270, 363, 382,
	177, 355, 271, 278, 190, 192, 191, 172, 332, 361,
	182, 195, 815, 802, 821, 684, 671, 676, 672, 700,
	838, 236, 228, 822, 820, 376, 144, 327, 326, 714,
	235, 805, 145, 136, 313, 146, 243, 163, 825, 385,
	176, 248, 356, 882, 222, 284, 199, 777, 294, 699,
	157, 309, 266, 268, 265, 269, 225, 140, 147, 801,
	311, 329, 360, 178, 345, 138, 139, 141, 149, 320,
	150, 151, 844, 260, 214, 218, 229, 240, 776, 316,
	346, 377, 770, 173, 166, 348, 864, 183, 328, 331,
	384, 799, 168, 833, 816, 763, 729, 735, 659, 0,
	167, 795, 691, 703, 683, 771, 682, 224, 787, 368,
	369, 198, 386, 889, 848, 169, 877, 847, 281, 289,
	280, 850, 364, 834, 764, 753, 751, 660, 832, 762,
	752, 249, 217, 231, 304, 256, 305, 232, 276, 275,
	277, 873, 755, 0, 164, 0, 343, 842, 859, 347,
	180, 677, 809, 359, 143, 310, 181, 223, 215, 303,
	878, 876, 867, 868, 247, 255, 791, 856, 293, 319,
	187, 374, 340, 211, 894, 286, 896, 892, 895, 893,
	912, 913, 934, 935, 936, 923, 890, 0, 931, 932,
	0, 746, 836, 661, 0, 812, 152, 153, 784, 854,
	902, 194, 131, 885, 886, 887, 132, 906, 907, 133,
	134, 929, 928, 927, 930, 135, 939, 938, 940, 891,
	898, 901, 908, 909, 910, 917, 918, 925, 920, 921,
	742, 300, 165, 175, 186, 204, 202, 216, 244, 267,
	272, 298, 330, 335, 350, 351, 352, 353, 206, 0,
	209, 185, 314, 184, 257, 237, 299, 357, 358, 914,
	159, 170, 251, 855, 312, 221, 649, 656, 675, 678,
	679, 680, 681, 685, 690, 0, 696, 702, 704, 705,
	713, 718, 719, 720, 721, 728, 730, 731, 732, 733,
	734, 737, 738, 740, 747, 748, 754, 759, 760, 766,
	767, 0, 790, 793, 922, 804, 806, 810, 811, 818,
	823, 824, 849, 853, 858, 375, 203, 745, 765, 796,
	171, 179, 189, 201, 213, 220, 230, 233, 238, 239,
	241, 245, 259, 261, 262, 263, 264, 282, 283, 287,
	288, 291, 292, 295, 296, 297, 874, 875, 308, 148,
	315, 321, 322, 323, 324, 325, 333, 334, 336, 337,
	344, 366, 367, 380, 381, 828, 725, 156, 0, 0,
	162, 0, 0, 0, 0, 0, 712, 161, 827, 851,
	772, 786, 1684, 1646, 354, 1539, 1688, 1489, 1518, 1705,
	1524, 1527, 1608, 1455, 1577, 290, 1515, 1456, 1439, 1494,
	1443, 1506, 1444, 1491, 208, 1487, 1649, 1580, 1686, 1559,
	1601, 1611, 207, 196, 1569, 1568, 1674, 1504, 1503, 1606,
	1663, 1685, 1558, 0, 1695, 253, 1660, 0, 378, 342,
	273, 0, 0, 1554, 1669, 1575, 1638, 1537, 1610, 1471,
	1593, 1690, 1516, 1602, 1691, 0, 0, 0, 0, 2660,
	0, 2655, 2656, 0, 0, 0, 0, 0, 2657, 0,
	1598, 1682, 1509, 0, 1549, 1607, 1710, 1442, 1594, 0,
	1447, 1458, 1704, 1675, 1500, 1501, 212, 0, 0, 0,
	0, 0, 0, 0, 1552, 1576, 1628, 1534, 373, 1613,
	1623, 1641, 1526, 307, 226, 0, 0, 0, 0, 0,
	0, 0, 0, 1496, 0, 1591, 0, 0, 0, 1463,
	1449, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1548, 0, 0, 0, 1470, 1440, 1498,
	1630, 1441, 1438, 274, 1459, 1643, 1673, 1535, 242, 0,
	1679, 1533, 1532, 1617, 1464, 1653, 1519, 250, 1462, 155,
	1457, 1465, 1517, 285, 1627, 1635, 0, 158, 252, 1650,
	1492, 1508, 197, 0, 318, 1603, 372, 0, 1584, 317,
	254, 365, 1618, 1681, 371, 1520, 349, 379, 383, 219,
	1560, 188, 339, 210, 205, 1499, 1640, 1446, 227, 306,
	200, 246, 1538, 1609, 1493, 193, 1621, 1592, 1655, 338,
	362, 160, 270, 363, 382, 177, 355, 271, 278, 190,
	192, 191, 172, 332, 361, 182, 195, 1651, 1634, 1657,
	1486, 1466, 1477, 1467, 1507, 1683, 236, 228, 1658, 1656,
	376, 0, 327, 326, 1523, 235, 1637, 0, 0, 313,
	2659, 243, 163, 1662, 385, 176, 248, 356, 0, 222,
	284, 199, 1605, 294, 1505, 157, 309, 266, 268, 265,
	269, 225, 0, 0, 1633, 311, 329, 360, 178, 345,
	2658, 0, 0, 0, 320, 0, 0, 1689, 260, 214,
	218, 229, 240, 1604, 316, 346, 377, 1595, 173, 166,
	348, 370, 183, 328, 331, 384, 1629, 168, 1677, 1652,
	1586, 1541, 1547, 1448, 0, 167, 1625, 1497, 1512, 1485,
	1599, 1484, 224, 1616, 368, 369, 198, 386, 1460, 1697,
	169, 1461, 1696, 281, 289, 280, 1700, 364, 1678, 1587,
	1572, 1570, 1453, 1676, 1585, 1571, 249, 217, 231, 304,
	256, 305, 232, 276, 275, 277, 258, 1574, 0, 164,
	0, 343, 1687, 1712, 347, 180, 1479, 1644, 359, 0,
	310, 181, 223, 215, 303, 279, 174, 234, 341, 247,
	255, 1620, 1709, 293, 319, 187, 374, 340, 211, 1475,
	286, 1478, 1473, 1476, 1474, 1578, 1579, 1692, 1693, 1694,
	1632, 1468, 0, 1670, 1671, 0, 1565, 1680, 1454, 0,
	1648, 0, 0, 1612, 1707, 1525, 194, 0, 1450, 1451,
	1452, 0, 1555, 1556, 0, 0, 1666, 1665, 1664, 1667,
	0, 1701, 1699, 1702, 1469, 1490, 1511, 1561, 1562, 1564,
	1596, 1597, 1642, 1615, 1624, 1557, 300, 165, 175, 186,
	204, 202, 216, 244, 267, 272, 298, 330, 335, 350,
	351, 352, 353, 206, 0, 209, 185, 314, 184, 257,
	237, 299, 357, 358, 1583, 159, 170, 251, 1708, 312,
	221, 1437, 1445, 1472, 1480, 1481, 1482, 1483, 1488, 1495,
	0, 1502, 1510, 1513, 1514, 1522, 1528, 1529, 1530, 1531,
	1540, 1542, 1543, 1544, 1545, 1546, 1550, 1551, 1553, 1566,
	1567, 1573, 1581, 1582, 1589, 1590, 0, 1619, 1622, 1631,
	1636, 1639, 1645, 1647, 1654, 1659, 1661, 1698, 1706, 1711,
	375, 203, 1563, 1588, 1626, 171, 179, 189, 201, 213,
	220, 230, 233, 238, 239, 241, 245, 259, 261, 262,
	263, 264, 282, 283, 287, 288, 291, 292, 295, 296,
	297, 301, 302, 308, 0, 315, 321, 322, 323, 324,
	325, 333, 334, 336, 337, 344, 366, 367, 380, 381,
	1672, 1536, 156, 0, 0, 162, 0, 0, 0, 0,
	0, 1521, 161, 1668, 1703, 1600, 1614, 1684, 1646, 354,
	1539, 1688, 1489, 1518, 1705, 1524, 1527, 1608, 1455, 1577,
	290, 1515, 1456, 1439, 1494, 1443, 1506, 1444, 1491, 208,
	1487, 1649, 1580, 1686, 1559, 1601, 1611, 207, 196, 1569,
	1568, 1674, 1504, 1503, 1606, 1663, 1685, 1558, 0, 1695,
	253, 1660, 0, 378, 342, 273, 0, 0, 1554, 1669,
	1575, 1638, 1537, 1610, 1471, 1593, 1690, 1516, 1602, 1691,
	0, 0, 0, 0, 955, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1598, 1682, 1509, 0, 1549,
	1607, 1710, 1442, 1594, 0, 1447, 1458, 1704, 1675, 1500,
	1501, 212, 0, 0, 0, 0, 0, 0, 0, 1552,
	1576, 1628, 1534, 373, 1613, 1623, 1641, 1526, 307, 226,
	0, 0, 0, 0, 0, 0, 3042, 0, 1496, 0,
	1591, 0, 0, 0, 1463, 1449, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1548, 0,
	0, 0, 1470, 1440, 1498, 1630, 1441, 1438, 274, 1459,
	1643, 1673, 1535, 242, 0, 1679, 1533, 1532, 1617, 1464,
	1653, 1519, 250, 1462, 155, 1457, 1465, 1517, 285, 1627,
	1635, 0, 158, 252, 1650, 1492, 1508, 197, 0, 318,
	1603, 372, 0, 1584, 317, 254, 365, 1618, 1681, 371,
	1520, 349, 379, 383, 219, 1560, 188, 339, 210, 205,
	1499, 1640, 1446, 227, 306, 200, 246, 1538, 1609, 1493,
	193, 1621, 1592, 1655, 338, 362, 160, 270, 363, 382,
	177, 355, 271, 278, 190, 192, 191, 172, 332, 361,
	182, 195, 1651, 1634, 1657, 1486, 1466, 1477, 1467, 1507,
	1683, 236, 228, 1658, 1656, 376, 0, 327, 326, 1523,
	235, 1637, 0, 0, 313, 0, 243, 163, 1662, 385,
	176, 248, 356, 0, 222, 284, 199, 1605, 294, 1505,
	157, 309, 266, 268, 265, 269, 225, 0, 0, 1633,
	311, 329, 360, 178, 345, 0, 0, 0, 0, 320,
	0, 0, 1689, 260, 214, 218, 229, 240, 1604, 316,
	346, 377, 1595, 173, 166, 348, 370, 183, 328, 331,
	384, 1629, 168, 1677, 1652, 1586, 1541, 1547, 1448, 0,
	167, 1625, 1497, 1512, 1485, 1599, 1484, 224, 1616, 368,
	369, 198, 386, 1460, 1697, 169, 1461, 1696, 281, 289,
	280, 1700, 364, 1678, 1587, 1572, 1570, 1453, 1676, 1585,
	1571, 249, 217, 231, 304, 256, 305, 232, 276, 275,
	277, 258, 1574, 0, 164, 0, 343, 1687, 1712, 347,
	180, 1479, 1644, 359, 0, 310, 181, 223, 215, 303,
	279, 174, 234, 341, 247, 255, 1620, 1709, 293, 319,
	187, 374, 340, 211, 1475, 286, 1478, 1473, 1476, 1474,
	1578, 1579, 1692, 1693, 1694, 1632, 1468, 0, 1670, 1671,
	0, 1565, 1680, 1454, 0, 1648, 0, 0, 1612, 1707,
	1525, 194, 0, 1450, 1451, 1452, 0, 1555, 1556, 0,
	0, 1666, 1665, 1664, 1667, 0, 1701, 1699, 1702, 1469,
	1490, 1511, 1561, 1562, 1564, 1596, 1597, 1642, 1615, 1624,
	1557, 300, 165, 175, 186, 204, 202, 216, 244, 267,
	272, 298, 330, 335, 350, 351, 352, 353, 206, 0,
	209, 185, 314, 184, 257, 237, 299, 357, 358, 1583,
	159, 170, 251, 1708, 312, 221, 1437, 1445, 1472, 1480,
	1481, 1482, 1483, 1488, 1495, 0, 1502, 1510, 1513, 1514,
	1522, 1528, 1529, 1530, 1531, 1540, 1542, 1543, 1544, 1545,
	1546, 1550, 1551, 1553, 1566, 1567, 1573, 1581, 1582, 1589,
	1590, 0, 1619, 1622, 1631, 1636, 1639, 1645, 1647, 1654,
	1659, 1661, 1698, 1706, 1711, 375, 203, 1563, 1588, 1626,
	171, 179, 189, 201, 213, 220, 230, 233, 238, 239,
	241, 245, 259, 261, 262, 263, 264, 282, 283, 287,
	288, 291, 292, 295, 296, 297, 301, 302, 308, 0,
	315, 321, 322, 323, 324, 325, 333, 334, 336, 337,
	344, 366, 367, 380, 381, 1672, 1536, 156, 0, 0,
	162, 0, 0, 0, 0, 0, 1521, 161, 1668, 1703,
	1600, 1614, 1684, 1646, 354, 1539, 1688, 1489, 1518, 1705,
	1524, 1527, 1608, 1455, 1577, 290, 1515, 1456, 1439, 1494,
	1443, 1506, 1444, 1491, 208, 1487, 1649, 1580, 1686, 1559,
	1601, 1611, 207, 196, 1569, 1568, 1674, 1504, 1503, 1606,
	1663, 1685, 1558, 0, 1695, 253, 1660, 0, 378, 342,
	273, 0, 0, 1554, 1669, 1575, 1638, 1537, 1610, 1471,
	1593, 1690, 1516, 1602, 1691, 0, 0, 0, 0, 955,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1598, 1682, 1509, 0, 1549, 1607, 1710, 1442, 1594, 0,
	1447, 1458, 1704, 1675, 1500, 1501, 212, 0, 0, 0,
	0, 0, 0, 0, 1552, 1576, 1628, 1534, 373, 1613,
	1623, 1641, 1526, 307, 226, 0, 0, 0, 0, 0,
	0, 2504, 0, 1496, 0, 1591, 0, 0, 0, 1463,
	1449, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1548, 0, 0, 0, 1470, 1440, 1498,
	1630, 1441, 1438, 274, 1459, 1643, 1673, 1535, 242, 0,
	1679, 1533, 1532, 1617, 1464, 1653, 1519, 250, 1462, 155,
	1457, 1465, 1517, 285, 1627, 1635, 0, 158, 252, 1650,
	1492, 1508, 197, 0, 318, 1603, 372, 0, 1584, 317,
	254, 365, 1618, 1681, 371, 1520, 349, 379, 383, 219,
	1560, 188, 339, 210, 205, 1499, 1640, 1446, 227, 306,
	200, 246, 1538, 1609, 1493, 193, 1621, 1592, 1655, 338,
	362, 160, 270, 363, 382, 177, 355, 271, 278, 190,
	192, 191, 172, 332, 361, 182, 195, 1651, 1634, 1657,
	1486, 1466, 1477, 1467, 1507, 1683, 236, 228, 1658, 1656,
	376, 0, 327, 326, 1523, 235, 1637, 0, 0, 313,
	0, 243, 163, 1662, 385, 176, 248, 356, 0, 222,
	284, 199, 1605, 294, 1505, 157, 309, 266, 268, 265,
	269, 225, 0, 0, 1633, 311, 329, 360, 178, 345,
	0, 0, 0, 0, 320, 0, 0, 1689, 260, 214,
	218, 229, 240, 1604, 316, 346, 377, 1595, 173, 166,
	348, 370, 183, 328, 331, 384, 1629, 168, 1677, 1652,
	1586, 1541, 1547, 1448, 0, 167, 1625, 1497, 1512, 1485,
	1599, 1484, 224, 1616, 368, 369, 198, 386, 1460, 1697,
	169, 1461, 1696, 281, 289, 280, 1700, 364, 1678, 1587,
	1572, 1570, 1453, 1676, 1585, 1571, 249, 217, 231, 304,
	256, 305, 232, 276, 275, 277, 258, 1574, 0, 164,
	0, 343, 1687, 1712, 347, 180, 1479, 1644, 359, 0,
	310, 181, 223, 215, 303, 279, 174, 234, 341, 247,
	255, 1620, 1709, 293, 319, 187, 374, 340, 211, 1475,
	286, 1478, 1473, 1476, 1474, 1578, 1579, 1692, 1693, 1694,
	1632, 1468, 0, 1670, 1671, 0, 1565, 1680, 1454, 0,
	1648, 0, 0, 1612, 1707, 1525, 194, 0, 1450, 1451,
	1452, 0, 1555, 1556, 0, 0, 1666, 1665, 1664, 1667,
	0, 1701, 1699, 1702, 1469, 1490, 1511, 1561, 1562, 1564,
	1596, 1597, 1642, 1615, 1624, 1557, 300, 165, 175, 186,
	204, 202, 216, 244, 267, 272, 298, 330, 335, 350,
	351, 352, 353, 206, 0, 209, 185, 314, 184, 257,
	237, 299, 357, 358, 1583, 159, 170, 251, 1708, 312,
	221, 1437, 1445, 1472, 1480, 1481, 1482, 1483, 1488, 1495,
	0, 1502, 1510, 1513, 1514, 1522, 1528, 1529, 1530, 1531,
	1540, 1542, 1543, 1544, 1545, 1546, 1550, 1551, 1553, 1566,
	1567, 1573, 1581, 1582, 1589, 1590, 0, 1619, 1622, 1631,
	1636, 1639, 1645, 1647, 1654, 1659, 1661, 1698, 1706, 1711,
	375, 203, 1563, 1588, 1626, 171, 179, 189, 201, 213,
	220, 230, 233, 238, 239, 241, 245, 259, 261, 262,
	263, 264, 282, 283, 287, 288, 291, 292, 295, 296,
	297, 301, 302, 308, 0, 315, 321, 322, 323, 324,
	325, 333, 334, 336, 337, 344, 366, 367, 380, 381,
	1672, 1536, 156, 0, 0, 162, 0, 0, 0, 0,
	0, 1521, 161, 1668, 1703, 1600, 1614, 1684, 1646, 354,
	1539, 1688, 1489, 1518, 1705, 1524, 1527, 1608, 1455, 1577,
	290, 1515, 1456, 1439, 1494, 1443, 1506, 1444, 1491, 208,
	1487, 1649, 1580, 1686, 1559, 1601, 1611, 207, 196, 1569,
	1568, 1674, 1504, 1503, 1606, 1663, 1685, 1558, 0, 1695,
	253, 1660, 0, 378, 342, 273, 0, 0, 1554, 1669,
	1575, 1638, 1537, 1610, 1471, 1593, 1690, 1516, 1602, 1691,
	0, 0, 0, 0, 129, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1598, 1682, 1509, 0, 1549,
	1607, 1710, 1442, 1594, 0, 1447, 1458, 1704, 1675, 1500,
	1501, 212, 0, 0, 0, 0, 0, 0, 0, 1552,
	1576, 1628, 1534, 373, 1613, 1623, 1641, 1526, 307, 226,
	0, 0, 0, 0, 0, 0, 2306, 0, 1496, 0,
	1591, 0, 0, 0, 1463, 1449, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1548, 0,
	0, 0, 1470, 1440, 1498, 1630, 1441, 1438, 274, 1459,
	1643, 1673, 1535, 242, 0, 1679, 1533, 1532, 1617, 1464,
	1653, 1519, 250, 1462, 155, 1457, 1465, 1517, 285, 1627,
	1635, 0, 158, 252, 1650, 1492, 1508, 197, 0, 318,
	1603, 372, 0, 1584, 317, 254, 365, 1618, 1681, 371,
	1520, 349, 379, 383, 219, 1560, 188, 339, 210, 205,
	1499, 1640, 1446, 227, 306, 200, 246, 1538, 1609, 1493,
	193, 1621, 1592, 1655, 338, 362, 160, 270, 363, 382,
	177, 355, 271, 278, 190, 192, 191, 172, 332, 361,
	182, 195, 1651, 1634, 1657, 1486, 1466, 1477, 1467, 1507,
	1683, 236, 228, 1658, 1656, 376, 0, 327, 326, 1523,
	235, 1637, 0, 0, 313, 0, 243, 163, 1662, 385,
	176, 248, 356, 0, 222, 284, 199, 1605, 294, 1505,
	157, 309, 266, 268, 265, 269, 225, 0, 0, 1633,
	311, 329, 360, 178, 345, 0, 0, 0, 0, 320,
	0, 0, 1689, 260, 214, 218, 229, 240, 1604, 316,
	346, 377, 1595, 173, 166, 348, 370, 183, 328, 331,
	384, 1629, 168, 1677, 1652, 1586, 1541, 1547, 1448, 0,
	167, 1625, 1497, 1512, 1485, 1599, 1484, 224, 1616, 368,
	369, 198, 386, 1460, 1697, 169, 1461, 1696, 281, 289,
	280, 1700, 364, 1678, 1587, 1572, 1570, 1453, 1676, 1585,
	1571, 249, 217, 231, 304, 256, 305, 232, 276, 275,
	277, 258, 1574, 0, 164, 0, 343, 1687, 1712, 347,
	180, 1479, 1644, 359, 0, 310, 181, 223, 215, 303,
	279, 174, 234, 341, 247, 255, 1620, 1709, 293, 319,
	187, 374, 340, 211, 1475, 286, 1478, 1473, 1476, 1474,
	1578, 1579, 1692, 1693, 1694, 1632, 1468, 0, 1670, 1671,
	0, 1565, 1680, 1454, 0, 1648, 0, 0, 1612, 1707,
	1525, 194, 0, 1450, 1451, 1452, 0, 1555, 1556, 0,
	0, 1666, 1665, 1664, 1667, 0, 1701, 1699, 1702, 1469,
	1490, 1511, 1561, 1562, 1564, 1596, 1597, 1642, 1615, 1624,
	1557, 300, 165, 175, 186, 204, 202, 216, 244, 267,
	272, 298, 330, 335, 350, 351, 352, 353, 206, 0,
	209, 185, 314, 184, 257, 237, 299, 357, 358, 1583,
	159, 170, 251, 1708, 312, 221, 1437, 1445, 1472, 1480,
	1481, 1482, 1483, 1488, 1495, 0, 1502, 1510, 1513, 1514,
	1522, 1528, 1529, 1530, 1531, 1540, 1542, 1543, 1544, 1545,
	1546, 1550, 1551, 1553, 1566, 1567, 1573, 1581, 1582, 1589,
	1590, 0, 1619, 1622, 1631, 1636, 1639, 1645, 1647, 1654,
	1659, 1661, 1698, 1706, 1711, 375, 203, 1563, 1588, 1626,
	171, 179, 189, 201, 213, 220, 230, 233, 238, 239,
	241, 245, 259, 261, 262, 263, 264, 282, 283, 287,
	288, 291, 292, 295, 296, 297, 301, 302, 308, 0,
	315, 321, 322, 323, 324, 325, 333, 334, 336, 337,
	344, 366, 367, 380, 381, 1672, 1536, 156, 0, 0,
	162, 0, 0, 0, 0, 0, 1521, 161, 1668, 1703,
	1600, 1614, 1684, 1646, 354, 1539, 1688, 1489, 1518, 1705,
	1524, 1527, 1608, 1455, 1577, 290, 1515, 1456, 1439, 1494,
	1443, 1506, 1444, 1491, 208, 1487, 1649, 1580, 1686, 1559,
	1601, 1611, 207, 196, 1569, 1568, 1674, 1504, 1503, 1606,
	1663, 1685, 1558, 0, 1695, 253, 1660, 0, 378, 342,
	273, 0, 0, 1554, 1669, 1575, 1638, 1537, 1610, 1471,
	1593, 1690, 1516, 1602, 1691, 0, 0, 0, 0, 955,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1598, 1682, 1509, 0, 1549, 1607, 1710, 1442, 1594, 0,
	1447, 1458, 1704, 1675, 1500, 1501, 212, 0, 0, 0,
	0, 0, 0, 0, 1552, 1576, 1628, 1534, 373, 1613,
	1623, 1641, 1526, 307, 226, 0, 0, 0, 0, 0,
	0, 0, 0, 1496, 0, 1591, 0, 0, 0, 1463,
	1449, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1548, 0, 0, 0, 1470, 1440, 1498,
	1630, 1441, 1438, 274, 1459, 1643, 1673, 1535, 242, 0,
	1679, 1533, 1532, 1617, 1464, 1653, 1519, 250, 1462, 155,
	1457, 1465, 1517, 285, 1627, 1635, 0, 158, 252, 1650,
	1492, 1508, 197, 0, 318, 1603, 372, 0, 1584, 317,
	254, 365, 1618, 1681, 371, 1520, 349, 379, 383, 219,
	1560, 188, 339, 210, 205, 1499, 1640, 1446, 227, 306,
	200, 246, 1538, 1609, 1493, 193, 1621, 1592, 1655, 338,
	362, 160, 270, 363, 382, 177, 355, 271, 278, 190,
	192, 191, 172, 332, 361, 182, 195, 1651, 1634, 1657,
	1486, 1466, 1477, 1467, 1507, 1683, 236, 228, 1658, 1656,
	376, 0, 327, 326, 1523, 235, 1637, 0, 0, 313,
	0, 243, 163, 1662, 385, 176, 248, 356, 0, 222,
	284, 199, 1605, 294, 1505, 157, 309, 266, 268, 265,
	269, 225, 0, 0, 1633, 311, 329, 360, 178, 345,
	0, 0, 0, 0, 320, 0, 0, 1689, 260, 214,
	218, 229, 240, 1604, 316, 346, 377, 1595, 173, 166,
	348, 370, 183, 328, 331, 384, 1629, 168, 1677, 1652,
	1586, 1541, 1547, 1448, 0, 167, 1625, 1497, 1512, 1485,
	1599, 1484, 224, 1616, 368, 369, 198, 386, 1460, 1697,
	169, 1461, 1696, 281, 289, 280, 1700, 364, 1678, 1587,
	1572, 1570, 1453, 1676, 1585, 1571, 249, 217, 231, 304,
	256, 305, 232, 276, 275, 277, 258, 1574, 0, 164,
	0, 343, 1687, 1712, 347, 180, 1479, 1644, 359, 1895,
	310, 181, 223, 215, 303, 279, 174, 234, 341, 247,
	255, 1620, 1709, 293, 319, 187, 374, 340, 211, 1475,
	286, 1478, 1473, 1476, 1474, 1578, 1579, 1692, 1693, 1694,
	1632, 1468, 0, 1670, 1671, 0, 1565, 1680, 1454, 0,
	1648, 0, 0, 1612, 1707, 1525, 194, 0, 1450, 1451,
	1452, 0, 1555, 1556, 0, 0, 1666, 1665, 1664, 1667,
	0, 1701, 1699, 1702, 1469, 1490, 1511, 1561, 1562, 1564,
	1596, 1597, 1642, 1615, 1624, 1557, 300, 165, 175, 186,
	204, 202, 216, 244, 267, 272, 298, 330, 335, 350,
	351, 352, 353, 206, 0, 209, 185, 314, 184, 257,
	237, 299, 357, 358, 1583, 159, 170, 251, 1708, 312,
	221, 1437, 1445, 1472, 1480, 1481, 1482, 1483, 1488, 1495,
	0, 1502, 1510, 1513, 1514, 1522, 1528, 1529, 1530, 1531,
	1540, 1542, 1543, 1544, 1545, 1546, 1550, 1551, 1553, 1566,
	1567, 1573, 1581, 1582, 1589, 1590, 0, 1619, 1622, 1631,
	1636, 1639, 1645, 1647, 1654, 1659, 1661, 1698, 1706, 1711,
	375, 203, 1563, 1588, 1626, 171, 179, 189, 201, 213,
	220, 230, 233, 238, 239, 241, 245, 259, 261, 262,
	263, 264, 282, 283, 287, 288, 291, 292, 295, 296,
	297, 301, 302, 308, 0, 315, 321, 322, 323, 324,
	325, 333, 334, 336, 337, 344, 366, 367, 380, 381,
	1672, 1536, 156, 0, 0, 162, 0, 0, 0, 0,
	0, 1521, 161, 1668, 1703, 1600, 1614, 1684, 1646, 354,
	1539, 1688, 1489, 1518, 1705, 1524, 1527, 1608, 1455, 1577,
	290, 1515, 1456, 1439, 1494, 1443, 1506, 1444, 1491, 208,
	1487, 1649, 1580, 1686, 1559, 1601, 1611, 207, 196, 1569,
	1568, 1674, 1504, 1503, 1606, 1663, 1685, 1558, 0, 1695,
	253, 1660, 0, 378, 342, 273, 0, 0, 1554, 1669,
	1575, 1638, 1537, 1610, 1471, 1593, 1690, 1516, 1602, 1691,
	0, 0, 0, 0, 955, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1598, 1682, 1509, 0, 1549,
	1607, 1710, 1442, 1594, 0, 1447, 1458, 1704, 1675, 1500,
	1501, 212, 0, 0, 0, 0, 0, 0, 0, 1552,
	1576, 1628, 1534, 373, 1613, 1623, 1641, 1526, 307, 226,
	0, 0, 0, 0, 0, 0, 0, 0, 1496, 0,
	1591, 0, 0, 0, 1463, 1449, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1548, 0,
	0, 0, 1470, 1440, 1498, 1630, 1441, 1438, 274, 1459,
	1643, 1673, 1535, 242, 0, 1679, 1533, 1532, 1617, 1464,
	1653, 1519, 250, 1462, 155, 1457, 1465, 1517, 285, 1627,
	1635, 0, 158, 252, 1650, 1492, 1508, 197, 0, 318,
	1603, 372, 0, 1584, 317, 254, 365, 1618, 1681, 371,
	1520, 349, 379, 383, 219, 1560, 188, 339, 210, 205,
	1499, 1640, 1446, 227, 306, 200, 246, 1538, 1609, 1493,
	193, 1621, 1592, 1655, 338, 362, 160, 270, 363, 382,
	177, 355, 271, 278, 190, 192, 191, 172, 332, 361,
	182, 195, 1651, 1634, 1657, 1486, 1466, 1477, 1467, 1507,
	1683, 236, 228, 1658, 1656, 376, 0, 327, 326, 1523,
	235, 1637, 0, 0, 313, 0, 243, 163, 1662, 385,
	176, 248, 356, 0, 222, 284, 199, 1605, 294, 1505,
	157, 309, 266, 268, 265, 269, 225, 0, 0, 1633,
	311, 329, 360, 178, 345, 0, 0, 0, 0, 320,
	0, 0, 1689, 260, 214, 218, 229, 240, 1604, 316,
	346, 377, 1595, 173, 166, 348, 370, 183, 328, 331,
	384, 1629, 168, 1677, 1652, 1586, 1541, 1547, 1448, 0,
	167, 1625, 1497, 1512, 1485, 1599, 1484, 224, 1616, 368,
	369, 198, 386, 1460, 1697, 169, 1461, 1696, 281, 289,
	280, 1700, 364, 1678, 1587, 1572, 1570, 1453, 1676, 1585,
	1571, 249, 217, 231, 304, 256, 305, 232, 276, 275,
	277, 258, 1574, 0, 164, 0, 343, 1687, 1712, 347,
	180, 1479, 1644, 359, 0, 310, 181, 223, 215, 303,
	279, 174, 234, 341, 247, 255, 1620, 1709, 293, 319,
	187, 374, 340, 211, 1475, 286, 1478, 1473, 1476, 1474,
	1578, 1579, 1692, 1693, 1694, 1632, 1468, 0, 1670, 1671,
	0, 1565, 1680, 1454, 0, 1648, 0, 0, 1612, 1707,
	1525, 194, 0, 1450, 1451, 1452, 0, 1555, 1556, 0,
	0, 1666, 1665, 1664, 1667, 0, 1701, 1699, 1702, 1469,
	1490, 1511, 1561, 1562, 1564, 1596, 1597, 1642, 1615, 1624,
	1557, 300, 165, 175, 186, 204, 202, 216, 244, 267,
	272, 298, 330, 335, 350, 351, 352, 353, 206, 0,
	209, 185, 314, 184, 257, 237, 299, 357, 358, 1583,
	159, 170, 251, 1708, 312, 221, 1437, 1445, 1472, 1480,
	1481, 1482, 1483, 1488, 1495, 0, 1502, 1510, 1513, 1514,
	1522, 1528, 1529, 1530, 1531, 1540, 1542, 1543, 1544, 1545,
	1546, 1550, 1551, 1553, 1566, 1567, 1573, 1581, 1582, 1589,
	1590, 0, 1619, 1622, 1631, 1636, 1639, 1645, 1647, 1654,
	1659, 1661, 1698, 1706, 1711, 375, 203, 1563, 1588, 1626,
	171, 179, 189, 201, 213, 220, 230, 233, 238, 239,
	241, 245, 259, 261, 262, 263, 264, 282, 283, 287,
	288, 291, 292, 295, 296, 297, 301, 302, 308, 0,
	315, 321, 322, 323, 324, 325, 333, 334, 336, 337,
	344, 366, 367, 380, 381, 1672, 1536, 156, 0, 0,
	162, 0, 0, 0, 0, 0, 1521, 161, 1668, 1703,
	1600, 1614, 1684, 1646, 354, 1539, 1688, 1489, 1518, 1705,
	1524, 1527, 1608, 1455, 1577, 290, 1515, 1456, 1439, 1494,
	1443, 1506, 1444, 1491, 208, 1487, 1649, 1580, 1686, 1559,
	1601, 1611, 207, 196, 1569, 1568, 1674, 1504, 1503, 1606,
	1663, 1685, 1558, 0, 1695, 253, 1660, 0, 378, 342,
	273, 0, 0, 1554, 1669, 1575, 1638, 1537, 1610, 1471,
	1593, 1690, 1516, 1602, 1691, 0, 0, 0, 0, 3410,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1598, 1682, 1509, 0, 1549, 1607, 1710, 1442, 1594, 0,
	1447, 1458, 1704, 1675, 1500, 1501, 212, 0, 0, 0,
	0, 0, 0, 0, 1552, 1576, 1628, 1534, 373, 1613,
	1623, 1641, 1526, 307, 226, 0, 0, 0, 0, 0,
	0, 0, 0, 1496, 0, 1591, 0, 0, 0, 1463,
	1449, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1548, 0, 0, 0, 1470, 1440, 1498,
	1630, 1441, 1438, 274, 1459, 1643, 1673, 1535, 242, 0,
	1679, 1533, 1532, 1617, 1464, 1653, 1519, 250, 1462, 155,
	1457, 1465, 1517, 285, 1627, 1635, 0, 158, 252, 1650,
	1492, 1508, 197, 0, 318, 1603, 372, 0, 1584, 317,
	254, 365, 1618, 1681, 371, 1520, 349, 379, 383, 219,
	1560, 188, 339, 210, 205, 1499, 1640, 1446, 227, 306,
	200, 246, 1538, 1609, 1493, 193, 1621, 1592, 1655, 338,
	362, 160, 270, 363, 382, 177, 355, 271, 278, 190,
	192, 191, 172, 332, 361, 182, 195, 1651, 1634, 1657,
	1486, 1466, 1477, 3413, 3414, 3415, 236, 228, 1658, 1656,
	376, 0, 327, 326, 1523, 235, 1637, 0, 0, 313,
	0, 243, 163, 1662, 385, 176, 248, 356, 0, 222,
	284, 199, 1605, 294, 1505, 157, 309, 266, 268, 265,
	269, 225, 0, 0, 1633, 311, 329, 360, 178, 345,
	0, 0, 0, 0, 320, 0, 0, 1689, 260, 214,
	218, 229, 240, 1604, 316, 346, 377, 1595, 173, 166,
	348, 370, 183, 328, 331, 384, 1629, 168, 1677, 1652,
	1586, 1541, 1547, 1448, 0, 167, 1625, 1497, 1512, 1485,
	1599, 1484, 224, 1616, 368, 369, 198, 386, 1460, 1697,
	169, 1461, 1696, 281, 289, 280, 1700, 364, 1678, 1587,
	1572, 1570, 1453, 1676, 1585, 1571, 249, 217, 231, 304,
	256, 305, 232, 276, 275, 277, 258, 1574, 0, 164,
	0, 343, 1687, 1712, 347, 180, 1479, 1644, 359, 0,
	310, 181, 223, 215, 303, 279, 174, 234, 341, 247,
	255, 1620, 1709, 293, 319, 187, 374, 340, 211, 1475,
	286, 1478, 1473, 1476, 1474, 1578, 1579, 1692, 1693, 1694,
	1632, 1468, 0, 1670, 1671, 0, 1565, 1680, 1454, 0,
	1648, 0, 0, 1612, 1707, 1525, 194, 0, 1450, 1451,
	1452, 0, 1555, 1556, 0, 0, 1666, 1665, 1664, 1667,
	0, 1701, 1699, 1702, 1469, 1490, 1511, 1561, 1562, 1564,
	1596, 1597, 1642, 1615, 1624, 1557, 300, 165, 175, 186,
	204, 202, 216, 244, 267, 272, 298, 330, 335, 350,
	351, 352, 353, 206, 0, 209, 185, 314, 184, 257,
	237, 299, 357, 358, 1583, 159, 170, 251, 1708, 312,
	221, 1437, 1445, 1472, 1480, 1481, 1482, 1483, 1488, 1495,
	0, 1502, 1510, 1513, 1514, 1522, 1528, 1529, 1530, 1531,
	1540, 1542, 1543, 1544, 1545, 1546, 1550, 1551, 1553, 1566,
	1567, 1573, 1581, 1582, 1589, 1590, 0, 1619, 1622, 1631,
	1636, 1639, 1645, 1647, 1654, 1659, 1661, 1698, 1706, 1711,
	375, 203, 1563, 1588, 1626, 171, 179, 189, 201, 213,
	220, 230, 233, 238, 239, 241, 245, 259, 261, 262,
	263, 264, 282, 283, 287, 288, 291, 292, 295, 296,
	297, 301, 302, 308, 0, 315, 321, 322, 323, 324,
	325, 333, 334, 336, 337, 344, 366, 367, 380, 381,
	1672, 1536, 156, 0, 0, 162, 0, 0, 0, 0,
	0, 1521, 161, 1668, 1703, 1600, 1614, 1684, 1646, 354,
	1539, 1688, 1489, 1518, 1705, 1524, 1527, 1608, 1455, 1577,
	290, 1515, 1456, 1439, 1494, 1443, 1506, 1444, 1491, 208,
	1487, 1649, 1580, 1686, 1559, 1601, 1611, 207, 196, 1569,
	1568, 1674, 1504, 1503, 1606, 1663, 1685, 1558, 0, 1695,
	253, 1660, 0, 378, 342, 273, 0, 0, 1554, 1669,
	1575, 1638, 1537, 1610, 1471, 1593, 1690, 1516, 1602, 1691,
	0, 0, 0, 0, 2660, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1598, 1682, 1509, 0, 1549,
	1607, 1710, 1442, 1594, 0, 1447, 1458, 1704, 1675, 1500,
	1501, 212, 0, 0, 0, 0, 0, 0, 0, 1552,
	1576, 1628, 1534, 373, 1613, 1623, 1641, 1526, 307, 226,
	0, 0, 0, 0, 0, 0, 0, 0, 1496, 0,
	1591, 0, 0, 0, 1463, 1449, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1548, 0,
	0, 0, 1470, 1440, 1498, 1630, 1441, 1438, 274, 1459,
	1643, 1673, 1535, 242, 0, 1679, 1533, 1532, 1617, 1464,
	1653, 1519, 250, 1462, 155, 1457, 1465, 1517, 285, 1627,
	1635, 0, 158, 252, 1650, 1492, 1508, 197, 0, 318,
	1603, 372, 0, 1584, 317, 254, 365, 1618, 1681, 371,
	1520, 349, 379, 383, 219, 1560, 188, 339, 210, 205,
	1499, 1640, 1446, 227, 306, 200, 246, 1538, 1609, 1493,
	193, 1621, 1592, 1655, 338, 362, 160, 270, 363, 382,
	177, 355, 271, 278, 190, 192, 191, 172, 332, 361,
	182, 195, 1651, 1634, 1657, 1486, 1466, 1477, 1467, 1507,
	1683, 236, 228, 1658, 1656, 376, 0, 327, 326, 1523,
	235, 1637, 0, 0, 313, 0, 243, 163, 1662, 385,
	176, 248, 356, 0, 222, 284, 199, 1605, 294, 1505,
	157, 309, 266, 268, 265, 269, 225, 0, 0, 1633,
	311, 329, 360, 178, 345, 0, 0, 0, 0, 320,
	0, 0, 1689, 260, 214, 218, 229, 240, 1604, 316,
	346, 377, 1595, 173, 166, 348, 370, 183, 328, 331,
	384, 1629, 168, 1677, 1652, 1586, 1541, 1547, 1448, 0,
	167, 1625, 1497, 1512, 1485, 1599, 1484, 224, 1616, 368,
	369, 198, 386, 1460, 1697, 169, 1461, 1696, 281, 289,
	280, 1700, 364, 1678, 1587, 1572, 1570, 1453, 1676, 1585,
	1571, 249, 217, 231, 304, 256, 305, 232, 276, 275,
	277, 258, 1574, 0, 164, 0, 343, 1687, 1712, 347,
	180, 1479, 1644, 359, 0, 310, 181, 223, 215, 303,
	279, 174, 234, 341, 247, 255, 1620, 1709, 293, 319,
	187, 374, 340, 211, 1475, 286, 1478, 1473, 1476, 1474,
	1578, 1579, 1692, 1693, 1694, 1632, 1468, 0, 1670, 1671,
	0, 1565, 1680, 1454, 0, 1648, 0, 0, 1612, 1707,
	1525, 194, 0, 1450, 1451, 1452, 0, 1555, 1556, 0,
	0, 1666, 1665, 1664, 1667, 0, 1701, 1699, 1702, 1469,
	1490, 1511, 1561, 1562, 1564, 1596, 1597, 1642, 1615, 1624,
	1557, 300, 165, 175, 186, 204, 202, 216, 244, 267,
	272, 298, 330, 335, 350, 351, 352, 353, 206, 0,
	209, 185, 314, 184, 257, 237, 299, 357, 358, 1583,
	159, 170, 251, 1708, 312, 221, 1437, 1445, 1472, 1480,
	1481, 1482, 1483, 1488, 1495, 0, 1502, 1510, 1513, 1514,
	1522, 1528, 1529, 1530, 1531, 1540, 1542, 1543, 1544, 1545,
	1546, 1550, 1551, 1553, 1566, 1567, 1573, 1581, 1582, 1589,
	1590, 0, 1619, 1622, 1631, 1636, 1639, 1645, 1647, 1654,
	1659, 1661, 1698, 1706, 1711, 375, 203, 1563, 1588, 1626,
	171, 179, 189, 201, 213, 220, 230, 233, 238, 239,
	241, 245, 259, 261, 262, 263, 264, 282, 283, 287,
	288, 291, 292, 295, 296, 297, 301, 302, 308, 0,
	315, 321, 322, 323, 324, 325, 333, 334, 336, 337,
	344, 366, 367, 380, 381, 1672, 1536, 156, 0, 0,
	162, 0, 0, 0, 0, 0, 1521, 161, 1668, 1703,
	1600, 1614, 1684, 1646, 354, 1539, 1688, 1489, 1518, 1705,
	1524, 1527, 1608, 1455, 1577, 290, 1515, 1456, 1439, 1494,
	1443, 1506, 1444, 1491, 208, 1487, 1649, 1580, 1686, 1559,
	1601, 1611, 207, 196, 1569, 1568, 1674, 1504, 1503, 1606,
	1663, 1685, 1558, 0, 1695, 253, 1660, 0, 378, 342,
	273, 0, 0, 1554, 1669, 1575, 1638, 1537, 1610, 1471,
	1593, 1690, 1516, 1602, 1691, 0, 0, 0, 0, 129,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1598, 1682, 1509, 0, 1549, 1607, 1710, 1442, 1594, 0,
	1447, 1458, 1704, 1675, 1500, 1501, 212, 0, 0, 0,
	0, 0, 0, 0, 1552, 1576, 1628, 1534, 373, 1613,
	1623, 1641, 1526, 307, 226, 0, 0, 0, 0, 0,
	0, 0, 0, 1496, 0, 1591, 0, 0, 0, 1463,
	1449, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1548, 0, 0, 0, 1470, 1440, 1498,
	1630, 1441, 1438, 274, 1459, 1643, 1673, 1535, 242, 0,
	1679, 1533, 1532, 1617, 1464, 1653, 1519, 250, 1462, 155,
	1457, 1465, 1517, 285, 1627, 1635, 0, 158, 252, 1650,
	1492, 1508, 197, 0, 318, 1603, 372, 0, 1584, 317,
	254, 365, 1618, 1681, 371, 1520, 349, 379, 383, 219,
	1560, 188, 339, 210, 205, 1499, 1640, 1446, 227, 306,
	200, 246, 1538, 1609, 1493, 193, 1621, 1592, 1655, 338,
	362, 160, 270, 363, 382, 177, 355, 271, 278, 190,
	192, 191, 172, 332, 361, 182, 195, 1651, 1634, 1657,
	1486, 1466, 1477, 1467, 1507, 1683, 236, 228, 1658, 1656,
	376, 0, 327, 326, 1523, 235, 1637, 0, 0, 313,
	0, 243, 163, 1662, 385, 176, 248, 356, 0, 222,
	284, 199, 1605, 294, 1505, 157, 309, 266, 268, 265,
	269, 225, 0, 0, 1633, 311, 329, 360, 178, 345,
	0, 0, 0, 0, 320, 0, 0, 1689, 260, 214,
	218, 229, 240, 1604, 316, 346, 377, 1595, 173, 166,
	348, 370, 183, 328, 331, 384, 1629, 168, 1677, 1652,
	1586, 1541, 1547, 1448, 0, 167, 1625, 1497, 1512, 1485,
	1599, 1484, 224, 1616, 368, 369, 198, 386, 1460, 1697,
	169, 1461, 1696, 281, 289, 280, 1700, 364, 1678, 1587,
	1572, 1570, 1453, 1676, 1585, 1571, 249, 217, 231, 304,
	256, 305, 232, 276, 275, 277, 258, 1574, 0, 164,
	0, 343, 1687, 1712, 347, 180, 1479, 1644, 359, 0,
	310, 181, 223, 215, 303, 279, 174, 234, 341, 247,
	255, 1620, 1709, 293, 319, 187, 374, 340, 211, 1475,
	286, 1478, 1473, 1476, 1474, 1578, 1579, 1692, 1693, 1694,
	1632, 1468, 0, 1670, 1671, 0, 1565, 1680, 1454, 0,
	1648, 0, 0, 1612, 1707, 1525, 194, 0, 1450, 1451,
	1452, 0, 1555, 1556, 0, 0, 1666, 1665, 1664, 1667,
	0, 1701, 1699, 1702, 1469, 1490, 1511, 1561, 1562, 1564,
	1596, 1597, 1642, 1615, 1624, 1557, 300, 165, 175, 186,
	204, 202, 216, 244, 267, 272, 298, 330, 335, 350,
	351, 352, 353, 206, 0, 209, 185, 314, 184, 257,
	237, 299, 357, 358, 1583, 159, 170, 251, 1708, 312,
	221, 1437, 1445, 1472, 1480, 1481, 1482, 1483, 1488, 1495,
	0, 1502, 1510, 1513, 1514, 1522, 1528, 1529, 1530, 1531,
	1540, 1542, 1543, 1544, 1545, 1546, 1550, 1551, 1553, 1566,
	1567, 1573, 1581, 1582, 1589, 1590, 0, 1619, 1622, 1631,
	1636, 1639, 1645, 1647, 1654, 1659, 1661, 1698, 1706, 1711,
	375, 203, 1563, 1588, 1626, 171, 179, 189, 201, 213,
	220, 230, 233, 238, 239, 241, 245, 259, 261, 262,
	263, 264, 282, 283, 287, 288, 291, 292, 295, 296,
	297, 301, 302, 308, 0, 315, 321, 322, 323, 324,
	325, 333, 334, 336, 337, 344, 366, 367, 380, 381,
	1672, 1536, 156, 0, 0, 162, 354, 0, 0, 0,
	0, 1521, 161, 1668, 1703, 1600, 1614, 290, 0, 0,
	0, 0, 0, 0, 0, 0, 208, 0, 0, 0,
	0, 0, 0, 0, 207, 196, 0, 0, 0, 0,
	0, 0, 0, 2016, 2020, 0, 0, 253, 0, 959,
	378, 342, 273, 962, 961, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 955, 0, 0, 0, 0, 0, 0, 0, 0,
	137, 0, 0, 0, 0, 960, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 212, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	373, 0, 0, 0, 0, 307, 226, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 2019,
	242, 154, 0, 0, 0, 2013, 0, 2014, 2015, 250,
	963, 155, 0, 2011, 2018, 285, 0, 0, 142, 158,
	252, 0, 0, 0, 197, 952, 318, 0, 372, 958,
	0, 317, 254, 365, 0, 0, 371, 0, 349, 379,
	383, 219, 0, 188, 339, 210, 205, 0, 0, 0,
	227, 306, 200, 246, 0, 0, 0, 193, 0, 0,
	0, 338, 362, 160, 270, 363, 382, 177, 355, 271,
	278, 190, 192, 191, 172, 332, 361, 182, 195, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 236, 228,
	0, 0, 376, 144, 327, 326, 0, 235, 0, 145,
	136, 313, 146, 243, 163, 0, 385, 176, 248, 356,
	957, 222, 284, 199, 0, 294, 0, 157, 309, 266,
	268, 265, 269, 225, 140, 147, 0, 311, 329, 360,
	178, 345, 138, 139, 141, 149, 320, 150, 151, 0,
	260, 214, 218, 229, 240, 0, 316, 346, 377, 0,
	173, 166, 348, 370, 183, 328, 331, 384, 0, 168,
	0, 0, 0, 0, 0, 0, 0, 167, 0, 0,
	0, 0, 0, 0, 224, 0, 368, 369, 198, 386,
	0, 0, 169, 0, 0, 281, 289, 280, 0, 364,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 217,
	231, 304, 256, 305, 232, 276, 275, 277, 258, 0,
	0, 164, 0, 343, 0, 0, 347, 180, 0, 0,
	359, 143, 310, 181, 223, 215, 303, 279, 174, 234,
	341, 247, 255, 0, 0, 293, 319, 187, 374, 340,
	211, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 152, 153, 0, 0, 0, 194, 131,
	0, 0, 0, 132, 0, 0, 133, 134, 0, 0,
	0, 0, 135, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 165,
	175, 186, 204, 202, 216, 244, 267, 272, 298, 330,
	335, 350, 351, 352, 353, 206, 0, 209, 185, 314,
	184, 257, 237, 299, 357, 358, 0, 159, 170, 251,
	0, 312, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 203, 0, 0, 0, 171, 179, 189,
	201, 213, 220, 230, 233, 238, 239, 241, 245, 259,
	261, 262, 263, 264, 282, 283, 287, 288, 291, 292,
	295, 296, 297, 301, 302, 308, 148, 315, 321, 322,
	323, 324, 325, 333, 334, 336, 337, 344, 366, 367,
	380, 381, 354, 0, 156, 0, 0, 162, 0, 0,
	0, 0, 0, 290, 161, 0, 0, 0, 1171, 0,
	0, 0, 208, 0, 0, 0, 0, 0, 0, 0,
	207, 196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 959, 378, 342, 273, 962,
	961, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1172, 0, 1175,
	0, 0, 0, 0, 0, 0, 137, 0, 0, 0,
	0, 960, 0, 1167, 1168, 1166, 0, 0, 0, 0,
	0, 0, 0, 0, 212, 0, 0, 0, 0, 0,
	0, 0, 1169, 0, 0, 0, 373, 0, 0, 0,
	0, 307, 226, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 242, 154, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 155, 0, 0,
	0, 285, 0, 0, 142, 158, 252, 0, 0, 0,
	197, 0, 318, 0, 372, 958, 0, 317, 254, 365,
	0, 0, 371, 0, 349, 379, 383, 219, 0, 188,
	339, 210, 205, 0, 0, 0, 227, 306, 200, 246,
	0, 0, 0, 193, 0, 0, 0, 338, 362, 160,
	270, 363, 382, 177, 355, 271, 278, 190, 192, 191,
	172, 332, 361, 182, 195, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 236, 228, 0, 0, 376, 144,
	327, 326, 0, 235, 0, 145, 136, 313, 146, 243,
	163, 0, 385, 176, 248, 356, 957, 222, 284, 199,
	0, 294, 0, 157, 309, 266, 268, 265, 269, 225,
	140, 147, 0, 311, 329, 360, 178, 345, 138, 139,
	141, 149, 320, 150, 151, 0, 260, 214, 218, 229,
	240, 0, 316, 346, 377, 0, 173, 166, 348, 370,
	183, 328, 331, 384, 0, 168, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 0, 0, 0, 0, 0,
	224, 0, 368, 369, 198, 386, 0, 0, 169, 0,
	0, 281, 289, 280, 0, 364, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 217, 231, 304, 256, 305,
	232, 276, 275, 277, 258, 0, 0, 164, 0, 343,
	0, 0, 347, 180, 0, 0, 359, 143, 310, 181,
	223, 215, 303, 279, 174, 234, 341, 247, 255, 0,
	0, 293, 319, 187, 374, 340, 211, 0, 286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 152,
	153, 0, 0, 0, 194, 131, 0, 0, 0, 132,
	0, 0, 133, 134, 0, 0, 0, 0, 135, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 165, 175, 186, 204, 202,
	216, 244, 267, 272, 298, 330, 335, 350, 351, 352,
	353, 206, 0, 209, 185, 314, 184, 257, 237, 299,
	357, 358, 0, 159, 170, 251, 0, 312, 221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 375, 203,
	0, 0, 0, 171, 179, 189, 201, 213, 220, 230,
	233, 238, 239, 241, 245, 259, 261, 262, 263, 264,
	282, 283, 287, 288, 291, 292, 295, 296, 297, 301,
	302, 308, 148, 315, 321, 322, 323, 324, 325, 333,
	334, 336, 337, 344, 366, 367, 380, 381, 354, 0,
	156, 0, 0, 162, 0, 0, 0, 0, 0, 290,
	161, 0, 0, 0, 0, 0, 0, 0, 208, 0,
	0, 0, 0, 0, 0, 0, 207, 196, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 959, 378, 342, 273, 962, 961, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 955, 0, 0, 0, 0, 0, 0,
	0, 0, 137, 0, 0, 0, 0, 960, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	212, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 373, 0, 0, 0, 0, 307, 226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 242, 154, 0, 0, 0, 0, 0, 0,
	0, 250, 963, 155, 0, 953, 0, 285, 0, 0,
	142, 158, 252, 0, 0, 0, 197, 952, 318, 0,
	372, 958, 0, 317, 254, 365, 0, 0, 371, 0,
	349, 379, 383, 219, 0, 188, 339, 210, 205, 0,
	0, 0, 227, 306, 200, 246, 0, 0, 0, 193,
	0, 0, 0, 338, 362, 160, 270, 363, 382, 177,
	355, 271, 278, 190, 192, 191, 172, 332, 361, 182,
	195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	236, 228, 0, 0, 376, 144, 327, 326, 0, 235,
	0, 145, 136, 313, 146, 243, 163, 0, 385, 176,
	248, 356, 957, 222, 284, 199, 0, 294, 0, 157,
	309, 266, 268, 265, 269, 225, 140, 147, 0, 311,
	329, 360, 178, 345, 138, 139, 141, 149, 320, 150,
	151, 0, 260, 214, 218, 229, 240, 0, 316, 346,
	377, 0, 173, 166, 348, 370, 183, 328, 331, 384,
	0, 168, 0, 0, 0, 0, 0, 0, 0, 167,
	0, 0, 0, 0, 0, 0, 224, 0, 368, 369,
	198, 386, 0, 0, 169, 0, 0, 281, 289, 280,
	0, 364, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 217, 231, 304, 256, 305, 232, 276, 275, 277,
	258, 0, 0, 164, 0, 343, 0, 0, 347, 180,
	0, 0, 359, 143, 310, 181, 223, 215, 303, 279,
	174, 234, 341, 247, 255, 0, 0, 293, 319, 187,
	374, 340, 211, 0, 286, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 152, 153, 0, 0, 0,
	194, 131, 0, 0, 0, 132, 0, 0, 133, 134,
	0, 0, 0, 0, 135, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 165, 175, 186, 204, 202, 216, 244, 267, 272,
	298, 330, 335, 350, 351, 352, 353, 206, 0, 209,
	185, 314, 184, 257, 237, 299, 357, 358, 0, 159,
	170, 251, 0, 312, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 375, 203, 0, 0, 0, 171,
	179, 189, 201, 213, 220, 230, 233, 238, 239, 241,
	245, 259, 261, 262, 263, 264, 282, 283, 287, 288,
	291, 292, 295, 296, 297, 301, 302, 308, 148, 315,
	321, 322, 323, 324, 325, 333, 334, 336, 337, 344,
	366, 367, 380, 381, 354, 0, 156, 0, 0, 162,
	0, 0, 0, 0, 0, 290, 161, 0, 0, 0,
	0, 0, 0, 0, 208, 0, 0, 0, 0, 0,
	0, 0, 207, 196, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 959, 378, 342,
	273, 962, 961, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1172,
	0, 1175, 0, 0, 0, 0, 0, 0, 137, 0,
	0, 0, 0, 960, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 212, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 373, 0,
	0, 0, 0, 307, 226, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 242, 154,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 155,
	0, 0, 0, 285, 0, 0, 142, 158, 252, 0,
	0, 0, 197, 1844, 318, 0, 372, 958, 0, 317,
	254, 365, 0, 0, 371, 0, 349, 379, 383, 219,
	0, 188, 339, 210, 205, 0, 0, 0, 227, 306,
	200, 246, 0, 0, 0, 193, 0, 0, 0, 338,
	362, 160, 270, 363, 382, 177, 355, 271, 278, 190,
	192, 191, 172, 332, 361, 182, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 236, 228, 0, 0,
	376, 144, 327, 326, 0, 235, 0, 145, 136, 313,
	146, 243, 163, 0, 385, 176, 248, 356, 957, 222,
	284, 199, 0, 294, 0, 157, 309, 266, 268, 265,
	269, 225, 140, 147, 0, 311, 329, 360, 178, 345,
	138, 139, 141, 149, 320, 150, 151, 0, 260, 214,
	218, 229, 240, 0, 316, 346, 377, 0, 173, 166,
	348, 370, 183, 328, 331, 384, 0, 168, 0, 0,
	0, 0, 0, 0, 0, 167, 0, 0, 0, 0,
	0, 0, 224, 0, 368, 369, 198, 386, 0, 0,
	169, 0, 0, 281, 289, 280, 0, 364, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 217, 231, 304,
	256, 305, 232, 276, 275, 277, 258, 0, 0, 164,
	0, 343, 0, 0, 347, 180, 0, 0, 359, 143,
	310, 181, 223, 215, 303, 279, 174, 234, 341, 247,
	255, 0, 0, 293, 319, 187, 374, 340, 211, 0,
	286, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 152, 153, 0, 0, 0, 194, 131, 0, 0,
	0, 132, 0, 0, 133, 134, 0, 0, 0, 0,
	135, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 165, 175, 186,
	204, 202, 216, 244, 267, 272, 298, 330, 335, 350,
	351, 352, 353, 206, 0, 209, 185, 314, 184, 257,
	237, 299, 357, 358, 0, 159, 170, 251, 0, 312,
	221, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	375, 203, 0, 0, 0, 171, 179, 189, 201, 213,
	220, 230, 233, 238, 239, 241, 245, 259, 261, 262,
	263, 264, 282, 283, 287, 288, 291, 292, 295, 296,
	297, 301, 302, 308, 148, 315, 321, 322, 323, 324,
	325, 333, 334, 336, 337, 344, 366, 367, 380, 381,
	354, 0, 156, 0, 0, 162, 0, 0, 0, 0,
	0, 290, 161, 0, 0, 0, 0, 0, 0, 0,
	208, 0, 0, 0, 0, 0, 0, 0, 207, 196,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 959, 378, 342, 273, 962, 961, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2776, 0, 0, 0, 0,
	0, 0, 0, 0, 137, 0, 0, 0, 0, 960,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 212, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 373, 0, 0, 0, 0, 307,
	226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 242, 154, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 155, 0, 0, 0, 285,
	0, 0, 142, 158, 252, 0, 0, 0, 197, 0,
	318, 0, 372, 958, 0, 317, 254, 365, 0, 0,
	371, 0, 349, 379, 383, 219, 0, 188, 339, 210,
	205, 0, 0, 0, 227, 306, 200, 246, 0, 0,
	0, 193, 0, 0, 0, 338, 362, 160, 270, 363,
	382, 177, 355, 271, 278, 190, 192, 191, 172, 332,
	361, 182, 195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 236, 228, 0, 0, 376, 144, 327, 326,
	0, 235, 0, 145, 136, 313, 146, 243, 163, 0,
	385, 176, 248, 356, 957, 222, 284, 199, 0, 294,
	0, 157, 309, 266, 268, 265, 269, 225, 140, 147,
	0, 311, 329, 360, 178, 345, 138, 139, 141, 149,
	320, 150, 151, 0, 260, 214, 218, 229, 240, 0,
	316, 346, 377, 0, 173, 166, 348, 370, 183, 328,
	331, 384, 0, 168, 0, 0, 0, 0, 0, 0,
	0, 167, 0, 0, 0, 0, 0, 0, 224, 0,
	368, 369, 198, 386, 0, 0, 169, 0, 0, 281,
	289, 280, 0, 364, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 217, 231, 304, 256, 305, 232, 276,
	275, 277, 258, 0, 0, 164, 0, 343, 0, 0,
	347, 180, 0, 0, 359, 143, 310, 181, 223, 215,
	303, 279, 174, 234, 341, 247, 255, 0, 0, 293,
	319, 187, 374, 340, 211, 0, 286, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 152, 153, 0,
	0, 0, 194, 131, 0, 0, 0, 132, 0, 0,
	133, 134, 0, 0, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 165, 175, 186, 204, 202, 216, 244,
	267, 272, 298, 330, 335, 350, 351, 352, 353, 206,
	0, 209, 185, 314, 184, 257, 237, 299, 357, 358,
	0, 159, 170, 251, 0, 312, 221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 375, 203, 0, 0,
	0, 171, 179, 189, 201, 213, 220, 230, 233, 238,
	239, 241, 245, 259, 261, 262, 263, 264, 282, 283,
	287, 288, 291, 292, 295, 296, 297, 301, 302, 308,
	148, 315, 321, 322, 323, 324, 325, 333, 334, 336,
	337, 344, 366, 367, 380, 381, 354, 0, 156, 0,
	0, 162, 0, 0, 0, 0, 0, 290, 161, 0,
	0, 0, 0, 0, 0, 0, 208, 0, 0, 0,
	0, 0, 0, 0, 207, 196, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 959,
	378, 342, 273, 962, 961, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2771, 0, 0, 0, 0, 0, 0, 0, 0,
	137, 0, 0, 0, 0, 960, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 212, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	373, 0, 0, 0, 0, 307, 226, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	242, 154, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 155, 0, 0, 0, 285, 0, 0, 142, 158,
	252, 0, 0, 0, 197, 0, 318, 0, 372, 958,
	0, 317, 254, 365, 0, 0, 371, 0, 349, 379,
	383, 219, 0, 188, 339, 210, 205, 0, 0, 0,
	227, 306, 200, 246, 0, 0, 0, 193, 0, 0,
	0, 338, 362, 160, 270, 363, 382, 177, 355, 271,
	278, 190, 192, 191, 172, 332, 361, 182, 195, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 236, 228,
	0, 0, 376, 144, 327, 326, 0, 235, 0, 145,
	136, 313, 146, 243, 163, 0, 385, 176, 248, 356,
	957, 222, 284, 199, 0, 294, 0, 157, 309, 266,
	268, 265, 269, 225, 140, 147, 0, 311, 329, 360,
	178, 345, 138, 139, 141, 149, 320, 150, 151, 0,
	260, 214, 218, 229, 240, 0, 316, 346, 377, 0,
	173, 166, 348, 370, 183, 328, 331, 384, 0, 168,
	0, 0, 0, 0, 0, 0, 0, 167, 0, 0,
	0, 0, 0, 0, 224, 0, 368, 369, 198, 386,
	0, 0, 169, 0, 0, 281, 289, 280, 0, 364,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 217,
	231, 304, 256, 305, 232, 276, 275, 277, 258, 0,
	0, 164, 0, 343, 0, 0, 347, 180, 0, 0,
	359, 143, 310, 181, 223, 215, 303, 279, 174, 234,
	341, 247, 255, 0, 0, 293, 319, 187, 374, 340,
	211, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 152, 153, 0, 0, 0, 194, 131,
	0, 0, 0, 132, 0, 0, 133, 134, 0, 0,
	0, 0, 135, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 165,
	175, 186, 204, 202, 216, 244, 267, 272, 298, 330,
	335, 350, 351, 352, 353, 206, 0, 209, 185, 314,
	184, 257, 237, 299, 357, 358, 0, 159, 170, 251,
	0, 312, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 203, 0, 0, 0, 171, 179, 189,
	201, 213, 220, 230, 233, 238, 239, 241, 245, 259,
	261, 262, 263, 264, 282, 283, 287, 288, 291, 292,
	295, 296, 297, 301, 302, 308, 148, 315, 321, 322,
	323, 324, 325, 333, 334, 336, 337, 344, 366, 367,
	380, 381, 0, 0, 156, 36, 354, 162, 0, 0,
	0, 0, 0, 0, 161, 0, 0, 290, 0, 0,
	0, 0, 0, 0, 0, 0, 208, 0, 0, 0,
	0, 0, 0, 0, 207, 196, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2288, 253, 0, 0,
	378, 342, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 77, 0, 0,
	0, 1978, 0, 0, 0, 0, 0, 0, 0, 0,
	137, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 212, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	373, 0, 0, 0, 0, 307, 226, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	242, 154, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 155, 0, 0, 0, 285, 0, 0, 142, 158,
	252, 0, 0, 0, 197, 0, 318, 0, 372, 0,
	0, 317, 254, 365, 0, 0, 371, 0, 349, 379,
	383, 219, 0, 188, 339, 210, 205, 0, 0, 0,
	227, 306, 200, 246, 0, 0, 0, 193, 0, 0,
	0, 338, 362, 160, 270, 363, 382, 177, 355, 271,
	278, 190, 192, 191, 172, 332, 361, 182, 195, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 236, 228,
	0, 0, 376, 144, 327, 326, 0, 235, 0, 145,
	136, 313, 146, 243, 163, 0, 385, 176, 248, 356,
	128, 222, 284, 199, 0, 294, 0, 157, 309, 266,
	268, 265, 269, 225, 140, 147, 0, 311, 329, 360,
	178, 345, 138, 139, 141, 149, 320, 150, 151, 0,
	260, 214, 218, 229, 240, 0, 316, 346, 377, 0,
	173, 166, 348, 370, 183, 328, 331, 384, 0, 168,
	0, 0, 0, 0, 0, 0, 0, 167, 0, 0,
	0, 0, 0, 0, 224, 0, 368, 369, 198, 386,
	0, 0, 169, 0, 0, 281, 289, 280, 0, 364,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 217,
	231, 304, 256, 305, 232, 276, 275, 277, 258, 0,
	0, 164, 0, 343, 0, 0, 347, 180, 0, 0,
	359, 143, 310, 181, 223, 215, 303, 279, 174, 234,
	341, 247, 255, 0, 0, 293, 319, 187, 374, 340,
	211, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 152, 153, 0, 0, 0, 194, 131,
	0, 0, 0, 132, 0, 0, 133, 134, 0, 0,
	0, 0, 135, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1979, 300, 165,
	175, 186, 204, 202, 216, 244, 267, 272, 298, 330,
	335, 350, 351, 352, 353, 206, 0, 209, 185, 314,
	184, 257, 237, 299, 357, 358, 0, 159, 170, 251,
	492, 312, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 203, 0, 0, 0, 171, 179, 189,
	201, 213, 220, 230, 233, 238, 239, 241, 245, 259,
	261, 262, 263, 264, 282, 283, 287, 288, 291, 292,
	295, 296, 297, 301, 302, 308, 148, 315, 321, 322,
	323, 324, 325, 333, 334, 336, 337, 344, 366, 367,
	380, 381, 354, 0, 156, 0, 0, 162, 0, 0,
	0, 0, 0, 290, 161, 0, 0, 0, 0, 0,
	0, 0, 208, 0, 0, 0, 0, 0, 0, 0,
	207, 196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 378, 342, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 77, 0, 0, 0, 1978, 0, 0,
	0, 0, 0, 0, 0, 0, 137, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 212, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 373, 0, 0, 0,
	0, 307, 226, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 242, 154, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 155, 0, 0,
	0, 285, 0, 0, 142, 158, 252, 0, 0, 0,
	197, 0, 318, 0, 372, 0, 0, 317, 254, 365,
	0, 0, 371, 0, 349, 379, 383, 219, 0, 188,
	339, 210, 205, 0, 0, 0, 227, 306, 200, 246,
	0, 0, 0, 193, 0, 0, 0, 338, 362, 160,
	270, 363, 382, 177, 355, 271, 278, 190, 192, 191,
	172, 332, 361, 182, 195, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 236, 228, 0, 0, 376, 144,
	327, 326, 0, 235, 0, 145, 136, 313, 146, 243,
	163, 0, 385, 176, 248, 356, 128, 222, 284, 199,
	0, 294, 0, 157, 309, 266, 268, 265, 269, 225,
	140, 147, 0, 311, 329, 360, 178, 345, 138, 139,
	141, 149, 320, 150, 151, 0, 260, 214, 218, 229,
	240, 0, 316, 346, 377, 0, 173, 166, 348, 370,
	183, 328, 331, 384, 0, 168, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 0, 0, 0, 0, 0,
	224, 0, 368, 369, 198, 386, 0, 0, 169, 0,
	0, 281, 289, 280, 0, 364, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 217, 231, 304, 256, 305,
	232, 276, 275, 277, 258, 0, 0, 164, 0, 343,
	0, 0, 347, 180, 0, 0, 359, 143, 310, 181,
	223, 215, 303, 279, 174, 234, 341, 247, 255, 0,
	0, 293, 319, 187, 374, 340, 211, 0, 286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 152,
	153, 0, 0, 0, 194, 131, 0, 0, 0, 132,
	0, 0, 133, 134, 0, 0, 0, 0, 135, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1979, 300, 165, 175, 186, 204, 202,
	216, 244, 267, 272, 298, 330, 335, 350, 351, 352,
	353, 206, 0, 209, 185, 314, 184, 257, 237, 299,
	357, 358, 0, 159, 170, 251, 0, 312, 221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 375, 203,
	0, 0, 0, 171, 179, 189, 201, 213, 220, 230,
	233, 238, 239, 241, 245, 259, 261, 262, 263, 264,
	282, 283, 287, 288, 291, 292, 295, 296, 297, 301,
	302, 308, 148, 315, 321, 322, 323, 324, 325, 333,
	334, 336, 337, 344, 366, 367, 380, 381, 354, 0,
	156, 0, 0, 162, 0, 0, 0, 0, 0, 290,
	161, 0, 0, 0, 0, 0, 0, 0, 208, 0,
	0, 0, 0, 0, 0, 0, 207, 196, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 378, 342, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 129, 0, 0, 0, 0, 0, 0,
	0, 0, 137, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	212, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 373, 0, 0, 0, 0, 307, 226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 242, 154, 0, 0, 0, 0, 0, 0,
	0, 250, 0, 155, 0, 0, 0, 285, 0, 0,
	142, 158, 252, 0, 0, 0, 197, 0, 318, 0,
	372, 2090, 0, 317, 254, 365, 0, 0, 371, 0,
	349, 379, 383, 219, 0, 188, 339, 210, 205, 0,
	0, 0, 227, 306, 200, 246, 0, 0, 0, 193,
	0, 0, 0, 338, 362, 160, 270, 363, 382, 177,
	355, 271, 278, 190, 192, 191, 172, 332, 361, 182,
	195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	236, 228, 0, 0, 376, 144, 327, 326, 0, 235,
	0, 145, 136, 313, 146, 243, 163, 0, 385, 176,
	248, 356, 128, 222, 284, 199, 0, 294, 0, 157,
	309, 266, 268, 265, 269, 225, 140, 147, 0, 311,
	329, 360, 178, 345, 138, 139, 141, 149, 320, 150,
	151, 0, 260, 214, 218, 229, 240, 0, 316, 346,
	377, 0, 173, 166, 348, 370, 183, 328, 331, 384,
	0, 168, 0, 0, 0, 0, 0, 0, 0, 167,
	0, 0, 0, 0, 0, 0, 224, 0, 368, 369,
	198, 386, 0, 0, 169, 0, 0, 281, 289, 280,
	0, 364, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 217, 231, 304, 256, 305, 232, 276, 275, 277,
	258, 0, 0, 164, 0, 343, 0, 0, 347, 180,
	0, 0, 359, 143, 310, 181, 223, 215, 303, 279,
	174, 234, 341, 247, 255, 0, 0, 293, 319, 187,
	374, 340, 211, 0, 286, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 152, 153, 0, 0, 0,
	194, 131, 0, 0, 0, 132, 0, 0, 133, 134,
	0, 0, 0, 0, 135, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 165, 175, 186, 204, 202, 216, 244, 267, 272,
	298, 330, 335, 350, 351, 352, 353, 206, 0, 209,
	185, 314, 184, 257, 237, 299, 357, 358, 0, 159,
	170, 251, 0, 312, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 375, 203, 0, 0, 0, 171,
	179, 189, 201, 213, 220, 230, 233, 238, 239, 241,
	245, 259, 261, 262, 263, 264, 282, 283, 287, 288,
	291, 292, 295, 296, 297, 301, 302, 308, 148, 315,
	321, 322, 323, 324, 325, 333, 334, 336, 337, 344,
	366, 367, 380, 381, 354, 0, 156, 0, 0, 162,
	0, 0, 0, 0, 0, 290, 161, 0, 0, 0,
	0, 0, 0, 0, 208, 0, 0, 0, 0, 0,
	0, 0, 207, 196, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 378, 342,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 129,
	0, 0, 0, 0, 0, 0, 0, 0, 137, 0,
	0, 0, 0, 0, 1965, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 212, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 373, 0,
	0, 0, 0, 307, 226, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 242, 154,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 155,
	0, 0, 0, 285, 0, 0, 142, 158, 252, 0,
	0, 0, 197, 0, 318, 0, 372, 0, 0, 317,
	254, 365, 0, 0, 371, 0, 349, 379, 383, 219,
	0, 188, 339, 210, 205, 0, 0, 0, 227, 306,
	200, 246, 0, 0, 0, 193, 0, 0, 0, 338,
	362, 160, 270, 363, 382, 177, 355, 271, 278, 190,
	192, 191, 172, 332, 361, 182, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 236, 228, 0, 0,
	376, 144, 327, 326, 0, 235, 0, 145, 136, 313,
	146, 243, 163, 0, 385, 176, 248, 356, 128, 222,
	284, 199, 0, 294, 0, 157, 309, 266, 268, 265,
	269, 225, 140, 147, 0, 311, 329, 360, 178, 345,
	138, 139, 141, 149, 320, 150, 151, 0, 260, 214,
	218, 229, 240, 0, 316, 346, 377, 0, 173, 166,
	348, 370, 183, 328, 331, 384, 0, 168, 0, 0,
	0, 0, 0, 0, 0, 167, 0, 0, 0, 0,
	0, 0, 224, 0, 368, 369, 198, 386, 0, 0,
	169, 0, 0, 281, 289, 280, 0, 364, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 217, 231, 304,
	256, 305, 232, 276, 275, 277, 258, 0, 0, 164,
	0, 343, 0, 0, 347, 180, 0, 0, 359, 143,
	310, 181, 223, 215, 303, 279, 174, 234, 341, 247,
	255, 0, 0, 293, 319, 187, 374, 340, 211, 0,
	286, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 152, 153, 0, 0, 0, 194, 131, 0, 0,
	0, 132, 0, 0, 133, 134, 0, 0, 0, 0,
	135, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 165, 175, 186,
	204, 202, 216, 244, 267, 272, 298, 330, 335, 350,
	351, 352, 353, 206, 0, 209, 185, 314, 184, 257,
	237, 299, 357, 358, 0, 159, 170, 251, 0, 312,
	221, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	375, 203, 0, 0, 0, 171, 179, 189, 201, 213,
	220, 230, 233, 238, 239, 241, 245, 259, 261, 262,
	263, 264, 282, 283, 287, 288, 291, 292, 295, 296,
	297, 301, 302, 308, 148, 315, 321, 322, 323, 324,
	325, 333, 334, 336, 337, 344, 366, 367, 380, 381,
	354, 0, 156, 0, 1302, 162, 0, 0, 0, 0,
	0, 290, 161, 0, 0, 0, 0, 0, 0, 0,
	208, 0, 0, 0, 0, 0, 0, 0, 207, 196,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 378, 342, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 129, 0, 0, 0, 0,
	0, 0, 0, 0, 137, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 212, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 373, 0, 0, 0, 0, 307,
	226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 242, 154, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 155, 0, 0, 0, 285,
	0, 0, 142, 158, 252, 0, 0, 0, 197, 0,
	318, 0, 372, 0, 0, 317, 254, 365, 0, 0,
	371, 0, 349, 379, 383, 219, 0, 188, 339, 210,
	205, 0, 0, 0, 227, 306, 200, 246, 0, 0,
	0, 193, 0, 0, 0, 338, 362, 160, 270, 363,
	382, 177, 355, 271, 278, 190, 192, 191, 172, 332,
	361, 182, 195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 236, 228, 0, 0, 376, 144, 327, 326,
	0, 235, 0, 145, 136, 313, 146, 243, 163, 0,
	385, 176, 248, 356, 128, 222, 284, 199, 0, 294,
	0, 157, 309, 266, 268, 265, 269, 225, 140, 147,
	0, 311, 329, 360, 178, 345, 138, 139, 141, 149,
	320, 150, 151, 0, 260, 214, 218, 229, 240, 0,
	316, 346, 377, 0, 173, 166, 348, 370, 183, 328,
	331, 384, 0, 168, 0, 0, 0, 0, 0, 0,
	0, 167, 0, 0, 0, 0, 0, 0, 224, 0,
	368, 369, 198, 386, 0, 0, 169, 0, 0, 281,
	289, 280, 0, 364, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 217, 231, 304, 256, 305, 232, 276,
	275, 277, 258, 0, 0, 164, 0, 343, 0, 0,
	347, 180, 0, 0, 359, 143, 310, 181, 223, 215,
	303, 279, 174, 234, 341, 247, 255, 0, 0, 293,
	319, 187, 374, 340, 211, 0, 286, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 152, 153, 0,
	0, 0, 194, 131, 0, 0, 0, 132, 0, 0,
	133, 134, 0, 0, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 165, 175, 186, 204, 202, 216, 244,
	267, 272, 298, 330, 335, 350, 351, 352, 353, 206,
	0, 209, 185, 314, 184, 257, 237, 299, 357, 358,
	0, 159, 170, 251, 0, 312, 221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 375, 203, 0, 0,
	0, 171, 179, 189, 201, 213, 220, 230, 233, 238,
	239, 241, 245, 259, 261, 262, 263, 264, 282, 283,
	287, 288, 291, 292, 295, 296, 297, 301, 302, 308,
	148, 315, 321, 322, 323, 324, 325, 333, 334, 336,
	337, 344, 366, 367, 380, 381, 354, 0, 156, 0,
	0, 162, 0, 0, 0, 0, 0, 290, 161, 0,
	0, 0, 0, 0, 0, 0, 208, 0, 0, 0,
	0, 0, 0, 0, 207, 196, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	378, 342, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 129, 0, 0, 0, 0, 0, 0, 0, 0,
	137, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 212, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	373, 0, 0, 0, 0, 307, 226, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 123, 0,
	242, 154, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 155, 0, 0, 0, 285, 0, 0, 142, 158,
	252, 0, 0, 0, 197, 0, 318, 0, 372, 0,
	0, 317, 254, 365, 0, 0, 371, 0, 349, 379,
	383, 219, 0, 188, 339, 210, 205, 0, 0, 0,
	227, 306, 200, 246, 0, 0, 0, 193, 0, 0,
	0, 338, 362, 160, 270, 363, 382, 177, 355, 271,
	278, 190, 192, 191, 172, 332, 361, 182, 195, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 236, 228,
	0, 0, 376, 144, 327, 326, 0, 235, 0, 145,
	136, 313, 146, 243, 163, 0, 385, 176, 248, 356,
	128, 222, 284, 199, 0, 294, 0, 157, 309, 266,
	268, 265, 269, 225, 140, 147, 0, 311, 329, 360,
	178, 345, 138, 139, 141, 149, 320, 150, 151, 0,
	260, 214, 218, 229, 240, 0, 316, 346, 377, 0,
	173, 166, 348, 370, 183, 328, 331, 384, 0, 168,
	0, 0, 0, 0, 0, 0, 0, 167, 0, 0,
	0, 0, 0, 0, 224, 0, 368, 369, 198, 386,
	0, 0, 169, 0, 0, 281, 289, 280, 0, 364,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 217,
	231, 304, 256, 305, 232, 276, 275, 277, 258, 0,
	0, 164, 0, 343, 0, 0, 347, 180, 0, 0,
	359, 143, 310, 181, 223, 215, 303, 279, 174, 234,
	341, 247, 255, 0, 0, 293, 319, 187, 374, 340,
	211, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 152, 153, 0, 0, 0, 194, 131,
	0, 0, 0, 132, 0, 0, 133, 134, 0, 0,
	0, 0, 135, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 165,
	175, 186, 204, 202, 216, 244, 267, 272, 298, 330,
	335, 350, 351, 352, 353, 206, 0, 209, 185, 314,
	184, 257, 237, 299, 357, 358, 0, 159, 170, 251,
	0, 312, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 203, 0, 0, 0, 171, 179, 189,
	201, 213, 220, 230, 233, 238, 239, 241, 245, 259,
	261, 262, 263, 264, 282, 283, 287, 288, 291, 292,
	295, 296, 297, 301, 302, 308, 148, 315, 321, 322,
	323, 324, 325, 333, 334, 336, 337, 344, 366, 367,
	380, 381, 354, 0, 156, 0, 0, 162, 0, 0,
	0, 0, 0, 290, 161, 0, 0, 0, 0, 0,
	0, 0, 208, 0, 0, 0, 0, 0, 0, 0,
	207, 196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 378, 342, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 129, 0, 0,
	0, 0, 0, 0, 0, 0, 137, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 212, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 373, 0, 0, 0,
	0, 307, 226, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 242, 154, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 155, 0, 0,
	0, 285, 0, 0, 142, 158, 252, 0, 0, 0,
	197, 0, 318, 0, 372, 0, 0, 317, 254, 365,
	0, 0, 371, 0, 349, 379, 383, 219, 0, 188,
	339, 210, 205, 0, 0, 0, 227, 306, 200, 246,
	0, 0, 0, 193, 0, 0, 0, 338, 362, 160,
	270, 363, 382, 177, 355, 271, 278, 190, 192, 191,
	172, 332, 361, 182, 195, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 236, 228, 0, 0, 376, 144,
	327, 326, 0, 235, 0, 145, 136, 313, 146, 243,
	163, 0, 385, 176, 248, 356, 128, 222, 284, 199,
	0, 294, 0, 157, 309, 266, 268, 265, 269, 225,
	140, 147, 0, 311, 329, 360, 178, 345, 138, 139,
	141, 149, 320, 150, 151, 0, 260, 214, 218, 229,
	240, 0, 316, 346, 377, 0, 173, 166, 348, 370,
	183, 328, 331, 384, 0, 168, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 0, 0, 0, 0, 0,
	224, 0, 368, 369, 198, 386, 0, 0, 169, 0,
	0, 281, 289, 280, 0, 364, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 217, 231, 304, 256, 305,
	232, 276, 275, 277, 258, 0, 0, 164, 0, 343,
	0, 0, 347, 180, 0, 0, 359, 143, 310, 181,
	223, 215, 303, 279, 174, 234, 341, 247, 255, 0,
	0, 293, 319, 187, 374, 340, 211, 0, 286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 152,
	153, 0, 0, 0, 194, 131, 0, 0, 0, 132,
	0, 0, 133, 134, 0, 0, 0, 0, 135, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 165, 175, 186, 204, 202,
	216, 244, 267, 272, 298, 330, 335, 350, 351, 352,
	353, 206, 0, 209, 185, 314, 184, 257, 237, 299,
	357, 358, 0, 159, 170, 251, 0, 312, 221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 375, 203,
	0, 0, 0, 171, 179, 189, 201, 213, 220, 230,
	233, 238, 239, 241, 245, 259, 261, 262, 263, 264,
	282, 283, 287, 288, 291, 292, 295, 296, 297, 301,
	302, 308, 148, 315, 321, 322, 323, 324, 325, 333,
	334, 336, 337, 344, 366, 367, 380, 381, 0, 0,
	156, 0, 0, 162, 458, 354, 452, 463, 446, 0,
	161, 0, 0, 0, 0, 0, 290, 0, 0, 469,
	0, 0, 0, 0, 0, 208, 0, 0, 453, 0,
	0, 0, 0, 207, 196, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 253, 0, 0, 378,
	342, 273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	467, 0, 466, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 212, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 373,
	0, 0, 0, 0, 307, 226, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 445, 444,
	447, 0, 0, 0, 274, 0, 0, 0, 451, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	155, 0, 0, 0, 285, 455, 0, 0, 158, 252,
	459, 0, 0, 197, 0, 318, 0, 372, 0, 0,
	317, 254, 365, 0, 462, 371, 0, 349, 379, 383,
	219, 0, 188, 339, 210, 205, 0, 0, 0, 227,
	306, 200, 246, 0, 0, 0, 193, 0, 0, 0,
	338, 362, 160, 270, 363, 382, 177, 355, 271, 278,
	190, 192, 191, 172, 332, 361, 182, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 236, 228, 0,
	0, 376, 0, 327, 326, 0, 235, 0, 0, 0,
	313, 0, 243, 163, 0, 385, 176, 248, 356, 0,
	222, 284, 199, 0, 294, 0, 157, 309, 266, 268,
	265, 269, 225, 0, 0, 0, 472, 329, 360, 178,
	345, 448, 449, 450, 456, 457, 460, 461, 464, 260,
	214, 218, 229, 240, 0, 316, 346, 377, 0, 173,
	166, 348, 370, 183, 328, 331, 384, 0, 168, 0,
	0, 0, 0, 0, 0, 0, 167, 0, 0, 0,
	0, 0, 0, 224, 0, 368, 369, 198, 386, 0,
	0, 169, 0, 0, 281, 289, 280, 0, 364, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 217, 231,
	304, 256, 305, 232, 276, 275, 277, 258, 0, 0,
	164, 0, 343, 0, 0, 347, 180, 0, 0, 359,
	0, 310, 181, 223, 215, 303, 279, 174, 234, 341,
	247, 255, 0, 0, 293, 319, 187, 374, 340, 211,
	0, 286, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 194, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 165, 175,
	186, 204, 202, 216, 244, 267, 272, 298, 330, 335,
	350, 351, 352, 353, 206, 0, 209, 185, 314, 184,
	257, 237, 299, 357, 358, 0, 159, 170, 251, 0,
	312, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 375, 203, 0, 0, 0, 171, 179, 189, 201,
	213, 220, 230, 233, 238, 239, 241, 245, 259, 261,
	262, 263, 264, 282, 283, 287, 288, 291, 292, 295,
	296, 297, 301, 302, 308, 454, 315, 321, 322, 323,
	324, 325, 333, 334, 336, 337, 344, 366, 367, 380,
	381, 0, 0, 156, 0, 0, 162, 458, 354, 452,
	463, 446, 0, 161, 0, 0, 0, 0, 0, 290,
	0, 0, 438, 0, 0, 0, 0, 0, 208, 0,
	0, 453, 0, 0, 0, 0, 207, 196, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 378, 342, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 467, 0, 466, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	212, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 373, 0, 0, 0, 0, 307, 226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 445, 444, 447, 0, 0, 0, 274, 0, 0,
	0, 451, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 0, 155, 0, 0, 0, 285, 455, 0,
	0, 158, 252, 459, 0, 0, 197, 0, 318, 0,
	372, 0, 0, 317, 254, 365, 0, 462, 371, 0,
	349, 379, 383, 219, 0, 188, 339, 210, 205, 0,
	0, 0, 227, 306, 200, 246, 0, 0, 0, 193,
	0, 0, 0, 338, 362, 160, 270, 363, 382, 177,
	355, 271, 278, 190, 192, 191, 172, 332, 361, 182,
	195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	236, 228, 0, 0, 376, 0, 327, 326, 0, 235,
	0, 0, 0, 313, 0, 243, 163, 0, 385, 176,
	248, 356, 0, 222, 284, 199, 0, 294, 0, 157,
	309, 266, 268, 265, 269, 225, 0, 0, 0, 441,
	329, 360, 178, 345, 448, 449, 450, 456, 457, 460,
	461, 464, 260, 214, 218, 229, 240, 0, 316, 346,
	377, 0, 173, 166, 348, 370, 183, 328, 331, 384,
	0, 168, 0, 0, 0, 0, 0, 0, 0, 167,
	0, 0, 0, 0, 0, 0, 224, 0, 368, 369,
	198, 386, 0, 0, 169, 0, 0, 281, 289, 280,
	0, 364, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 217, 231, 304, 256, 305, 232, 276, 275, 277,
	258, 0, 0, 164, 0, 343, 0, 0, 347, 180,
	0, 0, 359, 0, 310, 181, 223, 215, 303, 279,
	174, 234, 341, 247, 255, 0, 0, 293, 319, 187,
	374, 340, 211, 0, 286, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 165, 175, 186, 204, 202, 216, 244, 267, 272,
	298, 330, 335, 350, 351, 352, 353, 206, 0, 209,
	185, 314, 184, 257, 237, 299, 357, 358, 0, 159,
	170, 251, 0, 312, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 375, 203, 0, 0, 0, 171,
	179, 189, 201, 213, 220, 230, 233, 238, 239, 241,
	245, 259, 261, 262, 263, 264, 282, 283, 287, 288,
	291, 292, 295, 296, 297, 301, 302, 308, 454, 315,
	321, 322, 323, 324, 325, 333, 334, 336, 337, 344,
	366, 367, 380, 381, 354, 0, 156, 0, 0, 162,
	0, 0, 0, 0, 0, 290, 161, 0, 0, 0,
	0, 0, 0, 0, 208, 0, 0, 0, 0, 0,
	0, 0, 207, 196, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 378, 342,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 955,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 212, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 373, 0,
	0, 0, 0, 307, 226, 1187, 1186, 1196, 1197, 1189,
	1190, 1191, 1192, 1193, 1194, 1195, 1188, 0, 0, 1198,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 155,
	0, 0, 0, 285, 0, 0, 0, 158, 252, 0,
	0, 0, 197, 0, 318, 0, 372, 0, 0, 317,
	254, 365, 0, 0, 371, 0, 349, 379, 383, 219,
	0, 188, 339, 210, 205, 0, 0, 0, 227, 306,
	200, 246, 0, 0, 0, 193, 0, 0, 0, 338,
	362, 160, 270, 363, 382, 177, 355, 271, 278, 190,
	192, 191, 172, 332, 361, 182, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 236, 228, 0, 0,
	376, 0, 327, 326, 0, 235, 0, 0, 0, 313,
	0, 243, 163, 0, 385, 176, 248, 356, 0, 222,
	284, 199, 0, 294, 0, 157, 309, 266, 268, 265,
	269, 225, 0, 0, 0, 311, 329, 360, 178, 345,
	0, 0, 0, 0, 320, 0, 0, 0, 260, 214,
	218, 229, 240, 0, 316, 346, 377, 0, 173, 166,
	348, 370, 183, 328, 331, 384, 0, 168, 0, 0,
	0, 0, 0, 0, 0, 167, 0, 0, 0, 0,
	0, 0, 224, 0, 368, 369, 198, 386, 0, 0,
	169, 0, 0, 281, 289, 280, 0, 364, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 217, 231, 304,
	256, 305, 232, 276, 275, 277, 258, 0, 0, 164,
	0, 343, 0, 0, 347, 180, 0, 0, 359, 0,
	310, 181, 223, 215, 303, 279, 174, 234, 341, 247,
	255, 0, 0, 293, 319, 187, 374, 340, 211, 0,
	286, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 165, 175, 186,
	204, 202, 216, 244, 267, 272, 298, 330, 335, 350,
	351, 352, 353, 206, 0, 209, 185, 314, 184, 257,
	237, 299, 357, 358, 0, 159, 170, 251, 0, 312,
	221, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	375, 203, 0, 0, 0, 171, 179, 189, 201, 213,
	220, 230, 233, 238, 239, 241, 245, 259, 261, 262,
	263, 264, 282, 283, 287, 288, 291, 292, 295, 296,
	297, 301, 302, 308, 0, 315, 321, 322, 323, 324,
	325, 333, 334, 336, 337, 344, 366, 367, 380, 381,
	354, 0, 156, 0, 0, 162, 0, 0, 0, 0,
	0, 290, 161, 0, 0, 0, 2293, 0, 0, 0,
	208, 0, 0, 0, 0, 0, 0, 0, 207, 196,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 378, 342, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2295, 2297, 0,
	0, 0, 0, 0, 0, 129, 0, 484, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 212, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 373, 2291, 0, 0, 0, 307,
	226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 242, 0, 0, 2296, 0, 0,
	0, 0, 0, 250, 0, 155, 0, 0, 0, 285,
	0, 0, 0, 158, 252, 0, 0, 0, 197, 0,
	318, 0, 372, 0, 0, 317, 254, 365, 0, 0,
	371, 0, 349, 379, 383, 219, 0, 188, 339, 210,
	205, 0, 0, 0, 227, 306, 200, 246, 0, 0,
	0, 193, 0, 0, 0, 338, 362, 160, 270, 363,
	382, 177, 355, 271, 278, 190, 192, 191, 172, 332,
	361, 182, 195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 236, 228, 0, 0, 376, 0, 327, 326,
	0, 235, 0, 0, 0, 313, 0, 243, 163, 0,
	385, 176, 248, 356, 0, 222, 284, 199, 0, 294,
	0, 157, 309, 266, 268, 265, 269, 225, 0, 0,
	0, 311, 329, 360, 178, 345, 0, 0, 0, 0,
	320, 0, 0, 0, 260, 214, 218, 229, 240, 0,
	316, 346, 377, 0, 173, 166, 348, 370, 183, 328,
	331, 384, 0, 168, 0, 0, 0, 0, 0, 0,
	0, 167, 0, 0, 0, 0, 0, 0, 224, 0,
	368, 369, 198, 386, 0, 0, 169, 0, 0, 281,
	289, 280, 0, 364, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 217, 231, 304, 256, 305, 232, 276,
	275, 277, 258, 0, 0, 164, 0, 343, 0, 0,
	347, 180, 0, 0, 359, 0, 310, 181, 223, 215,
	303, 279, 174, 234, 341, 247, 255, 0, 0, 293,
	319, 187, 374, 340, 211, 0, 286, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 194, 131, 0, 0, 0, 132, 0, 0,
	133, 134, 0, 0, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 165, 175, 186, 204, 202, 216, 244,
	267, 272, 298, 330, 335, 350, 351, 352, 353, 206,
	0, 209, 185, 314, 184, 257, 237, 299, 357, 358,
	0, 159, 170, 251, 0, 312, 221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 375, 203, 0, 0,
	0, 171, 179, 189, 201, 213, 220, 230, 233, 238,
	239, 241, 245, 259, 261, 262, 263, 264, 282, 283,
	287, 288, 291, 292, 295, 296, 297, 301, 302, 308,
	0, 315, 321, 322, 323, 324, 325, 333, 334, 336,
	337, 344, 366, 367, 380, 381, 354, 0, 156, 0,
	0, 162, 0, 0, 0, 0, 0, 290, 161, 0,
	0, 0, 2293, 0, 0, 0, 208, 0, 0, 0,
	0, 0, 0, 0, 207, 196, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	378, 342, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2295, 2297, 0, 0, 0, 0, 0,
	0, 129, 0, 484, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 212, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	373, 0, 0, 0, 0, 307, 226, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	242, 0, 0, 2296, 0, 0, 0, 0, 0, 250,
	0, 155, 0, 0, 0, 285, 0, 0, 0, 158,
	252, 0, 0, 0, 197, 0, 318, 0, 372, 0,
	0, 317, 254, 365, 0, 0, 371, 0, 349, 379,
	383, 219, 0, 188, 339, 210, 205, 0, 0, 0,
	227, 306, 200, 246, 0, 0, 0, 193, 0, 0,
	0, 338, 362, 160, 270, 363, 382, 177, 355, 271,
	278, 190, 192, 191, 172, 332, 361, 182, 195, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 236, 228,
	0, 0, 376, 0, 327, 326, 0, 235, 0, 0,
	0, 313, 0, 243, 163, 0, 385, 176, 248, 356,
	0, 222, 284, 199, 0, 294, 0, 157, 309, 266,
	268, 265, 269, 225, 0, 0, 0, 311, 329, 360,
	178, 345, 0, 0, 0, 0, 320, 0, 0, 0,
	260, 214, 218, 229, 240, 0, 316, 346, 377, 0,
	173, 166, 348, 370, 183, 328, 331, 384, 0, 168,
	0, 0, 0, 0, 0, 0, 0, 167, 0, 0,
	0, 0, 0, 0, 224, 0, 368, 369, 198, 386,
	0, 0, 169, 0, 0, 281, 289, 280, 0, 364,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 217,
	231, 304, 256, 305, 232, 276, 275, 277, 258, 0,
	0, 164, 0, 343, 0, 0, 347, 180, 0, 0,
	359, 0, 310, 181, 223, 215, 303, 279, 174, 234,
	341, 247, 255, 0, 0, 293, 319, 187, 374, 340,
	211, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 194, 131,
	0, 0, 0, 132, 0, 0, 133, 134, 0, 0,
	0, 0, 135, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 165,
	175, 186, 204, 202, 216, 244, 267, 272, 298, 330,
	335, 350, 351, 352, 353, 206, 0, 209, 185, 314,
	184, 257, 237, 299, 357, 358, 0, 159, 170, 251,
	0, 312, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 203, 0, 0, 0, 171, 179, 189,
	201, 213, 220, 230, 233, 238, 239, 241, 245, 259,
	261, 262, 263, 264, 282, 283, 287, 288, 291, 292,
	295, 296, 297, 301, 302, 308, 0, 315, 321, 322,
	323, 324, 325, 333, 334, 336, 337, 344, 366, 367,
	380, 381, 354, 0, 156, 0, 0, 162, 0, 0,
	0, 0, 0, 290, 161, 0, 0, 0, 0, 0,
	0, 0, 208, 0, 0, 0, 0, 0, 0, 0,
	207, 196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 378, 342, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 129, 0, 484,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 212, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 373, 0, 0, 0,
	0, 307, 226, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 155, 0, 0,
	0, 285, 0, 0, 0, 158, 252, 0, 0, 0,
	197, 0, 318, 0, 372, 0, 0, 317, 254, 365,
	0, 0, 371, 0, 349, 379, 383, 219, 0, 188,
	339, 210, 205, 0, 0, 0, 227, 306, 200, 246,
	0, 0, 0, 193, 0, 0, 0, 338, 362, 160,
	270, 363, 382, 177, 355, 271, 278, 190, 192, 191,
	172, 332, 361, 182, 195, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 236, 228, 0, 0, 376, 0,
	327, 326, 0, 235, 0, 0, 0, 313, 0, 243,
	163, 0, 385, 176, 248, 356, 0, 222, 284, 199,
	0, 294, 0, 157, 309, 266, 268, 265, 269, 225,
	0, 0, 0, 311, 329, 360, 178, 345, 0, 0,
	0, 0, 320, 0, 0, 0, 260, 214, 218, 229,
	240, 0, 316, 346, 377, 0, 173, 166, 348, 370,
	183, 328, 331, 384, 0, 168, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 0, 0, 0, 0, 0,
	224, 0, 368, 369, 198, 386, 0, 0, 169, 0,
	0, 281, 289, 280, 0, 364, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 217, 231, 304, 256, 305,
	232, 276, 275, 277, 258, 0, 0, 164, 0, 343,
	0, 0, 347, 180, 0, 0, 359, 0, 310, 181,
	223, 215, 303, 279, 174, 234, 341, 247, 255, 0,
	0, 293, 319, 187, 374, 340, 211, 0, 286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 194, 131, 0, 0, 0, 132,
	0, 0, 133, 134, 0, 0, 0, 0, 135, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 165, 175, 186, 204, 202,
	216, 244, 267, 272, 298, 330, 335, 350, 351, 352,
	353, 206, 0, 209, 185, 314, 184, 257, 237, 299,
	357, 358, 0, 159, 170, 251, 0, 312, 221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 375, 203,
	0, 0, 478, 171, 179, 189, 201, 213, 220, 230,
	233, 238, 239, 241, 245, 259, 261, 262, 263, 264,
	282, 283, 287, 288, 291, 292, 295, 296, 297, 301,
	302, 308, 0, 315, 321, 322, 323, 324, 325, 333,
	334, 336, 337, 344, 366, 367, 380, 381, 354, 0,
	156, 0, 0, 162, 0, 0, 0, 0, 0, 290,
	161, 0, 0, 0, 3514, 0, 0, 0, 208, 0,
	0, 0, 0, 0, 0, 0, 207, 196, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 378, 342, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 129, 0, 484, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	212, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 373, 0, 0, 0, 0, 307, 226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 0, 155, 0, 0, 0, 285, 0, 0,
	0, 158, 252, 0, 0, 0, 197, 0, 318, 0,
	372, 0, 0, 317, 254, 365, 0, 0, 371, 0,
	349, 379, 383, 219, 0, 188, 339, 210, 205, 0,
	0, 0, 227, 306, 200, 246, 0, 0, 0, 193,
	0, 0, 0, 338, 362, 160, 270, 363, 382, 177,
	355, 271, 278, 190, 192, 191, 172, 332, 361, 182,
	195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	236, 228, 0, 0, 376, 0, 327, 326, 0, 235,
	0, 0, 0, 313, 0, 243, 163, 0, 385, 176,
	248, 356, 0, 222, 284, 199, 0, 294, 0, 157,
	309, 266, 268, 265, 269, 225, 0, 0, 0, 311,
	329, 360, 178, 345, 0, 0, 0, 0, 320, 0,
	0, 0, 260, 214, 218, 229, 240, 0, 316, 346,
	377, 0, 173, 166, 348, 370, 183, 328, 331, 384,
	0, 168, 0, 0, 0, 0, 0, 0, 0, 167,
	0, 0, 0, 0, 0, 0, 224, 0, 368, 369,
	198, 386, 0, 0, 169, 0, 0, 281, 289, 280,
	0, 364, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 217, 231, 304, 256, 305, 232, 276, 275, 277,
	258, 0, 0, 164, 0, 343, 0, 0, 347, 180,
	0, 0, 359, 0, 310, 181, 223, 215, 303, 279,
	174, 234, 341, 247, 255, 0, 0, 293, 319, 187,
	374, 340, 211, 0, 286, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	194, 131, 0, 0, 0, 132, 0, 0, 133, 134,
	0, 0, 0, 0, 135, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 165, 175, 186, 204, 202, 216, 244, 267, 272,
	298, 330, 335, 350, 351, 352, 353, 206, 0, 209,
	185, 314, 184, 257, 237, 299, 357, 358, 0, 159,
	170, 251, 0, 312, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 375, 203, 0, 0, 0, 171,
	179, 189, 201, 213, 220, 230, 233, 238, 239, 241,
	245, 259, 261, 262, 263, 264, 282, 283, 287, 288,
	291, 292, 295, 296, 297, 301, 302, 308, 0, 315,
	321, 322, 323, 324, 325, 333, 334, 336, 337, 344,
	366, 367, 380, 381, 354, 0, 156, 0, 0, 162,
	0, 0, 0, 0, 0, 290, 161, 0, 0, 0,
	0, 0, 0, 0, 208, 0, 0, 0, 0, 0,
	2604, 0, 207, 196, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 378, 342,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 129,
	0, 484, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 212, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 373, 0,
	0, 0, 0, 307, 226, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 155,
	0, 0, 0, 285, 0, 0, 0, 158, 252, 0,
	0, 0, 197, 0, 318, 0, 372, 0, 0, 317,
	254, 365, 0, 0, 371, 0, 349, 379, 383, 219,
	0, 188, 339, 210, 205, 0, 0, 0, 227, 306,
	200, 246, 0, 0, 0, 193, 0, 0, 0, 338,
	362, 160, 270, 363, 382, 177, 355, 271, 278, 190,
	192, 191, 172, 332, 361, 182, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 236, 228, 0, 0,
	376, 0, 327, 326, 0, 235, 0, 0, 0, 313,
	0, 243, 163, 0, 385, 176, 248, 356, 0, 222,
	284, 199, 0, 294, 0, 157, 309, 266, 268, 265,
	269, 225, 0, 0, 0, 311, 329, 360, 178, 345,
	0, 0, 0, 0, 320, 0, 0, 0, 260, 214,
	218, 229, 240, 0, 316, 346, 377, 0, 173, 166,
	348, 370, 183, 328, 331, 384, 0, 168, 0, 0,
	0, 0, 0, 0, 0, 167, 0, 0, 0, 0,
	0, 0, 224, 0, 368, 369, 198, 386, 0, 0,
	169, 0, 0, 281, 289, 280, 0, 364, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 217, 231, 304,
	256, 305, 232, 276, 275, 277, 258, 0, 0, 164,
	0, 343, 0, 0, 347, 180, 0, 0, 359, 0,
	310, 181, 223, 215, 303, 279, 174, 234, 341, 247,
	255, 0, 0, 293, 319, 187, 374, 340, 211, 0,
	286, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 194, 131, 0, 0,
	0, 132, 0, 0, 133, 134, 0, 0, 0, 0,
	135, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 165, 175, 186,
	204, 202, 216, 244, 267, 272, 298, 330, 335, 350,
	351, 352, 353, 206, 0, 209, 185, 314, 184, 257,
	237, 299, 357, 358, 0, 159, 170, 251, 0, 312,
	221, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	375, 203, 0, 0, 0, 171, 179, 189, 201, 213,
	220, 230, 233, 238, 239, 241, 245, 259, 261, 262,
	263, 264, 282, 283, 287, 288, 291, 292, 295, 296,
	297, 301, 302, 308, 0, 315, 321, 322, 323, 324,
	325, 333, 334, 336, 337, 344, 366, 367, 380, 381,
	354, 0, 156, 0, 0, 162, 0, 0, 0, 0,
	0, 290, 161, 0, 0, 0, 0, 0, 0, 0,
	208, 0, 0, 0, 0, 0, 0, 0, 207, 196,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 378, 342, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 129, 0, 484, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 212, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 373, 0, 0, 0, 0, 307,
	226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 155, 0, 0, 0, 285,
	0, 0, 0, 158, 252, 0, 0, 0, 197, 0,
	318, 0, 372, 0, 0, 317, 254, 365, 0, 0,
	371, 0, 349, 379, 383, 219, 0, 188, 339, 210,
	205, 0, 0, 0, 227, 306, 200, 246, 0, 0,
	0, 193, 0, 0, 0, 338, 362, 160, 270, 363,
	382, 177, 355, 271, 278, 190, 192, 191, 172, 332,
	361, 182, 195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 236, 228, 0, 0, 376, 0, 327, 326,
	0, 235, 0, 0, 0, 313, 0, 243, 163, 0,
	385, 176, 248, 356, 0, 222, 284, 199, 0, 294,
	0, 157, 309, 266, 268, 265, 269, 225, 0, 0,
	0, 311, 329, 360, 178, 345, 0, 0, 0, 0,
	320, 0, 0, 0, 260, 214, 218, 229, 240, 0,
	316, 346, 377, 0, 173, 166, 348, 370, 183, 328,
	331, 384, 0, 168, 0, 0, 0, 0, 0, 0,
	0, 167, 0, 0, 0, 0, 0, 0, 224, 0,
	368, 369, 198, 386, 0, 0, 169, 0, 0, 281,
	289, 280, 0, 364, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 217, 231, 304, 256, 305, 232, 276,
	275, 277, 258, 0, 0, 164, 0, 343, 0, 0,
	347, 180, 0, 0, 359, 0, 310, 181, 223, 215,
	303, 279, 174, 234, 341, 247, 255, 0, 0, 293,
	319, 187, 374, 340, 211, 0, 286, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 194, 131, 0, 0, 0, 132, 0, 0,
	133, 134, 0, 0, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 165, 175, 186, 204, 202, 216, 244,
	267, 272, 298, 330, 335, 350, 351, 352, 353, 206,
	0, 209, 185, 314, 184, 257, 237, 299, 357, 358,
	0, 159, 170, 251, 0, 312, 221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 375, 203, 0, 0,
	0, 171, 179, 189, 201, 213, 220, 230, 233, 238,
	239, 241, 245, 259, 261, 262, 263, 264, 282, 283,
	287, 288, 291, 292, 295, 296, 297, 301, 302, 308,
	0, 315, 321, 322, 323, 324, 325, 333, 334, 336,
	337, 344, 366, 367, 380, 381, 354, 0, 156, 0,
	0, 162, 0, 0, 0, 0, 0, 290, 161, 0,
	0, 0, 0, 0, 0, 0, 208, 0, 0, 0,
	0, 0, 0, 0, 207, 196, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	378, 342, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 955, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 212, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	373, 0, 0, 0, 0, 307, 226, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 155, 0, 0, 0, 285, 0, 0, 0, 158,
	252, 0, 0, 0, 197, 0, 318, 0, 372, 0,
	0, 317, 254, 365, 0, 0, 371, 0, 349, 379,
	383, 219, 0, 188, 339, 210, 205, 0, 0, 0,
	227, 306, 200, 246, 0, 0, 0, 193, 0, 0,
	0, 338, 362, 160, 270, 363, 382, 177, 355, 271,
	278, 190, 192, 191, 172, 332, 361, 182, 195, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 236, 228,
	0, 0, 376, 0, 327, 326, 0, 235, 0, 0,
	0, 313, 0, 243, 163, 0, 385, 176, 248, 356,
	0, 222, 284, 199, 0, 294, 0, 157, 309, 266,
	268, 265, 269, 225, 0, 0, 0, 311, 329, 360,
	178, 345, 0, 0, 0, 0, 320, 0, 0, 0,
	260, 214, 218, 229, 240, 0, 316, 346, 377, 0,
	173, 166, 348, 370, 183, 328, 331, 384, 0, 168,
	0, 0, 0, 0, 0, 0, 0, 167, 0, 0,
	0, 0, 0, 0, 224, 0, 368, 369, 198, 386,
	0, 0, 169, 0, 0, 281, 289, 280, 0, 364,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 217,
	231, 304, 256, 305, 232, 276, 275, 277, 258, 0,
	0, 164, 0, 343, 0, 0, 347, 180, 0, 0,
	359, 0, 310, 181, 223, 215, 303, 279, 174, 234,
	341, 247, 255, 0, 0, 293, 319, 187, 374, 340,
	211, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 194, 131,
	0, 0, 0, 132, 0, 0, 133, 134, 0, 0,
	0, 0, 135, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 165,
	175, 186, 204, 202, 216, 244, 267, 272, 298, 330,
	335, 350, 351, 352, 353, 206, 0, 209, 185, 314,
	184, 257, 237, 299, 357, 358, 0, 159, 170, 251,
	0, 312, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 203, 0, 0, 0, 171, 179, 189,
	201, 213, 220, 230, 233, 238, 239, 241, 245, 259,
	261, 262, 263, 264, 282, 283, 287, 288, 291, 292,
	295, 296, 297, 301, 302, 308, 0, 315, 321, 322,
	323, 324, 325, 333, 334, 336, 337, 344, 366, 367,
	380, 381, 354, 0, 156, 0, 0, 162, 0, 0,
	0, 0, 0, 290, 161, 0, 3473, 0, 0, 0,
	0, 0, 208, 3471, 0, 0, 0, 0, 0, 0,
	207, 196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 378, 342, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 467, 0, 466,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 212, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 373, 0, 0, 0,
	0, 307, 226, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 155, 0, 0,
	0, 285, 0, 0, 0, 158, 252, 0, 0, 0,
	197, 0, 318, 0, 372, 0, 0, 317, 254, 365,
	0, 0, 371, 0, 349, 379, 383, 219, 0, 188,
	339, 210, 205, 0, 0, 0, 227, 306, 200, 246,
	0, 0, 0, 193, 0, 0, 0, 338, 362, 160,
	270, 363, 382, 177, 355, 271, 278, 190, 192, 191,
	172, 332, 361, 182, 195, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 236, 228, 0, 0, 376, 0,
	327, 326, 0, 235, 0, 3472, 0, 313, 0, 243,
	163, 0, 385, 176, 248, 356, 0, 222, 284, 199,
	0, 294, 0, 157, 309, 266, 268, 265, 269, 225,
	0, 0, 0, 311, 329, 360, 178, 345, 0, 0,
	0, 0, 320, 0, 0, 0, 260, 214, 218, 229,
	240, 0, 316, 346, 377, 0, 173, 166, 348, 370,
	183, 328, 331, 384, 0, 168, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 0, 0, 0, 0, 0,
	224, 0, 368, 369, 198, 386, 0, 0, 169, 0,
	0, 281, 289, 280, 0, 364, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 217, 231, 304, 256, 305,
	232, 276, 275, 277, 258, 0, 0, 164, 0, 343,
	0, 0, 347, 180, 0, 0, 359, 0, 310, 181,
	223, 215, 303, 279, 174, 234, 341, 247, 255, 0,
	0, 293, 319, 187, 374, 340, 211, 0, 286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 194, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 165, 175, 186, 204, 202,
	216, 244, 267, 272, 298, 330, 335, 350, 351, 352,
	353, 206, 0, 209, 185, 314, 184, 257, 237, 299,
	357, 358, 0, 159, 170, 251, 0, 312, 221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 375, 203,
	0, 0, 0, 171, 179, 189, 201, 213, 220, 230,
	233, 238, 239, 241, 245, 259, 261, 262, 263, 264,
	282, 283, 287, 288, 291, 292, 295, 296, 297, 301,
	302, 308, 0, 315, 321, 322, 323, 324, 325, 333,
	334, 336, 337, 344, 366, 367, 380, 381, 354, 0,
	156, 0, 0, 162, 0, 0, 0, 0, 0, 290,
	161, 0, 0, 0, 0, 0, 0, 0, 208, 0,
	0, 0, 0, 0, 0, 0, 207, 196, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 378, 342, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 955, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	212, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2424, 373, 0, 0, 0, 0, 307, 226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 0, 155, 0, 0, 0, 285, 0, 0,
	0, 158, 252, 0, 0, 0, 197, 0, 318, 0,
	372, 0, 0, 317, 254, 365, 0, 0, 371, 0,
	349, 379, 383, 219, 0, 188, 339, 210, 205, 0,
	0, 0, 227, 306, 200, 246, 2425, 2426, 0, 193,
	0, 0, 0, 338, 362, 160, 270, 363, 382, 177,
	355, 271, 278, 190, 192, 191, 172, 332, 361, 182,
	195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	236, 228, 0, 0, 376, 0, 327, 326, 0, 235,
	0, 0, 0, 313, 0, 243, 163, 0, 385, 176,
	248, 356, 0, 222, 284, 199, 0, 294, 0, 157,
	309, 266, 268, 265, 269, 225, 0, 0, 0, 311,
	329, 360, 178, 345, 0, 0, 0, 0, 320, 0,
	0, 0, 260, 214, 218, 229, 240, 0, 316, 346,
	377, 0, 173, 166, 348, 370, 183, 328, 331, 384,
	0, 168, 0, 0, 0, 0, 0, 0, 0, 167,
	0, 0, 0, 0, 0, 0, 224, 0, 368, 369,
	198, 386, 0, 0, 169, 0, 0, 281, 289, 280,
	0, 364, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 217, 231, 304, 256, 305, 232, 276, 275, 277,
	258, 0, 0, 164, 0, 343, 0, 0, 347, 180,
	0, 0, 359, 0, 310, 181, 223, 215, 303, 279,
	174, 234, 341, 247, 255, 0, 0, 293, 319, 187,
	374, 340, 211, 0, 286, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 165, 175, 186, 204, 202, 216, 244, 267, 272,
	298, 330, 335, 350, 351, 352, 353, 206, 0, 209,
	185, 314, 184, 257, 237, 299, 357, 358, 0, 159,
	170, 251, 0, 312, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 375, 203, 0, 0, 0, 171,
	179, 189, 201, 213, 220, 230, 233, 238, 239, 241,
	245, 259, 261, 262, 263, 264, 282, 283, 287, 288,
	291, 292, 295, 296, 297, 301, 302, 308, 0, 315,
	321, 322, 323, 324, 325, 333, 334, 336, 337, 344,
	366, 367, 380, 381, 354, 0, 156, 0, 0, 162,
	0, 0, 0, 0, 0, 290, 161, 0, 0, 0,
	0, 0, 0, 0, 208, 0, 0, 0, 0, 0,
	0, 0, 207, 196, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 378, 342,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 467,
	0, 466, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 212, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 373, 0,
	0, 0, 0, 307, 226, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 155,
	0, 0, 0, 285, 0, 0, 0, 158, 252, 0,
	0, 0, 197, 0, 318, 0, 372, 0, 0, 317,
	254, 365, 0, 0, 371, 0, 349, 379, 383, 219,
	0, 188, 339, 210, 205, 0, 0, 0, 227, 306,
	200, 246, 0, 0, 0, 193, 0, 0, 0, 338,
	362, 160, 270, 363, 382, 177, 355, 271, 278, 190,
	192, 191, 172, 332, 361, 182, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 236, 228, 0, 0,
	376, 0, 327, 326, 0, 235, 0, 0, 0, 313,
	0, 243, 163, 0, 385, 176, 248, 356, 0, 222,
	284, 199, 0, 294, 0, 157, 309, 266, 268, 265,
	269, 225, 0, 0, 0, 311, 329, 360, 178, 345,
	0, 0, 0, 0, 320, 0, 0, 0, 260, 214,
	218, 229, 240, 0, 316, 346, 377, 0, 173, 166,
	348, 370, 183, 328, 331, 384, 0, 168, 0, 0,
	0, 0, 0, 0, 0, 167, 0, 0, 0, 0,
	0, 0, 224, 0, 368, 369, 198, 386, 0, 0,
	169, 0, 0, 281, 289, 280, 0, 364, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 217, 231, 304,
	256, 305, 232, 276, 275, 277, 258, 0, 0, 164,
	0, 343, 0, 0, 347, 180, 0, 0, 359, 0,
	310, 181, 223, 215, 303, 279, 174, 234, 341, 247,
	255, 0, 0, 293, 319, 187, 374, 340, 211, 0,
	286, 0, 0, 1738, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 165, 175, 186,
	204, 202, 216, 244, 267, 272, 298, 330, 335, 350,
	351, 352, 353, 206, 0, 209, 185, 314, 184, 257,
	237, 299, 357, 358, 0, 159, 170, 251, 0, 312,
	221, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	375, 203, 0, 0, 0, 171, 179, 189, 201, 213,
	220, 230, 233, 238, 239, 241, 245, 259, 261, 262,
	263, 264, 282, 283, 287, 288, 291, 292, 295, 296,
	297, 301, 302, 308, 0, 315, 321, 322, 323, 324,
	325, 333, 334, 336, 337, 344, 366, 367, 380, 381,
	354, 0, 156, 0, 0, 162, 0, 0, 0, 0,
	0, 290, 161, 0, 0, 0, 0, 0, 0, 0,
	208, 1318, 0, 0, 0, 0, 0, 0, 207, 196,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 378, 342, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 955, 0, 1317, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 212, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 373, 0, 0, 0, 0, 307,
	226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 155, 0, 0, 0, 285,
	0, 0, 0, 158, 252, 0, 0, 0, 197, 0,
	318, 0, 372, 0, 0, 317, 254, 365, 0, 0,
	371, 0, 349, 379, 383, 219, 0, 188, 339, 210,
	205, 0, 0, 0, 227, 306, 200, 246, 0, 0,
	0, 193, 0, 0, 0, 338, 362, 160, 270, 363,
	382, 177, 355, 271, 278, 190, 192, 191, 172, 332,
	361, 182, 195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 236, 228, 0, 0, 376, 0, 327, 326,
	0, 235, 0, 0, 0, 313, 0, 243, 163, 0,
	385, 176, 248, 356, 0, 222, 284, 199, 0, 294,
	0, 157, 309, 266, 268, 265, 269, 225, 0, 0,
	0, 311, 329, 360, 178, 345, 0, 0, 0, 0,
	320, 0, 0, 0, 260, 214, 218, 229, 240, 0,
	316, 346, 377, 0, 173, 166, 348, 370, 183, 328,
	331, 384, 0, 168, 0, 0, 0, 0, 0, 0,
	0, 167, 0, 0, 0, 0, 0, 0, 224, 0,
	368, 369, 198, 386, 0, 0, 169, 0, 0, 281,
	289, 280, 0, 364, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 217, 231, 304, 256, 305, 232, 276,
	275, 277, 258, 0, 0, 164, 0, 343, 0, 0,
	347, 180, 0, 0, 359, 0, 310, 181, 223, 215,
	303, 279, 174, 234, 341, 247, 255, 0, 0, 293,
	319, 187, 374, 340, 211, 0, 286, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 194, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 165, 175, 186, 204, 202, 216, 244,
	267, 272, 298, 330, 335, 350, 351, 352, 353, 206,
	0, 209, 185, 314, 184, 257, 237, 299, 357, 358,
	0, 159, 170, 251, 0, 312, 221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 375, 203, 0, 0,
	0, 171, 179, 189, 201, 213, 220, 230, 233, 238,
	239, 241, 245, 259, 261, 262, 263, 264, 282, 283,
	287, 288, 291, 292, 295, 296, 297, 301, 302, 308,
	0, 315, 321, 322, 323, 324, 325, 333, 334, 336,
	337, 344, 366, 367, 380, 381, 354, 0, 156, 0,
	0, 162, 0, 0, 0, 0, 0, 290, 161, 0,
	0, 0, 0, 0, 0, 0, 208, 0, 0, 0,
	0, 0, 0, 0, 207, 196, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	378, 342, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 467, 0, 466, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 212, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	373, 0, 0, 0, 0, 307, 226, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 155, 0, 0, 0, 285, 0, 0, 0, 158,
	252, 0, 0, 0, 197, 0, 318, 0, 372, 0,
	0, 317, 254, 365, 0, 0, 371, 0, 349, 379,
	383, 219, 0, 188, 339, 210, 205, 0, 0, 0,
	227, 306, 200, 246, 0, 0, 0, 193, 0, 0,
	0, 338, 362, 160, 270, 363, 382, 177, 355, 271,
	278, 190, 192, 191, 172, 332, 361, 182, 195, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 236, 228,
	0, 0, 376, 0, 327, 326, 0, 235, 0, 0,
	0, 313, 0, 243, 163, 0, 385, 176, 248, 356,
	0, 222, 284, 199, 0, 294, 0, 157, 309, 266,
	268, 265, 269, 225, 0, 0, 0, 311, 329, 360,
	178, 345, 0, 0, 0, 0, 320, 0, 0, 0,
	260, 214, 218, 229, 240, 0, 316, 346, 377, 0,
	173, 166, 348, 370, 183, 328, 331, 384, 0, 168,
	0, 0, 0, 0, 0, 0, 0, 167, 0, 0,
	0, 0, 0, 0, 224, 0, 368, 369, 198, 386,
	0, 0, 169, 0, 0, 281, 289, 280, 0, 364,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 217,
	231, 304, 256, 305, 232, 276, 275, 277, 258, 0,
	0, 164, 0, 343, 0, 0, 347, 180, 0, 0,
	359, 0, 310, 181, 223, 215, 303, 279, 174, 234,
	341, 247, 255, 0, 0, 293, 319, 187, 374, 340,
	211, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 165,
	175, 186, 204, 202, 216, 244, 267, 272, 298, 330,
	335, 350, 351, 352, 353, 206, 0, 209, 185, 314,
	184, 257, 237, 299, 357, 358, 0, 159, 170, 251,
	0, 312, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 203, 0, 0, 0, 171, 179, 189,
	201, 213, 220, 230, 233, 238, 239, 241, 245, 259,
	261, 262, 263, 264, 282, 283, 287, 288, 291, 292,
	295, 296, 297, 301, 302, 308, 0, 315, 321, 322,
	323, 324, 325, 333, 334, 336, 337, 344, 366, 367,
	380, 381, 354, 0, 156, 0, 0, 162, 0, 0,
	0, 0, 0, 290, 161, 0, 0, 0, 0, 0,
	0, 0, 208, 0, 0, 0, 0, 0, 0, 0,
	207, 196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 378, 342, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2762, 0, 0, 0, 2764, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 212, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 373, 0, 0, 0,
	0, 307, 226, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 155, 0, 0,
	0, 285, 0, 0, 0, 158, 252, 0, 0, 0,
	197, 0, 318, 0, 372, 0, 0, 317, 254, 365,
	0, 0, 371, 0, 349, 379, 383, 219, 0, 188,
	339, 210, 205, 0, 0, 0, 227, 306, 200, 246,
	0, 0, 0, 193, 0, 0, 0, 338, 362, 160,
	270, 363, 382, 177, 355, 271, 278, 190, 192, 191,
	172, 332, 361, 182, 195, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 236, 228, 0, 0, 376, 0,
	327, 326, 0, 235, 0, 0, 0, 313, 0, 243,
	163, 0, 385, 176, 248, 356, 0, 222, 284, 199,
	0, 294, 0, 157, 309, 266, 268, 265, 269, 225,
	0, 0, 0, 311, 329, 360, 178, 345, 0, 0,
	0, 0, 320, 0, 0, 0, 260, 214, 218, 229,
	240, 0, 316, 346, 377, 0, 173, 166, 348, 370,
	183, 328, 331, 384, 0, 168, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 0, 0, 0, 0, 0,
	224, 0, 368, 369, 198, 386, 0, 0, 169, 0,
	0, 281, 289, 280, 0, 364, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 217, 231, 304, 256, 305,
	232, 276, 275, 277, 258, 0, 0, 164, 0, 343,
	0, 0, 347, 180, 0, 0, 359, 0, 310, 181,
	223, 215, 303, 279, 174, 234, 341, 247, 255, 0,
	0, 293, 319, 187, 374, 340, 211, 0, 286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 194, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 165, 175, 186, 204, 202,
	216, 244, 267, 272, 298, 330, 335, 350, 351, 352,
	353, 206, 0, 209, 185, 314, 184, 257, 237, 299,
	357, 358, 0, 159, 170, 251, 0, 312, 221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 375, 203,
	0, 0, 0, 171, 179, 189, 201, 213, 220, 230,
	233, 238, 239, 241, 245, 259, 261, 262, 263, 264,
	282, 283, 287, 288, 291, 292, 295, 296, 297, 301,
	302, 308, 0, 315, 321, 322, 323, 324, 325, 333,
	334, 336, 337, 344, 366, 367, 380, 381, 354, 0,
	156, 0, 0, 162, 0, 0, 0, 0, 0, 290,
	161, 0, 0, 0, 0, 0, 0, 0, 208, 0,
	0, 0, 0, 0, 0, 0, 207, 196, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 378, 342, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 955, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	212, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 373, 0, 0, 0, 0, 307, 226, 0,
	0, 0, 0, 0, 0, 2749, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 0, 155, 0, 0, 0, 285, 0, 0,
	0, 158, 252, 0, 0, 0, 197, 0, 318, 0,
	372, 0, 0, 317, 254, 365, 0, 0, 371, 0,
	349, 379, 383, 219, 0, 188, 339, 210, 205, 0,
	0, 0, 227, 306, 200, 246, 0, 0, 0, 193,
	0, 0, 0, 338, 362, 160, 270, 363, 382, 177,
	355, 271, 278, 190, 192, 191, 172, 332, 361, 182,
	195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	236, 228, 0, 0, 376, 0, 327, 326, 0, 235,
	0, 0, 0, 313, 0, 243, 163, 0, 385, 176,
	248, 356, 0, 222, 284, 199, 0, 294, 0, 157,
	309, 266, 268, 265, 269, 225, 0, 0, 0, 311,
	329, 360, 178, 345, 0, 0, 0, 0, 320, 0,
	0, 0, 260, 214, 218, 229, 240, 0, 316, 346,
	377, 0, 173, 166, 348, 370, 183, 328, 331, 384,
	0, 168, 0, 0, 0, 0, 0, 0, 0, 167,
	0, 0, 0, 0, 0, 0, 224, 0, 368, 369,
	198, 386, 0, 0, 169, 0, 0, 281, 289, 280,
	0, 364, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 217, 231, 304, 256, 305, 232, 276, 275, 277,
	258, 0, 0, 164, 0, 343, 0, 0, 347, 180,
	0, 0, 359, 0, 310, 181, 223, 215, 303, 279,
	174, 234, 341, 247, 255, 0, 0, 293, 319, 187,
	374, 340, 211, 0, 286, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 165, 175, 186, 204, 202, 216, 244, 267, 272,
	298, 330, 335, 350, 351, 352, 353, 206, 0, 209,
	185, 314, 184, 257, 237, 299, 357, 358, 0, 159,
	170, 251, 0, 312, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 375, 203, 0, 0, 0, 171,
	179, 189, 201, 213, 220, 230, 233, 238, 239, 241,
	245, 259, 261, 262, 263, 264, 282, 283, 287, 288,
	291, 292, 295, 296, 297, 301, 302, 308, 0, 315,
	321, 322, 323, 324, 325, 333, 334, 336, 337, 344,
	366, 367, 380, 381, 354, 0, 156, 0, 0, 162,
	0, 0, 0, 0, 0, 290, 161, 0, 0, 0,
	0, 0, 0, 0, 208, 0, 0, 0, 0, 0,
	0, 0, 207, 196, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 378, 342,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 77, 0, 0, 0, 955,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 212, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 373, 0,
	0, 0, 0, 307, 226, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 155,
	0, 0, 0, 285, 0, 0, 0, 158, 252, 0,
	0, 0, 197, 0, 318, 0, 372, 0, 0, 317,
	254, 365, 0, 0, 371, 0, 349, 379, 383, 219,
	0, 188, 339, 210, 205, 0, 0, 0, 227, 306,
	200, 246, 0, 0, 0, 193, 0, 0, 0, 338,
	362, 160, 270, 363, 382, 177, 355, 271, 278, 190,
	192, 191, 172, 332, 361, 182, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 236, 228, 0, 0,
	376, 0, 327, 326, 0, 235, 0, 0, 0, 313,
	0, 243, 163, 0, 385, 176, 248, 356, 0, 222,
	284, 199, 0, 294, 0, 157, 309, 266, 268, 265,
	269, 225, 0, 0, 0, 311, 329, 360, 178, 345,
	0, 0, 0, 0, 320, 0, 0, 0, 260, 214,
	218, 229, 240, 0, 316, 346, 377, 0, 173, 166,
	348, 370, 183, 328, 331, 384, 0, 168, 0, 0,
	0, 0, 0, 0, 0, 167, 0, 0, 0, 0,
	0, 0, 224, 0, 368, 369, 198, 386, 0, 0,
	169, 0, 0, 281, 289, 280, 0, 364, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 217, 231, 304,
	256, 305, 232, 276, 275, 277, 258, 0, 0, 164,
	0, 343, 0, 0, 347, 180, 0, 0, 359, 0,
	310, 181, 223, 215, 303, 279, 174, 234, 341, 247,
	255, 0, 0, 293, 319, 187, 374, 340, 211, 0,
	286, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 165, 175, 186,
	204, 202, 216, 244, 267, 272, 298, 330, 335, 350,
	351, 352, 353, 206, 0, 209, 185, 314, 184, 257,
	237, 299, 357, 358, 0, 159, 170, 251, 0, 312,
	221, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	375, 203, 0, 0, 0, 171, 179, 189, 201, 213,
	220, 230, 233, 238, 239, 241, 245, 259, 261, 262,
	263, 264, 282, 283, 287, 288, 291, 292, 295, 296,
	297, 301, 302, 308, 0, 315, 321, 322, 323, 324,
	325, 333, 334, 336, 337, 344, 366, 367, 380, 381,
	354, 0, 156, 0, 0, 162, 0, 0, 0, 0,
	0, 290, 161, 0, 0, 0, 0, 0, 0, 0,
	208, 0, 0, 0, 0, 0, 0, 0, 207, 196,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 378, 342, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 955, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 212, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 373, 0, 0, 0, 0, 307,
	226, 0, 0, 0, 0, 0, 0, 2134, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 155, 0, 0, 0, 285,
	0, 0, 0, 158, 252, 0, 0, 0, 197, 0,
	318, 0, 372, 0, 0, 317, 254, 365, 0, 0,
	371, 0, 349, 379, 383, 219, 0, 188, 339, 210,
	205, 0, 0, 0, 227, 306, 200, 246, 0, 0,
	0, 193, 0, 0, 0, 338, 362, 160, 270, 363,
	382, 177, 355, 271, 278, 190, 192, 191, 172, 332,
	361, 182, 195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 236, 228, 0, 0, 376, 0, 327, 326,
	0, 235, 0, 0, 0, 313, 0, 243, 163, 0,
	385, 176, 248, 356, 0, 222, 284, 199, 0, 294,
	0, 157, 309, 266, 268, 265, 269, 225, 0, 0,
	0, 311, 329, 360, 178, 345, 0, 0, 0, 0,
	320, 0, 0, 0, 260, 214, 218, 229, 240, 0,
	316, 346, 377, 0, 173, 166, 348, 370, 183, 328,
	331, 384, 0, 168, 0, 0, 0, 0, 0, 0,
	0, 167, 0, 0, 0, 0, 0, 0, 224, 0,
	368, 369, 198, 386, 0, 0, 169, 0, 0, 281,
	289, 280, 0, 364, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 217, 231, 304, 256, 305, 232, 276,
	275, 277, 258, 0, 0, 164, 0, 343, 0, 0,
	347, 180, 0, 0, 359, 0, 310, 181, 223, 215,
	303, 279, 174, 234, 341, 247, 255, 0, 0, 293,
	319, 187, 374, 340, 211, 0, 286, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 194, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 165, 175, 186, 204, 202, 216, 244,
	267, 272, 298, 330, 335, 350, 351, 352, 353, 206,
	0, 209, 185, 314, 184, 257, 237, 299, 357, 358,
	0, 159, 170, 251, 0, 312, 221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 375, 203, 0, 0,
	0, 171, 179, 189, 201, 213, 220, 230, 233, 238,
	239, 241, 245, 259, 261, 262, 263, 264, 282, 283,
	287, 288, 291, 292, 295, 296, 297, 301, 302, 308,
	0, 315, 321, 322, 323, 324, 325, 333, 334, 336,
	337, 344, 366, 367, 380, 381, 354, 0, 156, 0,
	0, 162, 0, 0, 0, 0, 0, 290, 161, 0,
	0, 0, 0, 0, 0, 0, 208, 0, 0, 0,
	0, 0, 0, 2171, 2172, 196, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	378, 342, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 955, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 212, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	373, 0, 0, 0, 0, 307, 226, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 155, 0, 0, 0, 285, 0, 0, 0, 158,
	252, 0, 0, 0, 197, 0, 318, 0, 372, 0,
	0, 317, 254, 365, 0, 0, 371, 0, 349, 379,
	383, 219, 0, 188, 339, 210, 205, 0, 0, 0,
	227, 306, 200, 246, 0, 0, 0, 193, 0, 0,
	0, 338, 362, 160, 270, 363, 382, 177, 355, 271,
	278, 190, 192, 191, 172, 332, 361, 182, 195, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 236, 228,
	0, 0, 376, 0, 327, 326, 0, 235, 0, 0,
	0, 313, 0, 243, 163, 0, 385, 176, 248, 356,
	0, 222, 284, 199, 0, 294, 0, 157, 309, 266,
	268, 265, 269, 225, 0, 0, 0, 311, 329, 360,
	178, 345, 0, 0, 0, 0, 320, 0, 0, 0,
	260, 214, 218, 229, 240, 0, 316, 346, 377, 0,
	173, 166, 348, 370, 183, 328, 331, 384, 0, 168,
	0, 0, 0, 0, 0, 0, 0, 167, 0, 0,
	0, 0, 0, 0, 224, 0, 368, 369, 198, 386,
	0, 0, 169, 0, 0, 281, 289, 280, 0, 364,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 217,
	231, 304, 256, 305, 232, 276, 275, 277, 258, 0,
	0, 164, 0, 343, 0, 0, 347, 180, 0, 0,
	359, 0, 310, 181, 223, 215, 303, 279, 174, 234,
	341, 247, 255, 0, 0, 293, 319, 187, 374, 340,
	211, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 165,
	175, 186, 204, 202, 216, 244, 267, 272, 298, 330,
	335, 350, 351, 352, 353, 206, 0, 209, 185, 314,
	184, 257, 237, 299, 357, 358, 0, 159, 170, 251,
	0, 312, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 203, 0, 0, 0, 171, 179, 189,
	201, 213, 220, 230, 233, 238, 239, 241, 245, 259,
	261, 262, 263, 264, 282, 283, 287, 288, 291, 292,
	295, 296, 297, 301, 302, 308, 0, 315, 321, 322,
	323, 324, 325, 333, 334, 336, 337, 344, 366, 367,
	380, 381, 354, 0, 156, 0, 0, 162, 0, 0,
	0, 0, 0, 290, 161, 0, 0, 0, 0, 0,
	0, 0, 208, 0, 0, 0, 0, 0, 0, 0,
	207, 196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 378, 342, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 955, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 212, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 373, 0, 0, 0,
	0, 307, 226, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 155, 0, 0,
	0, 285, 0, 0, 0, 158, 252, 0, 0, 0,
	197, 0, 318, 0, 372, 0, 0, 317, 254, 365,
	0, 0, 371, 0, 349, 379, 383, 219, 0, 188,
	339, 210, 205, 0, 0, 0, 227, 306, 200, 246,
	0, 0, 0, 193, 0, 0, 0, 338, 362, 160,
	270, 363, 382, 177, 355, 271, 278, 190, 192, 191,
	172, 332, 361, 182, 195, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 236, 228, 0, 0, 376, 0,
	327, 326, 0, 235, 0, 0, 0, 313, 0, 243,
	163, 0, 385, 176, 248, 356, 0, 222, 284, 199,
	0, 294, 0, 157, 309, 266, 268, 265, 269, 225,
	0, 0, 0, 311, 329, 360, 178, 345, 0, 0,
	0, 0, 320, 0, 0, 0, 260, 214, 218, 229,
	240, 0, 316, 346, 377, 0, 173, 166, 348, 370,
	183, 328, 331, 384, 0, 168, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 0, 0, 0, 0, 0,
	224, 0, 368, 369, 198, 386, 0, 0, 169, 0,
	0, 281, 289, 280, 0, 364, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 217, 231, 304, 256, 305,
	232, 276, 275, 277, 258, 0, 0, 164, 0, 343,
	0, 0, 347, 180, 0, 0, 359, 0, 310, 181,
	223, 215, 303, 279, 174, 234, 341, 247, 255, 0,
	0, 293, 319, 187, 374, 340, 211, 0, 286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 194, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 165, 175, 186, 204, 202,
	216, 244, 267, 272, 298, 330, 335, 350, 351, 352,
	353, 206, 0, 209, 185, 314, 184, 257, 237, 299,
	357, 358, 0, 159, 170, 251, 0, 312, 221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 375, 203,
	0, 0, 0, 171, 179, 189, 201, 213, 220, 230,
	233, 238, 239, 241, 245, 259, 261, 262, 263, 264,
	282, 283, 287, 288, 291, 292, 295, 296, 297, 301,
	302, 308, 0, 315, 321, 322, 323, 324, 325, 333,
	334, 336, 337, 344, 366, 367, 380, 381, 354, 0,
	156, 0, 0, 162, 0, 0, 0, 0, 0, 290,
	161, 0, 0, 0, 0, 0, 0, 0, 208, 0,
	0, 0, 0, 0, 0, 0, 207, 196, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 378, 342, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2764, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	212, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 373, 0, 0, 0, 0, 307, 226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 0, 155, 0, 0, 0, 285, 0, 0,
	0, 158, 252, 0, 0, 0, 197, 0, 318, 0,
	372, 0, 0, 317, 254, 365, 0, 0, 371, 0,
	349, 379, 383, 219, 0, 188, 339, 210, 205, 0,
	0, 0, 227, 306, 200, 246, 0, 0, 0, 193,
	0, 0, 0, 338, 362, 160, 270, 363, 382, 177,
	355, 271, 278, 190, 192, 191, 172, 332, 361, 182,
	195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	236, 228, 0, 0, 376, 0, 327, 326, 0, 235,
	0, 0, 0, 313, 0, 243, 163, 0, 385, 176,
	248, 356, 0, 222, 284, 199, 0, 294, 0, 157,
	309, 266, 268, 265, 269, 225, 0, 0, 0, 311,
	329, 360, 178, 345, 0, 0, 0, 0, 320, 0,
	0, 0, 260, 214, 218, 229, 240, 0, 316, 346,
	377, 0, 173, 166, 348, 370, 183, 328, 331, 384,
	0, 168, 0, 0, 0, 0, 0, 0, 0, 167,
	0, 0, 0, 0, 0, 0, 224, 0, 368, 369,
	198, 386, 0, 0, 169, 0, 0, 281, 289, 280,
	0, 364, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 217, 231, 304, 256, 305, 232, 276, 275, 277,
	258, 0, 0, 164, 0, 343, 0, 0, 347, 180,
	0, 0, 359, 0, 310, 181, 223, 215, 303, 279,
	174, 234, 341, 247, 255, 0, 0, 293, 319, 187,
	374, 340, 211, 0, 286, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 165, 175, 186, 204, 202, 216, 244, 267, 272,
	298, 330, 335, 350, 351, 352, 353, 206, 0, 209,
	185, 314, 184, 257, 237, 299, 357, 358, 0, 159,
	170, 251, 0, 312, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 375, 203, 0, 0, 0, 171,
	179, 189, 201, 213, 220, 230, 233, 238, 239, 241,
	245, 259, 261, 262, 263, 264, 282, 283, 287, 288,
	291, 292, 295, 296, 297, 301, 302, 308, 0, 315,
	321, 322, 323, 324, 325, 333, 334, 336, 337, 344,
	366, 367, 380, 381, 354, 0, 156, 0, 0, 162,
	0, 0, 0, 0, 0, 290, 161, 0, 0, 0,
	0, 0, 0, 0, 208, 0, 0, 0, 0, 0,
	0, 0, 207, 196, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 378, 342,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 129,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 212, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 373, 0,
	0, 0, 0, 307, 226, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 155,
	0, 0, 0, 285, 0, 0, 0, 158, 252, 0,
	0, 0, 197, 0, 318, 0, 372, 0, 0, 317,
	254, 365, 0, 0, 371, 0, 349, 379, 383, 219,
	0, 188, 339, 210, 205, 0, 0, 0, 227, 306,
	200, 246, 0, 0, 0, 193, 0, 0, 0, 338,
	362, 160, 270, 363, 382, 177, 355, 271, 278, 190,
	192, 191, 172, 332, 361, 182, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 236, 228, 0, 0,
	376, 0, 327, 326, 0, 235, 0, 0, 0, 313,
	0, 243, 163, 0, 385, 176, 248, 356, 0, 222,
	284, 199, 0, 294, 0, 157, 309, 266, 268, 265,
	269, 225, 0, 0, 0, 311, 329, 360, 178, 345,
	0, 0, 0, 0, 320, 0, 0, 0, 260, 214,
	218, 229, 240, 0, 316, 346, 377, 0, 173, 166,
	348, 370, 183, 328, 331, 384, 0, 168, 0, 0,
	0, 0, 0, 0, 0, 167, 0, 0, 0, 0,
	0, 0, 224, 0, 368, 369, 198, 386, 0, 0,
	169, 0, 0, 281, 289, 280, 0, 364, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 217, 231, 304,
	256, 305, 232, 276, 275, 277, 258, 0, 0, 164,
	0, 343, 0, 0, 347, 180, 0, 0, 359, 0,
	310, 181, 223, 215, 303, 279, 174, 234, 341, 247,
	255, 0, 0, 293, 319, 187, 374, 340, 211, 0,
	286, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 165, 175, 186,
	204, 202, 216, 244, 267, 272, 298, 330, 335, 350,
	351, 352, 353, 206, 0, 209, 185, 314, 184, 257,
	237, 299, 357, 358, 0, 159, 170, 251, 0, 312,
	221, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	375, 203, 0, 0, 0, 171, 179, 189, 201, 213,
	220, 230, 233, 238, 239, 241, 245, 259, 261, 262,
	263, 264, 282, 283, 287, 288, 291, 292, 295, 296,
	297, 301, 302, 308, 0, 315, 321, 322, 323, 324,
	325, 333, 334, 336, 337, 344, 366, 367, 380, 381,
	354, 0, 156, 0, 0, 162, 0, 0, 0, 0,
	0, 290, 161, 0, 0, 0, 0, 0, 0, 0,
	208, 0, 0, 0, 0, 0, 0, 0, 207, 196,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 378, 342, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 508, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 212, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 373, 0, 0, 0, 0, 307,
	226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 155, 0, 0, 0, 285,
	0, 0, 0, 158, 252, 0, 0, 0, 197, 0,
	318, 0, 372, 0, 0, 317, 254, 365, 0, 0,
	371, 0, 349, 379, 383, 219, 0, 188, 339, 210,
	205, 0, 0, 0, 227, 306, 200, 246, 0, 0,
	0, 193, 0, 0, 0, 338, 362, 160, 270, 363,
	382, 177, 355, 271, 278, 190, 192, 191, 172, 332,
	361, 182, 195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 236, 228, 0, 0, 376, 0, 327, 326,
	0, 235, 0, 0, 0, 313, 0, 243, 163, 0,
	385, 176, 248, 356, 0, 222, 284, 199, 0, 294,
	0, 157, 309, 266, 268, 265, 269, 225, 0, 0,
	0, 311, 329, 360, 178, 345, 0, 0, 0, 0,
	320, 0, 0, 0, 260, 214, 218, 229, 240, 0,
	316, 346, 377, 0, 173, 166, 348, 370, 183, 328,
	331, 384, 0, 168, 0, 0, 0, 0, 0, 0,
	0, 167, 0, 0, 0, 0, 0, 0, 224, 0,
	368, 369, 198, 386, 0, 0, 169, 0, 0, 281,
	289, 280, 0, 364, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 217, 231, 304, 256, 305, 232, 276,
	275, 277, 258, 0, 0, 164, 0, 343, 0, 0,
	347, 180, 0, 0, 359, 0, 310, 181, 223, 215,
	303, 279, 174, 234, 341, 247, 255, 0, 0, 293,
	319, 187, 374, 340, 211, 0, 286, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 194, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 165, 175, 186, 204, 202, 216, 244,
	267, 272, 298, 330, 335, 350, 351, 352, 353, 206,
	0, 209, 185, 314, 184, 257, 237, 299, 357, 358,
	0, 159, 170, 251, 0, 312, 221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 375, 203, 0, 0,
	0, 171, 179, 189, 201, 213, 220, 230, 233, 238,
	239, 241, 245, 259, 261, 262, 263, 264, 282, 283,
	287, 288, 291, 292, 295, 296, 297, 301, 302, 308,
	0, 315, 321, 322, 323, 324, 325, 333, 334, 336,
	337, 344, 366, 367, 380, 381, 0, 0, 156, 0,
	0, 162, 0, 0, 0, 0, 0, 0, 161,
}

var yyPact = [...]int{
	652, -1000, -435, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2121, -1000, -1000, 330, -1000,
	1161, 608, -1000, 297, 589, 34719, 738, 1488, 49517, 48,
	-1000, 47, 205, 624, 35335, 451, 486, 1557, 1991, 1554,
	50, -47, -49, 144, 36581, 35958, 29, -1000, 39045, 681,
	58, -1000, -1000, -1000, -1000, 2173, 251, -1000, -1000, 2101,
	2119, 1908, -1000, 7632, -1000, -1000, -1000, -1000, -1000, 21602,
	-1000, 2171, 35335, 29171, -1000, 729, 712, -167, 674, 674,
	574, 674, 674, 737, -1000, 347, 1086, -1000, -1000, -1000,
	-1000, 1075, 35335, 44589, 675, 48285, 675, 675, 675, 675,
	675, 675, 675, 35335, -1000, 806, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 35335, 1552, 2022,
	1072, 291, -1000, -1000, -1000, 1134, -1000, 479, 448, 575,
	425, 114, 1105, 2098, -1000, 1790, 2101, 2101, -1000, -1000,
	-1000, -1000, -1000, -1000, 866, -1000, -1000, 709, 328, 253,
	251, 1074, 2048, 2021, 2019, 1366, 2018, 936, 2014, 1838,
	-20, -1000, 1551, 35335, -1000, -1000, 1336, 1335, 359, 1725,
	820, 1865, -1000, -1000, 361, 692, 1825, 471, 1825, 1825,
	1825, 1825, 1825, -50, 1825, 1825, 1825, 101, 1825, 184,
	1825, 1825, 1825, 1825, 1825, 1510, -1000, -1000, -1000, 415,
	1720, 1770, 1864, 767, -1000, -1000, -1000, 1844, 40893, 1777,
	-1000, 1790, -1000, -1000, -1000, 735, -1000, -100, 1844, 2079,
	1563, -1000, 39045, 2015, 1246, 13982, 1968, -1000, -1000, 1193,
	2156, -1000, 28555, 805, -1000, 13982, 1580, 1790, -1000, -1000,
	1790, -1000, 770, 867, -1000, 754, 801, -1000, -1000, 13347,
	13347, 13347, 13347, 13347, 13347, 13347, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1790, 804, 803, 1790, 1790, 1790, 1790, 1790,
	-1000, 12077, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1790, 1790, 1790, 1790, 1790, 1790,
	1790, 1790, 1790, 1790, 1790, 1790, 1790, 1790, 13982, 1790,
	1790, 1790, 1790, 1790, 1790, 1790, 1790, 1790, 1790, 1790,
	1790, 1790, 1790, 1790, 1790, 1790, 1790, 1790, 1790, 1790,
	1790, 1790, 1790, 1790, 1790, 1790, 1790, 1790, 1790, 1790,
	1790, 1790, 1790, 1790, 1790, 1790, 1790, 1790, 1790, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	681, 681, 34103, 1788, -68, 20967, -1000, -1000, -1000, -1000,
	19697, 43973, 1060, -1000, -1000, -1000, -1000, 2013, -1000, -1000,
	802, 801, 770, 760, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2121, -1000, -1000, 1701, 627, -1000, 6375, 6375,
	6375, 6375, 6375, 295, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1833, 48285, 35335, 244, 1550, 1150, 1548,
	50133, 50133, -1000, 290, 44589, 44589, 674, 322, 44589, 299,
	1787, 708, 1786, 706, 1331, 35335, 2039, 1863, 35335, 1547,
	1546, 50133, 50133, 44589, 44589, -1000, 27317, 1784, -1000, -1000,
	1072, -1000, 6761, 13982, 674, 674, 35335, 35335, 35335, 35335,
	35335, -1000, -1000, 1072, 1072, 1072, 1072, 1018, 2155, 1018,
	-1000, 1018, -1000, -1000, 13982, -1000, 13347, 43357, 882, -1000,
	-1000, 49517, 327, -1000, 1545, -1000, -1000, -1000, -1000, -1000,
	-1000, 1544, -1000, 1998, 936, 936, -1000, 1463, 936, 1774,
	-1000, 1053, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 936, -1000, 12712, -415, -1000, -1000,
	1783, -1000, 342, -1000, -1000, 601, 1860, 601, 236, 44589,
	44589, 44589, -1000, 1825, 48285, -1000, 1825, 1825, 1825, -52,
	1825, 1825, -1000, -1000, 1825, -1000, -1000, -1000, -1000, -1000,
	1825, -1000, -1000, -1000, 1825, 1825, -1000, 1825, 1825, -1000,
	-1000, -1000, -1000, -1000, 44589, 601, 182, 1782, 601, 44589,
	44589, -1000, 84, 81, 79, 78, -1000, -1000, -1000, -1000,
	77, 74, -1000, -1000, -1000, 1777, 40893, 2060, 16522, 35335,
	-92, -1000, -1000, 251, -1000, -1000, -1000, -1000, 1844, 1176,
	2167, 925, 1542, -1000, -1000, 1776, -1000, 1145, 797, 1288,
	1920, -1000, -1000, -1000, 35335, -1000, 13982, 13982, 13982, 1307,
	-1000, 29787, -1000, -1000, -1000, -1000, -1000, -1000, 17792, 952,
	13347, 1248, 1022, 13347, 13347, 13347, 13347, 13347, 13347, 13347,
	13347, 13347, 13347, 13347, 13347, 13347, 13347, 13347, 1327, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1541, -1000, 251,
	25412, 8902, 25412, 1509, 1509, 48285, 857, 857, 857, 857,
	857, 857, 37197, 2054, 24777, 25412, 2054, 2054, 2054, 2054,
	2054, 1563, 1699, 1062, 39045, 12077, 8902, 8902, 8902, 1563,
	13982, 13982, 8902, 8902, 11442, 10807, 15252, 8902, 8902, 2054,
	1114, 1062, 19697, 8902, -1000, -1000, 10172, -1000, -1000, -1000,
	-1000, -1000, 1563, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 48285, 48285, 8902, 8902, 8902, 8902, 1563, 1563, 8902,
	8902, 8902, 8902, 8902, 1563, 1563, 1563, 1563, 8902, 8902,
	8902, 8902, 8902, 8902, 8902, 8902, 8902, 8902, 8902, 8902,
	33487, 32255, 35335, 1761, 1729, -1000, 796, 20332, 1769, -1000,
	-109, -134, -68, -1000, -1000, 830, -1000, -1000, -1000, 9537,
	-1000, 18427, 2101, 1908, -1000, 27939, -1000, -1000, -30, -1000,
	-1000, -1000, 1800, -1000, 1805, 324, 9, 1805, 1805, 1805,
	1805, 1805, -1000, -1000, -1000, -1000, 18, -1000, -1000, -1000,
	-1000, -1000, 1831, 1827, -1000, 1800, 1800, 1800, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1807, 339, 1804,
	1804, 1804, 1804, 1804, -1000, -1000, -1000, -1000, 610, 610,
	610, -1000, 13982, 1843, 2059, 711, 322, 2027, 2038, 2027,
	555, -1000, 793, 1826, -1000, 790, 421, 1762, -1000, 179,
	1718, 32871, -1000, -1000, -1000, -1000, -1000, 35335, 35335, 44589,
	44589, 44589, 707, -1000, 35335, 1775, -1000, -1000, -1000, -1000,
	-1000, 1736, -1000, 1718, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 35335, -1000, -1000, 1462, 1062, 1540, 1538,
	2048, -1000, -1000, -1000, 1101, -1000, -1000, -1000, -1000, 1072,
	49517, 49517, 35335, 2048, 1072, 1062, 1447, 1846, 1790, 1563,
	-1000, -1000, 1535, -1000, -1000, 13347, 1774, 1774, -1000, 1774,
	936, 1509, 1774, -1000, 1697, 1174, 1461, 35335, -1000, 40893,
	-22, -1000, -147, 47053, -1000, -1000, -1000, 601, 47053, -1000,
	101, 166, -1000, 705, -1000, 1695, -1000, -1000, -1000, -1000,
	1825, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	47053, 142, 178, 47053, 1736, 2154, -1000, -1000, -1000, -1000,
	2092, -1000, -1000, 1790, 1641, -1000, 786, -1000, -1000, -1000,
	-1000, -1000, -1000, 602, -1000, -1000, 1563, -1000, 47669, -1000,
	1916, 1246, 1246, 13982, -1000, -1000, -1000, 18427, 2097, -1000,
	1926, 1925, 1814, -1000, -1000, 952, 1004, 1049, -1000, -1000,
	1202, -1000, -1000, -1000, -1000, -1000, 781, 1790, -1000, -1000,
	-1000, -1000, -1000, 3702, -1000, -1000, -1000, -1000, 1248, 13347,
	13347, 13347, 1447, 3702, 2895, 1169, 1096, 857, 953, 953,
	856, 856, 856, 856, 856, 1232, 1232, -1000, -1000, -1000,
	1563, -1000, 1597, -1000, -1000, 1062, 780, -1000, -1000, -1000,
	-1000, -1000, -1000, 8902, -1000, -1000, -1000, 8902, 8902, 8902,
	8902, 8902, -1000, 13982, -1000, 1563, 1597, 1597, 1597, -1000,
	1052, 1281, 1539, 1597, 935, 2153, 1597, 931, 2152, 1597,
	1604, 13347, 13347, 13347, 1597, 1597, 8902, 1111, -1000, 13982,
	1563, 1597, -1000, 1623, 1773, 1772, 1597, 1563, 1771, 1597,
	1597, -183, -183, 1563, 1597, 1563, 1597, 1597, -183, -183,
	-183, -183, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597,
	1597, 1597, 1597, 1597, 912, 35335, -1000, 1756, 447, -1000,
	-1000, -1000, 2055, 31639, -1000, -1000, 37813, -1000, 1790, 1790,
	912, 1715, 32255, -1000, -1000, 32255, 49517, 24142, -1000, 19697,
	-68, -72, -1000, -1000, 1769, -1000, -1000, 1415, -1000, -1000,
	1062, -1000, 778, 2015, 2054, 4040, 627, -1000, -1000, -1000,
	1824, 226, -1000, 1950, 851, 851, 872, 1467, 1947, -1000,
	-1000, 167, -38, -1000, -1000, -1000, 1332, -1000, 195, -1000,
	1805, 1805, 323, 1805, -1000, -1000, -1000, -1000, -1000, -1000,
	1460, 1460, -1000, -1000, -1000, -1000, 1330, -1000, 1807, -1000,
	1329, -1000, -1000, -1000, -1000, 167, 167, 167, 167, -1000,
	-1000, -1000, 1367, 1858, 48285, -1000, 35335, -1000, 2027, -1000,
	-1000, -1000, 152, -1000, -1000, -1000, 2138, -1000, -1000, 48285,
	42741, 48285, -1000, -1000, 102, 44589, 188, 366, 225, -1000,
	-1000, 704, -1000, 702, -1000, -1000, -1000, -1000, -1000, -1000,
	35335, 44589, -1000, -1000, -1000, -1000, -1000, 2130, 1526, 1521,
	-1000, -1000, -1000, 1018, 1072, -1000, -1000, 13347, 44589, -1000,
	571, -1000, 3702, -1000, -1000, -1000, 912, 732, -1000, -1000,
	-77, -1000, -1000, 699, 776, 773, 47053, 697, -1000, 116,
	44589, -1000, 48285, -1000, 2148, 2147, 141, 2145, 44589, -1000,
	62, -1000, 250, -1000, 16522, 25412, 1763, -1000, 868, 764,
	871, 616, 616, -1000, 1008, 616, 2004, 2003, 910, -1000,
	1760, 1459, 1457, -1000, 1914, -1000, -1000, -1000, 35335, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 23507, 8902,
	-1000, 1447, 3702, 2307, -1000, 13347, -1000, 8902, -1000, 17157,
	1563, 1597, 1597, 1597, 1597, 1597, 1062, -1000, -1000, -1000,
	-1000, 567, 1327, 567, -1000, 1327, -1000, 13347, 13347, -1000,
	13347, 13347, -1000, -1000, 13347, 4036, 4018, 1878, -278, -1000,
	1768, 1092, -1000, 13982, 1425, -1000, -1000, -1000, 13347, 13347,
	-1000, -1000, -1000, -1000, -1000, 46437, -1000, -183, -183, -183,
	-183, -183, -1000, -1000, -1000, -1000, -183, -183, -183, -183,
	-183, -183, -183, -183, -183, -183, -183, -183, 248, 1790,
	-1000, 19062, 32255, 32255, 32255, 32255, 32255, -1000, 1883, 1882,
	-1000, 1905, 1903, 1897, 314, 40893, 1693, 1563, 430, 31639,
	-1000, 1790, -1000, 40277, 782, 728, 722, 718, 8902, 13347,
	2130, 32255, 1741, 1741, -1000, 772, -1000, -1000, -1000, -104,
	-143, -1000, -1000, -1000, 25412, -1000, -1000, -1000, 4434, 2118,
	1008, 1008, 1008, 1008, 279, 2012, 1008, 1008, 1008, 1008,
	1008, -226, -228, 1008, 1008, 1008, 1008, 1008, 1008, 1008,
	1008, 1008, 1008, 1008, 57, 1008, 1008, 1008, 1008, 22237,
	1008, -1000, 41509, 662, 1965, 640, 1467, 1467, 1467, -1000,
	1467, -1000, -1000, -1000, 1806, -1000, 1188, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1790, -427, 1328, 2011, 417,
	2162, -1000, 1946, -1000, 1943, 1942, 1456, -1000, -1000, 1710,
	1709, 1687, -1000, -1000, -1000, 1805, -1000, 1691, -1000, 1668,
	1740, -1000, 1665, 119, 35335, -1000, -1000, 2050, -1000, -1000,
	-1000, 2009, 1008, 1008, 1008, 1857, -1000, -1000, -1000, -1000,
	1617, 1739, -1000, 6375, 48285, 48285, 48285, -1000, -290, 520,
	-1000, 44589, 159, 179, 483, 1508, 35335, 44589, -1000, -1000,
	-1000, 13982, -1000, -1000, 2048, -1000, 3702, 1718, -1000, -1000,
	15, 35335, -1000, 44589, 876, 45821, 695, 44589, 136, 158,
	-1000, 44589, 44589, 2144, 44589, 1736, 1454, -1000, -1000, 602,
	45205, 1467, 753, -1000, -1000, 634, -1000, 203, 1506, 31019,
	30403, 48285, 1940, 1933, 1505, 35335, 48285, -1000, -1000, 48901,
	1490, 13982, -1000, 48285, -1000, -1000, 48285, 48285, -1000, -1000,
	-1000, -1000, 1185, 7632, -1000, -1000, 1563, -1000, 13347, 3702,
	-1000, -1000, 771, -1000, -183, -183, -183, -183, -183, 1563,
	1800, 1800, -1000, 1800, 1804, -1000, 1800, 39, 1800, 38,
	1563, 1563, 1563, 3843, 3679, 3627, 3612, 1623, 13347, 13347,
	13347, 1790, -179, -1000, 1062, 13982, 3536, 1970, -1000, -1000,
	1489, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1856,
	19062, 1790, 15887, -1000, 48285, 1766, -1000, 1026, 828, 1025,
	1016, 770, 760, 447, 1803, 1855, 519, -1000, -1000, -1000,
	-1000, 1880, -1000, 1879, 1876, -1000, -1000, -1000, 1795, -1000,
	-1000, 1738, 1790, 48285, 13347, 782, -1000, 1790, 1790, 1790,
	1563, 1822, 2121, 1741, -1000, -1000, 869, -1000, -1000, -1000,
	-1000, 138, 717, 717, 717, 1327, 1008, 2008, 1008, 1008,
	1320, 26682, 1453, 1452, 1451, 1008, 1008, 1311, 1450, 26682,
	1449, 631, 717, 717, 717, 1306, 1448, 219, -1000, 1445,
	1354, 1345, 717, -1000, -242, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 717, 1645, -1000, 1800, 1800, 1932, -1000,
	851, -1000, -1000, -1000, -1000, -1000, 48285, -1000, 13347, 2047,
	-1000, 955, -1000, 1509, -1000, 1790, 1790, 1790, 1790, 13347,
	-1000, -1000, -110, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1444, -1000, 1299, -1000, 1292, -1000, -1000, -369,
	1799, 251, -1000, 1008, 942, 930, 1443, 35335, 137, 42741,
	-1000, 6375, 6375, 6375, 151, 127, -1000, 1158, -1000, -1000,
	-1000, 1442, 1431, 1430, 1718, 190, 1157, 165, -1000, 2042,
	-1000, -1000, 1062, 1072, -78, -1000, -1000, 158, -1000, -1000,
	-1000, 44589, 158, -1000, -1000, 174, 1736, 1736, 44589, 1736,
	-1000, -1000, 48901, 612, 6375, 6375, 1843, 851, 1931, 640,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1484, -1000, 863, -1000, 694, 612, 48901, 1062,
	878, 1170, -1000, 2143, -1000, -1000, -1000, 3702, 22872, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 310, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 13347, 13347, 13347, 13347,
	-1000, 1623, 1623, 1623, 13347, 1563, 1429, 1062, 13347, 13347,
	907, -1000, -1000, 2034, 1652, 1730, -1000, -1000, 8267, 1563,
	1924, 1641, -1000, 39045, 1627, -1000, 2121, 19062, 13982, 13982,
	13982, 13982, -1000, -1000, 13982, 1798, -1000, 13982, -1000, -1000,
	-1000, -1000, -1000, 48285, 412, -1000, 13982, 1627, 1694, -1000,
	48285, 48285, 48285, -1000, 1428, 2101, -1000, -254, -1000, 278,
	274, 208, -1000, -1000, -1000, -1000, -1000, 1327, 1008, 26682,
	1327, -1000, -1000, -1000, -1000, -1000, 1426, 1421, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -245, -1000, 787, 41509, 2031, 2031, 1467,
	1467, 1625, -1000, 1623, 1790, -1000, -1000, -1000, -1000, 6997,
	-1000, 6997, -1000, 6997, 6997, 1623, -1000, 1790, 1790, 1790,
	1790, 1790, 1790, 1790, 1790, 1790, 1790, 1790, -1000, 1602,
	1599, -1000, 41509, -1000, -1000, 892, -1000, -1000, -1000, -1000,
	-1000, 2091, -1000, 137, -1000, 1416, 321, 340, -1000, 319,
	317, 300, 293, 261, -1000, -1000, -1000, -1000, 416, 151,
	-1000, -65, 1266, 1032, 2002, 127, -1000, 1262, 1261, 1258,
	1257, 234, -1000, -1000, -1000, -1000, 210, 179, -1000, 462,
	1414, -1000, 1985, 1982, 2045, 158, 2045, 130, 1736, 1592,
	-1000, -1000, 1468, -1000, -1000, 1797, 1467, 1467, -1000, 1427,
	-1000, -1000, 48285, -1000, 612, 2026, 2025, 1790, 2130, 32255,
	7632, -1000, -1000, -1000, -1000, 1623, 1623, 1623, 1623, -1000,
	-1000, -1000, 183, -1000, -1000, 1623, 1623, 2121, 2116, 1930,
	-1000, 1790, -1000, -1000, 1790, 249, -1000, 48285, 2101, -1000,
	1062, 1062, 1062, 1062, 1062, 48285, 1062, 1622, 1790, 38429,
	-1000, 40893, 1561, 1561, 1561, -64, -1000, -266, 1253, 26682,
	1790, 26682, 1790, 1790, 407, -1000, 1327, -1000, -1000, -1000,
	-1000, -1000, -1000, 787, -1000, 26682, 1008, 1399, -1000, -1000,
	-1000, -1000, -1000, 573, 48285, -430, 13347, 1597, 1597, 1597,
	-1000, 1597, -1000, -1000, -1000, 1595, -1000, 251, -1000, -1000,
	418, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1990, 1988,
	345, -1000, 1396, 1395, -1000, 509, 1310, 783, -188, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	414, 1369, -1000, 164, -1000, -1000, 679, 1969, 1972, 2115,
	-1000, 44589, 2045, -1000, -1000, -1000, -1000, 167, 167, 41509,
	1843, 1796, -1000, -1000, -1000, 13347, -1000, 880, 2125, 1734,
	-1000, -1000, -1000, -1000, -1000, 1563, 176, -298, -1000, -1000,
	977, 13982, 2161, -1000, 1730, 1790, -1000, 251, -1000, -1000,
	1591, -1000, -1000, -1000, 782, -1000, -1000, -1000, 1790, 1790,
	2114, -1000, 1563, 48285, 1563, 48285, 1370, 48285, 997, -1000,
	-1000, -1000, 1233, -1000, 35335, -1000, -1000, -1000, -1000, 1623,
	-1000, -1000, -1000, -1000, 787, -1000, 355, 6148, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1228, -1000, -1000, 1254,
	405, 160, -1000, 2043, -1000, 1795, 1208, 1982, 2110, 1980,
	1974, -1000, 1392, -291, -1000, 1589, 1792, 41509, 3702, 1583,
	-1000, 48285, 2123, 2109, -1000, -1000, 1907, -284, -301, 1563,
	260, 260, 1732, 19062, 1730, 1563, -1000, -1000, 25412, 880,
	-339, -1000, 1561, -1000, 1561, 1563, 1563, 1561, 1201, -1000,
	1791, -430, -1000, 787, -1000, 552, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 13982, 13982, 26047,
	6148, 147, -1000, 145, -1000, -1000, -1000, 1391, -1000, 978,
	-1000, 1384, -1000, 2105, 2103, -1000, 185, 787, 41509, 1587,
	-1000, 880, 1923, -185, 13982, 13982, -1000, 1881, -1000, -1000,
	-1000, 238, -1000, 970, 353, 916, -1000, 1509, -1000, 1726,
	-1000, 1585, -1000, 6375, 1583, -273, -1000, -1000, -1000, -1000,
	-1000, 1790, 48285, -1000, -1000, 1347, 1346, -1000, 1344, 1223,
	245, 233, 5619, -1000, -1000, -1000, -1000, -436, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1376, 1356, 42125, -1000, 1569,
	787, -1000, 499, -1000, 48285, -1000, 1062, 1724, -1000, 1062,
	-292, 1152, -1000, -1000, -1000, -1000, -1000, 48285, 1563, 25412,
	259, -1000, -1000, 1199, 48285, 1567, -1000, -1000, -1000, 1167,
	-1000, 13982, 6148, 2085, 2067, 2058, 15, 25412, 6082, -1000,
	-1000, -1000, -1000, 124, 1718, 787, -1000, 490, 1723, -1000,
	2041, 13982, -299, 238, -1000, 39661, -1000, -1000, 1249, -220,
	-1000, 1561, 1853, 196, 1138, 6148, -1000, 1149, -437, 492,
	251, 785, 830, -1000, -1000, -1000, 44589, -1000, 1790, 48285,
	1790, -1000, -303, -1000, 40893, -1000, -1000, 1243, -1000, 1852,
	1850, 2141, -1000, -1000, -1000, -1000, -1000, -1000, 6148, 39045,
	-1000, -438, 6148, 4561, -1000, -1000, -1000, 5852, -1000, -1000,
	-1000, -1000, 197, -1000, -1000, 2024, 1718, 14617, -1000, -1000,
	-1000, -1000, 385, -1000, -1000, 2160, -1000, 2158, 703, 703,
	-1000, -440, -1000, 5500, -441, 658, 6148, 1091, -1000, 13982,
	-1000, 785, -1000, 13347, 1623, 1563, -1000, 1849, 13347, 1845,
	-1000, -1000, -1000, 584, 1242, -1000, 5318, 1137, 6148, -1000,
	-443, 657, 6148, -1000, 1058, -1000, 3702, -1000, -1000, -317,
	1758, -318, -1000, -1000, -1000, -1000, -1000, 5022, -1000, -444,
	6148, -1000, -319, -1000, 653, 4606, -448, -1000, -1000, 628,
	6148, -1000,
}

var yyPgo = [...]int{
	0, 2626, 2624, 39, 177, 2623, 268, 2622, 2621, 43,
	2620, 30, 25, 22, 33, 2614, 2267, 2261, 2256, 2254,
	2247, 2613, 7, 2611, 2607, 2244, 2606, 2605, 2242, 2239,
	2237, 2235, 2604, 2602, 2601, 2229, 2227, 2225, 2, 2600,
	24, 2599, 5, 163, 181, 2598, 3, 2594, 2593, 12,
	2592, 2591, 2222, 2590, 2589, 2588, 114, 2587, 2213, 2210,
	2586, 2206, 2204, 2581, 2580, 2202, 2200, 2194, 2577, 194,
	2574, 2571, 2570, 185, 2569, 174, 2568, 2566, 2564, 130,
	2563, 351, 123, 61, 126, 434, 2562, 18, 63, 282,
	2561, 9, 2560, 129, 2559, 124, 2556, 2552, 173, 2551,
	161, 98, 104, 2549, 2548, 175, 2547, 2545, 2544, 122,
	2543, 2541, 186, 3070, 2538, 2535, 153, 2533, 60, 184,
	52, 90, 2531, 121, 2530, 2527, 2526, 36, 357, 2525,
	113, 159, 2521, 2520, 103, 2518, 2517, 96, 2516, 2515,
	2514, 152, 51, 2512, 2511, 56, 2510, 58, 65, 2509,
	54, 2508, 157, 2503, 2502, 2499, 2497, 2495, 83, 2492,
	71, 2491, 160, 238, 198, 2485, 2484, 16, 11, 2483,
	46, 21, 13, 53, 29, 81, 64, 148, 132, 110,
	2482, 28, 47, 139, 105, 2481, 115, 87, 48, 2477,
	172, 2476, 85, 178, 149, 154, 176, 2470, 2455, 2454,
	193, 2453, 146, 100, 2452, 119, 1305, 187, 2451, 2445,
	112, 2444, 2443, 2442, 2441, 2438, 101, 131, 2418, 2417,
	188, 189, 191, 99, 2415, 42, 3340, 3978, 170, 3372,
	109, 168, 2414, 57, 2413, 2412, 2411, 2988, 127, 17,
	73, 182, 2410, 125, 95, 106, 2409, 2408, 2406, 2404,
	2403, 2396, 2390, 2389, 141, 201, 2387, 2386, 2385, 2384,
	32, 27, 20, 15, 2383, 147, 143, 140, 2382, 164,
	44, 2381, 2379, 150, 128, 2378, 2377, 2370, 2369, 151,
	93, 171, 35, 2368, 137, 142, 145, 2367, 86, 2366,
	2363, 62, 1378, 2362, 2361, 2360, 2359, 118, 183, 2358,
	2356, 2355, 45, 2354, 2353, 2352, 2351, 2350, 84, 37,
	41, 82, 19, 2349, 2348, 94, 117, 49, 38, 2346,
	6, 4, 10, 2345, 2343, 2342, 2341, 2340, 2337, 2335,
	102, 2334, 2331, 76, 2330, 2323, 2321, 50, 2320, 2310,
	2307, 162, 133, 55, 179, 92, 8, 2300, 2295, 14,
	2285, 138, 2284, 72, 2283, 66, 2282, 2272, 75, 2263,
	2259, 70, 2232, 2220, 180, 1956, 288, 2215, 165, 134,
	59, 67, 2208, 89, 2196, 0, 827, 167, 733, 2186,
	2184, 2182,
}

var yyR1 = [...]int{
	0, 374, 374, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 68, 3, 3, 9,
	10, 4, 4, 5, 5, 91, 91, 6, 90, 90,
	186, 186, 186, 186, 185, 185, 92, 92, 89, 89,
	98, 7, 7, 8, 8, 11, 11, 72, 72, 12,
	13, 13, 13, 13, 377, 377, 107, 107, 105, 105,
	106, 106, 183, 183, 14, 14, 14, 190, 190, 195,
	195, 195, 198, 198, 198, 198, 172, 173, 174, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 347, 347, 356, 356, 356, 357, 357, 355, 355,
	355, 355, 355, 359, 359, 360, 360, 358, 358, 358,
	358, 362, 362, 363, 363, 361, 361, 361, 361, 361,
	361, 361, 361, 361, 361, 361, 361, 361, 361, 350,
	350, 350, 35, 35, 35, 35, 35, 36, 36, 36,
	36, 36, 36, 364, 364, 364, 364, 364, 364, 364,
	364, 364, 364, 364, 364, 364, 364, 364, 364, 364,
	364, 364, 364, 364, 364, 364, 364, 364, 364, 364,
	364, 364, 364, 364, 365, 365, 366, 366, 367, 367,
	368, 368, 368, 368, 369, 369, 369, 369, 369, 370,
	370, 370, 370, 370, 370, 370, 371, 371, 372, 372,
	2, 328, 328, 329, 329, 330, 330, 330, 330, 331,
	331, 332, 332, 333, 333, 333, 333, 333, 333, 333,
	333, 333, 333, 26, 222, 222, 219, 219, 219, 220,
	220, 221, 221, 221, 349, 349, 349, 343, 343, 343,
	345, 345, 344, 344, 344, 346, 346, 351, 351, 351,
	351, 351, 353, 353, 353, 353, 353, 353, 354, 354,
	354, 352, 352, 50, 50, 51, 51, 51, 161, 161,
	161, 15, 15, 15, 15, 15, 21, 23, 23, 39,
	39, 40, 24, 24, 24, 24, 41, 41, 42, 27,
	27, 27, 27, 27, 27, 48, 48, 48, 47, 47,
	46, 46, 46, 46, 46, 46, 25, 25, 25, 25,
	49, 49, 44, 44, 43, 45, 45, 45, 45, 45,
	45, 45, 45, 45, 45, 45, 45, 28, 28, 28,
	28, 28, 28, 20, 327, 327, 327, 38, 38, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 54,
	54, 293, 294, 294, 294, 294, 294, 294, 294, 294,
	280, 280, 281, 281, 281, 281, 281, 270, 270, 270,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 244, 244, 244, 244, 250, 250,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	249, 249, 249, 249, 249, 249, 249, 249, 251, 251,
	251, 251, 251, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 253, 253,
	253, 253, 253, 253, 253, 253, 279, 279, 255, 255,
	254, 254, 254, 273, 273, 274, 274, 274, 271, 271,
	271, 272, 272, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 259, 275, 260, 260, 261,
	261, 262, 262, 263, 263, 264, 264, 269, 269, 268,
	268, 268, 268, 268, 268, 265, 265, 265, 265, 266,
	266, 267, 278, 278, 278, 278, 278, 256, 37, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 314, 314, 212, 212, 213, 213, 283, 283, 312,
	312, 311, 311, 310, 310, 310, 292, 292, 307, 307,
	307, 307, 307, 307, 307, 307, 287, 287, 287, 286,
	286, 288, 288, 291, 291, 309, 309, 308, 308, 284,
	284, 284, 315, 315, 315, 315, 315, 285, 285, 285,
	285, 285, 316, 289, 289, 290, 290, 290, 321, 322,
	320, 320, 320, 320, 320, 124, 124, 124, 296, 296,
	296, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 298, 298, 298, 298, 298, 299, 299, 299, 299,
	299, 299, 373, 373, 373, 300, 300, 300, 301, 301,
	301, 301, 301, 302, 302, 302, 302, 303, 303, 304,
	304, 305, 305, 306, 306, 325, 325, 324, 324, 52,
	53, 57, 57, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 56, 56, 56, 160, 160, 160, 217, 217,
	319, 317, 317, 318, 318, 17, 17, 55, 55, 348,
	348, 18, 18, 18, 18, 18, 18, 18, 18, 18,
	323, 323, 323, 19, 19, 58, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 86, 204, 204, 203, 203, 202, 202, 202, 205,
	205, 205, 205, 242, 242, 242, 60, 60, 60, 64,
	64, 64, 67, 67, 67, 65, 65, 66, 66, 29,
	30, 30, 30, 30, 31, 218, 218, 62, 62, 63,
	63, 63, 63, 78, 78, 379, 379, 61, 380, 69,
	70, 70, 71, 71, 71, 208, 208, 75, 75, 75,
	73, 73, 73, 74, 74, 80, 80, 84, 84, 84,
	84, 83, 83, 83, 83, 163, 163, 168, 234, 234,
	144, 144, 164, 164, 169, 169, 169, 170, 170, 171,
	171, 171, 171, 171, 166, 166, 165, 165, 167, 132,
	132, 232, 232, 232, 232, 231, 231, 231, 231, 231,
	231, 88, 88, 93, 93, 95, 95, 95, 95, 95,
	95, 99, 146, 146, 117, 117, 118, 118, 118, 118,
	118, 130, 130, 182, 182, 181, 181, 184, 184, 94,
	96, 96, 96, 96, 102, 102, 103, 103, 104, 104,
	216, 216, 239, 239, 239, 108, 108, 108, 110, 109,
	109, 109, 109, 109, 109, 111, 111, 97, 97, 295,
	295, 282, 246, 246, 247, 381, 381, 381, 381, 112,
	112, 114, 115, 115, 113, 113, 113, 113, 113, 119,
	119, 116, 120, 120, 120, 120, 121, 121, 85, 85,
	85, 85, 85, 85, 85, 85, 201, 201, 123, 123,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	140, 140, 140, 140, 140, 140, 125, 125, 125, 125,
	125, 125, 125, 79, 79, 141, 141, 141, 101, 100,
	100, 82, 82, 81, 81, 142, 142, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 135, 135, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 134,
	134, 134, 134, 134, 134, 134, 134, 134, 134, 134,
	134, 134, 134, 134, 134, 134, 378, 378, 137, 136,
	136, 136, 136, 136, 136, 76, 76, 76, 76, 76,
	240, 240, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 153, 153, 77,
	77, 151, 151, 152, 154, 154, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	127, 127, 127, 127, 127, 127, 127, 127, 129, 129,
	129, 155, 155, 143, 143, 87, 156, 156, 157, 158,
	158, 159, 159, 162, 175, 175, 175, 176, 176, 176,
	176, 131, 131, 177, 177, 177, 126, 126, 126, 126,
	126, 126, 126, 180, 180, 179, 179, 178, 178, 178,
	178, 178, 178, 187, 187, 145, 145, 148, 148, 147,
	149, 188, 188, 192, 192, 192, 192, 189, 189, 193,
	193, 193, 193, 196, 196, 197, 197, 197, 194, 194,
	194, 191, 191, 191, 236, 236, 236, 199, 199, 209,
	209, 206, 206, 207, 207, 200, 200, 257, 257, 257,
	215, 215, 214, 214, 214, 210, 210, 210, 211, 211,
	233, 233, 229, 229, 235, 235, 230, 230, 237, 237,
	238, 238, 326, 326, 276, 276, 336, 336, 277, 277,
	337, 337, 339, 339, 334, 334, 335, 335, 338, 338,
	32, 340, 340, 341, 341, 342, 342, 342, 342, 33,
	34, 34, 34, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 228, 228,
	228, 228, 228, 228, 226, 226, 226, 226, 226, 375,
	376,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 11, 5, 7, 1,
	5, 1, 3, 1, 3, 2, 1, 13, 0, 2,
	0, 2, 3, 3, 1, 3, 0, 2, 1, 3,
	4, 1, 3, 1, 3, 8, 9, 1, 1, 10,
	9, 8, 7, 7, 1, 1, 1, 3, 1, 3,
	1, 3, 0, 4, 3, 4, 5, 1, 3, 3,
	2, 2, 2, 2, 2, 1, 0, 0, 0, 2,
	3, 3, 11, 9, 11, 5, 5, 16, 12, 9,
	4, 0, 3, 0, 2, 2, 1, 3, 1, 1,
	2, 2, 2, 0, 2, 1, 2, 2, 2, 2,
	2, 0, 1, 1, 2, 3, 3, 5, 3, 3,
	4, 5, 4, 4, 2, 2, 2, 2, 2, 0,
	2, 2, 9, 10, 9, 5, 7, 7, 7, 7,
	8, 4, 6, 2, 3, 2, 3, 3, 3, 4,
	3, 3, 2, 2, 3, 2, 2, 2, 2, 2,
	3, 2, 2, 2, 3, 3, 2, 3, 3, 2,
	2, 2, 2, 2, 1, 3, 0, 3, 1, 3,
	0, 1, 1, 1, 1, 3, 1, 3, 3, 0,
	2, 5, 5, 5, 7, 5, 0, 3, 0, 3,
	4, 0, 1, 1, 3, 2, 3, 3, 3, 0,
	1, 1, 2, 2, 2, 2, 1, 2, 2, 3,
	3, 3, 3, 4, 2, 3, 3, 3, 3, 0,
	3, 0, 3, 3, 1, 1, 1, 3, 2, 1,
	1, 3, 3, 2, 1, 1, 3, 1, 2, 5,
	4, 6, 4, 3, 3, 6, 5, 5, 4, 3,
	5, 1, 3, 1, 1, 1, 1, 1, 0, 2,
	2, 1, 1, 1, 1, 1, 4, 5, 8, 1,
	2, 5, 7, 10, 8, 11, 1, 2, 5, 5,
	5, 5, 6, 5, 7, 1, 1, 1, 1, 3,
	1, 1, 1, 2, 1, 1, 2, 4, 2, 4,
	2, 3, 1, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 4,
	3, 2, 4, 3, 0, 2, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 5,
	5, 5, 1, 1, 2, 3, 4, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 0, 1, 1,
	0, 2, 3, 2, 2, 2, 2, 2, 2, 2,
	2, 6, 8, 3, 3, 1, 1, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 3, 2, 2, 2, 2, 2, 1, 2,
	2, 2, 1, 2, 2, 3, 3, 2, 2, 3,
	2, 3, 4, 2, 2, 1, 1, 1, 1, 1,
	2, 1, 1, 1, 1, 1, 4, 4, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 3,
	0, 3, 3, 0, 5, 0, 3, 5, 0, 1,
	1, 0, 1, 2, 3, 2, 3, 5, 3, 5,
	3, 5, 4, 5, 4, 3, 1, 0, 1, 3,
	3, 0, 1, 2, 2, 0, 1, 0, 1, 1,
	1, 1, 2, 2, 2, 5, 5, 4, 4, 4,
	4, 4, 2, 1, 2, 1, 2, 2, 3, 2,
	2, 2, 2, 1, 1, 1, 1, 3, 2, 1,
	1, 0, 3, 1, 1, 0, 1, 5, 4, 0,
	1, 1, 2, 2, 3, 2, 0, 1, 3, 5,
	3, 3, 5, 3, 2, 2, 1, 1, 1, 1,
	1, 0, 1, 0, 1, 1, 3, 3, 3, 3,
	3, 1, 10, 11, 11, 12, 12, 3, 3, 3,
	2, 1, 5, 1, 1, 0, 2, 2, 3, 3,
	1, 1, 2, 2, 2, 0, 1, 2, 0, 2,
	3, 3, 3, 3, 3, 4, 4, 5, 3, 3,
	4, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	3, 3, 3, 3, 3, 3, 2, 2, 4, 4,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 5, 8, 1, 4,
	5, 4, 5, 5, 5, 5, 8, 0, 1, 0,
	2, 0, 4, 0, 2, 0, 2, 0, 2, 1,
	5, 1, 3, 5, 4, 3, 5, 3, 8, 10,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 5, 4, 5, 1, 2, 2, 4, 3, 6,
	5, 3, 9, 2, 2, 0, 1, 2, 0, 1,
	7, 1, 3, 8, 8, 3, 3, 3, 5, 3,
	5, 5, 5, 4, 4, 4, 4, 4, 4, 4,
	0, 1, 1, 3, 2, 3, 3, 4, 3, 5,
	5, 5, 4, 4, 4, 2, 2, 2, 6, 2,
	4, 4, 4, 5, 8, 6, 3, 5, 4, 2,
	4, 3, 2, 4, 5, 6, 2, 6, 6, 3,
	3, 3, 0, 1, 1, 1, 0, 2, 2, 0,
	2, 3, 2, 0, 1, 1, 2, 4, 1, 1,
	2, 1, 2, 4, 4, 1, 2, 1, 2, 2,
	3, 4, 4, 5, 3, 1, 1, 3, 3, 1,
	1, 1, 1, 0, 3, 1, 1, 3, 0, 2,
	0, 2, 1, 2, 2, 0, 1, 0, 1, 1,
	0, 1, 1, 0, 1, 3, 5, 1, 1, 3,
	5, 1, 2, 3, 5, 2, 2, 6, 0, 1,
	0, 3, 0, 1, 0, 2, 2, 4, 1, 2,
	2, 2, 2, 2, 0, 2, 1, 3, 3, 1,
	3, 0, 1, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 1, 1, 4, 1, 3, 1,
	1, 2, 2, 4, 2, 6, 1, 4, 6, 3,
	2, 0, 3, 0, 3, 1, 3, 1, 3, 4,
	4, 4, 4, 3, 2, 4, 0, 1, 0, 2,
	0, 1, 1, 1, 1, 1, 2, 2, 1, 2,
	3, 2, 3, 3, 2, 2, 2, 12, 11, 1,
	3, 3, 4, 3, 0, 0, 3, 4, 3, 1,
	3, 3, 2, 1, 1, 3, 1, 1, 1, 1,
	3, 3, 0, 5, 5, 5, 0, 2, 1, 3,
	3, 3, 2, 3, 1, 2, 0, 3, 1, 1,
	3, 3, 4, 4, 5, 3, 4, 5, 6, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 0, 2, 1, 1, 1, 3, 1,
	3, 0, 1, 1, 3, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 2, 2, 2, 2, 3, 1, 1, 1,
	1, 1, 1, 5, 6, 6, 6, 5, 5, 5,
	6, 5, 5, 6, 5, 5, 5, 5, 6, 5,
	5, 5, 4, 4, 5, 5, 5, 5, 5, 4,
	4, 4, 4, 4, 4, 4, 4, 3, 6, 6,
	4, 6, 6, 4, 8, 8, 8, 8, 4, 6,
	7, 7, 7, 9, 4, 7, 5, 4, 4, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 8, 8, 0, 2, 3, 4,
	4, 4, 4, 4, 4, 0, 3, 4, 7, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 3, 3, 1, 2, 2,
	1, 2, 1, 2, 2, 1, 2, 0, 1, 0,
	2, 1, 2, 4, 0, 2, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 0, 3, 1, 3, 1, 0, 2, 1, 0,
	3, 1, 3, 2, 0, 1, 1, 0, 2, 4,
	4, 1, 1, 0, 2, 4, 2, 4, 1, 3,
	5, 4, 6, 0, 3, 1, 3, 3, 1, 1,
	1, 1, 1, 0, 5, 1, 3, 1, 2, 3,
	1, 1, 3, 3, 3, 3, 3, 1, 3, 1,
	2, 2, 3, 1, 1, 1, 1, 1, 3, 3,
	3, 1, 2, 1, 1, 1, 1, 1, 1, 0,
	1, 0, 2, 0, 3, 0, 1, 0, 3, 3,
	1, 1, 0, 1, 1, 1, 1, 1, 0, 1,
	0, 2, 1, 1, 1, 3, 1, 1, 1, 1,
	1, 1, 0, 2, 0, 1, 0, 4, 0, 1,
	0, 3, 0, 3, 0, 4, 0, 3, 0, 3,
	3, 1, 3, 2, 4, 1, 2, 1, 2, 2,
	2, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1,
}

var yyChk = [...]int{
	-1000, -374, -1, -3, -10, -11, -12, -13, -14, -16,
	-52, -17, -18, -19, -58, -59, -60, -64, -65, -66,
	-62, -61, -25, -28, -20, -68, -29, -30, -31, -32,
	-33, -34, -35, -36, -37, -5, 6, 7, -92, 29,
	-54, 180, -53, 183, 182, 219, 184, 212, 64, 342,
	-67, 345, 346, -379, -218, 270, 271, 20, 37, 347,
	349, 30, 31, 233, 287, 289, 314, -4, 521, 181,
	343, 214, 213, 26, -6, -7, -375, 68, 640, -158,
	15, -69, -380, -69, -72, 9, 10, 8, 443, -69,
	-293, -216, 108, 68, 23, -211, -222, 88, 434, 188,
	-220, 283, 285, -209, -210, -219, 243, 253, 44, 199,
	198, 254, 189, 283, 189, 190, 192, 434, 188, 226,
	225, 283, 285, 189, -113, -237, -226, -227, 301, 72,
	-225, 460, 464, 467, 468, 473, 291, 81, 323, 324,
	315, 325, 209, 412, 284, 290, 293, 316, 607, 326,
	328, 329, 454, 455, 192, 202, 625, 308, 210, 518,
	254, 635, 628, 295, 402, 490, 342, 358, 350, 373,
	519, 578, 265, 341, 419, 491, 298, 258, 321, 579,
	408, 414, 268, 345, 511, 509, 492, 428, 234, 580,
	262, 264, 263, 248, 459, 269, 36, 215, 369, 304,
	243, 581, 494, 574, 493, 237, 506, 35, 27, 508,
	236, 431, 99, 582, 332, 416, 495, 390, 333, 232,
	583, 523, 302, 415, 365, 314, 117, 241, 280, 334,
	584, 391, 395, 585, 420, 288, 279, 513, 586, 587,
	335, 588, 191, 294, 496, 589, 244, 422, 299, 389,
	200, 520, 211, 48, 223, 423, 393, 512, 399, 590,
	331, 591, 592, 593, 594, 312, 310, 497, 311, 313,
	255, 260, 498, 53, 186, 397, 396, 398, 261, 418,
	378, 376, 595, 596, 303, 206, 433, 597, 598, 377,
	18, 599, 600, 426, 306, 601, 602, 603, 499, 514,
	489, 604, 605, 417, 392, 394, 242, 116, 606, 309,
	413, 318, 522, 292, 510, 608, 337, 222, 217, 427,
	327, 609, 610, 611, 612, 613, 286, 285, 346, 319,
	500, 347, 266, 614, 615, 501, 616, 617, 252, 235,
	430, 421, 52, 404, 618, 322, 338, 407, 343, 229,
	502, 503, 504, 505, 7, 259, 300, 515, 516, 411,
	320, 267, 253, 256, 380, 224, 619, 620, 367, 368,
	344, 227, 219, 111, 429, 573, 283, 339, 51, 230,
	621, 622, 257, 231, 348, 297, 370, 189, 133, 374,
	419, 180, 409, 410, 416, -287, 417, 225, 228, -242,
	189, -204, 408, 288, 309, 464, 231, 232, 190, 191,
	32, 421, 420, 412, -237, 348, 348, 348, 193, -78,
	184, 220, -113, -49, 72, 272, -49, 29, 72, 72,
	36, 72, 347, 411, 411, 75, 522, 234, 21, -365,
	-346, 318, -364, -344, 181, 180, 10, 182, 323, 324,
	325, 190, 8, 30, 607, 207, 326, 327, 6, 212,
	328, 329, 226, 9, 330, -349, 74, 72, -225, 21,
	-365, -346, 318, -213, -212, 340, 399, -91, 577, -89,
	-98, -239, -237, -226, 74, -200, 194, 344, -71, 5,
	-9, -3, 521, -176, 17, 16, -75, 54, 55, -70,
	-83, 124, -85, -237, -122, 91, -128, 28, 72, -225,
	24, -127, 301, 220, -123, -150, -226, -149, -101, 133,
	-241, 122, 123, 130, 92, 176, -135, -133, -134, -136,
	-138, -139, 74, 73, 82, 75, 76, 77, 78, 83,
	84, 85, -229, -227, -224, 460, 464, 467, 468, 473,
	-147, -375, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 58, 59, 458, 188, 444, 445,
	371, 8, 446, 447, 448, 517, 209, 452, 94, 47,
	562, 432, 442, 441, 440, 438, 439, 435, 437, 436,
	454, 455, 195, 434, 128, 443, 477, 478, 479, 480,
	481, 482, 483, 484, 486, 487, 485, 461, 462, 463,
	465, 466, 469, 470, 471, 472, 474, 475, 476, 524,
	185, 181, 184, 90, 23, 25, 525, 240, 93, 356,
	385, 451, 16, 20, 203, 187, 374, 201, 132, 197,
	204, 274, 276, 180, 62, 526, 275, 409, 527, 528,
	529, 530, 364, 362, 273, 531, 10, 26, 213, 247,
	532, 360, 182, 238, 97, 98, 534, 41, 40, 307,
	277, 214, 535, 361, 536, 537, 19, 65, 205, 11,
	199, 228, 634, 538, 287, 13, 115, 14, 539, 540,
	541, 542, 194, 110, 190, 624, 60, 245, 543, 354,
	544, 545, 546, 547, 548, 355, 87, 549, 550, 107,
	551, 56, 488, 32, 233, 575, 449, 552, 553, 38,
	37, 384, 388, 383, 554, 400, 108, 17, 30, 555,
	556, 221, 387, 353, 382, 576, 557, 558, 250, 63,
	340, 363, 638, 33, 66, 218, 336, 305, 42, 88,
	15, 246, 61, 34, 456, 112, 639, 366, 196, 225,
	560, 424, 249, 561, 113, 359, 577, 207, 109, 349,
	183, 317, 271, 208, 563, 289, 564, 239, 114, 410,
	565, 566, 453, 29, 212, 270, 352, 198, 567, 251,
	282, 272, 281, 568, 569, 296, 43, 636, 623, 189,
	39, 96, 386, 351, 381, 193, 450, 226, 278, 5,
	44, 31, 405, 9, 330, 64, 67, 375, 372, 570,
	379, 637, 12, 571, 457, 521, 425, 89, 572, 406,
	-69, -69, -69, -189, 344, -196, -193, 420, 421, -194,
	-197, -191, -150, 399, 604, 605, 419, 374, 418, -229,
	-237, -226, 301, 220, 133, 461, 462, 463, 94, 371,
	444, 477, 435, 437, 432, 436, 434, 28, 478, 24,
	85, 479, 458, 195, 8, 176, 465, 466, 480, 481,
	482, 58, 438, 439, 517, 128, 91, 483, 484, 83,
	486, 487, 562, 443, 59, 485, 188, 471, 470, 469,
	472, 446, 447, 84, 440, 441, 442, 47, 475, 474,
	476, -2, -6, 6, -113, -294, -281, -285, -229, -226,
	-227, -228, 216, 204, -316, 72, -225, 301, 220, 50,
	86, 55, 54, 201, 190, 192, 443, -207, 195, -207,
	226, 225, -221, 251, -207, -207, 189, -220, 100, 100,
	-55, -113, -348, -343, -349, -206, 195, -229, -206, -206,
	-206, -206, -206, -206, -206, -113, 177, -105, -113, 72,
	29, -205, 108, 12, 434, 188, 189, 225, 226, 192,
	-289, 11, 110, 229, 229, 229, 230, 229, -203, 411,
	413, 227, 414, 415, 12, -86, 108, 19, -375, -176,
	-176, 125, 193, 72, 347, -63, -3, -13, -11, -12,
	-9, 100, -130, 23, 29, 29, 74, 51, 29, -44,
	-43, -45, 258, 259, 260, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 29, -327, 68, -276, 399, 72,
	-340, -341, -113, 75, 75, 66, 309, 66, 69, 193,
	69, 66, -366, 319, 68, -366, 285, 319, 320, 253,
	283, 192, -366, -366, 285, -366, -366, -366, -366, -366,
	411, -366, -366, -366, 321, 322, -366, 409, 192, -366,
	-366, -366, -366, -366, 71, 66, 69, 309, 66, 11,
	66, -313, 133, 332, 333, 334, 335, 331, 309, 336,
	337, 338, 229, 339, -4, -89, 69, -180, -375, 189,
	424, -8, -6, -375, 21, 22, -376, 70, -91, -177,
	19, 30, -131, 75, 78, -159, -162, -85, -237, 50,
	-73, 21, 22, 80, 11, -232, 90, 88, 89, 107,
	-231, 23, 72, -225, -226, 74, -227, -228, 177, -85,
	-125, 110, 91, 108, 109, 93, 119, 118, 129, 122,
	123, 124, 125, 126, 127, 128, 120, 121, 132, 100,
	101, 102, 103, 104, 105, 106, -201, -375, -101, -375,
	177, -375, 177, 178, 179, 177, -128, -128, -128, -128,
	-128, -128, -128, -375, 177, 177, -375, -375, -375, -375,
	-375, -9, -142, -85, 521, -375, -375, -375, -375, -375,
	-375, -375, -375, -375, -375, -375, -375, -375, -375, -375,
	-153, -85, -375, -375, -378, -137, -375, -378, -137, -378,
	-137, -378, -375, -378, -137, -378, -137, -378, -378, -137,
	-378, -375, -375, -375, -375, -375, -375, -375, -375, -375,
	-375, -375, -375, -375, -375, -375, -375, -375, -375, -375,
	-375, -375, -375, -375, -375, -375, -375, -375, -375, -375,
	-200, -200, 11, -105, -106, -116, -237, 69, -190, -195,
	422, 424, 344, -194, -194, -236, -229, 74, 28, 100,
	29, 177, -158, -69, 70, 69, -285, -244, -250, -252,
	-251, -253, -248, -249, 371, 374, 378, 376, 372, 377,
	133, 375, 380, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 390, 29, 215, 367, 368, 369, 370, 391,
	392, 393, 394, 395, 396, 397, 398, 350, 373, 519,
	351, 352, 353, 354, 355, 356, 358, 359, 360, 361,
	362, 363, 364, 365, -244, -244, -244, -244, 72, 229,
	-226, -316, 68, -229, -113, -222, -220, 72, 91, 72,
	-112, -229, -237, -119, -229, -237, 252, -352, -351, -343,
	-346, -207, -221, -343, 257, 255, 256, 69, 193, 69,
	193, 71, -105, 24, 66, -107, -113, 72, 72, -112,
	-119, -345, -343, -346, -238, -237, -223, 524, 185, 21,
	181, 184, 90, 23, 25, 525, 240, 93, 356, 133,
	461, 462, 463, 385, 451, 16, 20, 203, 94, 187,
	371, 374, 201, 132, 197, 204, 274, 276, 444, 477,
	180, 62, 526, 435, 437, 432, 436, 275, 434, 409,
	527, 528, 529, 530, 364, 362, 273, 28, 531, 10,
	478, 26, 213, 247, 22, 532, 126, 360, 182, 238,
	97, 98, 534, 41, 40, 307, 24, 277, 214, 85,
	535, 479, 361, 536, 537, 19, 65, 205, 11, 199,
	228, 634, 538, 287, 13, 458, 115, 14, 539, 540,
	541, 542, 195, 194, 110, 190, 624, 60, 245, 8,
	543, 354, 544, 545, 546, 547, 548, 355, 176, 87,
	549, 550, 107, 551, 56, 465, 466, 488, 45, 32,
	233, 480, 481, 575, 482, 449, 552, 553, 38, 37,
	384, 388, 383, 554, 400, 58, 108, 17, 438, 439,
	30, 555, 556, 517, 221, 387, 353, 382, 576, 557,
	558, 128, 250, 63, 91, 340, 483, 484, 83, 363,
	638, 33, 66, 218, 336, 305, 42, 88, 15, 246,
	61, 34, 456, 112, 639, 486, 366, 196, 225, 560,
	424, 249, 561, 113, 487, 359, 577, 207, 109, 349,
	183, 562, 443, 317, 271, 208, 563, 289, 59, 564,
	239, 114, 485, 188, 410, 565, 6, 566, 453, 29,
	212, 270, 352, 198, 567, 251, 282, 272, 281, 568,
	49, 569, 296, 43, 471, 470, 469, 472, 636, 57,
	446, 447, 623, 189, 39, 96, 386, 351, 381, 193,
	450, 226, 84, 278, 5, 44, 31, 405, 9, 330,
	64, 67, 440, 441, 442, 47, 375, 372, 570, 475,
	379, 474, 476, 637, 95, 12, 571, 457, 521, 425,
	89, 572, 406, 69, -205, 74, -241, -85, -207, -207,
	-113, -113, -113, -113, -113, -205, -205, -205, -205, -202,
	11, 110, 11, -202, -202, -85, -128, -343, 436, 124,
	-237, 72, 347, 72, 72, 33, -44, -44, 74, -44,
	69, 100, -44, 70, -142, -326, 624, 69, -342, 23,
	424, 425, 400, -368, 189, 228, 225, 66, -368, -364,
	327, -345, -344, -343, -366, -367, -229, -366, -366, -366,
	411, -366, -366, -366, -366, -366, -366, -366, -366, -349,
	-368, 287, 69, -368, -345, -343, 331, 331, 331, 331,
	331, 331, -98, 23, -179, -178, -230, -226, -227, -228,
	216, -229, -223, -113, 425, 426, -9, -186, 87, 9,
	110, 69, 18, 69, -175, 25, 26, 177, -129, 51,
	75, 78, -208, 49, -113, -85, -85, -85, -140, 83,
	91, 84, 85, -231, 216, 124, -238, -230, -227, -226,
	301, 220, -223, -128, -141, -147, -101, 79, 110, 108,
	109, 93, -128, -128, -128, -128, -128, -128, -128, -128,
	-128, -128, -128, -128, -128, -128, -128, -240, 72, 74,
	72, -230, -81, -84, 124, -85, -237, -230, -127, 83,
	-127, -229, -229, -73, -230, 412, -230, -73, -73, -73,
	-73, -73, -376, 69, -376, -9, -81, -81, -81, -376,
	-85, -85, -81, -81, -150, 74, -81, -150, 74, -81,
	-128, 449, 450, 451, -81, -81, -73, -151, -152, 95,
	-150, -81, -376, -128, -229, -229, -81, -82, -81, -81,
	-81, -376, -376, -84, -81, -84, -81, -81, -376, -376,
	-376, -376, -81, -81, -81, -81, -81, -81, -81, -81,
	-81, -81, -81, -81, -115, 87, -113, -88, -93, -95,
	-96, -117, -100, -375, -94, -97, -113, -101, 72, 488,
	-113, -105, -377, 11, 67, -377, 69, 177, -193, -196,
	69, 423, 425, 426, -190, -262, -263, 132, 66, 86,
	-85, -230, -238, -176, -75, -296, -281, -283, -284, -285,
	-307, 204, -315, 196, 198, 199, 44, -286, 205, 190,
	45, -245, -271, 404, 405, -255, 68, -254, 68, -254,
	379, 371, 374, 372, -254, -254, -254, -254, -254, 372,
	68, 68, -255, -255, -255, -273, 68, -273, 366, -274,
	68, -274, -274, -274, -274, -245, -245, -245, -245, -316,
	-316, -316, -85, -233, 67, 23, 192, -269, -268, -265,
	-266, -267, -264, 28, 24, -269, -50, 240, 210, 177,
	68, 177, 243, 244, -347, 69, 28, -353, 284, -113,
	220, -113, -113, -343, -343, -349, -323, 208, 203, -113,
	69, 69, -113, 74, 72, 72, -130, -290, 11, 110,
	-205, -237, -237, -113, -130, -205, -79, 216, 67, -378,
	-376, 72, -128, -43, -127, 70, -114, 87, 74, -341,
	-239, 399, 425, -369, 124, -229, -368, -369, -372, 521,
	193, 70, 69, -366, -369, 305, 287, -369, 11, -314,
	19, -100, -375, -376, 69, 177, -57, -56, 185, 182,
	183, 186, 187, -319, 402, 181, 237, 236, 222, -376,
	-185, 34, 35, -229, 52, -131, -131, -162, -199, 19,
	11, 47, 47, -74, 57, 83, 84, 85, 177, -375,
	-141, -128, -128, -128, -79, 90, -376, 69, -376, 177,
	-82, -81, -81, -81, -81, -81, -85, -376, -376, -376,
	-376, 69, 67, 23, -376, 67, -376, 11, 11, -376,
	11, 11, -376, -376, 11, -128, -128, -128, -376, -376,
	-81, -154, -152, 97, -85, -376, -376, -376, 69, 69,
	-376, -376, -376, -376, -163, 456, -163, -376, -376, -376,
	-376, -376, -163, -163, -163, -163, -376, -376, -376, -376,
	-376, -376, -376, -376, -376, -376, -376, -376, -183, 112,
	-113, 29, 69, -108, -110, -109, -111, 56, 60, 62,
	57, 58, 59, 412, 63, -216, -88, -99, 47, -375,
	-118, 112, -120, 23, -239, 64, 194, 65, -375, -375,
	-183, 67, -88, -88, -116, -237, 124, -195, -198, 427,
	424, 430, 72, 74, 177, -177, -300, -297, 69, 112,
	631, 402, 490, 419, 28, 374, 491, 132, 81, 492,
	234, 36, 190, 494, 431, 332, 495, 496, 200, 497,
	498, 499, 293, 500, 343, 501, 502, 503, 504, 320,
	5, -285, 68, 72, -291, -226, 45, -286, -288, -286,
	-286, -291, 72, -291, 45, 83, 91, -261, -263, 133,
	-258, -259, -275, -278, -256, 23, 634, 407, 374, 28,
	66, 402, 196, 45, 44, 199, 81, -272, 406, 75,
	75, 467, -254, -254, -254, 379, -254, -279, 74, -279,
	75, -273, 75, 70, 66, -229, -172, -113, -266, -265,
	-267, 374, 419, 132, 431, -51, 8, 9, 10, -229,
	-328, -329, -330, -229, 110, 245, 246, -229, -356, 317,
	-351, 285, 294, 90, 16, 521, 193, 193, -113, -343,
	-121, 12, 72, 72, -202, -205, -128, -346, 231, 232,
	-183, 189, -342, 193, 177, 177, -369, 193, 308, -345,
	-229, 11, 11, 305, 11, -345, 341, -178, -230, 69,
	-217, -286, -325, -284, -285, -324, 197, 204, -217, 204,
	201, -286, 205, 196, 197, -214, -286, 193, 23, -217,
	-217, -292, 100, -217, 32, 32, 112, 69, 74, 74,
	53, -113, -80, -173, 124, -230, -82, -79, 90, -128,
	-84, 124, -238, -376, -376, -376, -376, -376, -376, -243,
	133, 371, 215, 369, 362, 389, 376, 404, 367, 405,
	-240, -243, -240, -128, -128, -128, -128, -128, 11, 11,
	11, 518, -158, 99, -85, 96, -128, -128, -229, -168,
	-375, -163, -163, -163, -163, -163, -164, -163, -164, -164,
	-164, -164, -164, -164, -164, -164, -164, -164, -164, -126,
	29, 47, -375, -9, -375, -188, -192, -150, -226, -228,
	216, 301, 220, -93, -95, -95, -93, -95, 56, 56,
	56, 61, 56, 61, 61, 56, 56, -109, -239, -376,
	-376, -146, 239, -375, 33, -239, -120, 190, 190, 190,
	-82, -128, -121, -88, -121, -121, 177, 424, 428, 429,
	-297, 16, -292, -292, -292, -292, 419, 374, 132, 29,
	-292, -292, -292, -292, -292, 493, 493, -292, -292, -292,
	-292, -292, -292, -292, -292, -292, -292, -292, 344, -292,
	-292, -292, -292, -298, -373, 74, 75, 81, 323, 293,
	72, -225, -223, -292, -309, -308, -229, -226, 196, -315,
	44, -315, -291, -291, -291, -291, 68, 83, -375, 635,
	75, 29, -127, 123, -123, 432, 438, 439, 433, -375,
	84, 85, 9, 45, 45, 45, 74, 70, 70, 70,
	-254, 70, 69, 70, 69, 70, 69, -124, 582, 91,
	-113, -174, 23, 29, -292, -292, -292, 66, 70, 69,
	-244, -229, -229, -229, -359, 521, 290, -357, -355, 296,
	297, 298, 299, 300, -346, 295, -353, 292, 74, 72,
	-113, -343, -85, -130, -260, -261, -113, -345, 124, 124,
	-229, 193, -345, 305, -371, 521, -345, -345, 11, -345,
	74, -56, 68, -280, 72, -225, -291, -210, 196, 72,
	72, 72, -226, -225, -227, -228, 72, -226, -225, -227,
	-228, -229, 45, 45, 72, -113, -229, -280, 72, -85,
	-229, -229, -229, -186, 69, -83, -376, -128, 177, -164,
	-164, -164, -164, -164, -376, -255, -255, -255, -274, -255,
	355, -255, 355, -376, -376, -376, 19, 19, 19, 19,
	-376, -128, -128, -128, -375, -77, 453, -85, 69, 69,
	-234, 72, -187, 66, -188, -145, -148, -147, -375, -9,
	-376, -179, 6, 521, -184, -229, -121, 69, 100, 100,
	100, 100, -103, -102, 66, 67, -104, 66, -102, 56,
	56, 56, -182, 68, 69, -147, -375, -184, -128, -120,
	-375, -375, -375, -376, 69, -158, -121, -301, -302, 113,
	512, -303, 553, -298, -298, -298, -240, -292, 29, -292,
	-292, 75, -373, 74, 74, 74, -292, -292, 75, 74,
	-373, 74, 206, 209, 211, -298, -298, -298, 75, 74,
	-299, 28, 508, 365, 509, 510, 511, 74, 28, 75,
	28, 75, -298, 505, -298, 70, 69, -255, -255, 45,
	-288, -181, -229, -128, 23, 72, 133, -127, -378, -375,
	-378, -375, -378, -375, -375, -128, -134, 432, 442, 441,
	440, 438, 439, 435, 437, 436, 454, 455, 74, 75,
	75, 582, 68, -9, -172, -292, 72, 133, 72, 133,
	74, -113, -331, -332, -333, 81, 520, 91, 247, 248,
	206, 249, 250, 251, -330, -244, -244, -244, -362, -363,
	-361, 293, 315, 316, 301, -360, -358, 310, 311, 312,
	313, 90, 74, 74, 74, -354, 284, 90, 293, 16,
	23, -205, -334, -203, -371, -345, -371, 287, -345, -280,
	-160, 209, 210, -244, -244, -233, -288, 45, 72, -215,
	193, 23, 193, -160, -280, 29, 182, 87, -90, 11,
	-173, -173, 124, -260, 72, -128, -128, -128, -128, -376,
	-376, -376, -128, -376, 74, -128, -128, -144, 112, 27,
	-187, 69, -376, -376, 47, -376, -376, 69, -158, -192,
	-85, -85, -85, -85, -85, 68, -85, -181, 239, -376,
	-120, -216, -181, -181, -181, 74, -176, -304, 514, -375,
	414, -375, 414, 513, 45, -240, -292, -373, -240, 74,
	74, 506, 507, -311, -310, 67, 200, 81, -308, -175,
	-175, -291, -291, 70, 69, -376, -375, -81, -81, -81,
	-376, -81, -376, 70, 70, -309, -172, -174, 72, 133,
	19, -173, -333, 74, 251, 247, 251, 251, 251, 251,
	252, -350, 81, 291, -361, 302, 587, 286, 317, 75,
	75, 111, 30, 31, -358, 75, 75, 75, 75, -355,
	16, 521, -353, 292, 74, 74, -335, 38, -337, 39,
	-370, 23, -371, -370, 305, 70, 72, -245, -245, 68,
	-291, -291, 72, -229, -160, 28, 28, -375, -121, -88,
	-83, -376, -376, -376, -376, -76, 110, 521, -376, -376,
	-158, 16, 45, -148, -145, 47, -9, -375, -229, -176,
	-181, 70, -147, -118, -239, -376, -376, -376, 414, -305,
	515, 75, -373, -375, -373, -375, -375, -375, 254, -240,
	-310, -373, -292, 74, 207, -229, -270, 637, 636, -128,
	-376, -376, -376, -376, 70, -9, 238, -174, 36, 36,
	243, 244, 74, 74, 28, 303, 176, 28, 75, 176,
	459, 292, 74, 72, 293, -257, 194, -338, 43, -336,
	-277, 42, 16, -343, -370, -309, -233, 68, -128, -317,
	-318, 112, -155, 13, -173, -376, 519, 63, 522, -169,
	114, 113, -142, 9, -145, -9, 70, -120, -375, -375,
	16, -376, -181, -376, -181, -127, 72, -181, 100, 75,
	-113, -376, -312, -311, -172, 239, -22, -3, -11, -12,
	-13, -14, -16, -52, -17, -18, -23, -24, -19, -58,
	-59, -67, -65, -66, -62, -61, -27, -25, -28, -20,
	-29, -30, -31, -35, -36, -26, -37, 94, 195, 273,
	342, 75, 28, 75, 28, 306, 293, 23, -182, 75,
	-337, 16, -339, 40, 41, 74, 521, 70, 68, -309,
	-376, 69, -229, -156, 14, 16, 53, 520, 523, -376,
	-170, 93, -171, 111, 459, -132, 75, 176, -170, -188,
	-376, -295, -282, -230, -317, -302, -376, -376, -376, -376,
	-376, 75, 68, -270, -161, 241, 242, -172, -85, -85,
	72, -48, -235, 276, 277, 278, -230, -38, -22, 304,
	304, 74, 38, 114, 74, 16, 16, 285, -312, -309,
	70, -318, 47, -166, 457, -157, -85, -143, -87, -85,
	53, -171, 116, 117, 239, 116, 117, -127, -376, 69,
	-244, -376, -306, 516, -375, -181, -172, 72, 72, -39,
	-40, 95, 96, 274, 275, 279, -244, 69, 640, 74,
	74, 28, 290, 21, -346, 70, -312, 223, -165, -167,
	-229, 69, 521, 90, -229, -376, -282, -246, 489, 24,
	75, -181, 70, -174, 99, 97, -40, -85, -38, 19,
	19, 19, -260, -230, 99, -22, 307, -312, 224, 69,
	23, -87, 522, -171, 23, -239, 74, 489, -376, -321,
	-322, 66, -15, -21, -14, -11, -12, -13, 342, 521,
	94, -38, 96, 640, -49, 75, -9, -47, -46, 75,
	-49, 281, 91, 282, 72, -262, -346, -375, -167, -168,
	523, -239, -247, 74, -322, 66, -321, 66, 10, 9,
	-172, -38, -91, 640, -38, 99, 97, -41, -42, 98,
	-22, 69, 280, 28, -128, 221, -381, 83, 28, 333,
	-320, 208, 203, 206, 29, -320, 640, 99, 640, 195,
	-38, 99, 97, -42, -85, -46, -128, -376, -376, 66,
	-128, 66, 202, 28, 83, 99, 94, 640, 195, -38,
	96, 534, 66, 534, 99, 640, -38, 534, 195, 99,
	640, 195,
}

var yyDef = [...]int{
	-2, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, 1279, 858, 858, 0, 858,
	960, -2, 709, 0, 0, 0, 0, -2, 828, 829,
	831, 835, 837, 853, 855, 0, 347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 565, -2, 0, 1355,
	0, 856, 845, 846, 41, 0, 0, 2219, 2, 1287,
	0, 867, 860, 0, 858, 858, 858, 67, 68, 0,
	99, 0, 0, 0, 961, 0, 0, 0, 1353, 1353,
	251, 1353, 1353, 0, 1369, 249, 0, 1350, 1365, 1366,
	1367, 0, 0, 0, 1351, 0, 1351, 1351, 1351, 1351,
	1351, 1351, 1351, 0, 774, 994, 996, 997, 998, 1378,
	1379, 2214, 2215, 2216, 2217, 2218, 2189, 2190, 2191, 2192,
	2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202,
	2203, 2204, 2205, 2206, 2207, 1957, 1958, 1959, 1960, 1961,
	1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971,
	1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981,
	1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991,
	1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001,
	2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011,
	2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021,
	2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031,
	2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041,
	2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051,
	2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061,
	2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071,
	2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081,
	2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091,
	2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101,
	2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111,
	2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121,
	2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131,
	2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141,
	2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151,
	2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161,
	2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171,
	2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181,
	2182, 2183, 2184, 2185, 2186, 2187, 2188, 0, 0, 0,
	819, 0, 785, 786, 787, 0, 789, 0, 0, 0,
	0, 0, 799, 802, 806, 0, 1287, 1287, 586, 587,
	588, 824, 825, 813, 826, 830, 836, 838, 0, 56,
	0, 0, 941, 326, 328, 0, 348, 0, 351, 354,
	1384, 839, 0, 0, 1409, 1410, 0, 0, 0, 0,
	0, 2113, 194, 265, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 0, 196, 196, 196, 2122, 196, 0,
	196, 196, 196, 196, 196, 264, 254, 255, 256, 0,
	0, 0, 2113, 0, 566, 563, 564, 57, 0, 46,
	58, 1303, 962, 963, 964, 0, 1356, 832, 0, 862,
	0, 39, 0, 1293, 0, 0, 870, 868, 869, 859,
	0, 881, 911, 0, 1008, 1842, 1014, -2, -2, -2,
	1755, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1700,
	0, 0, 0, 0, 0, 1797, 1087, 1088, 1089, 1090,
	1091, 1092, 1260, 1261, 1262, 1263, 1264, 1265, 1266, -2,
	-2, -2, 1246, 1247, 0, 2214, 2215, 2216, 2217, 2218,
	1320, 0, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189,
	1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199,
	1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209,
	1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219,
	1220, 1221, 1222, 1223, 1823, 1886, 1774, 1891, 1719, 0,
	1711, 1788, 1915, 1916, 0, 1831, 2195, 0, -2, 1940,
	1879, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	2205, 2206, 1781, 1729, 1839, 1880, 1720, 1741, 1760, 1809,
	1810, 1812, 1844, 1845, 1863, 1872, 1890, 1701, 1702, 1703,
	1804, 1805, 1912, 1911, 1910, 1913, 1946, 1944, 1947, 1689,
	1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699,
	1704, 1705, 1706, 1707, 1708, 1710, 1712, 1713, 1714, 1715,
	1716, 1717, 1718, 1721, 1722, 1723, 1728, 1730, 1731, 1732,
	1733, 1734, 1735, 1736, 1737, 1739, 1740, 1742, 1743, 1744,
	1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754,
	1756, 1757, 1759, 1761, 1762, 1763, 1764, 1765, 1766, 1767,
	1768, 1769, 1770, 1771, 1772, 1773, 1775, 1776, 1777, 1778,
	1779, 1780, 1782, 1783, 1784, 1785, 1786, 1787, 1789, 1790,
	1791, 1792, 1793, 1794, 1795, 1796, 1798, 1799, 1800, 1801,
	1802, 1803, 1806, 1807, 1808, 1811, 1813, 1814, 1815, 1816,
	1817, 1818, 1819, 1820, 1821, 1822, 1824, 1825, 1828, 1829,
	1830, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1840, 1841,
	1843, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855,
	1856, 1857, 1858, 1859, 1860, 1861, 1862, 1864, 1865, 1866,
	1867, 1868, 1869, 1870, 1871, 1873, 1874, 1875, 1876, 1877,
	1878, 1881, 1882, 1883, 1884, 1885, 1887, 1888, 1889, 1892,
	1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902,
	1903, 1904, 1905, 1906, 1907, 1908, 1909, 1914, 1917, 1918,
	1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1928, 1929,
	1930, 1931, 1932, 1933, 1934, 1935, 1936, 1941, 1942, 1943,
	1945, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956,
	1355, 1355, 0, 84, 2172, 0, 1327, -2, -2, 1329,
	0, 0, 0, -2, -2, -2, -2, 1712, -2, 1246,
	0, 0, 0, 0, 1700, 1701, 1702, 1703, 1709, 1711,
	1719, 1720, 1724, 1725, 1726, 1727, 1729, 1738, 1741, 1755,
	1758, 1760, 1774, 1781, 1788, 1797, 1804, 1805, 1809, 1810,
	1812, 1823, 1826, 1827, 1831, 1839, 1842, 1844, 1845, 1846,
	1863, 1872, 1879, 1880, 1886, 1890, 1891, 1910, 1911, 1912,
	1913, 1915, 1916, 1927, 1937, 1938, 1939, 1940, 1944, 1946,
	1947, 100, 1279, 858, 101, 0, 392, 393, 0, 0,
	0, 0, 0, 0, 611, 1372, 1373, 2208, 2209, 2210,
	2211, 2212, 2213, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 1353, 251, 0, 0,
	755, 0, 756, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 773, 0, 775, 78, 776,
	819, 778, 0, 0, 1353, 1353, 0, 0, 0, 0,
	0, 613, 614, 819, 819, 819, 819, 816, 0, 816,
	796, 816, 814, 815, 0, 801, 0, 0, 0, 809,
	810, 0, 0, 840, 0, 847, 849, 850, 851, 852,
	848, 0, 857, 0, 0, 0, 330, 0, 0, 350,
	332, 0, 335, 336, 337, 338, 339, 340, 341, 342,
	343, 344, 345, 346, 0, 353, 0, 1382, 1385, 844,
	1400, 1401, 0, 1411, 1412, 200, 0, 200, 0, 0,
	0, 0, 163, 196, 0, 165, 196, 196, 196, 0,
	196, 196, 172, 173, 196, 175, 176, 177, 178, 179,
	196, 181, 182, 183, 196, 196, 186, 196, 196, 189,
	190, 191, 192, 193, 263, 200, 0, 0, 200, 0,
	0, 548, 0, 0, 0, 0, 553, 554, 555, 556,
	0, 0, 559, 560, -2, 45, 0, 0, 0, 0,
	0, 42, 63, 0, 863, 864, 62, 2220, 0, 50,
	0, 0, 1288, 1291, 1292, 1280, 1281, 1284, 0, 0,
	865, 871, 872, 861, 0, 882, 0, 0, 0, 0,
	912, 0, 915, 916, 917, 918, 919, 920, 0, 1012,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1036,
	1037, 1038, 1039, 1040, 1041, 1042, 1015, 0, 1029, 0,
	0, 0, 0, 0, 0, 0, 1080, 1081, 1082, 1083,
	1084, 1085, 0, 870, 0, 0, 870, 870, 870, 870,
	870, 0, 0, 1055, 1952, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 870,
	0, 1238, 0, 0, 1149, 1158, 0, 1150, 1159, 1151,
	1160, 1152, 0, 1153, 1161, 1154, 1162, 1155, 1156, 1163,
	1157, 0, 0, 0, 1051, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 80, 994, 0, 85, 87,
	0, 0, 2172, 1330, 1331, 521, 1344, 1345, 1346, 0,
	1342, 0, 1287, 867, 628, 0, 394, 410, 498, 425,
	426, 427, 488, 429, 490, 490, 0, 490, 490, 490,
	490, 490, 465, 466, 467, 468, 469, 471, 472, 473,
	474, 475, 0, 0, 448, 488, 488, 488, 452, 478,
	479, 480, 481, 482, 483, 484, 485, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 493, 493, 495,
	495, 495, 495, 495, 410, 410, 410, 410, 0, 0,
	0, 610, 0, 1370, 0, 0, 251, -2, 0, -2,
	0, 989, 0, 0, 999, 0, 0, 111, 281, 267,
	110, 0, 245, 250, 246, 247, 248, 0, 0, 0,
	0, 258, 770, 1352, 0, 763, 76, 764, 765, 766,
	767, 768, 260, 769, 995, 1380, 1381, 1413, 1414, 1415,
	1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425,
	1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435,
	1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445,
	1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455,
	1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465,
	1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475,
	1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485,
	1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495,
	1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505,
	1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515,
	1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525,
	1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535,
	1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545,
	1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555,
	1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565,
	1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575,
	1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585,
	1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595,
	1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605,
	1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615,
	1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625,
	1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635,
	1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645,
	1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655,
	1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665,
	1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675,
	1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685,
	1686, 1687, 1688, 0, 777, 820, 0, 822, 0, 0,
	941, 782, 783, 784, 615, 790, 791, 792, 798, 819,
	0, 0, 0, 941, 819, 800, 1043, 803, 1166, 0,
	827, 841, 0, 842, 854, 0, 327, 329, 331, 349,
	0, 0, 352, 355, 0, 0, 0, 0, 1403, 0,
	1405, 1407, 0, 0, 201, 202, 203, 200, 0, 195,
	0, 218, 266, 0, 164, 0, 198, 166, 167, 168,
	196, 170, 171, 174, 180, 184, 185, 187, 188, 262,
	0, 0, 0, 0, 161, 0, 549, 550, 551, 552,
	561, 558, 59, 0, 0, 1305, 1308, 1309, 1310, 1311,
	1312, 1376, 1377, 0, 833, 834, 0, 37, 0, 1294,
	0, 0, 0, 0, 1283, 1285, 1286, 0, 0, 1268,
	0, 0, 873, 866, 40, 1009, 1010, 1011, 1013, 1030,
	0, 1032, 1034, 913, 914, 883, 0, 1248, 1249, 1250,
	1251, 1252, -2, 1020, 1021, 1045, 1046, 1047, 0, 0,
	0, 0, 1043, 1025, 0, 1065, 1066, 1067, 1068, 1069,
	1070, 1071, 1072, 1073, 1074, 1075, 1076, 1079, 1180, 1181,
	0, 1257, 0, 1053, 877, 878, 0, 1258, 1077, 1267,
	1078, 1253, 1086, 1051, 1255, 1256, 1254, 0, 0, 0,
	0, 0, 1048, 0, 1319, 0, 0, 0, 0, 1127,
	0, 0, 0, 0, 1061, 1260, 0, 1061, 1260, 0,
	0, 1813, 1925, 1705, 0, 0, 0, 1244, 1241, 0,
	0, 0, 1167, 0, 0, 0, 0, 0, 1052, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 82, 0, 993, 0, 921, 923,
	924, 925, -2, 0, 929, 930, 1002, 1049, 1378, 0,
	-2, 0, 0, 74, 75, 0, 0, 0, 1328, 0,
	0, 0, 90, 91, 86, 1332, 522, 0, -2, 1339,
	1340, 1248, 0, 1293, 870, 685, 395, 397, 398, 399,
	0, 593, 601, 0, 0, 591, 593, 593, 0, 589,
	590, 402, 501, 499, 500, 428, 0, 453, 0, 454,
	490, 490, 490, 490, 457, 458, 460, 463, 464, 470,
	0, 0, 449, 450, 451, 440, 0, 441, 493, 443,
	0, 444, 445, 446, 447, 403, 404, 405, 406, 607,
	608, 609, 0, 0, 0, 96, 0, 105, -2, 529,
	530, 531, 0, 526, 1354, 106, 0, 283, 284, 0,
	221, 0, 252, 253, 113, 0, 0, 268, 0, 389,
	390, 0, 757, 0, 759, 257, 761, 771, 772, 762,
	0, 0, 79, 821, 779, 780, 781, 1006, 0, 0,
	793, 817, 818, 816, 819, 797, 811, 0, 0, 804,
	0, 843, 942, 333, 334, 356, 82, 0, 1383, 1402,
	0, 1406, 1408, 0, 204, 206, 0, 0, 155, 0,
	0, 197, 0, 169, 0, 0, 0, 0, 0, 557,
	0, 60, 0, 1304, 0, 0, 710, 711, -2, 748,
	1362, 748, 748, 734, 576, 748, 0, 0, 0, 64,
	51, 0, 2009, 54, 0, 1289, 1290, 1282, 0, 1347,
	1348, 1269, 1270, 97, 874, 1031, 1033, 1035, 0, 1051,
	1022, 1043, 1026, 0, 1023, 0, 1017, 0, 1125, 0,
	0, 0, 0, 0, 0, 0, 1056, -2, 1123, 1124,
	1126, 0, 0, 0, 1130, 0, 1133, 0, 0, 1173,
	0, 0, 1174, 1138, 0, 0, 0, 0, 0, 1144,
	1279, 0, 1242, 0, 0, 1147, 1148, 1168, 0, 0,
	1169, 1170, 1171, 1172, 1112, 0, 1113, 0, 0, 0,
	0, 0, 1119, 1120, 1121, 1122, 892, 892, 892, 892,
	892, 892, 892, 892, 892, 892, 892, 892, 0, 0,
	992, 0, 0, 0, 0, 0, 0, 965, 0, 0,
	968, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	934, 0, 936, 0, 1002, 0, 0, 0, 1051, 0,
	1006, 0, 1006, 1006, 81, 0, 1001, 88, 89, 0,
	0, 95, 523, 524, 0, 220, 391, 629, 0, 0,
	576, 576, 576, 576, 0, 0, 576, 576, 576, 576,
	576, 0, 0, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 0, 576, 576, 576, 576, 0,
	576, 396, 0, 594, 0, 0, 593, 593, 593, 592,
	593, 584, 594, 585, 0, 411, 0, 413, 414, 415,
	416, 417, 418, 419, 420, 0, 0, 0, 0, 0,
	0, 516, 0, 543, 545, 0, 0, 424, 502, 0,
	0, 0, 459, 455, 456, 490, 461, 0, 486, 0,
	0, 442, 0, 625, 0, 1371, 98, 0, 532, 533,
	534, 0, 576, 576, 576, 0, 285, 286, 287, 990,
	0, 222, 223, 0, 0, 0, 0, 1000, 123, 0,
	282, 0, 0, 0, 0, 0, 0, 0, 77, 261,
	788, 0, 616, 617, 941, 795, 1044, 805, 807, 808,
	517, 0, 1404, 0, 0, 0, 0, 0, 0, 216,
	199, 0, 0, 0, 0, 162, 0, 1306, 1307, 0,
	0, 593, 0, 735, 736, 0, 749, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1363, 1364, 0,
	0, 0, 577, 0, 743, 744, 0, 0, 52, 53,
	1295, 38, 50, 0, 884, 1259, 0, 1024, 0, 1027,
	1054, 879, 0, 1093, 892, 892, 892, 892, 892, 0,
	488, 488, 1227, 488, 495, 1230, 488, 1232, 488, 1235,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1239, 1146, 1245, 0, 0, 0, 885, 886,
	888, 1114, 1115, 1116, 1117, 1118, 1097, 893, 1098, 1099,
	1101, 1102, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1313,
	0, 0, 0, 1298, 0, 1006, 1321, 0, 0, 0,
	0, 2208, 2209, 922, 956, 958, 0, 953, 966, 967,
	969, 0, 971, 0, 0, 974, 975, 976, 943, 928,
	1050, 931, 0, 0, 0, 1002, 940, 0, 0, 0,
	0, 0, 1279, 1006, 72, 73, 0, 92, 93, 94,
	630, 697, 0, 0, 0, 0, 576, 0, 576, 576,
	0, 0, 0, 0, 0, 576, 576, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 659, 0,
	0, 0, 0, 666, 667, 671, 672, 673, 674, 675,
	682, 683, 684, 0, 0, 595, 488, 488, 0, 599,
	591, 600, 578, 580, 581, 583, 0, 412, 0, 0,
	423, 0, 503, 0, 505, 1166, 1166, 1166, 0, 0,
	1018, 1019, 0, 542, 544, 546, 547, 489, 491, 492,
	462, 476, 0, 477, 0, 496, 0, 612, 626, 0,
	0, 0, 96, 576, 0, 0, 0, 0, 229, 0,
	225, 0, 0, 0, 131, 0, 114, 115, 116, 118,
	119, 0, 0, 0, 112, 0, 270, 0, 273, 274,
	758, 760, 1007, 819, 1394, 518, 991, 216, 205, 207,
	208, 0, 216, 219, 156, 0, 157, 159, 0, 158,
	562, 712, 0, 745, 0, 0, 1370, 591, 0, -2,
	715, 720, 721, 722, 723, 724, 725, 726, 727, 728,
	729, 730, 0, 741, 0, 717, 0, 745, 0, 738,
	0, 0, 55, 48, 97, 97, 1094, 1028, 0, 1096,
	1100, 1095, 1103, 1108, 1128, 1224, 517, 1228, 1229, 1231,
	1233, 1234, 1236, 1132, 1129, 1131, 0, 0, 0, 0,
	1139, 0, 0, 0, 0, 0, 0, 1243, 0, 0,
	890, 889, 65, 0, 1313, 1296, 1315, 1317, 0, 0,
	0, 0, -2, 1684, 0, 947, 1279, 0, 0, 0,
	0, 0, 950, 957, 0, 0, 951, 0, 952, 970,
	972, 973, 926, 0, 0, 932, 0, 0, -2, 939,
	0, 0, 0, 949, 0, 1287, 71, 699, 688, 0,
	0, 0, 698, 631, 632, 633, 634, 0, 576, 0,
	0, 638, 639, 641, 642, 643, 0, 0, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 676, 677, 678, 679, 680, 681, 660, 661, 662,
	663, 664, 665, 0, 670, 568, 0, 1284, 1284, 593,
	593, 0, 945, 0, 0, 519, 520, 504, 506, 0,
	508, 0, 510, 0, 0, 0, 515, 1166, 1166, 1166,
	1166, 1166, 1166, 1166, 1166, 1166, 0, 0, 487, 0,
	0, 627, 0, 96, 98, 0, 537, 538, 539, 540,
	541, 0, 97, 230, 231, 0, 0, 0, 236, 0,
	0, 0, 0, 0, 224, 226, 227, 228, 149, 132,
	133, 0, 0, 0, 0, 124, 125, 0, 0, 0,
	0, 0, 120, 121, 122, 269, 0, 0, 272, 0,
	0, 794, 1396, 1390, 209, 216, 209, 0, 160, 0,
	714, 746, 0, 410, 410, 0, 593, 593, 737, 0,
	1360, 1361, 0, 732, 745, 0, 0, 0, 1006, 0,
	0, 875, 880, 1225, 1226, 0, 0, 0, 0, 1140,
	1141, 1142, 1175, 1145, 1240, 0, 0, 1279, 0, 0,
	66, 0, 1318, -2, 0, 0, 83, 0, 1287, 1322,
	1323, 1324, 1325, 1326, 954, 0, 959, 0, 0, 1002,
	937, 0, 0, 0, 0, 0, 70, 701, 0, 0,
	0, 0, 0, 0, 0, 635, 0, 640, 636, 644,
	645, 668, 669, 567, 571, 0, 576, 0, 596, 597,
	598, 579, 582, 0, 0, 407, 0, 0, 0, 0,
	512, 0, 514, 494, 497, 0, 103, 0, 535, 536,
	0, 98, 232, 233, 234, 235, 237, 238, 0, 0,
	0, 109, 0, 0, 134, 0, 0, 0, 0, 144,
	145, 146, 147, 148, 126, 127, 128, 129, 130, 117,
	0, 0, 271, 0, 276, 277, 1357, 1398, -2, 0,
	152, 0, 209, 154, 217, 713, 747, 400, 401, 0,
	1370, 0, 716, 731, 733, 0, 740, 0, 1271, 49,
	97, 1134, 1136, 1135, 1137, 0, 0, 0, 1164, 1165,
	894, 0, 0, 1316, 1297, 0, 1301, 0, 948, 69,
	0, 944, 933, 935, 1002, 1003, 1004, 1005, 0, 686,
	0, 700, 0, 0, 0, 0, 0, 0, 0, 637,
	572, 573, 0, 575, 0, 946, 421, 408, 409, 0,
	507, 509, 511, 513, 569, 96, 0, 56, 239, 240,
	241, 242, 150, 151, 135, 136, 0, 138, 139, 0,
	0, 0, 279, 0, 275, 943, 0, 1390, 0, 1392,
	0, 1389, 0, 210, 153, 0, 0, 0, 739, 0,
	751, 0, 1276, 0, 876, 1143, 0, 0, 0, 0,
	0, 0, 891, 0, 1300, 0, 955, 938, 0, 0,
	697, 689, 0, 691, 0, 0, 0, 0, 0, 574,
	0, 407, 102, 570, 104, 288, 96, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 387, 388, 0, 0, 0,
	56, 0, 140, 0, 142, 143, 278, 0, 36, 0,
	1397, 0, 1395, 0, 0, 1391, 0, 569, 0, 0,
	750, 0, 0, 904, 0, 0, 1176, 0, 1179, 887,
	895, 0, 898, 0, 0, 0, 909, 0, 896, 1314,
	-2, 0, 979, 0, 0, 703, 690, 692, 693, 694,
	695, 0, 0, 422, 96, 0, 0, 108, 0, 0,
	1372, 0, 0, -2, -2, -2, 1374, 0, 357, 137,
	141, 280, 1358, 1359, 1399, 0, 0, 0, 718, 0,
	569, 752, 0, 47, 0, 1277, 1278, 1272, 1273, 1275,
	1177, 0, 899, 900, 901, 902, 903, 0, 0, 0,
	0, 687, 702, 0, 0, 0, 98, 289, 290, 0,
	299, 0, 56, 0, 0, 0, 517, 0, 56, 1393,
	1387, 211, 212, 213, 215, 569, 742, 0, 905, 906,
	0, 0, 0, 0, 910, 0, 980, 981, 0, 0,
	704, 0, 602, 56, 0, 56, 300, 0, 0, 0,
	0, 0, 521, 1375, 243, 358, 0, 719, 0, 0,
	0, 1274, 0, 897, 0, 978, 984, 0, 696, 603,
	604, 0, 96, 291, 292, 293, 294, 295, 56, 0,
	297, 0, 56, 56, 309, 310, 311, 56, 318, 320,
	321, 322, 0, 324, 325, 313, 214, 0, 907, 908,
	1178, 977, 985, 983, 605, 0, 606, 0, 0, 0,
	107, 0, 57, 56, 0, 0, 56, 0, 306, 0,
	312, 0, 323, 0, 0, 1832, 982, 0, 0, 0,
	618, 620, 621, 0, 0, 619, 56, 0, -2, 302,
	0, 0, 56, 307, 0, 319, 314, 753, 754, 0,
	0, 0, 622, 623, 624, 296, 298, 56, 304, 0,
	56, 986, 0, 988, 0, 56, 0, 987, 303, 0,
	-2, 305,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 92, 3, 3, 3, 127, 119, 3,
	68, 70, 124, 122, 69, 123, 177, 125, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 640,
	101, 100, 102, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 129, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 118, 3, 130,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 82, 83, 84, 85,
	86, 87, 88, 89, 90, 91, 93, 94, 95, 96,
	97, 98, 99, 103, 104, 105, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 116, 117, 120, 121,
	126, 128, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 274, 275,
}

var yyTok3 = [...]int{
	57600, 276, 57601, 277, 57602, 278, 57603, 279, 57604, 280,
	57605, 281, 57606, 282, 57607, 283, 57608, 284, 57609, 285,
	57610, 286, 57611, 287, 57612, 288, 57613, 289, 57614, 290,
	57615, 291, 57616, 292, 57617, 293, 57618, 294, 57619, 295,
	57620, 296, 57621, 297, 57622, 298, 57623, 299, 57624, 300,
	57625, 301, 57626, 302, 57627, 303, 57628, 304, 57629, 305,
	57630, 306, 57631, 307, 57632, 308, 57633, 309, 57634, 310,
	57635, 311, 57636, 312, 57637, 313, 57638, 314, 57639, 315,
	57640, 316, 57641, 317, 57642, 318, 57643, 319, 57644, 320,
	57645, 321, 57646, 322, 57647, 323, 57648, 324, 57649, 325,
	57650, 326, 57651, 327, 57652, 328, 57653, 329, 57654, 330,
	57655, 331, 57656, 332, 57657, 333, 57658, 334, 57659, 335,
	57660, 336, 57661, 337, 57662, 338, 57663, 339, 57664, 340,
	57665, 341, 57666, 342, 57667, 343, 57668, 344, 57669, 345,
	57670, 346, 57671, 347, 57672, 348, 57673, 349, 57674, 350,
	57675, 351, 57676, 352, 57677, 353, 57678, 354, 57679, 355,
	57680, 356, 57681, 357, 57682, 358, 57683, 359, 57684, 360,
	57685, 361, 57686, 362, 57687, 363, 57688, 364, 57689, 365,
	57690, 366, 57691, 367, 57692, 368, 57693, 369, 57694, 370,
	57695, 371, 57696, 372, 57697, 373, 57698, 374, 57699, 375,
	57700, 376, 57701, 377, 57702, 378, 57703, 379, 57704, 380,
	57705, 381, 57706, 382, 57707, 383, 57708, 384, 57709, 385,
	57710, 386, 57711, 387, 57712, 388, 57713, 389, 57714, 390,
	57715, 391, 57716, 392, 57717, 393, 57718, 394, 57719, 395,
	57720, 396, 57721, 397, 57722, 398, 57723, 399, 57724, 400,
	57725, 401, 57726, 402, 57727, 403, 57728, 404, 57729, 405,
	57730, 406, 57731, 407, 57732, 408, 57733, 409, 57734, 410,
	57735, 411, 57736, 412, 57737, 413, 57738, 414, 57739, 415,
	57740, 416, 57741, 417, 57742, 418, 57743, 419, 57744, 420,
	57745, 421, 57746, 422, 57747, 423, 57748, 424, 57749, 425,
	57750, 426, 57751, 427, 57752, 428, 57753, 429, 57754, 430,
	57755, 431, 57756, 432, 57757, 433, 57758, 434, 57759, 435,
	57760, 436, 57761, 437, 57762, 438, 57763, 439, 57764, 440,
	57765, 441, 57766, 442, 57767, 443, 57768, 444, 57769, 445,
	57770, 446, 57771, 447, 57772, 448, 57773, 449, 57774, 450,
	57775, 451, 57776, 452, 57777, 453, 57778, 454, 57779, 455,
	57780, 456, 57781, 457, 57782, 458, 57783, 459, 57784, 460,
	57785, 461, 57786, 462, 57787, 463, 57788, 464, 57789, 465,
	57790, 466, 57791, 467, 57792, 468, 57793, 469, 57794, 470,
	57795, 471, 57796, 472, 57797, 473, 57798, 474, 57799, 475,
	57800, 476, 57801, 477, 57802, 478, 57803, 479, 57804, 480,
	57805, 481, 57806, 482, 57807, 483, 57808, 484, 57809, 485,
	57810, 486, 57811, 487, 57812, 488, 57813, 489, 57814, 490,
	57815, 491, 57816, 492, 57817, 493, 57818, 494, 57819, 495,
	57820, 496, 57821, 497, 57822, 498, 57823, 499, 57824, 500,
	57825, 501, 57826, 502, 57827, 503, 57828, 504, 57829, 505,
	57830, 506, 57831, 507, 57832, 508, 57833, 509, 57834, 510,
	57835, 511, 57836, 512, 57837, 513, 57838, 514, 57839, 515,
	57840, 516, 57841, 517, 57842, 518, 57843, 519, 57844, 520,
	57845, 521, 57846, 522, 57847, 523, 57848, 524, 57849, 525,
	57850, 526, 57851, 527, 57852, 528, 57853, 529, 57854, 530,
	57855, 531, 57856, 532, 57857, 533, 57858, 534, 57859, 535,
	57860, 536, 57861, 537, 57862, 538, 57863, 539, 57864, 540,
	57865, 541, 57866, 542, 57867, 543, 57868, 544, 57869, 545,
	57870, 546, 57871, 547, 57872, 548, 57873, 549, 57874, 550,
	57875, 551, 57876, 552, 57877, 553, 57878, 554, 57879, 555,
	57880, 556, 57881, 557, 57882, 558, 57883, 559, 57884, 560,
	57885, 561, 57886, 562, 57887, 563, 57888, 564, 57889, 565,
	57890, 566, 57891, 567, 57892, 568, 57893, 569, 57894, 570,
	57895, 571, 57896, 572, 57897, 573, 57898, 574, 57899, 575,
	57900, 576, 57901, 577, 57902, 578, 57903, 579, 57904, 580,
	57905, 581, 57906, 582, 57907, 583, 57908, 584, 57909, 585,
	57910, 586, 57911, 587, 57912, 588, 57913, 589, 57914, 590,
	57915, 591, 57916, 592, 57917, 593, 57918, 594, 57919, 595,
	57920, 596, 57921, 597, 57922, 598, 57923, 599, 57924, 600,
	57925, 601, 57926, 602, 57927, 603, 57928, 604, 57929, 605,
	57930, 606, 57931, 607, 57932, 608, 57933, 609, 57934, 610,
	57935, 611, 57936, 612, 57937, 613, 57938, 614, 57939, 615,
	57940, 616, 57941, 617, 57942, 618, 57943, 619, 57944, 620,
	57945, 621, 57946, 622, 57947, 623, 57948, 624, 57949, 625,
	57950, 626, 57951, 627, 57952, 628, 57953, 629, 57954, 630,
	57955, 631, 57956, 632, 57957, 633, 57958, 634, 57959, 635,
	57960, 636, 57961, 637, 57962, 638, 57963, 639, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:550
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:554
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:561
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:596
		{
			setParseTree(yylex, nil)
		}
	case 36:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:602
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 37:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:608
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			if err := yyDollar[1].selStmt.SetInto(yyDollar[5].into); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 38:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:619
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:625
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 40:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:635
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:642
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 42:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:646
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:652
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:656
		{
			yyDollar[3].selStmt.SetWith(yyDollar[2].with)
			yyVAL.selStmt = yyDollar[3].selStmt
		}
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:663
		{
			yyVAL.with = &With{Ctes: yyDollar[2].tableExprs, Recursive: true}
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:666
		{
			yyVAL.with = &With{Ctes: yyDollar[1].tableExprs, Recursive: false}
		}
	case 47:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:672
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr), Window: yyDollar[13].window, Into: yyDollar[8].into}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 48:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:680
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 49:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:684
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 50:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:693
		{
			yyVAL.into = nil
		}
	case 51:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:697
		{
			yyVAL.into = &Into{Variables: yyDollar[2].variables}
		}
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:701
		{
			yyVAL.into = &Into{Outfile: string(yyDollar[3].bytes)}
		}
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:705
		{
			yyVAL.into = &Into{Dumpfile: string(yyDollar[3].bytes)}
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:711
		{
			yyVAL.variables = Variables{yyDollar[1].colIdent}
		}
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:715
		{
			yyVAL.variables = append(yyVAL.variables, yyDollar[3].colIdent)
		}
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:720
		{
			yyVAL.with = nil
		}
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:724
		{
			yyVAL.with = yyDollar[2].with
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:730
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:734
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:740
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[4].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[2].columns}
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:746
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:754
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:760
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:768
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 65:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:774
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[7].ins
			ins.Action = yyDollar[2].str
			ins.Comments = yyDollar[3].bytes2
			ins.Ignore = yyDollar[4].str
			ins.Table = yyDollar[5].tableName
			ins.Partitions = yyDollar[6].partitions
			ins.OnDup = OnDup(yyDollar[8].assignExprs)
			ins.With = yyDollar[1].with
			yyVAL.statement = ins
		}
	case 66:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:787
		{
			cols := make(Columns, 0, len(yyDollar[8].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[9].assignExprs))
			for _, updateList := range yyDollar[8].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[2].str, Comments: Comments(yyDollar[3].bytes2), Ignore: yyDollar[4].str, Table: yyDollar[5].tableName, Partitions: yyDollar[6].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[9].assignExprs), With: yyDollar[1].with}
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:799
		{
			yyVAL.str = InsertStr
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:803
		{
			yyVAL.str = ReplaceStr
		}
	case 69:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:809
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[3].bytes2), Ignore: yyDollar[4].str, TableExprs: yyDollar[5].tableExprs, Exprs: yyDollar[7].assignExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), OrderBy: yyDollar[9].orderBy, Limit: yyDollar[10].limit, With: yyDollar[1].with}
		}
	case 70:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:815
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitions, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit, With: yyDollar[1].with}
		}
	case 71:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:819
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[5].tableNames, TableExprs: yyDollar[7].tableExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), With: yyDollar[1].with}
		}
	case 72:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:823
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), With: yyDollar[1].with}
		}
	case 73:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:827
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), With: yyDollar[1].with}
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:832
		{
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:833
		{
		}
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:837
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:841
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:847
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:851
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:857
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 81:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:861
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 82:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:866
		{
			yyVAL.partitions = nil
		}
	case 83:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:870
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:876
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 85:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:880
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 86:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:887
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:896
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:900
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:906
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:910
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 91:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:914
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:920
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:924
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:928
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:932
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:937
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 97:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:942
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:947
		{
			yyVAL.boolean = yySpecialCommentMode(yylex)
		}
	case 99:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:953
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:962
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:967
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 102:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:972
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 103:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:976
		{
			yyDollar[2].viewSpec.ViewName = yyDollar[4].tableName.ToViewName()
			yyDollar[2].viewSpec.ViewExpr = yyDollar[8].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[2].viewSpec, SpecialCommentMode: yyDollar[7].boolean, SubStatementPositionStart: yyDollar[6].int, SubStatementPositionEnd: yyDollar[9].int - 1}
		}
	case 104:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:982
		{
			yyDollar[4].viewSpec.ViewName = yyDollar[6].tableName.ToViewName()
			yyDollar[4].viewSpec.ViewExpr = yyDollar[10].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[4].viewSpec, SpecialCommentMode: yyDollar[9].boolean, SubStatementPositionStart: yyDollar[8].int, SubStatementPositionEnd: yyDollar[11].int - 1, OrReplace: true}
		}
	case 105:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:988
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 106:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:996
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 107:
		yyDollar = yyS[yypt-16 : yypt+1]
//line sql.y:1004
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName, Definer: yyDollar[2].str, Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[15].statement}, SpecialCommentMode: yyDollar[14].boolean, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[16].int - 1}
		}
	case 108:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1008
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName, Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[11].statement}, SpecialCommentMode: yyDollar[10].boolean, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[12].int - 1}
		}
	case 109:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1012
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].tlsOptionItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].accountLimitItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].passLockItems)
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames, TLSOptions: tlsOptions, AccountLimits: accountLimits, PasswordOptions: passwordOptions, Locked: locked, Attribute: yyDollar[9].str}
		}
	case 110:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1031
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 111:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1040
		{
			yyVAL.accountNames = nil
		}
	case 112:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1044
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 113:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1049
		{
			yyVAL.tlsOptionItems = nil
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1053
		{
			yyVAL.tlsOptionItems = nil
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1057
		{
			yyVAL.tlsOptionItems = yyDollar[2].tlsOptionItems
		}
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1063
		{
			yyVAL.tlsOptionItems = []TLSOptionItem{yyDollar[1].tlsOptionItem}
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1067
		{
			yyVAL.tlsOptionItems = append(yyDollar[1].tlsOptionItems, yyDollar[3].tlsOptionItem)
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1073
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1077
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1081
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1085
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1089
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 123:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1094
		{
			yyVAL.accountLimitItems = nil
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1098
		{
			yyVAL.accountLimitItems = yyDollar[2].accountLimitItems
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1104
		{
			yyVAL.accountLimitItems = []AccountLimitItem{yyDollar[1].accountLimitItem}
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1108
		{
			yyVAL.accountLimitItems = append(yyDollar[1].accountLimitItems, yyDollar[2].accountLimitItem)
		}
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1114
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1118
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1122
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1126
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 131:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1131
		{
			yyVAL.passLockItems = nil
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1135
		{
			yyVAL.passLockItems = yyDollar[1].passLockItems
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1141
		{
			yyVAL.passLockItems = []PassLockItem{yyDollar[1].passLockItem}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1145
		{
			yyVAL.passLockItems = append(yyDollar[1].passLockItems, yyDollar[2].passLockItem)
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1151
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1155
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 137:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1159
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1163
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1167
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 140:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1171
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 141:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1175
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 142:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1179
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 143:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1183
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1187
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1191
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1195
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1199
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1203
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 149:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1208
		{
			yyVAL.str = ""
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1212
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.str = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1217
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 152:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1223
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 153:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1228
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[5].grantObjectType, PrivilegeLevel: yyDollar[6].privilegeLevel, To: yyDollar[8].accountNames, WithGrantOption: yyDollar[9].boolean, As: yyDollar[10].grantAssumption}
		}
	case 154:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1233
		{
			yyVAL.statement = &GrantPrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 155:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1237
		{
			yyVAL.statement = &GrantRole{Roles: yyDollar[2].accountNames, To: yyDollar[4].accountNames, WithAdminOption: yyDollar[5].boolean}
		}
	case 156:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1241
		{
			yyVAL.statement = &GrantProxy{On: yyDollar[4].accountName, To: yyDollar[6].accountNames, WithGrantOption: yyDollar[7].boolean}
		}
	case 157:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1247
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &RevokePrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 158:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1252
		{
			yyVAL.statement = &RevokePrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 159:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1256
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[7].accountNames}
		}
	case 160:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1260
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[8].accountNames}
		}
	case 161:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1264
		{
			yyVAL.statement = &RevokeRole{Roles: yyDollar[2].accountNames, From: yyDollar[4].accountNames}
		}
	case 162:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1268
		{
			yyVAL.statement = &RevokeProxy{On: yyDollar[4].accountName, From: yyDollar[6].accountNames}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1274
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].strs}
		}
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1278
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].strs}
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1282
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].strs}
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1286
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].strs}
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1290
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].strs}
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1294
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].strs}
		}
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1298
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].strs}
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1302
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].strs}
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1306
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].strs}
		}
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1310
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].strs}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1314
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].strs}
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1318
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].strs}
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1322
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].strs}
		}
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1326
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].strs}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1330
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].strs}
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1334
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].strs}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1338
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].strs}
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1342
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].strs}
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1346
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].strs}
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1350
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].strs}
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1354
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].strs}
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1358
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].strs}
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1362
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].strs}
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1366
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].strs}
		}
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1370
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].strs}
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1374
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].strs}
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1378
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].strs}
		}
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1382
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].strs}
		}
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1386
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].strs}
		}
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1390
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].strs}
		}
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1394
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].strs}
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1400
		{
			yyVAL.grantPrivileges = []Privilege{yyDollar[1].grantPrivilege}
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1404
		{
			yyVAL.grantPrivileges = append(yyDollar[1].grantPrivileges, yyDollar[3].grantPrivilege)
		}
	case 196:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1409
		{
			yyVAL.strs = nil
		}
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1413
		{
			yyVAL.strs = yyDollar[2].strs
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1419
		{
			yyVAL.strs = []string{yyDollar[1].colIdent.String()}
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1423
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].colIdent.String())
		}
	case 200:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1428
		{
			yyVAL.grantObjectType = GrantObjectType_Any
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1432
		{
			yyVAL.grantObjectType = GrantObjectType_Table
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1436
		{
			yyVAL.grantObjectType = GrantObjectType_Function
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1440
		{
			yyVAL.grantObjectType = GrantObjectType_Procedure
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1446
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1450
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1454
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].colIdent.String()}
		}
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1458
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: "*"}
		}
	case 208:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1462
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: yyDollar[3].colIdent.String()}
		}
	case 209:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1467
		{
			yyVAL.grantAssumption = nil
		}
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1471
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 211:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1475
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 212:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1479
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].accountName, Roles: nil}
		}
	case 213:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1483
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].accountName, Roles: nil}
		}
	case 214:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1487
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].accountName, Roles: yyDollar[7].accountNames}
		}
	case 215:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1491
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].accountName, Roles: yyDollar[5].accountNames}
		}
	case 216:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1496
		{
			yyVAL.boolean = false
		}
	case 217:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1500
		{
			yyVAL.boolean = true
		}
	case 218:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1505
		{
			yyVAL.boolean = false
		}
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1509
		{
			yyVAL.boolean = true
		}
	case 220:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1516
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 221:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1528
		{
			yyVAL.procedureParams = nil
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1532
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1538
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1542
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1548
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[1].colIdent.String(), Type: yyDollar[2].columnType}
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1552
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1556
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1560
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 229:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1565
		{
			yyVAL.characteristics = nil
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1569
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1575
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1579
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1585
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1589
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1593
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1597
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1601
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1605
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1609
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1613
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1617
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1621
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1627
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1633
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: "", Definer: yyDollar[1].str, Security: yyDollar[2].str}
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1637
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: yyDollar[1].str, Definer: yyDollar[2].str, Security: yyDollar[3].str}
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1643
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1647
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1651
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 249:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1656
		{
			yyVAL.str = ""
		}
	case 250:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1660
		{
			yyVAL.str = yyDollar[3].accountName.String()
		}
	case 251:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1665
		{
			yyVAL.str = ""
		}
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1669
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1673
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1679
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1683
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1687
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1693
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1701
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1705
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1711
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1715
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1721
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1729
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1737
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1747
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1751
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1757
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1761
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 269:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1765
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1769
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 271:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1773
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 272:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1779
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1783
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1787
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 275:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1791
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 276:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1795
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 277:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1799
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1805
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1809
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 280:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1813
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1819
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1823
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1829
		{
			yyVAL.str = BeforeStr
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1833
		{
			yyVAL.str = AfterStr
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1839
		{
			yyVAL.str = InsertStr
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1843
		{
			yyVAL.str = UpdateStr
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1847
		{
			yyVAL.str = DeleteStr
		}
	case 288:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1852
		{
			yyVAL.triggerOrder = nil
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1856
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1860
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1866
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 296:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1876
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 297:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1882
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 298:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1886
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1892
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1896
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 301:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1902
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 302:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1908
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 303:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1913
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 304:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1918
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 305:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1924
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1932
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1936
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 308:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1942
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 309:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1948
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 310:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1952
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 311:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1956
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 312:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1960
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 313:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1964
		{
			yyDollar[3].columnType.Charset = yyDollar[4].str
			yyDollar[3].columnType.Collate = yyDollar[5].str
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 314:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1970
		{
			yyDollar[3].columnType.Charset = yyDollar[4].str
			yyDollar[3].columnType.Collate = yyDollar[5].str
			yyDollar[3].columnType.Default = yyDollar[7].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1979
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1983
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1987
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1993
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1997
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2003
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2007
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2011
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2015
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2019
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2023
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2029
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2033
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2037
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 329:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2041
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2047
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2051
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2057
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2061
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2067
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2073
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2077
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2081
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2085
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2089
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2093
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2097
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2101
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2105
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2109
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2113
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2117
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2123
		{
			yyVAL.statement = &Resignal{}
		}
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2127
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 349:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2131
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2135
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2139
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 352:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2143
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2149
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 354:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2154
		{
			yyVAL.exprs = nil
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2158
		{
			yyVAL.exprs = nil
		}
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2162
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2168
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2172
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2178
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 389:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2213
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
		}
	case 390:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2227
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: TableName{Name: NewTableIdent(string(yyDollar[5].bytes))}, IfNotExists: ne, Temporary: neTemp}
		}
	case 391:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2243
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str + yyDollar[5].str
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2250
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2255
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2260
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2266
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 396:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2270
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2275
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2279
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2283
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2289
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2297
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2307
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2315
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2323
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2331
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2339
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 407:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2348
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2352
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2356
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 410:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2361
		{
			yyVAL.columnType = ColumnType{}
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2365
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2374
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2383
		{
			opt := ColumnType{Charset: yyDollar[2].str}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2392
		{
			opt := ColumnType{Collate: yyDollar[2].str}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2401
		{
			opt := ColumnType{BinaryCollate: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2410
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2419
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2428
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2437
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2446
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 421:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2455
		{
			opt := ColumnType{GeneratedExpr: yyDollar[4].expr, Stored: yyDollar[6].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 422:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2464
		{
			opt := ColumnType{GeneratedExpr: yyDollar[6].expr, Stored: yyDollar[8].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2473
		{
			opt := ColumnType{SRID: NewIntVal(yyDollar[3].bytes)}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2484
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2495
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2500
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2506
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2510
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2514
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2518
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2522
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2526
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2530
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2534
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2538
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2542
		{
			yyVAL.columnType = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2548
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 441:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2554
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2560
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2566
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2572
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 445:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2578
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2584
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2590
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2598
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2602
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2606
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2610
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2614
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2620
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2624
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2628
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2632
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2636
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 458:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2640
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2644
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 460:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2648
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2652
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 462:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2656
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2660
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2664
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2668
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2672
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2676
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2680
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2684
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 470:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2688
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2692
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2696
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2700
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2704
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2708
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 476:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2712
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs}
		}
	case 477:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2717
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs}
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2723
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2727
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2731
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2735
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2739
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2743
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2747
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2751
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2757
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2762
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 488:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2767
		{
			yyVAL.sqlVal = nil
		}
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2771
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 490:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2776
		{
			yyVAL.sqlVal = nil
		}
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2780
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2784
		{
			yyVAL.sqlVal = NewValArg(yyDollar[2].bytes)
		}
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2789
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 494:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2793
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2801
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2805
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 497:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2811
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2819
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2823
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2827
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 501:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2832
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2836
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2842
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2846
		{
			if num, ok := yyDollar[3].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.optVal = num
				} else {
					yyVAL.optVal = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.optVal = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[3].expr}
			}
		}
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2860
		{
			yyVAL.optVal = yyDollar[2].boolVal
		}
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2864
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 507:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2868
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes)), Exprs: yyDollar[4].selectExprs}
		}
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2872
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 509:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2876
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes)), Exprs: yyDollar[4].selectExprs}
		}
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2880
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 511:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2884
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes)), Exprs: yyDollar[4].selectExprs}
		}
	case 512:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2888
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 513:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2892
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes)), Exprs: yyDollar[4].selectExprs}
		}
	case 514:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2896
		{
			yyVAL.optVal = &ParenExpr{yyDollar[3].expr}
		}
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2902
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2908
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2913
		{
			yyVAL.str = ""
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2917
		{
			yyVAL.str = yyDollar[1].str
		}
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2923
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2927
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2932
		{
			yyVAL.str = ""
		}
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2936
		{
			yyVAL.str = yyDollar[1].str
		}
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2942
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2946
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 525:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2951
		{
			yyVAL.boolean = false
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2955
		{
			yyVAL.boolean = true
		}
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2960
		{
			yyVAL.charsetCollates = nil
		}
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2964
		{
			yyVAL.charsetCollates = yyDollar[1].charsetCollates
		}
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2970
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2974
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2978
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2982
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2986
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2990
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 535:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2996
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3000
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 537:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3004
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 538:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3008
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 539:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3014
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 540:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3018
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 541:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3024
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3030
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3034
		{
			yyVAL.colKeyOpt = colKey
		}
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3038
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3042
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3046
		{
			yyVAL.colKeyOpt = colKeyFulltextKey
		}
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3052
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3058
		{
			yyVAL.statement = &Flush{Type: yyDollar[2].str, Option: yyDollar[3].flushOption}
		}
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3064
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3068
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3072
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3076
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3080
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3084
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3088
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3092
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3096
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].str}
		}
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3100
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3104
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3108
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 561:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3113
		{
			yyVAL.str = ""
		}
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3115
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3119
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3121
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 565:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3124
		{
			yyVAL.str = ""
		}
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3126
		{
			yyVAL.str = yyDollar[1].str
		}
	case 567:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3130
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 568:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3134
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 569:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3139
		{
			yyVAL.indexOptions = nil
		}
	case 570:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3143
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 571:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3149
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 572:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3153
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3159
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3163
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3168
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 576:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3174
		{
			yyVAL.str = ""
		}
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3178
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3186
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 579:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3190
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3194
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3198
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true}
		}
	case 582:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3202
		{
			var name string
			name = yyDollar[2].str
			if name == "" {
				name = yyDollar[5].str
			}
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].str), Name: NewColIdent(name), Unique: true}
		}
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3211
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 584:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3215
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 585:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3219
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3225
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3229
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3233
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3239
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3243
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 591:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3248
		{
			yyVAL.str = ""
		}
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3252
		{
			yyVAL.str = yyDollar[1].str
		}
	case 593:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3257
		{
			yyVAL.str = ""
		}
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3261
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3267
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3271
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3277
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3281
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3287
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3291
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3295
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 602:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3301
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 603:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3305
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 604:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3309
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 605:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3313
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 606:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3317
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3323
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3328
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3332
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3336
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3340
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 612:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3346
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 613:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3352
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3356
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 615:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3361
		{
			yyVAL.str = ""
		}
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3365
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3369
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3375
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3381
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3387
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3391
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3395
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3399
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3403
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 625:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3408
		{
			yyVAL.boolean = true
		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3412
		{
			yyVAL.boolean = true
		}
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3416
		{
			yyVAL.boolean = false
		}
	case 628:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3421
		{
			yyVAL.str = ""
		}
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3425
		{
			yyVAL.str = yyDollar[1].str + " " + string(yyDollar[2].str)
		}
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3429
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3435
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3439
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3443
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3447
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].str) + " "
		}
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3451
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + yyDollar[3].str
		}
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3455
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + yyDollar[4].str
		}
	case 637:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3459
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + yyDollar[5].str
		}
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3463
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3467
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 640:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3471
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[4].bytes)
		}
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3475
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3479
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3483
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 644:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3487
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + "'" + string(yyDollar[4].bytes) + "'"
		}
	case 645:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3491
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + "'" + string(yyDollar[4].bytes) + "'"
		}
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3495
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3499
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3503
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3507
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3511
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3515
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3519
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3523
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3527
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3531
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3535
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3539
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3543
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3547
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3551
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3555
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3559
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3563
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3567
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3571
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3575
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str
		}
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3579
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 668:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3583
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)
		}
	case 669:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3587
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)
		}
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3591
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3597
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3601
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3606
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3610
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3614
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3620
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3624
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3628
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3632
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3636
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3640
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 685:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3651
		{
			yyVAL.str = ""
		}
	case 686:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3655
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + yyDollar[3].str + yyDollar[4].str + yyDollar[5].str
		}
	case 687:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3659
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + yyDollar[3].str + yyDollar[4].str + yyDollar[5].str + "(partition_definitions)"
		}
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3665
		{
			yyVAL.str = yyDollar[1].str
		}
	case 689:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3669
		{
			yyVAL.str = string(yyDollar[1].bytes) + " (" + string(yyDollar[3].bytes) + ")"
		}
	case 690:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3673
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " (column_list)"
		}
	case 691:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3677
		{
			yyVAL.str = string(yyDollar[1].bytes) + " (" + string(yyDollar[3].bytes) + ")"
		}
	case 692:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3681
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " (column_list)"
		}
	case 693:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3687
		{
			yyVAL.str = yyDollar[1].str + string(yyDollar[2].bytes) + " (value)"
		}
	case 694:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3691
		{
			yyVAL.str = yyDollar[1].str + string(yyDollar[2].bytes) + " (" + string(yyDollar[4].bytes) + ")"
		}
	case 695:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3695
		{
			yyVAL.str = yyDollar[1].str + string(yyDollar[2].bytes) + " (column_list)"
		}
	case 696:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3699
		{
			yyVAL.str = yyDollar[1].str + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[5].bytes) + " (column_list)"
		}
	case 697:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3704
		{
			yyVAL.str = ""
		}
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3708
		{
			yyVAL.str = string(yyDollar[1].bytes) + " "
		}
	case 699:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3713
		{
			yyVAL.str = ""
		}
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3717
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " "
		}
	case 701:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3722
		{
			yyVAL.str = ""
		}
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3726
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + yyDollar[3].str + " " + yyDollar[4].str
		}
	case 703:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3731
		{
			yyVAL.str = ""
		}
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3735
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " "
		}
	case 705:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3740
		{
			yyVAL.str = ""
		}
	case 706:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3744
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 707:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3749
		{
			yyVAL.str = string("")
		}
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3753
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 710:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3762
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3775
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3779
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 713:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3785
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 714:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3792
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3799
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 716:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3803
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3807
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 718:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3812
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 719:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3816
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3820
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3825
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3830
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3835
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3840
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3845
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3850
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3855
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3860
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3865
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3870
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 731:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3874
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3878
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 733:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3885
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3891
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3895
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3901
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3907
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3912
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 739:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3916
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 740:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3920
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3924
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 742:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3930
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[7].indexColumns, Options: yyDollar[9].indexOptions}
			yyVAL.ddl = ddl
		}
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3936
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3940
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3945
		{
			yyVAL.columnOrder = nil
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3949
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3953
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 748:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3958
		{
		}
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3960
		{
		}
	case 750:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3964
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3970
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3974
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 753:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3980
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 754:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3984
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3990
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3994
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4000
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 758:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4004
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4012
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 760:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4016
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 761:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4022
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 762:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4030
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 763:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4034
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 764:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4042
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 765:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4050
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 766:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4058
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName}, IfExists: exists}
		}
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4066
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName}, IfExists: exists}
		}
	case 768:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4074
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4082
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 770:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4091
		{

		}
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4095
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4099
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4105
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4109
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4115
		{
			yyVAL.statement = &Analyze{Tables: yyDollar[3].tableNames}
		}
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4121
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 777:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4126
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4130
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 779:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4134
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 780:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4138
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 781:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4142
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 782:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4147
		{
			yyVAL.statement = &Show{Type: CreateProcedureStr, Table: yyDollar[4].tableName}
		}
	case 783:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4151
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 784:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4155
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4159
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4163
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4167
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 788:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4171
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4175
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 790:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4179
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 791:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4183
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 792:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4187
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 793:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4191
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 794:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4195
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, AsOf: yyDollar[7].expr, Filter: yyDollar[8].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, Table: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 795:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4200
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4205
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 797:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4209
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 798:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4213
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4217
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 800:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4221
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4227
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4235
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 803:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4239
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 804:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4244
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 805:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4248
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4253
		{
			yyVAL.statement = &ShowPrivileges{}
		}
	case 807:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4257
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 808:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4261
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4265
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4269
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4275
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 812:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4281
		{
			yyVAL.boolean = false
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4285
		{
			yyVAL.boolean = true
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4291
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4295
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 816:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4301
		{
			yyVAL.str = ""
		}
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4305
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4309
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 819:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4315
		{
			yyVAL.showFilter = nil
		}
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4319
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4323
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[3].bytes)}
		}
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4327
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 823:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4333
		{
			yyVAL.str = ""
		}
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4337
		{
			yyVAL.str = SessionStr
		}
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4341
		{
			yyVAL.str = GlobalStr
		}
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4347
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 827:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4351
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: yyDollar[2].tableIdent.v + "/" + yyDollar[4].tableIdent.v}}
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4355
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4361
		{
			yyVAL.statement = &Begin{}
		}
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4365
		{
			yyVAL.statement = &Begin{}
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4369
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4375
		{
			yyVAL.statement = &Begin{}
		}
	case 833:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4379
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 834:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4383
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4389
		{
			yyVAL.statement = &Commit{}
		}
	case 836:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4393
		{
			yyVAL.statement = &Commit{}
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4399
		{
			yyVAL.statement = &Rollback{}
		}
	case 838:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4403
		{
			yyVAL.statement = &Rollback{}
		}
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4409
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4415
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 841:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4419
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 842:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4423
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 843:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4427
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4433
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4438
		{
		}
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4439
		{
		}
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4443
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4447
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4453
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 853:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4461
		{
			yyVAL.str = ""
		}
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4465
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4476
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[3].expr}
			yyVAL.statement = &Show{Type: "columns", Table: yyDollar[2].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 858:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4482
		{
			setAllowComments(yylex, true)
		}
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4486
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 860:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4492
		{
			yyVAL.bytes2 = nil
		}
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4496
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4502
		{
			yyVAL.str = UnionStr
		}
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4506
		{
			yyVAL.str = UnionAllStr
		}
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4510
		{
			yyVAL.str = UnionDistinctStr
		}
	case 865:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4515
		{
			yyVAL.byt = 0
		}
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4519
		{
			yyVAL.byt = 1
		}
	case 867:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4524
		{
			yyVAL.str = ""
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4528
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4532
		{
			yyVAL.str = SQLCacheStr
		}
	case 870:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4537
		{
			yyVAL.str = ""
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4541
		{
			yyVAL.str = ""
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4545
		{
			yyVAL.str = DistinctStr
		}
	case 873:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4550
		{
			yyVAL.str = ""
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4554
		{
			yyVAL.str = StraightJoinHint
		}
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4560
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 876:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4568
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4579
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4583
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4587
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 880:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4591
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4597
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 882:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4601
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4605
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 884:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4609
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 885:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4615
		{
			yyVAL.over = &Over{NameRef: yyDollar[2].colIdent}
		}
	case 886:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4619
		{
			yyVAL.over = (*Over)(yyDollar[2].windowDef)
		}
	case 887:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4625
		{
			yyVAL.windowDef = &WindowDef{NameRef: yyDollar[2].colIdent, PartitionBy: yyDollar[3].exprs, OrderBy: yyDollar[4].orderBy, Frame: yyDollar[5].frame}
		}
	case 888:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4630
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4633
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 890:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4638
		{
			yyVAL.exprs = nil
		}
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4642
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 892:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4647
		{
			yyVAL.over = nil
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4651
		{
			yyVAL.over = yyDollar[1].over
		}
	case 894:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4656
		{
			yyVAL.frame = nil
		}
	case 895:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4660
		{
			yyVAL.frame = &Frame{Unit: RowsUnit, Extent: yyDollar[2].frameExtent}
		}
	case 896:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4664
		{
			yyVAL.frame = &Frame{Unit: RangeUnit, Extent: yyDollar[2].frameExtent}
		}
	case 897:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4671
		{
			startBound := yyDollar[2].frameBound
			endBound := yyDollar[4].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound, End: endBound}
		}
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4694
		{
			startBound := yyDollar[1].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound}
		}
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4709
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedPreceding}
		}
	case 900:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4713
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedFollowing}
		}
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4717
		{
			yyVAL.frameBound = &FrameBound{Type: CurrentRow}
		}
	case 902:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4721
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprPreceding,
			}
		}
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4728
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprFollowing,
			}
		}
	case 904:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4736
		{
			yyVAL.window = nil
		}
	case 905:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4739
		{
			yyVAL.window = yyDollar[2].window
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4745
		{
			yyVAL.window = Window{yyDollar[1].windowDef}
		}
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4748
		{
			yyVAL.window = append(yyDollar[1].window, yyDollar[3].windowDef)
		}
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4754
		{
			def := yyDollar[3].windowDef
			def.Name = yyDollar[1].colIdent
			yyVAL.windowDef = def
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4763
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4767
		{
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 911:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4772
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4776
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4780
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4784
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[2].bytes))
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4790
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4794
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4798
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4802
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4806
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4810
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4816
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4820
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4830
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 926:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4834
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4844
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4850
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4858
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4864
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 933:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4868
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4874
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 935:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4879
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4890
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 937:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4894
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 938:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4898
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4902
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4906
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 941:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4917
		{
			yyVAL.expr = nil
		}
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4921
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 943:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4926
		{
			yyVAL.columns = nil
		}
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4930
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4936
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4940
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4946
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4950
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 949:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4956
		{
			yyVAL.tableExpr = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].selectExprs}
		}
	case 950:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4970
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 951:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4974
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 952:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4978
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4982
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4988
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 955:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4990
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 956:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4994
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4996
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 958:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5000
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5002
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 960:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5005
		{
			yyVAL.empty = struct{}{}
		}
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5007
		{
			yyVAL.empty = struct{}{}
		}
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5012
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5016
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5022
		{
			yyVAL.str = JoinStr
		}
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5026
		{
			yyVAL.str = JoinStr
		}
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5030
		{
			yyVAL.str = JoinStr
		}
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5036
		{
			yyVAL.str = StraightJoinStr
		}
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5042
		{
			yyVAL.str = LeftJoinStr
		}
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5046
		{
			yyVAL.str = LeftJoinStr
		}
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5050
		{
			yyVAL.str = RightJoinStr
		}
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5054
		{
			yyVAL.str = RightJoinStr
		}
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5058
		{
			yyVAL.str = FullOuterJoinStr
		}
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5062
		{
			yyVAL.str = FullOuterJoinStr
		}
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5068
		{
			yyVAL.str = NaturalJoinStr
		}
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5072
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 977:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:5082
		{
			yyVAL.tableExpr = &JSONTableExpr{Data: yyDollar[3].expr, Path: string(yyDollar[5].bytes), Spec: yyDollar[8].TableSpec, Alias: yyDollar[12].tableIdent}
		}
	case 978:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:5086
		{
			yyVAL.tableExpr = &JSONTableExpr{Data: yyDollar[3].expr, Path: string(yyDollar[5].bytes), Spec: yyDollar[8].TableSpec, Alias: yyDollar[11].tableIdent}
		}
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5092
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5097
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5105
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 982:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5117
		{
			yyVAL.columnType = ColumnType{Path: string(yyDollar[2].bytes)}
		}
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5121
		{
			yyVAL.columnType = ColumnType{Path: string(yyDollar[3].bytes)}
		}
	case 984:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5127
		{

		}
	case 985:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5145
		{

		}
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5149
		{

		}
	case 987:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5153
		{

		}
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5157
		{

		}
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5163
		{
			yyVAL.triggerName = TriggerName{Name: yyDollar[1].colIdent}
		}
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5167
		{
			yyVAL.triggerName = TriggerName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5173
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 992:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5179
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5183
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5189
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5193
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5197
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5201
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5205
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5211
		{
			yyVAL.procedureName = ProcedureName{Name: yyDollar[1].colIdent}
		}
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5215
		{
			yyVAL.procedureName = ProcedureName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5221
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 1002:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5226
		{
			yyVAL.indexHints = nil
		}
	case 1003:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5230
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 1004:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5234
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 1005:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5238
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 1006:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5243
		{
			yyVAL.expr = nil
		}
	case 1007:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5247
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5253
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5257
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5261
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5265
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 1012:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5269
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5273
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5277
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5281
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 1016:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5287
		{
			yyVAL.str = ""
		}
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5291
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5297
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5301
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5307
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5311
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 1022:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5315
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 1023:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5319
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 1024:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5323
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5327
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 1026:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5331
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 1027:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5335
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 1028:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5339
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5343
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5349
		{
			yyVAL.str = IsNullStr
		}
	case 1031:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5353
		{
			yyVAL.str = IsNotNullStr
		}
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5357
		{
			yyVAL.str = IsTrueStr
		}
	case 1033:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5361
		{
			yyVAL.str = IsNotTrueStr
		}
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5365
		{
			yyVAL.str = IsFalseStr
		}
	case 1035:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5369
		{
			yyVAL.str = IsNotFalseStr
		}
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5375
		{
			yyVAL.str = EqualStr
		}
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5379
		{
			yyVAL.str = LessThanStr
		}
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5383
		{
			yyVAL.str = GreaterThanStr
		}
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5387
		{
			yyVAL.str = LessEqualStr
		}
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5391
		{
			yyVAL.str = GreaterEqualStr
		}
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5395
		{
			yyVAL.str = NotEqualStr
		}
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5399
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 1043:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5404
		{
			yyVAL.expr = nil
		}
	case 1044:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5408
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5414
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5418
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5422
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 1048:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5428
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5434
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5438
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 1051:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5444
		{
			yyVAL.selectExprs = nil
		}
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5451
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 1054:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5455
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5461
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1056:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5465
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5471
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5475
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5479
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5483
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5487
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5491
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5495
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5499
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5503
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 1066:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5507
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 1067:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5511
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5515
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 1069:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5519
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5523
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 1071:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5527
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 1072:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5531
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 1073:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5535
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 1074:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5539
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 1075:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5543
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 1076:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5547
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 1077:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5551
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 1078:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5555
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 1079:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5559
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 1080:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5563
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 1081:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5567
		{
			yyVAL.expr = &UnaryExpr{Operator: yyDollar[1].str, Expr: yyDollar[2].expr}
		}
	case 1082:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5571
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 1083:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5579
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5593
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 1085:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5597
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5601
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 1093:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5621
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 1094:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5625
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 1095:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5635
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1096:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5639
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1097:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5643
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1098:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5647
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1099:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5651
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1100:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5655
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1101:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5659
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1102:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5663
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1103:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5667
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1104:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5671
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1105:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5675
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1106:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5679
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1107:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5683
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1108:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5687
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1109:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5691
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1110:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5695
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1111:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5699
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1112:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5708
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1113:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5712
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1114:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5716
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 1115:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5720
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1116:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5724
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 1117:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5728
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1118:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5732
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1119:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5736
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1120:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5740
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1121:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5744
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1122:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5748
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1123:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5759
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1124:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5763
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1125:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5767
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1126:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5771
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5775
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1128:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5779
		{
			yyVAL.expr = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 1129:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5783
		{
			yyVAL.expr = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 1130:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5787
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1131:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5791
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1132:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5795
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 1133:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5799
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1134:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5803
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1135:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5807
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1136:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5811
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1137:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5815
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1138:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5819
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 1139:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5823
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 1140:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5827
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 1141:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5831
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 1142:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5835
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 1143:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5839
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 1144:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5843
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1145:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5847
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 1146:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5851
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 1147:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5855
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 1148:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5859
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5869
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5873
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5877
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5882
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1153:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5887
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1154:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5892
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1155:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5898
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5903
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1157:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5907
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1158:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5912
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5916
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1160:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5920
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5925
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5930
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5935
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1164:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5939
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1165:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5943
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5954
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5964
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5968
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1171:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5972
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5976
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1173:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5980
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1174:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5984
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1175:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5990
		{
			yyVAL.str = ""
		}
	case 1176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5994
		{
			yyVAL.str = BooleanModeStr
		}
	case 1177:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5998
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 1178:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:6002
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 1179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6006
		{
			yyVAL.str = QueryExpansionStr
		}
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6012
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6016
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6022
		{
			yyVAL.str = Armscii8Str
		}
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6026
		{
			yyVAL.str = AsciiStr
		}
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6030
		{
			yyVAL.str = Big5Str
		}
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6034
		{
			yyVAL.str = UBinaryStr
		}
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6038
		{
			yyVAL.str = Cp1250Str
		}
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6042
		{
			yyVAL.str = Cp1251Str
		}
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6046
		{
			yyVAL.str = Cp1256Str
		}
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6050
		{
			yyVAL.str = Cp1257Str
		}
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6054
		{
			yyVAL.str = Cp850Str
		}
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6058
		{
			yyVAL.str = Cp852Str
		}
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6062
		{
			yyVAL.str = Cp866Str
		}
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6066
		{
			yyVAL.str = Cp932Str
		}
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6070
		{
			yyVAL.str = Dec8Str
		}
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6074
		{
			yyVAL.str = EucjpmsStr
		}
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6078
		{
			yyVAL.str = EuckrStr
		}
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6082
		{
			yyVAL.str = Gb18030Str
		}
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6086
		{
			yyVAL.str = Gb2312Str
		}
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6090
		{
			yyVAL.str = GbkStr
		}
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6094
		{
			yyVAL.str = Geostd8Str
		}
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6098
		{
			yyVAL.str = GreekStr
		}
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6102
		{
			yyVAL.str = HebrewStr
		}
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6106
		{
			yyVAL.str = Hp8Str
		}
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6110
		{
			yyVAL.str = Keybcs2Str
		}
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6114
		{
			yyVAL.str = Koi8rStr
		}
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6118
		{
			yyVAL.str = Koi8uStr
		}
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6122
		{
			yyVAL.str = Latin1Str
		}
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6126
		{
			yyVAL.str = Latin2Str
		}
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6130
		{
			yyVAL.str = Latin5Str
		}
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6134
		{
			yyVAL.str = Latin7Str
		}
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6138
		{
			yyVAL.str = MacceStr
		}
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6142
		{
			yyVAL.str = MacromanStr
		}
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6146
		{
			yyVAL.str = SjisStr
		}
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6150
		{
			yyVAL.str = Swe7Str
		}
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6154
		{
			yyVAL.str = Tis620Str
		}
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6158
		{
			yyVAL.str = Ucs2Str
		}
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6162
		{
			yyVAL.str = UjisStr
		}
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6166
		{
			yyVAL.str = Utf16Str
		}
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6170
		{
			yyVAL.str = Utf16leStr
		}
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6174
		{
			yyVAL.str = Utf32Str
		}
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6178
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6182
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6186
		{
			yyVAL.str = Utf8mb4Str
		}
	case 1224:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6192
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6196
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 1226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6200
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6204
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1228:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6208
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1229:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6212
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6218
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1231:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6222
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6226
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6230
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1234:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6234
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6238
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1236:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6242
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1237:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6247
		{
			yyVAL.expr = nil
		}
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6251
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1239:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6256
		{
			yyVAL.str = string("")
		}
	case 1240:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6260
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6266
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 1242:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6270
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 1243:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6276
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 1244:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6281
		{
			yyVAL.expr = nil
		}
	case 1245:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6285
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6291
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6295
		{
			yyVAL.colName = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6299
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 1249:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6303
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1250:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6307
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1251:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6311
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1252:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6315
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6319
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1254:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6323
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1255:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6327
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1256:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6331
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6335
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6339
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1259:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6343
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6349
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6353
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 1262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6357
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6361
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6365
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6369
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6373
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6377
		{
			yyVAL.expr = &NullVal{}
		}
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6383
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 1269:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6387
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1270:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6391
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1271:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6396
		{
			yyVAL.exprs = nil
		}
	case 1272:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6400
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6406
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1274:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6410
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6416
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1276:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6421
		{
			yyVAL.expr = nil
		}
	case 1277:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6425
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6431
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1279:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6436
		{
			yyVAL.orderBy = nil
		}
	case 1280:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6440
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6446
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 1282:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6450
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 1283:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6456
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 1284:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6461
		{
			yyVAL.str = AscScr
		}
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6465
		{
			yyVAL.str = AscScr
		}
	case 1286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6469
		{
			yyVAL.str = DescScr
		}
	case 1287:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6474
		{
			yyVAL.limit = nil
		}
	case 1288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6478
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 1289:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6482
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 1290:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6486
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 1291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6492
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6496
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1293:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6501
		{
			yyVAL.str = ""
		}
	case 1294:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6505
		{
			yyVAL.str = ForUpdateStr
		}
	case 1295:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6509
		{
			yyVAL.str = ShareModeStr
		}
	case 1296:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6522
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 1297:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6526
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 1298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6530
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 1299:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6534
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 1300:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6539
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 1301:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6543
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 1302:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6547
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 1303:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6553
		{
			yyVAL.columns = nil
		}
	case 1304:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6557
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 1305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6563
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1306:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6567
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1307:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6573
		{
			yyVAL.colIdent = yyDollar[3].colIdent
		}
	case 1308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6577
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6581
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6585
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6589
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6593
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1313:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6598
		{
			yyVAL.assignExprs = nil
		}
	case 1314:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6602
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 1315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6608
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 1316:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6612
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 1317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6618
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 1318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6622
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 1319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6628
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 1320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6634
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 1321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6644
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 1322:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6648
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 1323:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6654
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 1324:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6657
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1325:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6661
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1326:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6665
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6671
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 1328:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6675
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 1329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6681
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 1330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6692
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6705
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6718
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 1333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6724
		{
			yyVAL.setScope = SetScope_Global
		}
	case 1334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6728
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6734
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6738
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 1337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6742
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 1338:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6748
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1339:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6752
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1340:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6756
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 1342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6763
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6770
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 1345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6774
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6778
		{
			yyVAL.expr = &Default{}
		}
	case 1349:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6787
		{
			yyVAL.byt = 0
		}
	case 1350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6789
		{
			yyVAL.byt = 1
		}
	case 1351:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6792
		{
			yyVAL.byt = 0
		}
	case 1352:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6794
		{
			yyVAL.byt = 1
		}
	case 1353:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6797
		{
			yyVAL.byt = 0
		}
	case 1354:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6799
		{
			yyVAL.byt = 1
		}
	case 1355:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6802
		{
			yyVAL.str = ""
		}
	case 1356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6804
		{
			yyVAL.str = IgnoreStr
		}
	case 1357:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6807
		{
			yyVAL.sqlVal = nil
		}
	case 1358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6809
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6811
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6815
		{
			yyVAL.empty = struct{}{}
		}
	case 1361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6817
		{
			yyVAL.empty = struct{}{}
		}
	case 1362:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6820
		{
			yyVAL.empty = struct{}{}
		}
	case 1363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6822
		{
			yyVAL.empty = struct{}{}
		}
	case 1364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6824
		{
			yyVAL.empty = struct{}{}
		}
	case 1365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6828
		{
			yyVAL.str = UniqueStr
		}
	case 1366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6830
		{
			yyVAL.str = FulltextStr
		}
	case 1367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6832
		{
			yyVAL.str = SpatialStr
		}
	case 1368:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6835
		{
			yyVAL.str = ""
		}
	case 1369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6837
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1370:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6840
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 1371:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6842
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 1372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6846
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1373:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6850
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1374:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6856
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 1375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6860
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 1377:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6867
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6873
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1379:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6877
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6884
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1382:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6889
		{
			yyVAL.str = string("")
		}
	case 1383:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6891
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6894
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6896
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1386:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6899
		{
			yyVAL.EnclosedBy = nil
		}
	case 1387:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6903
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1388:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6908
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6912
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1390:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6917
		{
			yyVAL.sqlVal = nil
		}
	case 1391:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6921
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1392:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6926
		{
			yyVAL.sqlVal = nil
		}
	case 1393:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6930
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1394:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6935
		{
			yyVAL.Fields = nil
		}
	case 1395:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6939
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1396:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6944
		{
			yyVAL.Lines = nil
		}
	case 1397:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6948
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1398:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6953
		{
			yyVAL.sqlVal = nil
		}
	case 1399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6957
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6963
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6969
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1402:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6973
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1403:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6979
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1404:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6983
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1405:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6989
		{
			yyVAL.lockType = LockRead
		}
	case 1406:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6993
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1407:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6997
		{
			yyVAL.lockType = LockWrite
		}
	case 1408:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7001
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7007
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1410:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7013
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[2].bytes)}
		}
	case 1411:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7017
		{
			yyVAL.statement = &Kill{ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1412:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7021
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 2219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7869
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7878
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
