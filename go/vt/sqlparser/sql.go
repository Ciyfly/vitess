// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

//import "runtime/debug"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

func yySpecialCommentMode(yylex interface{}) bool {
	tkn := yylex.(*Tokenizer)
	return tkn.specialComment != nil
}

//line sql.y:64
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	variables                Variables
	into                     *Into
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	triggerName              TriggerName
	tableName                TableName
	tableNames               TableNames
	procedureName            ProcedureName
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	flushOption              *FlushOption
	replicationOption        *ReplicationOption
	replicationOptions       []*ReplicationOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	viewSpec                 *ViewSpec
	showFilter               *ShowFilter
	frame                    *Frame
	frameExtent              *FrameExtent
	frameBound               *FrameBound
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	charsetCollate           *CharsetAndCollate
	charsetCollates          []*CharsetAndCollate
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptionItem            TLSOptionItem
	tlsOptionItems           []TLSOptionItem
	accountLimitItem         AccountLimitItem
	accountLimitItems        []AccountLimitItem
	passLockItem             PassLockItem
	passLockItems            []PassLockItem
	grantPrivilege           Privilege
	grantPrivileges          []Privilege
	grantObjectType          GrantObjectType
	privilegeLevel           PrivilegeLevel
	grantAssumption          *GrantUserAssumption
	with                     *With
	window                   Window
	over                     *Over
	windowDef                *WindowDef
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const DUPLICATE = 57369
const DEFAULT = 57370
const SET = 57371
const LOCK = 57372
const UNLOCK = 57373
const KEYS = 57374
const OF = 57375
const OUTFILE = 57376
const DUMPFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const INTO = 57425
const OR = 57426
const XOR = 57427
const AND = 57428
const NOT = 57429
const BETWEEN = 57430
const CASE = 57431
const WHEN = 57432
const THEN = 57433
const ELSE = 57434
const ELSEIF = 57435
const END = 57436
const LE = 57437
const GE = 57438
const NE = 57439
const NULL_SAFE_EQUAL = 57440
const IS = 57441
const LIKE = 57442
const REGEXP = 57443
const IN = 57444
const UNBOUNDED = 57445
const PARTITION = 57446
const RANGE = 57447
const ROWS = 57448
const GROUPS = 57449
const PRECEDING = 57450
const FOLLOWING = 57451
const SHIFT_LEFT = 57452
const SHIFT_RIGHT = 57453
const DIV = 57454
const MOD = 57455
const UNARY = 57456
const COLLATE = 57457
const BINARY = 57458
const UNDERSCORE_ARMSCII8 = 57459
const UNDERSCORE_ASCII = 57460
const UNDERSCORE_BIG5 = 57461
const UNDERSCORE_BINARY = 57462
const UNDERSCORE_CP1250 = 57463
const UNDERSCORE_CP1251 = 57464
const UNDERSCORE_CP1256 = 57465
const UNDERSCORE_CP1257 = 57466
const UNDERSCORE_CP850 = 57467
const UNDERSCORE_CP852 = 57468
const UNDERSCORE_CP866 = 57469
const UNDERSCORE_CP932 = 57470
const UNDERSCORE_DEC8 = 57471
const UNDERSCORE_EUCJPMS = 57472
const UNDERSCORE_EUCKR = 57473
const UNDERSCORE_GB18030 = 57474
const UNDERSCORE_GB2312 = 57475
const UNDERSCORE_GBK = 57476
const UNDERSCORE_GEOSTD8 = 57477
const UNDERSCORE_GREEK = 57478
const UNDERSCORE_HEBREW = 57479
const UNDERSCORE_HP8 = 57480
const UNDERSCORE_KEYBCS2 = 57481
const UNDERSCORE_KOI8R = 57482
const UNDERSCORE_KOI8U = 57483
const UNDERSCORE_LATIN1 = 57484
const UNDERSCORE_LATIN2 = 57485
const UNDERSCORE_LATIN5 = 57486
const UNDERSCORE_LATIN7 = 57487
const UNDERSCORE_MACCE = 57488
const UNDERSCORE_MACROMAN = 57489
const UNDERSCORE_SJIS = 57490
const UNDERSCORE_SWE7 = 57491
const UNDERSCORE_TIS620 = 57492
const UNDERSCORE_UCS2 = 57493
const UNDERSCORE_UJIS = 57494
const UNDERSCORE_UTF16 = 57495
const UNDERSCORE_UTF16LE = 57496
const UNDERSCORE_UTF32 = 57497
const UNDERSCORE_UTF8 = 57498
const UNDERSCORE_UTF8MB3 = 57499
const UNDERSCORE_UTF8MB4 = 57500
const INTERVAL = 57501
const JSON_EXTRACT_OP = 57502
const JSON_UNQUOTE_EXTRACT_OP = 57503
const CREATE = 57504
const ALTER = 57505
const DROP = 57506
const RENAME = 57507
const ANALYZE = 57508
const ADD = 57509
const MODIFY = 57510
const CHANGE = 57511
const SCHEMA = 57512
const TABLE = 57513
const INDEX = 57514
const INDEXES = 57515
const VIEW = 57516
const TO = 57517
const IGNORE = 57518
const IF = 57519
const PRIMARY = 57520
const COLUMN = 57521
const SPATIAL = 57522
const FULLTEXT = 57523
const KEY_BLOCK_SIZE = 57524
const CHECK = 57525
const ACTION = 57526
const CASCADE = 57527
const CONSTRAINT = 57528
const FOREIGN = 57529
const NO = 57530
const REFERENCES = 57531
const RESTRICT = 57532
const FIRST = 57533
const AFTER = 57534
const LAST = 57535
const SHOW = 57536
const DESCRIBE = 57537
const EXPLAIN = 57538
const DATE = 57539
const ESCAPE = 57540
const REPAIR = 57541
const OPTIMIZE = 57542
const TRUNCATE = 57543
const FORMAT = 57544
const EXTENDED = 57545
const MAXVALUE = 57546
const REORGANIZE = 57547
const LESS = 57548
const THAN = 57549
const PROCEDURE = 57550
const TRIGGER = 57551
const TRIGGERS = 57552
const FUNCTION = 57553
const STATUS = 57554
const VARIABLES = 57555
const WARNINGS = 57556
const ERRORS = 57557
const KILL = 57558
const CONNECTION = 57559
const SEQUENCE = 57560
const ENABLE = 57561
const DISABLE = 57562
const EACH = 57563
const ROW = 57564
const BEFORE = 57565
const FOLLOWS = 57566
const PRECEDES = 57567
const DEFINER = 57568
const INVOKER = 57569
const INOUT = 57570
const OUT = 57571
const DETERMINISTIC = 57572
const CONTAINS = 57573
const READS = 57574
const MODIFIES = 57575
const SQL = 57576
const SECURITY = 57577
const TEMPORARY = 57578
const ALGORITHM = 57579
const MERGE = 57580
const TEMPTABLE = 57581
const UNDEFINED = 57582
const CLASS_ORIGIN = 57583
const SUBCLASS_ORIGIN = 57584
const MESSAGE_TEXT = 57585
const MYSQL_ERRNO = 57586
const CONSTRAINT_CATALOG = 57587
const CONSTRAINT_SCHEMA = 57588
const CONSTRAINT_NAME = 57589
const CATALOG_NAME = 57590
const SCHEMA_NAME = 57591
const TABLE_NAME = 57592
const COLUMN_NAME = 57593
const CURSOR_NAME = 57594
const SIGNAL = 57595
const RESIGNAL = 57596
const SQLSTATE = 57597
const DECLARE = 57598
const CONDITION = 57599
const CURSOR = 57600
const CONTINUE = 57601
const EXIT = 57602
const UNDO = 57603
const HANDLER = 57604
const FOUND = 57605
const SQLWARNING = 57606
const SQLEXCEPTION = 57607
const FETCH = 57608
const OPEN = 57609
const CLOSE = 57610
const LOOP = 57611
const LEAVE = 57612
const ITERATE = 57613
const REPEAT = 57614
const UNTIL = 57615
const WHILE = 57616
const DO = 57617
const RETURN = 57618
const USER = 57619
const IDENTIFIED = 57620
const ROLE = 57621
const REUSE = 57622
const GRANT = 57623
const GRANTS = 57624
const REVOKE = 57625
const NONE = 57626
const ATTRIBUTE = 57627
const RANDOM = 57628
const PASSWORD = 57629
const INITIAL = 57630
const AUTHENTICATION = 57631
const SSL = 57632
const X509 = 57633
const CIPHER = 57634
const ISSUER = 57635
const SUBJECT = 57636
const ACCOUNT = 57637
const EXPIRE = 57638
const NEVER = 57639
const DAY = 57640
const OPTION = 57641
const OPTIONAL = 57642
const EXCEPT = 57643
const ADMIN = 57644
const PRIVILEGES = 57645
const MAX_QUERIES_PER_HOUR = 57646
const MAX_UPDATES_PER_HOUR = 57647
const MAX_CONNECTIONS_PER_HOUR = 57648
const MAX_USER_CONNECTIONS = 57649
const FLUSH = 57650
const FAILED_LOGIN_ATTEMPTS = 57651
const PASSWORD_LOCK_TIME = 57652
const REQUIRE = 57653
const PROXY = 57654
const ROUTINE = 57655
const TABLESPACE = 57656
const CLIENT = 57657
const SLAVE = 57658
const EVENT = 57659
const EXECUTE = 57660
const FILE = 57661
const RELOAD = 57662
const REPLICATION = 57663
const SHUTDOWN = 57664
const SUPER = 57665
const USAGE = 57666
const LOGS = 57667
const ENGINE = 57668
const ERROR = 57669
const GENERAL = 57670
const HOSTS = 57671
const OPTIMIZER_COSTS = 57672
const RELAY = 57673
const SLOW = 57674
const USER_RESOURCES = 57675
const NO_WRITE_TO_BINLOG = 57676
const CHANNEL = 57677
const REPLICA = 57678
const SOURCE = 57679
const STOP = 57680
const SOURCE_HOST = 57681
const SOURCE_USER = 57682
const SOURCE_PASSWORD = 57683
const SOURCE_PORT = 57684
const RESET = 57685
const BEGIN = 57686
const START = 57687
const TRANSACTION = 57688
const COMMIT = 57689
const ROLLBACK = 57690
const SAVEPOINT = 57691
const WORK = 57692
const RELEASE = 57693
const CHAIN = 57694
const BIT = 57695
const TINYINT = 57696
const SMALLINT = 57697
const MEDIUMINT = 57698
const INT = 57699
const INTEGER = 57700
const BIGINT = 57701
const INTNUM = 57702
const SERIAL = 57703
const REAL = 57704
const DOUBLE = 57705
const FLOAT_TYPE = 57706
const DECIMAL = 57707
const NUMERIC = 57708
const DEC = 57709
const FIXED = 57710
const PRECISION = 57711
const TIME = 57712
const TIMESTAMP = 57713
const DATETIME = 57714
const YEAR = 57715
const CHAR = 57716
const VARCHAR = 57717
const BOOL = 57718
const CHARACTER = 57719
const VARBINARY = 57720
const NCHAR = 57721
const NVARCHAR = 57722
const NATIONAL = 57723
const VARYING = 57724
const TEXT = 57725
const TINYTEXT = 57726
const MEDIUMTEXT = 57727
const LONGTEXT = 57728
const LONG = 57729
const BLOB = 57730
const TINYBLOB = 57731
const MEDIUMBLOB = 57732
const LONGBLOB = 57733
const JSON = 57734
const ENUM = 57735
const GEOMETRY = 57736
const POINT = 57737
const LINESTRING = 57738
const POLYGON = 57739
const GEOMETRYCOLLECTION = 57740
const MULTIPOINT = 57741
const MULTILINESTRING = 57742
const MULTIPOLYGON = 57743
const LOCAL = 57744
const LOW_PRIORITY = 57745
const NULLX = 57746
const AUTO_INCREMENT = 57747
const APPROXNUM = 57748
const SIGNED = 57749
const UNSIGNED = 57750
const ZEROFILL = 57751
const SRID = 57752
const COLLATION = 57753
const DATABASES = 57754
const SCHEMAS = 57755
const TABLES = 57756
const FULL = 57757
const PROCESSLIST = 57758
const COLUMNS = 57759
const FIELDS = 57760
const ENGINES = 57761
const PLUGINS = 57762
const NAMES = 57763
const CHARSET = 57764
const GLOBAL = 57765
const SESSION = 57766
const ISOLATION = 57767
const LEVEL = 57768
const READ = 57769
const WRITE = 57770
const ONLY = 57771
const REPEATABLE = 57772
const COMMITTED = 57773
const UNCOMMITTED = 57774
const SERIALIZABLE = 57775
const ENCRYPTION = 57776
const CURRENT_TIMESTAMP = 57777
const NOW = 57778
const DATABASE = 57779
const CURRENT_DATE = 57780
const CURRENT_USER = 57781
const CURRENT_TIME = 57782
const LOCALTIME = 57783
const LOCALTIMESTAMP = 57784
const UTC_DATE = 57785
const UTC_TIME = 57786
const UTC_TIMESTAMP = 57787
const REPLACE = 57788
const CONVERT = 57789
const CAST = 57790
const SUBSTR = 57791
const SUBSTRING = 57792
const TRIM = 57793
const LEADING = 57794
const TRAILING = 57795
const BOTH = 57796
const GROUP_CONCAT = 57797
const SEPARATOR = 57798
const TIMESTAMPADD = 57799
const TIMESTAMPDIFF = 57800
const OVER = 57801
const WINDOW = 57802
const GROUPING = 57803
const CURRENT = 57804
const AVG = 57805
const BIT_AND = 57806
const BIT_OR = 57807
const BIT_XOR = 57808
const COUNT = 57809
const JSON_ARRAYAGG = 57810
const JSON_OBJECTAGG = 57811
const MAX = 57812
const MIN = 57813
const STDDEV_POP = 57814
const STDDEV = 57815
const STD = 57816
const STDDEV_SAMP = 57817
const SUM = 57818
const VAR_POP = 57819
const VARIANCE = 57820
const VAR_SAMP = 57821
const CUME_DIST = 57822
const DENSE_RANK = 57823
const FIRST_VALUE = 57824
const LAG = 57825
const LAST_VALUE = 57826
const LEAD = 57827
const NTH_VALUE = 57828
const NTILE = 57829
const ROW_NUMBER = 57830
const PERCENT_RANK = 57831
const RANK = 57832
const DUAL = 57833
const JSON_TABLE = 57834
const PATH = 57835
const AVG_ROW_LENGTH = 57836
const CHECKSUM = 57837
const COMPRESSION = 57838
const DIRECTORY = 57839
const DELAY_KEY_WRITE = 57840
const ENGINE_ATTRIBUTE = 57841
const INSERT_METHOD = 57842
const MAX_ROWS = 57843
const MIN_ROWS = 57844
const PACK_KEYS = 57845
const ROW_FORMAT = 57846
const SECONDARY_ENGINE_ATTRIBUTE = 57847
const STATS_AUTO_RECALC = 57848
const STATS_PERSISTENT = 57849
const STATS_SAMPLE_PAGES = 57850
const STORAGE = 57851
const DISK = 57852
const MEMORY = 57853
const DYNAMIC = 57854
const COMPRESSED = 57855
const REDUNDANT = 57856
const COMPACT = 57857
const LIST = 57858
const HASH = 57859
const PARTITIONS = 57860
const SUBPARTITION = 57861
const SUBPARTITIONS = 57862
const PREPARE = 57863
const DEALLOCATE = 57864
const MATCH = 57865
const AGAINST = 57866
const BOOLEAN = 57867
const LANGUAGE = 57868
const WITH = 57869
const QUERY = 57870
const EXPANSION = 57871
const ACCESSIBLE = 57872
const ASENSITIVE = 57873
const CUBE = 57874
const DAY_HOUR = 57875
const DAY_MICROSECOND = 57876
const DAY_MINUTE = 57877
const DAY_SECOND = 57878
const DELAYED = 57879
const DISTINCTROW = 57880
const EMPTY = 57881
const FLOAT4 = 57882
const FLOAT8 = 57883
const GET = 57884
const HIGH_PRIORITY = 57885
const HOUR_MICROSECOND = 57886
const HOUR_MINUTE = 57887
const HOUR_SECOND = 57888
const INSENSITIVE = 57889
const INT1 = 57890
const INT2 = 57891
const INT3 = 57892
const INT4 = 57893
const INT8 = 57894
const IO_AFTER_GTIDS = 57895
const IO_BEFORE_GTIDS = 57896
const LINEAR = 57897
const MASTER_BIND = 57898
const MASTER_SSL_VERIFY_SERVER_CERT = 57899
const MIDDLEINT = 57900
const MINUTE_MICROSECOND = 57901
const MINUTE_SECOND = 57902
const PURGE = 57903
const READ_WRITE = 57904
const RLIKE = 57905
const SECOND_MICROSECOND = 57906
const SENSITIVE = 57907
const SPECIFIC = 57908
const SQL_BIG_RESULT = 57909
const SQL_SMALL_RESULT = 57910
const VARCHARACTER = 57911
const YEAR_MONTH = 57912
const UNUSED = 57913
const DESCRIPTION = 57914
const LATERAL = 57915
const MEMBER = 57916
const RECURSIVE = 57917
const BUCKETS = 57918
const CLONE = 57919
const COMPONENT = 57920
const DEFINITION = 57921
const ENFORCED = 57922
const EXCLUDE = 57923
const GEOMCOLLECTION = 57924
const GET_MASTER_PUBLIC_KEY = 57925
const HISTOGRAM = 57926
const HISTORY = 57927
const INACTIVE = 57928
const INVISIBLE = 57929
const LOCKED = 57930
const MASTER_COMPRESSION_ALGORITHMS = 57931
const MASTER_PUBLIC_KEY_PATH = 57932
const MASTER_TLS_CIPHERSUITES = 57933
const MASTER_ZSTD_COMPRESSION_LEVEL = 57934
const NESTED = 57935
const NETWORK_NAMESPACE = 57936
const NOWAIT = 57937
const NULLS = 57938
const OJ = 57939
const OLD = 57940
const ORDINALITY = 57941
const ORGANIZATION = 57942
const OTHERS = 57943
const PERSIST = 57944
const PERSIST_ONLY = 57945
const PRIVILEGE_CHECKS_USER = 57946
const PROCESS = 57947
const REFERENCE = 57948
const REQUIRE_ROW_FORMAT = 57949
const RESOURCE = 57950
const RESPECT = 57951
const RESTART = 57952
const RETAIN = 57953
const SECONDARY = 57954
const SECONDARY_ENGINE = 57955
const SECONDARY_LOAD = 57956
const SECONDARY_UNLOAD = 57957
const SKIP = 57958
const THREAD_PRIORITY = 57959
const TIES = 57960
const VCPU = 57961
const VISIBLE = 57962
const SYSTEM = 57963
const INFILE = 57964
const ACTIVE = 57965
const AGGREGATE = 57966
const ANY = 57967
const ARRAY = 57968
const ASCII = 57969
const AT = 57970
const AUTOEXTEND_SIZE = 57971
const ENDS = 57972
const EVENTS = 57973
const GENERATED = 57974
const ALWAYS = 57975
const STORED = 57976
const VIRTUAL = 57977
const NVAR = 57978
const PASSWORD_LOCK = 57979

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DUMPFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"':'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"INTO",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB3",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"LAST",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"EXTENDED",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"ENABLE",
	"DISABLE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"ALGORITHM",
	"MERGE",
	"TEMPTABLE",
	"UNDEFINED",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"FETCH",
	"OPEN",
	"CLOSE",
	"LOOP",
	"LEAVE",
	"ITERATE",
	"REPEAT",
	"UNTIL",
	"WHILE",
	"DO",
	"RETURN",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTION",
	"OPTIONAL",
	"EXCEPT",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EVENT",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"REPLICA",
	"SOURCE",
	"STOP",
	"SOURCE_HOST",
	"SOURCE_USER",
	"SOURCE_PASSWORD",
	"SOURCE_PORT",
	"RESET",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"CHAIN",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"SRID",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ENCRYPTION",
	"CURRENT_TIMESTAMP",
	"NOW",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"DUAL",
	"JSON_TABLE",
	"PATH",
	"AVG_ROW_LENGTH",
	"CHECKSUM",
	"COMPRESSION",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"DISK",
	"MEMORY",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"LIST",
	"HASH",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"PREPARE",
	"DEALLOCATE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ACCESSIBLE",
	"ASENSITIVE",
	"CUBE",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"DELAYED",
	"DISTINCTROW",
	"EMPTY",
	"FLOAT4",
	"FLOAT8",
	"GET",
	"HIGH_PRIORITY",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"INSENSITIVE",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"IO_AFTER_GTIDS",
	"IO_BEFORE_GTIDS",
	"LINEAR",
	"MASTER_BIND",
	"MASTER_SSL_VERIFY_SERVER_CERT",
	"MIDDLEINT",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"PURGE",
	"READ_WRITE",
	"RLIKE",
	"SECOND_MICROSECOND",
	"SENSITIVE",
	"SPECIFIC",
	"SQL_BIG_RESULT",
	"SQL_SMALL_RESULT",
	"VARCHARACTER",
	"YEAR_MONTH",
	"UNUSED",
	"DESCRIPTION",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"ACTIVE",
	"AGGREGATE",
	"ANY",
	"ARRAY",
	"ASCII",
	"AT",
	"AUTOEXTEND_SIZE",
	"ENDS",
	"EVENTS",
	"GENERATED",
	"ALWAYS",
	"STORED",
	"VIRTUAL",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 39,
	657, 39,
	-2, 61,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 45,
	190, 1432,
	191, 1451,
	-2, 260,
	-1, 55,
	231, 901,
	232, 901,
	-2, 890,
	-1, 78,
	5, 66,
	-2, 47,
	-1, 455,
	1, 2113,
	23, 2113,
	178, 2113,
	657, 2113,
	-2, 935,
	-1, 468,
	178, 1461,
	-2, 1455,
	-1, 469,
	178, 1462,
	-2, 1456,
	-1, 531,
	1, 572,
	657, 572,
	-2, 570,
	-1, 553,
	178, 1822,
	-2, 1099,
	-1, 583,
	178, 1930,
	-2, 1350,
	-1, 584,
	178, 2011,
	-2, 1101,
	-1, 585,
	178, 1842,
	-2, 1102,
	-1, 652,
	178, 1793,
	-2, 1320,
	-1, 655,
	178, 1810,
	-2, 1249,
	-1, 656,
	178, 2023,
	-2, 1249,
	-1, 657,
	178, 2022,
	-2, 1249,
	-1, 658,
	178, 2021,
	-2, 1249,
	-1, 659,
	178, 1910,
	-2, 1249,
	-1, 660,
	178, 1911,
	-2, 1249,
	-1, 661,
	178, 1808,
	-2, 1249,
	-1, 662,
	178, 1809,
	-2, 1249,
	-1, 663,
	178, 1811,
	-2, 1249,
	-1, 911,
	101, 2125,
	178, 2125,
	-2, 1416,
	-1, 912,
	101, 2236,
	178, 2236,
	-2, 1417,
	-1, 917,
	101, 2149,
	178, 2149,
	-2, 1418,
	-1, 918,
	101, 2193,
	178, 2193,
	-2, 1419,
	-1, 919,
	101, 2194,
	178, 2194,
	-2, 1420,
	-1, 920,
	101, 2061,
	178, 2061,
	-2, 1424,
	-1, 922,
	101, 2170,
	178, 2170,
	-2, 1426,
	-1, 1086,
	370, 914,
	-2, 918,
	-1, 1088,
	370, 914,
	-2, 918,
	-1, 1198,
	5, 66,
	-2, 48,
	-1, 1203,
	1, 572,
	657, 572,
	-2, 570,
	-1, 1205,
	1, 573,
	657, 573,
	-2, 570,
	-1, 1468,
	1, 572,
	657, 572,
	-2, 570,
	-1, 1470,
	1, 572,
	657, 572,
	-2, 570,
	-1, 1947,
	178, 1464,
	-2, 1460,
	-1, 2067,
	1, 1010,
	5, 1010,
	12, 1010,
	13, 1010,
	14, 1010,
	15, 1010,
	17, 1010,
	19, 1010,
	29, 1010,
	30, 1010,
	56, 1010,
	57, 1010,
	58, 1010,
	59, 1010,
	60, 1010,
	62, 1010,
	63, 1010,
	66, 1010,
	67, 1010,
	69, 1010,
	70, 1010,
	88, 1010,
	434, 1010,
	479, 1010,
	657, 1010,
	-2, 1043,
	-1, 2075,
	67, 83,
	69, 83,
	-2, 87,
	-1, 2093,
	178, 1934,
	-2, 1421,
	-1, 2260,
	44, 765,
	197, 767,
	199, 765,
	200, 765,
	-2, 811,
	-1, 2309,
	5, 67,
	-2, 1131,
	-1, 2880,
	197, 768,
	-2, 766,
	-1, 2953,
	69, 1706,
	70, 1706,
	178, 1706,
	-2, 941,
	-1, 2979,
	1, 1085,
	5, 1085,
	12, 1085,
	13, 1085,
	14, 1085,
	15, 1085,
	17, 1085,
	19, 1085,
	29, 1085,
	30, 1085,
	56, 1085,
	57, 1085,
	58, 1085,
	59, 1085,
	60, 1085,
	62, 1085,
	63, 1085,
	66, 1085,
	67, 1085,
	69, 1085,
	70, 1085,
	88, 1085,
	434, 1085,
	479, 1085,
	657, 1085,
	-2, 1043,
	-1, 3168,
	5, 67,
	-2, 1382,
	-1, 3271,
	41, 1471,
	-2, 1469,
	-1, 3517,
	5, 67,
	-2, 1385,
	-1, 3543,
	281, 328,
	-2, 1526,
	-1, 3544,
	281, 329,
	-2, 1567,
	-1, 3545,
	281, 330,
	-2, 1743,
	-1, 3740,
	96, 314,
	98, 314,
	100, 314,
	-2, 61,
	-1, 3815,
	98, 321,
	99, 321,
	100, 321,
	-2, 61,
}

const yyPrivate = 57344

const yyLast = 57530

var yyAct = [...]int{
	595, 86, 3703, 3763, 3744, 527, 1219, 2508, 3684, 3509,
	3683, 1028, 480, 2656, 2469, 3705, 3633, 3424, 7, 3549,
	3421, 3, 3581, 2470, 3416, 2847, 3423, 6, 2818, 2090,
	3422, 5, 3519, 3384, 3209, 3340, 2989, 3507, 555, 2771,
	3383, 3271, 1302, 3425, 8, 2682, 2610, 1895, 559, 2973,
	3536, 2946, 3537, 1303, 3042, 2392, 2158, 594, 3273, 2394,
	539, 546, 2947, 2388, 1398, 89, 3550, 2857, 2535, 2761,
	3125, 2831, 2116, 469, 2175, 3101, 3079, 3095, 459, 462,
	1919, 3417, 2683, 506, 506, 512, 523, 86, 2772, 2943,
	2874, 101, 2460, 2517, 1072, 572, 2955, 1326, 2964, 2107,
	114, 1972, 1893, 1912, 1901, 2259, 1501, 537, 2241, 2120,
	1099, 2419, 2456, 1053, 2760, 558, 2144, 2032, 2377, 2626,
	1978, 1503, 2578, 1843, 141, 1477, 416, 418, 991, 536,
	141, 2064, 998, 1500, 2663, 141, 2063, 2370, 2205, 2103,
	2224, 2140, 2499, 1380, 1787, 509, 509, 1894, 916, 1220,
	1376, 2023, 913, 141, 1806, 1949, 2067, 1227, 2686, 1848,
	1130, 1108, 1223, 542, 909, 1379, 2122, 910, 990, 2077,
	1043, 1241, 1208, 78, 1207, 562, 141, 1000, 483, 1204,
	1231, 1206, 482, 1819, 1092, 1107, 1818, 1011, 564, 526,
	1786, 1471, 110, 106, 465, 532, 141, 509, 3815, 1000,
	1016, 3808, 3797, 3783, 3769, 3740, 91, 1040, 141, 3738,
	3718, 3715, 2477, 3714, 3713, 3698, 3696, 2481, 2461, 3622,
	3618, 3613, 88, 3342, 3341, 1325, 2786, 1841, 3250, 3072,
	1027, 2993, 2816, 2486, 2485, 3812, 3806, 3804, 1141, 3080,
	3725, 3505, 40, 475, 3248, 3676, 43, 40, 93, 3082,
	99, 40, 3392, 3263, 3636, 2482, 3493, 2828, 2528, 3251,
	3504, 2648, 995, 419, 40, 2677, 40, 3391, 2189, 2189,
	3596, 2488, 3324, 2467, 3199, 3193, 3300, 2990, 128, 124,
	125, 2468, 126, 2678, 1258, 1257, 1267, 1268, 1260, 1261,
	1262, 1263, 1264, 1265, 1266, 1259, 84, 1013, 1269, 1018,
	1019, 904, 905, 906, 87, 3309, 2664, 2390, 1021, 87,
	3206, 3207, 3034, 87, 525, 2743, 130, 129, 2742, 3643,
	3681, 3364, 2092, 2471, 3577, 2347, 87, 2937, 87, 1010,
	2725, 2726, 2223, 97, 95, 96, 533, 2492, 3058, 454,
	3022, 3064, 3066, 3065, 3062, 3063, 3061, 3060, 3059, 2412,
	1086, 2724, 2411, 2880, 1182, 2413, 1847, 1844, 2086, 3513,
	3067, 3068, 1075, 3513, 3085, 1865, 1057, 1058, 2087, 2088,
	1061, 1883, 1884, 1076, 1077, 3322, 2455, 3508, 552, 87,
	1845, 1846, 1381, 87, 1382, 131, 2484, 132, 1160, 2487,
	474, 473, 2490, 2452, 2703, 3510, 2383, 2384, 986, 3510,
	1168, 521, 1459, 477, 1059, 1060, 3083, 3084, 3086, 3087,
	3088, 2118, 2119, 2222, 1127, 2480, 2426, 2134, 2923, 2379,
	2382, 2383, 2384, 2380, 2433, 2381, 2386, 2921, 2211, 2965,
	2966, 2033, 2126, 2128, 87, 2127, 2210, 449, 2123, 1082,
	577, 576, 579, 580, 581, 582, 2123, 472, 452, 578,
	1984, 2797, 2798, 1908, 2141, 86, 515, 86, 1824, 2735,
	3514, 516, 3615, 2755, 3514, 3616, 516, 3617, 1181, 522,
	2430, 3149, 1094, 518, 517, 1093, 2566, 537, 1890, 1889,
	2523, 1096, 1007, 1888, 514, 1095, 1887, 3761, 141, 1886,
	2790, 1885, 2553, 1050, 2242, 2243, 2244, 2245, 3670, 1098,
	1083, 1084, 1164, 1165, 3277, 1007, 1089, 3102, 3103, 3104,
	3105, 1460, 2379, 2382, 2383, 2384, 2380, 3096, 2381, 2386,
	2856, 2429, 3481, 2558, 86, 3099, 2236, 1157, 1202, 3563,
	3562, 1007, 1143, 3249, 1460, 1214, 2838, 3614, 1062, 3097,
	3098, 3483, 2829, 3760, 1134, 127, 3358, 141, 2832, 2833,
	2834, 2835, 2836, 3368, 1278, 1280, 3113, 3122, 1282, 2237,
	1460, 1175, 3570, 1877, 1176, 2525, 1073, 2176, 1074, 1076,
	1077, 2832, 2833, 2834, 2835, 2836, 3111, 3811, 3785, 2434,
	3692, 3810, 3784, 3748, 3781, 2480, 3711, 1294, 3245, 2440,
	1297, 1298, 1299, 1300, 1301, 3366, 1306, 531, 141, 2762,
	2763, 499, 3267, 493, 504, 486, 2764, 2841, 1143, 122,
	3243, 3610, 141, 2483, 1475, 3242, 537, 2527, 2479, 3608,
	3609, 460, 1244, 453, 2432, 494, 1484, 1485, 1483, 133,
	3700, 3587, 3241, 1056, 3240, 3239, 3237, 1017, 1167, 1307,
	1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317,
	1318, 1319, 1320, 3238, 1323, 1324, 1327, 1327, 1327, 1333,
	1327, 1327, 1333, 1327, 1333, 1342, 1343, 1344, 1345, 1346,
	1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356,
	1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366,
	1367, 1368, 1369, 1370, 2444, 3360, 116, 1198, 2991, 3024,
	3354, 3355, 3081, 87, 1071, 463, 3419, 1248, 116, 3532,
	3533, 3301, 1186, 3183, 476, 123, 1906, 2627, 2709, 121,
	3350, 2451, 2734, 1068, 1144, 1151, 1152, 1154, 1155, 1156,
	1279, 1158, 1159, 2437, 1161, 1162, 1163, 2993, 1166, 2815,
	1169, 1170, 1171, 1172, 1173, 2858, 2230, 3197, 3390, 464,
	2493, 3195, 2446, 1825, 1329, 1331, 1847, 1335, 1337, 1067,
	1340, 1907, 142, 3693, 3511, 3198, 143, 2733, 3511, 144,
	145, 2497, 2385, 1909, 2143, 146, 485, 484, 487, 2125,
	1845, 1846, 538, 3264, 2427, 142, 492, 538, 2529, 143,
	98, 79, 144, 145, 2480, 1097, 1142, 2385, 146, 2629,
	1135, 1090, 1088, 496, 538, 3762, 538, 3642, 500, 1196,
	3246, 142, 2423, 3482, 118, 143, 1143, 1177, 144, 145,
	2792, 2795, 461, 503, 146, 3365, 2793, 2794, 461, 2425,
	2766, 1213, 3266, 2526, 3359, 1015, 1014, 2840, 1153, 1199,
	2478, 2436, 1066, 3023, 3025, 3026, 3027, 2170, 2171, 2167,
	1238, 1239, 1237, 3709, 2543, 2544, 3704, 1069, 1070, 107,
	2765, 1017, 2267, 2261, 2262, 3672, 2260, 2263, 2264, 1240,
	3631, 458, 3707, 1238, 1239, 1237, 3013, 3126, 3127, 3014,
	2166, 3015, 1328, 1330, 1332, 1334, 1336, 1338, 1339, 1341,
	2385, 3332, 1240, 1783, 3767, 491, 2115, 3338, 1820, 3792,
	1192, 2424, 2428, 2431, 2270, 2435, 2438, 2439, 2441, 2442,
	2443, 2445, 2447, 2448, 2449, 2450, 1849, 1007, 2269, 2268,
	118, 2113, 1191, 1187, 1188, 1189, 1190, 1193, 1194, 1195,
	1197, 488, 489, 490, 497, 1855, 501, 502, 505, 1007,
	2584, 1150, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 2879,
	461, 1007, 2775, 1851, 997, 3818, 1850, 1007, 916, 109,
	3210, 2113, 3813, 916, 2397, 2399, 3370, 2631, 2596, 120,
	119, 3798, 2635, 3772, 2630, 3212, 2628, 1012, 1030, 3136,
	141, 2633, 533, 1139, 3137, 2115, 2854, 2552, 2548, 1000,
	2115, 2531, 2530, 2231, 2632, 1882, 1489, 1487, 1091, 2161,
	1009, 2716, 2115, 1148, 2715, 2714, 2115, 1008, 2546, 2634,
	2636, 1211, 1020, 414, 3140, 116, 1284, 1285, 1283, 1281,
	2960, 2322, 2909, 2319, 2723, 117, 121, 2550, 2186, 3363,
	2464, 506, 1479, 2185, 87, 2549, 2422, 2416, 2301, 2290,
	2252, 2168, 2114, 2092, 1149, 2082, 1145, 1922, 2591, 2584,
	506, 1502, 1393, 2588, 461, 3716, 2587, 2590, 1455, 1456,
	1457, 1458, 1384, 3706, 3708, 1286, 111, 1385, 112, 3765,
	1392, 1269, 3766, 1296, 3764, 120, 119, 1374, 3619, 1295,
	1146, 1147, 1000, 141, 1249, 1125, 1042, 2408, 2869, 1085,
	2870, 3385, 509, 509, 3211, 2398, 509, 1286, 86, 1259,
	1371, 1372, 1269, 141, 2266, 2851, 141, 1816, 1138, 3588,
	3589, 509, 509, 3585, 3586, 1094, 141, 3163, 1093, 1397,
	3046, 1789, 1789, 1807, 1096, 1478, 2603, 2371, 1095, 1482,
	1462, 2114, 141, 141, 141, 141, 2114, 141, 2584, 2595,
	1915, 3565, 1007, 2592, 1283, 2585, 2113, 1505, 2114, 2871,
	3135, 506, 2114, 3395, 3394, 509, 2197, 3253, 1240, 141,
	2573, 3412, 2574, 2570, 104, 2571, 1791, 2255, 3141, 1260,
	1261, 1262, 1263, 1264, 1265, 1266, 1259, 1064, 1838, 1269,
	1802, 3047, 1803, 1804, 1805, 1237, 1875, 1055, 1814, 1284,
	1285, 1284, 1285, 3254, 1394, 2650, 1078, 2962, 2961, 1000,
	1491, 2959, 1240, 1467, 1466, 3775, 3745, 3774, 1480, 103,
	1474, 2565, 509, 509, 509, 86, 2564, 1000, 3566, 495,
	86, 2575, 1481, 1808, 2572, 1956, 108, 1498, 1810, 2563,
	1811, 1499, 2024, 2562, 1836, 537, 1238, 1239, 1237, 1790,
	1954, 1955, 1953, 1793, 1795, 1796, 1469, 1858, 509, 1834,
	102, 1390, 1101, 509, 509, 1240, 2198, 1911, 1110, 1111,
	1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121,
	1023, 1821, 1856, 1022, 141, 1822, 1000, 1065, 2024, 1234,
	2335, 86, 1826, 3796, 1054, 141, 3771, 1881, 1829, 1830,
	3694, 3650, 1832, 1080, 3637, 3112, 1853, 1942, 3106, 1087,
	3668, 537, 1029, 1238, 1239, 1237, 1980, 1306, 1835, 141,
	1950, 1920, 1921, 1880, 3802, 2905, 1244, 2314, 1857, 2313,
	1854, 3142, 1240, 1983, 1985, 2218, 3538, 537, 3649, 1976,
	3648, 1982, 1239, 1237, 1913, 1876, 1913, 2784, 1879, 1238,
	1239, 1237, 3793, 1989, 1991, 1934, 1936, 1937, 3644, 2000,
	1240, 87, 3528, 1935, 1947, 1000, 1224, 1000, 1240, 1225,
	1000, 1898, 3728, 1952, 2009, 2012, 3486, 1000, 3478, 1000,
	1000, 1941, 2025, 2068, 3413, 1238, 1239, 1237, 1905, 141,
	1903, 1859, 3325, 1902, 1862, 1863, 1864, 1904, 1866, 1867,
	1891, 3261, 1868, 1198, 1240, 1973, 1869, 1974, 3794, 1870,
	548, 1248, 3479, 1871, 1872, 3361, 1873, 1874, 3260, 3538,
	2091, 3604, 3259, 3603, 1938, 3680, 1000, 1000, 1262, 1263,
	1264, 1265, 1266, 1259, 1924, 3258, 1269, 916, 1951, 1032,
	1033, 1034, 1035, 1036, 1037, 1038, 2062, 1238, 1239, 1237,
	2096, 2287, 2288, 2289, 3252, 141, 141, 141, 3754, 1925,
	3480, 3031, 1926, 3362, 2098, 3071, 1240, 3070, 3019, 1813,
	1267, 1268, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1259,
	1000, 2038, 1269, 2040, 3009, 1988, 3029, 3002, 1992, 1993,
	1994, 1995, 1996, 2867, 1258, 1257, 1267, 1268, 1260, 1261,
	1262, 1263, 1264, 1265, 1266, 1259, 2787, 1947, 1269, 3032,
	2504, 2021, 2183, 1257, 1267, 1268, 1260, 1261, 1262, 1263,
	1264, 1265, 1266, 1259, 2097, 2502, 1269, 2491, 2414, 3624,
	2415, 3623, 2027, 1133, 3030, 2104, 1132, 3567, 2150, 2151,
	2152, 2153, 1238, 1239, 1237, 3564, 2137, 2138, 2139, 3492,
	3800, 3357, 1105, 2084, 2076, 2080, 2083, 3805, 2072, 2089,
	3356, 1240, 3337, 3268, 141, 995, 104, 3236, 2099, 2326,
	141, 141, 509, 509, 509, 2101, 1104, 141, 2146, 2147,
	2148, 2149, 3205, 2124, 3204, 2129, 2130, 2131, 2132, 2133,
	3190, 3159, 2206, 2930, 3109, 3108, 3107, 3069, 3028, 3020,
	3012, 2142, 2154, 2155, 2156, 2181, 2182, 2397, 2399, 3010,
	1258, 1257, 1267, 1268, 1260, 1261, 1262, 1263, 1264, 1265,
	1266, 1259, 3006, 3005, 1269, 2112, 3004, 2868, 1218, 577,
	576, 579, 580, 581, 582, 2866, 2865, 2864, 578, 1984,
	1948, 2803, 2606, 1957, 1958, 1959, 1960, 1961, 1962, 1963,
	1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 2162, 2605,
	2164, 2576, 1258, 1257, 1267, 1268, 1260, 1261, 1262, 1263,
	1264, 1265, 1266, 1259, 2500, 2985, 1269, 1258, 1257, 1267,
	1268, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1259, 2219,
	2192, 1269, 1831, 1258, 1257, 1267, 1268, 1260, 1261, 1262,
	1263, 1264, 1265, 1266, 1259, 1785, 2015, 1269, 1784, 3410,
	577, 576, 579, 580, 581, 582, 2028, 1210, 1218, 578,
	1984, 1139, 3817, 3816, 1977, 1258, 1257, 1267, 1268, 1260,
	1261, 1262, 1263, 1264, 1265, 1266, 1259, 3801, 2398, 1269,
	1238, 1239, 1237, 3786, 1238, 1239, 1237, 3780, 3652, 2001,
	2002, 2003, 3607, 3720, 3712, 2007, 2008, 2011, 2014, 1240,
	2019, 2020, 1203, 1240, 3620, 3601, 2026, 1258, 1257, 1267,
	1268, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1259, 2505,
	3600, 1269, 3756, 3555, 3554, 3548, 2031, 3547, 2034, 2035,
	3367, 3285, 443, 2039, 2464, 2041, 2042, 3279, 1238, 1239,
	1237, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055,
	2056, 2057, 2058, 3133, 2942, 2899, 2895, 1240, 1253, 2881,
	1256, 2940, 2842, 2538, 2537, 3551, 1333, 1270, 1271, 1272,
	1273, 1274, 1275, 1276, 2315, 1254, 1255, 1252, 2212, 2194,
	2193, 1975, 1828, 1823, 1497, 1258, 1257, 1267, 1268, 1260,
	1261, 1262, 1263, 1264, 1265, 1266, 1259, 1496, 1228, 1269,
	2221, 1470, 1468, 1128, 1051, 471, 479, 141, 1250, 3219,
	1218, 1258, 1257, 1267, 1268, 1260, 1261, 1262, 1263, 1264,
	1265, 1266, 1259, 2215, 2317, 1269, 2299, 1218, 1238, 1239,
	1237, 141, 141, 141, 420, 3538, 1238, 1239, 1237, 1490,
	1238, 1239, 1237, 2249, 2652, 3219, 3646, 1240, 3037, 3629,
	3498, 1218, 1304, 3592, 1218, 1240, 3037, 3573, 2195, 1240,
	3037, 3494, 3219, 3400, 3037, 3348, 141, 2078, 141, 1174,
	2199, 2203, 1000, 2299, 1218, 2204, 1218, 1000, 3278, 511,
	2078, 423, 3219, 3315, 3219, 3218, 3172, 1218, 2251, 1218,
	433, 441, 442, 2291, 3037, 3036, 2813, 2812, 2809, 2810,
	1000, 2809, 2808, 1000, 2374, 1218, 2233, 2232, 3229, 1322,
	1998, 2216, 1998, 1218, 1396, 1395, 3228, 2536, 2944, 2536,
	1942, 2958, 2174, 2079, 2821, 2081, 2373, 429, 2939, 3673,
	431, 2806, 2805, 439, 440, 2804, 2079, 1000, 1783, 90,
	2403, 3635, 1783, 2958, 2228, 2214, 1917, 1179, 1178, 1136,
	3166, 1137, 1137, 2220, 1998, 2374, 2189, 2975, 2822, 2811,
	2929, 1950, 2227, 2173, 2604, 2577, 2374, 2235, 2561, 2085,
	2238, 2299, 2341, 2340, 2374, 1833, 2958, 1947, 1258, 1257,
	1267, 1268, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1259,
	2191, 2208, 1269, 2299, 2097, 2188, 1918, 1916, 1200, 2248,
	1878, 436, 1842, 1783, 1488, 1139, 1486, 1378, 87, 1217,
	987, 2928, 3529, 3495, 2974, 3381, 3282, 3180, 2072, 2391,
	3073, 2121, 437, 2145, 2400, 2401, 2279, 2396, 2068, 2277,
	2278, 2068, 2965, 2966, 2972, 2123, 2783, 2141, 2454, 537,
	1143, 2169, 2136, 2135, 2927, 1463, 2296, 1124, 2159, 2207,
	1048, 1047, 3791, 3789, 2234, 430, 2302, 3732, 2286, 2292,
	1258, 1257, 1267, 1268, 1260, 1261, 1262, 1263, 1264, 1265,
	1266, 1259, 87, 3730, 1269, 3685, 2968, 2944, 2820, 1951,
	2506, 1852, 1493, 916, 141, 1180, 1140, 2971, 2702, 2970,
	2696, 2404, 141, 2701, 2405, 141, 421, 2699, 2697, 448,
	2695, 141, 2700, 2698, 141, 141, 141, 543, 544, 2387,
	3583, 1258, 1257, 1267, 1268, 1260, 1261, 1262, 1263, 1264,
	1265, 1266, 1259, 3503, 2334, 1269, 2607, 2276, 1232, 1233,
	435, 424, 425, 3557, 446, 1928, 3575, 1505, 426, 428,
	3169, 422, 445, 444, 1258, 1257, 1267, 1268, 1260, 1261,
	1262, 1263, 1264, 1265, 1266, 1259, 2213, 1230, 1269, 450,
	451, 2284, 2254, 2402, 2283, 3306, 3132, 3372, 3040, 506,
	2542, 2894, 3558, 2893, 2463, 2465, 2802, 2801, 2800, 2409,
	2453, 2466, 2406, 1000, 2458, 141, 438, 1384, 2777, 1462,
	3375, 3491, 1000, 1000, 2072, 3490, 3272, 509, 2417, 3270,
	86, 3353, 3352, 2072, 470, 1827, 2072, 3255, 3256, 2999,
	2602, 2601, 141, 509, 1221, 1789, 2788, 2736, 2253, 1391,
	537, 1122, 1106, 1103, 3749, 1222, 1102, 1052, 3289, 2501,
	1478, 509, 3288, 1210, 3164, 2503, 1920, 1921, 2163, 1492,
	3114, 3674, 2494, 2495, 2496, 2498, 2533, 3115, 3484, 2524,
	2568, 1000, 3274, 3045, 1100, 509, 2819, 1000, 1232, 1233,
	540, 104, 2160, 509, 1892, 1215, 1216, 2540, 1184, 2282,
	3656, 3655, 3654, 3233, 2247, 1000, 1000, 2281, 2459, 1081,
	2462, 3569, 3568, 2293, 2294, 2295, 2534, 3502, 2612, 3488,
	3404, 3376, 3305, 2346, 2348, 2547, 2728, 541, 2657, 1942,
	2354, 2355, 2356, 2357, 141, 2545, 90, 2539, 3501, 3387,
	2536, 3621, 1794, 3144, 1000, 2554, 3734, 3733, 2551, 2861,
	2559, 2679, 2681, 2560, 2557, 2068, 2068, 2068, 2068, 2068,
	2511, 2512, 2513, 3733, 2586, 1812, 2597, 2598, 2556, 2582,
	2600, 537, 2391, 2705, 2710, 2327, 2328, 2329, 2649, 2567,
	2581, 2712, 2323, 2320, 2068, 2239, 1947, 1809, 1235, 2613,
	1898, 1046, 537, 2680, 1045, 3734, 2637, 3397, 2799, 2639,
	2617, 1000, 2684, 2619, 2303, 2304, 2305, 2306, 2307, 1914,
	987, 1304, 2614, 535, 2000, 2638, 3438, 58, 3440, 22,
	3439, 21, 3441, 23, 3442, 24, 3436, 17, 141, 141,
	141, 141, 141, 2332, 3435, 16, 2713, 3434, 15, 3437,
	18, 141, 3433, 14, 2612, 141, 3759, 2720, 92, 141,
	61, 2719, 3556, 2721, 2722, 3427, 10, 141, 2785, 2579,
	2589, 2594, 2796, 3462, 38, 3460, 36, 3459, 35, 1,
	1000, 3458, 31, 2229, 2665, 2666, 2667, 2668, 2669, 2670,
	2671, 2672, 2673, 2674, 2675, 2704, 1860, 2691, 2692, 3094,
	2694, 2690, 3457, 30, 2693, 3456, 29, 3093, 2717, 3100,
	2789, 3453, 26, 3452, 25, 2768, 3455, 27, 1000, 3432,
	13, 2827, 2727, 3429, 12, 3428, 11, 506, 2837, 3426,
	9, 2830, 2522, 3110, 1930, 1931, 1932, 1476, 3244, 1026,
	2072, 2072, 2072, 2072, 2072, 2776, 2769, 2778, 2172, 1129,
	2848, 3489, 3371, 3373, 3269, 3117, 3078, 2072, 3077, 2516,
	2515, 2779, 2780, 2781, 1123, 2782, 1840, 2580, 2583, 2072,
	141, 2184, 2265, 2823, 2246, 2541, 2240, 1185, 2154, 2105,
	2156, 3595, 3323, 1000, 1000, 1000, 3192, 2791, 2992, 509,
	2988, 2418, 2839, 3021, 141, 509, 2100, 3518, 989, 100,
	2196, 1063, 427, 1304, 2102, 2475, 3374, 1126, 2005, 2006,
	141, 2474, 509, 2489, 1000, 2117, 509, 1205, 1209, 2473,
	509, 509, 2472, 509, 3369, 2476, 1402, 1400, 2844, 1401,
	1399, 1404, 1403, 3727, 3641, 432, 1386, 3542, 2941, 2935,
	2846, 1236, 2876, 588, 115, 3134, 2658, 2659, 2660, 2661,
	2662, 2884, 2889, 1000, 2807, 2593, 519, 141, 1000, 520,
	2863, 2876, 2906, 105, 1000, 113, 2616, 1000, 1000, 2949,
	86, 2878, 2850, 2872, 1927, 434, 2855, 1277, 2898, 2280,
	2859, 2860, 2877, 2862, 2410, 914, 915, 2095, 2640, 2641,
	537, 2642, 2643, 907, 2272, 2644, 1201, 3393, 3576, 3632,
	2977, 3531, 1226, 2904, 3578, 2981, 2982, 2983, 1462, 2653,
	2654, 3500, 2950, 2945, 3386, 2333, 2684, 1321, 2022, 561,
	2708, 3162, 3580, 1933, 575, 574, 2948, 2916, 2917, 573,
	2918, 570, 571, 2920, 3512, 2922, 2886, 2891, 2919, 1923,
	2676, 2957, 1251, 1000, 2814, 1000, 2910, 2911, 2912, 2913,
	2914, 1183, 550, 2066, 2059, 2217, 2378, 2976, 2376, 2375,
	2157, 1494, 2980, 1375, 2967, 2963, 2389, 2070, 2065, 2069,
	2718, 42, 2952, 3143, 1000, 2986, 1079, 2609, 2936, 2987,
	2647, 3299, 2969, 3050, 3052, 3054, 3055, 2285, 94, 534,
	545, 28, 20, 19, 2258, 1024, 44, 2978, 3003, 46,
	47, 2510, 2768, 2165, 3541, 3702, 3011, 1109, 3719, 86,
	2768, 3743, 37, 34, 33, 1997, 1999, 3075, 32, 3048,
	3454, 3448, 3447, 2004, 2997, 3450, 3449, 3446, 1898, 537,
	3451, 3445, 3444, 2769, 2994, 2995, 2996, 3443, 3461, 3431,
	3430, 2769, 3687, 3686, 4, 1212, 85, 1000, 39, 985,
	2, 3074, 0, 0, 3016, 3017, 3018, 0, 0, 0,
	3041, 2036, 2037, 0, 3033, 0, 0, 0, 2043, 2044,
	2045, 2046, 0, 3038, 3039, 3035, 0, 0, 0, 3090,
	3091, 3092, 0, 0, 141, 3057, 1000, 0, 1258, 1257,
	1267, 1268, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1259,
	0, 0, 1269, 0, 0, 0, 3089, 0, 3119, 0,
	0, 0, 0, 3121, 0, 0, 0, 0, 509, 0,
	0, 0, 2848, 0, 3130, 509, 0, 0, 0, 0,
	3128, 3129, 3118, 3148, 0, 0, 0, 2876, 0, 0,
	0, 0, 3145, 3146, 0, 0, 0, 2612, 0, 0,
	3116, 0, 0, 0, 3124, 0, 0, 0, 0, 3138,
	0, 3131, 0, 2876, 0, 0, 0, 0, 0, 0,
	2776, 0, 0, 1000, 0, 0, 0, 0, 3120, 0,
	3139, 3194, 3196, 0, 2908, 3123, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2684, 0, 0,
	0, 0, 0, 2154, 0, 0, 0, 0, 3049, 3051,
	3053, 0, 0, 3173, 2932, 2933, 2934, 1229, 141, 3182,
	0, 0, 0, 0, 0, 3165, 3187, 3188, 3189, 3185,
	0, 3174, 0, 0, 0, 0, 3221, 3191, 1000, 0,
	0, 0, 0, 0, 0, 1000, 1000, 1000, 0, 1327,
	1327, 1327, 1333, 1327, 1327, 1333, 1327, 1333, 1342, 1343,
	3202, 3186, 0, 0, 2768, 0, 0, 0, 136, 0,
	0, 0, 3231, 0, 447, 0, 0, 0, 0, 136,
	2979, 0, 467, 0, 0, 0, 0, 0, 0, 0,
	3200, 0, 0, 3203, 3232, 2769, 0, 528, 0, 0,
	0, 1000, 0, 3230, 0, 0, 0, 0, 3208, 3214,
	3215, 549, 0, 0, 3234, 0, 3213, 924, 0, 0,
	136, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3290, 0, 2068, 0, 1000, 0, 0,
	136, 0, 0, 3216, 3217, 3235, 0, 1329, 1331, 0,
	1335, 1337, 136, 1340, 3044, 0, 0, 2949, 0, 0,
	2949, 3311, 3247, 0, 0, 3056, 3257, 0, 3262, 0,
	3276, 0, 0, 0, 2977, 0, 0, 3265, 3275, 0,
	2396, 537, 3318, 0, 0, 0, 3327, 0, 3329, 3330,
	3331, 3280, 3281, 0, 0, 0, 0, 3294, 3293, 0,
	3287, 1000, 3291, 3310, 0, 0, 0, 0, 141, 0,
	0, 3308, 0, 0, 2948, 1228, 0, 2948, 3304, 3307,
	0, 0, 0, 86, 3313, 3314, 0, 0, 0, 0,
	3317, 3316, 0, 3334, 3283, 3284, 1000, 0, 0, 0,
	0, 0, 0, 537, 1000, 0, 0, 0, 141, 0,
	141, 0, 0, 3351, 3326, 0, 3328, 0, 2768, 0,
	2768, 0, 0, 0, 0, 3349, 0, 0, 0, 0,
	3335, 0, 0, 0, 2768, 1328, 1330, 1332, 1334, 1336,
	1338, 1339, 1341, 1000, 0, 0, 0, 0, 0, 2769,
	0, 2769, 0, 3333, 0, 2308, 3150, 3151, 3152, 3153,
	2949, 0, 86, 0, 3157, 2769, 0, 0, 3160, 3161,
	2072, 0, 3379, 3402, 3403, 0, 0, 0, 0, 0,
	0, 2336, 537, 0, 3378, 0, 0, 0, 0, 2209,
	3380, 3388, 0, 0, 0, 0, 0, 0, 509, 0,
	0, 0, 86, 0, 3399, 0, 1000, 3418, 0, 3396,
	0, 3398, 0, 0, 0, 0, 0, 2948, 0, 3409,
	0, 0, 0, 0, 0, 0, 0, 0, 3401, 0,
	0, 3377, 3406, 0, 3408, 0, 3411, 0, 0, 0,
	0, 0, 0, 0, 2646, 0, 0, 0, 0, 0,
	0, 1000, 0, 1000, 0, 1000, 0, 0, 0, 0,
	0, 0, 141, 3487, 0, 0, 2250, 0, 3420, 3485,
	0, 3496, 0, 0, 0, 0, 0, 0, 3534, 0,
	0, 0, 0, 3515, 2271, 0, 0, 0, 0, 0,
	0, 3522, 136, 3516, 3521, 0, 2684, 0, 0, 0,
	3520, 3530, 3334, 0, 0, 1000, 0, 0, 0, 1000,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	86, 0, 86, 0, 0, 0, 1000, 0, 86, 0,
	0, 0, 3222, 0, 3223, 0, 3224, 3226, 0, 0,
	0, 3552, 0, 0, 0, 0, 0, 3561, 2298, 0,
	2300, 136, 1258, 1257, 1267, 1268, 1260, 1261, 1262, 1263,
	1264, 1265, 1266, 1259, 3546, 0, 1269, 0, 3584, 3571,
	0, 0, 0, 2309, 2310, 2311, 2312, 0, 0, 3597,
	2316, 2318, 3574, 0, 2321, 3572, 0, 2324, 2325, 3599,
	1000, 0, 2330, 2331, 0, 0, 0, 0, 2337, 2338,
	0, 2339, 528, 3590, 2342, 2343, 0, 2344, 2345, 0,
	0, 2349, 2350, 2351, 2352, 2353, 528, 0, 0, 1000,
	2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367,
	2368, 2369, 506, 3628, 3598, 3593, 3602, 0, 0, 3605,
	0, 0, 0, 0, 0, 0, 0, 0, 3630, 0,
	3343, 0, 0, 1000, 0, 86, 0, 3611, 86, 0,
	0, 0, 2645, 0, 86, 86, 86, 86, 0, 86,
	86, 0, 0, 86, 3651, 3640, 2848, 3653, 3647, 0,
	0, 0, 0, 0, 3662, 3663, 3664, 3657, 0, 3667,
	3520, 0, 2651, 0, 509, 3679, 0, 3677, 0, 0,
	86, 1000, 3645, 86, 3671, 3605, 86, 0, 3675, 0,
	3658, 0, 0, 0, 1000, 3691, 1000, 3382, 0, 3695,
	3699, 1000, 3697, 3722, 3690, 2657, 537, 0, 3689, 0,
	3660, 2091, 506, 3721, 3726, 3660, 1000, 3710, 3724, 3660,
	3723, 3688, 3729, 86, 3735, 3731, 0, 86, 3701, 86,
	3737, 0, 0, 86, 0, 0, 0, 0, 0, 0,
	0, 0, 3736, 141, 86, 86, 86, 86, 0, 86,
	1258, 1257, 1267, 1268, 1260, 1261, 1262, 1263, 1264, 1265,
	1266, 1259, 0, 0, 1269, 0, 3753, 0, 3768, 86,
	0, 86, 0, 86, 509, 0, 0, 1000, 3776, 0,
	3778, 0, 141, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3773, 3660, 0, 3660, 0, 141, 0, 3746,
	86, 0, 0, 0, 0, 0, 86, 0, 0, 0,
	3660, 3660, 3660, 586, 86, 3660, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3799, 0, 0, 86, 0,
	0, 86, 0, 0, 0, 3660, 0, 3660, 0, 86,
	0, 0, 0, 0, 0, 0, 86, 0, 0, 0,
	3809, 0, 0, 0, 0, 2620, 2621, 2622, 2623, 2624,
	2625, 0, 0, 0, 0, 0, 3660, 0, 0, 0,
	0, 0, 0, 2845, 0, 0, 0, 0, 466, 0,
	3660, 0, 0, 0, 0, 3559, 0, 0, 0, 0,
	2615, 0, 0, 0, 3660, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3660, 0, 0, 0, 0,
	0, 0, 3660, 923, 0, 0, 0, 992, 1258, 1257,
	1267, 1268, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1259,
	0, 0, 1269, 0, 0, 0, 2900, 0, 0, 1031,
	0, 2706, 2707, 0, 0, 0, 0, 548, 0, 0,
	2452, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2297, 0, 1377, 0, 0, 924, 0, 0,
	0, 0, 924, 2426, 0, 0, 0, 0, 0, 560,
	0, 2433, 0, 0, 0, 0, 0, 0, 0, 2938,
	1258, 1257, 1267, 1268, 1260, 1261, 1262, 1263, 1264, 1265,
	1266, 1259, 0, 0, 1269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2420, 1258, 1257, 1267, 1268, 1260,
	1261, 1262, 1263, 1264, 1265, 1266, 1259, 2430, 0, 1269,
	137, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 137, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2421, 529,
	0, 0, 0, 0, 0, 0, 0, 136, 0, 0,
	0, 0, 1473, 467, 0, 0, 0, 0, 2429, 925,
	0, 0, 137, 993, 0, 0, 0, 136, 0, 0,
	136, 0, 0, 1473, 467, 0, 0, 0, 0, 0,
	1504, 0, 137, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 137, 0, 136, 136, 136, 136,
	0, 136, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3757, 0, 0, 0, 0, 2434, 0, 0, 0,
	0, 0, 0, 1817, 0, 0, 2440, 0, 0, 0,
	0, 2256, 2257, 0, 0, 0, 0, 0, 3779, 0,
	0, 0, 0, 0, 0, 0, 2907, 0, 0, 0,
	3790, 0, 0, 0, 0, 0, 0, 0, 0, 2915,
	0, 2432, 0, 0, 0, 0, 0, 0, 0, 0,
	2924, 2925, 2926, 0, 0, 0, 0, 2931, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2071, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2951, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2444, 0, 0, 0, 0, 0, 0, 528, 0,
	0, 0, 0, 0, 0, 0, 135, 0, 0, 136,
	2984, 0, 0, 0, 0, 0, 0, 457, 2451, 0,
	0, 0, 0, 0, 0, 0, 1304, 0, 0, 0,
	2437, 0, 0, 136, 0, 0, 3175, 3176, 3177, 3178,
	0, 0, 3179, 0, 0, 3181, 0, 1504, 0, 2446,
	0, 0, 0, 0, 1304, 0, 0, 0, 988, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1025, 0,
	1981, 2427, 0, 0, 0, 0, 0, 0, 0, 0,
	1041, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 528, 0, 1981, 1981, 1981, 0, 2423,
	0, 1981, 1981, 1981, 1981, 0, 1981, 1981, 0, 0,
	0, 924, 1981, 0, 0, 0, 2425, 0, 0, 0,
	0, 0, 0, 0, 137, 0, 0, 0, 2436, 0,
	0, 0, 1981, 1981, 1981, 1981, 0, 0, 1981, 1981,
	1981, 1981, 1981, 0, 0, 0, 0, 1981, 1981, 1981,
	1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 1981, 136,
	136, 136, 0, 0, 0, 0, 924, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1504, 0, 0, 137, 0, 0, 0, 0, 2424, 2428,
	2431, 0, 2435, 2438, 2439, 2441, 2442, 2443, 2445, 2447,
	2448, 2449, 2450, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 548, 0, 0, 3154, 3155, 3156, 0, 3158,
	0, 0, 0, 0, 0, 0, 2569, 0, 0, 0,
	0, 0, 3167, 3168, 529, 3170, 0, 0, 3171, 2599,
	0, 0, 0, 0, 0, 0, 0, 587, 529, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1245, 0,
	0, 3184, 0, 0, 0, 0, 0, 0, 136, 0,
	0, 0, 0, 0, 136, 136, 0, 0, 0, 0,
	0, 136, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 138, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 138,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2422, 0, 0, 0, 3220, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3225, 3227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	138, 994, 0, 0, 0, 0, 0, 0, 0, 0,
	1044, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	138, 0, 1304, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 138, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2729, 2730, 2731, 2732, 0,
	0, 2737, 2738, 2739, 2740, 2741, 0, 0, 2744, 2745,
	2746, 2747, 2748, 2749, 2750, 2751, 2752, 2753, 2754, 1131,
	2756, 2757, 2758, 2759, 0, 2770, 0, 0, 0, 0,
	0, 0, 0, 3295, 3296, 3297, 3298, 0, 0, 0,
	0, 0, 0, 3302, 3303, 0, 0, 0, 0, 0,
	0, 0, 0, 923, 0, 0, 0, 0, 923, 1387,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3319, 3320, 3321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3344, 3345, 3346, 0, 3347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3535, 3539, 0, 0, 0, 0, 0, 0, 0, 3553,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1464, 0, 0, 0, 0, 0, 1472, 466,
	0, 0, 0, 0, 0, 0, 0, 0, 3579, 3582,
	0, 136, 0, 0, 0, 0, 0, 0, 0, 1472,
	466, 0, 3389, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2200, 2201, 136, 0, 0,
	0, 0, 0, 0, 0, 3606, 0, 0, 0, 3405,
	0, 3407, 0, 0, 0, 0, 137, 0, 0, 925,
	0, 0, 0, 0, 925, 0, 3415, 0, 0, 0,
	136, 0, 528, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 138, 0, 0, 0, 3497, 0, 0, 1839,
	0, 0, 0, 0, 0, 0, 3506, 0, 0, 0,
	0, 0, 3517, 0, 3665, 0, 0, 1861, 0, 3523,
	0, 3524, 3525, 3526, 3527, 0, 0, 0, 0, 0,
	0, 0, 3582, 0, 0, 0, 2998, 1461, 3000, 3001,
	1504, 0, 0, 0, 0, 3007, 3008, 0, 0, 137,
	0, 138, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3717, 0, 0, 0, 0, 0, 137,
	0, 0, 137, 0, 0, 0, 1900, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 137, 137,
	137, 137, 0, 137, 0, 0, 1981, 0, 0, 0,
	1981, 1981, 1981, 1981, 1981, 0, 0, 0, 0, 0,
	0, 0, 0, 1900, 0, 0, 1247, 0, 0, 0,
	0, 3591, 0, 0, 3594, 0, 0, 0, 0, 1981,
	0, 0, 3777, 0, 0, 0, 0, 0, 0, 3782,
	0, 0, 0, 0, 0, 1900, 0, 1900, 0, 0,
	1986, 0, 0, 0, 0, 0, 0, 1987, 0, 1900,
	1900, 0, 0, 0, 0, 0, 0, 0, 136, 0,
	0, 0, 1044, 0, 0, 0, 136, 0, 0, 528,
	0, 1424, 0, 0, 0, 136, 0, 923, 136, 2407,
	1504, 0, 924, 0, 3639, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2029, 2030, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3612, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 0, 1896, 0, 0, 0, 0, 0, 0, 0,
	0, 137, 923, 0, 0, 0, 0, 0, 3682, 0,
	0, 0, 0, 0, 0, 0, 1900, 0, 0, 0,
	992, 0, 0, 0, 0, 137, 0, 0, 0, 136,
	0, 0, 1245, 0, 0, 1465, 0, 0, 0, 1944,
	0, 0, 0, 0, 0, 0, 1411, 0, 0, 0,
	0, 0, 3201, 0, 0, 1044, 136, 0, 1495, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1797, 1798, 1799, 1800, 0, 1801,
	0, 0, 0, 0, 0, 529, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 925, 0, 0, 0, 0, 0, 0,
	3787, 3788, 0, 0, 0, 0, 0, 1792, 1425, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 136, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1981,
	0, 137, 137, 137, 0, 0, 0, 1981, 925, 1504,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1944, 0, 0, 0, 993, 596, 597, 598,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 611, 612, 613, 614, 615, 616, 617, 618,
	619, 620, 621, 622, 623, 624, 625, 626, 627, 628,
	629, 630, 631, 632, 633, 634, 635, 636, 637, 0,
	0, 0, 0, 0, 138, 0, 0, 1910, 0, 0,
	1424, 924, 136, 136, 136, 136, 136, 0, 0, 0,
	0, 0, 0, 0, 0, 528, 0, 0, 0, 136,
	0, 1929, 0, 528, 3336, 0, 0, 0, 1981, 0,
	137, 136, 0, 0, 0, 0, 137, 137, 0, 0,
	0, 0, 0, 137, 1438, 1441, 1442, 1443, 1444, 1445,
	1446, 0, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454,
	0, 1426, 1427, 1428, 1429, 1405, 1409, 1439, 1406, 1412,
	1408, 1410, 1407, 0, 1413, 1414, 1415, 1416, 1417, 1418,
	1419, 1420, 1421, 1422, 1423, 1430, 1431, 1432, 1433, 1434,
	1435, 1436, 1437, 0, 0, 0, 0, 138, 0, 0,
	0, 0, 0, 0, 0, 1411, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 138, 0, 0,
	138, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 136, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 138, 138, 138, 138,
	0, 138, 0, 0, 0, 0, 0, 2061, 136, 2075,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 136, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1425, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1440, 0, 0, 0,
	0, 136, 0, 0, 0, 0, 0, 40, 0, 0,
	0, 0, 2226, 0, 0, 0, 0, 2226, 549, 0,
	0, 64, 0, 0, 0, 0, 0, 83, 0, 0,
	43, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2226, 0, 0, 2226, 0, 0, 2177, 0, 0, 0,
	0, 0, 2179, 2180, 0, 0, 0, 0, 0, 2187,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 87,
	1897, 0, 0, 0, 3470, 0, 0, 2275, 0, 138,
	0, 0, 0, 0, 0, 924, 1900, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3463, 0, 0, 3742,
	3745, 3741, 0, 138, 0, 0, 0, 0, 0, 0,
	1247, 0, 0, 137, 0, 0, 0, 1943, 0, 0,
	0, 0, 0, 1438, 1441, 1442, 1443, 1444, 1445, 1446,
	0, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 137,
	1426, 1427, 1428, 1429, 1405, 1409, 1439, 1406, 1412, 1408,
	1410, 1407, 0, 1413, 1414, 1415, 1416, 1417, 1418, 1419,
	1420, 1421, 1422, 1423, 1430, 1431, 1432, 1433, 1434, 1435,
	1436, 1437, 137, 0, 529, 0, 0, 0, 0, 0,
	0, 0, 45, 80, 49, 48, 51, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3464, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 55, 82, 81, 0, 0, 0,
	0, 50, 0, 0, 0, 0, 0, 0, 136, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 138,
	138, 138, 0, 0, 0, 0, 0, 0, 923, 0,
	0, 0, 1944, 0, 0, 0, 0, 0, 0, 0,
	1943, 0, 0, 0, 994, 0, 0, 0, 0, 0,
	0, 0, 0, 62, 63, 0, 3466, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3475, 3467, 3468, 3469,
	3473, 3474, 3471, 0, 3472, 1440, 3476, 0, 0, 0,
	0, 71, 0, 72, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2507, 0, 0, 0, 0, 77, 0,
	0, 0, 2514, 2518, 0, 0, 0, 0, 53, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 138, 2190,
	0, 0, 0, 0, 138, 138, 0, 0, 0, 0,
	0, 138, 528, 0, 3477, 3465, 924, 59, 60, 66,
	0, 67, 0, 0, 0, 2202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	137, 2226, 0, 0, 0, 0, 0, 2555, 137, 0,
	0, 529, 0, 0, 0, 0, 0, 137, 1131, 0,
	137, 0, 0, 0, 925, 1900, 1900, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2457, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1900, 0, 0, 0, 1981, 0,
	1981, 0, 1981, 1981, 0, 1900, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 137, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2655, 0, 0, 0, 0, 0, 0, 137, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 923, 0, 0,
	0, 52, 54, 0, 0, 0, 0, 79, 0, 0,
	0, 0, 136, 549, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1900, 1896, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 528, 0, 528, 0, 0, 0, 0, 40,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	137, 0, 0, 64, 0, 0, 0, 0, 2773, 83,
	0, 0, 43, 0, 0, 0, 2372, 0, 0, 0,
	0, 1944, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 138, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 87, 0, 0, 0, 0, 3470, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 138, 0, 0,
	0, 0, 0, 2824, 2825, 2826, 0, 0, 3463, 0,
	0, 0, 0, 3814, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2685, 137, 137, 137, 137, 137, 0,
	138, 0, 0, 0, 2853, 0, 0, 529, 0, 0,
	0, 137, 0, 0, 0, 529, 0, 2509, 0, 0,
	0, 0, 0, 137, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 136, 0, 0, 0,
	0, 0, 0, 2892, 2532, 0, 0, 0, 2897, 0,
	0, 0, 0, 0, 2901, 0, 0, 2902, 2903, 0,
	0, 0, 0, 0, 45, 80, 49, 48, 51, 0,
	0, 0, 0, 0, 2774, 0, 0, 0, 0, 3464,
	1943, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 924, 55, 82, 81, 0,
	0, 0, 0, 50, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 137, 0, 0, 0,
	0, 923, 0, 1900, 0, 2956, 2608, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	137, 0, 0, 0, 0, 62, 63, 0, 3466, 0,
	0, 0, 0, 0, 2956, 0, 137, 0, 3475, 3467,
	3468, 3469, 3473, 3474, 3471, 0, 3472, 0, 3476, 0,
	0, 40, 0, 71, 0, 72, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 64, 0, 0, 0, 0,
	0, 83, 0, 0, 43, 2457, 0, 2883, 2888, 0,
	77, 0, 0, 137, 0, 0, 0, 0, 138, 0,
	53, 0, 0, 0, 0, 0, 138, 0, 0, 0,
	0, 0, 0, 0, 0, 138, 0, 3043, 138, 0,
	0, 0, 0, 87, 0, 0, 3477, 3465, 3470, 59,
	60, 66, 0, 67, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3463, 0, 0, 0, 0, 3807, 2518, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2685, 0, 1896,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 138,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 528, 0, 0,
	0, 0, 0, 0, 0, 0, 138, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 45, 80, 49, 48,
	51, 0, 2817, 1900, 0, 0, 0, 0, 0, 0,
	0, 3464, 0, 0, 0, 0, 528, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2843, 0, 55, 82,
	81, 528, 0, 0, 0, 50, 0, 0, 0, 0,
	0, 0, 2849, 0, 0, 0, 0, 0, 0, 1897,
	0, 0, 923, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 52, 54, 0, 0, 0, 3043, 79,
	0, 0, 0, 0, 0, 3043, 3043, 3043, 138, 0,
	137, 0, 0, 0, 0, 0, 0, 62, 63, 2896,
	3466, 0, 0, 0, 0, 0, 0, 0, 0, 1943,
	3475, 3467, 3468, 3469, 3473, 3474, 3471, 0, 3472, 0,
	3476, 0, 0, 0, 0, 71, 0, 72, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2773, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 77, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 53, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2773, 0, 0,
	0, 0, 138, 138, 138, 138, 138, 0, 3477, 3465,
	0, 59, 60, 66, 0, 67, 0, 0, 0, 138,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 138, 0, 0, 0, 40, 0, 0, 0, 0,
	0, 0, 0, 0, 529, 0, 0, 0, 2685, 64,
	0, 0, 0, 0, 0, 83, 0, 0, 43, 0,
	0, 3286, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3312, 87, 0, 0,
	0, 0, 3470, 0, 3043, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3463, 0, 0, 2774, 0, 3803,
	0, 0, 0, 0, 138, 0, 0, 0, 0, 0,
	0, 0, 0, 3339, 0, 0, 3076, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 138, 0,
	0, 0, 0, 2774, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 138, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 52, 54, 0, 0, 0,
	0, 79, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2773, 0, 0, 0,
	45, 80, 49, 48, 51, 2885, 2890, 0, 0, 0,
	0, 138, 0, 0, 0, 3464, 0, 0, 0, 0,
	0, 0, 0, 0, 137, 0, 0, 0, 0, 0,
	0, 0, 55, 82, 81, 0, 0, 0, 0, 50,
	0, 3043, 0, 3043, 0, 3043, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 529, 0, 529, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 62, 63, 0, 3466, 2773, 0, 1897, 0, 3499,
	0, 0, 0, 0, 3475, 3467, 3468, 3469, 3473, 3474,
	3471, 923, 3472, 0, 3476, 0, 1900, 0, 0, 71,
	0, 72, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 40, 0, 0, 77, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 53, 64, 0, 0,
	0, 0, 2774, 83, 0, 0, 43, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1900, 0, 3477, 3465, 0, 59, 60, 66, 0, 67,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 87, 0, 0, 0, 2773,
	3470, 0, 0, 0, 0, 0, 0, 0, 137, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3463, 0, 0, 0, 0, 3795, 138, 0,
	0, 0, 0, 3043, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2774, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2685, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3634, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3638, 0, 1900, 0, 0, 0,
	0, 3043, 0, 0, 0, 0, 0, 0, 45, 80,
	49, 48, 51, 0, 0, 0, 1900, 0, 0, 0,
	0, 0, 0, 3464, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	55, 82, 81, 0, 0, 0, 0, 50, 0, 52,
	54, 0, 0, 0, 0, 79, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2774, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3634, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 62,
	63, 0, 3466, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3475, 3467, 3468, 3469, 3473, 3474, 3471, 0,
	3472, 0, 3476, 0, 0, 0, 0, 71, 0, 72,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3414, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 77, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 53, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3477, 3465, 0, 59, 60, 66, 0, 67, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 529,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 529, 0,
	0, 0, 138, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 529, 0, 0, 0, 0, 0, 0,
	0, 883, 0, 380, 645, 887, 730, 753, 896, 759,
	761, 824, 706, 801, 306, 750, 707, 0, 0, 698,
	554, 699, 731, 223, 553, 857, 802, 885, 787, 817,
	827, 222, 209, 794, 793, 874, 742, 741, 822, 870,
	884, 0, 0, 653, 269, 0, 0, 405, 362, 289,
	0, 0, 785, 0, 638, 639, 770, 826, 718, 813,
	889, 751, 818, 890, 87, 0, 1218, 0, 0, 468,
	577, 576, 579, 580, 581, 582, 0, 0, 148, 578,
	583, 584, 585, 0, 780, 823, 901, 697, 551, 568,
	702, 652, 0, 875, 738, 739, 227, 52, 54, 0,
	0, 0, 0, 79, 783, 800, 842, 767, 399, 829,
	838, 852, 760, 324, 242, 0, 0, 0, 0, 565,
	566, 1979, 0, 0, 0, 668, 0, 567, 0, 712,
	563, 596, 597, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 620, 621, 622, 623, 624,
	625, 626, 627, 628, 629, 630, 631, 632, 633, 634,
	635, 636, 637, 569, 0, 0, 138, 717, 695, 736,
	844, 696, 694, 290, 709, 641, 873, 768, 258, 165,
	879, 766, 666, 832, 713, 861, 754, 266, 711, 166,
	708, 714, 752, 301, 841, 847, 650, 169, 268, 858,
	732, 745, 210, 0, 336, 819, 398, 557, 238, 805,
	335, 270, 391, 833, 881, 397, 755, 374, 406, 410,
	234, 788, 201, 359, 225, 219, 737, 851, 701, 243,
	323, 214, 262, 771, 825, 733, 206, 836, 812, 863,
	358, 388, 171, 286, 389, 409, 189, 381, 287, 294,
	203, 205, 204, 183, 352, 387, 195, 208, 859, 846,
	865, 728, 715, 720, 716, 744, 882, 252, 244, 866,
	864, 746, 310, 192, 798, 791, 784, 654, 401, 897,
	221, 848, 403, 155, 347, 346, 758, 251, 849, 156,
	147, 331, 157, 259, 174, 869, 412, 188, 264, 382,
	556, 237, 300, 212, 821, 311, 743, 168, 327, 282,
	284, 281, 285, 241, 151, 158, 845, 329, 349, 386,
	190, 365, 149, 150, 152, 160, 339, 161, 162, 888,
	276, 229, 233, 245, 256, 820, 334, 366, 404, 814,
	185, 338, 367, 378, 368, 371, 369, 370, 341, 177,
	373, 396, 196, 348, 351, 411, 843, 184, 179, 877,
	860, 807, 773, 779, 703, 0, 178, 839, 735, 747,
	727, 815, 726, 240, 831, 394, 395, 211, 413, 644,
	892, 180, 710, 891, 297, 305, 296, 894, 390, 878,
	808, 797, 795, 704, 876, 806, 796, 265, 232, 247,
	321, 272, 322, 248, 292, 291, 293, 274, 799, 0,
	175, 0, 363, 886, 903, 372, 193, 721, 853, 385,
	154, 328, 194, 239, 230, 320, 295, 186, 250, 361,
	263, 271, 835, 900, 309, 337, 200, 400, 360, 226,
	655, 302, 667, 661, 663, 662, 659, 660, 658, 657,
	656, 669, 642, 643, 646, 647, 648, 790, 880, 705,
	651, 856, 664, 665, 828, 898, 640, 207, 589, 681,
	682, 683, 590, 684, 685, 591, 592, 686, 687, 688,
	689, 593, 690, 691, 692, 670, 671, 672, 673, 674,
	675, 676, 677, 680, 678, 679, 0, 786, 317, 176,
	187, 199, 218, 216, 231, 260, 283, 288, 315, 350,
	355, 375, 376, 377, 379, 220, 0, 224, 198, 332,
	197, 273, 253, 316, 383, 384, 325, 213, 649, 170,
	181, 267, 899, 330, 236, 693, 700, 719, 722, 723,
	724, 725, 729, 734, 740, 748, 749, 757, 762, 763,
	764, 765, 772, 774, 775, 776, 777, 778, 781, 782,
	792, 803, 804, 810, 811, 0, 834, 837, 850, 854,
	855, 862, 867, 868, 893, 902, 402, 217, 789, 809,
	840, 182, 191, 202, 215, 228, 235, 246, 249, 254,
	255, 257, 261, 275, 277, 278, 279, 280, 298, 299,
	303, 304, 307, 308, 312, 313, 314, 318, 319, 326,
	159, 333, 340, 342, 343, 344, 345, 353, 354, 356,
	357, 364, 392, 393, 407, 408, 872, 769, 167, 0,
	0, 173, 0, 0, 0, 0, 0, 756, 172, 871,
	895, 816, 830, 883, 0, 380, 645, 887, 730, 753,
	896, 759, 761, 824, 706, 801, 306, 750, 707, 0,
	0, 698, 554, 699, 731, 223, 553, 857, 802, 885,
	787, 817, 827, 222, 209, 794, 793, 874, 742, 741,
	822, 870, 884, 0, 0, 653, 269, 0, 0, 405,
	362, 289, 0, 0, 785, 0, 638, 639, 770, 826,
	718, 813, 889, 751, 818, 890, 87, 0, 0, 0,
	0, 468, 577, 576, 579, 580, 581, 582, 0, 0,
	148, 578, 583, 584, 585, 0, 780, 823, 901, 697,
	551, 568, 702, 652, 3538, 875, 738, 739, 227, 0,
	0, 0, 0, 0, 0, 0, 783, 800, 842, 767,
	399, 829, 838, 852, 760, 324, 242, 0, 0, 0,
	0, 565, 566, 0, 0, 0, 0, 668, 0, 567,
	0, 712, 563, 596, 597, 598, 599, 600, 601, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 611, 612,
	613, 614, 615, 616, 617, 618, 619, 620, 621, 622,
	623, 624, 625, 626, 627, 628, 629, 630, 631, 632,
	633, 634, 635, 636, 637, 569, 0, 0, 0, 717,
	695, 736, 844, 696, 694, 290, 709, 641, 873, 768,
	258, 165, 879, 766, 666, 832, 713, 861, 754, 266,
	711, 166, 708, 714, 752, 301, 841, 847, 650, 169,
	268, 858, 732, 745, 210, 0, 336, 819, 398, 557,
	238, 805, 335, 270, 391, 833, 881, 397, 755, 374,
	406, 410, 234, 788, 201, 359, 225, 219, 737, 851,
	701, 243, 323, 214, 262, 771, 825, 733, 206, 836,
	812, 863, 358, 388, 171, 286, 389, 409, 189, 381,
	287, 294, 203, 205, 204, 183, 352, 387, 195, 208,
	859, 846, 865, 728, 715, 720, 716, 744, 882, 252,
	244, 866, 864, 746, 310, 192, 798, 791, 784, 654,
	401, 897, 221, 848, 403, 155, 347, 346, 758, 251,
	849, 156, 147, 331, 157, 259, 174, 869, 412, 188,
	264, 382, 556, 237, 300, 212, 821, 311, 743, 168,
	327, 282, 284, 281, 285, 241, 151, 158, 845, 329,
	349, 386, 190, 365, 149, 150, 152, 160, 339, 161,
	162, 888, 276, 229, 233, 245, 256, 820, 334, 366,
	404, 814, 185, 338, 367, 378, 368, 371, 369, 370,
	341, 177, 373, 396, 196, 348, 351, 411, 843, 184,
	179, 877, 860, 807, 773, 779, 703, 0, 178, 839,
	735, 747, 727, 815, 726, 240, 831, 394, 395, 211,
	413, 644, 892, 180, 710, 891, 297, 305, 296, 894,
	390, 878, 808, 797, 795, 704, 876, 806, 796, 265,
	232, 247, 321, 272, 322, 248, 292, 291, 293, 274,
	799, 0, 175, 0, 363, 886, 903, 372, 193, 721,
	853, 385, 154, 328, 194, 239, 230, 320, 295, 186,
	250, 361, 263, 271, 835, 900, 309, 337, 200, 400,
	360, 226, 655, 302, 667, 661, 663, 662, 659, 660,
	658, 657, 656, 669, 642, 643, 646, 647, 648, 790,
	880, 705, 651, 856, 664, 665, 828, 898, 640, 207,
	589, 681, 682, 683, 590, 684, 685, 591, 592, 686,
	687, 688, 689, 593, 690, 691, 692, 670, 671, 672,
	673, 674, 675, 676, 677, 680, 678, 679, 0, 786,
	317, 176, 187, 199, 218, 216, 231, 260, 283, 288,
	315, 350, 355, 375, 376, 377, 379, 220, 0, 224,
	198, 332, 197, 273, 253, 316, 383, 384, 325, 213,
	649, 170, 181, 267, 899, 330, 236, 693, 700, 719,
	722, 723, 724, 725, 729, 734, 740, 748, 749, 757,
	762, 763, 764, 765, 772, 774, 775, 776, 777, 778,
	781, 782, 792, 803, 804, 810, 811, 0, 834, 837,
	850, 854, 855, 862, 867, 868, 893, 902, 402, 217,
	789, 809, 840, 182, 191, 202, 215, 228, 235, 246,
	249, 254, 255, 257, 261, 275, 277, 278, 279, 280,
	298, 299, 303, 304, 307, 308, 312, 313, 314, 318,
	319, 326, 159, 333, 340, 342, 343, 344, 345, 353,
	354, 356, 357, 364, 392, 393, 407, 408, 872, 769,
	167, 0, 0, 173, 0, 0, 0, 0, 0, 756,
	172, 871, 895, 816, 830, 883, 0, 380, 645, 887,
	730, 753, 896, 759, 761, 824, 706, 801, 306, 750,
	707, 0, 0, 698, 554, 699, 731, 223, 553, 857,
	802, 885, 787, 817, 827, 222, 209, 794, 793, 874,
	742, 741, 822, 870, 884, 0, 0, 653, 269, 0,
	0, 405, 362, 289, 0, 0, 785, 0, 638, 639,
	770, 826, 718, 813, 889, 751, 818, 890, 87, 0,
	0, 0, 0, 468, 577, 576, 579, 580, 581, 582,
	0, 0, 148, 578, 583, 584, 585, 0, 780, 823,
	901, 697, 551, 568, 702, 652, 0, 875, 738, 739,
	227, 0, 0, 0, 0, 0, 0, 0, 783, 800,
	842, 767, 399, 829, 838, 852, 760, 324, 242, 0,
	0, 0, 0, 565, 566, 547, 0, 0, 0, 668,
	0, 567, 0, 712, 563, 596, 597, 598, 599, 600,
	601, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	611, 612, 613, 614, 615, 616, 617, 618, 619, 620,
	621, 622, 623, 624, 625, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 569, 0, 0,
	0, 717, 695, 736, 844, 696, 694, 290, 709, 641,
	873, 768, 258, 165, 879, 766, 666, 832, 713, 861,
	754, 266, 711, 166, 708, 714, 752, 301, 841, 847,
	650, 169, 268, 858, 732, 745, 210, 0, 336, 819,
	398, 557, 238, 805, 335, 270, 391, 833, 881, 397,
	755, 374, 406, 410, 234, 788, 201, 359, 225, 219,
	737, 851, 701, 243, 323, 214, 262, 771, 825, 733,
	206, 836, 812, 863, 358, 388, 171, 286, 389, 409,
	189, 381, 287, 294, 203, 205, 204, 183, 352, 387,
	195, 208, 859, 846, 865, 728, 715, 720, 716, 744,
	882, 252, 244, 866, 864, 746, 310, 192, 798, 791,
	784, 654, 401, 897, 221, 848, 403, 155, 347, 346,
	758, 251, 849, 156, 147, 331, 157, 259, 174, 869,
	412, 188, 264, 382, 556, 237, 300, 212, 821, 311,
	743, 168, 327, 282, 284, 281, 285, 241, 151, 158,
	845, 329, 349, 386, 190, 365, 149, 150, 152, 160,
	339, 161, 162, 888, 276, 229, 233, 245, 256, 820,
	334, 366, 404, 814, 185, 338, 367, 378, 368, 371,
	369, 370, 341, 177, 373, 396, 196, 348, 351, 411,
	843, 184, 179, 877, 860, 807, 773, 779, 703, 0,
	178, 839, 735, 747, 727, 815, 726, 240, 831, 394,
	395, 211, 413, 644, 892, 180, 710, 891, 297, 305,
	296, 894, 390, 878, 808, 797, 795, 704, 876, 806,
	796, 265, 232, 247, 321, 272, 322, 248, 292, 291,
	293, 274, 799, 0, 175, 0, 363, 886, 903, 372,
	193, 721, 853, 385, 154, 328, 194, 239, 230, 320,
	295, 186, 250, 361, 263, 271, 835, 900, 309, 337,
	200, 400, 360, 226, 655, 302, 667, 661, 663, 662,
	659, 660, 658, 657, 656, 669, 642, 643, 646, 647,
	648, 790, 880, 705, 651, 856, 664, 665, 828, 898,
	640, 207, 589, 681, 682, 683, 590, 684, 685, 591,
	592, 686, 687, 688, 689, 593, 690, 691, 692, 670,
	671, 672, 673, 674, 675, 676, 677, 680, 678, 679,
	0, 786, 317, 176, 187, 199, 218, 216, 231, 260,
	283, 288, 315, 350, 355, 375, 376, 377, 379, 220,
	0, 224, 198, 332, 197, 273, 253, 316, 383, 384,
	325, 213, 649, 170, 181, 267, 899, 330, 236, 693,
	700, 719, 722, 723, 724, 725, 729, 734, 740, 748,
	749, 757, 762, 763, 764, 765, 772, 774, 775, 776,
	777, 778, 781, 782, 792, 803, 804, 810, 811, 0,
	834, 837, 850, 854, 855, 862, 867, 868, 893, 902,
	402, 217, 789, 809, 840, 182, 191, 202, 215, 228,
	235, 246, 249, 254, 255, 257, 261, 275, 277, 278,
	279, 280, 298, 299, 303, 304, 307, 308, 312, 313,
	314, 318, 319, 326, 159, 333, 340, 342, 343, 344,
	345, 353, 354, 356, 357, 364, 392, 393, 407, 408,
	872, 769, 167, 0, 0, 173, 0, 0, 0, 0,
	0, 756, 172, 871, 895, 816, 830, 883, 0, 380,
	645, 887, 730, 753, 896, 759, 761, 824, 706, 801,
	306, 750, 707, 0, 0, 698, 554, 699, 731, 223,
	553, 857, 802, 885, 787, 817, 827, 222, 209, 794,
	793, 874, 742, 741, 822, 870, 884, 0, 0, 653,
	269, 0, 0, 405, 362, 289, 0, 0, 785, 0,
	638, 639, 770, 826, 718, 813, 889, 751, 818, 890,
	87, 0, 1218, 0, 0, 468, 577, 576, 579, 580,
	581, 582, 0, 0, 148, 578, 583, 584, 585, 0,
	780, 823, 901, 697, 551, 568, 702, 652, 0, 875,
	738, 739, 227, 0, 0, 0, 0, 0, 0, 0,
	783, 800, 842, 767, 399, 829, 838, 852, 760, 324,
	242, 0, 0, 0, 0, 565, 566, 0, 0, 0,
	0, 668, 0, 567, 0, 712, 563, 596, 597, 598,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 611, 612, 613, 614, 615, 616, 617, 618,
	619, 620, 621, 622, 623, 624, 625, 626, 627, 628,
	629, 630, 631, 632, 633, 634, 635, 636, 637, 569,
	0, 0, 0, 717, 695, 736, 844, 696, 694, 290,
	709, 641, 873, 768, 258, 165, 879, 766, 666, 832,
	713, 861, 754, 266, 711, 166, 708, 714, 752, 301,
	841, 847, 650, 169, 268, 858, 732, 745, 210, 0,
	336, 819, 398, 557, 238, 805, 335, 270, 391, 833,
	881, 397, 755, 374, 406, 410, 234, 788, 201, 359,
	225, 219, 737, 851, 701, 243, 323, 214, 262, 771,
	825, 733, 206, 836, 812, 863, 358, 388, 171, 286,
	389, 409, 189, 381, 287, 294, 203, 205, 204, 183,
	352, 387, 195, 208, 859, 846, 865, 728, 715, 720,
	716, 744, 882, 252, 244, 866, 864, 746, 310, 192,
	798, 791, 784, 654, 401, 897, 221, 848, 403, 155,
	347, 346, 758, 251, 849, 156, 147, 331, 157, 259,
	174, 869, 412, 188, 264, 382, 556, 237, 300, 212,
	821, 311, 743, 168, 327, 282, 284, 281, 285, 241,
	151, 158, 845, 329, 349, 386, 190, 365, 149, 150,
	152, 160, 339, 161, 162, 888, 276, 229, 233, 245,
	256, 820, 334, 366, 404, 814, 185, 338, 367, 378,
	368, 371, 369, 370, 341, 177, 373, 396, 196, 348,
	351, 411, 843, 184, 179, 877, 860, 807, 773, 779,
	703, 0, 178, 839, 735, 747, 727, 815, 726, 240,
	831, 394, 395, 211, 413, 644, 892, 180, 710, 891,
	297, 305, 296, 894, 390, 878, 808, 797, 795, 704,
	876, 806, 796, 265, 232, 247, 321, 272, 322, 248,
	292, 291, 293, 274, 799, 0, 175, 0, 363, 886,
	903, 372, 193, 721, 853, 385, 154, 328, 194, 239,
	230, 320, 295, 186, 250, 361, 263, 271, 835, 900,
	309, 337, 200, 400, 360, 226, 655, 302, 667, 661,
	663, 662, 659, 660, 658, 657, 656, 669, 642, 643,
	646, 647, 648, 790, 880, 705, 651, 856, 664, 665,
	828, 898, 640, 207, 589, 681, 682, 683, 590, 684,
	685, 591, 592, 686, 687, 688, 689, 593, 690, 691,
	692, 670, 671, 672, 673, 674, 675, 676, 677, 680,
	678, 679, 0, 786, 317, 176, 187, 199, 218, 216,
	231, 260, 283, 288, 315, 350, 355, 375, 376, 377,
	379, 220, 0, 224, 198, 332, 197, 273, 253, 316,
	383, 384, 325, 213, 649, 170, 181, 267, 899, 330,
	236, 693, 700, 719, 722, 723, 724, 725, 729, 734,
	740, 748, 749, 757, 762, 763, 764, 765, 772, 774,
	775, 776, 777, 778, 781, 782, 792, 803, 804, 810,
	811, 0, 834, 837, 850, 854, 855, 862, 867, 868,
	893, 902, 402, 217, 789, 809, 840, 182, 191, 202,
	215, 228, 235, 246, 249, 254, 255, 257, 261, 275,
	277, 278, 279, 280, 298, 299, 303, 304, 307, 308,
	312, 313, 314, 318, 319, 326, 159, 333, 340, 342,
	343, 344, 345, 353, 354, 356, 357, 364, 392, 393,
	407, 408, 872, 769, 167, 0, 0, 173, 0, 0,
	0, 0, 0, 756, 172, 871, 895, 816, 830, 883,
	0, 380, 645, 887, 730, 753, 896, 759, 761, 824,
	706, 801, 306, 750, 707, 0, 0, 698, 554, 699,
	731, 223, 553, 857, 802, 885, 787, 817, 827, 222,
	209, 794, 793, 874, 742, 741, 822, 870, 884, 0,
	0, 653, 269, 0, 0, 405, 362, 289, 0, 0,
	785, 0, 638, 639, 770, 826, 718, 813, 889, 751,
	818, 890, 87, 0, 0, 0, 0, 468, 577, 576,
	579, 580, 581, 582, 0, 0, 148, 578, 583, 584,
	585, 0, 780, 823, 901, 697, 551, 568, 702, 652,
	0, 875, 738, 739, 227, 0, 0, 0, 0, 0,
	0, 0, 783, 800, 842, 767, 399, 829, 838, 852,
	760, 324, 242, 0, 0, 0, 0, 565, 566, 1979,
	0, 0, 0, 668, 0, 567, 0, 712, 563, 596,
	597, 598, 599, 600, 601, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 611, 612, 613, 614, 615, 616,
	617, 618, 619, 620, 621, 622, 623, 624, 625, 626,
	627, 628, 629, 630, 631, 632, 633, 634, 635, 636,
	637, 569, 0, 0, 0, 717, 695, 736, 844, 696,
	694, 290, 709, 641, 873, 768, 258, 165, 879, 766,
	666, 832, 713, 861, 754, 266, 711, 166, 708, 714,
	752, 301, 841, 847, 650, 169, 268, 858, 732, 745,
	210, 0, 336, 819, 398, 557, 238, 805, 335, 270,
	391, 833, 881, 397, 755, 374, 406, 410, 234, 788,
	201, 359, 225, 219, 737, 851, 701, 243, 323, 214,
	262, 771, 825, 733, 206, 836, 812, 863, 358, 388,
	171, 286, 389, 409, 189, 381, 287, 294, 203, 205,
	204, 183, 352, 387, 195, 208, 859, 846, 865, 728,
	715, 720, 716, 744, 882, 252, 244, 866, 864, 746,
	310, 192, 798, 791, 784, 654, 401, 897, 221, 848,
	403, 155, 347, 346, 758, 251, 849, 156, 147, 331,
	157, 259, 174, 869, 412, 188, 264, 382, 556, 237,
	300, 212, 821, 311, 743, 168, 327, 282, 284, 281,
	285, 241, 151, 158, 845, 329, 349, 386, 190, 365,
	149, 150, 152, 160, 339, 161, 162, 888, 276, 229,
	233, 245, 256, 820, 334, 366, 404, 814, 185, 338,
	367, 378, 368, 371, 369, 370, 341, 177, 373, 396,
	196, 348, 351, 411, 843, 184, 179, 877, 860, 807,
	773, 779, 703, 0, 178, 839, 735, 747, 727, 815,
	726, 240, 831, 394, 395, 211, 413, 644, 892, 180,
	710, 891, 297, 305, 296, 894, 390, 878, 808, 797,
	795, 704, 876, 806, 796, 265, 232, 247, 321, 272,
	322, 248, 292, 291, 293, 274, 799, 0, 175, 0,
	363, 886, 903, 372, 193, 721, 853, 385, 154, 328,
	194, 239, 230, 320, 295, 186, 250, 361, 263, 271,
	835, 900, 309, 337, 200, 400, 360, 226, 655, 302,
	667, 661, 663, 662, 659, 660, 658, 657, 656, 669,
	642, 643, 646, 647, 648, 790, 880, 705, 651, 856,
	664, 665, 828, 898, 640, 207, 589, 681, 682, 683,
	590, 684, 685, 591, 592, 686, 687, 688, 689, 593,
	690, 691, 692, 670, 671, 672, 673, 674, 675, 676,
	677, 680, 678, 679, 0, 786, 317, 176, 187, 199,
	218, 216, 231, 260, 283, 288, 315, 350, 355, 375,
	376, 377, 379, 220, 0, 224, 198, 332, 197, 273,
	253, 316, 383, 384, 325, 213, 649, 170, 181, 267,
	899, 330, 236, 693, 700, 719, 722, 723, 724, 725,
	729, 734, 740, 748, 749, 757, 762, 763, 764, 765,
	772, 774, 775, 776, 777, 778, 781, 782, 792, 803,
	804, 810, 811, 0, 834, 837, 850, 854, 855, 862,
	867, 868, 893, 902, 402, 217, 789, 809, 840, 182,
	191, 202, 215, 228, 235, 246, 249, 254, 255, 257,
	261, 275, 277, 278, 279, 280, 298, 299, 303, 304,
	307, 308, 312, 313, 314, 318, 319, 326, 159, 333,
	340, 342, 343, 344, 345, 353, 354, 356, 357, 364,
	392, 393, 407, 408, 872, 769, 167, 0, 0, 173,
	0, 0, 0, 0, 0, 756, 172, 871, 895, 816,
	830, 883, 0, 380, 645, 887, 730, 753, 896, 759,
	761, 824, 706, 801, 306, 750, 707, 0, 0, 698,
	554, 699, 731, 223, 553, 857, 802, 885, 787, 817,
	827, 222, 209, 794, 793, 874, 742, 741, 822, 870,
	884, 0, 0, 653, 269, 0, 0, 405, 362, 289,
	0, 0, 785, 0, 638, 639, 770, 826, 718, 813,
	889, 751, 2093, 890, 87, 0, 0, 0, 0, 468,
	577, 576, 579, 580, 581, 582, 0, 0, 148, 578,
	583, 584, 585, 2094, 780, 823, 901, 697, 551, 568,
	702, 652, 0, 875, 738, 739, 227, 0, 0, 0,
	0, 0, 0, 0, 783, 800, 842, 767, 399, 829,
	838, 852, 760, 324, 242, 0, 0, 0, 0, 565,
	566, 0, 0, 0, 0, 668, 0, 567, 0, 712,
	563, 596, 597, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 620, 621, 622, 623, 624,
	625, 626, 627, 628, 629, 630, 631, 632, 633, 634,
	635, 636, 637, 569, 0, 0, 0, 717, 695, 736,
	844, 696, 694, 290, 709, 641, 873, 768, 258, 165,
	879, 766, 666, 832, 713, 861, 754, 266, 711, 166,
	708, 714, 752, 301, 841, 847, 650, 169, 268, 858,
	732, 745, 210, 0, 336, 819, 398, 557, 238, 805,
	335, 270, 391, 833, 881, 397, 755, 374, 406, 410,
	234, 788, 201, 359, 225, 219, 737, 851, 701, 243,
	323, 214, 262, 771, 825, 733, 206, 836, 812, 863,
	358, 388, 171, 286, 389, 409, 189, 381, 287, 294,
	203, 205, 204, 183, 352, 387, 195, 208, 859, 846,
	865, 728, 715, 720, 716, 744, 882, 252, 244, 866,
	864, 746, 310, 192, 798, 791, 784, 654, 401, 897,
	221, 848, 403, 155, 347, 346, 758, 251, 849, 156,
	147, 331, 157, 259, 174, 869, 412, 188, 264, 382,
	556, 237, 300, 212, 821, 311, 743, 168, 327, 282,
	284, 281, 285, 241, 151, 158, 845, 329, 349, 386,
	190, 365, 149, 150, 152, 160, 339, 161, 162, 888,
	276, 229, 233, 245, 256, 820, 334, 366, 404, 814,
	185, 338, 367, 378, 368, 371, 369, 370, 341, 177,
	373, 396, 196, 348, 351, 411, 843, 184, 179, 877,
	860, 807, 773, 779, 703, 0, 178, 839, 735, 747,
	727, 815, 726, 240, 831, 394, 395, 211, 413, 644,
	892, 180, 710, 891, 297, 305, 296, 894, 390, 878,
	808, 797, 795, 704, 876, 806, 796, 265, 232, 247,
	321, 272, 322, 248, 292, 291, 293, 274, 799, 0,
	175, 0, 363, 886, 903, 372, 193, 721, 853, 385,
	154, 328, 194, 239, 230, 320, 295, 186, 250, 361,
	263, 271, 835, 900, 309, 337, 200, 400, 360, 226,
	655, 302, 667, 661, 663, 662, 659, 660, 658, 657,
	656, 669, 642, 643, 646, 647, 648, 790, 880, 705,
	651, 856, 664, 665, 828, 898, 640, 207, 589, 681,
	682, 683, 590, 684, 685, 591, 592, 686, 687, 688,
	689, 593, 690, 691, 692, 670, 671, 672, 673, 674,
	675, 676, 677, 680, 678, 679, 0, 786, 317, 176,
	187, 199, 218, 216, 231, 260, 283, 288, 315, 350,
	355, 375, 376, 377, 379, 220, 0, 224, 198, 332,
	197, 273, 253, 316, 383, 384, 325, 213, 649, 170,
	181, 267, 899, 330, 236, 693, 700, 719, 722, 723,
	724, 725, 729, 734, 740, 748, 749, 757, 762, 763,
	764, 765, 772, 774, 775, 776, 777, 778, 781, 782,
	792, 803, 804, 810, 811, 0, 834, 837, 850, 854,
	855, 862, 867, 868, 893, 902, 402, 217, 789, 809,
	840, 182, 191, 202, 215, 228, 235, 246, 249, 254,
	255, 257, 261, 275, 277, 278, 279, 280, 298, 299,
	303, 304, 307, 308, 312, 313, 314, 318, 319, 326,
	159, 333, 340, 342, 343, 344, 345, 353, 354, 356,
	357, 364, 392, 393, 407, 408, 872, 769, 167, 0,
	0, 173, 0, 0, 0, 0, 0, 756, 172, 871,
	895, 816, 830, 883, 0, 380, 645, 887, 730, 753,
	896, 759, 761, 824, 706, 801, 306, 750, 707, 0,
	0, 698, 943, 699, 731, 223, 941, 857, 802, 885,
	787, 817, 827, 222, 209, 794, 793, 874, 742, 741,
	822, 870, 884, 0, 0, 653, 269, 0, 0, 405,
	362, 289, 0, 0, 785, 0, 638, 639, 770, 826,
	718, 813, 889, 751, 818, 890, 87, 0, 1218, 0,
	0, 468, 577, 576, 579, 580, 581, 582, 0, 0,
	148, 578, 583, 584, 585, 0, 780, 823, 901, 697,
	960, 568, 702, 652, 0, 875, 738, 739, 227, 0,
	0, 0, 0, 0, 0, 0, 783, 800, 842, 767,
	399, 829, 838, 852, 760, 324, 242, 0, 0, 0,
	0, 565, 566, 0, 0, 0, 0, 668, 0, 567,
	0, 712, 563, 596, 597, 598, 599, 600, 601, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 611, 612,
	613, 614, 615, 616, 617, 618, 619, 620, 621, 622,
	623, 624, 625, 626, 627, 628, 629, 630, 631, 632,
	633, 634, 635, 636, 637, 569, 0, 0, 0, 717,
	695, 736, 844, 696, 694, 290, 709, 641, 873, 768,
	258, 165, 879, 766, 666, 832, 713, 861, 754, 266,
	711, 166, 708, 714, 752, 301, 841, 847, 650, 169,
	268, 858, 732, 745, 210, 0, 336, 819, 398, 557,
	238, 805, 335, 270, 391, 833, 881, 397, 755, 374,
	406, 410, 234, 788, 201, 359, 225, 219, 737, 851,
	701, 243, 323, 214, 262, 771, 825, 733, 206, 836,
	812, 863, 358, 388, 171, 286, 389, 409, 189, 381,
	287, 294, 203, 205, 204, 183, 352, 387, 195, 208,
	859, 846, 865, 728, 715, 720, 716, 744, 882, 252,
	244, 866, 864, 746, 310, 192, 798, 791, 784, 654,
	401, 897, 221, 848, 403, 155, 347, 346, 758, 251,
	849, 156, 147, 331, 157, 259, 174, 869, 412, 188,
	264, 382, 556, 237, 300, 212, 821, 311, 743, 168,
	327, 282, 284, 281, 285, 241, 151, 158, 845, 329,
	349, 386, 190, 365, 149, 150, 152, 160, 339, 161,
	162, 888, 276, 229, 233, 245, 256, 820, 334, 366,
	404, 814, 185, 338, 367, 378, 368, 371, 369, 370,
	341, 177, 373, 396, 196, 348, 351, 411, 843, 184,
	179, 877, 860, 807, 773, 779, 703, 0, 178, 839,
	735, 747, 727, 815, 726, 240, 831, 394, 395, 211,
	413, 644, 892, 180, 710, 891, 297, 305, 296, 894,
	390, 878, 808, 797, 795, 704, 876, 806, 796, 265,
	232, 247, 321, 272, 322, 248, 292, 291, 293, 274,
	799, 0, 175, 0, 363, 886, 903, 372, 193, 721,
	853, 385, 154, 328, 194, 239, 230, 320, 295, 186,
	250, 361, 263, 271, 835, 900, 309, 337, 200, 400,
	360, 226, 655, 302, 667, 661, 663, 662, 659, 660,
	658, 657, 656, 669, 642, 643, 646, 647, 648, 790,
	880, 705, 651, 856, 664, 665, 828, 898, 640, 207,
	589, 681, 682, 683, 590, 684, 685, 591, 592, 686,
	687, 688, 689, 593, 690, 691, 692, 670, 671, 672,
	673, 674, 675, 676, 677, 680, 678, 679, 0, 786,
	317, 176, 187, 199, 218, 216, 231, 260, 283, 288,
	315, 350, 355, 375, 376, 377, 379, 220, 0, 224,
	198, 332, 197, 273, 253, 316, 383, 384, 325, 213,
	649, 170, 181, 267, 899, 330, 236, 693, 700, 719,
	722, 723, 724, 725, 729, 734, 740, 748, 749, 757,
	762, 763, 764, 765, 772, 774, 775, 776, 777, 778,
	781, 782, 792, 803, 804, 810, 811, 0, 834, 837,
	850, 854, 855, 862, 867, 868, 893, 902, 402, 217,
	789, 809, 840, 182, 191, 202, 215, 228, 235, 246,
	249, 254, 255, 257, 261, 275, 277, 278, 279, 280,
	298, 299, 303, 304, 307, 308, 312, 313, 314, 318,
	319, 326, 159, 333, 340, 342, 343, 344, 345, 353,
	354, 356, 357, 364, 392, 393, 407, 408, 872, 769,
	167, 0, 0, 173, 0, 0, 0, 0, 0, 756,
	172, 871, 895, 816, 830, 883, 0, 380, 645, 887,
	730, 753, 896, 759, 761, 824, 706, 801, 306, 750,
	707, 0, 0, 698, 554, 699, 731, 223, 553, 857,
	802, 885, 787, 817, 827, 222, 209, 794, 793, 874,
	742, 741, 822, 870, 884, 0, 0, 653, 269, 0,
	0, 405, 362, 289, 0, 0, 785, 0, 638, 639,
	770, 826, 718, 813, 889, 751, 818, 890, 87, 0,
	0, 0, 0, 468, 577, 2013, 579, 580, 581, 582,
	0, 0, 148, 578, 583, 584, 585, 0, 780, 823,
	901, 697, 551, 568, 702, 652, 0, 875, 738, 739,
	227, 0, 0, 0, 0, 0, 0, 0, 783, 800,
	842, 767, 399, 829, 838, 852, 760, 324, 242, 0,
	0, 0, 0, 565, 566, 1979, 0, 0, 0, 668,
	0, 567, 0, 712, 563, 596, 597, 598, 599, 600,
	601, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	611, 612, 613, 614, 615, 616, 617, 618, 619, 620,
	621, 622, 623, 624, 625, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 569, 0, 0,
	0, 717, 695, 736, 844, 696, 694, 290, 709, 641,
	873, 768, 258, 165, 879, 766, 666, 832, 713, 861,
	754, 266, 711, 166, 708, 714, 752, 301, 841, 847,
	650, 169, 268, 858, 732, 745, 210, 0, 336, 819,
	398, 557, 238, 805, 335, 270, 391, 833, 881, 397,
	755, 374, 406, 410, 234, 788, 201, 359, 225, 219,
	737, 851, 701, 243, 323, 214, 262, 771, 825, 733,
	206, 836, 812, 863, 358, 388, 171, 286, 389, 409,
	189, 381, 287, 294, 203, 205, 204, 183, 352, 387,
	195, 208, 859, 846, 865, 728, 715, 720, 716, 744,
	882, 252, 244, 866, 864, 746, 310, 192, 798, 791,
	784, 654, 401, 897, 221, 848, 403, 155, 347, 346,
	758, 251, 849, 156, 147, 331, 157, 259, 174, 869,
	412, 188, 264, 382, 556, 237, 300, 212, 821, 311,
	743, 168, 327, 282, 284, 281, 285, 241, 151, 158,
	845, 329, 349, 386, 190, 365, 149, 150, 152, 160,
	339, 161, 162, 888, 276, 229, 233, 245, 256, 820,
	334, 366, 404, 814, 185, 338, 367, 378, 368, 371,
	369, 370, 341, 177, 373, 396, 196, 348, 351, 411,
	843, 184, 179, 877, 860, 807, 773, 779, 703, 0,
	178, 839, 735, 747, 727, 815, 726, 240, 831, 394,
	395, 211, 413, 644, 892, 180, 710, 891, 297, 305,
	296, 894, 390, 878, 808, 797, 795, 704, 876, 806,
	796, 265, 232, 247, 321, 272, 322, 248, 292, 291,
	293, 274, 799, 0, 175, 0, 363, 886, 903, 372,
	193, 721, 853, 385, 154, 328, 194, 239, 230, 320,
	295, 186, 250, 361, 263, 271, 835, 900, 309, 337,
	200, 400, 360, 226, 655, 302, 667, 661, 663, 662,
	659, 660, 658, 657, 656, 669, 642, 643, 646, 647,
	648, 790, 880, 705, 651, 856, 664, 665, 828, 898,
	640, 207, 589, 681, 682, 683, 590, 684, 685, 591,
	592, 686, 687, 688, 689, 593, 690, 691, 692, 670,
	671, 672, 673, 674, 675, 676, 677, 680, 678, 679,
	0, 786, 317, 176, 187, 199, 218, 216, 231, 260,
	283, 288, 315, 350, 355, 375, 376, 377, 379, 220,
	0, 224, 198, 332, 197, 273, 253, 316, 383, 384,
	325, 213, 649, 170, 181, 267, 899, 330, 236, 693,
	700, 719, 722, 723, 724, 725, 729, 734, 740, 748,
	749, 757, 762, 763, 764, 765, 772, 774, 775, 776,
	777, 778, 781, 782, 792, 803, 804, 810, 811, 0,
	834, 837, 850, 854, 855, 862, 867, 868, 893, 902,
	402, 217, 789, 809, 840, 182, 191, 202, 215, 228,
	235, 246, 249, 254, 255, 257, 261, 275, 277, 278,
	279, 280, 298, 299, 303, 304, 307, 308, 312, 313,
	314, 318, 319, 326, 159, 333, 340, 342, 343, 344,
	345, 353, 354, 356, 357, 364, 392, 393, 407, 408,
	872, 769, 167, 0, 0, 173, 0, 0, 0, 0,
	0, 756, 172, 871, 895, 816, 830, 883, 0, 380,
	645, 887, 730, 753, 896, 759, 761, 824, 706, 801,
	306, 750, 707, 0, 0, 698, 554, 699, 731, 223,
	553, 857, 802, 885, 787, 817, 827, 222, 209, 794,
	793, 874, 742, 741, 822, 870, 884, 0, 0, 653,
	269, 0, 0, 405, 362, 289, 0, 0, 785, 0,
	638, 639, 770, 826, 718, 813, 889, 751, 818, 890,
	87, 0, 0, 0, 0, 468, 577, 2010, 579, 580,
	581, 582, 0, 0, 148, 578, 583, 584, 585, 0,
	780, 823, 901, 697, 551, 568, 702, 652, 0, 875,
	738, 739, 227, 0, 0, 0, 0, 0, 0, 0,
	783, 800, 842, 767, 399, 829, 838, 852, 760, 324,
	242, 0, 0, 0, 0, 565, 566, 1979, 0, 0,
	0, 668, 0, 567, 0, 712, 563, 596, 597, 598,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 611, 612, 613, 614, 615, 616, 617, 618,
	619, 620, 621, 622, 623, 624, 625, 626, 627, 628,
	629, 630, 631, 632, 633, 634, 635, 636, 637, 569,
	0, 0, 0, 717, 695, 736, 844, 696, 694, 290,
	709, 641, 873, 768, 258, 165, 879, 766, 666, 832,
	713, 861, 754, 266, 711, 166, 708, 714, 752, 301,
	841, 847, 650, 169, 268, 858, 732, 745, 210, 0,
	336, 819, 398, 557, 238, 805, 335, 270, 391, 833,
	881, 397, 755, 374, 406, 410, 234, 788, 201, 359,
	225, 219, 737, 851, 701, 243, 323, 214, 262, 771,
	825, 733, 206, 836, 812, 863, 358, 388, 171, 286,
	389, 409, 189, 381, 287, 294, 203, 205, 204, 183,
	352, 387, 195, 208, 859, 846, 865, 728, 715, 720,
	716, 744, 882, 252, 244, 866, 864, 746, 310, 192,
	798, 791, 784, 654, 401, 897, 221, 848, 403, 155,
	347, 346, 758, 251, 849, 156, 147, 331, 157, 259,
	174, 869, 412, 188, 264, 382, 556, 237, 300, 212,
	821, 311, 743, 168, 327, 282, 284, 281, 285, 241,
	151, 158, 845, 329, 349, 386, 190, 365, 149, 150,
	152, 160, 339, 161, 162, 888, 276, 229, 233, 245,
	256, 820, 334, 366, 404, 814, 185, 338, 367, 378,
	368, 371, 369, 370, 341, 177, 373, 396, 196, 348,
	351, 411, 843, 184, 179, 877, 860, 807, 773, 779,
	703, 0, 178, 839, 735, 747, 727, 815, 726, 240,
	831, 394, 395, 211, 413, 644, 892, 180, 710, 891,
	297, 305, 296, 894, 390, 878, 808, 797, 795, 704,
	876, 806, 796, 265, 232, 247, 321, 272, 322, 248,
	292, 291, 293, 274, 799, 0, 175, 0, 363, 886,
	903, 372, 193, 721, 853, 385, 154, 328, 194, 239,
	230, 320, 295, 186, 250, 361, 263, 271, 835, 900,
	309, 337, 200, 400, 360, 226, 655, 302, 667, 661,
	663, 662, 659, 660, 658, 657, 656, 669, 642, 643,
	646, 647, 648, 790, 880, 705, 651, 856, 664, 665,
	828, 898, 640, 207, 589, 681, 682, 683, 590, 684,
	685, 591, 592, 686, 687, 688, 689, 593, 690, 691,
	692, 670, 671, 672, 673, 674, 675, 676, 677, 680,
	678, 679, 0, 786, 317, 176, 187, 199, 218, 216,
	231, 260, 283, 288, 315, 350, 355, 375, 376, 377,
	379, 220, 0, 224, 198, 332, 197, 273, 253, 316,
	383, 384, 325, 213, 649, 170, 181, 267, 899, 330,
	236, 693, 700, 719, 722, 723, 724, 725, 729, 734,
	740, 748, 749, 757, 762, 763, 764, 765, 772, 774,
	775, 776, 777, 778, 781, 782, 792, 803, 804, 810,
	811, 0, 834, 837, 850, 854, 855, 862, 867, 868,
	893, 902, 402, 217, 789, 809, 840, 182, 191, 202,
	215, 228, 235, 246, 249, 254, 255, 257, 261, 275,
	277, 278, 279, 280, 298, 299, 303, 304, 307, 308,
	312, 313, 314, 318, 319, 326, 159, 333, 340, 342,
	343, 344, 345, 353, 354, 356, 357, 364, 392, 393,
	407, 408, 872, 769, 167, 0, 0, 173, 0, 0,
	0, 0, 0, 756, 172, 871, 895, 816, 830, 883,
	40, 380, 645, 887, 730, 753, 896, 759, 761, 824,
	706, 801, 306, 750, 707, 0, 0, 698, 554, 699,
	731, 223, 553, 857, 802, 885, 787, 817, 827, 222,
	209, 794, 793, 874, 742, 741, 822, 870, 884, 0,
	0, 653, 269, 0, 0, 405, 362, 289, 0, 0,
	785, 0, 638, 639, 770, 826, 718, 813, 889, 751,
	818, 890, 87, 0, 0, 0, 0, 468, 577, 576,
	579, 580, 581, 582, 0, 0, 148, 578, 583, 584,
	585, 0, 780, 823, 901, 697, 551, 568, 702, 652,
	0, 875, 738, 739, 227, 0, 0, 0, 0, 0,
	0, 0, 783, 800, 842, 767, 399, 829, 838, 852,
	760, 324, 242, 0, 0, 0, 0, 565, 566, 0,
	0, 0, 0, 668, 0, 567, 0, 712, 563, 596,
	597, 598, 599, 600, 601, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 611, 612, 613, 614, 615, 616,
	617, 618, 619, 620, 621, 622, 623, 624, 625, 626,
	627, 628, 629, 630, 631, 632, 633, 634, 635, 636,
	637, 569, 0, 0, 0, 717, 695, 736, 844, 696,
	694, 290, 709, 641, 873, 768, 258, 165, 879, 766,
	666, 832, 713, 861, 754, 266, 711, 166, 708, 714,
	752, 301, 841, 847, 650, 169, 268, 858, 732, 745,
	210, 0, 336, 819, 398, 557, 238, 805, 335, 270,
	391, 833, 881, 397, 755, 374, 406, 410, 234, 788,
	201, 359, 225, 219, 737, 851, 701, 243, 323, 214,
	262, 771, 825, 733, 206, 836, 812, 863, 358, 388,
	171, 286, 389, 409, 189, 381, 287, 294, 203, 205,
	204, 183, 352, 387, 195, 208, 859, 846, 865, 728,
	715, 720, 716, 744, 882, 252, 244, 866, 864, 746,
	310, 192, 798, 791, 784, 654, 401, 897, 221, 848,
	403, 155, 347, 346, 758, 251, 849, 156, 147, 331,
	157, 259, 174, 869, 412, 188, 264, 382, 556, 237,
	300, 212, 821, 311, 743, 168, 327, 282, 284, 281,
	285, 241, 151, 158, 845, 329, 349, 386, 190, 365,
	149, 150, 152, 160, 339, 161, 162, 888, 276, 229,
	233, 245, 256, 820, 334, 366, 404, 814, 185, 338,
	367, 378, 368, 371, 369, 370, 341, 177, 373, 396,
	196, 348, 351, 411, 843, 184, 179, 877, 860, 807,
	773, 779, 703, 0, 178, 839, 735, 747, 727, 815,
	726, 240, 831, 394, 395, 211, 413, 644, 892, 180,
	710, 891, 297, 305, 296, 894, 390, 878, 808, 797,
	795, 704, 876, 806, 796, 265, 232, 247, 321, 272,
	322, 248, 292, 291, 293, 274, 799, 0, 175, 0,
	363, 886, 903, 372, 193, 721, 853, 385, 154, 328,
	194, 239, 230, 320, 295, 186, 250, 361, 263, 271,
	835, 900, 309, 337, 200, 400, 360, 226, 655, 302,
	667, 661, 663, 662, 659, 660, 658, 657, 656, 669,
	642, 643, 646, 647, 648, 790, 880, 705, 651, 856,
	664, 665, 828, 898, 640, 207, 589, 681, 682, 683,
	590, 684, 685, 591, 592, 686, 687, 688, 689, 593,
	690, 691, 692, 670, 671, 672, 673, 674, 675, 676,
	677, 680, 678, 679, 0, 786, 317, 176, 187, 199,
	218, 216, 231, 260, 283, 288, 315, 350, 355, 375,
	376, 377, 379, 220, 0, 224, 198, 332, 197, 273,
	253, 316, 383, 384, 325, 213, 649, 170, 181, 267,
	1305, 330, 236, 693, 700, 719, 722, 723, 724, 725,
	729, 734, 740, 748, 749, 757, 762, 763, 764, 765,
	772, 774, 775, 776, 777, 778, 781, 782, 792, 803,
	804, 810, 811, 0, 834, 837, 850, 854, 855, 862,
	867, 868, 893, 902, 402, 217, 789, 809, 840, 182,
	191, 202, 215, 228, 235, 246, 249, 254, 255, 257,
	261, 275, 277, 278, 279, 280, 298, 299, 303, 304,
	307, 308, 312, 313, 314, 318, 319, 326, 159, 333,
	340, 342, 343, 344, 345, 353, 354, 356, 357, 364,
	392, 393, 407, 408, 872, 769, 167, 0, 0, 173,
	0, 0, 0, 0, 0, 756, 172, 871, 895, 816,
	830, 883, 0, 380, 645, 887, 730, 753, 896, 759,
	761, 824, 706, 801, 306, 750, 707, 0, 0, 698,
	554, 699, 731, 223, 553, 857, 802, 885, 787, 817,
	827, 222, 209, 794, 793, 874, 742, 741, 822, 870,
	884, 0, 0, 653, 269, 0, 0, 405, 362, 289,
	0, 0, 785, 0, 638, 639, 770, 826, 718, 813,
	889, 751, 818, 890, 87, 0, 1837, 0, 0, 468,
	577, 576, 579, 580, 581, 582, 0, 0, 148, 578,
	583, 584, 585, 0, 780, 823, 901, 697, 551, 568,
	702, 652, 0, 875, 738, 739, 227, 0, 0, 0,
	0, 0, 0, 0, 783, 800, 842, 767, 399, 829,
	838, 852, 760, 324, 242, 0, 0, 0, 0, 565,
	566, 0, 0, 0, 0, 668, 0, 567, 0, 712,
	563, 596, 597, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 620, 621, 622, 623, 624,
	625, 626, 627, 628, 629, 630, 631, 632, 633, 634,
	635, 636, 637, 569, 0, 0, 0, 717, 695, 736,
	844, 696, 694, 290, 709, 641, 873, 768, 258, 165,
	879, 766, 666, 832, 713, 861, 754, 266, 711, 166,
	708, 714, 752, 301, 841, 847, 650, 169, 268, 858,
	732, 745, 210, 0, 336, 819, 398, 557, 238, 805,
	335, 270, 391, 833, 881, 397, 755, 374, 406, 410,
	234, 788, 201, 359, 225, 219, 737, 851, 701, 243,
	323, 214, 262, 771, 825, 733, 206, 836, 812, 863,
	358, 388, 171, 286, 389, 409, 189, 381, 287, 294,
	203, 205, 204, 183, 352, 387, 195, 208, 859, 846,
	865, 728, 715, 720, 716, 744, 882, 252, 244, 866,
	864, 746, 310, 192, 798, 791, 784, 654, 401, 897,
	221, 848, 403, 155, 347, 346, 758, 251, 849, 156,
	147, 331, 157, 259, 174, 869, 412, 188, 264, 382,
	556, 237, 300, 212, 821, 311, 743, 168, 327, 282,
	284, 281, 285, 241, 151, 158, 845, 329, 349, 386,
	190, 365, 149, 150, 152, 160, 339, 161, 162, 888,
	276, 229, 233, 245, 256, 820, 334, 366, 404, 814,
	185, 338, 367, 378, 368, 371, 369, 370, 341, 177,
	373, 396, 196, 348, 351, 411, 843, 184, 179, 877,
	860, 807, 773, 779, 703, 0, 178, 839, 735, 747,
	727, 815, 726, 240, 831, 394, 395, 211, 413, 644,
	892, 180, 710, 891, 297, 305, 296, 894, 390, 878,
	808, 797, 795, 704, 876, 806, 796, 265, 232, 247,
	321, 272, 322, 248, 292, 291, 293, 274, 799, 0,
	175, 0, 363, 886, 903, 372, 193, 721, 853, 385,
	154, 328, 194, 239, 230, 320, 295, 186, 250, 361,
	263, 271, 835, 900, 309, 337, 200, 400, 360, 226,
	655, 302, 667, 661, 663, 662, 659, 660, 658, 657,
	656, 669, 642, 643, 646, 647, 648, 790, 880, 705,
	651, 856, 664, 665, 828, 898, 640, 207, 589, 681,
	682, 683, 590, 684, 685, 591, 592, 686, 687, 688,
	689, 593, 690, 691, 692, 670, 671, 672, 673, 674,
	675, 676, 677, 680, 678, 679, 0, 786, 317, 176,
	187, 199, 218, 216, 231, 260, 283, 288, 315, 350,
	355, 375, 376, 377, 379, 220, 0, 224, 198, 332,
	197, 273, 253, 316, 383, 384, 325, 213, 649, 170,
	181, 267, 899, 330, 236, 693, 700, 719, 722, 723,
	724, 725, 729, 734, 740, 748, 749, 757, 762, 763,
	764, 765, 772, 774, 775, 776, 777, 778, 781, 782,
	792, 803, 804, 810, 811, 0, 834, 837, 850, 854,
	855, 862, 867, 868, 893, 902, 402, 217, 789, 809,
	840, 182, 191, 202, 215, 228, 235, 246, 249, 254,
	255, 257, 261, 275, 277, 278, 279, 280, 298, 299,
	303, 304, 307, 308, 312, 313, 314, 318, 319, 326,
	159, 333, 340, 342, 343, 344, 345, 353, 354, 356,
	357, 364, 392, 393, 407, 408, 872, 769, 167, 0,
	0, 173, 0, 0, 0, 0, 0, 756, 172, 871,
	895, 816, 830, 883, 0, 380, 645, 887, 730, 753,
	896, 759, 761, 824, 706, 801, 306, 750, 707, 0,
	0, 698, 943, 699, 731, 223, 941, 857, 802, 885,
	787, 817, 827, 222, 209, 794, 793, 874, 742, 741,
	822, 870, 884, 0, 0, 653, 269, 0, 0, 405,
	362, 289, 0, 0, 785, 0, 638, 639, 770, 826,
	718, 813, 889, 751, 818, 890, 87, 0, 0, 0,
	0, 468, 577, 576, 579, 580, 581, 582, 0, 0,
	148, 578, 583, 584, 585, 0, 780, 823, 901, 697,
	960, 568, 702, 652, 0, 875, 738, 739, 227, 0,
	0, 0, 0, 0, 0, 0, 783, 800, 842, 767,
	399, 829, 838, 852, 760, 324, 242, 0, 0, 0,
	0, 565, 566, 0, 0, 0, 0, 668, 0, 567,
	0, 712, 563, 596, 597, 598, 599, 600, 601, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 611, 612,
	613, 614, 615, 616, 617, 618, 619, 620, 621, 622,
	623, 624, 625, 626, 627, 628, 629, 630, 631, 632,
	633, 634, 635, 636, 637, 569, 0, 0, 0, 717,
	695, 736, 844, 696, 694, 290, 709, 641, 873, 768,
	258, 165, 879, 766, 666, 832, 713, 861, 754, 266,
	711, 166, 708, 714, 752, 301, 841, 847, 650, 169,
	268, 858, 732, 745, 210, 0, 336, 819, 398, 557,
	238, 805, 335, 270, 391, 833, 881, 397, 755, 374,
	406, 410, 234, 788, 201, 359, 225, 219, 737, 851,
	701, 243, 323, 214, 262, 771, 825, 733, 206, 836,
	812, 863, 358, 388, 171, 286, 389, 409, 189, 381,
	287, 294, 203, 205, 204, 183, 352, 387, 195, 208,
	859, 846, 865, 728, 715, 720, 716, 744, 882, 252,
	244, 866, 864, 746, 310, 192, 798, 791, 784, 654,
	401, 897, 221, 848, 403, 155, 347, 346, 758, 251,
	849, 156, 147, 331, 157, 259, 174, 869, 412, 188,
	264, 382, 556, 237, 300, 212, 821, 311, 743, 168,
	327, 282, 284, 281, 285, 241, 151, 158, 845, 329,
	349, 386, 190, 365, 149, 150, 152, 160, 339, 161,
	162, 888, 276, 229, 233, 245, 256, 820, 334, 366,
	404, 814, 185, 338, 367, 378, 368, 371, 369, 370,
	341, 177, 373, 396, 196, 348, 351, 411, 843, 184,
	179, 877, 860, 807, 773, 779, 703, 0, 178, 839,
	735, 747, 727, 815, 726, 240, 831, 394, 395, 211,
	413, 644, 892, 180, 710, 891, 297, 305, 296, 894,
	390, 878, 808, 797, 795, 704, 876, 806, 796, 265,
	232, 247, 321, 272, 322, 248, 292, 291, 293, 274,
	799, 0, 175, 0, 363, 886, 903, 372, 193, 721,
	853, 385, 154, 328, 194, 239, 230, 320, 295, 186,
	250, 361, 263, 271, 835, 900, 309, 337, 200, 400,
	360, 226, 655, 302, 667, 661, 663, 662, 659, 660,
	658, 657, 656, 669, 642, 643, 646, 647, 648, 790,
	880, 705, 651, 856, 664, 665, 828, 898, 640, 207,
	589, 681, 682, 683, 590, 684, 685, 591, 592, 686,
	687, 688, 689, 593, 690, 691, 692, 670, 671, 672,
	673, 674, 675, 676, 677, 680, 678, 679, 0, 786,
	317, 176, 187, 199, 218, 216, 231, 260, 283, 288,
	315, 350, 355, 375, 376, 377, 379, 220, 0, 224,
	198, 332, 197, 273, 253, 316, 383, 384, 325, 213,
	649, 170, 181, 267, 899, 330, 236, 693, 700, 719,
	722, 723, 724, 725, 729, 734, 740, 748, 749, 757,
	762, 763, 764, 765, 772, 774, 775, 776, 777, 778,
	781, 782, 792, 803, 804, 810, 811, 0, 834, 837,
	850, 854, 855, 862, 867, 868, 893, 902, 402, 217,
	789, 809, 840, 182, 191, 202, 215, 228, 235, 246,
	249, 254, 255, 257, 261, 275, 277, 278, 279, 280,
	298, 299, 303, 304, 307, 308, 312, 313, 314, 318,
	319, 326, 159, 333, 340, 342, 343, 344, 345, 353,
	354, 356, 357, 364, 392, 393, 407, 408, 872, 769,
	167, 0, 0, 173, 0, 0, 0, 0, 0, 756,
	172, 871, 895, 816, 830, 883, 0, 380, 645, 887,
	730, 753, 896, 759, 761, 824, 706, 801, 306, 750,
	707, 0, 0, 698, 554, 699, 731, 223, 553, 857,
	802, 885, 787, 817, 827, 222, 209, 794, 793, 874,
	742, 741, 822, 870, 884, 0, 0, 653, 269, 0,
	0, 405, 362, 289, 0, 0, 785, 0, 638, 639,
	770, 826, 718, 813, 889, 751, 818, 890, 87, 0,
	0, 0, 0, 468, 577, 576, 579, 580, 581, 582,
	0, 0, 148, 578, 583, 584, 585, 0, 780, 823,
	901, 697, 551, 568, 702, 652, 0, 875, 738, 739,
	227, 0, 0, 0, 0, 0, 0, 0, 783, 800,
	842, 767, 399, 829, 838, 852, 760, 324, 242, 0,
	0, 0, 0, 565, 566, 0, 0, 0, 0, 668,
	0, 567, 0, 712, 563, 596, 597, 598, 599, 600,
	601, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	611, 612, 613, 614, 615, 616, 617, 618, 619, 620,
	621, 622, 623, 624, 625, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 569, 0, 0,
	0, 717, 695, 736, 844, 696, 694, 290, 709, 641,
	873, 768, 258, 165, 879, 766, 666, 832, 713, 861,
	754, 266, 711, 166, 708, 714, 752, 301, 841, 847,
	650, 169, 268, 858, 732, 745, 210, 0, 336, 819,
	398, 557, 238, 805, 335, 270, 391, 833, 881, 397,
	755, 374, 406, 410, 234, 788, 201, 359, 225, 219,
	737, 851, 701, 243, 323, 214, 262, 771, 825, 733,
	206, 836, 812, 863, 358, 388, 171, 286, 389, 409,
	189, 381, 287, 294, 203, 205, 204, 183, 352, 387,
	195, 208, 859, 846, 865, 728, 715, 720, 716, 744,
	882, 252, 244, 866, 864, 746, 310, 192, 798, 791,
	784, 654, 401, 897, 221, 848, 403, 155, 347, 346,
	758, 251, 849, 156, 147, 331, 157, 259, 174, 869,
	412, 188, 264, 382, 556, 237, 300, 212, 821, 311,
	743, 168, 327, 282, 284, 281, 285, 241, 151, 158,
	845, 329, 349, 386, 190, 365, 149, 150, 152, 160,
	339, 161, 162, 888, 276, 229, 233, 245, 256, 820,
	334, 366, 404, 814, 185, 338, 367, 378, 368, 371,
	369, 370, 341, 177, 373, 396, 196, 348, 351, 411,
	843, 184, 179, 877, 860, 807, 773, 779, 703, 0,
	178, 839, 735, 747, 727, 815, 726, 240, 831, 394,
	395, 211, 413, 644, 892, 180, 710, 891, 297, 305,
	296, 894, 390, 878, 808, 797, 795, 704, 876, 806,
	796, 265, 232, 247, 321, 272, 322, 248, 292, 291,
	293, 274, 799, 0, 175, 0, 363, 886, 903, 372,
	193, 721, 853, 385, 154, 328, 194, 239, 230, 320,
	295, 186, 250, 361, 263, 271, 835, 900, 309, 337,
	200, 400, 360, 226, 655, 302, 667, 661, 663, 662,
	659, 660, 658, 657, 656, 669, 642, 643, 646, 647,
	648, 790, 880, 705, 651, 856, 664, 665, 828, 898,
	640, 207, 589, 681, 682, 683, 590, 684, 685, 591,
	592, 686, 687, 688, 689, 593, 690, 691, 692, 670,
	671, 672, 673, 674, 675, 676, 677, 680, 678, 679,
	0, 786, 317, 176, 187, 199, 218, 216, 231, 260,
	283, 288, 315, 350, 355, 375, 376, 377, 379, 220,
	0, 224, 198, 332, 197, 273, 253, 316, 383, 384,
	325, 213, 649, 170, 181, 267, 899, 330, 236, 693,
	700, 719, 722, 723, 724, 725, 729, 734, 740, 748,
	749, 757, 762, 763, 764, 765, 772, 774, 775, 776,
	777, 778, 781, 782, 792, 803, 804, 810, 811, 0,
	834, 837, 850, 854, 855, 862, 867, 868, 893, 902,
	402, 217, 789, 809, 840, 182, 191, 202, 215, 228,
	235, 246, 249, 254, 255, 257, 261, 275, 277, 278,
	279, 280, 298, 299, 303, 304, 307, 308, 312, 313,
	314, 318, 319, 326, 159, 333, 340, 342, 343, 344,
	345, 353, 354, 356, 357, 364, 392, 393, 407, 408,
	872, 769, 167, 0, 0, 173, 0, 0, 0, 0,
	0, 756, 172, 871, 895, 816, 830, 883, 0, 380,
	645, 887, 730, 753, 896, 759, 761, 824, 706, 801,
	306, 750, 707, 0, 0, 698, 943, 699, 731, 223,
	941, 857, 802, 885, 787, 817, 827, 222, 209, 794,
	793, 874, 742, 741, 822, 870, 884, 0, 0, 653,
	269, 0, 0, 405, 362, 289, 0, 0, 785, 0,
	638, 639, 770, 826, 718, 813, 889, 751, 818, 890,
	87, 0, 0, 0, 0, 468, 577, 576, 579, 580,
	581, 582, 0, 0, 148, 578, 583, 584, 585, 0,
	780, 823, 901, 697, 960, 568, 702, 652, 0, 875,
	738, 739, 227, 0, 0, 0, 0, 0, 0, 0,
	783, 800, 842, 767, 399, 829, 838, 852, 760, 324,
	242, 0, 0, 0, 0, 565, 566, 0, 0, 0,
	0, 668, 0, 567, 0, 712, 563, 596, 597, 598,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 611, 612, 613, 614, 615, 616, 617, 618,
	619, 620, 621, 622, 623, 624, 625, 626, 627, 628,
	629, 630, 631, 632, 633, 634, 635, 636, 637, 569,
	0, 0, 0, 717, 695, 736, 844, 696, 694, 290,
	709, 641, 873, 768, 258, 165, 879, 766, 666, 832,
	713, 861, 754, 266, 711, 166, 708, 714, 752, 301,
	841, 847, 650, 169, 268, 858, 732, 745, 210, 0,
	336, 819, 398, 557, 238, 3758, 335, 270, 391, 833,
	881, 397, 755, 374, 406, 410, 234, 788, 201, 359,
	225, 219, 737, 851, 701, 243, 323, 214, 262, 771,
	825, 733, 206, 836, 812, 863, 358, 388, 171, 286,
	389, 409, 189, 381, 287, 294, 203, 205, 204, 183,
	352, 387, 195, 208, 859, 846, 865, 728, 715, 720,
	716, 744, 882, 252, 244, 866, 864, 746, 310, 192,
	798, 791, 784, 654, 401, 897, 221, 848, 403, 155,
	347, 346, 758, 251, 849, 156, 147, 331, 157, 259,
	174, 869, 412, 188, 264, 382, 556, 237, 300, 212,
	821, 311, 743, 168, 327, 282, 284, 281, 285, 241,
	151, 158, 845, 329, 349, 386, 190, 365, 149, 150,
	152, 160, 339, 161, 162, 888, 276, 229, 233, 245,
	256, 820, 334, 366, 404, 814, 185, 338, 367, 378,
	368, 371, 369, 370, 341, 177, 373, 396, 196, 348,
	351, 411, 843, 184, 179, 877, 860, 807, 773, 779,
	703, 0, 178, 839, 735, 747, 727, 815, 726, 240,
	831, 394, 395, 211, 413, 644, 892, 180, 710, 891,
	297, 305, 296, 894, 390, 878, 808, 797, 795, 704,
	876, 806, 796, 265, 232, 247, 321, 272, 322, 248,
	292, 291, 293, 274, 799, 0, 175, 0, 363, 886,
	903, 372, 193, 721, 853, 385, 154, 328, 194, 239,
	230, 320, 295, 186, 250, 361, 263, 271, 835, 900,
	309, 337, 200, 400, 360, 226, 655, 302, 667, 661,
	663, 662, 659, 660, 658, 657, 656, 669, 642, 643,
	646, 647, 648, 790, 880, 705, 651, 856, 664, 665,
	828, 898, 640, 207, 589, 681, 682, 683, 590, 684,
	685, 591, 592, 686, 687, 688, 689, 593, 690, 691,
	692, 670, 671, 672, 673, 674, 675, 676, 677, 680,
	678, 679, 0, 786, 317, 176, 187, 199, 218, 216,
	231, 260, 283, 288, 315, 350, 355, 375, 376, 377,
	379, 220, 0, 224, 198, 332, 197, 273, 253, 316,
	383, 384, 325, 213, 649, 170, 181, 267, 899, 330,
	236, 693, 700, 719, 722, 723, 724, 725, 729, 734,
	740, 748, 749, 757, 762, 763, 764, 765, 772, 774,
	775, 776, 777, 778, 781, 782, 792, 803, 804, 810,
	811, 0, 834, 837, 850, 854, 855, 862, 867, 868,
	893, 902, 402, 217, 789, 809, 840, 182, 191, 202,
	215, 228, 235, 246, 249, 254, 255, 257, 261, 275,
	277, 278, 279, 280, 298, 299, 303, 304, 307, 308,
	312, 313, 314, 318, 319, 326, 159, 333, 340, 342,
	343, 344, 345, 353, 354, 356, 357, 364, 392, 393,
	407, 408, 872, 769, 167, 0, 0, 173, 0, 0,
	0, 0, 0, 756, 172, 871, 895, 816, 830, 883,
	0, 380, 645, 887, 730, 753, 896, 759, 761, 824,
	706, 801, 306, 750, 707, 0, 0, 698, 943, 699,
	731, 223, 941, 857, 802, 885, 787, 817, 827, 222,
	209, 794, 793, 874, 742, 741, 822, 870, 884, 0,
	0, 653, 269, 0, 0, 405, 362, 289, 0, 0,
	785, 0, 638, 639, 770, 826, 718, 813, 889, 751,
	818, 890, 87, 0, 0, 0, 0, 468, 577, 576,
	579, 580, 581, 582, 0, 0, 148, 578, 583, 584,
	585, 0, 780, 823, 901, 697, 960, 568, 702, 652,
	0, 875, 738, 739, 227, 0, 0, 0, 0, 0,
	0, 0, 783, 800, 842, 767, 399, 829, 838, 852,
	760, 324, 242, 0, 0, 0, 0, 565, 566, 0,
	0, 0, 0, 668, 0, 567, 0, 712, 563, 596,
	597, 598, 599, 600, 601, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 611, 612, 613, 614, 615, 616,
	617, 618, 619, 620, 621, 622, 623, 624, 625, 626,
	627, 628, 629, 630, 631, 632, 633, 634, 635, 636,
	637, 569, 0, 0, 0, 717, 695, 736, 844, 696,
	694, 290, 709, 641, 873, 768, 258, 165, 879, 766,
	666, 832, 713, 861, 754, 266, 711, 166, 708, 714,
	752, 301, 841, 847, 650, 169, 268, 858, 732, 745,
	210, 0, 336, 819, 398, 557, 238, 805, 335, 270,
	391, 833, 881, 397, 755, 374, 406, 410, 234, 788,
	201, 359, 225, 219, 737, 851, 701, 243, 323, 214,
	262, 771, 825, 733, 206, 836, 812, 863, 358, 388,
	171, 286, 389, 409, 189, 381, 287, 294, 203, 205,
	204, 183, 352, 387, 195, 208, 859, 846, 865, 728,
	715, 720, 716, 744, 882, 252, 244, 866, 864, 746,
	310, 192, 798, 791, 784, 654, 401, 897, 221, 848,
	403, 155, 347, 346, 758, 251, 849, 156, 147, 331,
	157, 259, 174, 869, 412, 188, 264, 382, 556, 237,
	300, 212, 821, 311, 743, 168, 327, 282, 284, 281,
	285, 241, 151, 158, 845, 329, 349, 386, 190, 365,
	149, 150, 152, 160, 339, 161, 162, 888, 276, 229,
	233, 245, 256, 820, 334, 366, 404, 814, 185, 338,
	367, 378, 368, 371, 369, 370, 341, 177, 373, 396,
	196, 348, 351, 411, 843, 184, 179, 877, 860, 807,
	773, 779, 703, 0, 178, 839, 735, 747, 727, 815,
	726, 240, 831, 394, 395, 211, 413, 644, 892, 180,
	710, 891, 297, 305, 296, 894, 390, 878, 808, 797,
	795, 704, 876, 806, 796, 265, 232, 247, 321, 272,
	322, 248, 292, 291, 293, 274, 799, 0, 175, 0,
	363, 886, 903, 372, 193, 721, 853, 385, 154, 328,
	194, 239, 230, 320, 295, 186, 250, 361, 263, 271,
	835, 900, 309, 337, 200, 400, 360, 226, 655, 302,
	667, 661, 663, 662, 659, 660, 658, 657, 656, 669,
	642, 643, 646, 647, 648, 2016, 2017, 2018, 651, 856,
	664, 665, 828, 898, 640, 207, 589, 681, 682, 683,
	590, 684, 685, 591, 592, 686, 687, 688, 689, 593,
	690, 691, 692, 670, 671, 672, 673, 674, 675, 676,
	677, 680, 678, 679, 0, 786, 317, 176, 187, 199,
	218, 216, 231, 260, 283, 288, 315, 350, 355, 375,
	376, 377, 379, 220, 0, 224, 198, 332, 197, 273,
	253, 316, 383, 384, 325, 213, 649, 170, 181, 267,
	899, 330, 236, 693, 700, 719, 722, 723, 724, 725,
	729, 734, 740, 748, 749, 757, 762, 763, 764, 765,
	772, 774, 775, 776, 777, 778, 781, 782, 792, 803,
	804, 810, 811, 0, 834, 837, 850, 854, 855, 862,
	867, 868, 893, 902, 402, 217, 789, 809, 840, 182,
	191, 202, 215, 228, 235, 246, 249, 254, 255, 257,
	261, 275, 277, 278, 279, 280, 298, 299, 303, 304,
	307, 308, 312, 313, 314, 318, 319, 326, 159, 333,
	340, 342, 343, 344, 345, 353, 354, 356, 357, 364,
	392, 393, 407, 408, 872, 769, 167, 0, 0, 173,
	0, 0, 0, 0, 0, 756, 172, 871, 895, 816,
	830, 1754, 2953, 380, 1609, 1758, 1558, 1588, 1775, 1594,
	1597, 1678, 1524, 1647, 306, 1585, 1525, 1508, 1563, 1512,
	1576, 1513, 1560, 223, 1556, 1719, 1650, 1756, 1629, 1671,
	1681, 222, 209, 1639, 1638, 1744, 1574, 1573, 1676, 1733,
	1755, 1628, 0, 1765, 269, 1730, 1003, 405, 362, 289,
	1006, 1005, 1624, 1739, 1645, 1708, 1607, 1680, 1540, 1663,
	1760, 1586, 1672, 1761, 87, 0, 1218, 0, 0, 999,
	0, 0, 0, 0, 0, 0, 0, 0, 148, 0,
	1668, 1752, 1579, 1004, 1619, 1677, 1780, 1511, 1664, 0,
	1516, 1527, 1774, 1745, 1570, 1571, 227, 0, 0, 0,
	0, 0, 0, 0, 1622, 1646, 1698, 1604, 399, 1683,
	1693, 1711, 1596, 324, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 1565, 0, 1661, 0, 0, 0, 1532,
	1518, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1618, 0, 0, 0, 1539, 1509, 1567,
	1700, 1510, 1507, 290, 1528, 1713, 1743, 1605, 258, 165,
	1749, 1603, 1602, 1687, 1533, 1723, 1589, 266, 1531, 166,
	1526, 1534, 1587, 301, 1697, 1705, 153, 169, 268, 1720,
	1561, 1578, 210, 1899, 336, 1673, 398, 1002, 238, 1654,
	335, 270, 391, 1688, 1751, 397, 1590, 374, 406, 410,
	234, 1630, 201, 359, 225, 219, 1569, 1710, 1515, 243,
	323, 214, 262, 1608, 1679, 1562, 206, 1691, 1662, 1725,
	358, 388, 171, 286, 389, 409, 189, 381, 287, 294,
	203, 205, 204, 183, 352, 387, 195, 208, 1721, 1704,
	1727, 1555, 1535, 1546, 1536, 1577, 1753, 252, 244, 1728,
	1726, 1580, 310, 192, 1643, 1636, 1623, 1701, 401, 1776,
	221, 1706, 403, 155, 347, 346, 1593, 251, 1707, 156,
	147, 331, 157, 259, 174, 1732, 412, 188, 264, 382,
	1001, 237, 300, 212, 1675, 311, 1575, 168, 327, 282,
	284, 281, 285, 241, 151, 158, 1703, 329, 349, 386,
	190, 365, 149, 150, 152, 160, 339, 161, 162, 1759,
	276, 229, 233, 245, 256, 1674, 334, 366, 404, 1665,
	185, 338, 367, 378, 368, 371, 369, 370, 341, 177,
	373, 396, 196, 348, 351, 411, 1699, 184, 179, 1747,
	1722, 1656, 1611, 1617, 1517, 0, 178, 1695, 1566, 1582,
	1554, 1669, 1553, 240, 1686, 394, 395, 211, 413, 1529,
	1767, 180, 1530, 1766, 297, 305, 296, 1770, 390, 1748,
	1657, 1642, 1640, 1522, 1746, 1655, 1641, 265, 232, 247,
	321, 272, 322, 248, 292, 291, 293, 274, 1644, 0,
	175, 0, 363, 1757, 1782, 372, 193, 1548, 1714, 385,
	154, 328, 194, 239, 230, 320, 295, 186, 250, 361,
	263, 271, 1690, 1779, 309, 337, 200, 400, 360, 226,
	1544, 302, 1547, 1542, 1545, 1543, 1648, 1649, 1762, 1763,
	1764, 1702, 1537, 0, 1740, 1741, 0, 1635, 1750, 1523,
	0, 1718, 163, 164, 1682, 1777, 1595, 207, 142, 1519,
	1520, 1521, 143, 1625, 1626, 144, 145, 1736, 1735, 1734,
	1737, 146, 1771, 1769, 1772, 1538, 1559, 1581, 1631, 1632,
	1634, 1666, 1667, 1712, 1685, 1694, 1568, 1627, 317, 176,
	187, 199, 218, 216, 231, 260, 283, 288, 315, 350,
	355, 375, 376, 377, 379, 220, 0, 224, 198, 332,
	197, 273, 253, 316, 383, 384, 325, 213, 1653, 170,
	181, 267, 2954, 330, 236, 1506, 1514, 1541, 1549, 1550,
	1551, 1552, 1557, 1564, 1572, 1583, 1584, 1592, 1598, 1599,
	1600, 1601, 1610, 1612, 1613, 1614, 1615, 1616, 1620, 1621,
	1637, 1651, 1652, 1659, 1660, 0, 1689, 1692, 1709, 1715,
	1717, 1724, 1729, 1731, 1768, 1781, 402, 217, 1633, 1658,
	1696, 182, 191, 202, 215, 228, 235, 246, 249, 254,
	255, 257, 261, 275, 277, 278, 279, 280, 298, 299,
	303, 304, 307, 308, 312, 313, 314, 318, 319, 326,
	159, 333, 340, 342, 343, 344, 345, 353, 354, 356,
	357, 364, 392, 393, 407, 408, 1742, 1606, 167, 0,
	0, 173, 0, 0, 0, 0, 0, 1591, 172, 1738,
	1773, 1670, 1684, 1754, 1716, 380, 1609, 1758, 1558, 1588,
	1775, 1594, 1597, 1678, 1524, 1647, 306, 1585, 1525, 1508,
	1563, 1512, 1576, 1513, 1560, 223, 1556, 1719, 1650, 1756,
	1629, 1671, 1681, 222, 209, 1639, 1638, 1744, 1574, 1573,
	1676, 1733, 1755, 1628, 0, 1765, 269, 1730, 1003, 405,
	362, 289, 1006, 1005, 1624, 1739, 1645, 1708, 1607, 1680,
	1540, 1663, 1760, 1586, 1672, 1761, 0, 0, 0, 0,
	0, 999, 0, 0, 0, 0, 0, 0, 0, 0,
	148, 0, 1668, 1752, 1579, 1004, 1619, 1677, 1780, 1511,
	1664, 0, 1516, 1527, 1774, 1745, 1570, 1571, 227, 0,
	0, 0, 0, 0, 0, 0, 1622, 1646, 1698, 1604,
	399, 1683, 1693, 1711, 1596, 324, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 1565, 0, 1661, 0, 0,
	0, 1532, 1518, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1618, 0, 0, 0, 1539,
	1509, 1567, 1700, 1510, 1507, 290, 1528, 1713, 1743, 1605,
	258, 165, 1749, 1603, 1602, 1687, 1533, 1723, 1589, 266,
	1531, 166, 1526, 1534, 1587, 301, 1697, 1705, 153, 169,
	268, 1720, 1561, 1578, 210, 1899, 336, 1673, 398, 1002,
	238, 1654, 335, 270, 391, 1688, 1751, 397, 1590, 374,
	406, 410, 234, 1630, 201, 359, 225, 219, 1569, 1710,
	1515, 243, 323, 214, 262, 1608, 1679, 1562, 206, 1691,
	1662, 1725, 358, 388, 171, 286, 389, 409, 189, 381,
	287, 294, 203, 205, 204, 183, 352, 387, 195, 208,
	1721, 1704, 1727, 1555, 1535, 1546, 1536, 1577, 1753, 252,
	244, 1728, 1726, 1580, 310, 192, 1643, 1636, 1623, 1701,
	401, 1776, 221, 1706, 403, 155, 347, 346, 1593, 251,
	1707, 156, 147, 331, 157, 259, 174, 1732, 412, 188,
	264, 382, 1001, 237, 300, 212, 1675, 311, 1575, 168,
	327, 282, 284, 281, 285, 241, 151, 158, 1703, 329,
	349, 386, 190, 365, 149, 150, 152, 160, 339, 161,
	162, 1759, 276, 229, 233, 245, 256, 1674, 334, 366,
	404, 1665, 185, 338, 367, 378, 368, 371, 369, 370,
	341, 177, 373, 396, 196, 348, 351, 411, 1699, 184,
	179, 1747, 1722, 1656, 1611, 1617, 1517, 0, 178, 1695,
	1566, 1582, 1554, 1669, 1553, 240, 1686, 394, 395, 211,
	413, 1529, 1767, 180, 1530, 1766, 297, 305, 296, 1770,
	390, 1748, 1657, 1642, 1640, 1522, 1746, 1655, 1641, 265,
	232, 247, 321, 272, 322, 248, 292, 291, 293, 274,
	1644, 0, 175, 0, 363, 1757, 1782, 372, 193, 1548,
	1714, 385, 154, 328, 194, 239, 230, 320, 295, 186,
	250, 361, 263, 271, 1690, 1779, 309, 337, 200, 400,
	360, 226, 1544, 302, 1547, 1542, 1545, 1543, 1648, 1649,
	1762, 1763, 1764, 1702, 1537, 0, 1740, 1741, 0, 1635,
	1750, 1523, 0, 1718, 163, 164, 1682, 1777, 1595, 207,
	142, 1519, 1520, 1521, 143, 1625, 1626, 144, 145, 1736,
	1735, 1734, 1737, 146, 1771, 1769, 1772, 1538, 1559, 1581,
	1631, 1632, 1634, 1666, 1667, 1712, 1685, 1694, 1568, 1627,
	317, 176, 187, 199, 218, 216, 231, 260, 283, 288,
	315, 350, 355, 375, 376, 377, 379, 220, 0, 224,
	198, 332, 197, 273, 253, 316, 383, 384, 325, 213,
	1653, 170, 181, 267, 1778, 330, 236, 1506, 1514, 1541,
	1549, 1550, 1551, 1552, 1557, 1564, 1572, 1583, 1584, 1592,
	1598, 1599, 1600, 1601, 1610, 1612, 1613, 1614, 1615, 1616,
	1620, 1621, 1637, 1651, 1652, 1659, 1660, 0, 1689, 1692,
	1709, 1715, 1717, 1724, 1729, 1731, 1768, 1781, 402, 217,
	1633, 1658, 1696, 182, 191, 202, 215, 228, 235, 246,
	249, 254, 255, 257, 261, 275, 277, 278, 279, 280,
	298, 299, 303, 304, 307, 308, 312, 313, 314, 318,
	319, 326, 159, 333, 340, 342, 343, 344, 345, 353,
	354, 356, 357, 364, 392, 393, 407, 408, 1742, 1606,
	167, 0, 0, 173, 0, 0, 0, 0, 0, 1591,
	172, 1738, 1773, 1670, 1684, 1754, 1716, 380, 1609, 1758,
	1558, 1588, 1775, 1594, 1597, 1678, 1524, 1647, 306, 1585,
	1525, 1508, 1563, 1512, 1576, 1513, 1560, 223, 1556, 1719,
	1650, 1756, 1629, 1671, 1681, 222, 209, 1639, 1638, 1744,
	1574, 1573, 1676, 1733, 1755, 1628, 0, 1765, 269, 1730,
	0, 405, 362, 289, 0, 0, 1624, 1739, 1645, 1708,
	1607, 1680, 1540, 1663, 1760, 1586, 1672, 1761, 0, 0,
	0, 0, 0, 468, 0, 0, 0, 0, 0, 0,
	0, 0, 148, 0, 1668, 1752, 1579, 0, 1619, 1677,
	1780, 1511, 1664, 0, 1516, 1527, 1774, 1745, 1570, 1571,
	227, 0, 0, 0, 0, 0, 0, 0, 1622, 1646,
	1698, 1604, 399, 1683, 1693, 1711, 1596, 324, 242, 0,
	0, 0, 0, 0, 0, 2618, 0, 1565, 0, 1661,
	0, 0, 0, 1532, 1518, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1618, 0, 0,
	0, 1539, 1509, 1567, 1700, 1510, 1507, 290, 1528, 1713,
	1743, 1605, 258, 165, 1749, 1603, 1602, 1687, 1533, 1723,
	1589, 266, 1531, 166, 1526, 1534, 1587, 301, 1697, 1705,
	153, 169, 268, 1720, 1561, 1578, 210, 0, 336, 1673,
	398, 1946, 238, 1654, 335, 270, 391, 1688, 1751, 397,
	1590, 374, 406, 410, 234, 1630, 201, 359, 225, 219,
	1569, 1710, 1515, 243, 323, 214, 262, 1608, 1679, 1562,
	206, 1691, 1662, 1725, 358, 388, 171, 286, 389, 409,
	189, 381, 287, 294, 203, 205, 204, 183, 352, 387,
	195, 208, 1721, 1704, 1727, 1555, 1535, 1546, 1536, 1577,
	1753, 252, 244, 1728, 1726, 1580, 310, 192, 1643, 1636,
	1623, 1701, 401, 1776, 221, 1706, 403, 155, 347, 346,
	1593, 251, 1707, 156, 147, 331, 157, 259, 174, 1732,
	412, 188, 264, 382, 1945, 237, 300, 212, 1675, 311,
	1575, 168, 327, 282, 284, 281, 285, 241, 151, 158,
	1703, 329, 349, 386, 190, 365, 149, 150, 152, 160,
	339, 161, 162, 1759, 276, 229, 233, 245, 256, 1674,
	334, 366, 404, 1665, 185, 338, 367, 378, 368, 371,
	369, 370, 341, 177, 373, 396, 196, 348, 351, 411,
	1699, 184, 179, 1747, 1722, 1656, 1611, 1617, 1517, 0,
	178, 1695, 1566, 1582, 1554, 1669, 1553, 240, 1686, 394,
	395, 211, 413, 1529, 1767, 180, 1530, 1766, 297, 305,
	296, 1770, 390, 1748, 1657, 1642, 1640, 1522, 1746, 1655,
	1641, 265, 232, 247, 321, 272, 322, 248, 292, 291,
	293, 274, 1644, 0, 175, 0, 363, 1757, 1782, 372,
	193, 1548, 1714, 385, 154, 328, 194, 239, 230, 320,
	295, 186, 250, 361, 263, 271, 1690, 1779, 309, 337,
	200, 400, 360, 226, 1544, 302, 1547, 1542, 1545, 1543,
	1648, 1649, 1762, 1763, 1764, 1702, 1537, 0, 1740, 1741,
	0, 1635, 1750, 1523, 0, 1718, 163, 164, 1682, 1777,
	1595, 207, 142, 1519, 1520, 1521, 143, 1625, 1626, 144,
	145, 1736, 1735, 1734, 1737, 146, 1771, 1769, 1772, 1538,
	1559, 1581, 1631, 1632, 1634, 1666, 1667, 1712, 1685, 1694,
	1568, 1627, 317, 176, 187, 199, 218, 216, 231, 260,
	283, 288, 315, 350, 355, 375, 376, 377, 379, 220,
	0, 224, 198, 332, 197, 273, 253, 316, 383, 384,
	325, 213, 1653, 170, 181, 267, 1778, 330, 236, 1506,
	1514, 1541, 1549, 1550, 1551, 1552, 1557, 1564, 1572, 1583,
	1584, 1592, 1598, 1599, 1600, 1601, 1610, 1612, 1613, 1614,
	1615, 1616, 1620, 1621, 1637, 1651, 1652, 1659, 1660, 0,
	1689, 1692, 1709, 1715, 1717, 1724, 1729, 1731, 1768, 1781,
	402, 217, 1633, 1658, 1696, 182, 191, 202, 215, 228,
	235, 246, 249, 254, 255, 257, 261, 275, 277, 278,
	279, 280, 298, 299, 303, 304, 307, 308, 312, 313,
	314, 318, 319, 326, 159, 333, 340, 342, 343, 344,
	345, 353, 354, 356, 357, 364, 392, 393, 407, 408,
	1742, 1606, 167, 0, 0, 173, 0, 0, 0, 0,
	0, 1591, 172, 1738, 1773, 1670, 1684, 1754, 1716, 380,
	1609, 1758, 1558, 1588, 1775, 1594, 1597, 1678, 1524, 1647,
	306, 1585, 1525, 1508, 1563, 1512, 1576, 1513, 1560, 223,
	1556, 1719, 1650, 1756, 1629, 1671, 1681, 222, 209, 1639,
	1638, 1744, 1574, 1573, 1676, 1733, 1755, 1628, 0, 1765,
	269, 1730, 0, 405, 362, 289, 0, 0, 1624, 1739,
	1645, 1708, 1607, 1680, 1540, 1663, 1760, 1586, 1672, 1761,
	0, 0, 0, 0, 0, 468, 0, 0, 0, 0,
	0, 0, 0, 0, 148, 0, 1668, 1752, 1579, 0,
	1619, 1677, 1780, 1511, 1664, 0, 1516, 1527, 1774, 1745,
	1570, 1571, 227, 0, 0, 0, 0, 0, 0, 0,
	1622, 1646, 1698, 1604, 399, 1683, 1693, 1711, 1596, 324,
	242, 0, 0, 0, 0, 0, 0, 1940, 0, 1565,
	0, 1661, 0, 0, 0, 1532, 1518, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1618,
	0, 0, 0, 1539, 1509, 1567, 1700, 1510, 1507, 290,
	1528, 1713, 1743, 1605, 258, 165, 1749, 1603, 1602, 1687,
	1533, 1723, 1589, 266, 1531, 166, 1526, 1534, 1587, 301,
	1697, 1705, 153, 169, 268, 1720, 1561, 1578, 210, 0,
	336, 1673, 398, 1946, 238, 1654, 335, 270, 391, 1688,
	1751, 397, 1590, 374, 406, 410, 234, 1630, 201, 359,
	225, 219, 1569, 1710, 1515, 243, 323, 214, 262, 1608,
	1679, 1562, 206, 1691, 1662, 1725, 358, 388, 171, 286,
	389, 409, 189, 381, 287, 294, 203, 205, 204, 183,
	352, 387, 195, 208, 1721, 1704, 1727, 1555, 1535, 1546,
	1536, 1577, 1753, 252, 244, 1728, 1726, 1580, 310, 192,
	1643, 1636, 1623, 1701, 401, 1776, 221, 1706, 403, 155,
	347, 346, 1593, 251, 1707, 156, 147, 331, 157, 259,
	174, 1732, 412, 188, 264, 382, 1945, 237, 300, 212,
	1675, 311, 1575, 168, 327, 282, 284, 281, 285, 241,
	151, 158, 1703, 329, 349, 386, 190, 365, 149, 150,
	152, 160, 339, 161, 162, 1759, 276, 229, 233, 245,
	256, 1674, 334, 366, 404, 1665, 185, 338, 367, 378,
	368, 371, 369, 370, 341, 177, 373, 396, 196, 348,
	351, 411, 1699, 184, 179, 1747, 1722, 1656, 1611, 1617,
	1517, 0, 178, 1695, 1566, 1582, 1554, 1669, 1553, 240,
	1686, 394, 395, 211, 413, 1529, 1767, 180, 1530, 1766,
	297, 305, 296, 1770, 390, 1748, 1657, 1642, 1640, 1522,
	1746, 1655, 1641, 265, 232, 247, 321, 272, 322, 248,
	292, 291, 293, 274, 1644, 0, 175, 0, 363, 1757,
	1782, 372, 193, 1548, 1714, 385, 154, 328, 194, 239,
	230, 320, 295, 186, 250, 361, 263, 271, 1690, 1779,
	309, 337, 200, 400, 360, 226, 1544, 302, 1547, 1542,
	1545, 1543, 1648, 1649, 1762, 1763, 1764, 1702, 1537, 0,
	1740, 1741, 0, 1635, 1750, 1523, 0, 1718, 163, 164,
	1682, 1777, 1595, 207, 142, 1519, 1520, 1521, 143, 1625,
	1626, 144, 145, 1736, 1735, 1734, 1737, 146, 1771, 1769,
	1772, 1538, 1559, 1581, 1631, 1632, 1634, 1666, 1667, 1712,
	1685, 1694, 1568, 1627, 317, 176, 187, 199, 218, 216,
	231, 260, 283, 288, 315, 350, 355, 375, 376, 377,
	379, 220, 0, 224, 198, 332, 197, 273, 253, 316,
	383, 384, 325, 213, 1653, 170, 181, 267, 1778, 330,
	236, 1506, 1514, 1541, 1549, 1550, 1551, 1552, 1557, 1564,
	1572, 1583, 1584, 1592, 1598, 1599, 1600, 1601, 1610, 1612,
	1613, 1614, 1615, 1616, 1620, 1621, 1637, 1651, 1652, 1659,
	1660, 0, 1689, 1692, 1709, 1715, 1717, 1724, 1729, 1731,
	1768, 1781, 402, 217, 1633, 1658, 1696, 182, 191, 202,
	215, 228, 235, 246, 249, 254, 255, 257, 261, 275,
	277, 278, 279, 280, 298, 299, 303, 304, 307, 308,
	312, 313, 314, 318, 319, 326, 159, 333, 340, 342,
	343, 344, 345, 353, 354, 356, 357, 364, 392, 393,
	407, 408, 1742, 1606, 167, 0, 0, 173, 0, 0,
	0, 0, 0, 1591, 172, 1738, 1773, 1670, 1684, 1754,
	1716, 380, 1609, 1758, 1558, 1588, 1775, 1594, 1597, 1678,
	1524, 1647, 306, 1585, 1525, 1508, 1563, 1512, 1576, 1513,
	1560, 223, 1556, 1719, 1650, 1756, 1629, 1671, 1681, 222,
	209, 1639, 1638, 1744, 1574, 1573, 1676, 1733, 1755, 1628,
	0, 1765, 269, 1730, 0, 405, 362, 289, 0, 0,
	1624, 1739, 1645, 1708, 1607, 1680, 1540, 1663, 1760, 1586,
	1672, 1761, 0, 0, 0, 0, 0, 468, 0, 0,
	0, 0, 0, 0, 0, 0, 148, 0, 1668, 1752,
	1579, 0, 1619, 1677, 1780, 1511, 1664, 0, 1516, 1527,
	1774, 1745, 1570, 1571, 227, 0, 0, 0, 0, 0,
	0, 0, 1622, 1646, 1698, 1604, 399, 1683, 1693, 1711,
	1596, 324, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 1565, 0, 1661, 0, 0, 0, 1532, 1518, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1618, 0, 0, 0, 1539, 1509, 1567, 1700, 1510,
	1507, 290, 1528, 1713, 1743, 1605, 258, 165, 1749, 1603,
	1602, 1687, 1533, 1723, 1589, 266, 1531, 166, 1526, 1534,
	1587, 301, 1697, 1705, 153, 169, 268, 1720, 1561, 1578,
	210, 0, 336, 1673, 398, 1946, 238, 1654, 335, 270,
	391, 1688, 1751, 397, 1590, 374, 406, 410, 234, 1630,
	201, 359, 225, 219, 1569, 1710, 1515, 243, 323, 214,
	262, 1608, 1679, 1562, 206, 1691, 1662, 1725, 358, 388,
	171, 286, 389, 409, 189, 381, 287, 294, 203, 205,
	204, 183, 352, 387, 195, 208, 1721, 1704, 1727, 1555,
	1535, 1546, 1536, 1577, 1753, 252, 244, 1728, 1726, 1580,
	310, 192, 1643, 1636, 1623, 1701, 401, 1776, 221, 1706,
	403, 155, 347, 346, 1593, 251, 1707, 156, 147, 331,
	157, 259, 174, 1732, 412, 188, 264, 382, 1945, 237,
	300, 212, 1675, 311, 1575, 168, 327, 282, 284, 281,
	285, 241, 151, 158, 1703, 329, 349, 386, 190, 365,
	149, 150, 152, 160, 339, 161, 162, 1759, 276, 229,
	233, 245, 256, 1674, 334, 366, 404, 1665, 185, 338,
	367, 378, 368, 371, 369, 370, 341, 177, 373, 396,
	196, 348, 351, 411, 1699, 184, 179, 1747, 1722, 1656,
	1611, 1617, 1517, 0, 178, 1695, 1566, 1582, 1554, 1669,
	1553, 240, 1686, 394, 395, 211, 413, 1529, 1767, 180,
	1530, 1766, 297, 305, 296, 1770, 390, 1748, 1657, 1642,
	1640, 1522, 1746, 1655, 1641, 265, 232, 247, 321, 272,
	322, 248, 292, 291, 293, 274, 1644, 0, 175, 0,
	363, 1757, 1782, 372, 193, 1548, 1714, 385, 154, 328,
	194, 239, 230, 320, 295, 186, 250, 361, 263, 271,
	1690, 1779, 309, 337, 200, 400, 360, 226, 1544, 302,
	1547, 1542, 1545, 1543, 1648, 1649, 1762, 1763, 1764, 1702,
	1537, 0, 1740, 1741, 0, 1635, 1750, 1523, 0, 1718,
	163, 164, 1682, 1777, 1595, 207, 142, 1519, 1520, 1521,
	143, 1625, 1626, 144, 145, 1736, 1735, 1734, 1737, 146,
	1771, 1769, 1772, 1538, 1559, 1581, 1631, 1632, 1634, 1666,
	1667, 1712, 1685, 1694, 1568, 1627, 317, 176, 187, 199,
	218, 216, 231, 260, 283, 288, 315, 350, 355, 375,
	376, 377, 379, 220, 0, 224, 198, 332, 197, 273,
	253, 316, 383, 384, 325, 213, 1653, 170, 181, 267,
	1778, 330, 236, 1506, 1514, 1541, 1549, 1550, 1551, 1552,
	1557, 1564, 1572, 1583, 1584, 1592, 1598, 1599, 1600, 1601,
	1610, 1612, 1613, 1614, 1615, 1616, 1620, 1621, 1637, 1651,
	1652, 1659, 1660, 0, 1689, 1692, 1709, 1715, 1717, 1724,
	1729, 1731, 1768, 1781, 402, 217, 1633, 1658, 1696, 182,
	191, 202, 215, 228, 235, 246, 249, 254, 255, 257,
	261, 275, 277, 278, 279, 280, 298, 299, 303, 304,
	307, 308, 312, 313, 314, 318, 319, 326, 159, 333,
	340, 342, 343, 344, 345, 353, 354, 356, 357, 364,
	392, 393, 407, 408, 1742, 1606, 167, 0, 0, 173,
	0, 0, 0, 0, 0, 1591, 172, 1738, 1773, 1670,
	1684, 883, 0, 380, 948, 887, 730, 753, 896, 759,
	761, 824, 706, 801, 306, 750, 707, 0, 0, 698,
	943, 699, 731, 223, 941, 857, 802, 885, 787, 817,
	827, 222, 209, 794, 793, 874, 742, 741, 822, 870,
	884, 0, 0, 981, 269, 0, 1003, 405, 362, 289,
	1006, 1005, 785, 0, 955, 968, 770, 826, 718, 813,
	889, 751, 818, 890, 0, 0, 0, 0, 0, 468,
	0, 0, 0, 0, 0, 0, 0, 0, 148, 0,
	963, 977, 944, 1004, 780, 823, 901, 697, 960, 0,
	702, 932, 0, 875, 738, 739, 227, 0, 0, 0,
	0, 0, 0, 0, 783, 800, 842, 767, 399, 829,
	838, 852, 760, 324, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 959, 0, 0, 0, 712,
	928, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 949, 0, 0, 0, 717, 695, 736,
	844, 696, 694, 290, 709, 970, 873, 768, 258, 165,
	879, 766, 947, 832, 713, 861, 754, 266, 711, 166,
	708, 714, 752, 301, 841, 847, 153, 169, 268, 858,
	732, 745, 210, 2687, 336, 819, 398, 2689, 238, 805,
	335, 270, 391, 833, 881, 397, 755, 374, 406, 410,
	234, 788, 201, 359, 225, 219, 737, 851, 701, 243,
	323, 214, 262, 771, 825, 733, 206, 836, 812, 863,
	358, 388, 171, 286, 389, 409, 189, 381, 287, 294,
	203, 205, 204, 183, 352, 387, 195, 208, 859, 846,
	865, 728, 715, 720, 716, 744, 882, 252, 244, 866,
	864, 746, 310, 192, 798, 791, 784, 966, 401, 897,
	221, 848, 403, 155, 347, 346, 758, 251, 849, 156,
	147, 331, 157, 259, 174, 869, 412, 188, 264, 382,
	2688, 237, 300, 212, 821, 311, 743, 168, 327, 282,
	284, 281, 285, 241, 151, 158, 845, 329, 349, 386,
	190, 365, 149, 150, 152, 160, 339, 161, 162, 888,
	276, 229, 233, 245, 256, 820, 334, 366, 404, 814,
	185, 338, 367, 378, 368, 371, 369, 370, 341, 177,
	373, 396, 196, 348, 351, 411, 843, 184, 179, 877,
	860, 807, 773, 779, 703, 0, 178, 839, 735, 747,
	727, 815, 726, 240, 831, 394, 395, 211, 413, 933,
	892, 180, 710, 891, 297, 305, 296, 894, 390, 878,
	808, 797, 795, 704, 876, 806, 796, 265, 232, 247,
	321, 272, 322, 248, 292, 291, 293, 274, 799, 0,
	175, 0, 363, 886, 903, 372, 193, 721, 853, 385,
	154, 328, 194, 239, 230, 320, 295, 186, 250, 361,
	263, 271, 835, 900, 309, 337, 200, 400, 360, 226,
	938, 302, 940, 936, 939, 937, 956, 957, 978, 979,
	980, 967, 934, 0, 975, 976, 0, 790, 880, 705,
	0, 856, 163, 164, 828, 898, 946, 207, 142, 929,
	930, 931, 143, 950, 951, 144, 145, 973, 972, 971,
	974, 146, 983, 982, 984, 935, 942, 945, 952, 953,
	954, 961, 962, 969, 964, 965, 0, 786, 317, 176,
	187, 199, 218, 216, 231, 260, 283, 288, 315, 350,
	355, 375, 376, 377, 379, 220, 0, 224, 198, 332,
	197, 273, 253, 316, 383, 384, 325, 213, 958, 170,
	181, 267, 899, 330, 236, 693, 700, 719, 722, 723,
	724, 725, 729, 734, 740, 748, 749, 757, 762, 763,
	764, 765, 772, 774, 775, 776, 777, 778, 781, 782,
	792, 803, 804, 810, 811, 0, 834, 837, 850, 854,
	855, 862, 867, 868, 893, 902, 402, 217, 789, 809,
	840, 182, 191, 202, 215, 228, 235, 246, 249, 254,
	255, 257, 261, 275, 277, 278, 279, 280, 298, 299,
	303, 304, 307, 308, 312, 313, 314, 318, 319, 326,
	159, 333, 340, 342, 343, 344, 345, 353, 354, 356,
	357, 364, 392, 393, 407, 408, 872, 769, 167, 0,
	0, 173, 0, 0, 0, 0, 0, 756, 172, 871,
	895, 816, 830, 883, 0, 380, 948, 887, 730, 753,
	896, 759, 761, 824, 706, 801, 306, 750, 707, 0,
	0, 698, 943, 699, 731, 223, 941, 857, 802, 885,
	787, 817, 827, 222, 209, 794, 793, 874, 742, 741,
	822, 870, 884, 0, 0, 981, 269, 0, 0, 405,
	362, 289, 0, 0, 785, 0, 955, 968, 770, 826,
	718, 813, 889, 751, 818, 890, 0, 0, 0, 0,
	0, 468, 0, 0, 0, 0, 0, 0, 0, 0,
	148, 0, 963, 977, 944, 0, 780, 823, 901, 697,
	960, 0, 702, 932, 0, 875, 738, 739, 227, 0,
	0, 0, 0, 0, 0, 0, 783, 800, 842, 767,
	399, 829, 838, 852, 760, 324, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 959, 0, 0,
	0, 712, 928, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 949, 0, 0, 0, 717,
	695, 736, 844, 696, 694, 290, 709, 970, 873, 768,
	258, 165, 879, 766, 947, 832, 713, 861, 754, 266,
	711, 166, 708, 714, 752, 301, 841, 847, 153, 169,
	268, 858, 732, 745, 210, 0, 336, 819, 398, 927,
	238, 805, 335, 270, 391, 833, 881, 397, 755, 374,
	406, 410, 234, 788, 201, 359, 225, 219, 737, 851,
	701, 243, 323, 214, 262, 771, 825, 733, 206, 836,
	812, 863, 358, 388, 171, 286, 389, 409, 189, 381,
	287, 294, 203, 205, 204, 183, 352, 387, 195, 208,
	859, 846, 865, 728, 715, 720, 716, 744, 882, 252,
	244, 866, 864, 746, 310, 192, 798, 791, 784, 966,
	401, 897, 221, 848, 403, 155, 347, 346, 758, 251,
	849, 156, 147, 331, 157, 259, 174, 869, 412, 188,
	264, 382, 926, 237, 300, 212, 821, 311, 743, 168,
	327, 282, 284, 281, 285, 241, 151, 158, 845, 329,
	349, 386, 190, 365, 149, 150, 152, 160, 339, 161,
	162, 888, 276, 229, 233, 245, 256, 820, 334, 366,
	404, 814, 185, 338, 367, 378, 368, 371, 369, 370,
	341, 177, 373, 396, 196, 348, 351, 411, 843, 184,
	179, 877, 860, 807, 773, 779, 703, 0, 178, 839,
	735, 747, 727, 815, 726, 240, 831, 394, 395, 211,
	413, 933, 892, 180, 710, 891, 297, 305, 296, 894,
	390, 878, 808, 797, 795, 704, 876, 806, 796, 265,
	232, 247, 321, 272, 322, 248, 292, 291, 293, 274,
	799, 0, 175, 0, 363, 886, 903, 372, 193, 721,
	853, 385, 154, 328, 194, 239, 230, 320, 295, 186,
	250, 361, 263, 271, 835, 900, 309, 337, 200, 400,
	360, 226, 938, 302, 940, 936, 939, 937, 956, 957,
	978, 979, 980, 967, 934, 0, 975, 976, 0, 790,
	880, 705, 0, 856, 163, 164, 828, 898, 946, 207,
	142, 929, 930, 931, 143, 950, 951, 144, 145, 973,
	972, 971, 974, 146, 983, 982, 984, 935, 942, 945,
	952, 953, 954, 961, 962, 969, 964, 965, 0, 786,
	317, 176, 187, 199, 218, 216, 231, 260, 283, 288,
	315, 350, 355, 375, 376, 377, 379, 220, 0, 224,
	198, 332, 197, 273, 253, 316, 383, 384, 325, 213,
	958, 170, 181, 267, 899, 330, 236, 693, 700, 719,
	722, 723, 724, 725, 729, 734, 740, 748, 749, 757,
	762, 763, 764, 765, 772, 774, 775, 776, 777, 778,
	781, 782, 792, 803, 804, 810, 811, 0, 834, 837,
	850, 854, 855, 862, 867, 868, 893, 902, 402, 217,
	789, 809, 840, 182, 191, 202, 215, 228, 235, 246,
	249, 254, 255, 257, 261, 275, 277, 278, 279, 280,
	298, 299, 303, 304, 307, 308, 312, 313, 314, 318,
	319, 326, 159, 333, 340, 342, 343, 344, 345, 353,
	354, 356, 357, 364, 392, 393, 407, 408, 872, 769,
	167, 0, 0, 173, 0, 0, 0, 0, 0, 756,
	172, 871, 895, 816, 830, 883, 0, 380, 948, 887,
	730, 753, 896, 759, 761, 824, 706, 801, 306, 750,
	707, 0, 0, 698, 943, 699, 731, 223, 941, 857,
	802, 885, 787, 817, 827, 222, 209, 794, 793, 874,
	742, 741, 822, 870, 884, 0, 0, 981, 269, 0,
	0, 405, 362, 289, 0, 0, 785, 0, 955, 968,
	770, 826, 718, 813, 889, 751, 818, 890, 0, 0,
	0, 0, 0, 468, 0, 0, 0, 0, 0, 0,
	0, 0, 148, 0, 963, 977, 944, 0, 780, 823,
	901, 697, 960, 0, 702, 932, 0, 875, 738, 739,
	227, 0, 0, 0, 0, 0, 0, 0, 783, 800,
	842, 767, 399, 829, 838, 852, 760, 324, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 959,
	0, 0, 0, 712, 928, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 949, 0, 0,
	0, 717, 695, 736, 844, 696, 694, 290, 709, 970,
	873, 768, 258, 165, 879, 766, 947, 832, 713, 861,
	754, 266, 711, 166, 708, 714, 752, 301, 841, 847,
	153, 169, 268, 858, 732, 745, 210, 0, 336, 819,
	398, 927, 238, 805, 335, 270, 391, 833, 881, 397,
	755, 374, 406, 410, 234, 788, 201, 359, 225, 219,
	737, 851, 701, 243, 323, 214, 262, 771, 825, 733,
	206, 836, 812, 863, 358, 388, 171, 286, 389, 409,
	189, 381, 287, 294, 203, 205, 204, 183, 352, 387,
	195, 208, 859, 846, 865, 728, 715, 720, 716, 744,
	882, 252, 244, 866, 864, 746, 310, 192, 798, 791,
	784, 966, 401, 897, 221, 848, 403, 155, 347, 346,
	758, 251, 849, 156, 147, 331, 157, 259, 174, 869,
	412, 188, 264, 382, 926, 237, 300, 212, 821, 311,
	743, 168, 327, 282, 284, 281, 285, 241, 151, 158,
	845, 329, 349, 386, 190, 365, 149, 150, 152, 160,
	339, 161, 162, 888, 276, 229, 233, 245, 256, 820,
	334, 366, 404, 814, 185, 338, 367, 378, 368, 371,
	369, 370, 341, 177, 373, 396, 196, 348, 351, 411,
	843, 184, 179, 877, 860, 807, 773, 779, 703, 0,
	178, 839, 735, 747, 727, 815, 726, 240, 831, 394,
	395, 211, 413, 933, 892, 180, 921, 891, 297, 305,
	296, 894, 390, 878, 808, 797, 795, 704, 876, 806,
	796, 265, 232, 247, 321, 272, 322, 248, 292, 291,
	293, 917, 799, 0, 175, 0, 363, 886, 903, 372,
	193, 721, 853, 385, 154, 328, 194, 239, 230, 320,
	922, 920, 911, 912, 263, 271, 835, 900, 309, 337,
	200, 400, 360, 226, 938, 302, 940, 936, 939, 937,
	956, 957, 978, 979, 980, 967, 934, 0, 975, 976,
	0, 790, 880, 705, 0, 856, 163, 164, 828, 898,
	946, 207, 142, 929, 930, 931, 143, 950, 951, 144,
	145, 973, 972, 971, 974, 146, 983, 982, 984, 935,
	942, 945, 952, 953, 954, 961, 962, 969, 964, 965,
	0, 786, 317, 176, 187, 199, 218, 216, 231, 260,
	283, 288, 315, 350, 355, 375, 376, 377, 379, 220,
	0, 224, 198, 332, 197, 273, 253, 316, 383, 384,
	325, 213, 958, 170, 181, 267, 899, 330, 236, 693,
	700, 719, 722, 723, 724, 725, 729, 734, 740, 748,
	749, 757, 762, 763, 764, 765, 772, 774, 775, 776,
	777, 778, 781, 782, 792, 803, 804, 810, 811, 0,
	834, 837, 850, 854, 855, 862, 867, 868, 893, 902,
	402, 217, 789, 809, 840, 182, 191, 202, 215, 228,
	235, 246, 249, 254, 255, 257, 261, 275, 277, 278,
	279, 280, 298, 299, 303, 304, 307, 308, 312, 313,
	314, 918, 919, 326, 159, 333, 340, 342, 343, 344,
	345, 353, 354, 356, 357, 364, 392, 393, 407, 408,
	872, 769, 167, 0, 0, 173, 0, 0, 0, 0,
	0, 756, 172, 871, 895, 816, 830, 883, 0, 380,
	948, 887, 730, 753, 896, 759, 761, 824, 706, 801,
	306, 750, 707, 0, 0, 698, 943, 699, 731, 223,
	941, 857, 802, 885, 787, 817, 827, 222, 209, 794,
	793, 874, 742, 741, 822, 870, 884, 0, 0, 981,
	269, 0, 0, 405, 362, 289, 0, 0, 785, 0,
	955, 968, 770, 826, 718, 813, 889, 751, 818, 890,
	0, 0, 0, 0, 0, 468, 0, 0, 0, 0,
	0, 0, 0, 0, 148, 0, 963, 977, 944, 0,
	780, 823, 901, 697, 960, 0, 702, 932, 0, 875,
	738, 739, 227, 0, 0, 0, 0, 0, 0, 0,
	783, 800, 842, 767, 399, 829, 838, 852, 760, 324,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 959, 0, 0, 0, 712, 928, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 949,
	0, 0, 0, 717, 695, 736, 844, 696, 694, 290,
	709, 970, 873, 768, 258, 165, 879, 766, 947, 832,
	713, 861, 754, 266, 711, 166, 708, 714, 752, 301,
	841, 847, 153, 169, 268, 858, 732, 745, 210, 0,
	336, 819, 398, 927, 238, 805, 335, 270, 391, 833,
	881, 397, 755, 374, 406, 410, 234, 788, 201, 359,
	225, 219, 737, 851, 701, 243, 323, 214, 262, 771,
	825, 733, 206, 836, 812, 863, 358, 388, 171, 286,
	389, 409, 189, 381, 287, 294, 203, 205, 204, 183,
	352, 387, 195, 208, 859, 846, 865, 728, 715, 720,
	716, 744, 882, 252, 244, 866, 864, 746, 310, 192,
	798, 791, 784, 966, 401, 897, 221, 848, 403, 155,
	347, 346, 758, 251, 849, 156, 147, 331, 157, 259,
	174, 869, 412, 188, 264, 382, 926, 237, 300, 212,
	821, 311, 743, 168, 327, 282, 284, 281, 285, 241,
	151, 158, 845, 329, 349, 386, 190, 365, 149, 150,
	152, 160, 339, 161, 162, 888, 276, 229, 233, 245,
	256, 820, 334, 366, 404, 814, 185, 338, 367, 378,
	368, 371, 369, 370, 341, 177, 373, 1383, 196, 348,
	351, 411, 843, 184, 179, 877, 860, 807, 773, 779,
	703, 0, 178, 839, 735, 747, 727, 815, 726, 240,
	831, 394, 395, 211, 413, 933, 892, 180, 710, 891,
	297, 305, 296, 894, 390, 878, 808, 797, 795, 704,
	876, 806, 796, 265, 232, 247, 321, 272, 322, 248,
	292, 291, 293, 274, 799, 0, 175, 0, 363, 886,
	903, 372, 193, 721, 853, 385, 154, 328, 194, 239,
	230, 320, 295, 186, 250, 361, 263, 271, 835, 900,
	309, 337, 200, 400, 360, 226, 938, 302, 940, 936,
	939, 937, 956, 957, 978, 979, 980, 967, 934, 0,
	975, 976, 0, 790, 880, 705, 0, 856, 163, 164,
	828, 898, 946, 207, 142, 929, 930, 931, 143, 950,
	951, 144, 145, 973, 972, 971, 974, 146, 983, 982,
	984, 935, 942, 945, 952, 953, 954, 961, 962, 969,
	964, 965, 0, 786, 317, 176, 187, 199, 218, 216,
	231, 260, 283, 288, 315, 350, 355, 375, 376, 377,
	379, 220, 0, 224, 198, 332, 197, 273, 253, 316,
	383, 384, 325, 213, 958, 170, 181, 267, 899, 330,
	236, 693, 700, 719, 722, 723, 724, 725, 729, 734,
	740, 748, 749, 757, 762, 763, 764, 765, 772, 774,
	775, 776, 777, 778, 781, 782, 792, 803, 804, 810,
	811, 0, 834, 837, 850, 854, 855, 862, 867, 868,
	893, 902, 402, 217, 789, 809, 840, 182, 191, 202,
	215, 228, 235, 246, 249, 254, 255, 257, 261, 275,
	277, 278, 279, 280, 298, 299, 303, 304, 307, 308,
	312, 313, 314, 318, 319, 326, 159, 333, 340, 342,
	343, 344, 345, 353, 354, 356, 357, 364, 392, 393,
	407, 408, 872, 769, 167, 0, 0, 173, 0, 0,
	0, 0, 0, 756, 172, 871, 895, 816, 830, 883,
	0, 380, 948, 887, 730, 753, 896, 759, 761, 824,
	706, 801, 306, 750, 707, 0, 0, 698, 943, 699,
	731, 223, 941, 857, 802, 885, 787, 817, 827, 222,
	209, 794, 793, 874, 742, 741, 822, 870, 884, 0,
	0, 981, 269, 0, 0, 405, 362, 289, 0, 0,
	785, 0, 955, 968, 770, 826, 718, 813, 889, 751,
	818, 890, 0, 0, 0, 0, 0, 468, 0, 0,
	0, 0, 0, 0, 0, 0, 148, 0, 963, 977,
	944, 0, 780, 823, 901, 697, 960, 0, 702, 932,
	0, 875, 738, 739, 227, 0, 0, 0, 0, 0,
	0, 0, 783, 800, 842, 767, 399, 829, 838, 852,
	760, 324, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 959, 0, 0, 0, 712, 928, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 949, 0, 0, 0, 717, 695, 736, 844, 696,
	694, 290, 709, 970, 873, 768, 258, 165, 879, 766,
	947, 832, 713, 861, 754, 266, 711, 166, 708, 714,
	752, 301, 841, 847, 153, 169, 268, 858, 732, 745,
	210, 0, 336, 819, 398, 927, 238, 805, 335, 270,
	391, 833, 881, 397, 755, 374, 406, 410, 234, 788,
	201, 359, 225, 219, 737, 851, 701, 243, 323, 214,
	262, 771, 825, 733, 206, 836, 812, 863, 358, 388,
	171, 286, 389, 409, 189, 381, 287, 294, 203, 205,
	204, 183, 352, 387, 195, 208, 859, 846, 865, 728,
	715, 720, 716, 744, 882, 252, 244, 866, 864, 746,
	310, 192, 798, 791, 784, 966, 401, 897, 221, 848,
	403, 155, 347, 346, 758, 251, 849, 156, 147, 331,
	157, 259, 174, 869, 412, 188, 264, 382, 926, 237,
	300, 212, 821, 311, 743, 168, 327, 282, 284, 281,
	285, 241, 151, 158, 845, 329, 349, 386, 190, 365,
	149, 150, 152, 160, 339, 161, 162, 888, 276, 229,
	233, 245, 256, 820, 334, 366, 404, 814, 185, 338,
	367, 378, 368, 371, 369, 370, 341, 177, 373, 908,
	196, 348, 351, 411, 843, 184, 179, 877, 860, 807,
	773, 779, 703, 0, 178, 839, 735, 747, 727, 815,
	726, 240, 831, 394, 395, 211, 413, 933, 892, 180,
	921, 891, 297, 305, 296, 894, 390, 878, 808, 797,
	795, 704, 876, 806, 796, 265, 232, 247, 321, 272,
	322, 248, 292, 291, 293, 917, 799, 0, 175, 0,
	363, 886, 903, 372, 193, 721, 853, 385, 154, 328,
	194, 239, 230, 320, 922, 920, 911, 912, 263, 271,
	835, 900, 309, 337, 200, 400, 360, 226, 938, 302,
	940, 936, 939, 937, 956, 957, 978, 979, 980, 967,
	934, 0, 975, 976, 0, 790, 880, 705, 0, 856,
	163, 164, 828, 898, 946, 207, 142, 929, 930, 931,
	143, 950, 951, 144, 145, 973, 972, 971, 974, 146,
	983, 982, 984, 935, 942, 945, 952, 953, 954, 961,
	962, 969, 964, 965, 0, 786, 317, 176, 187, 199,
	218, 216, 231, 260, 283, 288, 315, 350, 355, 375,
	376, 377, 379, 220, 0, 224, 198, 332, 197, 273,
	253, 316, 383, 384, 325, 213, 958, 170, 181, 267,
	899, 330, 236, 693, 700, 719, 722, 723, 724, 725,
	729, 734, 740, 748, 749, 757, 762, 763, 764, 765,
	772, 774, 775, 776, 777, 778, 781, 782, 792, 803,
	804, 810, 811, 0, 834, 837, 850, 854, 855, 862,
	867, 868, 893, 902, 402, 217, 789, 809, 840, 182,
	191, 202, 215, 228, 235, 246, 249, 254, 255, 257,
	261, 275, 277, 278, 279, 280, 298, 299, 303, 304,
	307, 308, 312, 313, 314, 918, 919, 326, 159, 333,
	340, 342, 343, 344, 345, 353, 354, 356, 357, 364,
	392, 393, 407, 408, 872, 769, 167, 0, 0, 173,
	0, 0, 0, 0, 0, 756, 172, 871, 895, 816,
	830, 1754, 1716, 380, 1609, 1758, 1558, 1588, 1775, 1594,
	1597, 1678, 1524, 1647, 306, 1585, 1525, 1508, 1563, 1512,
	1576, 1513, 1560, 223, 1556, 1719, 1650, 1756, 1629, 1671,
	1681, 222, 209, 1639, 1638, 1744, 1574, 1573, 1676, 1733,
	1755, 1628, 0, 1765, 269, 1730, 0, 405, 362, 289,
	0, 0, 1624, 1739, 1645, 1708, 1607, 1680, 1540, 1663,
	1760, 1586, 1672, 1761, 0, 0, 0, 0, 0, 2767,
	0, 2762, 2763, 0, 0, 0, 0, 0, 2764, 0,
	1668, 1752, 1579, 0, 1619, 1677, 1780, 1511, 1664, 0,
	1516, 1527, 1774, 1745, 1570, 1571, 227, 0, 0, 0,
	0, 0, 0, 0, 1622, 1646, 1698, 1604, 399, 1683,
	1693, 1711, 1596, 324, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 1565, 0, 1661, 0, 0, 0, 1532,
	1518, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1618, 0, 0, 0, 1539, 1509, 1567,
	1700, 1510, 1507, 290, 1528, 1713, 1743, 1605, 258, 0,
	1749, 1603, 1602, 1687, 1533, 1723, 1589, 266, 1531, 166,
	1526, 1534, 1587, 301, 1697, 1705, 0, 169, 268, 1720,
	1561, 1578, 210, 0, 336, 1673, 398, 0, 238, 1654,
	335, 270, 391, 1688, 1751, 397, 1590, 374, 406, 410,
	234, 1630, 201, 359, 225, 219, 1569, 1710, 1515, 243,
	323, 214, 262, 1608, 1679, 1562, 206, 1691, 1662, 1725,
	358, 388, 171, 286, 389, 409, 189, 381, 287, 294,
	203, 205, 204, 183, 352, 387, 195, 208, 1721, 1704,
	1727, 1555, 1535, 1546, 1536, 1577, 1753, 252, 244, 1728,
	1726, 1580, 310, 192, 1643, 1636, 1623, 1701, 401, 1776,
	221, 1706, 403, 0, 347, 346, 1593, 251, 1707, 0,
	0, 331, 2766, 259, 174, 1732, 412, 188, 264, 382,
	0, 237, 300, 212, 1675, 311, 1575, 168, 327, 282,
	284, 281, 285, 241, 0, 0, 1703, 329, 349, 386,
	190, 365, 2765, 0, 0, 0, 339, 0, 0, 1759,
	276, 229, 233, 245, 256, 1674, 334, 366, 404, 1665,
	185, 338, 367, 378, 368, 371, 369, 370, 341, 177,
	373, 396, 196, 348, 351, 411, 1699, 184, 179, 1747,
	1722, 1656, 1611, 1617, 1517, 0, 178, 1695, 1566, 1582,
	1554, 1669, 1553, 240, 1686, 394, 395, 211, 413, 1529,
	1767, 180, 1530, 1766, 297, 305, 296, 1770, 390, 1748,
	1657, 1642, 1640, 1522, 1746, 1655, 1641, 265, 232, 247,
	321, 272, 322, 248, 292, 291, 293, 274, 1644, 0,
	175, 0, 363, 1757, 1782, 372, 193, 1548, 1714, 385,
	0, 328, 194, 239, 230, 320, 295, 186, 250, 361,
	263, 271, 1690, 1779, 309, 337, 200, 400, 360, 226,
	1544, 302, 1547, 1542, 1545, 1543, 1648, 1649, 1762, 1763,
	1764, 1702, 1537, 0, 1740, 1741, 0, 1635, 1750, 1523,
	0, 1718, 0, 0, 1682, 1777, 1595, 207, 0, 1519,
	1520, 1521, 0, 1625, 1626, 0, 0, 1736, 1735, 1734,
	1737, 0, 1771, 1769, 1772, 1538, 1559, 1581, 1631, 1632,
	1634, 1666, 1667, 1712, 1685, 1694, 1568, 1627, 317, 176,
	187, 199, 218, 216, 231, 260, 283, 288, 315, 350,
	355, 375, 376, 377, 379, 220, 0, 224, 198, 332,
	197, 273, 253, 316, 383, 384, 325, 213, 1653, 170,
	181, 267, 1778, 330, 236, 1506, 1514, 1541, 1549, 1550,
	1551, 1552, 1557, 1564, 1572, 1583, 1584, 1592, 1598, 1599,
	1600, 1601, 1610, 1612, 1613, 1614, 1615, 1616, 1620, 1621,
	1637, 1651, 1652, 1659, 1660, 0, 1689, 1692, 1709, 1715,
	1717, 1724, 1729, 1731, 1768, 1781, 402, 217, 1633, 1658,
	1696, 182, 191, 202, 215, 228, 235, 246, 249, 254,
	255, 257, 261, 275, 277, 278, 279, 280, 298, 299,
	303, 304, 307, 308, 312, 313, 314, 318, 319, 326,
	0, 333, 340, 342, 343, 344, 345, 353, 354, 356,
	357, 364, 392, 393, 407, 408, 1742, 1606, 167, 0,
	0, 173, 0, 0, 0, 0, 0, 1591, 172, 1738,
	1773, 1670, 1684, 1754, 1716, 380, 1609, 1758, 1558, 1588,
	1775, 1594, 1597, 1678, 1524, 1647, 306, 1585, 1525, 1508,
	1563, 1512, 1576, 1513, 1560, 223, 1556, 1719, 1650, 1756,
	1629, 1671, 1681, 222, 209, 1639, 1638, 1744, 1574, 1573,
	1676, 1733, 1755, 1628, 0, 1765, 269, 1730, 0, 405,
	362, 289, 0, 0, 1624, 1739, 1645, 1708, 1607, 1680,
	1540, 1663, 1760, 1586, 1672, 1761, 0, 0, 0, 0,
	0, 999, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1668, 1752, 1579, 0, 1619, 1677, 1780, 1511,
	1664, 0, 1516, 1527, 1774, 1745, 1570, 1571, 227, 0,
	0, 0, 0, 0, 0, 0, 1622, 1646, 1698, 1604,
	399, 1683, 1693, 1711, 1596, 324, 242, 0, 0, 0,
	0, 0, 0, 3147, 0, 1565, 0, 1661, 0, 0,
	0, 1532, 1518, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1618, 0, 0, 0, 1539,
	1509, 1567, 1700, 1510, 1507, 290, 1528, 1713, 1743, 1605,
	258, 0, 1749, 1603, 1602, 1687, 1533, 1723, 1589, 266,
	1531, 166, 1526, 1534, 1587, 301, 1697, 1705, 0, 169,
	268, 1720, 1561, 1578, 210, 0, 336, 1673, 398, 0,
	238, 1654, 335, 270, 391, 1688, 1751, 397, 1590, 374,
	406, 410, 234, 1630, 201, 359, 225, 219, 1569, 1710,
	1515, 243, 323, 214, 262, 1608, 1679, 1562, 206, 1691,
	1662, 1725, 358, 388, 171, 286, 389, 409, 189, 381,
	287, 294, 203, 205, 204, 183, 352, 387, 195, 208,
	1721, 1704, 1727, 1555, 1535, 1546, 1536, 1577, 1753, 252,
	244, 1728, 1726, 1580, 310, 192, 1643, 1636, 1623, 1701,
	401, 1776, 221, 1706, 403, 0, 347, 346, 1593, 251,
	1707, 0, 0, 331, 0, 259, 174, 1732, 412, 188,
	264, 382, 0, 237, 300, 212, 1675, 311, 1575, 168,
	327, 282, 284, 281, 285, 241, 0, 0, 1703, 329,
	349, 386, 190, 365, 0, 0, 0, 0, 339, 0,
	0, 1759, 276, 229, 233, 245, 256, 1674, 334, 366,
	404, 1665, 185, 338, 367, 378, 368, 371, 369, 370,
	341, 177, 373, 396, 196, 348, 351, 411, 1699, 184,
	179, 1747, 1722, 1656, 1611, 1617, 1517, 0, 178, 1695,
	1566, 1582, 1554, 1669, 1553, 240, 1686, 394, 395, 211,
	413, 1529, 1767, 180, 1530, 1766, 297, 305, 296, 1770,
	390, 1748, 1657, 1642, 1640, 1522, 1746, 1655, 1641, 265,
	232, 247, 321, 272, 322, 248, 292, 291, 293, 274,
	1644, 0, 175, 0, 363, 1757, 1782, 372, 193, 1548,
	1714, 385, 0, 328, 194, 239, 230, 320, 295, 186,
	250, 361, 263, 271, 1690, 1779, 309, 337, 200, 400,
	360, 226, 1544, 302, 1547, 1542, 1545, 1543, 1648, 1649,
	1762, 1763, 1764, 1702, 1537, 0, 1740, 1741, 0, 1635,
	1750, 1523, 0, 1718, 0, 0, 1682, 1777, 1595, 207,
	0, 1519, 1520, 1521, 0, 1625, 1626, 0, 0, 1736,
	1735, 1734, 1737, 0, 1771, 1769, 1772, 1538, 1559, 1581,
	1631, 1632, 1634, 1666, 1667, 1712, 1685, 1694, 1568, 1627,
	317, 176, 187, 199, 218, 216, 231, 260, 283, 288,
	315, 350, 355, 375, 376, 377, 379, 220, 0, 224,
	198, 332, 197, 273, 253, 316, 383, 384, 325, 213,
	1653, 170, 181, 267, 1778, 330, 236, 1506, 1514, 1541,
	1549, 1550, 1551, 1552, 1557, 1564, 1572, 1583, 1584, 1592,
	1598, 1599, 1600, 1601, 1610, 1612, 1613, 1614, 1615, 1616,
	1620, 1621, 1637, 1651, 1652, 1659, 1660, 0, 1689, 1692,
	1709, 1715, 1717, 1724, 1729, 1731, 1768, 1781, 402, 217,
	1633, 1658, 1696, 182, 191, 202, 215, 228, 235, 246,
	249, 254, 255, 257, 261, 275, 277, 278, 279, 280,
	298, 299, 303, 304, 307, 308, 312, 313, 314, 318,
	319, 326, 0, 333, 340, 342, 343, 344, 345, 353,
	354, 356, 357, 364, 392, 393, 407, 408, 1742, 1606,
	167, 0, 0, 173, 0, 0, 0, 0, 0, 1591,
	172, 1738, 1773, 1670, 1684, 1754, 1716, 380, 1609, 1758,
	1558, 1588, 1775, 1594, 1597, 1678, 1524, 1647, 306, 1585,
	1525, 1508, 1563, 1512, 1576, 1513, 1560, 223, 1556, 1719,
	1650, 1756, 1629, 1671, 1681, 222, 209, 1639, 1638, 1744,
	1574, 1573, 1676, 1733, 1755, 1628, 0, 1765, 269, 1730,
	0, 405, 362, 289, 0, 0, 1624, 1739, 1645, 1708,
	1607, 1680, 1540, 1663, 1760, 1586, 1672, 1761, 0, 0,
	0, 0, 0, 999, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1668, 1752, 1579, 0, 1619, 1677,
	1780, 1511, 1664, 0, 1516, 1527, 1774, 1745, 1570, 1571,
	227, 0, 0, 0, 0, 0, 0, 0, 1622, 1646,
	1698, 1604, 399, 1683, 1693, 1711, 1596, 324, 242, 0,
	0, 0, 0, 0, 0, 2611, 0, 1565, 0, 1661,
	0, 0, 0, 1532, 1518, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1618, 0, 0,
	0, 1539, 1509, 1567, 1700, 1510, 1507, 290, 1528, 1713,
	1743, 1605, 258, 0, 1749, 1603, 1602, 1687, 1533, 1723,
	1589, 266, 1531, 166, 1526, 1534, 1587, 301, 1697, 1705,
	0, 169, 268, 1720, 1561, 1578, 210, 0, 336, 1673,
	398, 0, 238, 1654, 335, 270, 391, 1688, 1751, 397,
	1590, 374, 406, 410, 234, 1630, 201, 359, 225, 219,
	1569, 1710, 1515, 243, 323, 214, 262, 1608, 1679, 1562,
	206, 1691, 1662, 1725, 358, 388, 171, 286, 389, 409,
	189, 381, 287, 294, 203, 205, 204, 183, 352, 387,
	195, 208, 1721, 1704, 1727, 1555, 1535, 1546, 1536, 1577,
	1753, 252, 244, 1728, 1726, 1580, 310, 192, 1643, 1636,
	1623, 1701, 401, 1776, 221, 1706, 403, 0, 347, 346,
	1593, 251, 1707, 0, 0, 331, 0, 259, 174, 1732,
	412, 188, 264, 382, 0, 237, 300, 212, 1675, 311,
	1575, 168, 327, 282, 284, 281, 285, 241, 0, 0,
	1703, 329, 349, 386, 190, 365, 0, 0, 0, 0,
	339, 0, 0, 1759, 276, 229, 233, 245, 256, 1674,
	334, 366, 404, 1665, 185, 338, 367, 378, 368, 371,
	369, 370, 341, 177, 373, 396, 196, 348, 351, 411,
	1699, 184, 179, 1747, 1722, 1656, 1611, 1617, 1517, 0,
	178, 1695, 1566, 1582, 1554, 1669, 1553, 240, 1686, 394,
	395, 211, 413, 1529, 1767, 180, 1530, 1766, 297, 305,
	296, 1770, 390, 1748, 1657, 1642, 1640, 1522, 1746, 1655,
	1641, 265, 232, 247, 321, 272, 322, 248, 292, 291,
	293, 274, 1644, 0, 175, 0, 363, 1757, 1782, 372,
	193, 1548, 1714, 385, 0, 328, 194, 239, 230, 320,
	295, 186, 250, 361, 263, 271, 1690, 1779, 309, 337,
	200, 400, 360, 226, 1544, 302, 1547, 1542, 1545, 1543,
	1648, 1649, 1762, 1763, 1764, 1702, 1537, 0, 1740, 1741,
	0, 1635, 1750, 1523, 0, 1718, 0, 0, 1682, 1777,
	1595, 207, 0, 1519, 1520, 1521, 0, 1625, 1626, 0,
	0, 1736, 1735, 1734, 1737, 0, 1771, 1769, 1772, 1538,
	1559, 1581, 1631, 1632, 1634, 1666, 1667, 1712, 1685, 1694,
	1568, 1627, 317, 176, 187, 199, 218, 216, 231, 260,
	283, 288, 315, 350, 355, 375, 376, 377, 379, 220,
	0, 224, 198, 332, 197, 273, 253, 316, 383, 384,
	325, 213, 1653, 170, 181, 267, 1778, 330, 236, 1506,
	1514, 1541, 1549, 1550, 1551, 1552, 1557, 1564, 1572, 1583,
	1584, 1592, 1598, 1599, 1600, 1601, 1610, 1612, 1613, 1614,
	1615, 1616, 1620, 1621, 1637, 1651, 1652, 1659, 1660, 0,
	1689, 1692, 1709, 1715, 1717, 1724, 1729, 1731, 1768, 1781,
	402, 217, 1633, 1658, 1696, 182, 191, 202, 215, 228,
	235, 246, 249, 254, 255, 257, 261, 275, 277, 278,
	279, 280, 298, 299, 303, 304, 307, 308, 312, 313,
	314, 318, 319, 326, 0, 333, 340, 342, 343, 344,
	345, 353, 354, 356, 357, 364, 392, 393, 407, 408,
	1742, 1606, 167, 0, 0, 173, 0, 0, 0, 0,
	0, 1591, 172, 1738, 1773, 1670, 1684, 1754, 1716, 380,
	1609, 1758, 1558, 1588, 1775, 1594, 1597, 1678, 1524, 1647,
	306, 1585, 1525, 1508, 1563, 1512, 1576, 1513, 1560, 223,
	1556, 1719, 1650, 1756, 1629, 1671, 1681, 222, 209, 1639,
	1638, 1744, 1574, 1573, 1676, 1733, 1755, 1628, 0, 1765,
	269, 1730, 0, 405, 362, 289, 0, 0, 1624, 1739,
	1645, 1708, 1607, 1680, 1540, 1663, 1760, 1586, 1672, 1761,
	0, 0, 0, 0, 0, 140, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1668, 1752, 1579, 0,
	1619, 1677, 1780, 1511, 1664, 0, 1516, 1527, 1774, 1745,
	1570, 1571, 227, 0, 0, 0, 0, 0, 0, 0,
	1622, 1646, 1698, 1604, 399, 1683, 1693, 1711, 1596, 324,
	242, 0, 0, 0, 0, 0, 0, 2408, 0, 1565,
	0, 1661, 0, 0, 0, 1532, 1518, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1618,
	0, 0, 0, 1539, 1509, 1567, 1700, 1510, 1507, 290,
	1528, 1713, 1743, 1605, 258, 0, 1749, 1603, 1602, 1687,
	1533, 1723, 1589, 266, 1531, 166, 1526, 1534, 1587, 301,
	1697, 1705, 0, 169, 268, 1720, 1561, 1578, 210, 0,
	336, 1673, 398, 0, 238, 1654, 335, 270, 391, 1688,
	1751, 397, 1590, 374, 406, 410, 234, 1630, 201, 359,
	225, 219, 1569, 1710, 1515, 243, 323, 214, 262, 1608,
	1679, 1562, 206, 1691, 1662, 1725, 358, 388, 171, 286,
	389, 409, 189, 381, 287, 294, 203, 205, 204, 183,
	352, 387, 195, 208, 1721, 1704, 1727, 1555, 1535, 1546,
	1536, 1577, 1753, 252, 244, 1728, 1726, 1580, 310, 192,
	1643, 1636, 1623, 1701, 401, 1776, 221, 1706, 403, 0,
	347, 346, 1593, 251, 1707, 0, 0, 331, 0, 259,
	174, 1732, 412, 188, 264, 382, 0, 237, 300, 212,
	1675, 311, 1575, 168, 327, 282, 284, 281, 285, 241,
	0, 0, 1703, 329, 349, 386, 190, 365, 0, 0,
	0, 0, 339, 0, 0, 1759, 276, 229, 233, 245,
	256, 1674, 334, 366, 404, 1665, 185, 338, 367, 378,
	368, 371, 369, 370, 341, 177, 373, 396, 196, 348,
	351, 411, 1699, 184, 179, 1747, 1722, 1656, 1611, 1617,
	1517, 0, 178, 1695, 1566, 1582, 1554, 1669, 1553, 240,
	1686, 394, 395, 211, 413, 1529, 1767, 180, 1530, 1766,
	297, 305, 296, 1770, 390, 1748, 1657, 1642, 1640, 1522,
	1746, 1655, 1641, 265, 232, 247, 321, 272, 322, 248,
	292, 291, 293, 274, 1644, 0, 175, 0, 363, 1757,
	1782, 372, 193, 1548, 1714, 385, 0, 328, 194, 239,
	230, 320, 295, 186, 250, 361, 263, 271, 1690, 1779,
	309, 337, 200, 400, 360, 226, 1544, 302, 1547, 1542,
	1545, 1543, 1648, 1649, 1762, 1763, 1764, 1702, 1537, 0,
	1740, 1741, 0, 1635, 1750, 1523, 0, 1718, 0, 0,
	1682, 1777, 1595, 207, 0, 1519, 1520, 1521, 0, 1625,
	1626, 0, 0, 1736, 1735, 1734, 1737, 0, 1771, 1769,
	1772, 1538, 1559, 1581, 1631, 1632, 1634, 1666, 1667, 1712,
	1685, 1694, 1568, 1627, 317, 176, 187, 199, 218, 216,
	231, 260, 283, 288, 315, 350, 355, 375, 376, 377,
	379, 220, 0, 224, 198, 332, 197, 273, 253, 316,
	383, 384, 325, 213, 1653, 170, 181, 267, 1778, 330,
	236, 1506, 1514, 1541, 1549, 1550, 1551, 1552, 1557, 1564,
	1572, 1583, 1584, 1592, 1598, 1599, 1600, 1601, 1610, 1612,
	1613, 1614, 1615, 1616, 1620, 1621, 1637, 1651, 1652, 1659,
	1660, 0, 1689, 1692, 1709, 1715, 1717, 1724, 1729, 1731,
	1768, 1781, 402, 217, 1633, 1658, 1696, 182, 191, 202,
	215, 228, 235, 246, 249, 254, 255, 257, 261, 275,
	277, 278, 279, 280, 298, 299, 303, 304, 307, 308,
	312, 313, 314, 318, 319, 326, 0, 333, 340, 342,
	343, 344, 345, 353, 354, 356, 357, 364, 392, 393,
	407, 408, 1742, 1606, 167, 0, 0, 173, 0, 0,
	0, 0, 0, 1591, 172, 1738, 1773, 1670, 1684, 1754,
	1716, 380, 1609, 1758, 1558, 1588, 1775, 1594, 1597, 1678,
	1524, 1647, 306, 1585, 1525, 1508, 1563, 1512, 1576, 1513,
	1560, 223, 1556, 1719, 1650, 1756, 1629, 1671, 1681, 222,
	209, 1639, 1638, 1744, 1574, 1573, 1676, 1733, 1755, 1628,
	0, 1765, 269, 1730, 0, 405, 362, 289, 0, 0,
	1624, 1739, 1645, 1708, 1607, 1680, 1540, 1663, 1760, 1586,
	1672, 1761, 0, 0, 0, 0, 0, 999, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1668, 1752,
	1579, 0, 1619, 1677, 1780, 1511, 1664, 0, 1516, 1527,
	1774, 1745, 1570, 1571, 227, 0, 0, 0, 0, 0,
	0, 0, 1622, 1646, 1698, 1604, 399, 1683, 1693, 1711,
	1596, 324, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 1565, 0, 1661, 0, 0, 0, 1532, 1518, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1618, 0, 0, 0, 1539, 1509, 1567, 1700, 1510,
	1507, 290, 1528, 1713, 1743, 1605, 258, 0, 1749, 1603,
	1602, 1687, 1533, 1723, 1589, 266, 1531, 166, 1526, 1534,
	1587, 301, 1697, 1705, 0, 169, 268, 1720, 1561, 1578,
	210, 0, 336, 1673, 398, 0, 238, 1654, 335, 270,
	391, 1688, 1751, 397, 1590, 374, 406, 410, 234, 1630,
	201, 359, 225, 219, 1569, 1710, 1515, 243, 323, 214,
	262, 1608, 1679, 1562, 206, 1691, 1662, 1725, 358, 388,
	171, 286, 389, 409, 189, 381, 287, 294, 203, 205,
	204, 183, 352, 387, 195, 208, 1721, 1704, 1727, 1555,
	1535, 1546, 1536, 1577, 1753, 252, 244, 1728, 1726, 1580,
	310, 192, 1643, 1636, 1623, 1701, 401, 1776, 221, 1706,
	403, 0, 347, 346, 1593, 251, 1707, 0, 0, 331,
	0, 259, 174, 1732, 412, 188, 264, 382, 0, 237,
	300, 212, 1675, 311, 1575, 168, 327, 282, 284, 281,
	285, 241, 0, 0, 1703, 329, 349, 386, 190, 365,
	0, 0, 0, 0, 339, 0, 0, 1759, 276, 229,
	233, 245, 256, 1674, 334, 366, 404, 1665, 185, 338,
	367, 378, 368, 371, 369, 370, 341, 177, 373, 396,
	196, 348, 351, 411, 1699, 184, 179, 1747, 1722, 1656,
	1611, 1617, 1517, 0, 178, 1695, 1566, 1582, 1554, 1669,
	1553, 240, 1686, 394, 395, 211, 413, 1529, 1767, 180,
	1530, 1766, 297, 305, 296, 1770, 390, 1748, 1657, 1642,
	1640, 1522, 1746, 1655, 1641, 265, 232, 247, 321, 272,
	322, 248, 292, 291, 293, 274, 1644, 0, 175, 0,
	363, 1757, 1782, 372, 193, 1548, 1714, 385, 1990, 328,
	194, 239, 230, 320, 295, 186, 250, 361, 263, 271,
	1690, 1779, 309, 337, 200, 400, 360, 226, 1544, 302,
	1547, 1542, 1545, 1543, 1648, 1649, 1762, 1763, 1764, 1702,
	1537, 0, 1740, 1741, 0, 1635, 1750, 1523, 0, 1718,
	0, 0, 1682, 1777, 1595, 207, 0, 1519, 1520, 1521,
	0, 1625, 1626, 0, 0, 1736, 1735, 1734, 1737, 0,
	1771, 1769, 1772, 1538, 1559, 1581, 1631, 1632, 1634, 1666,
	1667, 1712, 1685, 1694, 1568, 1627, 317, 176, 187, 199,
	218, 216, 231, 260, 283, 288, 315, 350, 355, 375,
	376, 377, 379, 220, 0, 224, 198, 332, 197, 273,
	253, 316, 383, 384, 325, 213, 1653, 170, 181, 267,
	1778, 330, 236, 1506, 1514, 1541, 1549, 1550, 1551, 1552,
	1557, 1564, 1572, 1583, 1584, 1592, 1598, 1599, 1600, 1601,
	1610, 1612, 1613, 1614, 1615, 1616, 1620, 1621, 1637, 1651,
	1652, 1659, 1660, 0, 1689, 1692, 1709, 1715, 1717, 1724,
	1729, 1731, 1768, 1781, 402, 217, 1633, 1658, 1696, 182,
	191, 202, 215, 228, 235, 246, 249, 254, 255, 257,
	261, 275, 277, 278, 279, 280, 298, 299, 303, 304,
	307, 308, 312, 313, 314, 318, 319, 326, 0, 333,
	340, 342, 343, 344, 345, 353, 354, 356, 357, 364,
	392, 393, 407, 408, 1742, 1606, 167, 0, 0, 173,
	0, 0, 0, 0, 0, 1591, 172, 1738, 1773, 1670,
	1684, 1754, 1716, 380, 1609, 1758, 1558, 1588, 1775, 1594,
	1597, 1678, 1524, 1647, 306, 1585, 1525, 1508, 1563, 1512,
	1576, 1513, 1560, 223, 1556, 1719, 1650, 1756, 1629, 1671,
	1681, 222, 209, 1639, 1638, 1744, 1574, 1573, 1676, 1733,
	1755, 1628, 0, 1765, 269, 1730, 0, 405, 362, 289,
	0, 0, 1624, 1739, 1645, 1708, 1607, 1680, 1540, 1663,
	1760, 1586, 1672, 1761, 0, 0, 0, 0, 0, 999,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1668, 1752, 1579, 0, 1619, 1677, 1780, 1511, 1664, 0,
	1516, 1527, 1774, 1745, 1570, 1571, 227, 0, 0, 0,
	0, 0, 0, 0, 1622, 1646, 1698, 1604, 399, 1683,
	1693, 1711, 1596, 324, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 1565, 0, 1661, 0, 0, 0, 1532,
	1518, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1618, 0, 0, 0, 1539, 1509, 1567,
	1700, 1510, 1507, 290, 1528, 1713, 1743, 1605, 258, 0,
	1749, 1603, 1602, 1687, 1533, 1723, 1589, 266, 1531, 166,
	1526, 1534, 1587, 301, 1697, 1705, 0, 169, 268, 1720,
	1561, 1578, 210, 0, 336, 1673, 398, 0, 238, 1654,
	335, 270, 391, 1688, 1751, 397, 1590, 374, 406, 410,
	234, 1630, 201, 359, 225, 219, 1569, 1710, 1515, 243,
	323, 214, 262, 1608, 1679, 1562, 206, 1691, 1662, 1725,
	358, 388, 171, 286, 389, 409, 189, 381, 287, 294,
	203, 205, 204, 183, 352, 387, 195, 208, 1721, 1704,
	1727, 1555, 1535, 1546, 1536, 1577, 1753, 252, 244, 1728,
	1726, 1580, 310, 192, 1643, 1636, 1623, 1701, 401, 1776,
	221, 1706, 403, 0, 347, 346, 1593, 251, 1707, 0,
	0, 331, 0, 259, 174, 1732, 412, 188, 264, 382,
	0, 237, 300, 212, 1675, 311, 1575, 168, 327, 282,
	284, 281, 285, 241, 0, 0, 1703, 329, 349, 386,
	190, 365, 0, 0, 0, 0, 339, 0, 0, 1759,
	276, 229, 233, 245, 256, 1674, 334, 366, 404, 1665,
	185, 338, 367, 378, 368, 371, 369, 370, 341, 177,
	373, 396, 196, 348, 351, 411, 1699, 184, 179, 1747,
	1722, 1656, 1611, 1617, 1517, 0, 178, 1695, 1566, 1582,
	1554, 1669, 1553, 240, 1686, 394, 395, 211, 413, 1529,
	1767, 180, 1530, 1766, 297, 305, 296, 1770, 390, 1748,
	1657, 1642, 1640, 1522, 1746, 1655, 1641, 265, 232, 247,
	321, 272, 322, 248, 292, 291, 293, 274, 1644, 0,
	175, 0, 363, 1757, 1782, 372, 193, 1548, 1714, 385,
	0, 328, 194, 239, 230, 320, 295, 186, 250, 361,
	263, 271, 1690, 1779, 309, 337, 200, 400, 360, 226,
	1544, 302, 1547, 1542, 1545, 1543, 1648, 1649, 1762, 1763,
	1764, 1702, 1537, 0, 1740, 1741, 0, 1635, 1750, 1523,
	0, 1718, 0, 0, 1682, 1777, 1595, 207, 0, 1519,
	1520, 1521, 0, 1625, 1626, 0, 0, 1736, 1735, 1734,
	1737, 0, 1771, 1769, 1772, 1538, 1559, 1581, 1631, 1632,
	1634, 1666, 1667, 1712, 1685, 1694, 1568, 1627, 317, 176,
	187, 199, 218, 216, 231, 260, 283, 288, 315, 350,
	355, 375, 376, 377, 379, 220, 0, 224, 198, 332,
	197, 273, 253, 316, 383, 384, 325, 213, 1653, 170,
	181, 267, 1778, 330, 236, 1506, 1514, 1541, 1549, 1550,
	1551, 1552, 1557, 1564, 1572, 1583, 1584, 1592, 1598, 1599,
	1600, 1601, 1610, 1612, 1613, 1614, 1615, 1616, 1620, 1621,
	1637, 1651, 1652, 1659, 1660, 0, 1689, 1692, 1709, 1715,
	1717, 1724, 1729, 1731, 1768, 1781, 402, 217, 1633, 1658,
	1696, 182, 191, 202, 215, 228, 235, 246, 249, 254,
	255, 257, 261, 275, 277, 278, 279, 280, 298, 299,
	303, 304, 307, 308, 312, 313, 314, 318, 319, 326,
	0, 333, 340, 342, 343, 344, 345, 353, 354, 356,
	357, 364, 392, 393, 407, 408, 1742, 1606, 167, 0,
	0, 173, 0, 0, 0, 0, 0, 1591, 172, 1738,
	1773, 1670, 1684, 1754, 1716, 380, 1609, 1758, 1558, 1588,
	1775, 1594, 1597, 1678, 1524, 1647, 306, 1585, 1525, 1508,
	1563, 1512, 1576, 1513, 1560, 223, 1556, 1719, 1650, 1756,
	1629, 1671, 1681, 222, 209, 1639, 1638, 1744, 1574, 1573,
	1676, 1733, 1755, 1628, 0, 1765, 269, 1730, 0, 405,
	362, 289, 0, 0, 1624, 1739, 1645, 1708, 1607, 1680,
	1540, 1663, 1760, 1586, 1672, 1761, 0, 0, 0, 0,
	0, 3540, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1668, 1752, 1579, 0, 1619, 1677, 1780, 1511,
	1664, 0, 1516, 1527, 1774, 1745, 1570, 1571, 227, 0,
	0, 0, 0, 0, 0, 0, 1622, 1646, 1698, 1604,
	399, 1683, 1693, 1711, 1596, 324, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 1565, 0, 1661, 0, 0,
	0, 1532, 1518, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1618, 0, 0, 0, 1539,
	1509, 1567, 1700, 1510, 1507, 290, 1528, 1713, 1743, 1605,
	258, 0, 1749, 1603, 1602, 1687, 1533, 1723, 1589, 266,
	1531, 166, 1526, 1534, 1587, 301, 1697, 1705, 0, 169,
	268, 1720, 1561, 1578, 210, 0, 336, 1673, 398, 0,
	238, 1654, 335, 270, 391, 1688, 1751, 397, 1590, 374,
	406, 410, 234, 1630, 201, 359, 225, 219, 1569, 1710,
	1515, 243, 323, 214, 262, 1608, 1679, 1562, 206, 1691,
	1662, 1725, 358, 388, 171, 286, 389, 409, 189, 381,
	287, 294, 203, 205, 204, 183, 352, 387, 195, 208,
	1721, 1704, 1727, 1555, 1535, 1546, 3543, 3544, 3545, 252,
	244, 1728, 1726, 1580, 310, 192, 1643, 1636, 1623, 1701,
	401, 1776, 221, 1706, 403, 0, 347, 346, 1593, 251,
	1707, 0, 0, 331, 0, 259, 174, 1732, 412, 188,
	264, 382, 0, 237, 300, 212, 1675, 311, 1575, 168,
	327, 282, 284, 281, 285, 241, 0, 0, 1703, 329,
	349, 386, 190, 365, 0, 0, 0, 0, 339, 0,
	0, 1759, 276, 229, 233, 245, 256, 1674, 334, 366,
	404, 1665, 185, 338, 367, 378, 368, 371, 369, 370,
	341, 177, 373, 396, 196, 348, 351, 411, 1699, 184,
	179, 1747, 1722, 1656, 1611, 1617, 1517, 0, 178, 1695,
	1566, 1582, 1554, 1669, 1553, 240, 1686, 394, 395, 211,
	413, 1529, 1767, 180, 1530, 1766, 297, 305, 296, 1770,
	390, 1748, 1657, 1642, 1640, 1522, 1746, 1655, 1641, 265,
	232, 247, 321, 272, 322, 248, 292, 291, 293, 274,
	1644, 0, 175, 0, 363, 1757, 1782, 372, 193, 1548,
	1714, 385, 0, 328, 194, 239, 230, 320, 295, 186,
	250, 361, 263, 271, 1690, 1779, 309, 337, 200, 400,
	360, 226, 1544, 302, 1547, 1542, 1545, 1543, 1648, 1649,
	1762, 1763, 1764, 1702, 1537, 0, 1740, 1741, 0, 1635,
	1750, 1523, 0, 1718, 0, 0, 1682, 1777, 1595, 207,
	0, 1519, 1520, 1521, 0, 1625, 1626, 0, 0, 1736,
	1735, 1734, 1737, 0, 1771, 1769, 1772, 1538, 1559, 1581,
	1631, 1632, 1634, 1666, 1667, 1712, 1685, 1694, 1568, 1627,
	317, 176, 187, 199, 218, 216, 231, 260, 283, 288,
	315, 350, 355, 375, 376, 377, 379, 220, 0, 224,
	198, 332, 197, 273, 253, 316, 383, 384, 325, 213,
	1653, 170, 181, 267, 1778, 330, 236, 1506, 1514, 1541,
	1549, 1550, 1551, 1552, 1557, 1564, 1572, 1583, 1584, 1592,
	1598, 1599, 1600, 1601, 1610, 1612, 1613, 1614, 1615, 1616,
	1620, 1621, 1637, 1651, 1652, 1659, 1660, 0, 1689, 1692,
	1709, 1715, 1717, 1724, 1729, 1731, 1768, 1781, 402, 217,
	1633, 1658, 1696, 182, 191, 202, 215, 228, 235, 246,
	249, 254, 255, 257, 261, 275, 277, 278, 279, 280,
	298, 299, 303, 304, 307, 308, 312, 313, 314, 318,
	319, 326, 0, 333, 340, 342, 343, 344, 345, 353,
	354, 356, 357, 364, 392, 393, 407, 408, 1742, 1606,
	167, 0, 0, 173, 0, 0, 0, 0, 0, 1591,
	172, 1738, 1773, 1670, 1684, 1754, 1716, 380, 1609, 1758,
	1558, 1588, 1775, 1594, 1597, 1678, 1524, 1647, 306, 1585,
	1525, 1508, 1563, 1512, 1576, 1513, 1560, 223, 1556, 1719,
	1650, 1756, 1629, 1671, 1681, 222, 209, 1639, 1638, 1744,
	1574, 1573, 1676, 1733, 1755, 1628, 0, 1765, 269, 1730,
	0, 405, 362, 289, 0, 0, 1624, 1739, 1645, 1708,
	1607, 1680, 1540, 1663, 1760, 1586, 1672, 1761, 0, 0,
	0, 0, 0, 2767, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1668, 1752, 1579, 0, 1619, 1677,
	1780, 1511, 1664, 0, 1516, 1527, 1774, 1745, 1570, 1571,
	227, 0, 0, 0, 0, 0, 0, 0, 1622, 1646,
	1698, 1604, 399, 1683, 1693, 1711, 1596, 324, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 1565, 0, 1661,
	0, 0, 0, 1532, 1518, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1618, 0, 0,
	0, 1539, 1509, 1567, 1700, 1510, 1507, 290, 1528, 1713,
	1743, 1605, 258, 0, 1749, 1603, 1602, 1687, 1533, 1723,
	1589, 266, 1531, 166, 1526, 1534, 1587, 301, 1697, 1705,
	0, 169, 268, 1720, 1561, 1578, 210, 0, 336, 1673,
	398, 0, 238, 1654, 335, 270, 391, 1688, 1751, 397,
	1590, 374, 406, 410, 234, 1630, 201, 359, 225, 219,
	1569, 1710, 1515, 243, 323, 214, 262, 1608, 1679, 1562,
	206, 1691, 1662, 1725, 358, 388, 171, 286, 389, 409,
	189, 381, 287, 294, 203, 205, 204, 183, 352, 387,
	195, 208, 1721, 1704, 1727, 1555, 1535, 1546, 1536, 1577,
	1753, 252, 244, 1728, 1726, 1580, 310, 192, 1643, 1636,
	1623, 1701, 401, 1776, 221, 1706, 403, 0, 347, 346,
	1593, 251, 1707, 0, 0, 331, 0, 259, 174, 1732,
	412, 188, 264, 382, 0, 237, 300, 212, 1675, 311,
	1575, 168, 327, 282, 284, 281, 285, 241, 0, 0,
	1703, 329, 349, 386, 190, 365, 0, 0, 0, 0,
	339, 0, 0, 1759, 276, 229, 233, 245, 256, 1674,
	334, 366, 404, 1665, 185, 338, 367, 378, 368, 371,
	369, 370, 341, 177, 373, 396, 196, 348, 351, 411,
	1699, 184, 179, 1747, 1722, 1656, 1611, 1617, 1517, 0,
	178, 1695, 1566, 1582, 1554, 1669, 1553, 240, 1686, 394,
	395, 211, 413, 1529, 1767, 180, 1530, 1766, 297, 305,
	296, 1770, 390, 1748, 1657, 1642, 1640, 1522, 1746, 1655,
	1641, 265, 232, 247, 321, 272, 322, 248, 292, 291,
	293, 274, 1644, 0, 175, 0, 363, 1757, 1782, 372,
	193, 1548, 1714, 385, 0, 328, 194, 239, 230, 320,
	295, 186, 250, 361, 263, 271, 1690, 1779, 309, 337,
	200, 400, 360, 226, 1544, 302, 1547, 1542, 1545, 1543,
	1648, 1649, 1762, 1763, 1764, 1702, 1537, 0, 1740, 1741,
	0, 1635, 1750, 1523, 0, 1718, 0, 0, 1682, 1777,
	1595, 207, 0, 1519, 1520, 1521, 0, 1625, 1626, 0,
	0, 1736, 1735, 1734, 1737, 0, 1771, 1769, 1772, 1538,
	1559, 1581, 1631, 1632, 1634, 1666, 1667, 1712, 1685, 1694,
	1568, 1627, 317, 176, 187, 199, 218, 216, 231, 260,
	283, 288, 315, 350, 355, 375, 376, 377, 379, 220,
	0, 224, 198, 332, 197, 273, 253, 316, 383, 384,
	325, 213, 1653, 170, 181, 267, 1778, 330, 236, 1506,
	1514, 1541, 1549, 1550, 1551, 1552, 1557, 1564, 1572, 1583,
	1584, 1592, 1598, 1599, 1600, 1601, 1610, 1612, 1613, 1614,
	1615, 1616, 1620, 1621, 1637, 1651, 1652, 1659, 1660, 0,
	1689, 1692, 1709, 1715, 1717, 1724, 1729, 1731, 1768, 1781,
	402, 217, 1633, 1658, 1696, 182, 191, 202, 215, 228,
	235, 246, 249, 254, 255, 257, 261, 275, 277, 278,
	279, 280, 298, 299, 303, 304, 307, 308, 312, 313,
	314, 318, 319, 326, 0, 333, 340, 342, 343, 344,
	345, 353, 354, 356, 357, 364, 392, 393, 407, 408,
	1742, 1606, 167, 0, 0, 173, 0, 0, 0, 0,
	0, 1591, 172, 1738, 1773, 1670, 1684, 1754, 1716, 380,
	1609, 1758, 1558, 1588, 1775, 1594, 1597, 1678, 1524, 1647,
	306, 1585, 1525, 1508, 1563, 1512, 1576, 1513, 1560, 223,
	1556, 1719, 1650, 1756, 1629, 1671, 1681, 222, 209, 1639,
	1638, 1744, 1574, 1573, 1676, 1733, 1755, 1628, 0, 1765,
	269, 1730, 0, 405, 362, 289, 0, 0, 1624, 1739,
	1645, 1708, 1607, 1680, 1540, 1663, 1760, 1586, 1672, 1761,
	0, 0, 0, 0, 0, 140, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1668, 1752, 1579, 0,
	1619, 1677, 1780, 1511, 1664, 0, 1516, 1527, 1774, 1745,
	1570, 1571, 227, 0, 0, 0, 0, 0, 0, 0,
	1622, 1646, 1698, 1604, 399, 1683, 1693, 1711, 1596, 324,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 1565,
	0, 1661, 0, 0, 0, 1532, 1518, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1618,
	0, 0, 0, 1539, 1509, 1567, 1700, 1510, 1507, 290,
	1528, 1713, 1743, 1605, 258, 0, 1749, 1603, 1602, 1687,
	1533, 1723, 1589, 266, 1531, 166, 1526, 1534, 1587, 301,
	1697, 1705, 0, 169, 268, 1720, 1561, 1578, 210, 0,
	336, 1673, 398, 0, 238, 1654, 335, 270, 391, 1688,
	1751, 397, 1590, 374, 406, 410, 234, 1630, 201, 359,
	225, 219, 1569, 1710, 1515, 243, 323, 214, 262, 1608,
	1679, 1562, 206, 1691, 1662, 1725, 358, 388, 171, 286,
	389, 409, 189, 381, 287, 294, 203, 205, 204, 183,
	352, 387, 195, 208, 1721, 1704, 1727, 1555, 1535, 1546,
	1536, 1577, 1753, 252, 244, 1728, 1726, 1580, 310, 192,
	1643, 1636, 1623, 1701, 401, 1776, 221, 1706, 403, 0,
	347, 346, 1593, 251, 1707, 0, 0, 331, 0, 259,
	174, 1732, 412, 188, 264, 382, 0, 237, 300, 212,
	1675, 311, 1575, 168, 327, 282, 284, 281, 285, 241,
	0, 0, 1703, 329, 349, 386, 190, 365, 0, 0,
	0, 0, 339, 0, 0, 1759, 276, 229, 233, 245,
	256, 1674, 334, 366, 404, 1665, 185, 338, 367, 378,
	368, 371, 369, 370, 341, 177, 373, 396, 196, 348,
	351, 411, 1699, 184, 179, 1747, 1722, 1656, 1611, 1617,
	1517, 0, 178, 1695, 1566, 1582, 1554, 1669, 1553, 240,
	1686, 394, 395, 211, 413, 1529, 1767, 180, 1530, 1766,
	297, 305, 296, 1770, 390, 1748, 1657, 1642, 1640, 1522,
	1746, 1655, 1641, 265, 232, 247, 321, 272, 322, 248,
	292, 291, 293, 274, 1644, 0, 175, 0, 363, 1757,
	1782, 372, 193, 1548, 1714, 385, 0, 328, 194, 239,
	230, 320, 295, 186, 250, 361, 263, 271, 1690, 1779,
	309, 337, 200, 400, 360, 226, 1544, 302, 1547, 1542,
	1545, 1543, 1648, 1649, 1762, 1763, 1764, 1702, 1537, 0,
	1740, 1741, 0, 1635, 1750, 1523, 0, 1718, 0, 0,
	1682, 1777, 1595, 207, 0, 1519, 1520, 1521, 0, 1625,
	1626, 0, 0, 1736, 1735, 1734, 1737, 0, 1771, 1769,
	1772, 1538, 1559, 1581, 1631, 1632, 1634, 1666, 1667, 1712,
	1685, 1694, 1568, 1627, 317, 176, 187, 199, 218, 216,
	231, 260, 283, 288, 315, 350, 355, 375, 376, 377,
	379, 220, 0, 224, 198, 332, 197, 273, 253, 316,
	383, 384, 325, 213, 1653, 170, 181, 267, 1778, 330,
	236, 1506, 1514, 1541, 1549, 1550, 1551, 1552, 1557, 1564,
	1572, 1583, 1584, 1592, 1598, 1599, 1600, 1601, 1610, 1612,
	1613, 1614, 1615, 1616, 1620, 1621, 1637, 1651, 1652, 1659,
	1660, 0, 1689, 1692, 1709, 1715, 1717, 1724, 1729, 1731,
	1768, 1781, 402, 217, 1633, 1658, 1696, 182, 191, 202,
	215, 228, 235, 246, 249, 254, 255, 257, 261, 275,
	277, 278, 279, 280, 298, 299, 303, 304, 307, 308,
	312, 313, 314, 318, 319, 326, 0, 333, 340, 342,
	343, 344, 345, 353, 354, 356, 357, 364, 392, 393,
	407, 408, 1742, 1606, 167, 0, 0, 173, 380, 0,
	0, 0, 0, 1591, 172, 1738, 1773, 1670, 1684, 306,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	0, 0, 0, 0, 0, 0, 222, 209, 0, 0,
	0, 0, 0, 0, 0, 2111, 2115, 0, 0, 269,
	0, 1003, 405, 362, 289, 1006, 1005, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 999, 0, 0, 0, 0, 0,
	0, 0, 0, 148, 0, 0, 0, 0, 1004, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 399, 0, 0, 0, 0, 324, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 290, 0,
	0, 0, 2114, 258, 165, 0, 0, 0, 2108, 0,
	2109, 2110, 266, 1007, 166, 0, 2106, 2113, 301, 0,
	0, 153, 169, 268, 0, 0, 0, 210, 996, 336,
	0, 398, 1002, 238, 0, 335, 270, 391, 0, 0,
	397, 0, 374, 406, 410, 234, 0, 201, 359, 225,
	219, 0, 0, 0, 243, 323, 214, 262, 0, 0,
	0, 206, 0, 0, 0, 358, 388, 171, 286, 389,
	409, 189, 381, 287, 294, 203, 205, 204, 183, 352,
	387, 195, 208, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 244, 0, 0, 0, 310, 192, 0,
	0, 0, 0, 401, 0, 221, 0, 403, 155, 347,
	346, 0, 251, 0, 156, 147, 331, 157, 259, 174,
	0, 412, 188, 264, 382, 1001, 237, 300, 212, 0,
	311, 0, 168, 327, 282, 284, 281, 285, 241, 151,
	158, 0, 329, 349, 386, 190, 365, 149, 150, 152,
	160, 339, 161, 162, 0, 276, 229, 233, 245, 256,
	0, 334, 366, 404, 0, 185, 338, 367, 378, 368,
	371, 369, 370, 341, 177, 373, 396, 196, 348, 351,
	411, 0, 184, 179, 0, 0, 0, 0, 0, 0,
	0, 178, 0, 0, 0, 0, 0, 0, 240, 0,
	394, 395, 211, 413, 0, 0, 180, 0, 0, 297,
	305, 296, 0, 390, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 232, 247, 321, 272, 322, 248, 292,
	291, 293, 274, 0, 0, 175, 0, 363, 0, 0,
	372, 193, 0, 0, 385, 154, 328, 194, 239, 230,
	320, 295, 186, 250, 361, 263, 271, 0, 0, 309,
	337, 200, 400, 360, 226, 0, 302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 163, 164, 0,
	0, 0, 207, 142, 0, 0, 0, 143, 0, 0,
	144, 145, 0, 0, 0, 0, 146, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 317, 176, 187, 199, 218, 216, 231,
	260, 283, 288, 315, 350, 355, 375, 376, 377, 379,
	220, 0, 224, 198, 332, 197, 273, 253, 316, 383,
	384, 325, 213, 0, 170, 181, 267, 0, 330, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 402, 217, 0, 0, 0, 182, 191, 202, 215,
	228, 235, 246, 249, 254, 255, 257, 261, 275, 277,
	278, 279, 280, 298, 299, 303, 304, 307, 308, 312,
	313, 314, 318, 319, 326, 159, 333, 340, 342, 343,
	344, 345, 353, 354, 356, 357, 364, 392, 393, 407,
	408, 380, 0, 167, 0, 0, 173, 0, 0, 0,
	0, 0, 306, 172, 0, 0, 0, 1242, 0, 0,
	0, 223, 0, 0, 0, 0, 0, 0, 0, 222,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 1003, 405, 362, 289, 1006, 1005,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1243, 0, 1246,
	0, 0, 0, 0, 0, 0, 148, 0, 0, 0,
	0, 1004, 0, 1238, 1239, 1237, 0, 0, 0, 0,
	0, 0, 0, 0, 227, 0, 0, 0, 0, 0,
	0, 0, 1240, 0, 0, 0, 399, 0, 0, 0,
	0, 324, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 290, 0, 0, 0, 0, 258, 165, 0, 0,
	0, 0, 0, 0, 0, 266, 0, 166, 0, 0,
	0, 301, 0, 0, 153, 169, 268, 0, 0, 0,
	210, 0, 336, 0, 398, 1002, 238, 0, 335, 270,
	391, 0, 0, 397, 0, 374, 406, 410, 234, 0,
	201, 359, 225, 219, 0, 0, 0, 243, 323, 214,
	262, 0, 0, 0, 206, 0, 0, 0, 358, 388,
	171, 286, 389, 409, 189, 381, 287, 294, 203, 205,
	204, 183, 352, 387, 195, 208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 252, 244, 0, 0, 0,
	310, 192, 0, 0, 0, 0, 401, 0, 221, 0,
	403, 155, 347, 346, 0, 251, 0, 156, 147, 331,
	157, 259, 174, 0, 412, 188, 264, 382, 1001, 237,
	300, 212, 0, 311, 0, 168, 327, 282, 284, 281,
	285, 241, 151, 158, 0, 329, 349, 386, 190, 365,
	149, 150, 152, 160, 339, 161, 162, 0, 276, 229,
	233, 245, 256, 0, 334, 366, 404, 0, 185, 338,
	367, 378, 368, 371, 369, 370, 341, 177, 373, 396,
	196, 348, 351, 411, 0, 184, 179, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 0, 0, 0,
	0, 240, 0, 394, 395, 211, 413, 0, 0, 180,
	0, 0, 297, 305, 296, 0, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 232, 247, 321, 272,
	322, 248, 292, 291, 293, 274, 0, 0, 175, 0,
	363, 0, 0, 372, 193, 0, 0, 385, 154, 328,
	194, 239, 230, 320, 295, 186, 250, 361, 263, 271,
	0, 0, 309, 337, 200, 400, 360, 226, 0, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	163, 164, 0, 0, 0, 207, 142, 0, 0, 0,
	143, 0, 0, 144, 145, 0, 0, 0, 0, 146,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 317, 176, 187, 199,
	218, 216, 231, 260, 283, 288, 315, 350, 355, 375,
	376, 377, 379, 220, 0, 224, 198, 332, 197, 273,
	253, 316, 383, 384, 325, 213, 0, 170, 181, 267,
	0, 330, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 402, 217, 0, 0, 0, 182,
	191, 202, 215, 228, 235, 246, 249, 254, 255, 257,
	261, 275, 277, 278, 279, 280, 298, 299, 303, 304,
	307, 308, 312, 313, 314, 318, 319, 326, 159, 333,
	340, 342, 343, 344, 345, 353, 354, 356, 357, 364,
	392, 393, 407, 408, 380, 0, 167, 0, 0, 173,
	0, 0, 0, 0, 0, 306, 172, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 0, 0, 0, 0,
	0, 0, 222, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 1003, 405, 362,
	289, 1006, 1005, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	999, 0, 0, 0, 0, 0, 0, 0, 0, 148,
	0, 0, 0, 0, 1004, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 399,
	0, 0, 0, 0, 324, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 290, 0, 0, 0, 0, 258,
	165, 0, 0, 0, 0, 0, 0, 0, 266, 1007,
	166, 0, 997, 0, 301, 0, 0, 153, 169, 268,
	0, 0, 0, 210, 996, 336, 0, 398, 1002, 238,
	0, 335, 270, 391, 0, 0, 397, 0, 374, 406,
	410, 234, 0, 201, 359, 225, 219, 0, 0, 0,
	243, 323, 214, 262, 0, 0, 0, 206, 0, 0,
	0, 358, 388, 171, 286, 389, 409, 189, 381, 287,
	294, 203, 205, 204, 183, 352, 387, 195, 208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 252, 244,
	0, 0, 0, 310, 192, 0, 0, 0, 0, 401,
	0, 221, 0, 403, 155, 347, 346, 0, 251, 0,
	156, 147, 331, 157, 259, 174, 0, 412, 188, 264,
	382, 1001, 237, 300, 212, 0, 311, 0, 168, 327,
	282, 284, 281, 285, 241, 151, 158, 0, 329, 349,
	386, 190, 365, 149, 150, 152, 160, 339, 161, 162,
	0, 276, 229, 233, 245, 256, 0, 334, 366, 404,
	0, 185, 338, 367, 378, 368, 371, 369, 370, 341,
	177, 373, 396, 196, 348, 351, 411, 0, 184, 179,
	0, 0, 0, 0, 0, 0, 0, 178, 0, 0,
	0, 0, 0, 0, 240, 0, 394, 395, 211, 413,
	0, 0, 180, 0, 0, 297, 305, 296, 0, 390,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 232,
	247, 321, 272, 322, 248, 292, 291, 293, 274, 0,
	0, 175, 0, 363, 0, 0, 372, 193, 0, 0,
	385, 154, 328, 194, 239, 230, 320, 295, 186, 250,
	361, 263, 271, 0, 0, 309, 337, 200, 400, 360,
	226, 0, 302, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 163, 164, 0, 0, 0, 207, 142,
	0, 0, 0, 143, 0, 0, 144, 145, 0, 0,
	0, 0, 146, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 317,
	176, 187, 199, 218, 216, 231, 260, 283, 288, 315,
	350, 355, 375, 376, 377, 379, 220, 0, 224, 198,
	332, 197, 273, 253, 316, 383, 384, 325, 213, 0,
	170, 181, 267, 0, 330, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 402, 217, 0,
	0, 0, 182, 191, 202, 215, 228, 235, 246, 249,
	254, 255, 257, 261, 275, 277, 278, 279, 280, 298,
	299, 303, 304, 307, 308, 312, 313, 314, 318, 319,
	326, 159, 333, 340, 342, 343, 344, 345, 353, 354,
	356, 357, 364, 392, 393, 407, 408, 380, 0, 167,
	0, 0, 173, 0, 0, 0, 0, 0, 306, 172,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 0,
	0, 0, 0, 0, 0, 222, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	1003, 405, 362, 289, 1006, 1005, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1243, 0, 1246, 0, 0, 0, 0,
	0, 0, 148, 0, 0, 0, 0, 1004, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 399, 0, 0, 0, 0, 324, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 290, 0, 0,
	0, 0, 258, 165, 0, 0, 0, 0, 0, 0,
	0, 266, 0, 166, 0, 0, 0, 301, 0, 0,
	153, 169, 268, 0, 0, 0, 210, 1939, 336, 0,
	398, 1002, 238, 0, 335, 270, 391, 0, 0, 397,
	0, 374, 406, 410, 234, 0, 201, 359, 225, 219,
	0, 0, 0, 243, 323, 214, 262, 0, 0, 0,
	206, 0, 0, 0, 358, 388, 171, 286, 389, 409,
	189, 381, 287, 294, 203, 205, 204, 183, 352, 387,
	195, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 252, 244, 0, 0, 0, 310, 192, 0, 0,
	0, 0, 401, 0, 221, 0, 403, 155, 347, 346,
	0, 251, 0, 156, 147, 331, 157, 259, 174, 0,
	412, 188, 264, 382, 1001, 237, 300, 212, 0, 311,
	0, 168, 327, 282, 284, 281, 285, 241, 151, 158,
	0, 329, 349, 386, 190, 365, 149, 150, 152, 160,
	339, 161, 162, 0, 276, 229, 233, 245, 256, 0,
	334, 366, 404, 0, 185, 338, 367, 378, 368, 371,
	369, 370, 341, 177, 373, 396, 196, 348, 351, 411,
	0, 184, 179, 0, 0, 0, 0, 0, 0, 0,
	178, 0, 0, 0, 0, 0, 0, 240, 0, 394,
	395, 211, 413, 0, 0, 180, 0, 0, 297, 305,
	296, 0, 390, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 232, 247, 321, 272, 322, 248, 292, 291,
	293, 274, 0, 0, 175, 0, 363, 0, 0, 372,
	193, 0, 0, 385, 154, 328, 194, 239, 230, 320,
	295, 186, 250, 361, 263, 271, 0, 0, 309, 337,
	200, 400, 360, 226, 0, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 163, 164, 0, 0,
	0, 207, 142, 0, 0, 0, 143, 0, 0, 144,
	145, 0, 0, 0, 0, 146, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 317, 176, 187, 199, 218, 216, 231, 260,
	283, 288, 315, 350, 355, 375, 376, 377, 379, 220,
	0, 224, 198, 332, 197, 273, 253, 316, 383, 384,
	325, 213, 0, 170, 181, 267, 0, 330, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	402, 217, 0, 0, 0, 182, 191, 202, 215, 228,
	235, 246, 249, 254, 255, 257, 261, 275, 277, 278,
	279, 280, 298, 299, 303, 304, 307, 308, 312, 313,
	314, 318, 319, 326, 159, 333, 340, 342, 343, 344,
	345, 353, 354, 356, 357, 364, 392, 393, 407, 408,
	380, 0, 167, 0, 0, 173, 0, 0, 0, 0,
	0, 306, 172, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 0, 0, 0, 0, 0, 0, 222, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 1003, 405, 362, 289, 1006, 1005, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2887, 0, 0, 0,
	0, 0, 0, 0, 0, 148, 0, 0, 0, 0,
	1004, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 399, 0, 0, 0, 0,
	324, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	290, 0, 0, 0, 0, 258, 165, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 166, 0, 0, 0,
	301, 0, 0, 153, 169, 268, 0, 0, 0, 210,
	0, 336, 0, 398, 1002, 238, 0, 335, 270, 391,
	0, 0, 397, 0, 374, 406, 410, 234, 0, 201,
	359, 225, 219, 0, 0, 0, 243, 323, 214, 262,
	0, 0, 0, 206, 0, 0, 0, 358, 388, 171,
	286, 389, 409, 189, 381, 287, 294, 203, 205, 204,
	183, 352, 387, 195, 208, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 252, 244, 0, 0, 0, 310,
	192, 0, 0, 0, 0, 401, 0, 221, 0, 403,
	155, 347, 346, 0, 251, 0, 156, 147, 331, 157,
	259, 174, 0, 412, 188, 264, 382, 1001, 237, 300,
	212, 0, 311, 0, 168, 327, 282, 284, 281, 285,
	241, 151, 158, 0, 329, 349, 386, 190, 365, 149,
	150, 152, 160, 339, 161, 162, 0, 276, 229, 233,
	245, 256, 0, 334, 366, 404, 0, 185, 338, 367,
	378, 368, 371, 369, 370, 341, 177, 373, 396, 196,
	348, 351, 411, 0, 184, 179, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 0, 0, 0, 0,
	240, 0, 394, 395, 211, 413, 0, 0, 180, 0,
	0, 297, 305, 296, 0, 390, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 232, 247, 321, 272, 322,
	248, 292, 291, 293, 274, 0, 0, 175, 0, 363,
	0, 0, 372, 193, 0, 0, 385, 154, 328, 194,
	239, 230, 320, 295, 186, 250, 361, 263, 271, 0,
	0, 309, 337, 200, 400, 360, 226, 0, 302, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 163,
	164, 0, 0, 0, 207, 142, 0, 0, 0, 143,
	0, 0, 144, 145, 0, 0, 0, 0, 146, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 176, 187, 199, 218,
	216, 231, 260, 283, 288, 315, 350, 355, 375, 376,
	377, 379, 220, 0, 224, 198, 332, 197, 273, 253,
	316, 383, 384, 325, 213, 0, 170, 181, 267, 0,
	330, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 402, 217, 0, 0, 0, 182, 191,
	202, 215, 228, 235, 246, 249, 254, 255, 257, 261,
	275, 277, 278, 279, 280, 298, 299, 303, 304, 307,
	308, 312, 313, 314, 318, 319, 326, 159, 333, 340,
	342, 343, 344, 345, 353, 354, 356, 357, 364, 392,
	393, 407, 408, 380, 0, 167, 0, 0, 173, 0,
	0, 0, 0, 0, 306, 172, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 0, 0, 0, 0, 0,
	0, 222, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 1003, 405, 362, 289,
	1006, 1005, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2882,
	0, 0, 0, 0, 0, 0, 0, 0, 148, 0,
	0, 0, 0, 1004, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 399, 0,
	0, 0, 0, 324, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 290, 0, 0, 0, 0, 258, 165,
	0, 0, 0, 0, 0, 0, 0, 266, 0, 166,
	0, 0, 0, 301, 0, 0, 153, 169, 268, 0,
	0, 0, 210, 0, 336, 0, 398, 1002, 238, 0,
	335, 270, 391, 0, 0, 397, 0, 374, 406, 410,
	234, 0, 201, 359, 225, 219, 0, 0, 0, 243,
	323, 214, 262, 0, 0, 0, 206, 0, 0, 0,
	358, 388, 171, 286, 389, 409, 189, 381, 287, 294,
	203, 205, 204, 183, 352, 387, 195, 208, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 252, 244, 0,
	0, 0, 310, 192, 0, 0, 0, 0, 401, 0,
	221, 0, 403, 155, 347, 346, 0, 251, 0, 156,
	147, 331, 157, 259, 174, 0, 412, 188, 264, 382,
	1001, 237, 300, 212, 0, 311, 0, 168, 327, 282,
	284, 281, 285, 241, 151, 158, 0, 329, 349, 386,
	190, 365, 149, 150, 152, 160, 339, 161, 162, 0,
	276, 229, 233, 245, 256, 0, 334, 366, 404, 0,
	185, 338, 367, 378, 368, 371, 369, 370, 341, 177,
	373, 396, 196, 348, 351, 411, 0, 184, 179, 0,
	0, 0, 0, 0, 0, 0, 178, 0, 0, 0,
	0, 0, 0, 240, 0, 394, 395, 211, 413, 0,
	0, 180, 0, 0, 297, 305, 296, 0, 390, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 232, 247,
	321, 272, 322, 248, 292, 291, 293, 274, 0, 0,
	175, 0, 363, 0, 0, 372, 193, 0, 0, 385,
	154, 328, 194, 239, 230, 320, 295, 186, 250, 361,
	263, 271, 0, 0, 309, 337, 200, 400, 360, 226,
	0, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 163, 164, 0, 0, 0, 207, 142, 0,
	0, 0, 143, 0, 0, 144, 145, 0, 0, 0,
	0, 146, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 317, 176,
	187, 199, 218, 216, 231, 260, 283, 288, 315, 350,
	355, 375, 376, 377, 379, 220, 0, 224, 198, 332,
	197, 273, 253, 316, 383, 384, 325, 213, 0, 170,
	181, 267, 0, 330, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 402, 217, 0, 0,
	0, 182, 191, 202, 215, 228, 235, 246, 249, 254,
	255, 257, 261, 275, 277, 278, 279, 280, 298, 299,
	303, 304, 307, 308, 312, 313, 314, 318, 319, 326,
	159, 333, 340, 342, 343, 344, 345, 353, 354, 356,
	357, 364, 392, 393, 407, 408, 0, 0, 167, 40,
	380, 173, 0, 0, 0, 0, 0, 0, 172, 0,
	0, 306, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 0, 0, 0, 0, 0, 0, 222, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2390, 269, 0, 0, 405, 362, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 87, 0, 0, 0, 0, 2073, 0, 0, 0,
	0, 0, 0, 0, 0, 148, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 399, 0, 0, 0, 0,
	324, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	290, 0, 0, 0, 0, 258, 165, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 166, 0, 0, 0,
	301, 0, 0, 153, 169, 268, 0, 0, 0, 210,
	0, 336, 0, 398, 0, 238, 0, 335, 270, 391,
	0, 0, 397, 0, 374, 406, 410, 234, 0, 201,
	359, 225, 219, 0, 0, 0, 243, 323, 214, 262,
	0, 0, 0, 206, 0, 0, 0, 358, 388, 171,
	286, 389, 409, 189, 381, 287, 294, 203, 205, 204,
	183, 352, 387, 195, 208, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 252, 244, 0, 0, 0, 310,
	192, 0, 0, 0, 0, 401, 0, 221, 0, 403,
	155, 347, 346, 0, 251, 0, 156, 147, 331, 157,
	259, 174, 0, 412, 188, 264, 382, 139, 237, 300,
	212, 0, 311, 0, 168, 327, 282, 284, 281, 285,
	241, 151, 158, 0, 329, 349, 386, 190, 365, 149,
	150, 152, 160, 339, 161, 162, 0, 276, 229, 233,
	245, 256, 0, 334, 366, 404, 0, 185, 338, 367,
	378, 368, 371, 369, 370, 341, 177, 373, 396, 196,
	348, 351, 411, 0, 184, 179, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 0, 0, 0, 0,
	240, 0, 394, 395, 211, 413, 0, 0, 180, 0,
	0, 297, 305, 296, 0, 390, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 232, 247, 321, 272, 322,
	248, 292, 291, 293, 274, 0, 0, 175, 0, 363,
	0, 0, 372, 193, 0, 0, 385, 154, 328, 194,
	239, 230, 320, 295, 186, 250, 361, 263, 271, 0,
	0, 309, 337, 200, 400, 360, 226, 0, 302, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 163,
	164, 0, 0, 0, 207, 142, 0, 0, 0, 143,
	0, 0, 144, 145, 0, 0, 0, 0, 146, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2074, 317, 176, 187, 199, 218,
	216, 231, 260, 283, 288, 315, 350, 355, 375, 376,
	377, 379, 220, 0, 224, 198, 332, 197, 273, 253,
	316, 383, 384, 325, 213, 0, 170, 181, 267, 538,
	330, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 402, 217, 0, 0, 0, 182, 191,
	202, 215, 228, 235, 246, 249, 254, 255, 257, 261,
	275, 277, 278, 279, 280, 298, 299, 303, 304, 307,
	308, 312, 313, 314, 318, 319, 326, 159, 333, 340,
	342, 343, 344, 345, 353, 354, 356, 357, 364, 392,
	393, 407, 408, 380, 0, 167, 0, 0, 173, 0,
	0, 0, 0, 0, 306, 172, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 0, 0, 0, 0, 0,
	0, 222, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 405, 362, 289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 87, 0, 0, 0, 0, 2073,
	0, 0, 0, 0, 0, 0, 0, 0, 148, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 399, 0,
	0, 0, 0, 324, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 290, 0, 0, 0, 0, 258, 165,
	0, 0, 0, 0, 0, 0, 0, 266, 0, 166,
	0, 0, 0, 301, 0, 0, 153, 169, 268, 0,
	0, 0, 210, 0, 336, 0, 398, 0, 238, 0,
	335, 270, 391, 0, 0, 397, 0, 374, 406, 410,
	234, 0, 201, 359, 225, 219, 0, 0, 0, 243,
	323, 214, 262, 0, 0, 0, 206, 0, 0, 0,
	358, 388, 171, 286, 389, 409, 189, 381, 287, 294,
	203, 205, 204, 183, 352, 387, 195, 208, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 252, 244, 0,
	0, 0, 310, 192, 0, 0, 0, 0, 401, 0,
	221, 0, 403, 155, 347, 346, 0, 251, 0, 156,
	147, 331, 157, 259, 174, 0, 412, 188, 264, 382,
	139, 237, 300, 212, 0, 311, 0, 168, 327, 282,
	284, 281, 285, 241, 151, 158, 0, 329, 349, 386,
	190, 365, 149, 150, 152, 160, 339, 161, 162, 0,
	276, 229, 233, 245, 256, 0, 334, 366, 404, 0,
	185, 338, 367, 378, 368, 371, 369, 370, 341, 177,
	373, 396, 196, 348, 351, 411, 0, 184, 179, 0,
	0, 0, 0, 0, 0, 0, 178, 0, 0, 0,
	0, 0, 0, 240, 0, 394, 395, 211, 413, 0,
	0, 180, 0, 0, 297, 305, 296, 0, 390, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 232, 247,
	321, 272, 322, 248, 292, 291, 293, 274, 0, 0,
	175, 0, 363, 0, 0, 372, 193, 0, 0, 385,
	154, 328, 194, 239, 230, 320, 295, 186, 250, 361,
	263, 271, 0, 0, 309, 337, 200, 400, 360, 226,
	0, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 163, 164, 0, 0, 0, 207, 142, 0,
	0, 0, 143, 0, 0, 144, 145, 0, 0, 0,
	0, 146, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3292, 2074, 317, 176,
	187, 199, 218, 216, 231, 260, 283, 288, 315, 350,
	355, 375, 376, 377, 379, 220, 0, 224, 198, 332,
	197, 273, 253, 316, 383, 384, 325, 213, 0, 170,
	181, 267, 0, 330, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 402, 217, 0, 0,
	0, 182, 191, 202, 215, 228, 235, 246, 249, 254,
	255, 257, 261, 275, 277, 278, 279, 280, 298, 299,
	303, 304, 307, 308, 312, 313, 314, 318, 319, 326,
	159, 333, 340, 342, 343, 344, 345, 353, 354, 356,
	357, 364, 392, 393, 407, 408, 380, 0, 167, 0,
	0, 173, 0, 0, 0, 0, 0, 306, 172, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 0, 0,
	0, 0, 0, 0, 222, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	405, 362, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 87, 0, 0,
	0, 0, 2073, 0, 0, 0, 0, 0, 0, 0,
	0, 148, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 399, 0, 0, 0, 0, 324, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 290, 0, 0, 0,
	0, 258, 165, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 166, 0, 0, 0, 301, 0, 0, 153,
	169, 268, 0, 0, 0, 210, 0, 336, 0, 398,
	0, 238, 0, 335, 270, 391, 0, 0, 397, 0,
	374, 406, 410, 234, 0, 201, 359, 225, 219, 0,
	0, 0, 243, 323, 214, 262, 0, 0, 0, 206,
	0, 0, 0, 358, 388, 171, 286, 389, 409, 189,
	381, 287, 294, 203, 205, 204, 183, 352, 387, 195,
	208, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	252, 244, 0, 0, 0, 310, 192, 0, 0, 0,
	0, 401, 0, 221, 0, 403, 155, 347, 346, 0,
	251, 0, 156, 147, 331, 157, 259, 174, 0, 412,
	188, 264, 382, 139, 237, 300, 212, 0, 311, 0,
	168, 327, 282, 284, 281, 285, 241, 151, 158, 0,
	329, 349, 386, 190, 365, 149, 150, 152, 160, 339,
	161, 162, 0, 276, 229, 233, 245, 256, 0, 334,
	366, 404, 0, 185, 338, 367, 378, 368, 371, 369,
	370, 341, 177, 373, 396, 196, 348, 351, 411, 0,
	184, 179, 0, 0, 0, 0, 0, 0, 0, 178,
	0, 0, 0, 0, 0, 0, 240, 0, 394, 395,
	211, 413, 0, 0, 180, 0, 0, 297, 305, 296,
	0, 390, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 232, 247, 321, 272, 322, 248, 292, 291, 293,
	274, 0, 0, 175, 0, 363, 0, 0, 372, 193,
	0, 0, 385, 154, 328, 194, 239, 230, 320, 295,
	186, 250, 361, 263, 271, 0, 0, 309, 337, 200,
	400, 360, 226, 0, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 163, 164, 0, 0, 0,
	207, 142, 0, 0, 0, 143, 0, 0, 144, 145,
	0, 0, 0, 0, 146, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2074, 317, 176, 187, 199, 218, 216, 231, 260, 283,
	288, 315, 350, 355, 375, 376, 377, 379, 220, 0,
	224, 198, 332, 197, 273, 253, 316, 383, 384, 325,
	213, 0, 170, 181, 267, 0, 330, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 402,
	217, 0, 0, 0, 182, 191, 202, 215, 228, 235,
	246, 249, 254, 255, 257, 261, 275, 277, 278, 279,
	280, 298, 299, 303, 304, 307, 308, 312, 313, 314,
	318, 319, 326, 159, 333, 340, 342, 343, 344, 345,
	353, 354, 356, 357, 364, 392, 393, 407, 408, 380,
	0, 167, 0, 0, 173, 0, 0, 0, 0, 0,
	306, 172, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 0, 0, 0, 0, 0, 0, 222, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 405, 362, 289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 140, 0, 0, 0, 0,
	0, 0, 0, 0, 148, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 399, 0, 0, 0, 0, 324,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 456, 0, 290,
	0, 0, 0, 0, 258, 165, 0, 0, 0, 0,
	0, 0, 0, 266, 0, 166, 0, 0, 0, 301,
	0, 0, 153, 169, 268, 0, 0, 0, 210, 0,
	336, 0, 398, 458, 455, 0, 335, 270, 391, 0,
	0, 397, 0, 374, 406, 410, 234, 0, 201, 359,
	225, 219, 0, 0, 0, 243, 323, 214, 262, 0,
	0, 0, 206, 0, 0, 0, 358, 388, 171, 286,
	389, 409, 189, 381, 287, 294, 203, 205, 204, 183,
	352, 387, 195, 208, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 244, 0, 0, 0, 310, 192,
	0, 0, 0, 0, 401, 0, 221, 0, 403, 155,
	347, 346, 0, 251, 0, 156, 147, 331, 157, 259,
	174, 0, 412, 188, 264, 382, 139, 237, 300, 212,
	0, 311, 0, 168, 327, 282, 284, 281, 285, 241,
	151, 158, 0, 329, 349, 386, 190, 365, 149, 150,
	152, 160, 339, 161, 162, 0, 276, 229, 233, 245,
	256, 0, 334, 366, 404, 0, 185, 338, 367, 378,
	368, 371, 369, 370, 341, 177, 373, 396, 196, 348,
	351, 411, 0, 184, 179, 0, 0, 0, 0, 0,
	0, 0, 178, 0, 0, 0, 0, 0, 0, 240,
	0, 394, 395, 211, 413, 0, 0, 180, 0, 0,
	297, 305, 296, 0, 390, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 232, 247, 321, 272, 322, 248,
	292, 291, 293, 274, 0, 0, 175, 0, 363, 0,
	0, 372, 193, 0, 0, 385, 154, 328, 194, 239,
	230, 320, 295, 186, 250, 361, 263, 271, 0, 0,
	309, 337, 200, 400, 360, 226, 0, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 163, 164,
	0, 0, 0, 207, 142, 0, 0, 0, 143, 0,
	0, 144, 145, 0, 0, 0, 0, 146, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 317, 176, 187, 199, 218, 216,
	231, 260, 283, 288, 315, 350, 355, 375, 376, 377,
	379, 220, 0, 224, 198, 332, 197, 273, 253, 316,
	383, 384, 325, 213, 0, 170, 181, 267, 0, 330,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 402, 217, 0, 0, 0, 182, 191, 202,
	215, 228, 235, 246, 249, 254, 255, 257, 261, 275,
	277, 278, 279, 280, 298, 299, 303, 304, 307, 308,
	312, 313, 314, 318, 319, 326, 159, 333, 340, 342,
	343, 344, 345, 353, 354, 356, 357, 364, 392, 393,
	407, 408, 380, 0, 167, 0, 0, 173, 0, 0,
	0, 0, 0, 306, 172, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 0, 0, 0, 0, 0, 0,
	222, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 405, 362, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 140, 0,
	0, 0, 0, 0, 0, 0, 0, 148, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 399, 0, 0,
	0, 0, 324, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 290, 0, 0, 0, 0, 258, 165, 0,
	0, 0, 0, 0, 0, 0, 266, 0, 166, 0,
	0, 0, 301, 0, 0, 153, 169, 268, 0, 0,
	0, 210, 0, 336, 0, 398, 2178, 238, 0, 335,
	270, 391, 0, 0, 397, 0, 374, 406, 410, 234,
	0, 201, 359, 225, 219, 0, 0, 0, 243, 323,
	214, 262, 0, 0, 0, 206, 0, 0, 0, 358,
	388, 171, 286, 389, 409, 189, 381, 287, 294, 203,
	205, 204, 183, 352, 387, 195, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 252, 244, 0, 0,
	0, 310, 192, 0, 0, 0, 0, 401, 0, 221,
	0, 403, 155, 347, 346, 0, 251, 0, 156, 147,
	331, 157, 259, 174, 0, 412, 188, 264, 382, 139,
	237, 300, 212, 0, 311, 0, 168, 327, 282, 284,
	281, 285, 241, 151, 158, 0, 329, 349, 386, 190,
	365, 149, 150, 152, 160, 339, 161, 162, 0, 276,
	229, 233, 245, 256, 0, 334, 366, 404, 0, 185,
	338, 367, 378, 368, 371, 369, 370, 341, 177, 373,
	396, 196, 348, 351, 411, 0, 184, 179, 0, 0,
	0, 0, 0, 0, 0, 178, 0, 0, 0, 0,
	0, 0, 240, 0, 394, 395, 211, 413, 0, 0,
	180, 0, 0, 297, 305, 296, 0, 390, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 232, 247, 321,
	272, 322, 248, 292, 291, 293, 274, 0, 0, 175,
	0, 363, 0, 0, 372, 193, 0, 0, 385, 154,
	328, 194, 239, 230, 320, 295, 186, 250, 361, 263,
	271, 0, 0, 309, 337, 200, 400, 360, 226, 0,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 163, 164, 0, 0, 0, 207, 142, 0, 0,
	0, 143, 0, 0, 144, 145, 0, 0, 0, 0,
	146, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 317, 176, 187,
	199, 218, 216, 231, 260, 283, 288, 315, 350, 355,
	375, 376, 377, 379, 220, 0, 224, 198, 332, 197,
	273, 253, 316, 383, 384, 325, 213, 0, 170, 181,
	267, 0, 330, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 402, 217, 0, 0, 0,
	182, 191, 202, 215, 228, 235, 246, 249, 254, 255,
	257, 261, 275, 277, 278, 279, 280, 298, 299, 303,
	304, 307, 308, 312, 313, 314, 318, 319, 326, 159,
	333, 340, 342, 343, 344, 345, 353, 354, 356, 357,
	364, 392, 393, 407, 408, 380, 0, 167, 0, 0,
	173, 0, 0, 0, 0, 0, 306, 172, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 0, 0, 0,
	0, 0, 0, 222, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 405,
	362, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 140, 0, 0, 0, 0, 0, 0, 0, 0,
	148, 0, 0, 0, 0, 0, 2060, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	399, 0, 0, 0, 0, 324, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 290, 0, 0, 0, 0,
	258, 165, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 166, 0, 0, 0, 301, 0, 0, 153, 169,
	268, 0, 0, 0, 210, 0, 336, 0, 398, 0,
	238, 0, 335, 270, 391, 0, 0, 397, 0, 374,
	406, 410, 234, 0, 201, 359, 225, 219, 0, 0,
	0, 243, 323, 214, 262, 0, 0, 0, 206, 0,
	0, 0, 358, 388, 171, 286, 389, 409, 189, 381,
	287, 294, 203, 205, 204, 183, 352, 387, 195, 208,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 252,
	244, 0, 0, 0, 310, 192, 0, 0, 0, 0,
	401, 0, 221, 0, 403, 155, 347, 346, 0, 251,
	0, 156, 147, 331, 157, 259, 174, 0, 412, 188,
	264, 382, 139, 237, 300, 212, 0, 311, 0, 168,
	327, 282, 284, 281, 285, 241, 151, 158, 0, 329,
	349, 386, 190, 365, 149, 150, 152, 160, 339, 161,
	162, 0, 276, 229, 233, 245, 256, 0, 334, 366,
	404, 0, 185, 338, 367, 378, 368, 371, 369, 370,
	341, 177, 373, 396, 196, 348, 351, 411, 0, 184,
	179, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 0, 0, 0, 0, 240, 0, 394, 395, 211,
	413, 0, 0, 180, 0, 0, 297, 305, 296, 0,
	390, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	232, 247, 321, 272, 322, 248, 292, 291, 293, 274,
	0, 0, 175, 0, 363, 0, 0, 372, 193, 0,
	0, 385, 154, 328, 194, 239, 230, 320, 295, 186,
	250, 361, 263, 271, 0, 0, 309, 337, 200, 400,
	360, 226, 0, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 163, 164, 0, 0, 0, 207,
	142, 0, 0, 0, 143, 0, 0, 144, 145, 0,
	0, 0, 0, 146, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 176, 187, 199, 218, 216, 231, 260, 283, 288,
	315, 350, 355, 375, 376, 377, 379, 220, 0, 224,
	198, 332, 197, 273, 253, 316, 383, 384, 325, 213,
	0, 170, 181, 267, 0, 330, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 402, 217,
	0, 0, 0, 182, 191, 202, 215, 228, 235, 246,
	249, 254, 255, 257, 261, 275, 277, 278, 279, 280,
	298, 299, 303, 304, 307, 308, 312, 313, 314, 318,
	319, 326, 159, 333, 340, 342, 343, 344, 345, 353,
	354, 356, 357, 364, 392, 393, 407, 408, 380, 0,
	167, 0, 1373, 173, 0, 0, 0, 0, 0, 306,
	172, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	0, 0, 0, 0, 0, 0, 222, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 405, 362, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 140, 0, 0, 0, 0, 0,
	0, 0, 0, 148, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 399, 0, 0, 0, 0, 324, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 290, 0,
	0, 0, 0, 258, 165, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 166, 0, 0, 0, 301, 0,
	0, 153, 169, 268, 0, 0, 0, 210, 0, 336,
	0, 398, 0, 238, 0, 335, 270, 391, 0, 0,
	397, 0, 374, 406, 410, 234, 0, 201, 359, 225,
	219, 0, 0, 0, 243, 323, 214, 262, 0, 0,
	0, 206, 0, 0, 0, 358, 388, 171, 286, 389,
	409, 189, 381, 287, 294, 203, 205, 204, 183, 352,
	387, 195, 208, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 244, 0, 0, 0, 310, 192, 0,
	0, 0, 0, 401, 0, 221, 0, 403, 155, 347,
	346, 0, 251, 0, 156, 147, 331, 157, 259, 174,
	0, 412, 188, 264, 382, 139, 237, 300, 212, 0,
	311, 0, 168, 327, 282, 284, 281, 285, 241, 151,
	158, 0, 329, 349, 386, 190, 365, 149, 150, 152,
	160, 339, 161, 162, 0, 276, 229, 233, 245, 256,
	0, 334, 366, 404, 0, 185, 338, 367, 378, 368,
	371, 369, 370, 341, 177, 373, 396, 196, 348, 351,
	411, 0, 184, 179, 0, 0, 0, 0, 0, 0,
	0, 178, 0, 0, 0, 0, 0, 0, 240, 0,
	394, 395, 211, 413, 0, 0, 180, 0, 0, 297,
	305, 296, 0, 390, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 232, 247, 321, 272, 322, 248, 292,
	291, 293, 274, 0, 0, 175, 0, 363, 0, 0,
	372, 193, 0, 0, 385, 154, 328, 194, 239, 230,
	320, 295, 186, 250, 361, 263, 271, 0, 0, 309,
	337, 200, 400, 360, 226, 0, 302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 163, 164, 0,
	0, 0, 207, 142, 0, 0, 0, 143, 0, 0,
	144, 145, 0, 0, 0, 0, 146, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 317, 176, 187, 199, 218, 216, 231,
	260, 283, 288, 315, 350, 355, 375, 376, 377, 379,
	220, 0, 224, 198, 332, 197, 273, 253, 316, 383,
	384, 325, 213, 0, 170, 181, 267, 0, 330, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 402, 217, 0, 0, 0, 182, 191, 202, 215,
	228, 235, 246, 249, 254, 255, 257, 261, 275, 277,
	278, 279, 280, 298, 299, 303, 304, 307, 308, 312,
	313, 314, 318, 319, 326, 159, 333, 340, 342, 343,
	344, 345, 353, 354, 356, 357, 364, 392, 393, 407,
	408, 380, 0, 167, 0, 0, 173, 0, 0, 0,
	0, 0, 306, 172, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 0, 0, 0, 0, 0, 0, 222,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 405, 362, 289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 140, 0, 0,
	0, 0, 0, 0, 0, 0, 148, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 399, 0, 0, 0,
	0, 324, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 290, 0, 0, 134, 0, 258, 165, 0, 0,
	0, 0, 0, 0, 0, 266, 0, 166, 0, 0,
	0, 301, 0, 0, 153, 169, 268, 0, 0, 0,
	210, 0, 336, 0, 398, 0, 238, 0, 335, 270,
	391, 0, 0, 397, 0, 374, 406, 410, 234, 0,
	201, 359, 225, 219, 0, 0, 0, 243, 323, 214,
	262, 0, 0, 0, 206, 0, 0, 0, 358, 388,
	171, 286, 389, 409, 189, 381, 287, 294, 203, 205,
	204, 183, 352, 387, 195, 208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 252, 244, 0, 0, 0,
	310, 192, 0, 0, 0, 0, 401, 0, 221, 0,
	403, 155, 347, 346, 0, 251, 0, 156, 147, 331,
	157, 259, 174, 0, 412, 188, 264, 382, 139, 237,
	300, 212, 0, 311, 0, 168, 327, 282, 284, 281,
	285, 241, 151, 158, 0, 329, 349, 386, 190, 365,
	149, 150, 152, 160, 339, 161, 162, 0, 276, 229,
	233, 245, 256, 0, 334, 366, 404, 0, 185, 338,
	367, 378, 368, 371, 369, 370, 341, 177, 373, 396,
	196, 348, 351, 411, 0, 184, 179, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 0, 0, 0,
	0, 240, 0, 394, 395, 211, 413, 0, 0, 180,
	0, 0, 297, 305, 296, 0, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 232, 247, 321, 272,
	322, 248, 292, 291, 293, 274, 0, 0, 175, 0,
	363, 0, 0, 372, 193, 0, 0, 385, 154, 328,
	194, 239, 230, 320, 295, 186, 250, 361, 263, 271,
	0, 0, 309, 337, 200, 400, 360, 226, 0, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	163, 164, 0, 0, 0, 207, 142, 0, 0, 0,
	143, 0, 0, 144, 145, 0, 0, 0, 0, 146,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 317, 176, 187, 199,
	218, 216, 231, 260, 283, 288, 315, 350, 355, 375,
	376, 377, 379, 220, 0, 224, 198, 332, 197, 273,
	253, 316, 383, 384, 325, 213, 0, 170, 181, 267,
	0, 330, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 402, 217, 0, 0, 0, 182,
	191, 202, 215, 228, 235, 246, 249, 254, 255, 257,
	261, 275, 277, 278, 279, 280, 298, 299, 303, 304,
	307, 308, 312, 313, 314, 318, 319, 326, 159, 333,
	340, 342, 343, 344, 345, 353, 354, 356, 357, 364,
	392, 393, 407, 408, 380, 0, 167, 0, 0, 173,
	0, 0, 0, 0, 0, 306, 172, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 0, 0, 0, 0,
	0, 0, 222, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 405, 362,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	140, 0, 0, 0, 0, 0, 0, 0, 0, 148,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 399,
	0, 0, 0, 0, 324, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 290, 0, 0, 0, 0, 258,
	165, 0, 0, 0, 0, 0, 0, 0, 266, 0,
	166, 0, 0, 0, 301, 0, 0, 153, 169, 268,
	0, 0, 0, 210, 0, 336, 0, 398, 0, 238,
	0, 335, 270, 391, 0, 0, 397, 0, 374, 406,
	410, 234, 0, 201, 359, 225, 219, 0, 0, 0,
	243, 323, 214, 262, 0, 0, 0, 206, 0, 0,
	0, 358, 388, 171, 286, 389, 409, 189, 381, 287,
	294, 203, 205, 204, 183, 352, 387, 195, 208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 252, 244,
	0, 0, 0, 310, 192, 0, 0, 0, 0, 401,
	0, 221, 0, 403, 155, 347, 346, 0, 251, 0,
	156, 147, 331, 157, 259, 174, 0, 412, 188, 264,
	382, 139, 237, 300, 212, 0, 311, 0, 168, 327,
	282, 284, 281, 285, 241, 151, 158, 0, 329, 349,
	386, 190, 365, 149, 150, 152, 160, 339, 161, 162,
	0, 276, 229, 233, 245, 256, 0, 334, 366, 404,
	0, 185, 338, 367, 378, 368, 371, 369, 370, 341,
	177, 373, 396, 196, 348, 351, 411, 0, 184, 179,
	0, 0, 0, 0, 0, 0, 0, 178, 0, 0,
	0, 0, 0, 0, 240, 0, 394, 395, 211, 413,
	0, 0, 180, 0, 0, 297, 305, 296, 0, 390,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 232,
	247, 321, 272, 322, 248, 292, 291, 293, 274, 0,
	0, 175, 0, 363, 0, 0, 372, 193, 0, 0,
	385, 154, 328, 194, 239, 230, 320, 295, 186, 250,
	361, 263, 271, 0, 0, 309, 337, 200, 400, 360,
	226, 0, 302, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 163, 164, 0, 0, 0, 207, 142,
	0, 0, 0, 143, 0, 0, 144, 145, 0, 0,
	0, 0, 146, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 317,
	176, 187, 199, 218, 216, 231, 260, 283, 288, 315,
	350, 355, 375, 376, 377, 379, 220, 0, 224, 198,
	332, 197, 273, 253, 316, 383, 384, 325, 213, 0,
	170, 181, 267, 0, 330, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 402, 217, 0,
	0, 0, 182, 191, 202, 215, 228, 235, 246, 249,
	254, 255, 257, 261, 275, 277, 278, 279, 280, 298,
	299, 303, 304, 307, 308, 312, 313, 314, 318, 319,
	326, 159, 333, 340, 342, 343, 344, 345, 353, 354,
	356, 357, 364, 392, 393, 407, 408, 0, 0, 167,
	0, 0, 173, 499, 380, 493, 504, 486, 0, 172,
	0, 0, 0, 0, 0, 306, 0, 0, 510, 0,
	0, 0, 0, 0, 223, 0, 0, 494, 0, 0,
	0, 0, 222, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 405, 362,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	508, 0, 507, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 399,
	0, 0, 0, 0, 324, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 485, 484,
	487, 0, 0, 0, 290, 0, 0, 0, 492, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 0,
	166, 0, 0, 0, 301, 496, 0, 0, 169, 268,
	500, 0, 0, 210, 0, 336, 0, 398, 0, 238,
	0, 335, 270, 391, 0, 503, 397, 0, 374, 406,
	410, 234, 0, 201, 359, 225, 219, 0, 0, 0,
	243, 323, 214, 262, 0, 0, 0, 206, 0, 0,
	0, 358, 388, 171, 286, 389, 409, 189, 381, 287,
	294, 203, 205, 204, 183, 352, 387, 195, 208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 252, 244,
	0, 0, 0, 310, 192, 0, 0, 0, 0, 401,
	0, 221, 0, 403, 0, 347, 346, 491, 251, 0,
	0, 0, 331, 0, 259, 174, 0, 412, 188, 264,
	382, 0, 237, 300, 212, 0, 311, 0, 168, 327,
	282, 284, 281, 285, 241, 0, 0, 0, 513, 349,
	386, 190, 365, 488, 489, 490, 497, 498, 501, 502,
	505, 276, 229, 233, 245, 256, 0, 334, 366, 404,
	0, 185, 338, 367, 378, 368, 371, 369, 370, 341,
	177, 373, 396, 196, 348, 351, 411, 0, 184, 179,
	0, 0, 0, 0, 0, 0, 0, 178, 0, 0,
	0, 0, 0, 0, 240, 0, 394, 395, 211, 413,
	0, 0, 180, 0, 0, 297, 305, 296, 0, 390,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 232,
	247, 321, 272, 322, 248, 292, 291, 293, 274, 0,
	0, 175, 0, 363, 0, 0, 372, 193, 0, 0,
	385, 0, 328, 194, 239, 230, 320, 295, 186, 250,
	361, 263, 271, 0, 0, 309, 337, 200, 400, 360,
	226, 0, 302, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 207, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 317,
	176, 187, 199, 218, 216, 231, 260, 283, 288, 315,
	350, 355, 375, 376, 377, 379, 220, 0, 224, 198,
	332, 197, 273, 253, 316, 383, 384, 325, 213, 0,
	170, 181, 267, 0, 330, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 402, 217, 0,
	0, 0, 182, 191, 202, 215, 228, 235, 246, 249,
	254, 255, 257, 261, 275, 277, 278, 279, 280, 298,
	299, 303, 304, 307, 308, 312, 313, 314, 318, 319,
	326, 495, 333, 340, 342, 343, 344, 345, 353, 354,
	356, 357, 364, 392, 393, 407, 408, 0, 0, 167,
	0, 0, 173, 499, 380, 493, 504, 486, 0, 172,
	0, 0, 0, 0, 0, 306, 0, 0, 478, 0,
	0, 0, 0, 0, 223, 0, 0, 494, 0, 0,
	0, 0, 222, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 405, 362,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	508, 0, 507, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 399,
	0, 0, 0, 0, 324, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 485, 484,
	487, 0, 0, 0, 290, 0, 0, 0, 492, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 0,
	166, 0, 0, 0, 301, 496, 0, 0, 169, 268,
	500, 0, 0, 210, 0, 336, 0, 398, 0, 238,
	0, 335, 270, 391, 0, 503, 397, 0, 374, 406,
	410, 234, 0, 201, 359, 225, 219, 0, 0, 0,
	243, 323, 214, 262, 0, 0, 0, 206, 0, 0,
	0, 358, 388, 171, 286, 389, 409, 189, 381, 287,
	294, 203, 205, 204, 183, 352, 387, 195, 208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 252, 244,
	0, 0, 0, 310, 192, 0, 0, 0, 0, 401,
	0, 221, 0, 403, 0, 347, 346, 491, 251, 0,
	0, 0, 331, 0, 259, 174, 0, 412, 188, 264,
	382, 0, 237, 300, 212, 0, 311, 0, 168, 327,
	282, 284, 281, 285, 241, 0, 0, 0, 481, 349,
	386, 190, 365, 488, 489, 490, 497, 498, 501, 502,
	505, 276, 229, 233, 245, 256, 0, 334, 366, 404,
	0, 185, 338, 367, 378, 368, 371, 369, 370, 341,
	177, 373, 396, 196, 348, 351, 411, 0, 184, 179,
	0, 0, 0, 0, 0, 0, 0, 178, 0, 0,
	0, 0, 0, 0, 240, 0, 394, 395, 211, 413,
	0, 0, 180, 0, 0, 297, 305, 296, 0, 390,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 232,
	247, 321, 272, 322, 248, 292, 291, 293, 274, 0,
	0, 175, 0, 363, 0, 0, 372, 193, 0, 0,
	385, 0, 328, 194, 239, 230, 320, 295, 186, 250,
	361, 263, 271, 0, 0, 309, 337, 200, 400, 360,
	226, 0, 302, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 207, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 317,
	176, 187, 199, 218, 216, 231, 260, 283, 288, 315,
	350, 355, 375, 376, 377, 379, 220, 0, 224, 198,
	332, 197, 273, 253, 316, 383, 384, 325, 213, 0,
	170, 181, 267, 0, 330, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 402, 217, 0,
	0, 0, 182, 191, 202, 215, 228, 235, 246, 249,
	254, 255, 257, 261, 275, 277, 278, 279, 280, 298,
	299, 303, 304, 307, 308, 312, 313, 314, 318, 319,
	326, 495, 333, 340, 342, 343, 344, 345, 353, 354,
	356, 357, 364, 392, 393, 407, 408, 380, 0, 167,
	0, 0, 173, 0, 0, 0, 0, 0, 306, 172,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 0,
	0, 0, 0, 0, 0, 222, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 405, 362, 289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 999, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 399, 0, 0, 0, 0, 324, 242, 1258,
	1257, 1267, 1268, 1260, 1261, 1262, 1263, 1264, 1265, 1266,
	1259, 0, 0, 1269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 290, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 266, 0, 166, 0, 0, 0, 301, 0, 0,
	0, 169, 268, 0, 0, 0, 210, 0, 336, 0,
	398, 0, 238, 0, 335, 270, 391, 0, 0, 397,
	0, 374, 406, 410, 234, 0, 201, 359, 225, 219,
	0, 0, 0, 243, 323, 214, 262, 0, 0, 0,
	206, 0, 0, 0, 358, 388, 171, 286, 389, 409,
	189, 381, 287, 294, 203, 205, 204, 183, 352, 387,
	195, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 252, 244, 0, 0, 0, 310, 192, 0, 0,
	0, 0, 401, 0, 221, 0, 403, 0, 347, 346,
	0, 251, 0, 0, 0, 331, 0, 259, 174, 0,
	412, 188, 264, 382, 0, 237, 300, 212, 0, 311,
	0, 168, 327, 282, 284, 281, 285, 241, 0, 0,
	0, 329, 349, 386, 190, 365, 0, 0, 0, 0,
	339, 0, 0, 0, 276, 229, 233, 245, 256, 0,
	334, 366, 404, 0, 185, 338, 367, 378, 368, 371,
	369, 370, 341, 177, 373, 396, 196, 348, 351, 411,
	0, 184, 179, 0, 0, 0, 0, 0, 0, 0,
	178, 0, 0, 0, 0, 0, 0, 240, 0, 394,
	395, 211, 413, 0, 0, 180, 0, 0, 297, 305,
	296, 0, 390, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 232, 247, 321, 272, 322, 248, 292, 291,
	293, 274, 0, 0, 175, 0, 363, 0, 0, 372,
	193, 0, 0, 385, 0, 328, 194, 239, 230, 320,
	295, 186, 250, 361, 263, 271, 0, 0, 309, 337,
	200, 400, 360, 226, 0, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 207, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 317, 176, 187, 199, 218, 216, 231, 260,
	283, 288, 315, 350, 355, 375, 376, 377, 379, 220,
	0, 224, 198, 332, 197, 273, 253, 316, 383, 384,
	325, 213, 0, 170, 181, 267, 0, 330, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	402, 217, 0, 0, 0, 182, 191, 202, 215, 228,
	235, 246, 249, 254, 255, 257, 261, 275, 277, 278,
	279, 280, 298, 299, 303, 304, 307, 308, 312, 313,
	314, 318, 319, 326, 0, 333, 340, 342, 343, 344,
	345, 353, 354, 356, 357, 364, 392, 393, 407, 408,
	380, 0, 167, 0, 0, 173, 0, 0, 0, 0,
	0, 306, 172, 0, 0, 0, 2395, 0, 0, 0,
	223, 0, 0, 0, 0, 0, 0, 0, 222, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 405, 362, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2397, 2399, 0,
	0, 0, 0, 0, 0, 0, 140, 0, 530, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 399, 2393, 0, 0, 0,
	324, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	290, 0, 0, 0, 0, 258, 0, 0, 2398, 0,
	0, 0, 0, 0, 266, 0, 166, 0, 0, 0,
	301, 0, 0, 0, 169, 268, 0, 0, 0, 210,
	0, 336, 0, 398, 0, 238, 0, 335, 270, 391,
	0, 0, 397, 0, 374, 406, 410, 234, 0, 201,
	359, 225, 219, 0, 0, 0, 243, 323, 214, 262,
	0, 0, 0, 206, 0, 0, 0, 358, 388, 171,
	286, 389, 409, 189, 381, 287, 294, 203, 205, 204,
	183, 352, 387, 195, 208, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 252, 244, 0, 0, 0, 310,
	192, 0, 0, 0, 0, 401, 0, 221, 0, 403,
	0, 347, 346, 0, 251, 0, 0, 0, 331, 0,
	259, 174, 0, 412, 188, 264, 382, 0, 237, 300,
	212, 0, 311, 0, 168, 327, 282, 284, 281, 285,
	241, 0, 0, 0, 329, 349, 386, 190, 365, 0,
	0, 0, 0, 339, 0, 0, 0, 276, 229, 233,
	245, 256, 0, 334, 366, 404, 0, 185, 338, 367,
	378, 368, 371, 369, 370, 341, 177, 373, 396, 196,
	348, 351, 411, 0, 184, 179, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 0, 0, 0, 0,
	240, 0, 394, 395, 211, 413, 0, 0, 180, 0,
	0, 297, 305, 296, 0, 390, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 232, 247, 321, 272, 322,
	248, 292, 291, 293, 274, 0, 0, 175, 0, 363,
	0, 0, 372, 193, 0, 0, 385, 0, 328, 194,
	239, 230, 320, 295, 186, 250, 361, 263, 271, 0,
	0, 309, 337, 200, 400, 360, 226, 0, 302, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 207, 142, 0, 0, 0, 143,
	0, 0, 144, 145, 0, 0, 0, 0, 146, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 176, 187, 199, 218,
	216, 231, 260, 283, 288, 315, 350, 355, 375, 376,
	377, 379, 220, 0, 224, 198, 332, 197, 273, 253,
	316, 383, 384, 325, 213, 0, 170, 181, 267, 0,
	330, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 402, 217, 0, 0, 0, 182, 191,
	202, 215, 228, 235, 246, 249, 254, 255, 257, 261,
	275, 277, 278, 279, 280, 298, 299, 303, 304, 307,
	308, 312, 313, 314, 318, 319, 326, 0, 333, 340,
	342, 343, 344, 345, 353, 354, 356, 357, 364, 392,
	393, 407, 408, 380, 0, 167, 0, 0, 173, 0,
	0, 0, 0, 0, 306, 172, 0, 0, 0, 2395,
	0, 0, 0, 223, 0, 0, 0, 0, 0, 0,
	0, 222, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 405, 362, 289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2397, 2399, 0, 0, 0, 0, 0, 0, 0, 140,
	0, 530, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 399, 0,
	0, 0, 0, 324, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 290, 0, 0, 0, 0, 258, 0,
	0, 2398, 0, 0, 0, 0, 0, 266, 0, 166,
	0, 0, 0, 301, 0, 0, 0, 169, 268, 0,
	0, 0, 210, 0, 336, 0, 398, 0, 238, 0,
	335, 270, 391, 0, 0, 397, 0, 374, 406, 410,
	234, 0, 201, 359, 225, 219, 0, 0, 0, 243,
	323, 214, 262, 0, 0, 0, 206, 0, 0, 0,
	358, 388, 171, 286, 389, 409, 189, 381, 287, 294,
	203, 205, 204, 183, 352, 387, 195, 208, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 252, 244, 0,
	0, 0, 310, 192, 0, 0, 0, 0, 401, 0,
	221, 0, 403, 0, 347, 346, 0, 251, 0, 0,
	0, 331, 0, 259, 174, 0, 412, 188, 264, 382,
	0, 237, 300, 212, 0, 311, 0, 168, 327, 282,
	284, 281, 285, 241, 0, 0, 0, 329, 349, 386,
	190, 365, 0, 0, 0, 0, 339, 0, 0, 0,
	276, 229, 233, 245, 256, 0, 334, 366, 404, 0,
	185, 338, 367, 378, 368, 371, 369, 370, 341, 177,
	373, 396, 196, 348, 351, 411, 0, 184, 179, 0,
	0, 0, 0, 0, 0, 0, 178, 0, 0, 0,
	0, 0, 0, 240, 0, 394, 395, 211, 413, 0,
	0, 180, 0, 0, 297, 305, 296, 0, 390, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 232, 247,
	321, 272, 322, 248, 292, 291, 293, 274, 0, 0,
	175, 0, 363, 0, 0, 372, 193, 0, 0, 385,
	0, 328, 194, 239, 230, 320, 295, 186, 250, 361,
	263, 271, 0, 0, 309, 337, 200, 400, 360, 226,
	0, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 207, 142, 0,
	0, 0, 143, 0, 0, 144, 145, 0, 0, 0,
	0, 146, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 317, 176,
	187, 199, 218, 216, 231, 260, 283, 288, 315, 350,
	355, 375, 376, 377, 379, 220, 0, 224, 198, 332,
	197, 273, 253, 316, 383, 384, 325, 213, 0, 170,
	181, 267, 0, 330, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 402, 217, 0, 0,
	0, 182, 191, 202, 215, 228, 235, 246, 249, 254,
	255, 257, 261, 275, 277, 278, 279, 280, 298, 299,
	303, 304, 307, 308, 312, 313, 314, 318, 319, 326,
	0, 333, 340, 342, 343, 344, 345, 353, 354, 356,
	357, 364, 392, 393, 407, 408, 380, 0, 167, 0,
	0, 173, 0, 0, 0, 0, 0, 306, 172, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 0, 0,
	0, 0, 0, 0, 222, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	405, 362, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 140, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 399, 0, 0, 0, 0, 324, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 290, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 166, 0, 0, 0, 301, 0, 0, 0,
	169, 268, 0, 0, 0, 210, 0, 336, 0, 398,
	0, 238, 0, 335, 270, 391, 0, 0, 397, 0,
	374, 406, 410, 234, 0, 201, 359, 225, 219, 0,
	0, 0, 243, 323, 214, 262, 0, 0, 0, 206,
	0, 0, 0, 358, 388, 171, 286, 389, 409, 189,
	381, 287, 294, 203, 205, 204, 183, 352, 387, 195,
	208, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	252, 244, 0, 0, 0, 310, 192, 0, 0, 0,
	0, 401, 0, 221, 0, 403, 0, 347, 346, 0,
	251, 0, 0, 0, 331, 0, 259, 174, 0, 412,
	188, 264, 382, 0, 237, 300, 212, 0, 311, 0,
	168, 327, 282, 284, 281, 285, 241, 0, 0, 0,
	329, 349, 386, 190, 365, 0, 0, 0, 0, 339,
	0, 0, 0, 276, 229, 233, 245, 256, 0, 334,
	366, 404, 0, 185, 338, 367, 378, 368, 371, 369,
	370, 341, 177, 373, 396, 196, 348, 351, 411, 0,
	184, 179, 0, 0, 0, 0, 0, 0, 0, 178,
	0, 0, 0, 0, 0, 0, 240, 0, 394, 395,
	211, 413, 0, 0, 180, 0, 0, 297, 305, 296,
	0, 390, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 232, 247, 321, 272, 322, 248, 292, 291, 293,
	274, 0, 0, 175, 0, 363, 0, 0, 372, 193,
	0, 0, 385, 0, 328, 194, 239, 230, 320, 295,
	186, 250, 361, 263, 271, 0, 0, 309, 337, 200,
	400, 360, 226, 0, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	207, 142, 0, 0, 0, 143, 0, 0, 144, 145,
	0, 0, 0, 0, 146, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 176, 187, 199, 218, 216, 231, 260, 283,
	288, 315, 350, 355, 375, 376, 377, 379, 220, 0,
	224, 198, 332, 197, 273, 253, 316, 383, 384, 325,
	213, 0, 170, 181, 267, 0, 330, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 402,
	217, 0, 0, 524, 182, 191, 202, 215, 228, 235,
	246, 249, 254, 255, 257, 261, 275, 277, 278, 279,
	280, 298, 299, 303, 304, 307, 308, 312, 313, 314,
	318, 319, 326, 0, 333, 340, 342, 343, 344, 345,
	353, 354, 356, 357, 364, 392, 393, 407, 408, 380,
	0, 167, 0, 0, 173, 0, 0, 0, 0, 0,
	306, 172, 0, 0, 0, 3678, 0, 0, 0, 223,
	0, 0, 0, 0, 0, 0, 0, 222, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 405, 362, 289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 140, 0, 530, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 399, 0, 0, 0, 0, 324,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 290,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 266, 0, 166, 0, 0, 0, 301,
	0, 0, 0, 169, 268, 0, 0, 0, 210, 0,
	336, 0, 398, 0, 238, 0, 335, 270, 391, 0,
	0, 397, 0, 374, 406, 410, 234, 0, 201, 359,
	225, 219, 0, 0, 0, 243, 323, 214, 262, 0,
	0, 0, 206, 0, 0, 0, 358, 388, 171, 286,
	389, 409, 189, 381, 287, 294, 203, 205, 204, 183,
	352, 387, 195, 208, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 244, 0, 0, 0, 310, 192,
	0, 0, 0, 0, 401, 0, 221, 0, 403, 0,
	347, 346, 0, 251, 0, 0, 0, 331, 0, 259,
	174, 0, 412, 188, 264, 382, 0, 237, 300, 212,
	0, 311, 0, 168, 327, 282, 284, 281, 285, 241,
	0, 0, 0, 329, 349, 386, 190, 365, 0, 0,
	0, 0, 339, 0, 0, 0, 276, 229, 233, 245,
	256, 0, 334, 366, 404, 0, 185, 338, 367, 378,
	368, 371, 369, 370, 341, 177, 373, 396, 196, 348,
	351, 411, 0, 184, 179, 0, 0, 0, 0, 0,
	0, 0, 178, 0, 0, 0, 0, 0, 0, 240,
	0, 394, 395, 211, 413, 0, 0, 180, 0, 0,
	297, 305, 296, 0, 390, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 232, 247, 321, 272, 322, 248,
	292, 291, 293, 274, 0, 0, 175, 0, 363, 0,
	0, 372, 193, 0, 0, 385, 0, 328, 194, 239,
	230, 320, 295, 186, 250, 361, 263, 271, 0, 0,
	309, 337, 200, 400, 360, 226, 0, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 207, 142, 0, 0, 0, 143, 0,
	0, 144, 145, 0, 0, 0, 0, 146, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 317, 176, 187, 199, 218, 216,
	231, 260, 283, 288, 315, 350, 355, 375, 376, 377,
	379, 220, 0, 224, 198, 332, 197, 273, 253, 316,
	383, 384, 325, 213, 0, 170, 181, 267, 0, 330,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 402, 217, 0, 0, 0, 182, 191, 202,
	215, 228, 235, 246, 249, 254, 255, 257, 261, 275,
	277, 278, 279, 280, 298, 299, 303, 304, 307, 308,
	312, 313, 314, 318, 319, 326, 0, 333, 340, 342,
	343, 344, 345, 353, 354, 356, 357, 364, 392, 393,
	407, 408, 380, 0, 167, 0, 0, 173, 0, 0,
	0, 0, 0, 306, 172, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 0, 0, 0, 0, 2711, 0,
	222, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 405, 362, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 140, 0,
	530, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 399, 0, 0,
	0, 0, 324, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 290, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 0, 166, 0,
	0, 0, 301, 0, 0, 0, 169, 268, 0, 0,
	0, 210, 0, 336, 0, 398, 0, 238, 0, 335,
	270, 391, 0, 0, 397, 0, 374, 406, 410, 234,
	0, 201, 359, 225, 219, 0, 0, 0, 243, 323,
	214, 262, 0, 0, 0, 206, 0, 0, 0, 358,
	388, 171, 286, 389, 409, 189, 381, 287, 294, 203,
	205, 204, 183, 352, 387, 195, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 252, 244, 0, 0,
	0, 310, 192, 0, 0, 0, 0, 401, 0, 221,
	0, 403, 0, 347, 346, 0, 251, 0, 0, 0,
	331, 0, 259, 174, 0, 412, 188, 264, 382, 0,
	237, 300, 212, 0, 311, 0, 168, 327, 282, 284,
	281, 285, 241, 0, 0, 0, 329, 349, 386, 190,
	365, 0, 0, 0, 0, 339, 0, 0, 0, 276,
	229, 233, 245, 256, 0, 334, 366, 404, 0, 185,
	338, 367, 378, 368, 371, 369, 370, 341, 177, 373,
	396, 196, 348, 351, 411, 0, 184, 179, 0, 0,
	0, 0, 0, 0, 0, 178, 0, 0, 0, 0,
	0, 0, 240, 0, 394, 395, 211, 413, 0, 0,
	180, 0, 0, 297, 305, 296, 0, 390, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 232, 247, 321,
	272, 322, 248, 292, 291, 293, 274, 0, 0, 175,
	0, 363, 0, 0, 372, 193, 0, 0, 385, 0,
	328, 194, 239, 230, 320, 295, 186, 250, 361, 263,
	271, 0, 0, 309, 337, 200, 400, 360, 226, 0,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 142, 0, 0,
	0, 143, 0, 0, 144, 145, 0, 0, 0, 0,
	146, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 317, 176, 187,
	199, 218, 216, 231, 260, 283, 288, 315, 350, 355,
	375, 376, 377, 379, 220, 0, 224, 198, 332, 197,
	273, 253, 316, 383, 384, 325, 213, 0, 170, 181,
	267, 0, 330, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 402, 217, 0, 0, 0,
	182, 191, 202, 215, 228, 235, 246, 249, 254, 255,
	257, 261, 275, 277, 278, 279, 280, 298, 299, 303,
	304, 307, 308, 312, 313, 314, 318, 319, 326, 0,
	333, 340, 342, 343, 344, 345, 353, 354, 356, 357,
	364, 392, 393, 407, 408, 380, 0, 167, 0, 0,
	173, 0, 0, 0, 0, 0, 306, 172, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 0, 0, 0,
	0, 0, 0, 222, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 405,
	362, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 140, 0, 530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	399, 0, 0, 0, 0, 324, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 290, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 166, 0, 0, 0, 301, 0, 0, 0, 169,
	268, 0, 0, 0, 210, 0, 336, 0, 398, 0,
	238, 0, 335, 270, 391, 0, 0, 397, 0, 374,
	406, 410, 234, 0, 201, 359, 225, 219, 0, 0,
	0, 243, 323, 214, 262, 0, 0, 0, 206, 0,
	0, 0, 358, 388, 171, 286, 389, 409, 189, 381,
	287, 294, 203, 205, 204, 183, 352, 387, 195, 208,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 252,
	244, 0, 0, 0, 310, 192, 0, 0, 0, 0,
	401, 0, 221, 0, 403, 0, 347, 346, 0, 251,
	0, 0, 0, 331, 0, 259, 174, 0, 412, 188,
	264, 382, 0, 237, 300, 212, 0, 311, 0, 168,
	327, 282, 284, 281, 285, 241, 0, 0, 0, 329,
	349, 386, 190, 365, 0, 0, 0, 0, 339, 0,
	0, 0, 276, 229, 233, 245, 256, 0, 334, 366,
	404, 0, 185, 338, 367, 378, 368, 371, 369, 370,
	341, 177, 373, 396, 196, 348, 351, 411, 0, 184,
	179, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 0, 0, 0, 0, 240, 0, 394, 395, 211,
	413, 0, 0, 180, 0, 0, 297, 305, 296, 0,
	390, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	232, 247, 321, 272, 322, 248, 292, 291, 293, 274,
	0, 0, 175, 0, 363, 0, 0, 372, 193, 0,
	0, 385, 0, 328, 194, 239, 230, 320, 295, 186,
	250, 361, 263, 271, 0, 0, 309, 337, 200, 400,
	360, 226, 0, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 380, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 306, 0, 0, 0, 0, 0, 207,
	142, 0, 223, 0, 143, 0, 0, 144, 145, 0,
	222, 209, 0, 146, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 405, 362, 289, 0,
	317, 176, 187, 199, 218, 216, 231, 260, 283, 288,
	315, 350, 355, 375, 376, 377, 379, 220, 999, 224,
	198, 332, 197, 273, 253, 316, 383, 384, 325, 213,
	0, 170, 181, 267, 0, 330, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 399, 0, 0,
	0, 0, 324, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 402, 217,
	0, 0, 0, 182, 191, 202, 215, 228, 235, 246,
	249, 254, 255, 257, 261, 275, 277, 278, 279, 280,
	298, 299, 303, 304, 307, 308, 312, 313, 314, 318,
	319, 326, 0, 333, 340, 342, 343, 344, 345, 353,
	354, 356, 357, 364, 392, 393, 407, 408, 0, 0,
	167, 0, 290, 173, 0, 0, 0, 258, 0, 0,
	172, 0, 0, 0, 0, 0, 266, 0, 166, 0,
	0, 0, 301, 0, 0, 0, 169, 268, 0, 0,
	0, 210, 0, 336, 0, 398, 0, 238, 0, 335,
	270, 391, 0, 0, 397, 0, 374, 406, 410, 234,
	0, 201, 359, 225, 219, 0, 0, 0, 243, 323,
	214, 262, 0, 0, 0, 206, 0, 0, 0, 358,
	388, 171, 286, 389, 409, 189, 381, 287, 294, 203,
	205, 204, 183, 352, 387, 195, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 252, 244, 0, 0,
	0, 310, 192, 0, 0, 0, 0, 401, 0, 221,
	0, 403, 0, 347, 346, 0, 251, 0, 0, 0,
	331, 0, 259, 174, 0, 412, 188, 264, 382, 0,
	237, 300, 212, 0, 311, 0, 168, 327, 282, 284,
	281, 285, 241, 0, 0, 0, 329, 349, 386, 190,
	365, 0, 0, 0, 0, 339, 0, 0, 0, 276,
	229, 233, 245, 256, 0, 334, 366, 404, 0, 185,
	338, 367, 378, 368, 371, 369, 370, 341, 177, 373,
	396, 196, 348, 351, 411, 0, 184, 179, 0, 0,
	0, 0, 0, 0, 0, 178, 0, 0, 0, 0,
	0, 0, 240, 0, 394, 395, 211, 413, 0, 0,
	180, 0, 0, 297, 305, 296, 0, 390, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 232, 247, 321,
	272, 322, 248, 292, 291, 293, 274, 0, 0, 175,
	0, 363, 0, 0, 372, 193, 0, 0, 385, 0,
	328, 194, 239, 230, 320, 295, 186, 250, 361, 263,
	271, 0, 0, 309, 337, 200, 400, 360, 226, 0,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 142, 0, 0,
	0, 143, 0, 0, 144, 145, 0, 0, 0, 0,
	146, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 317, 176, 187,
	199, 218, 216, 231, 260, 283, 288, 315, 350, 355,
	375, 376, 377, 379, 220, 0, 224, 198, 332, 197,
	273, 253, 316, 383, 384, 325, 213, 0, 170, 181,
	267, 0, 330, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 402, 217, 0, 0, 0,
	182, 191, 202, 215, 228, 235, 246, 249, 254, 255,
	257, 261, 275, 277, 278, 279, 280, 298, 299, 303,
	304, 307, 308, 312, 313, 314, 318, 319, 326, 0,
	333, 340, 342, 343, 344, 345, 353, 354, 356, 357,
	364, 392, 393, 407, 408, 380, 0, 167, 0, 0,
	173, 0, 0, 0, 0, 0, 306, 172, 0, 3627,
	0, 0, 0, 0, 0, 223, 3625, 0, 0, 0,
	0, 0, 0, 222, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 405,
	362, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 508, 0, 507, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	399, 0, 0, 0, 0, 324, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 290, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 166, 0, 0, 0, 301, 0, 0, 0, 169,
	268, 0, 0, 0, 210, 0, 336, 0, 398, 0,
	238, 0, 335, 270, 391, 0, 0, 397, 0, 374,
	406, 410, 234, 0, 201, 359, 225, 219, 0, 0,
	0, 243, 323, 214, 262, 0, 0, 0, 206, 0,
	0, 0, 358, 388, 171, 286, 389, 409, 189, 381,
	287, 294, 203, 205, 204, 183, 352, 387, 195, 208,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 252,
	244, 0, 0, 0, 310, 192, 0, 0, 0, 0,
	401, 0, 221, 0, 403, 0, 347, 346, 0, 251,
	0, 3626, 0, 331, 0, 259, 174, 0, 412, 188,
	264, 382, 0, 237, 300, 212, 0, 311, 0, 168,
	327, 282, 284, 281, 285, 241, 0, 0, 0, 329,
	349, 386, 190, 365, 0, 0, 0, 0, 339, 0,
	0, 0, 276, 229, 233, 245, 256, 0, 334, 366,
	404, 0, 185, 338, 367, 378, 368, 371, 369, 370,
	341, 177, 373, 396, 196, 348, 351, 411, 0, 184,
	179, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 0, 0, 0, 0, 240, 0, 394, 395, 211,
	413, 0, 0, 180, 0, 0, 297, 305, 296, 0,
	390, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	232, 247, 321, 272, 322, 248, 292, 291, 293, 274,
	0, 0, 175, 0, 363, 0, 0, 372, 193, 0,
	0, 385, 0, 328, 194, 239, 230, 320, 295, 186,
	250, 361, 263, 271, 0, 0, 309, 337, 200, 400,
	360, 226, 0, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 380, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 306, 0, 0, 0, 0, 0, 207,
	0, 0, 223, 0, 0, 0, 0, 0, 0, 0,
	222, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 405, 362, 289, 0,
	317, 176, 187, 199, 218, 216, 231, 260, 283, 288,
	315, 350, 355, 375, 376, 377, 379, 220, 999, 224,
	198, 332, 197, 273, 253, 316, 383, 384, 325, 213,
	0, 170, 181, 267, 0, 330, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2519, 399, 0, 0,
	0, 0, 324, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 402, 217,
	0, 0, 0, 182, 191, 202, 215, 228, 235, 246,
	249, 254, 255, 257, 261, 275, 277, 278, 279, 280,
	298, 299, 303, 304, 307, 308, 312, 313, 314, 318,
	319, 326, 0, 333, 340, 342, 343, 344, 345, 353,
	354, 356, 357, 364, 392, 393, 407, 408, 0, 0,
	167, 0, 290, 173, 0, 0, 0, 258, 0, 0,
	172, 0, 0, 0, 0, 0, 266, 0, 166, 0,
	0, 0, 301, 0, 0, 0, 169, 268, 0, 0,
	0, 210, 0, 336, 0, 398, 0, 238, 0, 335,
	270, 391, 0, 0, 397, 0, 374, 406, 410, 234,
	0, 201, 359, 225, 219, 0, 0, 0, 243, 323,
	214, 262, 2520, 2521, 0, 206, 0, 0, 0, 358,
	388, 171, 286, 389, 409, 189, 381, 287, 294, 203,
	205, 204, 183, 352, 387, 195, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 252, 244, 0, 0,
	0, 310, 192, 0, 0, 0, 0, 401, 0, 221,
	0, 403, 0, 347, 346, 0, 251, 0, 0, 0,
	331, 0, 259, 174, 0, 412, 188, 264, 382, 0,
	237, 300, 212, 0, 311, 0, 168, 327, 282, 284,
	281, 285, 241, 0, 0, 0, 329, 349, 386, 190,
	365, 0, 0, 0, 0, 339, 0, 0, 0, 276,
	229, 233, 245, 256, 0, 334, 366, 404, 0, 185,
	338, 367, 378, 368, 371, 369, 370, 341, 177, 373,
	396, 196, 348, 351, 411, 0, 184, 179, 0, 0,
	0, 0, 0, 0, 0, 178, 0, 0, 0, 0,
	0, 0, 240, 0, 394, 395, 211, 413, 0, 0,
	180, 0, 0, 297, 305, 296, 0, 390, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 232, 247, 321,
	272, 322, 248, 292, 291, 293, 274, 0, 0, 175,
	0, 363, 0, 0, 372, 193, 0, 0, 385, 0,
	328, 194, 239, 230, 320, 295, 186, 250, 361, 263,
	271, 0, 0, 309, 337, 200, 400, 360, 226, 0,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 317, 176, 187,
	199, 218, 216, 231, 260, 283, 288, 315, 350, 355,
	375, 376, 377, 379, 220, 0, 224, 198, 332, 197,
	273, 253, 316, 383, 384, 325, 213, 0, 170, 181,
	267, 0, 330, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 402, 217, 0, 0, 0,
	182, 191, 202, 215, 228, 235, 246, 249, 254, 255,
	257, 261, 275, 277, 278, 279, 280, 298, 299, 303,
	304, 307, 308, 312, 313, 314, 318, 319, 326, 0,
	333, 340, 342, 343, 344, 345, 353, 354, 356, 357,
	364, 392, 393, 407, 408, 380, 0, 167, 0, 0,
	173, 0, 0, 0, 0, 0, 306, 172, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 0, 0, 0,
	0, 0, 0, 222, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 405,
	362, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 508, 0, 507, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	399, 0, 0, 0, 0, 324, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 290, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 166, 0, 0, 0, 301, 0, 0, 0, 169,
	268, 0, 0, 0, 210, 0, 336, 0, 398, 0,
	238, 0, 335, 270, 391, 0, 0, 397, 0, 374,
	406, 410, 234, 0, 201, 359, 225, 219, 0, 0,
	0, 243, 323, 214, 262, 0, 0, 0, 206, 0,
	0, 0, 358, 388, 171, 286, 389, 409, 189, 381,
	287, 294, 203, 205, 204, 183, 352, 387, 195, 208,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 252,
	244, 0, 0, 0, 310, 192, 0, 0, 0, 0,
	401, 0, 221, 0, 403, 0, 347, 346, 0, 251,
	0, 0, 0, 331, 0, 259, 174, 0, 412, 188,
	264, 382, 0, 237, 300, 212, 0, 311, 0, 168,
	327, 282, 284, 281, 285, 241, 0, 0, 0, 329,
	349, 386, 190, 365, 0, 0, 0, 0, 339, 0,
	0, 0, 276, 229, 233, 245, 256, 0, 334, 366,
	404, 0, 185, 338, 367, 378, 368, 371, 369, 370,
	341, 177, 373, 396, 196, 348, 351, 411, 0, 184,
	179, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 0, 0, 0, 0, 240, 0, 394, 395, 211,
	413, 0, 0, 180, 0, 0, 297, 305, 296, 0,
	390, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	232, 247, 321, 272, 322, 248, 292, 291, 293, 274,
	0, 0, 175, 0, 363, 0, 0, 372, 193, 0,
	0, 385, 0, 328, 194, 239, 230, 320, 295, 186,
	250, 361, 263, 271, 0, 0, 309, 337, 200, 400,
	360, 226, 0, 302, 0, 0, 1815, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 207,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 176, 187, 199, 218, 216, 231, 260, 283, 288,
	315, 350, 355, 375, 376, 377, 379, 220, 0, 224,
	198, 332, 197, 273, 253, 316, 383, 384, 325, 213,
	0, 170, 181, 267, 0, 330, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 402, 217,
	0, 0, 0, 182, 191, 202, 215, 228, 235, 246,
	249, 254, 255, 257, 261, 275, 277, 278, 279, 280,
	298, 299, 303, 304, 307, 308, 312, 313, 314, 318,
	319, 326, 0, 333, 340, 342, 343, 344, 345, 353,
	354, 356, 357, 364, 392, 393, 407, 408, 380, 0,
	167, 0, 0, 173, 0, 0, 0, 0, 0, 306,
	172, 0, 0, 0, 0, 0, 0, 0, 223, 1389,
	0, 0, 0, 0, 0, 0, 222, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 405, 362, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 999, 0, 1388, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 399, 0, 0, 0, 0, 324, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 290, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 166, 0, 0, 0, 301, 0,
	0, 0, 169, 268, 0, 0, 0, 210, 0, 336,
	0, 398, 0, 238, 0, 335, 270, 391, 0, 0,
	397, 0, 374, 406, 410, 234, 0, 201, 359, 225,
	219, 0, 0, 0, 243, 323, 214, 262, 0, 0,
	0, 206, 0, 0, 0, 358, 388, 171, 286, 389,
	409, 189, 381, 287, 294, 203, 205, 204, 183, 352,
	387, 195, 208, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 244, 0, 0, 0, 310, 192, 0,
	0, 0, 0, 401, 0, 221, 0, 403, 0, 347,
	346, 0, 251, 0, 0, 0, 331, 0, 259, 174,
	0, 412, 188, 264, 382, 0, 237, 300, 212, 0,
	311, 0, 168, 327, 282, 284, 281, 285, 241, 0,
	0, 0, 329, 349, 386, 190, 365, 0, 0, 0,
	0, 339, 0, 0, 0, 276, 229, 233, 245, 256,
	0, 334, 366, 404, 0, 185, 338, 367, 378, 368,
	371, 369, 370, 341, 177, 373, 396, 196, 348, 351,
	411, 0, 184, 179, 0, 0, 0, 0, 0, 0,
	0, 178, 0, 0, 0, 0, 0, 0, 240, 0,
	394, 395, 211, 413, 0, 0, 180, 0, 0, 297,
	305, 296, 0, 390, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 232, 247, 321, 272, 322, 248, 292,
	291, 293, 274, 0, 0, 175, 0, 363, 0, 0,
	372, 193, 0, 0, 385, 0, 328, 194, 239, 230,
	320, 295, 186, 250, 361, 263, 271, 0, 0, 309,
	337, 200, 400, 360, 226, 0, 302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 207, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 317, 176, 187, 199, 218, 216, 231,
	260, 283, 288, 315, 350, 355, 375, 376, 377, 379,
	220, 0, 224, 198, 332, 197, 273, 253, 316, 383,
	384, 325, 213, 0, 170, 181, 267, 0, 330, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 402, 217, 0, 0, 0, 182, 191, 202, 215,
	228, 235, 246, 249, 254, 255, 257, 261, 275, 277,
	278, 279, 280, 298, 299, 303, 304, 307, 308, 312,
	313, 314, 318, 319, 326, 0, 333, 340, 342, 343,
	344, 345, 353, 354, 356, 357, 364, 392, 393, 407,
	408, 380, 0, 167, 0, 0, 173, 0, 0, 0,
	0, 0, 306, 172, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 0, 0, 0, 0, 0, 0, 222,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 405, 362, 289, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 508, 0, 507,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 399, 0, 0, 0,
	0, 324, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 290, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 266, 0, 166, 0, 0,
	0, 301, 0, 0, 0, 169, 268, 0, 0, 0,
	210, 0, 336, 0, 398, 0, 238, 0, 335, 270,
	391, 0, 0, 397, 0, 374, 406, 410, 234, 0,
	201, 359, 225, 219, 0, 0, 0, 243, 323, 214,
	262, 0, 0, 0, 206, 0, 0, 0, 358, 388,
	171, 286, 389, 409, 189, 381, 287, 294, 203, 205,
	204, 183, 352, 387, 195, 208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 252, 244, 0, 0, 0,
	310, 192, 0, 0, 0, 0, 401, 0, 221, 0,
	403, 0, 347, 346, 0, 251, 0, 0, 0, 331,
	0, 259, 174, 0, 412, 188, 264, 382, 0, 237,
	300, 212, 0, 311, 0, 168, 327, 282, 284, 281,
	285, 241, 0, 0, 0, 329, 349, 386, 190, 365,
	0, 0, 0, 0, 339, 0, 0, 0, 276, 229,
	233, 245, 256, 0, 334, 366, 404, 0, 185, 338,
	367, 378, 368, 371, 369, 370, 341, 177, 373, 396,
	196, 348, 351, 411, 0, 184, 179, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 0, 0, 0,
	0, 240, 0, 394, 395, 211, 413, 0, 0, 180,
	0, 0, 297, 305, 296, 0, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 232, 247, 321, 272,
	322, 248, 292, 291, 293, 274, 0, 0, 175, 0,
	363, 0, 0, 372, 193, 0, 0, 385, 0, 328,
	194, 239, 230, 320, 295, 186, 250, 361, 263, 271,
	0, 0, 309, 337, 200, 400, 360, 226, 0, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 207, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 317, 176, 187, 199,
	218, 216, 231, 260, 283, 288, 315, 350, 355, 375,
	376, 377, 379, 220, 0, 224, 198, 332, 197, 273,
	253, 316, 383, 384, 325, 213, 0, 170, 181, 267,
	0, 330, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 402, 217, 0, 0, 0, 182,
	191, 202, 215, 228, 235, 246, 249, 254, 255, 257,
	261, 275, 277, 278, 279, 280, 298, 299, 303, 304,
	307, 308, 312, 313, 314, 318, 319, 326, 0, 333,
	340, 342, 343, 344, 345, 353, 354, 356, 357, 364,
	392, 393, 407, 408, 380, 0, 167, 0, 0, 173,
	0, 0, 0, 0, 0, 306, 172, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 0, 0, 0, 0,
	0, 0, 222, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 405, 362,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2873, 0, 0, 0, 0,
	2875, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 399,
	0, 0, 0, 0, 324, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 290, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 0,
	166, 0, 0, 0, 301, 0, 0, 0, 169, 268,
	0, 0, 0, 210, 0, 336, 0, 398, 0, 238,
	0, 335, 270, 391, 0, 0, 397, 0, 374, 406,
	410, 234, 0, 201, 359, 225, 219, 0, 0, 0,
	243, 323, 214, 262, 0, 0, 0, 206, 0, 0,
	0, 358, 388, 171, 286, 389, 409, 189, 381, 287,
	294, 203, 205, 204, 183, 352, 387, 195, 208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 252, 244,
	0, 0, 0, 310, 192, 0, 0, 0, 0, 401,
	0, 221, 0, 403, 0, 347, 346, 0, 251, 0,
	0, 0, 331, 0, 259, 174, 0, 412, 188, 264,
	382, 0, 237, 300, 212, 0, 311, 0, 168, 327,
	282, 284, 281, 285, 241, 0, 0, 0, 329, 349,
	386, 190, 365, 0, 0, 0, 0, 339, 0, 0,
	0, 276, 229, 233, 245, 256, 0, 334, 366, 404,
	0, 185, 338, 367, 378, 368, 371, 369, 370, 341,
	177, 373, 396, 196, 348, 351, 411, 0, 184, 179,
	0, 0, 0, 0, 0, 0, 0, 178, 0, 0,
	0, 0, 0, 0, 240, 0, 394, 395, 211, 413,
	0, 0, 180, 0, 0, 297, 305, 296, 0, 390,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 232,
	247, 321, 272, 322, 248, 292, 291, 293, 274, 0,
	0, 175, 0, 363, 0, 0, 372, 193, 0, 0,
	385, 0, 328, 194, 239, 230, 320, 295, 186, 250,
	361, 263, 271, 0, 0, 309, 337, 200, 400, 360,
	226, 0, 302, 0, 0, 0, 0, 0, 0, 0,
	0, 380, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 306, 0, 0, 0, 0, 0, 207, 0,
	0, 223, 0, 0, 0, 0, 0, 0, 0, 222,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 405, 362, 289, 0, 317,
	176, 187, 199, 218, 216, 231, 260, 283, 288, 315,
	350, 355, 375, 376, 377, 379, 220, 999, 224, 198,
	332, 197, 273, 253, 316, 383, 384, 325, 213, 0,
	170, 181, 267, 0, 330, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 399, 0, 0, 0,
	0, 324, 242, 0, 0, 0, 0, 0, 0, 2852,
	0, 0, 0, 0, 0, 0, 0, 402, 217, 0,
	0, 0, 182, 191, 202, 215, 228, 235, 246, 249,
	254, 255, 257, 261, 275, 277, 278, 279, 280, 298,
	299, 303, 304, 307, 308, 312, 313, 314, 318, 319,
	326, 0, 333, 340, 342, 343, 344, 345, 353, 354,
	356, 357, 364, 392, 393, 407, 408, 0, 0, 167,
	0, 290, 173, 0, 0, 0, 258, 0, 0, 172,
	0, 0, 0, 0, 0, 266, 0, 166, 0, 0,
	0, 301, 0, 0, 0, 169, 268, 0, 0, 0,
	210, 0, 336, 0, 398, 0, 238, 0, 335, 270,
	391, 0, 0, 397, 0, 374, 406, 410, 234, 0,
	201, 359, 225, 219, 0, 0, 0, 243, 323, 214,
	262, 0, 0, 0, 206, 0, 0, 0, 358, 388,
	171, 286, 389, 409, 189, 381, 287, 294, 203, 205,
	204, 183, 352, 387, 195, 208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 252, 244, 0, 0, 0,
	310, 192, 0, 0, 0, 0, 401, 0, 221, 0,
	403, 0, 347, 346, 0, 251, 0, 0, 0, 331,
	0, 259, 174, 0, 412, 188, 264, 382, 0, 237,
	300, 212, 0, 311, 0, 168, 327, 282, 284, 281,
	285, 241, 0, 0, 0, 329, 349, 386, 190, 365,
	0, 0, 0, 0, 339, 0, 0, 0, 276, 229,
	233, 245, 256, 0, 334, 366, 404, 0, 185, 338,
	367, 378, 368, 371, 369, 370, 341, 177, 373, 396,
	196, 348, 351, 411, 0, 184, 179, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 0, 0, 0,
	0, 240, 0, 394, 395, 211, 413, 0, 0, 180,
	0, 0, 297, 305, 296, 0, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 232, 247, 321, 272,
	322, 248, 292, 291, 293, 274, 0, 0, 175, 0,
	363, 0, 0, 372, 193, 0, 0, 385, 0, 328,
	194, 239, 230, 320, 295, 186, 250, 361, 263, 271,
	0, 0, 309, 337, 200, 400, 360, 226, 0, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 207, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 317, 176, 187, 199,
	218, 216, 231, 260, 283, 288, 315, 350, 355, 375,
	376, 377, 379, 220, 0, 224, 198, 332, 197, 273,
	253, 316, 383, 384, 325, 213, 0, 170, 181, 267,
	0, 330, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 402, 217, 0, 0, 0, 182,
	191, 202, 215, 228, 235, 246, 249, 254, 255, 257,
	261, 275, 277, 278, 279, 280, 298, 299, 303, 304,
	307, 308, 312, 313, 314, 318, 319, 326, 0, 333,
	340, 342, 343, 344, 345, 353, 354, 356, 357, 364,
	392, 393, 407, 408, 380, 0, 167, 0, 0, 173,
	0, 0, 0, 0, 0, 306, 172, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 0, 0, 0, 0,
	0, 0, 222, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 405, 362,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 87, 0, 0, 0, 0,
	999, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 399,
	0, 0, 0, 0, 324, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 290, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 0,
	166, 0, 0, 0, 301, 0, 0, 0, 169, 268,
	0, 0, 0, 210, 0, 336, 0, 398, 0, 238,
	0, 335, 270, 391, 0, 0, 397, 0, 374, 406,
	410, 234, 0, 201, 359, 225, 219, 0, 0, 0,
	243, 323, 214, 262, 0, 0, 0, 206, 0, 0,
	0, 358, 388, 171, 286, 389, 409, 189, 381, 287,
	294, 203, 205, 204, 183, 352, 387, 195, 208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 252, 244,
	0, 0, 0, 310, 192, 0, 0, 0, 0, 401,
	0, 221, 0, 403, 0, 347, 346, 0, 251, 0,
	0, 0, 331, 0, 259, 174, 0, 412, 188, 264,
	382, 0, 237, 300, 212, 0, 311, 0, 168, 327,
	282, 284, 281, 285, 241, 0, 0, 0, 329, 349,
	386, 190, 365, 0, 0, 0, 0, 339, 0, 0,
	0, 276, 229, 233, 245, 256, 0, 334, 366, 404,
	0, 185, 338, 367, 378, 368, 371, 369, 370, 341,
	177, 373, 396, 196, 348, 351, 411, 0, 184, 179,
	0, 0, 0, 0, 0, 0, 0, 178, 0, 0,
	0, 0, 0, 0, 240, 0, 394, 395, 211, 413,
	0, 0, 180, 0, 0, 297, 305, 296, 0, 390,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 232,
	247, 321, 272, 322, 248, 292, 291, 293, 274, 0,
	0, 175, 0, 363, 0, 0, 372, 193, 0, 0,
	385, 0, 328, 194, 239, 230, 320, 295, 186, 250,
	361, 263, 271, 0, 0, 309, 337, 200, 400, 360,
	226, 0, 302, 0, 0, 0, 0, 0, 0, 0,
	0, 380, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 306, 0, 0, 0, 0, 0, 207, 0,
	0, 223, 0, 0, 0, 0, 0, 0, 0, 222,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 405, 362, 289, 0, 317,
	176, 187, 199, 218, 216, 231, 260, 283, 288, 315,
	350, 355, 375, 376, 377, 379, 220, 999, 224, 198,
	332, 197, 273, 253, 316, 383, 384, 325, 213, 0,
	170, 181, 267, 0, 330, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 399, 0, 0, 0,
	0, 324, 242, 0, 0, 0, 0, 0, 0, 2225,
	0, 0, 0, 0, 0, 0, 0, 402, 217, 0,
	0, 0, 182, 191, 202, 215, 228, 235, 246, 249,
	254, 255, 257, 261, 275, 277, 278, 279, 280, 298,
	299, 303, 304, 307, 308, 312, 313, 314, 318, 319,
	326, 0, 333, 340, 342, 343, 344, 345, 353, 354,
	356, 357, 364, 392, 393, 407, 408, 0, 0, 167,
	0, 290, 173, 0, 0, 0, 258, 0, 0, 172,
	0, 0, 0, 0, 0, 266, 0, 166, 0, 0,
	0, 301, 0, 0, 0, 169, 268, 0, 0, 0,
	210, 0, 336, 0, 398, 0, 238, 0, 335, 270,
	391, 0, 0, 397, 0, 374, 406, 410, 234, 0,
	201, 359, 225, 219, 0, 0, 0, 243, 323, 214,
	262, 0, 0, 0, 206, 0, 0, 0, 358, 388,
	171, 286, 389, 409, 189, 381, 287, 294, 203, 205,
	204, 183, 352, 387, 195, 208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 252, 244, 0, 0, 0,
	310, 192, 0, 0, 0, 0, 401, 0, 221, 0,
	403, 0, 347, 346, 0, 251, 0, 0, 0, 331,
	0, 259, 174, 0, 412, 188, 264, 382, 0, 237,
	300, 212, 0, 311, 0, 168, 327, 282, 284, 281,
	285, 241, 0, 0, 0, 329, 349, 386, 190, 365,
	0, 0, 0, 0, 339, 0, 0, 0, 276, 229,
	233, 245, 256, 0, 334, 366, 404, 0, 185, 338,
	367, 378, 368, 371, 369, 370, 341, 177, 373, 396,
	196, 348, 351, 411, 0, 184, 179, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 0, 0, 0,
	0, 240, 0, 394, 395, 211, 413, 0, 0, 180,
	0, 0, 297, 305, 296, 0, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 232, 247, 321, 272,
	322, 248, 292, 291, 293, 274, 0, 0, 175, 0,
	363, 0, 0, 372, 193, 0, 0, 385, 0, 328,
	194, 239, 230, 320, 295, 186, 250, 361, 263, 271,
	0, 0, 309, 337, 200, 400, 360, 226, 0, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 380, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 306,
	0, 0, 0, 0, 0, 207, 0, 0, 223, 0,
	0, 0, 0, 0, 0, 2273, 2274, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 405, 362, 289, 0, 317, 176, 187, 199,
	218, 216, 231, 260, 283, 288, 315, 350, 355, 375,
	376, 377, 379, 220, 999, 224, 198, 332, 197, 273,
	253, 316, 383, 384, 325, 213, 0, 170, 181, 267,
	0, 330, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 399, 0, 0, 0, 0, 324, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 402, 217, 0, 0, 0, 182,
	191, 202, 215, 228, 235, 246, 249, 254, 255, 257,
	261, 275, 277, 278, 279, 280, 298, 299, 303, 304,
	307, 308, 312, 313, 314, 318, 319, 326, 0, 333,
	340, 342, 343, 344, 345, 353, 354, 356, 357, 364,
	392, 393, 407, 408, 0, 0, 167, 0, 290, 173,
	0, 0, 0, 258, 0, 0, 172, 0, 0, 0,
	0, 0, 266, 0, 166, 0, 0, 0, 301, 0,
	0, 0, 169, 268, 0, 0, 0, 210, 0, 336,
	0, 398, 0, 238, 0, 335, 270, 391, 0, 0,
	397, 0, 374, 406, 410, 234, 0, 201, 359, 225,
	219, 0, 0, 0, 243, 323, 214, 262, 0, 0,
	0, 206, 0, 0, 0, 358, 388, 171, 286, 389,
	409, 189, 381, 287, 294, 203, 205, 204, 183, 352,
	387, 195, 208, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 244, 0, 0, 0, 310, 192, 0,
	0, 0, 0, 401, 0, 221, 0, 403, 0, 347,
	346, 0, 251, 0, 0, 0, 331, 0, 259, 174,
	0, 412, 188, 264, 382, 0, 237, 300, 212, 0,
	311, 0, 168, 327, 282, 284, 281, 285, 241, 0,
	0, 0, 329, 349, 386, 190, 365, 0, 0, 0,
	0, 339, 0, 0, 0, 276, 229, 233, 245, 256,
	0, 334, 366, 404, 0, 185, 338, 367, 378, 368,
	371, 369, 370, 341, 177, 373, 396, 196, 348, 351,
	411, 0, 184, 179, 0, 0, 0, 0, 0, 0,
	0, 178, 0, 0, 0, 0, 0, 0, 240, 0,
	394, 395, 211, 413, 0, 0, 180, 0, 0, 297,
	305, 296, 0, 390, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 232, 247, 321, 272, 322, 248, 292,
	291, 293, 274, 0, 0, 175, 0, 363, 0, 0,
	372, 193, 0, 0, 385, 0, 328, 194, 239, 230,
	320, 295, 186, 250, 361, 263, 271, 0, 0, 309,
	337, 200, 400, 360, 226, 0, 302, 0, 0, 0,
	0, 0, 0, 0, 0, 380, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 306, 0, 0, 0,
	0, 0, 207, 0, 0, 223, 0, 0, 0, 0,
	0, 0, 0, 222, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 405,
	362, 289, 0, 317, 176, 187, 199, 218, 216, 231,
	260, 283, 288, 315, 350, 355, 375, 376, 377, 379,
	220, 999, 224, 198, 332, 197, 273, 253, 316, 383,
	384, 325, 213, 0, 170, 181, 267, 0, 330, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	399, 0, 0, 0, 0, 324, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 402, 217, 0, 0, 0, 182, 191, 202, 215,
	228, 235, 246, 249, 254, 255, 257, 261, 275, 277,
	278, 279, 280, 298, 299, 303, 304, 307, 308, 312,
	313, 314, 318, 319, 326, 0, 333, 340, 342, 343,
	344, 345, 353, 354, 356, 357, 364, 392, 393, 407,
	408, 0, 0, 167, 0, 290, 173, 0, 0, 0,
	258, 0, 0, 172, 0, 0, 0, 0, 0, 266,
	0, 166, 0, 0, 0, 301, 0, 0, 0, 169,
	268, 0, 0, 0, 210, 0, 336, 0, 398, 0,
	238, 0, 335, 270, 391, 0, 0, 397, 0, 374,
	406, 410, 234, 0, 201, 359, 225, 219, 0, 0,
	0, 243, 323, 214, 262, 0, 0, 0, 206, 0,
	0, 0, 358, 388, 171, 286, 389, 409, 189, 381,
	287, 294, 203, 205, 204, 183, 352, 387, 195, 208,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 252,
	244, 0, 0, 0, 310, 192, 0, 0, 0, 0,
	401, 0, 221, 0, 403, 0, 347, 346, 0, 251,
	0, 0, 0, 331, 0, 259, 174, 0, 412, 188,
	264, 382, 0, 237, 300, 212, 0, 311, 0, 168,
	327, 282, 284, 281, 285, 241, 0, 0, 0, 329,
	349, 386, 190, 365, 0, 0, 0, 0, 339, 0,
	0, 0, 276, 229, 233, 245, 256, 0, 334, 366,
	404, 0, 185, 338, 367, 378, 368, 371, 369, 370,
	341, 177, 373, 396, 196, 348, 351, 411, 0, 184,
	179, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 0, 0, 0, 0, 240, 0, 394, 395, 211,
	413, 0, 0, 180, 0, 0, 297, 305, 296, 0,
	390, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	232, 247, 321, 272, 322, 248, 292, 291, 293, 274,
	0, 0, 175, 0, 363, 0, 0, 372, 193, 0,
	0, 385, 0, 328, 194, 239, 230, 320, 295, 186,
	250, 361, 263, 271, 0, 0, 309, 337, 200, 400,
	360, 226, 0, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 380, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 306, 0, 0, 0, 0, 0, 207,
	0, 0, 223, 0, 0, 0, 0, 0, 0, 0,
	222, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 405, 362, 289, 0,
	317, 176, 187, 199, 218, 216, 231, 260, 283, 288,
	315, 350, 355, 375, 376, 377, 379, 220, 2875, 224,
	198, 332, 197, 273, 253, 316, 383, 384, 325, 213,
	0, 170, 181, 267, 0, 330, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 399, 0, 0,
	0, 0, 324, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 402, 217,
	0, 0, 0, 182, 191, 202, 215, 228, 235, 246,
	249, 254, 255, 257, 261, 275, 277, 278, 279, 280,
	298, 299, 303, 304, 307, 308, 312, 313, 314, 318,
	319, 326, 0, 333, 340, 342, 343, 344, 345, 353,
	354, 356, 357, 364, 392, 393, 407, 408, 0, 0,
	167, 0, 290, 173, 0, 0, 0, 258, 0, 0,
	172, 0, 0, 0, 0, 0, 266, 0, 166, 0,
	0, 0, 301, 0, 0, 0, 169, 268, 0, 0,
	0, 210, 0, 336, 0, 398, 0, 238, 0, 335,
	270, 391, 0, 0, 397, 0, 374, 406, 410, 234,
	0, 201, 359, 225, 219, 0, 0, 0, 243, 323,
	214, 262, 0, 0, 0, 206, 0, 0, 0, 358,
	388, 171, 286, 389, 409, 189, 381, 287, 294, 203,
	205, 204, 183, 352, 387, 195, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 252, 244, 0, 0,
	0, 310, 192, 0, 0, 0, 0, 401, 0, 221,
	0, 403, 0, 347, 346, 0, 251, 0, 0, 0,
	331, 0, 259, 174, 0, 412, 188, 264, 382, 0,
	237, 300, 212, 0, 311, 0, 168, 327, 282, 284,
	281, 285, 241, 0, 0, 0, 329, 349, 386, 190,
	365, 0, 0, 0, 0, 339, 0, 0, 0, 276,
	229, 233, 245, 256, 0, 334, 366, 404, 0, 185,
	338, 367, 378, 368, 371, 369, 370, 341, 177, 373,
	396, 196, 348, 351, 411, 0, 184, 179, 0, 0,
	0, 0, 0, 0, 0, 178, 0, 0, 0, 0,
	0, 0, 240, 0, 394, 395, 211, 413, 0, 0,
	180, 0, 0, 297, 305, 296, 0, 390, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 232, 247, 321,
	272, 322, 248, 292, 291, 293, 274, 0, 0, 175,
	0, 363, 0, 0, 372, 193, 0, 0, 385, 0,
	328, 194, 239, 230, 320, 295, 186, 250, 361, 263,
	271, 0, 0, 309, 337, 200, 400, 360, 226, 0,
	302, 0, 0, 0, 0, 0, 0, 0, 0, 380,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	306, 0, 0, 0, 0, 0, 207, 0, 0, 223,
	0, 0, 0, 0, 0, 0, 0, 222, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 405, 362, 289, 0, 317, 176, 187,
	199, 218, 216, 231, 260, 283, 288, 315, 350, 355,
	375, 376, 377, 379, 220, 1788, 224, 198, 332, 197,
	273, 253, 316, 383, 384, 325, 213, 0, 170, 181,
	267, 0, 330, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 399, 0, 0, 0, 0, 324,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 402, 217, 0, 0, 0,
	182, 191, 202, 215, 228, 235, 246, 249, 254, 255,
	257, 261, 275, 277, 278, 279, 280, 298, 299, 303,
	304, 307, 308, 312, 313, 314, 318, 319, 326, 0,
	333, 340, 342, 343, 344, 345, 353, 354, 356, 357,
	364, 392, 393, 407, 408, 0, 0, 167, 0, 290,
	173, 0, 0, 0, 258, 0, 0, 172, 0, 0,
	0, 0, 0, 266, 0, 166, 0, 0, 0, 301,
	0, 0, 0, 169, 268, 0, 0, 0, 210, 0,
	336, 0, 398, 0, 238, 0, 335, 270, 391, 0,
	0, 397, 0, 374, 406, 410, 234, 0, 201, 359,
	225, 219, 0, 0, 0, 243, 323, 214, 262, 0,
	0, 0, 206, 0, 0, 0, 358, 388, 171, 286,
	389, 409, 189, 381, 287, 294, 203, 205, 204, 183,
	352, 387, 195, 208, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 244, 0, 0, 0, 310, 192,
	0, 0, 0, 0, 401, 0, 221, 0, 403, 0,
	347, 346, 0, 251, 0, 0, 0, 331, 0, 259,
	174, 0, 412, 188, 264, 382, 0, 237, 300, 212,
	0, 311, 0, 168, 327, 282, 284, 281, 285, 241,
	0, 0, 0, 329, 349, 386, 190, 365, 0, 0,
	0, 0, 339, 0, 0, 0, 276, 229, 233, 245,
	256, 0, 334, 366, 404, 0, 185, 338, 367, 378,
	368, 371, 369, 370, 341, 177, 373, 396, 196, 348,
	351, 411, 0, 184, 179, 0, 0, 0, 0, 0,
	0, 0, 178, 0, 0, 0, 0, 0, 0, 240,
	0, 394, 395, 211, 413, 0, 0, 180, 0, 0,
	297, 305, 296, 0, 390, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 232, 247, 321, 272, 322, 248,
	292, 291, 293, 274, 0, 0, 175, 0, 363, 0,
	0, 372, 193, 0, 0, 385, 0, 328, 194, 239,
	230, 320, 295, 186, 250, 361, 263, 271, 0, 0,
	309, 337, 200, 400, 360, 226, 0, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 380, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 306, 0, 0,
	0, 0, 0, 207, 0, 0, 223, 0, 0, 0,
	0, 0, 0, 0, 222, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	405, 362, 289, 0, 317, 176, 187, 199, 218, 216,
	231, 260, 283, 288, 315, 350, 355, 375, 376, 377,
	379, 220, 140, 224, 198, 332, 197, 273, 253, 316,
	383, 384, 325, 213, 0, 170, 181, 267, 0, 330,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 399, 0, 0, 0, 0, 324, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 402, 217, 0, 0, 0, 182, 191, 202,
	215, 228, 235, 246, 249, 254, 255, 257, 261, 275,
	277, 278, 279, 280, 298, 299, 303, 304, 307, 308,
	312, 313, 314, 318, 319, 326, 0, 333, 340, 342,
	343, 344, 345, 353, 354, 356, 357, 364, 392, 393,
	407, 408, 0, 0, 167, 0, 290, 173, 0, 0,
	0, 258, 0, 0, 172, 0, 0, 0, 0, 0,
	266, 0, 166, 0, 0, 0, 301, 0, 0, 0,
	169, 268, 0, 0, 0, 210, 0, 336, 0, 398,
	0, 238, 0, 335, 270, 391, 0, 0, 397, 0,
	374, 406, 410, 234, 0, 201, 359, 225, 219, 0,
	0, 0, 243, 323, 214, 262, 0, 0, 0, 206,
	0, 0, 0, 358, 388, 171, 286, 389, 409, 189,
	381, 287, 294, 203, 205, 204, 183, 352, 387, 195,
	208, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	252, 244, 0, 0, 0, 310, 192, 0, 0, 0,
	0, 401, 0, 221, 0, 403, 0, 347, 346, 0,
	251, 0, 0, 0, 331, 0, 259, 174, 0, 412,
	188, 264, 382, 0, 237, 300, 212, 0, 311, 0,
	168, 327, 282, 284, 281, 285, 241, 0, 0, 0,
	329, 349, 386, 190, 365, 0, 0, 0, 0, 339,
	0, 0, 0, 276, 229, 233, 245, 256, 0, 334,
	366, 404, 0, 185, 338, 367, 378, 368, 371, 369,
	370, 341, 177, 373, 396, 196, 348, 351, 411, 0,
	184, 179, 0, 0, 0, 0, 0, 0, 0, 178,
	0, 0, 0, 0, 0, 0, 240, 0, 394, 395,
	211, 413, 0, 0, 180, 0, 0, 297, 305, 296,
	0, 390, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 232, 247, 321, 272, 322, 248, 292, 291, 293,
	274, 0, 0, 175, 0, 363, 0, 0, 372, 193,
	0, 0, 385, 0, 328, 194, 239, 230, 320, 295,
	186, 250, 361, 263, 271, 0, 0, 309, 337, 200,
	400, 360, 226, 0, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 380, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 306, 0, 0, 0, 0, 0,
	207, 0, 0, 223, 0, 0, 0, 0, 0, 0,
	0, 222, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 405, 362, 289,
	0, 317, 176, 187, 199, 218, 216, 231, 260, 283,
	288, 315, 350, 355, 375, 376, 377, 379, 220, 468,
	224, 198, 332, 197, 273, 253, 316, 383, 384, 325,
	213, 0, 170, 181, 267, 0, 330, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 399, 0,
	0, 0, 0, 324, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 402,
	217, 0, 0, 0, 182, 191, 202, 215, 228, 235,
	246, 249, 254, 255, 257, 261, 275, 277, 278, 279,
	280, 298, 299, 303, 304, 307, 308, 312, 313, 314,
	318, 319, 326, 0, 333, 340, 342, 343, 344, 345,
	353, 354, 356, 357, 364, 392, 393, 407, 408, 0,
	0, 167, 0, 290, 173, 0, 0, 0, 258, 0,
	0, 172, 0, 0, 0, 0, 0, 266, 0, 166,
	0, 0, 0, 301, 0, 0, 0, 169, 268, 0,
	0, 0, 210, 0, 336, 0, 398, 0, 238, 0,
	335, 270, 391, 0, 0, 397, 0, 374, 406, 410,
	234, 0, 201, 359, 225, 219, 0, 0, 0, 243,
	323, 214, 262, 0, 0, 0, 206, 0, 0, 0,
	358, 388, 171, 286, 389, 409, 189, 381, 287, 294,
	203, 205, 204, 183, 352, 387, 195, 208, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 252, 244, 0,
	0, 0, 310, 192, 0, 0, 0, 0, 401, 0,
	221, 0, 403, 0, 347, 346, 0, 251, 0, 0,
	0, 331, 0, 259, 174, 0, 412, 188, 264, 382,
	0, 237, 300, 212, 0, 311, 0, 168, 327, 282,
	284, 281, 285, 241, 0, 0, 0, 329, 349, 386,
	190, 365, 0, 0, 0, 0, 339, 0, 0, 0,
	276, 229, 233, 245, 256, 0, 334, 366, 404, 0,
	185, 338, 367, 378, 368, 371, 369, 370, 341, 177,
	373, 396, 196, 348, 351, 411, 0, 184, 179, 0,
	0, 0, 0, 0, 0, 0, 178, 0, 0, 0,
	0, 0, 0, 240, 0, 394, 395, 211, 413, 0,
	0, 180, 0, 0, 297, 305, 296, 0, 390, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 232, 247,
	321, 272, 322, 248, 292, 291, 293, 274, 0, 0,
	175, 0, 363, 0, 0, 372, 193, 0, 0, 385,
	0, 328, 194, 239, 230, 320, 295, 186, 250, 361,
	263, 271, 0, 0, 309, 337, 200, 400, 360, 226,
	0, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	380, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 306, 0, 0, 0, 0, 0, 207, 0, 0,
	223, 0, 0, 0, 0, 0, 0, 0, 222, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 405, 362, 289, 0, 317, 176,
	187, 199, 218, 216, 231, 260, 283, 288, 315, 350,
	355, 375, 376, 377, 379, 220, 1049, 224, 198, 332,
	197, 273, 253, 316, 383, 384, 325, 213, 0, 170,
	181, 267, 0, 330, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 399, 0, 0, 0, 0,
	324, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 402, 217, 0, 0,
	0, 182, 191, 202, 215, 228, 235, 246, 249, 254,
	255, 257, 261, 275, 277, 278, 279, 280, 298, 299,
	303, 304, 307, 308, 312, 313, 314, 318, 319, 326,
	0, 333, 340, 342, 343, 344, 345, 353, 354, 356,
	357, 364, 392, 393, 407, 408, 0, 0, 167, 0,
	290, 173, 0, 0, 0, 258, 0, 0, 172, 0,
	0, 0, 0, 0, 266, 0, 166, 0, 0, 0,
	301, 0, 0, 0, 169, 268, 0, 0, 0, 210,
	0, 336, 0, 398, 0, 238, 0, 335, 270, 391,
	0, 0, 397, 0, 374, 406, 410, 234, 0, 201,
	359, 225, 219, 0, 0, 0, 243, 323, 214, 262,
	0, 0, 0, 206, 0, 0, 0, 358, 388, 171,
	286, 389, 409, 189, 381, 287, 294, 203, 205, 204,
	183, 352, 387, 195, 208, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 252, 244, 0, 0, 0, 310,
	192, 0, 0, 0, 0, 401, 0, 221, 0, 403,
	0, 347, 346, 0, 251, 0, 0, 0, 331, 0,
	259, 174, 0, 412, 188, 264, 382, 0, 237, 300,
	212, 0, 311, 0, 168, 327, 282, 284, 281, 285,
	241, 0, 0, 0, 329, 349, 386, 190, 365, 0,
	0, 0, 0, 339, 0, 0, 0, 276, 229, 233,
	245, 256, 0, 334, 366, 404, 0, 185, 338, 367,
	378, 368, 371, 369, 370, 341, 177, 373, 396, 196,
	348, 351, 411, 0, 184, 179, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 0, 0, 0, 0,
	240, 0, 394, 395, 211, 413, 0, 0, 180, 0,
	0, 297, 305, 296, 0, 390, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 232, 247, 321, 272, 322,
	248, 292, 291, 293, 274, 0, 0, 175, 0, 363,
	0, 0, 372, 193, 0, 0, 385, 0, 328, 194,
	239, 230, 320, 295, 186, 250, 361, 263, 271, 0,
	0, 309, 337, 200, 400, 360, 226, 0, 302, 0,
	0, 0, 0, 0, 0, 0, 0, 380, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 306, 0,
	0, 0, 0, 0, 207, 0, 0, 223, 0, 0,
	0, 0, 0, 0, 0, 222, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 405, 362, 289, 0, 317, 176, 187, 199, 218,
	216, 231, 260, 283, 288, 315, 350, 355, 375, 376,
	377, 379, 220, 1039, 224, 198, 332, 197, 273, 253,
	316, 383, 384, 325, 213, 0, 170, 181, 267, 0,
	330, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 399, 0, 0, 0, 0, 324, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 402, 217, 0, 0, 0, 182, 191,
	202, 215, 228, 235, 246, 249, 254, 255, 257, 261,
	275, 277, 278, 279, 280, 298, 299, 303, 304, 307,
	308, 312, 313, 314, 318, 319, 326, 0, 333, 340,
	342, 343, 344, 345, 353, 354, 356, 357, 364, 392,
	393, 407, 408, 0, 0, 167, 0, 290, 173, 0,
	0, 0, 258, 0, 0, 172, 0, 0, 0, 0,
	0, 266, 0, 166, 0, 0, 0, 301, 0, 0,
	0, 169, 268, 0, 0, 0, 210, 0, 336, 0,
	398, 0, 238, 0, 335, 270, 391, 0, 0, 397,
	0, 374, 406, 410, 234, 0, 201, 359, 225, 219,
	0, 0, 0, 243, 323, 214, 262, 0, 0, 0,
	206, 0, 0, 0, 358, 388, 171, 286, 389, 409,
	189, 381, 287, 294, 203, 205, 204, 183, 352, 387,
	195, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 252, 244, 0, 0, 0, 310, 192, 0, 0,
	0, 0, 401, 0, 221, 0, 403, 0, 347, 346,
	0, 251, 0, 0, 0, 331, 0, 259, 174, 0,
	412, 188, 264, 382, 0, 237, 300, 212, 0, 311,
	0, 168, 327, 282, 284, 281, 285, 241, 0, 0,
	0, 329, 349, 386, 190, 365, 0, 0, 0, 0,
	339, 0, 0, 0, 276, 229, 233, 245, 256, 0,
	334, 366, 404, 0, 185, 338, 367, 378, 368, 371,
	369, 370, 341, 177, 373, 396, 196, 348, 351, 411,
	0, 184, 179, 0, 0, 0, 0, 0, 0, 0,
	178, 0, 0, 0, 0, 0, 0, 240, 0, 394,
	395, 211, 413, 0, 0, 180, 0, 0, 297, 305,
	296, 0, 390, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 232, 247, 321, 272, 322, 248, 292, 291,
	293, 274, 0, 0, 175, 0, 363, 0, 0, 372,
	193, 0, 0, 385, 0, 328, 194, 239, 230, 320,
	295, 186, 250, 361, 263, 271, 0, 0, 309, 337,
	200, 400, 360, 226, 0, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 380, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 306, 0, 0, 0, 0,
	0, 207, 0, 0, 223, 0, 0, 0, 0, 0,
	0, 0, 222, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 405, 362,
	289, 0, 317, 176, 187, 199, 218, 216, 231, 260,
	283, 288, 315, 350, 355, 375, 376, 377, 379, 220,
	417, 224, 198, 332, 197, 273, 253, 316, 383, 384,
	325, 213, 0, 170, 181, 267, 0, 330, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 399,
	0, 0, 0, 0, 324, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	402, 217, 0, 0, 0, 182, 191, 202, 215, 228,
	235, 246, 249, 254, 255, 257, 261, 275, 277, 278,
	279, 280, 298, 299, 303, 304, 307, 308, 312, 313,
	314, 318, 319, 326, 0, 333, 340, 342, 343, 344,
	345, 353, 354, 356, 357, 364, 392, 393, 407, 408,
	0, 0, 167, 0, 290, 173, 0, 0, 0, 258,
	0, 0, 172, 0, 0, 0, 0, 0, 266, 0,
	166, 0, 0, 0, 301, 0, 0, 0, 169, 268,
	0, 0, 0, 210, 0, 336, 0, 398, 0, 238,
	0, 335, 270, 391, 0, 0, 397, 0, 374, 406,
	410, 234, 0, 201, 359, 225, 219, 0, 0, 0,
	243, 323, 214, 262, 0, 0, 0, 206, 0, 0,
	0, 358, 388, 171, 286, 389, 409, 189, 381, 287,
	294, 203, 205, 204, 183, 352, 387, 195, 208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 252, 244,
	0, 0, 0, 310, 192, 0, 0, 0, 0, 401,
	0, 221, 0, 403, 0, 347, 346, 0, 251, 0,
	0, 0, 331, 0, 259, 174, 0, 412, 188, 264,
	382, 0, 237, 300, 212, 0, 311, 0, 168, 327,
	282, 284, 281, 285, 241, 0, 0, 0, 329, 349,
	386, 190, 365, 0, 0, 0, 0, 339, 0, 0,
	0, 276, 229, 233, 245, 256, 0, 334, 366, 404,
	0, 185, 338, 367, 378, 368, 371, 369, 370, 341,
	177, 373, 396, 196, 348, 351, 411, 0, 184, 179,
	0, 0, 0, 0, 0, 0, 0, 178, 0, 0,
	0, 0, 0, 0, 240, 0, 394, 395, 211, 413,
	0, 0, 180, 0, 0, 297, 305, 296, 0, 390,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 232,
	247, 321, 272, 322, 248, 292, 291, 293, 274, 0,
	0, 175, 0, 363, 0, 0, 372, 193, 0, 0,
	385, 0, 328, 194, 239, 230, 320, 295, 186, 250,
	361, 263, 271, 0, 0, 309, 337, 200, 400, 360,
	226, 0, 302, 0, 0, 0, 0, 0, 0, 0,
	0, 380, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 306, 0, 0, 0, 0, 0, 207, 0,
	0, 223, 0, 0, 0, 0, 0, 0, 0, 222,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 405, 362, 289, 0, 317,
	176, 187, 199, 218, 216, 231, 260, 283, 288, 315,
	350, 355, 375, 376, 377, 379, 220, 415, 224, 198,
	332, 197, 273, 253, 316, 383, 384, 325, 213, 0,
	170, 181, 267, 0, 330, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 399, 0, 0, 0,
	0, 324, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 402, 217, 0,
	0, 0, 182, 191, 202, 215, 228, 235, 246, 249,
	254, 255, 257, 261, 275, 277, 278, 279, 280, 298,
	299, 303, 304, 307, 308, 312, 313, 314, 318, 319,
	326, 0, 333, 340, 342, 343, 344, 345, 353, 354,
	356, 357, 364, 392, 393, 407, 408, 0, 0, 167,
	0, 290, 173, 0, 0, 0, 258, 0, 0, 172,
	0, 0, 0, 0, 0, 266, 0, 166, 0, 0,
	0, 301, 0, 0, 0, 169, 268, 0, 0, 0,
	210, 0, 336, 0, 398, 0, 238, 0, 335, 270,
	391, 0, 0, 397, 0, 374, 406, 410, 234, 0,
	201, 359, 225, 219, 0, 0, 0, 243, 323, 214,
	262, 0, 0, 0, 206, 0, 0, 0, 358, 388,
	171, 286, 389, 409, 189, 381, 287, 294, 203, 205,
	204, 183, 352, 387, 195, 208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 252, 244, 0, 0, 0,
	310, 192, 0, 0, 0, 0, 401, 0, 221, 0,
	403, 0, 347, 346, 0, 251, 0, 0, 0, 331,
	0, 259, 174, 0, 412, 188, 264, 382, 0, 237,
	300, 212, 0, 311, 0, 168, 327, 282, 284, 281,
	285, 241, 0, 0, 0, 329, 349, 386, 190, 365,
	0, 0, 0, 0, 339, 0, 0, 0, 276, 229,
	233, 245, 256, 0, 334, 366, 404, 0, 185, 338,
	367, 378, 368, 371, 369, 370, 341, 177, 373, 396,
	196, 348, 351, 411, 0, 184, 179, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 0, 0, 0,
	0, 240, 0, 394, 395, 211, 413, 0, 0, 180,
	0, 0, 297, 305, 296, 0, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 232, 247, 321, 272,
	322, 248, 292, 291, 293, 274, 0, 0, 175, 0,
	363, 0, 0, 372, 193, 0, 0, 385, 0, 328,
	194, 239, 230, 320, 295, 186, 250, 361, 263, 271,
	0, 0, 309, 337, 200, 400, 360, 226, 0, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 207, 0, 0, 40, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 64, 0, 0, 0, 0, 0, 83, 0,
	0, 43, 0, 0, 0, 0, 317, 176, 187, 199,
	218, 216, 231, 260, 283, 288, 315, 350, 355, 375,
	376, 377, 379, 220, 0, 224, 198, 332, 197, 273,
	253, 316, 383, 384, 325, 213, 0, 170, 181, 267,
	87, 330, 236, 0, 0, 3470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3463, 0, 0,
	0, 0, 3770, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 402, 217, 0, 0, 0, 182,
	191, 202, 215, 228, 235, 246, 249, 254, 255, 257,
	261, 275, 277, 278, 279, 280, 298, 299, 303, 304,
	307, 308, 312, 313, 314, 318, 319, 326, 0, 333,
	340, 342, 343, 344, 345, 353, 354, 356, 357, 364,
	392, 393, 407, 408, 0, 0, 167, 0, 40, 173,
	0, 0, 0, 0, 0, 0, 172, 0, 0, 0,
	0, 0, 64, 45, 80, 49, 48, 51, 83, 0,
	0, 43, 0, 0, 0, 0, 0, 0, 3464, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 55, 82, 81, 0, 0,
	0, 0, 50, 0, 0, 0, 0, 0, 0, 0,
	87, 0, 0, 0, 0, 3470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3463, 0, 0,
	0, 0, 3755, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 62, 63, 0, 3466, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3475, 3467, 3468,
	3469, 3473, 3474, 3471, 40, 3472, 0, 3476, 0, 0,
	0, 0, 71, 0, 72, 0, 0, 0, 64, 0,
	0, 0, 0, 0, 83, 0, 0, 43, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 77,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 53,
	0, 0, 0, 45, 80, 49, 48, 51, 0, 0,
	0, 0, 0, 0, 0, 0, 87, 0, 3464, 0,
	0, 3470, 0, 0, 0, 3477, 3465, 0, 59, 60,
	66, 0, 67, 0, 0, 55, 82, 81, 0, 0,
	0, 0, 50, 3463, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 62, 63, 0, 3466, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3475, 3467, 3468,
	3469, 3473, 3474, 3471, 0, 3472, 0, 3476, 0, 0,
	40, 0, 71, 0, 72, 0, 0, 0, 0, 45,
	80, 49, 48, 51, 64, 0, 0, 0, 0, 0,
	83, 0, 0, 43, 3464, 0, 0, 0, 0, 77,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 53,
	0, 55, 82, 81, 0, 0, 0, 0, 50, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 87, 0, 0, 3477, 3465, 3470, 59, 60,
	66, 0, 67, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 52, 54, 0, 0, 0, 0, 79, 3463,
	0, 0, 0, 0, 3751, 0, 0, 0, 0, 0,
	62, 63, 0, 3466, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3475, 3467, 3468, 3469, 3473, 3474, 3471,
	3752, 3472, 0, 3476, 0, 0, 40, 0, 71, 0,
	72, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	64, 0, 0, 0, 0, 0, 83, 0, 0, 43,
	0, 0, 0, 0, 0, 77, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 53, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 45, 80, 49, 48, 51,
	0, 0, 0, 0, 0, 0, 0, 0, 87, 0,
	3464, 3477, 3465, 3470, 59, 60, 66, 0, 67, 0,
	0, 0, 0, 0, 0, 0, 0, 55, 82, 81,
	0, 0, 0, 0, 50, 3463, 0, 0, 0, 0,
	3750, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 52, 54, 0, 0, 0, 0, 79, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 62, 63, 0, 3466,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3475,
	3467, 3468, 3469, 3473, 3474, 3471, 40, 3472, 0, 3476,
	0, 0, 0, 0, 71, 0, 72, 0, 0, 0,
	64, 45, 80, 49, 48, 51, 83, 0, 0, 43,
	0, 0, 0, 0, 0, 0, 3464, 0, 0, 0,
	0, 77, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 53, 0, 55, 82, 81, 0, 0, 0, 0,
	50, 0, 0, 0, 0, 0, 0, 0, 87, 3747,
	0, 0, 0, 3470, 0, 0, 0, 3477, 3465, 0,
	59, 60, 66, 0, 67, 0, 0, 0, 52, 54,
	0, 0, 0, 0, 79, 3463, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 62, 63, 0, 3466, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3475, 3467, 3468, 3469, 3473,
	3474, 3471, 40, 3472, 0, 3476, 0, 0, 0, 0,
	71, 0, 72, 0, 0, 0, 64, 0, 0, 0,
	0, 0, 83, 0, 0, 43, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 77, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 53, 0, 0,
	0, 45, 80, 49, 48, 51, 0, 0, 0, 0,
	0, 0, 0, 0, 87, 0, 3464, 0, 0, 3470,
	0, 0, 0, 3477, 3465, 0, 59, 60, 66, 0,
	67, 0, 0, 55, 82, 81, 0, 0, 0, 0,
	50, 3463, 0, 0, 0, 0, 3739, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 52, 54, 0, 0, 0, 0,
	79, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 62, 63, 0, 3466, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3475, 3467, 3468, 3469, 3473,
	3474, 3471, 0, 3472, 0, 3476, 0, 0, 40, 0,
	71, 0, 72, 0, 0, 0, 0, 45, 80, 49,
	48, 51, 64, 0, 0, 0, 0, 0, 83, 0,
	0, 43, 3464, 0, 0, 0, 0, 77, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 53, 0, 55,
	82, 81, 0, 0, 0, 0, 50, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	87, 0, 0, 3477, 3465, 3470, 59, 60, 66, 0,
	67, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	52, 54, 0, 0, 0, 0, 79, 3463, 0, 0,
	0, 0, 3669, 0, 0, 0, 0, 0, 62, 63,
	0, 3466, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3475, 3467, 3468, 3469, 3473, 3474, 3471, 0, 3472,
	0, 3476, 0, 0, 40, 0, 71, 0, 72, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 64, 0,
	0, 0, 0, 0, 83, 0, 0, 43, 0, 0,
	0, 0, 0, 77, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 53, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 45, 80, 49, 48, 51, 0, 0,
	0, 0, 0, 0, 0, 0, 87, 0, 3464, 3477,
	3465, 3470, 59, 60, 66, 0, 67, 0, 0, 0,
	0, 0, 0, 0, 0, 55, 82, 81, 0, 0,
	0, 0, 50, 3463, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	52, 54, 0, 0, 0, 0, 79, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 62, 63, 0, 3466, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3475, 3467, 3468,
	3469, 3473, 3474, 3471, 40, 3472, 0, 3476, 0, 0,
	0, 0, 71, 0, 72, 0, 0, 0, 64, 45,
	80, 49, 48, 51, 83, 0, 0, 43, 0, 0,
	0, 0, 0, 0, 3464, 0, 0, 0, 0, 77,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 53,
	0, 55, 82, 81, 0, 0, 0, 0, 50, 0,
	0, 0, 0, 0, 0, 0, 87, 0, 0, 0,
	0, 3470, 0, 0, 0, 3477, 3465, 0, 59, 60,
	66, 0, 67, 0, 0, 0, 52, 54, 0, 0,
	0, 0, 79, 3463, 0, 0, 0, 0, 3661, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	62, 63, 0, 3466, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3475, 3467, 3468, 3469, 3473, 3474, 3471,
	3666, 3472, 0, 3476, 0, 0, 40, 0, 71, 0,
	72, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	64, 0, 0, 0, 0, 0, 83, 0, 0, 43,
	0, 0, 0, 0, 0, 77, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 53, 0, 0, 0, 45,
	80, 49, 48, 51, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3464, 0, 0, 0, 87, 0,
	0, 3477, 3465, 3470, 59, 60, 66, 0, 67, 0,
	0, 55, 82, 81, 0, 0, 0, 0, 50, 0,
	0, 0, 0, 0, 0, 3463, 0, 0, 0, 0,
	3659, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 52, 54, 0, 0, 0, 0, 79, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	62, 63, 0, 3466, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3475, 3467, 3468, 3469, 3473, 3474, 3471,
	0, 3472, 0, 3476, 0, 0, 40, 0, 71, 0,
	72, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	64, 45, 80, 49, 48, 51, 83, 0, 0, 43,
	0, 0, 0, 0, 0, 77, 3464, 0, 0, 0,
	0, 0, 0, 0, 0, 53, 0, 0, 0, 0,
	0, 0, 0, 55, 82, 81, 0, 0, 0, 0,
	50, 0, 0, 0, 0, 0, 0, 0, 87, 0,
	0, 3477, 3465, 3470, 59, 60, 66, 0, 67, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 52, 54,
	0, 0, 0, 0, 79, 3463, 0, 0, 0, 0,
	3560, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 62, 63, 0, 3466, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3475, 3467, 3468, 3469, 3473,
	3474, 3471, 40, 3472, 0, 3476, 0, 0, 0, 0,
	71, 0, 72, 0, 0, 0, 64, 0, 0, 0,
	0, 0, 83, 0, 0, 43, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 77, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 53, 0, 0,
	0, 45, 80, 49, 48, 51, 0, 0, 0, 0,
	0, 0, 0, 0, 87, 0, 3464, 0, 0, 3470,
	0, 0, 0, 3477, 3465, 0, 59, 60, 66, 0,
	67, 0, 0, 55, 82, 81, 0, 0, 0, 0,
	50, 3463, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 52, 54,
	0, 0, 0, 0, 79, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 62, 63, 0, 3466, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3475, 3467, 3468, 3469, 3473,
	3474, 3471, 0, 3472, 0, 3476, 0, 0, 0, 0,
	71, 0, 72, 0, 0, 0, 0, 45, 80, 49,
	48, 51, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3464, 0, 0, 0, 0, 77, 0, 40,
	41, 0, 0, 0, 0, 0, 0, 53, 0, 55,
	82, 81, 0, 64, 0, 0, 50, 0, 0, 83,
	0, 0, 43, 68, 69, 0, 0, 0, 0, 0,
	65, 0, 0, 3477, 3465, 0, 59, 60, 66, 0,
	67, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	52, 54, 0, 0, 0, 0, 79, 56, 0, 0,
	0, 87, 0, 0, 0, 0, 0, 0, 62, 63,
	0, 3466, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3475, 3467, 3468, 3469, 3473, 3474, 3471, 0, 3472,
	0, 3476, 0, 0, 0, 0, 71, 0, 72, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 77, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 53, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3477,
	3465, 0, 59, 60, 66, 0, 67, 0, 0, 0,
	0, 0, 0, 0, 45, 80, 49, 48, 51, 0,
	0, 73, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 55, 82, 81, 0,
	52, 54, 0, 50, 0, 0, 79, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 70, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 62, 63, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 71, 0, 72, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	77, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	53, 0, 0, 0, 0, 0, 52, 54, 0, 0,
	0, 0, 79, 0, 0, 0, 0, 0, 0, 0,
	75, 0, 0, 0, 0, 76, 57, 74, 0, 59,
	60, 66, 0, 67, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 52, 54, 0, 0, 0, 0, 79,
}

var yyPact = [...]int{
	56983, -1000, -435, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2341,
	-1000, -1000, 325, -1000, 1141, 770, -1000, -1000, 419, 89,
	38034, 823, 54574, 54117, -277, 1750, 52289, 68, -1000, 68,
	254, 35502, 548, 676, 52746, 2218, 1782, 79, -42, -43,
	167, 39947, 39307, 144, 101, 119, 118, 48, -1000, 42479,
	141, -1000, -1000, -1000, -1000, 2428, 241, -1000, -1000, 2293,
	2331, 2103, -1000, 8950, -1000, -1000, -1000, -1000, -1000, 23294,
	-1000, 2424, 38667, 31067, -1000, 816, 807, -136, 781, 781,
	608, 781, 781, 822, -1000, 451, 1172, -1000, -1000, -1000,
	-1000, 1169, 38667, 47824, 782, 50918, 782, 782, 782, 782,
	782, 782, 782, 53660, 38667, -1000, 908, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 38667, 2403, 2400, 2034, 2033, 53203,
	1781, 2248, 1175, 177, 1175, -1000, -1000, 1166, -1000, 611,
	528, 492, 626, 473, 133, 1184, 2310, -1000, 1990, 2293,
	2293, -1000, -1000, -1000, -1000, -1000, -1000, 963, -1000, -1000,
	1208, 1208, 433, 804, 245, 650, 241, 2281, 1151, 2247,
	2244, 1491, 2243, 998, 2242, 2029, -1000, 907, -1000, -1000,
	-7, -1000, 1780, 38667, -1000, -1000, 1450, 1447, 478, 1933,
	914, 2070, -1000, -1000, 464, 748, 2022, 540, 2022, 2022,
	2022, 209, 2022, 2022, -45, 2022, 2022, 2022, 168, 2022,
	207, 2022, 2022, 2022, 2022, 2022, 1848, -1000, -1000, -1000,
	495, 1932, 1986, 2069, 112, -1000, -92, -1000, 2297, 578,
	-1000, -1000, -1000, 2054, 44378, 1979, -1000, 1990, -1000, -1000,
	-1000, 1679, 821, -1000, 2054, 2294, 1856, -1000, 42479, 2245,
	1280, 15470, 2157, -1000, -1000, 1198, 2397, -1000, 30434, 906,
	-1000, 15470, 1716, 1990, 1990, -1000, 841, 966, -1000, 837,
	887, -1000, -1000, 14818, 14818, 14818, 14818, 14818, 14818, 14818,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1990, 901, 895, 1990,
	1990, 1990, 1990, 1990, -1000, 13514, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1990, 1990,
	1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990,
	1990, 1990, 15470, 1990, 1990, 1990, 1990, 1990, 1990, 1990,
	1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990,
	1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990,
	1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990,
	1990, 1990, 1990, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 787, 787, 37401, 1988, -62, 22642,
	-1000, -1000, -1000, -1000, 21338, 47191, 1150, -1000, -1000, -1000,
	-1000, 2240, -1000, -1000, 892, 887, 841, 840, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2341, -1000, -1000, 1895,
	749, -1000, 5371, 5371, 5371, 5371, 5371, 329, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2027, 50918, 38667,
	463, 1779, 1154, 1778, 52746, 52746, -1000, 360, 47824, 47824,
	781, 384, 47824, 369, 1987, 803, 1985, 802, 1818, 38667,
	2265, 2066, 38667, 1774, 1761, 52746, 52746, 47824, 47824, -1000,
	-1000, -1000, 29162, 1984, -1000, 1623, 1620, 51832, 51832, -1000,
	-1000, -1000, 1175, -1000, 5212, 15470, 781, 781, 38667, 38667,
	38667, 38667, -1000, 38667, -1000, -1000, 1175, -1000, 1175, 1175,
	1175, 1112, 2396, 1112, -1000, 1112, -1000, -1000, 15470, -1000,
	14818, 46558, 982, -1000, -1000, 52289, 691, 691, 691, -1000,
	1760, 385, -1000, -1000, -1000, -1000, -1000, 245, -1000, -1000,
	2222, 1759, 998, 998, -1000, 1607, 998, 1956, -1000, 1148,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 998, 2281, 14166, 50918, -414, -1000, -1000, 1983,
	-1000, 334, -1000, -1000, 726, 2065, 726, 595, 47824, 47824,
	47824, -1000, 2022, 50918, -1000, 2022, 2022, 2022, -68, 2022,
	2022, -1000, -1000, 2022, -1000, -1000, -1000, 2022, -1000, -1000,
	2022, -1000, -1000, -1000, 2022, 2022, -1000, 2022, 2022, -1000,
	-1000, -1000, -1000, -1000, 47824, 726, 263, 1981, 726, 47824,
	47824, 801, -76, -1000, -1000, -1000, 147, 145, 142, 139,
	-1000, -1000, -1000, -1000, 135, 134, -1000, -1000, -1000, 1979,
	44378, 2291, 18078, 2255, -1000, 2255, -1000, -1000, -1000, 320,
	-1000, 38667, -1000, -1000, 241, -1000, -1000, -1000, -1000, 2054,
	1248, 2420, 1029, 1978, -1000, -1000, 1977, -1000, 1286, 869,
	1373, 2136, -1000, -1000, -1000, 38667, -1000, 15470, 15470, 15470,
	1261, -1000, 31700, -1000, -1000, -1000, -1000, -1000, -1000, 19382,
	1050, 14818, 1283, 1131, 14818, 14818, 14818, 14818, 14818, 14818,
	14818, 14818, 14818, 14818, 14818, 14818, 14818, 14818, 14818, 1322,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1758, -1000,
	241, 27206, 10254, 27206, 1545, 1545, 50918, 938, 938, 938,
	938, 938, 938, 40580, 2287, 26554, 27206, 2287, 2287, 2287,
	2287, 2287, 1856, 1893, 1147, 42479, 13514, 10254, 10254, 10254,
	1856, 15470, 15470, 10254, 10254, 12862, 12210, 16774, 10254, 10254,
	2287, 1136, 1147, 21338, 10254, -1000, -1000, 11558, -1000, -1000,
	-1000, -1000, -1000, 1856, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 50918, 50918, 10254, 10254, 10254, 10254, 1856, 1856,
	10254, 10254, 10254, 10254, 10254, 1856, 1856, 1856, 1856, 10254,
	10254, 10254, 10254, 10254, 10254, 10254, 10254, 10254, 10254, 10254,
	10254, 36768, 34869, 38667, 1919, 1906, -1000, 867, 21990, 1950,
	-1000, -87, -79, -62, -1000, -1000, 910, -1000, -1000, -1000,
	10906, -1000, 20034, 2293, 2103, -1000, 29801, -1000, -1000, -15,
	-1000, -1000, -1000, 2003, -1000, 2017, 378, 39, 2017, 2017,
	2017, 2017, 2017, -1000, -1000, -1000, -1000, 23, -1000, -1000,
	-1000, -1000, -1000, 2025, 2024, -1000, 2003, 2003, 2003, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2019, 386,
	2005, 2005, 2005, 2005, 2005, -1000, -1000, -1000, -1000, 737,
	737, 737, -1000, 15470, 2031, 2289, 806, 384, 2255, 2264,
	2255, 638, -1000, 863, 2023, 602, 1944, -1000, 270, 1642,
	36135, -1000, -1000, -1000, -1000, -1000, 38667, 38667, 47824, 47824,
	47824, 824, -1000, 38667, 1976, -1000, -1000, -1000, -1000, -1000,
	1937, -1000, 1642, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 38667, -1000, -1000, 1971, -1000, -1000, -1000,
	1971, -1000, -1000, 1605, 1147, 1757, 1756, 2281, -1000, -1000,
	-1000, 1145, -1000, -1000, -1000, -1000, 1175, 52289, 52289, 38667,
	2281, 1175, 1147, 1365, 2032, 1990, 1856, -1000, -1000, 66,
	-1000, 57, -1000, -1000, -1000, 1755, -1000, 14818, -1000, 1956,
	1956, -1000, 1956, 998, 1545, 1956, -1000, -1000, 1891, -1000,
	1237, 1604, 38667, -1000, 44378, -8, -1000, -115, 50004, -1000,
	-1000, -1000, 726, 50004, -1000, 168, 200, -1000, 799, -1000,
	1887, -1000, -1000, -1000, -1000, 2022, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 50004, 208, 259, 50004,
	1937, 2394, 136, -1000, -1000, -1000, -1000, -1000, -1000, 2305,
	-1000, -1000, 1990, 1869, -1000, 862, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2239, 1066, 1066, 1066,
	680, 1856, -1000, 50461, -1000, 2125, 1280, 1280, 15470, -1000,
	-1000, -1000, 20034, 2308, -1000, 2167, 2164, 2051, -1000, -1000,
	1050, 1242, 1094, -1000, -1000, 1357, -1000, -1000, -1000, -1000,
	-1000, 861, 1990, -1000, -1000, -1000, -1000, -1000, 3866, -1000,
	-1000, -1000, -1000, 1283, 14818, 14818, 14818, 1365, 3866, 3841,
	1339, 1383, 938, 1293, 1293, 969, 969, 969, 969, 969,
	1046, 1046, -1000, -1000, -1000, 1856, -1000, 1854, -1000, -1000,
	1147, 860, -1000, -1000, -1000, -1000, -1000, -1000, 10254, -1000,
	-1000, -1000, 10254, 10254, 10254, 10254, 10254, -1000, 15470, -1000,
	1856, 1854, 1854, 1854, -1000, 1250, 1801, 1807, 1854, 1012,
	2392, 1854, 1010, 2391, 1854, 1548, 14818, 14818, 14818, 1854,
	1854, 10254, 1182, -1000, 15470, 1856, 1854, -1000, 1638, 1954,
	1953, 1854, 1856, 1952, 1854, 1854, -153, -153, 1856, 1854,
	1856, 1854, 1854, -153, -153, -153, -153, 1854, 1854, 1854,
	1854, 1854, 1854, 1854, 1854, 1854, 1854, 1854, 1854, 1014,
	38667, -1000, 1947, 456, -1000, -1000, -1000, 2288, 33603, -1000,
	-1000, 41213, -1000, 1990, 1990, 1014, 1923, 34869, -1000, -1000,
	34869, 52289, 25902, -1000, 21338, -62, -97, -1000, -1000, 1950,
	-1000, -1000, 1445, -1000, -1000, 1147, -1000, 859, 2245, 2287,
	3915, 749, -1000, -1000, -1000, 2020, 303, -1000, 2189, 961,
	961, 957, 1711, 2186, -1000, -1000, 189, -36, -1000, -1000,
	-1000, 1441, -1000, 261, -1000, 2017, 2017, 370, 2017, -1000,
	-1000, -1000, -1000, -1000, -1000, 1589, 1589, -1000, -1000, -1000,
	-1000, 1439, -1000, 2019, -1000, 1424, -1000, -1000, -1000, -1000,
	189, 189, 189, 189, -1000, -1000, -1000, 1699, 2064, 50918,
	-1000, 38667, -1000, -1000, -1000, 2372, -1000, -1000, 50918, 45925,
	-1000, -1000, 150, 47824, 267, 526, 242, -1000, -1000, 798,
	-1000, 797, -1000, -1000, -1000, -1000, -1000, -1000, 38667, 47824,
	-1000, 51832, -1000, -1000, -1000, -1000, 2348, 1741, 1740, -1000,
	-1000, -1000, 1112, 1175, -1000, -1000, 14818, 47824, -1000, 621,
	-1000, -1000, -1000, 3866, -1000, -1000, -1000, 1014, 818, -1000,
	-1000, -66, -1000, -1000, 794, 857, 849, 50004, 793, -1000,
	171, 47824, -1000, 50918, -1000, 2377, 2363, 205, 2359, 47824,
	1949, -1000, 1132, 1128, 1115, 1110, -1000, 122, -1000, 260,
	-1000, 18078, 27206, 1066, 1090, -1000, 1087, 1576, 1946, -1000,
	940, 851, 945, 742, 742, -1000, 1066, 742, 2229, 2228,
	1013, -1000, 1945, 1574, 1557, -1000, 2123, -1000, -1000, -1000,
	38667, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	25250, 10254, -1000, 1365, 3866, 3769, -1000, 14818, -1000, 10254,
	-1000, 18730, 1856, 1854, 1854, 1854, 1854, 1854, 1147, -1000,
	-1000, -1000, -1000, 583, 1322, 583, -1000, 1322, -1000, 14818,
	14818, -1000, 14818, 14818, -1000, -1000, 14818, 3601, 3383, 2779,
	-282, -1000, 1974, 1095, -1000, 15470, 1797, -1000, -1000, -1000,
	14818, 14818, -1000, -1000, -1000, -1000, -1000, 49547, -1000, -153,
	-153, -153, -153, -153, -1000, -1000, -1000, -1000, -153, -153,
	-153, -153, -153, -153, -153, -153, -153, -153, -153, -153,
	236, 1990, -1000, 20686, 34869, 34869, 34869, 34869, 34869, -1000,
	2094, 2084, -1000, 2092, 2091, 2082, 338, 44378, 1885, 1856,
	477, 33603, -1000, 1990, -1000, 43745, 900, 814, 813, 810,
	10254, 14818, 2348, 34869, 1955, 1955, -1000, 846, -1000, -1000,
	-1000, -95, -120, -1000, -1000, -1000, 27206, -1000, -1000, -1000,
	388, 2330, 1066, 1066, 1066, 1066, 326, 2238, 1066, 1066,
	1066, 1066, 1066, -198, -201, 1066, 1066, 1066, 1066, 1066,
	1066, 1066, 1066, 1066, 1066, 1066, 98, 1066, 1066, 1066,
	1066, 23946, 1066, -1000, 44835, 755, 2194, 715, 1711, 1711,
	1711, -1000, 1711, -1000, -1000, -1000, 2018, -1000, 1253, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1990, -426, 1420,
	2237, 366, 2409, -1000, 2183, -1000, 2182, 2181, 1556, -1000,
	-1000, 1915, 1912, 1911, -1000, -1000, -1000, 2017, -1000, 1882,
	-1000, 1879, 1940, -1000, 1877, 140, 38667, -1000, -1000, 2283,
	2062, -1000, -1000, -1000, -1000, 1904, 1939, -1000, 5371, 50918,
	50918, 50918, -289, 239, -1000, 47824, 228, 270, 532, 1739,
	38667, 47824, -1000, -1000, -1000, -1000, 15470, -1000, -1000, 2281,
	-1000, 3866, 1642, -1000, -1000, 19, 38667, -1000, 47824, 980,
	48914, 792, 47824, 202, 199, -1000, 47824, 47824, 2358, 47824,
	1937, 136, 1552, 1551, 1550, 1407, 1542, -1000, -1000, 1015,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 680, 48457, 1711,
	876, -1000, -1000, 752, -1000, 280, 1736, 32966, 32333, 50918,
	2178, 2176, 1733, 38667, 50918, -1000, -1000, 51375, 1732, 15470,
	50918, -1000, -1000, 50918, 50918, -1000, -1000, -1000, -1000, 1246,
	8950, -1000, -1000, 1856, -1000, 14818, 3866, -1000, -1000, 844,
	-1000, -153, -153, -153, -153, -153, 1856, 2003, 2003, -1000,
	2003, 2005, -1000, 2003, 50, 2003, 41, 1856, 1856, 1856,
	2075, 2042, 1991, 1564, 1638, 14818, 14818, 14818, 1990, -148,
	-1000, 1147, 15470, 1909, 1742, -1000, -1000, 1731, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2061, 20686, 1990, 17426,
	-1000, 50918, 1957, -1000, 1100, 919, 1097, 1096, 841, 840,
	456, 2016, 2060, 363, -1000, -1000, -1000, -1000, 2083, -1000,
	2081, 2028, -1000, -1000, -1000, 1996, -1000, -1000, 1938, 1990,
	50918, 14818, 900, -1000, 1990, 1990, 1990, 1856, 1596, 2341,
	1955, -1000, -1000, 962, -1000, -1000, -1000, -1000, 163, 524,
	524, 524, 1322, 1066, 2230, 1066, 1066, 1401, 28510, 1541,
	1538, 1537, 1066, 1066, 1398, 1524, 28510, 1515, 669, 524,
	524, 524, 1382, 1514, 312, -1000, 1513, 1448, 1423, 524,
	-1000, -216, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	524, 1875, -1000, 2003, 2003, 2173, -1000, 961, -1000, -1000,
	-1000, -1000, -1000, 50918, -1000, 14818, 2280, -1000, 1047, -1000,
	1545, -1000, 1990, 1990, 1990, 1990, 14818, -1000, -1000, -116,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1512,
	-1000, 1381, -1000, 1379, -1000, -1000, -370, 2002, 241, -1000,
	38667, 157, 45925, -1000, 5371, 5371, 5371, 211, 184, -1000,
	1207, -1000, -1000, -1000, 1511, 1510, 1509, 1642, 279, 1204,
	250, -1000, 2274, -1000, -1000, 1147, 1175, -63, -1000, -1000,
	199, -1000, -1000, -1000, 47824, 199, -1000, -1000, 257, 1937,
	1937, 47824, 1937, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 51375, 667, 5371, 5371, 2031, 961, 2171,
	715, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1730, -1000, 956, -1000, 790, 667, 51375,
	1147, 985, 1233, -1000, 2352, -1000, -1000, -1000, 3866, 24598,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 398, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 14818, 14818, 14818,
	14818, -1000, 1638, 1638, 1638, 14818, 1856, 1506, 1147, 14818,
	14818, 1004, -1000, -1000, 2257, 1902, 1931, -1000, -1000, 9602,
	1856, 2143, 1869, -1000, 42479, 1867, -1000, 2341, 20686, 15470,
	15470, 15470, 15470, -1000, -1000, 15470, 1999, -1000, 15470, -1000,
	-1000, -1000, -1000, -1000, 50918, 472, -1000, 15470, 1867, 1533,
	-1000, 50918, 50918, 50918, -1000, 1505, 2293, -1000, -262, -1000,
	315, 311, 229, -1000, -1000, -1000, -1000, -1000, 1322, 1066,
	28510, 1322, -1000, -1000, -1000, -1000, -1000, 1499, 1497, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -219, -1000, 893, 44835, 2261, 2261,
	1711, 1711, 1865, -1000, 1638, 1990, -1000, -1000, -1000, -1000,
	7646, -1000, 7646, -1000, 7646, 7646, 1638, -1000, 1990, 1990,
	1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, 1990, -1000,
	1896, 1888, -1000, 44835, -1000, -1000, 2304, -1000, 157, -1000,
	1482, 383, 404, -1000, 382, 381, 379, 362, 356, -1000,
	-1000, -1000, -1000, 506, 211, -1000, -71, 1368, 1081, 2227,
	184, -1000, 1349, 1336, 1332, 1315, 262, -1000, -1000, -1000,
	-1000, 237, 270, -1000, 527, 1478, -1000, 2211, 2207, 2279,
	199, 2279, 186, 1937, 1858, -1000, -1000, 1714, -1000, -1000,
	1998, 1711, 1711, -1000, 1708, -1000, -1000, 50918, -1000, 667,
	2254, 2250, 1990, 2348, 34236, 8950, -1000, -1000, -1000, -1000,
	1638, 1638, 1638, 1638, -1000, -1000, -1000, 165, -1000, -1000,
	1638, 1638, 2341, 2326, 2170, -1000, 1990, -1000, -1000, 1990,
	258, -1000, 50918, 2293, -1000, 1147, 1147, 1147, 1147, 1147,
	50918, 1147, 1863, 1990, 41846, -1000, 44378, 1790, 1790, 1790,
	-61, -1000, -266, 1306, 28510, 1990, 28510, 1990, 1990, 635,
	-1000, 1322, -1000, -1000, -1000, -1000, -1000, -1000, 893, -1000,
	28510, 1066, 1477, -1000, -1000, -1000, -1000, -1000, 689, 50918,
	-430, 14818, 1854, 1854, 1854, -1000, 1854, -1000, -1000, -1000,
	1845, -1000, 241, 480, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2216, 2215, 455, -1000, 1475, 1466, -1000, 518, 1377,
	852, -160, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 520, 1707, -1000, 247, -1000, -1000, 771,
	2174, 2198, 2325, -1000, 47824, 2279, -1000, -1000, -1000, -1000,
	189, 189, 44835, 2031, 1997, -1000, -1000, -1000, 14818, -1000,
	978, 2346, -1000, 1936, -1000, -1000, -1000, -1000, -1000, 1856,
	204, -295, -1000, -1000, 1039, 15470, 2408, -1000, 1931, 1990,
	-1000, 241, -1000, -1000, 1843, -1000, -1000, -1000, 900, -1000,
	-1000, -1000, 1990, 1990, 2324, -1000, 1856, 50918, 1856, 50918,
	1626, 50918, 1060, -1000, -1000, -1000, 1298, -1000, 38667, -1000,
	-1000, -1000, -1000, 1638, -1000, -1000, -1000, -1000, 893, -1000,
	465, 56786, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1292, -1000, -1000, 1374, 494, 235, -1000, 2275, -1000, 1996,
	1290, 2207, 2323, 2205, 2200, -1000, 1464, -290, -1000, 1841,
	1995, 44835, 3866, 1831, -1000, 50918, 2344, 2321, -1000, -1000,
	2120, -285, -307, 1856, 283, 283, 1935, 20686, 1931, 1856,
	-1000, -1000, 27206, 978, -343, -1000, 1790, -1000, 1790, 1856,
	1856, 1790, 1276, -1000, 1994, -430, -1000, 893, -1000, 466,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 8298, 15470, 96, 27858, 1704, 1702, 56786,
	1743, 56786, 15470, 1701, 1700, 2172, 14818, 56660, 213, -1000,
	212, -1000, -1000, -1000, 1460, -1000, 1103, -1000, 1452, -1000,
	2316, 2315, -1000, 264, 893, 44835, 1837, -1000, 978, 2139,
	-155, 15470, 15470, -1000, 2107, -1000, -1000, -1000, 287, -1000,
	996, 390, 992, -1000, 1545, -1000, 1924, -1000, 1834, -1000,
	5371, 1831, -269, -1000, -1000, -1000, -1000, -1000, 1990, 50918,
	-1000, -1000, 1697, 1682, -1000, 1789, 1313, -1000, 15470, 1645,
	343, 330, 5072, -1000, -1000, -1000, -1000, -1000, -1000, -436,
	-1000, 174, -437, 784, -1000, -1000, 1681, -1000, 2350, 3866,
	-1000, -438, -1000, -1000, -1000, -1000, -1000, -1000, 1446, 1444,
	45468, -1000, 1829, 893, -1000, 645, -1000, 50918, -1000, 1147,
	1922, -1000, 1147, -292, 1203, -1000, -1000, -1000, -1000, -1000,
	50918, 1856, 27206, 295, -1000, -1000, 1272, 50918, 1826, -1000,
	-1000, -1000, 1230, 1196, 56786, -1000, 1641, 56786, 2303, 2302,
	2301, 19, 27206, 56500, 56368, 56786, 56786, 15470, 56208, 56786,
	1212, -1000, 56082, -1000, -1000, -1000, -1000, 178, 1642, 893,
	-1000, 639, 1910, -1000, 2268, 15470, -302, 287, -1000, 43112,
	-1000, -1000, 1340, -192, -1000, 1790, 2059, 217, 1195, 56786,
	-1000, -441, 56786, -442, 554, 241, 780, 910, -1000, 298,
	-1000, 1671, -443, -444, -446, 761, 15470, -447, 1670, -1000,
	47824, -1000, 1990, 50918, 1990, -1000, -308, -1000, 44378, -1000,
	-1000, 1287, -1000, 2057, 2041, 2357, -1000, -1000, -1000, -1000,
	-1000, -1000, 56786, 42479, -1000, -448, 55916, -452, 5621, -1000,
	-1000, -1000, 55790, -1000, -1000, -1000, -1000, 301, -1000, -1000,
	2246, -1000, -1000, 55630, 55504, 55338, 56786, 1348, 55212, 1703,
	-1000, 1642, 16122, -1000, -1000, -1000, -1000, 459, -1000, -1000,
	2406, -1000, 2373, 865, 865, -1000, -453, -1000, 55052, 1191,
	56786, 777, 56786, 1107, -1000, 15470, -1000, 780, -1000, 14818,
	1664, 296, 15470, -454, 291, 285, 1660, 1638, 1856, -1000,
	2037, 14818, 2036, -1000, -1000, -1000, 696, 1314, -1000, 7207,
	1188, -1000, -1000, -455, 775, 56786, -1000, 1443, -1000, 3866,
	-1000, 1654, 1214, 6889, -1000, -1000, -1000, -1000, -1000, -321,
	1481, -322, -1000, -1000, -1000, -1000, -1000, 6505, -1000, -456,
	56786, -1000, 290, 284, -1000, -323, -1000, 766, 6213, -459,
	1640, 1639, -1000, -1000, 759, 56786, -1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2860, 2859, 20, 173, 2858, 296, 2856, 2855, 42,
	2854, 30, 26, 17, 43, 2853, 2539, 2535, 2533, 2529,
	2526, 2852, 66, 2850, 2849, 2523, 2848, 2847, 2521, 2842,
	2841, 2840, 2837, 2836, 2835, 2832, 2831, 2830, 2515, 2512,
	2491, 2828, 2824, 2823, 2487, 2485, 2483, 2822, 19, 50,
	52, 2821, 4, 2818, 161, 185, 2817, 2, 2815, 2814,
	15, 2813, 2811, 2475, 2810, 2809, 2806, 2805, 105, 2804,
	2462, 2459, 2803, 2457, 2454, 2446, 2444, 2442, 184, 2802,
	2440, 2438, 2436, 2801, 2149, 183, 350, 186, 206, 2800,
	2799, 2798, 180, 2797, 163, 2791, 2788, 339, 138, 2787,
	431, 117, 61, 120, 1306, 2786, 22, 63, 314, 2783,
	6, 2781, 136, 2779, 131, 2778, 2777, 189, 2776, 156,
	175, 98, 2775, 2774, 170, 2773, 2771, 2769, 118, 2768,
	2766, 191, 4185, 2765, 2764, 150, 2763, 55, 194, 59,
	68, 2762, 115, 2761, 2754, 2752, 2750, 38, 378, 2749,
	110, 162, 2744, 2742, 95, 2741, 2739, 97, 2735, 2734,
	2733, 155, 53, 2732, 2731, 51, 2730, 57, 62, 2729,
	48, 2728, 151, 2727, 2725, 2724, 2721, 2714, 65, 2712,
	70, 2711, 157, 306, 134, 2709, 2708, 16, 13, 2707,
	37, 9, 7, 46, 28, 80, 60, 149, 147, 102,
	2706, 54, 49, 137, 96, 2704, 190, 144, 103, 89,
	45, 2703, 165, 2696, 82, 167, 152, 143, 164, 2695,
	2694, 2689, 195, 2687, 154, 94, 2685, 113, 1302, 187,
	2684, 2675, 100, 2673, 2669, 2666, 2665, 2655, 91, 122,
	2654, 192, 200, 193, 104, 2653, 73, 3949, 4487, 158,
	3783, 47, 171, 2651, 56, 2648, 2647, 2646, 3027, 121,
	5, 101, 188, 2645, 119, 64, 72, 2644, 2643, 2642,
	2641, 2640, 2639, 2637, 2636, 166, 109, 2635, 2634, 2632,
	2629, 25, 14, 29, 23, 2628, 181, 174, 172, 2627,
	179, 35, 2625, 2623, 141, 116, 2621, 2617, 2616, 2615,
	142, 90, 168, 32, 2614, 139, 128, 218, 2612, 92,
	2611, 2610, 112, 2212, 2609, 2608, 2607, 2606, 111, 114,
	2603, 2601, 2600, 36, 2598, 2596, 2592, 2591, 2589, 88,
	39, 34, 81, 24, 2587, 2586, 108, 2584, 99, 132,
	40, 33, 2582, 3, 10, 8, 2581, 2578, 2577, 2576,
	2574, 2570, 2569, 93, 2568, 2566, 76, 2565, 2564, 2563,
	41, 2562, 2561, 2559, 160, 123, 106, 178, 133, 12,
	2558, 2549, 11, 2548, 125, 2547, 74, 2543, 71, 2542,
	2541, 75, 2531, 2519, 77, 2517, 2509, 182, 1856, 238,
	2506, 159, 140, 58, 67, 2493, 69, 2489, 0, 1522,
	169, 2472, 225, 2470, 2468, 2466,
}

var yyR1 = [...]int{
	0, 397, 397, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	83, 3, 3, 9, 10, 4, 4, 5, 5, 110,
	110, 6, 109, 109, 109, 208, 208, 208, 208, 205,
	205, 111, 111, 108, 108, 117, 7, 7, 8, 8,
	11, 11, 91, 91, 12, 13, 13, 13, 13, 400,
	400, 126, 126, 124, 124, 125, 125, 203, 203, 14,
	14, 14, 212, 212, 217, 217, 217, 220, 220, 220,
	220, 192, 193, 194, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 370, 370, 379, 379,
	379, 380, 380, 378, 378, 378, 378, 378, 382, 382,
	383, 383, 381, 381, 381, 381, 385, 385, 386, 386,
	384, 384, 384, 384, 384, 384, 384, 384, 384, 384,
	384, 384, 384, 384, 373, 373, 373, 44, 44, 44,
	44, 44, 45, 45, 45, 45, 45, 45, 387, 387,
	387, 387, 387, 387, 387, 387, 387, 387, 387, 387,
	387, 387, 387, 387, 387, 387, 387, 387, 387, 387,
	387, 387, 387, 387, 387, 387, 387, 387, 387, 387,
	388, 388, 389, 389, 390, 390, 391, 391, 391, 391,
	392, 392, 392, 392, 392, 393, 393, 393, 393, 393,
	393, 393, 394, 394, 395, 395, 2, 351, 351, 352,
	352, 353, 353, 353, 353, 354, 354, 355, 355, 356,
	356, 356, 356, 356, 356, 356, 356, 356, 356, 26,
	26, 26, 26, 26, 26, 243, 243, 240, 240, 240,
	241, 241, 242, 242, 242, 372, 372, 372, 366, 366,
	366, 368, 368, 367, 367, 367, 369, 369, 374, 374,
	374, 374, 374, 376, 376, 376, 376, 376, 376, 377,
	377, 377, 375, 375, 61, 61, 62, 62, 62, 181,
	181, 181, 15, 15, 15, 15, 15, 21, 23, 23,
	23, 23, 49, 49, 50, 24, 24, 24, 24, 51,
	51, 52, 27, 27, 27, 27, 27, 27, 59, 59,
	59, 58, 58, 57, 57, 57, 57, 57, 57, 29,
	30, 31, 401, 401, 401, 53, 53, 32, 32, 32,
	35, 35, 35, 36, 36, 36, 33, 34, 37, 25,
	25, 25, 25, 60, 60, 55, 55, 54, 56, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	28, 28, 28, 28, 28, 28, 20, 350, 350, 350,
	48, 48, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 66, 66, 314, 315, 315, 315,
	315, 315, 315, 315, 315, 301, 301, 302, 302, 302,
	302, 302, 291, 291, 291, 266, 266, 266, 266, 266,
	266, 266, 266, 266, 266, 266, 266, 266, 266, 265,
	265, 265, 265, 271, 271, 269, 269, 269, 269, 269,
	269, 269, 269, 269, 269, 270, 270, 270, 270, 270,
	270, 270, 270, 272, 272, 272, 272, 272, 273, 273,
	273, 273, 273, 273, 273, 273, 273, 273, 273, 273,
	273, 273, 273, 273, 273, 273, 273, 273, 273, 273,
	273, 273, 273, 274, 274, 274, 274, 274, 274, 274,
	274, 300, 300, 276, 276, 275, 275, 275, 294, 294,
	295, 295, 295, 292, 292, 292, 293, 293, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	280, 296, 281, 281, 282, 282, 283, 283, 284, 284,
	285, 285, 290, 290, 289, 289, 289, 289, 289, 289,
	286, 286, 286, 286, 286, 286, 287, 287, 287, 288,
	299, 299, 299, 299, 299, 277, 46, 334, 334, 334,
	334, 334, 334, 334, 334, 334, 334, 334, 334, 337,
	337, 234, 234, 235, 235, 47, 47, 47, 47, 143,
	143, 335, 335, 336, 336, 336, 336, 304, 304, 333,
	333, 332, 332, 331, 331, 331, 313, 313, 328, 328,
	328, 328, 328, 328, 328, 328, 308, 308, 308, 307,
	307, 309, 309, 312, 312, 330, 330, 329, 329, 305,
	305, 305, 338, 338, 338, 338, 338, 306, 306, 306,
	306, 306, 339, 310, 310, 311, 311, 311, 344, 345,
	343, 343, 343, 343, 343, 144, 144, 144, 317, 317,
	317, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 319, 319, 319, 319, 319, 320, 320, 320, 320,
	320, 320, 396, 396, 396, 321, 321, 321, 322, 322,
	322, 322, 322, 323, 323, 323, 323, 324, 324, 325,
	325, 326, 326, 327, 327, 348, 348, 347, 347, 63,
	63, 65, 65, 64, 69, 69, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 180, 180,
	180, 239, 239, 342, 340, 340, 341, 341, 17, 17,
	67, 67, 371, 371, 18, 18, 18, 18, 18, 18,
	18, 18, 18, 346, 346, 346, 19, 19, 70, 73,
	73, 206, 206, 207, 207, 74, 74, 74, 74, 75,
	75, 75, 75, 71, 71, 71, 71, 71, 71, 71,
	71, 71, 71, 71, 71, 71, 71, 71, 71, 71,
	71, 71, 71, 71, 71, 71, 71, 71, 71, 71,
	71, 71, 71, 71, 71, 71, 71, 71, 71, 105,
	226, 226, 225, 225, 224, 224, 224, 227, 227, 227,
	227, 263, 263, 263, 72, 72, 72, 84, 84, 79,
	79, 82, 82, 82, 85, 85, 86, 86, 87, 87,
	80, 81, 38, 39, 39, 39, 39, 40, 77, 77,
	77, 78, 78, 78, 78, 97, 97, 403, 403, 403,
	76, 404, 88, 89, 89, 90, 90, 90, 230, 230,
	94, 94, 94, 92, 92, 92, 93, 93, 99, 99,
	103, 103, 103, 103, 102, 102, 102, 102, 183, 183,
	188, 255, 255, 164, 164, 184, 184, 189, 189, 189,
	190, 190, 191, 191, 191, 191, 191, 186, 186, 185,
	185, 187, 152, 152, 253, 253, 253, 253, 252, 252,
	252, 252, 252, 252, 107, 107, 112, 112, 114, 114,
	114, 114, 114, 114, 118, 166, 166, 136, 136, 137,
	137, 137, 137, 137, 150, 150, 202, 202, 201, 201,
	204, 204, 113, 115, 115, 115, 115, 121, 121, 122,
	122, 123, 123, 238, 238, 260, 260, 260, 127, 127,
	127, 129, 128, 128, 128, 128, 128, 128, 130, 130,
	116, 116, 316, 316, 303, 267, 267, 268, 405, 405,
	405, 405, 131, 131, 133, 134, 134, 132, 132, 132,
	132, 132, 138, 138, 135, 139, 139, 139, 139, 140,
	140, 104, 104, 104, 104, 104, 104, 104, 104, 223,
	223, 142, 142, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 160, 160, 160, 160, 160, 160, 145,
	145, 145, 145, 145, 145, 145, 98, 98, 161, 161,
	161, 120, 119, 119, 101, 101, 100, 100, 162, 162,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 155, 155, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 158, 158, 158, 158, 158,
	158, 158, 158, 158, 158, 158, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 402,
	402, 157, 156, 156, 156, 156, 156, 156, 95, 95,
	95, 95, 95, 261, 261, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 264, 264, 264,
	173, 173, 96, 96, 171, 171, 172, 174, 174, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 147, 147, 147, 147, 147, 147, 147,
	147, 149, 149, 149, 175, 175, 163, 163, 106, 176,
	176, 177, 178, 178, 179, 179, 182, 195, 195, 195,
	196, 196, 196, 196, 151, 151, 197, 197, 197, 146,
	146, 146, 146, 146, 146, 146, 200, 200, 199, 199,
	198, 198, 198, 198, 198, 198, 209, 209, 165, 165,
	168, 168, 167, 169, 210, 210, 214, 214, 214, 214,
	211, 211, 215, 215, 215, 215, 218, 218, 219, 219,
	219, 216, 216, 216, 213, 213, 213, 257, 257, 257,
	221, 221, 231, 231, 228, 228, 229, 229, 222, 222,
	278, 278, 278, 237, 237, 236, 236, 236, 232, 232,
	232, 233, 233, 254, 254, 250, 250, 256, 256, 251,
	251, 258, 258, 259, 259, 349, 349, 297, 297, 359,
	359, 298, 298, 360, 360, 362, 362, 357, 357, 358,
	358, 361, 361, 41, 363, 363, 364, 364, 365, 365,
	365, 365, 42, 43, 43, 43, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 249, 249,
	249, 249, 249, 249, 247, 247, 247, 247, 247, 398,
	399,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	11, 5, 7, 1, 5, 1, 3, 1, 3, 2,
	1, 13, 0, 2, 2, 0, 2, 3, 3, 1,
	3, 0, 2, 1, 3, 4, 1, 3, 1, 3,
	8, 9, 1, 1, 10, 9, 8, 7, 7, 1,
	1, 1, 3, 1, 3, 1, 3, 0, 4, 3,
	4, 5, 1, 3, 3, 2, 2, 2, 2, 2,
	1, 0, 0, 0, 2, 3, 3, 11, 9, 11,
	5, 5, 16, 12, 9, 4, 0, 3, 0, 2,
	2, 1, 3, 1, 1, 2, 2, 2, 0, 2,
	1, 2, 2, 2, 2, 2, 0, 1, 1, 2,
	3, 3, 5, 3, 3, 4, 5, 4, 4, 2,
	2, 2, 2, 2, 0, 2, 2, 9, 10, 9,
	5, 7, 7, 7, 7, 8, 4, 6, 2, 3,
	2, 3, 3, 3, 4, 3, 3, 2, 2, 3,
	2, 2, 2, 3, 2, 2, 3, 2, 2, 2,
	3, 3, 2, 3, 3, 2, 2, 2, 2, 2,
	1, 3, 0, 3, 1, 3, 0, 1, 1, 1,
	1, 3, 1, 3, 3, 0, 2, 5, 5, 5,
	7, 5, 0, 3, 0, 3, 4, 0, 1, 1,
	3, 2, 3, 3, 3, 0, 1, 1, 2, 2,
	2, 2, 1, 2, 2, 3, 3, 3, 3, 2,
	4, 5, 4, 6, 7, 2, 3, 3, 3, 3,
	0, 3, 0, 3, 3, 1, 1, 1, 3, 2,
	1, 1, 3, 3, 2, 1, 1, 3, 1, 2,
	5, 4, 6, 4, 3, 3, 6, 5, 5, 4,
	3, 5, 1, 3, 1, 1, 1, 1, 1, 0,
	2, 2, 1, 1, 1, 1, 1, 4, 5, 8,
	4, 7, 1, 2, 5, 7, 10, 8, 11, 1,
	2, 5, 5, 5, 5, 6, 5, 7, 1, 1,
	1, 1, 3, 1, 1, 1, 2, 1, 1, 2,
	2, 5, 0, 1, 2, 1, 3, 5, 7, 8,
	7, 9, 10, 7, 9, 10, 2, 2, 2, 2,
	4, 2, 4, 2, 3, 1, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 4, 3, 2, 4, 4, 0, 2, 3,
	1, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 5, 5, 5, 1, 1, 2,
	3, 4, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 0, 1, 1, 0, 2, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 6, 8, 3, 3,
	1, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 3, 2, 2,
	2, 2, 2, 1, 2, 2, 2, 1, 2, 2,
	3, 3, 2, 2, 3, 2, 3, 4, 2, 2,
	1, 1, 1, 1, 1, 2, 1, 1, 1, 1,
	1, 4, 4, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 3, 0, 3, 3, 0, 5,
	0, 3, 5, 0, 1, 1, 0, 1, 2, 3,
	2, 3, 5, 3, 5, 3, 5, 4, 5, 4,
	3, 1, 0, 1, 3, 3, 0, 1, 2, 2,
	0, 1, 0, 1, 1, 1, 1, 2, 2, 2,
	5, 5, 5, 4, 4, 4, 4, 4, 4, 4,
	2, 1, 2, 1, 2, 2, 3, 2, 2, 2,
	2, 1, 1, 1, 1, 3, 2, 1, 1, 0,
	3, 1, 1, 0, 1, 5, 2, 2, 3, 0,
	1, 1, 3, 3, 3, 3, 3, 5, 4, 0,
	1, 1, 2, 2, 3, 2, 0, 1, 3, 5,
	3, 3, 5, 3, 2, 2, 1, 1, 1, 1,
	1, 0, 1, 0, 1, 1, 3, 3, 3, 3,
	3, 1, 10, 11, 11, 12, 12, 3, 3, 3,
	2, 1, 5, 1, 1, 0, 2, 2, 3, 3,
	1, 1, 2, 2, 2, 0, 1, 2, 0, 2,
	3, 3, 3, 3, 3, 4, 4, 5, 3, 3,
	4, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	3, 3, 3, 3, 3, 3, 2, 2, 4, 4,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 5, 8, 1, 4,
	5, 4, 5, 5, 5, 5, 8, 0, 1, 0,
	2, 0, 4, 0, 2, 0, 2, 0, 2, 1,
	1, 4, 3, 5, 1, 3, 5, 4, 3, 5,
	3, 8, 10, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 5, 4, 5, 1, 2, 2,
	4, 3, 6, 5, 3, 9, 2, 2, 0, 1,
	2, 0, 1, 7, 1, 3, 8, 8, 3, 3,
	3, 5, 3, 5, 5, 5, 4, 4, 4, 4,
	4, 4, 4, 0, 1, 1, 3, 2, 3, 4,
	4, 1, 3, 1, 1, 2, 2, 4, 4, 3,
	3, 3, 3, 3, 4, 3, 5, 5, 5, 4,
	4, 4, 3, 2, 2, 6, 2, 4, 3, 4,
	4, 5, 8, 6, 3, 5, 4, 2, 4, 3,
	2, 4, 5, 6, 2, 6, 6, 3, 3, 3,
	0, 1, 1, 1, 0, 2, 2, 0, 2, 3,
	2, 0, 1, 1, 2, 4, 1, 0, 1, 2,
	1, 2, 4, 4, 0, 1, 0, 3, 0, 2,
	4, 4, 2, 3, 4, 4, 5, 3, 3, 4,
	3, 1, 1, 1, 1, 0, 3, 1, 1, 1,
	3, 0, 2, 0, 2, 1, 2, 2, 0, 1,
	0, 1, 1, 0, 1, 1, 0, 1, 3, 5,
	1, 1, 3, 5, 1, 2, 3, 5, 2, 2,
	6, 0, 1, 0, 3, 0, 1, 0, 2, 2,
	4, 1, 2, 2, 2, 2, 2, 0, 2, 1,
	3, 3, 1, 3, 0, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 1, 1, 4,
	1, 3, 1, 1, 2, 2, 4, 2, 6, 1,
	4, 6, 3, 2, 0, 3, 0, 3, 1, 3,
	1, 3, 4, 4, 4, 4, 3, 2, 4, 0,
	1, 0, 2, 0, 1, 1, 1, 1, 1, 2,
	2, 1, 2, 3, 2, 3, 3, 2, 2, 2,
	12, 11, 1, 3, 3, 4, 3, 0, 0, 3,
	4, 3, 1, 3, 3, 2, 1, 1, 3, 1,
	1, 1, 1, 3, 3, 0, 5, 5, 5, 0,
	2, 1, 3, 3, 3, 2, 3, 1, 2, 0,
	3, 1, 1, 3, 3, 4, 4, 5, 3, 4,
	5, 6, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 0, 2, 1, 1,
	1, 3, 1, 3, 0, 1, 1, 3, 1, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 2, 2, 2, 2, 3,
	1, 1, 1, 1, 1, 1, 5, 6, 6, 6,
	5, 5, 5, 6, 5, 5, 6, 5, 5, 5,
	5, 6, 5, 5, 5, 4, 4, 5, 5, 5,
	5, 5, 4, 4, 4, 4, 4, 4, 4, 4,
	3, 6, 6, 4, 6, 6, 4, 8, 8, 8,
	8, 4, 6, 7, 7, 7, 9, 4, 7, 5,
	4, 4, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 8, 8, 0,
	2, 3, 4, 4, 4, 4, 4, 4, 0, 3,
	4, 7, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 3, 3,
	1, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	0, 1, 0, 2, 1, 2, 4, 0, 2, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 0, 3, 1, 3, 1, 0,
	2, 1, 0, 3, 1, 3, 2, 0, 1, 1,
	0, 2, 4, 4, 1, 1, 0, 2, 4, 2,
	4, 1, 3, 5, 4, 6, 0, 3, 1, 3,
	3, 1, 1, 1, 1, 1, 0, 5, 1, 3,
	1, 2, 3, 1, 1, 3, 3, 3, 3, 3,
	1, 3, 1, 2, 2, 3, 1, 1, 1, 1,
	1, 3, 3, 3, 1, 2, 1, 1, 1, 1,
	1, 1, 0, 1, 0, 2, 0, 3, 0, 1,
	0, 3, 3, 1, 1, 0, 1, 1, 1, 1,
	1, 0, 1, 0, 2, 1, 1, 1, 3, 1,
	1, 1, 1, 1, 1, 0, 2, 0, 1, 0,
	4, 0, 1, 0, 3, 0, 3, 0, 4, 0,
	3, 0, 3, 3, 1, 3, 2, 4, 1, 2,
	1, 2, 2, 2, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1,
}

var yyChk = [...]int{
	-1000, -397, -1, -3, -10, -11, -12, -13, -14, -16,
	-63, -17, -18, -19, -70, -73, -74, -75, -71, -72,
	-79, -80, -81, -77, -76, -25, -28, -20, -83, -38,
	-39, -40, -41, -42, -43, -44, -45, -47, -46, -5,
	6, 7, -111, 29, -66, 181, -65, -64, 184, 183,
	220, 185, 540, 337, 541, 213, 64, 363, -82, 366,
	367, -403, 272, 273, 20, 37, 368, 370, 30, 31,
	235, 300, 302, 188, 364, 357, 362, 327, -4, 546,
	182, 215, 214, 26, -6, -7, -398, 68, 657, -178,
	15, -88, -404, -88, -91, 9, 10, 8, 465, -88,
	-314, -238, 109, 68, 23, -233, -243, 89, 456, 189,
	-241, 296, 298, -231, -232, -240, 245, 255, 44, 200,
	199, 256, 190, 296, 190, 191, 193, 456, 189, 228,
	227, 296, 298, 540, 190, -132, -258, -247, -248, 314,
	73, -246, 482, 486, 489, 490, 495, 304, 82, 336,
	337, 328, 338, 210, 434, 297, 303, 306, 329, 624,
	339, 341, 342, 476, 477, 193, 203, 642, 321, 211,
	543, 256, 652, 645, 308, 424, 513, 363, 380, 372,
	395, 544, 595, 267, 371, 354, 441, 514, 311, 260,
	334, 596, 287, 430, 436, 270, 366, 534, 532, 515,
	450, 236, 597, 264, 266, 265, 250, 481, 271, 36,
	216, 391, 317, 541, 245, 598, 517, 591, 516, 239,
	529, 294, 35, 27, 531, 238, 453, 100, 599, 345,
	438, 518, 412, 346, 234, 600, 548, 315, 222, 437,
	387, 327, 118, 243, 282, 347, 601, 413, 417, 602,
	442, 301, 281, 536, 603, 604, 348, 605, 192, 307,
	519, 606, 246, 444, 312, 411, 201, 545, 212, 48,
	225, 445, 415, 535, 421, 607, 344, 608, 609, 610,
	611, 325, 323, 520, 324, 326, 257, 262, 521, 53,
	187, 419, 418, 420, 263, 440, 400, 398, 612, 613,
	316, 207, 455, 614, 615, 399, 18, 616, 617, 448,
	286, 319, 618, 619, 620, 522, 537, 512, 621, 622,
	439, 414, 416, 244, 117, 540, 623, 322, 435, 331,
	547, 305, 533, 625, 350, 224, 218, 449, 355, 340,
	626, 362, 627, 628, 629, 630, 299, 298, 367, 332,
	523, 368, 268, 631, 632, 524, 633, 634, 254, 237,
	452, 443, 52, 426, 635, 335, 351, 356, 358, 360,
	361, 359, 429, 364, 231, 525, 526, 527, 357, 528,
	7, 261, 313, 538, 539, 433, 333, 269, 255, 258,
	402, 226, 636, 637, 389, 390, 365, 229, 220, 112,
	451, 292, 590, 296, 352, 51, 232, 638, 639, 259,
	233, 369, 310, 392, 190, 73, -246, 73, -246, 540,
	134, 396, 441, 181, 431, 432, 438, -308, 439, 227,
	355, 230, -263, 190, -226, 430, 301, 322, 486, 233,
	234, 191, 192, 32, 443, 442, 434, -258, -84, 369,
	-84, -84, 194, 369, -97, 222, 185, -132, 221, -60,
	73, 274, -60, 29, 73, -138, -250, -258, 73, -246,
	36, 73, 368, 433, 433, 76, 547, 236, 21, -388,
	-369, 331, -387, -367, 182, 181, 10, 183, 336, 337,
	338, 300, 191, 8, 30, 624, 208, 339, 340, 6,
	213, 341, 342, 228, 9, 343, -372, 75, 73, -246,
	21, -388, -369, 331, 340, 355, 365, 355, 355, -235,
	-234, 353, 421, -110, 594, -108, -117, -260, -258, -247,
	75, 456, -222, 195, -90, 5, -9, -3, 546, -196,
	17, 16, -94, 54, 55, -89, -102, 125, -104, -258,
	-141, 92, -148, 28, 24, -147, 314, 221, -142, -170,
	-247, -169, -120, 134, -262, 123, 124, 131, 93, 177,
	-155, -153, -154, -156, -158, -159, 75, 74, 83, 76,
	77, 78, 79, 84, 85, 86, -250, -248, -245, 482,
	486, 489, 490, 495, -167, -398, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 58, 59,
	480, 189, 466, 467, 393, 8, 468, 469, 470, 542,
	210, 474, 95, 47, 291, 454, 464, 463, 462, 460,
	461, 457, 459, 458, 476, 477, 196, 456, 129, 465,
	499, 500, 501, 502, 503, 504, 505, 506, 508, 509,
	507, 483, 484, 485, 487, 488, 491, 492, 493, 494,
	496, 497, 498, 549, 186, 182, 185, 91, 23, 25,
	550, 242, 94, 378, 407, 473, 16, 20, 204, 188,
	396, 202, 133, 198, 205, 276, 278, 181, 62, 551,
	277, 431, 552, 553, 554, 555, 386, 384, 275, 556,
	10, 26, 214, 249, 557, 382, 183, 240, 98, 99,
	558, 41, 40, 320, 279, 215, 285, 383, 559, 560,
	19, 65, 206, 11, 200, 230, 651, 561, 300, 13,
	116, 14, 562, 563, 564, 565, 195, 111, 191, 641,
	60, 247, 566, 376, 567, 568, 569, 570, 571, 377,
	88, 572, 573, 108, 290, 56, 511, 32, 235, 592,
	471, 289, 574, 38, 37, 406, 410, 405, 288, 422,
	109, 17, 30, 575, 576, 223, 409, 375, 404, 593,
	577, 578, 252, 63, 353, 385, 655, 33, 66, 219,
	349, 318, 42, 89, 15, 248, 61, 34, 478, 113,
	656, 388, 197, 227, 580, 446, 251, 581, 114, 381,
	594, 208, 110, 370, 184, 330, 273, 209, 295, 302,
	582, 241, 115, 432, 583, 584, 475, 29, 213, 272,
	374, 199, 585, 253, 284, 274, 283, 586, 587, 309,
	43, 653, 640, 190, 39, 97, 408, 373, 403, 194,
	472, 228, 280, 5, 44, 31, 427, 9, 343, 64,
	67, 397, 394, 588, 401, 654, 12, 293, 479, 546,
	447, 90, 589, 428, -88, -88, -88, -211, 365, -218,
	-215, 442, 443, -216, -219, -213, -170, 421, 621, 622,
	441, 396, 440, -250, -258, -247, 314, 221, 134, 483,
	484, 485, 95, 393, 466, 499, 457, 459, 454, 458,
	456, 28, 500, 24, 86, 501, 480, 196, 8, 177,
	487, 488, 502, 503, 504, 58, 460, 461, 542, 129,
	92, 505, 506, 84, 508, 509, 291, 465, 59, 507,
	189, 493, 492, 491, 494, 468, 469, 85, 462, 463,
	464, 47, 497, 496, 498, -2, -6, 6, -132, -315,
	-302, -306, -250, -247, -248, -249, 217, 205, -339, 73,
	-246, 314, 221, 50, 87, 55, 54, 202, 191, 193,
	465, -229, 196, -229, 228, 227, -242, 253, -229, -229,
	190, -241, 101, 101, -67, -132, -371, -366, -372, -228,
	196, -250, -228, -228, -228, -228, -228, -228, -228, 73,
	-246, -132, 178, -124, -132, 11, 11, 67, 67, 73,
	-246, 73, 29, -227, 109, 12, 456, 189, 190, 227,
	228, 193, -227, -310, 11, 111, 231, 231, 231, 231,
	232, 231, -225, 433, 435, 229, 436, 437, 12, -105,
	109, 19, -398, -196, -196, 126, -86, 91, -86, 73,
	368, 194, -78, -3, -13, -11, -12, -97, -9, -150,
	23, 101, 29, 29, 75, 51, 29, -55, -54, -56,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 29, -350, 68, 178, -297, 421, 73, -363,
	-364, -132, 76, 76, 66, 322, 66, 69, 194, 69,
	66, -389, 332, 68, -389, 298, 332, 333, 255, 296,
	193, -389, -389, 298, -389, -389, -389, 318, -389, -389,
	433, -389, -389, -389, 334, 335, -389, 431, 193, -389,
	-389, -389, -389, -389, 71, 66, 69, 322, 66, 11,
	66, 356, 446, -143, 21, -334, 134, 345, 346, 347,
	348, 344, 322, 349, 350, 351, 231, 352, -4, -108,
	69, -200, -398, 73, -290, -289, -286, -287, -288, -285,
	28, 190, -8, -6, -398, 21, 22, -399, 70, -110,
	-197, 19, 30, -151, 76, 79, -179, -182, -104, -258,
	50, -92, 21, 22, 81, 11, -253, 91, 89, 90,
	108, -252, 23, 73, -246, -247, 75, -248, -249, 178,
	-104, -145, 111, 92, 109, 110, 94, 120, 119, 130,
	123, 124, 125, 126, 127, 128, 129, 121, 122, 133,
	101, 102, 103, 104, 105, 106, 107, -223, -398, -120,
	-398, 178, -398, 178, 179, 180, 178, -148, -148, -148,
	-148, -148, -148, -148, -398, 178, 178, -398, -398, -398,
	-398, -398, -9, -162, -104, 546, -398, -398, -398, -398,
	-398, -398, -398, -398, -398, -398, -398, -398, -398, -398,
	-398, -173, -104, -398, -398, -402, -157, -398, -402, -157,
	-402, -157, -402, -398, -402, -157, -402, -157, -402, -402,
	-157, -402, -398, -398, -398, -398, -398, -398, -398, -398,
	-398, -398, -398, -398, -398, -398, -398, -398, -398, -398,
	-398, -398, -398, -398, -398, -398, -398, -398, -398, -398,
	-398, -222, -222, 11, -124, -125, -135, -258, 69, -212,
	-217, 444, 446, 365, -216, -216, -257, -250, 75, 28,
	101, 29, 178, -178, -88, 70, 69, -306, -265, -271,
	-273, -272, -274, -269, -270, 393, 396, 400, 398, 394,
	399, 134, 397, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 29, 216, 389, 390, 391, 392,
	413, 414, 415, 416, 417, 418, 419, 420, 372, 395,
	544, 373, 374, 375, 376, 377, 378, 380, 381, 382,
	383, 384, 385, 386, 387, -265, -265, -265, -265, 73,
	231, -247, -339, 68, -250, -132, -243, -241, 73, 92,
	73, -131, -250, -258, -138, 254, -375, -374, -366, -369,
	-229, -242, -366, 259, 257, 258, 69, 194, 69, 194,
	71, -124, 24, 66, -126, -132, 73, 73, -131, -138,
	-368, -366, -369, -259, -258, -244, 549, 186, 21, 182,
	185, 91, 23, 25, 550, 242, 94, 378, 134, 483,
	484, 485, 407, 473, 16, 20, 204, 95, 188, 393,
	396, 202, 133, 198, 205, 276, 278, 466, 499, 181,
	62, 551, 457, 459, 454, 458, 277, 456, 431, 552,
	553, 554, 555, 386, 384, 275, 28, 556, 10, 500,
	26, 214, 249, 22, 557, 127, 382, 183, 510, 240,
	98, 99, 558, 41, 40, 320, 24, 279, 215, 86,
	285, 501, 383, 559, 560, 19, 65, 206, 11, 200,
	230, 651, 561, 300, 13, 480, 116, 14, 562, 563,
	564, 565, 196, 195, 111, 191, 641, 60, 247, 8,
	566, 376, 567, 568, 569, 570, 571, 377, 177, 88,
	572, 573, 108, 290, 56, 487, 488, 511, 45, 32,
	235, 502, 503, 592, 504, 471, 289, 574, 38, 37,
	406, 410, 405, 288, 422, 58, 109, 17, 460, 461,
	30, 575, 576, 542, 223, 409, 375, 404, 593, 577,
	578, 129, 252, 63, 92, 353, 505, 506, 84, 385,
	655, 33, 66, 219, 349, 318, 42, 89, 15, 248,
	61, 34, 478, 113, 656, 508, 388, 197, 227, 580,
	446, 251, 581, 114, 509, 381, 594, 208, 110, 370,
	184, 291, 465, 330, 273, 209, 295, 302, 59, 582,
	241, 115, 507, 189, 432, 583, 6, 584, 475, 29,
	213, 272, 374, 199, 585, 253, 284, 274, 283, 586,
	49, 587, 309, 43, 493, 492, 491, 494, 653, 57,
	468, 469, 640, 190, 39, 97, 408, 373, 403, 194,
	472, 228, 85, 280, 5, 44, 31, 427, 9, 343,
	64, 67, 462, 463, 464, 47, 397, 394, 588, 497,
	401, 496, 498, 654, 96, 12, 293, 479, 546, 447,
	90, 589, 428, 69, 75, 75, -206, -207, 73, -246,
	-206, -227, 75, -262, -104, -229, -229, -132, -132, -132,
	-132, -132, -227, -227, -227, -227, -224, 11, 111, 11,
	-224, -224, -104, -148, -366, 458, 125, -258, -87, -85,
	207, -85, -87, 73, 73, 368, -78, 33, 73, -55,
	-55, 75, -55, 69, 101, -55, -150, 70, -162, -250,
	-349, 641, 69, -365, 23, 446, 447, 422, -391, 190,
	230, 227, 66, -391, -387, 340, -368, -367, -366, -389,
	-390, -250, -389, -389, -389, 433, -389, -389, -389, -389,
	-389, -389, -389, -389, -389, -372, -391, 300, 69, -391,
	-368, -366, 194, 447, 448, 344, 344, 344, 344, 344,
	344, -117, 23, -199, -198, -251, -247, -248, -249, 217,
	-250, -244, -290, -287, -286, -288, 396, 441, 133, 453,
	-132, -9, -208, 88, 9, 111, 69, 18, 69, -195,
	25, 26, 178, -149, 51, 76, 79, -230, 49, -132,
	-104, -104, -104, -160, 84, 92, 85, 86, -252, 217,
	125, -259, -251, -248, -247, 314, 221, -244, -148, -161,
	-167, -120, 80, 111, 109, 110, 94, -148, -148, -148,
	-148, -148, -148, -148, -148, -148, -148, -148, -148, -148,
	-148, -148, -261, 73, 75, 73, -251, -100, -103, 125,
	-104, -258, -251, -147, 84, -147, -250, -250, -92, -251,
	434, -251, -92, -92, -92, -92, -92, -399, 69, -399,
	-9, -100, -100, -100, -399, -104, -104, -100, -100, -170,
	75, -100, -170, 75, -100, -148, 471, 472, 473, -100,
	-100, -92, -171, -172, 96, -170, -100, -399, -148, -250,
	-250, -100, -101, -100, -100, -100, -399, -399, -103, -100,
	-103, -100, -100, -399, -399, -399, -399, -100, -100, -100,
	-100, -100, -100, -100, -100, -100, -100, -100, -100, -134,
	88, -132, -107, -112, -114, -115, -136, -119, -398, -113,
	-116, -132, -120, 73, 511, -132, -124, -400, 11, 67,
	-400, 69, 178, -215, -218, 69, 445, 447, 448, -212,
	-283, -284, 133, 66, 87, -104, -251, -259, -196, -94,
	-317, -302, -304, -305, -306, -328, 205, -338, 197, 199,
	200, 44, -307, 206, 191, 45, -266, -292, 426, 427,
	-276, 68, -275, 68, -275, 401, 393, 396, 394, -275,
	-275, -275, -275, -275, 394, 68, 68, -276, -276, -276,
	-294, 68, -294, 388, -295, 68, -295, -295, -295, -295,
	-266, -266, -266, -266, -339, -339, -339, -104, -254, 67,
	23, 193, -290, 24, -290, -61, 242, 211, 178, 68,
	245, 246, -370, 69, 28, -376, 297, -132, 221, -132,
	-132, -366, -366, -372, -346, 209, 204, -132, 69, 69,
	-132, 69, 75, 73, 73, -150, -311, 11, 111, -227,
	-258, -258, -132, -150, -227, -98, 217, 67, -402, -399,
	370, 371, 73, -148, -54, -147, 70, -133, 88, 75,
	-364, -260, 421, 447, -392, 125, -250, -391, -392, -395,
	546, 194, 70, 69, -389, -392, 318, 300, -392, 11,
	-335, -336, 358, 359, 360, 361, -337, 19, -119, -398,
	-399, 69, 178, 29, -313, 101, -313, -313, -69, -68,
	186, 183, 184, 187, 188, -342, 424, 182, 239, 238,
	224, -399, -205, 34, 35, -250, 52, -151, -151, -182,
	-221, 19, 11, 47, 47, -93, 57, 84, 85, 86,
	178, -398, -161, -148, -148, -148, -98, 91, -399, 69,
	-399, 178, -101, -100, -100, -100, -100, -100, -104, -399,
	-399, -399, -399, 69, 67, 23, -399, 67, -399, 11,
	11, -399, 11, 11, -399, -399, 11, -148, -148, -148,
	-399, -399, -100, -174, -172, 98, -104, -399, -399, -399,
	69, 69, -399, -399, -399, -399, -183, 478, -183, -399,
	-399, -399, -399, -399, -183, -183, -183, -183, -399, -399,
	-399, -399, -399, -399, -399, -399, -399, -399, -399, -399,
	-203, 113, -132, 29, 69, -127, -129, -128, -130, 56,
	60, 62, 57, 58, 59, 434, 63, -238, -107, -118,
	47, -398, -137, 113, -139, 23, -260, 64, 195, 65,
	-398, -398, -203, 67, -107, -107, -135, -258, 125, -217,
	-220, 449, 446, 452, 73, 75, 178, -197, -321, -318,
	69, 113, 648, 424, 513, 441, 28, 396, 514, 133,
	82, 515, 236, 36, 191, 517, 453, 345, 518, 519,
	201, 520, 521, 522, 306, 523, 364, 524, 525, 526,
	527, 333, 5, -306, 68, 73, -312, -247, 45, -307,
	-309, -307, -307, -312, 73, -312, 45, 84, 92, -282,
	-284, 134, -279, -280, -296, -299, -277, 23, 651, 429,
	396, 28, 66, 424, 197, 45, 44, 200, 82, -293,
	428, 76, 76, 489, -275, -275, -275, 401, -275, -300,
	75, -300, 76, -294, 76, 70, 66, -250, -192, -132,
	-62, 8, 9, 10, -250, -351, -352, -353, -250, 111,
	247, 248, -379, 330, -374, 298, 307, 91, 16, 546,
	194, 194, -132, -366, -207, -140, 12, 73, 73, -224,
	-227, -148, -369, 233, 234, -203, 190, -365, 194, 178,
	178, -392, 194, 321, -368, -250, 11, 11, 318, 11,
	-368, 69, 101, 101, 101, 101, 354, -198, -251, -313,
	73, 75, 134, 73, 75, 134, 75, 69, -239, -307,
	-348, -305, -306, -347, 198, 205, -239, 205, 202, -307,
	206, 197, 198, -236, -307, 194, 23, -239, -239, -313,
	-239, 32, 32, 113, 69, 75, 75, 53, -132, -99,
	-193, 125, -251, -101, -98, 91, -148, -103, 125, -259,
	-399, -399, -399, -399, -399, -399, -264, 134, 393, 216,
	391, 384, 411, 398, 426, 389, 427, -261, -264, -261,
	-148, -148, -148, -148, -148, 11, 11, 11, 543, -178,
	100, -104, 97, -148, -148, -250, -188, -398, -183, -183,
	-183, -183, -183, -184, -183, -184, -184, -184, -184, -184,
	-184, -184, -184, -184, -184, -184, -146, 29, 47, -398,
	-9, -398, -210, -214, -170, -247, -249, 217, 314, 221,
	-112, -114, -114, -112, -114, 56, 56, 56, 61, 56,
	61, 61, 56, 56, -128, -260, -399, -399, -166, 241,
	-398, 33, -260, -139, 191, 191, 191, -101, -148, -140,
	-107, -140, -140, 178, 446, 450, 451, -318, 16, -313,
	-313, -313, -313, 441, 396, 133, 29, -313, -313, -313,
	-313, -313, 516, 516, -313, -313, -313, -313, -313, -313,
	-313, -313, -313, -313, -313, 365, -313, -313, -313, -313,
	-319, -396, 75, 76, 82, 336, 306, 73, -246, -244,
	-313, -330, -329, -250, -247, 197, -338, 44, -338, -312,
	-312, -312, -312, 68, 84, -398, 652, 76, 29, -147,
	124, -142, 454, 460, 461, 455, -398, 85, 86, 9,
	45, 45, 45, 75, 70, 70, 70, -275, 70, 69,
	70, 69, 70, 69, -144, 599, 92, -132, -194, 23,
	66, 70, 69, -265, -250, -250, -250, -382, 546, 303,
	-380, -378, 309, 310, 311, 312, 313, -369, 308, -376,
	305, 75, 73, -132, -366, -104, -150, -281, -282, -132,
	-368, 125, 125, -250, 194, -368, 318, -394, 546, -368,
	-368, 11, -368, -336, 75, 75, 75, 76, 75, 73,
	75, 134, -68, 68, -301, 73, -246, -312, -232, 197,
	73, 73, 73, -247, -246, -248, -249, 73, -247, -246,
	-248, -249, -250, 45, 45, 73, -132, -250, -301, 73,
	-104, -250, -250, -250, -208, 69, -102, -399, -148, 178,
	-184, -184, -184, -184, -184, -399, -276, -276, -276, -295,
	-276, 377, -276, 377, -399, -399, -399, 19, 19, 19,
	19, -399, -148, -148, -148, -398, -96, 475, -104, 69,
	69, -255, 73, -209, 66, -210, -165, -168, -167, -398,
	-9, -399, -199, 6, 546, -204, -250, -140, 69, 101,
	101, 101, 101, -122, -121, 66, 67, -123, 66, -121,
	56, 56, 56, -202, 68, 69, -167, -398, -204, -148,
	-139, -398, -398, -398, -399, 69, -178, -140, -322, -323,
	114, 535, -324, 574, -319, -319, -319, -261, -313, 29,
	-313, -313, 76, -396, 75, 75, 75, -313, -313, 76,
	75, -396, 75, 207, 210, 212, -319, -319, -319, 76,
	75, -320, 28, 531, 387, 532, 533, 534, 75, 28,
	76, 28, 76, -319, 528, -319, 70, 69, -276, -276,
	45, -309, -201, -250, -148, 23, 73, 134, -147, -402,
	-398, -402, -398, -402, -398, -398, -148, -154, 454, 464,
	463, 462, 460, 461, 457, 459, 458, 476, 477, 75,
	76, 76, 599, 68, -9, -192, -132, -354, -355, -356,
	82, 545, 92, 249, 250, 207, 251, 252, 253, -353,
	-265, -265, -265, -385, -386, -384, 306, 328, 329, 314,
	-383, -381, 323, 324, 325, 326, 91, 75, 75, 75,
	-377, 297, 91, 306, 16, 23, -227, -357, -225, -394,
	-368, -394, 300, -368, -301, -180, 210, 211, -265, -265,
	-254, -309, 45, 73, -237, 194, 23, 194, -180, -301,
	29, 183, 88, -109, 11, -193, -193, 125, -281, 73,
	-148, -148, -148, -148, -399, -399, -399, -148, -399, 75,
	-148, -148, -164, 113, 27, -209, 69, -399, -399, 47,
	-399, -399, 69, -178, -214, -104, -104, -104, -104, -104,
	68, -104, -201, 241, -399, -139, -238, -201, -201, -201,
	75, -196, -325, 537, -398, 436, -398, 436, 536, 45,
	-261, -313, -396, -261, 75, 75, 529, 530, -332, -331,
	67, 201, 82, -329, -195, -195, -312, -312, 70, 69,
	-399, -398, -100, -100, -100, -399, -100, -399, 70, 70,
	-330, -192, -194, 19, -193, -356, 75, 253, 249, 253,
	253, 253, 253, 254, -373, 82, 304, -384, 315, 604,
	299, 330, 76, 76, 112, 30, 31, -381, 76, 76,
	76, 76, -378, 16, 546, -376, 305, 75, 75, -358,
	38, -360, 39, -393, 23, -394, -393, 318, 70, 73,
	-266, -266, 68, -312, -312, 73, -250, -180, 28, 28,
	-398, -140, 510, -107, -102, -399, -399, -399, -399, -95,
	111, 546, -399, -399, -178, 16, 45, -168, -165, 47,
	-9, -398, -250, -196, -201, 70, -167, -137, -260, -399,
	-399, -399, 436, -326, 538, 76, -396, -398, -396, -398,
	-398, -398, 256, -261, -331, -396, -313, 75, 208, -250,
	-291, 654, 653, -148, -399, -399, -399, -399, 70, -9,
	240, -194, 36, 36, 245, 246, 75, 75, 28, 316,
	177, 28, 76, 177, 481, 305, 75, 73, 306, -278,
	195, -361, 43, -359, -298, 42, 16, -366, -393, -330,
	-254, 68, -148, -340, -341, 113, -175, 13, -193, -399,
	544, 63, 547, -189, 115, 114, -162, 9, -165, -9,
	70, -139, -398, -398, 16, -399, -201, -399, -201, -147,
	73, -201, 101, 76, -132, -399, -333, -332, -192, 241,
	-22, -3, -11, -12, -13, -14, -16, -63, -17, -18,
	-23, -24, -19, -70, -73, -74, -75, -71, -82, -80,
	-81, -77, -76, -27, -29, -30, -32, -35, -36, -33,
	-34, -31, -25, -28, -37, -20, -38, -39, -40, -44,
	-45, -26, -46, 95, 196, 364, 275, 286, 287, 288,
	73, 291, 293, 289, 290, 285, 295, 363, 76, 28,
	76, 28, 319, 306, 23, -202, 76, -360, 16, -362,
	40, 41, 75, 546, 70, 68, -330, -399, 69, -250,
	-176, 14, 16, 53, 545, 548, -399, -190, 94, -191,
	112, 481, -152, 76, 177, -190, -210, -399, -316, -303,
	-251, -340, -323, -399, -399, -399, -399, -399, 76, 68,
	-291, -181, 243, 244, -192, -104, -49, -50, 96, -104,
	73, -59, -256, 278, 279, 280, -251, 73, 73, -48,
	-22, 72, -48, -104, 73, 73, -401, 11, 50, -148,
	100, -48, 317, 317, 75, 38, 115, 75, 16, 16,
	298, -333, -330, 70, -341, 47, -186, 479, -177, -104,
	-163, -106, -104, 53, -191, 117, 118, 241, 117, 118,
	-147, -399, 69, -265, -399, -327, 539, -398, -201, -192,
	73, 73, -49, 100, 98, -50, -104, 97, 276, 277,
	281, -265, 69, 657, 363, 288, 291, 293, 657, 294,
	73, 11, 657, 75, 75, 28, 303, 21, -369, 70,
	-333, 225, -185, -187, -250, 69, 546, 91, -250, -399,
	-303, -267, 512, 24, 76, -201, 70, -194, 100, 98,
	95, -48, 97, -48, 19, 19, 19, -281, -251, 100,
	-22, 100, -48, -48, -48, -104, 292, -48, 88, 100,
	320, -333, 226, 69, 23, -106, 547, -191, 23, -260,
	75, 512, -399, -344, -345, 66, -15, -21, -14, -11,
	-12, -13, 363, 546, 95, -48, 657, -48, 657, -60,
	76, -9, -58, -57, 76, -60, 283, 92, 284, 73,
	-283, 288, 73, 657, 657, 657, 294, -104, 657, -53,
	73, -369, -398, -187, -188, 548, -260, -268, 75, -345,
	66, -344, 66, 10, 9, -192, -48, -110, 657, 100,
	657, 100, 98, -51, -52, 99, -22, 69, 282, 28,
	100, 100, 292, -48, 100, 100, 69, -148, 223, -405,
	84, 28, 346, -343, 209, 204, 207, 29, -343, 657,
	100, 95, 196, -48, 100, 98, -52, -104, -57, -148,
	73, 288, -104, 657, 291, 293, 73, -399, -399, 66,
	-148, 66, 203, 28, 84, 100, 95, 657, 196, -48,
	97, 73, 100, 100, 558, 66, 558, 100, 657, -48,
	291, 293, 558, 196, 100, 657, 73, 73, 196,
}

var yyDef = [...]int{
	-2, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, 35, 36, 37, 38, 1362,
	941, 941, 0, 941, 1043, -2, 769, 770, 0, 0,
	0, 0, 0, 0, 0, -2, 906, 907, 910, 907,
	907, 935, 0, 380, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 613, -2, 0,
	1438, 937, 938, 939, 45, 0, 0, 2319, 2, 1370,
	0, 950, 943, 0, 941, 941, 941, 72, 73, 0,
	104, 0, 0, 0, 1044, 0, 0, 0, 1436, 1436,
	262, 1436, 1436, 0, 1452, 260, 0, 1433, 1448, 1449,
	1450, 0, 0, 0, 1434, 0, 1434, 1434, 1434, 1434,
	1434, 1434, 1434, 0, 0, 837, 1077, 1079, 1080, 1081,
	1461, 1462, 2314, 2315, 2316, 2317, 2318, 2289, 2290, 2291,
	2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301,
	2302, 2303, 2304, 2305, 2306, 2307, 2041, 2042, 2043, 2044,
	2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054,
	2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064,
	2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074,
	2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084,
	2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094,
	2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104,
	2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114,
	2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124,
	2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134,
	2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144,
	2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154,
	2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164,
	2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174,
	2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184,
	2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194,
	2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204,
	2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214,
	2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224,
	2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234,
	2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244,
	2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254,
	2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264,
	2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274,
	2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284,
	2285, 2286, 2287, 2288, 0, 0, 0, 845, 846, 0,
	0, 0, 897, 0, 897, 863, 864, 0, 866, 0,
	0, 0, 0, 0, 0, 877, 880, 884, 0, 1370,
	1370, 646, 647, 648, 902, 903, 891, 904, 909, 908,
	916, 916, 0, 908, 61, -2, 0, 1024, 0, 359,
	361, 0, 381, 0, 384, 387, 1082, 0, -2, -2,
	1467, 922, 0, 0, 1492, 1493, 0, 0, 0, 0,
	0, 2204, 200, 276, 202, 202, 202, 202, 202, 202,
	202, 0, 202, 202, 0, 202, 202, 202, 2214, 202,
	0, 202, 202, 202, 202, 202, 275, 265, 266, 267,
	0, 0, 0, 2204, 0, 616, 911, 617, 619, 0,
	614, 611, 612, 62, 0, 50, 63, 1386, 1045, 1046,
	1047, -2, 0, 1439, 0, 945, 0, 43, 0, 1376,
	0, 0, 953, 951, 952, 942, 0, 964, 994, 0,
	1091, 1926, 1097, -2, 1839, 1140, 1141, 1142, 1143, 1144,
	1145, 1146, 1147, 1784, 0, 0, 0, 0, 0, 1881,
	1170, 1171, 1172, 1173, 1174, 1175, 1343, 1344, 1345, 1346,
	1347, 1348, 1349, -2, -2, -2, 1329, 1330, 0, 2314,
	2315, 2316, 2317, 2318, 1403, 0, 1265, 1266, 1267, 1268,
	1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278,
	1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288,
	1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298,
	1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1907, 1970,
	1858, 1975, 1803, 0, 1795, 1872, 1999, 2000, 0, 1915,
	2295, 0, -2, 2024, 1963, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 2305, 2306, 1865, 1813, 1923, 1964,
	1804, 1825, 1844, 1893, 1894, 1896, 1928, 1929, 1947, 1956,
	1974, 1785, 1786, 1787, 1888, 1889, 1996, 1995, 1994, 1997,
	2030, 2028, 2031, 1773, 1774, 1775, 1776, 1777, 1778, 1779,
	1780, 1781, 1782, 1783, 1788, 1789, 1790, 1791, 1792, 1794,
	1796, 1797, 1798, 1799, 1800, 1801, 1802, 1805, 1806, 1807,
	1812, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1823,
	1824, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834,
	1835, 1836, 1837, 1838, 1840, 1841, 1843, 1845, 1846, 1847,
	1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857,
	1859, 1860, 1861, 1862, 1863, 1864, 1866, 1867, 1868, 1869,
	1870, 1871, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880,
	1882, 1883, 1884, 1885, 1886, 1887, 1890, 1891, 1892, 1895,
	1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906,
	1908, 1909, 1912, 1913, 1914, 1916, 1917, 1918, 1919, 1920,
	1921, 1922, 1924, 1925, 1927, 1931, 1932, 1933, 1934, 1935,
	1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945,
	1946, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1957,
	1958, 1959, 1960, 1961, 1962, 1965, 1966, 1967, 1968, 1969,
	1971, 1972, 1973, 1976, 1977, 1978, 1979, 1980, 1981, 1982,
	1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992,
	1993, 1998, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008,
	2009, 2010, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019,
	2020, 2025, 2026, 2027, 2029, 2032, 2033, 2034, 2035, 2036,
	2037, 2038, 2039, 2040, 1438, 1438, 0, 89, 2271, 0,
	1410, -2, -2, 1412, 0, 0, 0, -2, -2, -2,
	-2, 1796, -2, 1329, 0, 0, 0, 0, 1784, 1785,
	1786, 1787, 1793, 1795, 1803, 1804, 1808, 1809, 1810, 1811,
	1813, 1822, 1825, 1839, 1842, 1844, 1858, 1865, 1872, 1881,
	1888, 1889, 1893, 1894, 1896, 1907, 1910, 1911, 1915, 1923,
	1926, 1928, 1929, 1930, 1947, 1956, 1963, 1964, 1970, 1974,
	1975, 1994, 1995, 1996, 1997, 1999, 2000, 2011, 2021, 2022,
	2023, 2024, 2028, 2030, 2031, 105, 1362, 941, 106, 0,
	437, 438, 0, 0, 0, 0, 0, 0, 671, 1455,
	1456, 2308, 2309, 2310, 2311, 2312, 2313, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	1436, 262, 0, 0, 818, 0, 819, 0, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 851,
	852, 836, 0, 838, 83, 0, 0, 0, 0, 849,
	850, 853, 897, 855, 0, 0, 1436, 1436, 0, 0,
	0, 0, 862, 0, 673, 674, 897, 868, 897, 897,
	897, 894, 0, 894, 874, 894, 892, 893, 0, 879,
	0, 0, 0, 887, 888, 0, -2, 914, -2, 923,
	0, 0, 928, 931, 932, 933, 934, 61, 930, 940,
	0, 0, 0, 0, 363, 0, 0, 383, 365, 0,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	378, 379, 0, 1024, 0, 0, 1465, 1468, 927, 1483,
	1484, 0, 1494, 1495, 206, 0, 206, 0, 0, 0,
	0, 168, 202, 0, 170, 202, 202, 202, 0, 202,
	202, 177, 178, 202, 180, 181, 182, 202, 184, 185,
	202, 187, 188, 189, 202, 202, 192, 202, 202, 195,
	196, 197, 198, 199, 274, 206, 0, 0, 206, 0,
	0, 0, 0, 618, 620, 596, 0, 0, 0, 0,
	601, 602, 603, 604, 0, 0, 607, 608, -2, 49,
	0, 0, 0, -2, 772, -2, 574, 575, 576, 0,
	571, 0, 46, 68, 0, 946, 947, 67, 2320, 0,
	55, 0, 0, 1371, 1374, 1375, 1363, 1364, 1367, 0,
	0, 948, 954, 955, 944, 0, 965, 0, 0, 0,
	0, 995, 0, 998, 999, 1000, 1001, 1002, 1003, 0,
	1095, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1119, 1120, 1121, 1122, 1123, 1124, 1125, 1098, 0, 1112,
	0, 0, 0, 0, 0, 0, 0, 1163, 1164, 1165,
	1166, 1167, 1168, 0, 953, 0, 0, 953, 953, 953,
	953, 953, 0, 0, 1138, 2036, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	953, 0, 1321, 0, 0, 1232, 1241, 0, 1233, 1242,
	1234, 1243, 1235, 0, 1236, 1244, 1237, 1245, 1238, 1239,
	1246, 1240, 0, 0, 0, 1134, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 85, 1077, 0, 90,
	92, 0, 0, 2271, 1413, 1414, 566, 1427, 1428, 1429,
	0, 1425, 0, 1370, 950, 688, 0, 439, 455, 543,
	470, 471, 472, 533, 474, 535, 535, 0, 535, 535,
	535, 535, 535, 510, 511, 512, 513, 514, 516, 517,
	518, 519, 520, 0, 0, 493, 533, 533, 533, 497,
	523, 524, 525, 526, 527, 528, 529, 530, 475, 476,
	477, 478, 479, 480, 481, 482, 483, 484, 538, 538,
	540, 540, 540, 540, 540, 455, 455, 455, 455, 0,
	0, 0, 670, 0, 1453, 0, 0, 262, -2, 0,
	-2, 0, 1072, 0, 0, 0, 116, 292, 278, 115,
	0, 256, 261, 257, 258, 259, 0, 0, 0, 0,
	269, 833, 1435, 0, 826, 81, 827, 828, 829, 830,
	831, 271, 832, 1078, 1463, 1464, 1496, 1497, 1498, 1499,
	1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509,
	1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519,
	1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529,
	1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539,
	1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549,
	1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559,
	1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569,
	1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579,
	1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589,
	1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599,
	1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609,
	1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619,
	1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629,
	1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639,
	1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649,
	1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659,
	1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669,
	1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679,
	1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689,
	1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699,
	1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709,
	1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719,
	1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729,
	1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739,
	1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749,
	1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759,
	1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769,
	1770, 1771, 1772, 0, 839, 840, 847, 841, 843, 844,
	848, 854, 898, 0, 900, 0, 0, 1024, 859, 860,
	861, 675, 867, 869, 870, 876, 897, 0, 0, 0,
	1024, 897, 878, 1126, 881, 1249, 0, 905, 920, 0,
	915, 0, 921, 925, 924, 0, 929, 0, 936, 360,
	362, 364, 382, 0, 0, 385, 386, 388, 0, 1083,
	0, 0, 0, 1486, 0, 1488, 1490, 0, 0, 207,
	208, 209, 206, 0, 201, 0, 224, 277, 0, 169,
	0, 204, 171, 172, 173, 202, 175, 176, 179, 183,
	186, 190, 191, 193, 194, 273, 0, 0, 0, 0,
	166, 0, 0, 912, 913, 597, 598, 599, 600, 609,
	606, 64, 0, 0, 1388, 1391, 1392, 1393, 1394, 1395,
	1459, 1460, 771, 577, 578, 579, 0, 636, 636, 636,
	0, 0, 41, 0, 1377, 0, 0, 0, 0, 1366,
	1368, 1369, 0, 0, 1351, 0, 0, 956, 949, 44,
	1092, 1093, 1094, 1096, 1113, 0, 1115, 1117, 996, 997,
	966, 0, 1331, 1332, 1333, 1334, 1335, -2, 1103, 1104,
	1128, 1129, 1130, 0, 0, 0, 0, 1126, 1108, 0,
	1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157,
	1158, 1159, 1162, 1263, 1264, 0, 1340, 0, 1136, 960,
	961, 0, 1341, 1160, 1350, 1161, 1336, 1169, 1134, 1338,
	1339, 1337, 0, 0, 0, 0, 0, 1131, 0, 1402,
	0, 0, 0, 0, 1210, 0, 0, 0, 0, 1144,
	1343, 0, 1144, 1343, 0, 0, 1897, 2009, 1789, 0,
	0, 0, 1327, 1324, 0, 0, 0, 1250, 0, 0,
	0, 0, 0, 1135, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 87,
	0, 1076, 0, 1004, 1006, 1007, 1008, -2, 0, 1012,
	1013, 1085, 1132, 1461, 0, -2, 0, 0, 79, 80,
	0, 0, 0, 1411, 0, 0, 0, 95, 96, 91,
	1415, 567, 0, -2, 1422, 1423, 1331, 0, 1376, 953,
	745, 440, 442, 443, 444, 0, 653, 661, 0, 0,
	651, 653, 653, 0, 649, 650, 447, 546, 544, 545,
	473, 0, 498, 0, 499, 535, 535, 535, 535, 502,
	503, 505, 508, 509, 515, 0, 0, 494, 495, 496,
	485, 0, 486, 538, 488, 0, 489, 490, 491, 492,
	448, 449, 450, 451, 667, 668, 669, 0, 0, 0,
	101, 0, 110, 1437, 111, 0, 294, 295, 0, 227,
	263, 264, 118, 0, 0, 279, 0, 434, 435, 0,
	820, 0, 822, 268, 824, 834, 835, 825, 0, 0,
	84, 0, 899, 856, 857, 858, 1089, 0, 0, 871,
	895, 896, 894, 897, 875, 889, 0, 0, 882, 0,
	919, 917, 926, 1025, 366, 367, 389, 87, 0, 1466,
	1485, 0, 1489, 1491, 0, 210, 212, 0, 0, 160,
	0, 0, 203, 0, 174, 0, 0, 0, 0, 0,
	615, 621, 0, 0, 0, 0, 605, 0, 65, 0,
	1387, 0, 0, 636, 0, 637, 0, 0, 773, 774,
	-2, 811, 1445, 811, 811, 797, 636, 811, 0, 0,
	0, 69, 56, 0, 2097, 59, 0, 1372, 1373, 1365,
	0, 1430, 1431, 1352, 1353, 102, 957, 1114, 1116, 1118,
	0, 1134, 1105, 1126, 1109, 0, 1106, 0, 1100, 0,
	1208, 0, 0, 0, 0, 0, 0, 0, 1139, -2,
	1206, 1207, 1209, 0, 0, 0, 1213, 0, 1216, 0,
	0, 1256, 0, 0, 1257, 1221, 0, 0, 0, 0,
	0, 1227, 1362, 0, 1325, 0, 0, 1230, 1231, 1251,
	0, 0, 1252, 1253, 1254, 1255, 1195, 0, 1196, 0,
	0, 0, 0, 0, 1202, 1203, 1204, 1205, 975, 975,
	975, 975, 975, 975, 975, 975, 975, 975, 975, 975,
	0, 0, 1075, 0, 0, 0, 0, 0, 0, 1048,
	0, 0, 1051, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1017, 0, 1019, 0, 1085, 0, 0, 0,
	1134, 0, 1089, 0, 1089, 1089, 86, 0, 1084, 93,
	94, 0, 0, 100, 568, 569, 0, 226, 436, 689,
	0, 0, 636, 636, 636, 636, 0, 0, 636, 636,
	636, 636, 636, 0, 0, 636, 636, 636, 636, 636,
	636, 636, 636, 636, 636, 636, 0, 636, 636, 636,
	636, 0, 636, 441, 0, 654, 0, 0, 653, 653,
	653, 652, 653, 644, 654, 645, 0, 456, 0, 458,
	459, 460, 461, 462, 463, 464, 465, 0, 0, 0,
	0, 0, 0, 561, 0, 591, 593, 0, 0, 469,
	547, 0, 0, 0, 504, 500, 501, 535, 506, 0,
	531, 0, 0, 487, 0, 685, 0, 1454, 103, 0,
	0, 296, 297, 298, 1073, 0, 228, 229, 0, 0,
	0, 0, 128, 0, 293, 0, 0, 0, 0, 0,
	0, 0, 82, 272, 842, 865, 0, 676, 677, 1024,
	873, 1127, 883, 885, 886, 562, 0, 1487, 0, 0,
	0, 0, 0, 0, 222, 205, 0, 0, 0, 0,
	167, 0, 0, 0, 0, 0, 0, 1389, 1390, 0,
	583, 584, 585, 586, 587, 588, 589, 0, 0, 653,
	0, 798, 799, 0, 812, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1446, 1447, 0, 0, 0,
	0, 806, 807, 0, 0, 57, 58, 1378, 42, 55,
	0, 967, 1342, 0, 1107, 0, 1110, 1137, 962, 0,
	1176, 975, 975, 975, 975, 975, 0, 533, 533, 1310,
	533, 540, 1313, 533, 1315, 533, 1318, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1322,
	1229, 1328, 0, 0, 0, 968, 969, 971, 1197, 1198,
	1199, 1200, 1201, 1180, 976, 1181, 1182, 1184, 1185, 1187,
	1188, 1189, 1190, 1192, 1193, 1194, 1396, 0, 0, 0,
	1381, 0, 1089, 1404, 0, 0, 0, 0, 2308, 2309,
	1005, 1039, 1041, 0, 1036, 1049, 1050, 1052, 0, 1054,
	0, 0, 1057, 1058, 1059, 1026, 1011, 1133, 1014, 0,
	0, 0, 1085, 1023, 0, 0, 0, 0, 0, 1362,
	1089, 77, 78, 0, 97, 98, 99, 690, 757, 0,
	0, 0, 0, 636, 0, 636, 636, 0, 0, 0,
	0, 0, 636, 636, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 719, 0, 0, 0, 0,
	726, 727, 731, 732, 733, 734, 735, 742, 743, 744,
	0, 0, 655, 533, 533, 0, 659, 651, 660, 638,
	640, 641, 643, 0, 457, 0, 0, 468, 0, 548,
	0, 550, 1249, 1249, 1249, 0, 0, 1101, 1102, 0,
	590, 592, 594, 595, 534, 536, 537, 507, 521, 0,
	522, 0, 541, 0, 672, 686, 0, 0, 0, 101,
	0, 235, 0, 231, 0, 0, 0, 136, 0, 119,
	120, 121, 123, 124, 0, 0, 0, 117, 0, 281,
	0, 284, 285, 821, 823, 1090, 897, 1477, 563, 1074,
	222, 211, 213, 214, 0, 222, 225, 161, 0, 162,
	164, 0, 163, 622, 623, 624, 625, 626, 610, 580,
	581, 582, 775, 0, 808, 0, 0, 1453, 651, 0,
	-2, 778, 783, 784, 785, 786, 787, 788, 789, 790,
	791, 792, 793, 0, 804, 0, 780, 0, 808, 0,
	801, 0, 0, 60, 52, 102, 102, 1177, 1111, 0,
	1179, 1183, 1178, 1186, 1191, 1211, 1307, 562, 1311, 1312,
	1314, 1316, 1317, 1319, 1215, 1212, 1214, 0, 0, 0,
	0, 1222, 0, 0, 0, 0, 0, 0, 1326, 0,
	0, 973, 972, 70, 0, 1396, 1379, 1398, 1400, 0,
	0, 0, 0, -2, 1768, 0, 1030, 1362, 0, 0,
	0, 0, 0, 1033, 1040, 0, 0, 1034, 0, 1035,
	1053, 1055, 1056, 1009, 0, 0, 1015, 0, 0, -2,
	1022, 0, 0, 0, 1032, 0, 1370, 76, 759, 748,
	0, 0, 0, 758, 691, 692, 693, 694, 0, 636,
	0, 0, 698, 699, 701, 702, 703, 0, 0, 706,
	707, 708, 709, 710, 711, 712, 713, 714, 715, 716,
	717, 718, 736, 737, 738, 739, 740, 741, 720, 721,
	722, 723, 724, 725, 0, 730, 628, 0, 1367, 1367,
	653, 653, 0, 1028, 0, 0, 564, 565, 549, 551,
	0, 553, 0, 555, 0, 0, 0, 560, 1249, 1249,
	1249, 1249, 1249, 1249, 1249, 1249, 1249, 0, 0, 532,
	0, 0, 687, 0, 101, 103, 0, 102, 236, 237,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 230,
	232, 233, 234, 154, 137, 138, 0, 0, 0, 0,
	129, 130, 0, 0, 0, 0, 0, 125, 126, 127,
	280, 0, 0, 283, 0, 0, 872, 1479, 1473, 215,
	222, 215, 0, 165, 0, 777, 809, 0, 455, 455,
	0, 653, 653, 800, 0, 1443, 1444, 0, 795, 808,
	0, 0, 0, 1089, 0, 0, 958, 963, 1308, 1309,
	0, 0, 0, 0, 1223, 1224, 1225, 1258, 1228, 1323,
	0, 0, 1362, 0, 0, 71, 0, 1401, -2, 0,
	0, 88, 0, 1370, 1405, 1406, 1407, 1408, 1409, 1037,
	0, 1042, 0, 0, 1085, 1020, 0, 0, 0, 0,
	0, 75, 761, 0, 0, 0, 0, 0, 0, 0,
	695, 0, 700, 696, 704, 705, 728, 729, 627, 631,
	0, 636, 0, 656, 657, 658, 639, 642, 0, 0,
	452, 0, 0, 0, 0, 557, 0, 559, 539, 542,
	0, 108, 0, 0, 103, 238, 239, 240, 241, 243,
	244, 0, 0, 0, 114, 0, 0, 139, 0, 0,
	0, 0, 149, 150, 151, 152, 153, 131, 132, 133,
	134, 135, 122, 0, 0, 282, 0, 287, 288, 1440,
	1481, -2, 0, 157, 0, 215, 159, 223, 776, 810,
	445, 446, 0, 1453, 0, 779, 794, 796, 0, 803,
	0, 1354, 53, 54, 102, 1217, 1219, 1218, 1220, 0,
	0, 0, 1247, 1248, 977, 0, 0, 1399, 1380, 0,
	1384, 0, 1031, 74, 0, 1027, 1016, 1018, 1085, 1086,
	1087, 1088, 0, 746, 0, 760, 0, 0, 0, 0,
	0, 0, 0, 697, 632, 633, 0, 635, 0, 1029,
	466, 453, 454, 0, 552, 554, 556, 558, 629, 101,
	0, 61, 245, 246, 247, 248, 155, 156, 140, 141,
	0, 143, 144, 0, 0, 0, 290, 0, 286, 1026,
	0, 1473, 0, 1475, 0, 1472, 0, 216, 158, 0,
	0, 0, 802, 0, 814, 0, 1359, 0, 959, 1226,
	0, 0, 0, 0, 0, 0, 974, 0, 1383, 0,
	1038, 1021, 0, 0, 757, 749, 0, 751, 0, 0,
	0, 0, 0, 634, 0, 452, 107, 630, 109, 299,
	101, 392, 393, 394, 395, 396, 397, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 430,
	431, 432, 433, 0, 0, 0, 0, 0, 0, 61,
	0, 61, 0, 0, 0, 342, 0, 61, 0, 145,
	0, 147, 148, 289, 0, 40, 0, 1480, 0, 1478,
	0, 0, 1474, 0, 629, 0, 0, 813, 0, 0,
	987, 0, 0, 1259, 0, 1262, 970, 978, 0, 981,
	0, 0, 0, 992, 0, 979, 1397, -2, 0, 1062,
	0, 0, 763, 750, 752, 753, 754, 755, 0, 0,
	467, 101, 0, 0, 113, 0, 0, 312, 0, 0,
	1455, 0, 0, -2, -2, -2, 1457, 339, 340, 0,
	390, 0, 0, 0, 356, 357, 0, 343, 0, 358,
	249, 0, 142, 146, 291, 1441, 1442, 1482, 0, 0,
	0, 781, 0, 629, 815, 0, 51, 0, 1360, 1361,
	1355, 1356, 1358, 1260, 0, 982, 983, 984, 985, 986,
	0, 0, 0, 0, 747, 762, 0, 0, 0, 103,
	300, 301, 0, 0, 61, 313, 0, 61, 0, 0,
	0, 562, 0, 61, 61, 61, 61, 0, 61, 61,
	0, 344, 61, 1476, 1470, 217, 218, 219, 221, 629,
	805, 0, 988, 989, 0, 0, 0, 0, 993, 0,
	1063, 1064, 0, 0, 764, 0, 662, 61, 0, 61,
	310, 0, 61, 0, 0, 0, 0, 566, 1458, 0,
	391, 250, 0, 0, 0, 0, 0, 0, 0, 252,
	0, 782, 0, 0, 0, 1357, 0, 980, 0, 1061,
	1067, 0, 756, 663, 664, 0, 101, 302, 303, 304,
	305, 306, 61, 0, 308, 0, 61, 0, 61, 322,
	323, 324, 61, 331, 333, 334, 335, 0, 337, 338,
	326, 347, 251, 61, 61, 61, 61, 0, 61, 341,
	345, 220, 0, 990, 991, 1261, 1060, 1068, 1066, 665,
	0, 666, 0, 0, 0, 112, 0, 62, 61, 0,
	-2, 0, 61, 0, 319, 0, 325, 0, 336, 0,
	253, 0, 0, 0, 0, 0, 0, 0, 1916, 1065,
	0, 0, 0, 678, 680, 681, 0, 0, 679, 61,
	0, 311, 315, 0, 0, 61, 320, 0, 332, 327,
	254, 348, 0, 61, 350, 353, 346, 816, 817, 0,
	0, 0, 682, 683, 684, 307, 309, 61, 317, 0,
	61, 349, 0, 0, 1069, 0, 1071, 0, 61, 0,
	351, 354, 1070, 316, 0, -2, 352, 355, 318,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 93, 3, 3, 3, 128, 120, 3,
	68, 70, 125, 123, 69, 124, 178, 126, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 72, 657,
	102, 101, 103, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 130, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 119, 3, 131,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 73, 74, 75, 76,
	77, 78, 79, 80, 81, 82, 83, 84, 85, 86,
	87, 88, 89, 90, 91, 92, 94, 95, 96, 97,
	98, 99, 100, 104, 105, 106, 107, 108, 109, 110,
	111, 112, 113, 114, 115, 116, 117, 118, 121, 122,
	127, 129, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
	251, 252, 253, 254, 255, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 270,
	271, 272, 273, 274, 275, 276,
}

var yyTok3 = [...]int{
	57600, 277, 57601, 278, 57602, 279, 57603, 280, 57604, 281,
	57605, 282, 57606, 283, 57607, 284, 57608, 285, 57609, 286,
	57610, 287, 57611, 288, 57612, 289, 57613, 290, 57614, 291,
	57615, 292, 57616, 293, 57617, 294, 57618, 295, 57619, 296,
	57620, 297, 57621, 298, 57622, 299, 57623, 300, 57624, 301,
	57625, 302, 57626, 303, 57627, 304, 57628, 305, 57629, 306,
	57630, 307, 57631, 308, 57632, 309, 57633, 310, 57634, 311,
	57635, 312, 57636, 313, 57637, 314, 57638, 315, 57639, 316,
	57640, 317, 57641, 318, 57642, 319, 57643, 320, 57644, 321,
	57645, 322, 57646, 323, 57647, 324, 57648, 325, 57649, 326,
	57650, 327, 57651, 328, 57652, 329, 57653, 330, 57654, 331,
	57655, 332, 57656, 333, 57657, 334, 57658, 335, 57659, 336,
	57660, 337, 57661, 338, 57662, 339, 57663, 340, 57664, 341,
	57665, 342, 57666, 343, 57667, 344, 57668, 345, 57669, 346,
	57670, 347, 57671, 348, 57672, 349, 57673, 350, 57674, 351,
	57675, 352, 57676, 353, 57677, 354, 57678, 355, 57679, 356,
	57680, 357, 57681, 358, 57682, 359, 57683, 360, 57684, 361,
	57685, 362, 57686, 363, 57687, 364, 57688, 365, 57689, 366,
	57690, 367, 57691, 368, 57692, 369, 57693, 370, 57694, 371,
	57695, 372, 57696, 373, 57697, 374, 57698, 375, 57699, 376,
	57700, 377, 57701, 378, 57702, 379, 57703, 380, 57704, 381,
	57705, 382, 57706, 383, 57707, 384, 57708, 385, 57709, 386,
	57710, 387, 57711, 388, 57712, 389, 57713, 390, 57714, 391,
	57715, 392, 57716, 393, 57717, 394, 57718, 395, 57719, 396,
	57720, 397, 57721, 398, 57722, 399, 57723, 400, 57724, 401,
	57725, 402, 57726, 403, 57727, 404, 57728, 405, 57729, 406,
	57730, 407, 57731, 408, 57732, 409, 57733, 410, 57734, 411,
	57735, 412, 57736, 413, 57737, 414, 57738, 415, 57739, 416,
	57740, 417, 57741, 418, 57742, 419, 57743, 420, 57744, 421,
	57745, 422, 57746, 423, 57747, 424, 57748, 425, 57749, 426,
	57750, 427, 57751, 428, 57752, 429, 57753, 430, 57754, 431,
	57755, 432, 57756, 433, 57757, 434, 57758, 435, 57759, 436,
	57760, 437, 57761, 438, 57762, 439, 57763, 440, 57764, 441,
	57765, 442, 57766, 443, 57767, 444, 57768, 445, 57769, 446,
	57770, 447, 57771, 448, 57772, 449, 57773, 450, 57774, 451,
	57775, 452, 57776, 453, 57777, 454, 57778, 455, 57779, 456,
	57780, 457, 57781, 458, 57782, 459, 57783, 460, 57784, 461,
	57785, 462, 57786, 463, 57787, 464, 57788, 465, 57789, 466,
	57790, 467, 57791, 468, 57792, 469, 57793, 470, 57794, 471,
	57795, 472, 57796, 473, 57797, 474, 57798, 475, 57799, 476,
	57800, 477, 57801, 478, 57802, 479, 57803, 480, 57804, 481,
	57805, 482, 57806, 483, 57807, 484, 57808, 485, 57809, 486,
	57810, 487, 57811, 488, 57812, 489, 57813, 490, 57814, 491,
	57815, 492, 57816, 493, 57817, 494, 57818, 495, 57819, 496,
	57820, 497, 57821, 498, 57822, 499, 57823, 500, 57824, 501,
	57825, 502, 57826, 503, 57827, 504, 57828, 505, 57829, 506,
	57830, 507, 57831, 508, 57832, 509, 57833, 510, 57834, 511,
	57835, 512, 57836, 513, 57837, 514, 57838, 515, 57839, 516,
	57840, 517, 57841, 518, 57842, 519, 57843, 520, 57844, 521,
	57845, 522, 57846, 523, 57847, 524, 57848, 525, 57849, 526,
	57850, 527, 57851, 528, 57852, 529, 57853, 530, 57854, 531,
	57855, 532, 57856, 533, 57857, 534, 57858, 535, 57859, 536,
	57860, 537, 57861, 538, 57862, 539, 57863, 540, 57864, 541,
	57865, 542, 57866, 543, 57867, 544, 57868, 545, 57869, 546,
	57870, 547, 57871, 548, 57872, 549, 57873, 550, 57874, 551,
	57875, 552, 57876, 553, 57877, 554, 57878, 555, 57879, 556,
	57880, 557, 57881, 558, 57882, 559, 57883, 560, 57884, 561,
	57885, 562, 57886, 563, 57887, 564, 57888, 565, 57889, 566,
	57890, 567, 57891, 568, 57892, 569, 57893, 570, 57894, 571,
	57895, 572, 57896, 573, 57897, 574, 57898, 575, 57899, 576,
	57900, 577, 57901, 578, 57902, 579, 57903, 580, 57904, 581,
	57905, 582, 57906, 583, 57907, 584, 57908, 585, 57909, 586,
	57910, 587, 57911, 588, 57912, 589, 57913, 590, 57914, 591,
	57915, 592, 57916, 593, 57917, 594, 57918, 595, 57919, 596,
	57920, 597, 57921, 598, 57922, 599, 57923, 600, 57924, 601,
	57925, 602, 57926, 603, 57927, 604, 57928, 605, 57929, 606,
	57930, 607, 57931, 608, 57932, 609, 57933, 610, 57934, 611,
	57935, 612, 57936, 613, 57937, 614, 57938, 615, 57939, 616,
	57940, 617, 57941, 618, 57942, 619, 57943, 620, 57944, 621,
	57945, 622, 57946, 623, 57947, 624, 57948, 625, 57949, 626,
	57950, 627, 57951, 628, 57952, 629, 57953, 630, 57954, 631,
	57955, 632, 57956, 633, 57957, 634, 57958, 635, 57959, 636,
	57960, 637, 57961, 638, 57962, 639, 57963, 640, 57964, 641,
	57965, 642, 57966, 643, 57967, 644, 57968, 645, 57969, 646,
	57970, 647, 57971, 648, 57972, 649, 57973, 650, 57974, 651,
	57975, 652, 57976, 653, 57977, 654, 57978, 655, 57979, 656,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:564
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:568
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:575
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 39:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:614
		{
			setParseTree(yylex, nil)
		}
	case 40:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:620
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 41:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:626
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			if err := yyDollar[1].selStmt.SetInto(yyDollar[5].into); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 42:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:637
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:643
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 44:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:653
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:660
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:664
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:670
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:674
		{
			yyDollar[3].selStmt.SetWith(yyDollar[2].with)
			yyVAL.selStmt = yyDollar[3].selStmt
		}
	case 49:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:681
		{
			yyVAL.with = &With{Ctes: yyDollar[2].tableExprs, Recursive: true}
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:684
		{
			yyVAL.with = &With{Ctes: yyDollar[1].tableExprs, Recursive: false}
		}
	case 51:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:690
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr), Window: yyDollar[13].window, Into: yyDollar[8].into}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 52:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:698
		{
			yyVAL.tableExprs = nil
		}
	case 53:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:702
		{
			yyVAL.tableExprs = nil
		}
	case 54:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:706
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 55:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:715
		{
			yyVAL.into = nil
		}
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:719
		{
			yyVAL.into = &Into{Variables: yyDollar[2].variables}
		}
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:723
		{
			yyVAL.into = &Into{Outfile: string(yyDollar[3].bytes)}
		}
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:727
		{
			yyVAL.into = &Into{Dumpfile: string(yyDollar[3].bytes)}
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:733
		{
			yyVAL.variables = Variables{yyDollar[1].colIdent}
		}
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:737
		{
			yyVAL.variables = append(yyVAL.variables, yyDollar[3].colIdent)
		}
	case 61:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:742
		{
			yyVAL.with = nil
		}
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:746
		{
			yyVAL.with = yyDollar[2].with
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:752
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:756
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 65:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:762
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[4].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[2].columns}
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:768
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:776
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:782
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:790
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 70:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:796
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[7].ins
			ins.Action = yyDollar[2].str
			ins.Comments = yyDollar[3].bytes2
			ins.Ignore = yyDollar[4].str
			ins.Table = yyDollar[5].tableName
			ins.Partitions = yyDollar[6].partitions
			ins.OnDup = OnDup(yyDollar[8].assignExprs)
			ins.With = yyDollar[1].with
			yyVAL.statement = ins
		}
	case 71:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:809
		{
			cols := make(Columns, 0, len(yyDollar[8].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[9].assignExprs))
			for _, updateList := range yyDollar[8].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[2].str, Comments: Comments(yyDollar[3].bytes2), Ignore: yyDollar[4].str, Table: yyDollar[5].tableName, Partitions: yyDollar[6].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[9].assignExprs), With: yyDollar[1].with}
		}
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:821
		{
			yyVAL.str = InsertStr
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:825
		{
			yyVAL.str = ReplaceStr
		}
	case 74:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:831
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[3].bytes2), Ignore: yyDollar[4].str, TableExprs: yyDollar[5].tableExprs, Exprs: yyDollar[7].assignExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), OrderBy: yyDollar[9].orderBy, Limit: yyDollar[10].limit, With: yyDollar[1].with}
		}
	case 75:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:837
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitions, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit, With: yyDollar[1].with}
		}
	case 76:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:841
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[5].tableNames, TableExprs: yyDollar[7].tableExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), With: yyDollar[1].with}
		}
	case 77:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:845
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), With: yyDollar[1].with}
		}
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:849
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), With: yyDollar[1].with}
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:854
		{
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:855
		{
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:859
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 82:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:863
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:869
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:873
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:879
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:883
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 87:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:888
		{
			yyVAL.partitions = nil
		}
	case 88:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:892
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:898
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 90:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:902
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 91:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:909
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:918
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:922
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:928
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 95:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:932
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 96:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:936
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:942
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 98:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:946
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 99:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:950
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:954
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 101:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:959
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 102:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:964
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 103:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:969
		{
			yyVAL.boolean = yySpecialCommentMode(yylex)
		}
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:975
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:984
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:989
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 107:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:994
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 108:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:998
		{
			yyDollar[2].viewSpec.ViewName = yyDollar[4].tableName.ToViewName()
			yyDollar[2].viewSpec.ViewExpr = yyDollar[8].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[2].viewSpec, SpecialCommentMode: yyDollar[7].boolean, SubStatementPositionStart: yyDollar[6].int, SubStatementPositionEnd: yyDollar[9].int - 1}
		}
	case 109:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1004
		{
			yyDollar[4].viewSpec.ViewName = yyDollar[6].tableName.ToViewName()
			yyDollar[4].viewSpec.ViewExpr = yyDollar[10].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[4].viewSpec, SpecialCommentMode: yyDollar[9].boolean, SubStatementPositionStart: yyDollar[8].int, SubStatementPositionEnd: yyDollar[11].int - 1, OrReplace: true}
		}
	case 110:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1010
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 111:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1018
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 112:
		yyDollar = yyS[yypt-16 : yypt+1]
//line sql.y:1026
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName, Definer: yyDollar[2].str, Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[15].statement}, SpecialCommentMode: yyDollar[14].boolean, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[16].int - 1}
		}
	case 113:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1030
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName, Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[11].statement}, SpecialCommentMode: yyDollar[10].boolean, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[12].int - 1}
		}
	case 114:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1034
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].tlsOptionItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].accountLimitItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].passLockItems)
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames, TLSOptions: tlsOptions, AccountLimits: accountLimits, PasswordOptions: passwordOptions, Locked: locked, Attribute: yyDollar[9].str}
		}
	case 115:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1053
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 116:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1062
		{
			yyVAL.accountNames = nil
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1066
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1071
		{
			yyVAL.tlsOptionItems = nil
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1075
		{
			yyVAL.tlsOptionItems = nil
		}
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1079
		{
			yyVAL.tlsOptionItems = yyDollar[2].tlsOptionItems
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1085
		{
			yyVAL.tlsOptionItems = []TLSOptionItem{yyDollar[1].tlsOptionItem}
		}
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1089
		{
			yyVAL.tlsOptionItems = append(yyDollar[1].tlsOptionItems, yyDollar[3].tlsOptionItem)
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1095
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1099
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1103
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1107
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1111
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 128:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1116
		{
			yyVAL.accountLimitItems = nil
		}
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1120
		{
			yyVAL.accountLimitItems = yyDollar[2].accountLimitItems
		}
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1126
		{
			yyVAL.accountLimitItems = []AccountLimitItem{yyDollar[1].accountLimitItem}
		}
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1130
		{
			yyVAL.accountLimitItems = append(yyDollar[1].accountLimitItems, yyDollar[2].accountLimitItem)
		}
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1136
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1140
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1144
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1148
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 136:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1153
		{
			yyVAL.passLockItems = nil
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1157
		{
			yyVAL.passLockItems = yyDollar[1].passLockItems
		}
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1163
		{
			yyVAL.passLockItems = []PassLockItem{yyDollar[1].passLockItem}
		}
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1167
		{
			yyVAL.passLockItems = append(yyDollar[1].passLockItems, yyDollar[2].passLockItem)
		}
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1173
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1177
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 142:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1181
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1185
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1189
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1193
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 146:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1197
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1201
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1205
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1209
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1213
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1217
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1221
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1225
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 154:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1230
		{
			yyVAL.str = ""
		}
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1234
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.str = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1239
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 157:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1245
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 158:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1250
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[5].grantObjectType, PrivilegeLevel: yyDollar[6].privilegeLevel, To: yyDollar[8].accountNames, WithGrantOption: yyDollar[9].boolean, As: yyDollar[10].grantAssumption}
		}
	case 159:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1255
		{
			yyVAL.statement = &GrantPrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 160:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1259
		{
			yyVAL.statement = &GrantRole{Roles: yyDollar[2].accountNames, To: yyDollar[4].accountNames, WithAdminOption: yyDollar[5].boolean}
		}
	case 161:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1263
		{
			yyVAL.statement = &GrantProxy{On: yyDollar[4].accountName, To: yyDollar[6].accountNames, WithGrantOption: yyDollar[7].boolean}
		}
	case 162:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1269
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &RevokePrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 163:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1274
		{
			yyVAL.statement = &RevokePrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 164:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1278
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[7].accountNames}
		}
	case 165:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1282
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[8].accountNames}
		}
	case 166:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1286
		{
			yyVAL.statement = &RevokeRole{Roles: yyDollar[2].accountNames, From: yyDollar[4].accountNames}
		}
	case 167:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1290
		{
			yyVAL.statement = &RevokeProxy{On: yyDollar[4].accountName, From: yyDollar[6].accountNames}
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1296
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].strs}
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1300
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].strs}
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1304
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].strs}
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1308
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].strs}
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1312
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].strs}
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1316
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].strs}
		}
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1320
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].strs}
		}
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1324
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].strs}
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1328
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].strs}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1332
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].strs}
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1336
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].strs}
		}
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1340
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].strs}
		}
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1344
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].strs}
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1348
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].strs}
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1352
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].strs}
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1356
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_GrantOption, Columns: yyDollar[3].strs}
		}
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1360
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].strs}
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1364
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].strs}
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1368
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].strs}
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1372
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].strs}
		}
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1376
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].strs}
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1380
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].strs}
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1384
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].strs}
		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1388
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].strs}
		}
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1392
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].strs}
		}
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1396
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].strs}
		}
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1400
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].strs}
		}
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1404
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].strs}
		}
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1408
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].strs}
		}
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1412
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].strs}
		}
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1416
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].strs}
		}
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1420
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].strs}
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1426
		{
			yyVAL.grantPrivileges = []Privilege{yyDollar[1].grantPrivilege}
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1430
		{
			yyVAL.grantPrivileges = append(yyDollar[1].grantPrivileges, yyDollar[3].grantPrivilege)
		}
	case 202:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1435
		{
			yyVAL.strs = nil
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1439
		{
			yyVAL.strs = yyDollar[2].strs
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1445
		{
			yyVAL.strs = []string{yyDollar[1].colIdent.String()}
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1449
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].colIdent.String())
		}
	case 206:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1454
		{
			yyVAL.grantObjectType = GrantObjectType_Any
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1458
		{
			yyVAL.grantObjectType = GrantObjectType_Table
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1462
		{
			yyVAL.grantObjectType = GrantObjectType_Function
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1466
		{
			yyVAL.grantObjectType = GrantObjectType_Procedure
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1472
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1476
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1480
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].colIdent.String()}
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1484
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: "*"}
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1488
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: yyDollar[3].colIdent.String()}
		}
	case 215:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1493
		{
			yyVAL.grantAssumption = nil
		}
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1497
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 217:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1501
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 218:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1505
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].accountName, Roles: nil}
		}
	case 219:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1509
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].accountName, Roles: nil}
		}
	case 220:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1513
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].accountName, Roles: yyDollar[7].accountNames}
		}
	case 221:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1517
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].accountName, Roles: yyDollar[5].accountNames}
		}
	case 222:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1522
		{
			yyVAL.boolean = false
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1526
		{
			yyVAL.boolean = true
		}
	case 224:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1531
		{
			yyVAL.boolean = false
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1535
		{
			yyVAL.boolean = true
		}
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1542
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 227:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1554
		{
			yyVAL.procedureParams = nil
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1558
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1564
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1568
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1574
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[1].colIdent.String(), Type: yyDollar[2].columnType}
		}
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1578
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1582
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1586
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 235:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1591
		{
			yyVAL.characteristics = nil
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1595
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1601
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1605
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 239:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1611
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1615
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1619
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1623
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1627
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1631
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1635
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1639
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1643
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1647
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1653
		{
			yyVAL.statement = &BeginEndBlock{Label: ""}
		}
	case 250:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1657
		{
			yyVAL.statement = &BeginEndBlock{Label: string(yyDollar[1].bytes)}
		}
	case 251:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1661
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[5].bytes) {
				yylex.Error("End-label " + string(yyDollar[5].bytes) + " without match")
				return 1
			}
			yyVAL.statement = &BeginEndBlock{Label: label}
		}
	case 252:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1670
		{
			yyVAL.statement = &BeginEndBlock{Label: "", Statements: yyDollar[2].statements}
		}
	case 253:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1674
		{
			yyVAL.statement = &BeginEndBlock{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].statements}
		}
	case 254:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1678
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[7].bytes) {
				yylex.Error("End-label " + string(yyDollar[7].bytes) + " without match")
				return 1
			}
			yyVAL.statement = &BeginEndBlock{Label: label, Statements: yyDollar[4].statements}
		}
	case 255:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1689
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: "", Definer: yyDollar[1].str, Security: yyDollar[2].str}
		}
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1693
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: yyDollar[1].str, Definer: yyDollar[2].str, Security: yyDollar[3].str}
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1699
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1703
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1707
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 260:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1712
		{
			yyVAL.str = ""
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1716
		{
			yyVAL.str = yyDollar[3].accountName.String()
		}
	case 262:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1721
		{
			yyVAL.str = ""
		}
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1725
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 264:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1729
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1735
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1739
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1743
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 268:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1749
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1757
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1761
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1767
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1771
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1777
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 274:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1785
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1793
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1803
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1807
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1813
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1817
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 280:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1821
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1825
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 282:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1829
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 283:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1835
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1839
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1843
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 286:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1847
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 287:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1851
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 288:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1855
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 289:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1861
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1865
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 291:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1869
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1875
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1879
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1885
		{
			yyVAL.str = BeforeStr
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1889
		{
			yyVAL.str = AfterStr
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1895
		{
			yyVAL.str = InsertStr
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1899
		{
			yyVAL.str = UpdateStr
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1903
		{
			yyVAL.str = DeleteStr
		}
	case 299:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1908
		{
			yyVAL.triggerOrder = nil
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1912
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1916
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1922
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 307:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1932
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 308:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1938
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 309:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1942
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 310:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1946
		{
			yyVAL.statement = &CaseStatement{Expr: nil, Cases: yyDollar[2].caseStatementCases}
		}
	case 311:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1950
		{
			yyVAL.statement = &CaseStatement{Expr: nil, Cases: yyDollar[2].caseStatementCases, Else: yyDollar[4].statements}
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1956
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1960
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 314:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1966
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 315:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1972
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 316:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1977
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 317:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1982
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 318:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1988
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1996
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2000
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 321:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2006
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 322:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2012
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 323:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2016
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 324:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2020
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 325:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2024
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 326:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2028
		{
			yyDollar[3].columnType.Charset = yyDollar[4].str
			yyDollar[3].columnType.Collate = yyDollar[5].str
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 327:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2034
		{
			yyDollar[3].columnType.Charset = yyDollar[4].str
			yyDollar[3].columnType.Collate = yyDollar[5].str
			yyDollar[3].columnType.Default = yyDollar[7].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2043
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2047
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2051
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2057
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2061
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2067
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2071
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2075
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2079
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2083
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2087
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2093
		{
			yyVAL.statement = &OpenCursor{Name: string(yyDollar[2].bytes)}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2099
		{
			yyVAL.statement = &CloseCursor{Name: string(yyDollar[2].bytes)}
		}
	case 341:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2105
		{
			yyVAL.statement = &FetchCursor{Name: string(yyDollar[3].bytes), Variables: yyDollar[5].strs}
		}
	case 342:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2110
		{
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2113
		{
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2117
		{
			yyVAL.strs = []string{string(yyDollar[1].bytes)}
		}
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2121
		{
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[3].bytes))
		}
	case 347:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2127
		{
			yyVAL.statement = &Loop{Label: "", Statements: yyDollar[2].statements}
		}
	case 348:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2131
		{
			yyVAL.statement = &Loop{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].statements}
		}
	case 349:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2135
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[8].bytes) {
				yylex.Error("End-label " + string(yyDollar[8].bytes) + " without match")
				return 1
			}
			yyVAL.statement = &Loop{Label: label, Statements: yyDollar[4].statements}
		}
	case 350:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2146
		{
			yyVAL.statement = &Repeat{Label: "", Statements: yyDollar[2].statements, Condition: yyDollar[5].expr}
		}
	case 351:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2150
		{
			yyVAL.statement = &Repeat{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].statements, Condition: yyDollar[7].expr}
		}
	case 352:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2154
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[10].bytes) {
				yylex.Error("End-label " + string(yyDollar[10].bytes) + " without match")
				return 1
			}
			yyVAL.statement = &Repeat{Label: label, Statements: yyDollar[4].statements, Condition: yyDollar[7].expr}
		}
	case 353:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2165
		{
			yyVAL.statement = &While{Label: "", Condition: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 354:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2169
		{
			yyVAL.statement = &While{Label: string(yyDollar[1].bytes), Condition: yyDollar[4].expr, Statements: yyDollar[6].statements}
		}
	case 355:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2173
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[10].bytes) {
				yylex.Error("End-label " + string(yyDollar[10].bytes) + " without match")
				return 1
			}
			yyVAL.statement = &While{Label: label, Condition: yyDollar[4].expr, Statements: yyDollar[6].statements}
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2184
		{
			yyVAL.statement = &Leave{Label: string(yyDollar[2].bytes)}
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2190
		{
			yyVAL.statement = &Iterate{Label: string(yyDollar[2].bytes)}
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2196
		{
			yyVAL.statement = &Return{Expr: yyDollar[2].expr}
		}
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2202
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 360:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2206
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2210
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 362:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2214
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2220
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2224
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2230
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2234
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2240
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2246
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2250
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2254
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2258
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2262
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2266
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2270
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2274
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2278
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2282
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2286
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2290
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2296
		{
			yyVAL.statement = &Resignal{}
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2300
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 382:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2304
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2308
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2312
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 385:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2316
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 386:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2322
		{
			yyVAL.statement = &Call{ProcName: yyDollar[2].procedureName, Params: yyDollar[3].exprs, AsOf: yyDollar[4].expr}
		}
	case 387:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2327
		{
			yyVAL.exprs = nil
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2331
		{
			yyVAL.exprs = nil
		}
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2335
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2341
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2345
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2351
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 434:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2398
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
		}
	case 435:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2412
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: TableName{Name: NewTableIdent(string(yyDollar[5].bytes))}, IfNotExists: ne, Temporary: neTemp}
		}
	case 436:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2428
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str + yyDollar[5].str
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2435
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2440
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2445
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2451
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 441:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2455
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2460
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2464
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2468
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2474
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2482
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2492
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2500
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2508
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2516
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2524
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 452:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2533
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2537
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2541
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 455:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2546
		{
			yyVAL.columnType = ColumnType{}
		}
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2550
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2559
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 458:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2568
		{
			opt := ColumnType{Charset: yyDollar[2].str}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 459:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2577
		{
			opt := ColumnType{Collate: yyDollar[2].str}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 460:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2586
		{
			opt := ColumnType{BinaryCollate: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2595
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2604
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2613
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2622
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2631
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 466:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2640
		{
			opt := ColumnType{GeneratedExpr: yyDollar[4].expr, Stored: yyDollar[6].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 467:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2649
		{
			opt := ColumnType{GeneratedExpr: yyDollar[6].expr, Stored: yyDollar[8].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2658
		{
			opt := ColumnType{SRID: NewIntVal(yyDollar[3].bytes)}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2669
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2680
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2685
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2691
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2695
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2699
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2703
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2707
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2711
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2715
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2719
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2723
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2727
		{
			yyVAL.columnType = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2733
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2739
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2745
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2751
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2757
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2763
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2769
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2775
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2783
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2787
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2791
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2795
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2799
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2805
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2809
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2813
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2817
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2821
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2825
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2829
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2833
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2837
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 507:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2841
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2845
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2849
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2853
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2857
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2861
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2865
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2869
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 515:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2873
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2877
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2881
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2885
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2889
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2893
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 521:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2897
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs}
		}
	case 522:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2902
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs}
		}
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2908
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2912
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2916
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2920
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2924
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2928
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2932
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2936
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2942
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2947
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 533:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2952
		{
			yyVAL.sqlVal = nil
		}
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2956
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 535:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2961
		{
			yyVAL.sqlVal = nil
		}
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2965
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2969
		{
			yyVAL.sqlVal = NewValArg(yyDollar[2].bytes)
		}
	case 538:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2974
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 539:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2978
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 540:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2986
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2990
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 542:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2996
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 543:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3004
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3008
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3012
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 546:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3017
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3021
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3027
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3031
		{
			if num, ok := yyDollar[3].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.optVal = num
				} else {
					yyVAL.optVal = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.optVal = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[3].expr}
			}
		}
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3045
		{
			yyVAL.optVal = yyDollar[2].boolVal
		}
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3049
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 552:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3053
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes)), Exprs: yyDollar[4].selectExprs}
		}
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3057
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 554:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3061
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes)), Exprs: yyDollar[4].selectExprs}
		}
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3065
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 556:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3069
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes)), Exprs: yyDollar[4].selectExprs}
		}
	case 557:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3073
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 558:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3077
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes)), Exprs: yyDollar[4].selectExprs}
		}
	case 559:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3081
		{
			yyVAL.optVal = &ParenExpr{yyDollar[3].expr}
		}
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3087
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3093
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 562:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3098
		{
			yyVAL.str = ""
		}
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3102
		{
			yyVAL.str = yyDollar[1].str
		}
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3108
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3112
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 566:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3117
		{
			yyVAL.str = ""
		}
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3121
		{
			yyVAL.str = yyDollar[1].str
		}
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3127
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3131
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 570:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3136
		{
			yyVAL.boolean = false
		}
	case 571:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3140
		{
			yyVAL.boolean = true
		}
	case 572:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3145
		{
			yyVAL.charsetCollates = nil
		}
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3149
		{
			yyVAL.charsetCollates = yyDollar[1].charsetCollates
		}
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3155
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 575:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3159
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3163
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3167
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3171
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3175
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 580:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3181
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 581:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3185
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 582:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3189
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 583:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3193
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 584:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3197
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 585:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3201
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 586:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3207
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 587:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3211
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 588:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3215
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 589:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3221
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3227
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3231
		{
			yyVAL.colKeyOpt = colKey
		}
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3235
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3239
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3243
		{
			yyVAL.colKeyOpt = colKeyFulltextKey
		}
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3249
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3255
		{
			yyVAL.statement = &Flush{Type: yyDollar[2].str, Option: yyDollar[3].flushOption}
		}
	case 597:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3261
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3265
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3269
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3273
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3277
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3281
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 603:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3285
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3289
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3293
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].str}
		}
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3297
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3301
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3305
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 609:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3310
		{
			yyVAL.str = ""
		}
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3312
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3316
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3318
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 613:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3321
		{
			yyVAL.str = ""
		}
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3323
		{
			yyVAL.str = yyDollar[1].str
		}
	case 615:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3327
		{
			yyVAL.statement = &ChangeReplicationSource{Options: yyDollar[5].replicationOptions}
		}
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3331
		{
			yyVAL.statement = &StartReplica{}
		}
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3335
		{
			yyVAL.statement = &StopReplica{}
		}
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3339
		{
			yyVAL.statement = &ResetReplica{All: yyDollar[3].boolean}
		}
	case 619:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3344
		{
			yyVAL.boolean = false
		}
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3346
		{
			yyVAL.boolean = true
		}
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3351
		{
			yyVAL.replicationOptions = []*ReplicationOption{yyDollar[1].replicationOption}
		}
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3355
		{
			yyVAL.replicationOptions = append(yyVAL.replicationOptions, yyDollar[3].replicationOption)
		}
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3361
		{
			yyVAL.replicationOption = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3365
		{
			yyVAL.replicationOption = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3369
		{
			yyVAL.replicationOption = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3373
		{
			yyVAL.replicationOption = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 627:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3379
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 628:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3383
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 629:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3388
		{
			yyVAL.indexOptions = nil
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3392
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3398
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3402
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3408
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3412
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3417
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 636:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3423
		{
			yyVAL.str = ""
		}
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3427
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3435
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 639:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3439
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3443
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3447
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true}
		}
	case 642:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3451
		{
			var name string
			name = yyDollar[2].str
			if name == "" {
				name = yyDollar[5].str
			}
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].str), Name: NewColIdent(name), Unique: true}
		}
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3460
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3464
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3468
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3474
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3478
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3482
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3488
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3492
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 651:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3497
		{
			yyVAL.str = ""
		}
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3501
		{
			yyVAL.str = yyDollar[1].str
		}
	case 653:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3506
		{
			yyVAL.str = ""
		}
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3510
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3516
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3520
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3526
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3530
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3536
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3540
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3544
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 662:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3550
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 663:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3554
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 664:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3558
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 665:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3562
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 666:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3566
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3572
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3577
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3581
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3585
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3589
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 672:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3595
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3601
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3605
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 675:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3610
		{
			yyVAL.str = ""
		}
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3614
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3618
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3624
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3630
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3636
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3640
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3644
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3648
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3652
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 685:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3657
		{
			yyVAL.boolean = true
		}
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3661
		{
			yyVAL.boolean = true
		}
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3665
		{
			yyVAL.boolean = false
		}
	case 688:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3670
		{
			yyVAL.str = ""
		}
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3674
		{
			yyVAL.str = yyDollar[1].str + " " + string(yyDollar[2].str)
		}
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3678
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3684
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3688
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3692
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3696
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].str) + " "
		}
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3700
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + yyDollar[3].str
		}
	case 696:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3704
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + yyDollar[4].str
		}
	case 697:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3708
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + yyDollar[5].str
		}
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3712
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3716
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3720
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[4].bytes)
		}
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3724
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3728
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3732
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 704:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3736
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + "'" + string(yyDollar[4].bytes) + "'"
		}
	case 705:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3740
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + "'" + string(yyDollar[4].bytes) + "'"
		}
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3744
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3748
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3752
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3756
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3760
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3764
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3768
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3772
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3776
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3780
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3784
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3788
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3792
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3796
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3800
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3804
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3808
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3812
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3816
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3820
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3824
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str
		}
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3828
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 728:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3832
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)
		}
	case 729:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3836
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)
		}
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3840
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3846
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3850
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3855
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3859
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3863
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3869
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3873
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3877
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3881
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3885
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3889
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3900
		{
			yyVAL.str = ""
		}
	case 746:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3904
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + yyDollar[3].str + yyDollar[4].str + yyDollar[5].str
		}
	case 747:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3908
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + yyDollar[3].str + yyDollar[4].str + yyDollar[5].str + "(partition_definitions)"
		}
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3914
		{
			yyVAL.str = yyDollar[1].str
		}
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3918
		{
			yyVAL.str = string(yyDollar[1].bytes) + " (" + string(yyDollar[3].bytes) + ")"
		}
	case 750:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3922
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " (column_list)"
		}
	case 751:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3926
		{
			yyVAL.str = string(yyDollar[1].bytes) + " (" + string(yyDollar[3].bytes) + ")"
		}
	case 752:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3930
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " (column_list)"
		}
	case 753:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3936
		{
			yyVAL.str = yyDollar[1].str + string(yyDollar[2].bytes) + " (value)"
		}
	case 754:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3940
		{
			yyVAL.str = yyDollar[1].str + string(yyDollar[2].bytes) + " (" + string(yyDollar[4].bytes) + ")"
		}
	case 755:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3944
		{
			yyVAL.str = yyDollar[1].str + string(yyDollar[2].bytes) + " (column_list)"
		}
	case 756:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3948
		{
			yyVAL.str = yyDollar[1].str + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[5].bytes) + " (column_list)"
		}
	case 757:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3953
		{
			yyVAL.str = ""
		}
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3957
		{
			yyVAL.str = string(yyDollar[1].bytes) + " "
		}
	case 759:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3962
		{
			yyVAL.str = ""
		}
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3966
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " "
		}
	case 761:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3971
		{
			yyVAL.str = ""
		}
	case 762:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3975
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + yyDollar[3].str + " " + yyDollar[4].str
		}
	case 763:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3980
		{
			yyVAL.str = ""
		}
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3984
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " "
		}
	case 765:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3989
		{
			yyVAL.str = ""
		}
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3993
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 767:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3998
		{
			yyVAL.str = string("")
		}
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4002
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4012
		{
			yyVAL.statement = &DBDDL{Action: AlterStr, DBName: string(yyDollar[3].bytes), CharsetCollate: yyDollar[4].charsetCollates}
		}
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4016
		{
			yyVAL.statement = &DBDDL{Action: AlterStr, CharsetCollate: yyDollar[3].charsetCollates}
		}
	case 773:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4022
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4035
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4039
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 776:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4045
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 777:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4052
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4059
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 779:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4063
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4067
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 781:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4072
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 782:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:4076
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4080
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4085
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4090
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4095
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4100
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4105
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4110
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4115
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4120
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4125
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4130
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 794:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4134
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 795:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4138
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 796:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4145
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4151
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4155
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4161
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 800:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4167
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4172
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 802:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4176
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 803:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4180
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4184
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 805:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:4190
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[7].indexColumns, Options: yyDollar[9].indexOptions}
			yyVAL.ddl = ddl
		}
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4196
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4200
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 808:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4205
		{
			yyVAL.columnOrder = nil
		}
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4209
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4213
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 811:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4218
		{
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4220
		{
		}
	case 813:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4224
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4230
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4234
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 816:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4240
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 817:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4244
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4250
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4254
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4260
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 821:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4264
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4272
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 823:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4276
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 824:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4282
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 825:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4290
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 826:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4294
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 827:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4302
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 828:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4310
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 829:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4318
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName}, IfExists: exists}
		}
	case 830:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4326
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName}, IfExists: exists}
		}
	case 831:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4334
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 832:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4342
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 833:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4351
		{

		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4355
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4359
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4365
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4369
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4375
		{
			yyVAL.statement = &Analyze{Tables: yyDollar[3].tableNames}
		}
	case 839:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4381
		{
			yyVAL.statement = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].bytes)}
		}
	case 840:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4385
		{
			yyVAL.statement = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].bytes)}
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4391
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4395
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4402
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4406
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 845:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4412
		{
			yyVAL.statement = &Execute{Name: string(yyDollar[2].bytes)}
		}
	case 846:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4416
		{
			yyVAL.statement = &Execute{Name: string(yyDollar[2].bytes)}
		}
	case 847:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4420
		{
			yyVAL.statement = &Execute{Name: string(yyDollar[2].bytes), VarList: yyDollar[4].strs}
		}
	case 848:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4424
		{
			yyVAL.statement = &Execute{Name: string(yyDollar[2].bytes), VarList: yyDollar[4].strs}
		}
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4430
		{
			yyVAL.statement = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4434
		{
			yyVAL.statement = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4438
		{
			yyVAL.statement = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4442
		{
			yyVAL.statement = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4448
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 854:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4453
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4457
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 856:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4461
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 857:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4465
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 858:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4469
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 859:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4474
		{
			yyVAL.statement = &Show{Type: CreateProcedureStr, Table: yyDollar[4].tableName}
		}
	case 860:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4478
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 861:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4482
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4486
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4490
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4494
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 865:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4498
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4502
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 867:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4506
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4510
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 869:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4514
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 870:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4518
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 871:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4522
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 872:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4526
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, AsOf: yyDollar[7].expr, Filter: yyDollar[8].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, Table: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 873:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4531
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4536
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 875:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4540
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 876:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4544
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 877:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4548
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 878:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4552
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4558
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4566
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 881:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4570
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 882:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4575
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 883:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4579
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 884:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4584
		{
			yyVAL.statement = &ShowPrivileges{}
		}
	case 885:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4588
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 886:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4592
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4596
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4600
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4606
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 890:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4612
		{
			yyVAL.boolean = false
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4616
		{
			yyVAL.boolean = true
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4622
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4626
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 894:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4632
		{
			yyVAL.str = ""
		}
	case 895:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4636
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 896:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4640
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 897:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4646
		{
			yyVAL.showFilter = nil
		}
	case 898:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4650
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4654
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[3].bytes)}
		}
	case 900:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4658
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 901:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4664
		{
			yyVAL.str = ""
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4668
		{
			yyVAL.str = SessionStr
		}
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4672
		{
			yyVAL.str = GlobalStr
		}
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4678
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 905:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4682
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: yyDollar[2].tableIdent.v + "/" + yyDollar[4].tableIdent.v}}
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4686
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 907:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4691
		{
			yyVAL.bytes = nil
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4695
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 909:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4701
		{
			yyVAL.statement = &Begin{}
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4705
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4711
		{
			yyVAL.statement = &Begin{}
		}
	case 912:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4715
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 913:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4719
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 914:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4724
		{
			yyVAL.bytes = nil
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4728
		{
			yyVAL.bytes = nil
		}
	case 916:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4733
		{
			yyVAL.bytes = nil
		}
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4737
		{
			yyVAL.bytes = nil
		}
	case 918:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4742
		{
			yyVAL.bytes = nil
		}
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4746
		{
			yyVAL.bytes = nil
		}
	case 920:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4752
		{
			yyVAL.statement = &Commit{}
		}
	case 921:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4758
		{
			yyVAL.statement = &Rollback{}
		}
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4764
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4770
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 924:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4774
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 925:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4778
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 926:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4782
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 927:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4788
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4794
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 929:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4798
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[3].str, Statement: yyDollar[4].statement}
		}
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4802
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4808
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 935:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4816
		{
			yyVAL.str = ""
		}
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4820
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4832
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[3].expr}
			yyVAL.statement = &Show{Type: "columns", Table: yyDollar[2].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 941:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4838
		{
			setAllowComments(yylex, true)
		}
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4842
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 943:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4848
		{
			yyVAL.bytes2 = nil
		}
	case 944:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4852
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4858
		{
			yyVAL.str = UnionStr
		}
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4862
		{
			yyVAL.str = UnionAllStr
		}
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4866
		{
			yyVAL.str = UnionDistinctStr
		}
	case 948:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4871
		{
			yyVAL.byt = 0
		}
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4875
		{
			yyVAL.byt = 1
		}
	case 950:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4880
		{
			yyVAL.str = ""
		}
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4884
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4888
		{
			yyVAL.str = SQLCacheStr
		}
	case 953:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4893
		{
			yyVAL.str = ""
		}
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4897
		{
			yyVAL.str = ""
		}
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4901
		{
			yyVAL.str = DistinctStr
		}
	case 956:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4906
		{
			yyVAL.str = ""
		}
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4910
		{
			yyVAL.str = StraightJoinHint
		}
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4916
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 959:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4924
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4935
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4939
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4943
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 963:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4947
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4953
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4957
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4961
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 967:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4965
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4971
		{
			yyVAL.over = &Over{NameRef: yyDollar[2].colIdent}
		}
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4975
		{
			yyVAL.over = (*Over)(yyDollar[2].windowDef)
		}
	case 970:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4981
		{
			yyVAL.windowDef = &WindowDef{NameRef: yyDollar[2].colIdent, PartitionBy: yyDollar[3].exprs, OrderBy: yyDollar[4].orderBy, Frame: yyDollar[5].frame}
		}
	case 971:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4986
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4989
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 973:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4994
		{
			yyVAL.exprs = nil
		}
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4998
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 975:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5003
		{
			yyVAL.over = nil
		}
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5007
		{
			yyVAL.over = yyDollar[1].over
		}
	case 977:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5012
		{
			yyVAL.frame = nil
		}
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5016
		{
			yyVAL.frame = &Frame{Unit: RowsUnit, Extent: yyDollar[2].frameExtent}
		}
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5020
		{
			yyVAL.frame = &Frame{Unit: RangeUnit, Extent: yyDollar[2].frameExtent}
		}
	case 980:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5027
		{
			startBound := yyDollar[2].frameBound
			endBound := yyDollar[4].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound, End: endBound}
		}
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5050
		{
			startBound := yyDollar[1].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound}
		}
	case 982:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5065
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedPreceding}
		}
	case 983:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5069
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedFollowing}
		}
	case 984:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5073
		{
			yyVAL.frameBound = &FrameBound{Type: CurrentRow}
		}
	case 985:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5077
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprPreceding,
			}
		}
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5084
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprFollowing,
			}
		}
	case 987:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5092
		{
			yyVAL.window = nil
		}
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5095
		{
			yyVAL.window = yyDollar[2].window
		}
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5101
		{
			yyVAL.window = Window{yyDollar[1].windowDef}
		}
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5104
		{
			yyVAL.window = append(yyDollar[1].window, yyDollar[3].windowDef)
		}
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5110
		{
			def := yyDollar[3].windowDef
			def.Name = yyDollar[1].colIdent
			yyVAL.windowDef = def
		}
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5119
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5123
		{
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 994:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5128
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5132
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 996:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5136
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5140
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[2].bytes))
		}
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5146
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5150
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5154
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5158
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5162
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5166
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5172
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5176
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5186
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 1009:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5190
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5200
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5206
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 1014:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5214
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5220
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 1016:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5224
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5230
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 1018:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5235
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5246
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 1020:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5250
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 1021:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5254
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5258
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 1023:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5262
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 1024:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5273
		{
			yyVAL.expr = nil
		}
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5277
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 1026:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5282
		{
			yyVAL.columns = nil
		}
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5286
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5292
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5296
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5302
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5306
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 1032:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5312
		{
			yyVAL.tableExpr = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].selectExprs}
		}
	case 1033:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5326
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 1034:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5330
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 1035:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5334
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5338
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 1037:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5344
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 1038:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5346
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 1039:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5350
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5352
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 1041:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5356
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5358
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 1043:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5361
		{
			yyVAL.empty = struct{}{}
		}
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5363
		{
			yyVAL.empty = struct{}{}
		}
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5368
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5372
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5378
		{
			yyVAL.str = JoinStr
		}
	case 1049:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5382
		{
			yyVAL.str = JoinStr
		}
	case 1050:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5386
		{
			yyVAL.str = JoinStr
		}
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5392
		{
			yyVAL.str = StraightJoinStr
		}
	case 1052:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5398
		{
			yyVAL.str = LeftJoinStr
		}
	case 1053:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5402
		{
			yyVAL.str = LeftJoinStr
		}
	case 1054:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5406
		{
			yyVAL.str = RightJoinStr
		}
	case 1055:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5410
		{
			yyVAL.str = RightJoinStr
		}
	case 1056:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5414
		{
			yyVAL.str = FullOuterJoinStr
		}
	case 1057:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5418
		{
			yyVAL.str = FullOuterJoinStr
		}
	case 1058:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5424
		{
			yyVAL.str = NaturalJoinStr
		}
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5428
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 1060:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:5438
		{
			yyVAL.tableExpr = &JSONTableExpr{Data: yyDollar[3].expr, Path: string(yyDollar[5].bytes), Spec: yyDollar[8].TableSpec, Alias: yyDollar[12].tableIdent}
		}
	case 1061:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:5442
		{
			yyVAL.tableExpr = &JSONTableExpr{Data: yyDollar[3].expr, Path: string(yyDollar[5].bytes), Spec: yyDollar[8].TableSpec, Alias: yyDollar[11].tableIdent}
		}
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5448
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5453
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5461
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 1065:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5473
		{
			yyVAL.columnType = ColumnType{Path: string(yyDollar[2].bytes)}
		}
	case 1066:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5477
		{
			yyVAL.columnType = ColumnType{Path: string(yyDollar[3].bytes)}
		}
	case 1067:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5483
		{

		}
	case 1068:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5501
		{

		}
	case 1069:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5505
		{

		}
	case 1070:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5509
		{

		}
	case 1071:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5513
		{

		}
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5519
		{
			yyVAL.triggerName = TriggerName{Name: yyDollar[1].colIdent}
		}
	case 1073:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5523
		{
			yyVAL.triggerName = TriggerName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 1074:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5529
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 1075:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5535
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5539
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5545
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 1078:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5549
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5553
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5557
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5561
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5567
		{
			yyVAL.procedureName = ProcedureName{Name: yyDollar[1].colIdent}
		}
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5571
		{
			yyVAL.procedureName = ProcedureName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5577
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 1085:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5582
		{
			yyVAL.indexHints = nil
		}
	case 1086:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5586
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 1087:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5590
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 1088:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5594
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 1089:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5599
		{
			yyVAL.expr = nil
		}
	case 1090:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5603
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5609
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5613
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 1093:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5617
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 1094:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5621
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 1095:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5625
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 1096:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5629
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5633
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1098:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5637
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 1099:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5643
		{
			yyVAL.str = ""
		}
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5647
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5653
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5657
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1103:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5663
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 1104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5667
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 1105:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5671
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 1106:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5675
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 1107:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5679
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5683
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 1109:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5687
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 1110:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5691
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 1111:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5695
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 1112:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5699
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5705
		{
			yyVAL.str = IsNullStr
		}
	case 1114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5709
		{
			yyVAL.str = IsNotNullStr
		}
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5713
		{
			yyVAL.str = IsTrueStr
		}
	case 1116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5717
		{
			yyVAL.str = IsNotTrueStr
		}
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5721
		{
			yyVAL.str = IsFalseStr
		}
	case 1118:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5725
		{
			yyVAL.str = IsNotFalseStr
		}
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5731
		{
			yyVAL.str = EqualStr
		}
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5735
		{
			yyVAL.str = LessThanStr
		}
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5739
		{
			yyVAL.str = GreaterThanStr
		}
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5743
		{
			yyVAL.str = LessEqualStr
		}
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5747
		{
			yyVAL.str = GreaterEqualStr
		}
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5751
		{
			yyVAL.str = NotEqualStr
		}
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5755
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 1126:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5760
		{
			yyVAL.expr = nil
		}
	case 1127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5764
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5770
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5774
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5778
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 1131:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5784
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5790
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 1133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5794
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 1134:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5800
		{
			yyVAL.selectExprs = nil
		}
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5807
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 1137:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5811
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5817
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5821
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5827
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5831
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5835
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5839
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5843
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5847
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5851
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5855
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 1148:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5859
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 1149:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5863
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 1150:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5867
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 1151:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5871
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 1152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5875
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 1153:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5879
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 1154:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5883
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 1155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5887
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 1156:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5891
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 1157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5895
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 1158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5899
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 1159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5903
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 1160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5907
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 1161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5911
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 1162:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5915
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 1163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5919
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 1164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5923
		{
			yyVAL.expr = &UnaryExpr{Operator: yyDollar[1].str, Expr: yyDollar[2].expr}
		}
	case 1165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5927
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 1166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5935
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 1167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5949
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 1168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5953
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 1169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5957
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 1176:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5977
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 1177:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5981
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 1178:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5991
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1179:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5995
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1180:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5999
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1181:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6003
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1182:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6007
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1183:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6011
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1184:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6015
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1185:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6019
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1186:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6023
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1187:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6027
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1188:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6031
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1189:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6035
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1190:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6039
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1191:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6043
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1192:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6047
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1193:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6051
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1194:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6055
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1195:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6064
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1196:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6068
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1197:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6072
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 1198:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6076
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1199:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6080
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 1200:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6084
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1201:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6088
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1202:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6092
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1203:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6096
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1204:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6100
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1205:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6104
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1206:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6115
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1207:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6119
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1208:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6123
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1209:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6127
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1210:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6131
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1211:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6135
		{
			yyVAL.expr = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 1212:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6139
		{
			yyVAL.expr = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 1213:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6143
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1214:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6147
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1215:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6151
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 1216:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6155
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1217:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6159
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1218:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6163
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1219:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6167
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1220:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6171
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1221:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6175
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 1222:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6179
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 1223:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:6183
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 1224:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:6187
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 1225:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:6191
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 1226:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:6195
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 1227:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6199
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1228:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:6203
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 1229:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6207
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 1230:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6211
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 1231:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6215
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6225
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6229
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1234:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6233
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1235:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6238
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1236:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6243
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6248
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6254
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1239:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6259
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1240:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6263
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1241:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6268
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1242:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6272
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1243:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6276
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1244:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6281
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1245:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6286
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1246:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6291
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1247:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6295
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1248:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6299
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1251:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6310
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1252:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6320
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1253:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6324
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1254:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6328
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1255:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6332
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1256:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6336
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1257:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6340
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1258:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6346
		{
			yyVAL.str = ""
		}
	case 1259:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6350
		{
			yyVAL.str = BooleanModeStr
		}
	case 1260:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6354
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 1261:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:6358
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 1262:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6362
		{
			yyVAL.str = QueryExpansionStr
		}
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6368
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6372
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6378
		{
			yyVAL.str = Armscii8Str
		}
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6382
		{
			yyVAL.str = AsciiStr
		}
	case 1267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6386
		{
			yyVAL.str = Big5Str
		}
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6390
		{
			yyVAL.str = UBinaryStr
		}
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6394
		{
			yyVAL.str = Cp1250Str
		}
	case 1270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6398
		{
			yyVAL.str = Cp1251Str
		}
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6402
		{
			yyVAL.str = Cp1256Str
		}
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6406
		{
			yyVAL.str = Cp1257Str
		}
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6410
		{
			yyVAL.str = Cp850Str
		}
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6414
		{
			yyVAL.str = Cp852Str
		}
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6418
		{
			yyVAL.str = Cp866Str
		}
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6422
		{
			yyVAL.str = Cp932Str
		}
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6426
		{
			yyVAL.str = Dec8Str
		}
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6430
		{
			yyVAL.str = EucjpmsStr
		}
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6434
		{
			yyVAL.str = EuckrStr
		}
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6438
		{
			yyVAL.str = Gb18030Str
		}
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6442
		{
			yyVAL.str = Gb2312Str
		}
	case 1282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6446
		{
			yyVAL.str = GbkStr
		}
	case 1283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6450
		{
			yyVAL.str = Geostd8Str
		}
	case 1284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6454
		{
			yyVAL.str = GreekStr
		}
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6458
		{
			yyVAL.str = HebrewStr
		}
	case 1286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6462
		{
			yyVAL.str = Hp8Str
		}
	case 1287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6466
		{
			yyVAL.str = Keybcs2Str
		}
	case 1288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6470
		{
			yyVAL.str = Koi8rStr
		}
	case 1289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6474
		{
			yyVAL.str = Koi8uStr
		}
	case 1290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6478
		{
			yyVAL.str = Latin1Str
		}
	case 1291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6482
		{
			yyVAL.str = Latin2Str
		}
	case 1292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6486
		{
			yyVAL.str = Latin5Str
		}
	case 1293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6490
		{
			yyVAL.str = Latin7Str
		}
	case 1294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6494
		{
			yyVAL.str = MacceStr
		}
	case 1295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6498
		{
			yyVAL.str = MacromanStr
		}
	case 1296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6502
		{
			yyVAL.str = SjisStr
		}
	case 1297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6506
		{
			yyVAL.str = Swe7Str
		}
	case 1298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6510
		{
			yyVAL.str = Tis620Str
		}
	case 1299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6514
		{
			yyVAL.str = Ucs2Str
		}
	case 1300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6518
		{
			yyVAL.str = UjisStr
		}
	case 1301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6522
		{
			yyVAL.str = Utf16Str
		}
	case 1302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6526
		{
			yyVAL.str = Utf16leStr
		}
	case 1303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6530
		{
			yyVAL.str = Utf32Str
		}
	case 1304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6534
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6538
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6542
		{
			yyVAL.str = Utf8mb4Str
		}
	case 1307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6548
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1308:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6552
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 1309:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6556
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 1310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6560
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6564
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1312:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6568
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 1313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6574
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6578
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6582
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6586
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6590
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6594
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6598
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1320:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6603
		{
			yyVAL.expr = nil
		}
	case 1321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6607
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1322:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6612
		{
			yyVAL.str = string("")
		}
	case 1323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6616
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6622
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 1325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6626
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 1326:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6632
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 1327:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6637
		{
			yyVAL.expr = nil
		}
	case 1328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6641
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6647
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 1330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6651
		{
			yyVAL.colName = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1331:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6655
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 1332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6659
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6663
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6667
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6671
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6675
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6679
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1338:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6683
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1339:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6687
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1340:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6691
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1341:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6695
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1342:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6699
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 1343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6705
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6709
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 1345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6713
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 1346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6717
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6721
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 1348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6725
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 1349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6729
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6733
		{
			yyVAL.expr = &NullVal{}
		}
	case 1351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6739
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 1352:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6743
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1353:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6747
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1354:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6752
		{
			yyVAL.exprs = nil
		}
	case 1355:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6756
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 1356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6762
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1357:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6766
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6772
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1359:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6777
		{
			yyVAL.expr = nil
		}
	case 1360:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6781
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6787
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1362:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6792
		{
			yyVAL.orderBy = nil
		}
	case 1363:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6796
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 1364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6802
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 1365:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6806
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 1366:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6812
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 1367:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6817
		{
			yyVAL.str = AscScr
		}
	case 1368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6821
		{
			yyVAL.str = AscScr
		}
	case 1369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6825
		{
			yyVAL.str = DescScr
		}
	case 1370:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6830
		{
			yyVAL.limit = nil
		}
	case 1371:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6834
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 1372:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6838
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 1373:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6842
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 1374:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6848
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1375:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6852
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1376:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6857
		{
			yyVAL.str = ""
		}
	case 1377:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6861
		{
			yyVAL.str = ForUpdateStr
		}
	case 1378:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6865
		{
			yyVAL.str = ShareModeStr
		}
	case 1379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6878
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 1380:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6882
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 1381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6886
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 1382:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6890
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 1383:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6895
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 1384:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6899
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 1385:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6903
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 1386:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6909
		{
			yyVAL.columns = nil
		}
	case 1387:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6913
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 1388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6919
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1389:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6923
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1390:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6929
		{
			yyVAL.colIdent = yyDollar[3].colIdent
		}
	case 1391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6933
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6937
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6941
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6945
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6949
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1396:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6954
		{
			yyVAL.assignExprs = nil
		}
	case 1397:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6958
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 1398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6964
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 1399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6968
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6974
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 1401:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6978
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 1402:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6984
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6990
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 1404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7000
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 1405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7004
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 1406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7010
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 1407:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7013
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1408:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7017
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1409:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7021
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7027
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 1411:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7031
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 1412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7037
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 1413:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7048
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1414:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7061
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1415:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7074
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 1416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7080
		{
			yyVAL.setScope = SetScope_Global
		}
	case 1417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7084
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7090
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7094
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 1420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7098
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 1421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7104
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1422:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7108
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1423:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7112
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 1425:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7119
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7126
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 1428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7130
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7134
		{
			yyVAL.expr = &Default{}
		}
	case 1432:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7143
		{
			yyVAL.byt = 0
		}
	case 1433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7145
		{
			yyVAL.byt = 1
		}
	case 1434:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7148
		{
			yyVAL.byt = 0
		}
	case 1435:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7150
		{
			yyVAL.byt = 1
		}
	case 1436:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7153
		{
			yyVAL.byt = 0
		}
	case 1437:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7155
		{
			yyVAL.byt = 1
		}
	case 1438:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7158
		{
			yyVAL.str = ""
		}
	case 1439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7160
		{
			yyVAL.str = IgnoreStr
		}
	case 1440:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7163
		{
			yyVAL.sqlVal = nil
		}
	case 1441:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7165
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1442:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7167
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7171
		{
			yyVAL.empty = struct{}{}
		}
	case 1444:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7173
		{
			yyVAL.empty = struct{}{}
		}
	case 1445:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7176
		{
			yyVAL.empty = struct{}{}
		}
	case 1446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7178
		{
			yyVAL.empty = struct{}{}
		}
	case 1447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7180
		{
			yyVAL.empty = struct{}{}
		}
	case 1448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7184
		{
			yyVAL.str = UniqueStr
		}
	case 1449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7186
		{
			yyVAL.str = FulltextStr
		}
	case 1450:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7188
		{
			yyVAL.str = SpatialStr
		}
	case 1451:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7191
		{
			yyVAL.str = ""
		}
	case 1452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7193
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1453:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7196
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 1454:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7198
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 1455:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7202
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1456:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7206
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1457:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7212
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 1458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7216
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 1460:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7223
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7229
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7233
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1464:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7240
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1465:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7245
		{
			yyVAL.str = string("")
		}
	case 1466:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7247
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1467:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7250
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7252
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1469:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7255
		{
			yyVAL.EnclosedBy = nil
		}
	case 1470:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7259
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1471:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7264
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7268
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1473:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7273
		{
			yyVAL.sqlVal = nil
		}
	case 1474:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7277
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1475:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7282
		{
			yyVAL.sqlVal = nil
		}
	case 1476:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7286
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1477:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7291
		{
			yyVAL.Fields = nil
		}
	case 1478:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7295
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1479:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7300
		{
			yyVAL.Lines = nil
		}
	case 1480:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7304
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1481:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7309
		{
			yyVAL.sqlVal = nil
		}
	case 1482:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7313
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1483:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7319
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7325
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1485:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7329
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1486:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7335
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1487:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7339
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7345
		{
			yyVAL.lockType = LockRead
		}
	case 1489:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7349
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7353
		{
			yyVAL.lockType = LockWrite
		}
	case 1491:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7357
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1492:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7363
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1493:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7369
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[2].bytes)}
		}
	case 1494:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7373
		{
			yyVAL.statement = &Kill{ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1495:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7377
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 2319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8242
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8251
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
