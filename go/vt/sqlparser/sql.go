// Code generated by goyacc -v y.output -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

//import "runtime/debug"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

func yySpecialCommentMode(yylex interface{}) bool {
	tkn := yylex.(*Tokenizer)
	return tkn.specialComment != nil
}

//line sql.y:64
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	variables                Variables
	into                     *Into
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	triggerName              TriggerName
	tableName                TableName
	tableNames               TableNames
	procedureName            ProcedureName
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	flushOption              *FlushOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	viewSpec                 *ViewSpec
	showFilter               *ShowFilter
	frame                    *Frame
	frameExtent              *FrameExtent
	frameBound               *FrameBound
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	charsetCollate           *CharsetAndCollate
	charsetCollates          []*CharsetAndCollate
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptionItem            TLSOptionItem
	tlsOptionItems           []TLSOptionItem
	accountLimitItem         AccountLimitItem
	accountLimitItems        []AccountLimitItem
	passLockItem             PassLockItem
	passLockItems            []PassLockItem
	grantPrivilege           Privilege
	grantPrivileges          []Privilege
	grantObjectType          GrantObjectType
	privilegeLevel           PrivilegeLevel
	grantAssumption          *GrantUserAssumption
	with                     *With
	window                   Window
	over                     *Over
	windowDef                *WindowDef
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const DUPLICATE = 57369
const DEFAULT = 57370
const SET = 57371
const LOCK = 57372
const UNLOCK = 57373
const KEYS = 57374
const OF = 57375
const OUTFILE = 57376
const DUMPFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const INTO = 57425
const OR = 57426
const XOR = 57427
const AND = 57428
const NOT = 57429
const BETWEEN = 57430
const CASE = 57431
const WHEN = 57432
const THEN = 57433
const ELSE = 57434
const ELSEIF = 57435
const END = 57436
const LE = 57437
const GE = 57438
const NE = 57439
const NULL_SAFE_EQUAL = 57440
const IS = 57441
const LIKE = 57442
const REGEXP = 57443
const IN = 57444
const UNBOUNDED = 57445
const PARTITION = 57446
const RANGE = 57447
const ROWS = 57448
const GROUPS = 57449
const PRECEDING = 57450
const FOLLOWING = 57451
const SHIFT_LEFT = 57452
const SHIFT_RIGHT = 57453
const DIV = 57454
const MOD = 57455
const UNARY = 57456
const COLLATE = 57457
const BINARY = 57458
const UNDERSCORE_ARMSCII8 = 57459
const UNDERSCORE_ASCII = 57460
const UNDERSCORE_BIG5 = 57461
const UNDERSCORE_BINARY = 57462
const UNDERSCORE_CP1250 = 57463
const UNDERSCORE_CP1251 = 57464
const UNDERSCORE_CP1256 = 57465
const UNDERSCORE_CP1257 = 57466
const UNDERSCORE_CP850 = 57467
const UNDERSCORE_CP852 = 57468
const UNDERSCORE_CP866 = 57469
const UNDERSCORE_CP932 = 57470
const UNDERSCORE_DEC8 = 57471
const UNDERSCORE_EUCJPMS = 57472
const UNDERSCORE_EUCKR = 57473
const UNDERSCORE_GB18030 = 57474
const UNDERSCORE_GB2312 = 57475
const UNDERSCORE_GBK = 57476
const UNDERSCORE_GEOSTD8 = 57477
const UNDERSCORE_GREEK = 57478
const UNDERSCORE_HEBREW = 57479
const UNDERSCORE_HP8 = 57480
const UNDERSCORE_KEYBCS2 = 57481
const UNDERSCORE_KOI8R = 57482
const UNDERSCORE_KOI8U = 57483
const UNDERSCORE_LATIN1 = 57484
const UNDERSCORE_LATIN2 = 57485
const UNDERSCORE_LATIN5 = 57486
const UNDERSCORE_LATIN7 = 57487
const UNDERSCORE_MACCE = 57488
const UNDERSCORE_MACROMAN = 57489
const UNDERSCORE_SJIS = 57490
const UNDERSCORE_SWE7 = 57491
const UNDERSCORE_TIS620 = 57492
const UNDERSCORE_UCS2 = 57493
const UNDERSCORE_UJIS = 57494
const UNDERSCORE_UTF16 = 57495
const UNDERSCORE_UTF16LE = 57496
const UNDERSCORE_UTF32 = 57497
const UNDERSCORE_UTF8 = 57498
const UNDERSCORE_UTF8MB3 = 57499
const UNDERSCORE_UTF8MB4 = 57500
const INTERVAL = 57501
const JSON_EXTRACT_OP = 57502
const JSON_UNQUOTE_EXTRACT_OP = 57503
const CREATE = 57504
const ALTER = 57505
const DROP = 57506
const RENAME = 57507
const ANALYZE = 57508
const ADD = 57509
const MODIFY = 57510
const CHANGE = 57511
const SCHEMA = 57512
const TABLE = 57513
const INDEX = 57514
const INDEXES = 57515
const VIEW = 57516
const TO = 57517
const IGNORE = 57518
const IF = 57519
const PRIMARY = 57520
const COLUMN = 57521
const SPATIAL = 57522
const FULLTEXT = 57523
const KEY_BLOCK_SIZE = 57524
const CHECK = 57525
const ACTION = 57526
const CASCADE = 57527
const CONSTRAINT = 57528
const FOREIGN = 57529
const NO = 57530
const REFERENCES = 57531
const RESTRICT = 57532
const FIRST = 57533
const AFTER = 57534
const SHOW = 57535
const DESCRIBE = 57536
const EXPLAIN = 57537
const DATE = 57538
const ESCAPE = 57539
const REPAIR = 57540
const OPTIMIZE = 57541
const TRUNCATE = 57542
const FORMAT = 57543
const MAXVALUE = 57544
const REORGANIZE = 57545
const LESS = 57546
const THAN = 57547
const PROCEDURE = 57548
const TRIGGER = 57549
const TRIGGERS = 57550
const FUNCTION = 57551
const STATUS = 57552
const VARIABLES = 57553
const WARNINGS = 57554
const ERRORS = 57555
const KILL = 57556
const CONNECTION = 57557
const SEQUENCE = 57558
const ENABLE = 57559
const DISABLE = 57560
const EACH = 57561
const ROW = 57562
const BEFORE = 57563
const FOLLOWS = 57564
const PRECEDES = 57565
const DEFINER = 57566
const INVOKER = 57567
const INOUT = 57568
const OUT = 57569
const DETERMINISTIC = 57570
const CONTAINS = 57571
const READS = 57572
const MODIFIES = 57573
const SQL = 57574
const SECURITY = 57575
const TEMPORARY = 57576
const ALGORITHM = 57577
const MERGE = 57578
const TEMPTABLE = 57579
const UNDEFINED = 57580
const CLASS_ORIGIN = 57581
const SUBCLASS_ORIGIN = 57582
const MESSAGE_TEXT = 57583
const MYSQL_ERRNO = 57584
const CONSTRAINT_CATALOG = 57585
const CONSTRAINT_SCHEMA = 57586
const CONSTRAINT_NAME = 57587
const CATALOG_NAME = 57588
const SCHEMA_NAME = 57589
const TABLE_NAME = 57590
const COLUMN_NAME = 57591
const CURSOR_NAME = 57592
const SIGNAL = 57593
const RESIGNAL = 57594
const SQLSTATE = 57595
const DECLARE = 57596
const CONDITION = 57597
const CURSOR = 57598
const CONTINUE = 57599
const EXIT = 57600
const UNDO = 57601
const HANDLER = 57602
const FOUND = 57603
const SQLWARNING = 57604
const SQLEXCEPTION = 57605
const USER = 57606
const IDENTIFIED = 57607
const ROLE = 57608
const REUSE = 57609
const GRANT = 57610
const GRANTS = 57611
const REVOKE = 57612
const NONE = 57613
const ATTRIBUTE = 57614
const RANDOM = 57615
const PASSWORD = 57616
const INITIAL = 57617
const AUTHENTICATION = 57618
const SSL = 57619
const X509 = 57620
const CIPHER = 57621
const ISSUER = 57622
const SUBJECT = 57623
const ACCOUNT = 57624
const EXPIRE = 57625
const NEVER = 57626
const DAY = 57627
const OPTION = 57628
const OPTIONAL = 57629
const EXCEPT = 57630
const ADMIN = 57631
const PRIVILEGES = 57632
const MAX_QUERIES_PER_HOUR = 57633
const MAX_UPDATES_PER_HOUR = 57634
const MAX_CONNECTIONS_PER_HOUR = 57635
const MAX_USER_CONNECTIONS = 57636
const FLUSH = 57637
const FAILED_LOGIN_ATTEMPTS = 57638
const PASSWORD_LOCK_TIME = 57639
const REQUIRE = 57640
const PROXY = 57641
const ROUTINE = 57642
const TABLESPACE = 57643
const CLIENT = 57644
const SLAVE = 57645
const EVENT = 57646
const EXECUTE = 57647
const FILE = 57648
const RELOAD = 57649
const REPLICATION = 57650
const SHUTDOWN = 57651
const SUPER = 57652
const USAGE = 57653
const LOGS = 57654
const ENGINE = 57655
const ERROR = 57656
const GENERAL = 57657
const HOSTS = 57658
const OPTIMIZER_COSTS = 57659
const RELAY = 57660
const SLOW = 57661
const USER_RESOURCES = 57662
const NO_WRITE_TO_BINLOG = 57663
const CHANNEL = 57664
const BEGIN = 57665
const START = 57666
const TRANSACTION = 57667
const COMMIT = 57668
const ROLLBACK = 57669
const SAVEPOINT = 57670
const WORK = 57671
const RELEASE = 57672
const BIT = 57673
const TINYINT = 57674
const SMALLINT = 57675
const MEDIUMINT = 57676
const INT = 57677
const INTEGER = 57678
const BIGINT = 57679
const INTNUM = 57680
const SERIAL = 57681
const REAL = 57682
const DOUBLE = 57683
const FLOAT_TYPE = 57684
const DECIMAL = 57685
const NUMERIC = 57686
const DEC = 57687
const FIXED = 57688
const PRECISION = 57689
const TIME = 57690
const TIMESTAMP = 57691
const DATETIME = 57692
const YEAR = 57693
const CHAR = 57694
const VARCHAR = 57695
const BOOL = 57696
const CHARACTER = 57697
const VARBINARY = 57698
const NCHAR = 57699
const NVARCHAR = 57700
const NATIONAL = 57701
const VARYING = 57702
const TEXT = 57703
const TINYTEXT = 57704
const MEDIUMTEXT = 57705
const LONGTEXT = 57706
const LONG = 57707
const BLOB = 57708
const TINYBLOB = 57709
const MEDIUMBLOB = 57710
const LONGBLOB = 57711
const JSON = 57712
const ENUM = 57713
const GEOMETRY = 57714
const POINT = 57715
const LINESTRING = 57716
const POLYGON = 57717
const GEOMETRYCOLLECTION = 57718
const MULTIPOINT = 57719
const MULTILINESTRING = 57720
const MULTIPOLYGON = 57721
const LOCAL = 57722
const LOW_PRIORITY = 57723
const NULLX = 57724
const AUTO_INCREMENT = 57725
const APPROXNUM = 57726
const SIGNED = 57727
const UNSIGNED = 57728
const ZEROFILL = 57729
const SRID = 57730
const COLLATION = 57731
const DATABASES = 57732
const SCHEMAS = 57733
const TABLES = 57734
const FULL = 57735
const PROCESSLIST = 57736
const COLUMNS = 57737
const FIELDS = 57738
const ENGINES = 57739
const PLUGINS = 57740
const NAMES = 57741
const CHARSET = 57742
const GLOBAL = 57743
const SESSION = 57744
const ISOLATION = 57745
const LEVEL = 57746
const READ = 57747
const WRITE = 57748
const ONLY = 57749
const REPEATABLE = 57750
const COMMITTED = 57751
const UNCOMMITTED = 57752
const SERIALIZABLE = 57753
const ENCRYPTION = 57754
const CURRENT_TIMESTAMP = 57755
const DATABASE = 57756
const CURRENT_DATE = 57757
const CURRENT_USER = 57758
const CURRENT_TIME = 57759
const LOCALTIME = 57760
const LOCALTIMESTAMP = 57761
const UTC_DATE = 57762
const UTC_TIME = 57763
const UTC_TIMESTAMP = 57764
const REPLACE = 57765
const CONVERT = 57766
const CAST = 57767
const SUBSTR = 57768
const SUBSTRING = 57769
const TRIM = 57770
const LEADING = 57771
const TRAILING = 57772
const BOTH = 57773
const GROUP_CONCAT = 57774
const SEPARATOR = 57775
const TIMESTAMPADD = 57776
const TIMESTAMPDIFF = 57777
const OVER = 57778
const WINDOW = 57779
const GROUPING = 57780
const CURRENT = 57781
const AVG = 57782
const BIT_AND = 57783
const BIT_OR = 57784
const BIT_XOR = 57785
const COUNT = 57786
const JSON_ARRAYAGG = 57787
const JSON_OBJECTAGG = 57788
const MAX = 57789
const MIN = 57790
const STDDEV_POP = 57791
const STDDEV = 57792
const STD = 57793
const STDDEV_SAMP = 57794
const SUM = 57795
const VAR_POP = 57796
const VARIANCE = 57797
const VAR_SAMP = 57798
const CUME_DIST = 57799
const DENSE_RANK = 57800
const FIRST_VALUE = 57801
const LAG = 57802
const LAST_VALUE = 57803
const LEAD = 57804
const NTH_VALUE = 57805
const NTILE = 57806
const ROW_NUMBER = 57807
const PERCENT_RANK = 57808
const RANK = 57809
const JSON_TABLE = 57810
const PATH = 57811
const MATCH = 57812
const AGAINST = 57813
const BOOLEAN = 57814
const LANGUAGE = 57815
const WITH = 57816
const QUERY = 57817
const EXPANSION = 57818
const UNUSED = 57819
const ARRAY = 57820
const DESCRIPTION = 57821
const EMPTY = 57822
const LATERAL = 57823
const MEMBER = 57824
const RECURSIVE = 57825
const ACTIVE = 57826
const BUCKETS = 57827
const CLONE = 57828
const COMPONENT = 57829
const DEFINITION = 57830
const ENFORCED = 57831
const EXCLUDE = 57832
const GEOMCOLLECTION = 57833
const GET_MASTER_PUBLIC_KEY = 57834
const HISTOGRAM = 57835
const HISTORY = 57836
const INACTIVE = 57837
const INVISIBLE = 57838
const LOCKED = 57839
const MASTER_COMPRESSION_ALGORITHMS = 57840
const MASTER_PUBLIC_KEY_PATH = 57841
const MASTER_TLS_CIPHERSUITES = 57842
const MASTER_ZSTD_COMPRESSION_LEVEL = 57843
const NESTED = 57844
const NETWORK_NAMESPACE = 57845
const NOWAIT = 57846
const NULLS = 57847
const OJ = 57848
const OLD = 57849
const ORDINALITY = 57850
const ORGANIZATION = 57851
const OTHERS = 57852
const PERSIST = 57853
const PERSIST_ONLY = 57854
const PRIVILEGE_CHECKS_USER = 57855
const PROCESS = 57856
const REFERENCE = 57857
const REQUIRE_ROW_FORMAT = 57858
const RESOURCE = 57859
const RESPECT = 57860
const RESTART = 57861
const RETAIN = 57862
const SECONDARY = 57863
const SECONDARY_ENGINE = 57864
const SECONDARY_LOAD = 57865
const SECONDARY_UNLOAD = 57866
const SKIP = 57867
const THREAD_PRIORITY = 57868
const TIES = 57869
const VCPU = 57870
const VISIBLE = 57871
const SYSTEM = 57872
const INFILE = 57873
const GENERATED = 57874
const ALWAYS = 57875
const STORED = 57876
const VIRTUAL = 57877
const NVAR = 57878
const PASSWORD_LOCK = 57879

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DUMPFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"INTO",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB3",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"ENABLE",
	"DISABLE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"ALGORITHM",
	"MERGE",
	"TEMPTABLE",
	"UNDEFINED",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTION",
	"OPTIONAL",
	"EXCEPT",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EVENT",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"SRID",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ENCRYPTION",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"JSON_TABLE",
	"PATH",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"DESCRIPTION",
	"EMPTY",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"ACTIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"GENERATED",
	"ALWAYS",
	"STORED",
	"VIRTUAL",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 35,
	5, 58,
	-2, 1144,
	-1, 43,
	189, 1208,
	190, 1227,
	-2, 245,
	-1, 49,
	228, 721,
	229, 721,
	-2, 710,
	-1, 559,
	177, 1237,
	-2, 1231,
	-1, 560,
	177, 1238,
	-2, 1232,
	-1, 705,
	100, 1526,
	177, 1526,
	-2, 1192,
	-1, 706,
	100, 1645,
	177, 1645,
	-2, 1193,
	-1, 711,
	100, 1550,
	177, 1550,
	-2, 1194,
	-1, 712,
	100, 1598,
	177, 1598,
	-2, 1195,
	-1, 713,
	100, 1599,
	177, 1599,
	-2, 1196,
	-1, 714,
	100, 1471,
	177, 1471,
	-2, 1200,
	-1, 716,
	100, 1575,
	177, 1575,
	-2, 1202,
	-1, 1241,
	1, 820,
	5, 820,
	12, 820,
	13, 820,
	14, 820,
	15, 820,
	17, 820,
	19, 820,
	29, 820,
	30, 820,
	56, 820,
	57, 820,
	58, 820,
	59, 820,
	60, 820,
	62, 820,
	63, 820,
	66, 820,
	67, 820,
	69, 820,
	70, 820,
	87, 820,
	455, 820,
	556, 820,
	-2, 852,
	-1, 1248,
	67, 75,
	69, 75,
	-2, 79,
	-1, 1344,
	1, 500,
	556, 500,
	-2, 498,
	-1, 1346,
	1, 500,
	556, 500,
	-2, 498,
	-1, 1510,
	177, 1240,
	-2, 1236,
	-1, 1677,
	44, 566,
	-2, 1483,
	-1, 1681,
	68, 564,
	72, 564,
	-2, 1520,
	-1, 1682,
	68, 566,
	-2, 1428,
	-1, 1685,
	68, 562,
	72, 562,
	-2, 1345,
	-1, 1686,
	68, 563,
	72, 563,
	-2, 1355,
	-1, 1734,
	1, 501,
	556, 501,
	-2, 498,
	-1, 1818,
	44, 609,
	196, 611,
	198, 609,
	199, 609,
	-2, 646,
	-1, 1898,
	5, 59,
	-2, 931,
	-1, 2216,
	69, 1402,
	70, 1402,
	177, 1402,
	-2, 753,
	-1, 2240,
	1, 885,
	5, 885,
	12, 885,
	13, 885,
	14, 885,
	15, 885,
	17, 885,
	19, 885,
	29, 885,
	30, 885,
	56, 885,
	57, 885,
	58, 885,
	59, 885,
	60, 885,
	62, 885,
	63, 885,
	66, 885,
	67, 885,
	69, 885,
	70, 885,
	87, 885,
	455, 885,
	556, 885,
	-2, 852,
	-1, 2353,
	196, 612,
	-2, 610,
	-1, 2414,
	5, 59,
	-2, 1164,
	-1, 2632,
	41, 1247,
	-2, 1245,
	-1, 2732,
	5, 59,
	-2, 1167,
}

const yyPrivate = 57344

const yyLast = 40060

var yyAct = [...]int{
	625, 80, 2952, 2980, 2989, 2934, 2158, 2935, 2954, 430,
	2897, 2835, 931, 2836, 2744, 3, 2807, 2747, 7, 2044,
	2746, 6, 1669, 2745, 5, 2739, 2748, 8, 2877, 2297,
	2852, 2801, 2426, 2734, 476, 560, 2857, 562, 2718, 2720,
	2573, 2678, 2632, 730, 1379, 2805, 2254, 1964, 2233, 1635,
	2141, 1195, 1729, 2514, 1628, 2127, 1194, 551, 2634, 2209,
	565, 1933, 2490, 2314, 2484, 624, 413, 416, 1487, 1687,
	2468, 83, 2255, 1279, 1753, 2740, 1985, 461, 2210, 455,
	455, 80, 1678, 129, 1633, 2347, 129, 728, 2140, 2060,
	544, 567, 129, 577, 2337, 543, 2206, 563, 1991, 93,
	1934, 106, 458, 458, 964, 1480, 1667, 1720, 1668, 2218,
	988, 1817, 1478, 1847, 2225, 129, 947, 2180, 726, 1535,
	1657, 1378, 1607, 1674, 2105, 1495, 129, 1780, 1428, 1611,
	129, 733, 725, 1544, 1355, 2035, 1399, 542, 1381, 1992,
	1716, 1093, 1737, 1618, 1736, 1735, 707, 1259, 1601, 1100,
	129, 458, 710, 733, 1237, 1096, 1512, 2150, 1104, 1241,
	930, 129, 1733, 996, 1797, 1258, 699, 1114, 724, 1236,
	475, 703, 547, 1017, 704, 432, 1211, 478, 1433, 433,
	569, 995, 914, 1347, 1350, 696, 919, 85, 1250, 102,
	1212, 98, 2005, 3022, 3018, 1704, 3013, 2009, 2997, 2995,
	2975, 2947, 2885, 82, 2680, 2679, 2269, 448, 1426, 442,
	453, 436, 2295, 2014, 2013, 2455, 2611, 3007, 2987, 36,
	2469, 72, 39, 40, 2964, 87, 88, 89, 90, 91,
	2471, 443, 2609, 2816, 425, 2010, 36, 2928, 36, 36,
	36, 2730, 2624, 1766, 2072, 1766, 2902, 2612, 2793, 2311,
	2016, 2815, 1998, 2664, 2201, 2905, 2811, 473, 69, 1928,
	1999, 1129, 1128, 1138, 1139, 1131, 1132, 1133, 1134, 1135,
	1136, 1137, 1130, 2729, 2871, 1140, 2698, 1929, 2811, 2557,
	1630, 81, 2853, 1869, 916, 2408, 921, 922, 913, 1796,
	951, 952, 2808, 2249, 955, 1653, 2806, 924, 81, 2151,
	81, 81, 81, 680, 1086, 686, 688, 687, 684, 685,
	683, 682, 681, 1432, 2808, 72, 39, 40, 2250, 2251,
	1654, 1655, 1474, 1475, 2447, 2448, 953, 954, 1973, 967,
	1260, 1972, 1261, 2566, 1974, 1429, 41, 1430, 1431, 1053,
	110, 2051, 968, 969, 1449, 2474, 1045, 424, 423, 2018,
	1689, 1690, 720, 1795, 465, 1014, 2543, 2812, 1696, 1698,
	1710, 1697, 1705, 1705, 2395, 2012, 1717, 2393, 2015, 1692,
	422, 1412, 472, 2102, 1470, 978, 1469, 407, 1468, 2812,
	1467, 435, 434, 437, 99, 2472, 2473, 2475, 2476, 2477,
	1466, 441, 427, 1692, 1465, 1049, 1050, 1029, 974, 2067,
	2094, 2920, 120, 116, 117, 2637, 118, 2838, 445, 2336,
	80, 80, 449, 466, 2099, 129, 1825, 1819, 1820, 2781,
	1818, 1821, 1822, 2485, 982, 543, 452, 983, 2692, 2837,
	985, 2488, 1808, 984, 2491, 2492, 2493, 2494, 122, 121,
	2321, 2312, 2783, 2610, 2510, 2486, 2487, 2315, 2316, 2317,
	2318, 2319, 1060, 2702, 2502, 1061, 1828, 1809, 2606, 129,
	557, 2315, 2316, 2317, 2318, 2319, 1460, 986, 1754, 1082,
	1827, 1826, 2845, 2069, 2500, 114, 2984, 1090, 2882, 2603,
	2700, 2628, 2324, 2599, 101, 1029, 918, 917, 108, 975,
	976, 2880, 2881, 2604, 112, 111, 123, 417, 124, 113,
	1353, 2071, 1362, 1363, 1361, 2602, 2601, 414, 2600, 2598,
	129, 2949, 920, 965, 920, 966, 968, 969, 2688, 2689,
	1748, 1749, 108, 438, 439, 440, 446, 1439, 450, 451,
	454, 408, 2823, 2824, 950, 2862, 1434, 1029, 108, 2684,
	418, 2923, 2181, 2742, 1744, 963, 2428, 2958, 109, 113,
	2953, 1954, 2085, 2086, 960, 1052, 961, 962, 959, 1149,
	2895, 3008, 1151, 2515, 2516, 944, 2956, 2677, 115, 1278,
	2011, 1436, 478, 1743, 1435, 2007, 2694, 1278, 103, 2258,
	104, 2113, 2049, 2993, 1278, 2111, 110, 410, 2113, 1117,
	1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170,
	1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180,
	1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190,
	1191, 1192, 411, 2183, 1193, 2352, 1197, 2050, 2294, 1251,
	2470, 1278, 3023, 3020, 1277, 2665, 1824, 3014, 2809, 2052,
	543, 1638, 1640, 1067, 2998, 1413, 119, 1028, 2943, 979,
	2574, 1118, 426, 1150, 73, 1079, 2008, 1705, 915, 933,
	2809, 1036, 2525, 1719, 2576, 2704, 2338, 2607, 1802, 1198,
	1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 2025,
	1210, 1213, 1213, 1213, 1219, 1213, 1213, 1219, 1213, 1219,
	1228, 1229, 1230, 1231, 1062, 1242, 2782, 2699, 2627, 2323,
	2728, 1039, 2693, 1695, 2070, 79, 415, 415, 471, 1025,
	2526, 1432, 2093, 2090, 2075, 2074, 1803, 1367, 2625, 2006,
	2073, 1034, 79, 1365, 79, 79, 79, 1081, 100, 129,
	129, 129, 1088, 444, 1990, 1430, 1431, 2870, 1077, 415,
	112, 111, 980, 1732, 912, 733, 415, 1962, 73, 1235,
	2124, 1035, 1961, 1031, 1990, 2955, 2957, 2991, 1990, 1990,
	2992, 1995, 2990, 1763, 710, 1960, 911, 2088, 1762, 710,
	2185, 1639, 1990, 1085, 923, 2189, 379, 2184, 2529, 2182,
	1152, 1153, 1907, 2575, 2187, 1904, 1246, 1032, 1033, 2378,
	2370, 2092, 1272, 2091, 1977, 1969, 1864, 2186, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009,
	1852, 1833, 2188, 2190, 1747, 1338, 2592, 2697, 1073, 1745,
	1490, 1271, 1256, 1120, 943, 1337, 1133, 1134, 1135, 1136,
	1137, 1130, 2524, 1024, 1140, 1130, 1658, 1140, 1140, 2462,
	1072, 1068, 1069, 1070, 1071, 1074, 1075, 1076, 1078, 977,
	1263, 2460, 2332, 1649, 1409, 1264, 1400, 1276, 1214, 1216,
	1218, 1220, 1222, 1224, 1225, 1227, 2284, 2863, 2864, 2860,
	2861, 2719, 1215, 1217, 2539, 1221, 1223, 2593, 1226, 1989,
	2840, 1249, 1483, 2725, 2724, 2132, 1254, 1129, 1128, 1138,
	1139, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1130, 1989,
	2463, 1140, 96, 1989, 1989, 2119, 2111, 1612, 1113, 1273,
	2116, 2111, 2461, 2115, 2118, 1278, 949, 1989, 2112, 2113,
	2123, 1519, 1110, 2614, 2120, 1772, 957, 2285, 2203, 96,
	970, 2530, 1357, 2128, 1911, 455, 1517, 1518, 1516, 1113,
	3001, 2981, 3000, 1638, 1640, 1602, 2223, 733, 129, 1152,
	1153, 1380, 1152, 1153, 455, 1401, 2841, 458, 458, 2615,
	2222, 458, 1111, 1112, 1110, 1421, 1356, 1269, 129, 2878,
	1360, 129, 987, 926, 95, 925, 458, 458, 2878, 129,
	2909, 1113, 2908, 1602, 1781, 1919, 3012, 1383, 129, 129,
	129, 129, 129, 1092, 2944, 2531, 1345, 1129, 1128, 1138,
	1139, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1130, 458,
	2900, 1140, 948, 129, 94, 1903, 2501, 2495, 1407, 470,
	1111, 1112, 1110, 1791, 1773, 958, 972, 1481, 3016, 1154,
	1155, 1156, 1157, 1158, 1159, 1160, 1112, 1110, 455, 1113,
	2267, 1129, 1128, 1138, 1139, 1131, 1132, 1133, 1134, 1135,
	1136, 1137, 1130, 1107, 1113, 1140, 1097, 2373, 932, 1098,
	458, 458, 458, 1384, 1424, 733, 1502, 1504, 1505, 2786,
	3009, 1442, 1458, 1639, 1503, 1481, 1395, 1396, 1397, 1398,
	1111, 1112, 1110, 80, 1138, 1139, 1131, 1132, 1133, 1134,
	1135, 1136, 1137, 1130, 2778, 458, 1140, 543, 2779, 1113,
	458, 458, 1403, 1343, 1404, 1342, 1358, 2933, 693, 694,
	1464, 1359, 2932, 1479, 1492, 1849, 1850, 1851, 1369, 81,
	2736, 129, 1376, 129, 1377, 3010, 733, 2695, 2622, 1386,
	1515, 2621, 2620, 1388, 1389, 2619, 2613, 2454, 1493, 1472,
	2453, 1494, 2270, 1509, 129, 2780, 1440, 1902, 1536, 1901,
	1537, 1117, 80, 1131, 1132, 1133, 1134, 1135, 1136, 1137,
	1130, 2040, 1604, 1140, 1510, 2038, 543, 2931, 1111, 1112,
	1110, 2019, 1416, 1417, 2696, 1020, 1419, 935, 936, 937,
	938, 939, 940, 941, 1019, 478, 1463, 1113, 993, 1513,
	1539, 1540, 1422, 1975, 2904, 1976, 733, 2887, 1197, 1438,
	2886, 1437, 2842, 1488, 1489, 1441, 2839, 2792, 2691, 2690,
	2676, 992, 543, 1118, 2629, 1514, 2597, 1111, 1112, 1110,
	2553, 2498, 2497, 733, 733, 1128, 1138, 1139, 1131, 1132,
	1133, 1134, 1135, 1136, 1137, 1130, 1113, 1546, 1140, 1459,
	2496, 2464, 1462, 1631, 2451, 1632, 2429, 2343, 1641, 2277,
	2271, 1242, 1471, 2137, 1582, 1242, 2136, 543, 1476, 1508,
	1092, 2036, 1955, 1792, 1588, 1591, 1111, 1112, 1110, 129,
	1767, 1603, 1418, 2875, 1111, 1112, 1110, 2041, 129, 1368,
	1637, 129, 2946, 1506, 2874, 1113, 129, 129, 2701, 2674,
	129, 129, 129, 1113, 1662, 1111, 1112, 1110, 726, 2646,
	1383, 1995, 2640, 1554, 2522, 1644, 2381, 2366, 1559, 1646,
	733, 733, 2362, 2354, 1113, 1510, 2325, 2080, 710, 2079,
	1542, 1111, 1112, 1110, 1550, 553, 1785, 1769, 1768, 2879,
	2988, 1111, 1112, 1110, 1246, 1561, 1562, 1538, 1414, 2205,
	1113, 1627, 1246, 478, 1411, 1375, 1246, 1374, 1574, 1346,
	1113, 1344, 1578, 1015, 945, 421, 419, 2564, 2906, 2438,
	2893, 2438, 2849, 1664, 1059, 1338, 1599, 582, 581, 584,
	585, 586, 587, 2818, 1092, 1337, 583, 588, 1642, 2799,
	1092, 1760, 1129, 1128, 1138, 1139, 1131, 1132, 1133, 1134,
	1135, 1136, 1137, 1130, 129, 2639, 1140, 2438, 2795, 1092,
	129, 129, 458, 458, 458, 2438, 2682, 129, 1675, 1219,
	1663, 1758, 1759, 2564, 2669, 1683, 2564, 2582, 2564, 1092,
	2564, 2563, 1647, 2588, 1726, 1727, 2438, 2437, 1656, 1651,
	2418, 1092, 1650, 1406, 1832, 1092, 129, 129, 129, 2587,
	1722, 1723, 1724, 1725, 1672, 2304, 1665, 1129, 1128, 1138,
	1139, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1130, 1788,
	2278, 1140, 1252, 129, 1794, 129, 2292, 2291, 1965, 733,
	84, 1718, 2638, 733, 2288, 2289, 2288, 2287, 1830, 1620,
	1623, 1624, 1625, 1621, 1064, 1622, 1626, 1862, 1092, 2226,
	2227, 1706, 1707, 1708, 1709, 733, 1615, 1092, 733, 1805,
	1804, 1770, 1580, 1789, 1730, 1580, 1092, 1275, 1274, 1741,
	1853, 1752, 1252, 1509, 1778, 1965, 1774, 733, 1253, 2207,
	1255, 1779, 2221, 1485, 1862, 1615, 1124, 478, 1127, 1643,
	2373, 1251, 1025, 1614, 1510, 1141, 1142, 1143, 1144, 1145,
	1146, 1147, 1025, 1125, 1126, 1123, 1063, 1022, 2924, 1023,
	1023, 2899, 1751, 1129, 1128, 1138, 1139, 1131, 1132, 1133,
	1134, 1135, 1136, 1137, 1130, 2221, 1580, 1140, 1253, 1246,
	1251, 2412, 2221, 1615, 1484, 1615, 1766, 2305, 2290, 2238,
	2235, 2135, 1513, 1511, 1787, 1783, 1520, 1521, 1522, 1523,
	1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533,
	1534, 1793, 1800, 1620, 1623, 1624, 1625, 1621, 1514, 1622,
	1626, 2104, 1930, 1932, 1979, 1652, 1242, 1242, 1242, 1242,
	1242, 1862, 1891, 1890, 1807, 1420, 543, 1810, 1765, 1663,
	1814, 1486, 1631, 1087, 1461, 1956, 1841, 1829, 2401, 1427,
	1839, 1840, 1251, 1366, 1242, 1364, 543, 1257, 1858, 81,
	2820, 129, 129, 129, 129, 129, 721, 2796, 1936, 2234,
	2715, 2643, 1950, 129, 2456, 1692, 1594, 129, 1931, 2424,
	1721, 1958, 129, 1854, 1605, 1935, 2266, 2226, 2227, 129,
	1717, 1983, 1029, 1746, 1712, 1711, 1339, 1959, 1582, 1012,
	429, 1782, 1967, 2970, 1968, 2968, 2965, 2936, 1966, 2303,
	2229, 1896, 2207, 733, 2042, 1091, 1371, 1246, 1246, 1246,
	1246, 1246, 710, 1065, 1026, 1021, 1946, 1944, 81, 1848,
	2232, 1947, 1945, 1246, 1948, 478, 1624, 1625, 2231, 1943,
	1942, 548, 549, 2866, 478, 1246, 2814, 1129, 1128, 1138,
	1139, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1130, 1918,
	2138, 1140, 1838, 1496, 2851, 2415, 1846, 1845, 460, 1994,
	1996, 1105, 1106, 2554, 1963, 1338, 733, 2521, 129, 2441,
	1949, 1938, 1939, 2361, 1941, 1986, 1980, 2360, 1997, 2276,
	2275, 733, 733, 733, 1101, 1937, 2274, 458, 1940, 1987,
	1103, 2260, 2084, 2706, 1121, 455, 1356, 2709, 1263, 2791,
	1970, 129, 458, 2790, 2633, 1982, 1978, 2631, 2687, 2686,
	420, 2077, 1415, 1691, 2616, 2617, 2299, 2131, 458, 2078,
	1988, 2130, 1993, 1094, 2029, 2028, 1270, 2030, 2031, 2032,
	2033, 80, 1010, 2916, 1095, 994, 991, 990, 946, 458,
	2650, 733, 2649, 1739, 2410, 543, 2503, 458, 2037, 1488,
	1489, 1868, 1870, 2504, 2925, 2133, 2134, 1740, 1370, 2903,
	2039, 2784, 2635, 1196, 1882, 1883, 1884, 1885, 733, 733,
	2159, 2445, 989, 2298, 1731, 2143, 1786, 2048, 129, 2046,
	2047, 1105, 1106, 2915, 96, 1477, 2068, 1509, 733, 2020,
	2021, 1083, 1084, 1844, 2914, 2082, 2027, 2913, 2594, 1813,
	973, 1843, 545, 2844, 2843, 733, 2034, 2803, 1510, 2788,
	2710, 2656, 546, 84, 2081, 2802, 1209, 2721, 1965, 2534,
	2087, 2972, 2971, 2089, 2341, 2095, 2054, 2055, 2056, 2971,
	2212, 80, 2100, 2101, 2098, 2097, 1908, 1905, 1811, 1402,
	2103, 1108, 2108, 2972, 2114, 543, 2125, 2126, 2666, 2273,
	2129, 2109, 1482, 1479, 721, 2237, 467, 469, 2106, 2117,
	2122, 2242, 2243, 2244, 2758, 52, 733, 86, 733, 2760,
	19, 55, 1936, 2759, 18, 1, 2144, 1801, 1855, 1856,
	1857, 2220, 1444, 2145, 2761, 20, 2483, 2213, 2202, 1935,
	2208, 2482, 733, 2762, 21, 2211, 2149, 2757, 15, 2489,
	2143, 1608, 2310, 2153, 2756, 14, 2268, 2313, 2241, 2750,
	10, 2773, 34, 733, 2248, 733, 2066, 733, 2499, 733,
	2236, 2192, 2191, 2154, 2155, 2771, 33, 2770, 32, 2769,
	28, 1354, 2161, 2162, 2768, 27, 2246, 2767, 26, 2765,
	23, 2764, 22, 2215, 2169, 2170, 2171, 2172, 2766, 24,
	2605, 2176, 2177, 2178, 929, 2230, 1912, 1913, 1914, 2755,
	13, 2752, 12, 1750, 2262, 2263, 2239, 2259, 2264, 2261,
	2265, 1016, 1726, 2789, 1727, 2751, 11, 2705, 129, 2320,
	2707, 2257, 455, 2749, 9, 2630, 2252, 2506, 2467, 2466,
	2253, 2059, 2058, 1011, 1425, 2107, 2110, 1761, 733, 733,
	733, 1823, 2717, 1812, 1066, 458, 2300, 2301, 2302, 1676,
	129, 458, 1666, 2733, 723, 92, 1771, 956, 387, 1673,
	2327, 2003, 2708, 1013, 129, 2400, 458, 2002, 733, 458,
	2017, 1688, 1734, 458, 458, 2306, 458, 1738, 2001, 2000,
	2703, 2279, 2280, 2004, 1283, 1281, 2322, 1282, 2283, 1280,
	1285, 1284, 2930, 733, 2869, 2286, 391, 129, 733, 1265,
	2830, 2380, 1109, 107, 56, 733, 2523, 2121, 733, 463,
	464, 733, 2160, 97, 105, 393, 2163, 2164, 2165, 1148,
	1842, 2168, 1971, 2350, 708, 709, 701, 1387, 1834, 1089,
	2723, 2896, 2328, 2822, 1099, 2854, 1917, 1208, 1600, 2374,
	1338, 566, 2406, 2349, 1953, 2538, 1245, 2856, 1405, 2351,
	1986, 2365, 2331, 2356, 2358, 2335, 2345, 2344, 2281, 2339,
	2340, 1501, 2342, 2349, 1129, 1128, 1138, 1139, 1131, 1132,
	1133, 1134, 1135, 1136, 1137, 1130, 580, 579, 1140, 578,
	575, 576, 2083, 2810, 1491, 1927, 2372, 1122, 2293, 564,
	1196, 555, 1240, 129, 126, 1232, 1790, 1619, 1617, 1616,
	1372, 697, 2228, 412, 2224, 1936, 1629, 1239, 1238, 1243,
	733, 70, 2533, 971, 409, 2433, 2434, 2435, 733, 733,
	733, 2407, 1935, 2329, 2663, 38, 468, 550, 733, 25,
	2431, 17, 2419, 2391, 981, 16, 1816, 698, 80, 2443,
	927, 722, 733, 42, 44, 2411, 2377, 2053, 1742, 2829,
	2951, 997, 543, 2979, 2379, 478, 2876, 31, 2458, 30,
	2147, 928, 2420, 29, 2382, 2383, 2763, 2772, 2754, 1551,
	1552, 2753, 942, 2386, 2938, 2937, 4, 2436, 1080, 129,
	2432, 733, 1564, 1565, 1566, 1567, 71, 35, 1498, 1499,
	1500, 2173, 2174, 719, 2457, 2459, 2, 1579, 1581, 2442,
	0, 1980, 0, 1585, 0, 2193, 2194, 2446, 2195, 2196,
	0, 0, 2197, 0, 0, 0, 0, 458, 0, 0,
	0, 2479, 2480, 2481, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2532, 0, 2478, 0, 0, 0, 0,
	0, 2143, 2449, 2519, 0, 0, 733, 0, 0, 0,
	0, 0, 0, 2212, 733, 0, 2212, 2559, 2240, 2527,
	0, 0, 2517, 2518, 2535, 2536, 2508, 0, 0, 2237,
	2509, 543, 2513, 2512, 2507, 1196, 2259, 0, 0, 1586,
	1587, 1726, 0, 0, 2349, 2505, 2584, 0, 1187, 1188,
	2520, 0, 2528, 0, 733, 0, 0, 2562, 0, 0,
	733, 0, 0, 2511, 2349, 1637, 129, 2568, 129, 0,
	2272, 0, 0, 2558, 733, 2556, 0, 2590, 2211, 0,
	0, 2211, 0, 2450, 0, 2452, 0, 0, 2591, 0,
	0, 2555, 733, 0, 2565, 0, 0, 0, 0, 0,
	0, 0, 0, 2589, 0, 0, 0, 1661, 2578, 2579,
	2561, 2577, 0, 2572, 0, 2567, 0, 2595, 2580, 2581,
	0, 0, 0, 0, 0, 0, 0, 0, 478, 0,
	478, 0, 2651, 0, 0, 1242, 2257, 0, 2596, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2608, 0,
	0, 0, 2618, 0, 2257, 0, 0, 0, 2212, 2623,
	80, 0, 733, 1102, 0, 0, 0, 2671, 2636, 0,
	129, 2585, 1784, 2586, 543, 0, 2626, 1728, 0, 0,
	0, 2652, 2648, 0, 0, 2542, 698, 2641, 2642, 2653,
	0, 0, 80, 2654, 0, 0, 623, 2644, 2645, 0,
	733, 0, 0, 0, 0, 0, 543, 2376, 0, 0,
	2655, 127, 0, 2673, 406, 0, 2668, 2667, 2672, 0,
	127, 0, 0, 2211, 1027, 2685, 1246, 0, 0, 0,
	1018, 2675, 0, 0, 0, 1815, 0, 0, 0, 1242,
	0, 1831, 0, 477, 0, 0, 0, 0, 2683, 0,
	0, 554, 0, 0, 700, 718, 0, 0, 127, 2403,
	2404, 2405, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 458, 0, 0, 129, 0, 0, 0, 127, 733,
	2711, 0, 0, 0, 0, 0, 80, 0, 717, 127,
	2713, 0, 729, 2712, 2735, 0, 0, 2714, 0, 2743,
	0, 1860, 0, 2741, 0, 2722, 1863, 733, 2726, 0,
	1936, 1865, 1866, 129, 934, 0, 1871, 1872, 1873, 1874,
	1875, 1876, 1877, 1878, 1101, 0, 1881, 1935, 2731, 2444,
	1246, 1886, 1887, 1888, 1889, 0, 0, 0, 1893, 1894,
	1895, 2257, 0, 0, 0, 1898, 1899, 1900, 2787, 0,
	0, 733, 2785, 1906, 0, 733, 1909, 1910, 0, 0,
	2794, 1915, 2797, 2825, 0, 0, 1921, 0, 1922, 1923,
	1924, 2813, 1925, 1926, 0, 0, 0, 0, 80, 0,
	2821, 2673, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1951, 1952, 0, 0, 0, 0, 0, 0, 2834,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2819,
	0, 0, 733, 2257, 0, 0, 0, 0, 1897, 0,
	0, 2847, 0, 2859, 0, 0, 0, 0, 0, 0,
	0, 0, 733, 0, 2846, 0, 0, 0, 2850, 0,
	1920, 2735, 2873, 2848, 0, 2540, 2541, 0, 0, 0,
	2865, 0, 2868, 2872, 733, 2891, 733, 0, 455, 2544,
	2545, 2546, 2547, 0, 0, 0, 0, 2551, 0, 0,
	0, 0, 0, 0, 0, 2894, 0, 0, 2892, 0,
	80, 458, 0, 0, 0, 0, 80, 0, 0, 733,
	0, 2912, 0, 0, 2257, 0, 0, 0, 0, 2919,
	1234, 733, 1248, 2907, 2883, 2910, 0, 2917, 0, 0,
	80, 0, 0, 0, 0, 80, 0, 2927, 0, 2922,
	733, 2945, 2948, 2921, 2961, 2942, 2159, 0, 2941, 543,
	2960, 2940, 2963, 455, 2939, 2962, 2926, 0, 2929, 129,
	0, 2969, 2967, 127, 80, 0, 0, 80, 80, 0,
	0, 0, 80, 0, 0, 2974, 458, 2973, 2976, 0,
	733, 2919, 0, 0, 0, 2982, 0, 0, 0, 0,
	0, 2950, 0, 0, 0, 0, 80, 2994, 0, 80,
	0, 2399, 0, 3002, 0, 0, 3004, 127, 0, 2919,
	2999, 0, 0, 0, 0, 0, 80, 0, 80, 0,
	0, 478, 80, 0, 0, 0, 0, 0, 0, 2919,
	0, 2919, 0, 3015, 80, 0, 0, 80, 0, 80,
	2200, 0, 0, 80, 2148, 0, 0, 2919, 3019, 0,
	2156, 0, 2919, 0, 0, 0, 2919, 0, 477, 0,
	0, 0, 2166, 2167, 0, 2681, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2175, 0, 0, 0, 2179,
	1030, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 0, 1046,
	1047, 1048, 0, 1051, 0, 1054, 1055, 1056, 1057, 1058,
	1129, 1128, 1138, 1139, 1131, 1132, 1133, 1134, 1135, 1136,
	1137, 1130, 0, 2214, 1140, 2385, 0, 0, 0, 0,
	1693, 1694, 0, 1699, 1700, 1701, 1702, 1703, 0, 0,
	2716, 2398, 0, 0, 0, 0, 0, 0, 0, 1341,
	0, 1713, 1714, 1715, 0, 0, 2245, 1129, 1128, 1138,
	1139, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1130, 698,
	0, 1140, 1373, 0, 1129, 1128, 1138, 1139, 1131, 1132,
	1133, 1134, 1135, 1136, 1137, 1130, 0, 2204, 1140, 1390,
	1391, 1392, 1393, 1394, 1543, 1548, 1549, 0, 0, 0,
	1553, 0, 1555, 1556, 1557, 1558, 0, 1560, 0, 0,
	1563, 0, 0, 0, 0, 1568, 1569, 1570, 1571, 2384,
	0, 0, 1575, 1576, 1577, 0, 0, 0, 0, 0,
	1583, 1584, 0, 2247, 0, 1590, 1593, 0, 1598, 2199,
	1129, 1128, 1138, 1139, 1131, 1132, 1133, 1134, 1135, 1136,
	1137, 1130, 0, 0, 1140, 0, 0, 0, 0, 0,
	1606, 0, 1609, 1610, 0, 0, 0, 0, 1129, 1128,
	1138, 1139, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1130,
	0, 0, 1140, 0, 0, 0, 0, 127, 127, 127,
	0, 0, 0, 0, 0, 0, 0, 718, 0, 0,
	0, 0, 718, 0, 0, 0, 0, 0, 0, 36,
	0, 72, 39, 40, 0, 0, 0, 0, 0, 0,
	0, 0, 1473, 59, 0, 0, 2198, 0, 0, 78,
	717, 0, 41, 0, 0, 717, 1266, 2375, 0, 0,
	0, 0, 0, 0, 0, 1497, 1129, 1128, 1138, 1139,
	1131, 1132, 1133, 1134, 1135, 1136, 1137, 1130, 0, 0,
	1140, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 81, 0, 2387, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2396, 2397, 0, 0, 0, 0,
	2402, 0, 0, 0, 0, 2367, 0, 2774, 0, 0,
	2978, 2981, 2977, 0, 0, 2413, 2414, 2959, 2416, 553,
	0, 2417, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2966, 0, 2146, 0, 0, 0, 0,
	0, 0, 2430, 1129, 1128, 1138, 1139, 1131, 1132, 1133,
	1134, 1135, 1136, 1137, 1130, 0, 0, 1140, 0, 0,
	0, 0, 2985, 1129, 1128, 1138, 1139, 1131, 1132, 1133,
	1134, 1135, 1136, 1137, 1130, 0, 0, 1140, 0, 0,
	1613, 0, 0, 2409, 0, 0, 0, 0, 0, 0,
	1196, 0, 0, 43, 74, 46, 45, 48, 1645, 0,
	2421, 2422, 0, 0, 2423, 0, 0, 2425, 2775, 0,
	0, 0, 0, 0, 0, 1196, 127, 0, 0, 0,
	0, 1349, 1352, 0, 49, 77, 76, 0, 0, 0,
	0, 47, 0, 0, 0, 0, 127, 0, 0, 127,
	0, 0, 1349, 1352, 0, 0, 0, 1382, 1340, 2022,
	2023, 2024, 2026, 0, 1348, 1351, 127, 127, 127, 127,
	127, 0, 0, 402, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1348, 1351, 0, 0, 0,
	0, 1410, 57, 58, 1861, 2776, 0, 0, 0, 0,
	0, 0, 1867, 0, 0, 0, 0, 0, 0, 66,
	0, 67, 0, 1879, 1880, 1755, 2548, 2549, 2550, 0,
	2552, 1756, 1757, 0, 0, 0, 1892, 0, 1764, 0,
	0, 0, 0, 0, 0, 0, 68, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2569, 2570, 2571, 0,
	0, 1916, 0, 0, 0, 0, 0, 2583, 1859, 1777,
	0, 0, 0, 0, 2777, 75, 0, 53, 54, 61,
	0, 62, 0, 0, 380, 0, 1445, 0, 0, 0,
	0, 0, 0, 0, 1018, 0, 1129, 1128, 1138, 1139,
	1131, 1132, 1133, 1134, 1135, 1136, 1137, 1130, 0, 127,
	1140, 477, 0, 1443, 0, 0, 1446, 1447, 1448, 0,
	1450, 1451, 0, 0, 1452, 0, 0, 0, 0, 0,
	1453, 383, 127, 0, 1454, 1455, 0, 1456, 1457, 0,
	392, 400, 401, 0, 1382, 0, 0, 729, 1129, 1128,
	1138, 1139, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1130,
	0, 0, 1140, 2657, 2658, 0, 0, 2659, 2660, 2661,
	2662, 0, 0, 0, 73, 389, 0, 729, 390, 0,
	0, 398, 399, 0, 0, 0, 1547, 1547, 1547, 0,
	0, 0, 1547, 1547, 1547, 1547, 1547, 1547, 1547, 1547,
	0, 0, 1547, 0, 0, 0, 0, 1547, 1547, 1547,
	1547, 0, 0, 0, 1547, 1547, 1547, 1541, 0, 0,
	0, 0, 1547, 1547, 0, 79, 0, 1547, 1547, 0,
	1547, 0, 0, 553, 718, 0, 0, 0, 395, 0,
	0, 0, 0, 0, 1572, 1573, 0, 0, 0, 0,
	0, 0, 1547, 1547, 1547, 1547, 0, 127, 0, 396,
	0, 0, 0, 0, 0, 0, 127, 717, 0, 477,
	0, 0, 0, 0, 127, 127, 0, 0, 127, 1648,
	1382, 718, 0, 0, 0, 0, 2727, 0, 0, 0,
	0, 2732, 0, 0, 0, 1382, 0, 0, 0, 2282,
	0, 0, 0, 0, 2738, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 717, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 381, 0, 0, 0, 729, 0,
	0, 729, 729, 0, 0, 0, 0, 0, 0, 0,
	2798, 0, 0, 0, 0, 0, 2804, 0, 0, 0,
	0, 0, 0, 0, 1196, 0, 2817, 0, 394, 384,
	385, 0, 405, 0, 0, 0, 386, 388, 0, 382,
	404, 403, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 127, 0, 0, 0, 0, 0, 127, 127,
	0, 0, 0, 0, 0, 127, 0, 0, 0, 2045,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 397, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1775, 1776, 127, 0, 0, 0,
	0, 0, 2076, 0, 0, 0, 0, 0, 0, 0,
	2867, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 127, 0, 477, 0, 2388, 2389, 0, 2390, 0,
	0, 2392, 0, 2394, 0, 0, 0, 0, 0, 0,
	0, 0, 2826, 2827, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1305, 0, 0, 0, 0,
	1799, 0, 0, 0, 1799, 0, 0, 0, 0, 0,
	2855, 2858, 0, 0, 0, 0, 0, 0, 0, 2139,
	0, 0, 0, 0, 1382, 0, 1799, 0, 0, 1799,
	0, 0, 0, 0, 0, 2884, 0, 0, 0, 0,
	2439, 2440, 0, 0, 1806, 0, 0, 0, 1837, 0,
	0, 0, 0, 0, 0, 0, 0, 729, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1547, 0, 0, 0,
	0, 0, 0, 0, 1547, 0, 2911, 0, 0, 0,
	0, 0, 0, 0, 0, 1547, 1547, 0, 0, 1292,
	0, 0, 0, 0, 0, 0, 0, 2858, 1547, 0,
	0, 0, 1547, 0, 0, 0, 0, 0, 3005, 3006,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1547, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 718, 127,
	127, 127, 127, 127, 0, 0, 0, 0, 0, 0,
	0, 477, 0, 0, 0, 127, 0, 0, 0, 0,
	477, 0, 0, 0, 0, 1547, 0, 127, 0, 0,
	1306, 717, 0, 0, 0, 718, 0, 0, 0, 3003,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 717, 2296,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 729, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2330, 127, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2043, 2363, 127,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2057, 2061, 2065, 1319, 1322, 1323, 1324, 1325,
	1326, 1327, 0, 1328, 1329, 1330, 1331, 1332, 1333, 1334,
	1335, 0, 1307, 1308, 1309, 1310, 1286, 1290, 1320, 1287,
	1293, 1289, 1291, 1288, 0, 1294, 1295, 1296, 1297, 1298,
	1299, 1300, 1301, 1302, 1303, 1304, 1311, 1312, 1313, 1314,
	1315, 1316, 1317, 1318, 0, 0, 0, 0, 0, 0,
	0, 0, 2096, 0, 0, 0, 127, 0, 0, 0,
	0, 36, 37, 72, 39, 40, 0, 1547, 0, 0,
	0, 0, 0, 0, 0, 59, 1547, 0, 1382, 729,
	729, 78, 0, 0, 41, 63, 64, 0, 0, 0,
	0, 0, 60, 0, 0, 0, 0, 0, 0, 729,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 729, 0, 0, 0, 0, 2157, 0, 0, 50,
	0, 0, 0, 81, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1321, 0, 0, 0,
	0, 0, 718, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2465, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 717, 0, 729, 0, 2219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 729, 0, 729, 0, 729, 0,
	2256, 0, 0, 0, 0, 43, 74, 46, 45, 48,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 49, 77, 76, 0,
	0, 0, 0, 47, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 65, 127, 0,
	0, 0, 0, 0, 0, 0, 0, 536, 0, 0,
	0, 0, 127, 0, 0, 0, 0, 0, 0, 2307,
	2308, 2309, 0, 0, 0, 0, 0, 0, 2353, 0,
	0, 0, 0, 0, 57, 58, 0, 541, 0, 0,
	0, 0, 0, 0, 0, 127, 0, 0, 0, 2334,
	0, 66, 0, 67, 0, 492, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 554, 0, 0, 0, 0,
	0, 0, 0, 500, 2359, 0, 0, 0, 68, 2364,
	0, 0, 0, 0, 0, 0, 2368, 0, 0, 2369,
	0, 0, 2371, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 51, 75, 0, 53,
	54, 61, 0, 62, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 477, 0, 0, 0, 718, 0, 0, 540, 0,
	0, 0, 0, 0, 0, 0, 0, 1278, 0, 0,
	0, 0, 0, 0, 0, 498, 481, 0, 0, 0,
	0, 0, 0, 0, 0, 502, 0, 0, 717, 0,
	0, 0, 0, 0, 527, 0, 0, 493, 0, 488,
	0, 2427, 0, 0, 0, 0, 501, 0, 0, 2427,
	2427, 2427, 0, 0, 0, 0, 73, 0, 0, 729,
	0, 0, 0, 1305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2427, 0, 0, 0, 127, 0, 0,
	0, 0, 0, 0, 505, 503, 0, 0, 0, 506,
	0, 0, 0, 0, 2737, 514, 482, 0, 518, 0,
	0, 0, 0, 0, 0, 0, 480, 79, 0, 0,
	0, 0, 2061, 0, 0, 0, 0, 0, 0, 0,
	496, 520, 0, 0, 0, 0, 0, 0, 494, 495,
	497, 524, 0, 526, 532, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1292, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 729, 0, 0,
	0, 0, 0, 0, 0, 729, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 477, 0, 477, 483, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 504, 0, 0,
	0, 0, 0, 0, 0, 2560, 0, 0, 0, 0,
	0, 2427, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2256, 0, 0, 1306, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 533, 534,
	0, 0, 0, 2256, 484, 485, 486, 487, 489, 507,
	508, 512, 513, 530, 529, 528, 531, 535, 538, 537,
	539, 490, 491, 499, 509, 510, 511, 515, 516, 525,
	521, 523, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 127, 554,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2647, 0, 0, 0, 0, 522, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	517, 519, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2670, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1319, 1322, 1323, 1324, 1325, 1326, 1327,
	0, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 0,
	1307, 1308, 1309, 1310, 1286, 1290, 1320, 1287, 1293, 1289,
	1291, 1288, 127, 1294, 1295, 1296, 1297, 1298, 1299, 1300,
	1301, 1302, 1303, 1304, 1311, 1312, 1313, 1314, 1315, 1316,
	1317, 1318, 0, 0, 0, 0, 0, 0, 0, 0,
	718, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2256, 127, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1385, 0, 0,
	0, 0, 0, 717, 0, 0, 0, 0, 729, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2256, 0, 1321, 0, 2800, 626, 627, 628,
	629, 630, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 729, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 729, 0, 2427, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2898, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2901, 0, 0, 0, 0, 477, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 729, 0, 0, 0, 889, 864, 340, 809, 892,
	766, 792, 907, 797, 801, 844, 750, 822, 266, 788,
	751, 0, 770, 740, 780, 741, 767, 183, 765, 866,
	825, 891, 222, 839, 0, 182, 171, 230, 228, 0,
	0, 2898, 273, 339, 890, 817, 0, 899, 225, 0,
	834, 900, 327, 250, 0, 0, 813, 876, 820, 862,
	808, 846, 759, 833, 894, 789, 841, 895, 0, 0,
	0, 0, 2828, 0, 0, 0, 0, 0, 0, 0,
	0, 754, 0, 837, 888, 783, 840, 811, 843, 910,
	738, 836, 0, 745, 752, 906, 883, 773, 774, 775,
	0, 0, 0, 0, 0, 0, 0, 812, 821, 856,
	805, 360, 277, 294, 315, 799, 285, 786, 0, 0,
	0, 0, 0, 0, 0, 0, 771, 0, 831, 0,
	0, 0, 753, 746, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 810, 0, 0, 0,
	758, 737, 772, 858, 0, 735, 251, 148, 863, 882,
	807, 213, 904, 886, 804, 803, 287, 0, 334, 201,
	223, 153, 130, 146, 164, 200, 262, 855, 309, 785,
	736, 867, 768, 781, 172, 777, 301, 270, 359, 790,
	828, 300, 226, 349, 851, 887, 358, 794, 870, 368,
	373, 776, 818, 756, 324, 185, 180, 184, 0, 137,
	787, 284, 177, 218, 806, 845, 769, 168, 853, 832,
	869, 323, 346, 134, 248, 347, 372, 155, 341, 249,
	255, 165, 167, 166, 147, 318, 345, 160, 170, 328,
	305, 335, 176, 0, 0, 2831, 2832, 2833, 800, 791,
	0, 0, 364, 802, 312, 311, 796, 208, 861, 835,
	742, 293, 848, 214, 136, 337, 376, 154, 220, 342,
	734, 195, 261, 174, 271, 272, 192, 132, 289, 242,
	243, 241, 244, 199, 782, 850, 860, 291, 314, 344,
	156, 331, 778, 779, 784, 857, 303, 868, 880, 893,
	233, 188, 191, 202, 209, 842, 298, 332, 365, 0,
	149, 138, 338, 357, 161, 313, 316, 374, 299, 141,
	355, 333, 246, 215, 216, 139, 0, 140, 296, 181,
	198, 175, 265, 0, 197, 286, 352, 353, 173, 377,
	150, 367, 143, 151, 366, 258, 0, 257, 369, 348,
	356, 247, 235, 0, 142, 354, 245, 234, 221, 190,
	204, 282, 229, 283, 205, 253, 252, 254, 231, 236,
	0, 743, 0, 329, 362, 378, 336, 158, 764, 317,
	343, 793, 290, 159, 196, 189, 281, 256, 152, 207,
	326, 219, 227, 295, 375, 269, 302, 162, 361, 325,
	186, 762, 763, 760, 0, 761, 823, 824, 896, 897,
	898, 859, 755, 0, 877, 878, 0, 0, 0, 0,
	0, 865, 884, 885, 847, 908, 798, 169, 744, 747,
	748, 749, 757, 814, 815, 827, 830, 873, 872, 871,
	874, 879, 902, 901, 903, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 816, 278, 826, 133,
	144, 224, 909, 292, 194, 363, 739, 179, 0, 819,
	829, 854, 131, 145, 157, 163, 178, 187, 193, 203,
	206, 210, 211, 212, 217, 232, 237, 238, 239, 240,
	259, 260, 263, 264, 267, 268, 274, 275, 276, 279,
	280, 288, 852, 297, 304, 306, 307, 308, 310, 319,
	320, 321, 322, 330, 350, 351, 370, 371, 881, 0,
	795, 135, 875, 905, 838, 849, 889, 864, 340, 809,
	892, 766, 792, 907, 797, 801, 844, 750, 822, 266,
	788, 751, 0, 770, 740, 780, 741, 767, 183, 765,
	866, 825, 891, 222, 839, 0, 182, 171, 230, 228,
	0, 0, 0, 273, 339, 890, 817, 0, 899, 225,
	0, 834, 900, 327, 250, 0, 0, 813, 876, 820,
	862, 808, 846, 759, 833, 894, 789, 841, 895, 0,
	0, 0, 0, 732, 0, 1670, 1671, 0, 0, 0,
	0, 0, 754, 0, 837, 888, 783, 840, 811, 843,
	910, 738, 836, 0, 745, 752, 906, 883, 773, 774,
	775, 1981, 0, 0, 0, 0, 0, 0, 812, 821,
	856, 805, 360, 277, 294, 315, 799, 285, 786, 0,
	0, 0, 0, 0, 0, 0, 0, 771, 0, 831,
	0, 0, 0, 753, 746, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 810, 0, 0,
	0, 758, 737, 772, 858, 0, 735, 251, 148, 863,
	882, 807, 213, 904, 886, 804, 803, 287, 0, 334,
	201, 223, 153, 130, 146, 164, 200, 262, 855, 309,
	785, 736, 867, 768, 781, 172, 777, 301, 270, 359,
	790, 828, 300, 226, 349, 851, 887, 358, 794, 870,
	368, 373, 776, 818, 756, 324, 185, 180, 184, 0,
	137, 787, 284, 177, 218, 806, 845, 769, 168, 853,
	832, 869, 323, 346, 134, 248, 347, 372, 155, 341,
	249, 255, 165, 167, 166, 147, 318, 345, 160, 170,
	328, 305, 335, 176, 0, 0, 0, 0, 0, 800,
	791, 0, 0, 364, 802, 312, 311, 796, 208, 861,
	835, 742, 293, 848, 214, 136, 337, 376, 154, 220,
	342, 734, 195, 261, 174, 271, 272, 192, 132, 289,
	242, 243, 241, 244, 199, 782, 850, 860, 291, 314,
	344, 156, 331, 778, 779, 784, 857, 303, 868, 880,
	893, 233, 188, 191, 202, 209, 842, 298, 332, 365,
	0, 149, 138, 338, 357, 161, 313, 316, 374, 299,
	141, 355, 333, 246, 215, 216, 139, 0, 140, 296,
	181, 198, 175, 265, 0, 197, 286, 352, 353, 173,
	377, 150, 367, 143, 151, 366, 258, 0, 257, 369,
	348, 356, 247, 235, 0, 142, 354, 245, 234, 221,
	190, 204, 282, 229, 283, 205, 253, 252, 254, 231,
	236, 0, 743, 0, 329, 362, 378, 336, 158, 764,
	317, 343, 793, 290, 159, 196, 189, 281, 256, 152,
	207, 326, 219, 227, 295, 375, 269, 302, 162, 361,
	325, 186, 762, 763, 760, 0, 761, 823, 824, 896,
	897, 898, 859, 755, 0, 877, 878, 0, 0, 0,
	0, 0, 865, 884, 885, 847, 908, 798, 169, 744,
	747, 748, 749, 757, 814, 815, 827, 830, 873, 872,
	871, 874, 879, 902, 901, 903, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 816, 278, 826,
	133, 144, 224, 909, 292, 194, 363, 739, 179, 0,
	819, 829, 854, 131, 145, 157, 163, 178, 187, 193,
	203, 206, 210, 211, 212, 217, 232, 237, 238, 239,
	240, 259, 260, 263, 264, 267, 268, 274, 275, 276,
	279, 280, 288, 852, 297, 304, 306, 307, 308, 310,
	319, 320, 321, 322, 330, 350, 351, 370, 371, 881,
	0, 795, 135, 875, 905, 838, 849, 889, 864, 340,
	809, 892, 766, 792, 907, 797, 801, 844, 750, 822,
	266, 788, 751, 0, 770, 740, 780, 741, 767, 183,
	765, 866, 825, 891, 222, 839, 0, 182, 171, 230,
	228, 0, 0, 0, 273, 339, 890, 817, 0, 899,
	225, 0, 834, 900, 327, 250, 0, 0, 813, 876,
	820, 862, 808, 846, 759, 833, 894, 789, 841, 895,
	0, 0, 0, 0, 732, 0, 1670, 1671, 0, 0,
	0, 0, 0, 754, 0, 837, 888, 783, 840, 811,
	843, 910, 738, 836, 0, 745, 752, 906, 883, 773,
	774, 775, 0, 0, 0, 0, 0, 0, 0, 812,
	821, 856, 805, 360, 277, 294, 315, 799, 285, 786,
	0, 0, 0, 0, 0, 0, 0, 0, 771, 0,
	831, 0, 0, 0, 753, 746, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 810, 0,
	0, 0, 758, 737, 772, 858, 0, 735, 251, 148,
	863, 882, 807, 213, 904, 886, 804, 803, 287, 0,
	334, 201, 223, 153, 130, 146, 164, 200, 262, 855,
	309, 785, 736, 867, 768, 781, 172, 777, 301, 270,
	359, 790, 828, 300, 226, 349, 851, 887, 358, 794,
	870, 368, 373, 776, 818, 756, 324, 185, 180, 184,
	0, 137, 787, 284, 177, 218, 806, 845, 769, 168,
	853, 832, 869, 323, 346, 134, 248, 347, 372, 155,
	341, 249, 255, 165, 167, 166, 147, 318, 345, 160,
	170, 328, 305, 335, 176, 0, 0, 0, 0, 0,
	800, 791, 0, 0, 364, 802, 312, 311, 796, 208,
	861, 835, 742, 293, 848, 214, 136, 337, 376, 154,
	220, 342, 734, 195, 261, 174, 271, 272, 192, 132,
	289, 242, 243, 241, 244, 199, 782, 850, 860, 291,
	314, 344, 156, 331, 778, 779, 784, 857, 303, 868,
	880, 893, 233, 188, 191, 202, 209, 842, 298, 332,
	365, 0, 149, 138, 338, 357, 161, 313, 316, 374,
	299, 141, 355, 333, 246, 215, 216, 139, 0, 140,
	296, 181, 198, 175, 265, 0, 197, 286, 352, 353,
	173, 377, 150, 367, 143, 151, 366, 258, 0, 257,
	369, 348, 356, 247, 235, 0, 142, 354, 245, 234,
	221, 190, 204, 282, 229, 283, 205, 253, 252, 254,
	231, 236, 0, 743, 0, 329, 362, 378, 336, 158,
	764, 317, 343, 793, 290, 159, 196, 189, 281, 256,
	152, 207, 326, 219, 227, 295, 375, 269, 302, 162,
	361, 325, 186, 762, 763, 760, 0, 761, 823, 824,
	896, 897, 898, 859, 755, 0, 877, 878, 0, 0,
	0, 0, 0, 865, 884, 885, 847, 908, 798, 169,
	744, 747, 748, 749, 757, 814, 815, 827, 830, 873,
	872, 871, 874, 879, 902, 901, 903, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 816, 278,
	826, 133, 144, 224, 909, 292, 194, 363, 739, 179,
	0, 819, 829, 854, 131, 145, 157, 163, 178, 187,
	193, 203, 206, 210, 211, 212, 217, 232, 237, 238,
	239, 240, 259, 260, 263, 264, 267, 268, 274, 275,
	276, 279, 280, 288, 852, 297, 304, 306, 307, 308,
	310, 319, 320, 321, 322, 330, 350, 351, 370, 371,
	881, 0, 795, 135, 875, 905, 838, 849, 889, 2216,
	340, 809, 892, 766, 792, 907, 797, 801, 844, 750,
	822, 266, 788, 751, 0, 770, 740, 780, 741, 767,
	183, 765, 866, 825, 891, 222, 839, 0, 182, 171,
	230, 228, 0, 0, 0, 273, 339, 890, 817, 0,
	899, 225, 0, 834, 900, 327, 250, 0, 0, 813,
	876, 820, 862, 808, 846, 759, 833, 894, 789, 841,
	895, 81, 0, 1092, 0, 732, 0, 0, 0, 0,
	0, 0, 0, 0, 754, 0, 837, 888, 783, 840,
	811, 843, 910, 738, 836, 0, 745, 752, 906, 883,
	773, 774, 775, 0, 0, 0, 0, 0, 0, 0,
	812, 821, 856, 805, 360, 277, 294, 315, 799, 285,
	786, 0, 0, 0, 0, 0, 0, 0, 0, 771,
	0, 831, 0, 0, 0, 753, 746, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 810,
	0, 0, 0, 758, 737, 772, 858, 0, 735, 251,
	148, 863, 882, 807, 213, 904, 886, 804, 803, 287,
	0, 334, 201, 223, 153, 130, 146, 164, 200, 262,
	855, 309, 785, 736, 867, 768, 781, 172, 777, 301,
	270, 359, 790, 828, 300, 226, 349, 851, 887, 358,
	794, 870, 368, 373, 776, 818, 756, 324, 185, 180,
	184, 0, 137, 787, 284, 177, 218, 806, 845, 769,
	168, 853, 832, 869, 323, 346, 134, 248, 347, 372,
	155, 341, 249, 255, 165, 167, 166, 147, 318, 345,
	160, 170, 328, 305, 335, 176, 0, 0, 0, 0,
	0, 800, 791, 0, 0, 364, 802, 312, 311, 796,
	208, 861, 835, 742, 293, 848, 214, 136, 337, 376,
	154, 220, 342, 734, 195, 261, 174, 271, 272, 192,
	132, 289, 242, 243, 241, 244, 199, 782, 850, 860,
	291, 314, 344, 156, 331, 778, 779, 784, 857, 303,
	868, 880, 893, 233, 188, 191, 202, 209, 842, 298,
	332, 365, 0, 149, 138, 338, 357, 161, 313, 316,
	374, 299, 141, 355, 333, 246, 215, 216, 139, 0,
	140, 296, 181, 198, 175, 265, 0, 197, 286, 352,
	353, 173, 377, 150, 367, 143, 151, 366, 258, 0,
	257, 369, 348, 356, 247, 235, 0, 142, 354, 245,
	234, 221, 190, 204, 282, 229, 283, 205, 253, 252,
	254, 231, 236, 0, 743, 0, 329, 362, 378, 336,
	158, 764, 317, 343, 793, 290, 159, 196, 189, 281,
	256, 152, 207, 326, 219, 227, 295, 375, 269, 302,
	162, 361, 325, 186, 762, 763, 760, 0, 761, 823,
	824, 896, 897, 898, 859, 755, 0, 877, 878, 0,
	0, 0, 0, 0, 865, 884, 885, 847, 908, 798,
	169, 744, 747, 748, 749, 757, 814, 815, 827, 830,
	873, 872, 871, 874, 879, 902, 901, 903, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 816,
	278, 826, 133, 144, 224, 2217, 292, 194, 363, 739,
	179, 0, 819, 829, 854, 131, 145, 157, 163, 178,
	187, 193, 203, 206, 210, 211, 212, 217, 232, 237,
	238, 239, 240, 259, 260, 263, 264, 267, 268, 274,
	275, 276, 279, 280, 288, 852, 297, 304, 306, 307,
	308, 310, 319, 320, 321, 322, 330, 350, 351, 370,
	371, 881, 0, 795, 135, 875, 905, 838, 849, 889,
	864, 340, 809, 892, 766, 792, 907, 797, 801, 844,
	750, 822, 266, 788, 751, 0, 770, 740, 780, 741,
	767, 183, 765, 866, 825, 891, 222, 839, 0, 182,
	171, 230, 228, 0, 0, 0, 273, 339, 890, 817,
	0, 899, 225, 0, 834, 900, 327, 250, 0, 0,
	813, 876, 820, 862, 808, 846, 759, 833, 894, 789,
	841, 895, 0, 0, 0, 0, 732, 0, 0, 0,
	0, 0, 0, 0, 0, 754, 0, 837, 888, 783,
	840, 811, 843, 910, 738, 836, 0, 745, 752, 906,
	883, 773, 774, 775, 0, 0, 0, 0, 0, 0,
	0, 812, 821, 856, 805, 360, 277, 294, 315, 799,
	285, 786, 0, 0, 0, 0, 0, 0, 2537, 0,
	771, 0, 831, 0, 0, 0, 753, 746, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	810, 0, 0, 0, 758, 737, 772, 858, 0, 735,
	251, 148, 863, 882, 807, 213, 904, 886, 804, 803,
	287, 0, 334, 201, 223, 153, 130, 146, 164, 200,
	262, 855, 309, 785, 736, 867, 768, 781, 172, 777,
	301, 270, 359, 790, 828, 300, 226, 349, 851, 887,
	358, 794, 870, 368, 373, 776, 818, 756, 324, 185,
	180, 184, 0, 137, 787, 284, 177, 218, 806, 845,
	769, 168, 853, 832, 869, 323, 346, 134, 248, 347,
	372, 155, 341, 249, 255, 165, 167, 166, 147, 318,
	345, 160, 170, 328, 305, 335, 176, 0, 0, 0,
	0, 0, 800, 791, 0, 0, 364, 802, 312, 311,
	796, 208, 861, 835, 742, 293, 848, 214, 136, 337,
	376, 154, 220, 342, 734, 195, 261, 174, 271, 272,
	192, 132, 289, 242, 243, 241, 244, 199, 782, 850,
	860, 291, 314, 344, 156, 331, 778, 779, 784, 857,
	303, 868, 880, 893, 233, 188, 191, 202, 209, 842,
	298, 332, 365, 0, 149, 138, 338, 357, 161, 313,
	316, 374, 299, 141, 355, 333, 246, 215, 216, 139,
	0, 140, 296, 181, 198, 175, 265, 0, 197, 286,
	352, 353, 173, 377, 150, 367, 143, 151, 366, 258,
	0, 257, 369, 348, 356, 247, 235, 0, 142, 354,
	245, 234, 221, 190, 204, 282, 229, 283, 205, 253,
	252, 254, 231, 236, 0, 743, 0, 329, 362, 378,
	336, 158, 764, 317, 343, 793, 290, 159, 196, 189,
	281, 256, 152, 207, 326, 219, 227, 295, 375, 269,
	302, 162, 361, 325, 186, 762, 763, 760, 0, 761,
	823, 824, 896, 897, 898, 859, 755, 0, 877, 878,
	0, 0, 0, 0, 0, 865, 884, 885, 847, 908,
	798, 169, 744, 747, 748, 749, 757, 814, 815, 827,
	830, 873, 872, 871, 874, 879, 902, 901, 903, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	816, 278, 826, 133, 144, 224, 909, 292, 194, 363,
	739, 179, 0, 819, 829, 854, 131, 145, 157, 163,
	178, 187, 193, 203, 206, 210, 211, 212, 217, 232,
	237, 238, 239, 240, 259, 260, 263, 264, 267, 268,
	274, 275, 276, 279, 280, 288, 852, 297, 304, 306,
	307, 308, 310, 319, 320, 321, 322, 330, 350, 351,
	370, 371, 881, 0, 795, 135, 875, 905, 838, 849,
	889, 864, 340, 809, 892, 766, 792, 907, 797, 801,
	844, 750, 822, 266, 788, 751, 0, 770, 740, 780,
	741, 767, 183, 765, 866, 825, 891, 222, 839, 0,
	182, 171, 230, 228, 0, 0, 0, 273, 339, 890,
	817, 0, 899, 225, 0, 834, 900, 327, 250, 0,
	0, 813, 876, 820, 862, 808, 846, 759, 833, 894,
	789, 841, 895, 0, 0, 0, 0, 559, 0, 0,
	0, 0, 0, 0, 0, 0, 754, 0, 837, 888,
	783, 840, 811, 843, 910, 738, 836, 0, 745, 752,
	906, 883, 773, 774, 775, 0, 0, 0, 0, 0,
	0, 0, 812, 821, 856, 805, 360, 277, 294, 315,
	799, 285, 786, 0, 0, 0, 0, 0, 0, 2152,
	0, 771, 0, 831, 0, 0, 0, 753, 746, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 810, 0, 0, 0, 758, 737, 772, 858, 0,
	735, 251, 148, 863, 882, 807, 213, 904, 886, 804,
	803, 287, 0, 334, 201, 223, 153, 130, 146, 164,
	200, 262, 855, 309, 785, 736, 867, 768, 781, 172,
	777, 301, 270, 359, 790, 828, 300, 226, 349, 851,
	887, 358, 794, 870, 368, 373, 776, 818, 756, 324,
	185, 180, 184, 0, 137, 787, 284, 177, 218, 806,
	845, 769, 168, 853, 832, 869, 323, 346, 134, 248,
	347, 372, 155, 341, 249, 255, 165, 167, 166, 147,
	318, 345, 160, 170, 328, 305, 335, 176, 0, 0,
	0, 0, 0, 800, 791, 0, 0, 364, 802, 312,
	311, 796, 208, 861, 835, 742, 293, 848, 214, 136,
	337, 376, 154, 220, 342, 734, 195, 261, 174, 271,
	272, 192, 132, 289, 242, 243, 241, 244, 199, 782,
	850, 860, 291, 314, 344, 156, 331, 778, 779, 784,
	857, 303, 868, 880, 893, 233, 188, 191, 202, 209,
	842, 298, 332, 365, 0, 149, 138, 338, 357, 161,
	313, 316, 374, 299, 141, 355, 333, 246, 215, 216,
	139, 0, 140, 296, 181, 198, 175, 265, 0, 197,
	286, 352, 353, 173, 377, 150, 367, 143, 151, 366,
	258, 0, 257, 369, 348, 356, 247, 235, 0, 142,
	354, 245, 234, 221, 190, 204, 282, 229, 283, 205,
	253, 252, 254, 231, 236, 0, 743, 0, 329, 362,
	378, 336, 158, 764, 317, 343, 793, 290, 159, 196,
	189, 281, 256, 152, 207, 326, 219, 227, 295, 375,
	269, 302, 162, 361, 325, 186, 762, 763, 760, 0,
	761, 823, 824, 896, 897, 898, 859, 755, 0, 877,
	878, 0, 0, 0, 0, 0, 865, 884, 885, 847,
	908, 798, 169, 744, 747, 748, 749, 757, 814, 815,
	827, 830, 873, 872, 871, 874, 879, 902, 901, 903,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 816, 278, 826, 133, 144, 224, 909, 292, 194,
	363, 739, 179, 0, 819, 829, 854, 131, 145, 157,
	163, 178, 187, 193, 203, 206, 210, 211, 212, 217,
	232, 237, 238, 239, 240, 259, 260, 263, 264, 267,
	268, 274, 275, 276, 279, 280, 288, 852, 297, 304,
	306, 307, 308, 310, 319, 320, 321, 322, 330, 350,
	351, 370, 371, 881, 0, 795, 135, 875, 905, 838,
	849, 889, 864, 340, 809, 892, 766, 792, 907, 797,
	801, 844, 750, 822, 266, 788, 751, 0, 770, 740,
	780, 741, 767, 183, 765, 866, 825, 891, 222, 839,
	0, 182, 171, 230, 228, 0, 0, 0, 273, 339,
	890, 817, 0, 899, 225, 0, 834, 900, 327, 250,
	0, 0, 813, 876, 820, 862, 808, 846, 759, 833,
	894, 789, 841, 895, 0, 0, 0, 0, 732, 0,
	0, 0, 0, 0, 0, 0, 0, 754, 0, 837,
	888, 783, 840, 811, 843, 910, 738, 836, 0, 745,
	752, 906, 883, 773, 774, 775, 0, 0, 0, 0,
	0, 0, 0, 812, 821, 856, 805, 360, 277, 294,
	315, 799, 285, 786, 0, 0, 0, 0, 0, 0,
	2142, 0, 771, 0, 831, 0, 0, 0, 753, 746,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 810, 0, 0, 0, 758, 737, 772, 858,
	0, 735, 251, 148, 863, 882, 807, 213, 904, 886,
	804, 803, 287, 0, 334, 201, 223, 153, 130, 146,
	164, 200, 262, 855, 309, 785, 736, 867, 768, 781,
	172, 777, 301, 270, 359, 790, 828, 300, 226, 349,
	851, 887, 358, 794, 870, 368, 373, 776, 818, 756,
	324, 185, 180, 184, 0, 137, 787, 284, 177, 218,
	806, 845, 769, 168, 853, 832, 869, 323, 346, 134,
	248, 347, 372, 155, 341, 249, 255, 165, 167, 166,
	147, 318, 345, 160, 170, 328, 305, 335, 176, 0,
	0, 0, 0, 0, 800, 791, 0, 0, 364, 802,
	312, 311, 796, 208, 861, 835, 742, 293, 848, 214,
	136, 337, 376, 154, 220, 342, 734, 195, 261, 174,
	271, 272, 192, 132, 289, 242, 243, 241, 244, 199,
	782, 850, 860, 291, 314, 344, 156, 331, 778, 779,
	784, 857, 303, 868, 880, 893, 233, 188, 191, 202,
	209, 842, 298, 332, 365, 0, 149, 138, 338, 357,
	161, 313, 316, 374, 299, 141, 355, 333, 246, 215,
	216, 139, 0, 140, 296, 181, 198, 175, 265, 0,
	197, 286, 352, 353, 173, 377, 150, 367, 143, 151,
	366, 258, 0, 257, 369, 348, 356, 247, 235, 0,
	142, 354, 245, 234, 221, 190, 204, 282, 229, 283,
	205, 253, 252, 254, 231, 236, 0, 743, 0, 329,
	362, 378, 336, 158, 764, 317, 343, 793, 290, 159,
	196, 189, 281, 256, 152, 207, 326, 219, 227, 295,
	375, 269, 302, 162, 361, 325, 186, 762, 763, 760,
	0, 761, 823, 824, 896, 897, 898, 859, 755, 0,
	877, 878, 0, 0, 0, 0, 0, 865, 884, 885,
	847, 908, 798, 169, 744, 747, 748, 749, 757, 814,
	815, 827, 830, 873, 872, 871, 874, 879, 902, 901,
	903, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 816, 278, 826, 133, 144, 224, 909, 292,
	194, 363, 739, 179, 0, 819, 829, 854, 131, 145,
	157, 163, 178, 187, 193, 203, 206, 210, 211, 212,
	217, 232, 237, 238, 239, 240, 259, 260, 263, 264,
	267, 268, 274, 275, 276, 279, 280, 288, 852, 297,
	304, 306, 307, 308, 310, 319, 320, 321, 322, 330,
	350, 351, 370, 371, 881, 0, 795, 135, 875, 905,
	838, 849, 889, 864, 340, 809, 892, 766, 792, 907,
	797, 801, 844, 750, 822, 266, 788, 751, 0, 770,
	740, 780, 741, 767, 183, 765, 866, 825, 891, 222,
	839, 0, 182, 171, 230, 228, 0, 0, 0, 273,
	339, 890, 817, 0, 899, 225, 0, 834, 900, 327,
	250, 0, 0, 813, 876, 820, 862, 808, 846, 759,
	833, 894, 789, 841, 895, 0, 0, 0, 0, 128,
	0, 0, 0, 0, 0, 0, 0, 0, 754, 0,
	837, 888, 783, 840, 811, 843, 910, 738, 836, 0,
	745, 752, 906, 883, 773, 774, 775, 0, 0, 0,
	0, 0, 0, 0, 812, 821, 856, 805, 360, 277,
	294, 315, 799, 285, 786, 0, 0, 0, 0, 0,
	0, 1649, 0, 771, 0, 831, 0, 0, 0, 753,
	746, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 810, 0, 0, 0, 758, 737, 772,
	858, 0, 735, 251, 148, 863, 882, 807, 213, 904,
	886, 804, 803, 287, 0, 334, 201, 223, 153, 130,
	146, 164, 200, 262, 855, 309, 785, 736, 867, 768,
	781, 172, 777, 301, 270, 359, 790, 828, 300, 226,
	349, 851, 887, 358, 794, 870, 368, 373, 776, 818,
	756, 324, 185, 180, 184, 0, 137, 787, 284, 177,
	218, 806, 845, 769, 168, 853, 832, 869, 323, 346,
	134, 248, 347, 372, 155, 341, 249, 255, 165, 167,
	166, 147, 318, 345, 160, 170, 328, 305, 335, 176,
	0, 0, 0, 0, 0, 800, 791, 0, 0, 364,
	802, 312, 311, 796, 208, 861, 835, 742, 293, 848,
	214, 136, 337, 376, 154, 220, 342, 734, 195, 261,
	174, 271, 272, 192, 132, 289, 242, 243, 241, 244,
	199, 782, 850, 860, 291, 314, 344, 156, 331, 778,
	779, 784, 857, 303, 868, 880, 893, 233, 188, 191,
	202, 209, 842, 298, 332, 365, 0, 149, 138, 338,
	357, 161, 313, 316, 374, 299, 141, 355, 333, 246,
	215, 216, 139, 0, 140, 296, 181, 198, 175, 265,
	0, 197, 286, 352, 353, 173, 377, 150, 367, 143,
	151, 366, 258, 0, 257, 369, 348, 356, 247, 235,
	0, 142, 354, 245, 234, 221, 190, 204, 282, 229,
	283, 205, 253, 252, 254, 231, 236, 0, 743, 0,
	329, 362, 378, 336, 158, 764, 317, 343, 793, 290,
	159, 196, 189, 281, 256, 152, 207, 326, 219, 227,
	295, 375, 269, 302, 162, 361, 325, 186, 762, 763,
	760, 0, 761, 823, 824, 896, 897, 898, 859, 755,
	0, 877, 878, 0, 0, 0, 0, 0, 865, 884,
	885, 847, 908, 798, 169, 744, 747, 748, 749, 757,
	814, 815, 827, 830, 873, 872, 871, 874, 879, 902,
	901, 903, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 816, 278, 826, 133, 144, 224, 909,
	292, 194, 363, 739, 179, 0, 819, 829, 854, 131,
	145, 157, 163, 178, 187, 193, 203, 206, 210, 211,
	212, 217, 232, 237, 238, 239, 240, 259, 260, 263,
	264, 267, 268, 274, 275, 276, 279, 280, 288, 852,
	297, 304, 306, 307, 308, 310, 319, 320, 321, 322,
	330, 350, 351, 370, 371, 881, 0, 795, 135, 875,
	905, 838, 849, 889, 864, 340, 809, 892, 766, 792,
	907, 797, 801, 844, 750, 822, 266, 788, 751, 0,
	770, 740, 780, 741, 767, 183, 765, 866, 825, 891,
	222, 839, 0, 182, 171, 230, 228, 0, 0, 0,
	273, 339, 890, 817, 0, 899, 225, 0, 834, 900,
	327, 250, 0, 0, 813, 876, 820, 862, 808, 846,
	759, 833, 894, 789, 841, 895, 0, 0, 0, 0,
	559, 0, 0, 0, 0, 0, 0, 0, 0, 754,
	0, 837, 888, 783, 840, 811, 843, 910, 738, 836,
	0, 745, 752, 906, 883, 773, 774, 775, 0, 0,
	0, 0, 0, 0, 0, 812, 821, 856, 805, 360,
	277, 294, 315, 799, 285, 786, 0, 0, 0, 0,
	0, 0, 1507, 0, 771, 0, 831, 0, 0, 0,
	753, 746, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 810, 0, 0, 0, 758, 737,
	772, 858, 0, 735, 251, 148, 863, 882, 807, 213,
	904, 886, 804, 803, 287, 0, 334, 201, 223, 153,
	130, 146, 164, 200, 262, 855, 309, 785, 736, 867,
	768, 781, 172, 777, 301, 270, 359, 790, 828, 300,
	226, 349, 851, 887, 358, 794, 870, 368, 373, 776,
	818, 756, 324, 185, 180, 184, 0, 137, 787, 284,
	177, 218, 806, 845, 769, 168, 853, 832, 869, 323,
	346, 134, 248, 347, 372, 155, 341, 249, 255, 165,
	167, 166, 147, 318, 345, 160, 170, 328, 305, 335,
	176, 0, 0, 0, 0, 0, 800, 791, 0, 0,
	364, 802, 312, 311, 796, 208, 861, 835, 742, 293,
	848, 214, 136, 337, 376, 154, 220, 342, 734, 195,
	261, 174, 271, 272, 192, 132, 289, 242, 243, 241,
	244, 199, 782, 850, 860, 291, 314, 344, 156, 331,
	778, 779, 784, 857, 303, 868, 880, 893, 233, 188,
	191, 202, 209, 842, 298, 332, 365, 0, 149, 138,
	338, 357, 161, 313, 316, 374, 299, 141, 355, 333,
	246, 215, 216, 139, 0, 140, 296, 181, 198, 175,
	265, 0, 197, 286, 352, 353, 173, 377, 150, 367,
	143, 151, 366, 258, 0, 257, 369, 348, 356, 247,
	235, 0, 142, 354, 245, 234, 221, 190, 204, 282,
	229, 283, 205, 253, 252, 254, 231, 236, 0, 743,
	0, 329, 362, 378, 336, 158, 764, 317, 343, 793,
	290, 159, 196, 189, 281, 256, 152, 207, 326, 219,
	227, 295, 375, 269, 302, 162, 361, 325, 186, 762,
	763, 760, 0, 761, 823, 824, 896, 897, 898, 859,
	755, 0, 877, 878, 0, 0, 0, 0, 0, 865,
	884, 885, 847, 908, 798, 169, 744, 747, 748, 749,
	757, 814, 815, 827, 830, 873, 872, 871, 874, 879,
	902, 901, 903, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 816, 278, 826, 133, 144, 224,
	909, 292, 194, 363, 739, 179, 0, 819, 829, 854,
	131, 145, 157, 163, 178, 187, 193, 203, 206, 210,
	211, 212, 217, 232, 237, 238, 239, 240, 259, 260,
	263, 264, 267, 268, 274, 275, 276, 279, 280, 288,
	852, 297, 304, 306, 307, 308, 310, 319, 320, 321,
	322, 330, 350, 351, 370, 371, 881, 0, 795, 135,
	875, 905, 838, 849, 889, 864, 340, 809, 892, 766,
	792, 907, 797, 801, 844, 750, 822, 266, 788, 751,
	0, 770, 740, 780, 741, 767, 183, 765, 866, 825,
	891, 222, 839, 0, 182, 171, 230, 228, 0, 0,
	0, 273, 339, 890, 817, 0, 899, 225, 0, 834,
	900, 327, 250, 0, 0, 813, 876, 820, 862, 808,
	846, 759, 833, 894, 789, 841, 895, 0, 0, 0,
	0, 732, 0, 0, 0, 0, 0, 0, 0, 0,
	754, 0, 837, 888, 783, 840, 811, 843, 910, 738,
	836, 0, 745, 752, 906, 883, 773, 774, 775, 0,
	0, 0, 0, 0, 0, 0, 812, 821, 856, 805,
	360, 277, 294, 315, 799, 285, 786, 0, 0, 0,
	0, 0, 0, 0, 0, 771, 0, 831, 0, 0,
	0, 753, 746, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 810, 0, 0, 0, 758,
	737, 772, 858, 0, 735, 251, 148, 863, 882, 807,
	213, 904, 886, 804, 803, 287, 0, 334, 201, 223,
	153, 130, 146, 164, 200, 262, 855, 309, 785, 736,
	867, 768, 781, 172, 777, 301, 270, 359, 790, 828,
	300, 226, 349, 851, 887, 358, 794, 870, 368, 373,
	776, 818, 756, 324, 185, 180, 184, 0, 137, 787,
	284, 177, 218, 806, 845, 769, 168, 853, 832, 869,
	323, 346, 134, 248, 347, 372, 155, 341, 249, 255,
	165, 167, 166, 147, 318, 345, 160, 170, 328, 305,
	335, 176, 0, 0, 0, 0, 0, 800, 791, 0,
	0, 364, 802, 312, 311, 796, 208, 861, 835, 742,
	293, 848, 214, 136, 337, 376, 154, 220, 342, 734,
	195, 261, 174, 271, 272, 192, 132, 289, 242, 243,
	241, 244, 199, 782, 850, 860, 291, 314, 344, 156,
	331, 778, 779, 784, 857, 303, 868, 880, 893, 233,
	188, 191, 202, 209, 842, 298, 332, 365, 0, 149,
	138, 338, 357, 161, 313, 316, 374, 299, 141, 355,
	333, 246, 215, 216, 139, 0, 140, 296, 181, 198,
	175, 265, 0, 197, 286, 352, 353, 173, 377, 150,
	367, 143, 151, 366, 258, 0, 257, 369, 348, 356,
	247, 235, 0, 142, 354, 245, 234, 221, 190, 204,
	282, 229, 283, 205, 253, 252, 254, 231, 236, 0,
	743, 0, 329, 362, 378, 336, 158, 764, 317, 343,
	793, 290, 159, 196, 189, 281, 256, 152, 207, 326,
	219, 227, 295, 375, 269, 302, 162, 361, 325, 186,
	762, 763, 760, 0, 761, 823, 824, 896, 897, 898,
	859, 755, 0, 877, 878, 0, 0, 0, 0, 0,
	865, 884, 885, 847, 908, 798, 169, 744, 747, 748,
	749, 757, 814, 815, 827, 830, 873, 872, 871, 874,
	879, 902, 901, 903, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 816, 278, 826, 133, 144,
	224, 909, 292, 194, 363, 739, 179, 0, 819, 829,
	854, 131, 145, 157, 163, 178, 187, 193, 203, 206,
	210, 211, 212, 217, 232, 237, 238, 239, 240, 259,
	260, 263, 264, 267, 268, 274, 275, 276, 279, 280,
	288, 852, 297, 304, 306, 307, 308, 310, 319, 320,
	321, 322, 330, 350, 351, 370, 371, 881, 0, 795,
	135, 875, 905, 838, 849, 889, 864, 340, 809, 892,
	766, 792, 907, 797, 801, 844, 750, 822, 266, 788,
	751, 0, 770, 740, 780, 741, 767, 183, 765, 866,
	825, 891, 222, 839, 0, 182, 171, 230, 228, 0,
	0, 0, 273, 339, 890, 817, 0, 899, 225, 0,
	834, 900, 327, 250, 0, 0, 813, 876, 820, 862,
	808, 846, 759, 833, 894, 789, 841, 895, 0, 0,
	0, 0, 559, 0, 0, 0, 0, 0, 0, 0,
	0, 754, 0, 837, 888, 783, 840, 811, 843, 910,
	738, 836, 0, 745, 752, 906, 883, 773, 774, 775,
	0, 0, 0, 0, 0, 0, 0, 812, 821, 856,
	805, 360, 277, 294, 315, 799, 285, 786, 0, 0,
	0, 0, 0, 0, 0, 0, 771, 0, 831, 0,
	0, 0, 753, 746, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 810, 0, 0, 0,
	758, 737, 772, 858, 0, 735, 251, 148, 863, 882,
	807, 213, 904, 886, 804, 803, 287, 0, 334, 201,
	223, 153, 130, 146, 164, 200, 262, 855, 309, 785,
	736, 867, 768, 781, 172, 777, 301, 270, 359, 790,
	828, 300, 226, 349, 851, 887, 358, 794, 870, 368,
	373, 776, 818, 756, 324, 185, 180, 184, 0, 137,
	787, 284, 177, 218, 806, 845, 769, 168, 853, 832,
	869, 323, 346, 134, 248, 347, 372, 155, 341, 249,
	255, 165, 167, 166, 147, 318, 345, 160, 170, 328,
	305, 335, 176, 0, 0, 0, 0, 0, 800, 791,
	0, 0, 364, 802, 312, 311, 796, 208, 861, 835,
	742, 293, 848, 214, 136, 337, 376, 154, 220, 342,
	734, 195, 261, 174, 271, 272, 192, 132, 289, 242,
	243, 241, 244, 199, 782, 850, 860, 291, 314, 344,
	156, 331, 778, 779, 784, 857, 303, 868, 880, 893,
	233, 188, 191, 202, 209, 842, 298, 332, 365, 0,
	149, 138, 338, 357, 161, 313, 316, 374, 299, 141,
	355, 333, 246, 215, 216, 139, 0, 140, 296, 181,
	198, 175, 265, 0, 197, 286, 352, 353, 173, 377,
	150, 367, 143, 151, 366, 258, 0, 257, 369, 348,
	356, 247, 235, 0, 142, 354, 245, 234, 221, 190,
	204, 282, 229, 283, 205, 253, 252, 254, 231, 236,
	0, 743, 0, 329, 362, 378, 336, 158, 764, 317,
	343, 793, 290, 159, 196, 189, 281, 256, 152, 207,
	326, 219, 227, 295, 375, 269, 302, 162, 361, 325,
	186, 762, 763, 760, 0, 761, 823, 824, 896, 897,
	898, 859, 755, 0, 877, 878, 0, 0, 0, 0,
	0, 865, 884, 885, 847, 908, 798, 169, 744, 747,
	748, 749, 757, 814, 815, 827, 830, 873, 872, 871,
	874, 879, 902, 901, 903, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 816, 278, 826, 133,
	144, 224, 909, 292, 194, 363, 739, 179, 0, 819,
	829, 854, 131, 145, 157, 163, 178, 187, 193, 203,
	206, 210, 211, 212, 217, 232, 237, 238, 239, 240,
	259, 260, 263, 264, 267, 268, 274, 275, 276, 279,
	280, 288, 852, 297, 304, 306, 307, 308, 310, 319,
	320, 321, 322, 330, 350, 351, 370, 371, 881, 0,
	795, 135, 875, 905, 838, 849, 889, 864, 340, 809,
	892, 766, 792, 907, 797, 801, 844, 750, 822, 266,
	788, 751, 0, 770, 740, 780, 741, 767, 183, 765,
	866, 825, 891, 222, 839, 0, 182, 171, 230, 228,
	0, 0, 0, 273, 339, 1682, 1686, 0, 899, 225,
	0, 834, 900, 327, 250, 0, 0, 813, 876, 820,
	862, 808, 846, 759, 833, 894, 789, 841, 895, 0,
	0, 0, 0, 732, 0, 0, 0, 0, 0, 0,
	0, 0, 754, 0, 837, 888, 783, 840, 811, 843,
	910, 738, 836, 0, 745, 752, 906, 883, 773, 774,
	775, 0, 0, 0, 0, 0, 0, 0, 812, 821,
	856, 805, 360, 277, 294, 315, 799, 285, 786, 0,
	0, 0, 0, 0, 0, 0, 0, 771, 0, 831,
	0, 0, 0, 753, 746, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 810, 0, 0,
	0, 758, 737, 772, 858, 0, 735, 251, 148, 863,
	882, 1685, 213, 904, 886, 804, 803, 1679, 0, 1680,
	1681, 223, 731, 130, 146, 1677, 1684, 262, 855, 309,
	785, 736, 867, 768, 781, 172, 777, 301, 270, 359,
	790, 828, 300, 226, 349, 851, 887, 358, 794, 870,
	368, 373, 776, 818, 756, 324, 185, 180, 184, 0,
	137, 787, 284, 177, 218, 806, 845, 769, 168, 853,
	832, 869, 323, 346, 134, 248, 347, 372, 155, 341,
	249, 255, 165, 167, 166, 147, 318, 345, 160, 170,
	328, 305, 335, 176, 0, 0, 0, 0, 0, 800,
	791, 0, 0, 364, 802, 312, 311, 796, 208, 861,
	835, 742, 293, 848, 214, 136, 337, 376, 154, 220,
	342, 734, 195, 261, 174, 271, 272, 192, 132, 289,
	242, 243, 241, 244, 199, 782, 850, 860, 291, 314,
	344, 156, 331, 778, 779, 784, 857, 303, 868, 880,
	893, 233, 188, 191, 202, 209, 842, 298, 332, 365,
	0, 149, 138, 338, 357, 161, 313, 316, 374, 299,
	141, 355, 333, 246, 215, 216, 139, 0, 140, 296,
	181, 198, 175, 265, 0, 197, 286, 352, 353, 173,
	377, 150, 367, 143, 151, 366, 258, 0, 257, 369,
	348, 356, 247, 235, 0, 142, 354, 245, 234, 221,
	190, 204, 282, 229, 283, 205, 253, 252, 254, 231,
	236, 0, 743, 0, 329, 362, 378, 336, 158, 764,
	317, 343, 793, 290, 159, 196, 189, 281, 256, 152,
	207, 326, 219, 227, 295, 375, 269, 302, 162, 361,
	325, 186, 762, 763, 760, 0, 761, 823, 824, 896,
	897, 898, 859, 755, 0, 877, 878, 0, 0, 0,
	0, 0, 865, 884, 885, 847, 908, 798, 169, 744,
	747, 748, 749, 757, 814, 815, 827, 830, 873, 872,
	871, 874, 879, 902, 901, 903, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 816, 278, 826,
	133, 144, 224, 909, 292, 194, 363, 739, 179, 0,
	819, 829, 854, 131, 145, 157, 163, 178, 187, 193,
	203, 206, 210, 211, 212, 217, 232, 237, 238, 239,
	240, 259, 260, 263, 264, 267, 268, 274, 275, 276,
	279, 280, 288, 852, 297, 304, 306, 307, 308, 310,
	319, 320, 321, 322, 330, 350, 351, 370, 371, 881,
	0, 795, 135, 875, 905, 838, 849, 889, 864, 340,
	809, 892, 766, 792, 907, 797, 801, 844, 750, 822,
	266, 788, 751, 0, 770, 740, 780, 741, 767, 183,
	765, 866, 825, 891, 222, 839, 0, 182, 171, 230,
	228, 0, 0, 0, 273, 339, 890, 817, 0, 899,
	225, 0, 834, 900, 327, 250, 0, 0, 813, 876,
	820, 862, 808, 846, 759, 833, 894, 789, 841, 895,
	0, 0, 0, 0, 128, 0, 0, 0, 0, 0,
	0, 0, 0, 754, 0, 837, 888, 783, 840, 811,
	843, 910, 738, 836, 0, 745, 752, 906, 883, 773,
	774, 775, 0, 0, 0, 0, 0, 0, 0, 812,
	821, 856, 805, 360, 277, 294, 315, 799, 285, 786,
	0, 0, 0, 0, 0, 0, 0, 0, 771, 0,
	831, 0, 0, 0, 753, 746, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 810, 0,
	0, 0, 758, 737, 772, 858, 0, 735, 251, 148,
	863, 882, 807, 213, 904, 886, 804, 803, 287, 0,
	334, 201, 223, 153, 130, 146, 164, 200, 262, 855,
	309, 785, 736, 867, 768, 781, 172, 777, 301, 270,
	359, 790, 828, 300, 226, 349, 851, 887, 358, 794,
	870, 368, 373, 776, 818, 756, 324, 185, 180, 184,
	0, 137, 787, 284, 177, 218, 806, 845, 769, 168,
	853, 832, 869, 323, 346, 134, 248, 347, 372, 155,
	341, 249, 255, 165, 167, 166, 147, 318, 345, 160,
	170, 328, 305, 335, 176, 0, 0, 0, 0, 0,
	800, 791, 0, 0, 364, 802, 312, 311, 796, 208,
	861, 835, 742, 293, 848, 214, 136, 337, 376, 154,
	220, 342, 734, 195, 261, 174, 271, 272, 192, 132,
	289, 242, 243, 241, 244, 199, 782, 850, 860, 291,
	314, 344, 156, 331, 778, 779, 784, 857, 303, 868,
	880, 893, 233, 188, 191, 202, 209, 842, 298, 332,
	365, 0, 149, 138, 338, 357, 161, 313, 316, 374,
	299, 141, 355, 333, 246, 215, 216, 139, 0, 140,
	296, 181, 198, 175, 265, 0, 197, 286, 352, 353,
	173, 377, 150, 367, 143, 151, 366, 258, 0, 257,
	369, 348, 356, 247, 235, 0, 142, 354, 245, 234,
	221, 190, 204, 282, 229, 283, 205, 253, 252, 254,
	231, 236, 0, 743, 0, 329, 362, 378, 336, 158,
	764, 317, 343, 793, 290, 159, 196, 189, 281, 256,
	152, 207, 326, 219, 227, 295, 375, 269, 302, 162,
	361, 325, 186, 762, 763, 760, 0, 761, 823, 824,
	896, 897, 898, 859, 755, 0, 877, 878, 0, 0,
	0, 0, 0, 865, 884, 885, 847, 908, 798, 169,
	744, 747, 748, 749, 757, 814, 815, 827, 830, 873,
	872, 871, 874, 879, 902, 901, 903, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 816, 278,
	826, 133, 144, 224, 909, 292, 194, 363, 739, 179,
	0, 819, 829, 854, 131, 145, 157, 163, 178, 187,
	193, 203, 206, 210, 211, 212, 217, 232, 237, 238,
	239, 240, 259, 260, 263, 264, 267, 268, 274, 275,
	276, 279, 280, 288, 852, 297, 304, 306, 307, 308,
	310, 319, 320, 321, 322, 330, 350, 351, 370, 371,
	881, 0, 795, 135, 875, 905, 838, 849, 889, 864,
	340, 809, 892, 766, 792, 907, 797, 801, 844, 750,
	822, 266, 788, 751, 0, 770, 740, 780, 741, 767,
	183, 765, 866, 825, 891, 222, 839, 0, 182, 171,
	230, 228, 0, 0, 0, 273, 339, 890, 817, 0,
	899, 225, 0, 834, 900, 327, 250, 0, 0, 813,
	876, 820, 862, 808, 846, 759, 833, 894, 789, 841,
	895, 0, 0, 0, 0, 732, 0, 0, 0, 0,
	0, 0, 0, 0, 754, 0, 837, 888, 783, 840,
	811, 843, 910, 738, 836, 0, 745, 752, 906, 883,
	773, 774, 775, 0, 0, 0, 0, 0, 0, 0,
	812, 821, 856, 805, 360, 277, 294, 315, 799, 285,
	786, 0, 0, 0, 0, 0, 0, 0, 0, 771,
	0, 831, 0, 0, 0, 753, 746, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 810,
	0, 0, 0, 758, 737, 772, 858, 0, 735, 251,
	148, 863, 882, 807, 213, 904, 886, 804, 803, 287,
	0, 334, 201, 223, 731, 130, 146, 727, 200, 262,
	855, 309, 785, 736, 867, 768, 781, 172, 777, 301,
	270, 359, 790, 828, 300, 226, 349, 851, 887, 358,
	794, 870, 368, 373, 776, 818, 756, 324, 185, 180,
	184, 0, 137, 787, 284, 177, 218, 806, 845, 769,
	168, 853, 832, 869, 323, 346, 134, 248, 347, 372,
	155, 341, 249, 255, 165, 167, 166, 147, 318, 345,
	160, 170, 328, 305, 335, 176, 0, 0, 0, 0,
	0, 800, 791, 0, 0, 364, 802, 312, 311, 796,
	208, 861, 835, 742, 293, 848, 214, 136, 337, 376,
	154, 220, 342, 734, 195, 261, 174, 271, 272, 192,
	132, 289, 242, 243, 241, 244, 199, 782, 850, 860,
	291, 314, 344, 156, 331, 778, 779, 784, 857, 303,
	868, 880, 893, 233, 188, 191, 202, 209, 842, 298,
	332, 365, 0, 149, 138, 338, 357, 161, 313, 316,
	374, 299, 141, 355, 333, 246, 215, 216, 139, 0,
	140, 296, 181, 198, 175, 265, 0, 197, 286, 352,
	353, 173, 377, 150, 367, 143, 151, 366, 258, 0,
	257, 369, 348, 356, 247, 235, 0, 142, 354, 245,
	234, 221, 190, 204, 282, 229, 283, 205, 253, 252,
	254, 231, 236, 0, 743, 0, 329, 362, 378, 336,
	158, 764, 317, 343, 793, 290, 159, 196, 189, 281,
	256, 152, 207, 326, 219, 227, 295, 375, 269, 302,
	162, 361, 325, 186, 762, 763, 760, 0, 761, 823,
	824, 896, 897, 898, 859, 755, 0, 877, 878, 0,
	0, 0, 0, 0, 865, 884, 885, 847, 908, 798,
	169, 744, 747, 748, 749, 757, 814, 815, 827, 830,
	873, 872, 871, 874, 879, 902, 901, 903, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 816,
	278, 826, 133, 144, 224, 909, 292, 194, 363, 739,
	179, 0, 819, 829, 854, 131, 145, 157, 163, 178,
	187, 193, 203, 206, 210, 211, 212, 217, 232, 237,
	238, 239, 240, 259, 260, 263, 264, 267, 268, 274,
	275, 276, 279, 280, 288, 852, 297, 304, 306, 307,
	308, 310, 319, 320, 321, 322, 330, 350, 351, 370,
	371, 881, 340, 795, 135, 875, 905, 838, 849, 0,
	0, 0, 0, 266, 0, 0, 0, 0, 0, 561,
	0, 0, 183, 558, 0, 0, 0, 222, 0, 0,
	182, 171, 230, 228, 0, 0, 0, 273, 339, 0,
	0, 0, 679, 225, 0, 0, 536, 327, 250, 0,
	0, 0, 0, 668, 669, 0, 0, 0, 0, 0,
	0, 1659, 0, 81, 0, 0, 0, 559, 582, 581,
	584, 585, 586, 587, 0, 0, 541, 583, 588, 621,
	622, 1660, 0, 0, 0, 0, 556, 573, 0, 678,
	0, 0, 0, 0, 492, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 360, 277, 294, 315,
	0, 285, 500, 0, 0, 0, 0, 570, 571, 0,
	0, 0, 0, 691, 0, 572, 0, 0, 568, 626,
	627, 628, 629, 630, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 574, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 148, 670, 0, 0, 213, 540, 0, 0,
	689, 287, 0, 334, 201, 223, 153, 130, 146, 164,
	200, 262, 0, 309, 596, 481, 0, 0, 0, 172,
	0, 301, 270, 359, 598, 0, 300, 226, 349, 0,
	0, 358, 0, 527, 368, 373, 493, 0, 488, 324,
	185, 180, 184, 0, 137, 501, 284, 177, 218, 0,
	0, 0, 168, 0, 0, 0, 323, 346, 134, 248,
	347, 372, 155, 341, 249, 255, 165, 167, 166, 147,
	318, 345, 160, 170, 328, 305, 335, 176, 0, 0,
	0, 0, 0, 505, 503, 0, 0, 364, 506, 312,
	311, 0, 208, 0, 514, 482, 293, 518, 214, 136,
	337, 376, 154, 220, 342, 480, 195, 261, 174, 271,
	272, 192, 132, 289, 242, 243, 241, 244, 199, 496,
	520, 0, 291, 314, 344, 156, 331, 494, 495, 497,
	524, 303, 526, 532, 0, 233, 188, 191, 202, 209,
	0, 298, 332, 365, 0, 149, 138, 338, 357, 161,
	313, 316, 374, 299, 141, 355, 333, 246, 215, 216,
	139, 0, 140, 296, 181, 198, 175, 265, 0, 197,
	286, 352, 353, 173, 377, 150, 367, 143, 151, 366,
	258, 0, 257, 369, 348, 356, 247, 235, 0, 142,
	354, 245, 234, 221, 190, 204, 282, 229, 283, 205,
	253, 252, 254, 231, 236, 0, 483, 0, 329, 362,
	378, 336, 158, 0, 317, 343, 504, 290, 159, 196,
	189, 281, 256, 152, 207, 326, 219, 227, 295, 375,
	269, 302, 162, 361, 325, 186, 680, 690, 686, 688,
	687, 684, 685, 683, 682, 681, 692, 671, 672, 673,
	674, 675, 0, 0, 0, 677, 0, 615, 616, 0,
	0, 0, 169, 589, 590, 591, 592, 593, 599, 600,
	604, 605, 613, 612, 611, 614, 617, 619, 618, 620,
	594, 595, 597, 601, 602, 603, 606, 607, 610, 608,
	609, 0, 278, 676, 133, 144, 224, 0, 292, 194,
	363, 0, 179, 0, 0, 0, 0, 131, 145, 157,
	163, 178, 187, 193, 203, 206, 210, 211, 212, 217,
	232, 237, 238, 239, 240, 259, 260, 263, 264, 267,
	268, 274, 275, 276, 279, 280, 288, 522, 297, 304,
	306, 307, 308, 310, 319, 320, 321, 322, 330, 350,
	351, 370, 371, 36, 340, 0, 135, 0, 0, 517,
	519, 0, 0, 0, 0, 266, 0, 0, 0, 0,
	0, 561, 0, 0, 183, 558, 0, 0, 0, 222,
	0, 0, 182, 171, 230, 228, 0, 0, 0, 273,
	339, 0, 0, 0, 679, 225, 0, 0, 536, 327,
	250, 0, 0, 0, 0, 668, 669, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 0, 0, 0, 559,
	582, 581, 584, 585, 586, 587, 0, 0, 541, 583,
	588, 621, 622, 0, 0, 0, 0, 0, 556, 573,
	0, 678, 0, 0, 0, 0, 492, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 360, 277,
	294, 315, 0, 285, 500, 0, 0, 0, 0, 570,
	571, 0, 0, 0, 0, 691, 0, 572, 0, 0,
	568, 626, 627, 628, 629, 630, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 148, 670, 0, 0, 213, 540,
	0, 0, 689, 287, 0, 334, 201, 223, 153, 130,
	146, 164, 200, 262, 0, 309, 596, 481, 0, 0,
	0, 172, 0, 301, 270, 359, 598, 0, 300, 226,
	349, 0, 0, 358, 0, 527, 368, 373, 493, 0,
	488, 324, 185, 180, 184, 0, 137, 501, 284, 177,
	218, 0, 0, 0, 168, 0, 0, 0, 323, 346,
	134, 248, 347, 372, 155, 341, 249, 255, 165, 167,
	166, 147, 318, 345, 160, 170, 328, 305, 335, 176,
	0, 0, 0, 0, 0, 505, 503, 0, 0, 364,
	506, 312, 311, 0, 208, 0, 514, 482, 293, 518,
	214, 136, 337, 376, 154, 220, 342, 480, 195, 261,
	174, 271, 272, 192, 132, 289, 242, 243, 241, 244,
	199, 496, 520, 0, 291, 314, 344, 156, 331, 494,
	495, 497, 524, 303, 526, 532, 0, 233, 188, 191,
	202, 209, 0, 298, 332, 365, 0, 149, 138, 338,
	357, 161, 313, 316, 374, 299, 141, 355, 333, 246,
	215, 216, 139, 0, 140, 296, 181, 198, 175, 265,
	0, 197, 286, 352, 353, 173, 377, 150, 367, 143,
	151, 366, 258, 0, 257, 369, 348, 356, 247, 235,
	0, 142, 354, 245, 234, 221, 190, 204, 282, 229,
	283, 205, 253, 252, 254, 231, 236, 0, 483, 0,
	329, 362, 378, 336, 158, 0, 317, 343, 504, 290,
	159, 196, 189, 281, 256, 152, 207, 326, 219, 227,
	295, 375, 269, 302, 162, 361, 325, 186, 680, 690,
	686, 688, 687, 684, 685, 683, 682, 681, 692, 671,
	672, 673, 674, 675, 0, 0, 0, 677, 0, 615,
	616, 0, 0, 0, 169, 589, 590, 591, 592, 593,
	599, 600, 604, 605, 613, 612, 611, 614, 617, 619,
	618, 620, 594, 595, 597, 601, 602, 603, 606, 607,
	610, 608, 609, 0, 278, 676, 133, 144, 224, 79,
	292, 194, 363, 0, 179, 0, 0, 0, 0, 131,
	145, 157, 163, 178, 187, 193, 203, 206, 210, 211,
	212, 217, 232, 237, 238, 239, 240, 259, 260, 263,
	264, 267, 268, 274, 275, 276, 279, 280, 288, 522,
	297, 304, 306, 307, 308, 310, 319, 320, 321, 322,
	330, 350, 351, 370, 371, 340, 0, 0, 135, 0,
	0, 517, 519, 0, 0, 0, 266, 0, 0, 0,
	0, 0, 561, 0, 0, 183, 558, 0, 0, 0,
	222, 0, 0, 182, 171, 230, 228, 0, 0, 0,
	273, 339, 0, 0, 0, 679, 225, 0, 0, 536,
	327, 250, 0, 0, 0, 0, 668, 669, 0, 0,
	0, 0, 0, 0, 0, 0, 81, 0, 0, 0,
	559, 582, 581, 584, 585, 586, 587, 0, 0, 541,
	583, 588, 621, 622, 0, 0, 0, 0, 0, 556,
	573, 0, 678, 0, 0, 0, 0, 492, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 360,
	277, 294, 315, 0, 285, 500, 0, 0, 0, 0,
	570, 571, 552, 0, 0, 0, 691, 0, 572, 0,
	0, 568, 626, 627, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 574, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 148, 670, 0, 0, 213,
	540, 0, 0, 689, 287, 0, 334, 201, 223, 153,
	130, 146, 164, 200, 262, 0, 309, 596, 481, 0,
	0, 0, 172, 0, 301, 270, 359, 598, 0, 300,
	226, 349, 0, 0, 358, 0, 527, 368, 373, 493,
	0, 488, 324, 185, 180, 184, 0, 137, 501, 284,
	177, 218, 0, 0, 0, 168, 0, 0, 0, 323,
	346, 134, 248, 347, 372, 155, 341, 249, 255, 165,
	167, 166, 147, 318, 345, 160, 170, 328, 305, 335,
	176, 0, 0, 0, 0, 0, 505, 503, 0, 0,
	364, 506, 312, 311, 0, 208, 0, 514, 482, 293,
	518, 214, 136, 337, 376, 154, 220, 342, 480, 195,
	261, 174, 271, 272, 192, 132, 289, 242, 243, 241,
	244, 199, 496, 520, 0, 291, 314, 344, 156, 331,
	494, 495, 497, 524, 303, 526, 532, 0, 233, 188,
	191, 202, 209, 0, 298, 332, 365, 0, 149, 138,
	338, 357, 161, 313, 316, 374, 299, 141, 355, 333,
	246, 215, 216, 139, 0, 140, 296, 181, 198, 175,
	265, 0, 197, 286, 352, 353, 173, 377, 150, 367,
	143, 151, 366, 258, 0, 257, 369, 348, 356, 247,
	235, 0, 142, 354, 245, 234, 221, 190, 204, 282,
	229, 283, 205, 253, 252, 254, 231, 236, 0, 483,
	0, 329, 362, 378, 336, 158, 0, 317, 343, 504,
	290, 159, 196, 189, 281, 256, 152, 207, 326, 219,
	227, 295, 375, 269, 302, 162, 361, 325, 186, 680,
	690, 686, 688, 687, 684, 685, 683, 682, 681, 692,
	671, 672, 673, 674, 675, 0, 0, 0, 677, 0,
	615, 616, 0, 0, 0, 169, 589, 590, 591, 592,
	593, 599, 600, 604, 605, 613, 612, 611, 614, 617,
	619, 618, 620, 594, 595, 597, 601, 602, 603, 606,
	607, 610, 608, 609, 0, 278, 676, 133, 144, 224,
	0, 292, 194, 363, 0, 179, 0, 0, 0, 0,
	131, 145, 157, 163, 178, 187, 193, 203, 206, 210,
	211, 212, 217, 232, 237, 238, 239, 240, 259, 260,
	263, 264, 267, 268, 274, 275, 276, 279, 280, 288,
	522, 297, 304, 306, 307, 308, 310, 319, 320, 321,
	322, 330, 350, 351, 370, 371, 340, 0, 0, 135,
	0, 0, 517, 519, 0, 0, 0, 266, 0, 0,
	0, 0, 0, 561, 0, 0, 183, 558, 0, 0,
	0, 222, 0, 0, 182, 171, 230, 228, 0, 0,
	0, 273, 339, 0, 0, 0, 679, 225, 0, 0,
	536, 327, 250, 0, 0, 0, 0, 668, 669, 0,
	0, 0, 0, 0, 0, 0, 0, 81, 0, 1092,
	0, 559, 582, 581, 584, 585, 586, 587, 0, 0,
	541, 583, 588, 621, 622, 0, 0, 0, 0, 0,
	556, 573, 0, 678, 0, 0, 0, 0, 492, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	360, 277, 294, 315, 0, 285, 500, 0, 0, 0,
	0, 570, 571, 0, 0, 0, 0, 691, 0, 572,
	0, 0, 568, 626, 627, 628, 629, 630, 631, 632,
	633, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 574, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 148, 670, 0, 0,
	213, 540, 0, 0, 689, 287, 0, 334, 201, 223,
	153, 130, 146, 164, 200, 262, 0, 309, 596, 481,
	0, 0, 0, 172, 0, 301, 270, 359, 598, 0,
	300, 226, 349, 0, 0, 358, 0, 527, 368, 373,
	493, 0, 488, 324, 185, 180, 184, 0, 137, 501,
	284, 177, 218, 0, 0, 0, 168, 0, 0, 0,
	323, 346, 134, 248, 347, 372, 155, 341, 249, 255,
	165, 167, 166, 147, 318, 345, 160, 170, 328, 305,
	335, 176, 0, 0, 0, 0, 0, 505, 503, 0,
	0, 364, 506, 312, 311, 0, 208, 0, 514, 482,
	293, 518, 214, 136, 337, 376, 154, 220, 342, 480,
	195, 261, 174, 271, 272, 192, 132, 289, 242, 243,
	241, 244, 199, 496, 520, 0, 291, 314, 344, 156,
	331, 494, 495, 497, 524, 303, 526, 532, 0, 233,
	188, 191, 202, 209, 0, 298, 332, 365, 0, 149,
	138, 338, 357, 161, 313, 316, 374, 299, 141, 355,
	333, 246, 215, 216, 139, 0, 140, 296, 181, 198,
	175, 265, 0, 197, 286, 352, 353, 173, 377, 150,
	367, 143, 151, 366, 258, 0, 257, 369, 348, 356,
	247, 235, 0, 142, 354, 245, 234, 221, 190, 204,
	282, 229, 283, 205, 253, 252, 254, 231, 236, 0,
	483, 0, 329, 362, 378, 336, 158, 0, 317, 343,
	504, 290, 159, 196, 189, 281, 256, 152, 207, 326,
	219, 227, 295, 375, 269, 302, 162, 361, 325, 186,
	680, 690, 686, 688, 687, 684, 685, 683, 682, 681,
	692, 671, 672, 673, 674, 675, 0, 0, 0, 677,
	0, 615, 616, 0, 0, 0, 169, 589, 590, 591,
	592, 593, 599, 600, 604, 605, 613, 612, 611, 614,
	617, 619, 618, 620, 594, 595, 597, 601, 602, 603,
	606, 607, 610, 608, 609, 0, 278, 676, 133, 144,
	224, 0, 292, 194, 363, 0, 179, 0, 0, 0,
	0, 131, 145, 157, 163, 178, 187, 193, 203, 206,
	210, 211, 212, 217, 232, 237, 238, 239, 240, 259,
	260, 263, 264, 267, 268, 274, 275, 276, 279, 280,
	288, 522, 297, 304, 306, 307, 308, 310, 319, 320,
	321, 322, 330, 350, 351, 370, 371, 340, 0, 0,
	135, 0, 0, 517, 519, 0, 0, 0, 266, 0,
	0, 0, 0, 0, 561, 0, 0, 183, 558, 0,
	0, 0, 222, 0, 0, 182, 171, 230, 228, 0,
	0, 0, 273, 339, 0, 0, 0, 679, 225, 0,
	0, 536, 327, 250, 0, 0, 0, 0, 668, 669,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 0,
	0, 0, 559, 582, 581, 584, 585, 586, 587, 0,
	0, 541, 583, 588, 621, 622, 0, 0, 0, 0,
	0, 556, 573, 0, 678, 0, 0, 0, 0, 492,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 360, 277, 294, 315, 0, 285, 500, 0, 0,
	0, 0, 570, 571, 1545, 0, 0, 0, 691, 0,
	572, 0, 0, 568, 626, 627, 628, 629, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 574, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 148, 670, 0,
	0, 213, 540, 0, 0, 689, 287, 0, 334, 201,
	223, 153, 130, 146, 164, 200, 262, 0, 309, 596,
	481, 0, 0, 0, 172, 0, 301, 270, 359, 598,
	0, 300, 226, 349, 0, 0, 358, 0, 527, 368,
	373, 493, 0, 488, 324, 185, 180, 184, 0, 137,
	501, 284, 177, 218, 0, 0, 0, 168, 0, 0,
	0, 323, 346, 134, 248, 347, 372, 155, 341, 249,
	255, 165, 167, 166, 147, 318, 345, 160, 170, 328,
	305, 335, 176, 0, 0, 0, 0, 0, 505, 503,
	0, 0, 364, 506, 312, 311, 0, 208, 0, 514,
	482, 293, 518, 214, 136, 337, 376, 154, 220, 342,
	480, 195, 261, 174, 271, 272, 192, 132, 289, 242,
	243, 241, 244, 199, 496, 520, 0, 291, 314, 344,
	156, 331, 494, 495, 497, 524, 303, 526, 532, 0,
	233, 188, 191, 202, 209, 0, 298, 332, 365, 0,
	149, 138, 338, 357, 161, 313, 316, 374, 299, 141,
	355, 333, 246, 215, 216, 139, 0, 140, 296, 181,
	198, 175, 265, 0, 197, 286, 352, 353, 173, 377,
	150, 367, 143, 151, 366, 258, 0, 257, 369, 348,
	356, 247, 235, 0, 142, 354, 245, 234, 221, 190,
	204, 282, 229, 283, 205, 253, 252, 254, 231, 236,
	0, 483, 0, 329, 362, 378, 336, 158, 0, 317,
	343, 504, 290, 159, 196, 189, 281, 256, 152, 207,
	326, 219, 227, 295, 375, 269, 302, 162, 361, 325,
	186, 680, 690, 686, 688, 687, 684, 685, 683, 682,
	681, 692, 671, 672, 673, 674, 675, 0, 0, 0,
	677, 0, 615, 616, 0, 0, 0, 169, 589, 590,
	591, 592, 593, 599, 600, 604, 605, 613, 612, 611,
	614, 617, 619, 618, 620, 594, 595, 597, 601, 602,
	603, 606, 607, 610, 608, 609, 0, 278, 676, 133,
	144, 224, 0, 292, 194, 363, 0, 179, 0, 0,
	0, 0, 131, 145, 157, 163, 178, 187, 193, 203,
	206, 210, 211, 212, 217, 232, 237, 238, 239, 240,
	259, 260, 263, 264, 267, 268, 274, 275, 276, 279,
	280, 288, 522, 297, 304, 306, 307, 308, 310, 319,
	320, 321, 322, 330, 350, 351, 370, 371, 340, 0,
	0, 135, 0, 0, 517, 519, 0, 0, 0, 266,
	0, 0, 0, 0, 0, 561, 0, 0, 183, 558,
	0, 0, 0, 222, 0, 0, 182, 171, 230, 228,
	0, 0, 0, 273, 339, 0, 0, 0, 679, 225,
	0, 0, 536, 327, 250, 0, 0, 0, 0, 668,
	669, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	0, 0, 0, 559, 582, 1592, 584, 585, 586, 587,
	0, 0, 541, 583, 588, 621, 622, 0, 0, 0,
	0, 0, 556, 573, 0, 678, 0, 0, 0, 0,
	492, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 277, 294, 315, 0, 285, 500, 0,
	0, 0, 0, 570, 571, 1545, 0, 0, 0, 691,
	0, 572, 0, 0, 568, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 574, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 148, 670,
	0, 0, 213, 540, 0, 0, 689, 287, 0, 334,
	201, 223, 153, 130, 146, 164, 200, 262, 0, 309,
	596, 481, 0, 0, 0, 172, 0, 301, 270, 359,
	598, 0, 300, 226, 349, 0, 0, 358, 0, 527,
	368, 373, 493, 0, 488, 324, 185, 180, 184, 0,
	137, 501, 284, 177, 218, 0, 0, 0, 168, 0,
	0, 0, 323, 346, 134, 248, 347, 372, 155, 341,
	249, 255, 165, 167, 166, 147, 318, 345, 160, 170,
	328, 305, 335, 176, 0, 0, 0, 0, 0, 505,
	503, 0, 0, 364, 506, 312, 311, 0, 208, 0,
	514, 482, 293, 518, 214, 136, 337, 376, 154, 220,
	342, 480, 195, 261, 174, 271, 272, 192, 132, 289,
	242, 243, 241, 244, 199, 496, 520, 0, 291, 314,
	344, 156, 331, 494, 495, 497, 524, 303, 526, 532,
	0, 233, 188, 191, 202, 209, 0, 298, 332, 365,
	0, 149, 138, 338, 357, 161, 313, 316, 374, 299,
	141, 355, 333, 246, 215, 216, 139, 0, 140, 296,
	181, 198, 175, 265, 0, 197, 286, 352, 353, 173,
	377, 150, 367, 143, 151, 366, 258, 0, 257, 369,
	348, 356, 247, 235, 0, 142, 354, 245, 234, 221,
	190, 204, 282, 229, 283, 205, 253, 252, 254, 231,
	236, 0, 483, 0, 329, 362, 378, 336, 158, 0,
	317, 343, 504, 290, 159, 196, 189, 281, 256, 152,
	207, 326, 219, 227, 295, 375, 269, 302, 162, 361,
	325, 186, 680, 690, 686, 688, 687, 684, 685, 683,
	682, 681, 692, 671, 672, 673, 674, 675, 0, 0,
	0, 677, 0, 615, 616, 0, 0, 0, 169, 589,
	590, 591, 592, 593, 599, 600, 604, 605, 613, 612,
	611, 614, 617, 619, 618, 620, 594, 595, 597, 601,
	602, 603, 606, 607, 610, 608, 609, 0, 278, 676,
	133, 144, 224, 0, 292, 194, 363, 0, 179, 0,
	0, 0, 0, 131, 145, 157, 163, 178, 187, 193,
	203, 206, 210, 211, 212, 217, 232, 237, 238, 239,
	240, 259, 260, 263, 264, 267, 268, 274, 275, 276,
	279, 280, 288, 522, 297, 304, 306, 307, 308, 310,
	319, 320, 321, 322, 330, 350, 351, 370, 371, 340,
	0, 0, 135, 0, 0, 517, 519, 0, 0, 0,
	266, 0, 0, 0, 0, 0, 561, 0, 0, 183,
	558, 0, 0, 0, 222, 0, 0, 182, 171, 230,
	228, 0, 0, 0, 273, 339, 0, 0, 0, 679,
	225, 0, 0, 536, 327, 250, 0, 0, 0, 0,
	668, 669, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 0, 0, 559, 582, 1589, 584, 585, 586,
	587, 0, 0, 541, 583, 588, 621, 622, 0, 0,
	0, 0, 0, 556, 573, 0, 678, 0, 0, 0,
	0, 492, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 360, 277, 294, 315, 0, 285, 500,
	0, 0, 0, 0, 570, 571, 1545, 0, 0, 0,
	691, 0, 572, 0, 0, 568, 626, 627, 628, 629,
	630, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 148,
	670, 0, 0, 213, 540, 0, 0, 689, 287, 0,
	334, 201, 223, 153, 130, 146, 164, 200, 262, 0,
	309, 596, 481, 0, 0, 0, 172, 0, 301, 270,
	359, 598, 0, 300, 226, 349, 0, 0, 358, 0,
	527, 368, 373, 493, 0, 488, 324, 185, 180, 184,
	0, 137, 501, 284, 177, 218, 0, 0, 0, 168,
	0, 0, 0, 323, 346, 134, 248, 347, 372, 155,
	341, 249, 255, 165, 167, 166, 147, 318, 345, 160,
	170, 328, 305, 335, 176, 0, 0, 0, 0, 0,
	505, 503, 0, 0, 364, 506, 312, 311, 0, 208,
	0, 514, 482, 293, 518, 214, 136, 337, 376, 154,
	220, 342, 480, 195, 261, 174, 271, 272, 192, 132,
	289, 242, 243, 241, 244, 199, 496, 520, 0, 291,
	314, 344, 156, 331, 494, 495, 497, 524, 303, 526,
	532, 0, 233, 188, 191, 202, 209, 0, 298, 332,
	365, 0, 149, 138, 338, 357, 161, 313, 316, 374,
	299, 141, 355, 333, 246, 215, 216, 139, 0, 140,
	296, 181, 198, 175, 265, 0, 197, 286, 352, 353,
	173, 377, 150, 367, 143, 151, 366, 258, 0, 257,
	369, 348, 356, 247, 235, 0, 142, 354, 245, 234,
	221, 190, 204, 282, 229, 283, 205, 253, 252, 254,
	231, 236, 0, 483, 0, 329, 362, 378, 336, 158,
	0, 317, 343, 504, 290, 159, 196, 189, 281, 256,
	152, 207, 326, 219, 227, 295, 375, 269, 302, 162,
	361, 325, 186, 680, 690, 686, 688, 687, 684, 685,
	683, 682, 681, 692, 671, 672, 673, 674, 675, 0,
	0, 0, 677, 0, 615, 616, 0, 0, 0, 169,
	589, 590, 591, 592, 593, 599, 600, 604, 605, 613,
	612, 611, 614, 617, 619, 618, 620, 594, 595, 597,
	601, 602, 603, 606, 607, 610, 608, 609, 0, 278,
	676, 133, 144, 224, 0, 292, 194, 363, 0, 179,
	0, 0, 0, 0, 131, 145, 157, 163, 178, 187,
	193, 203, 206, 210, 211, 212, 217, 232, 237, 238,
	239, 240, 259, 260, 263, 264, 267, 268, 274, 275,
	276, 279, 280, 288, 522, 297, 304, 306, 307, 308,
	310, 319, 320, 321, 322, 330, 350, 351, 370, 371,
	340, 0, 0, 135, 0, 0, 517, 519, 0, 0,
	0, 266, 0, 0, 0, 0, 0, 561, 0, 0,
	183, 558, 0, 0, 0, 222, 0, 0, 182, 171,
	230, 228, 0, 0, 0, 273, 339, 0, 0, 0,
	679, 225, 0, 0, 536, 327, 250, 0, 0, 0,
	0, 668, 669, 0, 0, 0, 0, 0, 0, 0,
	0, 81, 0, 1423, 0, 559, 582, 581, 584, 585,
	586, 587, 0, 0, 541, 583, 588, 621, 622, 0,
	0, 0, 0, 0, 556, 573, 0, 678, 0, 0,
	0, 0, 492, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 360, 277, 294, 315, 0, 285,
	500, 0, 0, 0, 0, 570, 571, 0, 0, 0,
	0, 691, 0, 572, 0, 0, 568, 626, 627, 628,
	629, 630, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 574,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	148, 670, 0, 0, 213, 540, 0, 0, 689, 287,
	0, 334, 201, 223, 153, 130, 146, 164, 200, 262,
	0, 309, 596, 481, 0, 0, 0, 172, 0, 301,
	270, 359, 598, 0, 300, 226, 349, 0, 0, 358,
	0, 527, 368, 373, 493, 0, 488, 324, 185, 180,
	184, 0, 137, 501, 284, 177, 218, 0, 0, 0,
	168, 0, 0, 0, 323, 346, 134, 248, 347, 372,
	155, 341, 249, 255, 165, 167, 166, 147, 318, 345,
	160, 170, 328, 305, 335, 176, 0, 0, 0, 0,
	0, 505, 503, 0, 0, 364, 506, 312, 311, 0,
	208, 0, 514, 482, 293, 518, 214, 136, 337, 376,
	154, 220, 342, 480, 195, 261, 174, 271, 272, 192,
	132, 289, 242, 243, 241, 244, 199, 496, 520, 0,
	291, 314, 344, 156, 331, 494, 495, 497, 524, 303,
	526, 532, 0, 233, 188, 191, 202, 209, 0, 298,
	332, 365, 0, 149, 138, 338, 357, 161, 313, 316,
	374, 299, 141, 355, 333, 246, 215, 216, 139, 0,
	140, 296, 181, 198, 175, 265, 0, 197, 286, 352,
	353, 173, 377, 150, 367, 143, 151, 366, 258, 0,
	257, 369, 348, 356, 247, 235, 0, 142, 354, 245,
	234, 221, 190, 204, 282, 229, 283, 205, 253, 252,
	254, 231, 236, 0, 483, 0, 329, 362, 378, 336,
	158, 0, 317, 343, 504, 290, 159, 196, 189, 281,
	256, 152, 207, 326, 219, 227, 295, 375, 269, 302,
	162, 361, 325, 186, 680, 690, 686, 688, 687, 684,
	685, 683, 682, 681, 692, 671, 672, 673, 674, 675,
	0, 0, 0, 677, 0, 615, 616, 0, 0, 0,
	169, 589, 590, 591, 592, 593, 599, 600, 604, 605,
	613, 612, 611, 614, 617, 619, 618, 620, 594, 595,
	597, 601, 602, 603, 606, 607, 610, 608, 609, 0,
	278, 676, 133, 144, 224, 0, 292, 194, 363, 0,
	179, 0, 0, 0, 0, 131, 145, 157, 163, 178,
	187, 193, 203, 206, 210, 211, 212, 217, 232, 237,
	238, 239, 240, 259, 260, 263, 264, 267, 268, 274,
	275, 276, 279, 280, 288, 522, 297, 304, 306, 307,
	308, 310, 319, 320, 321, 322, 330, 350, 351, 370,
	371, 340, 0, 0, 135, 0, 0, 517, 519, 0,
	0, 0, 266, 0, 0, 0, 0, 0, 561, 0,
	0, 183, 558, 0, 0, 0, 222, 0, 0, 182,
	171, 230, 228, 0, 0, 0, 273, 339, 0, 0,
	0, 679, 225, 0, 0, 536, 327, 250, 0, 0,
	0, 0, 668, 669, 0, 0, 0, 0, 0, 0,
	0, 0, 81, 0, 0, 0, 559, 582, 581, 584,
	585, 586, 587, 0, 0, 541, 583, 588, 621, 622,
	0, 0, 0, 0, 0, 556, 573, 0, 678, 0,
	0, 0, 0, 492, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 360, 277, 294, 315, 0,
	285, 500, 0, 0, 0, 0, 570, 571, 0, 0,
	0, 0, 691, 0, 572, 0, 0, 568, 626, 627,
	628, 629, 630, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	574, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 148, 670, 0, 0, 213, 540, 0, 0, 689,
	287, 0, 334, 201, 223, 153, 130, 146, 164, 200,
	262, 0, 309, 596, 481, 0, 0, 0, 172, 0,
	301, 270, 359, 598, 0, 300, 226, 349, 0, 0,
	358, 0, 527, 368, 373, 493, 0, 488, 324, 185,
	180, 184, 0, 137, 501, 284, 177, 218, 0, 0,
	0, 168, 0, 0, 0, 323, 346, 134, 248, 347,
	372, 155, 341, 249, 255, 165, 167, 166, 147, 318,
	345, 160, 170, 328, 305, 335, 176, 0, 0, 0,
	0, 0, 505, 503, 0, 0, 364, 506, 312, 311,
	0, 208, 0, 514, 482, 293, 518, 214, 136, 337,
	376, 154, 220, 342, 480, 195, 261, 174, 271, 272,
	192, 132, 289, 242, 243, 241, 244, 199, 496, 520,
	0, 291, 314, 344, 156, 331, 494, 495, 497, 524,
	303, 526, 532, 0, 233, 188, 191, 202, 209, 0,
	298, 332, 365, 0, 149, 138, 338, 357, 161, 313,
	316, 374, 299, 141, 355, 333, 246, 215, 216, 139,
	0, 140, 296, 181, 198, 175, 265, 0, 197, 286,
	352, 353, 173, 377, 150, 367, 143, 151, 366, 258,
	0, 257, 369, 348, 356, 247, 235, 0, 142, 354,
	245, 234, 221, 190, 204, 282, 229, 283, 205, 253,
	252, 254, 231, 236, 0, 483, 0, 329, 362, 378,
	336, 158, 0, 317, 343, 504, 290, 159, 196, 189,
	281, 256, 152, 207, 326, 219, 227, 295, 375, 269,
	302, 162, 361, 325, 186, 680, 690, 686, 688, 687,
	684, 685, 683, 682, 681, 692, 671, 672, 673, 674,
	675, 0, 0, 0, 677, 0, 615, 616, 0, 0,
	0, 169, 589, 590, 591, 592, 593, 599, 600, 604,
	605, 613, 612, 611, 614, 617, 619, 618, 620, 594,
	595, 597, 601, 602, 603, 606, 607, 610, 608, 609,
	0, 278, 676, 133, 144, 224, 0, 292, 194, 363,
	0, 179, 0, 0, 0, 0, 131, 145, 157, 163,
	178, 187, 193, 203, 206, 210, 211, 212, 217, 232,
	237, 238, 239, 240, 259, 260, 263, 264, 267, 268,
	274, 275, 276, 279, 280, 288, 522, 297, 304, 306,
	307, 308, 310, 319, 320, 321, 322, 330, 350, 351,
	370, 371, 340, 0, 0, 135, 0, 0, 517, 519,
	0, 0, 0, 266, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 222, 0, 0,
	182, 171, 230, 228, 0, 0, 0, 273, 339, 0,
	0, 0, 679, 225, 0, 0, 536, 327, 250, 0,
	0, 0, 0, 668, 669, 0, 0, 0, 0, 0,
	0, 0, 0, 81, 0, 0, 0, 559, 582, 581,
	584, 585, 586, 587, 0, 0, 541, 583, 588, 621,
	622, 0, 0, 0, 0, 0, 0, 573, 0, 678,
	0, 0, 0, 0, 492, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 360, 277, 294, 315,
	0, 285, 500, 0, 0, 0, 0, 570, 571, 0,
	0, 0, 0, 691, 0, 572, 0, 0, 568, 626,
	627, 628, 629, 630, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 574, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 148, 670, 0, 0, 213, 540, 0, 0,
	689, 287, 0, 334, 201, 223, 153, 130, 146, 164,
	200, 262, 0, 309, 596, 481, 0, 0, 0, 172,
	0, 301, 270, 359, 598, 0, 300, 226, 349, 0,
	0, 358, 0, 527, 368, 373, 493, 0, 488, 324,
	185, 180, 184, 0, 137, 501, 284, 177, 218, 0,
	0, 0, 168, 0, 0, 0, 323, 346, 134, 248,
	347, 372, 155, 341, 249, 255, 165, 167, 166, 147,
	318, 345, 160, 170, 328, 305, 335, 176, 0, 0,
	0, 0, 0, 505, 503, 0, 0, 364, 506, 312,
	311, 0, 208, 0, 514, 482, 293, 518, 214, 136,
	337, 376, 154, 220, 342, 480, 195, 261, 174, 271,
	272, 192, 132, 289, 242, 243, 241, 244, 199, 496,
	520, 0, 291, 314, 344, 156, 331, 494, 495, 497,
	524, 303, 526, 532, 0, 233, 188, 191, 202, 209,
	0, 298, 332, 365, 0, 149, 138, 338, 357, 161,
	313, 316, 374, 299, 141, 355, 333, 246, 215, 216,
	139, 0, 140, 296, 181, 198, 175, 265, 0, 197,
	286, 352, 353, 173, 377, 150, 367, 143, 151, 366,
	258, 0, 257, 369, 348, 356, 247, 235, 0, 142,
	354, 245, 234, 221, 190, 204, 282, 229, 283, 205,
	253, 252, 254, 231, 236, 0, 483, 0, 329, 362,
	378, 336, 158, 0, 317, 343, 504, 290, 159, 196,
	189, 281, 256, 152, 207, 326, 219, 227, 295, 375,
	269, 302, 162, 361, 325, 186, 680, 690, 686, 688,
	687, 684, 685, 683, 682, 681, 692, 671, 672, 673,
	674, 675, 1595, 1596, 1597, 677, 0, 615, 616, 0,
	0, 0, 169, 589, 590, 591, 592, 593, 599, 600,
	604, 605, 613, 612, 611, 614, 617, 619, 618, 620,
	594, 595, 597, 601, 602, 603, 606, 607, 610, 608,
	609, 0, 278, 676, 133, 144, 224, 0, 292, 194,
	363, 0, 179, 0, 0, 0, 0, 131, 145, 157,
	163, 178, 187, 193, 203, 206, 210, 211, 212, 217,
	232, 237, 238, 239, 240, 259, 260, 263, 264, 267,
	268, 274, 275, 276, 279, 280, 288, 522, 297, 304,
	306, 307, 308, 310, 319, 320, 321, 322, 330, 350,
	351, 370, 371, 340, 0, 0, 135, 0, 0, 517,
	519, 0, 0, 0, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 222, 0,
	0, 182, 171, 230, 228, 0, 0, 0, 273, 339,
	0, 0, 0, 679, 225, 0, 0, 536, 327, 250,
	0, 0, 0, 0, 668, 669, 0, 0, 0, 0,
	0, 0, 0, 0, 81, 0, 0, 0, 559, 582,
	581, 584, 585, 586, 587, 0, 0, 541, 583, 588,
	621, 622, 0, 0, 0, 0, 0, 0, 573, 0,
	678, 0, 0, 0, 0, 492, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 277, 294,
	315, 0, 285, 500, 0, 0, 0, 0, 570, 571,
	0, 0, 0, 0, 691, 0, 572, 0, 0, 568,
	626, 627, 628, 629, 630, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 574, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 148, 670, 0, 0, 213, 540, 0,
	0, 689, 287, 0, 334, 201, 223, 153, 130, 146,
	164, 200, 262, 0, 309, 596, 481, 0, 0, 0,
	172, 0, 301, 270, 359, 598, 2986, 300, 226, 349,
	0, 0, 358, 0, 527, 368, 373, 493, 0, 488,
	324, 185, 180, 184, 0, 137, 501, 284, 177, 218,
	0, 0, 0, 168, 0, 0, 0, 323, 346, 134,
	248, 347, 372, 155, 341, 249, 255, 165, 167, 166,
	147, 318, 345, 160, 170, 328, 305, 335, 176, 0,
	0, 0, 0, 0, 505, 503, 0, 0, 364, 506,
	312, 311, 0, 208, 0, 514, 482, 293, 518, 214,
	136, 337, 376, 154, 220, 342, 480, 195, 261, 174,
	271, 272, 192, 132, 289, 242, 243, 241, 244, 199,
	496, 520, 0, 291, 314, 344, 156, 331, 494, 495,
	497, 524, 303, 526, 532, 0, 233, 188, 191, 202,
	209, 0, 298, 332, 365, 0, 149, 138, 338, 357,
	161, 313, 316, 374, 299, 141, 355, 333, 246, 215,
	216, 139, 0, 140, 296, 181, 198, 175, 265, 0,
	197, 286, 352, 353, 173, 377, 150, 367, 143, 151,
	366, 258, 0, 257, 369, 348, 356, 247, 235, 0,
	142, 354, 245, 234, 221, 190, 204, 282, 229, 283,
	205, 253, 252, 254, 231, 236, 0, 483, 0, 329,
	362, 378, 336, 158, 0, 317, 343, 504, 290, 159,
	196, 189, 281, 256, 152, 207, 326, 219, 227, 295,
	375, 269, 302, 162, 361, 325, 186, 680, 690, 686,
	688, 687, 684, 685, 683, 682, 681, 692, 671, 672,
	673, 674, 675, 0, 0, 0, 677, 0, 615, 616,
	0, 0, 0, 169, 589, 590, 591, 592, 593, 599,
	600, 604, 605, 613, 612, 611, 614, 617, 619, 618,
	620, 594, 595, 597, 601, 602, 603, 606, 607, 610,
	608, 609, 0, 278, 676, 133, 144, 224, 0, 292,
	194, 363, 0, 179, 0, 0, 0, 0, 131, 145,
	157, 163, 178, 187, 193, 203, 206, 210, 211, 212,
	217, 232, 237, 238, 239, 240, 259, 260, 263, 264,
	267, 268, 274, 275, 276, 279, 280, 288, 522, 297,
	304, 306, 307, 308, 310, 319, 320, 321, 322, 330,
	350, 351, 370, 371, 340, 0, 0, 135, 0, 0,
	517, 519, 0, 0, 0, 266, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 222,
	0, 0, 182, 171, 230, 228, 0, 0, 0, 273,
	339, 0, 0, 0, 679, 225, 0, 0, 536, 327,
	250, 0, 0, 0, 0, 668, 669, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 0, 1092, 0, 559,
	582, 581, 584, 585, 586, 587, 0, 0, 541, 583,
	588, 621, 622, 0, 0, 0, 0, 0, 0, 573,
	0, 678, 0, 0, 0, 0, 492, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 360, 277,
	294, 315, 0, 285, 500, 0, 0, 0, 0, 570,
	571, 0, 0, 0, 0, 691, 0, 572, 0, 0,
	568, 626, 627, 628, 629, 630, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 148, 670, 0, 0, 213, 540,
	0, 0, 689, 287, 0, 334, 201, 223, 153, 130,
	146, 164, 200, 262, 0, 309, 596, 481, 0, 0,
	0, 172, 0, 301, 270, 359, 598, 0, 300, 226,
	349, 0, 0, 358, 0, 527, 368, 373, 493, 0,
	488, 324, 185, 180, 184, 0, 137, 501, 284, 177,
	218, 0, 0, 0, 168, 0, 0, 0, 323, 346,
	134, 248, 347, 372, 155, 341, 249, 255, 165, 167,
	166, 147, 318, 345, 160, 170, 328, 305, 335, 176,
	0, 0, 0, 0, 0, 505, 503, 0, 0, 364,
	506, 312, 311, 0, 208, 0, 514, 482, 293, 518,
	214, 136, 337, 376, 154, 220, 342, 480, 195, 261,
	174, 271, 272, 192, 132, 289, 242, 243, 241, 244,
	199, 496, 520, 0, 291, 314, 344, 156, 331, 494,
	495, 497, 524, 303, 526, 532, 0, 233, 188, 191,
	202, 209, 0, 298, 332, 365, 0, 149, 138, 338,
	357, 161, 313, 316, 374, 299, 141, 355, 333, 246,
	215, 216, 139, 0, 140, 296, 181, 198, 175, 265,
	0, 197, 286, 352, 353, 173, 377, 150, 367, 143,
	151, 366, 258, 0, 257, 369, 348, 356, 247, 235,
	0, 142, 354, 245, 234, 221, 190, 204, 282, 229,
	283, 205, 253, 252, 254, 231, 236, 0, 483, 0,
	329, 362, 378, 336, 158, 0, 317, 343, 504, 290,
	159, 196, 189, 281, 256, 152, 207, 326, 219, 227,
	295, 375, 269, 302, 162, 361, 325, 186, 680, 690,
	686, 688, 687, 684, 685, 683, 682, 681, 692, 671,
	672, 673, 674, 675, 0, 0, 0, 677, 0, 615,
	616, 0, 0, 0, 169, 589, 590, 591, 592, 593,
	599, 600, 604, 605, 613, 612, 611, 614, 617, 619,
	618, 620, 594, 595, 597, 601, 602, 603, 606, 607,
	610, 608, 609, 0, 278, 676, 133, 144, 224, 0,
	292, 194, 363, 0, 179, 0, 0, 0, 0, 131,
	145, 157, 163, 178, 187, 193, 203, 206, 210, 211,
	212, 217, 232, 237, 238, 239, 240, 259, 260, 263,
	264, 267, 268, 274, 275, 276, 279, 280, 288, 522,
	297, 304, 306, 307, 308, 310, 319, 320, 321, 322,
	330, 350, 351, 370, 371, 340, 0, 0, 135, 0,
	0, 517, 519, 0, 0, 0, 266, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 0, 0,
	222, 0, 0, 182, 171, 230, 228, 0, 0, 0,
	273, 339, 0, 0, 0, 679, 225, 0, 0, 536,
	327, 250, 0, 0, 0, 0, 668, 669, 0, 0,
	0, 0, 0, 0, 0, 0, 81, 0, 0, 0,
	559, 582, 581, 584, 585, 586, 587, 0, 0, 541,
	583, 588, 621, 622, 0, 0, 0, 0, 0, 0,
	573, 0, 678, 0, 0, 0, 0, 492, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 360,
	277, 294, 315, 0, 285, 500, 0, 0, 0, 0,
	570, 571, 0, 0, 0, 0, 691, 0, 572, 0,
	0, 568, 626, 627, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 574, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 148, 670, 0, 0, 213,
	540, 0, 0, 689, 287, 0, 334, 201, 223, 153,
	130, 146, 164, 200, 262, 0, 309, 596, 481, 0,
	0, 0, 172, 0, 301, 270, 359, 598, 0, 300,
	226, 349, 0, 0, 358, 0, 527, 368, 373, 493,
	0, 488, 324, 185, 180, 184, 0, 137, 501, 284,
	177, 218, 0, 0, 0, 168, 0, 0, 0, 323,
	346, 134, 248, 347, 372, 155, 341, 249, 255, 165,
	167, 166, 147, 318, 345, 160, 170, 328, 305, 335,
	176, 0, 0, 0, 0, 0, 505, 503, 0, 0,
	364, 506, 312, 311, 0, 208, 0, 514, 482, 293,
	518, 214, 136, 337, 376, 154, 220, 342, 480, 195,
	261, 174, 271, 272, 192, 132, 289, 242, 243, 241,
	244, 199, 496, 520, 0, 291, 314, 344, 156, 331,
	494, 495, 497, 524, 303, 526, 532, 0, 233, 188,
	191, 202, 209, 0, 298, 332, 365, 0, 149, 138,
	338, 357, 161, 313, 316, 374, 299, 141, 355, 333,
	246, 215, 216, 139, 0, 140, 296, 181, 198, 175,
	265, 0, 197, 286, 352, 353, 173, 377, 150, 367,
	143, 151, 366, 258, 0, 257, 369, 348, 356, 247,
	235, 0, 142, 354, 245, 234, 221, 190, 204, 282,
	229, 283, 205, 253, 252, 254, 231, 236, 0, 483,
	0, 329, 362, 378, 336, 158, 0, 317, 343, 504,
	290, 159, 196, 189, 281, 256, 152, 207, 326, 219,
	227, 295, 375, 269, 302, 162, 361, 325, 186, 680,
	690, 686, 688, 687, 684, 685, 683, 682, 681, 692,
	671, 672, 673, 674, 675, 0, 0, 0, 677, 0,
	615, 616, 0, 0, 0, 169, 589, 590, 591, 592,
	593, 599, 600, 604, 605, 613, 612, 611, 614, 617,
	619, 618, 620, 594, 595, 597, 601, 602, 603, 606,
	607, 610, 608, 609, 0, 278, 676, 133, 144, 224,
	0, 292, 194, 363, 0, 179, 0, 0, 0, 0,
	131, 145, 157, 163, 178, 187, 193, 203, 206, 210,
	211, 212, 217, 232, 237, 238, 239, 240, 259, 260,
	263, 264, 267, 268, 274, 275, 276, 279, 280, 288,
	522, 297, 304, 306, 307, 308, 310, 319, 320, 321,
	322, 330, 350, 351, 370, 371, 340, 0, 0, 135,
	0, 0, 517, 519, 0, 0, 0, 266, 0, 0,
	0, 0, 1115, 0, 0, 0, 183, 0, 0, 0,
	0, 222, 0, 0, 182, 171, 230, 228, 0, 0,
	0, 273, 339, 0, 0, 0, 0, 225, 0, 0,
	536, 327, 250, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1116, 0, 1119, 0, 0, 0, 0, 0, 0,
	541, 0, 0, 0, 0, 0, 0, 1111, 1112, 1110,
	0, 0, 0, 0, 0, 0, 0, 0, 492, 0,
	0, 0, 0, 0, 0, 0, 1113, 0, 0, 0,
	360, 277, 294, 315, 0, 285, 500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 148, 0, 0, 0,
	213, 540, 0, 0, 0, 287, 0, 334, 201, 223,
	153, 130, 146, 164, 200, 262, 0, 309, 498, 481,
	0, 0, 0, 172, 0, 301, 270, 359, 502, 0,
	300, 226, 349, 0, 0, 358, 0, 527, 368, 373,
	493, 0, 488, 324, 185, 180, 184, 0, 137, 501,
	284, 177, 218, 0, 0, 0, 168, 0, 0, 0,
	323, 346, 134, 248, 347, 372, 155, 341, 249, 255,
	165, 167, 166, 147, 318, 345, 160, 170, 328, 305,
	335, 176, 0, 0, 0, 0, 0, 505, 503, 0,
	0, 364, 506, 312, 311, 0, 208, 0, 514, 482,
	293, 518, 214, 136, 337, 376, 154, 220, 342, 480,
	195, 261, 174, 271, 272, 192, 132, 289, 242, 243,
	241, 244, 199, 496, 520, 0, 291, 314, 344, 156,
	331, 494, 495, 497, 524, 303, 526, 532, 0, 233,
	188, 191, 202, 209, 0, 298, 332, 365, 0, 149,
	138, 338, 357, 161, 313, 316, 374, 299, 141, 355,
	333, 246, 215, 216, 139, 0, 140, 296, 181, 198,
	175, 265, 0, 197, 286, 352, 353, 173, 377, 150,
	367, 143, 151, 366, 258, 0, 257, 369, 348, 356,
	247, 235, 0, 142, 354, 245, 234, 221, 190, 204,
	282, 229, 283, 205, 253, 252, 254, 231, 236, 0,
	483, 0, 329, 362, 378, 336, 158, 0, 317, 343,
	504, 290, 159, 196, 189, 281, 256, 152, 207, 326,
	219, 227, 295, 375, 269, 302, 162, 361, 325, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 533, 534, 0, 0, 0, 169, 484, 485, 486,
	487, 489, 507, 508, 512, 513, 530, 529, 528, 531,
	535, 538, 537, 539, 490, 491, 499, 509, 510, 511,
	515, 516, 525, 521, 523, 0, 278, 0, 133, 144,
	224, 0, 292, 194, 363, 0, 179, 0, 0, 0,
	0, 131, 145, 157, 163, 178, 187, 193, 203, 206,
	210, 211, 212, 217, 232, 237, 238, 239, 240, 259,
	260, 263, 264, 267, 268, 274, 275, 276, 279, 280,
	288, 522, 297, 304, 306, 307, 308, 310, 319, 320,
	321, 322, 330, 350, 351, 370, 371, 340, 0, 0,
	135, 0, 0, 517, 519, 0, 0, 0, 266, 0,
	0, 0, 0, 1636, 0, 0, 0, 183, 0, 0,
	0, 0, 222, 0, 0, 182, 171, 230, 228, 0,
	0, 0, 273, 339, 0, 0, 0, 0, 225, 0,
	0, 536, 327, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1638, 1640, 0, 0, 0, 0,
	0, 0, 128, 0, 479, 0, 0, 0, 0, 0,
	0, 541, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 492,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 360, 277, 294, 315, 0, 285, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 148, 0, 0,
	0, 213, 540, 0, 1639, 0, 287, 0, 334, 201,
	223, 153, 130, 146, 164, 200, 262, 0, 309, 498,
	481, 0, 0, 0, 172, 0, 301, 270, 359, 502,
	0, 300, 226, 349, 0, 0, 358, 0, 527, 368,
	373, 493, 0, 488, 324, 185, 180, 184, 0, 137,
	501, 284, 177, 218, 0, 0, 0, 168, 0, 0,
	0, 323, 346, 134, 248, 347, 372, 155, 341, 249,
	255, 165, 167, 166, 147, 318, 345, 160, 170, 328,
	305, 335, 176, 0, 0, 0, 0, 0, 505, 503,
	0, 0, 364, 506, 312, 311, 0, 208, 0, 514,
	482, 293, 518, 214, 136, 337, 376, 154, 220, 342,
	480, 195, 261, 174, 271, 272, 192, 132, 289, 242,
	243, 241, 244, 199, 496, 520, 0, 291, 314, 344,
	156, 331, 494, 495, 497, 524, 303, 526, 532, 0,
	233, 188, 191, 202, 209, 0, 298, 332, 365, 0,
	149, 138, 338, 357, 161, 313, 316, 374, 299, 141,
	355, 333, 246, 215, 216, 139, 0, 140, 296, 181,
	198, 175, 265, 0, 197, 286, 352, 353, 173, 377,
	150, 367, 143, 151, 366, 258, 0, 257, 369, 348,
	356, 247, 235, 0, 142, 354, 245, 234, 221, 190,
	204, 282, 229, 283, 205, 253, 252, 254, 231, 236,
	0, 483, 0, 329, 362, 378, 336, 158, 0, 317,
	343, 504, 290, 159, 196, 189, 281, 256, 152, 207,
	326, 219, 227, 295, 375, 269, 302, 162, 361, 325,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 533, 534, 0, 0, 0, 169, 484, 485,
	486, 487, 489, 507, 508, 512, 513, 530, 529, 528,
	531, 535, 538, 537, 539, 490, 491, 499, 509, 510,
	511, 515, 516, 525, 521, 523, 0, 278, 0, 133,
	144, 224, 0, 292, 194, 363, 0, 179, 0, 0,
	0, 0, 131, 145, 157, 163, 178, 187, 193, 203,
	206, 210, 211, 212, 217, 232, 237, 238, 239, 240,
	259, 260, 263, 264, 267, 268, 274, 275, 276, 279,
	280, 288, 522, 297, 304, 306, 307, 308, 310, 319,
	320, 321, 322, 330, 350, 351, 370, 371, 340, 0,
	0, 135, 0, 0, 517, 519, 0, 0, 0, 266,
	0, 0, 0, 0, 1636, 0, 0, 0, 183, 0,
	0, 0, 0, 222, 0, 0, 182, 171, 230, 228,
	0, 0, 0, 273, 339, 0, 0, 0, 0, 225,
	0, 0, 536, 327, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1638, 1640, 0, 0, 0,
	0, 0, 0, 128, 0, 479, 0, 0, 0, 0,
	0, 0, 541, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	492, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 1634, 294, 315, 0, 285, 500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 148, 0,
	0, 0, 213, 540, 0, 1639, 0, 287, 0, 334,
	201, 223, 153, 130, 146, 164, 200, 262, 0, 309,
	498, 481, 0, 0, 0, 172, 0, 301, 270, 359,
	502, 0, 300, 226, 349, 0, 0, 358, 0, 527,
	368, 373, 493, 0, 488, 324, 185, 180, 184, 0,
	137, 501, 284, 177, 218, 0, 0, 0, 168, 0,
	0, 0, 323, 346, 134, 248, 347, 372, 155, 341,
	249, 255, 165, 167, 166, 147, 318, 345, 160, 170,
	328, 305, 335, 176, 0, 0, 0, 0, 0, 505,
	503, 0, 0, 364, 506, 312, 311, 0, 208, 0,
	514, 482, 293, 518, 214, 136, 337, 376, 154, 220,
	342, 480, 195, 261, 174, 271, 272, 192, 132, 289,
	242, 243, 241, 244, 199, 496, 520, 0, 291, 314,
	344, 156, 331, 494, 495, 497, 524, 303, 526, 532,
	0, 233, 188, 191, 202, 209, 0, 298, 332, 365,
	0, 149, 138, 338, 357, 161, 313, 316, 374, 299,
	141, 355, 333, 246, 215, 216, 139, 0, 140, 296,
	181, 198, 175, 265, 0, 197, 286, 352, 353, 173,
	377, 150, 367, 143, 151, 366, 258, 0, 257, 369,
	348, 356, 247, 235, 0, 142, 354, 245, 234, 221,
	190, 204, 282, 229, 283, 205, 253, 252, 254, 231,
	236, 0, 483, 0, 329, 362, 378, 336, 158, 0,
	317, 343, 504, 290, 159, 196, 189, 281, 256, 152,
	207, 326, 219, 227, 295, 375, 269, 302, 162, 361,
	325, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 533, 534, 0, 0, 0, 169, 484,
	485, 486, 487, 489, 507, 508, 512, 513, 530, 529,
	528, 531, 535, 538, 537, 539, 490, 491, 499, 509,
	510, 511, 515, 516, 525, 521, 523, 0, 278, 0,
	133, 144, 224, 0, 292, 194, 363, 0, 179, 0,
	0, 0, 0, 131, 145, 157, 163, 178, 187, 193,
	203, 206, 210, 211, 212, 217, 232, 237, 238, 239,
	240, 259, 260, 263, 264, 267, 268, 274, 275, 276,
	279, 280, 288, 522, 297, 304, 306, 307, 308, 310,
	319, 320, 321, 322, 330, 350, 351, 370, 371, 340,
	0, 0, 135, 0, 0, 517, 519, 0, 0, 0,
	266, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 222, 0, 0, 182, 171, 230,
	228, 0, 0, 0, 273, 339, 0, 0, 0, 0,
	225, 0, 0, 536, 327, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 128, 0, 479, 0, 0, 0,
	0, 0, 0, 541, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 492, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 360, 277, 294, 315, 0, 285, 500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 148,
	0, 0, 0, 213, 540, 0, 0, 0, 287, 0,
	334, 201, 223, 153, 130, 146, 164, 200, 262, 0,
	309, 498, 481, 0, 0, 0, 172, 0, 301, 270,
	359, 502, 0, 300, 226, 349, 0, 0, 358, 0,
	527, 368, 373, 493, 0, 488, 324, 185, 180, 184,
	0, 137, 501, 284, 177, 218, 0, 0, 0, 168,
	0, 0, 0, 323, 346, 134, 248, 347, 372, 155,
	341, 249, 255, 165, 167, 166, 147, 318, 345, 160,
	170, 328, 305, 335, 176, 0, 0, 0, 0, 0,
	505, 503, 0, 0, 364, 506, 312, 311, 0, 208,
	0, 514, 482, 293, 518, 214, 136, 337, 376, 154,
	220, 342, 480, 195, 261, 174, 271, 272, 192, 132,
	289, 242, 243, 241, 244, 199, 496, 520, 0, 291,
	314, 344, 156, 331, 494, 495, 497, 524, 303, 526,
	532, 0, 233, 188, 191, 202, 209, 0, 298, 332,
	365, 0, 149, 138, 338, 357, 161, 313, 316, 374,
	299, 141, 355, 333, 246, 215, 216, 139, 0, 140,
	296, 181, 198, 175, 265, 0, 197, 286, 352, 353,
	173, 377, 150, 367, 143, 151, 366, 258, 0, 257,
	369, 348, 356, 247, 235, 0, 142, 354, 245, 234,
	221, 190, 204, 282, 229, 283, 205, 253, 252, 254,
	231, 236, 0, 483, 0, 329, 362, 378, 336, 158,
	0, 317, 343, 504, 290, 159, 196, 189, 281, 256,
	152, 207, 326, 219, 227, 295, 375, 269, 302, 162,
	361, 325, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 533, 534, 0, 0, 0, 169,
	484, 485, 486, 487, 489, 507, 508, 512, 513, 530,
	529, 528, 531, 535, 538, 537, 539, 490, 491, 499,
	509, 510, 511, 515, 516, 525, 521, 523, 0, 278,
	0, 133, 144, 224, 0, 292, 194, 363, 0, 179,
	0, 0, 0, 474, 131, 145, 157, 163, 178, 187,
	193, 203, 206, 210, 211, 212, 217, 232, 237, 238,
	239, 240, 259, 260, 263, 264, 267, 268, 274, 275,
	276, 279, 280, 288, 522, 297, 304, 306, 307, 308,
	310, 319, 320, 321, 322, 330, 350, 351, 370, 371,
	340, 0, 0, 135, 0, 0, 517, 519, 0, 0,
	0, 266, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 0, 0, 222, 1957, 0, 182, 171,
	230, 228, 0, 0, 0, 273, 339, 0, 0, 0,
	0, 225, 0, 0, 536, 327, 250, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 128, 0, 479, 0, 0,
	0, 0, 0, 0, 541, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 492, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 360, 277, 294, 315, 0, 285,
	500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	148, 0, 0, 0, 213, 540, 0, 0, 0, 287,
	0, 334, 201, 223, 153, 130, 146, 164, 200, 262,
	0, 309, 498, 481, 0, 0, 0, 172, 0, 301,
	270, 359, 502, 0, 300, 226, 349, 0, 0, 358,
	0, 527, 368, 373, 493, 0, 488, 324, 185, 180,
	184, 0, 137, 501, 284, 177, 218, 0, 0, 0,
	168, 0, 0, 0, 323, 346, 134, 248, 347, 372,
	155, 341, 249, 255, 165, 167, 166, 147, 318, 345,
	160, 170, 328, 305, 335, 176, 0, 0, 0, 0,
	0, 505, 503, 0, 0, 364, 506, 312, 311, 0,
	208, 0, 514, 482, 293, 518, 214, 136, 337, 376,
	154, 220, 342, 480, 195, 261, 174, 271, 272, 192,
	132, 289, 242, 243, 241, 244, 199, 496, 520, 0,
	291, 314, 344, 156, 331, 494, 495, 497, 524, 303,
	526, 532, 0, 233, 188, 191, 202, 209, 0, 298,
	332, 365, 0, 149, 138, 338, 357, 161, 313, 316,
	374, 299, 141, 355, 333, 246, 215, 216, 139, 0,
	140, 296, 181, 198, 175, 265, 0, 197, 286, 352,
	353, 173, 377, 150, 367, 143, 151, 366, 258, 0,
	257, 369, 348, 356, 247, 235, 0, 142, 354, 245,
	234, 221, 190, 204, 282, 229, 283, 205, 253, 252,
	254, 231, 236, 0, 483, 0, 329, 362, 378, 336,
	158, 0, 317, 343, 504, 290, 159, 196, 189, 281,
	256, 152, 207, 326, 219, 227, 295, 375, 269, 302,
	162, 361, 325, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 533, 534, 0, 0, 0,
	169, 484, 485, 486, 487, 489, 507, 508, 512, 513,
	530, 529, 528, 531, 535, 538, 537, 539, 490, 491,
	499, 509, 510, 511, 515, 516, 525, 521, 523, 0,
	278, 0, 133, 144, 224, 0, 292, 194, 363, 0,
	179, 0, 0, 0, 0, 131, 145, 157, 163, 178,
	187, 193, 203, 206, 210, 211, 212, 217, 232, 237,
	238, 239, 240, 259, 260, 263, 264, 267, 268, 274,
	275, 276, 279, 280, 288, 522, 297, 304, 306, 307,
	308, 310, 319, 320, 321, 322, 330, 350, 351, 370,
	371, 340, 0, 0, 135, 0, 0, 517, 519, 0,
	0, 0, 266, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 222, 0, 0, 182,
	171, 230, 228, 0, 0, 0, 273, 339, 0, 0,
	0, 0, 225, 0, 0, 536, 327, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 128, 0, 479, 0,
	0, 0, 0, 0, 0, 541, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 492, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 360, 277, 294, 315, 0,
	285, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 148, 0, 0, 0, 213, 540, 0, 0, 0,
	287, 0, 334, 201, 223, 153, 130, 146, 164, 200,
	262, 0, 309, 498, 481, 0, 0, 0, 172, 0,
	301, 270, 359, 502, 0, 300, 226, 349, 0, 0,
	358, 0, 527, 368, 373, 493, 0, 488, 324, 185,
	180, 184, 0, 137, 501, 284, 177, 218, 0, 0,
	0, 168, 0, 0, 0, 323, 346, 134, 248, 347,
	372, 155, 341, 249, 255, 165, 167, 166, 147, 318,
	345, 160, 170, 328, 305, 335, 176, 0, 0, 0,
	0, 0, 505, 503, 0, 0, 364, 506, 312, 311,
	0, 208, 0, 514, 482, 293, 518, 214, 136, 337,
	376, 154, 220, 342, 480, 195, 261, 174, 271, 272,
	192, 132, 289, 242, 243, 241, 244, 199, 496, 520,
	0, 291, 314, 344, 156, 331, 494, 495, 497, 524,
	303, 526, 532, 0, 233, 188, 191, 202, 209, 0,
	298, 332, 365, 0, 149, 138, 338, 357, 161, 313,
	316, 374, 299, 141, 355, 333, 246, 215, 216, 139,
	0, 140, 296, 181, 198, 175, 265, 0, 197, 286,
	352, 353, 173, 377, 150, 367, 143, 151, 366, 258,
	0, 257, 369, 348, 356, 247, 235, 0, 142, 354,
	245, 234, 221, 190, 204, 282, 229, 283, 205, 253,
	252, 254, 231, 236, 0, 483, 0, 329, 362, 378,
	336, 158, 0, 317, 343, 504, 290, 159, 196, 189,
	281, 256, 152, 207, 326, 219, 227, 295, 375, 269,
	302, 162, 361, 325, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 533, 534, 0, 0,
	0, 169, 484, 485, 486, 487, 489, 507, 508, 512,
	513, 530, 529, 528, 531, 535, 538, 537, 539, 490,
	491, 499, 509, 510, 511, 515, 516, 525, 521, 523,
	0, 278, 0, 133, 144, 224, 0, 292, 194, 363,
	0, 179, 0, 0, 0, 0, 131, 145, 157, 163,
	178, 187, 193, 203, 206, 210, 211, 212, 217, 232,
	237, 238, 239, 240, 259, 260, 263, 264, 267, 268,
	274, 275, 276, 279, 280, 288, 522, 297, 304, 306,
	307, 308, 310, 319, 320, 321, 322, 330, 350, 351,
	370, 371, 340, 0, 0, 135, 0, 0, 517, 519,
	0, 0, 0, 266, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 222, 0, 0,
	182, 171, 230, 228, 0, 0, 0, 273, 339, 0,
	0, 0, 0, 225, 0, 0, 536, 327, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1116, 0, 1119,
	0, 0, 0, 0, 0, 0, 541, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 492, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 360, 277, 294, 315,
	0, 285, 500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 148, 0, 0, 0, 213, 540, 0, 0,
	0, 287, 0, 334, 201, 223, 153, 130, 146, 164,
	200, 262, 0, 309, 498, 481, 0, 0, 0, 172,
	0, 301, 270, 359, 502, 0, 300, 226, 349, 0,
	0, 358, 0, 527, 368, 373, 493, 0, 488, 324,
	185, 180, 184, 0, 137, 501, 284, 177, 218, 0,
	0, 0, 168, 0, 0, 0, 323, 346, 134, 248,
	347, 372, 155, 341, 249, 255, 165, 167, 166, 147,
	318, 345, 160, 170, 328, 305, 335, 176, 0, 0,
	0, 0, 0, 505, 503, 0, 0, 364, 506, 312,
	311, 0, 208, 0, 514, 482, 293, 518, 214, 136,
	337, 376, 154, 220, 342, 480, 195, 261, 174, 271,
	272, 192, 132, 289, 242, 243, 241, 244, 199, 496,
	520, 0, 291, 314, 344, 156, 331, 494, 495, 497,
	524, 303, 526, 532, 0, 233, 188, 191, 202, 209,
	0, 298, 332, 365, 0, 149, 138, 338, 357, 161,
	313, 316, 374, 299, 141, 355, 333, 246, 215, 216,
	139, 0, 140, 296, 181, 198, 175, 265, 0, 197,
	286, 352, 353, 173, 377, 150, 367, 143, 151, 366,
	258, 0, 257, 369, 348, 356, 247, 235, 0, 142,
	354, 245, 234, 221, 190, 204, 282, 229, 283, 205,
	253, 252, 254, 231, 236, 0, 483, 0, 329, 362,
	378, 336, 158, 0, 317, 343, 504, 290, 159, 196,
	189, 281, 256, 152, 207, 326, 219, 227, 295, 375,
	269, 302, 162, 361, 325, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 533, 534, 0,
	0, 0, 169, 484, 485, 486, 487, 489, 507, 508,
	512, 513, 530, 529, 528, 531, 535, 538, 537, 539,
	490, 491, 499, 509, 510, 511, 515, 516, 525, 521,
	523, 0, 278, 0, 133, 144, 224, 0, 292, 194,
	363, 0, 179, 0, 0, 0, 0, 131, 145, 157,
	163, 178, 187, 193, 203, 206, 210, 211, 212, 217,
	232, 237, 238, 239, 240, 259, 260, 263, 264, 267,
	268, 274, 275, 276, 279, 280, 288, 522, 297, 304,
	306, 307, 308, 310, 319, 320, 321, 322, 330, 350,
	351, 370, 371, 340, 0, 0, 135, 0, 0, 517,
	519, 0, 0, 0, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 222, 0,
	0, 182, 171, 230, 228, 0, 0, 0, 273, 339,
	0, 0, 0, 0, 225, 0, 0, 536, 327, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 732, 0,
	0, 0, 0, 0, 0, 0, 0, 541, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 492, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 277, 294,
	315, 0, 285, 500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 148, 0, 0, 0, 213, 540, 0,
	0, 0, 287, 0, 334, 201, 223, 153, 130, 146,
	164, 200, 262, 0, 309, 498, 481, 0, 0, 0,
	172, 0, 301, 270, 359, 502, 0, 300, 226, 349,
	0, 0, 358, 0, 527, 368, 373, 493, 0, 488,
	324, 185, 180, 184, 0, 137, 501, 284, 177, 218,
	0, 0, 0, 168, 0, 0, 0, 323, 346, 134,
	248, 347, 372, 155, 341, 249, 255, 165, 167, 166,
	147, 318, 345, 160, 170, 328, 305, 335, 176, 0,
	0, 0, 0, 0, 505, 503, 0, 0, 364, 506,
	312, 311, 0, 208, 0, 514, 482, 293, 518, 214,
	136, 337, 376, 154, 220, 342, 480, 195, 261, 174,
	271, 272, 192, 132, 289, 242, 243, 241, 244, 199,
	496, 520, 0, 291, 314, 344, 156, 331, 494, 495,
	497, 524, 303, 526, 532, 0, 233, 188, 191, 202,
	209, 0, 298, 332, 365, 0, 149, 138, 338, 357,
	161, 313, 316, 374, 299, 141, 355, 333, 246, 215,
	216, 139, 0, 140, 296, 181, 198, 175, 265, 0,
	197, 286, 352, 353, 173, 377, 150, 367, 143, 151,
	366, 258, 0, 257, 369, 348, 356, 247, 235, 0,
	142, 354, 245, 234, 221, 190, 204, 282, 229, 283,
	205, 253, 252, 254, 231, 236, 0, 483, 0, 329,
	362, 378, 336, 158, 0, 317, 343, 504, 290, 159,
	196, 189, 281, 256, 152, 207, 326, 219, 227, 295,
	375, 269, 302, 162, 361, 325, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 533, 534,
	0, 0, 0, 169, 484, 485, 486, 487, 489, 507,
	508, 512, 513, 530, 529, 528, 531, 535, 538, 537,
	539, 490, 491, 499, 509, 510, 511, 515, 516, 525,
	521, 523, 0, 278, 0, 133, 144, 224, 0, 292,
	194, 363, 0, 179, 0, 0, 0, 0, 131, 145,
	157, 163, 178, 187, 193, 203, 206, 210, 211, 212,
	217, 232, 237, 238, 239, 240, 259, 260, 263, 264,
	267, 268, 274, 275, 276, 279, 280, 288, 522, 297,
	304, 306, 307, 308, 310, 319, 320, 321, 322, 330,
	350, 351, 370, 371, 0, 0, 0, 135, 0, 0,
	517, 519, 448, 340, 442, 453, 436, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 459, 0, 0,
	0, 0, 0, 183, 0, 0, 443, 0, 222, 0,
	0, 182, 171, 230, 228, 0, 0, 0, 273, 339,
	0, 0, 0, 0, 225, 0, 0, 0, 327, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 457, 0,
	456, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 277, 294,
	315, 0, 285, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 435, 434, 437, 0,
	0, 0, 251, 148, 0, 0, 441, 213, 0, 0,
	0, 0, 287, 0, 334, 201, 223, 153, 130, 146,
	164, 200, 262, 445, 309, 0, 0, 449, 0, 0,
	172, 0, 301, 270, 359, 0, 0, 300, 226, 349,
	0, 452, 358, 0, 0, 368, 373, 0, 0, 0,
	324, 185, 180, 184, 0, 137, 0, 284, 177, 218,
	0, 0, 0, 168, 0, 0, 0, 323, 346, 134,
	248, 347, 372, 155, 341, 249, 255, 165, 167, 166,
	147, 318, 345, 160, 170, 328, 305, 335, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 364, 0,
	312, 311, 0, 208, 0, 0, 0, 293, 0, 214,
	136, 337, 376, 154, 220, 342, 0, 195, 261, 174,
	271, 272, 192, 132, 289, 242, 243, 241, 244, 199,
	0, 0, 0, 462, 314, 344, 156, 331, 438, 439,
	440, 446, 447, 450, 451, 454, 233, 188, 191, 202,
	209, 0, 298, 332, 365, 0, 149, 138, 338, 357,
	161, 313, 316, 374, 299, 141, 355, 333, 246, 215,
	216, 139, 0, 140, 296, 181, 198, 175, 265, 0,
	197, 286, 352, 353, 173, 377, 150, 367, 143, 151,
	366, 258, 0, 257, 369, 348, 356, 247, 235, 0,
	142, 354, 245, 234, 221, 190, 204, 282, 229, 283,
	205, 253, 252, 254, 231, 236, 0, 0, 0, 329,
	362, 378, 336, 158, 0, 317, 343, 0, 290, 159,
	196, 189, 281, 256, 152, 207, 326, 219, 227, 295,
	375, 269, 302, 162, 361, 325, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 0, 133, 144, 224, 0, 292,
	194, 363, 0, 179, 0, 0, 0, 0, 131, 145,
	157, 163, 178, 187, 193, 203, 206, 210, 211, 212,
	217, 232, 237, 238, 239, 240, 259, 260, 263, 264,
	267, 268, 274, 275, 276, 279, 280, 288, 444, 297,
	304, 306, 307, 308, 310, 319, 320, 321, 322, 330,
	350, 351, 370, 371, 0, 0, 0, 135, 448, 340,
	442, 453, 436, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 428, 0, 0, 0, 0, 0, 183,
	0, 0, 443, 0, 222, 0, 0, 182, 171, 230,
	228, 0, 0, 0, 273, 339, 0, 0, 0, 0,
	225, 0, 0, 0, 327, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 457, 0, 456, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 360, 277, 294, 315, 0, 285, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 435, 434, 437, 0, 0, 0, 251, 148,
	0, 0, 441, 213, 0, 0, 0, 0, 287, 0,
	334, 201, 223, 153, 130, 146, 164, 200, 262, 445,
	309, 0, 0, 449, 0, 0, 172, 0, 301, 270,
	359, 0, 0, 300, 226, 349, 0, 452, 358, 0,
	0, 368, 373, 0, 0, 0, 324, 185, 180, 184,
	0, 137, 0, 284, 177, 218, 0, 0, 0, 168,
	0, 0, 0, 323, 346, 134, 248, 347, 372, 155,
	341, 249, 255, 165, 167, 166, 147, 318, 345, 160,
	170, 328, 305, 335, 176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 364, 0, 312, 311, 0, 208,
	0, 0, 0, 293, 0, 214, 136, 337, 376, 154,
	220, 342, 0, 195, 261, 174, 271, 272, 192, 132,
	289, 242, 243, 241, 244, 199, 0, 0, 0, 431,
	314, 344, 156, 331, 438, 439, 440, 446, 447, 450,
	451, 454, 233, 188, 191, 202, 209, 0, 298, 332,
	365, 0, 149, 138, 338, 357, 161, 313, 316, 374,
	299, 141, 355, 333, 246, 215, 216, 139, 0, 140,
	296, 181, 198, 175, 265, 0, 197, 286, 352, 353,
	173, 377, 150, 367, 143, 151, 366, 258, 0, 257,
	369, 348, 356, 247, 235, 0, 142, 354, 245, 234,
	221, 190, 204, 282, 229, 283, 205, 253, 252, 254,
	231, 236, 0, 0, 0, 329, 362, 378, 336, 158,
	0, 317, 343, 0, 290, 159, 196, 189, 281, 256,
	152, 207, 326, 219, 227, 295, 375, 269, 302, 162,
	361, 325, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	0, 133, 144, 224, 0, 292, 194, 363, 0, 179,
	0, 0, 0, 0, 131, 145, 157, 163, 178, 187,
	193, 203, 206, 210, 211, 212, 217, 232, 237, 238,
	239, 240, 259, 260, 263, 264, 267, 268, 274, 275,
	276, 279, 280, 288, 444, 297, 304, 306, 307, 308,
	310, 319, 320, 321, 322, 330, 350, 351, 370, 371,
	340, 0, 0, 135, 0, 0, 0, 0, 0, 0,
	0, 266, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 0, 0, 222, 0, 0, 182, 171,
	230, 228, 0, 0, 0, 273, 339, 0, 0, 0,
	0, 225, 0, 0, 0, 327, 250, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 732, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 360, 277, 294, 315, 0, 285,
	0, 1129, 1128, 1138, 1139, 1131, 1132, 1133, 1134, 1135,
	1136, 1137, 1130, 0, 0, 1140, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	148, 0, 0, 0, 213, 0, 0, 0, 0, 287,
	0, 334, 201, 223, 153, 130, 146, 164, 200, 262,
	0, 309, 0, 0, 0, 0, 0, 172, 0, 301,
	270, 359, 0, 0, 300, 226, 349, 0, 0, 358,
	0, 0, 368, 373, 0, 0, 0, 324, 185, 180,
	184, 0, 137, 0, 284, 177, 218, 0, 0, 0,
	168, 0, 0, 0, 323, 346, 134, 248, 347, 372,
	155, 341, 249, 255, 165, 167, 166, 147, 318, 345,
	160, 170, 328, 305, 335, 176, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 364, 0, 312, 311, 0,
	208, 0, 0, 0, 293, 0, 214, 136, 337, 376,
	154, 220, 342, 0, 195, 261, 174, 271, 272, 192,
	132, 289, 242, 243, 241, 244, 199, 0, 0, 0,
	291, 314, 344, 156, 331, 0, 0, 0, 0, 303,
	0, 0, 0, 233, 188, 191, 202, 209, 0, 298,
	332, 365, 0, 149, 138, 338, 357, 161, 313, 316,
	374, 299, 141, 355, 333, 246, 215, 216, 139, 0,
	140, 296, 181, 198, 175, 265, 0, 197, 286, 352,
	353, 173, 377, 150, 367, 143, 151, 366, 258, 0,
	257, 369, 348, 356, 247, 235, 0, 142, 354, 245,
	234, 221, 190, 204, 282, 229, 283, 205, 253, 252,
	254, 231, 236, 0, 0, 0, 329, 362, 378, 336,
	158, 0, 317, 343, 0, 290, 159, 196, 189, 281,
	256, 152, 207, 326, 219, 227, 295, 375, 269, 302,
	162, 361, 325, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 0, 133, 144, 224, 0, 292, 194, 363, 0,
	179, 0, 0, 0, 0, 131, 145, 157, 163, 178,
	187, 193, 203, 206, 210, 211, 212, 217, 232, 237,
	238, 239, 240, 259, 260, 263, 264, 267, 268, 274,
	275, 276, 279, 280, 288, 0, 297, 304, 306, 307,
	308, 310, 319, 320, 321, 322, 330, 350, 351, 370,
	371, 36, 340, 0, 135, 0, 0, 0, 0, 0,
	0, 0, 0, 266, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 222, 0, 0,
	182, 171, 230, 228, 0, 0, 0, 273, 339, 0,
	0, 0, 1630, 225, 0, 0, 0, 327, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 81, 0, 0, 0, 1247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 360, 277, 294, 315,
	0, 285, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 148, 0, 0, 0, 213, 0, 0, 0,
	0, 287, 0, 334, 201, 223, 153, 130, 146, 164,
	200, 262, 0, 309, 0, 0, 0, 0, 0, 172,
	0, 301, 270, 359, 0, 0, 300, 226, 349, 0,
	0, 358, 0, 0, 368, 373, 0, 0, 0, 324,
	185, 180, 184, 0, 137, 0, 284, 177, 218, 0,
	0, 0, 168, 0, 0, 0, 323, 346, 134, 248,
	347, 372, 155, 341, 249, 255, 165, 167, 166, 147,
	318, 345, 160, 170, 328, 305, 335, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 364, 0, 312,
	311, 0, 208, 0, 0, 0, 293, 0, 214, 136,
	337, 376, 154, 220, 342, 0, 195, 261, 174, 271,
	272, 192, 132, 289, 242, 243, 241, 244, 199, 0,
	0, 0, 291, 314, 344, 156, 331, 0, 0, 0,
	0, 303, 0, 0, 0, 233, 188, 191, 202, 209,
	0, 298, 332, 365, 0, 149, 138, 338, 357, 161,
	313, 316, 374, 299, 141, 355, 333, 246, 215, 216,
	139, 0, 140, 296, 181, 198, 175, 265, 0, 197,
	286, 352, 353, 173, 377, 150, 367, 143, 151, 366,
	258, 0, 257, 369, 348, 356, 247, 235, 0, 142,
	354, 245, 234, 221, 190, 204, 282, 229, 283, 205,
	253, 252, 254, 231, 236, 0, 0, 0, 329, 362,
	378, 336, 158, 0, 317, 343, 0, 290, 159, 196,
	189, 281, 256, 152, 207, 326, 219, 227, 295, 375,
	269, 302, 162, 361, 325, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1244, 278, 0, 133, 144, 224, 79, 292, 194,
	363, 0, 179, 0, 0, 0, 0, 131, 145, 157,
	163, 178, 187, 193, 203, 206, 210, 211, 212, 217,
	232, 237, 238, 239, 240, 259, 260, 263, 264, 267,
	268, 274, 275, 276, 279, 280, 288, 0, 297, 304,
	306, 307, 308, 310, 319, 320, 321, 322, 330, 350,
	351, 370, 371, 340, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 2890, 0, 0,
	0, 0, 0, 183, 2888, 0, 0, 0, 222, 0,
	0, 182, 171, 230, 228, 0, 0, 0, 273, 339,
	0, 0, 0, 0, 225, 0, 0, 0, 327, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 457, 0,
	456, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 277, 294,
	315, 0, 285, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 148, 0, 0, 0, 213, 0, 0,
	0, 0, 287, 0, 334, 201, 223, 153, 130, 146,
	164, 200, 262, 0, 309, 0, 0, 0, 0, 0,
	172, 0, 301, 270, 359, 0, 0, 300, 226, 349,
	0, 0, 358, 0, 0, 368, 373, 0, 0, 0,
	324, 185, 180, 184, 0, 137, 0, 284, 177, 218,
	0, 0, 0, 168, 0, 0, 0, 323, 346, 134,
	248, 347, 372, 155, 341, 249, 255, 165, 167, 166,
	147, 318, 345, 160, 170, 328, 305, 335, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 364, 0,
	312, 311, 0, 208, 0, 2889, 0, 293, 0, 214,
	136, 337, 376, 154, 220, 342, 0, 195, 261, 174,
	271, 272, 192, 132, 289, 242, 243, 241, 244, 199,
	0, 0, 0, 291, 314, 344, 156, 331, 0, 0,
	0, 0, 303, 0, 0, 0, 233, 188, 191, 202,
	209, 0, 298, 332, 365, 0, 149, 138, 338, 357,
	161, 313, 316, 374, 299, 141, 355, 333, 246, 215,
	216, 139, 0, 140, 296, 181, 198, 175, 265, 0,
	197, 286, 352, 353, 173, 377, 150, 367, 143, 151,
	366, 258, 0, 257, 369, 348, 356, 247, 235, 0,
	142, 354, 245, 234, 221, 190, 204, 282, 229, 283,
	205, 253, 252, 254, 231, 236, 0, 0, 0, 329,
	362, 378, 336, 158, 0, 317, 343, 0, 290, 159,
	196, 189, 281, 256, 152, 207, 326, 219, 227, 295,
	375, 269, 302, 162, 361, 325, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 0, 133, 144, 224, 0, 292,
	194, 363, 0, 179, 0, 0, 0, 0, 131, 145,
	157, 163, 178, 187, 193, 203, 206, 210, 211, 212,
	217, 232, 237, 238, 239, 240, 259, 260, 263, 264,
	267, 268, 274, 275, 276, 279, 280, 288, 0, 297,
	304, 306, 307, 308, 310, 319, 320, 321, 322, 330,
	350, 351, 370, 371, 340, 0, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 266, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 222,
	0, 0, 182, 171, 230, 228, 0, 0, 0, 273,
	339, 0, 0, 0, 0, 225, 0, 0, 0, 327,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 732,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2062, 360, 277,
	294, 315, 0, 285, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 148, 0, 0, 0, 213, 0,
	0, 0, 0, 287, 0, 334, 201, 223, 153, 130,
	146, 164, 200, 262, 0, 309, 0, 0, 0, 0,
	0, 172, 0, 301, 270, 359, 0, 0, 300, 226,
	349, 0, 0, 358, 0, 0, 368, 373, 0, 0,
	0, 324, 185, 180, 184, 0, 137, 0, 284, 177,
	218, 2063, 2064, 0, 168, 0, 0, 0, 323, 346,
	134, 248, 347, 372, 155, 341, 249, 255, 165, 167,
	166, 147, 318, 345, 160, 170, 328, 305, 335, 176,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 364,
	0, 312, 311, 0, 208, 0, 0, 0, 293, 0,
	214, 136, 337, 376, 154, 220, 342, 0, 195, 261,
	174, 271, 272, 192, 132, 289, 242, 243, 241, 244,
	199, 0, 0, 0, 291, 314, 344, 156, 331, 0,
	0, 0, 0, 303, 0, 0, 0, 233, 188, 191,
	202, 209, 0, 298, 332, 365, 0, 149, 138, 338,
	357, 161, 313, 316, 374, 299, 141, 355, 333, 246,
	215, 216, 139, 0, 140, 296, 181, 198, 175, 265,
	0, 197, 286, 352, 353, 173, 377, 150, 367, 143,
	151, 366, 258, 0, 257, 369, 348, 356, 247, 235,
	0, 142, 354, 245, 234, 221, 190, 204, 282, 229,
	283, 205, 253, 252, 254, 231, 236, 0, 0, 0,
	329, 362, 378, 336, 158, 0, 317, 343, 0, 290,
	159, 196, 189, 281, 256, 152, 207, 326, 219, 227,
	295, 375, 269, 302, 162, 361, 325, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 0, 133, 144, 224, 0,
	292, 194, 363, 0, 179, 0, 0, 0, 0, 131,
	145, 157, 163, 178, 187, 193, 203, 206, 210, 211,
	212, 217, 232, 237, 238, 239, 240, 259, 260, 263,
	264, 267, 268, 274, 275, 276, 279, 280, 288, 0,
	297, 304, 306, 307, 308, 310, 319, 320, 321, 322,
	330, 350, 351, 370, 371, 340, 0, 0, 135, 0,
	0, 0, 0, 0, 0, 0, 266, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 0, 0,
	222, 0, 0, 182, 171, 230, 228, 0, 0, 0,
	273, 339, 0, 0, 0, 0, 225, 0, 0, 0,
	327, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 81, 0, 0, 0,
	1247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 360,
	277, 294, 315, 0, 285, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 148, 0, 0, 0, 213,
	0, 0, 0, 0, 287, 0, 334, 201, 223, 153,
	130, 146, 164, 200, 262, 0, 309, 0, 0, 0,
	0, 0, 172, 0, 301, 270, 359, 0, 0, 300,
	226, 349, 0, 0, 358, 0, 0, 368, 373, 0,
	0, 0, 324, 185, 180, 184, 0, 137, 0, 284,
	177, 218, 0, 0, 0, 168, 0, 0, 0, 323,
	346, 134, 248, 347, 372, 155, 341, 249, 255, 165,
	167, 166, 147, 318, 345, 160, 170, 328, 305, 335,
	176, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	364, 0, 312, 311, 0, 208, 0, 0, 0, 293,
	0, 214, 136, 337, 376, 154, 220, 342, 0, 195,
	261, 174, 271, 272, 192, 132, 289, 242, 243, 241,
	244, 199, 0, 0, 0, 291, 314, 344, 156, 331,
	0, 0, 0, 0, 303, 0, 0, 0, 233, 188,
	191, 202, 209, 0, 298, 332, 365, 0, 149, 138,
	338, 357, 161, 313, 316, 374, 299, 141, 355, 333,
	246, 215, 216, 139, 0, 140, 296, 181, 198, 175,
	265, 0, 197, 286, 352, 353, 173, 377, 150, 367,
	143, 151, 366, 258, 0, 257, 369, 348, 356, 247,
	235, 0, 142, 354, 245, 234, 221, 190, 204, 282,
	229, 283, 205, 253, 252, 254, 231, 236, 0, 0,
	0, 329, 362, 378, 336, 158, 0, 317, 343, 0,
	290, 159, 196, 189, 281, 256, 152, 207, 326, 219,
	227, 295, 375, 269, 302, 162, 361, 325, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1244, 278, 0, 133, 144, 224,
	0, 292, 194, 363, 0, 179, 0, 0, 0, 0,
	131, 145, 157, 163, 178, 187, 193, 203, 206, 210,
	211, 212, 217, 232, 237, 238, 239, 240, 259, 260,
	263, 264, 267, 268, 274, 275, 276, 279, 280, 288,
	0, 297, 304, 306, 307, 308, 310, 319, 320, 321,
	322, 330, 350, 351, 370, 371, 340, 0, 0, 135,
	0, 0, 0, 0, 0, 0, 0, 266, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 222, 0, 0, 182, 171, 230, 228, 0, 0,
	0, 273, 339, 0, 0, 0, 0, 225, 0, 0,
	0, 327, 250, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 457, 0, 456, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	360, 277, 294, 315, 0, 285, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 148, 0, 0, 0,
	213, 0, 0, 0, 0, 287, 0, 334, 201, 223,
	153, 130, 146, 164, 200, 262, 0, 309, 0, 0,
	0, 0, 0, 172, 0, 301, 270, 359, 0, 0,
	300, 226, 349, 0, 0, 358, 0, 0, 368, 373,
	0, 0, 0, 324, 185, 180, 184, 0, 137, 0,
	284, 177, 218, 0, 0, 0, 168, 0, 0, 0,
	323, 346, 134, 248, 347, 372, 155, 341, 249, 255,
	165, 167, 166, 147, 318, 345, 160, 170, 328, 305,
	335, 176, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 364, 0, 312, 311, 0, 208, 0, 0, 0,
	293, 0, 214, 136, 337, 376, 154, 220, 342, 0,
	195, 261, 174, 271, 272, 192, 132, 289, 242, 243,
	241, 244, 199, 0, 0, 0, 291, 314, 344, 156,
	331, 0, 0, 0, 0, 303, 0, 0, 0, 233,
	188, 191, 202, 209, 0, 298, 332, 365, 0, 149,
	138, 338, 357, 161, 313, 316, 374, 299, 141, 355,
	333, 246, 215, 216, 139, 0, 140, 296, 181, 198,
	175, 265, 0, 197, 286, 352, 353, 173, 377, 150,
	367, 143, 151, 366, 258, 0, 257, 369, 348, 356,
	247, 235, 0, 142, 354, 245, 234, 221, 190, 204,
	282, 229, 283, 205, 253, 252, 254, 231, 236, 0,
	0, 0, 329, 362, 378, 336, 158, 0, 317, 343,
	0, 290, 159, 196, 189, 281, 256, 152, 207, 326,
	219, 227, 295, 375, 269, 302, 162, 361, 325, 186,
	0, 0, 0, 1408, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 0, 133, 144,
	224, 0, 292, 194, 363, 0, 179, 0, 0, 0,
	0, 131, 145, 157, 163, 178, 187, 193, 203, 206,
	210, 211, 212, 217, 232, 237, 238, 239, 240, 259,
	260, 263, 264, 267, 268, 274, 275, 276, 279, 280,
	288, 0, 297, 304, 306, 307, 308, 310, 319, 320,
	321, 322, 330, 350, 351, 370, 371, 340, 0, 0,
	135, 0, 0, 0, 0, 0, 0, 0, 266, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 1268, 0,
	0, 0, 222, 0, 0, 182, 171, 230, 228, 0,
	0, 0, 273, 339, 0, 0, 0, 0, 225, 0,
	0, 0, 327, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 732, 0, 1267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 360, 277, 294, 315, 0, 285, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 148, 0, 0,
	0, 213, 0, 0, 0, 0, 287, 0, 334, 201,
	223, 153, 130, 146, 164, 200, 262, 0, 309, 0,
	0, 0, 0, 0, 172, 0, 301, 270, 359, 0,
	0, 300, 226, 349, 0, 0, 358, 0, 0, 368,
	373, 0, 0, 0, 324, 185, 180, 184, 0, 137,
	0, 284, 177, 218, 0, 0, 0, 168, 0, 0,
	0, 323, 346, 134, 248, 347, 372, 155, 341, 249,
	255, 165, 167, 166, 147, 318, 345, 160, 170, 328,
	305, 335, 176, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 364, 0, 312, 311, 0, 208, 0, 0,
	0, 293, 0, 214, 136, 337, 376, 154, 220, 342,
	0, 195, 261, 174, 271, 272, 192, 132, 289, 242,
	243, 241, 244, 199, 0, 0, 0, 291, 314, 344,
	156, 331, 0, 0, 0, 0, 303, 0, 0, 0,
	233, 188, 191, 202, 209, 0, 298, 332, 365, 0,
	149, 138, 338, 357, 161, 313, 316, 374, 299, 141,
	355, 333, 246, 215, 216, 139, 0, 140, 296, 181,
	198, 175, 265, 0, 197, 286, 352, 353, 173, 377,
	150, 367, 143, 151, 366, 258, 0, 257, 369, 348,
	356, 247, 235, 0, 142, 354, 245, 234, 221, 190,
	204, 282, 229, 283, 205, 253, 252, 254, 231, 236,
	0, 0, 0, 329, 362, 378, 336, 158, 0, 317,
	343, 0, 290, 159, 196, 189, 281, 256, 152, 207,
	326, 219, 227, 295, 375, 269, 302, 162, 361, 325,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 0, 133,
	144, 224, 0, 292, 194, 363, 0, 179, 0, 0,
	0, 0, 131, 145, 157, 163, 178, 187, 193, 203,
	206, 210, 211, 212, 217, 232, 237, 238, 239, 240,
	259, 260, 263, 264, 267, 268, 274, 275, 276, 279,
	280, 288, 0, 297, 304, 306, 307, 308, 310, 319,
	320, 321, 322, 330, 350, 351, 370, 371, 340, 0,
	0, 135, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 222, 0, 0, 182, 171, 230, 228,
	0, 0, 0, 273, 339, 0, 0, 0, 0, 225,
	0, 0, 0, 327, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 457, 0, 456, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 277, 294, 315, 0, 285, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 148, 0,
	0, 0, 213, 0, 0, 0, 0, 287, 0, 334,
	201, 223, 153, 130, 146, 164, 200, 262, 0, 309,
	0, 0, 0, 0, 0, 172, 0, 301, 270, 359,
	0, 0, 300, 226, 349, 0, 0, 358, 0, 0,
	368, 373, 0, 0, 0, 324, 185, 180, 184, 0,
	137, 0, 284, 177, 218, 0, 0, 0, 168, 0,
	0, 0, 323, 346, 134, 248, 347, 372, 155, 341,
	249, 255, 165, 167, 166, 147, 318, 345, 160, 170,
	328, 305, 335, 176, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 364, 0, 312, 311, 0, 208, 0,
	0, 0, 293, 0, 214, 136, 337, 376, 154, 220,
	342, 0, 195, 261, 174, 271, 272, 192, 132, 289,
	242, 243, 241, 244, 199, 0, 0, 0, 291, 314,
	344, 156, 331, 0, 0, 0, 0, 303, 0, 0,
	0, 233, 188, 191, 202, 209, 0, 298, 332, 365,
	0, 149, 138, 338, 357, 161, 313, 316, 374, 299,
	141, 355, 333, 246, 215, 216, 139, 0, 140, 296,
	181, 198, 175, 265, 0, 197, 286, 352, 353, 173,
	377, 150, 367, 143, 151, 366, 258, 0, 257, 369,
	348, 356, 247, 235, 0, 142, 354, 245, 234, 221,
	190, 204, 282, 229, 283, 205, 253, 252, 254, 231,
	236, 0, 0, 0, 329, 362, 378, 336, 158, 0,
	317, 343, 0, 290, 159, 196, 189, 281, 256, 152,
	207, 326, 219, 227, 295, 375, 269, 302, 162, 361,
	325, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 0,
	133, 144, 224, 0, 292, 194, 363, 0, 179, 0,
	0, 0, 0, 131, 145, 157, 163, 178, 187, 193,
	203, 206, 210, 211, 212, 217, 232, 237, 238, 239,
	240, 259, 260, 263, 264, 267, 268, 274, 275, 276,
	279, 280, 288, 0, 297, 304, 306, 307, 308, 310,
	319, 320, 321, 322, 330, 350, 351, 370, 371, 340,
	0, 0, 135, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 222, 0, 0, 182, 171, 230,
	228, 0, 0, 0, 273, 339, 0, 0, 0, 0,
	225, 0, 0, 0, 327, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 732, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 360, 277, 294, 315, 0, 285, 0,
	0, 0, 0, 0, 0, 0, 2333, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 148,
	0, 0, 0, 213, 0, 0, 0, 0, 287, 0,
	334, 201, 223, 153, 130, 146, 164, 200, 262, 0,
	309, 0, 0, 0, 0, 0, 172, 0, 301, 270,
	359, 0, 0, 300, 226, 349, 0, 0, 358, 0,
	0, 368, 373, 0, 0, 0, 324, 185, 180, 184,
	0, 137, 0, 284, 177, 218, 0, 0, 0, 168,
	0, 0, 0, 323, 346, 134, 248, 347, 372, 155,
	341, 249, 255, 165, 167, 166, 147, 318, 345, 160,
	170, 328, 305, 335, 176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 364, 0, 312, 311, 0, 208,
	0, 0, 0, 293, 0, 214, 136, 337, 376, 154,
	220, 342, 0, 195, 261, 174, 271, 272, 192, 132,
	289, 242, 243, 241, 244, 199, 0, 0, 0, 291,
	314, 344, 156, 331, 0, 0, 0, 0, 303, 0,
	0, 0, 233, 188, 191, 202, 209, 0, 298, 332,
	365, 0, 149, 138, 338, 357, 161, 313, 316, 374,
	299, 141, 355, 333, 246, 215, 216, 139, 0, 140,
	296, 181, 198, 175, 265, 0, 197, 286, 352, 353,
	173, 377, 150, 367, 143, 151, 366, 258, 0, 257,
	369, 348, 356, 247, 235, 0, 142, 354, 245, 234,
	221, 190, 204, 282, 229, 283, 205, 253, 252, 254,
	231, 236, 0, 0, 0, 329, 362, 378, 336, 158,
	0, 317, 343, 0, 290, 159, 196, 189, 281, 256,
	152, 207, 326, 219, 227, 295, 375, 269, 302, 162,
	361, 325, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	0, 133, 144, 224, 0, 292, 194, 363, 0, 179,
	0, 0, 0, 0, 131, 145, 157, 163, 178, 187,
	193, 203, 206, 210, 211, 212, 217, 232, 237, 238,
	239, 240, 259, 260, 263, 264, 267, 268, 274, 275,
	276, 279, 280, 288, 0, 297, 304, 306, 307, 308,
	310, 319, 320, 321, 322, 330, 350, 351, 370, 371,
	340, 0, 0, 135, 0, 0, 0, 0, 0, 0,
	0, 266, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 0, 0, 222, 0, 0, 182, 171,
	230, 228, 0, 0, 0, 273, 339, 0, 0, 0,
	0, 225, 0, 0, 0, 327, 250, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 81, 0, 0, 0, 732, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 360, 277, 294, 315, 0, 285,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	148, 0, 0, 0, 213, 0, 0, 0, 0, 287,
	0, 334, 201, 223, 153, 130, 146, 164, 200, 262,
	0, 309, 0, 0, 0, 0, 0, 172, 0, 301,
	270, 359, 0, 0, 300, 226, 349, 0, 0, 358,
	0, 0, 368, 373, 0, 0, 0, 324, 185, 180,
	184, 0, 137, 0, 284, 177, 218, 0, 0, 0,
	168, 0, 0, 0, 323, 346, 134, 248, 347, 372,
	155, 341, 249, 255, 165, 167, 166, 147, 318, 345,
	160, 170, 328, 305, 335, 176, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 364, 0, 312, 311, 0,
	208, 0, 0, 0, 293, 0, 214, 136, 337, 376,
	154, 220, 342, 0, 195, 261, 174, 271, 272, 192,
	132, 289, 242, 243, 241, 244, 199, 0, 0, 0,
	291, 314, 344, 156, 331, 0, 0, 0, 0, 303,
	0, 0, 0, 233, 188, 191, 202, 209, 0, 298,
	332, 365, 0, 149, 138, 338, 357, 161, 313, 316,
	374, 299, 141, 355, 333, 246, 215, 216, 139, 0,
	140, 296, 181, 198, 175, 265, 0, 197, 286, 352,
	353, 173, 377, 150, 367, 143, 151, 366, 258, 0,
	257, 369, 348, 356, 247, 235, 0, 142, 354, 245,
	234, 221, 190, 204, 282, 229, 283, 205, 253, 252,
	254, 231, 236, 0, 0, 0, 329, 362, 378, 336,
	158, 0, 317, 343, 0, 290, 159, 196, 189, 281,
	256, 152, 207, 326, 219, 227, 295, 375, 269, 302,
	162, 361, 325, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 0, 133, 144, 224, 0, 292, 194, 363, 0,
	179, 0, 0, 0, 0, 131, 145, 157, 163, 178,
	187, 193, 203, 206, 210, 211, 212, 217, 232, 237,
	238, 239, 240, 259, 260, 263, 264, 267, 268, 274,
	275, 276, 279, 280, 288, 0, 297, 304, 306, 307,
	308, 310, 319, 320, 321, 322, 330, 350, 351, 370,
	371, 340, 0, 0, 135, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 222, 0, 0, 182,
	171, 230, 228, 0, 0, 0, 273, 339, 0, 0,
	0, 0, 225, 0, 0, 0, 327, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 81, 0, 0, 0, 1247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 360, 277, 294, 315, 0,
	285, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 148, 0, 0, 0, 213, 0, 0, 0, 0,
	287, 0, 334, 201, 223, 153, 130, 146, 164, 200,
	262, 0, 309, 0, 0, 0, 0, 0, 172, 0,
	301, 270, 359, 0, 0, 300, 226, 349, 0, 0,
	358, 0, 0, 368, 373, 0, 0, 0, 324, 185,
	180, 184, 0, 137, 0, 284, 177, 218, 0, 0,
	0, 168, 0, 0, 0, 323, 346, 134, 248, 347,
	372, 155, 341, 249, 255, 165, 167, 166, 147, 318,
	345, 160, 170, 328, 305, 335, 176, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 364, 0, 312, 311,
	0, 208, 0, 0, 0, 293, 0, 214, 136, 337,
	376, 154, 220, 342, 0, 195, 261, 174, 271, 272,
	192, 132, 289, 242, 243, 241, 244, 199, 0, 0,
	0, 291, 314, 344, 156, 331, 0, 0, 0, 0,
	303, 0, 0, 0, 233, 188, 191, 202, 209, 0,
	298, 332, 365, 0, 149, 138, 338, 357, 161, 313,
	316, 374, 299, 141, 355, 333, 246, 215, 216, 139,
	0, 140, 296, 181, 198, 175, 265, 0, 197, 286,
	352, 353, 173, 377, 150, 367, 143, 151, 366, 258,
	0, 257, 369, 348, 356, 247, 235, 0, 142, 354,
	245, 234, 221, 190, 204, 282, 229, 283, 205, 253,
	252, 254, 231, 236, 0, 0, 0, 329, 362, 378,
	336, 158, 0, 317, 343, 0, 290, 159, 196, 189,
	281, 256, 152, 207, 326, 219, 227, 295, 375, 269,
	302, 162, 361, 325, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 0, 133, 144, 224, 0, 292, 194, 363,
	0, 179, 0, 0, 0, 0, 131, 145, 157, 163,
	178, 187, 193, 203, 206, 210, 211, 212, 217, 232,
	237, 238, 239, 240, 259, 260, 263, 264, 267, 268,
	274, 275, 276, 279, 280, 288, 0, 297, 304, 306,
	307, 308, 310, 319, 320, 321, 322, 330, 350, 351,
	370, 371, 340, 0, 0, 135, 0, 0, 0, 0,
	0, 0, 0, 266, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 222, 0, 1835,
	1836, 171, 230, 228, 0, 0, 0, 273, 339, 0,
	0, 0, 0, 225, 0, 0, 0, 327, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 732, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 360, 277, 294, 315,
	0, 285, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 148, 0, 0, 0, 213, 0, 0, 0,
	0, 287, 0, 334, 201, 223, 153, 130, 146, 164,
	200, 262, 0, 309, 0, 0, 0, 0, 0, 172,
	0, 301, 270, 359, 0, 0, 300, 226, 349, 0,
	0, 358, 0, 0, 368, 373, 0, 0, 0, 324,
	185, 180, 184, 0, 137, 0, 284, 177, 218, 0,
	0, 0, 168, 0, 0, 0, 323, 346, 134, 248,
	347, 372, 155, 341, 249, 255, 165, 167, 166, 147,
	318, 345, 160, 170, 328, 305, 335, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 364, 0, 312,
	311, 0, 208, 0, 0, 0, 293, 0, 214, 136,
	337, 376, 154, 220, 342, 0, 195, 261, 174, 271,
	272, 192, 132, 289, 242, 243, 241, 244, 199, 0,
	0, 0, 291, 314, 344, 156, 331, 0, 0, 0,
	0, 303, 0, 0, 0, 233, 188, 191, 202, 209,
	0, 298, 332, 365, 0, 149, 138, 338, 357, 161,
	313, 316, 374, 299, 141, 355, 333, 246, 215, 216,
	139, 0, 140, 296, 181, 198, 175, 265, 0, 197,
	286, 352, 353, 173, 377, 150, 367, 143, 151, 366,
	258, 0, 257, 369, 348, 356, 247, 235, 0, 142,
	354, 245, 234, 221, 190, 204, 282, 229, 283, 205,
	253, 252, 254, 231, 236, 0, 0, 0, 329, 362,
	378, 336, 158, 0, 317, 343, 0, 290, 159, 196,
	189, 281, 256, 152, 207, 326, 219, 227, 295, 375,
	269, 302, 162, 361, 325, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 0, 133, 144, 224, 0, 292, 194,
	363, 0, 179, 0, 0, 0, 0, 131, 145, 157,
	163, 178, 187, 193, 203, 206, 210, 211, 212, 217,
	232, 237, 238, 239, 240, 259, 260, 263, 264, 267,
	268, 274, 275, 276, 279, 280, 288, 0, 297, 304,
	306, 307, 308, 310, 319, 320, 321, 322, 330, 350,
	351, 370, 371, 340, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 222, 0,
	0, 182, 171, 230, 228, 0, 0, 0, 273, 339,
	0, 0, 0, 0, 225, 0, 0, 0, 327, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 732, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 277, 294,
	315, 0, 285, 0, 0, 0, 0, 0, 0, 0,
	1798, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 148, 0, 0, 0, 213, 0, 0,
	0, 0, 287, 0, 334, 201, 223, 153, 130, 146,
	164, 200, 262, 0, 309, 0, 0, 0, 0, 0,
	172, 0, 301, 270, 359, 0, 0, 300, 226, 349,
	0, 0, 358, 0, 0, 368, 373, 0, 0, 0,
	324, 185, 180, 184, 0, 137, 0, 284, 177, 218,
	0, 0, 0, 168, 0, 0, 0, 323, 346, 134,
	248, 347, 372, 155, 341, 249, 255, 165, 167, 166,
	147, 318, 345, 160, 170, 328, 305, 335, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 364, 0,
	312, 311, 0, 208, 0, 0, 0, 293, 0, 214,
	136, 337, 376, 154, 220, 342, 0, 195, 261, 174,
	271, 272, 192, 132, 289, 242, 243, 241, 244, 199,
	0, 0, 0, 291, 314, 344, 156, 331, 0, 0,
	0, 0, 303, 0, 0, 0, 233, 188, 191, 202,
	209, 0, 298, 332, 365, 0, 149, 138, 338, 357,
	161, 313, 316, 374, 299, 141, 355, 333, 246, 215,
	216, 139, 0, 140, 296, 181, 198, 175, 265, 0,
	197, 286, 352, 353, 173, 377, 150, 367, 143, 151,
	366, 258, 0, 257, 369, 348, 356, 247, 235, 0,
	142, 354, 245, 234, 221, 190, 204, 282, 229, 283,
	205, 253, 252, 254, 231, 236, 0, 0, 0, 329,
	362, 378, 336, 158, 0, 317, 343, 0, 290, 159,
	196, 189, 281, 256, 152, 207, 326, 219, 227, 295,
	375, 269, 302, 162, 361, 325, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 0, 133, 144, 224, 0, 292,
	194, 363, 0, 179, 0, 0, 0, 0, 131, 145,
	157, 163, 178, 187, 193, 203, 206, 210, 211, 212,
	217, 232, 237, 238, 239, 240, 259, 260, 263, 264,
	267, 268, 274, 275, 276, 279, 280, 288, 0, 297,
	304, 306, 307, 308, 310, 319, 320, 321, 322, 330,
	350, 351, 370, 371, 340, 0, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 266, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 222,
	0, 0, 182, 171, 230, 228, 0, 0, 0, 273,
	339, 0, 0, 0, 0, 225, 0, 0, 0, 327,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 128,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 360, 277,
	294, 315, 0, 285, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 148, 0, 0, 0, 213, 0,
	0, 0, 0, 287, 0, 334, 201, 223, 153, 130,
	146, 164, 200, 262, 0, 309, 0, 0, 0, 0,
	0, 172, 0, 301, 270, 359, 0, 0, 300, 226,
	349, 0, 0, 358, 0, 0, 368, 373, 0, 0,
	0, 324, 185, 180, 184, 0, 137, 0, 284, 177,
	218, 0, 0, 0, 168, 0, 0, 0, 323, 346,
	134, 248, 347, 372, 155, 341, 249, 255, 165, 167,
	166, 147, 318, 345, 160, 170, 328, 305, 335, 176,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 364,
	0, 312, 311, 0, 208, 0, 0, 0, 293, 0,
	214, 136, 337, 376, 154, 220, 342, 0, 195, 261,
	174, 271, 272, 192, 132, 289, 242, 243, 241, 244,
	199, 0, 0, 0, 291, 314, 344, 156, 331, 0,
	0, 0, 0, 303, 0, 0, 0, 233, 188, 191,
	202, 209, 0, 298, 332, 365, 0, 149, 138, 338,
	357, 161, 313, 316, 374, 299, 141, 355, 333, 246,
	215, 216, 139, 0, 140, 296, 181, 198, 175, 265,
	0, 197, 286, 352, 353, 173, 377, 150, 367, 143,
	151, 366, 258, 0, 257, 369, 348, 356, 247, 235,
	0, 142, 354, 245, 234, 221, 190, 204, 282, 229,
	283, 205, 253, 252, 254, 231, 236, 0, 0, 0,
	329, 362, 378, 336, 158, 0, 317, 343, 0, 290,
	159, 196, 189, 281, 256, 152, 207, 326, 219, 227,
	295, 375, 269, 302, 162, 361, 325, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 0, 133, 144, 224, 0,
	292, 194, 363, 0, 179, 0, 0, 0, 0, 131,
	145, 157, 163, 178, 187, 193, 203, 206, 210, 211,
	212, 217, 232, 237, 238, 239, 240, 259, 260, 263,
	264, 267, 268, 274, 275, 276, 279, 280, 288, 0,
	297, 304, 306, 307, 308, 310, 319, 320, 321, 322,
	330, 350, 351, 370, 371, 340, 0, 0, 135, 695,
	0, 0, 0, 0, 0, 0, 266, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 0, 0,
	222, 0, 0, 182, 171, 230, 228, 0, 0, 0,
	273, 339, 0, 0, 0, 0, 225, 0, 0, 0,
	327, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	128, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 360,
	277, 294, 315, 0, 285, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 148, 0, 0, 0, 213,
	0, 0, 0, 0, 287, 0, 334, 201, 223, 153,
	130, 146, 164, 200, 262, 0, 309, 0, 0, 0,
	0, 0, 172, 0, 301, 270, 359, 0, 0, 300,
	226, 349, 0, 0, 358, 0, 0, 368, 373, 0,
	0, 0, 324, 185, 180, 184, 0, 137, 0, 284,
	177, 218, 0, 0, 0, 168, 0, 0, 0, 323,
	346, 134, 248, 347, 372, 155, 341, 249, 255, 165,
	167, 166, 147, 318, 345, 160, 170, 328, 305, 335,
	176, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	364, 0, 312, 311, 0, 208, 0, 0, 0, 293,
	0, 214, 136, 337, 376, 154, 220, 342, 0, 195,
	261, 174, 271, 272, 192, 132, 289, 242, 243, 241,
	244, 199, 0, 0, 0, 291, 314, 344, 156, 331,
	0, 0, 0, 0, 303, 0, 0, 0, 233, 188,
	191, 202, 209, 0, 298, 332, 365, 0, 149, 138,
	338, 357, 161, 313, 316, 374, 299, 141, 355, 333,
	246, 215, 216, 139, 0, 140, 296, 181, 198, 175,
	265, 0, 197, 286, 352, 353, 173, 377, 150, 367,
	143, 151, 366, 258, 0, 257, 369, 348, 356, 247,
	235, 0, 142, 354, 245, 234, 221, 190, 204, 282,
	229, 283, 205, 253, 252, 254, 231, 236, 0, 0,
	0, 329, 362, 378, 336, 158, 0, 317, 343, 0,
	290, 159, 196, 189, 281, 256, 152, 207, 326, 219,
	227, 295, 375, 269, 302, 162, 361, 325, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 0, 133, 144, 224,
	0, 292, 194, 363, 0, 179, 0, 0, 0, 0,
	131, 145, 157, 163, 178, 187, 193, 203, 206, 210,
	211, 212, 217, 232, 237, 238, 239, 240, 259, 260,
	263, 264, 267, 268, 274, 275, 276, 279, 280, 288,
	0, 297, 304, 306, 307, 308, 310, 319, 320, 321,
	322, 330, 350, 351, 370, 371, 340, 0, 0, 135,
	0, 0, 0, 0, 0, 0, 0, 266, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 222, 0, 0, 182, 171, 230, 228, 0, 0,
	0, 273, 339, 0, 0, 0, 0, 225, 0, 0,
	0, 327, 250, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 128, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	360, 277, 294, 315, 0, 285, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 148, 0, 125, 0,
	213, 0, 0, 0, 0, 287, 0, 334, 201, 223,
	153, 130, 146, 164, 200, 262, 0, 309, 0, 0,
	0, 0, 0, 172, 0, 301, 270, 359, 0, 0,
	300, 226, 349, 0, 0, 358, 0, 0, 368, 373,
	0, 0, 0, 324, 185, 180, 184, 0, 137, 0,
	284, 177, 218, 0, 0, 0, 168, 0, 0, 0,
	323, 346, 134, 248, 347, 372, 155, 341, 249, 255,
	165, 167, 166, 147, 318, 345, 160, 170, 328, 305,
	335, 176, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 364, 0, 312, 311, 0, 208, 0, 0, 0,
	293, 0, 214, 136, 337, 376, 154, 220, 342, 0,
	195, 261, 174, 271, 272, 192, 132, 289, 242, 243,
	241, 244, 199, 0, 0, 0, 291, 314, 344, 156,
	331, 0, 0, 0, 0, 303, 0, 0, 0, 233,
	188, 191, 202, 209, 0, 298, 332, 365, 0, 149,
	138, 338, 357, 161, 313, 316, 374, 299, 141, 355,
	333, 246, 215, 216, 139, 0, 140, 296, 181, 198,
	175, 265, 0, 197, 286, 352, 353, 173, 377, 150,
	367, 143, 151, 366, 258, 0, 257, 369, 348, 356,
	247, 235, 0, 142, 354, 245, 234, 221, 190, 204,
	282, 229, 283, 205, 253, 252, 254, 231, 236, 0,
	0, 0, 329, 362, 378, 336, 158, 0, 317, 343,
	0, 290, 159, 196, 189, 281, 256, 152, 207, 326,
	219, 227, 295, 375, 269, 302, 162, 361, 325, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 0, 133, 144,
	224, 0, 292, 194, 363, 0, 179, 0, 0, 0,
	0, 131, 145, 157, 163, 178, 187, 193, 203, 206,
	210, 211, 212, 217, 232, 237, 238, 239, 240, 259,
	260, 263, 264, 267, 268, 274, 275, 276, 279, 280,
	288, 0, 297, 304, 306, 307, 308, 310, 319, 320,
	321, 322, 330, 350, 351, 370, 371, 340, 0, 0,
	135, 0, 0, 0, 0, 0, 0, 0, 266, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 0, 0,
	0, 0, 222, 0, 0, 182, 171, 230, 228, 0,
	0, 0, 273, 339, 0, 0, 0, 0, 225, 0,
	0, 0, 327, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 732, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 360, 277, 294, 315, 0, 285, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 148, 0, 0,
	0, 213, 0, 0, 0, 0, 287, 0, 334, 201,
	223, 153, 130, 146, 164, 200, 262, 0, 309, 0,
	0, 0, 0, 0, 172, 0, 301, 270, 359, 0,
	0, 300, 226, 349, 0, 0, 358, 0, 0, 368,
	373, 0, 0, 0, 324, 185, 180, 184, 0, 137,
	0, 284, 177, 218, 0, 0, 0, 168, 0, 0,
	0, 323, 346, 134, 248, 347, 372, 155, 341, 249,
	255, 165, 167, 166, 147, 318, 345, 160, 170, 328,
	305, 335, 176, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 364, 0, 312, 311, 0, 208, 0, 0,
	0, 293, 0, 214, 136, 337, 376, 154, 220, 342,
	0, 195, 261, 174, 271, 272, 192, 132, 289, 242,
	243, 241, 244, 199, 0, 0, 0, 291, 314, 344,
	156, 331, 0, 0, 0, 0, 303, 0, 0, 0,
	233, 188, 191, 202, 209, 0, 298, 332, 365, 0,
	149, 138, 338, 357, 161, 313, 316, 374, 299, 141,
	355, 333, 246, 215, 216, 139, 0, 140, 296, 181,
	198, 175, 265, 0, 197, 286, 352, 353, 173, 377,
	150, 367, 143, 151, 366, 258, 0, 257, 369, 348,
	356, 247, 235, 0, 142, 354, 245, 234, 221, 190,
	204, 282, 229, 283, 205, 253, 252, 254, 231, 236,
	0, 0, 0, 329, 362, 378, 336, 158, 0, 317,
	343, 0, 290, 159, 196, 189, 281, 256, 152, 207,
	326, 219, 227, 295, 375, 269, 302, 162, 361, 325,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 0, 133,
	144, 224, 0, 292, 194, 363, 0, 179, 0, 0,
	0, 0, 131, 145, 157, 163, 178, 187, 193, 203,
	206, 210, 211, 212, 217, 232, 237, 238, 239, 240,
	259, 260, 263, 264, 267, 268, 274, 275, 276, 279,
	280, 288, 0, 297, 304, 306, 307, 308, 310, 319,
	320, 321, 322, 330, 350, 351, 370, 371, 340, 0,
	0, 135, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 222, 0, 0, 182, 171, 230, 228,
	0, 0, 0, 273, 339, 0, 0, 0, 0, 225,
	0, 0, 0, 327, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 128, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 277, 294, 315, 0, 285, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 148, 0,
	0, 0, 213, 0, 0, 0, 0, 287, 0, 334,
	201, 223, 153, 130, 146, 164, 200, 262, 0, 309,
	0, 0, 0, 0, 0, 172, 0, 301, 270, 359,
	0, 0, 300, 226, 349, 0, 0, 358, 0, 0,
	368, 373, 0, 0, 0, 324, 185, 180, 184, 0,
	137, 0, 284, 177, 218, 0, 0, 0, 168, 0,
	0, 0, 323, 346, 134, 248, 347, 372, 155, 341,
	249, 255, 165, 167, 166, 147, 318, 345, 160, 170,
	328, 305, 335, 176, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 364, 0, 312, 311, 0, 208, 0,
	0, 0, 293, 0, 214, 136, 337, 376, 154, 220,
	342, 0, 195, 261, 174, 271, 272, 192, 132, 289,
	242, 243, 241, 244, 199, 0, 0, 0, 291, 314,
	344, 156, 331, 0, 0, 0, 0, 303, 0, 0,
	0, 233, 188, 191, 202, 209, 0, 298, 332, 365,
	0, 149, 138, 338, 357, 161, 313, 316, 374, 299,
	141, 355, 333, 246, 215, 216, 139, 0, 140, 296,
	181, 198, 175, 265, 0, 197, 286, 352, 353, 173,
	377, 150, 367, 143, 151, 366, 258, 0, 257, 369,
	348, 356, 247, 235, 0, 142, 354, 245, 234, 221,
	190, 204, 282, 229, 283, 205, 253, 252, 254, 231,
	236, 0, 0, 0, 329, 362, 378, 336, 158, 0,
	317, 343, 0, 290, 159, 196, 189, 281, 256, 152,
	207, 326, 219, 227, 295, 375, 269, 302, 162, 361,
	325, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 0,
	133, 144, 224, 0, 292, 194, 363, 0, 179, 0,
	0, 0, 0, 131, 145, 157, 163, 178, 187, 193,
	203, 206, 210, 211, 212, 217, 232, 237, 238, 239,
	240, 259, 260, 263, 264, 267, 268, 274, 275, 276,
	279, 280, 288, 0, 297, 304, 306, 307, 308, 310,
	319, 320, 321, 322, 330, 350, 351, 370, 371, 340,
	0, 0, 135, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 222, 0, 0, 182, 171, 230,
	228, 0, 0, 0, 273, 339, 0, 0, 0, 0,
	225, 0, 0, 0, 327, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 559, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 360, 277, 294, 315, 0, 285, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 148,
	0, 0, 0, 213, 0, 0, 0, 0, 287, 0,
	334, 201, 223, 153, 130, 146, 164, 200, 262, 0,
	309, 0, 0, 0, 0, 0, 172, 0, 301, 270,
	359, 0, 0, 300, 226, 349, 0, 0, 358, 0,
	0, 368, 373, 0, 0, 0, 324, 185, 180, 184,
	0, 137, 0, 284, 177, 218, 0, 0, 0, 168,
	0, 0, 0, 323, 346, 134, 248, 347, 372, 155,
	341, 249, 255, 165, 167, 166, 147, 318, 345, 160,
	170, 328, 305, 335, 176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 364, 0, 312, 311, 0, 208,
	0, 0, 0, 293, 0, 214, 136, 337, 376, 154,
	220, 342, 0, 195, 261, 174, 271, 272, 192, 132,
	289, 242, 243, 241, 244, 199, 0, 0, 0, 291,
	314, 344, 156, 331, 0, 0, 0, 0, 303, 0,
	0, 0, 233, 188, 191, 202, 209, 0, 298, 332,
	365, 0, 149, 138, 338, 357, 161, 313, 316, 374,
	299, 141, 355, 333, 246, 215, 216, 139, 0, 140,
	296, 181, 198, 175, 265, 0, 197, 286, 352, 353,
	173, 377, 150, 367, 143, 151, 366, 258, 0, 257,
	369, 348, 356, 247, 235, 0, 142, 354, 245, 234,
	221, 190, 204, 282, 229, 283, 205, 253, 252, 254,
	231, 236, 0, 0, 0, 329, 362, 378, 336, 158,
	0, 317, 343, 0, 290, 159, 196, 189, 281, 256,
	152, 207, 326, 219, 227, 295, 375, 269, 302, 162,
	361, 325, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	0, 133, 144, 224, 0, 292, 194, 363, 0, 179,
	0, 0, 0, 0, 131, 145, 157, 163, 178, 187,
	193, 203, 206, 210, 211, 212, 217, 232, 237, 238,
	239, 240, 259, 260, 263, 264, 267, 268, 274, 275,
	276, 279, 280, 288, 0, 297, 304, 306, 307, 308,
	310, 319, 320, 321, 322, 330, 350, 351, 370, 371,
	340, 0, 0, 135, 0, 0, 0, 0, 0, 0,
	0, 266, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 0, 0, 222, 0, 0, 182, 171,
	230, 228, 0, 0, 0, 273, 339, 0, 0, 0,
	0, 225, 0, 0, 0, 327, 250, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 559, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 360, 277, 294, 315, 0, 285,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	148, 0, 0, 0, 213, 0, 0, 0, 0, 287,
	0, 334, 201, 223, 153, 130, 146, 164, 200, 262,
	0, 309, 0, 0, 0, 0, 0, 172, 0, 301,
	270, 359, 0, 0, 300, 226, 349, 0, 0, 358,
	0, 0, 368, 373, 0, 0, 0, 324, 185, 180,
	184, 0, 137, 0, 284, 177, 218, 0, 0, 0,
	168, 0, 0, 0, 323, 346, 134, 248, 347, 372,
	155, 341, 249, 255, 165, 167, 166, 147, 318, 345,
	160, 170, 328, 305, 335, 176, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 364, 0, 312, 311, 0,
	208, 0, 0, 0, 293, 0, 214, 136, 337, 376,
	154, 220, 342, 0, 195, 261, 174, 271, 272, 192,
	132, 289, 242, 243, 241, 244, 199, 0, 0, 0,
	291, 314, 344, 156, 331, 0, 0, 0, 0, 303,
	0, 0, 0, 233, 188, 191, 202, 209, 0, 298,
	332, 365, 0, 149, 138, 338, 357, 161, 313, 316,
	374, 299, 141, 355, 333, 246, 215, 216, 139, 0,
	140, 296, 181, 198, 175, 265, 0, 197, 286, 352,
	353, 173, 377, 150, 367, 143, 715, 366, 258, 0,
	257, 369, 348, 356, 247, 235, 0, 142, 354, 245,
	234, 221, 190, 204, 282, 229, 283, 205, 253, 252,
	254, 711, 236, 0, 0, 0, 329, 362, 378, 336,
	158, 0, 317, 343, 0, 290, 159, 196, 189, 281,
	716, 714, 705, 706, 219, 227, 295, 375, 269, 302,
	162, 361, 325, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 0, 133, 144, 224, 0, 292, 194, 363, 0,
	179, 0, 0, 0, 0, 131, 145, 157, 163, 178,
	187, 193, 203, 206, 210, 211, 212, 217, 232, 237,
	238, 239, 240, 259, 260, 263, 264, 267, 268, 274,
	275, 276, 712, 713, 288, 0, 297, 304, 306, 307,
	308, 310, 319, 320, 321, 322, 330, 350, 351, 370,
	371, 340, 0, 0, 135, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 222, 0, 0, 182,
	171, 230, 228, 0, 0, 0, 273, 339, 0, 0,
	0, 0, 225, 0, 0, 0, 327, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 559, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 360, 277, 294, 315, 0,
	285, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 148, 0, 0, 0, 213, 0, 0, 0, 0,
	287, 0, 334, 201, 223, 153, 130, 146, 164, 200,
	262, 0, 309, 0, 0, 0, 0, 0, 172, 0,
	301, 270, 359, 0, 0, 300, 226, 349, 0, 0,
	358, 0, 0, 368, 373, 0, 0, 0, 324, 185,
	180, 184, 0, 137, 0, 284, 177, 218, 0, 0,
	0, 168, 0, 0, 0, 323, 346, 134, 248, 347,
	372, 155, 341, 249, 255, 165, 167, 166, 147, 318,
	345, 160, 170, 328, 305, 335, 176, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 364, 0, 312, 311,
	0, 208, 0, 0, 0, 293, 0, 214, 136, 337,
	376, 154, 220, 342, 0, 195, 261, 174, 271, 272,
	192, 132, 289, 242, 243, 241, 244, 199, 0, 0,
	0, 291, 314, 344, 156, 331, 0, 0, 0, 0,
	303, 0, 0, 0, 233, 188, 191, 202, 209, 0,
	298, 332, 365, 0, 149, 138, 338, 1262, 161, 313,
	316, 374, 299, 141, 355, 333, 246, 215, 216, 139,
	0, 140, 296, 181, 198, 175, 265, 0, 197, 286,
	352, 353, 173, 377, 150, 367, 143, 151, 366, 258,
	0, 257, 369, 348, 356, 247, 235, 0, 142, 354,
	245, 234, 221, 190, 204, 282, 229, 283, 205, 253,
	252, 254, 231, 236, 0, 0, 0, 329, 362, 378,
	336, 158, 0, 317, 343, 0, 290, 159, 196, 189,
	281, 256, 152, 207, 326, 219, 227, 295, 375, 269,
	302, 162, 361, 325, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 0, 133, 144, 224, 0, 292, 194, 363,
	0, 179, 0, 0, 0, 0, 131, 145, 157, 163,
	178, 187, 193, 203, 206, 210, 211, 212, 217, 232,
	237, 238, 239, 240, 259, 260, 263, 264, 267, 268,
	274, 275, 276, 279, 280, 288, 0, 297, 304, 306,
	307, 308, 310, 319, 320, 321, 322, 330, 350, 351,
	370, 371, 340, 0, 0, 135, 0, 0, 0, 0,
	0, 0, 0, 266, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 222, 0, 0,
	182, 171, 230, 228, 0, 0, 0, 273, 339, 0,
	0, 0, 0, 225, 0, 0, 0, 327, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 559, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 360, 277, 294, 315,
	0, 285, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 148, 0, 0, 0, 213, 0, 0, 0,
	0, 287, 0, 334, 201, 223, 153, 130, 146, 164,
	200, 262, 0, 309, 0, 0, 0, 0, 0, 172,
	0, 301, 270, 359, 0, 0, 300, 226, 349, 0,
	0, 358, 0, 0, 368, 373, 0, 0, 0, 324,
	185, 180, 184, 0, 137, 0, 284, 177, 218, 0,
	0, 0, 168, 0, 0, 0, 323, 346, 134, 248,
	347, 372, 155, 341, 249, 255, 165, 167, 166, 147,
	318, 345, 160, 170, 328, 305, 335, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 364, 0, 312,
	311, 0, 208, 0, 0, 0, 293, 0, 214, 136,
	337, 376, 154, 220, 342, 0, 195, 261, 174, 271,
	272, 192, 132, 289, 242, 243, 241, 244, 199, 0,
	0, 0, 291, 314, 344, 156, 331, 0, 0, 0,
	0, 303, 0, 0, 0, 233, 188, 191, 202, 209,
	0, 298, 332, 365, 0, 149, 138, 338, 702, 161,
	313, 316, 374, 299, 141, 355, 333, 246, 215, 216,
	139, 0, 140, 296, 181, 198, 175, 265, 0, 197,
	286, 352, 353, 173, 377, 150, 367, 143, 715, 366,
	258, 0, 257, 369, 348, 356, 247, 235, 0, 142,
	354, 245, 234, 221, 190, 204, 282, 229, 283, 205,
	253, 252, 254, 711, 236, 0, 0, 0, 329, 362,
	378, 336, 158, 0, 317, 343, 0, 290, 159, 196,
	189, 281, 716, 714, 705, 706, 219, 227, 295, 375,
	269, 302, 162, 361, 325, 186, 0, 536, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2346, 0, 0, 0, 2348, 0,
	0, 0, 169, 0, 0, 0, 0, 541, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 492, 0, 0, 0, 0,
	0, 0, 278, 0, 133, 144, 224, 0, 292, 194,
	363, 0, 179, 500, 0, 0, 0, 131, 145, 157,
	163, 178, 187, 193, 203, 206, 210, 211, 212, 217,
	232, 237, 238, 239, 240, 259, 260, 263, 264, 267,
	268, 274, 275, 276, 712, 713, 288, 0, 297, 304,
	306, 307, 308, 310, 319, 320, 321, 322, 330, 350,
	351, 370, 371, 0, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 498, 481, 0, 0, 0,
	0, 0, 0, 0, 0, 502, 0, 0, 0, 0,
	0, 0, 0, 0, 527, 0, 0, 493, 0, 488,
	0, 0, 0, 0, 0, 0, 501, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 536, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 505, 503, 0, 0, 0, 506,
	0, 0, 1984, 0, 0, 514, 482, 0, 518, 0,
	0, 541, 0, 0, 0, 0, 480, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 492,
	496, 520, 0, 0, 0, 0, 0, 0, 494, 495,
	497, 524, 0, 526, 532, 0, 0, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 483, 0, 0,
	0, 0, 540, 0, 0, 0, 0, 504, 0, 0,
	0, 1278, 0, 0, 0, 0, 0, 0, 0, 498,
	481, 0, 0, 0, 0, 0, 0, 0, 0, 502,
	0, 0, 0, 0, 0, 0, 0, 0, 527, 0,
	0, 493, 0, 488, 0, 0, 0, 0, 533, 534,
	501, 0, 0, 0, 484, 485, 486, 487, 489, 507,
	508, 512, 513, 530, 529, 528, 531, 535, 538, 537,
	539, 490, 491, 499, 509, 510, 511, 515, 516, 525,
	521, 523, 0, 0, 0, 0, 0, 0, 505, 503,
	0, 0, 0, 506, 0, 0, 0, 0, 0, 514,
	482, 0, 518, 0, 0, 0, 0, 0, 0, 0,
	480, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 496, 520, 0, 0, 522, 0,
	0, 0, 494, 495, 497, 524, 0, 526, 532, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	517, 519, 0, 0, 0, 0, 536, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1336, 0, 0,
	0, 0, 0, 0, 0, 0, 541, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 492, 0, 0, 0, 0, 0,
	0, 483, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 504, 500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 533, 534, 0, 0, 0, 0, 484, 485,
	486, 487, 489, 507, 508, 512, 513, 530, 529, 528,
	531, 535, 538, 537, 539, 490, 491, 499, 509, 510,
	511, 515, 516, 525, 521, 523, 0, 540, 0, 0,
	0, 0, 0, 0, 0, 0, 1278, 0, 0, 0,
	0, 0, 0, 0, 498, 481, 0, 0, 0, 0,
	0, 0, 0, 0, 502, 0, 0, 0, 0, 0,
	0, 0, 0, 527, 0, 0, 493, 0, 488, 0,
	0, 0, 522, 0, 0, 501, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 517, 519, 0, 0, 0, 0,
	536, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 505, 503, 0, 0, 0, 506, 0,
	0, 2348, 0, 0, 514, 482, 0, 518, 0, 0,
	541, 0, 0, 0, 0, 480, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 492, 496,
	520, 0, 0, 0, 0, 0, 0, 494, 495, 497,
	524, 0, 526, 532, 0, 0, 500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 483, 0, 0, 0,
	0, 540, 0, 0, 0, 0, 504, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 498, 481,
	0, 0, 0, 0, 0, 0, 0, 0, 502, 0,
	0, 0, 0, 0, 0, 0, 0, 527, 0, 0,
	493, 0, 488, 0, 0, 0, 0, 533, 534, 501,
	0, 0, 0, 484, 485, 486, 487, 489, 507, 508,
	512, 513, 530, 529, 528, 531, 535, 538, 537, 539,
	490, 491, 499, 509, 510, 511, 515, 516, 525, 521,
	523, 0, 0, 0, 0, 0, 0, 505, 503, 0,
	0, 0, 506, 0, 0, 0, 0, 0, 514, 482,
	0, 518, 0, 0, 0, 0, 0, 0, 0, 480,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 496, 520, 0, 0, 522, 0, 0,
	0, 494, 495, 497, 524, 0, 526, 532, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 517,
	519, 0, 0, 0, 0, 536, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2357, 0, 0, 0,
	0, 0, 0, 0, 0, 541, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 492, 0, 0, 0, 0, 0, 0,
	483, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	504, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 533, 534, 0, 0, 0, 0, 484, 485, 486,
	487, 489, 507, 508, 512, 513, 530, 529, 528, 531,
	535, 538, 537, 539, 490, 491, 499, 509, 510, 511,
	515, 516, 525, 521, 523, 0, 540, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 498, 481, 0, 0, 0, 0, 0,
	0, 0, 0, 502, 0, 0, 0, 0, 0, 0,
	0, 0, 527, 0, 0, 493, 0, 488, 0, 0,
	0, 522, 0, 0, 501, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 517, 519, 0, 0, 0, 0, 536,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 505, 503, 0, 0, 0, 506, 0, 0,
	2355, 0, 0, 514, 482, 0, 518, 0, 0, 541,
	0, 0, 0, 0, 480, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 492, 496, 520,
	0, 0, 0, 0, 0, 0, 494, 495, 497, 524,
	0, 526, 532, 0, 0, 500, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 483, 0, 0, 0, 0,
	540, 0, 0, 0, 0, 504, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 498, 481, 0,
	0, 0, 0, 0, 0, 0, 0, 502, 0, 0,
	0, 0, 0, 0, 0, 0, 527, 0, 0, 493,
	0, 488, 0, 0, 0, 0, 533, 534, 501, 0,
	0, 0, 484, 485, 486, 487, 489, 507, 508, 512,
	513, 530, 529, 528, 531, 535, 538, 537, 539, 490,
	491, 499, 509, 510, 511, 515, 516, 525, 521, 523,
	0, 0, 0, 0, 0, 0, 505, 503, 0, 0,
	0, 506, 0, 0, 0, 0, 0, 514, 482, 0,
	518, 0, 0, 0, 0, 0, 0, 0, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 496, 520, 0, 0, 522, 0, 0, 0,
	494, 495, 497, 524, 0, 526, 532, 36, 0, 72,
	39, 40, 0, 0, 0, 0, 0, 0, 517, 519,
	0, 59, 0, 0, 0, 0, 0, 78, 0, 36,
	41, 72, 39, 40, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 59, 0, 0, 0, 0, 0, 78,
	0, 0, 41, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 483,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 504,
	0, 81, 0, 0, 0, 2774, 0, 0, 0, 0,
	3021, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2774, 0, 0,
	0, 0, 3017, 0, 0, 0, 0, 0, 0, 0,
	533, 534, 0, 0, 0, 0, 484, 485, 486, 487,
	489, 507, 508, 512, 513, 530, 529, 528, 531, 535,
	538, 537, 539, 490, 491, 499, 509, 510, 511, 515,
	516, 525, 521, 523, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 43, 74, 46, 45, 48, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2775, 0, 0, 0,
	0, 0, 0, 43, 74, 46, 45, 48, 0, 0,
	522, 0, 49, 77, 76, 0, 0, 0, 2775, 47,
	0, 0, 0, 0, 36, 0, 72, 39, 40, 0,
	0, 0, 517, 519, 49, 77, 76, 0, 59, 0,
	0, 47, 0, 0, 78, 0, 36, 41, 72, 39,
	40, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	59, 0, 0, 0, 0, 0, 78, 0, 0, 41,
	57, 58, 0, 2776, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 81, 66, 0, 67,
	0, 0, 57, 58, 0, 2776, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 66,
	0, 67, 2774, 0, 68, 0, 0, 3011, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2774, 0, 68, 0, 0, 2996,
	0, 0, 2777, 75, 0, 53, 54, 61, 0, 62,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2777, 75, 0, 53, 54, 61,
	0, 62, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 43, 74,
	46, 45, 48, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2775, 0, 0, 0, 0, 0, 0,
	43, 74, 46, 45, 48, 0, 0, 0, 0, 49,
	77, 76, 0, 0, 0, 2775, 47, 0, 0, 0,
	0, 0, 73, 0, 0, 36, 0, 72, 39, 40,
	0, 49, 77, 76, 0, 0, 0, 0, 47, 59,
	0, 0, 0, 0, 73, 78, 0, 0, 41, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 57, 58, 0,
	2776, 0, 0, 79, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 66, 0, 67, 81, 2983, 57,
	58, 0, 2776, 0, 0, 79, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 66, 0, 67, 0,
	0, 68, 0, 2774, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 68, 0, 0, 0, 0, 0, 2777,
	75, 0, 53, 54, 61, 0, 62, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2777, 75, 0, 53, 54, 61, 36, 62, 72,
	39, 40, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 59, 0, 0, 0, 0, 0, 78, 0, 0,
	41, 0, 0, 0, 0, 0, 0, 0, 0, 43,
	74, 46, 45, 48, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 36, 2775, 72, 39, 40, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 59, 0, 81,
	49, 77, 76, 78, 0, 0, 41, 47, 0, 73,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2774, 0, 0, 0, 0,
	2918, 73, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 57, 58,
	79, 2776, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2774, 0, 0, 0, 66, 0, 67, 0, 0,
	0, 0, 79, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 68, 0, 0, 0, 0, 0, 0, 0,
	0, 43, 74, 46, 45, 48, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2775, 0, 0, 0,
	2777, 75, 0, 53, 54, 61, 0, 62, 0, 0,
	0, 0, 49, 77, 76, 0, 0, 0, 0, 47,
	0, 0, 0, 0, 0, 0, 0, 43, 74, 46,
	45, 48, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2775, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 49, 77,
	76, 0, 0, 0, 0, 47, 0, 0, 0, 0,
	57, 58, 0, 2776, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 66, 0, 67,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	73, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 68, 0, 57, 58, 0, 2776,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 66, 0, 67, 0, 0, 0, 0,
	0, 0, 2777, 75, 0, 53, 54, 61, 0, 62,
	0, 79, 0, 0, 0, 0, 0, 0, 0, 0,
	68, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2777, 75,
	0, 53, 54, 61, 0, 62, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 73, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 73, 0,
	0, 0, 0, 79, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 79,
}

var yyPact = [...]int{
	4405, -1000, -353, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1898, -1000, -1000, -1000, -1000,
	-1000, -1000, 906, 296, -1000, 286, 214, 33759, 587, 3491,
	34841, -1000, -1000, -1000, 184, 403, 34841, 435, 468, 1284,
	1774, 1283, 24, -62, -63, 159, 25102, 24556, 15, -1000,
	1950, 1952, -1000, -1000, 514, 29, -1000, -1000, -1000, 21842,
	234, -1000, -1000, 1885, 1896, 1677, -1000, 14268, 514, 514,
	33218, 37005, -1000, 1948, 34841, 12643, -1000, 576, 552, -153,
	463, 463, 262, 463, 463, 585, -1000, 280, 875, -1000,
	-1000, -1000, -1000, 873, 34841, 29431, 464, 34300, 464, 464,
	464, 464, 464, 464, 464, 34841, -1000, 647, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 34841,
	1282, 1809, 904, 102, -1000, -1000, -1000, 915, -1000, 330,
	326, 328, 317, 103, 918, 1881, -1000, 1581, 1885, 1885,
	-1000, -1000, -1000, -1000, -1000, -1000, 724, 303, 549, 213,
	234, 872, 1849, 1808, 1807, 1137, 1806, 541, 1803, 1621,
	-43, -1000, 1281, 34841, -1000, -1000, 1109, 1100, 1649, 1481,
	640, 1648, -1000, -1000, 329, 469, 1614, 417, 1614, 1614,
	1614, 1614, 1614, -64, 1614, 1614, 1614, 75, 1614, 147,
	1614, 1614, 1614, 1614, 1614, 1293, -1000, -1000, -1000, 386,
	1480, 1473, 1647, 510, -1000, -1000, -1000, -1000, 1650, 1870,
	584, -1000, -119, 1564, 22924, -1000, 1581, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1190, -1000, 1804, 981, 17514, 1740, -1000, -1000,
	973, 1930, -1000, 20219, 646, -1000, 17514, 1435, 1581, -1000,
	-1000, 1581, -1000, -1000, -1000, 602, -1000, -1000, 19678, 19678,
	19678, 19678, 19678, 19678, 19678, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1581,
	1581, 1581, 1581, 1581, 1581, 1581, 1581, 1581, 1581, 1581,
	1581, 1581, 1581, 1581, 1581, 1581, 1581, 1581, 1581, 1581,
	1581, 1581, 1581, 1581, 1581, 1581, 1581, 1581, 1581, 1581,
	1581, -1000, -1000, 1581, -1000, 13727, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1581, 1581,
	1581, 1581, 1581, 1581, 1581, 1581, 1581, 1581, 17514, 1581,
	1581, 1581, 1581, 1581, 1581, 1581, 1581, 1581, 1581, 1581,
	1581, 1581, 1581, 32677, 27808, 34841, 1501, 1451, -1000, -1000,
	645, 1578, -91, 36464, -1000, -1000, -1000, -1000, 35382, 28890,
	867, -1000, -1000, -1000, -1000, 1797, -1000, -1000, 644, -1000,
	1898, -1000, -1000, 1438, 430, -1000, 4824, 37895, -1000, -1000,
	-1000, 1618, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 34300, 34841, 246, 1279, 905, 1277, 35382, 35382, -1000,
	249, 29431, 29431, 463, 264, 29431, 248, 1576, 530, 1574,
	524, 1208, 34841, 1834, 1640, 34841, 1275, 1273, 35382, 35382,
	29431, 29431, -1000, 12092, 1573, -1000, 904, -1000, 5183, 17514,
	463, 463, 34841, 34841, 34841, 34841, 34841, -1000, -1000, 904,
	904, 904, 904, 845, 1928, 845, -1000, 845, -1000, -1000,
	17514, -1000, 19678, 28349, 730, -1000, -1000, 34841, -1000, 1272,
	299, -1000, -1000, -1000, -1000, -1000, -1000, 1266, -1000, 1779,
	541, 541, -1000, 1198, 541, 1556, -1000, 865, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	541, -1000, 16973, -341, -1000, -1000, 1570, -1000, 312, -1000,
	-1000, 347, 347, 201, 29431, 29431, 29431, -1000, 1614, 34300,
	-1000, 1614, 1614, 1614, -66, 1614, 1614, -1000, -1000, 1614,
	-1000, -1000, -1000, -1000, -1000, 1614, -1000, -1000, -1000, 1614,
	1614, -1000, 1614, 1614, -1000, -1000, -1000, -1000, -1000, 29431,
	347, 180, 1565, 347, 29431, 29431, -1000, 64, 60, 50,
	48, -1000, -1000, -1000, -1000, 46, 44, -1000, -1000, 1677,
	-1000, -1000, 234, -1000, -1000, 34841, -102, 22924, 1564, 1862,
	10439, -1000, -1000, 940, 1943, 772, 1505, -1000, -1000, 1562,
	-1000, 1178, 643, 1063, 1704, -1000, -1000, -1000, 34841, -1000,
	17514, 17514, 17514, 983, -1000, 23465, -1000, -1000, -1000, -1000,
	9888, 801, 19678, 1051, 828, 19678, 19678, 19678, 19678, 19678,
	19678, 19678, 19678, 19678, 19678, 19678, 19678, 19678, 19678, 19678,
	1076, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1265,
	-1000, 234, 1294, 1294, 705, 705, 705, 705, 705, 705,
	25643, 1860, 15350, 15350, 15350, 1860, 1190, 1190, 15350, 15350,
	15350, 15350, 15350, 15350, 15350, 15350, 1860, 1860, 15350, 1190,
	1190, 1190, 1190, 15350, 15350, 15350, 15350, 34300, 34300, 1860,
	15350, 15350, 15350, 1860, 1190, 1436, 1129, 13727, 15350, 15350,
	1190, 17514, 17514, 16432, 15891, 18055, 15350, 1860, 850, 1129,
	35382, -1000, -1000, 19137, -1000, -1000, -1000, -1000, -1000, 1190,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 15350, 15350,
	15350, 15350, 795, 34841, -1000, 1504, 1547, -1000, -1000, -1000,
	-1000, 1861, 26185, -1000, 1581, 21301, -1000, 1581, 795, 1462,
	27808, 34841, -1000, -1000, 27808, 34841, 9337, 35923, 1546, -1000,
	-127, -104, -91, -1000, -1000, 704, -1000, -1000, -1000, 13185,
	-1000, 10990, 1885, 1677, 6582, 11541, -1000, 37895, 1618, -1000,
	-53, -1000, -1000, -1000, 1597, -1000, 1597, 325, -12, 1597,
	1597, 1597, 1597, 1597, -10, -10, -10, -10, -11, -1000,
	-1000, -1000, -1000, -1000, 1617, 1616, -1000, 1597, 1597, 1597,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1612,
	298, 1602, 1602, 1602, 1602, 1602, 368, 368, -1000, 17514,
	1437, 1851, 551, 264, 1815, 1833, 1815, 334, -1000, 642,
	1615, -1000, 637, 278, 1483, -1000, 185, 1463, 34841, -1000,
	-1000, -1000, -1000, -1000, 34841, 34841, 29431, 29431, 29431, 560,
	-1000, 34841, 1559, -1000, -1000, -1000, -1000, -1000, 1507, -1000,
	1463, -1000, -1000, -1000, -1000, -1000, 1196, 1129, 1256, 1255,
	1849, -1000, -1000, -1000, 914, -1000, -1000, -1000, -1000, 904,
	34841, 34841, 34841, 1849, 904, 1129, 769, 1624, 1581, 1190,
	-1000, -1000, -1000, 1254, -1000, 19678, 1556, 1556, -1000, 1556,
	541, 1294, 1556, -1000, 1433, 936, 1189, 34841, -1000, 22924,
	-45, -1000, -135, 32136, -1000, -1000, -1000, 32136, -1000, 75,
	176, -1000, 523, -1000, 1430, -1000, -1000, -1000, -1000, 1614,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 32136,
	128, 171, 32136, 1507, 1927, -1000, -1000, -1000, -1000, 1880,
	-1000, 1860, 1190, 235, -1000, -1000, -1000, 1581, 1365, 634,
	-1000, 31595, -1000, 1700, 981, 981, 17514, -1000, -1000, -1000,
	10990, 1882, -1000, 1710, 1709, 1662, -1000, -1000, 801, 947,
	832, -1000, -1000, 1032, -1000, -1000, -1000, -1000, 633, 1581,
	-1000, 3570, -1000, -1000, -1000, -1000, 1051, 19678, 19678, 19678,
	769, 3570, 3518, 964, 1106, 705, 702, 702, 706, 706,
	706, 706, 706, 1031, 1031, -1000, -1000, -1000, 1190, -1000,
	-1000, -1000, 15350, 1418, -1000, -1000, 1129, 619, 1418, 1418,
	15350, -171, -171, 1418, 1190, 1418, 1418, 1418, 1418, 1190,
	1418, 15350, 15350, 1418, -171, -171, -171, -171, 1418, 1418,
	1418, 1418, 1554, 1553, 15350, 1418, 1418, 1418, 15350, -1000,
	17514, -1000, 1190, 1418, 1418, -1000, 1080, 992, 774, 1926,
	1418, 771, 1925, 1418, 923, 19678, 19678, 19678, 1418, 15350,
	888, -1000, 17514, 1190, -1000, 1329, 1418, 1190, 1552, 1418,
	1418, 230, 1581, -1000, 10990, 27808, 31054, 31054, 27808, 31054,
	-1000, 1674, 1673, -1000, 1661, 1660, 1668, 22924, 1427, 1190,
	313, 26185, 1188, -1000, 1581, -1000, 22383, 577, 575, 562,
	557, 15350, 1906, 27808, 1456, -1000, 1456, -1000, 618, -1000,
	-1000, 35382, -91, -95, -1000, -1000, 1546, -1000, 1121, -1000,
	-1000, 1129, -1000, 617, 1804, 1860, 1545, 6031, -1000, -1000,
	-1000, -1000, 430, -1000, -1000, -1000, 1613, 37600, -1000, 1744,
	713, 713, 689, 1229, 1733, -1000, -1000, 169, -56, -1000,
	-1000, -1000, 1096, -10, -10, 1597, 1597, 301, 1597, -1000,
	-10, -1000, -1000, -1000, 704, 1795, 704, 704, 704, 704,
	-10, 1187, 1187, -1000, -1000, -1000, -1000, 1090, -1000, 1612,
	-1000, 1086, -1000, -1000, -1000, -1000, -1000, -1000, 1207, 1638,
	34300, -1000, 34841, -1000, 1815, -1000, -1000, -1000, 209, -1000,
	-1000, -1000, 1918, -1000, -1000, 34300, 27267, 34300, -1000, -1000,
	83, 29431, 189, 411, 228, -1000, 522, -1000, 521, -1000,
	-1000, -1000, -1000, -1000, -1000, 34841, 29431, -1000, -1000, -1000,
	-1000, 1906, 1247, 1245, -1000, -1000, -1000, 845, 904, -1000,
	-1000, 19678, 29431, -1000, 322, -1000, 3570, -1000, -1000, -1000,
	795, 578, -1000, -1000, -86, -1000, -1000, 520, 616, 614,
	519, -1000, 93, 29431, -1000, 34300, -1000, 1924, 1923, 110,
	1921, 29431, -1000, 33, 1704, -1000, 1542, -1000, 714, 709,
	727, 388, 388, -1000, 833, 388, 1789, 1785, 773, -1000,
	233, -1000, 10439, 10439, 1512, 1182, 1179, -1000, 1697, -1000,
	-1000, -1000, 34841, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 8786, 15350, -1000, 769, 3570, 3305, -1000, 19678,
	-1000, 1418, 15350, -171, 8235, -171, -171, 1418, -1000, 30513,
	-1000, -1000, -171, -1000, -171, -171, -171, -171, -171, 1418,
	1418, -171, -1000, -1000, -1000, -1000, -171, -171, -171, -171,
	19678, 19678, 1418, -171, -171, -171, 1190, 1129, -1000, -1000,
	-1000, 409, 1076, 409, 19678, 19678, -1000, 19678, 19678, -1000,
	-1000, 19678, 3285, 3198, 3009, -235, 1455, 829, -1000, 17514,
	1243, -1000, -1000, -1000, -1000, -1000, -1000, 1636, 10990, 1581,
	7133, -1000, 34300, 1503, -1000, 860, 846, 1547, 1611, 1634,
	1423, -1000, -1000, -1000, -1000, 1672, -1000, 1664, -1000, -1000,
	1591, -1000, -1000, 1511, 1581, 1510, 34300, 19678, 577, -1000,
	1581, 1581, 1581, 1190, 1898, 17514, 1456, -1000, -1000, 729,
	-1000, -1000, -130, -109, -1000, -1000, -1000, 10439, -1000, 6582,
	-1000, 6582, -1000, 24006, 383, 1747, 376, 1229, 1229, -1000,
	-1000, 1229, -1000, 1229, -1000, -1000, -1000, 1608, -1000, 957,
	-1000, -1000, -1000, -1000, -1000, 1581, -345, 1067, 1176, 19678,
	1940, -1000, 1741, -1000, 1735, 1734, 1175, -1000, -1000, 1390,
	704, 704, -10, -1000, -1000, 1597, -1000, 704, -1000, 794,
	-1000, -1000, -1000, -1000, 704, 1407, -1000, 1405, 1509, -1000,
	1397, 121, 34841, -1000, -1000, 1850, -1000, -1000, -1000, 1787,
	833, 833, 833, 1633, -1000, -1000, -1000, -1000, 1375, 1508,
	-1000, 4824, 34300, 34300, 34300, -1000, -243, 152, -1000, 29431,
	146, 185, 408, 1244, 34841, 29431, -1000, -1000, -1000, -1000,
	-1000, 1849, -1000, 3570, 1463, -1000, -1000, -10, 34841, -1000,
	29431, 728, 29972, 29431, 105, 174, -1000, 29431, 29431, 1913,
	29431, 1507, 1173, 1662, 235, 37386, 1229, 542, -1000, -1000,
	429, -1000, 4596, 1733, 1241, 38618, 38404, 34300, 1732, 1728,
	1240, 34841, 34300, -1000, -1000, 38109, 1235, 17514, -1000, 34300,
	-1000, -1000, 34300, 613, -1000, 34300, -1000, -1000, -1000, -1000,
	988, 14268, -1000, -1000, 1190, -1000, 19678, 3570, -171, -1000,
	-1000, -1000, -1000, 612, -1000, -1000, -171, -1000, -1000, 1234,
	-1000, -1000, -1000, -1000, -1000, -1000, -171, -171, -1000, -1000,
	-1000, -1000, -1000, 3120, 3026, -171, -1000, -1000, -1000, -1000,
	1190, 1597, 1597, -1000, 1597, 1602, -1000, 1597, 13, 1597,
	10, 1190, 1190, 3092, 2962, 2106, 1619, 1329, 19678, 19678,
	19678, 1581, -166, -1000, 1129, 17514, -1000, 1817, 1453, 1502,
	-1000, -1000, 14809, 1190, 1708, 1365, -1000, 21842, 1361, -1000,
	1898, 10990, 17514, 17514, -1000, -1000, 17514, 1601, -1000, 17514,
	-1000, -1000, -1000, -1000, 34300, 308, -1000, 17514, 1172, 1361,
	879, -1000, 34300, 34300, 34300, -1000, 1885, 1129, -1000, -1000,
	-1000, -1000, 6031, -1000, 1357, -1000, 1597, 1597, 1724, -1000,
	713, -1000, -1000, -1000, -1000, -1000, 34300, -1000, 19678, 1848,
	-1000, -1000, 3570, -128, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 704, -1000, -1000, -1000, -1000, -1000, -10, 1170, -10,
	1065, -1000, 1062, -1000, -1000, -292, 1596, 234, -1000, 833,
	779, 767, 1167, 34841, 139, 27267, -1000, 4824, 4824, 4824,
	131, 125, -1000, 927, -1000, -1000, -1000, 1166, 1148, 1147,
	1463, 191, 926, 162, -1000, 1830, -1000, -1000, 904, -71,
	-1000, 174, -1000, -1000, -1000, 174, -1000, -1000, 158, 1507,
	1507, 29431, 1507, -1000, -1000, -1000, 38109, 354, 4824, 4824,
	1437, 713, 1722, 376, -1000, -1000, -1000, -1000, -1000, -1000,
	1232, -1000, 639, -1000, 517, 354, 38109, 1129, 749, 908,
	10439, -1000, 1908, -1000, -1000, -1000, 3570, -1000, 7684, -1000,
	762, -1000, -1000, -1000, 19678, 19678, -1000, -1000, -1000, 284,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 19678, 19678,
	19678, 19678, -1000, 1329, 1329, 1329, 19678, 1190, 1146, 1129,
	1718, -1000, 1581, -1000, -1000, 1581, 232, -1000, 34300, 1885,
	-1000, 1129, 1129, 1129, 34300, 1129, 1351, -1000, 1581, -80,
	20760, -1000, 22924, 1349, 1349, 1349, -1000, 583, 24006, 1824,
	1824, 1229, 1229, 1347, 1329, 1581, -1000, 1581, 1581, -1000,
	704, -1000, 704, 1369, 1353, -1000, 24006, -1000, -1000, 744,
	-1000, -1000, -1000, -1000, -1000, 1879, -1000, 139, -1000, 1142,
	259, 237, -1000, 258, 256, 255, 229, 242, -1000, -1000,
	-1000, -1000, 377, 131, -1000, -69, 1061, 848, 1784, 125,
	-1000, 1060, 1057, 1056, 1053, 166, -1000, -1000, -1000, -1000,
	226, 185, -1000, 407, 1140, -1000, 1769, 1765, 1839, 1839,
	101, 1507, 1461, 1325, -1000, -1000, 1230, -1000, -1000, 1593,
	1229, 1229, -1000, 1227, -1000, -1000, 34300, -1000, 354, 1814,
	1812, 1581, -1000, 1906, 27808, 14268, -1000, -1000, 1898, 1895,
	1329, 1329, -1000, -1000, 1329, 1329, 1329, 1329, -1000, -1000,
	-1000, 143, -1000, -1000, 1939, -1000, 1502, 1581, -1000, 234,
	-1000, -1000, 1344, -1000, 34300, -1000, 1581, -1000, 577, -1000,
	-1000, -1000, 583, -1000, 1217, 833, 1136, -1000, -1000, -1000,
	-1000, -1000, 360, -348, 19678, -1000, -1000, -1000, -1000, 1336,
	-1000, 234, -1000, -1000, 302, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1773, 1772, 276, -1000, 1135, 1134, -1000, 400,
	1099, 641, -181, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 406, 1216, -1000, 161, -1000, -1000,
	471, 1750, 1755, 1894, -1000, 29431, -1000, -1000, 27808, -1000,
	-1000, 169, 169, 24006, 1437, 1592, -1000, -1000, -1000, 19678,
	-1000, 759, 1904, 1506, -1000, 770, 17514, -1000, -1000, -1000,
	-1000, -1000, -1000, 1190, 210, -252, 10990, 1502, 1190, -1000,
	-1000, 10439, -1000, -1000, -1000, 1045, -1000, 34841, -1000, -1000,
	-1000, 1329, 583, -1000, 305, 39567, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1019, -1000, -1000, 1070, 391, 150,
	-1000, 1838, -1000, 1591, 994, 1765, 1893, 1763, 1758, -1000,
	1133, -244, 1456, 1328, 1589, 24006, 3570, 1310, -1000, 34300,
	1901, 1891, -1000, 1190, 203, 203, 1497, -1000, 1683, -240,
	-261, 1496, -1000, 1304, -1000, 4824, -1000, 1582, -348, -1000,
	583, -1000, 292, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 17514, 17514, 5480, 39567, 126, -1000,
	104, -1000, -1000, -1000, 1132, -1000, 842, -1000, 1128, -1000,
	1888, 1887, -1000, 188, 1904, 583, 24006, 1292, -1000, 759,
	1707, -173, 17514, 17514, -1000, -1000, 181, -1000, 753, 297,
	751, -1000, 1294, -1000, -1000, 1680, -1000, 1190, 10439, 250,
	34300, -1000, -1000, 1212, 1201, -1000, 874, 1233, 218, 200,
	3996, -1000, -1000, -1000, -1000, -354, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1126, 1123, 26726, 1901, -1000, 1290, 583,
	-1000, 338, -1000, 34300, -1000, 1129, 1482, -1000, 1129, 920,
	-1000, -1000, -1000, -1000, -1000, 34300, -246, 1836, -1000, -1000,
	1120, -232, 1288, -1000, -1000, -1000, 883, -1000, 17514, 39567,
	1878, 1875, 1864, 1805, 10439, 39521, -1000, -1000, -1000, -1000,
	95, 1463, -173, 583, -1000, 318, 1479, -1000, 1831, 17514,
	181, -1000, -256, 22924, 1084, 1033, 1631, 307, 900, 39567,
	-1000, 1186, -355, 436, 234, 475, 19678, -1000, -1000, -1000,
	29431, -1000, -1000, 1581, 34300, 1581, -1000, -1000, -270, -1000,
	-1000, 1630, 19678, -1000, 1629, 1627, 1912, -1000, -1000, -1000,
	-1000, -1000, -1000, 39567, -1000, -356, 39567, 3273, -1000, -1000,
	-1000, 39379, -1000, -1000, -1000, -1000, 197, -1000, -1000, 3570,
	1463, 18596, -1000, -1000, -1000, -280, 1264, -1000, 1934, -1000,
	1919, 554, 554, -1000, -357, 39180, -358, 449, 39567, 843,
	-1000, 17514, -1000, 475, -1000, 1329, 1190, -1000, -281, -1000,
	-1000, -1000, 359, 1042, -1000, 39158, 892, 39567, -1000, -360,
	442, 39567, -1000, 932, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 38963, -1000, -362, 39567, 438, 38941, -363,
	-1000, 437, 39567, -1000,
}

var yyPgo = [...]int{
	0, 2356, 2353, 14, 2347, 258, 2346, 2338, 56, 2336,
	23, 20, 17, 26, 2335, 2083, 2075, 2061, 2059, 2048,
	2334, 13, 2331, 2328, 2041, 2327, 2326, 2039, 2037, 2034,
	2029, 2323, 2319, 2317, 2027, 2025, 2011, 11, 2316, 28,
	2313, 3, 163, 181, 2311, 2, 2310, 2309, 8, 2308,
	2307, 2009, 2304, 2303, 2300, 111, 2296, 2004, 1997, 2295,
	1993, 1984, 2294, 2291, 1973, 1969, 1964, 2289, 187, 2287,
	2286, 2285, 158, 113, 172, 2284, 2281, 2274, 127, 88,
	2001, 122, 57, 133, 1237, 2273, 36, 54, 257, 2272,
	2271, 169, 2269, 154, 2268, 2267, 170, 2266, 159, 91,
	114, 2264, 2262, 185, 2261, 2260, 2259, 143, 2258, 2257,
	183, 2206, 2256, 2255, 166, 2252, 84, 184, 49, 47,
	2251, 2249, 2248, 2247, 2245, 37, 460, 2244, 110, 155,
	2243, 2241, 93, 2240, 2239, 190, 2237, 2236, 2221, 156,
	51, 2207, 2205, 59, 2204, 65, 78, 2201, 60, 2198,
	148, 2197, 2196, 39, 31, 2195, 71, 2194, 53, 2193,
	149, 299, 157, 2191, 30, 10, 6, 2190, 45, 16,
	19, 50, 29, 68, 90, 141, 112, 2189, 32, 48,
	129, 109, 2188, 105, 96, 61, 2186, 165, 2185, 100,
	174, 146, 147, 171, 2184, 2182, 2180, 1019, 2179, 136,
	104, 2175, 116, 1058, 182, 125, 2174, 101, 2173, 2170,
	2169, 2167, 2166, 99, 124, 2164, 2163, 189, 186, 191,
	43, 35, 97, 2596, 22, 167, 2162, 52, 2161, 2160,
	2159, 2563, 138, 34, 119, 180, 2156, 117, 73, 69,
	2154, 2152, 2151, 2150, 2149, 2147, 2145, 2144, 1813, 2143,
	2140, 2139, 2138, 195, 120, 2137, 145, 144, 142, 2132,
	162, 41, 2131, 2130, 140, 107, 2127, 2123, 2122, 2121,
	135, 85, 168, 33, 2119, 123, 132, 139, 2118, 98,
	2117, 2116, 76, 55, 2115, 2114, 2113, 2112, 106, 108,
	2109, 72, 46, 40, 75, 25, 2104, 2103, 82, 87,
	2102, 38, 2101, 4, 5, 7, 2097, 2096, 2095, 2094,
	2093, 2092, 2091, 89, 2089, 2088, 70, 2087, 2085, 2080,
	42, 2077, 2073, 2071, 173, 128, 44, 179, 121, 9,
	2063, 2054, 12, 2050, 134, 2031, 74, 2018, 63, 2016,
	2007, 62, 2002, 1999, 64, 1991, 1986, 175, 1690, 2624,
	1982, 178, 164, 58, 94, 1977, 1975, 0, 1162, 188,
	176, 1971, 1967,
}

var yyR1 = [...]int{
	0, 356, 356, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 67, 3, 3, 8,
	9, 4, 4, 4, 5, 89, 89, 183, 183, 183,
	183, 182, 182, 90, 90, 88, 88, 96, 6, 6,
	7, 7, 10, 10, 71, 71, 11, 12, 12, 12,
	12, 359, 359, 105, 105, 103, 103, 104, 104, 180,
	180, 13, 13, 13, 187, 187, 192, 192, 192, 195,
	195, 195, 195, 170, 171, 172, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 330, 330,
	339, 339, 339, 340, 340, 338, 338, 338, 338, 338,
	342, 342, 343, 343, 341, 341, 341, 341, 345, 345,
	346, 346, 344, 344, 344, 344, 344, 344, 344, 344,
	344, 344, 344, 344, 344, 344, 333, 333, 333, 34,
	34, 34, 34, 35, 35, 35, 35, 35, 35, 347,
	347, 347, 347, 347, 347, 347, 347, 347, 347, 347,
	347, 347, 347, 347, 347, 347, 347, 347, 347, 347,
	347, 347, 347, 347, 347, 347, 347, 347, 347, 347,
	348, 348, 349, 349, 350, 350, 351, 351, 351, 351,
	352, 352, 352, 352, 352, 353, 353, 353, 353, 353,
	353, 353, 354, 354, 355, 355, 2, 311, 311, 312,
	312, 313, 313, 313, 313, 314, 314, 315, 315, 316,
	316, 316, 316, 316, 316, 316, 316, 316, 316, 25,
	219, 219, 216, 216, 216, 217, 217, 218, 218, 218,
	332, 332, 332, 326, 326, 326, 328, 328, 327, 327,
	327, 329, 329, 334, 334, 334, 334, 334, 336, 336,
	336, 336, 336, 336, 337, 337, 337, 335, 335, 49,
	49, 50, 50, 50, 159, 159, 159, 14, 14, 14,
	14, 14, 20, 22, 22, 38, 38, 39, 23, 23,
	23, 23, 40, 40, 41, 26, 26, 26, 26, 26,
	26, 47, 47, 47, 46, 46, 45, 45, 45, 45,
	45, 45, 24, 24, 24, 24, 48, 48, 43, 43,
	42, 44, 44, 44, 44, 44, 44, 44, 44, 44,
	44, 44, 44, 27, 27, 27, 27, 27, 27, 19,
	310, 310, 310, 37, 37, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 53, 284, 285, 285, 285,
	285, 285, 285, 285, 285, 271, 271, 272, 261, 261,
	261, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 238, 238, 238, 238, 244, 244, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 243,
	243, 243, 243, 243, 243, 243, 243, 245, 245, 245,
	245, 245, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 247, 247, 247,
	247, 247, 247, 247, 247, 270, 270, 248, 248, 264,
	264, 265, 265, 265, 262, 262, 262, 263, 263, 251,
	252, 266, 253, 253, 253, 254, 254, 254, 255, 255,
	260, 260, 259, 259, 259, 259, 259, 259, 256, 256,
	256, 256, 257, 257, 258, 269, 269, 269, 269, 269,
	249, 36, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 297, 297, 209, 209, 210, 210,
	274, 274, 295, 295, 294, 294, 293, 293, 293, 283,
	283, 290, 290, 290, 290, 290, 290, 290, 290, 278,
	278, 278, 277, 277, 279, 279, 282, 282, 292, 292,
	291, 291, 275, 275, 275, 298, 298, 298, 298, 298,
	276, 276, 276, 276, 299, 280, 280, 281, 281, 281,
	304, 305, 303, 303, 303, 303, 303, 122, 122, 122,
	287, 287, 287, 288, 288, 288, 289, 289, 289, 308,
	308, 307, 307, 51, 52, 56, 56, 55, 55, 55,
	55, 55, 55, 55, 55, 55, 55, 55, 55, 55,
	55, 55, 55, 55, 55, 55, 55, 55, 55, 55,
	55, 55, 55, 158, 158, 158, 214, 214, 302, 300,
	300, 301, 301, 16, 16, 54, 54, 331, 331, 17,
	17, 17, 17, 17, 17, 17, 17, 17, 306, 306,
	306, 18, 18, 57, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 85,
	201, 201, 200, 200, 199, 199, 199, 202, 202, 202,
	202, 236, 236, 236, 59, 59, 59, 63, 63, 66,
	66, 66, 64, 65, 28, 29, 29, 29, 29, 30,
	215, 215, 61, 61, 62, 62, 62, 62, 77, 77,
	361, 361, 60, 362, 68, 69, 69, 70, 70, 70,
	205, 205, 74, 74, 74, 72, 72, 72, 73, 73,
	79, 79, 83, 83, 83, 83, 82, 82, 82, 82,
	161, 161, 166, 228, 228, 142, 142, 162, 162, 167,
	167, 167, 168, 168, 169, 169, 169, 169, 169, 164,
	164, 163, 163, 165, 130, 130, 226, 226, 226, 225,
	225, 225, 225, 87, 87, 91, 91, 91, 93, 93,
	93, 93, 93, 97, 144, 144, 115, 115, 116, 116,
	116, 116, 116, 128, 128, 179, 179, 178, 178, 181,
	181, 92, 94, 94, 94, 94, 100, 100, 101, 101,
	102, 102, 213, 213, 233, 233, 233, 106, 106, 106,
	108, 107, 107, 107, 107, 109, 109, 95, 286, 286,
	273, 240, 240, 241, 241, 110, 110, 112, 113, 113,
	111, 111, 117, 117, 114, 118, 118, 118, 118, 119,
	119, 84, 84, 84, 84, 84, 84, 84, 84, 198,
	198, 121, 121, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 138, 138, 138, 138, 138, 138, 123,
	123, 123, 123, 123, 123, 123, 78, 78, 139, 139,
	139, 99, 98, 98, 81, 81, 80, 80, 140, 140,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 133, 133, 137, 137, 137, 137,
	137, 137, 137, 137, 137, 137, 137, 137, 137, 137,
	137, 137, 137, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 131, 131, 131, 131, 131, 131,
	131, 131, 131, 131, 131, 131, 131, 131, 131, 131,
	131, 131, 131, 131, 131, 132, 132, 132, 132, 132,
	132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
	132, 132, 360, 360, 135, 134, 134, 134, 134, 134,
	134, 75, 75, 75, 75, 75, 234, 234, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 151, 151, 76, 76, 149, 149, 150,
	152, 152, 148, 148, 148, 125, 125, 125, 125, 125,
	125, 125, 125, 127, 127, 127, 153, 153, 141, 141,
	86, 154, 154, 155, 156, 156, 157, 157, 160, 173,
	173, 173, 174, 174, 174, 174, 129, 129, 175, 175,
	175, 124, 124, 124, 124, 124, 124, 124, 177, 177,
	176, 176, 176, 176, 184, 184, 143, 143, 146, 146,
	145, 147, 185, 185, 189, 189, 186, 186, 190, 190,
	190, 190, 193, 193, 194, 194, 194, 191, 191, 191,
	188, 188, 188, 230, 230, 230, 196, 196, 206, 206,
	203, 203, 204, 204, 197, 197, 250, 250, 250, 212,
	212, 211, 211, 211, 207, 207, 207, 208, 208, 227,
	227, 223, 223, 229, 229, 224, 224, 231, 231, 232,
	232, 309, 309, 267, 267, 319, 319, 268, 268, 320,
	320, 322, 322, 317, 317, 318, 318, 321, 321, 31,
	323, 323, 324, 324, 325, 325, 325, 325, 32, 33,
	33, 33, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	357, 358,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 11, 5, 7, 1,
	5, 1, 14, 3, 13, 0, 2, 0, 2, 3,
	3, 1, 3, 2, 3, 1, 3, 4, 1, 3,
	1, 3, 7, 8, 1, 1, 9, 8, 7, 6,
	6, 1, 1, 1, 3, 1, 3, 1, 3, 0,
	4, 3, 4, 5, 1, 3, 3, 2, 2, 2,
	2, 2, 1, 0, 0, 0, 2, 3, 3, 11,
	9, 11, 5, 5, 16, 12, 9, 4, 0, 3,
	0, 2, 2, 1, 3, 1, 1, 2, 2, 2,
	0, 2, 1, 2, 2, 2, 2, 2, 0, 1,
	1, 2, 3, 3, 5, 3, 3, 4, 5, 4,
	4, 2, 2, 2, 2, 2, 0, 2, 2, 9,
	9, 5, 7, 7, 7, 7, 8, 4, 6, 2,
	3, 2, 3, 3, 3, 4, 3, 3, 2, 2,
	3, 2, 2, 2, 2, 2, 3, 2, 2, 2,
	3, 3, 2, 3, 3, 2, 2, 2, 2, 2,
	1, 3, 0, 3, 1, 3, 0, 1, 1, 1,
	1, 3, 1, 3, 3, 0, 2, 5, 5, 5,
	7, 5, 0, 3, 0, 3, 4, 0, 1, 1,
	3, 2, 3, 3, 3, 0, 1, 1, 2, 2,
	2, 2, 1, 2, 2, 3, 3, 3, 3, 4,
	2, 3, 3, 3, 3, 0, 3, 0, 3, 3,
	1, 1, 1, 3, 2, 1, 1, 3, 3, 2,
	1, 1, 3, 1, 2, 5, 4, 6, 4, 3,
	3, 6, 5, 5, 4, 3, 5, 1, 3, 1,
	1, 1, 1, 1, 0, 2, 2, 1, 1, 1,
	1, 1, 4, 5, 8, 1, 2, 5, 7, 10,
	8, 11, 1, 2, 5, 5, 5, 5, 6, 3,
	5, 1, 1, 1, 1, 3, 1, 1, 1, 2,
	1, 1, 2, 4, 2, 4, 2, 3, 1, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 4, 3, 2, 4, 3,
	0, 2, 3, 1, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 5, 4, 1, 1, 2,
	3, 4, 3, 3, 3, 3, 3, 3, 0, 1,
	1, 0, 2, 3, 2, 2, 2, 2, 2, 6,
	8, 3, 3, 3, 1, 1, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 3, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 1, 4, 4, 3, 3, 2, 4, 5, 2,
	3, 4, 2, 2, 3, 3, 3, 3, 3, 4,
	1, 1, 1, 1, 1, 6, 6, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 3, 0,
	5, 0, 3, 5, 0, 1, 1, 0, 1, 2,
	3, 1, 0, 3, 3, 0, 2, 2, 0, 1,
	0, 1, 1, 1, 1, 2, 2, 2, 5, 5,
	4, 4, 4, 4, 4, 2, 1, 2, 1, 2,
	2, 3, 2, 2, 2, 2, 1, 1, 1, 1,
	3, 2, 1, 1, 0, 3, 1, 1, 0, 1,
	5, 4, 0, 1, 1, 2, 2, 3, 2, 0,
	1, 3, 5, 3, 3, 5, 3, 2, 2, 1,
	1, 1, 1, 1, 0, 1, 0, 1, 1, 3,
	3, 3, 3, 3, 1, 10, 11, 11, 12, 12,
	3, 3, 2, 1, 5, 1, 1, 0, 2, 2,
	3, 3, 1, 1, 2, 2, 2, 0, 1, 2,
	0, 1, 3, 1, 2, 3, 1, 1, 1, 0,
	2, 0, 2, 1, 5, 1, 3, 5, 4, 3,
	5, 3, 8, 10, 3, 3, 3, 3, 3, 5,
	4, 5, 1, 2, 2, 4, 3, 6, 5, 3,
	9, 2, 2, 0, 1, 2, 0, 1, 7, 1,
	3, 8, 8, 3, 3, 3, 5, 3, 5, 5,
	5, 4, 4, 4, 4, 4, 4, 4, 0, 1,
	1, 3, 2, 3, 3, 4, 3, 5, 5, 5,
	4, 4, 4, 2, 2, 2, 6, 2, 4, 4,
	4, 5, 8, 6, 3, 5, 4, 2, 4, 3,
	2, 4, 5, 6, 2, 6, 6, 3, 3, 3,
	0, 1, 1, 1, 0, 2, 2, 0, 2, 3,
	2, 0, 1, 1, 2, 4, 1, 1, 1, 2,
	4, 4, 1, 1, 2, 3, 4, 4, 5, 3,
	1, 1, 3, 3, 1, 1, 1, 1, 0, 3,
	1, 1, 3, 0, 2, 0, 2, 1, 2, 2,
	0, 1, 0, 1, 1, 0, 1, 1, 0, 1,
	3, 5, 1, 1, 3, 5, 1, 2, 3, 5,
	2, 2, 6, 0, 1, 0, 3, 0, 1, 0,
	2, 2, 4, 1, 2, 2, 2, 2, 2, 0,
	2, 1, 3, 3, 1, 3, 0, 1, 2, 1,
	1, 1, 1, 1, 3, 1, 1, 1, 1, 4,
	1, 3, 1, 2, 2, 4, 2, 6, 1, 4,
	6, 3, 2, 0, 3, 0, 3, 1, 3, 1,
	3, 4, 4, 4, 4, 3, 2, 4, 0, 1,
	0, 2, 0, 1, 1, 1, 1, 1, 2, 2,
	1, 2, 3, 2, 3, 2, 2, 12, 1, 3,
	3, 3, 3, 3, 4, 1, 3, 3, 2, 1,
	1, 3, 1, 3, 3, 0, 5, 5, 5, 0,
	2, 1, 3, 3, 3, 2, 3, 1, 2, 0,
	3, 1, 1, 3, 3, 4, 4, 5, 3, 4,
	5, 6, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 0, 2, 1, 1,
	1, 3, 1, 3, 0, 1, 1, 3, 1, 3,
	1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 2, 2, 2, 2, 3, 1, 1,
	1, 1, 1, 1, 5, 6, 6, 6, 5, 5,
	5, 6, 5, 5, 6, 5, 5, 5, 5, 6,
	5, 5, 5, 4, 4, 5, 5, 5, 5, 5,
	4, 4, 4, 4, 4, 4, 4, 3, 6, 6,
	6, 8, 8, 8, 8, 4, 6, 7, 7, 7,
	9, 4, 7, 5, 4, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	8, 8, 0, 2, 3, 4, 4, 4, 4, 4,
	4, 0, 3, 4, 7, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 3, 3, 1, 2, 2, 1, 2, 1, 2,
	2, 1, 2, 0, 1, 0, 2, 1, 2, 4,
	0, 2, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 0, 3, 1, 3,
	1, 0, 2, 1, 0, 3, 1, 3, 2, 0,
	1, 1, 0, 2, 4, 4, 1, 1, 0, 2,
	4, 2, 4, 1, 3, 5, 4, 6, 0, 3,
	1, 3, 3, 5, 0, 5, 1, 3, 1, 2,
	3, 1, 1, 3, 3, 3, 1, 3, 1, 2,
	2, 3, 1, 1, 1, 1, 1, 3, 3, 3,
	1, 2, 1, 1, 1, 1, 1, 1, 0, 1,
	0, 2, 0, 3, 0, 1, 0, 3, 3, 1,
	1, 0, 1, 1, 1, 1, 1, 0, 1, 0,
	2, 1, 1, 1, 3, 1, 1, 1, 1, 1,
	1, 0, 2, 0, 1, 0, 4, 0, 1, 0,
	3, 0, 3, 0, 4, 0, 3, 0, 3, 3,
	1, 3, 2, 4, 1, 2, 1, 2, 2, 2,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1,
}

var yyChk = [...]int{
	-1000, -356, -1, -3, -9, -10, -11, -12, -13, -15,
	-51, -16, -17, -18, -57, -58, -59, -63, -64, -65,
	-61, -60, -24, -27, -19, -67, -28, -29, -30, -31,
	-32, -33, -34, -35, -36, -4, 6, 7, -71, 9,
	10, 29, -53, 180, -52, 183, 182, 218, 184, 211,
	64, 341, -66, 344, 345, -361, -215, 269, 270, 20,
	37, 346, 348, 30, 31, 232, 286, 288, 313, -5,
	-90, -6, 8, 441, 181, 342, 213, 212, 26, 492,
	-357, 68, 556, -156, 15, -68, -362, -68, -68, -68,
	-68, -68, -284, -213, 108, 68, 23, -208, -219, 88,
	432, 188, -217, 282, 284, -206, -207, -216, 242, 252,
	44, 199, 198, 253, 189, 282, 189, 190, 192, 432,
	188, 225, 224, 282, 284, 189, -111, -231, 72, -221,
	202, 502, 307, 489, 253, 551, 294, 239, 341, 355,
	357, 349, 384, 372, 490, 503, 203, 264, 187, 340,
	370, 373, 418, 201, 297, 257, 320, 504, 407, 413,
	267, 344, 427, 505, 204, 261, 263, 262, 247, 457,
	268, 36, 214, 368, 303, 361, 272, 242, 506, 497,
	236, 359, 35, 27, 237, 235, 430, 507, 331, 415,
	389, 332, 306, 508, 494, 301, 414, 364, 360, 313,
	205, 199, 333, 509, 390, 394, 510, 419, 287, 334,
	511, 512, 513, 191, 293, 353, 354, 514, 243, 421,
	298, 388, 32, 200, 491, 48, 222, 422, 38, 392,
	37, 398, 515, 330, 387, 382, 399, 516, 517, 518,
	519, 311, 309, 310, 312, 386, 352, 381, 254, 259,
	53, 186, 396, 395, 397, 260, 417, 377, 375, 520,
	521, 302, 206, 522, 523, 362, 18, 524, 525, 425,
	217, 304, 305, 42, 526, 527, 528, 112, 487, 529,
	530, 416, 391, 393, 241, 116, 365, 196, 531, 308,
	412, 317, 493, 291, 113, 423, 358, 533, 336, 348,
	221, 216, 426, 326, 534, 270, 535, 536, 537, 208,
	538, 285, 284, 345, 318, 114, 346, 409, 265, 539,
	540, 541, 542, 251, 234, 429, 420, 52, 269, 403,
	543, 321, 337, 351, 198, 271, 406, 295, 342, 43,
	7, 258, 299, 410, 319, 266, 252, 255, 379, 223,
	544, 545, 366, 367, 385, 350, 380, 343, 226, 218,
	111, 428, 404, 495, 282, 338, 374, 371, 229, 378,
	546, 547, 256, 230, 347, 424, 296, 369, 405, 189,
	133, 373, 418, 180, 408, 409, 415, -278, 416, 224,
	227, -236, 189, -201, 407, 287, 308, 462, 230, 231,
	190, 191, 32, 420, 419, 411, -231, 193, 347, -77,
	184, 219, -111, -48, 72, 271, -48, 29, 72, 72,
	36, 72, 346, 410, 410, 75, 493, 233, 21, -348,
	-329, 317, -347, -327, 181, 180, 10, 182, 322, 323,
	324, 190, 8, 30, 532, 207, 325, 326, 6, 211,
	327, 328, 225, 9, 329, -332, 74, 72, -221, 21,
	-348, -329, 317, -210, -209, 339, 398, 6, -70, 5,
	-197, 194, 343, -88, 501, -96, -233, -231, -222, 74,
	300, 210, 290, 401, 458, 459, 460, 461, 233, 462,
	475, 476, 99, 231, 322, 323, 314, 324, 209, 477,
	117, 240, 219, 279, 411, 278, 283, 463, 464, 478,
	479, 480, 465, 466, 289, 481, 482, 554, 292, 555,
	315, 484, 532, 485, 325, 483, 327, 228, 469, 468,
	467, 470, 328, 452, 453, 471, 51, 473, 472, 474,
	192, 81, -8, -3, -174, 17, 16, -74, 54, 55,
	-69, -82, 124, -84, -231, -120, 91, -126, 28, 72,
	-221, 24, -125, -222, -121, -148, -147, -99, 133, -235,
	122, 123, 130, 92, 176, -133, -131, -132, -134, -136,
	-137, 74, 73, 82, 75, 76, 77, 78, 83, 458,
	459, 460, 461, 462, 475, 476, 209, 477, 219, 463,
	464, 478, 479, 480, 465, 466, 481, 482, 484, 485,
	483, 469, 468, 467, 470, 452, 453, 471, 473, 472,
	474, 84, 85, -223, -145, -357, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 58, 59,
	188, 442, 443, 444, 445, 446, 488, 450, 94, 47,
	431, 440, 439, 438, 436, 437, 433, 435, 434, 195,
	432, 128, 441, -197, -197, 11, -103, -104, -111, -114,
	-231, -186, 343, -193, -190, 419, 420, -191, -194, -188,
	-148, 398, 529, 530, 418, 373, 417, -223, -231, -2,
	-5, 6, -111, -285, -272, -276, -224, 204, -299, -223,
	-220, 201, 72, -221, 300, 185, 210, 181, 90, 496,
	23, 25, 290, 401, 458, 93, 133, 459, 460, 461,
	16, 20, 94, 132, 81, 442, 233, 462, 180, 62,
	433, 435, 431, 432, 408, 28, 10, 26, 212, 246,
	22, 126, 182, 97, 98, 99, 231, 215, 322, 323,
	24, 213, 314, 85, 324, 209, 117, 240, 19, 65,
	219, 279, 11, 411, 227, 550, 286, 13, 456, 115,
	278, 14, 283, 195, 194, 110, 244, 190, 60, 8,
	176, 87, 107, 56, 463, 464, 486, 45, 232, 499,
	58, 108, 17, 436, 437, 30, 488, 465, 220, 500,
	466, 128, 249, 63, 50, 289, 91, 83, 554, 33,
	86, 66, 335, 88, 15, 245, 61, 454, 292, 555,
	315, 224, 532, 248, 501, 207, 109, 325, 183, 441,
	316, 288, 59, 188, 6, 451, 29, 211, 327, 250,
	228, 469, 468, 467, 470, 552, 57, 444, 445, 471,
	328, 548, 189, 96, 452, 453, 193, 225, 84, 5,
	44, 31, 9, 329, 64, 67, 438, 439, 440, 47,
	51, 473, 472, 474, 192, 553, 95, 12, 455, 492,
	89, 190, 192, 441, -204, 195, -204, 225, 224, -218,
	250, -204, -204, 189, -217, 100, 100, -54, -111, -331,
	-326, -332, -203, 195, -223, -203, -203, -203, -203, -203,
	-203, -203, -111, 177, -103, 72, 29, -202, 108, 12,
	432, 188, 189, 224, 225, 192, -280, 11, 110, 228,
	228, 228, 229, 228, -200, 410, 412, 226, 413, 414,
	12, -85, 108, 19, -357, -174, -174, 125, 72, 346,
	193, -62, -3, -12, -10, -11, -8, 100, -128, 23,
	29, 29, 74, 51, 29, -43, -42, -44, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	29, -310, 68, -267, 398, 72, -323, -324, -111, 75,
	75, 66, 66, 69, 193, 69, 66, -349, 318, 68,
	-349, 284, 318, 319, 252, 282, 192, -349, -349, 284,
	-349, -349, -349, -349, -349, 410, -349, -349, -349, 320,
	321, -349, 408, 192, -349, -349, -349, -349, -349, 71,
	66, 69, 308, 66, 11, 66, -296, 133, 331, 332,
	333, 334, 330, 308, 335, 336, 337, 228, 338, -68,
	-7, -5, -357, 21, 22, 189, 423, 69, -88, -177,
	-357, -358, 70, -175, 19, 30, -129, 75, 78, -157,
	-160, -84, -231, 50, -72, 21, 22, 80, 11, -226,
	90, 88, 89, 107, -225, 23, 72, -221, -222, 74,
	177, -84, -123, 110, 91, 108, 109, 93, 119, 118,
	129, 122, 123, 124, 125, 126, 127, 128, 120, 121,
	132, 100, 101, 102, 103, 104, 105, 106, -198, -357,
	-99, -357, 178, 179, -126, -126, -126, -126, -126, -126,
	-126, -357, -357, -357, -357, -357, -357, -357, -357, -357,
	-357, -357, -357, -357, -357, -357, -357, -357, -357, -357,
	-357, -357, -357, -357, -357, -357, -357, -357, -357, -357,
	-357, -357, -357, -357, -8, -140, -84, -357, -357, -357,
	-357, -357, -357, -357, -357, -357, -357, -357, -151, -84,
	-357, -360, -135, -357, -360, -135, -360, -135, -360, -357,
	-360, -135, -360, -135, -360, -360, -135, -360, -357, -357,
	-357, -357, -113, 87, -111, -87, -91, -93, -94, -95,
	-115, -98, -357, -92, 486, -111, -99, 72, -111, -103,
	-359, 69, 11, 67, -359, 69, 177, 69, -187, -192,
	421, 423, 343, -191, -191, -230, -223, 74, 28, 100,
	29, 177, -156, -68, 70, 69, -276, 204, 201, -238,
	-244, -246, -245, -247, -242, -243, 370, 373, 377, 375,
	371, 376, 133, 374, 379, 380, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 29, 214, 366, 367, 368,
	369, 390, 391, 392, 393, 394, 395, 396, 397, 349,
	372, 490, 350, 351, 352, 353, 354, 355, 357, 358,
	359, 360, 361, 362, 363, 364, 72, -222, -299, 68,
	-223, -111, -219, -217, 72, 91, 72, -110, -223, -231,
	-117, -223, -231, 251, -335, -334, -326, -329, -204, -218,
	-326, 256, 254, 255, 69, 193, 69, 193, 71, -103,
	24, 66, -105, -111, 72, 72, -110, -117, -328, -326,
	-329, -232, -231, -220, -202, 74, -235, -84, -204, -204,
	-111, -111, -111, -111, -111, -202, -202, -202, -202, -199,
	11, 110, 11, -199, -199, -84, -126, -326, 434, 124,
	-231, 72, 72, 346, 72, 33, -43, -43, 74, -43,
	69, 100, -43, 70, -140, -309, 549, 69, -325, 23,
	423, 424, 399, -351, 189, 227, 224, -351, -347, 326,
	-328, -327, -326, -349, -350, -223, -349, -349, -349, 410,
	-349, -349, -349, -349, -349, -349, -349, -349, -332, -351,
	286, 69, -351, -328, -326, 330, 330, 330, 330, 330,
	330, -74, -8, -111, 424, 425, -96, 23, -176, -224,
	-183, 87, 9, 110, 69, 18, 69, -173, 25, 26,
	177, -127, 51, 75, 78, -205, 49, -111, -84, -84,
	-84, -138, 83, 91, 84, 85, -225, 124, -232, -224,
	-220, -126, -139, -145, -99, 79, 110, 108, 109, 93,
	-126, -126, -126, -126, -126, -126, -126, -126, -126, -126,
	-126, -126, -126, -126, -126, -234, 72, 74, 72, -125,
	-125, -223, -72, -80, -83, 124, -84, -231, -80, -80,
	-72, -358, -358, -80, -83, -80, -80, -80, -80, -83,
	-80, -72, -72, -80, -358, -358, -358, -358, -80, -80,
	-80, -80, -223, -223, -72, -80, -80, -80, -72, -358,
	69, -358, -8, -80, -80, -358, -84, -84, -148, 74,
	-80, -148, 74, -80, -126, 447, 448, 449, -80, -72,
	-149, -150, 95, -148, -358, -126, -80, -81, -80, -80,
	-80, -180, 112, -111, 29, 69, -106, -108, -107, -109,
	56, 60, 62, 57, 58, 59, 63, -213, -87, -97,
	47, -357, -357, -116, 112, -118, 23, -233, 64, 194,
	65, -357, -180, 67, -87, -111, -87, -114, -231, 124,
	-190, -193, 69, 422, 424, 425, -187, -254, 132, 66,
	86, -84, -224, -232, -174, -74, -287, -288, -289, -224,
	74, 75, -272, -274, -275, -276, -290, 204, -298, 196,
	198, 199, 44, -277, 205, 190, 45, -239, -262, 403,
	404, -248, 68, -248, -248, 378, 370, 373, 371, -248,
	-248, -248, -248, -248, -253, 373, -253, -253, -253, -253,
	371, 68, 68, -248, -248, -248, -264, 68, -264, 365,
	-265, 68, -265, -265, -265, -265, -299, -299, -84, -227,
	67, 23, 192, -260, -259, -256, -257, -258, -255, 28,
	24, -260, -49, 239, 210, 177, 68, 177, 242, 243,
	-330, 69, 28, -336, 283, -111, -111, -111, -326, -326,
	-332, -306, 208, 203, -111, 69, 69, 74, 72, 72,
	-128, -281, 11, 110, -202, -231, -231, -111, -128, -202,
	-78, 215, 67, -360, -358, 72, -126, -42, -125, 70,
	-112, 87, 74, -324, -233, 398, 424, -352, 124, -223,
	-352, -355, 492, 193, 70, 69, -349, -352, 304, 286,
	-352, 11, -297, 19, -72, -358, -56, -55, 185, 182,
	183, 186, 187, -302, 401, 181, 236, 235, 221, -98,
	-357, -358, 69, 177, -182, 34, 35, -223, 52, -129,
	-129, -160, -196, 19, 11, 47, 47, -73, 57, 83,
	84, 85, 177, -357, -139, -126, -126, -126, -78, 90,
	-358, -80, 69, -358, 177, -358, -358, -80, -161, 454,
	-161, -358, -358, -358, -358, -358, -358, -358, -358, -80,
	-80, -358, -161, -161, -161, -161, -358, -358, -358, -358,
	69, 69, -80, -358, -358, -358, -81, -84, -358, -358,
	-358, 69, 67, 23, 11, 11, -358, 11, 11, -358,
	-358, 11, -126, -126, -126, -358, -80, -152, -150, 97,
	-84, -358, -358, -358, -358, -358, -358, -124, 29, 47,
	-357, -8, -357, -185, -189, -148, -220, -91, -93, -93,
	-91, -93, 56, 56, 56, 61, 56, 61, 56, -107,
	-233, -358, -358, -144, 238, 74, -357, 33, -233, -118,
	190, 190, 190, -81, -119, 12, -87, -119, -119, 177,
	-192, -195, 426, 423, 429, 72, 74, 177, -175, 69,
	-289, 100, -276, 68, 72, -282, -222, 45, -277, 190,
	45, -279, -277, -277, -282, 72, -282, 45, 83, 91,
	-251, -252, -266, -269, -249, 23, 550, 406, 487, 28,
	66, 401, 196, 45, 44, 199, 81, -263, 405, 75,
	-253, -253, -248, -248, -248, 378, -248, -253, -254, 29,
	-254, -254, -254, -254, -253, -270, 74, -270, 75, -264,
	75, 70, 66, -223, -170, -111, -257, -256, -258, 373,
	418, 132, 430, -50, 8, 9, 10, -223, -311, -312,
	-313, -223, 110, 244, 245, -223, -339, 316, -334, 284,
	293, 90, 16, 492, 193, 193, -111, -326, -119, 72,
	72, -199, -202, -126, -329, 230, 231, -180, 189, -325,
	193, 177, 177, 193, 307, -328, -223, 11, 11, 304,
	11, -328, 340, -205, 69, -214, -277, -308, -275, -276,
	-307, 197, 204, 205, -214, 204, 201, -277, 205, 196,
	197, -211, -277, 193, 23, -214, -214, -283, 100, -214,
	32, 32, 112, -224, -224, 69, 74, 74, 53, -111,
	-79, -171, 124, -224, -81, -78, 90, -126, -358, -83,
	-162, -161, 124, -232, -162, -162, -358, -223, -166, -357,
	-161, -162, -162, -161, -161, -161, -358, -358, -161, -162,
	-162, -162, -162, -126, -126, -358, -162, -162, -162, -358,
	-237, 133, 370, 214, 368, 361, 388, 375, 403, 366,
	404, -234, -237, -126, -126, -126, -126, -126, 11, 11,
	11, 489, -156, 99, -84, 96, -184, 66, -185, -143,
	-146, -145, -357, -8, -358, -176, 6, 492, -181, -223,
	-119, 69, 100, 100, -101, -100, 66, 67, -102, 66,
	-100, 56, 56, -179, 68, 69, -145, -357, 69, -181,
	-126, -118, -357, -357, -357, -358, -156, -84, -119, 423,
	427, 428, -288, -289, -292, -291, -223, -222, 196, -298,
	44, -298, -282, -282, -282, -282, 68, 83, -357, 551,
	75, 74, -126, 9, 45, 45, 45, 74, 70, -254,
	-254, -253, -248, -254, 72, 133, -254, 70, 69, 70,
	69, 70, 69, -122, 507, 91, -111, -172, 23, 29,
	-283, -283, -283, 66, 70, 69, -238, -223, -223, -223,
	-342, 492, 289, -340, -338, 295, 296, 297, 298, 299,
	-329, 294, -336, 291, 74, 72, -111, -326, -128, -253,
	-111, -328, 124, 124, -223, -328, 304, -354, 492, -328,
	-328, 11, -328, 74, -73, -55, 68, -271, 72, -222,
	-282, -207, 196, 72, 72, 72, -222, 72, -222, -223,
	45, 45, 72, -111, -223, -271, 72, -84, -223, -223,
	177, -223, -183, 69, -82, -358, -126, -162, 177, -162,
	-228, 72, -162, -162, 69, 69, -162, -358, -248, -248,
	-248, -265, -248, 354, -248, 354, -358, -358, 19, 19,
	19, 19, -358, -126, -126, -126, -357, -76, 451, -84,
	27, -184, 69, -358, -358, 47, -358, -358, 69, -156,
	-189, -84, -84, -84, 68, -84, -178, -223, 238, 74,
	-358, -118, -213, -178, -178, -178, -174, 70, 69, -248,
	-248, 45, -279, -178, -126, 23, -132, 452, 453, -254,
	-253, 74, -253, 75, 75, 507, 68, -8, -170, -283,
	72, 133, 72, 133, 74, -111, -314, -315, -316, 81,
	491, 91, 246, 247, 206, 248, 249, 250, -313, -238,
	-238, -238, -345, -346, -344, 292, 314, 315, 300, -343,
	-341, 309, 310, 311, 312, 90, 74, 74, 74, -337,
	283, 90, 292, 16, 23, -202, -317, -200, -354, -354,
	286, -328, -79, -271, -158, 209, 210, -238, -238, -227,
	-279, 45, 72, -212, 193, 23, 193, -158, -271, 29,
	182, 87, -224, -89, 11, -171, -171, 124, -142, 112,
	-126, -126, -253, 72, -126, -126, -126, -126, -358, -358,
	-358, -126, -358, 74, 45, -146, -143, 47, -8, -357,
	-223, -174, -178, 70, 69, -145, 413, -116, -233, -358,
	-358, -358, -294, -293, 67, 200, 81, -291, -173, -173,
	-282, -282, 70, -358, -357, -254, -254, 70, 70, -292,
	-170, -172, 72, 133, 19, -171, -316, 74, 250, 246,
	250, 250, 250, 250, 251, -333, 81, 290, -344, 301,
	512, 285, 316, 75, 75, 111, 30, 31, -341, 75,
	75, 75, 75, -338, 16, 492, -336, 291, 74, 74,
	-318, 38, -320, 39, -353, 23, -353, 304, 11, 70,
	72, -239, -239, 68, -282, -282, 72, -223, -158, 28,
	28, -357, -119, -87, -82, -156, 16, -358, -358, -358,
	-358, -358, -358, -75, 110, 492, 9, -143, -8, 70,
	-223, -357, -118, -293, 72, -283, 74, 207, -261, 553,
	552, -126, 70, -8, 237, -172, 36, 36, 242, 243,
	74, 74, 28, 302, 176, 28, 75, 176, 457, 291,
	74, 72, 292, -250, 194, -321, 43, -319, -268, 42,
	16, -326, -87, -292, -227, 68, -126, -300, -301, 112,
	-153, 13, -171, -167, 114, 113, -140, -358, 490, 63,
	493, -185, -358, -286, -273, -224, 75, -111, -358, -295,
	-294, -170, 238, -21, -3, -10, -11, -12, -13, -15,
	-51, -16, -17, -22, -23, -18, -57, -58, -66, -64,
	-65, -61, -60, -26, -24, -27, -19, -28, -29, -30,
	-34, -35, -25, -36, 94, 195, 272, 341, 75, 28,
	75, 28, 305, 292, 23, -179, 75, -320, 16, -322,
	40, 41, 74, 492, -119, 70, 68, -292, -358, 69,
	-223, -154, 14, 16, -358, -168, 93, -169, 111, 457,
	-130, 75, 176, -168, 53, 491, 494, -358, 69, -238,
	68, -261, -159, 240, 241, -170, -84, -84, 72, -47,
	-229, 275, 276, 277, -224, -37, -21, 303, 303, 74,
	38, 114, 74, 16, 16, 284, -153, -295, -292, 70,
	-301, 47, -164, 455, -155, -84, -141, -86, -84, -169,
	116, 117, 238, 116, 117, -125, 53, -358, -273, -240,
	487, 24, -178, -170, 72, 72, -38, -39, 95, 96,
	273, 274, 278, -238, 69, 556, 74, 74, 28, 289,
	21, -329, -154, 70, -295, 222, -163, -165, -223, 69,
	90, -223, 492, 23, 74, 487, 70, -172, 99, 97,
	-39, -84, -37, 19, 19, 19, 28, -224, 99, -21,
	306, -164, -295, 223, 69, 23, -86, -169, 493, -233,
	-241, 83, 28, 74, -304, -305, 66, -14, -20, -13,
	-10, -11, -12, 341, 94, -37, 96, 556, -48, 75,
	-8, -46, -45, 75, -48, 280, 91, 281, 72, -126,
	-329, -357, -165, -166, 494, 66, -126, -305, 66, -304,
	66, 10, 9, -170, -37, 556, -37, 99, 97, -40,
	-41, 98, -21, 69, 279, -126, 220, 498, 66, -303,
	208, 203, 206, 29, -303, 556, 99, 556, 195, -37,
	99, 97, -41, -84, -45, -358, -358, 498, 202, 28,
	83, 99, 94, 556, 195, -37, 96, 99, 556, -37,
	195, 99, 556, 195,
}

var yyDef = [...]int{
	35, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, -2, 753, 753, 753, 753,
	753, 753, 852, -2, 613, 0, 0, 0, 0, -2,
	726, 727, 728, 732, 733, 748, 750, 0, 343, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 538, 41,
	0, 0, 64, 65, 1214, 0, 751, 740, 741, 0,
	0, 1760, 2, 1152, 0, 762, 755, 0, 1214, 1214,
	0, 0, 96, 0, 0, 0, 853, 0, 0, 0,
	1212, 1212, 247, 1212, 1212, 0, 1228, 245, 0, 1209,
	1224, 1225, 1226, 0, 0, 0, 1210, 0, 1210, 1210,
	1210, 1210, 1210, 1210, 1210, 0, 672, 880, 1237, 1238,
	1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458,
	1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468,
	1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478,
	1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488,
	1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498,
	1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508,
	1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518,
	1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528,
	1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538,
	1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548,
	1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558,
	1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568,
	1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578,
	1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588,
	1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598,
	1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608,
	1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618,
	1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628,
	1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638,
	1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648,
	1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658,
	1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668,
	1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678,
	1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688,
	1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 0,
	0, 0, 717, 0, 683, 684, 685, 0, 687, 0,
	0, 0, 0, 0, 697, 700, 704, 0, 1152, 1152,
	559, 560, 561, 722, 723, 711, 724, 0, 0, 0,
	0, 0, 833, 322, 324, 0, 344, 0, 347, 350,
	1243, 734, 0, 0, 1268, 1269, 0, 0, 0, 0,
	0, 1610, 190, 261, 192, 192, 192, 192, 192, 192,
	192, 192, 192, 0, 192, 192, 192, 1622, 192, 0,
	192, 192, 192, 192, 192, 260, 250, 251, 252, 0,
	0, 0, 1610, 0, 539, 536, 537, 753, 0, 757,
	0, 1215, 729, 53, 0, 55, 1168, 854, 855, 856,
	1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707,
	1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717,
	1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727,
	1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737,
	1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747,
	1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757,
	1758, 1759, 0, 39, 1158, 0, 0, 765, 763, 764,
	754, 0, 776, 806, 0, 891, 0, 897, 899, -2,
	-2, 0, 940, 941, 942, 943, 944, 945, 0, 0,
	0, 0, 0, 0, 0, 968, 969, 970, 971, 972,
	973, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1702,
	1703, 1704, 1705, 1707, 1708, 1709, 1716, 1717, 1720, 1725,
	1726, 1727, 1728, 1729, 1730, 1731, 1733, 1734, 1739, 1741,
	1743, 1746, 1747, 1748, 1749, 1751, 1752, 1753, 1755, 1756,
	1757, 901, 902, 1122, 1181, 0, 1058, 1059, 1060, 1061,
	1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071,
	1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081,
	1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091,
	1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1113, 0,
	1042, 1042, 1042, 1042, 1042, 1042, 1042, 1042, 1042, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 75, 77,
	880, 81, 1676, 0, 1186, -2, -2, 1188, 0, 0,
	0, -2, -2, -2, -2, 1470, -2, 1122, 0, 97,
	1144, 753, 98, 0, 387, 388, 0, 1483, 583, 1235,
	1236, 1472, 1231, 1232, 1272, 1273, 1274, 1275, 1276, 1277,
	1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287,
	1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297,
	1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307,
	1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317,
	1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327,
	1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337,
	1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347,
	1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357,
	1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367,
	1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377,
	1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387,
	1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397,
	1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407,
	1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417,
	1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427,
	1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437,
	1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447,
	1448, 0, 0, 245, 0, 0, 0, 0, 0, 240,
	0, 0, 0, 1212, 247, 0, 0, 653, 0, 654,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 671, 0, 673, 674, 717, 676, 0, 0,
	1212, 1212, 0, 0, 0, 0, 0, 585, 586, 717,
	717, 717, 717, 714, 0, 714, 694, 714, 712, 713,
	0, 699, 0, 0, 0, 707, 708, 0, 735, 0,
	0, 742, 744, 745, 746, 747, 743, 0, 752, 0,
	0, 0, 326, 0, 0, 346, 328, 0, 331, 332,
	333, 334, 335, 336, 337, 338, 339, 340, 341, 342,
	0, 349, 0, 1241, 1244, 739, 1259, 1260, 0, 1270,
	1271, 196, 196, 0, 0, 0, 0, 159, 192, 0,
	161, 192, 192, 192, 0, 192, 192, 168, 169, 192,
	171, 172, 173, 174, 175, 192, 177, 178, 179, 192,
	192, 182, 192, 192, 185, 186, 187, 188, 189, 259,
	196, 0, 0, 196, 0, 0, 521, 0, 0, 0,
	0, 526, 527, 528, 529, 0, 0, 532, 533, 762,
	43, 60, 0, 758, 759, 0, 0, 0, 54, 0,
	0, 59, 1761, 47, 0, 0, 1153, 1156, 1157, 1145,
	1146, 1149, 0, 0, 760, 766, 767, 756, 0, 777,
	0, 0, 0, 0, 807, 0, 809, 810, 811, 812,
	0, 895, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 919, 920, 921, 922, 923, 924, 925, 898, 0,
	912, 0, 0, 0, 961, 962, 963, 964, 965, 966,
	0, 765, 0, 0, 0, 765, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 765, 765, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 765,
	0, 0, 0, 765, 0, 0, 938, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 765, 0, 1114,
	0, 1025, 1034, 0, 1026, 1035, 1027, 1036, 1028, 0,
	1029, 1037, 1030, 1038, 1031, 1032, 1039, 1033, 0, 934,
	0, 0, 79, 0, 879, 0, 813, 815, 816, 817,
	818, -2, 0, 822, 0, 885, 932, 1237, -2, 0,
	0, 0, 71, 72, 0, 0, 0, 0, 82, 84,
	0, 0, 1676, 1189, 1190, 495, 1203, 1204, 1205, 0,
	1201, 0, 1152, 762, 600, 0, 389, 0, 0, 401,
	484, 414, 415, 416, 477, 418, 477, 477, 0, 477,
	477, 477, 477, 477, 492, 492, 492, 492, 492, 460,
	461, 462, 463, 464, 0, 0, 437, 477, 477, 477,
	441, 467, 468, 469, 470, 471, 472, 473, 474, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 479,
	479, 481, 481, 481, 481, 481, 0, 0, 582, 0,
	1229, 0, 0, 247, -2, 0, -2, 0, 875, 0,
	0, 882, 0, 0, 108, 277, 263, 107, 0, 241,
	246, 242, 243, 244, 0, 0, 0, 0, 254, 668,
	1211, 0, 661, 73, 662, 663, 664, 665, 666, 256,
	667, 881, 1239, 1240, 675, 718, 0, 720, 0, 0,
	833, 680, 681, 682, 587, 688, 689, 690, 696, 717,
	0, 0, 0, 833, 717, 698, 926, 701, 1042, 0,
	725, 737, 736, 0, 749, 0, 323, 325, 327, 345,
	0, 0, 348, 351, 0, 0, 0, 0, 1262, 0,
	1264, 1266, 0, 0, 197, 198, 199, 0, 191, 0,
	214, 262, 0, 160, 0, 194, 162, 163, 164, 192,
	166, 167, 170, 176, 180, 181, 183, 184, 258, 0,
	0, 0, 0, 157, 0, 522, 523, 524, 525, 534,
	531, 765, 0, 0, 730, 731, 56, 0, 0, 1170,
	37, 0, 1159, 0, 0, 0, 0, 1148, 1150, 1151,
	0, 0, 1133, 0, 0, 768, 761, 40, 892, 893,
	894, 896, 913, 0, 915, 917, 808, 778, 0, 1123,
	-2, 903, 904, 928, 929, 930, 0, 0, 0, 0,
	926, 908, 0, 946, 947, 948, 949, 950, 951, 952,
	953, 954, 955, 956, 957, 960, 1056, 1057, 0, 958,
	959, 967, 0, 0, 936, 772, 773, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 934, 931,
	0, 1180, 0, 0, 0, 1007, 0, 0, 943, 1125,
	0, 943, 1125, 0, 0, 0, 0, 0, 0, 0,
	1120, 1117, 0, 0, 1043, 0, 0, 0, 935, 0,
	0, 0, 0, 878, 0, 0, 0, 0, 0, 0,
	857, 0, 0, 860, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 826, 1596, 828, 0, 885, 0, 0,
	0, 934, 889, 0, 889, 76, 889, 78, 0, 884,
	1187, 0, 0, 0, 87, 88, 83, 1191, 0, 1197,
	1198, 1199, 1123, 0, 1158, 765, 386, 601, 603, 606,
	607, 608, 390, 392, 393, 394, 0, -2, 574, 1606,
	1653, -2, -2, 566, 1519, -2, -2, 397, 487, 485,
	486, 417, 0, 492, 492, 477, 477, 477, 477, 446,
	492, 449, 452, 453, 495, 0, 495, 495, 495, 495,
	492, 0, 0, 438, 439, 440, 429, 0, 430, 479,
	432, 0, 433, 434, 435, 436, 580, 581, 0, 0,
	0, 93, 0, 102, -2, 502, 503, 504, 0, 499,
	1213, 103, 0, 279, 280, 0, 217, 0, 248, 249,
	110, 0, 0, 264, 0, 385, 0, 655, 0, 657,
	253, 659, 669, 670, 660, 0, 0, 719, 677, 678,
	679, 889, 0, 0, 691, 715, 716, 714, 717, 695,
	709, 0, 0, 702, 0, 738, 834, 329, 330, 352,
	79, 0, 1242, 1261, 0, 1265, 1267, 0, 200, 202,
	0, 151, 0, 0, 193, 0, 165, 0, 0, 0,
	0, 0, 530, 0, 760, 61, 614, 615, -2, 646,
	1221, 646, 646, 632, 549, 646, 0, 0, 0, 57,
	0, 1169, 0, 0, 48, 0, 1501, 51, 0, 1154,
	1155, 1147, 0, 1206, 1207, 1134, 1135, 94, 769, 914,
	916, 918, 0, 934, 905, 926, 909, 0, 906, 0,
	900, 0, 0, 787, 0, 787, 787, 0, 993, 0,
	994, 1021, 0, 1006, 787, 787, 0, 0, 0, 0,
	0, 0, 1000, 1001, 1002, 1003, 787, 787, 787, 787,
	0, 0, 0, 787, 787, 787, 0, 939, -2, 1004,
	1005, 0, 0, 0, 0, 0, 1049, 0, 0, 1050,
	1015, 0, 0, 0, 0, 0, 1144, 0, 1118, 0,
	0, 1024, 1044, 1045, 1046, 1047, 1048, 1174, 0, 0,
	0, 1163, 0, 889, 1182, 0, 0, 814, 848, 850,
	0, 845, 858, 859, 861, 0, 863, 0, 865, 866,
	835, 821, 933, 823, 0, 0, 0, 0, 885, 832,
	0, 0, 0, 0, 1144, 0, 889, 69, 70, 0,
	85, 86, 0, 0, 92, 496, 497, 0, 216, 0,
	604, 0, 391, 0, 567, 0, 0, 566, 566, 562,
	563, 566, 565, 566, 557, 567, 558, 0, 402, 0,
	404, 405, 406, 407, 408, 0, 0, 0, 0, 0,
	0, 491, 0, 516, 518, 0, 0, 413, 488, 0,
	495, 495, 492, 444, 445, 477, 450, 495, 454, 0,
	455, 456, 457, 458, 495, 0, 475, 0, 0, 431,
	0, 597, 0, 1230, 95, 0, 505, 506, 507, 0,
	549, 549, 549, 0, 281, 282, 283, 876, 0, 218,
	219, 0, 0, 0, 0, 883, 120, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 74, 257, 686, 588,
	589, 833, 693, 927, 703, 705, 706, 492, 0, 1263,
	0, 0, 0, 0, 0, 212, 195, 0, 0, 0,
	0, 158, 0, 768, 0, 0, 566, 0, 633, 634,
	0, 647, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1222, 1223, 0, 0, 0, 550, 0,
	641, 642, 0, 1172, 1171, 0, 49, 50, 1160, 38,
	47, 0, 779, 1124, 0, 907, 0, 910, 787, 937,
	978, 788, 774, 0, 979, 980, 787, 780, 781, 783,
	995, 982, 983, 996, 997, 998, 787, 787, 999, 987,
	986, 985, 988, 0, 0, 787, 991, 990, 992, 974,
	0, 477, 477, 1103, 477, 481, 1106, 477, 1108, 477,
	1111, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1115, 1023, 1121, 0, 62, 0, 1174, 1161,
	1176, 1178, 0, 0, 0, 0, -2, 1447, 0, 839,
	1144, 0, 0, 0, 842, 849, 0, 0, 843, 0,
	844, 862, 864, 819, 0, 0, 824, 0, 0, 0,
	-2, 831, 0, 0, 0, 841, 1152, 890, 68, 89,
	90, 91, 602, 605, 0, 568, 477, 477, 0, 572,
	564, 573, 551, 553, 554, 556, 0, 403, 0, 0,
	411, 412, 489, 0, 515, 517, 519, 520, 478, 442,
	443, 495, 451, 447, 493, 494, 459, 492, 0, 492,
	0, 482, 0, 584, 598, 0, 0, 0, 93, 549,
	0, 0, 0, 0, 225, 0, 221, 0, 0, 0,
	128, 0, 111, 112, 113, 115, 116, 0, 0, 0,
	109, 0, 266, 0, 269, 270, 656, 658, 717, 1253,
	877, 212, 201, 203, 204, 212, 215, 152, 0, 153,
	155, 0, 154, 535, 94, 616, 0, 643, 0, 0,
	1229, 564, 0, -2, 619, 624, 625, 626, 627, 628,
	0, 639, 0, 621, 0, 643, 0, 636, 0, 0,
	0, 52, 45, 94, 94, 975, 911, 977, 0, 981,
	785, 784, 976, 984, 0, 0, 989, 1008, 1100, 492,
	1104, 1105, 1107, 1109, 1110, 1112, 1010, 1009, 0, 0,
	0, 0, 1016, 0, 0, 0, 0, 0, 0, 1119,
	0, 63, 0, 1179, -2, 0, 0, 80, 0, 1152,
	1183, 1184, 1185, 846, 0, 851, 0, 837, 0, 0,
	885, 829, 0, 0, 0, 0, 67, 541, 0, 1149,
	1149, 566, 566, 0, 0, 0, 490, 0, 0, 448,
	495, 476, 495, 0, 0, 599, 0, 93, 95, 0,
	510, 511, 512, 513, 514, 0, 94, 226, 227, 0,
	0, 0, 232, 0, 0, 0, 0, 0, 220, 222,
	223, 224, 146, 129, 130, 0, 0, 0, 0, 121,
	122, 0, 0, 0, 0, 0, 117, 118, 119, 265,
	0, 0, 268, 0, 0, 692, 1255, 1249, 205, 205,
	0, 156, 0, 0, 618, 644, 0, 401, 401, 0,
	566, 566, 635, 0, 1219, 1220, 0, 630, 643, 0,
	0, 0, 1173, 889, 0, 0, 770, 775, 1144, 0,
	0, 0, 1101, 1102, 0, 0, 0, 0, 1017, 1018,
	1019, 1051, 1022, 1116, 0, 1177, 1162, 0, 1166, 0,
	840, 66, 0, 836, 0, 825, 0, 827, 885, 886,
	887, 888, 540, 544, 0, 549, 0, 569, 570, 571,
	552, 555, 0, 398, 0, 465, 466, 480, 483, 0,
	100, 0, 508, 509, 0, 95, 228, 229, 230, 231,
	233, 234, 0, 0, 0, 106, 0, 0, 131, 0,
	0, 0, 0, 141, 142, 143, 144, 145, 123, 124,
	125, 126, 127, 114, 0, 0, 267, 0, 272, 273,
	1216, 1257, -2, 0, 149, 0, 150, 213, 0, 617,
	645, 395, 396, 0, 1229, 0, 620, 629, 631, 0,
	638, 0, 1136, 46, 94, 789, 0, 1040, 1041, 1011,
	1013, 1012, 1014, 0, 0, 0, 0, 1165, 0, 847,
	838, 0, 830, 545, 546, 0, 548, 0, 409, 399,
	400, 0, 542, 93, 0, 0, 235, 236, 237, 238,
	147, 148, 132, 133, 0, 135, 136, 0, 0, 0,
	275, 0, 271, 835, 0, 1249, 0, 1251, 0, 1248,
	0, 206, 889, 0, 0, 0, 637, 0, 649, 0,
	1141, 0, 771, 0, 0, 0, 786, 1020, 0, 0,
	0, 1175, -2, 0, 868, 0, 547, 0, 398, 99,
	543, 101, 284, 93, 355, 356, 357, 358, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 383, 384, 0, 0, 0, 0, 0, 137,
	0, 139, 140, 274, 0, 36, 0, 1256, 0, 1254,
	0, 0, 1250, 0, 1136, 542, 0, 0, 648, 0,
	0, 799, 0, 0, 782, 790, 0, 793, 0, 0,
	0, 804, 0, 791, 1052, 0, 1055, 0, 0, 0,
	0, 410, 93, 0, 0, 105, 0, 0, 1231, 0,
	0, 311, 312, 313, 1233, 0, 353, 134, 138, 276,
	1217, 1218, 1258, 0, 0, 0, 1141, 622, 0, 542,
	650, 0, 44, 0, 1142, 1143, 1137, 1138, 1140, 0,
	794, 795, 796, 797, 798, 0, 1053, 0, 869, 870,
	0, 0, 0, 95, 285, 286, 0, 295, 0, 0,
	0, 0, 0, 309, 0, 0, 1252, 1246, 207, 208,
	209, 211, 799, 542, 640, 0, 800, 801, 0, 0,
	0, 805, 0, 0, 0, 0, 575, 0, 0, 0,
	296, 0, 0, 0, 0, 0, 0, 1234, 239, 354,
	0, 42, 623, 0, 0, 0, 1139, 792, 0, 867,
	871, 0, 0, 872, 576, 577, 0, 93, 287, 288,
	289, 290, 291, 0, 293, 0, 0, 0, 305, 306,
	307, 0, 314, 316, 317, 318, 0, 320, 321, 310,
	210, 0, 802, 803, 1054, 0, 0, 578, 0, 579,
	0, 0, 0, 104, 0, 0, 0, 0, 0, 0,
	302, 0, 308, 0, 319, 0, 0, 873, 0, 590,
	592, 593, 0, 0, 591, 0, 0, 297, 298, 0,
	0, 0, 303, 0, 315, 651, 652, 874, 594, 595,
	596, 292, 294, 0, 300, 0, 0, 0, 0, 0,
	299, 0, 304, 301,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 92, 3, 3, 3, 127, 119, 3,
	68, 70, 124, 122, 69, 123, 177, 125, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 556,
	101, 100, 102, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 129, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 118, 3, 130,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 82, 83, 84, 85,
	86, 87, 88, 89, 90, 91, 93, 94, 95, 96,
	97, 98, 99, 103, 104, 105, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 116, 117, 120, 121,
	126, 128, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 274, 275,
}

var yyTok3 = [...]int{
	57600, 276, 57601, 277, 57602, 278, 57603, 279, 57604, 280,
	57605, 281, 57606, 282, 57607, 283, 57608, 284, 57609, 285,
	57610, 286, 57611, 287, 57612, 288, 57613, 289, 57614, 290,
	57615, 291, 57616, 292, 57617, 293, 57618, 294, 57619, 295,
	57620, 296, 57621, 297, 57622, 298, 57623, 299, 57624, 300,
	57625, 301, 57626, 302, 57627, 303, 57628, 304, 57629, 305,
	57630, 306, 57631, 307, 57632, 308, 57633, 309, 57634, 310,
	57635, 311, 57636, 312, 57637, 313, 57638, 314, 57639, 315,
	57640, 316, 57641, 317, 57642, 318, 57643, 319, 57644, 320,
	57645, 321, 57646, 322, 57647, 323, 57648, 324, 57649, 325,
	57650, 326, 57651, 327, 57652, 328, 57653, 329, 57654, 330,
	57655, 331, 57656, 332, 57657, 333, 57658, 334, 57659, 335,
	57660, 336, 57661, 337, 57662, 338, 57663, 339, 57664, 340,
	57665, 341, 57666, 342, 57667, 343, 57668, 344, 57669, 345,
	57670, 346, 57671, 347, 57672, 348, 57673, 349, 57674, 350,
	57675, 351, 57676, 352, 57677, 353, 57678, 354, 57679, 355,
	57680, 356, 57681, 357, 57682, 358, 57683, 359, 57684, 360,
	57685, 361, 57686, 362, 57687, 363, 57688, 364, 57689, 365,
	57690, 366, 57691, 367, 57692, 368, 57693, 369, 57694, 370,
	57695, 371, 57696, 372, 57697, 373, 57698, 374, 57699, 375,
	57700, 376, 57701, 377, 57702, 378, 57703, 379, 57704, 380,
	57705, 381, 57706, 382, 57707, 383, 57708, 384, 57709, 385,
	57710, 386, 57711, 387, 57712, 388, 57713, 389, 57714, 390,
	57715, 391, 57716, 392, 57717, 393, 57718, 394, 57719, 395,
	57720, 396, 57721, 397, 57722, 398, 57723, 399, 57724, 400,
	57725, 401, 57726, 402, 57727, 403, 57728, 404, 57729, 405,
	57730, 406, 57731, 407, 57732, 408, 57733, 409, 57734, 410,
	57735, 411, 57736, 412, 57737, 413, 57738, 414, 57739, 415,
	57740, 416, 57741, 417, 57742, 418, 57743, 419, 57744, 420,
	57745, 421, 57746, 422, 57747, 423, 57748, 424, 57749, 425,
	57750, 426, 57751, 427, 57752, 428, 57753, 429, 57754, 430,
	57755, 431, 57756, 432, 57757, 433, 57758, 434, 57759, 435,
	57760, 436, 57761, 437, 57762, 438, 57763, 439, 57764, 440,
	57765, 441, 57766, 442, 57767, 443, 57768, 444, 57769, 445,
	57770, 446, 57771, 447, 57772, 448, 57773, 449, 57774, 450,
	57775, 451, 57776, 452, 57777, 453, 57778, 454, 57779, 455,
	57780, 456, 57781, 457, 57782, 458, 57783, 459, 57784, 460,
	57785, 461, 57786, 462, 57787, 463, 57788, 464, 57789, 465,
	57790, 466, 57791, 467, 57792, 468, 57793, 469, 57794, 470,
	57795, 471, 57796, 472, 57797, 473, 57798, 474, 57799, 475,
	57800, 476, 57801, 477, 57802, 478, 57803, 479, 57804, 480,
	57805, 481, 57806, 482, 57807, 483, 57808, 484, 57809, 485,
	57810, 486, 57811, 487, 57812, 488, 57813, 489, 57814, 490,
	57815, 491, 57816, 492, 57817, 493, 57818, 494, 57819, 495,
	57820, 496, 57821, 497, 57822, 498, 57823, 499, 57824, 500,
	57825, 501, 57826, 502, 57827, 503, 57828, 504, 57829, 505,
	57830, 506, 57831, 507, 57832, 508, 57833, 509, 57834, 510,
	57835, 511, 57836, 512, 57837, 513, 57838, 514, 57839, 515,
	57840, 516, 57841, 517, 57842, 518, 57843, 519, 57844, 520,
	57845, 521, 57846, 522, 57847, 523, 57848, 524, 57849, 525,
	57850, 526, 57851, 527, 57852, 528, 57853, 529, 57854, 530,
	57855, 531, 57856, 532, 57857, 533, 57858, 534, 57859, 535,
	57860, 536, 57861, 537, 57862, 538, 57863, 539, 57864, 540,
	57865, 541, 57866, 542, 57867, 543, 57868, 544, 57869, 545,
	57870, 546, 57871, 547, 57872, 548, 57873, 549, 57874, 550,
	57875, 551, 57876, 552, 57877, 553, 57878, 554, 57879, 555,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:520
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:524
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:531
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:566
		{
			setParseTree(yylex, nil)
		}
	case 36:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:572
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 37:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:578
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			if err := yyDollar[1].selStmt.SetInto(yyDollar[5].into); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 38:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:589
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:595
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 40:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:605
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:612
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 42:
		yyDollar = yyS[yypt-14 : yypt+1]
//line sql.y:616
		{
			yyVAL.selStmt = &Select{With: yyDollar[1].with, Comments: Comments(yyDollar[3].bytes2), Cache: yyDollar[4].str, Distinct: yyDollar[5].str, Hints: yyDollar[7].str, SelectExprs: yyDollar[8].selectExprs, From: yyDollar[10].tableExprs, Where: NewWhere(WhereStr, yyDollar[11].expr), GroupBy: GroupBy(yyDollar[12].exprs), Having: NewWhere(HavingStr, yyDollar[13].expr), Window: yyDollar[14].window}
			if yyDollar[6].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 43:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:623
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 44:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:629
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr), Window: yyDollar[13].window, Into: yyDollar[8].into}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 45:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:637
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:641
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:650
		{
			yyVAL.into = nil
		}
	case 48:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:654
		{
			yyVAL.into = &Into{Variables: yyDollar[2].variables}
		}
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:658
		{
			yyVAL.into = &Into{Outfile: string(yyDollar[3].bytes)}
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:662
		{
			yyVAL.into = &Into{Dumpfile: string(yyDollar[3].bytes)}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:668
		{
			yyVAL.variables = Variables{yyDollar[1].colIdent}
		}
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:672
		{
			yyVAL.variables = append(yyVAL.variables, yyDollar[3].colIdent)
		}
	case 53:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:678
		{
			yyVAL.with = &With{Ctes: yyDollar[2].tableExprs, Recursive: false}
		}
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:682
		{
			yyVAL.with = &With{Ctes: yyDollar[3].tableExprs, Recursive: true}
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:688
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:692
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 57:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:698
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[4].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[2].columns}
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:704
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:712
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:718
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:726
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:732
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].assignExprs)
			yyVAL.statement = ins
		}
	case 63:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:744
		{
			cols := make(Columns, 0, len(yyDollar[7].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].assignExprs))
			for _, updateList := range yyDollar[7].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].assignExprs)}
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:756
		{
			yyVAL.str = InsertStr
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:760
		{
			yyVAL.str = ReplaceStr
		}
	case 66:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:766
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].assignExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 67:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:772
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 68:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:776
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 69:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:780
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 70:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:784
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:789
		{
		}
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:790
		{
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:794
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:798
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:804
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:808
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:814
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:818
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 79:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:823
		{
			yyVAL.partitions = nil
		}
	case 80:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:827
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 81:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:833
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 82:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:837
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 83:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:844
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:853
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:857
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:863
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 87:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:867
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 88:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:871
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 89:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:877
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:881
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 91:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:885
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:889
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:894
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 94:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:899
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 95:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:904
		{
			yyVAL.boolean = yySpecialCommentMode(yylex)
		}
	case 96:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:910
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:919
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:924
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 99:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:929
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 100:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:933
		{
			yyDollar[2].viewSpec.ViewName = yyDollar[4].tableName.ToViewName()
			yyDollar[2].viewSpec.ViewExpr = yyDollar[8].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[2].viewSpec, SpecialCommentMode: yyDollar[7].boolean, SubStatementPositionStart: yyDollar[6].int, SubStatementPositionEnd: yyDollar[9].int - 1}
		}
	case 101:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:939
		{
			yyDollar[4].viewSpec.ViewName = yyDollar[6].tableName.ToViewName()
			yyDollar[4].viewSpec.ViewExpr = yyDollar[10].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[4].viewSpec, SpecialCommentMode: yyDollar[9].boolean, SubStatementPositionStart: yyDollar[8].int, SubStatementPositionEnd: yyDollar[11].int - 1, OrReplace: true}
		}
	case 102:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:945
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 103:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:953
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 104:
		yyDollar = yyS[yypt-16 : yypt+1]
//line sql.y:961
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName, Definer: yyDollar[2].str, Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[15].statement}, SpecialCommentMode: yyDollar[14].boolean, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[16].int - 1}
		}
	case 105:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:965
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName, Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[11].statement}, SpecialCommentMode: yyDollar[10].boolean, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[12].int - 1}
		}
	case 106:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:969
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].tlsOptionItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].accountLimitItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].passLockItems)
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames, TLSOptions: tlsOptions, AccountLimits: accountLimits, PasswordOptions: passwordOptions, Locked: locked, Attribute: yyDollar[9].str}
		}
	case 107:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:988
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 108:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:997
		{
			yyVAL.accountNames = nil
		}
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1001
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 110:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1006
		{
			yyVAL.tlsOptionItems = nil
		}
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1010
		{
			yyVAL.tlsOptionItems = nil
		}
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1014
		{
			yyVAL.tlsOptionItems = yyDollar[2].tlsOptionItems
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1020
		{
			yyVAL.tlsOptionItems = []TLSOptionItem{yyDollar[1].tlsOptionItem}
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1024
		{
			yyVAL.tlsOptionItems = append(yyDollar[1].tlsOptionItems, yyDollar[3].tlsOptionItem)
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1030
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1034
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1038
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1042
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1046
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 120:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1051
		{
			yyVAL.accountLimitItems = nil
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1055
		{
			yyVAL.accountLimitItems = yyDollar[2].accountLimitItems
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1061
		{
			yyVAL.accountLimitItems = []AccountLimitItem{yyDollar[1].accountLimitItem}
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1065
		{
			yyVAL.accountLimitItems = append(yyDollar[1].accountLimitItems, yyDollar[2].accountLimitItem)
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1071
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1075
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1079
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1083
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 128:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1088
		{
			yyVAL.passLockItems = nil
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1092
		{
			yyVAL.passLockItems = yyDollar[1].passLockItems
		}
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1098
		{
			yyVAL.passLockItems = []PassLockItem{yyDollar[1].passLockItem}
		}
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1102
		{
			yyVAL.passLockItems = append(yyDollar[1].passLockItems, yyDollar[2].passLockItem)
		}
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1108
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1112
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 134:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1116
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1120
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1124
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 137:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1128
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 138:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1132
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 139:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1136
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 140:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1140
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1144
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1148
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1152
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1156
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1160
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 146:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1165
		{
			yyVAL.str = ""
		}
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1169
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.str = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1174
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 149:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1180
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 150:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1185
		{
			yyVAL.statement = &GrantPrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 151:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1189
		{
			yyVAL.statement = &GrantRole{Roles: yyDollar[2].accountNames, To: yyDollar[4].accountNames, WithAdminOption: yyDollar[5].boolean}
		}
	case 152:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1193
		{
			yyVAL.statement = &GrantProxy{On: yyDollar[4].accountName, To: yyDollar[6].accountNames, WithGrantOption: yyDollar[7].boolean}
		}
	case 153:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1199
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &RevokePrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 154:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1204
		{
			yyVAL.statement = &RevokePrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 155:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1208
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[7].accountNames}
		}
	case 156:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1212
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[8].accountNames}
		}
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1216
		{
			yyVAL.statement = &RevokeRole{Roles: yyDollar[2].accountNames, From: yyDollar[4].accountNames}
		}
	case 158:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1220
		{
			yyVAL.statement = &RevokeProxy{On: yyDollar[4].accountName, From: yyDollar[6].accountNames}
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1226
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].strs}
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1230
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].strs}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1234
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].strs}
		}
	case 162:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1238
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].strs}
		}
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1242
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].strs}
		}
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1246
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].strs}
		}
	case 165:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1250
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].strs}
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1254
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].strs}
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1258
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].strs}
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1262
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].strs}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1266
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].strs}
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1270
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].strs}
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1274
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].strs}
		}
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1278
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].strs}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1282
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].strs}
		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1286
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].strs}
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1290
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].strs}
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1294
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].strs}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1298
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].strs}
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1302
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].strs}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1306
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].strs}
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1310
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].strs}
		}
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1314
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].strs}
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1318
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].strs}
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1322
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].strs}
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1326
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].strs}
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1330
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].strs}
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1334
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].strs}
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1338
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].strs}
		}
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1342
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].strs}
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1346
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].strs}
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1352
		{
			yyVAL.grantPrivileges = []Privilege{yyDollar[1].grantPrivilege}
		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1356
		{
			yyVAL.grantPrivileges = append(yyDollar[1].grantPrivileges, yyDollar[3].grantPrivilege)
		}
	case 192:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1361
		{
			yyVAL.strs = nil
		}
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1365
		{
			yyVAL.strs = yyDollar[2].strs
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1371
		{
			yyVAL.strs = []string{yyDollar[1].colIdent.String()}
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1375
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].colIdent.String())
		}
	case 196:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1380
		{
			yyVAL.grantObjectType = GrantObjectType_Any
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1384
		{
			yyVAL.grantObjectType = GrantObjectType_Table
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1388
		{
			yyVAL.grantObjectType = GrantObjectType_Function
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1392
		{
			yyVAL.grantObjectType = GrantObjectType_Procedure
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1398
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1402
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1406
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].colIdent.String()}
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1410
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: "*"}
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1414
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: yyDollar[3].colIdent.String()}
		}
	case 205:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1419
		{
			yyVAL.grantAssumption = nil
		}
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1423
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 207:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1427
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 208:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1431
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].accountName, Roles: nil}
		}
	case 209:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1435
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].accountName, Roles: nil}
		}
	case 210:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1439
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].accountName, Roles: yyDollar[7].accountNames}
		}
	case 211:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1443
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].accountName, Roles: yyDollar[5].accountNames}
		}
	case 212:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1448
		{
			yyVAL.boolean = false
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1452
		{
			yyVAL.boolean = true
		}
	case 214:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1457
		{
			yyVAL.boolean = false
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1461
		{
			yyVAL.boolean = true
		}
	case 216:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1468
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 217:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1480
		{
			yyVAL.procedureParams = nil
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1484
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1490
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1494
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1500
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[1].colIdent.String(), Type: yyDollar[2].columnType}
		}
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1504
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1508
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1512
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 225:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1517
		{
			yyVAL.characteristics = nil
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1521
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1527
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1531
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1537
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1541
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1545
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1549
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1553
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1557
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1561
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1565
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1569
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1573
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 239:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1579
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1585
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: "", Definer: yyDollar[1].str, Security: yyDollar[2].str}
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1589
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: yyDollar[1].str, Definer: yyDollar[2].str, Security: yyDollar[3].str}
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1595
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1599
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1603
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 245:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1608
		{
			yyVAL.str = ""
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1612
		{
			yyVAL.str = yyDollar[3].accountName.String()
		}
	case 247:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1617
		{
			yyVAL.str = ""
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1621
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 249:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1625
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1631
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1635
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1639
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1645
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 254:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1653
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1657
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1663
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1667
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1673
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1681
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1689
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1699
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1703
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1709
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1713
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 265:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1717
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 266:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1721
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 267:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1725
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 268:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1731
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 269:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1735
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1739
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 271:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1743
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 272:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1747
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 273:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1751
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 274:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1757
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1761
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 276:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1765
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1771
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1775
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1781
		{
			yyVAL.str = BeforeStr
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1785
		{
			yyVAL.str = AfterStr
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1791
		{
			yyVAL.str = InsertStr
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1795
		{
			yyVAL.str = UpdateStr
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1799
		{
			yyVAL.str = DeleteStr
		}
	case 284:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1804
		{
			yyVAL.triggerOrder = nil
		}
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1808
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1812
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1818
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 292:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1828
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 293:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1834
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 294:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1838
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1844
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 296:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1848
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 297:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1854
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 298:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1860
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 299:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1865
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 300:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1870
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 301:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1876
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1884
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1888
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 304:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1894
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 305:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1900
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 306:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1904
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 307:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1908
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 308:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1912
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1916
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 310:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1920
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1927
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1931
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1935
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1941
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1945
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1951
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1955
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1959
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1963
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1967
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1971
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1977
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 323:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1981
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1985
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 325:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1989
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1995
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1999
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2005
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2009
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2015
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2021
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2025
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2029
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2033
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2037
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2041
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2045
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2049
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2053
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2057
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2061
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2065
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2071
		{
			yyVAL.statement = &Resignal{}
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2075
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 345:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2079
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2083
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2087
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 348:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2091
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2097
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2102
		{
			yyVAL.exprs = nil
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2106
		{
			yyVAL.exprs = nil
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2110
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2116
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2120
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2126
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 385:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2161
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
		}
	case 386:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2177
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2184
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2189
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2194
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2200
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 391:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2204
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2209
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2213
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2217
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2223
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2231
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2241
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 398:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2250
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2254
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2258
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2263
		{
			yyVAL.columnType = ColumnType{}
		}
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2267
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2276
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2285
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2294
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2303
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2312
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2321
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 409:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2330
		{
			opt := ColumnType{GeneratedExpr: yyDollar[4].expr, Stored: yyDollar[6].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 410:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2339
		{
			opt := ColumnType{GeneratedExpr: yyDollar[6].expr, Stored: yyDollar[8].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2348
		{
			opt := ColumnType{SRID: NewIntVal(yyDollar[3].bytes)}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2357
		{
			opt := ColumnType{Path: string(yyDollar[3].bytes)}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2368
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2379
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2384
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2390
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2394
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2398
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2402
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2406
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2410
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2414
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2418
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2422
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2426
		{
			yyVAL.columnType = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 429:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2432
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 430:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2438
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2444
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2450
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 433:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2456
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2462
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 435:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2468
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2474
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2482
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2486
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2490
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2494
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2498
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2504
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 443:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2508
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2512
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2516
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2520
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2524
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 448:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2528
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2532
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2536
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2540
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2544
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2548
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2552
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2556
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2560
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2564
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2568
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 459:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2572
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2576
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2580
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2584
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2588
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2592
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 465:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2596
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 466:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2601
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2607
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2611
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2615
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2619
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2623
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2627
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2631
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2635
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2641
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2646
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 477:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2651
		{
			yyVAL.sqlVal = nil
		}
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2655
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 479:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2660
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 480:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2664
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 481:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2672
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2676
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 483:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2682
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 484:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2690
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2694
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2698
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2703
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2707
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2713
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2719
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2725
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 492:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2730
		{
			yyVAL.str = ""
		}
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2734
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2738
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2743
		{
			yyVAL.str = ""
		}
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2747
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2751
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2756
		{
			yyVAL.boolean = false
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2760
		{
			yyVAL.boolean = true
		}
	case 500:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2765
		{
			yyVAL.charsetCollates = nil
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2769
		{
			yyVAL.charsetCollates = yyDollar[1].charsetCollates
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2775
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2779
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2783
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2787
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 506:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2791
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 507:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2795
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 508:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2801
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 509:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2805
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 510:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2809
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 511:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2813
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 512:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2819
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 513:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2823
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 514:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2829
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 515:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2835
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2839
		{
			yyVAL.colKeyOpt = colKey
		}
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2843
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2847
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2851
		{
			yyVAL.colKeyOpt = colKeyFulltextKey
		}
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2857
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 521:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2863
		{
			yyVAL.statement = &Flush{Type: yyDollar[2].str, Option: yyDollar[3].flushOption}
		}
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2869
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2873
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2877
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2881
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2885
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2889
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2893
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2897
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2901
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].str}
		}
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2905
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2909
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2913
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 534:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2918
		{
			yyVAL.str = ""
		}
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2920
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2924
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2926
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 538:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2929
		{
			yyVAL.str = ""
		}
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2931
		{
			yyVAL.str = yyDollar[1].str
		}
	case 540:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2935
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 541:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2939
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 542:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2944
		{
			yyVAL.indexOptions = nil
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2948
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2954
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2958
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2964
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2968
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2973
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 549:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2979
		{
			yyVAL.str = ""
		}
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2983
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2991
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 552:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2995
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2999
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3003
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true}
		}
	case 555:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3007
		{
			var name string
			name = yyDollar[2].str
			if name == "" {
				name = yyDollar[5].str
			}
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].str), Name: NewColIdent(name), Unique: true}
		}
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3016
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3020
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3024
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3030
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3034
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3038
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3044
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3048
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 564:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3053
		{
			yyVAL.str = ""
		}
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3057
		{
			yyVAL.str = yyDollar[1].str
		}
	case 566:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3062
		{
			yyVAL.str = ""
		}
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3066
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3072
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3076
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3082
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3086
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3092
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3096
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3100
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 575:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3106
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 576:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3110
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 577:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3114
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 578:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3118
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 579:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3122
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3128
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3132
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 582:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3136
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3140
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 584:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3146
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3152
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3156
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 587:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3161
		{
			yyVAL.str = ""
		}
	case 588:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3165
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3169
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3175
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3181
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3187
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3191
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3195
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3199
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3203
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 597:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3208
		{
			yyVAL.boolean = true
		}
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3212
		{
			yyVAL.boolean = true
		}
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3216
		{
			yyVAL.boolean = false
		}
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3221
		{
			yyVAL.str = ""
		}
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3225
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3229
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 603:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3237
		{
			yyVAL.str = yyDollar[1].str
		}
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3241
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3245
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3251
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3255
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3259
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 609:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3264
		{
			yyVAL.str = ""
		}
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3268
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3273
		{
			yyVAL.str = string("")
		}
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3277
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 614:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3286
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3299
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3303
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 617:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3309
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3316
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3323
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 620:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3327
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3331
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 622:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3336
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 623:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3340
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3344
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3349
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3354
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3359
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3364
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 629:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3368
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 630:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3372
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 631:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3379
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3385
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3389
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3395
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3401
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3406
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 637:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3410
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 638:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3414
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3418
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 640:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3424
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[7].indexColumns, Options: yyDollar[9].indexOptions}
			yyVAL.ddl = ddl
		}
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3430
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3434
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 643:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3439
		{
			yyVAL.columnOrder = nil
		}
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3443
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3447
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 646:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3452
		{
		}
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3454
		{
		}
	case 648:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3458
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3464
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3468
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 651:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3474
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 652:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3478
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3484
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3488
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3494
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 656:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3498
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3506
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 658:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3510
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 659:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3516
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 660:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3524
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 661:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3528
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3536
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3544
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3552
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName}, IfExists: exists}
		}
	case 665:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3560
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName}, IfExists: exists}
		}
	case 666:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3568
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 667:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3576
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 668:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3585
		{

		}
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3589
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3593
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3599
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3603
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3609
		{
			yyVAL.statement = &Analyze{Tables: yyDollar[3].tableNames}
		}
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3615
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 675:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3620
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3624
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 677:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3628
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 678:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3632
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 679:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3636
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 680:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3641
		{
			yyVAL.statement = &Show{Type: CreateProcedureStr, Table: yyDollar[4].tableName}
		}
	case 681:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3645
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 682:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3649
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3653
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3657
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3661
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 686:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3665
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3669
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 688:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3673
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 689:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3677
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 690:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3681
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 691:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3685
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 692:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3689
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, AsOf: yyDollar[7].expr, Filter: yyDollar[8].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, Table: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 693:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3694
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3699
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 695:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3703
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 696:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3707
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3711
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3715
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3721
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3729
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3733
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 702:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3738
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 703:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3742
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3747
		{
			yyVAL.statement = &ShowPrivileges{}
		}
	case 705:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3751
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 706:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3755
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3759
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3763
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3769
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 710:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3775
		{
			yyVAL.boolean = false
		}
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3779
		{
			yyVAL.boolean = true
		}
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3785
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3789
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 714:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3795
		{
			yyVAL.str = ""
		}
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3799
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3803
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 717:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3809
		{
			yyVAL.showFilter = nil
		}
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3813
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3817
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[3].bytes)}
		}
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3821
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 721:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3827
		{
			yyVAL.str = ""
		}
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3831
		{
			yyVAL.str = SessionStr
		}
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3835
		{
			yyVAL.str = GlobalStr
		}
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3841
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 725:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3845
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: yyDollar[2].tableIdent.v + "/" + yyDollar[4].tableIdent.v}}
		}
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3849
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3855
		{
			yyVAL.statement = &Begin{}
		}
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3859
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3865
		{
			yyVAL.statement = &Begin{}
		}
	case 730:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3869
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3873
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3879
		{
			yyVAL.statement = &Commit{}
		}
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3885
		{
			yyVAL.statement = &Rollback{}
		}
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3891
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3897
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3901
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3905
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 738:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3909
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3915
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3920
		{
		}
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3921
		{
		}
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3925
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3929
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3935
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 748:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3943
		{
			yyVAL.str = ""
		}
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3947
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3958
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[3].expr}
			yyVAL.statement = &Show{Type: "columns", Table: yyDollar[2].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 753:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3964
		{
			setAllowComments(yylex, true)
		}
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3968
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 755:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3974
		{
			yyVAL.bytes2 = nil
		}
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3978
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3984
		{
			yyVAL.str = UnionStr
		}
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3988
		{
			yyVAL.str = UnionAllStr
		}
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3992
		{
			yyVAL.str = UnionDistinctStr
		}
	case 760:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3997
		{
			yyVAL.byt = 0
		}
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4001
		{
			yyVAL.byt = 1
		}
	case 762:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4006
		{
			yyVAL.str = ""
		}
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4010
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4014
		{
			yyVAL.str = SQLCacheStr
		}
	case 765:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4019
		{
			yyVAL.str = ""
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4023
		{
			yyVAL.str = ""
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4027
		{
			yyVAL.str = DistinctStr
		}
	case 768:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4032
		{
			yyVAL.str = ""
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4036
		{
			yyVAL.str = StraightJoinHint
		}
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4042
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 771:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4050
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4061
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4065
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4069
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 775:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4073
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4079
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4083
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4087
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 779:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4091
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4097
		{
			yyVAL.over = &Over{NameRef: yyDollar[2].colIdent}
		}
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4101
		{
			yyVAL.over = (*Over)(yyDollar[2].windowDef)
		}
	case 782:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4107
		{
			yyVAL.windowDef = &WindowDef{NameRef: yyDollar[2].colIdent, PartitionBy: yyDollar[3].exprs, OrderBy: yyDollar[4].orderBy, Frame: yyDollar[5].frame}
		}
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4112
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4115
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4120
		{
			yyVAL.exprs = nil
		}
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4124
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 787:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4129
		{
			yyVAL.over = nil
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4133
		{
			yyVAL.over = yyDollar[1].over
		}
	case 789:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4138
		{
			yyVAL.frame = nil
		}
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4142
		{
			yyVAL.frame = &Frame{Unit: RowsUnit, Extent: yyDollar[2].frameExtent}
		}
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4146
		{
			yyVAL.frame = &Frame{Unit: RangeUnit, Extent: yyDollar[2].frameExtent}
		}
	case 792:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4153
		{
			startBound := yyDollar[2].frameBound
			endBound := yyDollar[4].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound, End: endBound}
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4176
		{
			startBound := yyDollar[1].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound}
		}
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4191
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedPreceding}
		}
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4195
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedFollowing}
		}
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4199
		{
			yyVAL.frameBound = &FrameBound{Type: CurrentRow}
		}
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4203
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprPreceding,
			}
		}
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4210
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprFollowing,
			}
		}
	case 799:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4218
		{
			yyVAL.window = nil
		}
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4221
		{
			yyVAL.window = yyDollar[2].window
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4227
		{
			yyVAL.window = Window{yyDollar[1].windowDef}
		}
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4230
		{
			yyVAL.window = append(yyDollar[1].window, yyDollar[3].windowDef)
		}
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4236
		{
			def := yyDollar[3].windowDef
			def.Name = yyDollar[1].colIdent
			yyVAL.windowDef = def
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4245
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4249
		{
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 806:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4254
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4258
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4262
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4268
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4272
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4276
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4280
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4286
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4290
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4301
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 819:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4305
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4315
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4321
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4328
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4334
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 825:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4338
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4344
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 827:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4349
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4360
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 829:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4364
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 830:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4368
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4372
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4376
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 833:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4387
		{
			yyVAL.expr = nil
		}
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4391
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 835:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4396
		{
			yyVAL.columns = nil
		}
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4400
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4406
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4410
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4416
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4420
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 841:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4426
		{
			yyVAL.tableExpr = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].selectExprs}
		}
	case 842:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4440
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 843:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4444
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 844:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4448
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4452
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 846:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4458
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 847:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4460
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 848:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4464
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4466
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 850:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4470
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4472
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 852:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4475
		{
			yyVAL.empty = struct{}{}
		}
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4477
		{
			yyVAL.empty = struct{}{}
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4482
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4486
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4492
		{
			yyVAL.str = JoinStr
		}
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4496
		{
			yyVAL.str = JoinStr
		}
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4500
		{
			yyVAL.str = JoinStr
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4506
		{
			yyVAL.str = StraightJoinStr
		}
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4512
		{
			yyVAL.str = LeftJoinStr
		}
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4516
		{
			yyVAL.str = LeftJoinStr
		}
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4520
		{
			yyVAL.str = RightJoinStr
		}
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4524
		{
			yyVAL.str = RightJoinStr
		}
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4530
		{
			yyVAL.str = NaturalJoinStr
		}
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4534
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 867:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:4544
		{
			yyVAL.tableExpr = &JSONTableExpr{Data: yyDollar[3].bytes, Path: string(yyDollar[5].bytes), Columns: yyDollar[8].TableSpec, Alias: yyDollar[12].tableIdent}
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4550
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4555
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4563
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4575
		{
			yyVAL.columnType = ColumnType{Path: string(yyDollar[2].bytes)}
		}
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4579
		{
			yyVAL.columnType = ColumnType{Path: string(yyDollar[3].bytes)}
		}
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4586
		{

		}
	case 874:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4590
		{

		}
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4615
		{
			yyVAL.triggerName = TriggerName{Name: yyDollar[1].colIdent}
		}
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4619
		{
			yyVAL.triggerName = TriggerName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4625
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4631
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4635
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4641
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4645
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4651
		{
			yyVAL.procedureName = ProcedureName{Name: yyDollar[1].colIdent}
		}
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4655
		{
			yyVAL.procedureName = ProcedureName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4661
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 885:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4666
		{
			yyVAL.indexHints = nil
		}
	case 886:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4670
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 887:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4674
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 888:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4678
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 889:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4683
		{
			yyVAL.expr = nil
		}
	case 890:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4687
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4693
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4697
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4701
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 894:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4705
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 895:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4709
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4713
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4717
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 898:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4721
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 899:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4727
		{
			yyVAL.str = ""
		}
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4731
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4737
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4741
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4747
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4751
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 905:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4755
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 906:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4759
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 907:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4763
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4767
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 909:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4771
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 910:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4775
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 911:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4779
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 912:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4783
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4789
		{
			yyVAL.str = IsNullStr
		}
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4793
		{
			yyVAL.str = IsNotNullStr
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4797
		{
			yyVAL.str = IsTrueStr
		}
	case 916:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4801
		{
			yyVAL.str = IsNotTrueStr
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4805
		{
			yyVAL.str = IsFalseStr
		}
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4809
		{
			yyVAL.str = IsNotFalseStr
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4815
		{
			yyVAL.str = EqualStr
		}
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4819
		{
			yyVAL.str = LessThanStr
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4823
		{
			yyVAL.str = GreaterThanStr
		}
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4827
		{
			yyVAL.str = LessEqualStr
		}
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4831
		{
			yyVAL.str = GreaterEqualStr
		}
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4835
		{
			yyVAL.str = NotEqualStr
		}
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4839
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 926:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4844
		{
			yyVAL.expr = nil
		}
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4848
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4854
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4858
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4862
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4868
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4874
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4878
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 934:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4884
		{
			yyVAL.selectExprs = nil
		}
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4891
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4895
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4901
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4905
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4911
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4915
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4919
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4923
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4927
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4931
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4935
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4939
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4943
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4947
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4951
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4955
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4959
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4963
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4967
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4971
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4975
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4979
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4983
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4987
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4991
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 961:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4995
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 962:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4999
		{
			yyVAL.expr = &UnaryExpr{Operator: yyDollar[1].str, Expr: yyDollar[2].expr}
		}
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5003
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 964:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5011
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5025
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5029
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5033
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 974:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5053
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 975:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5057
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 976:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5067
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 977:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5071
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 978:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5075
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 979:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5079
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 980:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5083
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 981:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5087
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 982:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5091
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 983:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5095
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 984:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5099
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 985:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5103
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 986:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5107
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 987:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5111
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 988:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5115
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 989:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5119
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 990:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5123
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 991:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5127
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 992:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5131
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 993:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5140
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 994:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5144
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 995:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5148
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 996:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5152
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 997:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5156
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 998:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5160
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 999:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5164
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1000:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5168
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1001:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5172
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1002:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5176
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1003:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5180
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1004:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5191
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1005:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5195
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1006:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5199
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5203
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1008:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5207
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 1009:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5211
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 1010:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5215
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 1011:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5219
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1012:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5223
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1013:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5227
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1014:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5231
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1015:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5235
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 1016:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5239
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 1017:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5243
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 1018:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5247
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 1019:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5251
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 1020:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5255
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 1021:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5259
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1022:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5263
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 1023:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5267
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 1024:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5271
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5281
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1026:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5285
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1027:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5289
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1028:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5294
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5299
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1030:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5304
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1031:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5310
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1032:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5315
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1033:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5319
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1034:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5324
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1035:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5328
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1036:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5332
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1037:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5337
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1038:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5342
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1039:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5347
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1040:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5351
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1041:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5355
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5366
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1045:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5376
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1046:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5380
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1047:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5384
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1048:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5388
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1049:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5392
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1050:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5396
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1051:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5402
		{
			yyVAL.str = ""
		}
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5406
		{
			yyVAL.str = BooleanModeStr
		}
	case 1053:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5410
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 1054:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5414
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 1055:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5418
		{
			yyVAL.str = QueryExpansionStr
		}
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5424
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5428
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5434
		{
			yyVAL.str = Armscii8Str
		}
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5438
		{
			yyVAL.str = AsciiStr
		}
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5442
		{
			yyVAL.str = Big5Str
		}
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5446
		{
			yyVAL.str = UBinaryStr
		}
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5450
		{
			yyVAL.str = Cp1250Str
		}
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5454
		{
			yyVAL.str = Cp1251Str
		}
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5458
		{
			yyVAL.str = Cp1256Str
		}
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5462
		{
			yyVAL.str = Cp1257Str
		}
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5466
		{
			yyVAL.str = Cp850Str
		}
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5470
		{
			yyVAL.str = Cp852Str
		}
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5474
		{
			yyVAL.str = Cp866Str
		}
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5478
		{
			yyVAL.str = Cp932Str
		}
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5482
		{
			yyVAL.str = Dec8Str
		}
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5486
		{
			yyVAL.str = EucjpmsStr
		}
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5490
		{
			yyVAL.str = EuckrStr
		}
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5494
		{
			yyVAL.str = Gb18030Str
		}
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5498
		{
			yyVAL.str = Gb2312Str
		}
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5502
		{
			yyVAL.str = GbkStr
		}
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5506
		{
			yyVAL.str = Geostd8Str
		}
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5510
		{
			yyVAL.str = GreekStr
		}
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5514
		{
			yyVAL.str = HebrewStr
		}
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5518
		{
			yyVAL.str = Hp8Str
		}
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5522
		{
			yyVAL.str = Keybcs2Str
		}
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5526
		{
			yyVAL.str = Koi8rStr
		}
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5530
		{
			yyVAL.str = Koi8uStr
		}
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5534
		{
			yyVAL.str = Latin1Str
		}
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5538
		{
			yyVAL.str = Latin2Str
		}
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5542
		{
			yyVAL.str = Latin5Str
		}
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5546
		{
			yyVAL.str = Latin7Str
		}
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5550
		{
			yyVAL.str = MacceStr
		}
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5554
		{
			yyVAL.str = MacromanStr
		}
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5558
		{
			yyVAL.str = SjisStr
		}
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5562
		{
			yyVAL.str = Swe7Str
		}
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5566
		{
			yyVAL.str = Tis620Str
		}
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5570
		{
			yyVAL.str = Ucs2Str
		}
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5574
		{
			yyVAL.str = UjisStr
		}
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5578
		{
			yyVAL.str = Utf16Str
		}
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5582
		{
			yyVAL.str = Utf16leStr
		}
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5586
		{
			yyVAL.str = Utf32Str
		}
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5590
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5594
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5598
		{
			yyVAL.str = Utf8mb4Str
		}
	case 1100:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5604
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5608
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 1102:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5612
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5616
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1104:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5620
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1105:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5624
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5630
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1107:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5634
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5638
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5642
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5646
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5650
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1112:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5654
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1113:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5659
		{
			yyVAL.expr = nil
		}
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5663
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5668
		{
			yyVAL.str = string("")
		}
	case 1116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5672
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5678
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 1118:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5682
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 1119:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5688
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 1120:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5693
		{
			yyVAL.expr = nil
		}
	case 1121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5697
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5703
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 1123:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5707
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 1124:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5711
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5717
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5721
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5725
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5729
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5733
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5737
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5741
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5745
		{
			yyVAL.expr = &NullVal{}
		}
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5751
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 1134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5755
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5759
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1136:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5764
		{
			yyVAL.exprs = nil
		}
	case 1137:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5768
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5774
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5778
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5784
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1141:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5789
		{
			yyVAL.expr = nil
		}
	case 1142:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5793
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5799
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1144:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5804
		{
			yyVAL.orderBy = nil
		}
	case 1145:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5808
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5814
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 1147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5818
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 1148:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5824
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 1149:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5829
		{
			yyVAL.str = AscScr
		}
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5833
		{
			yyVAL.str = AscScr
		}
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5837
		{
			yyVAL.str = DescScr
		}
	case 1152:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5842
		{
			yyVAL.limit = nil
		}
	case 1153:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5846
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 1154:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5850
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 1155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5854
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5860
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5864
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1158:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5869
		{
			yyVAL.str = ""
		}
	case 1159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5873
		{
			yyVAL.str = ForUpdateStr
		}
	case 1160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5877
		{
			yyVAL.str = ShareModeStr
		}
	case 1161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5890
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 1162:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5894
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5898
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 1164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5902
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 1165:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5907
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 1166:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5911
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 1167:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5915
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 1168:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5921
		{
			yyVAL.columns = nil
		}
	case 1169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5925
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5931
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5935
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 1172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5939
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1173:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5943
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 1174:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5948
		{
			yyVAL.assignExprs = nil
		}
	case 1175:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5952
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5958
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 1177:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5962
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5968
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 1179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5972
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 1180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5978
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5984
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5994
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 1183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5998
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 1184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6004
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 1185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6007
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6013
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 1187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6017
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6023
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 1189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6034
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6047
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1191:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6060
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6066
		{
			yyVAL.setScope = SetScope_Global
		}
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6070
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6076
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6080
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6084
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 1197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6090
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6094
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6098
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 1201:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6105
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6112
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6116
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6120
		{
			yyVAL.expr = &Default{}
		}
	case 1208:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6129
		{
			yyVAL.byt = 0
		}
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6131
		{
			yyVAL.byt = 1
		}
	case 1210:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6134
		{
			yyVAL.byt = 0
		}
	case 1211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6136
		{
			yyVAL.byt = 1
		}
	case 1212:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6139
		{
			yyVAL.byt = 0
		}
	case 1213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6141
		{
			yyVAL.byt = 1
		}
	case 1214:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6144
		{
			yyVAL.str = ""
		}
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6146
		{
			yyVAL.str = IgnoreStr
		}
	case 1216:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6149
		{
			yyVAL.sqlVal = nil
		}
	case 1217:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6151
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1218:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6153
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6157
		{
			yyVAL.empty = struct{}{}
		}
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6159
		{
			yyVAL.empty = struct{}{}
		}
	case 1221:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6162
		{
			yyVAL.empty = struct{}{}
		}
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6164
		{
			yyVAL.empty = struct{}{}
		}
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6166
		{
			yyVAL.empty = struct{}{}
		}
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6170
		{
			yyVAL.str = UniqueStr
		}
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6172
		{
			yyVAL.str = FulltextStr
		}
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6174
		{
			yyVAL.str = SpatialStr
		}
	case 1227:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6177
		{
			yyVAL.str = ""
		}
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6179
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1229:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6182
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 1230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6184
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6188
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6192
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6198
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 1234:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6202
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6209
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6215
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6219
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6226
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1241:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6231
		{
			yyVAL.str = string("")
		}
	case 1242:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6233
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1243:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6236
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6238
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1245:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6241
		{
			yyVAL.EnclosedBy = nil
		}
	case 1246:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6245
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1247:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6250
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6254
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1249:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6259
		{
			yyVAL.sqlVal = nil
		}
	case 1250:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6263
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1251:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6268
		{
			yyVAL.sqlVal = nil
		}
	case 1252:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6272
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1253:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6277
		{
			yyVAL.Fields = nil
		}
	case 1254:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6281
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1255:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6286
		{
			yyVAL.Lines = nil
		}
	case 1256:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6290
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1257:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6295
		{
			yyVAL.sqlVal = nil
		}
	case 1258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6299
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1259:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6305
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6311
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1261:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6315
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1262:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6321
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1263:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6325
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6331
		{
			yyVAL.lockType = LockRead
		}
	case 1265:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6335
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6339
		{
			yyVAL.lockType = LockWrite
		}
	case 1267:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6343
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1268:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6349
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1269:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6355
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[2].bytes)}
		}
	case 1270:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6359
		{
			yyVAL.statement = &Kill{ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1271:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6363
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1760:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6888
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1761:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6897
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
