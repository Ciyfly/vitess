// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

//import "runtime/debug"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

func yySpecialCommentMode(yylex interface{}) bool {
	tkn := yylex.(*Tokenizer)
	return tkn.specialComment != nil
}

//line sql.y:64
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	variables                Variables
	into                     *Into
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	triggerName              TriggerName
	tableName                TableName
	tableNames               TableNames
	procedureName            ProcedureName
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	flushOption              *FlushOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	viewSpec                 *ViewSpec
	showFilter               *ShowFilter
	frame                    *Frame
	frameExtent              *FrameExtent
	frameBound               *FrameBound
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	charsetCollate           *CharsetAndCollate
	charsetCollates          []*CharsetAndCollate
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptionItem            TLSOptionItem
	tlsOptionItems           []TLSOptionItem
	accountLimitItem         AccountLimitItem
	accountLimitItems        []AccountLimitItem
	passLockItem             PassLockItem
	passLockItems            []PassLockItem
	grantPrivilege           Privilege
	grantPrivileges          []Privilege
	grantObjectType          GrantObjectType
	privilegeLevel           PrivilegeLevel
	grantAssumption          *GrantUserAssumption
	with                     *With
	window                   Window
	over                     *Over
	windowDef                *WindowDef
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const DUPLICATE = 57369
const DEFAULT = 57370
const SET = 57371
const LOCK = 57372
const UNLOCK = 57373
const KEYS = 57374
const OF = 57375
const OUTFILE = 57376
const DUMPFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const INTO = 57425
const OR = 57426
const XOR = 57427
const AND = 57428
const NOT = 57429
const BETWEEN = 57430
const CASE = 57431
const WHEN = 57432
const THEN = 57433
const ELSE = 57434
const ELSEIF = 57435
const END = 57436
const LE = 57437
const GE = 57438
const NE = 57439
const NULL_SAFE_EQUAL = 57440
const IS = 57441
const LIKE = 57442
const REGEXP = 57443
const IN = 57444
const UNBOUNDED = 57445
const PARTITION = 57446
const RANGE = 57447
const ROWS = 57448
const GROUPS = 57449
const PRECEDING = 57450
const FOLLOWING = 57451
const SHIFT_LEFT = 57452
const SHIFT_RIGHT = 57453
const DIV = 57454
const MOD = 57455
const UNARY = 57456
const COLLATE = 57457
const BINARY = 57458
const UNDERSCORE_ARMSCII8 = 57459
const UNDERSCORE_ASCII = 57460
const UNDERSCORE_BIG5 = 57461
const UNDERSCORE_BINARY = 57462
const UNDERSCORE_CP1250 = 57463
const UNDERSCORE_CP1251 = 57464
const UNDERSCORE_CP1256 = 57465
const UNDERSCORE_CP1257 = 57466
const UNDERSCORE_CP850 = 57467
const UNDERSCORE_CP852 = 57468
const UNDERSCORE_CP866 = 57469
const UNDERSCORE_CP932 = 57470
const UNDERSCORE_DEC8 = 57471
const UNDERSCORE_EUCJPMS = 57472
const UNDERSCORE_EUCKR = 57473
const UNDERSCORE_GB18030 = 57474
const UNDERSCORE_GB2312 = 57475
const UNDERSCORE_GBK = 57476
const UNDERSCORE_GEOSTD8 = 57477
const UNDERSCORE_GREEK = 57478
const UNDERSCORE_HEBREW = 57479
const UNDERSCORE_HP8 = 57480
const UNDERSCORE_KEYBCS2 = 57481
const UNDERSCORE_KOI8R = 57482
const UNDERSCORE_KOI8U = 57483
const UNDERSCORE_LATIN1 = 57484
const UNDERSCORE_LATIN2 = 57485
const UNDERSCORE_LATIN5 = 57486
const UNDERSCORE_LATIN7 = 57487
const UNDERSCORE_MACCE = 57488
const UNDERSCORE_MACROMAN = 57489
const UNDERSCORE_SJIS = 57490
const UNDERSCORE_SWE7 = 57491
const UNDERSCORE_TIS620 = 57492
const UNDERSCORE_UCS2 = 57493
const UNDERSCORE_UJIS = 57494
const UNDERSCORE_UTF16 = 57495
const UNDERSCORE_UTF16LE = 57496
const UNDERSCORE_UTF32 = 57497
const UNDERSCORE_UTF8 = 57498
const UNDERSCORE_UTF8MB3 = 57499
const UNDERSCORE_UTF8MB4 = 57500
const INTERVAL = 57501
const JSON_EXTRACT_OP = 57502
const JSON_UNQUOTE_EXTRACT_OP = 57503
const CREATE = 57504
const ALTER = 57505
const DROP = 57506
const RENAME = 57507
const ANALYZE = 57508
const ADD = 57509
const MODIFY = 57510
const CHANGE = 57511
const SCHEMA = 57512
const TABLE = 57513
const INDEX = 57514
const INDEXES = 57515
const VIEW = 57516
const TO = 57517
const IGNORE = 57518
const IF = 57519
const PRIMARY = 57520
const COLUMN = 57521
const SPATIAL = 57522
const FULLTEXT = 57523
const KEY_BLOCK_SIZE = 57524
const CHECK = 57525
const ACTION = 57526
const CASCADE = 57527
const CONSTRAINT = 57528
const FOREIGN = 57529
const NO = 57530
const REFERENCES = 57531
const RESTRICT = 57532
const FIRST = 57533
const AFTER = 57534
const LAST = 57535
const SHOW = 57536
const DESCRIBE = 57537
const EXPLAIN = 57538
const DATE = 57539
const ESCAPE = 57540
const REPAIR = 57541
const OPTIMIZE = 57542
const TRUNCATE = 57543
const FORMAT = 57544
const EXTENDED = 57545
const MAXVALUE = 57546
const REORGANIZE = 57547
const LESS = 57548
const THAN = 57549
const PROCEDURE = 57550
const TRIGGER = 57551
const TRIGGERS = 57552
const FUNCTION = 57553
const STATUS = 57554
const VARIABLES = 57555
const WARNINGS = 57556
const ERRORS = 57557
const KILL = 57558
const CONNECTION = 57559
const SEQUENCE = 57560
const ENABLE = 57561
const DISABLE = 57562
const EACH = 57563
const ROW = 57564
const BEFORE = 57565
const FOLLOWS = 57566
const PRECEDES = 57567
const DEFINER = 57568
const INVOKER = 57569
const INOUT = 57570
const OUT = 57571
const DETERMINISTIC = 57572
const CONTAINS = 57573
const READS = 57574
const MODIFIES = 57575
const SQL = 57576
const SECURITY = 57577
const TEMPORARY = 57578
const ALGORITHM = 57579
const MERGE = 57580
const TEMPTABLE = 57581
const UNDEFINED = 57582
const CLASS_ORIGIN = 57583
const SUBCLASS_ORIGIN = 57584
const MESSAGE_TEXT = 57585
const MYSQL_ERRNO = 57586
const CONSTRAINT_CATALOG = 57587
const CONSTRAINT_SCHEMA = 57588
const CONSTRAINT_NAME = 57589
const CATALOG_NAME = 57590
const SCHEMA_NAME = 57591
const TABLE_NAME = 57592
const COLUMN_NAME = 57593
const CURSOR_NAME = 57594
const SIGNAL = 57595
const RESIGNAL = 57596
const SQLSTATE = 57597
const DECLARE = 57598
const CONDITION = 57599
const CURSOR = 57600
const CONTINUE = 57601
const EXIT = 57602
const UNDO = 57603
const HANDLER = 57604
const FOUND = 57605
const SQLWARNING = 57606
const SQLEXCEPTION = 57607
const FETCH = 57608
const OPEN = 57609
const CLOSE = 57610
const LOOP = 57611
const LEAVE = 57612
const ITERATE = 57613
const USER = 57614
const IDENTIFIED = 57615
const ROLE = 57616
const REUSE = 57617
const GRANT = 57618
const GRANTS = 57619
const REVOKE = 57620
const NONE = 57621
const ATTRIBUTE = 57622
const RANDOM = 57623
const PASSWORD = 57624
const INITIAL = 57625
const AUTHENTICATION = 57626
const SSL = 57627
const X509 = 57628
const CIPHER = 57629
const ISSUER = 57630
const SUBJECT = 57631
const ACCOUNT = 57632
const EXPIRE = 57633
const NEVER = 57634
const DAY = 57635
const OPTION = 57636
const OPTIONAL = 57637
const EXCEPT = 57638
const ADMIN = 57639
const PRIVILEGES = 57640
const MAX_QUERIES_PER_HOUR = 57641
const MAX_UPDATES_PER_HOUR = 57642
const MAX_CONNECTIONS_PER_HOUR = 57643
const MAX_USER_CONNECTIONS = 57644
const FLUSH = 57645
const FAILED_LOGIN_ATTEMPTS = 57646
const PASSWORD_LOCK_TIME = 57647
const REQUIRE = 57648
const PROXY = 57649
const ROUTINE = 57650
const TABLESPACE = 57651
const CLIENT = 57652
const SLAVE = 57653
const EVENT = 57654
const EXECUTE = 57655
const FILE = 57656
const RELOAD = 57657
const REPLICATION = 57658
const SHUTDOWN = 57659
const SUPER = 57660
const USAGE = 57661
const LOGS = 57662
const ENGINE = 57663
const ERROR = 57664
const GENERAL = 57665
const HOSTS = 57666
const OPTIMIZER_COSTS = 57667
const RELAY = 57668
const SLOW = 57669
const USER_RESOURCES = 57670
const NO_WRITE_TO_BINLOG = 57671
const CHANNEL = 57672
const BEGIN = 57673
const START = 57674
const TRANSACTION = 57675
const COMMIT = 57676
const ROLLBACK = 57677
const SAVEPOINT = 57678
const WORK = 57679
const RELEASE = 57680
const CHAIN = 57681
const BIT = 57682
const TINYINT = 57683
const SMALLINT = 57684
const MEDIUMINT = 57685
const INT = 57686
const INTEGER = 57687
const BIGINT = 57688
const INTNUM = 57689
const SERIAL = 57690
const REAL = 57691
const DOUBLE = 57692
const FLOAT_TYPE = 57693
const DECIMAL = 57694
const NUMERIC = 57695
const DEC = 57696
const FIXED = 57697
const PRECISION = 57698
const TIME = 57699
const TIMESTAMP = 57700
const DATETIME = 57701
const YEAR = 57702
const CHAR = 57703
const VARCHAR = 57704
const BOOL = 57705
const CHARACTER = 57706
const VARBINARY = 57707
const NCHAR = 57708
const NVARCHAR = 57709
const NATIONAL = 57710
const VARYING = 57711
const TEXT = 57712
const TINYTEXT = 57713
const MEDIUMTEXT = 57714
const LONGTEXT = 57715
const LONG = 57716
const BLOB = 57717
const TINYBLOB = 57718
const MEDIUMBLOB = 57719
const LONGBLOB = 57720
const JSON = 57721
const ENUM = 57722
const GEOMETRY = 57723
const POINT = 57724
const LINESTRING = 57725
const POLYGON = 57726
const GEOMETRYCOLLECTION = 57727
const MULTIPOINT = 57728
const MULTILINESTRING = 57729
const MULTIPOLYGON = 57730
const LOCAL = 57731
const LOW_PRIORITY = 57732
const NULLX = 57733
const AUTO_INCREMENT = 57734
const APPROXNUM = 57735
const SIGNED = 57736
const UNSIGNED = 57737
const ZEROFILL = 57738
const SRID = 57739
const COLLATION = 57740
const DATABASES = 57741
const SCHEMAS = 57742
const TABLES = 57743
const FULL = 57744
const PROCESSLIST = 57745
const COLUMNS = 57746
const FIELDS = 57747
const ENGINES = 57748
const PLUGINS = 57749
const NAMES = 57750
const CHARSET = 57751
const GLOBAL = 57752
const SESSION = 57753
const ISOLATION = 57754
const LEVEL = 57755
const READ = 57756
const WRITE = 57757
const ONLY = 57758
const REPEATABLE = 57759
const COMMITTED = 57760
const UNCOMMITTED = 57761
const SERIALIZABLE = 57762
const ENCRYPTION = 57763
const CURRENT_TIMESTAMP = 57764
const NOW = 57765
const DATABASE = 57766
const CURRENT_DATE = 57767
const CURRENT_USER = 57768
const CURRENT_TIME = 57769
const LOCALTIME = 57770
const LOCALTIMESTAMP = 57771
const UTC_DATE = 57772
const UTC_TIME = 57773
const UTC_TIMESTAMP = 57774
const REPLACE = 57775
const CONVERT = 57776
const CAST = 57777
const SUBSTR = 57778
const SUBSTRING = 57779
const TRIM = 57780
const LEADING = 57781
const TRAILING = 57782
const BOTH = 57783
const GROUP_CONCAT = 57784
const SEPARATOR = 57785
const TIMESTAMPADD = 57786
const TIMESTAMPDIFF = 57787
const OVER = 57788
const WINDOW = 57789
const GROUPING = 57790
const CURRENT = 57791
const AVG = 57792
const BIT_AND = 57793
const BIT_OR = 57794
const BIT_XOR = 57795
const COUNT = 57796
const JSON_ARRAYAGG = 57797
const JSON_OBJECTAGG = 57798
const MAX = 57799
const MIN = 57800
const STDDEV_POP = 57801
const STDDEV = 57802
const STD = 57803
const STDDEV_SAMP = 57804
const SUM = 57805
const VAR_POP = 57806
const VARIANCE = 57807
const VAR_SAMP = 57808
const CUME_DIST = 57809
const DENSE_RANK = 57810
const FIRST_VALUE = 57811
const LAG = 57812
const LAST_VALUE = 57813
const LEAD = 57814
const NTH_VALUE = 57815
const NTILE = 57816
const ROW_NUMBER = 57817
const PERCENT_RANK = 57818
const RANK = 57819
const DUAL = 57820
const JSON_TABLE = 57821
const PATH = 57822
const AVG_ROW_LENGTH = 57823
const CHECKSUM = 57824
const COMPRESSION = 57825
const DIRECTORY = 57826
const DELAY_KEY_WRITE = 57827
const ENGINE_ATTRIBUTE = 57828
const INSERT_METHOD = 57829
const MAX_ROWS = 57830
const MIN_ROWS = 57831
const PACK_KEYS = 57832
const ROW_FORMAT = 57833
const SECONDARY_ENGINE_ATTRIBUTE = 57834
const STATS_AUTO_RECALC = 57835
const STATS_PERSISTENT = 57836
const STATS_SAMPLE_PAGES = 57837
const STORAGE = 57838
const DISK = 57839
const MEMORY = 57840
const DYNAMIC = 57841
const COMPRESSED = 57842
const REDUNDANT = 57843
const COMPACT = 57844
const LIST = 57845
const HASH = 57846
const PARTITIONS = 57847
const SUBPARTITION = 57848
const SUBPARTITIONS = 57849
const PREPARE = 57850
const DEALLOCATE = 57851
const MATCH = 57852
const AGAINST = 57853
const BOOLEAN = 57854
const LANGUAGE = 57855
const WITH = 57856
const QUERY = 57857
const EXPANSION = 57858
const ACCESSIBLE = 57859
const ASENSITIVE = 57860
const CUBE = 57861
const DAY_HOUR = 57862
const DAY_MICROSECOND = 57863
const DAY_MINUTE = 57864
const DAY_SECOND = 57865
const DELAYED = 57866
const DISTINCTROW = 57867
const EMPTY = 57868
const FLOAT4 = 57869
const FLOAT8 = 57870
const GET = 57871
const HIGH_PRIORITY = 57872
const HOUR_MICROSECOND = 57873
const HOUR_MINUTE = 57874
const HOUR_SECOND = 57875
const INSENSITIVE = 57876
const INT1 = 57877
const INT2 = 57878
const INT3 = 57879
const INT4 = 57880
const INT8 = 57881
const IO_AFTER_GTIDS = 57882
const IO_BEFORE_GTIDS = 57883
const LINEAR = 57884
const MASTER_BIND = 57885
const MASTER_SSL_VERIFY_SERVER_CERT = 57886
const MIDDLEINT = 57887
const MINUTE_MICROSECOND = 57888
const MINUTE_SECOND = 57889
const PURGE = 57890
const READ_WRITE = 57891
const REPEAT = 57892
const RETURN = 57893
const RLIKE = 57894
const SECOND_MICROSECOND = 57895
const SENSITIVE = 57896
const SPECIFIC = 57897
const SQL_BIG_RESULT = 57898
const SQL_SMALL_RESULT = 57899
const VARCHARACTER = 57900
const WHILE = 57901
const YEAR_MONTH = 57902
const UNUSED = 57903
const DESCRIPTION = 57904
const LATERAL = 57905
const MEMBER = 57906
const RECURSIVE = 57907
const BUCKETS = 57908
const CLONE = 57909
const COMPONENT = 57910
const DEFINITION = 57911
const ENFORCED = 57912
const EXCLUDE = 57913
const GEOMCOLLECTION = 57914
const GET_MASTER_PUBLIC_KEY = 57915
const HISTOGRAM = 57916
const HISTORY = 57917
const INACTIVE = 57918
const INVISIBLE = 57919
const LOCKED = 57920
const MASTER_COMPRESSION_ALGORITHMS = 57921
const MASTER_PUBLIC_KEY_PATH = 57922
const MASTER_TLS_CIPHERSUITES = 57923
const MASTER_ZSTD_COMPRESSION_LEVEL = 57924
const NESTED = 57925
const NETWORK_NAMESPACE = 57926
const NOWAIT = 57927
const NULLS = 57928
const OJ = 57929
const OLD = 57930
const ORDINALITY = 57931
const ORGANIZATION = 57932
const OTHERS = 57933
const PERSIST = 57934
const PERSIST_ONLY = 57935
const PRIVILEGE_CHECKS_USER = 57936
const PROCESS = 57937
const REFERENCE = 57938
const REQUIRE_ROW_FORMAT = 57939
const RESOURCE = 57940
const RESPECT = 57941
const RESTART = 57942
const RETAIN = 57943
const SECONDARY = 57944
const SECONDARY_ENGINE = 57945
const SECONDARY_LOAD = 57946
const SECONDARY_UNLOAD = 57947
const SKIP = 57948
const THREAD_PRIORITY = 57949
const TIES = 57950
const VCPU = 57951
const VISIBLE = 57952
const SYSTEM = 57953
const INFILE = 57954
const ACTIVE = 57955
const AGGREGATE = 57956
const ANY = 57957
const ARRAY = 57958
const ASCII = 57959
const AT = 57960
const AUTOEXTEND_SIZE = 57961
const ENDS = 57962
const EVENTS = 57963
const GENERATED = 57964
const ALWAYS = 57965
const STORED = 57966
const VIRTUAL = 57967
const NVAR = 57968
const PASSWORD_LOCK = 57969

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DUMPFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"':'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"INTO",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB3",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"LAST",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"EXTENDED",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"ENABLE",
	"DISABLE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"ALGORITHM",
	"MERGE",
	"TEMPTABLE",
	"UNDEFINED",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"FETCH",
	"OPEN",
	"CLOSE",
	"LOOP",
	"LEAVE",
	"ITERATE",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTION",
	"OPTIONAL",
	"EXCEPT",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EVENT",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"CHAIN",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"SRID",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ENCRYPTION",
	"CURRENT_TIMESTAMP",
	"NOW",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"DUAL",
	"JSON_TABLE",
	"PATH",
	"AVG_ROW_LENGTH",
	"CHECKSUM",
	"COMPRESSION",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"DISK",
	"MEMORY",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"LIST",
	"HASH",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"PREPARE",
	"DEALLOCATE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ACCESSIBLE",
	"ASENSITIVE",
	"CUBE",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"DELAYED",
	"DISTINCTROW",
	"EMPTY",
	"FLOAT4",
	"FLOAT8",
	"GET",
	"HIGH_PRIORITY",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"INSENSITIVE",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"IO_AFTER_GTIDS",
	"IO_BEFORE_GTIDS",
	"LINEAR",
	"MASTER_BIND",
	"MASTER_SSL_VERIFY_SERVER_CERT",
	"MIDDLEINT",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"PURGE",
	"READ_WRITE",
	"REPEAT",
	"RETURN",
	"RLIKE",
	"SECOND_MICROSECOND",
	"SENSITIVE",
	"SPECIFIC",
	"SQL_BIG_RESULT",
	"SQL_SMALL_RESULT",
	"VARCHARACTER",
	"WHILE",
	"YEAR_MONTH",
	"UNUSED",
	"DESCRIPTION",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"ACTIVE",
	"AGGREGATE",
	"ANY",
	"ARRAY",
	"ASCII",
	"AT",
	"AUTOEXTEND_SIZE",
	"ENDS",
	"EVENTS",
	"GENERATED",
	"ALWAYS",
	"STORED",
	"VIRTUAL",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 38,
	647, 38,
	-2, 60,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 44,
	190, 1398,
	191, 1417,
	-2, 253,
	-1, 54,
	231, 867,
	232, 867,
	-2, 856,
	-1, 73,
	5, 65,
	-2, 46,
	-1, 440,
	1, 2078,
	23, 2078,
	178, 2078,
	647, 2078,
	-2, 901,
	-1, 453,
	178, 1427,
	-2, 1421,
	-1, 454,
	178, 1428,
	-2, 1422,
	-1, 510,
	1, 554,
	647, 554,
	-2, 552,
	-1, 533,
	178, 1788,
	-2, 1065,
	-1, 563,
	178, 1896,
	-2, 1316,
	-1, 564,
	178, 1977,
	-2, 1067,
	-1, 565,
	178, 1808,
	-2, 1068,
	-1, 632,
	178, 1759,
	-2, 1286,
	-1, 635,
	178, 1776,
	-2, 1215,
	-1, 636,
	178, 1989,
	-2, 1215,
	-1, 637,
	178, 1988,
	-2, 1215,
	-1, 638,
	178, 1987,
	-2, 1215,
	-1, 639,
	178, 1876,
	-2, 1215,
	-1, 640,
	178, 1877,
	-2, 1215,
	-1, 641,
	178, 1774,
	-2, 1215,
	-1, 642,
	178, 1775,
	-2, 1215,
	-1, 643,
	178, 1777,
	-2, 1215,
	-1, 891,
	101, 2090,
	178, 2090,
	-2, 1382,
	-1, 892,
	101, 2199,
	178, 2199,
	-2, 1383,
	-1, 897,
	101, 2114,
	178, 2114,
	-2, 1384,
	-1, 898,
	101, 2158,
	178, 2158,
	-2, 1385,
	-1, 899,
	101, 2159,
	178, 2159,
	-2, 1386,
	-1, 900,
	101, 2027,
	178, 2027,
	-2, 1390,
	-1, 902,
	101, 2135,
	178, 2135,
	-2, 1392,
	-1, 1065,
	357, 880,
	-2, 884,
	-1, 1067,
	357, 880,
	-2, 884,
	-1, 1172,
	5, 65,
	-2, 47,
	-1, 1177,
	1, 554,
	647, 554,
	-2, 552,
	-1, 1179,
	1, 555,
	647, 555,
	-2, 552,
	-1, 1443,
	1, 554,
	647, 554,
	-2, 552,
	-1, 1445,
	1, 554,
	647, 554,
	-2, 552,
	-1, 1919,
	178, 1430,
	-2, 1426,
	-1, 2039,
	1, 976,
	5, 976,
	12, 976,
	13, 976,
	14, 976,
	15, 976,
	17, 976,
	19, 976,
	29, 976,
	30, 976,
	56, 976,
	57, 976,
	58, 976,
	59, 976,
	60, 976,
	62, 976,
	63, 976,
	66, 976,
	67, 976,
	69, 976,
	70, 976,
	88, 976,
	421, 976,
	466, 976,
	647, 976,
	-2, 1009,
	-1, 2047,
	67, 82,
	69, 82,
	-2, 86,
	-1, 2065,
	178, 1900,
	-2, 1387,
	-1, 2226,
	44, 732,
	197, 734,
	199, 732,
	200, 732,
	-2, 778,
	-1, 2275,
	5, 66,
	-2, 1097,
	-1, 2833,
	197, 735,
	-2, 733,
	-1, 2906,
	69, 1672,
	70, 1672,
	178, 1672,
	-2, 907,
	-1, 2932,
	1, 1051,
	5, 1051,
	12, 1051,
	13, 1051,
	14, 1051,
	15, 1051,
	17, 1051,
	19, 1051,
	29, 1051,
	30, 1051,
	56, 1051,
	57, 1051,
	58, 1051,
	59, 1051,
	60, 1051,
	62, 1051,
	63, 1051,
	66, 1051,
	67, 1051,
	69, 1051,
	70, 1051,
	88, 1051,
	421, 1051,
	466, 1051,
	647, 1051,
	-2, 1009,
	-1, 3121,
	5, 66,
	-2, 1348,
	-1, 3224,
	41, 1437,
	-2, 1435,
	-1, 3463,
	5, 66,
	-2, 1351,
	-1, 3486,
	281, 320,
	-2, 1492,
	-1, 3487,
	281, 321,
	-2, 1533,
	-1, 3488,
	281, 322,
	-2, 1709,
	-1, 3684,
	96, 305,
	98, 305,
	100, 305,
	-2, 60,
	-1, 3720,
	98, 312,
	99, 312,
	100, 312,
	-2, 60,
}

const yyPrivate = 57344

const yyLast = 54331

var yyAct = [...]int{
	575, 82, 3627, 3661, 2474, 3676, 1194, 506, 3609, 3565,
	2615, 3629, 3493, 1008, 3500, 2436, 3608, 465, 3455, 3369,
	3374, 3, 3520, 3377, 7, 2062, 2435, 2806, 1865, 3465,
	2777, 2995, 3542, 3337, 535, 3376, 6, 2730, 3162, 2942,
	2641, 3336, 3293, 1277, 3375, 5, 3453, 1373, 3378, 8,
	3224, 2926, 2360, 1476, 1278, 2569, 2899, 3226, 2130, 2816,
	2358, 519, 539, 3054, 2900, 2501, 2790, 85, 3078, 3032,
	2354, 3048, 2088, 444, 447, 526, 1891, 97, 2642, 2827,
	2147, 502, 2896, 82, 490, 490, 2731, 2426, 3370, 496,
	2483, 2079, 978, 1051, 552, 2908, 2917, 1863, 1884, 538,
	110, 1033, 2720, 517, 2719, 2225, 1078, 1475, 2092, 2343,
	2004, 2116, 2385, 2585, 2177, 1478, 1864, 2196, 2537, 1817,
	1950, 2036, 2336, 574, 971, 1781, 516, 2075, 1944, 2035,
	1871, 1762, 2465, 1195, 2422, 2112, 1452, 1351, 893, 1995,
	1921, 2039, 1355, 1202, 1109, 1087, 1198, 1822, 970, 522,
	1354, 1178, 1182, 542, 889, 1216, 2049, 1952, 896, 890,
	2427, 1206, 1181, 1180, 2645, 468, 1023, 1071, 532, 505,
	2623, 73, 467, 1007, 1793, 1761, 1086, 102, 1794, 544,
	2094, 991, 1446, 450, 996, 3720, 106, 87, 511, 3715,
	2220, 2443, 3706, 3684, 3682, 3656, 2447, 3636, 3622, 3554,
	3550, 84, 3295, 3294, 2745, 1815, 3203, 2775, 3025, 2946,
	3717, 3713, 2452, 2451, 483, 3711, 477, 488, 471, 3643,
	39, 39, 3201, 460, 39, 3033, 39, 42, 89, 3451,
	95, 3601, 3345, 39, 2448, 3035, 2161, 3204, 478, 2161,
	3216, 2494, 3568, 2636, 3439, 1301, 2787, 528, 3450, 2607,
	2454, 405, 2433, 3535, 124, 120, 121, 3344, 122, 3277,
	2434, 2637, 3262, 2005, 975, 2356, 3152, 3146, 3159, 3160,
	2987, 2975, 2943, 80, 504, 2702, 2701, 3575, 884, 885,
	886, 3606, 83, 83, 3317, 2458, 83, 993, 83, 998,
	999, 3516, 126, 125, 2313, 83, 2890, 990, 1001, 3253,
	2378, 2064, 2437, 2377, 3459, 512, 2379, 1233, 1232, 1242,
	1243, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1234, 3011,
	2195, 1244, 3017, 3019, 3018, 3015, 3016, 3014, 3013, 3012,
	3459, 2684, 2685, 2059, 2060, 1821, 93, 91, 92, 2683,
	3456, 3020, 3021, 1037, 1038, 439, 1186, 1041, 3454, 1356,
	3038, 1357, 1065, 1881, 1882, 2058, 127, 3275, 128, 1819,
	1820, 1055, 1056, 1839, 1054, 2450, 3456, 1138, 2453, 83,
	2833, 966, 2421, 2345, 2348, 2349, 2350, 2346, 459, 2347,
	2352, 1039, 1040, 462, 83, 1818, 458, 2456, 1146, 470,
	469, 472, 3036, 3037, 3039, 3040, 3041, 500, 1434, 476,
	2345, 2348, 2349, 2350, 2346, 3460, 2347, 2352, 2090, 2091,
	2918, 2919, 2662, 2194, 2349, 2350, 480, 1106, 2446, 2098,
	2100, 484, 2099, 2095, 1061, 2106, 2876, 2874, 1878, 2095,
	2183, 3460, 2182, 437, 2113, 434, 487, 83, 1799, 457,
	82, 2714, 82, 557, 556, 559, 560, 561, 562, 513,
	2043, 2694, 558, 1956, 2756, 2757, 2527, 501, 1860, 3102,
	1072, 1859, 517, 1073, 1858, 1857, 1856, 1855, 2233, 2227,
	2228, 1122, 2226, 2229, 2230, 1075, 2721, 2722, 1142, 1143,
	3674, 2489, 2519, 2723, 1074, 1077, 1062, 1063, 1120, 3055,
	3056, 3057, 3058, 2749, 3049, 3595, 3230, 2815, 2524, 987,
	131, 987, 3052, 82, 2208, 1068, 3202, 1176, 123, 3502,
	2236, 442, 1042, 3427, 3501, 1189, 3050, 3051, 3429, 2797,
	3321, 3075, 3509, 3066, 2235, 2234, 2209, 987, 1435, 3319,
	1435, 1850, 2148, 3198, 1253, 1255, 3673, 3311, 1257, 473,
	474, 475, 481, 1829, 485, 486, 489, 3064, 3617, 968,
	2491, 2446, 3694, 510, 1113, 1052, 1435, 1053, 1055, 1056,
	1122, 1153, 3635, 3551, 1154, 3666, 3547, 1269, 448, 1005,
	1272, 1273, 1274, 1275, 1276, 3220, 1281, 995, 994, 2449,
	2788, 1021, 112, 2800, 2445, 3196, 2791, 2792, 2793, 2794,
	2795, 445, 129, 117, 118, 438, 517, 1036, 2791, 2792,
	2793, 2794, 2795, 997, 1122, 3545, 3546, 2493, 1450, 83,
	2586, 3195, 449, 1145, 1459, 1460, 1458, 2977, 112, 1282,
	1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292,
	1293, 1294, 1295, 3624, 1298, 1299, 1302, 1302, 1302, 1308,
	1302, 1302, 1308, 1302, 1308, 1317, 1318, 1319, 1320, 1321,
	1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331,
	1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341,
	1342, 1343, 1344, 1345, 1172, 3034, 3194, 3193, 1876, 1203,
	2944, 461, 3192, 114, 454, 2459, 3313, 3190, 1254, 1225,
	997, 3191, 2588, 1223, 1050, 119, 3457, 2232, 3307, 3308,
	2817, 2693, 2725, 2202, 2774, 2142, 2143, 3633, 3478, 3479,
	3628, 3526, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 2946,
	1800, 3254, 3457, 1877, 3150, 3343, 3631, 3372, 103, 1129,
	1121, 3618, 2724, 1279, 137, 1879, 402, 404, 2351, 3148,
	137, 2115, 428, 2463, 3151, 137, 2692, 518, 518, 2097,
	3199, 518, 3574, 518, 3318, 493, 493, 3217, 2495, 137,
	74, 2976, 2978, 2979, 2980, 2351, 138, 3136, 138, 2446,
	139, 1821, 139, 140, 141, 140, 141, 2351, 1173, 142,
	94, 142, 1300, 137, 980, 1132, 1076, 1069, 1188, 1067,
	1297, 1127, 446, 3675, 138, 1819, 1820, 3285, 139, 3428,
	3219, 140, 141, 137, 493, 1114, 980, 142, 2799, 2444,
	2751, 2754, 1155, 446, 1020, 137, 2752, 2753, 2492, 2139,
	3312, 2668, 479, 3303, 2509, 2510, 1047, 1128, 105, 1124,
	1823, 446, 1160, 1048, 1049, 1046, 3597, 3563, 116, 115,
	443, 3079, 3080, 2966, 406, 3291, 2967, 2590, 2968, 1795,
	2138, 1024, 2594, 2734, 2589, 987, 2587, 987, 987, 2085,
	977, 2592, 2085, 1125, 1126, 3701, 987, 1825, 1758, 2543,
	1824, 3680, 2832, 3721, 2591, 114, 3718, 3163, 2363, 2365,
	3707, 3685, 1304, 1306, 112, 1310, 1312, 992, 1315, 2593,
	2595, 409, 3165, 1010, 113, 117, 3323, 512, 3090, 2813,
	418, 426, 427, 2518, 3089, 2514, 2497, 2496, 446, 1110,
	1118, 2087, 2203, 2087, 1464, 1462, 1070, 3630, 3632, 2133,
	989, 2087, 2675, 2087, 2674, 2673, 988, 2512, 2555, 1170,
	107, 1185, 108, 1000, 400, 2913, 2288, 415, 3093, 2285,
	416, 2430, 1258, 424, 425, 1259, 1260, 1256, 83, 2862,
	2087, 2682, 896, 2516, 2515, 2382, 2267, 896, 2256, 1123,
	1130, 1131, 1133, 1134, 1135, 1136, 1137, 2218, 1139, 1140,
	1141, 2140, 1144, 2054, 1147, 1148, 1149, 1150, 1151, 1089,
	1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099,
	1100, 1233, 1232, 1242, 1243, 1235, 1236, 1237, 1238, 1239,
	1240, 1241, 1234, 2158, 1894, 1244, 421, 1261, 2157, 2364,
	1367, 3164, 1261, 490, 1271, 1166, 1270, 1454, 1224, 2064,
	3316, 1430, 1431, 1432, 1433, 1104, 1022, 422, 1359, 1244,
	116, 115, 490, 1360, 1368, 1117, 1477, 1165, 1161, 1162,
	1163, 1164, 1167, 1168, 1169, 1171, 3678, 1064, 2999, 3679,
	2823, 3677, 1453, 1349, 2374, 2810, 1457, 2086, 1258, 2086,
	1791, 2533, 3338, 2550, 2543, 2531, 3116, 2086, 2547, 2086,
	1437, 2546, 2549, 1346, 1347, 3088, 2543, 82, 1234, 3504,
	987, 1244, 104, 2544, 2085, 137, 3527, 3528, 100, 2178,
	1030, 2562, 3094, 407, 2337, 1372, 2086, 1072, 1887, 2554,
	1073, 3524, 3525, 2551, 1259, 1260, 3206, 1259, 1260, 3000,
	1215, 2824, 1075, 3365, 1789, 1237, 1238, 1239, 1240, 1241,
	1234, 1074, 2534, 1244, 3348, 3347, 2532, 420, 410, 411,
	1928, 431, 490, 99, 1766, 412, 414, 1035, 408, 430,
	429, 1782, 3207, 137, 1212, 1926, 1927, 1925, 1777, 1778,
	1779, 1780, 2221, 1480, 1057, 1369, 3505, 2915, 1812, 2914,
	2912, 1215, 1213, 1214, 1212, 3543, 1848, 3581, 1441, 3580,
	3709, 1892, 1893, 1832, 98, 2169, 1466, 1442, 1785, 1449,
	1786, 1215, 1455, 423, 1809, 2280, 1456, 2279, 137, 1365,
	82, 1044, 1080, 1769, 1003, 82, 1002, 2609, 1473, 1996,
	1474, 2292, 3705, 137, 1765, 3619, 1444, 1213, 1214, 1212,
	517, 3569, 1854, 1219, 1768, 1787, 3593, 3065, 1770, 1771,
	3059, 1213, 1214, 1212, 1066, 1830, 1215, 3095, 1788, 3621,
	1213, 1214, 1212, 1883, 1034, 1213, 1214, 1212, 3544, 2190,
	1215, 1783, 1797, 1885, 1801, 1796, 1214, 1212, 1996, 1215,
	2301, 1059, 3702, 1914, 1215, 2743, 82, 1209, 1804, 1805,
	1193, 1279, 1807, 1827, 1215, 1853, 3646, 1235, 1236, 1237,
	1238, 1239, 1240, 1241, 1234, 2170, 517, 1244, 1810, 3688,
	3662, 3687, 1281, 3425, 1831, 1948, 2471, 1954, 3314, 1828,
	1199, 1045, 3605, 1200, 1955, 1957, 2253, 2254, 2255, 1961,
	1963, 1849, 517, 2858, 1852, 1213, 1214, 1212, 3703, 1233,
	1232, 1242, 1243, 1235, 1236, 1237, 1238, 1239, 1240, 1241,
	1234, 83, 1885, 1244, 1215, 1972, 1009, 3576, 3474, 1872,
	3712, 3426, 1875, 1924, 3432, 1896, 3315, 1024, 3424, 3366,
	1913, 1868, 1873, 1874, 1861, 1213, 1214, 1212, 2040, 3278,
	3214, 1922, 3543, 1981, 1984, 1919, 3213, 1213, 1214, 1212,
	1897, 1997, 3212, 1898, 1215, 2611, 1172, 1906, 1908, 1909,
	1902, 1903, 1904, 1910, 3211, 1907, 1215, 2063, 3205, 2984,
	2982, 1923, 1223, 1233, 1232, 1242, 1243, 1235, 1236, 1237,
	1238, 1239, 1240, 1241, 1234, 1920, 2068, 1244, 1929, 1930,
	1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940,
	1941, 1942, 1943, 1945, 2281, 1946, 896, 3024, 2034, 1303,
	1305, 1307, 1309, 1311, 1313, 1314, 1316, 2985, 2983, 3023,
	2070, 1960, 2972, 2962, 1964, 1965, 1966, 1967, 1968, 1279,
	1440, 2955, 2746, 2470, 1977, 1978, 2010, 2468, 2012, 1012,
	1013, 1014, 1015, 1016, 1017, 1018, 2457, 1993, 1112, 1111,
	1024, 1987, 2380, 1470, 2381, 1213, 1214, 1212, 3556, 1084,
	3555, 2000, 3506, 3503, 3438, 3310, 3309, 3290, 3221, 2155,
	1213, 1214, 1212, 2069, 1215, 3189, 3158, 3157, 3143, 1772,
	1773, 1774, 1775, 1083, 1776, 3112, 2076, 3062, 1919, 1215,
	3061, 2044, 3060, 2122, 2123, 2124, 2125, 2052, 2056, 2061,
	2109, 2110, 2111, 2055, 3022, 2048, 2981, 2153, 2154, 2071,
	2073, 1949, 2973, 2067, 2965, 2963, 2959, 2126, 2127, 2128,
	2958, 2957, 2084, 2822, 2762, 2565, 975, 2564, 2118, 2119,
	2120, 2121, 2535, 2466, 2191, 2164, 1973, 1974, 1975, 1806,
	1760, 1759, 1979, 1980, 1983, 1986, 3710, 1991, 1992, 3695,
	2114, 3638, 2096, 1998, 2101, 2102, 2103, 2104, 2105, 3552,
	3540, 137, 557, 556, 559, 560, 561, 562, 1184, 3539,
	980, 558, 1956, 2003, 3496, 2006, 2007, 3495, 3491, 1193,
	2011, 3490, 2013, 2014, 3320, 2134, 2129, 2136, 2019, 2020,
	2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030,
	1833, 3238, 2430, 1836, 1837, 1838, 3232, 1840, 1841, 3086,
	2895, 1842, 2622, 1177, 2852, 2848, 2834, 1843, 2801, 2504,
	2503, 1844, 1845, 2184, 1846, 1847, 1880, 100, 1233, 1232,
	1242, 1243, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1234,
	2166, 2165, 1244, 1947, 1803, 1798, 1472, 1471, 1445, 1443,
	1107, 1901, 1232, 1242, 1243, 1235, 1236, 1237, 1238, 1239,
	1240, 1241, 1234, 980, 137, 1244, 1031, 456, 2363, 2365,
	3494, 464, 1465, 493, 493, 1193, 2283, 493, 2265, 1193,
	3172, 1193, 3172, 3578, 137, 2990, 3561, 137, 3444, 1193,
	3531, 1193, 493, 493, 2990, 3512, 3231, 137, 2990, 3440,
	2883, 1152, 1764, 1764, 3172, 3353, 2990, 3301, 2265, 1193,
	3172, 3268, 3182, 137, 137, 137, 137, 3181, 137, 3172,
	3171, 3125, 1193, 1233, 1232, 1242, 1243, 1235, 1236, 1237,
	1238, 1239, 1240, 1241, 1234, 493, 1228, 1244, 1231, 137,
	2217, 1193, 2780, 495, 2765, 1245, 1246, 1247, 1248, 1249,
	1250, 1251, 2764, 1229, 1230, 1227, 2990, 2989, 2772, 2771,
	2768, 2769, 2763, 1233, 1232, 1242, 1243, 1235, 1236, 1237,
	1238, 1239, 1240, 1241, 1234, 2768, 2767, 1244, 2502, 980,
	1118, 1308, 2340, 1193, 2205, 2204, 2938, 2033, 3669, 2047,
	1970, 2188, 493, 493, 493, 2897, 2050, 980, 2911, 2364,
	1233, 1232, 1242, 1243, 1235, 1236, 1237, 1238, 1239, 1240,
	1241, 1234, 1970, 1193, 1244, 2502, 2193, 1242, 1243, 1235,
	1236, 1237, 1238, 1239, 1240, 1241, 1234, 493, 2050, 1244,
	1371, 1370, 493, 493, 2187, 2340, 1233, 1232, 1242, 1243,
	1235, 1236, 1237, 1238, 1239, 1240, 1241, 1234, 2339, 137,
	1244, 980, 2051, 2215, 2053, 2369, 86, 1758, 2146, 1156,
	137, 1889, 1116, 1115, 2893, 3598, 1116, 3567, 2911, 2167,
	1999, 1157, 2911, 2171, 3119, 1970, 2340, 2161, 2176, 2928,
	2781, 2770, 2175, 2563, 2051, 137, 1758, 2536, 2340, 2057,
	2265, 2307, 1219, 2306, 1808, 2163, 2149, 2160, 1890, 2145,
	967, 1174, 2151, 2152, 1851, 2257, 1816, 1758, 1463, 2159,
	2265, 1461, 1888, 1914, 1233, 1232, 1242, 1243, 1235, 1236,
	1237, 1238, 1239, 1240, 1241, 1234, 2892, 1353, 1244, 1118,
	83, 980, 3475, 980, 3441, 2200, 980, 2927, 3334, 3235,
	3133, 3026, 2093, 980, 2186, 980, 980, 2918, 2919, 3700,
	2117, 2192, 2095, 2742, 2113, 137, 2420, 2207, 1122, 2141,
	2210, 2185, 83, 2108, 2199, 2107, 1438, 1103, 2131, 2179,
	2882, 1028, 1027, 3698, 3650, 3648, 1233, 1232, 1242, 1243,
	1235, 1236, 1237, 1238, 1239, 1240, 1241, 1234, 2881, 3610,
	1244, 2921, 980, 980, 2214, 2897, 2779, 2472, 1826, 1468,
	2069, 1158, 1119, 433, 2252, 2925, 2044, 3363, 557, 556,
	559, 560, 561, 562, 2661, 1919, 2924, 558, 1956, 2660,
	2923, 137, 137, 137, 2245, 2243, 2244, 2658, 2656, 2655,
	2654, 2357, 2659, 2657, 2262, 3522, 2366, 2367, 1203, 1922,
	2040, 2362, 3449, 2040, 523, 524, 980, 2566, 2242, 1900,
	3514, 517, 3122, 1207, 1208, 2250, 2258, 2249, 3259, 2222,
	2223, 2268, 435, 436, 3498, 3085, 2993, 2847, 2846, 1923,
	1233, 1232, 1242, 1243, 1235, 1236, 1237, 1238, 1239, 1240,
	1241, 1234, 1205, 2761, 1244, 2259, 2260, 2261, 1233, 1232,
	1242, 1243, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1234,
	2760, 2759, 1244, 3499, 2432, 2424, 2736, 2353, 3325, 896,
	2370, 3328, 3437, 2371, 3436, 3225, 3223, 3306, 2274, 3305,
	455, 1802, 3208, 3209, 2300, 2561, 2560, 2952, 2747, 2695,
	137, 1196, 2219, 1366, 1101, 1085, 137, 137, 493, 493,
	493, 3667, 1197, 137, 2302, 1082, 1081, 2293, 2294, 2295,
	1032, 3242, 3241, 1184, 1892, 1893, 3067, 3117, 2135, 1467,
	2368, 1437, 3599, 3068, 3430, 3227, 2998, 1079, 2778, 2312,
	2314, 1207, 1208, 3587, 100, 1480, 2320, 2321, 2322, 2323,
	2132, 2372, 1862, 490, 2044, 1359, 3586, 2508, 2419, 1453,
	2375, 1190, 1191, 2044, 2383, 2248, 2044, 3585, 3186, 2162,
	2213, 1060, 520, 2247, 3508, 2499, 82, 3507, 2429, 2431,
	3448, 3434, 3357, 3329, 3258, 2687, 521, 86, 2269, 2270,
	2271, 2272, 2273, 3447, 3340, 2174, 517, 2502, 2477, 2478,
	2479, 2467, 2425, 3553, 2428, 3652, 3651, 2529, 3097, 2820,
	2525, 2469, 2523, 2522, 2289, 2286, 2211, 2298, 1784, 1210,
	1026, 1025, 3651, 3652, 3350, 2758, 1886, 1110, 967, 515,
	3391, 57, 3393, 22, 3392, 21, 3672, 2506, 2460, 2461,
	2462, 2464, 2490, 3394, 23, 2571, 3395, 24, 3389, 17,
	3388, 16, 3387, 15, 88, 2500, 1914, 3390, 18, 60,
	2505, 3386, 14, 3380, 10, 3412, 37, 3410, 36, 3409,
	35, 2520, 2511, 2513, 2616, 3408, 31, 2517, 3497, 2526,
	3407, 30, 3406, 29, 3404, 26, 3403, 25, 2206, 3405,
	27, 3385, 13, 1, 2528, 3382, 12, 2638, 2640, 3381,
	11, 2040, 2040, 2040, 2040, 2040, 2545, 2507, 2556, 2557,
	2201, 2541, 2559, 1834, 2540, 3379, 9, 517, 2357, 3047,
	2669, 2664, 3046, 3053, 2786, 2789, 2608, 2488, 2572, 2671,
	2040, 3063, 1451, 3197, 2573, 1006, 2144, 1108, 517, 3435,
	2639, 3324, 1868, 2578, 3326, 3222, 2576, 2538, 2548, 2553,
	3070, 3031, 3030, 2482, 2481, 2597, 1102, 1192, 1919, 1814,
	2539, 1972, 2643, 2542, 2156, 2231, 2212, 1159, 2077, 2596,
	2530, 2571, 2598, 3534, 3276, 2672, 3145, 2945, 2941, 2384,
	2974, 2072, 3464, 2558, 969, 96, 2168, 1043, 413, 2074,
	2441, 3327, 2575, 1105, 2678, 2440, 2680, 2681, 2455, 2089,
	2679, 1179, 1183, 137, 2744, 2439, 2438, 3322, 2755, 2442,
	1377, 1375, 1376, 1374, 2599, 2600, 1379, 2601, 2602, 2610,
	1378, 2603, 2663, 2650, 2651, 3645, 2653, 137, 137, 137,
	2649, 3573, 417, 2652, 1361, 2612, 2613, 2676, 3485, 2894,
	1211, 568, 2748, 2338, 111, 3087, 2617, 2618, 2619, 2620,
	2621, 2552, 498, 499, 2044, 2044, 2044, 2044, 2044, 2686,
	101, 137, 109, 137, 1899, 490, 419, 980, 1252, 2796,
	2246, 2044, 980, 2735, 2126, 2737, 2128, 2376, 894, 895,
	887, 2238, 1175, 2044, 3346, 3515, 3564, 3477, 1201, 3517,
	3446, 3339, 2782, 2299, 980, 1296, 2677, 980, 2807, 2606,
	1994, 541, 2667, 3115, 3519, 1905, 555, 2750, 2728, 554,
	553, 2803, 550, 551, 3458, 1895, 2635, 1226, 2773, 2738,
	2739, 2740, 530, 2741, 2038, 2031, 2189, 2344, 2342, 2341,
	980, 1469, 1350, 2180, 2798, 2920, 2916, 2355, 2042, 2688,
	2689, 2690, 2691, 2037, 2475, 2696, 2697, 2698, 2699, 2700,
	2041, 41, 2703, 2704, 2705, 2706, 2707, 2708, 2709, 2710,
	2711, 2712, 2713, 3096, 2715, 2716, 2717, 2718, 2888, 2729,
	1058, 2498, 2805, 2568, 2889, 3252, 2251, 90, 514, 525,
	28, 20, 2809, 19, 2224, 1004, 2814, 43, 45, 46,
	2818, 2819, 2476, 2821, 2137, 3484, 2851, 1437, 2902, 82,
	2831, 3626, 2825, 1088, 2766, 2859, 3637, 1233, 1232, 1242,
	1243, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1234, 517,
	2804, 1244, 3660, 3541, 34, 33, 32, 2857, 3401, 2930,
	3400, 3399, 3402, 2830, 2934, 2935, 2936, 2898, 3398, 3397,
	3396, 3411, 2903, 3384, 3383, 3612, 3611, 4, 1187, 81,
	38, 965, 2, 0, 0, 2869, 2870, 2567, 2871, 2643,
	0, 2873, 2872, 2875, 0, 0, 0, 2910, 0, 0,
	0, 2839, 2844, 0, 0, 0, 2853, 137, 0, 0,
	0, 0, 0, 0, 2933, 137, 0, 528, 137, 0,
	0, 0, 0, 0, 137, 0, 2905, 137, 137, 137,
	0, 0, 0, 2861, 0, 2940, 2939, 0, 0, 2922,
	0, 0, 3003, 3005, 3007, 3008, 0, 0, 0, 0,
	0, 2901, 0, 0, 0, 2931, 0, 0, 0, 2891,
	0, 0, 0, 2885, 2886, 2887, 0, 0, 82, 0,
	0, 0, 0, 3028, 3001, 0, 0, 0, 0, 0,
	0, 0, 2929, 2947, 2948, 2949, 0, 0, 517, 0,
	2956, 0, 0, 1868, 0, 0, 0, 0, 2964, 0,
	0, 0, 0, 2969, 2970, 2971, 980, 0, 137, 0,
	2950, 3027, 0, 2986, 2994, 980, 980, 0, 2728, 0,
	493, 3043, 3044, 3045, 2988, 0, 2728, 0, 0, 2932,
	0, 2991, 2992, 0, 0, 137, 493, 0, 1764, 0,
	0, 0, 0, 3010, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 493, 0, 0, 0, 0, 3072,
	0, 0, 3042, 0, 3074, 0, 3081, 3082, 0, 0,
	0, 0, 0, 2951, 980, 2953, 2954, 0, 493, 3083,
	980, 2571, 2960, 2961, 0, 0, 493, 2807, 3101, 0,
	3071, 0, 980, 980, 0, 0, 3077, 3069, 0, 0,
	0, 0, 0, 2997, 3098, 3099, 0, 0, 0, 3084,
	3091, 3073, 0, 2776, 3009, 2735, 2126, 0, 3076, 0,
	0, 137, 3092, 0, 0, 0, 0, 0, 0, 0,
	0, 980, 0, 0, 3147, 3149, 0, 2802, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3135,
	0, 0, 0, 2808, 0, 0, 3140, 3141, 3142, 0,
	0, 0, 0, 0, 2643, 0, 0, 0, 3126, 0,
	0, 3118, 0, 0, 0, 3138, 0, 0, 0, 0,
	3127, 0, 0, 0, 0, 0, 0, 0, 980, 3174,
	0, 3144, 0, 2849, 0, 0, 0, 0, 0, 0,
	3139, 0, 1302, 1302, 1302, 1308, 1302, 1302, 1308, 1302,
	1308, 1317, 1318, 0, 0, 137, 137, 137, 137, 137,
	0, 0, 3184, 0, 0, 0, 0, 0, 137, 0,
	0, 0, 137, 0, 0, 0, 137, 0, 0, 3103,
	3104, 3105, 3106, 0, 137, 0, 3155, 3110, 0, 3185,
	1279, 3113, 3114, 0, 3183, 0, 0, 980, 3167, 3168,
	3128, 3129, 3130, 3131, 0, 0, 3132, 3166, 3161, 3134,
	3153, 0, 0, 3156, 2728, 0, 3187, 0, 1279, 0,
	0, 0, 0, 0, 0, 0, 3243, 0, 2040, 0,
	0, 3188, 2727, 0, 0, 980, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3210, 0, 3200,
	2902, 0, 0, 2902, 3264, 0, 3215, 0, 3169, 3170,
	0, 0, 3229, 3228, 0, 0, 0, 2930, 0, 0,
	0, 0, 0, 3154, 517, 2362, 3218, 3271, 0, 3280,
	0, 3282, 3283, 3284, 3233, 3234, 0, 137, 1969, 1971,
	0, 3240, 3244, 0, 0, 3267, 1976, 3263, 3246, 0,
	980, 980, 980, 0, 3247, 0, 493, 0, 0, 3261,
	0, 137, 493, 3257, 3260, 0, 82, 0, 3266, 0,
	0, 0, 0, 0, 0, 0, 0, 137, 3270, 493,
	3287, 980, 0, 493, 2008, 2009, 517, 493, 493, 0,
	493, 2015, 2016, 2017, 2018, 0, 0, 0, 3304, 3236,
	3237, 0, 2829, 0, 0, 0, 2880, 0, 0, 3302,
	3029, 2837, 2842, 980, 0, 0, 0, 137, 980, 0,
	0, 2829, 0, 2901, 980, 0, 2901, 980, 980, 0,
	3279, 2044, 3281, 0, 0, 0, 528, 0, 1304, 1306,
	3269, 1310, 1312, 2902, 1315, 82, 3288, 3175, 0, 3176,
	0, 3177, 3179, 3332, 0, 0, 3355, 3356, 2728, 0,
	2728, 3330, 0, 3286, 0, 517, 3331, 0, 0, 1204,
	0, 0, 0, 0, 2728, 3333, 0, 0, 0, 0,
	0, 0, 0, 3341, 0, 82, 0, 3371, 3352, 0,
	0, 0, 3359, 3349, 3361, 0, 3364, 3373, 3362, 3351,
	0, 0, 0, 980, 3354, 980, 1233, 1232, 1242, 1243,
	1235, 1236, 1237, 1238, 1239, 1240, 1241, 1234, 0, 132,
	1244, 0, 0, 3296, 0, 432, 0, 0, 0, 0,
	132, 0, 0, 452, 980, 3289, 0, 0, 0, 0,
	0, 0, 0, 0, 507, 0, 0, 0, 0, 0,
	0, 0, 3442, 0, 3431, 3433, 0, 0, 3480, 529,
	0, 0, 2727, 0, 3466, 904, 2901, 0, 132, 0,
	2727, 3462, 0, 0, 0, 3461, 0, 3468, 3467, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 132, 3287,
	3335, 3476, 0, 2643, 0, 0, 1279, 2574, 0, 82,
	132, 0, 0, 0, 82, 0, 0, 980, 0, 0,
	0, 0, 0, 3492, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3489, 1233, 1232, 1242, 1243, 1235,
	1236, 1237, 1238, 1239, 1240, 1241, 1234, 0, 0, 1244,
	3510, 0, 0, 0, 137, 0, 980, 0, 0, 0,
	0, 0, 0, 3523, 0, 3536, 0, 0, 3513, 3511,
	0, 0, 3538, 1233, 1232, 1242, 1243, 1235, 1236, 1237,
	1238, 1239, 1240, 1241, 1234, 3529, 0, 1244, 493, 0,
	0, 0, 0, 0, 0, 493, 0, 3537, 0, 0,
	0, 2829, 0, 0, 3532, 0, 0, 0, 0, 0,
	0, 0, 0, 490, 0, 0, 0, 3560, 0, 0,
	0, 0, 3562, 3548, 3002, 3004, 3006, 2829, 0, 0,
	0, 0, 0, 0, 0, 82, 0, 980, 0, 0,
	0, 82, 82, 0, 0, 82, 0, 0, 0, 3584,
	3466, 3572, 0, 3591, 0, 0, 3592, 3591, 3577, 3579,
	0, 3481, 3482, 0, 3582, 2807, 3588, 0, 3589, 3604,
	0, 3596, 82, 0, 0, 0, 0, 82, 3602, 0,
	3600, 0, 137, 0, 0, 0, 3620, 3623, 3640, 0,
	2616, 0, 0, 3616, 2063, 3518, 3521, 517, 3641, 490,
	3642, 3644, 980, 3639, 3634, 3615, 3653, 3647, 82, 980,
	980, 980, 82, 82, 3614, 3655, 3649, 82, 3613, 0,
	3625, 0, 3654, 0, 0, 3591, 3657, 82, 2727, 3663,
	0, 2605, 0, 0, 0, 0, 0, 0, 0, 3591,
	0, 0, 0, 0, 0, 0, 0, 82, 3681, 0,
	82, 0, 0, 0, 3689, 82, 0, 0, 3692, 3591,
	0, 0, 2181, 0, 3686, 980, 0, 0, 0, 0,
	0, 0, 0, 82, 0, 82, 0, 0, 0, 82,
	132, 0, 0, 0, 0, 3591, 0, 3591, 0, 0,
	0, 3583, 0, 3708, 0, 0, 0, 82, 0, 0,
	82, 980, 0, 0, 0, 0, 82, 0, 0, 3591,
	0, 82, 0, 0, 3716, 3521, 0, 0, 3591, 0,
	0, 0, 0, 3591, 0, 0, 0, 0, 0, 0,
	0, 0, 3367, 0, 2216, 0, 0, 0, 132, 1233,
	1232, 1242, 1243, 1235, 1236, 1237, 1238, 1239, 1240, 1241,
	1234, 0, 0, 1244, 2237, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 980, 0, 0, 0, 0,
	0, 0, 137, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 507, 0, 1303, 1305, 1307, 1309, 1311,
	1313, 1314, 1316, 0, 0, 0, 0, 0, 507, 3670,
	980, 0, 0, 2604, 0, 0, 0, 0, 980, 0,
	3690, 0, 137, 0, 137, 0, 0, 0, 2264, 0,
	2266, 0, 2727, 0, 2727, 0, 3693, 0, 0, 0,
	0, 0, 0, 3699, 0, 0, 0, 0, 2727, 0,
	0, 0, 0, 2275, 2276, 2277, 2278, 980, 0, 0,
	2282, 2284, 0, 0, 2287, 0, 0, 2290, 2291, 0,
	0, 0, 2296, 2297, 0, 0, 0, 0, 2303, 2304,
	0, 2305, 0, 0, 2308, 2309, 0, 2310, 2311, 0,
	0, 2315, 2316, 2317, 2318, 2319, 0, 0, 0, 0,
	2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333,
	2334, 2335, 493, 540, 0, 0, 0, 0, 0, 0,
	980, 1233, 1232, 1242, 1243, 1235, 1236, 1237, 1238, 1239,
	1240, 1241, 1234, 0, 0, 1244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2624, 2625,
	2626, 2627, 2628, 2629, 2630, 2631, 2632, 2633, 2634, 0,
	0, 2263, 0, 133, 0, 980, 0, 980, 567, 980,
	0, 0, 0, 0, 133, 0, 137, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 508, 1233,
	1232, 1242, 1243, 1235, 1236, 1237, 1238, 1239, 1240, 1241,
	1234, 0, 0, 1244, 0, 0, 0, 0, 0, 905,
	0, 0, 133, 973, 0, 0, 0, 0, 134, 980,
	0, 0, 0, 980, 0, 0, 0, 2418, 0, 134,
	0, 0, 133, 0, 0, 0, 0, 0, 0, 0,
	980, 0, 0, 0, 133, 0, 0, 0, 0, 0,
	2392, 0, 0, 0, 0, 0, 0, 0, 2399, 0,
	0, 0, 0, 0, 0, 0, 0, 134, 974, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 134, 0, 0,
	0, 2386, 0, 0, 0, 0, 0, 0, 0, 134,
	980, 0, 566, 0, 2396, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 980, 0, 0, 0,
	0, 0, 0, 0, 0, 2387, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2579,
	2580, 2581, 2582, 2583, 2584, 2395, 0, 0, 0, 0,
	980, 0, 0, 0, 0, 0, 451, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1352, 0, 0, 904,
	0, 0, 0, 0, 904, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 493, 0, 0, 0, 903, 0,
	0, 980, 972, 2863, 2864, 2865, 2866, 2867, 0, 0,
	0, 0, 0, 2400, 980, 0, 980, 2418, 0, 0,
	0, 980, 0, 2406, 1011, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 980, 2665, 2666, 0, 0, 0,
	2392, 0, 0, 0, 0, 0, 0, 0, 2399, 0,
	0, 0, 0, 0, 0, 0, 137, 0, 2398, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 132,
	493, 0, 0, 980, 1448, 452, 0, 0, 137, 0,
	0, 0, 0, 0, 2396, 0, 0, 0, 0, 132,
	0, 0, 132, 137, 0, 1448, 452, 0, 0, 0,
	0, 0, 1479, 0, 133, 0, 0, 0, 0, 0,
	0, 0, 0, 2410, 0, 0, 0, 0, 132, 132,
	132, 132, 0, 132, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2395, 0, 0, 0, 0,
	2417, 0, 0, 0, 1792, 0, 0, 0, 0, 0,
	0, 0, 2403, 0, 0, 0, 0, 0, 0, 134,
	0, 0, 133, 2412, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2400, 0, 2393, 0, 0, 0, 0,
	0, 0, 0, 2406, 0, 0, 0, 508, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 134, 0, 0,
	0, 0, 508, 2389, 0, 0, 0, 0, 0, 0,
	0, 0, 1220, 0, 0, 0, 0, 0, 2398, 0,
	2391, 0, 0, 2860, 0, 0, 0, 0, 0, 0,
	0, 0, 2402, 0, 507, 0, 2868, 0, 0, 0,
	0, 0, 0, 0, 0, 132, 0, 2877, 2878, 2879,
	0, 0, 0, 0, 2884, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1222, 0, 0,
	132, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2410, 1479, 0, 0, 0, 0, 2904,
	0, 0, 2390, 2394, 2397, 0, 2401, 2404, 2405, 2407,
	2408, 2409, 2411, 2413, 2414, 2415, 2416, 0, 0, 0,
	2417, 0, 0, 0, 0, 0, 0, 1953, 0, 0,
	0, 0, 2403, 0, 0, 0, 0, 2937, 0, 0,
	0, 0, 0, 2412, 0, 0, 0, 0, 0, 0,
	507, 0, 1953, 1953, 1953, 0, 0, 0, 1953, 1953,
	1953, 1953, 0, 1953, 1953, 0, 0, 0, 904, 1953,
	0, 0, 0, 0, 0, 2393, 0, 0, 0, 0,
	0, 1767, 0, 0, 0, 0, 0, 0, 0, 1953,
	1953, 1953, 1953, 0, 0, 1953, 1953, 1953, 1953, 1953,
	0, 0, 0, 2389, 1953, 1953, 1953, 1953, 1953, 1953,
	1953, 1953, 1953, 1953, 1953, 1953, 132, 132, 132, 0,
	2391, 0, 0, 904, 0, 0, 0, 0, 0, 0,
	0, 0, 2402, 0, 0, 0, 0, 1479, 0, 0,
	2388, 576, 577, 578, 579, 580, 581, 582, 583, 584,
	585, 586, 587, 588, 589, 590, 591, 592, 593, 594,
	595, 596, 597, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 611, 612, 613, 614,
	615, 616, 617, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2390, 2394, 2397, 0, 2401, 2404, 2405, 2407,
	2408, 2409, 2411, 2413, 2414, 2415, 2416, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 132, 0, 0, 0, 0,
	0, 132, 132, 0, 0, 0, 0, 0, 132, 0,
	0, 0, 0, 0, 0, 0, 3107, 3108, 3109, 0,
	3111, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3120, 3121, 0, 3123, 0, 0, 3124,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	133, 0, 0, 905, 0, 0, 0, 0, 905, 0,
	0, 0, 3137, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2388, 0, 0, 0, 0, 134, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3173, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3178,
	3180, 1436, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 133, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 133, 0, 0, 133, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 133, 133, 133, 133, 0, 133, 134, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 134, 0,
	0, 134, 0, 0, 3248, 3249, 3250, 3251, 0, 0,
	0, 0, 903, 0, 3255, 3256, 0, 903, 1362, 0,
	0, 0, 0, 0, 0, 0, 0, 134, 134, 134,
	134, 0, 134, 0, 0, 0, 0, 0, 0, 0,
	0, 3272, 3273, 3274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 132, 0,
	0, 0, 0, 0, 0, 0, 3297, 3298, 3299, 0,
	3300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2172, 2173, 132, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 508, 0,
	1866, 1439, 0, 0, 0, 0, 0, 1447, 451, 133,
	0, 0, 0, 0, 0, 0, 132, 0, 507, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1447, 451,
	0, 0, 0, 0, 133, 0, 0, 0, 0, 0,
	0, 1220, 0, 3342, 0, 0, 0, 0, 1916, 0,
	0, 0, 0, 0, 0, 1867, 0, 1399, 0, 0,
	0, 0, 0, 0, 134, 0, 0, 0, 0, 0,
	3358, 0, 3360, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3368, 0, 134,
	0, 0, 0, 0, 1479, 0, 1222, 3549, 0, 0,
	0, 0, 0, 1915, 508, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1813, 0, 0,
	0, 0, 905, 0, 0, 0, 0, 3443, 0, 0,
	0, 0, 0, 0, 0, 1835, 0, 3452, 0, 0,
	0, 0, 1399, 3463, 0, 0, 0, 0, 0, 0,
	3469, 0, 3470, 3471, 3472, 3473, 0, 0, 0, 0,
	1953, 0, 1386, 0, 1953, 1953, 1953, 1953, 1953, 0,
	133, 133, 133, 0, 0, 0, 0, 905, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1870,
	0, 1916, 0, 1953, 0, 973, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 134, 134, 134, 0, 0,
	0, 0, 132, 0, 0, 0, 0, 1870, 0, 0,
	132, 0, 0, 507, 1400, 0, 1915, 1386, 0, 132,
	974, 0, 132, 2373, 1479, 3530, 904, 0, 3533, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1870,
	0, 1870, 0, 0, 1958, 0, 0, 0, 0, 133,
	0, 1959, 0, 1870, 1870, 133, 133, 0, 0, 0,
	0, 0, 133, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 903, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3571, 0, 0, 0, 0, 0, 0, 0, 1400,
	2001, 2002, 0, 132, 134, 0, 0, 0, 0, 0,
	134, 134, 0, 0, 0, 0, 0, 134, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	132, 0, 0, 0, 0, 0, 903, 0, 3607, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1870, 0, 0, 0, 972, 0, 0, 1413, 1416, 1417,
	1418, 1419, 1420, 1421, 0, 1422, 1423, 1424, 1425, 1426,
	1427, 1428, 1429, 0, 1401, 1402, 1403, 1404, 1380, 1384,
	1414, 1381, 1387, 1383, 1385, 1382, 0, 1388, 1389, 1390,
	1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1405, 1406,
	1407, 1408, 1409, 1410, 1411, 1412, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 132, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1953, 0, 0,
	0, 3696, 3697, 0, 0, 1953, 0, 1479, 0, 0,
	0, 0, 1413, 1416, 1417, 1418, 1419, 1420, 1421, 0,
	1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 0, 1401,
	1402, 1403, 1404, 1380, 1384, 1414, 1381, 1387, 1383, 1385,
	1382, 0, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395,
	1396, 1397, 1398, 1405, 1406, 1407, 1408, 1409, 1410, 1411,
	1412, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 904,
	132, 132, 132, 132, 132, 0, 0, 0, 0, 0,
	0, 0, 0, 507, 0, 0, 0, 132, 0, 1415,
	0, 507, 0, 0, 0, 0, 1953, 0, 0, 132,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 133, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 133, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 134, 0, 0,
	133, 0, 508, 0, 1415, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 134, 0, 0, 0, 0, 0, 0,
	39, 0, 132, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 63, 0, 0, 0, 0, 0,
	79, 0, 0, 42, 0, 134, 132, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 132, 0, 0, 0, 0, 0, 1916, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 83, 0, 0, 0, 0, 3419, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 132, 0, 0, 0, 0, 0, 0, 3413,
	0, 0, 3659, 3662, 3658, 0, 0, 0, 0, 529,
	0, 0, 0, 1915, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 39, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 63, 0, 0, 0,
	0, 0, 79, 0, 0, 42, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2198, 904, 0, 0, 0,
	2198, 0, 0, 0, 0, 44, 75, 48, 47, 50,
	0, 0, 0, 0, 83, 0, 133, 0, 0, 3419,
	3414, 0, 2198, 0, 133, 2198, 0, 508, 0, 0,
	0, 0, 0, 133, 0, 0, 133, 54, 78, 77,
	905, 3413, 0, 0, 49, 0, 3719, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2241, 0,
	0, 0, 2423, 0, 0, 0, 0, 1870, 0, 0,
	0, 134, 0, 0, 0, 0, 0, 0, 0, 134,
	0, 0, 0, 0, 0, 0, 0, 0, 134, 0,
	0, 134, 0, 0, 0, 0, 61, 62, 0, 3415,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3422,
	3416, 3417, 3418, 3420, 3421, 0, 0, 133, 0, 70,
	0, 71, 0, 0, 0, 0, 0, 44, 75, 48,
	47, 50, 0, 0, 0, 0, 0, 0, 0, 132,
	0, 0, 3414, 0, 133, 0, 72, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 52, 0, 0, 54,
	78, 77, 0, 0, 0, 0, 49, 0, 0, 0,
	0, 0, 134, 0, 3423, 76, 0, 58, 59, 65,
	0, 66, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 134,
	0, 1866, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 61, 62,
	0, 3415, 0, 0, 0, 0, 0, 0, 0, 903,
	133, 3422, 3416, 3417, 3418, 3420, 3421, 0, 0, 0,
	0, 70, 0, 71, 0, 0, 0, 0, 0, 0,
	0, 1916, 0, 0, 0, 0, 1867, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 507, 72, 0,
	0, 904, 0, 0, 0, 0, 0, 0, 52, 0,
	0, 0, 0, 0, 0, 134, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3423, 76, 0, 58,
	59, 65, 0, 66, 2473, 0, 1915, 0, 0, 0,
	0, 0, 0, 2480, 2484, 0, 0, 0, 0, 0,
	0, 0, 0, 2644, 133, 133, 133, 133, 133, 0,
	0, 0, 0, 0, 0, 0, 0, 508, 0, 0,
	0, 133, 0, 0, 0, 508, 0, 0, 0, 0,
	0, 51, 53, 133, 0, 0, 0, 74, 0, 0,
	0, 0, 0, 1953, 0, 1953, 0, 1953, 1953, 0,
	0, 0, 2198, 0, 0, 0, 0, 0, 2521, 134,
	134, 134, 134, 134, 0, 0, 0, 0, 0, 0,
	1870, 1870, 0, 0, 0, 0, 134, 0, 0, 39,
	0, 0, 0, 0, 2733, 0, 0, 0, 134, 0,
	0, 0, 0, 63, 0, 0, 0, 0, 0, 79,
	0, 0, 42, 0, 0, 39, 0, 0, 0, 1870,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 63,
	1870, 0, 0, 0, 0, 79, 0, 0, 42, 0,
	0, 0, 0, 0, 0, 0, 133, 132, 529, 0,
	0, 83, 0, 0, 0, 0, 3419, 0, 0, 0,
	0, 0, 0, 51, 53, 0, 0, 0, 0, 74,
	133, 0, 0, 0, 0, 0, 2614, 83, 3413, 0,
	0, 0, 3419, 3714, 0, 0, 133, 507, 0, 507,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 134, 903, 0, 3413, 0, 0, 0, 0, 3704,
	0, 0, 0, 0, 0, 0, 0, 0, 2423, 0,
	2836, 2841, 0, 0, 0, 134, 133, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 134, 0, 0, 0, 1870, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 44, 75, 48, 47, 50, 0,
	0, 0, 0, 0, 0, 2838, 2843, 0, 0, 3414,
	0, 134, 0, 2732, 0, 0, 0, 0, 0, 0,
	44, 75, 48, 47, 50, 0, 54, 78, 77, 0,
	0, 0, 0, 49, 0, 3414, 0, 0, 0, 0,
	2644, 0, 1866, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 54, 78, 77, 0, 0, 0, 0, 49,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 132, 0, 0, 0, 0, 0, 0, 2783, 2784,
	2785, 0, 0, 0, 0, 61, 62, 0, 3415, 0,
	0, 0, 0, 0, 0, 0, 0, 1867, 3422, 3416,
	3417, 3418, 3420, 3421, 0, 0, 0, 0, 70, 2812,
	71, 61, 62, 0, 3415, 0, 0, 0, 0, 39,
	40, 0, 0, 0, 3422, 3416, 3417, 3418, 3420, 3421,
	904, 0, 0, 63, 70, 72, 71, 0, 0, 79,
	0, 2845, 42, 67, 68, 52, 2850, 0, 0, 0,
	64, 0, 2854, 0, 0, 2855, 2856, 0, 0, 0,
	0, 72, 0, 3423, 76, 0, 58, 59, 65, 0,
	66, 52, 0, 0, 0, 0, 0, 55, 0, 0,
	0, 83, 0, 133, 0, 0, 0, 0, 0, 3423,
	76, 0, 58, 59, 65, 0, 66, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 39, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 63, 903,
	0, 1870, 0, 2909, 79, 0, 0, 42, 134, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2909, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 83, 0, 0, 0,
	0, 3419, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 44, 75, 48, 47, 50, 0,
	0, 0, 0, 3413, 0, 0, 0, 0, 3691, 0,
	0, 508, 0, 0, 0, 2644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 54, 78, 77, 0,
	0, 0, 0, 49, 0, 2996, 0, 0, 0, 0,
	51, 53, 0, 0, 0, 0, 74, 0, 69, 0,
	0, 507, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 51, 53, 0, 0,
	0, 0, 74, 0, 2484, 0, 0, 0, 0, 0,
	0, 0, 0, 507, 0, 61, 62, 0, 0, 44,
	75, 48, 47, 50, 2733, 39, 0, 0, 507, 0,
	0, 0, 0, 0, 3414, 0, 0, 0, 70, 63,
	71, 0, 0, 0, 0, 79, 0, 0, 42, 0,
	0, 54, 78, 77, 0, 0, 0, 0, 49, 0,
	2733, 0, 0, 0, 0, 72, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 52, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1870, 0, 83, 0, 0,
	0, 0, 3419, 56, 76, 0, 58, 59, 65, 0,
	66, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	61, 62, 0, 3415, 3413, 0, 0, 0, 0, 3683,
	0, 0, 0, 3422, 3416, 3417, 3418, 3420, 3421, 0,
	0, 133, 0, 70, 903, 71, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2996, 0, 0, 0, 0, 0, 0, 2996, 2996, 2996,
	72, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	52, 508, 0, 508, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 39, 134, 0, 3423, 76,
	0, 58, 59, 65, 0, 66, 0, 0, 0, 63,
	44, 75, 48, 47, 50, 79, 0, 0, 42, 0,
	0, 0, 0, 2732, 0, 3414, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 54, 78, 77, 0, 0, 0, 0, 49,
	0, 0, 0, 0, 0, 0, 0, 83, 0, 2732,
	0, 0, 3419, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2733,
	51, 53, 0, 0, 3413, 0, 74, 0, 0, 3668,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 61, 62, 0, 3415, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3422, 3416, 3417, 3418, 3420, 3421,
	0, 0, 0, 3239, 70, 0, 71, 0, 0, 0,
	0, 0, 0, 0, 0, 133, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 72, 0, 0, 0, 0, 0, 0, 3265, 0,
	0, 52, 0, 0, 0, 0, 2996, 0, 0, 0,
	44, 75, 48, 47, 50, 51, 53, 0, 2733, 3423,
	76, 74, 58, 59, 65, 3414, 66, 0, 0, 0,
	134, 0, 0, 0, 2644, 0, 0, 0, 0, 0,
	0, 0, 54, 78, 77, 3292, 0, 0, 0, 49,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 61, 62, 0, 3415, 0, 0, 0, 2732, 0,
	0, 0, 0, 0, 3422, 3416, 3417, 3418, 3420, 3421,
	0, 0, 0, 0, 70, 2733, 71, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 72, 0, 2996, 0, 2996, 0, 2996, 0, 0,
	0, 52, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3423,
	76, 0, 58, 59, 65, 0, 66, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 51, 53, 0, 0,
	0, 0, 74, 0, 0, 0, 0, 2732, 0, 0,
	0, 3445, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 903, 0, 0, 0, 0, 1870, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 508, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 508, 1870, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 508, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2732, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2996, 0,
	0, 0, 0, 0, 0, 0, 51, 53, 0, 0,
	0, 0, 74, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3566,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3570, 0, 1870, 0, 0, 0, 0, 2996,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 863, 1870, 367, 625, 867, 710, 733, 876, 739,
	741, 804, 686, 781, 301, 730, 687, 0, 0, 678,
	534, 679, 711, 218, 533, 837, 782, 865, 767, 797,
	807, 217, 205, 774, 773, 854, 722, 721, 802, 850,
	864, 0, 0, 633, 264, 0, 0, 391, 355, 284,
	0, 3566, 765, 0, 618, 619, 750, 806, 698, 793,
	869, 731, 798, 870, 83, 0, 1193, 0, 0, 453,
	557, 556, 559, 560, 561, 562, 0, 0, 144, 558,
	563, 564, 565, 0, 760, 803, 881, 677, 531, 548,
	682, 632, 0, 855, 718, 719, 222, 0, 0, 0,
	0, 0, 0, 0, 763, 780, 822, 747, 386, 809,
	818, 832, 740, 319, 237, 0, 0, 0, 0, 545,
	546, 1951, 0, 0, 0, 648, 0, 547, 0, 692,
	543, 576, 577, 578, 579, 580, 581, 582, 583, 584,
	585, 586, 587, 588, 589, 590, 591, 592, 593, 594,
	595, 596, 597, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 611, 612, 613, 614,
	615, 616, 617, 549, 0, 0, 0, 697, 675, 716,
	824, 676, 674, 285, 689, 621, 853, 748, 253, 161,
	859, 746, 646, 812, 693, 841, 734, 261, 691, 162,
	688, 694, 732, 296, 821, 827, 630, 165, 263, 838,
	712, 725, 206, 0, 331, 799, 385, 537, 233, 785,
	330, 265, 378, 813, 861, 384, 735, 362, 392, 396,
	229, 768, 197, 352, 220, 215, 717, 831, 681, 238,
	318, 210, 257, 751, 805, 713, 202, 816, 792, 843,
	351, 375, 167, 281, 376, 395, 185, 368, 282, 289,
	199, 201, 200, 179, 345, 374, 191, 204, 839, 826,
	845, 708, 695, 700, 696, 724, 862, 247, 239, 846,
	844, 726, 305, 188, 778, 771, 764, 389, 151, 340,
	339, 738, 246, 829, 152, 143, 326, 153, 254, 170,
	849, 398, 184, 259, 369, 536, 232, 295, 208, 801,
	306, 723, 164, 322, 277, 279, 276, 280, 236, 147,
	154, 825, 324, 342, 373, 186, 358, 145, 146, 148,
	156, 333, 157, 158, 868, 271, 224, 228, 240, 251,
	800, 329, 359, 390, 794, 181, 173, 361, 383, 192,
	341, 344, 397, 823, 180, 175, 857, 840, 787, 753,
	759, 683, 0, 174, 819, 715, 727, 707, 795, 706,
	235, 811, 381, 382, 207, 399, 624, 872, 176, 690,
	871, 292, 300, 291, 874, 377, 858, 788, 777, 775,
	684, 856, 786, 776, 260, 227, 242, 316, 267, 317,
	243, 287, 286, 288, 269, 779, 0, 171, 0, 356,
	866, 883, 360, 189, 701, 833, 372, 150, 323, 190,
	234, 225, 315, 290, 182, 245, 354, 258, 266, 815,
	880, 304, 332, 196, 387, 353, 221, 635, 297, 647,
	641, 643, 642, 639, 640, 638, 637, 636, 649, 622,
	623, 626, 627, 628, 770, 860, 685, 631, 836, 644,
	645, 808, 878, 620, 203, 569, 661, 662, 663, 570,
	664, 665, 571, 572, 666, 667, 668, 669, 573, 670,
	671, 672, 650, 651, 652, 653, 654, 655, 656, 657,
	660, 658, 659, 0, 766, 312, 172, 183, 195, 214,
	212, 226, 255, 278, 283, 310, 343, 348, 363, 364,
	365, 366, 216, 0, 219, 194, 327, 193, 268, 248,
	311, 370, 371, 320, 209, 629, 166, 177, 262, 879,
	325, 231, 673, 680, 699, 702, 703, 704, 705, 709,
	714, 720, 728, 729, 737, 742, 743, 744, 745, 752,
	754, 755, 756, 757, 758, 761, 762, 772, 783, 784,
	790, 791, 0, 814, 817, 634, 828, 830, 834, 835,
	842, 847, 848, 873, 877, 882, 388, 213, 769, 789,
	820, 178, 187, 198, 211, 223, 230, 241, 244, 249,
	250, 252, 256, 270, 272, 273, 274, 275, 293, 294,
	298, 299, 302, 303, 307, 308, 309, 313, 314, 321,
	155, 328, 334, 335, 336, 337, 338, 346, 347, 349,
	350, 357, 379, 380, 393, 394, 852, 749, 163, 0,
	0, 169, 0, 0, 0, 0, 0, 736, 168, 851,
	875, 796, 810, 863, 0, 367, 625, 867, 710, 733,
	876, 739, 741, 804, 686, 781, 301, 730, 687, 0,
	0, 678, 534, 679, 711, 218, 533, 837, 782, 865,
	767, 797, 807, 217, 205, 774, 773, 854, 722, 721,
	802, 850, 864, 0, 0, 633, 264, 0, 0, 391,
	355, 284, 0, 0, 765, 0, 618, 619, 750, 806,
	698, 793, 869, 731, 798, 870, 83, 0, 0, 0,
	0, 453, 557, 556, 559, 560, 561, 562, 0, 0,
	144, 558, 563, 564, 565, 0, 760, 803, 881, 677,
	531, 548, 682, 632, 0, 855, 718, 719, 222, 0,
	0, 0, 0, 0, 0, 0, 763, 780, 822, 747,
	386, 809, 818, 832, 740, 319, 237, 0, 0, 0,
	0, 545, 546, 527, 0, 0, 0, 648, 0, 547,
	0, 692, 543, 576, 577, 578, 579, 580, 581, 582,
	583, 584, 585, 586, 587, 588, 589, 590, 591, 592,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 611, 612,
	613, 614, 615, 616, 617, 549, 0, 0, 0, 697,
	675, 716, 824, 676, 674, 285, 689, 621, 853, 748,
	253, 161, 859, 746, 646, 812, 693, 841, 734, 261,
	691, 162, 688, 694, 732, 296, 821, 827, 630, 165,
	263, 838, 712, 725, 206, 0, 331, 799, 385, 537,
	233, 785, 330, 265, 378, 813, 861, 384, 735, 362,
	392, 396, 229, 768, 197, 352, 220, 215, 717, 831,
	681, 238, 318, 210, 257, 751, 805, 713, 202, 816,
	792, 843, 351, 375, 167, 281, 376, 395, 185, 368,
	282, 289, 199, 201, 200, 179, 345, 374, 191, 204,
	839, 826, 845, 708, 695, 700, 696, 724, 862, 247,
	239, 846, 844, 726, 305, 188, 778, 771, 764, 389,
	151, 340, 339, 738, 246, 829, 152, 143, 326, 153,
	254, 170, 849, 398, 184, 259, 369, 536, 232, 295,
	208, 801, 306, 723, 164, 322, 277, 279, 276, 280,
	236, 147, 154, 825, 324, 342, 373, 186, 358, 145,
	146, 148, 156, 333, 157, 158, 868, 271, 224, 228,
	240, 251, 800, 329, 359, 390, 794, 181, 173, 361,
	383, 192, 341, 344, 397, 823, 180, 175, 857, 840,
	787, 753, 759, 683, 0, 174, 819, 715, 727, 707,
	795, 706, 235, 811, 381, 382, 207, 399, 624, 872,
	176, 690, 871, 292, 300, 291, 874, 377, 858, 788,
	777, 775, 684, 856, 786, 776, 260, 227, 242, 316,
	267, 317, 243, 287, 286, 288, 269, 779, 0, 171,
	0, 356, 866, 883, 360, 189, 701, 833, 372, 150,
	323, 190, 234, 225, 315, 290, 182, 245, 354, 258,
	266, 815, 880, 304, 332, 196, 387, 353, 221, 635,
	297, 647, 641, 643, 642, 639, 640, 638, 637, 636,
	649, 622, 623, 626, 627, 628, 770, 860, 685, 631,
	836, 644, 645, 808, 878, 620, 203, 569, 661, 662,
	663, 570, 664, 665, 571, 572, 666, 667, 668, 669,
	573, 670, 671, 672, 650, 651, 652, 653, 654, 655,
	656, 657, 660, 658, 659, 0, 766, 312, 172, 183,
	195, 214, 212, 226, 255, 278, 283, 310, 343, 348,
	363, 364, 365, 366, 216, 0, 219, 194, 327, 193,
	268, 248, 311, 370, 371, 320, 209, 629, 166, 177,
	262, 879, 325, 231, 673, 680, 699, 702, 703, 704,
	705, 709, 714, 720, 728, 729, 737, 742, 743, 744,
	745, 752, 754, 755, 756, 757, 758, 761, 762, 772,
	783, 784, 790, 791, 0, 814, 817, 634, 828, 830,
	834, 835, 842, 847, 848, 873, 877, 882, 388, 213,
	769, 789, 820, 178, 187, 198, 211, 223, 230, 241,
	244, 249, 250, 252, 256, 270, 272, 273, 274, 275,
	293, 294, 298, 299, 302, 303, 307, 308, 309, 313,
	314, 321, 155, 328, 334, 335, 336, 337, 338, 346,
	347, 349, 350, 357, 379, 380, 393, 394, 852, 749,
	163, 0, 0, 169, 0, 0, 0, 0, 0, 736,
	168, 851, 875, 796, 810, 863, 0, 367, 625, 867,
	710, 733, 876, 739, 741, 804, 686, 781, 301, 730,
	687, 0, 0, 678, 534, 679, 711, 218, 533, 837,
	782, 865, 767, 797, 807, 217, 205, 774, 773, 854,
	722, 721, 802, 850, 864, 0, 0, 633, 264, 0,
	0, 391, 355, 284, 0, 0, 765, 0, 618, 619,
	750, 806, 698, 793, 869, 731, 798, 870, 83, 0,
	1193, 0, 0, 453, 557, 556, 559, 560, 561, 562,
	0, 0, 144, 558, 563, 564, 565, 0, 760, 803,
	881, 677, 531, 548, 682, 632, 0, 855, 718, 719,
	222, 0, 0, 0, 0, 0, 0, 0, 763, 780,
	822, 747, 386, 809, 818, 832, 740, 319, 237, 0,
	0, 0, 0, 545, 546, 0, 0, 0, 0, 648,
	0, 547, 0, 692, 543, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 585, 586, 587, 588, 589, 590,
	591, 592, 593, 594, 595, 596, 597, 598, 599, 600,
	601, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	611, 612, 613, 614, 615, 616, 617, 549, 0, 0,
	0, 697, 675, 716, 824, 676, 674, 285, 689, 621,
	853, 748, 253, 161, 859, 746, 646, 812, 693, 841,
	734, 261, 691, 162, 688, 694, 732, 296, 821, 827,
	630, 165, 263, 838, 712, 725, 206, 0, 331, 799,
	385, 537, 233, 785, 330, 265, 378, 813, 861, 384,
	735, 362, 392, 396, 229, 768, 197, 352, 220, 215,
	717, 831, 681, 238, 318, 210, 257, 751, 805, 713,
	202, 816, 792, 843, 351, 375, 167, 281, 376, 395,
	185, 368, 282, 289, 199, 201, 200, 179, 345, 374,
	191, 204, 839, 826, 845, 708, 695, 700, 696, 724,
	862, 247, 239, 846, 844, 726, 305, 188, 778, 771,
	764, 389, 151, 340, 339, 738, 246, 829, 152, 143,
	326, 153, 254, 170, 849, 398, 184, 259, 369, 536,
	232, 295, 208, 801, 306, 723, 164, 322, 277, 279,
	276, 280, 236, 147, 154, 825, 324, 342, 373, 186,
	358, 145, 146, 148, 156, 333, 157, 158, 868, 271,
	224, 228, 240, 251, 800, 329, 359, 390, 794, 181,
	173, 361, 383, 192, 341, 344, 397, 823, 180, 175,
	857, 840, 787, 753, 759, 683, 0, 174, 819, 715,
	727, 707, 795, 706, 235, 811, 381, 382, 207, 399,
	624, 872, 176, 690, 871, 292, 300, 291, 874, 377,
	858, 788, 777, 775, 684, 856, 786, 776, 260, 227,
	242, 316, 267, 317, 243, 287, 286, 288, 269, 779,
	0, 171, 0, 356, 866, 883, 360, 189, 701, 833,
	372, 150, 323, 190, 234, 225, 315, 290, 182, 245,
	354, 258, 266, 815, 880, 304, 332, 196, 387, 353,
	221, 635, 297, 647, 641, 643, 642, 639, 640, 638,
	637, 636, 649, 622, 623, 626, 627, 628, 770, 860,
	685, 631, 836, 644, 645, 808, 878, 620, 203, 569,
	661, 662, 663, 570, 664, 665, 571, 572, 666, 667,
	668, 669, 573, 670, 671, 672, 650, 651, 652, 653,
	654, 655, 656, 657, 660, 658, 659, 0, 766, 312,
	172, 183, 195, 214, 212, 226, 255, 278, 283, 310,
	343, 348, 363, 364, 365, 366, 216, 0, 219, 194,
	327, 193, 268, 248, 311, 370, 371, 320, 209, 629,
	166, 177, 262, 879, 325, 231, 673, 680, 699, 702,
	703, 704, 705, 709, 714, 720, 728, 729, 737, 742,
	743, 744, 745, 752, 754, 755, 756, 757, 758, 761,
	762, 772, 783, 784, 790, 791, 0, 814, 817, 634,
	828, 830, 834, 835, 842, 847, 848, 873, 877, 882,
	388, 213, 769, 789, 820, 178, 187, 198, 211, 223,
	230, 241, 244, 249, 250, 252, 256, 270, 272, 273,
	274, 275, 293, 294, 298, 299, 302, 303, 307, 308,
	309, 313, 314, 321, 155, 328, 334, 335, 336, 337,
	338, 346, 347, 349, 350, 357, 379, 380, 393, 394,
	852, 749, 163, 0, 0, 169, 0, 0, 0, 0,
	0, 736, 168, 851, 875, 796, 810, 863, 0, 367,
	625, 867, 710, 733, 876, 739, 741, 804, 686, 781,
	301, 730, 687, 0, 0, 678, 534, 679, 711, 218,
	533, 837, 782, 865, 767, 797, 807, 217, 205, 774,
	773, 854, 722, 721, 802, 850, 864, 0, 0, 633,
	264, 0, 0, 391, 355, 284, 0, 0, 765, 0,
	618, 619, 750, 806, 698, 793, 869, 731, 798, 870,
	83, 0, 0, 0, 0, 453, 557, 556, 559, 560,
	561, 562, 0, 0, 144, 558, 563, 564, 565, 0,
	760, 803, 881, 677, 531, 548, 682, 632, 0, 855,
	718, 719, 222, 0, 0, 0, 0, 0, 0, 0,
	763, 780, 822, 747, 386, 809, 818, 832, 740, 319,
	237, 0, 0, 0, 0, 545, 546, 1951, 0, 0,
	0, 648, 0, 547, 0, 692, 543, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 585, 586, 587, 588,
	589, 590, 591, 592, 593, 594, 595, 596, 597, 598,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 611, 612, 613, 614, 615, 616, 617, 549,
	0, 0, 0, 697, 675, 716, 824, 676, 674, 285,
	689, 621, 853, 748, 253, 161, 859, 746, 646, 812,
	693, 841, 734, 261, 691, 162, 688, 694, 732, 296,
	821, 827, 630, 165, 263, 838, 712, 725, 206, 0,
	331, 799, 385, 537, 233, 785, 330, 265, 378, 813,
	861, 384, 735, 362, 392, 396, 229, 768, 197, 352,
	220, 215, 717, 831, 681, 238, 318, 210, 257, 751,
	805, 713, 202, 816, 792, 843, 351, 375, 167, 281,
	376, 395, 185, 368, 282, 289, 199, 201, 200, 179,
	345, 374, 191, 204, 839, 826, 845, 708, 695, 700,
	696, 724, 862, 247, 239, 846, 844, 726, 305, 188,
	778, 771, 764, 389, 151, 340, 339, 738, 246, 829,
	152, 143, 326, 153, 254, 170, 849, 398, 184, 259,
	369, 536, 232, 295, 208, 801, 306, 723, 164, 322,
	277, 279, 276, 280, 236, 147, 154, 825, 324, 342,
	373, 186, 358, 145, 146, 148, 156, 333, 157, 158,
	868, 271, 224, 228, 240, 251, 800, 329, 359, 390,
	794, 181, 173, 361, 383, 192, 341, 344, 397, 823,
	180, 175, 857, 840, 787, 753, 759, 683, 0, 174,
	819, 715, 727, 707, 795, 706, 235, 811, 381, 382,
	207, 399, 624, 872, 176, 690, 871, 292, 300, 291,
	874, 377, 858, 788, 777, 775, 684, 856, 786, 776,
	260, 227, 242, 316, 267, 317, 243, 287, 286, 288,
	269, 779, 0, 171, 0, 356, 866, 883, 360, 189,
	701, 833, 372, 150, 323, 190, 234, 225, 315, 290,
	182, 245, 354, 258, 266, 815, 880, 304, 332, 196,
	387, 353, 221, 635, 297, 647, 641, 643, 642, 639,
	640, 638, 637, 636, 649, 622, 623, 626, 627, 628,
	770, 860, 685, 631, 836, 644, 645, 808, 878, 620,
	203, 569, 661, 662, 663, 570, 664, 665, 571, 572,
	666, 667, 668, 669, 573, 670, 671, 672, 650, 651,
	652, 653, 654, 655, 656, 657, 660, 658, 659, 0,
	766, 312, 172, 183, 195, 214, 212, 226, 255, 278,
	283, 310, 343, 348, 363, 364, 365, 366, 216, 0,
	219, 194, 327, 193, 268, 248, 311, 370, 371, 320,
	209, 629, 166, 177, 262, 879, 325, 231, 673, 680,
	699, 702, 703, 704, 705, 709, 714, 720, 728, 729,
	737, 742, 743, 744, 745, 752, 754, 755, 756, 757,
	758, 761, 762, 772, 783, 784, 790, 791, 0, 814,
	817, 634, 828, 830, 834, 835, 842, 847, 848, 873,
	877, 882, 388, 213, 769, 789, 820, 178, 187, 198,
	211, 223, 230, 241, 244, 249, 250, 252, 256, 270,
	272, 273, 274, 275, 293, 294, 298, 299, 302, 303,
	307, 308, 309, 313, 314, 321, 155, 328, 334, 335,
	336, 337, 338, 346, 347, 349, 350, 357, 379, 380,
	393, 394, 852, 749, 163, 0, 0, 169, 0, 0,
	0, 0, 0, 736, 168, 851, 875, 796, 810, 863,
	0, 367, 625, 867, 710, 733, 876, 739, 741, 804,
	686, 781, 301, 730, 687, 0, 0, 678, 534, 679,
	711, 218, 533, 837, 782, 865, 767, 797, 807, 217,
	205, 774, 773, 854, 722, 721, 802, 850, 864, 0,
	0, 633, 264, 0, 0, 391, 355, 284, 0, 0,
	765, 0, 618, 619, 750, 806, 698, 793, 869, 731,
	2065, 870, 83, 0, 0, 0, 0, 453, 557, 556,
	559, 560, 561, 562, 0, 0, 144, 558, 563, 564,
	565, 2066, 760, 803, 881, 677, 531, 548, 682, 632,
	0, 855, 718, 719, 222, 0, 0, 0, 0, 0,
	0, 0, 763, 780, 822, 747, 386, 809, 818, 832,
	740, 319, 237, 0, 0, 0, 0, 545, 546, 0,
	0, 0, 0, 648, 0, 547, 0, 692, 543, 576,
	577, 578, 579, 580, 581, 582, 583, 584, 585, 586,
	587, 588, 589, 590, 591, 592, 593, 594, 595, 596,
	597, 598, 599, 600, 601, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 611, 612, 613, 614, 615, 616,
	617, 549, 0, 0, 0, 697, 675, 716, 824, 676,
	674, 285, 689, 621, 853, 748, 253, 161, 859, 746,
	646, 812, 693, 841, 734, 261, 691, 162, 688, 694,
	732, 296, 821, 827, 630, 165, 263, 838, 712, 725,
	206, 0, 331, 799, 385, 537, 233, 785, 330, 265,
	378, 813, 861, 384, 735, 362, 392, 396, 229, 768,
	197, 352, 220, 215, 717, 831, 681, 238, 318, 210,
	257, 751, 805, 713, 202, 816, 792, 843, 351, 375,
	167, 281, 376, 395, 185, 368, 282, 289, 199, 201,
	200, 179, 345, 374, 191, 204, 839, 826, 845, 708,
	695, 700, 696, 724, 862, 247, 239, 846, 844, 726,
	305, 188, 778, 771, 764, 389, 151, 340, 339, 738,
	246, 829, 152, 143, 326, 153, 254, 170, 849, 398,
	184, 259, 369, 536, 232, 295, 208, 801, 306, 723,
	164, 322, 277, 279, 276, 280, 236, 147, 154, 825,
	324, 342, 373, 186, 358, 145, 146, 148, 156, 333,
	157, 158, 868, 271, 224, 228, 240, 251, 800, 329,
	359, 390, 794, 181, 173, 361, 383, 192, 341, 344,
	397, 823, 180, 175, 857, 840, 787, 753, 759, 683,
	0, 174, 819, 715, 727, 707, 795, 706, 235, 811,
	381, 382, 207, 399, 624, 872, 176, 690, 871, 292,
	300, 291, 874, 377, 858, 788, 777, 775, 684, 856,
	786, 776, 260, 227, 242, 316, 267, 317, 243, 287,
	286, 288, 269, 779, 0, 171, 0, 356, 866, 883,
	360, 189, 701, 833, 372, 150, 323, 190, 234, 225,
	315, 290, 182, 245, 354, 258, 266, 815, 880, 304,
	332, 196, 387, 353, 221, 635, 297, 647, 641, 643,
	642, 639, 640, 638, 637, 636, 649, 622, 623, 626,
	627, 628, 770, 860, 685, 631, 836, 644, 645, 808,
	878, 620, 203, 569, 661, 662, 663, 570, 664, 665,
	571, 572, 666, 667, 668, 669, 573, 670, 671, 672,
	650, 651, 652, 653, 654, 655, 656, 657, 660, 658,
	659, 0, 766, 312, 172, 183, 195, 214, 212, 226,
	255, 278, 283, 310, 343, 348, 363, 364, 365, 366,
	216, 0, 219, 194, 327, 193, 268, 248, 311, 370,
	371, 320, 209, 629, 166, 177, 262, 879, 325, 231,
	673, 680, 699, 702, 703, 704, 705, 709, 714, 720,
	728, 729, 737, 742, 743, 744, 745, 752, 754, 755,
	756, 757, 758, 761, 762, 772, 783, 784, 790, 791,
	0, 814, 817, 634, 828, 830, 834, 835, 842, 847,
	848, 873, 877, 882, 388, 213, 769, 789, 820, 178,
	187, 198, 211, 223, 230, 241, 244, 249, 250, 252,
	256, 270, 272, 273, 274, 275, 293, 294, 298, 299,
	302, 303, 307, 308, 309, 313, 314, 321, 155, 328,
	334, 335, 336, 337, 338, 346, 347, 349, 350, 357,
	379, 380, 393, 394, 852, 749, 163, 0, 0, 169,
	0, 0, 0, 0, 0, 736, 168, 851, 875, 796,
	810, 863, 0, 367, 625, 867, 710, 733, 876, 739,
	741, 804, 686, 781, 301, 730, 687, 0, 0, 678,
	923, 679, 711, 218, 921, 837, 782, 865, 767, 797,
	807, 217, 205, 774, 773, 854, 722, 721, 802, 850,
	864, 0, 0, 633, 264, 0, 0, 391, 355, 284,
	0, 0, 765, 0, 618, 619, 750, 806, 698, 793,
	869, 731, 798, 870, 83, 0, 1193, 0, 0, 453,
	557, 556, 559, 560, 561, 562, 0, 0, 144, 558,
	563, 564, 565, 0, 760, 803, 881, 677, 940, 548,
	682, 632, 0, 855, 718, 719, 222, 0, 0, 0,
	0, 0, 0, 0, 763, 780, 822, 747, 386, 809,
	818, 832, 740, 319, 237, 0, 0, 0, 0, 545,
	546, 0, 0, 0, 0, 648, 0, 547, 0, 692,
	543, 576, 577, 578, 579, 580, 581, 582, 583, 584,
	585, 586, 587, 588, 589, 590, 591, 592, 593, 594,
	595, 596, 597, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 611, 612, 613, 614,
	615, 616, 617, 549, 0, 0, 0, 697, 675, 716,
	824, 676, 674, 285, 689, 621, 853, 748, 253, 161,
	859, 746, 646, 812, 693, 841, 734, 261, 691, 162,
	688, 694, 732, 296, 821, 827, 630, 165, 263, 838,
	712, 725, 206, 0, 331, 799, 385, 537, 233, 785,
	330, 265, 378, 813, 861, 384, 735, 362, 392, 396,
	229, 768, 197, 352, 220, 215, 717, 831, 681, 238,
	318, 210, 257, 751, 805, 713, 202, 816, 792, 843,
	351, 375, 167, 281, 376, 395, 185, 368, 282, 289,
	199, 201, 200, 179, 345, 374, 191, 204, 839, 826,
	845, 708, 695, 700, 696, 724, 862, 247, 239, 846,
	844, 726, 305, 188, 778, 771, 764, 389, 151, 340,
	339, 738, 246, 829, 152, 143, 326, 153, 254, 170,
	849, 398, 184, 259, 369, 536, 232, 295, 208, 801,
	306, 723, 164, 322, 277, 279, 276, 280, 236, 147,
	154, 825, 324, 342, 373, 186, 358, 145, 146, 148,
	156, 333, 157, 158, 868, 271, 224, 228, 240, 251,
	800, 329, 359, 390, 794, 181, 173, 361, 383, 192,
	341, 344, 397, 823, 180, 175, 857, 840, 787, 753,
	759, 683, 0, 174, 819, 715, 727, 707, 795, 706,
	235, 811, 381, 382, 207, 399, 624, 872, 176, 690,
	871, 292, 300, 291, 874, 377, 858, 788, 777, 775,
	684, 856, 786, 776, 260, 227, 242, 316, 267, 317,
	243, 287, 286, 288, 269, 779, 0, 171, 0, 356,
	866, 883, 360, 189, 701, 833, 372, 150, 323, 190,
	234, 225, 315, 290, 182, 245, 354, 258, 266, 815,
	880, 304, 332, 196, 387, 353, 221, 635, 297, 647,
	641, 643, 642, 639, 640, 638, 637, 636, 649, 622,
	623, 626, 627, 628, 770, 860, 685, 631, 836, 644,
	645, 808, 878, 620, 203, 569, 661, 662, 663, 570,
	664, 665, 571, 572, 666, 667, 668, 669, 573, 670,
	671, 672, 650, 651, 652, 653, 654, 655, 656, 657,
	660, 658, 659, 0, 766, 312, 172, 183, 195, 214,
	212, 226, 255, 278, 283, 310, 343, 348, 363, 364,
	365, 366, 216, 0, 219, 194, 327, 193, 268, 248,
	311, 370, 371, 320, 209, 629, 166, 177, 262, 879,
	325, 231, 673, 680, 699, 702, 703, 704, 705, 709,
	714, 720, 728, 729, 737, 742, 743, 744, 745, 752,
	754, 755, 756, 757, 758, 761, 762, 772, 783, 784,
	790, 791, 0, 814, 817, 634, 828, 830, 834, 835,
	842, 847, 848, 873, 877, 882, 388, 213, 769, 789,
	820, 178, 187, 198, 211, 223, 230, 241, 244, 249,
	250, 252, 256, 270, 272, 273, 274, 275, 293, 294,
	298, 299, 302, 303, 307, 308, 309, 313, 314, 321,
	155, 328, 334, 335, 336, 337, 338, 346, 347, 349,
	350, 357, 379, 380, 393, 394, 852, 749, 163, 0,
	0, 169, 0, 0, 0, 0, 0, 736, 168, 851,
	875, 796, 810, 863, 0, 367, 625, 867, 710, 733,
	876, 739, 741, 804, 686, 781, 301, 730, 687, 0,
	0, 678, 534, 679, 711, 218, 533, 837, 782, 865,
	767, 797, 807, 217, 205, 774, 773, 854, 722, 721,
	802, 850, 864, 0, 0, 633, 264, 0, 0, 391,
	355, 284, 0, 0, 765, 0, 618, 619, 750, 806,
	698, 793, 869, 731, 798, 870, 83, 0, 0, 0,
	0, 453, 557, 1985, 559, 560, 561, 562, 0, 0,
	144, 558, 563, 564, 565, 0, 760, 803, 881, 677,
	531, 548, 682, 632, 0, 855, 718, 719, 222, 0,
	0, 0, 0, 0, 0, 0, 763, 780, 822, 747,
	386, 809, 818, 832, 740, 319, 237, 0, 0, 0,
	0, 545, 546, 1951, 0, 0, 0, 648, 0, 547,
	0, 692, 543, 576, 577, 578, 579, 580, 581, 582,
	583, 584, 585, 586, 587, 588, 589, 590, 591, 592,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 611, 612,
	613, 614, 615, 616, 617, 549, 0, 0, 0, 697,
	675, 716, 824, 676, 674, 285, 689, 621, 853, 748,
	253, 161, 859, 746, 646, 812, 693, 841, 734, 261,
	691, 162, 688, 694, 732, 296, 821, 827, 630, 165,
	263, 838, 712, 725, 206, 0, 331, 799, 385, 537,
	233, 785, 330, 265, 378, 813, 861, 384, 735, 362,
	392, 396, 229, 768, 197, 352, 220, 215, 717, 831,
	681, 238, 318, 210, 257, 751, 805, 713, 202, 816,
	792, 843, 351, 375, 167, 281, 376, 395, 185, 368,
	282, 289, 199, 201, 200, 179, 345, 374, 191, 204,
	839, 826, 845, 708, 695, 700, 696, 724, 862, 247,
	239, 846, 844, 726, 305, 188, 778, 771, 764, 389,
	151, 340, 339, 738, 246, 829, 152, 143, 326, 153,
	254, 170, 849, 398, 184, 259, 369, 536, 232, 295,
	208, 801, 306, 723, 164, 322, 277, 279, 276, 280,
	236, 147, 154, 825, 324, 342, 373, 186, 358, 145,
	146, 148, 156, 333, 157, 158, 868, 271, 224, 228,
	240, 251, 800, 329, 359, 390, 794, 181, 173, 361,
	383, 192, 341, 344, 397, 823, 180, 175, 857, 840,
	787, 753, 759, 683, 0, 174, 819, 715, 727, 707,
	795, 706, 235, 811, 381, 382, 207, 399, 624, 872,
	176, 690, 871, 292, 300, 291, 874, 377, 858, 788,
	777, 775, 684, 856, 786, 776, 260, 227, 242, 316,
	267, 317, 243, 287, 286, 288, 269, 779, 0, 171,
	0, 356, 866, 883, 360, 189, 701, 833, 372, 150,
	323, 190, 234, 225, 315, 290, 182, 245, 354, 258,
	266, 815, 880, 304, 332, 196, 387, 353, 221, 635,
	297, 647, 641, 643, 642, 639, 640, 638, 637, 636,
	649, 622, 623, 626, 627, 628, 770, 860, 685, 631,
	836, 644, 645, 808, 878, 620, 203, 569, 661, 662,
	663, 570, 664, 665, 571, 572, 666, 667, 668, 669,
	573, 670, 671, 672, 650, 651, 652, 653, 654, 655,
	656, 657, 660, 658, 659, 0, 766, 312, 172, 183,
	195, 214, 212, 226, 255, 278, 283, 310, 343, 348,
	363, 364, 365, 366, 216, 0, 219, 194, 327, 193,
	268, 248, 311, 370, 371, 320, 209, 629, 166, 177,
	262, 879, 325, 231, 673, 680, 699, 702, 703, 704,
	705, 709, 714, 720, 728, 729, 737, 742, 743, 744,
	745, 752, 754, 755, 756, 757, 758, 761, 762, 772,
	783, 784, 790, 791, 0, 814, 817, 634, 828, 830,
	834, 835, 842, 847, 848, 873, 877, 882, 388, 213,
	769, 789, 820, 178, 187, 198, 211, 223, 230, 241,
	244, 249, 250, 252, 256, 270, 272, 273, 274, 275,
	293, 294, 298, 299, 302, 303, 307, 308, 309, 313,
	314, 321, 155, 328, 334, 335, 336, 337, 338, 346,
	347, 349, 350, 357, 379, 380, 393, 394, 852, 749,
	163, 0, 0, 169, 0, 0, 0, 0, 0, 736,
	168, 851, 875, 796, 810, 863, 0, 367, 625, 867,
	710, 733, 876, 739, 741, 804, 686, 781, 301, 730,
	687, 0, 0, 678, 534, 679, 711, 218, 533, 837,
	782, 865, 767, 797, 807, 217, 205, 774, 773, 854,
	722, 721, 802, 850, 864, 0, 0, 633, 264, 0,
	0, 391, 355, 284, 0, 0, 765, 0, 618, 619,
	750, 806, 698, 793, 869, 731, 798, 870, 83, 0,
	0, 0, 0, 453, 557, 1982, 559, 560, 561, 562,
	0, 0, 144, 558, 563, 564, 565, 0, 760, 803,
	881, 677, 531, 548, 682, 632, 0, 855, 718, 719,
	222, 0, 0, 0, 0, 0, 0, 0, 763, 780,
	822, 747, 386, 809, 818, 832, 740, 319, 237, 0,
	0, 0, 0, 545, 546, 1951, 0, 0, 0, 648,
	0, 547, 0, 692, 543, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 585, 586, 587, 588, 589, 590,
	591, 592, 593, 594, 595, 596, 597, 598, 599, 600,
	601, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	611, 612, 613, 614, 615, 616, 617, 549, 0, 0,
	0, 697, 675, 716, 824, 676, 674, 285, 689, 621,
	853, 748, 253, 161, 859, 746, 646, 812, 693, 841,
	734, 261, 691, 162, 688, 694, 732, 296, 821, 827,
	630, 165, 263, 838, 712, 725, 206, 0, 331, 799,
	385, 537, 233, 785, 330, 265, 378, 813, 861, 384,
	735, 362, 392, 396, 229, 768, 197, 352, 220, 215,
	717, 831, 681, 238, 318, 210, 257, 751, 805, 713,
	202, 816, 792, 843, 351, 375, 167, 281, 376, 395,
	185, 368, 282, 289, 199, 201, 200, 179, 345, 374,
	191, 204, 839, 826, 845, 708, 695, 700, 696, 724,
	862, 247, 239, 846, 844, 726, 305, 188, 778, 771,
	764, 389, 151, 340, 339, 738, 246, 829, 152, 143,
	326, 153, 254, 170, 849, 398, 184, 259, 369, 536,
	232, 295, 208, 801, 306, 723, 164, 322, 277, 279,
	276, 280, 236, 147, 154, 825, 324, 342, 373, 186,
	358, 145, 146, 148, 156, 333, 157, 158, 868, 271,
	224, 228, 240, 251, 800, 329, 359, 390, 794, 181,
	173, 361, 383, 192, 341, 344, 397, 823, 180, 175,
	857, 840, 787, 753, 759, 683, 0, 174, 819, 715,
	727, 707, 795, 706, 235, 811, 381, 382, 207, 399,
	624, 872, 176, 690, 871, 292, 300, 291, 874, 377,
	858, 788, 777, 775, 684, 856, 786, 776, 260, 227,
	242, 316, 267, 317, 243, 287, 286, 288, 269, 779,
	0, 171, 0, 356, 866, 883, 360, 189, 701, 833,
	372, 150, 323, 190, 234, 225, 315, 290, 182, 245,
	354, 258, 266, 815, 880, 304, 332, 196, 387, 353,
	221, 635, 297, 647, 641, 643, 642, 639, 640, 638,
	637, 636, 649, 622, 623, 626, 627, 628, 770, 860,
	685, 631, 836, 644, 645, 808, 878, 620, 203, 569,
	661, 662, 663, 570, 664, 665, 571, 572, 666, 667,
	668, 669, 573, 670, 671, 672, 650, 651, 652, 653,
	654, 655, 656, 657, 660, 658, 659, 0, 766, 312,
	172, 183, 195, 214, 212, 226, 255, 278, 283, 310,
	343, 348, 363, 364, 365, 366, 216, 0, 219, 194,
	327, 193, 268, 248, 311, 370, 371, 320, 209, 629,
	166, 177, 262, 879, 325, 231, 673, 680, 699, 702,
	703, 704, 705, 709, 714, 720, 728, 729, 737, 742,
	743, 744, 745, 752, 754, 755, 756, 757, 758, 761,
	762, 772, 783, 784, 790, 791, 0, 814, 817, 634,
	828, 830, 834, 835, 842, 847, 848, 873, 877, 882,
	388, 213, 769, 789, 820, 178, 187, 198, 211, 223,
	230, 241, 244, 249, 250, 252, 256, 270, 272, 273,
	274, 275, 293, 294, 298, 299, 302, 303, 307, 308,
	309, 313, 314, 321, 155, 328, 334, 335, 336, 337,
	338, 346, 347, 349, 350, 357, 379, 380, 393, 394,
	852, 749, 163, 0, 0, 169, 0, 0, 0, 0,
	0, 736, 168, 851, 875, 796, 810, 863, 39, 367,
	625, 867, 710, 733, 876, 739, 741, 804, 686, 781,
	301, 730, 687, 0, 0, 678, 534, 679, 711, 218,
	533, 837, 782, 865, 767, 797, 807, 217, 205, 774,
	773, 854, 722, 721, 802, 850, 864, 0, 0, 633,
	264, 0, 0, 391, 355, 284, 0, 0, 765, 0,
	618, 619, 750, 806, 698, 793, 869, 731, 798, 870,
	83, 0, 0, 0, 0, 453, 557, 556, 559, 560,
	561, 562, 0, 0, 144, 558, 563, 564, 565, 0,
	760, 803, 881, 677, 531, 548, 682, 632, 0, 855,
	718, 719, 222, 0, 0, 0, 0, 0, 0, 0,
	763, 780, 822, 747, 386, 809, 818, 832, 740, 319,
	237, 0, 0, 0, 0, 545, 546, 0, 0, 0,
	0, 648, 0, 547, 0, 692, 543, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 585, 586, 587, 588,
	589, 590, 591, 592, 593, 594, 595, 596, 597, 598,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 611, 612, 613, 614, 615, 616, 617, 549,
	0, 0, 0, 697, 675, 716, 824, 676, 674, 285,
	689, 621, 853, 748, 253, 161, 859, 746, 646, 812,
	693, 841, 734, 261, 691, 162, 688, 694, 732, 296,
	821, 827, 630, 165, 263, 838, 712, 725, 206, 0,
	331, 799, 385, 537, 233, 785, 330, 265, 378, 813,
	861, 384, 735, 362, 392, 396, 229, 768, 197, 352,
	220, 215, 717, 831, 681, 238, 318, 210, 257, 751,
	805, 713, 202, 816, 792, 843, 351, 375, 167, 281,
	376, 395, 185, 368, 282, 289, 199, 201, 200, 179,
	345, 374, 191, 204, 839, 826, 845, 708, 695, 700,
	696, 724, 862, 247, 239, 846, 844, 726, 305, 188,
	778, 771, 764, 389, 151, 340, 339, 738, 246, 829,
	152, 143, 326, 153, 254, 170, 849, 398, 184, 259,
	369, 536, 232, 295, 208, 801, 306, 723, 164, 322,
	277, 279, 276, 280, 236, 147, 154, 825, 324, 342,
	373, 186, 358, 145, 146, 148, 156, 333, 157, 158,
	868, 271, 224, 228, 240, 251, 800, 329, 359, 390,
	794, 181, 173, 361, 383, 192, 341, 344, 397, 823,
	180, 175, 857, 840, 787, 753, 759, 683, 0, 174,
	819, 715, 727, 707, 795, 706, 235, 811, 381, 382,
	207, 399, 624, 872, 176, 690, 871, 292, 300, 291,
	874, 377, 858, 788, 777, 775, 684, 856, 786, 776,
	260, 227, 242, 316, 267, 317, 243, 287, 286, 288,
	269, 779, 0, 171, 0, 356, 866, 883, 360, 189,
	701, 833, 372, 150, 323, 190, 234, 225, 315, 290,
	182, 245, 354, 258, 266, 815, 880, 304, 332, 196,
	387, 353, 221, 635, 297, 647, 641, 643, 642, 639,
	640, 638, 637, 636, 649, 622, 623, 626, 627, 628,
	770, 860, 685, 631, 836, 644, 645, 808, 878, 620,
	203, 569, 661, 662, 663, 570, 664, 665, 571, 572,
	666, 667, 668, 669, 573, 670, 671, 672, 650, 651,
	652, 653, 654, 655, 656, 657, 660, 658, 659, 0,
	766, 312, 172, 183, 195, 214, 212, 226, 255, 278,
	283, 310, 343, 348, 363, 364, 365, 366, 216, 0,
	219, 194, 327, 193, 268, 248, 311, 370, 371, 320,
	209, 629, 166, 177, 262, 1280, 325, 231, 673, 680,
	699, 702, 703, 704, 705, 709, 714, 720, 728, 729,
	737, 742, 743, 744, 745, 752, 754, 755, 756, 757,
	758, 761, 762, 772, 783, 784, 790, 791, 0, 814,
	817, 634, 828, 830, 834, 835, 842, 847, 848, 873,
	877, 882, 388, 213, 769, 789, 820, 178, 187, 198,
	211, 223, 230, 241, 244, 249, 250, 252, 256, 270,
	272, 273, 274, 275, 293, 294, 298, 299, 302, 303,
	307, 308, 309, 313, 314, 321, 155, 328, 334, 335,
	336, 337, 338, 346, 347, 349, 350, 357, 379, 380,
	393, 394, 852, 749, 163, 0, 0, 169, 0, 0,
	0, 0, 0, 736, 168, 851, 875, 796, 810, 863,
	0, 367, 625, 867, 710, 733, 876, 739, 741, 804,
	686, 781, 301, 730, 687, 0, 0, 678, 534, 679,
	711, 218, 533, 837, 782, 865, 767, 797, 807, 217,
	205, 774, 773, 854, 722, 721, 802, 850, 864, 0,
	0, 633, 264, 0, 0, 391, 355, 284, 0, 0,
	765, 0, 618, 619, 750, 806, 698, 793, 869, 731,
	798, 870, 83, 0, 1811, 0, 0, 453, 557, 556,
	559, 560, 561, 562, 0, 0, 144, 558, 563, 564,
	565, 0, 760, 803, 881, 677, 531, 548, 682, 632,
	0, 855, 718, 719, 222, 0, 0, 0, 0, 0,
	0, 0, 763, 780, 822, 747, 386, 809, 818, 832,
	740, 319, 237, 0, 0, 0, 0, 545, 546, 0,
	0, 0, 0, 648, 0, 547, 0, 692, 543, 576,
	577, 578, 579, 580, 581, 582, 583, 584, 585, 586,
	587, 588, 589, 590, 591, 592, 593, 594, 595, 596,
	597, 598, 599, 600, 601, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 611, 612, 613, 614, 615, 616,
	617, 549, 0, 0, 0, 697, 675, 716, 824, 676,
	674, 285, 689, 621, 853, 748, 253, 161, 859, 746,
	646, 812, 693, 841, 734, 261, 691, 162, 688, 694,
	732, 296, 821, 827, 630, 165, 263, 838, 712, 725,
	206, 0, 331, 799, 385, 537, 233, 785, 330, 265,
	378, 813, 861, 384, 735, 362, 392, 396, 229, 768,
	197, 352, 220, 215, 717, 831, 681, 238, 318, 210,
	257, 751, 805, 713, 202, 816, 792, 843, 351, 375,
	167, 281, 376, 395, 185, 368, 282, 289, 199, 201,
	200, 179, 345, 374, 191, 204, 839, 826, 845, 708,
	695, 700, 696, 724, 862, 247, 239, 846, 844, 726,
	305, 188, 778, 771, 764, 389, 151, 340, 339, 738,
	246, 829, 152, 143, 326, 153, 254, 170, 849, 398,
	184, 259, 369, 536, 232, 295, 208, 801, 306, 723,
	164, 322, 277, 279, 276, 280, 236, 147, 154, 825,
	324, 342, 373, 186, 358, 145, 146, 148, 156, 333,
	157, 158, 868, 271, 224, 228, 240, 251, 800, 329,
	359, 390, 794, 181, 173, 361, 383, 192, 341, 344,
	397, 823, 180, 175, 857, 840, 787, 753, 759, 683,
	0, 174, 819, 715, 727, 707, 795, 706, 235, 811,
	381, 382, 207, 399, 624, 872, 176, 690, 871, 292,
	300, 291, 874, 377, 858, 788, 777, 775, 684, 856,
	786, 776, 260, 227, 242, 316, 267, 317, 243, 287,
	286, 288, 269, 779, 0, 171, 0, 356, 866, 883,
	360, 189, 701, 833, 372, 150, 323, 190, 234, 225,
	315, 290, 182, 245, 354, 258, 266, 815, 880, 304,
	332, 196, 387, 353, 221, 635, 297, 647, 641, 643,
	642, 639, 640, 638, 637, 636, 649, 622, 623, 626,
	627, 628, 770, 860, 685, 631, 836, 644, 645, 808,
	878, 620, 203, 569, 661, 662, 663, 570, 664, 665,
	571, 572, 666, 667, 668, 669, 573, 670, 671, 672,
	650, 651, 652, 653, 654, 655, 656, 657, 660, 658,
	659, 0, 766, 312, 172, 183, 195, 214, 212, 226,
	255, 278, 283, 310, 343, 348, 363, 364, 365, 366,
	216, 0, 219, 194, 327, 193, 268, 248, 311, 370,
	371, 320, 209, 629, 166, 177, 262, 879, 325, 231,
	673, 680, 699, 702, 703, 704, 705, 709, 714, 720,
	728, 729, 737, 742, 743, 744, 745, 752, 754, 755,
	756, 757, 758, 761, 762, 772, 783, 784, 790, 791,
	0, 814, 817, 634, 828, 830, 834, 835, 842, 847,
	848, 873, 877, 882, 388, 213, 769, 789, 820, 178,
	187, 198, 211, 223, 230, 241, 244, 249, 250, 252,
	256, 270, 272, 273, 274, 275, 293, 294, 298, 299,
	302, 303, 307, 308, 309, 313, 314, 321, 155, 328,
	334, 335, 336, 337, 338, 346, 347, 349, 350, 357,
	379, 380, 393, 394, 852, 749, 163, 0, 0, 169,
	0, 0, 0, 0, 0, 736, 168, 851, 875, 796,
	810, 863, 0, 367, 625, 867, 710, 733, 876, 739,
	741, 804, 686, 781, 301, 730, 687, 0, 0, 678,
	923, 679, 711, 218, 921, 837, 782, 865, 767, 797,
	807, 217, 205, 774, 773, 854, 722, 721, 802, 850,
	864, 0, 0, 633, 264, 0, 0, 391, 355, 284,
	0, 0, 765, 0, 618, 619, 750, 806, 698, 793,
	869, 731, 798, 870, 83, 0, 0, 0, 0, 453,
	557, 556, 559, 560, 561, 562, 0, 0, 144, 558,
	563, 564, 565, 0, 760, 803, 881, 677, 940, 548,
	682, 632, 0, 855, 718, 719, 222, 0, 0, 0,
	0, 0, 0, 0, 763, 780, 822, 747, 386, 809,
	818, 832, 740, 319, 237, 0, 0, 0, 0, 545,
	546, 0, 0, 0, 0, 648, 0, 547, 0, 692,
	543, 576, 577, 578, 579, 580, 581, 582, 583, 584,
	585, 586, 587, 588, 589, 590, 591, 592, 593, 594,
	595, 596, 597, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 611, 612, 613, 614,
	615, 616, 617, 549, 0, 0, 0, 697, 675, 716,
	824, 676, 674, 285, 689, 621, 853, 748, 253, 161,
	859, 746, 646, 812, 693, 841, 734, 261, 691, 162,
	688, 694, 732, 296, 821, 827, 630, 165, 263, 838,
	712, 725, 206, 0, 331, 799, 385, 537, 233, 785,
	330, 265, 378, 813, 861, 384, 735, 362, 392, 396,
	229, 768, 197, 352, 220, 215, 717, 831, 681, 238,
	318, 210, 257, 751, 805, 713, 202, 816, 792, 843,
	351, 375, 167, 281, 376, 395, 185, 368, 282, 289,
	199, 201, 200, 179, 345, 374, 191, 204, 839, 826,
	845, 708, 695, 700, 696, 724, 862, 247, 239, 846,
	844, 726, 305, 188, 778, 771, 764, 389, 151, 340,
	339, 738, 246, 829, 152, 143, 326, 153, 254, 170,
	849, 398, 184, 259, 369, 536, 232, 295, 208, 801,
	306, 723, 164, 322, 277, 279, 276, 280, 236, 147,
	154, 825, 324, 342, 373, 186, 358, 145, 146, 148,
	156, 333, 157, 158, 868, 271, 224, 228, 240, 251,
	800, 329, 359, 390, 794, 181, 173, 361, 383, 192,
	341, 344, 397, 823, 180, 175, 857, 840, 787, 753,
	759, 683, 0, 174, 819, 715, 727, 707, 795, 706,
	235, 811, 381, 382, 207, 399, 624, 872, 176, 690,
	871, 292, 300, 291, 874, 377, 858, 788, 777, 775,
	684, 856, 786, 776, 260, 227, 242, 316, 267, 317,
	243, 287, 286, 288, 269, 779, 0, 171, 0, 356,
	866, 883, 360, 189, 701, 833, 372, 150, 323, 190,
	234, 225, 315, 290, 182, 245, 354, 258, 266, 815,
	880, 304, 332, 196, 387, 353, 221, 635, 297, 647,
	641, 643, 642, 639, 640, 638, 637, 636, 649, 622,
	623, 626, 627, 628, 770, 860, 685, 631, 836, 644,
	645, 808, 878, 620, 203, 569, 661, 662, 663, 570,
	664, 665, 571, 572, 666, 667, 668, 669, 573, 670,
	671, 672, 650, 651, 652, 653, 654, 655, 656, 657,
	660, 658, 659, 0, 766, 312, 172, 183, 195, 214,
	212, 226, 255, 278, 283, 310, 343, 348, 363, 364,
	365, 366, 216, 0, 219, 194, 327, 193, 268, 248,
	311, 370, 371, 320, 209, 629, 166, 177, 262, 879,
	325, 231, 673, 680, 699, 702, 703, 704, 705, 709,
	714, 720, 728, 729, 737, 742, 743, 744, 745, 752,
	754, 755, 756, 757, 758, 761, 762, 772, 783, 784,
	790, 791, 0, 814, 817, 634, 828, 830, 834, 835,
	842, 847, 848, 873, 877, 882, 388, 213, 769, 789,
	820, 178, 187, 198, 211, 223, 230, 241, 244, 249,
	250, 252, 256, 270, 272, 273, 274, 275, 293, 294,
	298, 299, 302, 303, 307, 308, 309, 313, 314, 321,
	155, 328, 334, 335, 336, 337, 338, 346, 347, 349,
	350, 357, 379, 380, 393, 394, 852, 749, 163, 0,
	0, 169, 0, 0, 0, 0, 0, 736, 168, 851,
	875, 796, 810, 863, 0, 367, 625, 867, 710, 733,
	876, 739, 741, 804, 686, 781, 301, 730, 687, 0,
	0, 678, 534, 679, 711, 218, 533, 837, 782, 865,
	767, 797, 807, 217, 205, 774, 773, 854, 722, 721,
	802, 850, 864, 0, 0, 633, 264, 0, 0, 391,
	355, 284, 0, 0, 765, 0, 618, 619, 750, 806,
	698, 793, 869, 731, 798, 870, 83, 0, 0, 0,
	0, 453, 557, 556, 559, 560, 561, 562, 0, 0,
	144, 558, 563, 564, 565, 0, 760, 803, 881, 677,
	531, 548, 682, 632, 0, 855, 718, 719, 222, 0,
	0, 0, 0, 0, 0, 0, 763, 780, 822, 747,
	386, 809, 818, 832, 740, 319, 237, 0, 0, 0,
	0, 545, 546, 0, 0, 0, 0, 648, 0, 547,
	0, 692, 543, 576, 577, 578, 579, 580, 581, 582,
	583, 584, 585, 586, 587, 588, 589, 590, 591, 592,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 611, 612,
	613, 614, 615, 616, 617, 549, 0, 0, 0, 697,
	675, 716, 824, 676, 674, 285, 689, 621, 853, 748,
	253, 161, 859, 746, 646, 812, 693, 841, 734, 261,
	691, 162, 688, 694, 732, 296, 821, 827, 630, 165,
	263, 838, 712, 725, 206, 0, 331, 799, 385, 537,
	233, 785, 330, 265, 378, 813, 861, 384, 735, 362,
	392, 396, 229, 768, 197, 352, 220, 215, 717, 831,
	681, 238, 318, 210, 257, 751, 805, 713, 202, 816,
	792, 843, 351, 375, 167, 281, 376, 395, 185, 368,
	282, 289, 199, 201, 200, 179, 345, 374, 191, 204,
	839, 826, 845, 708, 695, 700, 696, 724, 862, 247,
	239, 846, 844, 726, 305, 188, 778, 771, 764, 389,
	151, 340, 339, 738, 246, 829, 152, 143, 326, 153,
	254, 170, 849, 398, 184, 259, 369, 536, 232, 295,
	208, 801, 306, 723, 164, 322, 277, 279, 276, 280,
	236, 147, 154, 825, 324, 342, 373, 186, 358, 145,
	146, 148, 156, 333, 157, 158, 868, 271, 224, 228,
	240, 251, 800, 329, 359, 390, 794, 181, 173, 361,
	383, 192, 341, 344, 397, 823, 180, 175, 857, 840,
	787, 753, 759, 683, 0, 174, 819, 715, 727, 707,
	795, 706, 235, 811, 381, 382, 207, 399, 624, 872,
	176, 690, 871, 292, 300, 291, 874, 377, 858, 788,
	777, 775, 684, 856, 786, 776, 260, 227, 242, 316,
	267, 317, 243, 287, 286, 288, 269, 779, 0, 171,
	0, 356, 866, 883, 360, 189, 701, 833, 372, 150,
	323, 190, 234, 225, 315, 290, 182, 245, 354, 258,
	266, 815, 880, 304, 332, 196, 387, 353, 221, 635,
	297, 647, 641, 643, 642, 639, 640, 638, 637, 636,
	649, 622, 623, 626, 627, 628, 770, 860, 685, 631,
	836, 644, 645, 808, 878, 620, 203, 569, 661, 662,
	663, 570, 664, 665, 571, 572, 666, 667, 668, 669,
	573, 670, 671, 672, 650, 651, 652, 653, 654, 655,
	656, 657, 660, 658, 659, 0, 766, 312, 172, 183,
	195, 214, 212, 226, 255, 278, 283, 310, 343, 348,
	363, 364, 365, 366, 216, 0, 219, 194, 327, 193,
	268, 248, 311, 370, 371, 320, 209, 629, 166, 177,
	262, 879, 325, 231, 673, 680, 699, 702, 703, 704,
	705, 709, 714, 720, 728, 729, 737, 742, 743, 744,
	745, 752, 754, 755, 756, 757, 758, 761, 762, 772,
	783, 784, 790, 791, 0, 814, 817, 634, 828, 830,
	834, 835, 842, 847, 848, 873, 877, 882, 388, 213,
	769, 789, 820, 178, 187, 198, 211, 223, 230, 241,
	244, 249, 250, 252, 256, 270, 272, 273, 274, 275,
	293, 294, 298, 299, 302, 303, 307, 308, 309, 313,
	314, 321, 155, 328, 334, 335, 336, 337, 338, 346,
	347, 349, 350, 357, 379, 380, 393, 394, 852, 749,
	163, 0, 0, 169, 0, 0, 0, 0, 0, 736,
	168, 851, 875, 796, 810, 863, 0, 367, 625, 867,
	710, 733, 876, 739, 741, 804, 686, 781, 301, 730,
	687, 0, 0, 678, 923, 679, 711, 218, 921, 837,
	782, 865, 767, 797, 807, 217, 205, 774, 773, 854,
	722, 721, 802, 850, 864, 0, 0, 633, 264, 0,
	0, 391, 355, 284, 0, 0, 765, 0, 618, 619,
	750, 806, 698, 793, 869, 731, 798, 870, 83, 0,
	0, 0, 0, 453, 557, 556, 559, 560, 561, 562,
	0, 0, 144, 558, 563, 564, 565, 0, 760, 803,
	881, 677, 940, 548, 682, 632, 0, 855, 718, 719,
	222, 0, 0, 0, 0, 0, 0, 0, 763, 780,
	822, 747, 386, 809, 818, 832, 740, 319, 237, 0,
	0, 0, 0, 545, 546, 0, 0, 0, 0, 648,
	0, 547, 0, 692, 543, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 585, 586, 587, 588, 589, 590,
	591, 592, 593, 594, 595, 596, 597, 598, 599, 600,
	601, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	611, 612, 613, 614, 615, 616, 617, 549, 0, 0,
	0, 697, 675, 716, 824, 676, 674, 285, 689, 621,
	853, 748, 253, 161, 859, 746, 646, 812, 693, 841,
	734, 261, 691, 162, 688, 694, 732, 296, 821, 827,
	630, 165, 263, 838, 712, 725, 206, 0, 331, 799,
	385, 537, 233, 3671, 330, 265, 378, 813, 861, 384,
	735, 362, 392, 396, 229, 768, 197, 352, 220, 215,
	717, 831, 681, 238, 318, 210, 257, 751, 805, 713,
	202, 816, 792, 843, 351, 375, 167, 281, 376, 395,
	185, 368, 282, 289, 199, 201, 200, 179, 345, 374,
	191, 204, 839, 826, 845, 708, 695, 700, 696, 724,
	862, 247, 239, 846, 844, 726, 305, 188, 778, 771,
	764, 389, 151, 340, 339, 738, 246, 829, 152, 143,
	326, 153, 254, 170, 849, 398, 184, 259, 369, 536,
	232, 295, 208, 801, 306, 723, 164, 322, 277, 279,
	276, 280, 236, 147, 154, 825, 324, 342, 373, 186,
	358, 145, 146, 148, 156, 333, 157, 158, 868, 271,
	224, 228, 240, 251, 800, 329, 359, 390, 794, 181,
	173, 361, 383, 192, 341, 344, 397, 823, 180, 175,
	857, 840, 787, 753, 759, 683, 0, 174, 819, 715,
	727, 707, 795, 706, 235, 811, 381, 382, 207, 399,
	624, 872, 176, 690, 871, 292, 300, 291, 874, 377,
	858, 788, 777, 775, 684, 856, 786, 776, 260, 227,
	242, 316, 267, 317, 243, 287, 286, 288, 269, 779,
	0, 171, 0, 356, 866, 883, 360, 189, 701, 833,
	372, 150, 323, 190, 234, 225, 315, 290, 182, 245,
	354, 258, 266, 815, 880, 304, 332, 196, 387, 353,
	221, 635, 297, 647, 641, 643, 642, 639, 640, 638,
	637, 636, 649, 622, 623, 626, 627, 628, 770, 860,
	685, 631, 836, 644, 645, 808, 878, 620, 203, 569,
	661, 662, 663, 570, 664, 665, 571, 572, 666, 667,
	668, 669, 573, 670, 671, 672, 650, 651, 652, 653,
	654, 655, 656, 657, 660, 658, 659, 0, 766, 312,
	172, 183, 195, 214, 212, 226, 255, 278, 283, 310,
	343, 348, 363, 364, 365, 366, 216, 0, 219, 194,
	327, 193, 268, 248, 311, 370, 371, 320, 209, 629,
	166, 177, 262, 879, 325, 231, 673, 680, 699, 702,
	703, 704, 705, 709, 714, 720, 728, 729, 737, 742,
	743, 744, 745, 752, 754, 755, 756, 757, 758, 761,
	762, 772, 783, 784, 790, 791, 0, 814, 817, 634,
	828, 830, 834, 835, 842, 847, 848, 873, 877, 882,
	388, 213, 769, 789, 820, 178, 187, 198, 211, 223,
	230, 241, 244, 249, 250, 252, 256, 270, 272, 273,
	274, 275, 293, 294, 298, 299, 302, 303, 307, 308,
	309, 313, 314, 321, 155, 328, 334, 335, 336, 337,
	338, 346, 347, 349, 350, 357, 379, 380, 393, 394,
	852, 749, 163, 0, 0, 169, 0, 0, 0, 0,
	0, 736, 168, 851, 875, 796, 810, 863, 0, 367,
	625, 867, 710, 733, 876, 739, 741, 804, 686, 781,
	301, 730, 687, 0, 0, 678, 923, 679, 711, 218,
	921, 837, 782, 865, 767, 797, 807, 217, 205, 774,
	773, 854, 722, 721, 802, 850, 864, 0, 0, 633,
	264, 0, 0, 391, 355, 284, 0, 0, 765, 0,
	618, 619, 750, 806, 698, 793, 869, 731, 798, 870,
	83, 0, 0, 0, 0, 453, 557, 556, 559, 560,
	561, 562, 0, 0, 144, 558, 563, 564, 565, 0,
	760, 803, 881, 677, 940, 548, 682, 632, 0, 855,
	718, 719, 222, 0, 0, 0, 0, 0, 0, 0,
	763, 780, 822, 747, 386, 809, 818, 832, 740, 319,
	237, 0, 0, 0, 0, 545, 546, 0, 0, 0,
	0, 648, 0, 547, 0, 692, 543, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 585, 586, 587, 588,
	589, 590, 591, 592, 593, 594, 595, 596, 597, 598,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 611, 612, 613, 614, 615, 616, 617, 549,
	0, 0, 0, 697, 675, 716, 824, 676, 674, 285,
	689, 621, 853, 748, 253, 161, 859, 746, 646, 812,
	693, 841, 734, 261, 691, 162, 688, 694, 732, 296,
	821, 827, 630, 165, 263, 838, 712, 725, 206, 0,
	331, 799, 385, 537, 233, 785, 330, 265, 378, 813,
	861, 384, 735, 362, 392, 396, 229, 768, 197, 352,
	220, 215, 717, 831, 681, 238, 318, 210, 257, 751,
	805, 713, 202, 816, 792, 843, 351, 375, 167, 281,
	376, 395, 185, 368, 282, 289, 199, 201, 200, 179,
	345, 374, 191, 204, 839, 826, 845, 708, 695, 700,
	696, 724, 862, 247, 239, 846, 844, 726, 305, 188,
	778, 771, 764, 389, 151, 340, 339, 738, 246, 829,
	152, 143, 326, 153, 254, 170, 849, 398, 184, 259,
	369, 536, 232, 295, 208, 801, 306, 723, 164, 322,
	277, 279, 276, 280, 236, 147, 154, 825, 324, 342,
	373, 186, 358, 145, 146, 148, 156, 333, 157, 158,
	868, 271, 224, 228, 240, 251, 800, 329, 359, 390,
	794, 181, 173, 361, 383, 192, 341, 344, 397, 823,
	180, 175, 857, 840, 787, 753, 759, 683, 0, 174,
	819, 715, 727, 707, 795, 706, 235, 811, 381, 382,
	207, 399, 624, 872, 176, 690, 871, 292, 300, 291,
	874, 377, 858, 788, 777, 775, 684, 856, 786, 776,
	260, 227, 242, 316, 267, 317, 243, 287, 286, 288,
	269, 779, 0, 171, 0, 356, 866, 883, 360, 189,
	701, 833, 372, 150, 323, 190, 234, 225, 315, 290,
	182, 245, 354, 258, 266, 815, 880, 304, 332, 196,
	387, 353, 221, 635, 297, 647, 641, 643, 642, 639,
	640, 638, 637, 636, 649, 622, 623, 626, 627, 628,
	1988, 1989, 1990, 631, 836, 644, 645, 808, 878, 620,
	203, 569, 661, 662, 663, 570, 664, 665, 571, 572,
	666, 667, 668, 669, 573, 670, 671, 672, 650, 651,
	652, 653, 654, 655, 656, 657, 660, 658, 659, 0,
	766, 312, 172, 183, 195, 214, 212, 226, 255, 278,
	283, 310, 343, 348, 363, 364, 365, 366, 216, 0,
	219, 194, 327, 193, 268, 248, 311, 370, 371, 320,
	209, 629, 166, 177, 262, 879, 325, 231, 673, 680,
	699, 702, 703, 704, 705, 709, 714, 720, 728, 729,
	737, 742, 743, 744, 745, 752, 754, 755, 756, 757,
	758, 761, 762, 772, 783, 784, 790, 791, 0, 814,
	817, 634, 828, 830, 834, 835, 842, 847, 848, 873,
	877, 882, 388, 213, 769, 789, 820, 178, 187, 198,
	211, 223, 230, 241, 244, 249, 250, 252, 256, 270,
	272, 273, 274, 275, 293, 294, 298, 299, 302, 303,
	307, 308, 309, 313, 314, 321, 155, 328, 334, 335,
	336, 337, 338, 346, 347, 349, 350, 357, 379, 380,
	393, 394, 852, 749, 163, 0, 0, 169, 0, 0,
	0, 0, 0, 736, 168, 851, 875, 796, 810, 1729,
	2906, 367, 1584, 1733, 1533, 1563, 1750, 1569, 1572, 1653,
	1499, 1622, 301, 1560, 1500, 1483, 1538, 1487, 1551, 1488,
	1535, 218, 1531, 1694, 1625, 1731, 1604, 1646, 1656, 217,
	205, 1614, 1613, 1719, 1549, 1548, 1651, 1708, 1730, 1603,
	0, 1740, 264, 1705, 983, 391, 355, 284, 986, 985,
	1599, 1714, 1620, 1683, 1582, 1655, 1515, 1638, 1735, 1561,
	1647, 1736, 83, 0, 1193, 0, 0, 979, 0, 0,
	0, 0, 0, 0, 0, 0, 144, 0, 1643, 1727,
	1554, 984, 1594, 1652, 1755, 1486, 1639, 0, 1491, 1502,
	1749, 1720, 1545, 1546, 222, 0, 0, 0, 0, 0,
	0, 0, 1597, 1621, 1673, 1579, 386, 1658, 1668, 1686,
	1571, 319, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 1540, 0, 1636, 0, 0, 0, 1507, 1493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1593, 0, 0, 0, 1514, 1484, 1542, 1675, 1485,
	1482, 285, 1503, 1688, 1718, 1580, 253, 161, 1724, 1578,
	1577, 1662, 1508, 1698, 1564, 261, 1506, 162, 1501, 1509,
	1562, 296, 1672, 1680, 149, 165, 263, 1695, 1536, 1553,
	206, 1869, 331, 1648, 385, 982, 233, 1629, 330, 265,
	378, 1663, 1726, 384, 1565, 362, 392, 396, 229, 1605,
	197, 352, 220, 215, 1544, 1685, 1490, 238, 318, 210,
	257, 1583, 1654, 1537, 202, 1666, 1637, 1700, 351, 375,
	167, 281, 376, 395, 185, 368, 282, 289, 199, 201,
	200, 179, 345, 374, 191, 204, 1696, 1679, 1702, 1530,
	1510, 1521, 1511, 1552, 1728, 247, 239, 1703, 1701, 1555,
	305, 188, 1618, 1611, 1598, 389, 151, 340, 339, 1568,
	246, 1682, 152, 143, 326, 153, 254, 170, 1707, 398,
	184, 259, 369, 981, 232, 295, 208, 1650, 306, 1550,
	164, 322, 277, 279, 276, 280, 236, 147, 154, 1678,
	324, 342, 373, 186, 358, 145, 146, 148, 156, 333,
	157, 158, 1734, 271, 224, 228, 240, 251, 1649, 329,
	359, 390, 1640, 181, 173, 361, 383, 192, 341, 344,
	397, 1674, 180, 175, 1722, 1697, 1631, 1586, 1592, 1492,
	0, 174, 1670, 1541, 1557, 1529, 1644, 1528, 235, 1661,
	381, 382, 207, 399, 1504, 1742, 176, 1505, 1741, 292,
	300, 291, 1745, 377, 1723, 1632, 1617, 1615, 1497, 1721,
	1630, 1616, 260, 227, 242, 316, 267, 317, 243, 287,
	286, 288, 269, 1619, 0, 171, 0, 356, 1732, 1757,
	360, 189, 1523, 1689, 372, 150, 323, 190, 234, 225,
	315, 290, 182, 245, 354, 258, 266, 1665, 1754, 304,
	332, 196, 387, 353, 221, 1519, 297, 1522, 1517, 1520,
	1518, 1623, 1624, 1737, 1738, 1739, 1677, 1512, 0, 1715,
	1716, 0, 1610, 1725, 1498, 0, 1693, 159, 160, 1657,
	1752, 1570, 203, 138, 1494, 1495, 1496, 139, 1600, 1601,
	140, 141, 1711, 1710, 1709, 1712, 142, 1746, 1744, 1747,
	1513, 1534, 1556, 1606, 1607, 1609, 1641, 1642, 1687, 1660,
	1669, 1543, 1602, 312, 172, 183, 195, 214, 212, 226,
	255, 278, 283, 310, 343, 348, 363, 364, 365, 366,
	216, 0, 219, 194, 327, 193, 268, 248, 311, 370,
	371, 320, 209, 1628, 166, 177, 262, 2907, 325, 231,
	1481, 1489, 1516, 1524, 1525, 1526, 1527, 1532, 1539, 1547,
	1558, 1559, 1567, 1573, 1574, 1575, 1576, 1585, 1587, 1588,
	1589, 1590, 1591, 1595, 1596, 1612, 1626, 1627, 1634, 1635,
	0, 1664, 1667, 1676, 1681, 1684, 1690, 1692, 1699, 1704,
	1706, 1743, 1751, 1756, 388, 213, 1608, 1633, 1671, 178,
	187, 198, 211, 223, 230, 241, 244, 249, 250, 252,
	256, 270, 272, 273, 274, 275, 293, 294, 298, 299,
	302, 303, 307, 308, 309, 313, 314, 321, 155, 328,
	334, 335, 336, 337, 338, 346, 347, 349, 350, 357,
	379, 380, 393, 394, 1717, 1581, 163, 0, 0, 169,
	0, 0, 0, 0, 0, 1566, 168, 1713, 1748, 1645,
	1659, 1729, 1691, 367, 1584, 1733, 1533, 1563, 1750, 1569,
	1572, 1653, 1499, 1622, 301, 1560, 1500, 1483, 1538, 1487,
	1551, 1488, 1535, 218, 1531, 1694, 1625, 1731, 1604, 1646,
	1656, 217, 205, 1614, 1613, 1719, 1549, 1548, 1651, 1708,
	1730, 1603, 0, 1740, 264, 1705, 983, 391, 355, 284,
	986, 985, 1599, 1714, 1620, 1683, 1582, 1655, 1515, 1638,
	1735, 1561, 1647, 1736, 0, 0, 0, 0, 0, 979,
	0, 0, 0, 0, 0, 0, 0, 0, 144, 0,
	1643, 1727, 1554, 984, 1594, 1652, 1755, 1486, 1639, 0,
	1491, 1502, 1749, 1720, 1545, 1546, 222, 0, 0, 0,
	0, 0, 0, 0, 1597, 1621, 1673, 1579, 386, 1658,
	1668, 1686, 1571, 319, 237, 0, 0, 0, 0, 0,
	0, 0, 0, 1540, 0, 1636, 0, 0, 0, 1507,
	1493, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1593, 0, 0, 0, 1514, 1484, 1542,
	1675, 1485, 1482, 285, 1503, 1688, 1718, 1580, 253, 161,
	1724, 1578, 1577, 1662, 1508, 1698, 1564, 261, 1506, 162,
	1501, 1509, 1562, 296, 1672, 1680, 149, 165, 263, 1695,
	1536, 1553, 206, 1869, 331, 1648, 385, 982, 233, 1629,
	330, 265, 378, 1663, 1726, 384, 1565, 362, 392, 396,
	229, 1605, 197, 352, 220, 215, 1544, 1685, 1490, 238,
	318, 210, 257, 1583, 1654, 1537, 202, 1666, 1637, 1700,
	351, 375, 167, 281, 376, 395, 185, 368, 282, 289,
	199, 201, 200, 179, 345, 374, 191, 204, 1696, 1679,
	1702, 1530, 1510, 1521, 1511, 1552, 1728, 247, 239, 1703,
	1701, 1555, 305, 188, 1618, 1611, 1598, 389, 151, 340,
	339, 1568, 246, 1682, 152, 143, 326, 153, 254, 170,
	1707, 398, 184, 259, 369, 981, 232, 295, 208, 1650,
	306, 1550, 164, 322, 277, 279, 276, 280, 236, 147,
	154, 1678, 324, 342, 373, 186, 358, 145, 146, 148,
	156, 333, 157, 158, 1734, 271, 224, 228, 240, 251,
	1649, 329, 359, 390, 1640, 181, 173, 361, 383, 192,
	341, 344, 397, 1674, 180, 175, 1722, 1697, 1631, 1586,
	1592, 1492, 0, 174, 1670, 1541, 1557, 1529, 1644, 1528,
	235, 1661, 381, 382, 207, 399, 1504, 1742, 176, 1505,
	1741, 292, 300, 291, 1745, 377, 1723, 1632, 1617, 1615,
	1497, 1721, 1630, 1616, 260, 227, 242, 316, 267, 317,
	243, 287, 286, 288, 269, 1619, 0, 171, 0, 356,
	1732, 1757, 360, 189, 1523, 1689, 372, 150, 323, 190,
	234, 225, 315, 290, 182, 245, 354, 258, 266, 1665,
	1754, 304, 332, 196, 387, 353, 221, 1519, 297, 1522,
	1517, 1520, 1518, 1623, 1624, 1737, 1738, 1739, 1677, 1512,
	0, 1715, 1716, 0, 1610, 1725, 1498, 0, 1693, 159,
	160, 1657, 1752, 1570, 203, 138, 1494, 1495, 1496, 139,
	1600, 1601, 140, 141, 1711, 1710, 1709, 1712, 142, 1746,
	1744, 1747, 1513, 1534, 1556, 1606, 1607, 1609, 1641, 1642,
	1687, 1660, 1669, 1543, 1602, 312, 172, 183, 195, 214,
	212, 226, 255, 278, 283, 310, 343, 348, 363, 364,
	365, 366, 216, 0, 219, 194, 327, 193, 268, 248,
	311, 370, 371, 320, 209, 1628, 166, 177, 262, 1753,
	325, 231, 1481, 1489, 1516, 1524, 1525, 1526, 1527, 1532,
	1539, 1547, 1558, 1559, 1567, 1573, 1574, 1575, 1576, 1585,
	1587, 1588, 1589, 1590, 1591, 1595, 1596, 1612, 1626, 1627,
	1634, 1635, 0, 1664, 1667, 1676, 1681, 1684, 1690, 1692,
	1699, 1704, 1706, 1743, 1751, 1756, 388, 213, 1608, 1633,
	1671, 178, 187, 198, 211, 223, 230, 241, 244, 249,
	250, 252, 256, 270, 272, 273, 274, 275, 293, 294,
	298, 299, 302, 303, 307, 308, 309, 313, 314, 321,
	155, 328, 334, 335, 336, 337, 338, 346, 347, 349,
	350, 357, 379, 380, 393, 394, 1717, 1581, 163, 0,
	0, 169, 0, 0, 0, 0, 0, 1566, 168, 1713,
	1748, 1645, 1659, 1729, 1691, 367, 1584, 1733, 1533, 1563,
	1750, 1569, 1572, 1653, 1499, 1622, 301, 1560, 1500, 1483,
	1538, 1487, 1551, 1488, 1535, 218, 1531, 1694, 1625, 1731,
	1604, 1646, 1656, 217, 205, 1614, 1613, 1719, 1549, 1548,
	1651, 1708, 1730, 1603, 0, 1740, 264, 1705, 0, 391,
	355, 284, 0, 0, 1599, 1714, 1620, 1683, 1582, 1655,
	1515, 1638, 1735, 1561, 1647, 1736, 0, 0, 0, 0,
	0, 453, 0, 0, 0, 0, 0, 0, 0, 0,
	144, 0, 1643, 1727, 1554, 0, 1594, 1652, 1755, 1486,
	1639, 0, 1491, 1502, 1749, 1720, 1545, 1546, 222, 0,
	0, 0, 0, 0, 0, 0, 1597, 1621, 1673, 1579,
	386, 1658, 1668, 1686, 1571, 319, 237, 0, 0, 0,
	0, 0, 0, 2577, 0, 1540, 0, 1636, 0, 0,
	0, 1507, 1493, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1593, 0, 0, 0, 1514,
	1484, 1542, 1675, 1485, 1482, 285, 1503, 1688, 1718, 1580,
	253, 161, 1724, 1578, 1577, 1662, 1508, 1698, 1564, 261,
	1506, 162, 1501, 1509, 1562, 296, 1672, 1680, 149, 165,
	263, 1695, 1536, 1553, 206, 0, 331, 1648, 385, 1918,
	233, 1629, 330, 265, 378, 1663, 1726, 384, 1565, 362,
	392, 396, 229, 1605, 197, 352, 220, 215, 1544, 1685,
	1490, 238, 318, 210, 257, 1583, 1654, 1537, 202, 1666,
	1637, 1700, 351, 375, 167, 281, 376, 395, 185, 368,
	282, 289, 199, 201, 200, 179, 345, 374, 191, 204,
	1696, 1679, 1702, 1530, 1510, 1521, 1511, 1552, 1728, 247,
	239, 1703, 1701, 1555, 305, 188, 1618, 1611, 1598, 389,
	151, 340, 339, 1568, 246, 1682, 152, 143, 326, 153,
	254, 170, 1707, 398, 184, 259, 369, 1917, 232, 295,
	208, 1650, 306, 1550, 164, 322, 277, 279, 276, 280,
	236, 147, 154, 1678, 324, 342, 373, 186, 358, 145,
	146, 148, 156, 333, 157, 158, 1734, 271, 224, 228,
	240, 251, 1649, 329, 359, 390, 1640, 181, 173, 361,
	383, 192, 341, 344, 397, 1674, 180, 175, 1722, 1697,
	1631, 1586, 1592, 1492, 0, 174, 1670, 1541, 1557, 1529,
	1644, 1528, 235, 1661, 381, 382, 207, 399, 1504, 1742,
	176, 1505, 1741, 292, 300, 291, 1745, 377, 1723, 1632,
	1617, 1615, 1497, 1721, 1630, 1616, 260, 227, 242, 316,
	267, 317, 243, 287, 286, 288, 269, 1619, 0, 171,
	0, 356, 1732, 1757, 360, 189, 1523, 1689, 372, 150,
	323, 190, 234, 225, 315, 290, 182, 245, 354, 258,
	266, 1665, 1754, 304, 332, 196, 387, 353, 221, 1519,
	297, 1522, 1517, 1520, 1518, 1623, 1624, 1737, 1738, 1739,
	1677, 1512, 0, 1715, 1716, 0, 1610, 1725, 1498, 0,
	1693, 159, 160, 1657, 1752, 1570, 203, 138, 1494, 1495,
	1496, 139, 1600, 1601, 140, 141, 1711, 1710, 1709, 1712,
	142, 1746, 1744, 1747, 1513, 1534, 1556, 1606, 1607, 1609,
	1641, 1642, 1687, 1660, 1669, 1543, 1602, 312, 172, 183,
	195, 214, 212, 226, 255, 278, 283, 310, 343, 348,
	363, 364, 365, 366, 216, 0, 219, 194, 327, 193,
	268, 248, 311, 370, 371, 320, 209, 1628, 166, 177,
	262, 1753, 325, 231, 1481, 1489, 1516, 1524, 1525, 1526,
	1527, 1532, 1539, 1547, 1558, 1559, 1567, 1573, 1574, 1575,
	1576, 1585, 1587, 1588, 1589, 1590, 1591, 1595, 1596, 1612,
	1626, 1627, 1634, 1635, 0, 1664, 1667, 1676, 1681, 1684,
	1690, 1692, 1699, 1704, 1706, 1743, 1751, 1756, 388, 213,
	1608, 1633, 1671, 178, 187, 198, 211, 223, 230, 241,
	244, 249, 250, 252, 256, 270, 272, 273, 274, 275,
	293, 294, 298, 299, 302, 303, 307, 308, 309, 313,
	314, 321, 155, 328, 334, 335, 336, 337, 338, 346,
	347, 349, 350, 357, 379, 380, 393, 394, 1717, 1581,
	163, 0, 0, 169, 0, 0, 0, 0, 0, 1566,
	168, 1713, 1748, 1645, 1659, 1729, 1691, 367, 1584, 1733,
	1533, 1563, 1750, 1569, 1572, 1653, 1499, 1622, 301, 1560,
	1500, 1483, 1538, 1487, 1551, 1488, 1535, 218, 1531, 1694,
	1625, 1731, 1604, 1646, 1656, 217, 205, 1614, 1613, 1719,
	1549, 1548, 1651, 1708, 1730, 1603, 0, 1740, 264, 1705,
	0, 391, 355, 284, 0, 0, 1599, 1714, 1620, 1683,
	1582, 1655, 1515, 1638, 1735, 1561, 1647, 1736, 0, 0,
	0, 0, 0, 453, 0, 0, 0, 0, 0, 0,
	0, 0, 144, 0, 1643, 1727, 1554, 0, 1594, 1652,
	1755, 1486, 1639, 0, 1491, 1502, 1749, 1720, 1545, 1546,
	222, 0, 0, 0, 0, 0, 0, 0, 1597, 1621,
	1673, 1579, 386, 1658, 1668, 1686, 1571, 319, 237, 0,
	0, 0, 0, 0, 0, 1912, 0, 1540, 0, 1636,
	0, 0, 0, 1507, 1493, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1593, 0, 0,
	0, 1514, 1484, 1542, 1675, 1485, 1482, 285, 1503, 1688,
	1718, 1580, 253, 161, 1724, 1578, 1577, 1662, 1508, 1698,
	1564, 261, 1506, 162, 1501, 1509, 1562, 296, 1672, 1680,
	149, 165, 263, 1695, 1536, 1553, 206, 0, 331, 1648,
	385, 1918, 233, 1629, 330, 265, 378, 1663, 1726, 384,
	1565, 362, 392, 396, 229, 1605, 197, 352, 220, 215,
	1544, 1685, 1490, 238, 318, 210, 257, 1583, 1654, 1537,
	202, 1666, 1637, 1700, 351, 375, 167, 281, 376, 395,
	185, 368, 282, 289, 199, 201, 200, 179, 345, 374,
	191, 204, 1696, 1679, 1702, 1530, 1510, 1521, 1511, 1552,
	1728, 247, 239, 1703, 1701, 1555, 305, 188, 1618, 1611,
	1598, 389, 151, 340, 339, 1568, 246, 1682, 152, 143,
	326, 153, 254, 170, 1707, 398, 184, 259, 369, 1917,
	232, 295, 208, 1650, 306, 1550, 164, 322, 277, 279,
	276, 280, 236, 147, 154, 1678, 324, 342, 373, 186,
	358, 145, 146, 148, 156, 333, 157, 158, 1734, 271,
	224, 228, 240, 251, 1649, 329, 359, 390, 1640, 181,
	173, 361, 383, 192, 341, 344, 397, 1674, 180, 175,
	1722, 1697, 1631, 1586, 1592, 1492, 0, 174, 1670, 1541,
	1557, 1529, 1644, 1528, 235, 1661, 381, 382, 207, 399,
	1504, 1742, 176, 1505, 1741, 292, 300, 291, 1745, 377,
	1723, 1632, 1617, 1615, 1497, 1721, 1630, 1616, 260, 227,
	242, 316, 267, 317, 243, 287, 286, 288, 269, 1619,
	0, 171, 0, 356, 1732, 1757, 360, 189, 1523, 1689,
	372, 150, 323, 190, 234, 225, 315, 290, 182, 245,
	354, 258, 266, 1665, 1754, 304, 332, 196, 387, 353,
	221, 1519, 297, 1522, 1517, 1520, 1518, 1623, 1624, 1737,
	1738, 1739, 1677, 1512, 0, 1715, 1716, 0, 1610, 1725,
	1498, 0, 1693, 159, 160, 1657, 1752, 1570, 203, 138,
	1494, 1495, 1496, 139, 1600, 1601, 140, 141, 1711, 1710,
	1709, 1712, 142, 1746, 1744, 1747, 1513, 1534, 1556, 1606,
	1607, 1609, 1641, 1642, 1687, 1660, 1669, 1543, 1602, 312,
	172, 183, 195, 214, 212, 226, 255, 278, 283, 310,
	343, 348, 363, 364, 365, 366, 216, 0, 219, 194,
	327, 193, 268, 248, 311, 370, 371, 320, 209, 1628,
	166, 177, 262, 1753, 325, 231, 1481, 1489, 1516, 1524,
	1525, 1526, 1527, 1532, 1539, 1547, 1558, 1559, 1567, 1573,
	1574, 1575, 1576, 1585, 1587, 1588, 1589, 1590, 1591, 1595,
	1596, 1612, 1626, 1627, 1634, 1635, 0, 1664, 1667, 1676,
	1681, 1684, 1690, 1692, 1699, 1704, 1706, 1743, 1751, 1756,
	388, 213, 1608, 1633, 1671, 178, 187, 198, 211, 223,
	230, 241, 244, 249, 250, 252, 256, 270, 272, 273,
	274, 275, 293, 294, 298, 299, 302, 303, 307, 308,
	309, 313, 314, 321, 155, 328, 334, 335, 336, 337,
	338, 346, 347, 349, 350, 357, 379, 380, 393, 394,
	1717, 1581, 163, 0, 0, 169, 0, 0, 0, 0,
	0, 1566, 168, 1713, 1748, 1645, 1659, 1729, 1691, 367,
	1584, 1733, 1533, 1563, 1750, 1569, 1572, 1653, 1499, 1622,
	301, 1560, 1500, 1483, 1538, 1487, 1551, 1488, 1535, 218,
	1531, 1694, 1625, 1731, 1604, 1646, 1656, 217, 205, 1614,
	1613, 1719, 1549, 1548, 1651, 1708, 1730, 1603, 0, 1740,
	264, 1705, 0, 391, 355, 284, 0, 0, 1599, 1714,
	1620, 1683, 1582, 1655, 1515, 1638, 1735, 1561, 1647, 1736,
	0, 0, 0, 0, 0, 453, 0, 0, 0, 0,
	0, 0, 0, 0, 144, 0, 1643, 1727, 1554, 0,
	1594, 1652, 1755, 1486, 1639, 0, 1491, 1502, 1749, 1720,
	1545, 1546, 222, 0, 0, 0, 0, 0, 0, 0,
	1597, 1621, 1673, 1579, 386, 1658, 1668, 1686, 1571, 319,
	237, 0, 0, 0, 0, 0, 0, 0, 0, 1540,
	0, 1636, 0, 0, 0, 1507, 1493, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1593,
	0, 0, 0, 1514, 1484, 1542, 1675, 1485, 1482, 285,
	1503, 1688, 1718, 1580, 253, 161, 1724, 1578, 1577, 1662,
	1508, 1698, 1564, 261, 1506, 162, 1501, 1509, 1562, 296,
	1672, 1680, 149, 165, 263, 1695, 1536, 1553, 206, 0,
	331, 1648, 385, 1918, 233, 1629, 330, 265, 378, 1663,
	1726, 384, 1565, 362, 392, 396, 229, 1605, 197, 352,
	220, 215, 1544, 1685, 1490, 238, 318, 210, 257, 1583,
	1654, 1537, 202, 1666, 1637, 1700, 351, 375, 167, 281,
	376, 395, 185, 368, 282, 289, 199, 201, 200, 179,
	345, 374, 191, 204, 1696, 1679, 1702, 1530, 1510, 1521,
	1511, 1552, 1728, 247, 239, 1703, 1701, 1555, 305, 188,
	1618, 1611, 1598, 389, 151, 340, 339, 1568, 246, 1682,
	152, 143, 326, 153, 254, 170, 1707, 398, 184, 259,
	369, 1917, 232, 295, 208, 1650, 306, 1550, 164, 322,
	277, 279, 276, 280, 236, 147, 154, 1678, 324, 342,
	373, 186, 358, 145, 146, 148, 156, 333, 157, 158,
	1734, 271, 224, 228, 240, 251, 1649, 329, 359, 390,
	1640, 181, 173, 361, 383, 192, 341, 344, 397, 1674,
	180, 175, 1722, 1697, 1631, 1586, 1592, 1492, 0, 174,
	1670, 1541, 1557, 1529, 1644, 1528, 235, 1661, 381, 382,
	207, 399, 1504, 1742, 176, 1505, 1741, 292, 300, 291,
	1745, 377, 1723, 1632, 1617, 1615, 1497, 1721, 1630, 1616,
	260, 227, 242, 316, 267, 317, 243, 287, 286, 288,
	269, 1619, 0, 171, 0, 356, 1732, 1757, 360, 189,
	1523, 1689, 372, 150, 323, 190, 234, 225, 315, 290,
	182, 245, 354, 258, 266, 1665, 1754, 304, 332, 196,
	387, 353, 221, 1519, 297, 1522, 1517, 1520, 1518, 1623,
	1624, 1737, 1738, 1739, 1677, 1512, 0, 1715, 1716, 0,
	1610, 1725, 1498, 0, 1693, 159, 160, 1657, 1752, 1570,
	203, 138, 1494, 1495, 1496, 139, 1600, 1601, 140, 141,
	1711, 1710, 1709, 1712, 142, 1746, 1744, 1747, 1513, 1534,
	1556, 1606, 1607, 1609, 1641, 1642, 1687, 1660, 1669, 1543,
	1602, 312, 172, 183, 195, 214, 212, 226, 255, 278,
	283, 310, 343, 348, 363, 364, 365, 366, 216, 0,
	219, 194, 327, 193, 268, 248, 311, 370, 371, 320,
	209, 1628, 166, 177, 262, 1753, 325, 231, 1481, 1489,
	1516, 1524, 1525, 1526, 1527, 1532, 1539, 1547, 1558, 1559,
	1567, 1573, 1574, 1575, 1576, 1585, 1587, 1588, 1589, 1590,
	1591, 1595, 1596, 1612, 1626, 1627, 1634, 1635, 0, 1664,
	1667, 1676, 1681, 1684, 1690, 1692, 1699, 1704, 1706, 1743,
	1751, 1756, 388, 213, 1608, 1633, 1671, 178, 187, 198,
	211, 223, 230, 241, 244, 249, 250, 252, 256, 270,
	272, 273, 274, 275, 293, 294, 298, 299, 302, 303,
	307, 308, 309, 313, 314, 321, 155, 328, 334, 335,
	336, 337, 338, 346, 347, 349, 350, 357, 379, 380,
	393, 394, 1717, 1581, 163, 0, 0, 169, 0, 0,
	0, 0, 0, 1566, 168, 1713, 1748, 1645, 1659, 863,
	0, 367, 928, 867, 710, 733, 876, 739, 741, 804,
	686, 781, 301, 730, 687, 0, 0, 678, 923, 679,
	711, 218, 921, 837, 782, 865, 767, 797, 807, 217,
	205, 774, 773, 854, 722, 721, 802, 850, 864, 0,
	0, 961, 264, 0, 983, 391, 355, 284, 986, 985,
	765, 0, 935, 948, 750, 806, 698, 793, 869, 731,
	798, 870, 0, 0, 0, 0, 0, 453, 0, 0,
	0, 0, 0, 0, 0, 0, 144, 0, 943, 957,
	924, 984, 760, 803, 881, 677, 940, 0, 682, 912,
	0, 855, 718, 719, 222, 0, 0, 0, 0, 0,
	0, 0, 763, 780, 822, 747, 386, 809, 818, 832,
	740, 319, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 939, 0, 0, 0, 692, 908, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 929, 0, 0, 0, 697, 675, 716, 824, 676,
	674, 285, 689, 950, 853, 748, 253, 161, 859, 746,
	927, 812, 693, 841, 734, 261, 691, 162, 688, 694,
	732, 296, 821, 827, 149, 165, 263, 838, 712, 725,
	206, 2646, 331, 799, 385, 2648, 233, 785, 330, 265,
	378, 813, 861, 384, 735, 362, 392, 396, 229, 768,
	197, 352, 220, 215, 717, 831, 681, 238, 318, 210,
	257, 751, 805, 713, 202, 816, 792, 843, 351, 375,
	167, 281, 376, 395, 185, 368, 282, 289, 199, 201,
	200, 179, 345, 374, 191, 204, 839, 826, 845, 708,
	695, 700, 696, 724, 862, 247, 239, 846, 844, 726,
	305, 188, 778, 771, 764, 389, 151, 340, 339, 738,
	246, 829, 152, 143, 326, 153, 254, 170, 849, 398,
	184, 259, 369, 2647, 232, 295, 208, 801, 306, 723,
	164, 322, 277, 279, 276, 280, 236, 147, 154, 825,
	324, 342, 373, 186, 358, 145, 146, 148, 156, 333,
	157, 158, 868, 271, 224, 228, 240, 251, 800, 329,
	359, 390, 794, 181, 173, 361, 383, 192, 341, 344,
	397, 823, 180, 175, 857, 840, 787, 753, 759, 683,
	0, 174, 819, 715, 727, 707, 795, 706, 235, 811,
	381, 382, 207, 399, 913, 872, 176, 690, 871, 292,
	300, 291, 874, 377, 858, 788, 777, 775, 684, 856,
	786, 776, 260, 227, 242, 316, 267, 317, 243, 287,
	286, 288, 269, 779, 0, 171, 0, 356, 866, 883,
	360, 189, 701, 833, 372, 150, 323, 190, 234, 225,
	315, 290, 182, 245, 354, 258, 266, 815, 880, 304,
	332, 196, 387, 353, 221, 918, 297, 920, 916, 919,
	917, 936, 937, 958, 959, 960, 947, 914, 0, 955,
	956, 0, 770, 860, 685, 0, 836, 159, 160, 808,
	878, 926, 203, 138, 909, 910, 911, 139, 930, 931,
	140, 141, 953, 952, 951, 954, 142, 963, 962, 964,
	915, 922, 925, 932, 933, 934, 941, 942, 949, 944,
	945, 0, 766, 312, 172, 183, 195, 214, 212, 226,
	255, 278, 283, 310, 343, 348, 363, 364, 365, 366,
	216, 0, 219, 194, 327, 193, 268, 248, 311, 370,
	371, 320, 209, 938, 166, 177, 262, 879, 325, 231,
	673, 680, 699, 702, 703, 704, 705, 709, 714, 720,
	728, 729, 737, 742, 743, 744, 745, 752, 754, 755,
	756, 757, 758, 761, 762, 772, 783, 784, 790, 791,
	0, 814, 817, 946, 828, 830, 834, 835, 842, 847,
	848, 873, 877, 882, 388, 213, 769, 789, 820, 178,
	187, 198, 211, 223, 230, 241, 244, 249, 250, 252,
	256, 270, 272, 273, 274, 275, 293, 294, 298, 299,
	302, 303, 307, 308, 309, 313, 314, 321, 155, 328,
	334, 335, 336, 337, 338, 346, 347, 349, 350, 357,
	379, 380, 393, 394, 852, 749, 163, 0, 0, 169,
	0, 0, 0, 0, 0, 736, 168, 851, 875, 796,
	810, 863, 0, 367, 928, 867, 710, 733, 876, 739,
	741, 804, 686, 781, 301, 730, 687, 0, 0, 678,
	923, 679, 711, 218, 921, 837, 782, 865, 767, 797,
	807, 217, 205, 774, 773, 854, 722, 721, 802, 850,
	864, 0, 0, 961, 264, 0, 0, 391, 355, 284,
	0, 0, 765, 0, 935, 948, 750, 806, 698, 793,
	869, 731, 798, 870, 0, 0, 0, 0, 0, 453,
	0, 0, 0, 0, 0, 0, 0, 0, 144, 0,
	943, 957, 924, 0, 760, 803, 881, 677, 940, 0,
	682, 912, 0, 855, 718, 719, 222, 0, 0, 0,
	0, 0, 0, 0, 763, 780, 822, 747, 386, 809,
	818, 832, 740, 319, 237, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 939, 0, 0, 0, 692,
	908, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 929, 0, 0, 0, 697, 675, 716,
	824, 676, 674, 285, 689, 950, 853, 748, 253, 161,
	859, 746, 927, 812, 693, 841, 734, 261, 691, 162,
	688, 694, 732, 296, 821, 827, 149, 165, 263, 838,
	712, 725, 206, 0, 331, 799, 385, 907, 233, 785,
	330, 265, 378, 813, 861, 384, 735, 362, 392, 396,
	229, 768, 197, 352, 220, 215, 717, 831, 681, 238,
	318, 210, 257, 751, 805, 713, 202, 816, 792, 843,
	351, 375, 167, 281, 376, 395, 185, 368, 282, 289,
	199, 201, 200, 179, 345, 374, 191, 204, 839, 826,
	845, 708, 695, 700, 696, 724, 862, 247, 239, 846,
	844, 726, 305, 188, 778, 771, 764, 389, 151, 340,
	339, 738, 246, 829, 152, 143, 326, 153, 254, 170,
	849, 398, 184, 259, 369, 906, 232, 295, 208, 801,
	306, 723, 164, 322, 277, 279, 276, 280, 236, 147,
	154, 825, 324, 342, 373, 186, 358, 145, 146, 148,
	156, 333, 157, 158, 868, 271, 224, 228, 240, 251,
	800, 329, 359, 390, 794, 181, 173, 361, 383, 192,
	341, 344, 397, 823, 180, 175, 857, 840, 787, 753,
	759, 683, 0, 174, 819, 715, 727, 707, 795, 706,
	235, 811, 381, 382, 207, 399, 913, 872, 176, 690,
	871, 292, 300, 291, 874, 377, 858, 788, 777, 775,
	684, 856, 786, 776, 260, 227, 242, 316, 267, 317,
	243, 287, 286, 288, 269, 779, 0, 171, 0, 356,
	866, 883, 360, 189, 701, 833, 372, 150, 323, 190,
	234, 225, 315, 290, 182, 245, 354, 258, 266, 815,
	880, 304, 332, 196, 387, 353, 221, 918, 297, 920,
	916, 919, 917, 936, 937, 958, 959, 960, 947, 914,
	0, 955, 956, 0, 770, 860, 685, 0, 836, 159,
	160, 808, 878, 926, 203, 138, 909, 910, 911, 139,
	930, 931, 140, 141, 953, 952, 951, 954, 142, 963,
	962, 964, 915, 922, 925, 932, 933, 934, 941, 942,
	949, 944, 945, 0, 766, 312, 172, 183, 195, 214,
	212, 226, 255, 278, 283, 310, 343, 348, 363, 364,
	365, 366, 216, 0, 219, 194, 327, 193, 268, 248,
	311, 370, 371, 320, 209, 938, 166, 177, 262, 879,
	325, 231, 673, 680, 699, 702, 703, 704, 705, 709,
	714, 720, 728, 729, 737, 742, 743, 744, 745, 752,
	754, 755, 756, 757, 758, 761, 762, 772, 783, 784,
	790, 791, 0, 814, 817, 946, 828, 830, 834, 835,
	842, 847, 848, 873, 877, 882, 388, 213, 769, 789,
	820, 178, 187, 198, 211, 223, 230, 241, 244, 249,
	250, 252, 256, 270, 272, 273, 274, 275, 293, 294,
	298, 299, 302, 303, 307, 308, 309, 313, 314, 321,
	155, 328, 334, 335, 336, 337, 338, 346, 347, 349,
	350, 357, 379, 380, 393, 394, 852, 749, 163, 0,
	0, 169, 0, 0, 0, 0, 0, 736, 168, 851,
	875, 796, 810, 863, 0, 367, 928, 867, 710, 733,
	876, 739, 741, 804, 686, 781, 301, 730, 687, 0,
	0, 678, 923, 679, 711, 218, 921, 837, 782, 865,
	767, 797, 807, 217, 205, 774, 773, 854, 722, 721,
	802, 850, 864, 0, 0, 961, 264, 0, 0, 391,
	355, 284, 0, 0, 765, 0, 935, 948, 750, 806,
	698, 793, 869, 731, 798, 870, 0, 0, 0, 0,
	0, 453, 0, 0, 0, 0, 0, 0, 0, 0,
	144, 0, 943, 957, 924, 0, 760, 803, 881, 677,
	940, 0, 682, 912, 0, 855, 718, 719, 222, 0,
	0, 0, 0, 0, 0, 0, 763, 780, 822, 747,
	386, 809, 818, 832, 740, 319, 237, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 939, 0, 0,
	0, 692, 908, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 929, 0, 0, 0, 697,
	675, 716, 824, 676, 674, 285, 689, 950, 853, 748,
	253, 161, 859, 746, 927, 812, 693, 841, 734, 261,
	691, 162, 688, 694, 732, 296, 821, 827, 149, 165,
	263, 838, 712, 725, 206, 0, 331, 799, 385, 907,
	233, 785, 330, 265, 378, 813, 861, 384, 735, 362,
	392, 396, 229, 768, 197, 352, 220, 215, 717, 831,
	681, 238, 318, 210, 257, 751, 805, 713, 202, 816,
	792, 843, 351, 375, 167, 281, 376, 395, 185, 368,
	282, 289, 199, 201, 200, 179, 345, 374, 191, 204,
	839, 826, 845, 708, 695, 700, 696, 724, 862, 247,
	239, 846, 844, 726, 305, 188, 778, 771, 764, 389,
	151, 340, 339, 738, 246, 829, 152, 143, 326, 153,
	254, 170, 849, 398, 184, 259, 369, 906, 232, 295,
	208, 801, 306, 723, 164, 322, 277, 279, 276, 280,
	236, 147, 154, 825, 324, 342, 373, 186, 358, 145,
	146, 148, 156, 333, 157, 158, 868, 271, 224, 228,
	240, 251, 800, 329, 359, 390, 794, 181, 173, 361,
	383, 192, 341, 344, 397, 823, 180, 175, 857, 840,
	787, 753, 759, 683, 0, 174, 819, 715, 727, 707,
	795, 706, 235, 811, 381, 382, 207, 399, 913, 872,
	176, 901, 871, 292, 300, 291, 874, 377, 858, 788,
	777, 775, 684, 856, 786, 776, 260, 227, 242, 316,
	267, 317, 243, 287, 286, 288, 897, 779, 0, 171,
	0, 356, 866, 883, 360, 189, 701, 833, 372, 150,
	323, 190, 234, 225, 315, 902, 900, 891, 892, 258,
	266, 815, 880, 304, 332, 196, 387, 353, 221, 918,
	297, 920, 916, 919, 917, 936, 937, 958, 959, 960,
	947, 914, 0, 955, 956, 0, 770, 860, 685, 0,
	836, 159, 160, 808, 878, 926, 203, 138, 909, 910,
	911, 139, 930, 931, 140, 141, 953, 952, 951, 954,
	142, 963, 962, 964, 915, 922, 925, 932, 933, 934,
	941, 942, 949, 944, 945, 0, 766, 312, 172, 183,
	195, 214, 212, 226, 255, 278, 283, 310, 343, 348,
	363, 364, 365, 366, 216, 0, 219, 194, 327, 193,
	268, 248, 311, 370, 371, 320, 209, 938, 166, 177,
	262, 879, 325, 231, 673, 680, 699, 702, 703, 704,
	705, 709, 714, 720, 728, 729, 737, 742, 743, 744,
	745, 752, 754, 755, 756, 757, 758, 761, 762, 772,
	783, 784, 790, 791, 0, 814, 817, 946, 828, 830,
	834, 835, 842, 847, 848, 873, 877, 882, 388, 213,
	769, 789, 820, 178, 187, 198, 211, 223, 230, 241,
	244, 249, 250, 252, 256, 270, 272, 273, 274, 275,
	293, 294, 298, 299, 302, 303, 307, 308, 309, 898,
	899, 321, 155, 328, 334, 335, 336, 337, 338, 346,
	347, 349, 350, 357, 379, 380, 393, 394, 852, 749,
	163, 0, 0, 169, 0, 0, 0, 0, 0, 736,
	168, 851, 875, 796, 810, 863, 0, 367, 928, 867,
	710, 733, 876, 739, 741, 804, 686, 781, 301, 730,
	687, 0, 0, 678, 923, 679, 711, 218, 921, 837,
	782, 865, 767, 797, 807, 217, 205, 774, 773, 854,
	722, 721, 802, 850, 864, 0, 0, 961, 264, 0,
	0, 391, 355, 284, 0, 0, 765, 0, 935, 948,
	750, 806, 698, 793, 869, 731, 798, 870, 0, 0,
	0, 0, 0, 453, 0, 0, 0, 0, 0, 0,
	0, 0, 144, 0, 943, 957, 924, 0, 760, 803,
	881, 677, 940, 0, 682, 912, 0, 855, 718, 719,
	222, 0, 0, 0, 0, 0, 0, 0, 763, 780,
	822, 747, 386, 809, 818, 832, 740, 319, 237, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 939,
	0, 0, 0, 692, 908, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 929, 0, 0,
	0, 697, 675, 716, 824, 676, 674, 285, 689, 950,
	853, 748, 253, 161, 859, 746, 927, 812, 693, 841,
	734, 261, 691, 162, 688, 694, 732, 296, 821, 827,
	149, 165, 263, 838, 712, 725, 206, 0, 331, 799,
	385, 907, 233, 785, 330, 265, 378, 813, 861, 384,
	735, 362, 392, 396, 229, 768, 197, 352, 220, 215,
	717, 831, 681, 238, 318, 210, 257, 751, 805, 713,
	202, 816, 792, 843, 351, 375, 167, 281, 376, 395,
	185, 368, 282, 289, 199, 201, 200, 179, 345, 374,
	191, 204, 839, 826, 845, 708, 695, 700, 696, 724,
	862, 247, 239, 846, 844, 726, 305, 188, 778, 771,
	764, 389, 151, 340, 339, 738, 246, 829, 152, 143,
	326, 153, 254, 170, 849, 398, 184, 259, 369, 906,
	232, 295, 208, 801, 306, 723, 164, 322, 277, 279,
	276, 280, 236, 147, 154, 825, 324, 342, 373, 186,
	358, 145, 146, 148, 156, 333, 157, 158, 868, 271,
	224, 228, 240, 251, 800, 329, 359, 390, 794, 181,
	173, 361, 1358, 192, 341, 344, 397, 823, 180, 175,
	857, 840, 787, 753, 759, 683, 0, 174, 819, 715,
	727, 707, 795, 706, 235, 811, 381, 382, 207, 399,
	913, 872, 176, 690, 871, 292, 300, 291, 874, 377,
	858, 788, 777, 775, 684, 856, 786, 776, 260, 227,
	242, 316, 267, 317, 243, 287, 286, 288, 269, 779,
	0, 171, 0, 356, 866, 883, 360, 189, 701, 833,
	372, 150, 323, 190, 234, 225, 315, 290, 182, 245,
	354, 258, 266, 815, 880, 304, 332, 196, 387, 353,
	221, 918, 297, 920, 916, 919, 917, 936, 937, 958,
	959, 960, 947, 914, 0, 955, 956, 0, 770, 860,
	685, 0, 836, 159, 160, 808, 878, 926, 203, 138,
	909, 910, 911, 139, 930, 931, 140, 141, 953, 952,
	951, 954, 142, 963, 962, 964, 915, 922, 925, 932,
	933, 934, 941, 942, 949, 944, 945, 0, 766, 312,
	172, 183, 195, 214, 212, 226, 255, 278, 283, 310,
	343, 348, 363, 364, 365, 366, 216, 0, 219, 194,
	327, 193, 268, 248, 311, 370, 371, 320, 209, 938,
	166, 177, 262, 879, 325, 231, 673, 680, 699, 702,
	703, 704, 705, 709, 714, 720, 728, 729, 737, 742,
	743, 744, 745, 752, 754, 755, 756, 757, 758, 761,
	762, 772, 783, 784, 790, 791, 0, 814, 817, 946,
	828, 830, 834, 835, 842, 847, 848, 873, 877, 882,
	388, 213, 769, 789, 820, 178, 187, 198, 211, 223,
	230, 241, 244, 249, 250, 252, 256, 270, 272, 273,
	274, 275, 293, 294, 298, 299, 302, 303, 307, 308,
	309, 313, 314, 321, 155, 328, 334, 335, 336, 337,
	338, 346, 347, 349, 350, 357, 379, 380, 393, 394,
	852, 749, 163, 0, 0, 169, 0, 0, 0, 0,
	0, 736, 168, 851, 875, 796, 810, 863, 0, 367,
	928, 867, 710, 733, 876, 739, 741, 804, 686, 781,
	301, 730, 687, 0, 0, 678, 923, 679, 711, 218,
	921, 837, 782, 865, 767, 797, 807, 217, 205, 774,
	773, 854, 722, 721, 802, 850, 864, 0, 0, 961,
	264, 0, 0, 391, 355, 284, 0, 0, 765, 0,
	935, 948, 750, 806, 698, 793, 869, 731, 798, 870,
	0, 0, 0, 0, 0, 453, 0, 0, 0, 0,
	0, 0, 0, 0, 144, 0, 943, 957, 924, 0,
	760, 803, 881, 677, 940, 0, 682, 912, 0, 855,
	718, 719, 222, 0, 0, 0, 0, 0, 0, 0,
	763, 780, 822, 747, 386, 809, 818, 832, 740, 319,
	237, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 939, 0, 0, 0, 692, 908, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 929,
	0, 0, 0, 697, 675, 716, 824, 676, 674, 285,
	689, 950, 853, 748, 253, 161, 859, 746, 927, 812,
	693, 841, 734, 261, 691, 162, 688, 694, 732, 296,
	821, 827, 149, 165, 263, 838, 712, 725, 206, 0,
	331, 799, 385, 907, 233, 785, 330, 265, 378, 813,
	861, 384, 735, 362, 392, 396, 229, 768, 197, 352,
	220, 215, 717, 831, 681, 238, 318, 210, 257, 751,
	805, 713, 202, 816, 792, 843, 351, 375, 167, 281,
	376, 395, 185, 368, 282, 289, 199, 201, 200, 179,
	345, 374, 191, 204, 839, 826, 845, 708, 695, 700,
	696, 724, 862, 247, 239, 846, 844, 726, 305, 188,
	778, 771, 764, 389, 151, 340, 339, 738, 246, 829,
	152, 143, 326, 153, 254, 170, 849, 398, 184, 259,
	369, 906, 232, 295, 208, 801, 306, 723, 164, 322,
	277, 279, 276, 280, 236, 147, 154, 825, 324, 342,
	373, 186, 358, 145, 146, 148, 156, 333, 157, 158,
	868, 271, 224, 228, 240, 251, 800, 329, 359, 390,
	794, 181, 173, 361, 888, 192, 341, 344, 397, 823,
	180, 175, 857, 840, 787, 753, 759, 683, 0, 174,
	819, 715, 727, 707, 795, 706, 235, 811, 381, 382,
	207, 399, 913, 872, 176, 901, 871, 292, 300, 291,
	874, 377, 858, 788, 777, 775, 684, 856, 786, 776,
	260, 227, 242, 316, 267, 317, 243, 287, 286, 288,
	897, 779, 0, 171, 0, 356, 866, 883, 360, 189,
	701, 833, 372, 150, 323, 190, 234, 225, 315, 902,
	900, 891, 892, 258, 266, 815, 880, 304, 332, 196,
	387, 353, 221, 918, 297, 920, 916, 919, 917, 936,
	937, 958, 959, 960, 947, 914, 0, 955, 956, 0,
	770, 860, 685, 0, 836, 159, 160, 808, 878, 926,
	203, 138, 909, 910, 911, 139, 930, 931, 140, 141,
	953, 952, 951, 954, 142, 963, 962, 964, 915, 922,
	925, 932, 933, 934, 941, 942, 949, 944, 945, 0,
	766, 312, 172, 183, 195, 214, 212, 226, 255, 278,
	283, 310, 343, 348, 363, 364, 365, 366, 216, 0,
	219, 194, 327, 193, 268, 248, 311, 370, 371, 320,
	209, 938, 166, 177, 262, 879, 325, 231, 673, 680,
	699, 702, 703, 704, 705, 709, 714, 720, 728, 729,
	737, 742, 743, 744, 745, 752, 754, 755, 756, 757,
	758, 761, 762, 772, 783, 784, 790, 791, 0, 814,
	817, 946, 828, 830, 834, 835, 842, 847, 848, 873,
	877, 882, 388, 213, 769, 789, 820, 178, 187, 198,
	211, 223, 230, 241, 244, 249, 250, 252, 256, 270,
	272, 273, 274, 275, 293, 294, 298, 299, 302, 303,
	307, 308, 309, 898, 899, 321, 155, 328, 334, 335,
	336, 337, 338, 346, 347, 349, 350, 357, 379, 380,
	393, 394, 852, 749, 163, 0, 0, 169, 0, 0,
	0, 0, 0, 736, 168, 851, 875, 796, 810, 1729,
	1691, 367, 1584, 1733, 1533, 1563, 1750, 1569, 1572, 1653,
	1499, 1622, 301, 1560, 1500, 1483, 1538, 1487, 1551, 1488,
	1535, 218, 1531, 1694, 1625, 1731, 1604, 1646, 1656, 217,
	205, 1614, 1613, 1719, 1549, 1548, 1651, 1708, 1730, 1603,
	0, 1740, 264, 1705, 0, 391, 355, 284, 0, 0,
	1599, 1714, 1620, 1683, 1582, 1655, 1515, 1638, 1735, 1561,
	1647, 1736, 0, 0, 0, 0, 0, 2726, 0, 2721,
	2722, 0, 0, 0, 0, 0, 2723, 0, 1643, 1727,
	1554, 0, 1594, 1652, 1755, 1486, 1639, 0, 1491, 1502,
	1749, 1720, 1545, 1546, 222, 0, 0, 0, 0, 0,
	0, 0, 1597, 1621, 1673, 1579, 386, 1658, 1668, 1686,
	1571, 319, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 1540, 0, 1636, 0, 0, 0, 1507, 1493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1593, 0, 0, 0, 1514, 1484, 1542, 1675, 1485,
	1482, 285, 1503, 1688, 1718, 1580, 253, 0, 1724, 1578,
	1577, 1662, 1508, 1698, 1564, 261, 1506, 162, 1501, 1509,
	1562, 296, 1672, 1680, 0, 165, 263, 1695, 1536, 1553,
	206, 0, 331, 1648, 385, 0, 233, 1629, 330, 265,
	378, 1663, 1726, 384, 1565, 362, 392, 396, 229, 1605,
	197, 352, 220, 215, 1544, 1685, 1490, 238, 318, 210,
	257, 1583, 1654, 1537, 202, 1666, 1637, 1700, 351, 375,
	167, 281, 376, 395, 185, 368, 282, 289, 199, 201,
	200, 179, 345, 374, 191, 204, 1696, 1679, 1702, 1530,
	1510, 1521, 1511, 1552, 1728, 247, 239, 1703, 1701, 1555,
	305, 188, 1618, 1611, 1598, 389, 0, 340, 339, 1568,
	246, 1682, 0, 0, 326, 2725, 254, 170, 1707, 398,
	184, 259, 369, 0, 232, 295, 208, 1650, 306, 1550,
	164, 322, 277, 279, 276, 280, 236, 0, 0, 1678,
	324, 342, 373, 186, 358, 2724, 0, 0, 0, 333,
	0, 0, 1734, 271, 224, 228, 240, 251, 1649, 329,
	359, 390, 1640, 181, 173, 361, 383, 192, 341, 344,
	397, 1674, 180, 175, 1722, 1697, 1631, 1586, 1592, 1492,
	0, 174, 1670, 1541, 1557, 1529, 1644, 1528, 235, 1661,
	381, 382, 207, 399, 1504, 1742, 176, 1505, 1741, 292,
	300, 291, 1745, 377, 1723, 1632, 1617, 1615, 1497, 1721,
	1630, 1616, 260, 227, 242, 316, 267, 317, 243, 287,
	286, 288, 269, 1619, 0, 171, 0, 356, 1732, 1757,
	360, 189, 1523, 1689, 372, 0, 323, 190, 234, 225,
	315, 290, 182, 245, 354, 258, 266, 1665, 1754, 304,
	332, 196, 387, 353, 221, 1519, 297, 1522, 1517, 1520,
	1518, 1623, 1624, 1737, 1738, 1739, 1677, 1512, 0, 1715,
	1716, 0, 1610, 1725, 1498, 0, 1693, 0, 0, 1657,
	1752, 1570, 203, 0, 1494, 1495, 1496, 0, 1600, 1601,
	0, 0, 1711, 1710, 1709, 1712, 0, 1746, 1744, 1747,
	1513, 1534, 1556, 1606, 1607, 1609, 1641, 1642, 1687, 1660,
	1669, 1543, 1602, 312, 172, 183, 195, 214, 212, 226,
	255, 278, 283, 310, 343, 348, 363, 364, 365, 366,
	216, 0, 219, 194, 327, 193, 268, 248, 311, 370,
	371, 320, 209, 1628, 166, 177, 262, 1753, 325, 231,
	1481, 1489, 1516, 1524, 1525, 1526, 1527, 1532, 1539, 1547,
	1558, 1559, 1567, 1573, 1574, 1575, 1576, 1585, 1587, 1588,
	1589, 1590, 1591, 1595, 1596, 1612, 1626, 1627, 1634, 1635,
	0, 1664, 1667, 1676, 1681, 1684, 1690, 1692, 1699, 1704,
	1706, 1743, 1751, 1756, 388, 213, 1608, 1633, 1671, 178,
	187, 198, 211, 223, 230, 241, 244, 249, 250, 252,
	256, 270, 272, 273, 274, 275, 293, 294, 298, 299,
	302, 303, 307, 308, 309, 313, 314, 321, 0, 328,
	334, 335, 336, 337, 338, 346, 347, 349, 350, 357,
	379, 380, 393, 394, 1717, 1581, 163, 0, 0, 169,
	0, 0, 0, 0, 0, 1566, 168, 1713, 1748, 1645,
	1659, 1729, 1691, 367, 1584, 1733, 1533, 1563, 1750, 1569,
	1572, 1653, 1499, 1622, 301, 1560, 1500, 1483, 1538, 1487,
	1551, 1488, 1535, 218, 1531, 1694, 1625, 1731, 1604, 1646,
	1656, 217, 205, 1614, 1613, 1719, 1549, 1548, 1651, 1708,
	1730, 1603, 0, 1740, 264, 1705, 0, 391, 355, 284,
	0, 0, 1599, 1714, 1620, 1683, 1582, 1655, 1515, 1638,
	1735, 1561, 1647, 1736, 0, 0, 0, 0, 0, 979,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1643, 1727, 1554, 0, 1594, 1652, 1755, 1486, 1639, 0,
	1491, 1502, 1749, 1720, 1545, 1546, 222, 0, 0, 0,
	0, 0, 0, 0, 1597, 1621, 1673, 1579, 386, 1658,
	1668, 1686, 1571, 319, 237, 0, 0, 0, 0, 0,
	0, 3100, 0, 1540, 0, 1636, 0, 0, 0, 1507,
	1493, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1593, 0, 0, 0, 1514, 1484, 1542,
	1675, 1485, 1482, 285, 1503, 1688, 1718, 1580, 253, 0,
	1724, 1578, 1577, 1662, 1508, 1698, 1564, 261, 1506, 162,
	1501, 1509, 1562, 296, 1672, 1680, 0, 165, 263, 1695,
	1536, 1553, 206, 0, 331, 1648, 385, 0, 233, 1629,
	330, 265, 378, 1663, 1726, 384, 1565, 362, 392, 396,
	229, 1605, 197, 352, 220, 215, 1544, 1685, 1490, 238,
	318, 210, 257, 1583, 1654, 1537, 202, 1666, 1637, 1700,
	351, 375, 167, 281, 376, 395, 185, 368, 282, 289,
	199, 201, 200, 179, 345, 374, 191, 204, 1696, 1679,
	1702, 1530, 1510, 1521, 1511, 1552, 1728, 247, 239, 1703,
	1701, 1555, 305, 188, 1618, 1611, 1598, 389, 0, 340,
	339, 1568, 246, 1682, 0, 0, 326, 0, 254, 170,
	1707, 398, 184, 259, 369, 0, 232, 295, 208, 1650,
	306, 1550, 164, 322, 277, 279, 276, 280, 236, 0,
	0, 1678, 324, 342, 373, 186, 358, 0, 0, 0,
	0, 333, 0, 0, 1734, 271, 224, 228, 240, 251,
	1649, 329, 359, 390, 1640, 181, 173, 361, 383, 192,
	341, 344, 397, 1674, 180, 175, 1722, 1697, 1631, 1586,
	1592, 1492, 0, 174, 1670, 1541, 1557, 1529, 1644, 1528,
	235, 1661, 381, 382, 207, 399, 1504, 1742, 176, 1505,
	1741, 292, 300, 291, 1745, 377, 1723, 1632, 1617, 1615,
	1497, 1721, 1630, 1616, 260, 227, 242, 316, 267, 317,
	243, 287, 286, 288, 269, 1619, 0, 171, 0, 356,
	1732, 1757, 360, 189, 1523, 1689, 372, 0, 323, 190,
	234, 225, 315, 290, 182, 245, 354, 258, 266, 1665,
	1754, 304, 332, 196, 387, 353, 221, 1519, 297, 1522,
	1517, 1520, 1518, 1623, 1624, 1737, 1738, 1739, 1677, 1512,
	0, 1715, 1716, 0, 1610, 1725, 1498, 0, 1693, 0,
	0, 1657, 1752, 1570, 203, 0, 1494, 1495, 1496, 0,
	1600, 1601, 0, 0, 1711, 1710, 1709, 1712, 0, 1746,
	1744, 1747, 1513, 1534, 1556, 1606, 1607, 1609, 1641, 1642,
	1687, 1660, 1669, 1543, 1602, 312, 172, 183, 195, 214,
	212, 226, 255, 278, 283, 310, 343, 348, 363, 364,
	365, 366, 216, 0, 219, 194, 327, 193, 268, 248,
	311, 370, 371, 320, 209, 1628, 166, 177, 262, 1753,
	325, 231, 1481, 1489, 1516, 1524, 1525, 1526, 1527, 1532,
	1539, 1547, 1558, 1559, 1567, 1573, 1574, 1575, 1576, 1585,
	1587, 1588, 1589, 1590, 1591, 1595, 1596, 1612, 1626, 1627,
	1634, 1635, 0, 1664, 1667, 1676, 1681, 1684, 1690, 1692,
	1699, 1704, 1706, 1743, 1751, 1756, 388, 213, 1608, 1633,
	1671, 178, 187, 198, 211, 223, 230, 241, 244, 249,
	250, 252, 256, 270, 272, 273, 274, 275, 293, 294,
	298, 299, 302, 303, 307, 308, 309, 313, 314, 321,
	0, 328, 334, 335, 336, 337, 338, 346, 347, 349,
	350, 357, 379, 380, 393, 394, 1717, 1581, 163, 0,
	0, 169, 0, 0, 0, 0, 0, 1566, 168, 1713,
	1748, 1645, 1659, 1729, 1691, 367, 1584, 1733, 1533, 1563,
	1750, 1569, 1572, 1653, 1499, 1622, 301, 1560, 1500, 1483,
	1538, 1487, 1551, 1488, 1535, 218, 1531, 1694, 1625, 1731,
	1604, 1646, 1656, 217, 205, 1614, 1613, 1719, 1549, 1548,
	1651, 1708, 1730, 1603, 0, 1740, 264, 1705, 0, 391,
	355, 284, 0, 0, 1599, 1714, 1620, 1683, 1582, 1655,
	1515, 1638, 1735, 1561, 1647, 1736, 0, 0, 0, 0,
	0, 979, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1643, 1727, 1554, 0, 1594, 1652, 1755, 1486,
	1639, 0, 1491, 1502, 1749, 1720, 1545, 1546, 222, 0,
	0, 0, 0, 0, 0, 0, 1597, 1621, 1673, 1579,
	386, 1658, 1668, 1686, 1571, 319, 237, 0, 0, 0,
	0, 0, 0, 2570, 0, 1540, 0, 1636, 0, 0,
	0, 1507, 1493, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1593, 0, 0, 0, 1514,
	1484, 1542, 1675, 1485, 1482, 285, 1503, 1688, 1718, 1580,
	253, 0, 1724, 1578, 1577, 1662, 1508, 1698, 1564, 261,
	1506, 162, 1501, 1509, 1562, 296, 1672, 1680, 0, 165,
	263, 1695, 1536, 1553, 206, 0, 331, 1648, 385, 0,
	233, 1629, 330, 265, 378, 1663, 1726, 384, 1565, 362,
	392, 396, 229, 1605, 197, 352, 220, 215, 1544, 1685,
	1490, 238, 318, 210, 257, 1583, 1654, 1537, 202, 1666,
	1637, 1700, 351, 375, 167, 281, 376, 395, 185, 368,
	282, 289, 199, 201, 200, 179, 345, 374, 191, 204,
	1696, 1679, 1702, 1530, 1510, 1521, 1511, 1552, 1728, 247,
	239, 1703, 1701, 1555, 305, 188, 1618, 1611, 1598, 389,
	0, 340, 339, 1568, 246, 1682, 0, 0, 326, 0,
	254, 170, 1707, 398, 184, 259, 369, 0, 232, 295,
	208, 1650, 306, 1550, 164, 322, 277, 279, 276, 280,
	236, 0, 0, 1678, 324, 342, 373, 186, 358, 0,
	0, 0, 0, 333, 0, 0, 1734, 271, 224, 228,
	240, 251, 1649, 329, 359, 390, 1640, 181, 173, 361,
	383, 192, 341, 344, 397, 1674, 180, 175, 1722, 1697,
	1631, 1586, 1592, 1492, 0, 174, 1670, 1541, 1557, 1529,
	1644, 1528, 235, 1661, 381, 382, 207, 399, 1504, 1742,
	176, 1505, 1741, 292, 300, 291, 1745, 377, 1723, 1632,
	1617, 1615, 1497, 1721, 1630, 1616, 260, 227, 242, 316,
	267, 317, 243, 287, 286, 288, 269, 1619, 0, 171,
	0, 356, 1732, 1757, 360, 189, 1523, 1689, 372, 0,
	323, 190, 234, 225, 315, 290, 182, 245, 354, 258,
	266, 1665, 1754, 304, 332, 196, 387, 353, 221, 1519,
	297, 1522, 1517, 1520, 1518, 1623, 1624, 1737, 1738, 1739,
	1677, 1512, 0, 1715, 1716, 0, 1610, 1725, 1498, 0,
	1693, 0, 0, 1657, 1752, 1570, 203, 0, 1494, 1495,
	1496, 0, 1600, 1601, 0, 0, 1711, 1710, 1709, 1712,
	0, 1746, 1744, 1747, 1513, 1534, 1556, 1606, 1607, 1609,
	1641, 1642, 1687, 1660, 1669, 1543, 1602, 312, 172, 183,
	195, 214, 212, 226, 255, 278, 283, 310, 343, 348,
	363, 364, 365, 366, 216, 0, 219, 194, 327, 193,
	268, 248, 311, 370, 371, 320, 209, 1628, 166, 177,
	262, 1753, 325, 231, 1481, 1489, 1516, 1524, 1525, 1526,
	1527, 1532, 1539, 1547, 1558, 1559, 1567, 1573, 1574, 1575,
	1576, 1585, 1587, 1588, 1589, 1590, 1591, 1595, 1596, 1612,
	1626, 1627, 1634, 1635, 0, 1664, 1667, 1676, 1681, 1684,
	1690, 1692, 1699, 1704, 1706, 1743, 1751, 1756, 388, 213,
	1608, 1633, 1671, 178, 187, 198, 211, 223, 230, 241,
	244, 249, 250, 252, 256, 270, 272, 273, 274, 275,
	293, 294, 298, 299, 302, 303, 307, 308, 309, 313,
	314, 321, 0, 328, 334, 335, 336, 337, 338, 346,
	347, 349, 350, 357, 379, 380, 393, 394, 1717, 1581,
	163, 0, 0, 169, 0, 0, 0, 0, 0, 1566,
	168, 1713, 1748, 1645, 1659, 1729, 1691, 367, 1584, 1733,
	1533, 1563, 1750, 1569, 1572, 1653, 1499, 1622, 301, 1560,
	1500, 1483, 1538, 1487, 1551, 1488, 1535, 218, 1531, 1694,
	1625, 1731, 1604, 1646, 1656, 217, 205, 1614, 1613, 1719,
	1549, 1548, 1651, 1708, 1730, 1603, 0, 1740, 264, 1705,
	0, 391, 355, 284, 0, 0, 1599, 1714, 1620, 1683,
	1582, 1655, 1515, 1638, 1735, 1561, 1647, 1736, 0, 0,
	0, 0, 0, 136, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1643, 1727, 1554, 0, 1594, 1652,
	1755, 1486, 1639, 0, 1491, 1502, 1749, 1720, 1545, 1546,
	222, 0, 0, 0, 0, 0, 0, 0, 1597, 1621,
	1673, 1579, 386, 1658, 1668, 1686, 1571, 319, 237, 0,
	0, 0, 0, 0, 0, 2374, 0, 1540, 0, 1636,
	0, 0, 0, 1507, 1493, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1593, 0, 0,
	0, 1514, 1484, 1542, 1675, 1485, 1482, 285, 1503, 1688,
	1718, 1580, 253, 0, 1724, 1578, 1577, 1662, 1508, 1698,
	1564, 261, 1506, 162, 1501, 1509, 1562, 296, 1672, 1680,
	0, 165, 263, 1695, 1536, 1553, 206, 0, 331, 1648,
	385, 0, 233, 1629, 330, 265, 378, 1663, 1726, 384,
	1565, 362, 392, 396, 229, 1605, 197, 352, 220, 215,
	1544, 1685, 1490, 238, 318, 210, 257, 1583, 1654, 1537,
	202, 1666, 1637, 1700, 351, 375, 167, 281, 376, 395,
	185, 368, 282, 289, 199, 201, 200, 179, 345, 374,
	191, 204, 1696, 1679, 1702, 1530, 1510, 1521, 1511, 1552,
	1728, 247, 239, 1703, 1701, 1555, 305, 188, 1618, 1611,
	1598, 389, 0, 340, 339, 1568, 246, 1682, 0, 0,
	326, 0, 254, 170, 1707, 398, 184, 259, 369, 0,
	232, 295, 208, 1650, 306, 1550, 164, 322, 277, 279,
	276, 280, 236, 0, 0, 1678, 324, 342, 373, 186,
	358, 0, 0, 0, 0, 333, 0, 0, 1734, 271,
	224, 228, 240, 251, 1649, 329, 359, 390, 1640, 181,
	173, 361, 383, 192, 341, 344, 397, 1674, 180, 175,
	1722, 1697, 1631, 1586, 1592, 1492, 0, 174, 1670, 1541,
	1557, 1529, 1644, 1528, 235, 1661, 381, 382, 207, 399,
	1504, 1742, 176, 1505, 1741, 292, 300, 291, 1745, 377,
	1723, 1632, 1617, 1615, 1497, 1721, 1630, 1616, 260, 227,
	242, 316, 267, 317, 243, 287, 286, 288, 269, 1619,
	0, 171, 0, 356, 1732, 1757, 360, 189, 1523, 1689,
	372, 0, 323, 190, 234, 225, 315, 290, 182, 245,
	354, 258, 266, 1665, 1754, 304, 332, 196, 387, 353,
	221, 1519, 297, 1522, 1517, 1520, 1518, 1623, 1624, 1737,
	1738, 1739, 1677, 1512, 0, 1715, 1716, 0, 1610, 1725,
	1498, 0, 1693, 0, 0, 1657, 1752, 1570, 203, 0,
	1494, 1495, 1496, 0, 1600, 1601, 0, 0, 1711, 1710,
	1709, 1712, 0, 1746, 1744, 1747, 1513, 1534, 1556, 1606,
	1607, 1609, 1641, 1642, 1687, 1660, 1669, 1543, 1602, 312,
	172, 183, 195, 214, 212, 226, 255, 278, 283, 310,
	343, 348, 363, 364, 365, 366, 216, 0, 219, 194,
	327, 193, 268, 248, 311, 370, 371, 320, 209, 1628,
	166, 177, 262, 1753, 325, 231, 1481, 1489, 1516, 1524,
	1525, 1526, 1527, 1532, 1539, 1547, 1558, 1559, 1567, 1573,
	1574, 1575, 1576, 1585, 1587, 1588, 1589, 1590, 1591, 1595,
	1596, 1612, 1626, 1627, 1634, 1635, 0, 1664, 1667, 1676,
	1681, 1684, 1690, 1692, 1699, 1704, 1706, 1743, 1751, 1756,
	388, 213, 1608, 1633, 1671, 178, 187, 198, 211, 223,
	230, 241, 244, 249, 250, 252, 256, 270, 272, 273,
	274, 275, 293, 294, 298, 299, 302, 303, 307, 308,
	309, 313, 314, 321, 0, 328, 334, 335, 336, 337,
	338, 346, 347, 349, 350, 357, 379, 380, 393, 394,
	1717, 1581, 163, 0, 0, 169, 0, 0, 0, 0,
	0, 1566, 168, 1713, 1748, 1645, 1659, 1729, 1691, 367,
	1584, 1733, 1533, 1563, 1750, 1569, 1572, 1653, 1499, 1622,
	301, 1560, 1500, 1483, 1538, 1487, 1551, 1488, 1535, 218,
	1531, 1694, 1625, 1731, 1604, 1646, 1656, 217, 205, 1614,
	1613, 1719, 1549, 1548, 1651, 1708, 1730, 1603, 0, 1740,
	264, 1705, 0, 391, 355, 284, 0, 0, 1599, 1714,
	1620, 1683, 1582, 1655, 1515, 1638, 1735, 1561, 1647, 1736,
	0, 0, 0, 0, 0, 979, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1643, 1727, 1554, 0,
	1594, 1652, 1755, 1486, 1639, 0, 1491, 1502, 1749, 1720,
	1545, 1546, 222, 0, 0, 0, 0, 0, 0, 0,
	1597, 1621, 1673, 1579, 386, 1658, 1668, 1686, 1571, 319,
	237, 0, 0, 0, 0, 0, 0, 0, 0, 1540,
	0, 1636, 0, 0, 0, 1507, 1493, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1593,
	0, 0, 0, 1514, 1484, 1542, 1675, 1485, 1482, 285,
	1503, 1688, 1718, 1580, 253, 0, 1724, 1578, 1577, 1662,
	1508, 1698, 1564, 261, 1506, 162, 1501, 1509, 1562, 296,
	1672, 1680, 0, 165, 263, 1695, 1536, 1553, 206, 0,
	331, 1648, 385, 0, 233, 1629, 330, 265, 378, 1663,
	1726, 384, 1565, 362, 392, 396, 229, 1605, 197, 352,
	220, 215, 1544, 1685, 1490, 238, 318, 210, 257, 1583,
	1654, 1537, 202, 1666, 1637, 1700, 351, 375, 167, 281,
	376, 395, 185, 368, 282, 289, 199, 201, 200, 179,
	345, 374, 191, 204, 1696, 1679, 1702, 1530, 1510, 1521,
	1511, 1552, 1728, 247, 239, 1703, 1701, 1555, 305, 188,
	1618, 1611, 1598, 389, 0, 340, 339, 1568, 246, 1682,
	0, 0, 326, 0, 254, 170, 1707, 398, 184, 259,
	369, 0, 232, 295, 208, 1650, 306, 1550, 164, 322,
	277, 279, 276, 280, 236, 0, 0, 1678, 324, 342,
	373, 186, 358, 0, 0, 0, 0, 333, 0, 0,
	1734, 271, 224, 228, 240, 251, 1649, 329, 359, 390,
	1640, 181, 173, 361, 383, 192, 341, 344, 397, 1674,
	180, 175, 1722, 1697, 1631, 1586, 1592, 1492, 0, 174,
	1670, 1541, 1557, 1529, 1644, 1528, 235, 1661, 381, 382,
	207, 399, 1504, 1742, 176, 1505, 1741, 292, 300, 291,
	1745, 377, 1723, 1632, 1617, 1615, 1497, 1721, 1630, 1616,
	260, 227, 242, 316, 267, 317, 243, 287, 286, 288,
	269, 1619, 0, 171, 0, 356, 1732, 1757, 360, 189,
	1523, 1689, 372, 1962, 323, 190, 234, 225, 315, 290,
	182, 245, 354, 258, 266, 1665, 1754, 304, 332, 196,
	387, 353, 221, 1519, 297, 1522, 1517, 1520, 1518, 1623,
	1624, 1737, 1738, 1739, 1677, 1512, 0, 1715, 1716, 0,
	1610, 1725, 1498, 0, 1693, 0, 0, 1657, 1752, 1570,
	203, 0, 1494, 1495, 1496, 0, 1600, 1601, 0, 0,
	1711, 1710, 1709, 1712, 0, 1746, 1744, 1747, 1513, 1534,
	1556, 1606, 1607, 1609, 1641, 1642, 1687, 1660, 1669, 1543,
	1602, 312, 172, 183, 195, 214, 212, 226, 255, 278,
	283, 310, 343, 348, 363, 364, 365, 366, 216, 0,
	219, 194, 327, 193, 268, 248, 311, 370, 371, 320,
	209, 1628, 166, 177, 262, 1753, 325, 231, 1481, 1489,
	1516, 1524, 1525, 1526, 1527, 1532, 1539, 1547, 1558, 1559,
	1567, 1573, 1574, 1575, 1576, 1585, 1587, 1588, 1589, 1590,
	1591, 1595, 1596, 1612, 1626, 1627, 1634, 1635, 0, 1664,
	1667, 1676, 1681, 1684, 1690, 1692, 1699, 1704, 1706, 1743,
	1751, 1756, 388, 213, 1608, 1633, 1671, 178, 187, 198,
	211, 223, 230, 241, 244, 249, 250, 252, 256, 270,
	272, 273, 274, 275, 293, 294, 298, 299, 302, 303,
	307, 308, 309, 313, 314, 321, 0, 328, 334, 335,
	336, 337, 338, 346, 347, 349, 350, 357, 379, 380,
	393, 394, 1717, 1581, 163, 0, 0, 169, 0, 0,
	0, 0, 0, 1566, 168, 1713, 1748, 1645, 1659, 1729,
	1691, 367, 1584, 1733, 1533, 1563, 1750, 1569, 1572, 1653,
	1499, 1622, 301, 1560, 1500, 1483, 1538, 1487, 1551, 1488,
	1535, 218, 1531, 1694, 1625, 1731, 1604, 1646, 1656, 217,
	205, 1614, 1613, 1719, 1549, 1548, 1651, 1708, 1730, 1603,
	0, 1740, 264, 1705, 0, 391, 355, 284, 0, 0,
	1599, 1714, 1620, 1683, 1582, 1655, 1515, 1638, 1735, 1561,
	1647, 1736, 0, 0, 0, 0, 0, 979, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1643, 1727,
	1554, 0, 1594, 1652, 1755, 1486, 1639, 0, 1491, 1502,
	1749, 1720, 1545, 1546, 222, 0, 0, 0, 0, 0,
	0, 0, 1597, 1621, 1673, 1579, 386, 1658, 1668, 1686,
	1571, 319, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 1540, 0, 1636, 0, 0, 0, 1507, 1493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1593, 0, 0, 0, 1514, 1484, 1542, 1675, 1485,
	1482, 285, 1503, 1688, 1718, 1580, 253, 0, 1724, 1578,
	1577, 1662, 1508, 1698, 1564, 261, 1506, 162, 1501, 1509,
	1562, 296, 1672, 1680, 0, 165, 263, 1695, 1536, 1553,
	206, 0, 331, 1648, 385, 0, 233, 1629, 330, 265,
	378, 1663, 1726, 384, 1565, 362, 392, 396, 229, 1605,
	197, 352, 220, 215, 1544, 1685, 1490, 238, 318, 210,
	257, 1583, 1654, 1537, 202, 1666, 1637, 1700, 351, 375,
	167, 281, 376, 395, 185, 368, 282, 289, 199, 201,
	200, 179, 345, 374, 191, 204, 1696, 1679, 1702, 1530,
	1510, 1521, 1511, 1552, 1728, 247, 239, 1703, 1701, 1555,
	305, 188, 1618, 1611, 1598, 389, 0, 340, 339, 1568,
	246, 1682, 0, 0, 326, 0, 254, 170, 1707, 398,
	184, 259, 369, 0, 232, 295, 208, 1650, 306, 1550,
	164, 322, 277, 279, 276, 280, 236, 0, 0, 1678,
	324, 342, 373, 186, 358, 0, 0, 0, 0, 333,
	0, 0, 1734, 271, 224, 228, 240, 251, 1649, 329,
	359, 390, 1640, 181, 173, 361, 383, 192, 341, 344,
	397, 1674, 180, 175, 1722, 1697, 1631, 1586, 1592, 1492,
	0, 174, 1670, 1541, 1557, 1529, 1644, 1528, 235, 1661,
	381, 382, 207, 399, 1504, 1742, 176, 1505, 1741, 292,
	300, 291, 1745, 377, 1723, 1632, 1617, 1615, 1497, 1721,
	1630, 1616, 260, 227, 242, 316, 267, 317, 243, 287,
	286, 288, 269, 1619, 0, 171, 0, 356, 1732, 1757,
	360, 189, 1523, 1689, 372, 0, 323, 190, 234, 225,
	315, 290, 182, 245, 354, 258, 266, 1665, 1754, 304,
	332, 196, 387, 353, 221, 1519, 297, 1522, 1517, 1520,
	1518, 1623, 1624, 1737, 1738, 1739, 1677, 1512, 0, 1715,
	1716, 0, 1610, 1725, 1498, 0, 1693, 0, 0, 1657,
	1752, 1570, 203, 0, 1494, 1495, 1496, 0, 1600, 1601,
	0, 0, 1711, 1710, 1709, 1712, 0, 1746, 1744, 1747,
	1513, 1534, 1556, 1606, 1607, 1609, 1641, 1642, 1687, 1660,
	1669, 1543, 1602, 312, 172, 183, 195, 214, 212, 226,
	255, 278, 283, 310, 343, 348, 363, 364, 365, 366,
	216, 0, 219, 194, 327, 193, 268, 248, 311, 370,
	371, 320, 209, 1628, 166, 177, 262, 1753, 325, 231,
	1481, 1489, 1516, 1524, 1525, 1526, 1527, 1532, 1539, 1547,
	1558, 1559, 1567, 1573, 1574, 1575, 1576, 1585, 1587, 1588,
	1589, 1590, 1591, 1595, 1596, 1612, 1626, 1627, 1634, 1635,
	0, 1664, 1667, 1676, 1681, 1684, 1690, 1692, 1699, 1704,
	1706, 1743, 1751, 1756, 388, 213, 1608, 1633, 1671, 178,
	187, 198, 211, 223, 230, 241, 244, 249, 250, 252,
	256, 270, 272, 273, 274, 275, 293, 294, 298, 299,
	302, 303, 307, 308, 309, 313, 314, 321, 0, 328,
	334, 335, 336, 337, 338, 346, 347, 349, 350, 357,
	379, 380, 393, 394, 1717, 1581, 163, 0, 0, 169,
	0, 0, 0, 0, 0, 1566, 168, 1713, 1748, 1645,
	1659, 1729, 1691, 367, 1584, 1733, 1533, 1563, 1750, 1569,
	1572, 1653, 1499, 1622, 301, 1560, 1500, 1483, 1538, 1487,
	1551, 1488, 1535, 218, 1531, 1694, 1625, 1731, 1604, 1646,
	1656, 217, 205, 1614, 1613, 1719, 1549, 1548, 1651, 1708,
	1730, 1603, 0, 1740, 264, 1705, 0, 391, 355, 284,
	0, 0, 1599, 1714, 1620, 1683, 1582, 1655, 1515, 1638,
	1735, 1561, 1647, 1736, 0, 0, 0, 0, 0, 3483,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1643, 1727, 1554, 0, 1594, 1652, 1755, 1486, 1639, 0,
	1491, 1502, 1749, 1720, 1545, 1546, 222, 0, 0, 0,
	0, 0, 0, 0, 1597, 1621, 1673, 1579, 386, 1658,
	1668, 1686, 1571, 319, 237, 0, 0, 0, 0, 0,
	0, 0, 0, 1540, 0, 1636, 0, 0, 0, 1507,
	1493, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1593, 0, 0, 0, 1514, 1484, 1542,
	1675, 1485, 1482, 285, 1503, 1688, 1718, 1580, 253, 0,
	1724, 1578, 1577, 1662, 1508, 1698, 1564, 261, 1506, 162,
	1501, 1509, 1562, 296, 1672, 1680, 0, 165, 263, 1695,
	1536, 1553, 206, 0, 331, 1648, 385, 0, 233, 1629,
	330, 265, 378, 1663, 1726, 384, 1565, 362, 392, 396,
	229, 1605, 197, 352, 220, 215, 1544, 1685, 1490, 238,
	318, 210, 257, 1583, 1654, 1537, 202, 1666, 1637, 1700,
	351, 375, 167, 281, 376, 395, 185, 368, 282, 289,
	199, 201, 200, 179, 345, 374, 191, 204, 1696, 1679,
	1702, 1530, 1510, 1521, 3486, 3487, 3488, 247, 239, 1703,
	1701, 1555, 305, 188, 1618, 1611, 1598, 389, 0, 340,
	339, 1568, 246, 1682, 0, 0, 326, 0, 254, 170,
	1707, 398, 184, 259, 369, 0, 232, 295, 208, 1650,
	306, 1550, 164, 322, 277, 279, 276, 280, 236, 0,
	0, 1678, 324, 342, 373, 186, 358, 0, 0, 0,
	0, 333, 0, 0, 1734, 271, 224, 228, 240, 251,
	1649, 329, 359, 390, 1640, 181, 173, 361, 383, 192,
	341, 344, 397, 1674, 180, 175, 1722, 1697, 1631, 1586,
	1592, 1492, 0, 174, 1670, 1541, 1557, 1529, 1644, 1528,
	235, 1661, 381, 382, 207, 399, 1504, 1742, 176, 1505,
	1741, 292, 300, 291, 1745, 377, 1723, 1632, 1617, 1615,
	1497, 1721, 1630, 1616, 260, 227, 242, 316, 267, 317,
	243, 287, 286, 288, 269, 1619, 0, 171, 0, 356,
	1732, 1757, 360, 189, 1523, 1689, 372, 0, 323, 190,
	234, 225, 315, 290, 182, 245, 354, 258, 266, 1665,
	1754, 304, 332, 196, 387, 353, 221, 1519, 297, 1522,
	1517, 1520, 1518, 1623, 1624, 1737, 1738, 1739, 1677, 1512,
	0, 1715, 1716, 0, 1610, 1725, 1498, 0, 1693, 0,
	0, 1657, 1752, 1570, 203, 0, 1494, 1495, 1496, 0,
	1600, 1601, 0, 0, 1711, 1710, 1709, 1712, 0, 1746,
	1744, 1747, 1513, 1534, 1556, 1606, 1607, 1609, 1641, 1642,
	1687, 1660, 1669, 1543, 1602, 312, 172, 183, 195, 214,
	212, 226, 255, 278, 283, 310, 343, 348, 363, 364,
	365, 366, 216, 0, 219, 194, 327, 193, 268, 248,
	311, 370, 371, 320, 209, 1628, 166, 177, 262, 1753,
	325, 231, 1481, 1489, 1516, 1524, 1525, 1526, 1527, 1532,
	1539, 1547, 1558, 1559, 1567, 1573, 1574, 1575, 1576, 1585,
	1587, 1588, 1589, 1590, 1591, 1595, 1596, 1612, 1626, 1627,
	1634, 1635, 0, 1664, 1667, 1676, 1681, 1684, 1690, 1692,
	1699, 1704, 1706, 1743, 1751, 1756, 388, 213, 1608, 1633,
	1671, 178, 187, 198, 211, 223, 230, 241, 244, 249,
	250, 252, 256, 270, 272, 273, 274, 275, 293, 294,
	298, 299, 302, 303, 307, 308, 309, 313, 314, 321,
	0, 328, 334, 335, 336, 337, 338, 346, 347, 349,
	350, 357, 379, 380, 393, 394, 1717, 1581, 163, 0,
	0, 169, 0, 0, 0, 0, 0, 1566, 168, 1713,
	1748, 1645, 1659, 1729, 1691, 367, 1584, 1733, 1533, 1563,
	1750, 1569, 1572, 1653, 1499, 1622, 301, 1560, 1500, 1483,
	1538, 1487, 1551, 1488, 1535, 218, 1531, 1694, 1625, 1731,
	1604, 1646, 1656, 217, 205, 1614, 1613, 1719, 1549, 1548,
	1651, 1708, 1730, 1603, 0, 1740, 264, 1705, 0, 391,
	355, 284, 0, 0, 1599, 1714, 1620, 1683, 1582, 1655,
	1515, 1638, 1735, 1561, 1647, 1736, 0, 0, 0, 0,
	0, 2726, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1643, 1727, 1554, 0, 1594, 1652, 1755, 1486,
	1639, 0, 1491, 1502, 1749, 1720, 1545, 1546, 222, 0,
	0, 0, 0, 0, 0, 0, 1597, 1621, 1673, 1579,
	386, 1658, 1668, 1686, 1571, 319, 237, 0, 0, 0,
	0, 0, 0, 0, 0, 1540, 0, 1636, 0, 0,
	0, 1507, 1493, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1593, 0, 0, 0, 1514,
	1484, 1542, 1675, 1485, 1482, 285, 1503, 1688, 1718, 1580,
	253, 0, 1724, 1578, 1577, 1662, 1508, 1698, 1564, 261,
	1506, 162, 1501, 1509, 1562, 296, 1672, 1680, 0, 165,
	263, 1695, 1536, 1553, 206, 0, 331, 1648, 385, 0,
	233, 1629, 330, 265, 378, 1663, 1726, 384, 1565, 362,
	392, 396, 229, 1605, 197, 352, 220, 215, 1544, 1685,
	1490, 238, 318, 210, 257, 1583, 1654, 1537, 202, 1666,
	1637, 1700, 351, 375, 167, 281, 376, 395, 185, 368,
	282, 289, 199, 201, 200, 179, 345, 374, 191, 204,
	1696, 1679, 1702, 1530, 1510, 1521, 1511, 1552, 1728, 247,
	239, 1703, 1701, 1555, 305, 188, 1618, 1611, 1598, 389,
	0, 340, 339, 1568, 246, 1682, 0, 0, 326, 0,
	254, 170, 1707, 398, 184, 259, 369, 0, 232, 295,
	208, 1650, 306, 1550, 164, 322, 277, 279, 276, 280,
	236, 0, 0, 1678, 324, 342, 373, 186, 358, 0,
	0, 0, 0, 333, 0, 0, 1734, 271, 224, 228,
	240, 251, 1649, 329, 359, 390, 1640, 181, 173, 361,
	383, 192, 341, 344, 397, 1674, 180, 175, 1722, 1697,
	1631, 1586, 1592, 1492, 0, 174, 1670, 1541, 1557, 1529,
	1644, 1528, 235, 1661, 381, 382, 207, 399, 1504, 1742,
	176, 1505, 1741, 292, 300, 291, 1745, 377, 1723, 1632,
	1617, 1615, 1497, 1721, 1630, 1616, 260, 227, 242, 316,
	267, 317, 243, 287, 286, 288, 269, 1619, 0, 171,
	0, 356, 1732, 1757, 360, 189, 1523, 1689, 372, 0,
	323, 190, 234, 225, 315, 290, 182, 245, 354, 258,
	266, 1665, 1754, 304, 332, 196, 387, 353, 221, 1519,
	297, 1522, 1517, 1520, 1518, 1623, 1624, 1737, 1738, 1739,
	1677, 1512, 0, 1715, 1716, 0, 1610, 1725, 1498, 0,
	1693, 0, 0, 1657, 1752, 1570, 203, 0, 1494, 1495,
	1496, 0, 1600, 1601, 0, 0, 1711, 1710, 1709, 1712,
	0, 1746, 1744, 1747, 1513, 1534, 1556, 1606, 1607, 1609,
	1641, 1642, 1687, 1660, 1669, 1543, 1602, 312, 172, 183,
	195, 214, 212, 226, 255, 278, 283, 310, 343, 348,
	363, 364, 365, 366, 216, 0, 219, 194, 327, 193,
	268, 248, 311, 370, 371, 320, 209, 1628, 166, 177,
	262, 1753, 325, 231, 1481, 1489, 1516, 1524, 1525, 1526,
	1527, 1532, 1539, 1547, 1558, 1559, 1567, 1573, 1574, 1575,
	1576, 1585, 1587, 1588, 1589, 1590, 1591, 1595, 1596, 1612,
	1626, 1627, 1634, 1635, 0, 1664, 1667, 1676, 1681, 1684,
	1690, 1692, 1699, 1704, 1706, 1743, 1751, 1756, 388, 213,
	1608, 1633, 1671, 178, 187, 198, 211, 223, 230, 241,
	244, 249, 250, 252, 256, 270, 272, 273, 274, 275,
	293, 294, 298, 299, 302, 303, 307, 308, 309, 313,
	314, 321, 0, 328, 334, 335, 336, 337, 338, 346,
	347, 349, 350, 357, 379, 380, 393, 394, 1717, 1581,
	163, 0, 0, 169, 0, 0, 0, 0, 0, 1566,
	168, 1713, 1748, 1645, 1659, 1729, 1691, 367, 1584, 1733,
	1533, 1563, 1750, 1569, 1572, 1653, 1499, 1622, 301, 1560,
	1500, 1483, 1538, 1487, 1551, 1488, 1535, 218, 1531, 1694,
	1625, 1731, 1604, 1646, 1656, 217, 205, 1614, 1613, 1719,
	1549, 1548, 1651, 1708, 1730, 1603, 0, 1740, 264, 1705,
	0, 391, 355, 284, 0, 0, 1599, 1714, 1620, 1683,
	1582, 1655, 1515, 1638, 1735, 1561, 1647, 1736, 0, 0,
	0, 0, 0, 136, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1643, 1727, 1554, 0, 1594, 1652,
	1755, 1486, 1639, 0, 1491, 1502, 1749, 1720, 1545, 1546,
	222, 0, 0, 0, 0, 0, 0, 0, 1597, 1621,
	1673, 1579, 386, 1658, 1668, 1686, 1571, 319, 237, 0,
	0, 0, 0, 0, 0, 0, 0, 1540, 0, 1636,
	0, 0, 0, 1507, 1493, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1593, 0, 0,
	0, 1514, 1484, 1542, 1675, 1485, 1482, 285, 1503, 1688,
	1718, 1580, 253, 0, 1724, 1578, 1577, 1662, 1508, 1698,
	1564, 261, 1506, 162, 1501, 1509, 1562, 296, 1672, 1680,
	0, 165, 263, 1695, 1536, 1553, 206, 0, 331, 1648,
	385, 0, 233, 1629, 330, 265, 378, 1663, 1726, 384,
	1565, 362, 392, 396, 229, 1605, 197, 352, 220, 215,
	1544, 1685, 1490, 238, 318, 210, 257, 1583, 1654, 1537,
	202, 1666, 1637, 1700, 351, 375, 167, 281, 376, 395,
	185, 368, 282, 289, 199, 201, 200, 179, 345, 374,
	191, 204, 1696, 1679, 1702, 1530, 1510, 1521, 1511, 1552,
	1728, 247, 239, 1703, 1701, 1555, 305, 188, 1618, 1611,
	1598, 389, 0, 340, 339, 1568, 246, 1682, 0, 0,
	326, 0, 254, 170, 1707, 398, 184, 259, 369, 0,
	232, 295, 208, 1650, 306, 1550, 164, 322, 277, 279,
	276, 280, 236, 0, 0, 1678, 324, 342, 373, 186,
	358, 0, 0, 0, 0, 333, 0, 0, 1734, 271,
	224, 228, 240, 251, 1649, 329, 359, 390, 1640, 181,
	173, 361, 383, 192, 341, 344, 397, 1674, 180, 175,
	1722, 1697, 1631, 1586, 1592, 1492, 0, 174, 1670, 1541,
	1557, 1529, 1644, 1528, 235, 1661, 381, 382, 207, 399,
	1504, 1742, 176, 1505, 1741, 292, 300, 291, 1745, 377,
	1723, 1632, 1617, 1615, 1497, 1721, 1630, 1616, 260, 227,
	242, 316, 267, 317, 243, 287, 286, 288, 269, 1619,
	0, 171, 0, 356, 1732, 1757, 360, 189, 1523, 1689,
	372, 0, 323, 190, 234, 225, 315, 290, 182, 245,
	354, 258, 266, 1665, 1754, 304, 332, 196, 387, 353,
	221, 1519, 297, 1522, 1517, 1520, 1518, 1623, 1624, 1737,
	1738, 1739, 1677, 1512, 0, 1715, 1716, 0, 1610, 1725,
	1498, 0, 1693, 0, 0, 1657, 1752, 1570, 203, 0,
	1494, 1495, 1496, 0, 1600, 1601, 0, 0, 1711, 1710,
	1709, 1712, 0, 1746, 1744, 1747, 1513, 1534, 1556, 1606,
	1607, 1609, 1641, 1642, 1687, 1660, 1669, 1543, 1602, 312,
	172, 183, 195, 214, 212, 226, 255, 278, 283, 310,
	343, 348, 363, 364, 365, 366, 216, 0, 219, 194,
	327, 193, 268, 248, 311, 370, 371, 320, 209, 1628,
	166, 177, 262, 1753, 325, 231, 1481, 1489, 1516, 1524,
	1525, 1526, 1527, 1532, 1539, 1547, 1558, 1559, 1567, 1573,
	1574, 1575, 1576, 1585, 1587, 1588, 1589, 1590, 1591, 1595,
	1596, 1612, 1626, 1627, 1634, 1635, 0, 1664, 1667, 1676,
	1681, 1684, 1690, 1692, 1699, 1704, 1706, 1743, 1751, 1756,
	388, 213, 1608, 1633, 1671, 178, 187, 198, 211, 223,
	230, 241, 244, 249, 250, 252, 256, 270, 272, 273,
	274, 275, 293, 294, 298, 299, 302, 303, 307, 308,
	309, 313, 314, 321, 0, 328, 334, 335, 336, 337,
	338, 346, 347, 349, 350, 357, 379, 380, 393, 394,
	1717, 1581, 163, 0, 0, 169, 367, 0, 0, 0,
	0, 1566, 168, 1713, 1748, 1645, 1659, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 218, 0, 0, 0,
	0, 0, 0, 0, 217, 205, 0, 0, 0, 0,
	0, 0, 0, 2083, 2087, 0, 0, 264, 0, 983,
	391, 355, 284, 986, 985, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 979, 0, 0, 0, 0, 0, 0, 0,
	0, 144, 0, 0, 0, 0, 984, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 386, 0, 0, 0, 0, 319, 237, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 285, 0, 0, 0,
	2086, 253, 161, 0, 0, 0, 2080, 0, 2081, 2082,
	261, 987, 162, 0, 2078, 2085, 296, 0, 0, 149,
	165, 263, 0, 0, 0, 206, 976, 331, 0, 385,
	982, 233, 0, 330, 265, 378, 0, 0, 384, 0,
	362, 392, 396, 229, 0, 197, 352, 220, 215, 0,
	0, 0, 238, 318, 210, 257, 0, 0, 0, 202,
	0, 0, 0, 351, 375, 167, 281, 376, 395, 185,
	368, 282, 289, 199, 201, 200, 179, 345, 374, 191,
	204, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 239, 0, 0, 0, 305, 188, 0, 0, 0,
	389, 151, 340, 339, 0, 246, 0, 152, 143, 326,
	153, 254, 170, 0, 398, 184, 259, 369, 981, 232,
	295, 208, 0, 306, 0, 164, 322, 277, 279, 276,
	280, 236, 147, 154, 0, 324, 342, 373, 186, 358,
	145, 146, 148, 156, 333, 157, 158, 0, 271, 224,
	228, 240, 251, 0, 329, 359, 390, 0, 181, 173,
	361, 383, 192, 341, 344, 397, 0, 180, 175, 0,
	0, 0, 0, 0, 0, 0, 174, 0, 0, 0,
	0, 0, 0, 235, 0, 381, 382, 207, 399, 0,
	0, 176, 0, 0, 292, 300, 291, 0, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 227, 242,
	316, 267, 317, 243, 287, 286, 288, 269, 0, 0,
	171, 0, 356, 0, 0, 360, 189, 0, 0, 372,
	150, 323, 190, 234, 225, 315, 290, 182, 245, 354,
	258, 266, 0, 0, 304, 332, 196, 387, 353, 221,
	0, 297, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 159, 160, 0, 0, 0, 203, 138, 0,
	0, 0, 139, 0, 0, 140, 141, 0, 0, 0,
	0, 142, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 172,
	183, 195, 214, 212, 226, 255, 278, 283, 310, 343,
	348, 363, 364, 365, 366, 216, 0, 219, 194, 327,
	193, 268, 248, 311, 370, 371, 320, 209, 0, 166,
	177, 262, 0, 325, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 388,
	213, 0, 0, 0, 178, 187, 198, 211, 223, 230,
	241, 244, 249, 250, 252, 256, 270, 272, 273, 274,
	275, 293, 294, 298, 299, 302, 303, 307, 308, 309,
	313, 314, 321, 155, 328, 334, 335, 336, 337, 338,
	346, 347, 349, 350, 357, 379, 380, 393, 394, 367,
	0, 163, 0, 0, 169, 0, 0, 0, 0, 0,
	301, 168, 0, 0, 0, 1217, 0, 0, 0, 218,
	0, 0, 0, 0, 0, 0, 0, 217, 205, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 983, 391, 355, 284, 986, 985, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1218, 0, 1221, 0, 0,
	0, 0, 0, 0, 144, 0, 0, 0, 0, 984,
	0, 1213, 1214, 1212, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 0, 0, 0, 0, 0, 0, 0,
	1215, 0, 0, 0, 386, 0, 0, 0, 0, 319,
	237, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 0, 0, 0, 253, 161, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 162, 0, 0, 0, 296,
	0, 0, 149, 165, 263, 0, 0, 0, 206, 0,
	331, 0, 385, 982, 233, 0, 330, 265, 378, 0,
	0, 384, 0, 362, 392, 396, 229, 0, 197, 352,
	220, 215, 0, 0, 0, 238, 318, 210, 257, 0,
	0, 0, 202, 0, 0, 0, 351, 375, 167, 281,
	376, 395, 185, 368, 282, 289, 199, 201, 200, 179,
	345, 374, 191, 204, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 239, 0, 0, 0, 305, 188,
	0, 0, 0, 389, 151, 340, 339, 0, 246, 0,
	152, 143, 326, 153, 254, 170, 0, 398, 184, 259,
	369, 981, 232, 295, 208, 0, 306, 0, 164, 322,
	277, 279, 276, 280, 236, 147, 154, 0, 324, 342,
	373, 186, 358, 145, 146, 148, 156, 333, 157, 158,
	0, 271, 224, 228, 240, 251, 0, 329, 359, 390,
	0, 181, 173, 361, 383, 192, 341, 344, 397, 0,
	180, 175, 0, 0, 0, 0, 0, 0, 0, 174,
	0, 0, 0, 0, 0, 0, 235, 0, 381, 382,
	207, 399, 0, 0, 176, 0, 0, 292, 300, 291,
	0, 377, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 227, 242, 316, 267, 317, 243, 287, 286, 288,
	269, 0, 0, 171, 0, 356, 0, 0, 360, 189,
	0, 0, 372, 150, 323, 190, 234, 225, 315, 290,
	182, 245, 354, 258, 266, 0, 0, 304, 332, 196,
	387, 353, 221, 0, 297, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 159, 160, 0, 0, 0,
	203, 138, 0, 0, 0, 139, 0, 0, 140, 141,
	0, 0, 0, 0, 142, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 172, 183, 195, 214, 212, 226, 255, 278,
	283, 310, 343, 348, 363, 364, 365, 366, 216, 0,
	219, 194, 327, 193, 268, 248, 311, 370, 371, 320,
	209, 0, 166, 177, 262, 0, 325, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 388, 213, 0, 0, 0, 178, 187, 198,
	211, 223, 230, 241, 244, 249, 250, 252, 256, 270,
	272, 273, 274, 275, 293, 294, 298, 299, 302, 303,
	307, 308, 309, 313, 314, 321, 155, 328, 334, 335,
	336, 337, 338, 346, 347, 349, 350, 357, 379, 380,
	393, 394, 367, 0, 163, 0, 0, 169, 0, 0,
	0, 0, 0, 301, 168, 0, 0, 0, 0, 0,
	0, 0, 218, 0, 0, 0, 0, 0, 0, 0,
	217, 205, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 0, 983, 391, 355, 284, 986,
	985, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 979, 0,
	0, 0, 0, 0, 0, 0, 0, 144, 0, 0,
	0, 0, 984, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 386, 0, 0,
	0, 0, 319, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 0, 0, 0, 0, 253, 161, 0,
	0, 0, 0, 0, 0, 0, 261, 987, 162, 0,
	977, 0, 296, 0, 0, 149, 165, 263, 0, 0,
	0, 206, 976, 331, 0, 385, 982, 233, 0, 330,
	265, 378, 0, 0, 384, 0, 362, 392, 396, 229,
	0, 197, 352, 220, 215, 0, 0, 0, 238, 318,
	210, 257, 0, 0, 0, 202, 0, 0, 0, 351,
	375, 167, 281, 376, 395, 185, 368, 282, 289, 199,
	201, 200, 179, 345, 374, 191, 204, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 239, 0, 0,
	0, 305, 188, 0, 0, 0, 389, 151, 340, 339,
	0, 246, 0, 152, 143, 326, 153, 254, 170, 0,
	398, 184, 259, 369, 981, 232, 295, 208, 0, 306,
	0, 164, 322, 277, 279, 276, 280, 236, 147, 154,
	0, 324, 342, 373, 186, 358, 145, 146, 148, 156,
	333, 157, 158, 0, 271, 224, 228, 240, 251, 0,
	329, 359, 390, 0, 181, 173, 361, 383, 192, 341,
	344, 397, 0, 180, 175, 0, 0, 0, 0, 0,
	0, 0, 174, 0, 0, 0, 0, 0, 0, 235,
	0, 381, 382, 207, 399, 0, 0, 176, 0, 0,
	292, 300, 291, 0, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 227, 242, 316, 267, 317, 243,
	287, 286, 288, 269, 0, 0, 171, 0, 356, 0,
	0, 360, 189, 0, 0, 372, 150, 323, 190, 234,
	225, 315, 290, 182, 245, 354, 258, 266, 0, 0,
	304, 332, 196, 387, 353, 221, 0, 297, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 159, 160,
	0, 0, 0, 203, 138, 0, 0, 0, 139, 0,
	0, 140, 141, 0, 0, 0, 0, 142, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 172, 183, 195, 214, 212,
	226, 255, 278, 283, 310, 343, 348, 363, 364, 365,
	366, 216, 0, 219, 194, 327, 193, 268, 248, 311,
	370, 371, 320, 209, 0, 166, 177, 262, 0, 325,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 388, 213, 0, 0, 0,
	178, 187, 198, 211, 223, 230, 241, 244, 249, 250,
	252, 256, 270, 272, 273, 274, 275, 293, 294, 298,
	299, 302, 303, 307, 308, 309, 313, 314, 321, 155,
	328, 334, 335, 336, 337, 338, 346, 347, 349, 350,
	357, 379, 380, 393, 394, 367, 0, 163, 0, 0,
	169, 0, 0, 0, 0, 0, 301, 168, 0, 0,
	0, 0, 0, 0, 0, 218, 0, 0, 0, 0,
	0, 0, 0, 217, 205, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 983, 391,
	355, 284, 986, 985, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1218, 0, 1221, 0, 0, 0, 0, 0, 0,
	144, 0, 0, 0, 0, 984, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 222, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	386, 0, 0, 0, 0, 319, 237, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 285, 0, 0, 0, 0,
	253, 161, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 162, 0, 0, 0, 296, 0, 0, 149, 165,
	263, 0, 0, 0, 206, 1911, 331, 0, 385, 982,
	233, 0, 330, 265, 378, 0, 0, 384, 0, 362,
	392, 396, 229, 0, 197, 352, 220, 215, 0, 0,
	0, 238, 318, 210, 257, 0, 0, 0, 202, 0,
	0, 0, 351, 375, 167, 281, 376, 395, 185, 368,
	282, 289, 199, 201, 200, 179, 345, 374, 191, 204,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	239, 0, 0, 0, 305, 188, 0, 0, 0, 389,
	151, 340, 339, 0, 246, 0, 152, 143, 326, 153,
	254, 170, 0, 398, 184, 259, 369, 981, 232, 295,
	208, 0, 306, 0, 164, 322, 277, 279, 276, 280,
	236, 147, 154, 0, 324, 342, 373, 186, 358, 145,
	146, 148, 156, 333, 157, 158, 0, 271, 224, 228,
	240, 251, 0, 329, 359, 390, 0, 181, 173, 361,
	383, 192, 341, 344, 397, 0, 180, 175, 0, 0,
	0, 0, 0, 0, 0, 174, 0, 0, 0, 0,
	0, 0, 235, 0, 381, 382, 207, 399, 0, 0,
	176, 0, 0, 292, 300, 291, 0, 377, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 227, 242, 316,
	267, 317, 243, 287, 286, 288, 269, 0, 0, 171,
	0, 356, 0, 0, 360, 189, 0, 0, 372, 150,
	323, 190, 234, 225, 315, 290, 182, 245, 354, 258,
	266, 0, 0, 304, 332, 196, 387, 353, 221, 0,
	297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 159, 160, 0, 0, 0, 203, 138, 0, 0,
	0, 139, 0, 0, 140, 141, 0, 0, 0, 0,
	142, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 172, 183,
	195, 214, 212, 226, 255, 278, 283, 310, 343, 348,
	363, 364, 365, 366, 216, 0, 219, 194, 327, 193,
	268, 248, 311, 370, 371, 320, 209, 0, 166, 177,
	262, 0, 325, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 388, 213,
	0, 0, 0, 178, 187, 198, 211, 223, 230, 241,
	244, 249, 250, 252, 256, 270, 272, 273, 274, 275,
	293, 294, 298, 299, 302, 303, 307, 308, 309, 313,
	314, 321, 155, 328, 334, 335, 336, 337, 338, 346,
	347, 349, 350, 357, 379, 380, 393, 394, 367, 0,
	163, 0, 0, 169, 0, 0, 0, 0, 0, 301,
	168, 0, 0, 0, 0, 0, 0, 0, 218, 0,
	0, 0, 0, 0, 0, 0, 217, 205, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	0, 983, 391, 355, 284, 986, 985, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2840, 0, 0, 0, 0, 0,
	0, 0, 0, 144, 0, 0, 0, 0, 984, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 386, 0, 0, 0, 0, 319, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 285, 0,
	0, 0, 0, 253, 161, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 162, 0, 0, 0, 296, 0,
	0, 149, 165, 263, 0, 0, 0, 206, 0, 331,
	0, 385, 982, 233, 0, 330, 265, 378, 0, 0,
	384, 0, 362, 392, 396, 229, 0, 197, 352, 220,
	215, 0, 0, 0, 238, 318, 210, 257, 0, 0,
	0, 202, 0, 0, 0, 351, 375, 167, 281, 376,
	395, 185, 368, 282, 289, 199, 201, 200, 179, 345,
	374, 191, 204, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 239, 0, 0, 0, 305, 188, 0,
	0, 0, 389, 151, 340, 339, 0, 246, 0, 152,
	143, 326, 153, 254, 170, 0, 398, 184, 259, 369,
	981, 232, 295, 208, 0, 306, 0, 164, 322, 277,
	279, 276, 280, 236, 147, 154, 0, 324, 342, 373,
	186, 358, 145, 146, 148, 156, 333, 157, 158, 0,
	271, 224, 228, 240, 251, 0, 329, 359, 390, 0,
	181, 173, 361, 383, 192, 341, 344, 397, 0, 180,
	175, 0, 0, 0, 0, 0, 0, 0, 174, 0,
	0, 0, 0, 0, 0, 235, 0, 381, 382, 207,
	399, 0, 0, 176, 0, 0, 292, 300, 291, 0,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	227, 242, 316, 267, 317, 243, 287, 286, 288, 269,
	0, 0, 171, 0, 356, 0, 0, 360, 189, 0,
	0, 372, 150, 323, 190, 234, 225, 315, 290, 182,
	245, 354, 258, 266, 0, 0, 304, 332, 196, 387,
	353, 221, 0, 297, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 159, 160, 0, 0, 0, 203,
	138, 0, 0, 0, 139, 0, 0, 140, 141, 0,
	0, 0, 0, 142, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 172, 183, 195, 214, 212, 226, 255, 278, 283,
	310, 343, 348, 363, 364, 365, 366, 216, 0, 219,
	194, 327, 193, 268, 248, 311, 370, 371, 320, 209,
	0, 166, 177, 262, 0, 325, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 388, 213, 0, 0, 0, 178, 187, 198, 211,
	223, 230, 241, 244, 249, 250, 252, 256, 270, 272,
	273, 274, 275, 293, 294, 298, 299, 302, 303, 307,
	308, 309, 313, 314, 321, 155, 328, 334, 335, 336,
	337, 338, 346, 347, 349, 350, 357, 379, 380, 393,
	394, 367, 0, 163, 0, 0, 169, 0, 0, 0,
	0, 0, 301, 168, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 217,
	205, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 983, 391, 355, 284, 986, 985,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2835, 0, 0,
	0, 0, 0, 0, 0, 0, 144, 0, 0, 0,
	0, 984, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 386, 0, 0, 0,
	0, 319, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 0, 0, 0, 253, 161, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 162, 0, 0,
	0, 296, 0, 0, 149, 165, 263, 0, 0, 0,
	206, 0, 331, 0, 385, 982, 233, 0, 330, 265,
	378, 0, 0, 384, 0, 362, 392, 396, 229, 0,
	197, 352, 220, 215, 0, 0, 0, 238, 318, 210,
	257, 0, 0, 0, 202, 0, 0, 0, 351, 375,
	167, 281, 376, 395, 185, 368, 282, 289, 199, 201,
	200, 179, 345, 374, 191, 204, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 239, 0, 0, 0,
	305, 188, 0, 0, 0, 389, 151, 340, 339, 0,
	246, 0, 152, 143, 326, 153, 254, 170, 0, 398,
	184, 259, 369, 981, 232, 295, 208, 0, 306, 0,
	164, 322, 277, 279, 276, 280, 236, 147, 154, 0,
	324, 342, 373, 186, 358, 145, 146, 148, 156, 333,
	157, 158, 0, 271, 224, 228, 240, 251, 0, 329,
	359, 390, 0, 181, 173, 361, 383, 192, 341, 344,
	397, 0, 180, 175, 0, 0, 0, 0, 0, 0,
	0, 174, 0, 0, 0, 0, 0, 0, 235, 0,
	381, 382, 207, 399, 0, 0, 176, 0, 0, 292,
	300, 291, 0, 377, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 227, 242, 316, 267, 317, 243, 287,
	286, 288, 269, 0, 0, 171, 0, 356, 0, 0,
	360, 189, 0, 0, 372, 150, 323, 190, 234, 225,
	315, 290, 182, 245, 354, 258, 266, 0, 0, 304,
	332, 196, 387, 353, 221, 0, 297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 159, 160, 0,
	0, 0, 203, 138, 0, 0, 0, 139, 0, 0,
	140, 141, 0, 0, 0, 0, 142, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 172, 183, 195, 214, 212, 226,
	255, 278, 283, 310, 343, 348, 363, 364, 365, 366,
	216, 0, 219, 194, 327, 193, 268, 248, 311, 370,
	371, 320, 209, 0, 166, 177, 262, 0, 325, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 388, 213, 0, 0, 0, 178,
	187, 198, 211, 223, 230, 241, 244, 249, 250, 252,
	256, 270, 272, 273, 274, 275, 293, 294, 298, 299,
	302, 303, 307, 308, 309, 313, 314, 321, 155, 328,
	334, 335, 336, 337, 338, 346, 347, 349, 350, 357,
	379, 380, 393, 394, 0, 0, 163, 39, 367, 169,
	0, 0, 0, 0, 0, 0, 168, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 218, 0,
	0, 0, 0, 0, 0, 0, 217, 205, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2356, 264,
	0, 0, 391, 355, 284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 83,
	0, 0, 0, 0, 2045, 0, 0, 0, 0, 0,
	0, 0, 0, 144, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 386, 0, 0, 0, 0, 319, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 285, 0,
	0, 0, 0, 253, 161, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 162, 0, 0, 0, 296, 0,
	0, 149, 165, 263, 0, 0, 0, 206, 0, 331,
	0, 385, 0, 233, 0, 330, 265, 378, 0, 0,
	384, 0, 362, 392, 396, 229, 0, 197, 352, 220,
	215, 0, 0, 0, 238, 318, 210, 257, 0, 0,
	0, 202, 0, 0, 0, 351, 375, 167, 281, 376,
	395, 185, 368, 282, 289, 199, 201, 200, 179, 345,
	374, 191, 204, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 239, 0, 0, 0, 305, 188, 0,
	0, 0, 389, 151, 340, 339, 0, 246, 0, 152,
	143, 326, 153, 254, 170, 0, 398, 184, 259, 369,
	135, 232, 295, 208, 0, 306, 0, 164, 322, 277,
	279, 276, 280, 236, 147, 154, 0, 324, 342, 373,
	186, 358, 145, 146, 148, 156, 333, 157, 158, 0,
	271, 224, 228, 240, 251, 0, 329, 359, 390, 0,
	181, 173, 361, 383, 192, 341, 344, 397, 0, 180,
	175, 0, 0, 0, 0, 0, 0, 0, 174, 0,
	0, 0, 0, 0, 0, 235, 0, 381, 382, 207,
	399, 0, 0, 176, 0, 0, 292, 300, 291, 0,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	227, 242, 316, 267, 317, 243, 287, 286, 288, 269,
	0, 0, 171, 0, 356, 0, 0, 360, 189, 0,
	0, 372, 150, 323, 190, 234, 225, 315, 290, 182,
	245, 354, 258, 266, 0, 0, 304, 332, 196, 387,
	353, 221, 0, 297, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 159, 160, 0, 0, 0, 203,
	138, 0, 0, 0, 139, 0, 0, 140, 141, 0,
	0, 0, 0, 142, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2046,
	312, 172, 183, 195, 214, 212, 226, 255, 278, 283,
	310, 343, 348, 363, 364, 365, 366, 216, 0, 219,
	194, 327, 193, 268, 248, 311, 370, 371, 320, 209,
	0, 166, 177, 262, 518, 325, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 388, 213, 0, 0, 0, 178, 187, 198, 211,
	223, 230, 241, 244, 249, 250, 252, 256, 270, 272,
	273, 274, 275, 293, 294, 298, 299, 302, 303, 307,
	308, 309, 313, 314, 321, 155, 328, 334, 335, 336,
	337, 338, 346, 347, 349, 350, 357, 379, 380, 393,
	394, 367, 0, 163, 0, 0, 169, 0, 0, 0,
	0, 0, 301, 168, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 217,
	205, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 391, 355, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 83, 0, 0, 0, 0, 2045, 0, 0,
	0, 0, 0, 0, 0, 0, 144, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 386, 0, 0, 0,
	0, 319, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 0, 0, 0, 253, 161, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 162, 0, 0,
	0, 296, 0, 0, 149, 165, 263, 0, 0, 0,
	206, 0, 331, 0, 385, 0, 233, 0, 330, 265,
	378, 0, 0, 384, 0, 362, 392, 396, 229, 0,
	197, 352, 220, 215, 0, 0, 0, 238, 318, 210,
	257, 0, 0, 0, 202, 0, 0, 0, 351, 375,
	167, 281, 376, 395, 185, 368, 282, 289, 199, 201,
	200, 179, 345, 374, 191, 204, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 239, 0, 0, 0,
	305, 188, 0, 0, 0, 389, 151, 340, 339, 0,
	246, 0, 152, 143, 326, 153, 254, 170, 0, 398,
	184, 259, 369, 135, 232, 295, 208, 0, 306, 0,
	164, 322, 277, 279, 276, 280, 236, 147, 154, 0,
	324, 342, 373, 186, 358, 145, 146, 148, 156, 333,
	157, 158, 0, 271, 224, 228, 240, 251, 0, 329,
	359, 390, 0, 181, 173, 361, 383, 192, 341, 344,
	397, 0, 180, 175, 0, 0, 0, 0, 0, 0,
	0, 174, 0, 0, 0, 0, 0, 0, 235, 0,
	381, 382, 207, 399, 0, 0, 176, 0, 0, 292,
	300, 291, 0, 377, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 227, 242, 316, 267, 317, 243, 287,
	286, 288, 269, 0, 0, 171, 0, 356, 0, 0,
	360, 189, 0, 0, 372, 150, 323, 190, 234, 225,
	315, 290, 182, 245, 354, 258, 266, 0, 0, 304,
	332, 196, 387, 353, 221, 0, 297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 159, 160, 0,
	0, 0, 203, 138, 0, 0, 0, 139, 0, 0,
	140, 141, 0, 0, 0, 0, 142, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3245, 2046, 312, 172, 183, 195, 214, 212, 226,
	255, 278, 283, 310, 343, 348, 363, 364, 365, 366,
	216, 0, 219, 194, 327, 193, 268, 248, 311, 370,
	371, 320, 209, 0, 166, 177, 262, 0, 325, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 388, 213, 0, 0, 0, 178,
	187, 198, 211, 223, 230, 241, 244, 249, 250, 252,
	256, 270, 272, 273, 274, 275, 293, 294, 298, 299,
	302, 303, 307, 308, 309, 313, 314, 321, 155, 328,
	334, 335, 336, 337, 338, 346, 347, 349, 350, 357,
	379, 380, 393, 394, 367, 0, 163, 0, 0, 169,
	0, 0, 0, 0, 0, 301, 168, 0, 0, 0,
	0, 0, 0, 0, 218, 0, 0, 0, 0, 0,
	0, 0, 217, 205, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 264, 0, 0, 391, 355,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 83, 0, 0, 0, 0,
	2045, 0, 0, 0, 0, 0, 0, 0, 0, 144,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 386,
	0, 0, 0, 0, 319, 237, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 285, 0, 0, 0, 0, 253,
	161, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	162, 0, 0, 0, 296, 0, 0, 149, 165, 263,
	0, 0, 0, 206, 0, 331, 0, 385, 0, 233,
	0, 330, 265, 378, 0, 0, 384, 0, 362, 392,
	396, 229, 0, 197, 352, 220, 215, 0, 0, 0,
	238, 318, 210, 257, 0, 0, 0, 202, 0, 0,
	0, 351, 375, 167, 281, 376, 395, 185, 368, 282,
	289, 199, 201, 200, 179, 345, 374, 191, 204, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 239,
	0, 0, 0, 305, 188, 0, 0, 0, 389, 151,
	340, 339, 0, 246, 0, 152, 143, 326, 153, 254,
	170, 0, 398, 184, 259, 369, 135, 232, 295, 208,
	0, 306, 0, 164, 322, 277, 279, 276, 280, 236,
	147, 154, 0, 324, 342, 373, 186, 358, 145, 146,
	148, 156, 333, 157, 158, 0, 271, 224, 228, 240,
	251, 0, 329, 359, 390, 0, 181, 173, 361, 383,
	192, 341, 344, 397, 0, 180, 175, 0, 0, 0,
	0, 0, 0, 0, 174, 0, 0, 0, 0, 0,
	0, 235, 0, 381, 382, 207, 399, 0, 0, 176,
	0, 0, 292, 300, 291, 0, 377, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 227, 242, 316, 267,
	317, 243, 287, 286, 288, 269, 0, 0, 171, 0,
	356, 0, 0, 360, 189, 0, 0, 372, 150, 323,
	190, 234, 225, 315, 290, 182, 245, 354, 258, 266,
	0, 0, 304, 332, 196, 387, 353, 221, 0, 297,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	159, 160, 0, 0, 0, 203, 138, 0, 0, 0,
	139, 0, 0, 140, 141, 0, 0, 0, 0, 142,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2046, 312, 172, 183, 195,
	214, 212, 226, 255, 278, 283, 310, 343, 348, 363,
	364, 365, 366, 216, 0, 219, 194, 327, 193, 268,
	248, 311, 370, 371, 320, 209, 0, 166, 177, 262,
	0, 325, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 388, 213, 0,
	0, 0, 178, 187, 198, 211, 223, 230, 241, 244,
	249, 250, 252, 256, 270, 272, 273, 274, 275, 293,
	294, 298, 299, 302, 303, 307, 308, 309, 313, 314,
	321, 155, 328, 334, 335, 336, 337, 338, 346, 347,
	349, 350, 357, 379, 380, 393, 394, 367, 0, 163,
	0, 0, 169, 0, 0, 0, 0, 0, 301, 168,
	0, 0, 0, 0, 0, 0, 0, 218, 0, 0,
	0, 0, 0, 0, 0, 217, 205, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 391, 355, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 136, 0, 0, 0, 0, 0, 0,
	0, 0, 144, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	222, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 386, 0, 0, 0, 0, 319, 237, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 441, 0, 285, 0, 0,
	0, 0, 253, 161, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 162, 0, 0, 0, 296, 0, 0,
	149, 165, 263, 0, 0, 0, 206, 0, 331, 0,
	385, 443, 440, 0, 330, 265, 378, 0, 0, 384,
	0, 362, 392, 396, 229, 0, 197, 352, 220, 215,
	0, 0, 0, 238, 318, 210, 257, 0, 0, 0,
	202, 0, 0, 0, 351, 375, 167, 281, 376, 395,
	185, 368, 282, 289, 199, 201, 200, 179, 345, 374,
	191, 204, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 239, 0, 0, 0, 305, 188, 0, 0,
	0, 389, 151, 340, 339, 0, 246, 0, 152, 143,
	326, 153, 254, 170, 0, 398, 184, 259, 369, 135,
	232, 295, 208, 0, 306, 0, 164, 322, 277, 279,
	276, 280, 236, 147, 154, 0, 324, 342, 373, 186,
	358, 145, 146, 148, 156, 333, 157, 158, 0, 271,
	224, 228, 240, 251, 0, 329, 359, 390, 0, 181,
	173, 361, 383, 192, 341, 344, 397, 0, 180, 175,
	0, 0, 0, 0, 0, 0, 0, 174, 0, 0,
	0, 0, 0, 0, 235, 0, 381, 382, 207, 399,
	0, 0, 176, 0, 0, 292, 300, 291, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 227,
	242, 316, 267, 317, 243, 287, 286, 288, 269, 0,
	0, 171, 0, 356, 0, 0, 360, 189, 0, 0,
	372, 150, 323, 190, 234, 225, 315, 290, 182, 245,
	354, 258, 266, 0, 0, 304, 332, 196, 387, 353,
	221, 0, 297, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 159, 160, 0, 0, 0, 203, 138,
	0, 0, 0, 139, 0, 0, 140, 141, 0, 0,
	0, 0, 142, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	172, 183, 195, 214, 212, 226, 255, 278, 283, 310,
	343, 348, 363, 364, 365, 366, 216, 0, 219, 194,
	327, 193, 268, 248, 311, 370, 371, 320, 209, 0,
	166, 177, 262, 0, 325, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	388, 213, 0, 0, 0, 178, 187, 198, 211, 223,
	230, 241, 244, 249, 250, 252, 256, 270, 272, 273,
	274, 275, 293, 294, 298, 299, 302, 303, 307, 308,
	309, 313, 314, 321, 155, 328, 334, 335, 336, 337,
	338, 346, 347, 349, 350, 357, 379, 380, 393, 394,
	367, 0, 163, 0, 0, 169, 0, 0, 0, 0,
	0, 301, 168, 0, 0, 0, 0, 0, 0, 0,
	218, 0, 0, 0, 0, 0, 0, 0, 217, 205,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 264, 0, 0, 391, 355, 284, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 136, 0, 0, 0,
	0, 0, 0, 0, 0, 144, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 386, 0, 0, 0, 0,
	319, 237, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	285, 0, 0, 0, 0, 253, 161, 0, 0, 0,
	0, 0, 0, 0, 261, 0, 162, 0, 0, 0,
	296, 0, 0, 149, 165, 263, 0, 0, 0, 206,
	0, 331, 0, 385, 2150, 233, 0, 330, 265, 378,
	0, 0, 384, 0, 362, 392, 396, 229, 0, 197,
	352, 220, 215, 0, 0, 0, 238, 318, 210, 257,
	0, 0, 0, 202, 0, 0, 0, 351, 375, 167,
	281, 376, 395, 185, 368, 282, 289, 199, 201, 200,
	179, 345, 374, 191, 204, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 239, 0, 0, 0, 305,
	188, 0, 0, 0, 389, 151, 340, 339, 0, 246,
	0, 152, 143, 326, 153, 254, 170, 0, 398, 184,
	259, 369, 135, 232, 295, 208, 0, 306, 0, 164,
	322, 277, 279, 276, 280, 236, 147, 154, 0, 324,
	342, 373, 186, 358, 145, 146, 148, 156, 333, 157,
	158, 0, 271, 224, 228, 240, 251, 0, 329, 359,
	390, 0, 181, 173, 361, 383, 192, 341, 344, 397,
	0, 180, 175, 0, 0, 0, 0, 0, 0, 0,
	174, 0, 0, 0, 0, 0, 0, 235, 0, 381,
	382, 207, 399, 0, 0, 176, 0, 0, 292, 300,
	291, 0, 377, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 227, 242, 316, 267, 317, 243, 287, 286,
	288, 269, 0, 0, 171, 0, 356, 0, 0, 360,
	189, 0, 0, 372, 150, 323, 190, 234, 225, 315,
	290, 182, 245, 354, 258, 266, 0, 0, 304, 332,
	196, 387, 353, 221, 0, 297, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 159, 160, 0, 0,
	0, 203, 138, 0, 0, 0, 139, 0, 0, 140,
	141, 0, 0, 0, 0, 142, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 172, 183, 195, 214, 212, 226, 255,
	278, 283, 310, 343, 348, 363, 364, 365, 366, 216,
	0, 219, 194, 327, 193, 268, 248, 311, 370, 371,
	320, 209, 0, 166, 177, 262, 0, 325, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 388, 213, 0, 0, 0, 178, 187,
	198, 211, 223, 230, 241, 244, 249, 250, 252, 256,
	270, 272, 273, 274, 275, 293, 294, 298, 299, 302,
	303, 307, 308, 309, 313, 314, 321, 155, 328, 334,
	335, 336, 337, 338, 346, 347, 349, 350, 357, 379,
	380, 393, 394, 367, 0, 163, 0, 0, 169, 0,
	0, 0, 0, 0, 301, 168, 0, 0, 0, 0,
	0, 0, 0, 218, 0, 0, 0, 0, 0, 0,
	0, 217, 205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 391, 355, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 136,
	0, 0, 0, 0, 0, 0, 0, 0, 144, 0,
	0, 0, 0, 0, 2032, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 386, 0,
	0, 0, 0, 319, 237, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 285, 0, 0, 0, 0, 253, 161,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 162,
	0, 0, 0, 296, 0, 0, 149, 165, 263, 0,
	0, 0, 206, 0, 331, 0, 385, 0, 233, 0,
	330, 265, 378, 0, 0, 384, 0, 362, 392, 396,
	229, 0, 197, 352, 220, 215, 0, 0, 0, 238,
	318, 210, 257, 0, 0, 0, 202, 0, 0, 0,
	351, 375, 167, 281, 376, 395, 185, 368, 282, 289,
	199, 201, 200, 179, 345, 374, 191, 204, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 239, 0,
	0, 0, 305, 188, 0, 0, 0, 389, 151, 340,
	339, 0, 246, 0, 152, 143, 326, 153, 254, 170,
	0, 398, 184, 259, 369, 135, 232, 295, 208, 0,
	306, 0, 164, 322, 277, 279, 276, 280, 236, 147,
	154, 0, 324, 342, 373, 186, 358, 145, 146, 148,
	156, 333, 157, 158, 0, 271, 224, 228, 240, 251,
	0, 329, 359, 390, 0, 181, 173, 361, 383, 192,
	341, 344, 397, 0, 180, 175, 0, 0, 0, 0,
	0, 0, 0, 174, 0, 0, 0, 0, 0, 0,
	235, 0, 381, 382, 207, 399, 0, 0, 176, 0,
	0, 292, 300, 291, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 227, 242, 316, 267, 317,
	243, 287, 286, 288, 269, 0, 0, 171, 0, 356,
	0, 0, 360, 189, 0, 0, 372, 150, 323, 190,
	234, 225, 315, 290, 182, 245, 354, 258, 266, 0,
	0, 304, 332, 196, 387, 353, 221, 0, 297, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 159,
	160, 0, 0, 0, 203, 138, 0, 0, 0, 139,
	0, 0, 140, 141, 0, 0, 0, 0, 142, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 172, 183, 195, 214,
	212, 226, 255, 278, 283, 310, 343, 348, 363, 364,
	365, 366, 216, 0, 219, 194, 327, 193, 268, 248,
	311, 370, 371, 320, 209, 0, 166, 177, 262, 0,
	325, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 388, 213, 0, 0,
	0, 178, 187, 198, 211, 223, 230, 241, 244, 249,
	250, 252, 256, 270, 272, 273, 274, 275, 293, 294,
	298, 299, 302, 303, 307, 308, 309, 313, 314, 321,
	155, 328, 334, 335, 336, 337, 338, 346, 347, 349,
	350, 357, 379, 380, 393, 394, 367, 0, 163, 0,
	1348, 169, 0, 0, 0, 0, 0, 301, 168, 0,
	0, 0, 0, 0, 0, 0, 218, 0, 0, 0,
	0, 0, 0, 0, 217, 205, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 0, 0,
	391, 355, 284, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 136, 0, 0, 0, 0, 0, 0, 0,
	0, 144, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 386, 0, 0, 0, 0, 319, 237, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 285, 0, 0, 0,
	0, 253, 161, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 162, 0, 0, 0, 296, 0, 0, 149,
	165, 263, 0, 0, 0, 206, 0, 331, 0, 385,
	0, 233, 0, 330, 265, 378, 0, 0, 384, 0,
	362, 392, 396, 229, 0, 197, 352, 220, 215, 0,
	0, 0, 238, 318, 210, 257, 0, 0, 0, 202,
	0, 0, 0, 351, 375, 167, 281, 376, 395, 185,
	368, 282, 289, 199, 201, 200, 179, 345, 374, 191,
	204, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 239, 0, 0, 0, 305, 188, 0, 0, 0,
	389, 151, 340, 339, 0, 246, 0, 152, 143, 326,
	153, 254, 170, 0, 398, 184, 259, 369, 135, 232,
	295, 208, 0, 306, 0, 164, 322, 277, 279, 276,
	280, 236, 147, 154, 0, 324, 342, 373, 186, 358,
	145, 146, 148, 156, 333, 157, 158, 0, 271, 224,
	228, 240, 251, 0, 329, 359, 390, 0, 181, 173,
	361, 383, 192, 341, 344, 397, 0, 180, 175, 0,
	0, 0, 0, 0, 0, 0, 174, 0, 0, 0,
	0, 0, 0, 235, 0, 381, 382, 207, 399, 0,
	0, 176, 0, 0, 292, 300, 291, 0, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 227, 242,
	316, 267, 317, 243, 287, 286, 288, 269, 0, 0,
	171, 0, 356, 0, 0, 360, 189, 0, 0, 372,
	150, 323, 190, 234, 225, 315, 290, 182, 245, 354,
	258, 266, 0, 0, 304, 332, 196, 387, 353, 221,
	0, 297, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 159, 160, 0, 0, 0, 203, 138, 0,
	0, 0, 139, 0, 0, 140, 141, 0, 0, 0,
	0, 142, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 172,
	183, 195, 214, 212, 226, 255, 278, 283, 310, 343,
	348, 363, 364, 365, 366, 216, 0, 219, 194, 327,
	193, 268, 248, 311, 370, 371, 320, 209, 0, 166,
	177, 262, 0, 325, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 388,
	213, 0, 0, 0, 178, 187, 198, 211, 223, 230,
	241, 244, 249, 250, 252, 256, 270, 272, 273, 274,
	275, 293, 294, 298, 299, 302, 303, 307, 308, 309,
	313, 314, 321, 155, 328, 334, 335, 336, 337, 338,
	346, 347, 349, 350, 357, 379, 380, 393, 394, 367,
	0, 163, 0, 0, 169, 0, 0, 0, 0, 0,
	301, 168, 0, 0, 0, 0, 0, 0, 0, 218,
	0, 0, 0, 0, 0, 0, 0, 217, 205, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 391, 355, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 136, 0, 0, 0, 0,
	0, 0, 0, 0, 144, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 386, 0, 0, 0, 0, 319,
	237, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 0, 130, 0, 253, 161, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 162, 0, 0, 0, 296,
	0, 0, 149, 165, 263, 0, 0, 0, 206, 0,
	331, 0, 385, 0, 233, 0, 330, 265, 378, 0,
	0, 384, 0, 362, 392, 396, 229, 0, 197, 352,
	220, 215, 0, 0, 0, 238, 318, 210, 257, 0,
	0, 0, 202, 0, 0, 0, 351, 375, 167, 281,
	376, 395, 185, 368, 282, 289, 199, 201, 200, 179,
	345, 374, 191, 204, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 239, 0, 0, 0, 305, 188,
	0, 0, 0, 389, 151, 340, 339, 0, 246, 0,
	152, 143, 326, 153, 254, 170, 0, 398, 184, 259,
	369, 135, 232, 295, 208, 0, 306, 0, 164, 322,
	277, 279, 276, 280, 236, 147, 154, 0, 324, 342,
	373, 186, 358, 145, 146, 148, 156, 333, 157, 158,
	0, 271, 224, 228, 240, 251, 0, 329, 359, 390,
	0, 181, 173, 361, 383, 192, 341, 344, 397, 0,
	180, 175, 0, 0, 0, 0, 0, 0, 0, 174,
	0, 0, 0, 0, 0, 0, 235, 0, 381, 382,
	207, 399, 0, 0, 176, 0, 0, 292, 300, 291,
	0, 377, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 227, 242, 316, 267, 317, 243, 287, 286, 288,
	269, 0, 0, 171, 0, 356, 0, 0, 360, 189,
	0, 0, 372, 150, 323, 190, 234, 225, 315, 290,
	182, 245, 354, 258, 266, 0, 0, 304, 332, 196,
	387, 353, 221, 0, 297, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 159, 160, 0, 0, 0,
	203, 138, 0, 0, 0, 139, 0, 0, 140, 141,
	0, 0, 0, 0, 142, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 172, 183, 195, 214, 212, 226, 255, 278,
	283, 310, 343, 348, 363, 364, 365, 366, 216, 0,
	219, 194, 327, 193, 268, 248, 311, 370, 371, 320,
	209, 0, 166, 177, 262, 0, 325, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 388, 213, 0, 0, 0, 178, 187, 198,
	211, 223, 230, 241, 244, 249, 250, 252, 256, 270,
	272, 273, 274, 275, 293, 294, 298, 299, 302, 303,
	307, 308, 309, 313, 314, 321, 155, 328, 334, 335,
	336, 337, 338, 346, 347, 349, 350, 357, 379, 380,
	393, 394, 367, 0, 163, 0, 0, 169, 0, 0,
	0, 0, 0, 301, 168, 0, 0, 0, 0, 0,
	0, 0, 218, 0, 0, 0, 0, 0, 0, 0,
	217, 205, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 0, 0, 391, 355, 284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 136, 0,
	0, 0, 0, 0, 0, 0, 0, 144, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 386, 0, 0,
	0, 0, 319, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 0, 0, 0, 0, 253, 161, 0,
	0, 0, 0, 0, 0, 0, 261, 0, 162, 0,
	0, 0, 296, 0, 0, 149, 165, 263, 0, 0,
	0, 206, 0, 331, 0, 385, 0, 233, 0, 330,
	265, 378, 0, 0, 384, 0, 362, 392, 396, 229,
	0, 197, 352, 220, 215, 0, 0, 0, 238, 318,
	210, 257, 0, 0, 0, 202, 0, 0, 0, 351,
	375, 167, 281, 376, 395, 185, 368, 282, 289, 199,
	201, 200, 179, 345, 374, 191, 204, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 239, 0, 0,
	0, 305, 188, 0, 0, 0, 389, 151, 340, 339,
	0, 246, 0, 152, 143, 326, 153, 254, 170, 0,
	398, 184, 259, 369, 135, 232, 295, 208, 0, 306,
	0, 164, 322, 277, 279, 276, 280, 236, 147, 154,
	0, 324, 342, 373, 186, 358, 145, 146, 148, 156,
	333, 157, 158, 0, 271, 224, 228, 240, 251, 0,
	329, 359, 390, 0, 181, 173, 361, 383, 192, 341,
	344, 397, 0, 180, 175, 0, 0, 0, 0, 0,
	0, 0, 174, 0, 0, 0, 0, 0, 0, 235,
	0, 381, 382, 207, 399, 0, 0, 176, 0, 0,
	292, 300, 291, 0, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 227, 242, 316, 267, 317, 243,
	287, 286, 288, 269, 0, 0, 171, 0, 356, 0,
	0, 360, 189, 0, 0, 372, 150, 323, 190, 234,
	225, 315, 290, 182, 245, 354, 258, 266, 0, 0,
	304, 332, 196, 387, 353, 221, 0, 297, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 159, 160,
	0, 0, 0, 203, 138, 0, 0, 0, 139, 0,
	0, 140, 141, 0, 0, 0, 0, 142, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 172, 183, 195, 214, 212,
	226, 255, 278, 283, 310, 343, 348, 363, 364, 365,
	366, 216, 0, 219, 194, 327, 193, 268, 248, 311,
	370, 371, 320, 209, 0, 166, 177, 262, 0, 325,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 388, 213, 0, 0, 0,
	178, 187, 198, 211, 223, 230, 241, 244, 249, 250,
	252, 256, 270, 272, 273, 274, 275, 293, 294, 298,
	299, 302, 303, 307, 308, 309, 313, 314, 321, 155,
	328, 334, 335, 336, 337, 338, 346, 347, 349, 350,
	357, 379, 380, 393, 394, 0, 0, 163, 0, 0,
	169, 483, 367, 477, 488, 471, 0, 168, 0, 0,
	0, 0, 0, 301, 0, 0, 494, 0, 0, 0,
	0, 0, 218, 0, 0, 478, 0, 0, 0, 0,
	217, 205, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 0, 0, 391, 355, 284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 492, 0,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 386, 0, 0,
	0, 0, 319, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 470, 469, 472, 0,
	0, 0, 285, 0, 0, 0, 476, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 0, 162, 0,
	0, 0, 296, 480, 0, 0, 165, 263, 484, 0,
	0, 206, 0, 331, 0, 385, 0, 233, 0, 330,
	265, 378, 0, 487, 384, 0, 362, 392, 396, 229,
	0, 197, 352, 220, 215, 0, 0, 0, 238, 318,
	210, 257, 0, 0, 0, 202, 0, 0, 0, 351,
	375, 167, 281, 376, 395, 185, 368, 282, 289, 199,
	201, 200, 179, 345, 374, 191, 204, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 239, 0, 0,
	0, 305, 188, 0, 0, 0, 389, 0, 340, 339,
	0, 246, 0, 0, 0, 326, 0, 254, 170, 0,
	398, 184, 259, 369, 0, 232, 295, 208, 0, 306,
	0, 164, 322, 277, 279, 276, 280, 236, 0, 0,
	0, 497, 342, 373, 186, 358, 473, 474, 475, 481,
	482, 485, 486, 489, 271, 224, 228, 240, 251, 0,
	329, 359, 390, 0, 181, 173, 361, 383, 192, 341,
	344, 397, 0, 180, 175, 0, 0, 0, 0, 0,
	0, 0, 174, 0, 0, 0, 0, 0, 0, 235,
	0, 381, 382, 207, 399, 0, 0, 176, 0, 0,
	292, 300, 291, 0, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 227, 242, 316, 267, 317, 243,
	287, 286, 288, 269, 0, 0, 171, 0, 356, 0,
	0, 360, 189, 0, 0, 372, 0, 323, 190, 234,
	225, 315, 290, 182, 245, 354, 258, 266, 0, 0,
	304, 332, 196, 387, 353, 221, 0, 297, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 203, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 172, 183, 195, 214, 212,
	226, 255, 278, 283, 310, 343, 348, 363, 364, 365,
	366, 216, 0, 219, 194, 327, 193, 268, 248, 311,
	370, 371, 320, 209, 0, 166, 177, 262, 0, 325,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 388, 213, 0, 0, 0,
	178, 187, 198, 211, 223, 230, 241, 244, 249, 250,
	252, 256, 270, 272, 273, 274, 275, 293, 294, 298,
	299, 302, 303, 307, 308, 309, 313, 314, 321, 479,
	328, 334, 335, 336, 337, 338, 346, 347, 349, 350,
	357, 379, 380, 393, 394, 0, 0, 163, 0, 0,
	169, 483, 367, 477, 488, 471, 0, 168, 0, 0,
	0, 0, 0, 301, 0, 0, 463, 0, 0, 0,
	0, 0, 218, 0, 0, 478, 0, 0, 0, 0,
	217, 205, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 0, 0, 391, 355, 284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 492, 0,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 386, 0, 0,
	0, 0, 319, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 470, 469, 472, 0,
	0, 0, 285, 0, 0, 0, 476, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 0, 162, 0,
	0, 0, 296, 480, 0, 0, 165, 263, 484, 0,
	0, 206, 0, 331, 0, 385, 0, 233, 0, 330,
	265, 378, 0, 487, 384, 0, 362, 392, 396, 229,
	0, 197, 352, 220, 215, 0, 0, 0, 238, 318,
	210, 257, 0, 0, 0, 202, 0, 0, 0, 351,
	375, 167, 281, 376, 395, 185, 368, 282, 289, 199,
	201, 200, 179, 345, 374, 191, 204, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 239, 0, 0,
	0, 305, 188, 0, 0, 0, 389, 0, 340, 339,
	0, 246, 0, 0, 0, 326, 0, 254, 170, 0,
	398, 184, 259, 369, 0, 232, 295, 208, 0, 306,
	0, 164, 322, 277, 279, 276, 280, 236, 0, 0,
	0, 466, 342, 373, 186, 358, 473, 474, 475, 481,
	482, 485, 486, 489, 271, 224, 228, 240, 251, 0,
	329, 359, 390, 0, 181, 173, 361, 383, 192, 341,
	344, 397, 0, 180, 175, 0, 0, 0, 0, 0,
	0, 0, 174, 0, 0, 0, 0, 0, 0, 235,
	0, 381, 382, 207, 399, 0, 0, 176, 0, 0,
	292, 300, 291, 0, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 227, 242, 316, 267, 317, 243,
	287, 286, 288, 269, 0, 0, 171, 0, 356, 0,
	0, 360, 189, 0, 0, 372, 0, 323, 190, 234,
	225, 315, 290, 182, 245, 354, 258, 266, 0, 0,
	304, 332, 196, 387, 353, 221, 0, 297, 0, 0,
	0, 0, 0, 0, 0, 0, 367, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 301, 0, 0,
	0, 0, 0, 203, 0, 0, 218, 0, 0, 0,
	0, 0, 0, 0, 217, 205, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 0, 0,
	391, 355, 284, 0, 312, 172, 183, 195, 214, 212,
	226, 255, 278, 283, 310, 343, 348, 363, 364, 365,
	366, 216, 979, 219, 194, 327, 193, 268, 248, 311,
	370, 371, 320, 209, 0, 166, 177, 262, 0, 325,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 386, 0, 0, 0, 0, 319, 237, 1233, 1232,
	1242, 1243, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1234,
	0, 0, 1244, 0, 0, 388, 213, 0, 0, 0,
	178, 187, 198, 211, 223, 230, 241, 244, 249, 250,
	252, 256, 270, 272, 273, 274, 275, 293, 294, 298,
	299, 302, 303, 307, 308, 309, 313, 314, 321, 479,
	328, 334, 335, 336, 337, 338, 346, 347, 349, 350,
	357, 379, 380, 393, 394, 0, 285, 163, 0, 0,
	169, 253, 0, 0, 0, 0, 0, 168, 0, 0,
	261, 0, 162, 0, 0, 0, 296, 0, 0, 0,
	165, 263, 0, 0, 0, 206, 0, 331, 0, 385,
	0, 233, 0, 330, 265, 378, 0, 0, 384, 0,
	362, 392, 396, 229, 0, 197, 352, 220, 215, 0,
	0, 0, 238, 318, 210, 257, 0, 0, 0, 202,
	0, 0, 0, 351, 375, 167, 281, 376, 395, 185,
	368, 282, 289, 199, 201, 200, 179, 345, 374, 191,
	204, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 239, 0, 0, 0, 305, 188, 0, 0, 0,
	389, 0, 340, 339, 0, 246, 0, 0, 0, 326,
	0, 254, 170, 0, 398, 184, 259, 369, 0, 232,
	295, 208, 0, 306, 0, 164, 322, 277, 279, 276,
	280, 236, 0, 0, 0, 324, 342, 373, 186, 358,
	0, 0, 0, 0, 333, 0, 0, 0, 271, 224,
	228, 240, 251, 0, 329, 359, 390, 0, 181, 173,
	361, 383, 192, 341, 344, 397, 0, 180, 175, 0,
	0, 0, 0, 0, 0, 0, 174, 0, 0, 0,
	0, 0, 0, 235, 0, 381, 382, 207, 399, 0,
	0, 176, 0, 0, 292, 300, 291, 0, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 227, 242,
	316, 267, 317, 243, 287, 286, 288, 269, 0, 0,
	171, 0, 356, 0, 0, 360, 189, 0, 0, 372,
	0, 323, 190, 234, 225, 315, 290, 182, 245, 354,
	258, 266, 0, 0, 304, 332, 196, 387, 353, 221,
	0, 297, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 203, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 172,
	183, 195, 214, 212, 226, 255, 278, 283, 310, 343,
	348, 363, 364, 365, 366, 216, 0, 219, 194, 327,
	193, 268, 248, 311, 370, 371, 320, 209, 0, 166,
	177, 262, 0, 325, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 388,
	213, 0, 0, 0, 178, 187, 198, 211, 223, 230,
	241, 244, 249, 250, 252, 256, 270, 272, 273, 274,
	275, 293, 294, 298, 299, 302, 303, 307, 308, 309,
	313, 314, 321, 0, 328, 334, 335, 336, 337, 338,
	346, 347, 349, 350, 357, 379, 380, 393, 394, 367,
	0, 163, 0, 0, 169, 0, 0, 0, 0, 0,
	301, 168, 0, 0, 0, 2361, 0, 0, 0, 218,
	0, 0, 0, 0, 0, 0, 0, 217, 205, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 391, 355, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2363, 2365, 0, 0,
	0, 0, 0, 0, 0, 136, 0, 509, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 386, 2359, 0, 0, 0, 319,
	237, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 0, 0, 0, 253, 0, 0, 2364, 0, 0,
	0, 0, 0, 261, 0, 162, 0, 0, 0, 296,
	0, 0, 0, 165, 263, 0, 0, 0, 206, 0,
	331, 0, 385, 0, 233, 0, 330, 265, 378, 0,
	0, 384, 0, 362, 392, 396, 229, 0, 197, 352,
	220, 215, 0, 0, 0, 238, 318, 210, 257, 0,
	0, 0, 202, 0, 0, 0, 351, 375, 167, 281,
	376, 395, 185, 368, 282, 289, 199, 201, 200, 179,
	345, 374, 191, 204, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 239, 0, 0, 0, 305, 188,
	0, 0, 0, 389, 0, 340, 339, 0, 246, 0,
	0, 0, 326, 0, 254, 170, 0, 398, 184, 259,
	369, 0, 232, 295, 208, 0, 306, 0, 164, 322,
	277, 279, 276, 280, 236, 0, 0, 0, 324, 342,
	373, 186, 358, 0, 0, 0, 0, 333, 0, 0,
	0, 271, 224, 228, 240, 251, 0, 329, 359, 390,
	0, 181, 173, 361, 383, 192, 341, 344, 397, 0,
	180, 175, 0, 0, 0, 0, 0, 0, 0, 174,
	0, 0, 0, 0, 0, 0, 235, 0, 381, 382,
	207, 399, 0, 0, 176, 0, 0, 292, 300, 291,
	0, 377, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 227, 242, 316, 267, 317, 243, 287, 286, 288,
	269, 0, 0, 171, 0, 356, 0, 0, 360, 189,
	0, 0, 372, 0, 323, 190, 234, 225, 315, 290,
	182, 245, 354, 258, 266, 0, 0, 304, 332, 196,
	387, 353, 221, 0, 297, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	203, 138, 0, 0, 0, 139, 0, 0, 140, 141,
	0, 0, 0, 0, 142, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 172, 183, 195, 214, 212, 226, 255, 278,
	283, 310, 343, 348, 363, 364, 365, 366, 216, 0,
	219, 194, 327, 193, 268, 248, 311, 370, 371, 320,
	209, 0, 166, 177, 262, 0, 325, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 388, 213, 0, 0, 0, 178, 187, 198,
	211, 223, 230, 241, 244, 249, 250, 252, 256, 270,
	272, 273, 274, 275, 293, 294, 298, 299, 302, 303,
	307, 308, 309, 313, 314, 321, 0, 328, 334, 335,
	336, 337, 338, 346, 347, 349, 350, 357, 379, 380,
	393, 394, 367, 0, 163, 0, 0, 169, 0, 0,
	0, 0, 0, 301, 168, 0, 0, 0, 2361, 0,
	0, 0, 218, 0, 0, 0, 0, 0, 0, 0,
	217, 205, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 0, 0, 391, 355, 284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2363,
	2365, 0, 0, 0, 0, 0, 0, 0, 136, 0,
	509, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 386, 0, 0,
	0, 0, 319, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 0, 0, 0, 0, 253, 0, 0,
	2364, 0, 0, 0, 0, 0, 261, 0, 162, 0,
	0, 0, 296, 0, 0, 0, 165, 263, 0, 0,
	0, 206, 0, 331, 0, 385, 0, 233, 0, 330,
	265, 378, 0, 0, 384, 0, 362, 392, 396, 229,
	0, 197, 352, 220, 215, 0, 0, 0, 238, 318,
	210, 257, 0, 0, 0, 202, 0, 0, 0, 351,
	375, 167, 281, 376, 395, 185, 368, 282, 289, 199,
	201, 200, 179, 345, 374, 191, 204, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 239, 0, 0,
	0, 305, 188, 0, 0, 0, 389, 0, 340, 339,
	0, 246, 0, 0, 0, 326, 0, 254, 170, 0,
	398, 184, 259, 369, 0, 232, 295, 208, 0, 306,
	0, 164, 322, 277, 279, 276, 280, 236, 0, 0,
	0, 324, 342, 373, 186, 358, 0, 0, 0, 0,
	333, 0, 0, 0, 271, 224, 228, 240, 251, 0,
	329, 359, 390, 0, 181, 173, 361, 383, 192, 341,
	344, 397, 0, 180, 175, 0, 0, 0, 0, 0,
	0, 0, 174, 0, 0, 0, 0, 0, 0, 235,
	0, 381, 382, 207, 399, 0, 0, 176, 0, 0,
	292, 300, 291, 0, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 227, 242, 316, 267, 317, 243,
	287, 286, 288, 269, 0, 0, 171, 0, 356, 0,
	0, 360, 189, 0, 0, 372, 0, 323, 190, 234,
	225, 315, 290, 182, 245, 354, 258, 266, 0, 0,
	304, 332, 196, 387, 353, 221, 0, 297, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 203, 138, 0, 0, 0, 139, 0,
	0, 140, 141, 0, 0, 0, 0, 142, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 172, 183, 195, 214, 212,
	226, 255, 278, 283, 310, 343, 348, 363, 364, 365,
	366, 216, 0, 219, 194, 327, 193, 268, 248, 311,
	370, 371, 320, 209, 0, 166, 177, 262, 0, 325,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 388, 213, 0, 0, 0,
	178, 187, 198, 211, 223, 230, 241, 244, 249, 250,
	252, 256, 270, 272, 273, 274, 275, 293, 294, 298,
	299, 302, 303, 307, 308, 309, 313, 314, 321, 0,
	328, 334, 335, 336, 337, 338, 346, 347, 349, 350,
	357, 379, 380, 393, 394, 367, 0, 163, 0, 0,
	169, 0, 0, 0, 0, 0, 301, 168, 0, 0,
	0, 0, 0, 0, 0, 218, 0, 0, 0, 0,
	0, 0, 0, 217, 205, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 391,
	355, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 136, 0, 509, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 222, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	386, 0, 0, 0, 0, 319, 237, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 285, 0, 0, 0, 0,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 162, 0, 0, 0, 296, 0, 0, 0, 165,
	263, 0, 0, 0, 206, 0, 331, 0, 385, 0,
	233, 0, 330, 265, 378, 0, 0, 384, 0, 362,
	392, 396, 229, 0, 197, 352, 220, 215, 0, 0,
	0, 238, 318, 210, 257, 0, 0, 0, 202, 0,
	0, 0, 351, 375, 167, 281, 376, 395, 185, 368,
	282, 289, 199, 201, 200, 179, 345, 374, 191, 204,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	239, 0, 0, 0, 305, 188, 0, 0, 0, 389,
	0, 340, 339, 0, 246, 0, 0, 0, 326, 0,
	254, 170, 0, 398, 184, 259, 369, 0, 232, 295,
	208, 0, 306, 0, 164, 322, 277, 279, 276, 280,
	236, 0, 0, 0, 324, 342, 373, 186, 358, 0,
	0, 0, 0, 333, 0, 0, 0, 271, 224, 228,
	240, 251, 0, 329, 359, 390, 0, 181, 173, 361,
	383, 192, 341, 344, 397, 0, 180, 175, 0, 0,
	0, 0, 0, 0, 0, 174, 0, 0, 0, 0,
	0, 0, 235, 0, 381, 382, 207, 399, 0, 0,
	176, 0, 0, 292, 300, 291, 0, 377, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 227, 242, 316,
	267, 317, 243, 287, 286, 288, 269, 0, 0, 171,
	0, 356, 0, 0, 360, 189, 0, 0, 372, 0,
	323, 190, 234, 225, 315, 290, 182, 245, 354, 258,
	266, 0, 0, 304, 332, 196, 387, 353, 221, 0,
	297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 203, 138, 0, 0,
	0, 139, 0, 0, 140, 141, 0, 0, 0, 0,
	142, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 172, 183,
	195, 214, 212, 226, 255, 278, 283, 310, 343, 348,
	363, 364, 365, 366, 216, 0, 219, 194, 327, 193,
	268, 248, 311, 370, 371, 320, 209, 0, 166, 177,
	262, 0, 325, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 388, 213,
	0, 0, 503, 178, 187, 198, 211, 223, 230, 241,
	244, 249, 250, 252, 256, 270, 272, 273, 274, 275,
	293, 294, 298, 299, 302, 303, 307, 308, 309, 313,
	314, 321, 0, 328, 334, 335, 336, 337, 338, 346,
	347, 349, 350, 357, 379, 380, 393, 394, 367, 0,
	163, 0, 0, 169, 0, 0, 0, 0, 0, 301,
	168, 0, 0, 0, 3603, 0, 0, 0, 218, 0,
	0, 0, 0, 0, 0, 0, 217, 205, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	0, 0, 391, 355, 284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 136, 0, 509, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 386, 0, 0, 0, 0, 319, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 285, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 162, 0, 0, 0, 296, 0,
	0, 0, 165, 263, 0, 0, 0, 206, 0, 331,
	0, 385, 0, 233, 0, 330, 265, 378, 0, 0,
	384, 0, 362, 392, 396, 229, 0, 197, 352, 220,
	215, 0, 0, 0, 238, 318, 210, 257, 0, 0,
	0, 202, 0, 0, 0, 351, 375, 167, 281, 376,
	395, 185, 368, 282, 289, 199, 201, 200, 179, 345,
	374, 191, 204, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 239, 0, 0, 0, 305, 188, 0,
	0, 0, 389, 0, 340, 339, 0, 246, 0, 0,
	0, 326, 0, 254, 170, 0, 398, 184, 259, 369,
	0, 232, 295, 208, 0, 306, 0, 164, 322, 277,
	279, 276, 280, 236, 0, 0, 0, 324, 342, 373,
	186, 358, 0, 0, 0, 0, 333, 0, 0, 0,
	271, 224, 228, 240, 251, 0, 329, 359, 390, 0,
	181, 173, 361, 383, 192, 341, 344, 397, 0, 180,
	175, 0, 0, 0, 0, 0, 0, 0, 174, 0,
	0, 0, 0, 0, 0, 235, 0, 381, 382, 207,
	399, 0, 0, 176, 0, 0, 292, 300, 291, 0,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	227, 242, 316, 267, 317, 243, 287, 286, 288, 269,
	0, 0, 171, 0, 356, 0, 0, 360, 189, 0,
	0, 372, 0, 323, 190, 234, 225, 315, 290, 182,
	245, 354, 258, 266, 0, 0, 304, 332, 196, 387,
	353, 221, 0, 297, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 203,
	138, 0, 0, 0, 139, 0, 0, 140, 141, 0,
	0, 0, 0, 142, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 172, 183, 195, 214, 212, 226, 255, 278, 283,
	310, 343, 348, 363, 364, 365, 366, 216, 0, 219,
	194, 327, 193, 268, 248, 311, 370, 371, 320, 209,
	0, 166, 177, 262, 0, 325, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 388, 213, 0, 0, 0, 178, 187, 198, 211,
	223, 230, 241, 244, 249, 250, 252, 256, 270, 272,
	273, 274, 275, 293, 294, 298, 299, 302, 303, 307,
	308, 309, 313, 314, 321, 0, 328, 334, 335, 336,
	337, 338, 346, 347, 349, 350, 357, 379, 380, 393,
	394, 367, 0, 163, 0, 0, 169, 0, 0, 0,
	0, 0, 301, 168, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 2670, 0, 217,
	205, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 391, 355, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 136, 0, 509,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 386, 0, 0, 0,
	0, 319, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 0, 0, 0, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 162, 0, 0,
	0, 296, 0, 0, 0, 165, 263, 0, 0, 0,
	206, 0, 331, 0, 385, 0, 233, 0, 330, 265,
	378, 0, 0, 384, 0, 362, 392, 396, 229, 0,
	197, 352, 220, 215, 0, 0, 0, 238, 318, 210,
	257, 0, 0, 0, 202, 0, 0, 0, 351, 375,
	167, 281, 376, 395, 185, 368, 282, 289, 199, 201,
	200, 179, 345, 374, 191, 204, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 239, 0, 0, 0,
	305, 188, 0, 0, 0, 389, 0, 340, 339, 0,
	246, 0, 0, 0, 326, 0, 254, 170, 0, 398,
	184, 259, 369, 0, 232, 295, 208, 0, 306, 0,
	164, 322, 277, 279, 276, 280, 236, 0, 0, 0,
	324, 342, 373, 186, 358, 0, 0, 0, 0, 333,
	0, 0, 0, 271, 224, 228, 240, 251, 0, 329,
	359, 390, 0, 181, 173, 361, 383, 192, 341, 344,
	397, 0, 180, 175, 0, 0, 0, 0, 0, 0,
	0, 174, 0, 0, 0, 0, 0, 0, 235, 0,
	381, 382, 207, 399, 0, 0, 176, 0, 0, 292,
	300, 291, 0, 377, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 227, 242, 316, 267, 317, 243, 287,
	286, 288, 269, 0, 0, 171, 0, 356, 0, 0,
	360, 189, 0, 0, 372, 0, 323, 190, 234, 225,
	315, 290, 182, 245, 354, 258, 266, 0, 0, 304,
	332, 196, 387, 353, 221, 0, 297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 138, 0, 0, 0, 139, 0, 0,
	140, 141, 0, 0, 0, 0, 142, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 172, 183, 195, 214, 212, 226,
	255, 278, 283, 310, 343, 348, 363, 364, 365, 366,
	216, 0, 219, 194, 327, 193, 268, 248, 311, 370,
	371, 320, 209, 0, 166, 177, 262, 0, 325, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 388, 213, 0, 0, 0, 178,
	187, 198, 211, 223, 230, 241, 244, 249, 250, 252,
	256, 270, 272, 273, 274, 275, 293, 294, 298, 299,
	302, 303, 307, 308, 309, 313, 314, 321, 0, 328,
	334, 335, 336, 337, 338, 346, 347, 349, 350, 357,
	379, 380, 393, 394, 367, 0, 163, 0, 0, 169,
	0, 0, 0, 0, 0, 301, 168, 0, 0, 0,
	0, 0, 0, 0, 218, 0, 0, 0, 0, 0,
	0, 0, 217, 205, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 264, 0, 0, 391, 355,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	136, 0, 509, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 386,
	0, 0, 0, 0, 319, 237, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 285, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	162, 0, 0, 0, 296, 0, 0, 0, 165, 263,
	0, 0, 0, 206, 0, 331, 0, 385, 0, 233,
	0, 330, 265, 378, 0, 0, 384, 0, 362, 392,
	396, 229, 0, 197, 352, 220, 215, 0, 0, 0,
	238, 318, 210, 257, 0, 0, 0, 202, 0, 0,
	0, 351, 375, 167, 281, 376, 395, 185, 368, 282,
	289, 199, 201, 200, 179, 345, 374, 191, 204, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 239,
	0, 0, 0, 305, 188, 0, 0, 0, 389, 0,
	340, 339, 0, 246, 0, 0, 0, 326, 0, 254,
	170, 0, 398, 184, 259, 369, 0, 232, 295, 208,
	0, 306, 0, 164, 322, 277, 279, 276, 280, 236,
	0, 0, 0, 324, 342, 373, 186, 358, 0, 0,
	0, 0, 333, 0, 0, 0, 271, 224, 228, 240,
	251, 0, 329, 359, 390, 0, 181, 173, 361, 383,
	192, 341, 344, 397, 0, 180, 175, 0, 0, 0,
	0, 0, 0, 0, 174, 0, 0, 0, 0, 0,
	0, 235, 0, 381, 382, 207, 399, 0, 0, 176,
	0, 0, 292, 300, 291, 0, 377, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 227, 242, 316, 267,
	317, 243, 287, 286, 288, 269, 0, 0, 171, 0,
	356, 0, 0, 360, 189, 0, 0, 372, 0, 323,
	190, 234, 225, 315, 290, 182, 245, 354, 258, 266,
	0, 0, 304, 332, 196, 387, 353, 221, 0, 297,
	0, 0, 0, 0, 0, 0, 0, 0, 367, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 301,
	0, 0, 0, 0, 0, 203, 138, 0, 218, 0,
	139, 0, 0, 140, 141, 0, 217, 205, 0, 142,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	0, 0, 391, 355, 284, 0, 312, 172, 183, 195,
	214, 212, 226, 255, 278, 283, 310, 343, 348, 363,
	364, 365, 366, 216, 979, 219, 194, 327, 193, 268,
	248, 311, 370, 371, 320, 209, 0, 166, 177, 262,
	0, 325, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 386, 0, 0, 0, 0, 319, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 388, 213, 0,
	0, 0, 178, 187, 198, 211, 223, 230, 241, 244,
	249, 250, 252, 256, 270, 272, 273, 274, 275, 293,
	294, 298, 299, 302, 303, 307, 308, 309, 313, 314,
	321, 0, 328, 334, 335, 336, 337, 338, 346, 347,
	349, 350, 357, 379, 380, 393, 394, 0, 285, 163,
	0, 0, 169, 253, 0, 0, 0, 0, 0, 168,
	0, 0, 261, 0, 162, 0, 0, 0, 296, 0,
	0, 0, 165, 263, 0, 0, 0, 206, 0, 331,
	0, 385, 0, 233, 0, 330, 265, 378, 0, 0,
	384, 0, 362, 392, 396, 229, 0, 197, 352, 220,
	215, 0, 0, 0, 238, 318, 210, 257, 0, 0,
	0, 202, 0, 0, 0, 351, 375, 167, 281, 376,
	395, 185, 368, 282, 289, 199, 201, 200, 179, 345,
	374, 191, 204, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 239, 0, 0, 0, 305, 188, 0,
	0, 0, 389, 0, 340, 339, 0, 246, 0, 0,
	0, 326, 0, 254, 170, 0, 398, 184, 259, 369,
	0, 232, 295, 208, 0, 306, 0, 164, 322, 277,
	279, 276, 280, 236, 0, 0, 0, 324, 342, 373,
	186, 358, 0, 0, 0, 0, 333, 0, 0, 0,
	271, 224, 228, 240, 251, 0, 329, 359, 390, 0,
	181, 173, 361, 383, 192, 341, 344, 397, 0, 180,
	175, 0, 0, 0, 0, 0, 0, 0, 174, 0,
	0, 0, 0, 0, 0, 235, 0, 381, 382, 207,
	399, 0, 0, 176, 0, 0, 292, 300, 291, 0,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	227, 242, 316, 267, 317, 243, 287, 286, 288, 269,
	0, 0, 171, 0, 356, 0, 0, 360, 189, 0,
	0, 372, 0, 323, 190, 234, 225, 315, 290, 182,
	245, 354, 258, 266, 0, 0, 304, 332, 196, 387,
	353, 221, 0, 297, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 203,
	138, 0, 0, 0, 139, 0, 0, 140, 141, 0,
	0, 0, 0, 142, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 172, 183, 195, 214, 212, 226, 255, 278, 283,
	310, 343, 348, 363, 364, 365, 366, 216, 0, 219,
	194, 327, 193, 268, 248, 311, 370, 371, 320, 209,
	0, 166, 177, 262, 0, 325, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 388, 213, 0, 0, 0, 178, 187, 198, 211,
	223, 230, 241, 244, 249, 250, 252, 256, 270, 272,
	273, 274, 275, 293, 294, 298, 299, 302, 303, 307,
	308, 309, 313, 314, 321, 0, 328, 334, 335, 336,
	337, 338, 346, 347, 349, 350, 357, 379, 380, 393,
	394, 367, 0, 163, 0, 0, 169, 0, 0, 0,
	0, 0, 301, 168, 0, 3559, 0, 0, 0, 0,
	0, 218, 3557, 0, 0, 0, 0, 0, 0, 217,
	205, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 391, 355, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 492, 0, 491,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 386, 0, 0, 0,
	0, 319, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 0, 0, 0, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 162, 0, 0,
	0, 296, 0, 0, 0, 165, 263, 0, 0, 0,
	206, 0, 331, 0, 385, 0, 233, 0, 330, 265,
	378, 0, 0, 384, 0, 362, 392, 396, 229, 0,
	197, 352, 220, 215, 0, 0, 0, 238, 318, 210,
	257, 0, 0, 0, 202, 0, 0, 0, 351, 375,
	167, 281, 376, 395, 185, 368, 282, 289, 199, 201,
	200, 179, 345, 374, 191, 204, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 239, 0, 0, 0,
	305, 188, 0, 0, 0, 389, 0, 340, 339, 0,
	246, 0, 3558, 0, 326, 0, 254, 170, 0, 398,
	184, 259, 369, 0, 232, 295, 208, 0, 306, 0,
	164, 322, 277, 279, 276, 280, 236, 0, 0, 0,
	324, 342, 373, 186, 358, 0, 0, 0, 0, 333,
	0, 0, 0, 271, 224, 228, 240, 251, 0, 329,
	359, 390, 0, 181, 173, 361, 383, 192, 341, 344,
	397, 0, 180, 175, 0, 0, 0, 0, 0, 0,
	0, 174, 0, 0, 0, 0, 0, 0, 235, 0,
	381, 382, 207, 399, 0, 0, 176, 0, 0, 292,
	300, 291, 0, 377, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 227, 242, 316, 267, 317, 243, 287,
	286, 288, 269, 0, 0, 171, 0, 356, 0, 0,
	360, 189, 0, 0, 372, 0, 323, 190, 234, 225,
	315, 290, 182, 245, 354, 258, 266, 0, 0, 304,
	332, 196, 387, 353, 221, 0, 297, 0, 0, 0,
	0, 0, 0, 0, 0, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 301, 0, 0, 0,
	0, 0, 203, 0, 0, 218, 0, 0, 0, 0,
	0, 0, 0, 217, 205, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 391,
	355, 284, 0, 312, 172, 183, 195, 214, 212, 226,
	255, 278, 283, 310, 343, 348, 363, 364, 365, 366,
	216, 979, 219, 194, 327, 193, 268, 248, 311, 370,
	371, 320, 209, 0, 166, 177, 262, 0, 325, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 222, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2485,
	386, 0, 0, 0, 0, 319, 237, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 388, 213, 0, 0, 0, 178,
	187, 198, 211, 223, 230, 241, 244, 249, 250, 252,
	256, 270, 272, 273, 274, 275, 293, 294, 298, 299,
	302, 303, 307, 308, 309, 313, 314, 321, 0, 328,
	334, 335, 336, 337, 338, 346, 347, 349, 350, 357,
	379, 380, 393, 394, 0, 285, 163, 0, 0, 169,
	253, 0, 0, 0, 0, 0, 168, 0, 0, 261,
	0, 162, 0, 0, 0, 296, 0, 0, 0, 165,
	263, 0, 0, 0, 206, 0, 331, 0, 385, 0,
	233, 0, 330, 265, 378, 0, 0, 384, 0, 362,
	392, 396, 229, 0, 197, 352, 220, 215, 0, 0,
	0, 238, 318, 210, 257, 2486, 2487, 0, 202, 0,
	0, 0, 351, 375, 167, 281, 376, 395, 185, 368,
	282, 289, 199, 201, 200, 179, 345, 374, 191, 204,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	239, 0, 0, 0, 305, 188, 0, 0, 0, 389,
	0, 340, 339, 0, 246, 0, 0, 0, 326, 0,
	254, 170, 0, 398, 184, 259, 369, 0, 232, 295,
	208, 0, 306, 0, 164, 322, 277, 279, 276, 280,
	236, 0, 0, 0, 324, 342, 373, 186, 358, 0,
	0, 0, 0, 333, 0, 0, 0, 271, 224, 228,
	240, 251, 0, 329, 359, 390, 0, 181, 173, 361,
	383, 192, 341, 344, 397, 0, 180, 175, 0, 0,
	0, 0, 0, 0, 0, 174, 0, 0, 0, 0,
	0, 0, 235, 0, 381, 382, 207, 399, 0, 0,
	176, 0, 0, 292, 300, 291, 0, 377, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 227, 242, 316,
	267, 317, 243, 287, 286, 288, 269, 0, 0, 171,
	0, 356, 0, 0, 360, 189, 0, 0, 372, 0,
	323, 190, 234, 225, 315, 290, 182, 245, 354, 258,
	266, 0, 0, 304, 332, 196, 387, 353, 221, 0,
	297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 203, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 172, 183,
	195, 214, 212, 226, 255, 278, 283, 310, 343, 348,
	363, 364, 365, 366, 216, 0, 219, 194, 327, 193,
	268, 248, 311, 370, 371, 320, 209, 0, 166, 177,
	262, 0, 325, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 388, 213,
	0, 0, 0, 178, 187, 198, 211, 223, 230, 241,
	244, 249, 250, 252, 256, 270, 272, 273, 274, 275,
	293, 294, 298, 299, 302, 303, 307, 308, 309, 313,
	314, 321, 0, 328, 334, 335, 336, 337, 338, 346,
	347, 349, 350, 357, 379, 380, 393, 394, 367, 0,
	163, 0, 0, 169, 0, 0, 0, 0, 0, 301,
	168, 0, 0, 0, 0, 0, 0, 0, 218, 0,
	0, 0, 0, 0, 0, 0, 217, 205, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	0, 0, 391, 355, 284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 492, 0, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 386, 0, 0, 0, 0, 319, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 285, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 162, 0, 0, 0, 296, 0,
	0, 0, 165, 263, 0, 0, 0, 206, 0, 331,
	0, 385, 0, 233, 0, 330, 265, 378, 0, 0,
	384, 0, 362, 392, 396, 229, 0, 197, 352, 220,
	215, 0, 0, 0, 238, 318, 210, 257, 0, 0,
	0, 202, 0, 0, 0, 351, 375, 167, 281, 376,
	395, 185, 368, 282, 289, 199, 201, 200, 179, 345,
	374, 191, 204, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 239, 0, 0, 0, 305, 188, 0,
	0, 0, 389, 0, 340, 339, 0, 246, 0, 0,
	0, 326, 0, 254, 170, 0, 398, 184, 259, 369,
	0, 232, 295, 208, 0, 306, 0, 164, 322, 277,
	279, 276, 280, 236, 0, 0, 0, 324, 342, 373,
	186, 358, 0, 0, 0, 0, 333, 0, 0, 0,
	271, 224, 228, 240, 251, 0, 329, 359, 390, 0,
	181, 173, 361, 383, 192, 341, 344, 397, 0, 180,
	175, 0, 0, 0, 0, 0, 0, 0, 174, 0,
	0, 0, 0, 0, 0, 235, 0, 381, 382, 207,
	399, 0, 0, 176, 0, 0, 292, 300, 291, 0,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	227, 242, 316, 267, 317, 243, 287, 286, 288, 269,
	0, 0, 171, 0, 356, 0, 0, 360, 189, 0,
	0, 372, 0, 323, 190, 234, 225, 315, 290, 182,
	245, 354, 258, 266, 0, 0, 304, 332, 196, 387,
	353, 221, 0, 297, 0, 0, 1790, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 203,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 172, 183, 195, 214, 212, 226, 255, 278, 283,
	310, 343, 348, 363, 364, 365, 366, 216, 0, 219,
	194, 327, 193, 268, 248, 311, 370, 371, 320, 209,
	0, 166, 177, 262, 0, 325, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 388, 213, 0, 0, 0, 178, 187, 198, 211,
	223, 230, 241, 244, 249, 250, 252, 256, 270, 272,
	273, 274, 275, 293, 294, 298, 299, 302, 303, 307,
	308, 309, 313, 314, 321, 0, 328, 334, 335, 336,
	337, 338, 346, 347, 349, 350, 357, 379, 380, 393,
	394, 367, 0, 163, 0, 0, 169, 0, 0, 0,
	0, 0, 301, 168, 0, 0, 0, 0, 0, 0,
	0, 218, 1364, 0, 0, 0, 0, 0, 0, 217,
	205, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 391, 355, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 979, 0, 1363,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 386, 0, 0, 0,
	0, 319, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 0, 0, 0, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 162, 0, 0,
	0, 296, 0, 0, 0, 165, 263, 0, 0, 0,
	206, 0, 331, 0, 385, 0, 233, 0, 330, 265,
	378, 0, 0, 384, 0, 362, 392, 396, 229, 0,
	197, 352, 220, 215, 0, 0, 0, 238, 318, 210,
	257, 0, 0, 0, 202, 0, 0, 0, 351, 375,
	167, 281, 376, 395, 185, 368, 282, 289, 199, 201,
	200, 179, 345, 374, 191, 204, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 239, 0, 0, 0,
	305, 188, 0, 0, 0, 389, 0, 340, 339, 0,
	246, 0, 0, 0, 326, 0, 254, 170, 0, 398,
	184, 259, 369, 0, 232, 295, 208, 0, 306, 0,
	164, 322, 277, 279, 276, 280, 236, 0, 0, 0,
	324, 342, 373, 186, 358, 0, 0, 0, 0, 333,
	0, 0, 0, 271, 224, 228, 240, 251, 0, 329,
	359, 390, 0, 181, 173, 361, 383, 192, 341, 344,
	397, 0, 180, 175, 0, 0, 0, 0, 0, 0,
	0, 174, 0, 0, 0, 0, 0, 0, 235, 0,
	381, 382, 207, 399, 0, 0, 176, 0, 0, 292,
	300, 291, 0, 377, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 227, 242, 316, 267, 317, 243, 287,
	286, 288, 269, 0, 0, 171, 0, 356, 0, 0,
	360, 189, 0, 0, 372, 0, 323, 190, 234, 225,
	315, 290, 182, 245, 354, 258, 266, 0, 0, 304,
	332, 196, 387, 353, 221, 0, 297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 172, 183, 195, 214, 212, 226,
	255, 278, 283, 310, 343, 348, 363, 364, 365, 366,
	216, 0, 219, 194, 327, 193, 268, 248, 311, 370,
	371, 320, 209, 0, 166, 177, 262, 0, 325, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 388, 213, 0, 0, 0, 178,
	187, 198, 211, 223, 230, 241, 244, 249, 250, 252,
	256, 270, 272, 273, 274, 275, 293, 294, 298, 299,
	302, 303, 307, 308, 309, 313, 314, 321, 0, 328,
	334, 335, 336, 337, 338, 346, 347, 349, 350, 357,
	379, 380, 393, 394, 367, 0, 163, 0, 0, 169,
	0, 0, 0, 0, 0, 301, 168, 0, 0, 0,
	0, 0, 0, 0, 218, 0, 0, 0, 0, 0,
	0, 0, 217, 205, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 264, 0, 0, 391, 355,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	492, 0, 491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 386,
	0, 0, 0, 0, 319, 237, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 285, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	162, 0, 0, 0, 296, 0, 0, 0, 165, 263,
	0, 0, 0, 206, 0, 331, 0, 385, 0, 233,
	0, 330, 265, 378, 0, 0, 384, 0, 362, 392,
	396, 229, 0, 197, 352, 220, 215, 0, 0, 0,
	238, 318, 210, 257, 0, 0, 0, 202, 0, 0,
	0, 351, 375, 167, 281, 376, 395, 185, 368, 282,
	289, 199, 201, 200, 179, 345, 374, 191, 204, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 239,
	0, 0, 0, 305, 188, 0, 0, 0, 389, 0,
	340, 339, 0, 246, 0, 0, 0, 326, 0, 254,
	170, 0, 398, 184, 259, 369, 0, 232, 295, 208,
	0, 306, 0, 164, 322, 277, 279, 276, 280, 236,
	0, 0, 0, 324, 342, 373, 186, 358, 0, 0,
	0, 0, 333, 0, 0, 0, 271, 224, 228, 240,
	251, 0, 329, 359, 390, 0, 181, 173, 361, 383,
	192, 341, 344, 397, 0, 180, 175, 0, 0, 0,
	0, 0, 0, 0, 174, 0, 0, 0, 0, 0,
	0, 235, 0, 381, 382, 207, 399, 0, 0, 176,
	0, 0, 292, 300, 291, 0, 377, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 227, 242, 316, 267,
	317, 243, 287, 286, 288, 269, 0, 0, 171, 0,
	356, 0, 0, 360, 189, 0, 0, 372, 0, 323,
	190, 234, 225, 315, 290, 182, 245, 354, 258, 266,
	0, 0, 304, 332, 196, 387, 353, 221, 0, 297,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 203, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 172, 183, 195,
	214, 212, 226, 255, 278, 283, 310, 343, 348, 363,
	364, 365, 366, 216, 0, 219, 194, 327, 193, 268,
	248, 311, 370, 371, 320, 209, 0, 166, 177, 262,
	0, 325, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 388, 213, 0,
	0, 0, 178, 187, 198, 211, 223, 230, 241, 244,
	249, 250, 252, 256, 270, 272, 273, 274, 275, 293,
	294, 298, 299, 302, 303, 307, 308, 309, 313, 314,
	321, 0, 328, 334, 335, 336, 337, 338, 346, 347,
	349, 350, 357, 379, 380, 393, 394, 367, 0, 163,
	0, 0, 169, 0, 0, 0, 0, 0, 301, 168,
	0, 0, 0, 0, 0, 0, 0, 218, 0, 0,
	0, 0, 0, 0, 0, 217, 205, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 391, 355, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2826, 0,
	0, 0, 0, 2828, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	222, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 386, 0, 0, 0, 0, 319, 237, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 162, 0, 0, 0, 296, 0, 0,
	0, 165, 263, 0, 0, 0, 206, 0, 331, 0,
	385, 0, 233, 0, 330, 265, 378, 0, 0, 384,
	0, 362, 392, 396, 229, 0, 197, 352, 220, 215,
	0, 0, 0, 238, 318, 210, 257, 0, 0, 0,
	202, 0, 0, 0, 351, 375, 167, 281, 376, 395,
	185, 368, 282, 289, 199, 201, 200, 179, 345, 374,
	191, 204, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 239, 0, 0, 0, 305, 188, 0, 0,
	0, 389, 0, 340, 339, 0, 246, 0, 0, 0,
	326, 0, 254, 170, 0, 398, 184, 259, 369, 0,
	232, 295, 208, 0, 306, 0, 164, 322, 277, 279,
	276, 280, 236, 0, 0, 0, 324, 342, 373, 186,
	358, 0, 0, 0, 0, 333, 0, 0, 0, 271,
	224, 228, 240, 251, 0, 329, 359, 390, 0, 181,
	173, 361, 383, 192, 341, 344, 397, 0, 180, 175,
	0, 0, 0, 0, 0, 0, 0, 174, 0, 0,
	0, 0, 0, 0, 235, 0, 381, 382, 207, 399,
	0, 0, 176, 0, 0, 292, 300, 291, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 227,
	242, 316, 267, 317, 243, 287, 286, 288, 269, 0,
	0, 171, 0, 356, 0, 0, 360, 189, 0, 0,
	372, 0, 323, 190, 234, 225, 315, 290, 182, 245,
	354, 258, 266, 0, 0, 304, 332, 196, 387, 353,
	221, 0, 297, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 301, 0, 0, 0, 0, 0, 203, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 217,
	205, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 391, 355, 284, 0, 312,
	172, 183, 195, 214, 212, 226, 255, 278, 283, 310,
	343, 348, 363, 364, 365, 366, 216, 979, 219, 194,
	327, 193, 268, 248, 311, 370, 371, 320, 209, 0,
	166, 177, 262, 0, 325, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 386, 0, 0, 0,
	0, 319, 237, 0, 0, 0, 0, 0, 0, 2811,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	388, 213, 0, 0, 0, 178, 187, 198, 211, 223,
	230, 241, 244, 249, 250, 252, 256, 270, 272, 273,
	274, 275, 293, 294, 298, 299, 302, 303, 307, 308,
	309, 313, 314, 321, 0, 328, 334, 335, 336, 337,
	338, 346, 347, 349, 350, 357, 379, 380, 393, 394,
	0, 285, 163, 0, 0, 169, 253, 0, 0, 0,
	0, 0, 168, 0, 0, 261, 0, 162, 0, 0,
	0, 296, 0, 0, 0, 165, 263, 0, 0, 0,
	206, 0, 331, 0, 385, 0, 233, 0, 330, 265,
	378, 0, 0, 384, 0, 362, 392, 396, 229, 0,
	197, 352, 220, 215, 0, 0, 0, 238, 318, 210,
	257, 0, 0, 0, 202, 0, 0, 0, 351, 375,
	167, 281, 376, 395, 185, 368, 282, 289, 199, 201,
	200, 179, 345, 374, 191, 204, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 239, 0, 0, 0,
	305, 188, 0, 0, 0, 389, 0, 340, 339, 0,
	246, 0, 0, 0, 326, 0, 254, 170, 0, 398,
	184, 259, 369, 0, 232, 295, 208, 0, 306, 0,
	164, 322, 277, 279, 276, 280, 236, 0, 0, 0,
	324, 342, 373, 186, 358, 0, 0, 0, 0, 333,
	0, 0, 0, 271, 224, 228, 240, 251, 0, 329,
	359, 390, 0, 181, 173, 361, 383, 192, 341, 344,
	397, 0, 180, 175, 0, 0, 0, 0, 0, 0,
	0, 174, 0, 0, 0, 0, 0, 0, 235, 0,
	381, 382, 207, 399, 0, 0, 176, 0, 0, 292,
	300, 291, 0, 377, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 227, 242, 316, 267, 317, 243, 287,
	286, 288, 269, 0, 0, 171, 0, 356, 0, 0,
	360, 189, 0, 0, 372, 0, 323, 190, 234, 225,
	315, 290, 182, 245, 354, 258, 266, 0, 0, 304,
	332, 196, 387, 353, 221, 0, 297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 172, 183, 195, 214, 212, 226,
	255, 278, 283, 310, 343, 348, 363, 364, 365, 366,
	216, 0, 219, 194, 327, 193, 268, 248, 311, 370,
	371, 320, 209, 0, 166, 177, 262, 0, 325, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 388, 213, 0, 0, 0, 178,
	187, 198, 211, 223, 230, 241, 244, 249, 250, 252,
	256, 270, 272, 273, 274, 275, 293, 294, 298, 299,
	302, 303, 307, 308, 309, 313, 314, 321, 0, 328,
	334, 335, 336, 337, 338, 346, 347, 349, 350, 357,
	379, 380, 393, 394, 367, 0, 163, 0, 0, 169,
	0, 0, 0, 0, 0, 301, 168, 0, 0, 0,
	0, 0, 0, 0, 218, 0, 0, 0, 0, 0,
	0, 0, 217, 205, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 264, 0, 0, 391, 355,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 83, 0, 0, 0, 0,
	979, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 386,
	0, 0, 0, 0, 319, 237, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 285, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	162, 0, 0, 0, 296, 0, 0, 0, 165, 263,
	0, 0, 0, 206, 0, 331, 0, 385, 0, 233,
	0, 330, 265, 378, 0, 0, 384, 0, 362, 392,
	396, 229, 0, 197, 352, 220, 215, 0, 0, 0,
	238, 318, 210, 257, 0, 0, 0, 202, 0, 0,
	0, 351, 375, 167, 281, 376, 395, 185, 368, 282,
	289, 199, 201, 200, 179, 345, 374, 191, 204, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 239,
	0, 0, 0, 305, 188, 0, 0, 0, 389, 0,
	340, 339, 0, 246, 0, 0, 0, 326, 0, 254,
	170, 0, 398, 184, 259, 369, 0, 232, 295, 208,
	0, 306, 0, 164, 322, 277, 279, 276, 280, 236,
	0, 0, 0, 324, 342, 373, 186, 358, 0, 0,
	0, 0, 333, 0, 0, 0, 271, 224, 228, 240,
	251, 0, 329, 359, 390, 0, 181, 173, 361, 383,
	192, 341, 344, 397, 0, 180, 175, 0, 0, 0,
	0, 0, 0, 0, 174, 0, 0, 0, 0, 0,
	0, 235, 0, 381, 382, 207, 399, 0, 0, 176,
	0, 0, 292, 300, 291, 0, 377, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 227, 242, 316, 267,
	317, 243, 287, 286, 288, 269, 0, 0, 171, 0,
	356, 0, 0, 360, 189, 0, 0, 372, 0, 323,
	190, 234, 225, 315, 290, 182, 245, 354, 258, 266,
	0, 0, 304, 332, 196, 387, 353, 221, 0, 297,
	0, 0, 0, 0, 0, 0, 0, 0, 367, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 301,
	0, 0, 0, 0, 0, 203, 0, 0, 218, 0,
	0, 0, 0, 0, 0, 0, 217, 205, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	0, 0, 391, 355, 284, 0, 312, 172, 183, 195,
	214, 212, 226, 255, 278, 283, 310, 343, 348, 363,
	364, 365, 366, 216, 979, 219, 194, 327, 193, 268,
	248, 311, 370, 371, 320, 209, 0, 166, 177, 262,
	0, 325, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 386, 0, 0, 0, 0, 319, 237,
	0, 0, 0, 0, 0, 0, 2197, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 388, 213, 0,
	0, 0, 178, 187, 198, 211, 223, 230, 241, 244,
	249, 250, 252, 256, 270, 272, 273, 274, 275, 293,
	294, 298, 299, 302, 303, 307, 308, 309, 313, 314,
	321, 0, 328, 334, 335, 336, 337, 338, 346, 347,
	349, 350, 357, 379, 380, 393, 394, 0, 285, 163,
	0, 0, 169, 253, 0, 0, 0, 0, 0, 168,
	0, 0, 261, 0, 162, 0, 0, 0, 296, 0,
	0, 0, 165, 263, 0, 0, 0, 206, 0, 331,
	0, 385, 0, 233, 0, 330, 265, 378, 0, 0,
	384, 0, 362, 392, 396, 229, 0, 197, 352, 220,
	215, 0, 0, 0, 238, 318, 210, 257, 0, 0,
	0, 202, 0, 0, 0, 351, 375, 167, 281, 376,
	395, 185, 368, 282, 289, 199, 201, 200, 179, 345,
	374, 191, 204, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 239, 0, 0, 0, 305, 188, 0,
	0, 0, 389, 0, 340, 339, 0, 246, 0, 0,
	0, 326, 0, 254, 170, 0, 398, 184, 259, 369,
	0, 232, 295, 208, 0, 306, 0, 164, 322, 277,
	279, 276, 280, 236, 0, 0, 0, 324, 342, 373,
	186, 358, 0, 0, 0, 0, 333, 0, 0, 0,
	271, 224, 228, 240, 251, 0, 329, 359, 390, 0,
	181, 173, 361, 383, 192, 341, 344, 397, 0, 180,
	175, 0, 0, 0, 0, 0, 0, 0, 174, 0,
	0, 0, 0, 0, 0, 235, 0, 381, 382, 207,
	399, 0, 0, 176, 0, 0, 292, 300, 291, 0,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	227, 242, 316, 267, 317, 243, 287, 286, 288, 269,
	0, 0, 171, 0, 356, 0, 0, 360, 189, 0,
	0, 372, 0, 323, 190, 234, 225, 315, 290, 182,
	245, 354, 258, 266, 0, 0, 304, 332, 196, 387,
	353, 221, 0, 297, 0, 0, 0, 0, 0, 0,
	0, 0, 367, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 301, 0, 0, 0, 0, 0, 203,
	0, 0, 218, 0, 0, 0, 0, 0, 0, 2239,
	2240, 205, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 0, 0, 391, 355, 284, 0,
	312, 172, 183, 195, 214, 212, 226, 255, 278, 283,
	310, 343, 348, 363, 364, 365, 366, 216, 979, 219,
	194, 327, 193, 268, 248, 311, 370, 371, 320, 209,
	0, 166, 177, 262, 0, 325, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 386, 0, 0,
	0, 0, 319, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 388, 213, 0, 0, 0, 178, 187, 198, 211,
	223, 230, 241, 244, 249, 250, 252, 256, 270, 272,
	273, 274, 275, 293, 294, 298, 299, 302, 303, 307,
	308, 309, 313, 314, 321, 0, 328, 334, 335, 336,
	337, 338, 346, 347, 349, 350, 357, 379, 380, 393,
	394, 0, 285, 163, 0, 0, 169, 253, 0, 0,
	0, 0, 0, 168, 0, 0, 261, 0, 162, 0,
	0, 0, 296, 0, 0, 0, 165, 263, 0, 0,
	0, 206, 0, 331, 0, 385, 0, 233, 0, 330,
	265, 378, 0, 0, 384, 0, 362, 392, 396, 229,
	0, 197, 352, 220, 215, 0, 0, 0, 238, 318,
	210, 257, 0, 0, 0, 202, 0, 0, 0, 351,
	375, 167, 281, 376, 395, 185, 368, 282, 289, 199,
	201, 200, 179, 345, 374, 191, 204, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 239, 0, 0,
	0, 305, 188, 0, 0, 0, 389, 0, 340, 339,
	0, 246, 0, 0, 0, 326, 0, 254, 170, 0,
	398, 184, 259, 369, 0, 232, 295, 208, 0, 306,
	0, 164, 322, 277, 279, 276, 280, 236, 0, 0,
	0, 324, 342, 373, 186, 358, 0, 0, 0, 0,
	333, 0, 0, 0, 271, 224, 228, 240, 251, 0,
	329, 359, 390, 0, 181, 173, 361, 383, 192, 341,
	344, 397, 0, 180, 175, 0, 0, 0, 0, 0,
	0, 0, 174, 0, 0, 0, 0, 0, 0, 235,
	0, 381, 382, 207, 399, 0, 0, 176, 0, 0,
	292, 300, 291, 0, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 227, 242, 316, 267, 317, 243,
	287, 286, 288, 269, 0, 0, 171, 0, 356, 0,
	0, 360, 189, 0, 0, 372, 0, 323, 190, 234,
	225, 315, 290, 182, 245, 354, 258, 266, 0, 0,
	304, 332, 196, 387, 353, 221, 0, 297, 0, 0,
	0, 0, 0, 0, 0, 0, 367, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 301, 0, 0,
	0, 0, 0, 203, 0, 0, 218, 0, 0, 0,
	0, 0, 0, 0, 217, 205, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 0, 0,
	391, 355, 284, 0, 312, 172, 183, 195, 214, 212,
	226, 255, 278, 283, 310, 343, 348, 363, 364, 365,
	366, 216, 979, 219, 194, 327, 193, 268, 248, 311,
	370, 371, 320, 209, 0, 166, 177, 262, 0, 325,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 386, 0, 0, 0, 0, 319, 237, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 388, 213, 0, 0, 0,
	178, 187, 198, 211, 223, 230, 241, 244, 249, 250,
	252, 256, 270, 272, 273, 274, 275, 293, 294, 298,
	299, 302, 303, 307, 308, 309, 313, 314, 321, 0,
	328, 334, 335, 336, 337, 338, 346, 347, 349, 350,
	357, 379, 380, 393, 394, 0, 285, 163, 0, 0,
	169, 253, 0, 0, 0, 0, 0, 168, 0, 0,
	261, 0, 162, 0, 0, 0, 296, 0, 0, 0,
	165, 263, 0, 0, 0, 206, 0, 331, 0, 385,
	0, 233, 0, 330, 265, 378, 0, 0, 384, 0,
	362, 392, 396, 229, 0, 197, 352, 220, 215, 0,
	0, 0, 238, 318, 210, 257, 0, 0, 0, 202,
	0, 0, 0, 351, 375, 167, 281, 376, 395, 185,
	368, 282, 289, 199, 201, 200, 179, 345, 374, 191,
	204, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 239, 0, 0, 0, 305, 188, 0, 0, 0,
	389, 0, 340, 339, 0, 246, 0, 0, 0, 326,
	0, 254, 170, 0, 398, 184, 259, 369, 0, 232,
	295, 208, 0, 306, 0, 164, 322, 277, 279, 276,
	280, 236, 0, 0, 0, 324, 342, 373, 186, 358,
	0, 0, 0, 0, 333, 0, 0, 0, 271, 224,
	228, 240, 251, 0, 329, 359, 390, 0, 181, 173,
	361, 383, 192, 341, 344, 397, 0, 180, 175, 0,
	0, 0, 0, 0, 0, 0, 174, 0, 0, 0,
	0, 0, 0, 235, 0, 381, 382, 207, 399, 0,
	0, 176, 0, 0, 292, 300, 291, 0, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 227, 242,
	316, 267, 317, 243, 287, 286, 288, 269, 0, 0,
	171, 0, 356, 0, 0, 360, 189, 0, 0, 372,
	0, 323, 190, 234, 225, 315, 290, 182, 245, 354,
	258, 266, 0, 0, 304, 332, 196, 387, 353, 221,
	0, 297, 0, 0, 0, 0, 0, 0, 0, 0,
	367, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 203, 0, 0,
	218, 0, 0, 0, 0, 0, 0, 0, 217, 205,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 264, 0, 0, 391, 355, 284, 0, 312, 172,
	183, 195, 214, 212, 226, 255, 278, 283, 310, 343,
	348, 363, 364, 365, 366, 216, 2828, 219, 194, 327,
	193, 268, 248, 311, 370, 371, 320, 209, 0, 166,
	177, 262, 0, 325, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 386, 0, 0, 0, 0,
	319, 237, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 388,
	213, 0, 0, 0, 178, 187, 198, 211, 223, 230,
	241, 244, 249, 250, 252, 256, 270, 272, 273, 274,
	275, 293, 294, 298, 299, 302, 303, 307, 308, 309,
	313, 314, 321, 0, 328, 334, 335, 336, 337, 338,
	346, 347, 349, 350, 357, 379, 380, 393, 394, 0,
	285, 163, 0, 0, 169, 253, 0, 0, 0, 0,
	0, 168, 0, 0, 261, 0, 162, 0, 0, 0,
	296, 0, 0, 0, 165, 263, 0, 0, 0, 206,
	0, 331, 0, 385, 0, 233, 0, 330, 265, 378,
	0, 0, 384, 0, 362, 392, 396, 229, 0, 197,
	352, 220, 215, 0, 0, 0, 238, 318, 210, 257,
	0, 0, 0, 202, 0, 0, 0, 351, 375, 167,
	281, 376, 395, 185, 368, 282, 289, 199, 201, 200,
	179, 345, 374, 191, 204, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 239, 0, 0, 0, 305,
	188, 0, 0, 0, 389, 0, 340, 339, 0, 246,
	0, 0, 0, 326, 0, 254, 170, 0, 398, 184,
	259, 369, 0, 232, 295, 208, 0, 306, 0, 164,
	322, 277, 279, 276, 280, 236, 0, 0, 0, 324,
	342, 373, 186, 358, 0, 0, 0, 0, 333, 0,
	0, 0, 271, 224, 228, 240, 251, 0, 329, 359,
	390, 0, 181, 173, 361, 383, 192, 341, 344, 397,
	0, 180, 175, 0, 0, 0, 0, 0, 0, 0,
	174, 0, 0, 0, 0, 0, 0, 235, 0, 381,
	382, 207, 399, 0, 0, 176, 0, 0, 292, 300,
	291, 0, 377, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 227, 242, 316, 267, 317, 243, 287, 286,
	288, 269, 0, 0, 171, 0, 356, 0, 0, 360,
	189, 0, 0, 372, 0, 323, 190, 234, 225, 315,
	290, 182, 245, 354, 258, 266, 0, 0, 304, 332,
	196, 387, 353, 221, 0, 297, 0, 0, 0, 0,
	0, 0, 0, 0, 367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 301, 0, 0, 0, 0,
	0, 203, 0, 0, 218, 0, 0, 0, 0, 0,
	0, 0, 217, 205, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 264, 0, 0, 391, 355,
	284, 0, 312, 172, 183, 195, 214, 212, 226, 255,
	278, 283, 310, 343, 348, 363, 364, 365, 366, 216,
	1763, 219, 194, 327, 193, 268, 248, 311, 370, 371,
	320, 209, 0, 166, 177, 262, 0, 325, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 386,
	0, 0, 0, 0, 319, 237, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 388, 213, 0, 0, 0, 178, 187,
	198, 211, 223, 230, 241, 244, 249, 250, 252, 256,
	270, 272, 273, 274, 275, 293, 294, 298, 299, 302,
	303, 307, 308, 309, 313, 314, 321, 0, 328, 334,
	335, 336, 337, 338, 346, 347, 349, 350, 357, 379,
	380, 393, 394, 0, 285, 163, 0, 0, 169, 253,
	0, 0, 0, 0, 0, 168, 0, 0, 261, 0,
	162, 0, 0, 0, 296, 0, 0, 0, 165, 263,
	0, 0, 0, 206, 0, 331, 0, 385, 0, 233,
	0, 330, 265, 378, 0, 0, 384, 0, 362, 392,
	396, 229, 0, 197, 352, 220, 215, 0, 0, 0,
	238, 318, 210, 257, 0, 0, 0, 202, 0, 0,
	0, 351, 375, 167, 281, 376, 395, 185, 368, 282,
	289, 199, 201, 200, 179, 345, 374, 191, 204, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 239,
	0, 0, 0, 305, 188, 0, 0, 0, 389, 0,
	340, 339, 0, 246, 0, 0, 0, 326, 0, 254,
	170, 0, 398, 184, 259, 369, 0, 232, 295, 208,
	0, 306, 0, 164, 322, 277, 279, 276, 280, 236,
	0, 0, 0, 324, 342, 373, 186, 358, 0, 0,
	0, 0, 333, 0, 0, 0, 271, 224, 228, 240,
	251, 0, 329, 359, 390, 0, 181, 173, 361, 383,
	192, 341, 344, 397, 0, 180, 175, 0, 0, 0,
	0, 0, 0, 0, 174, 0, 0, 0, 0, 0,
	0, 235, 0, 381, 382, 207, 399, 0, 0, 176,
	0, 0, 292, 300, 291, 0, 377, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 227, 242, 316, 267,
	317, 243, 287, 286, 288, 269, 0, 0, 171, 0,
	356, 0, 0, 360, 189, 0, 0, 372, 0, 323,
	190, 234, 225, 315, 290, 182, 245, 354, 258, 266,
	0, 0, 304, 332, 196, 387, 353, 221, 0, 297,
	0, 0, 0, 0, 0, 0, 0, 0, 367, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 301,
	0, 0, 0, 0, 0, 203, 0, 0, 218, 0,
	0, 0, 0, 0, 0, 0, 217, 205, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	0, 0, 391, 355, 284, 0, 312, 172, 183, 195,
	214, 212, 226, 255, 278, 283, 310, 343, 348, 363,
	364, 365, 366, 216, 136, 219, 194, 327, 193, 268,
	248, 311, 370, 371, 320, 209, 0, 166, 177, 262,
	0, 325, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 386, 0, 0, 0, 0, 319, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 388, 213, 0,
	0, 0, 178, 187, 198, 211, 223, 230, 241, 244,
	249, 250, 252, 256, 270, 272, 273, 274, 275, 293,
	294, 298, 299, 302, 303, 307, 308, 309, 313, 314,
	321, 0, 328, 334, 335, 336, 337, 338, 346, 347,
	349, 350, 357, 379, 380, 393, 394, 0, 285, 163,
	0, 0, 169, 253, 0, 0, 0, 0, 0, 168,
	0, 0, 261, 0, 162, 0, 0, 0, 296, 0,
	0, 0, 165, 263, 0, 0, 0, 206, 0, 331,
	0, 385, 0, 233, 0, 330, 265, 378, 0, 0,
	384, 0, 362, 392, 396, 229, 0, 197, 352, 220,
	215, 0, 0, 0, 238, 318, 210, 257, 0, 0,
	0, 202, 0, 0, 0, 351, 375, 167, 281, 376,
	395, 185, 368, 282, 289, 199, 201, 200, 179, 345,
	374, 191, 204, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 239, 0, 0, 0, 305, 188, 0,
	0, 0, 389, 0, 340, 339, 0, 246, 0, 0,
	0, 326, 0, 254, 170, 0, 398, 184, 259, 369,
	0, 232, 295, 208, 0, 306, 0, 164, 322, 277,
	279, 276, 280, 236, 0, 0, 0, 324, 342, 373,
	186, 358, 0, 0, 0, 0, 333, 0, 0, 0,
	271, 224, 228, 240, 251, 0, 329, 359, 390, 0,
	181, 173, 361, 383, 192, 341, 344, 397, 0, 180,
	175, 0, 0, 0, 0, 0, 0, 0, 174, 0,
	0, 0, 0, 0, 0, 235, 0, 381, 382, 207,
	399, 0, 0, 176, 0, 0, 292, 300, 291, 0,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	227, 242, 316, 267, 317, 243, 287, 286, 288, 269,
	0, 0, 171, 0, 356, 0, 0, 360, 189, 0,
	0, 372, 0, 323, 190, 234, 225, 315, 290, 182,
	245, 354, 258, 266, 0, 0, 304, 332, 196, 387,
	353, 221, 0, 297, 0, 0, 0, 0, 0, 0,
	0, 0, 367, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 301, 0, 0, 0, 0, 0, 203,
	0, 0, 218, 0, 0, 0, 0, 0, 0, 0,
	217, 205, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 0, 0, 391, 355, 284, 0,
	312, 172, 183, 195, 214, 212, 226, 255, 278, 283,
	310, 343, 348, 363, 364, 365, 366, 216, 453, 219,
	194, 327, 193, 268, 248, 311, 370, 371, 320, 209,
	0, 166, 177, 262, 0, 325, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 386, 0, 0,
	0, 0, 319, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 388, 213, 0, 0, 0, 178, 187, 198, 211,
	223, 230, 241, 244, 249, 250, 252, 256, 270, 272,
	273, 274, 275, 293, 294, 298, 299, 302, 303, 307,
	308, 309, 313, 314, 321, 0, 328, 334, 335, 336,
	337, 338, 346, 347, 349, 350, 357, 379, 380, 393,
	394, 0, 285, 163, 0, 0, 169, 253, 0, 0,
	0, 0, 0, 168, 0, 0, 261, 0, 162, 0,
	0, 0, 296, 0, 0, 0, 165, 263, 0, 0,
	0, 206, 0, 331, 0, 385, 0, 233, 0, 330,
	265, 378, 0, 0, 384, 0, 362, 392, 396, 229,
	0, 197, 352, 220, 215, 0, 0, 0, 238, 318,
	210, 257, 0, 0, 0, 202, 0, 0, 0, 351,
	375, 167, 281, 376, 395, 185, 368, 282, 289, 199,
	201, 200, 179, 345, 374, 191, 204, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 239, 0, 0,
	0, 305, 188, 0, 0, 0, 389, 0, 340, 339,
	0, 246, 0, 0, 0, 326, 0, 254, 170, 0,
	398, 184, 259, 369, 0, 232, 295, 208, 0, 306,
	0, 164, 322, 277, 279, 276, 280, 236, 0, 0,
	0, 324, 342, 373, 186, 358, 0, 0, 0, 0,
	333, 0, 0, 0, 271, 224, 228, 240, 251, 0,
	329, 359, 390, 0, 181, 173, 361, 383, 192, 341,
	344, 397, 0, 180, 175, 0, 0, 0, 0, 0,
	0, 0, 174, 0, 0, 0, 0, 0, 0, 235,
	0, 381, 382, 207, 399, 0, 0, 176, 0, 0,
	292, 300, 291, 0, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 227, 242, 316, 267, 317, 243,
	287, 286, 288, 269, 0, 0, 171, 0, 356, 0,
	0, 360, 189, 0, 0, 372, 0, 323, 190, 234,
	225, 315, 290, 182, 245, 354, 258, 266, 0, 0,
	304, 332, 196, 387, 353, 221, 0, 297, 0, 0,
	0, 0, 0, 0, 0, 0, 367, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 301, 0, 0,
	0, 0, 0, 203, 0, 0, 218, 0, 0, 0,
	0, 0, 0, 0, 217, 205, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 0, 0,
	391, 355, 284, 0, 312, 172, 183, 195, 214, 212,
	226, 255, 278, 283, 310, 343, 348, 363, 364, 365,
	366, 216, 1029, 219, 194, 327, 193, 268, 248, 311,
	370, 371, 320, 209, 0, 166, 177, 262, 0, 325,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 386, 0, 0, 0, 0, 319, 237, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 388, 213, 0, 0, 0,
	178, 187, 198, 211, 223, 230, 241, 244, 249, 250,
	252, 256, 270, 272, 273, 274, 275, 293, 294, 298,
	299, 302, 303, 307, 308, 309, 313, 314, 321, 0,
	328, 334, 335, 336, 337, 338, 346, 347, 349, 350,
	357, 379, 380, 393, 394, 0, 285, 163, 0, 0,
	169, 253, 0, 0, 0, 0, 0, 168, 0, 0,
	261, 0, 162, 0, 0, 0, 296, 0, 0, 0,
	165, 263, 0, 0, 0, 206, 0, 331, 0, 385,
	0, 233, 0, 330, 265, 378, 0, 0, 384, 0,
	362, 392, 396, 229, 0, 197, 352, 220, 215, 0,
	0, 0, 238, 318, 210, 257, 0, 0, 0, 202,
	0, 0, 0, 351, 375, 167, 281, 376, 395, 185,
	368, 282, 289, 199, 201, 200, 179, 345, 374, 191,
	204, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 239, 0, 0, 0, 305, 188, 0, 0, 0,
	389, 0, 340, 339, 0, 246, 0, 0, 0, 326,
	0, 254, 170, 0, 398, 184, 259, 369, 0, 232,
	295, 208, 0, 306, 0, 164, 322, 277, 279, 276,
	280, 236, 0, 0, 0, 324, 342, 373, 186, 358,
	0, 0, 0, 0, 333, 0, 0, 0, 271, 224,
	228, 240, 251, 0, 329, 359, 390, 0, 181, 173,
	361, 383, 192, 341, 344, 397, 0, 180, 175, 0,
	0, 0, 0, 0, 0, 0, 174, 0, 0, 0,
	0, 0, 0, 235, 0, 381, 382, 207, 399, 0,
	0, 176, 0, 0, 292, 300, 291, 0, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 227, 242,
	316, 267, 317, 243, 287, 286, 288, 269, 0, 0,
	171, 0, 356, 0, 0, 360, 189, 0, 0, 372,
	0, 323, 190, 234, 225, 315, 290, 182, 245, 354,
	258, 266, 0, 0, 304, 332, 196, 387, 353, 221,
	0, 297, 0, 0, 0, 0, 0, 0, 0, 0,
	367, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 203, 0, 0,
	218, 0, 0, 0, 0, 0, 0, 0, 217, 205,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 264, 0, 0, 391, 355, 284, 0, 312, 172,
	183, 195, 214, 212, 226, 255, 278, 283, 310, 343,
	348, 363, 364, 365, 366, 216, 1019, 219, 194, 327,
	193, 268, 248, 311, 370, 371, 320, 209, 0, 166,
	177, 262, 0, 325, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 386, 0, 0, 0, 0,
	319, 237, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 388,
	213, 0, 0, 0, 178, 187, 198, 211, 223, 230,
	241, 244, 249, 250, 252, 256, 270, 272, 273, 274,
	275, 293, 294, 298, 299, 302, 303, 307, 308, 309,
	313, 314, 321, 0, 328, 334, 335, 336, 337, 338,
	346, 347, 349, 350, 357, 379, 380, 393, 394, 0,
	285, 163, 0, 0, 169, 253, 0, 0, 0, 0,
	0, 168, 0, 0, 261, 0, 162, 0, 0, 0,
	296, 0, 0, 0, 165, 263, 0, 0, 0, 206,
	0, 331, 0, 385, 0, 233, 0, 330, 265, 378,
	0, 0, 384, 0, 362, 392, 396, 229, 0, 197,
	352, 220, 215, 0, 0, 0, 238, 318, 210, 257,
	0, 0, 0, 202, 0, 0, 0, 351, 375, 167,
	281, 376, 395, 185, 368, 282, 289, 199, 201, 200,
	179, 345, 374, 191, 204, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 239, 0, 0, 0, 305,
	188, 0, 0, 0, 389, 0, 340, 339, 0, 246,
	0, 0, 0, 326, 0, 254, 170, 0, 398, 184,
	259, 369, 0, 232, 295, 208, 0, 306, 0, 164,
	322, 277, 279, 276, 280, 236, 0, 0, 0, 324,
	342, 373, 186, 358, 0, 0, 0, 0, 333, 0,
	0, 0, 271, 224, 228, 240, 251, 0, 329, 359,
	390, 0, 181, 173, 361, 383, 192, 341, 344, 397,
	0, 180, 175, 0, 0, 0, 0, 0, 0, 0,
	174, 0, 0, 0, 0, 0, 0, 235, 0, 381,
	382, 207, 399, 0, 0, 176, 0, 0, 292, 300,
	291, 0, 377, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 227, 242, 316, 267, 317, 243, 287, 286,
	288, 269, 0, 0, 171, 0, 356, 0, 0, 360,
	189, 0, 0, 372, 0, 323, 190, 234, 225, 315,
	290, 182, 245, 354, 258, 266, 0, 0, 304, 332,
	196, 387, 353, 221, 0, 297, 0, 0, 0, 0,
	0, 0, 0, 0, 367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 301, 0, 0, 0, 0,
	0, 203, 0, 0, 218, 0, 0, 0, 0, 0,
	0, 0, 217, 205, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 264, 0, 0, 391, 355,
	284, 0, 312, 172, 183, 195, 214, 212, 226, 255,
	278, 283, 310, 343, 348, 363, 364, 365, 366, 216,
	403, 219, 194, 327, 193, 268, 248, 311, 370, 371,
	320, 209, 0, 166, 177, 262, 0, 325, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 386,
	0, 0, 0, 0, 319, 237, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 388, 213, 0, 0, 0, 178, 187,
	198, 211, 223, 230, 241, 244, 249, 250, 252, 256,
	270, 272, 273, 274, 275, 293, 294, 298, 299, 302,
	303, 307, 308, 309, 313, 314, 321, 0, 328, 334,
	335, 336, 337, 338, 346, 347, 349, 350, 357, 379,
	380, 393, 394, 0, 285, 163, 0, 0, 169, 253,
	0, 0, 0, 0, 0, 168, 0, 0, 261, 0,
	162, 0, 0, 0, 296, 0, 0, 0, 165, 263,
	0, 0, 0, 206, 0, 331, 0, 385, 0, 233,
	0, 330, 265, 378, 0, 0, 384, 0, 362, 392,
	396, 229, 0, 197, 352, 220, 215, 0, 0, 0,
	238, 318, 210, 257, 0, 0, 0, 202, 0, 0,
	0, 351, 375, 167, 281, 376, 395, 185, 368, 282,
	289, 199, 201, 200, 179, 345, 374, 191, 204, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 239,
	0, 0, 0, 305, 188, 0, 0, 0, 389, 0,
	340, 339, 0, 246, 0, 0, 0, 326, 0, 254,
	170, 0, 398, 184, 259, 369, 0, 232, 295, 208,
	0, 306, 0, 164, 322, 277, 279, 276, 280, 236,
	0, 0, 0, 324, 342, 373, 186, 358, 0, 0,
	0, 0, 333, 0, 0, 0, 271, 224, 228, 240,
	251, 0, 329, 359, 390, 0, 181, 173, 361, 383,
	192, 341, 344, 397, 0, 180, 175, 0, 0, 0,
	0, 0, 0, 0, 174, 0, 0, 0, 0, 0,
	0, 235, 0, 381, 382, 207, 399, 0, 0, 176,
	0, 0, 292, 300, 291, 0, 377, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 227, 242, 316, 267,
	317, 243, 287, 286, 288, 269, 0, 0, 171, 0,
	356, 0, 0, 360, 189, 0, 0, 372, 0, 323,
	190, 234, 225, 315, 290, 182, 245, 354, 258, 266,
	0, 0, 304, 332, 196, 387, 353, 221, 0, 297,
	0, 0, 0, 0, 0, 0, 0, 0, 367, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 301,
	0, 0, 0, 0, 0, 203, 0, 0, 218, 0,
	0, 0, 0, 0, 0, 0, 217, 205, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	0, 0, 391, 355, 284, 0, 312, 172, 183, 195,
	214, 212, 226, 255, 278, 283, 310, 343, 348, 363,
	364, 365, 366, 216, 401, 219, 194, 327, 193, 268,
	248, 311, 370, 371, 320, 209, 0, 166, 177, 262,
	0, 325, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 386, 0, 0, 0, 0, 319, 237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 388, 213, 0,
	0, 0, 178, 187, 198, 211, 223, 230, 241, 244,
	249, 250, 252, 256, 270, 272, 273, 274, 275, 293,
	294, 298, 299, 302, 303, 307, 308, 309, 313, 314,
	321, 0, 328, 334, 335, 336, 337, 338, 346, 347,
	349, 350, 357, 379, 380, 393, 394, 0, 285, 163,
	0, 0, 169, 253, 0, 0, 0, 0, 0, 168,
	0, 0, 261, 0, 162, 0, 0, 0, 296, 0,
	0, 0, 165, 263, 0, 0, 0, 206, 0, 331,
	0, 385, 0, 233, 0, 330, 265, 378, 0, 0,
	384, 0, 362, 392, 396, 229, 0, 197, 352, 220,
	215, 0, 0, 0, 238, 318, 210, 257, 0, 0,
	0, 202, 0, 0, 0, 351, 375, 167, 281, 376,
	395, 185, 368, 282, 289, 199, 201, 200, 179, 345,
	374, 191, 204, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 239, 0, 0, 0, 305, 188, 0,
	0, 0, 389, 0, 340, 339, 0, 246, 0, 0,
	0, 326, 0, 254, 170, 0, 398, 184, 259, 369,
	0, 232, 295, 208, 0, 306, 0, 164, 322, 277,
	279, 276, 280, 236, 0, 0, 0, 324, 342, 373,
	186, 358, 0, 0, 0, 0, 333, 0, 0, 0,
	271, 224, 228, 240, 251, 0, 329, 359, 390, 0,
	181, 173, 361, 383, 192, 341, 344, 397, 0, 180,
	175, 0, 0, 0, 0, 0, 0, 0, 174, 0,
	0, 0, 0, 0, 0, 235, 0, 381, 382, 207,
	399, 0, 0, 176, 0, 0, 292, 300, 291, 0,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	227, 242, 316, 267, 317, 243, 287, 286, 288, 269,
	0, 0, 171, 0, 356, 0, 0, 360, 189, 0,
	0, 372, 0, 323, 190, 234, 225, 315, 290, 182,
	245, 354, 258, 266, 0, 0, 304, 332, 196, 387,
	353, 221, 0, 297, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 203,
	0, 0, 0, 0, 0, 39, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 63,
	0, 0, 0, 0, 0, 79, 0, 0, 42, 0,
	312, 172, 183, 195, 214, 212, 226, 255, 278, 283,
	310, 343, 348, 363, 364, 365, 366, 216, 0, 219,
	194, 327, 193, 268, 248, 311, 370, 371, 320, 209,
	0, 166, 177, 262, 0, 325, 231, 83, 3665, 0,
	0, 0, 3419, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3413, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 388, 213, 0, 0, 0, 178, 187, 198, 211,
	223, 230, 241, 244, 249, 250, 252, 256, 270, 272,
	273, 274, 275, 293, 294, 298, 299, 302, 303, 307,
	308, 309, 313, 314, 321, 0, 328, 334, 335, 336,
	337, 338, 346, 347, 349, 350, 357, 379, 380, 393,
	394, 0, 0, 163, 0, 39, 169, 0, 0, 0,
	0, 0, 0, 168, 0, 0, 0, 0, 0, 63,
	44, 75, 48, 47, 50, 79, 0, 0, 42, 0,
	0, 0, 0, 0, 0, 3414, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 54, 78, 77, 0, 0, 0, 0, 49,
	0, 0, 0, 0, 0, 0, 0, 83, 0, 0,
	0, 0, 3419, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3413, 0, 0, 0, 0, 3594,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 61, 62, 0, 3415, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3422, 3416, 3417, 3418, 3420, 3421,
	0, 0, 0, 0, 70, 0, 71, 39, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 63, 0, 0, 0, 0, 0, 79, 0, 0,
	42, 72, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 52, 0, 0, 0, 0, 0, 0, 0, 0,
	44, 75, 48, 47, 50, 0, 0, 0, 0, 3664,
	76, 0, 58, 59, 65, 3414, 66, 0, 0, 83,
	0, 0, 0, 0, 3419, 0, 0, 0, 0, 0,
	0, 0, 54, 78, 77, 0, 0, 0, 0, 49,
	0, 0, 0, 0, 0, 0, 3413, 0, 0, 0,
	0, 3590, 0, 39, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 63, 0, 0,
	0, 0, 0, 79, 0, 0, 42, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 61, 62, 0, 3415, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3422, 3416, 3417, 3418, 3420, 3421,
	0, 0, 0, 0, 70, 83, 71, 0, 0, 0,
	3419, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 44, 75, 48, 47, 50, 0, 0, 0,
	0, 72, 3413, 0, 0, 0, 0, 3414, 0, 0,
	0, 52, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 54, 78, 77, 0, 0, 3423,
	76, 49, 58, 59, 65, 0, 66, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 51, 53, 0, 0,
	0, 0, 74, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 61, 62, 0, 3415, 0, 44, 75,
	48, 47, 50, 0, 0, 0, 3422, 3416, 3417, 3418,
	3420, 3421, 0, 3414, 0, 0, 70, 0, 71, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	54, 78, 77, 0, 0, 0, 0, 49, 0, 0,
	0, 0, 0, 72, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 52, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3423, 76, 0, 58, 59, 65, 0, 66, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 61,
	62, 0, 3415, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3422, 3416, 3417, 3418, 3420, 3421, 0, 0,
	0, 0, 70, 0, 71, 0, 51, 53, 0, 0,
	0, 0, 74, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 72,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 52,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3423, 76, 0,
	58, 59, 65, 0, 66, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 51, 53,
	0, 0, 0, 0, 74, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 51, 53, 0, 0, 0, 0,
	74,
}

var yyPact = [...]int{
	6623, -1000, -446, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2212, -1000,
	-1000, 328, -1000, 1065, 639, -1000, -1000, 404, 65, 36922,
	744, 52941, 52497, -276, 710, 50721, 79, -1000, 79, 239,
	34430, 518, 539, 51165, 2094, 1604, 84, -34, -42, 147,
	38805, 38175, 49, -1000, 41118, 110, 97, -1000, -1000, -1000,
	-1000, 2264, 220, -1000, -1000, 2195, 2210, 2000, -1000, 8288,
	-1000, -1000, -1000, -1000, -1000, 22412, -1000, 2262, 37545, 30065,
	-1000, 735, 727, -155, 691, 691, 350, 691, 691, 743,
	-1000, 373, 1095, -1000, -1000, -1000, -1000, 1093, 37545, 46367,
	697, 49389, 697, 697, 697, 697, 697, 697, 697, 52053,
	37545, -1000, 848, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	37545, 2250, 2249, 1915, 1914, 51609, 1603, 2131, 1125, 154,
	1125, -1000, -1000, 1180, -1000, 604, 595, 602, 463, 135,
	1142, 2192, -1000, 1872, 2195, 2195, -1000, -1000, -1000, -1000,
	-1000, -1000, 921, -1000, -1000, 1133, 1133, 432, 722, 227,
	619, 220, 2154, 1091, 2127, 2126, 1418, 2116, 719, 2115,
	1909, -1000, 847, -1000, -1000, 9, -1000, 1587, 37545, -1000,
	-1000, 1383, 1382, 488, 1807, 841, 1946, -1000, -1000, 403,
	536, 1900, 492, 1900, 1900, 1900, 1900, 1900, -53, 1900,
	1900, 1900, 149, 1900, 195, 1900, 1900, 1900, 1900, 1900,
	1640, -1000, -1000, -1000, 495, 1803, 1870, 1945, 698, -1000,
	-1000, -1000, 1904, 42987, 1842, -1000, 1872, -1000, -1000, -1000,
	1550, 741, -1000, -87, 1904, 2180, 1615, -1000, 41118, 2122,
	1214, 14708, 2042, -1000, -1000, 1176, 2248, -1000, 29442, 840,
	-1000, 14708, 1654, 1872, 1872, -1000, 769, 880, -1000, 766,
	829, -1000, -1000, 14066, 14066, 14066, 14066, 14066, 14066, 14066,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1872, 838, 836, 1872,
	1872, 1872, 1872, 1872, -1000, 12782, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1872, 1872,
	1872, 1872, 1872, 1872, 1872, 1872, 1872, 1872, 1872, 1872,
	1872, 1872, 14708, 1872, 1872, 1872, 1872, 1872, 1872, 1872,
	1872, 1872, 1872, 1872, 1872, 1872, 1872, 1872, 1872, 1872,
	1872, 1872, 1872, 1872, 1872, 1872, 1872, 1872, 1872, 1872,
	1872, 1872, 1872, 1872, 1872, 1872, 1872, 1872, 1872, 1872,
	1872, 1872, 1872, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 702, 702, 36299, 1868, -82, 21770,
	-1000, -1000, -1000, -1000, 20486, 45744, 1088, -1000, -1000, -1000,
	-1000, 2114, -1000, -1000, 832, 829, 769, 764, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2212, -1000, -1000, 1771,
	655, -1000, 5203, 5203, 5203, 5203, 5203, 325, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1908, 49389, 37545,
	337, 1586, 1114, 1585, 51165, 51165, -1000, 354, 46367, 46367,
	691, 437, 46367, 357, 1852, 721, 1849, 720, 1611, 37545,
	2145, 1943, 37545, 1584, 1583, 51165, 51165, 46367, 46367, -1000,
	-1000, -1000, 28190, 1848, -1000, 1476, 1475, 50277, 50277, -1000,
	-1000, -1000, 1125, -1000, 4526, 14708, 691, 691, 37545, 37545,
	37545, 37545, -1000, 37545, -1000, -1000, 1125, 1125, 1125, 1125,
	1130, 2247, 1130, -1000, 1130, -1000, -1000, 14708, -1000, 14066,
	45121, 935, -1000, -1000, 50721, 642, 642, 642, -1000, 1582,
	365, -1000, -1000, -1000, -1000, -1000, 227, -1000, -1000, 2098,
	1581, 719, 719, -1000, 1474, 719, 1835, -1000, 1083, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 719, -1000, 13424, 49389, -426, -1000, -1000, 1847, -1000,
	362, -1000, -1000, 640, 1942, 640, 208, 46367, 46367, 46367,
	-1000, 1900, 49389, -1000, 1900, 1900, 1900, -57, 1900, 1900,
	-1000, -1000, 1900, -1000, -1000, -1000, -1000, -1000, 1900, -1000,
	-1000, -1000, 1900, 1900, -1000, 1900, 1900, -1000, -1000, -1000,
	-1000, -1000, 46367, 640, 236, 1845, 640, 46367, 46367, -1000,
	128, 127, 126, 125, -1000, -1000, -1000, -1000, 122, 119,
	-1000, -1000, -1000, 1842, 42987, 2169, 17276, 2135, -1000, 2135,
	-1000, -1000, -1000, 295, -1000, 37545, -81, -1000, -1000, 220,
	-1000, -1000, -1000, -1000, 1904, 1155, 2257, 987, 1853, -1000,
	-1000, 1839, -1000, 1146, 826, 1284, 2010, -1000, -1000, -1000,
	37545, -1000, 14708, 14708, 14708, 1283, -1000, 30688, -1000, -1000,
	-1000, -1000, -1000, -1000, 18560, 1002, 14066, 1253, 1036, 14066,
	14066, 14066, 14066, 14066, 14066, 14066, 14066, 14066, 14066, 14066,
	14066, 14066, 14066, 14066, 1340, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1580, -1000, 220, 26264, 9572, 26264, 1498,
	1498, 49389, 896, 896, 896, 896, 896, 896, 39249, 2160,
	25622, 26264, 2160, 2160, 2160, 2160, 2160, 1615, 1753, 1376,
	41118, 12782, 9572, 9572, 9572, 1615, 14708, 14708, 9572, 9572,
	12140, 11498, 15992, 9572, 9572, 2160, 1103, 1376, 20486, 9572,
	-1000, -1000, 10856, -1000, -1000, -1000, -1000, -1000, 1615, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 49389, 49389, 9572,
	9572, 9572, 9572, 1615, 1615, 9572, 9572, 9572, 9572, 9572,
	1615, 1615, 1615, 1615, 9572, 9572, 9572, 9572, 9572, 9572,
	9572, 9572, 9572, 9572, 9572, 9572, 35676, 33807, 37545, 1827,
	1795, -1000, 795, 21128, 1830, -1000, -77, -101, -82, -1000,
	-1000, 886, -1000, -1000, -1000, 10214, -1000, 19202, 2195, 2000,
	-1000, 28819, -1000, -1000, -5, -1000, -1000, -1000, 1884, -1000,
	1894, 361, 39, 1894, 1894, 1894, 1894, 1894, -1000, -1000,
	-1000, -1000, 44, -1000, -1000, -1000, -1000, -1000, 1907, 1905,
	-1000, 1884, 1884, 1884, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1896, 366, 1892, 1892, 1892, 1892, 1892,
	-1000, -1000, -1000, -1000, 664, 664, 664, -1000, 14708, 1911,
	2167, 726, 437, 2135, 2144, 2135, 608, -1000, 793, 1901,
	460, 1840, -1000, 240, 1721, 35053, -1000, -1000, -1000, -1000,
	-1000, 37545, 37545, 46367, 46367, 46367, 799, -1000, 37545, 1838,
	-1000, -1000, -1000, -1000, -1000, 1818, -1000, 1721, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 37545, -1000,
	-1000, 1836, -1000, -1000, -1000, 1836, -1000, -1000, 1470, 1376,
	1578, 1577, 2154, -1000, -1000, -1000, 1164, -1000, -1000, -1000,
	-1000, 1125, 50721, 50721, 37545, 2154, 1125, 1376, 872, 1912,
	1872, 1615, -1000, -1000, 75, -1000, 72, -1000, -1000, -1000,
	1560, -1000, 14066, -1000, 1835, 1835, -1000, 1835, 719, 1498,
	1835, -1000, 1731, -1000, 1151, 1469, 37545, -1000, 42987, 5,
	-1000, -114, 48501, -1000, -1000, -1000, 640, 48501, -1000, 149,
	170, -1000, 718, -1000, 1725, -1000, -1000, -1000, -1000, 1900,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 48501,
	191, 231, 48501, 1818, 2245, -1000, -1000, -1000, -1000, 2191,
	-1000, -1000, 1872, 1681, -1000, 789, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2113, 1051, 1051, 1051,
	286, -1000, -1000, 1615, -1000, 48945, -1000, 2006, 1214, 1214,
	14708, -1000, -1000, -1000, 19202, 2194, -1000, 2020, 2018, 1957,
	-1000, -1000, 1002, 1156, 1053, -1000, -1000, 1212, -1000, -1000,
	-1000, -1000, -1000, 780, 1872, -1000, -1000, -1000, -1000, -1000,
	3364, -1000, -1000, -1000, -1000, 1253, 14066, 14066, 14066, 872,
	3364, 3870, 1706, 1542, 896, 990, 990, 948, 948, 948,
	948, 948, 1144, 1144, -1000, -1000, -1000, 1615, -1000, 1649,
	-1000, -1000, 1376, 778, -1000, -1000, -1000, -1000, -1000, -1000,
	9572, -1000, -1000, -1000, 9572, 9572, 9572, 9572, 9572, -1000,
	14708, -1000, 1615, 1649, 1649, 1649, -1000, 1118, 1391, 1619,
	1649, 928, 2244, 1649, 925, 2243, 1649, 1190, 14066, 14066,
	14066, 1649, 1649, 9572, 1152, -1000, 14708, 1615, 1649, -1000,
	1519, 1834, 1832, 1649, 1615, 1831, 1649, 1649, -171, -171,
	1615, 1649, 1615, 1649, 1649, -171, -171, -171, -171, 1649,
	1649, 1649, 1649, 1649, 1649, 1649, 1649, 1649, 1649, 1649,
	1649, 981, 37545, -1000, 1829, 317, -1000, -1000, -1000, 2161,
	32561, -1000, -1000, 39872, -1000, 1872, 1872, 981, 1798, 33807,
	-1000, -1000, 33807, 50721, 24980, -1000, 20486, -82, -133, -1000,
	-1000, 1830, -1000, -1000, 1389, -1000, -1000, 1376, -1000, 777,
	2122, 2160, 4022, 655, -1000, -1000, -1000, 1898, 299, -1000,
	2070, 876, 876, 868, 1539, 2069, -1000, -1000, 168, -28,
	-1000, -1000, -1000, 1380, -1000, 209, -1000, 1894, 1894, 355,
	1894, -1000, -1000, -1000, -1000, -1000, -1000, 1468, 1468, -1000,
	-1000, -1000, -1000, 1371, -1000, 1896, -1000, 1367, -1000, -1000,
	-1000, -1000, 168, 168, 168, 168, -1000, -1000, -1000, 1216,
	1941, 49389, -1000, 37545, -1000, -1000, -1000, 2230, -1000, -1000,
	49389, 44498, -1000, -1000, 156, 46367, 257, 516, 225, -1000,
	-1000, 713, -1000, 712, -1000, -1000, -1000, -1000, -1000, -1000,
	37545, 46367, -1000, 50277, -1000, -1000, -1000, -1000, 2225, 1557,
	1556, -1000, -1000, -1000, 1130, 1125, -1000, -1000, 14066, 46367,
	-1000, 591, -1000, -1000, -1000, 3364, -1000, -1000, -1000, 981,
	737, -1000, -1000, -74, -1000, -1000, 711, 776, 775, 48501,
	709, -1000, 166, 46367, -1000, 49389, -1000, 2242, 2241, 185,
	2239, 46367, -1000, 107, -1000, 218, -1000, 17276, 26264, 1051,
	992, -1000, 988, 1467, 1828, -1000, 878, 866, 905, 671,
	671, -1000, 1051, 671, 2104, 2103, 978, -1000, 1824, 1462,
	1460, -1000, 2004, -1000, -1000, -1000, 37545, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 24338, 9572, -1000, 872,
	3364, 3326, -1000, 14066, -1000, 9572, -1000, 17918, 1615, 1649,
	1649, 1649, 1649, 1649, 1376, -1000, -1000, -1000, -1000, 476,
	1340, 476, -1000, 1340, -1000, 14066, 14066, -1000, 14066, 14066,
	-1000, -1000, 14066, 3802, 3630, 2528, -281, -1000, 1851, 1097,
	-1000, 14708, 1268, -1000, -1000, -1000, 14066, 14066, -1000, -1000,
	-1000, -1000, -1000, 48057, -1000, -171, -171, -171, -171, -171,
	-1000, -1000, -1000, -1000, -171, -171, -171, -171, -171, -171,
	-171, -171, -171, -171, -171, -171, 214, 1872, -1000, 19844,
	33807, 33807, 33807, 33807, 33807, -1000, 1984, 1983, -1000, 1982,
	1981, 1968, 356, 42987, 1723, 1615, 580, 32561, -1000, 1872,
	-1000, 42364, 814, 734, 733, 731, 9572, 14066, 2225, 33807,
	1776, 1776, -1000, 773, -1000, -1000, -1000, -94, -106, -1000,
	-1000, -1000, 26264, -1000, -1000, -1000, 4212, 2209, 1051, 1051,
	1051, 1051, 318, 2110, 1051, 1051, 1051, 1051, 1051, -227,
	-228, 1051, 1051, 1051, 1051, 1051, 1051, 1051, 1051, 1051,
	1051, 1051, 89, 1051, 1051, 1051, 1051, 23054, 1051, -1000,
	43431, 656, 2072, 653, 1539, 1539, 1539, -1000, 1539, -1000,
	-1000, -1000, 1895, -1000, 1171, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1872, -438, 1366, 2109, 369, 2256, -1000,
	2066, -1000, 2065, 2048, 1459, -1000, -1000, 1702, 1692, 1684,
	-1000, -1000, -1000, 1894, -1000, 1716, -1000, 1701, 1822, -1000,
	1699, 115, 37545, -1000, -1000, 2155, 1940, -1000, -1000, -1000,
	-1000, 1682, 1821, -1000, 5203, 49389, 49389, 49389, -287, 282,
	-1000, 46367, 216, 240, 508, 1555, 37545, 46367, -1000, -1000,
	-1000, -1000, 14708, -1000, -1000, 2154, -1000, 3364, 1721, -1000,
	-1000, 35, 37545, -1000, 46367, 930, 47434, 705, 46367, 184,
	167, -1000, 46367, 46367, 2238, 46367, 1818, 1458, -1000, -1000,
	977, -1000, -1000, -1000, -1000, -1000, 286, 46990, 1539, 831,
	-1000, -1000, 675, -1000, 297, 1553, 31934, 31311, 49389, 2033,
	2032, 1552, 37545, 49389, -1000, -1000, 49833, 1551, 14708, 49389,
	-1000, -1000, 49389, 49389, -1000, -1000, -1000, -1000, 1234, 8288,
	-1000, -1000, 1615, -1000, 14066, 3364, -1000, -1000, 771, -1000,
	-171, -171, -171, -171, -171, 1615, 1884, 1884, -1000, 1884,
	1892, -1000, 1884, 63, 1884, 62, 1615, 1615, 1615, 3207,
	1979, 1961, 1691, 1519, 14066, 14066, 14066, 1872, -166, -1000,
	1376, 14708, 1867, 1805, -1000, -1000, 1547, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1939, 19844, 1872, 16634, -1000,
	49389, 1813, -1000, 1059, 834, 1058, 1056, 769, 764, 317,
	1891, 1935, 344, -1000, -1000, -1000, -1000, 1974, -1000, 1970,
	1959, -1000, -1000, -1000, 1879, -1000, -1000, 1820, 1872, 49389,
	14066, 814, -1000, 1872, 1872, 1872, 1615, 1727, 2212, 1776,
	-1000, -1000, 929, -1000, -1000, -1000, -1000, 158, 401, 401,
	401, 1340, 1051, 2108, 1051, 1051, 1365, 27548, 1456, 1455,
	1451, 1051, 1051, 1357, 1450, 27548, 1449, 636, 401, 401,
	401, 1356, 1447, 243, -1000, 1441, 1352, 1351, 401, -1000,
	-245, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 401,
	1697, -1000, 1884, 1884, 2031, -1000, 876, -1000, -1000, -1000,
	-1000, -1000, 49389, -1000, 14066, 2153, -1000, 975, -1000, 1498,
	-1000, 1872, 1872, 1872, 1872, 14066, -1000, -1000, -122, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1439, -1000,
	1353, -1000, 1341, -1000, -1000, -381, 1883, 220, -1000, 37545,
	143, 44498, -1000, 5203, 5203, 5203, 193, 171, -1000, 1129,
	-1000, -1000, -1000, 1427, 1425, 1422, 1721, 255, 1126, 222,
	-1000, 2150, -1000, -1000, 1376, 1125, -62, -1000, -1000, 167,
	-1000, -1000, -1000, 46367, 167, -1000, -1000, 226, 1818, 1818,
	46367, 1818, -1000, -1000, -1000, -1000, 49833, 631, 5203, 5203,
	1911, 876, 2030, 653, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1546, -1000, 881, -1000,
	704, 631, 49833, 1376, 909, 1139, -1000, 2237, -1000, -1000,
	-1000, 3364, 23696, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	386, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	14066, 14066, 14066, 14066, -1000, 1519, 1519, 1519, 14066, 1615,
	1420, 1376, 14066, 14066, 953, -1000, -1000, 2140, 1739, 1815,
	-1000, -1000, 8930, 1615, 2015, 1681, -1000, 41118, 1662, -1000,
	2212, 19844, 14708, 14708, 14708, 14708, -1000, -1000, 14708, 1882,
	-1000, 14708, -1000, -1000, -1000, -1000, -1000, 49389, 526, -1000,
	14708, 1662, 1614, -1000, 49389, 49389, 49389, -1000, 1413, 2195,
	-1000, -257, -1000, 316, 301, 221, -1000, -1000, -1000, -1000,
	-1000, 1340, 1051, 27548, 1340, -1000, -1000, -1000, -1000, -1000,
	1412, 1411, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -248, -1000, 810,
	43431, 2139, 2139, 1539, 1539, 1660, -1000, 1519, 1872, -1000,
	-1000, -1000, -1000, 7646, -1000, 7646, -1000, 7646, 7646, 1519,
	-1000, 1872, 1872, 1872, 1872, 1872, 1872, 1872, 1872, 1872,
	1872, 1872, -1000, 1657, 1652, -1000, 43431, -1000, -1000, 2189,
	-1000, 143, -1000, 1410, 434, 442, -1000, 429, 424, 423,
	358, 331, -1000, -1000, -1000, -1000, 451, 193, -1000, -88,
	1302, 1030, 2102, 171, -1000, 1298, 1286, 1280, 1274, 294,
	-1000, -1000, -1000, -1000, 224, 240, -1000, 500, 1403, -1000,
	2088, 2086, 2152, 167, 2152, 183, 1818, 1636, -1000, -1000,
	1543, -1000, -1000, 1881, 1539, 1539, -1000, 1538, -1000, -1000,
	49389, -1000, 631, 2134, 2133, 1872, 2225, 33184, 8288, -1000,
	-1000, -1000, -1000, 1519, 1519, 1519, 1519, -1000, -1000, -1000,
	188, -1000, -1000, 1519, 1519, 2212, 2208, 2023, -1000, 1872,
	-1000, -1000, 1872, 215, -1000, 49389, 2195, -1000, 1376, 1376,
	1376, 1376, 1376, 49389, 1376, 1651, 1872, 40495, -1000, 42987,
	1621, 1621, 1621, -66, -1000, -266, 1273, 27548, 1872, 27548,
	1872, 1872, 541, -1000, 1340, -1000, -1000, -1000, -1000, -1000,
	-1000, 810, -1000, 27548, 1051, 1402, -1000, -1000, -1000, -1000,
	-1000, 637, 49389, -441, 14066, 1649, 1649, 1649, -1000, 1649,
	-1000, -1000, -1000, 1647, -1000, 220, 583, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2093, 2091, 453, -1000, 1401, 1400,
	-1000, 509, 1260, 843, -184, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 454, 1521, -1000, 219,
	-1000, -1000, 701, 2075, 2079, 2207, -1000, 46367, 2152, -1000,
	-1000, -1000, -1000, 168, 168, 43431, 1911, 1880, -1000, -1000,
	-1000, 14066, -1000, 949, 2221, -1000, 1817, -1000, -1000, -1000,
	-1000, -1000, 1615, 194, -302, -1000, -1000, 1010, 14708, 2255,
	-1000, 1815, 1872, -1000, 220, -1000, -1000, 1645, -1000, -1000,
	-1000, 814, -1000, -1000, -1000, 1872, 1872, 2206, -1000, 1615,
	49389, 1615, 49389, 1944, 49389, 1012, -1000, -1000, -1000, 1263,
	-1000, 37545, -1000, -1000, -1000, -1000, 1519, -1000, -1000, -1000,
	-1000, 810, -1000, 486, 53797, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1262, -1000, -1000, 1255, 485, 217, -1000,
	2151, -1000, 1879, 1258, 2086, 2205, 2084, 2081, -1000, 1399,
	-289, -1000, 1639, 1876, 43431, 3364, 1629, -1000, 49389, 2219,
	2204, -1000, -1000, 1999, -284, -306, 1615, 254, 254, 1816,
	19844, 1815, 1615, -1000, -1000, 26264, 949, -352, -1000, 1621,
	-1000, 1621, 1615, 1615, 1621, 1252, -1000, 1874, -441, -1000,
	810, -1000, 465, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 14708, 14708, 26906, 1518, 1515, 53797, 1608,
	1514, 1511, 2063, 53797, 202, -1000, 197, -1000, -1000, -1000,
	1398, -1000, 1041, -1000, 1397, -1000, 2201, 2198, -1000, 229,
	810, 43431, 1635, -1000, 949, 2013, -175, 14708, 14708, -1000,
	1992, -1000, -1000, -1000, 228, -1000, 984, 470, 969, -1000,
	1498, -1000, 1809, -1000, 1631, -1000, 5203, 1629, -273, -1000,
	-1000, -1000, -1000, -1000, 1872, 49389, -1000, -1000, 1506, 1497,
	-1000, 1256, 1141, 329, 285, 5118, -1000, -1000, -1000, -1000,
	-1000, -1000, -447, -1000, 275, -1000, -1000, 1496, -1000, 2232,
	-448, -1000, -1000, -1000, -1000, -1000, -1000, 1395, 1393, 44054,
	-1000, 1626, 810, -1000, 612, -1000, 49389, -1000, 1376, 1808,
	-1000, 1376, -291, 1120, -1000, -1000, -1000, -1000, -1000, 49389,
	1615, 26264, 253, -1000, -1000, 1251, 49389, 1623, -1000, -1000,
	-1000, 1069, -1000, 14708, 53797, 2188, 2177, 2164, 35, 26264,
	53701, 53797, 1128, -1000, 53569, -1000, -1000, -1000, -1000, 180,
	1721, 810, -1000, 610, 1806, -1000, 2149, 14708, -303, 228,
	-1000, 41741, -1000, -1000, 1217, -218, -1000, 1621, 1933, 198,
	1110, 53797, -1000, 1132, -449, 557, 220, 634, 886, -1000,
	274, -1000, -450, 1488, -1000, 46367, -1000, 1872, 49389, 1872,
	-1000, -316, -1000, 42987, -1000, -1000, 1191, -1000, 1919, 1918,
	2236, -1000, -1000, -1000, -1000, -1000, -1000, 53797, 41118, -1000,
	-452, 53797, 5754, -1000, -1000, -1000, 53409, -1000, -1000, -1000,
	-1000, 283, -1000, -1000, 2123, -1000, 7059, 1729, -1000, 1721,
	15350, -1000, -1000, -1000, -1000, 452, -1000, -1000, 2254, -1000,
	2252, 842, 842, -1000, -453, -1000, 6899, -454, 685, 53797,
	1181, -1000, 14708, -1000, 6718, 634, -1000, 14066, 264, 1486,
	1519, 1615, -1000, 1917, 14066, 1893, -1000, -1000, -1000, 662,
	1224, -1000, 6349, 1107, 53797, -1000, -455, 684, 53797, -1000,
	1073, -1000, -1000, 3364, 1483, -1000, -1000, -1000, -330, 1264,
	-334, -1000, -1000, -1000, -1000, -1000, 6323, -1000, -458, 53797,
	-1000, -1000, -335, -1000, 680, 5876, -462, -1000, -1000, 677,
	53797, -1000,
}

var yyPgo = [...]int{
	0, 2692, 2691, 20, 171, 2690, 273, 2689, 2688, 43,
	2687, 44, 35, 23, 48, 2686, 2355, 2339, 2335, 2331,
	2329, 2685, 12, 2684, 2683, 2326, 2681, 2680, 2324, 2679,
	2678, 2672, 2671, 2670, 2668, 2322, 2320, 2315, 2666, 2665,
	2664, 2309, 2307, 2305, 14, 2663, 32, 2662, 3, 2646,
	145, 176, 2643, 2, 2641, 2635, 11, 2634, 2632, 2303,
	2629, 2628, 2627, 2625, 105, 2624, 2301, 2297, 2623, 2292,
	2290, 2288, 2286, 2283, 167, 2621, 2274, 2272, 2270, 2620,
	2013, 178, 352, 174, 187, 2619, 2618, 2617, 161, 2616,
	149, 2615, 2614, 345, 114, 2613, 263, 110, 75, 120,
	157, 2610, 22, 70, 274, 2603, 6, 2591, 129, 2590,
	121, 2583, 2578, 169, 2577, 141, 153, 96, 2576, 2575,
	166, 2572, 2571, 2569, 109, 2568, 2567, 182, 450, 2566,
	2565, 137, 2564, 60, 183, 52, 65, 2562, 99, 2558,
	2557, 2556, 34, 168, 2555, 106, 146, 2554, 2553, 94,
	2552, 2550, 245, 2549, 2546, 2545, 140, 54, 2544, 2543,
	56, 2542, 123, 64, 2541, 62, 2540, 139, 2535, 2533,
	2531, 2530, 2529, 67, 2528, 68, 2527, 143, 170, 1622,
	2526, 2525, 9, 10, 2524, 46, 18, 4, 55, 30,
	76, 61, 133, 116, 97, 2522, 31, 51, 122, 95,
	2521, 175, 131, 98, 82, 40, 2520, 150, 2519, 78,
	159, 138, 142, 154, 2518, 2517, 2510, 188, 2508, 125,
	93, 2506, 101, 1326, 181, 2504, 2502, 100, 2500, 2493,
	2492, 2491, 2485, 77, 118, 2484, 186, 184, 177, 130,
	2481, 684, 3913, 3968, 164, 4102, 28, 155, 2480, 58,
	2479, 2478, 2474, 3289, 115, 7, 128, 179, 2472, 113,
	47, 72, 2471, 2465, 2460, 2456, 2453, 2452, 2451, 2450,
	180, 108, 2449, 2447, 2446, 2445, 27, 26, 25, 15,
	2442, 163, 162, 152, 2441, 151, 42, 2439, 2438, 135,
	111, 2435, 2433, 2431, 2430, 132, 79, 148, 29, 2429,
	127, 124, 160, 2428, 87, 2427, 2426, 134, 190, 2425,
	2424, 2422, 2421, 112, 104, 2420, 2419, 2418, 39, 2417,
	2416, 2414, 2413, 2408, 86, 37, 38, 88, 19, 2407,
	2406, 91, 92, 41, 33, 2405, 5, 16, 8, 2404,
	2403, 2400, 2399, 2396, 2394, 2393, 90, 2392, 2391, 69,
	2390, 2385, 2384, 50, 2381, 2379, 2377, 144, 119, 53,
	165, 107, 17, 2376, 2375, 13, 2373, 136, 2372, 80,
	2371, 66, 2367, 2365, 63, 2364, 2363, 71, 2362, 2359,
	172, 1681, 488, 2353, 147, 117, 57, 59, 2350, 102,
	2333, 0, 1880, 156, 2318, 782, 2299, 2294, 2276,
}

var yyR1 = [...]int{
	0, 390, 390, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 79,
	3, 3, 9, 10, 4, 4, 5, 5, 106, 106,
	6, 105, 105, 105, 203, 203, 203, 203, 200, 200,
	107, 107, 104, 104, 113, 7, 7, 8, 8, 11,
	11, 87, 87, 12, 13, 13, 13, 13, 393, 393,
	122, 122, 120, 120, 121, 121, 198, 198, 14, 14,
	14, 207, 207, 212, 212, 212, 215, 215, 215, 215,
	187, 188, 189, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 363, 363, 372, 372, 372,
	373, 373, 371, 371, 371, 371, 371, 375, 375, 376,
	376, 374, 374, 374, 374, 378, 378, 379, 379, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 366, 366, 366, 41, 41, 41, 41,
	41, 42, 42, 42, 42, 42, 42, 380, 380, 380,
	380, 380, 380, 380, 380, 380, 380, 380, 380, 380,
	380, 380, 380, 380, 380, 380, 380, 380, 380, 380,
	380, 380, 380, 380, 380, 380, 380, 380, 381, 381,
	382, 382, 383, 383, 384, 384, 384, 384, 385, 385,
	385, 385, 385, 386, 386, 386, 386, 386, 386, 386,
	387, 387, 388, 388, 2, 344, 344, 345, 345, 346,
	346, 346, 346, 347, 347, 348, 348, 349, 349, 349,
	349, 349, 349, 349, 349, 349, 349, 26, 238, 238,
	235, 235, 235, 236, 236, 237, 237, 237, 365, 365,
	365, 359, 359, 359, 361, 361, 360, 360, 360, 362,
	362, 367, 367, 367, 367, 367, 369, 369, 369, 369,
	369, 369, 370, 370, 370, 368, 368, 57, 57, 58,
	58, 58, 176, 176, 176, 15, 15, 15, 15, 15,
	21, 23, 23, 45, 45, 46, 24, 24, 24, 24,
	47, 47, 48, 27, 27, 27, 27, 27, 27, 27,
	55, 55, 55, 54, 54, 53, 53, 53, 53, 53,
	53, 29, 30, 31, 394, 394, 394, 49, 49, 32,
	32, 32, 33, 34, 25, 25, 25, 25, 56, 56,
	51, 51, 50, 52, 52, 52, 52, 52, 52, 52,
	52, 52, 52, 52, 52, 28, 28, 28, 28, 28,
	28, 20, 343, 343, 343, 44, 44, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 62, 62, 309, 310,
	310, 310, 310, 310, 310, 310, 310, 296, 296, 297,
	297, 297, 297, 297, 286, 286, 286, 261, 261, 261,
	261, 261, 261, 261, 261, 261, 261, 261, 261, 261,
	261, 260, 260, 260, 260, 266, 266, 264, 264, 264,
	264, 264, 264, 264, 264, 264, 264, 265, 265, 265,
	265, 265, 265, 265, 265, 267, 267, 267, 267, 267,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 269, 269, 269, 269, 269,
	269, 269, 269, 295, 295, 271, 271, 270, 270, 270,
	289, 289, 290, 290, 290, 287, 287, 287, 288, 288,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 275, 291, 276, 276, 277, 277, 278, 278,
	279, 279, 280, 280, 285, 285, 284, 284, 284, 284,
	284, 284, 281, 281, 281, 281, 282, 282, 283, 294,
	294, 294, 294, 294, 272, 43, 329, 329, 329, 329,
	329, 329, 329, 329, 329, 329, 329, 329, 330, 330,
	229, 229, 230, 230, 299, 299, 328, 328, 327, 327,
	326, 326, 326, 308, 308, 323, 323, 323, 323, 323,
	323, 323, 323, 303, 303, 303, 302, 302, 304, 304,
	307, 307, 325, 325, 324, 324, 300, 300, 300, 331,
	331, 331, 331, 331, 301, 301, 301, 301, 301, 332,
	305, 305, 306, 306, 306, 337, 338, 336, 336, 336,
	336, 336, 139, 139, 139, 312, 312, 312, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 314, 314,
	314, 314, 314, 315, 315, 315, 315, 315, 315, 389,
	389, 389, 316, 316, 316, 317, 317, 317, 317, 317,
	318, 318, 318, 318, 319, 319, 320, 320, 321, 321,
	322, 322, 341, 341, 340, 340, 59, 59, 61, 61,
	60, 65, 65, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 175, 175, 175, 234, 234,
	335, 333, 333, 334, 334, 17, 17, 63, 63, 364,
	364, 18, 18, 18, 18, 18, 18, 18, 18, 18,
	339, 339, 339, 19, 19, 66, 69, 69, 201, 201,
	202, 202, 70, 70, 70, 70, 71, 71, 71, 71,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 101, 221, 221, 220, 220,
	219, 219, 219, 222, 222, 222, 222, 258, 258, 258,
	68, 68, 68, 80, 80, 75, 75, 78, 78, 78,
	81, 81, 82, 82, 83, 83, 76, 77, 35, 36,
	36, 36, 36, 37, 73, 73, 73, 74, 74, 74,
	74, 93, 93, 396, 396, 396, 72, 397, 84, 85,
	85, 86, 86, 86, 225, 225, 90, 90, 90, 88,
	88, 88, 89, 89, 95, 95, 99, 99, 99, 99,
	98, 98, 98, 98, 178, 178, 183, 250, 250, 159,
	159, 179, 179, 184, 184, 184, 185, 185, 186, 186,
	186, 186, 186, 181, 181, 180, 180, 182, 147, 147,
	248, 248, 248, 248, 247, 247, 247, 247, 247, 247,
	103, 103, 108, 108, 110, 110, 110, 110, 110, 110,
	114, 161, 161, 132, 132, 133, 133, 133, 133, 133,
	145, 145, 197, 197, 196, 196, 199, 199, 109, 111,
	111, 111, 111, 117, 117, 118, 118, 119, 119, 233,
	233, 255, 255, 255, 123, 123, 123, 125, 124, 124,
	124, 124, 124, 124, 126, 126, 112, 112, 311, 311,
	298, 262, 262, 263, 398, 398, 398, 398, 127, 127,
	129, 130, 130, 128, 128, 128, 128, 128, 134, 134,
	131, 135, 135, 135, 135, 136, 136, 100, 100, 100,
	100, 100, 100, 100, 100, 218, 218, 138, 138, 137,
	137, 137, 137, 137, 137, 137, 137, 137, 137, 155,
	155, 155, 155, 155, 155, 140, 140, 140, 140, 140,
	140, 140, 94, 94, 156, 156, 156, 116, 115, 115,
	97, 97, 96, 96, 157, 157, 143, 143, 143, 143,
	143, 143, 143, 143, 143, 143, 143, 143, 143, 143,
	143, 143, 143, 143, 143, 143, 143, 143, 143, 143,
	143, 143, 143, 143, 143, 143, 143, 143, 143, 143,
	143, 143, 150, 150, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 149, 149,
	149, 149, 149, 149, 149, 149, 149, 149, 149, 149,
	149, 149, 149, 149, 149, 395, 395, 152, 151, 151,
	151, 151, 151, 151, 91, 91, 91, 91, 91, 256,
	256, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 257, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 168, 168, 92, 92,
	166, 166, 167, 169, 169, 165, 165, 165, 165, 165,
	165, 165, 165, 165, 165, 165, 165, 165, 165, 142,
	142, 142, 142, 142, 142, 142, 142, 144, 144, 144,
	170, 170, 158, 158, 102, 171, 171, 172, 173, 173,
	174, 174, 177, 190, 190, 190, 191, 191, 191, 191,
	146, 146, 192, 192, 192, 141, 141, 141, 141, 141,
	141, 141, 195, 195, 194, 194, 193, 193, 193, 193,
	193, 193, 204, 204, 160, 160, 163, 163, 162, 164,
	205, 205, 209, 209, 209, 209, 206, 206, 210, 210,
	210, 210, 213, 213, 214, 214, 214, 211, 211, 211,
	208, 208, 208, 252, 252, 252, 216, 216, 226, 226,
	223, 223, 224, 224, 217, 217, 273, 273, 273, 232,
	232, 231, 231, 231, 227, 227, 227, 228, 228, 249,
	249, 245, 245, 251, 251, 246, 246, 253, 253, 254,
	254, 342, 342, 292, 292, 352, 352, 293, 293, 353,
	353, 355, 355, 350, 350, 351, 351, 354, 354, 38,
	356, 356, 357, 357, 358, 358, 358, 358, 39, 40,
	40, 40, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 244, 244, 244, 244, 244, 244,
	242, 242, 242, 242, 242, 391, 392,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 11,
	5, 7, 1, 5, 1, 3, 1, 3, 2, 1,
	13, 0, 2, 2, 0, 2, 3, 3, 1, 3,
	0, 2, 1, 3, 4, 1, 3, 1, 3, 8,
	9, 1, 1, 10, 9, 8, 7, 7, 1, 1,
	1, 3, 1, 3, 1, 3, 0, 4, 3, 4,
	5, 1, 3, 3, 2, 2, 2, 2, 2, 1,
	0, 0, 0, 2, 3, 3, 11, 9, 11, 5,
	5, 16, 12, 9, 4, 0, 3, 0, 2, 2,
	1, 3, 1, 1, 2, 2, 2, 0, 2, 1,
	2, 2, 2, 2, 2, 0, 1, 1, 2, 3,
	3, 5, 3, 3, 4, 5, 4, 4, 2, 2,
	2, 2, 2, 0, 2, 2, 9, 10, 9, 5,
	7, 7, 7, 7, 8, 4, 6, 2, 3, 2,
	3, 3, 3, 4, 3, 3, 2, 2, 3, 2,
	2, 2, 2, 2, 3, 2, 2, 2, 3, 3,
	2, 3, 3, 2, 2, 2, 2, 2, 1, 3,
	0, 3, 1, 3, 0, 1, 1, 1, 1, 3,
	1, 3, 3, 0, 2, 5, 5, 5, 7, 5,
	0, 3, 0, 3, 4, 0, 1, 1, 3, 2,
	3, 3, 3, 0, 1, 1, 2, 2, 2, 2,
	1, 2, 2, 3, 3, 3, 3, 4, 2, 3,
	3, 3, 3, 0, 3, 0, 3, 3, 1, 1,
	1, 3, 2, 1, 1, 3, 3, 2, 1, 1,
	3, 1, 2, 5, 4, 6, 4, 3, 3, 6,
	5, 5, 4, 3, 5, 1, 3, 1, 1, 1,
	1, 1, 0, 2, 2, 1, 1, 1, 1, 1,
	4, 5, 8, 1, 2, 5, 7, 10, 8, 11,
	1, 2, 5, 5, 5, 5, 6, 7, 5, 7,
	1, 1, 1, 1, 3, 1, 1, 1, 2, 1,
	1, 2, 2, 5, 0, 1, 2, 1, 3, 5,
	7, 8, 2, 2, 2, 4, 2, 4, 2, 3,
	1, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 4, 3, 2,
	4, 3, 0, 2, 3, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 5, 5, 5, 1,
	1, 2, 3, 4, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 0, 1, 1, 0, 2, 3,
	2, 2, 2, 2, 2, 2, 2, 2, 6, 8,
	3, 3, 1, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 3,
	2, 2, 2, 2, 2, 1, 2, 2, 2, 1,
	2, 2, 3, 3, 2, 2, 3, 2, 3, 4,
	2, 2, 1, 1, 1, 1, 1, 2, 1, 1,
	1, 1, 1, 4, 4, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 3, 0, 3, 3,
	0, 5, 0, 3, 5, 0, 1, 1, 0, 1,
	2, 3, 2, 3, 5, 3, 5, 3, 5, 4,
	5, 4, 3, 1, 0, 1, 3, 3, 0, 1,
	2, 2, 0, 1, 0, 1, 1, 1, 1, 2,
	2, 2, 5, 5, 4, 4, 4, 4, 4, 2,
	1, 2, 1, 2, 2, 3, 2, 2, 2, 2,
	1, 1, 1, 1, 3, 2, 1, 1, 0, 3,
	1, 1, 0, 1, 5, 4, 0, 1, 1, 2,
	2, 3, 2, 0, 1, 3, 5, 3, 3, 5,
	3, 2, 2, 1, 1, 1, 1, 1, 0, 1,
	0, 1, 1, 3, 3, 3, 3, 3, 1, 10,
	11, 11, 12, 12, 3, 3, 3, 2, 1, 5,
	1, 1, 0, 2, 2, 3, 3, 1, 1, 2,
	2, 2, 0, 1, 2, 0, 2, 3, 3, 3,
	3, 3, 4, 4, 5, 3, 3, 4, 3, 3,
	3, 4, 4, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 3, 3, 3,
	3, 3, 3, 2, 2, 4, 4, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 5, 8, 1, 4, 5, 4, 5,
	5, 5, 5, 8, 0, 1, 0, 2, 0, 4,
	0, 2, 0, 2, 0, 2, 1, 1, 4, 3,
	5, 1, 3, 5, 4, 3, 5, 3, 8, 10,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 5, 4, 5, 1, 2, 2, 4, 3, 6,
	5, 3, 9, 2, 2, 0, 1, 2, 0, 1,
	7, 1, 3, 8, 8, 3, 3, 3, 5, 3,
	5, 5, 5, 4, 4, 4, 4, 4, 4, 4,
	0, 1, 1, 3, 2, 3, 4, 4, 1, 3,
	1, 1, 2, 2, 4, 4, 3, 3, 3, 3,
	3, 4, 3, 5, 5, 5, 4, 4, 4, 3,
	2, 2, 6, 2, 4, 4, 4, 5, 8, 6,
	3, 5, 4, 2, 4, 3, 2, 4, 5, 6,
	2, 6, 6, 3, 3, 3, 0, 1, 1, 1,
	0, 2, 2, 0, 2, 3, 2, 0, 1, 1,
	2, 4, 1, 0, 1, 2, 1, 2, 4, 4,
	0, 1, 0, 3, 0, 2, 4, 4, 2, 3,
	4, 4, 5, 3, 3, 4, 3, 1, 1, 1,
	1, 0, 3, 1, 1, 1, 3, 0, 2, 0,
	2, 1, 2, 2, 0, 1, 0, 1, 1, 0,
	1, 1, 0, 1, 3, 5, 1, 1, 3, 5,
	1, 2, 3, 5, 2, 2, 6, 0, 1, 0,
	3, 0, 1, 0, 2, 2, 4, 1, 2, 2,
	2, 2, 2, 0, 2, 1, 3, 3, 1, 3,
	0, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 1, 1, 4, 1, 3, 1, 1,
	2, 2, 4, 2, 6, 1, 4, 6, 3, 2,
	0, 3, 0, 3, 1, 3, 1, 3, 4, 4,
	4, 4, 3, 2, 4, 0, 1, 0, 2, 0,
	1, 1, 1, 1, 1, 2, 2, 1, 2, 3,
	2, 3, 3, 2, 2, 2, 12, 11, 1, 3,
	3, 4, 3, 0, 0, 3, 4, 3, 1, 3,
	3, 2, 1, 1, 3, 1, 1, 1, 1, 3,
	3, 0, 5, 5, 5, 0, 2, 1, 3, 3,
	3, 2, 3, 1, 2, 0, 3, 1, 1, 3,
	3, 4, 4, 5, 3, 4, 5, 6, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 0, 2, 1, 1, 1, 3, 1, 3,
	0, 1, 1, 3, 1, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 2, 2, 2, 2, 3, 1, 1, 1, 1,
	1, 1, 5, 6, 6, 6, 5, 5, 5, 6,
	5, 5, 6, 5, 5, 5, 5, 6, 5, 5,
	5, 4, 4, 5, 5, 5, 5, 5, 4, 4,
	4, 4, 4, 4, 4, 4, 3, 6, 6, 4,
	6, 6, 4, 8, 8, 8, 8, 4, 6, 7,
	7, 7, 9, 4, 7, 5, 4, 4, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 8, 8, 0, 2, 3, 4, 4,
	4, 4, 4, 4, 0, 3, 4, 7, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 3, 3, 1, 2, 2, 1,
	2, 1, 2, 2, 1, 2, 0, 1, 0, 2,
	1, 2, 4, 0, 2, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	0, 3, 1, 3, 1, 0, 2, 1, 0, 3,
	1, 3, 2, 0, 1, 1, 0, 2, 4, 4,
	1, 1, 0, 2, 4, 2, 4, 1, 3, 5,
	4, 6, 0, 3, 1, 3, 3, 1, 1, 1,
	1, 1, 0, 5, 1, 3, 1, 2, 3, 1,
	1, 3, 3, 3, 3, 3, 1, 3, 1, 2,
	2, 3, 1, 1, 1, 1, 1, 3, 3, 3,
	1, 2, 1, 1, 1, 1, 1, 1, 0, 1,
	0, 2, 0, 3, 0, 1, 0, 3, 3, 1,
	1, 0, 1, 1, 1, 1, 1, 0, 1, 0,
	2, 1, 1, 1, 3, 1, 1, 1, 1, 1,
	1, 0, 2, 0, 1, 0, 4, 0, 1, 0,
	3, 0, 3, 0, 4, 0, 3, 0, 3, 3,
	1, 3, 2, 4, 1, 2, 1, 2, 2, 2,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -390, -1, -3, -10, -11, -12, -13, -14, -16,
	-59, -17, -18, -19, -66, -69, -70, -71, -67, -68,
	-75, -76, -77, -73, -72, -25, -28, -20, -79, -35,
	-36, -37, -38, -39, -40, -41, -42, -43, -5, 6,
	7, -107, 29, -62, 181, -61, -60, 184, 183, 220,
	185, 527, 332, 528, 213, 64, 350, -78, 353, 354,
	-396, 272, 273, 20, 37, 355, 357, 30, 31, 235,
	295, 297, 322, -4, 533, 182, 351, 215, 214, 26,
	-6, -7, -391, 68, 647, -173, 15, -84, -397, -84,
	-87, 9, 10, 8, 452, -84, -309, -233, 109, 68,
	23, -228, -238, 89, 443, 189, -236, 291, 293, -226,
	-227, -235, 245, 255, 44, 200, 199, 256, 190, 291,
	190, 191, 193, 443, 189, 228, 227, 291, 293, 527,
	190, -128, -253, -242, -243, 309, 73, -241, 469, 473,
	476, 477, 482, 299, 82, 331, 332, 323, 333, 210,
	421, 292, 298, 301, 324, 614, 334, 336, 337, 463,
	464, 193, 203, 632, 316, 211, 530, 256, 642, 635,
	303, 411, 500, 350, 367, 359, 382, 531, 585, 267,
	358, 349, 428, 501, 306, 260, 329, 586, 287, 417,
	423, 270, 353, 521, 519, 502, 437, 236, 587, 264,
	266, 265, 250, 468, 271, 36, 216, 378, 312, 528,
	245, 588, 504, 581, 503, 239, 516, 35, 27, 518,
	238, 440, 100, 589, 340, 425, 505, 399, 341, 234,
	590, 535, 310, 222, 424, 374, 322, 118, 243, 282,
	342, 591, 400, 404, 592, 429, 296, 281, 523, 593,
	594, 343, 595, 192, 302, 506, 596, 246, 431, 307,
	398, 201, 532, 212, 48, 225, 432, 402, 522, 408,
	597, 339, 598, 599, 600, 601, 320, 318, 507, 319,
	321, 257, 262, 508, 53, 187, 406, 405, 407, 263,
	427, 387, 385, 602, 603, 311, 207, 442, 604, 605,
	386, 18, 606, 607, 435, 286, 314, 608, 609, 610,
	509, 524, 499, 611, 612, 426, 401, 403, 244, 117,
	527, 613, 317, 422, 326, 534, 300, 520, 615, 345,
	224, 218, 436, 335, 616, 617, 618, 619, 620, 294,
	293, 354, 327, 510, 355, 268, 621, 622, 511, 623,
	624, 254, 237, 439, 430, 52, 413, 625, 330, 346,
	416, 351, 231, 512, 513, 514, 515, 7, 261, 308,
	525, 526, 420, 328, 269, 255, 258, 389, 226, 626,
	627, 376, 377, 352, 229, 220, 112, 438, 580, 291,
	347, 51, 232, 628, 629, 259, 233, 356, 305, 379,
	190, 73, -241, 73, -241, 527, 134, 383, 428, 181,
	418, 419, 425, -303, 426, 227, 230, -258, 190, -221,
	417, 296, 317, 473, 233, 234, 191, 192, 32, 430,
	429, 421, -253, -80, 356, -80, -80, 194, 356, -93,
	222, 185, -128, 221, -56, 73, 274, -56, 29, 73,
	-134, -245, -253, 73, -241, 36, 73, 355, 420, 420,
	76, 534, 236, 21, -381, -362, 326, -380, -360, 182,
	181, 10, 183, 331, 332, 333, 191, 8, 30, 614,
	208, 334, 335, 6, 213, 336, 337, 228, 9, 338,
	-365, 75, 73, -241, 21, -381, -362, 326, -230, -229,
	348, 408, -106, 584, -104, -113, -255, -253, -242, 75,
	443, -217, 195, 352, -86, 5, -9, -3, 533, -191,
	17, 16, -90, 54, 55, -85, -98, 125, -100, -253,
	-137, 92, -143, 28, 24, -142, 309, 221, -138, -165,
	-242, -164, -116, 134, -257, 123, 124, 131, 93, 177,
	-150, -148, -149, -151, -153, -154, 75, 74, 83, 76,
	77, 78, 79, 84, 85, 86, -245, -243, -240, 469,
	473, 476, 477, 482, -162, -391, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 58, 59,
	467, 189, 453, 454, 380, 8, 455, 456, 457, 529,
	210, 461, 95, 47, 569, 441, 451, 450, 449, 447,
	448, 444, 446, 445, 463, 464, 196, 443, 129, 452,
	486, 487, 488, 489, 490, 491, 492, 493, 495, 496,
	494, 470, 471, 472, 474, 475, 478, 479, 480, 481,
	483, 484, 485, 536, 186, 182, 185, 91, 23, 25,
	537, 242, 94, 365, 394, 460, 16, 20, 204, 188,
	383, 202, 133, 198, 205, 276, 278, 181, 62, 538,
	277, 418, 539, 540, 541, 542, 373, 371, 275, 543,
	10, 26, 214, 249, 544, 369, 183, 240, 98, 99,
	545, 41, 40, 315, 279, 215, 285, 370, 546, 547,
	19, 65, 206, 11, 200, 230, 641, 548, 295, 13,
	116, 14, 549, 550, 551, 552, 195, 111, 191, 631,
	60, 247, 553, 363, 554, 555, 556, 557, 558, 364,
	88, 559, 560, 108, 290, 56, 498, 32, 235, 582,
	458, 289, 561, 38, 37, 393, 397, 392, 288, 409,
	109, 17, 30, 562, 563, 223, 396, 362, 391, 583,
	564, 565, 252, 63, 348, 372, 645, 33, 66, 219,
	344, 313, 42, 89, 15, 248, 61, 34, 465, 113,
	646, 375, 197, 227, 567, 433, 251, 568, 114, 368,
	584, 208, 110, 357, 184, 325, 273, 209, 570, 297,
	571, 241, 115, 419, 572, 573, 462, 29, 213, 272,
	361, 199, 574, 253, 284, 274, 283, 575, 576, 304,
	43, 643, 630, 190, 39, 97, 395, 360, 390, 194,
	459, 228, 280, 5, 44, 31, 414, 9, 338, 64,
	67, 384, 381, 577, 388, 644, 12, 578, 466, 533,
	434, 90, 579, 415, -84, -84, -84, -206, 352, -213,
	-210, 429, 430, -211, -214, -208, -165, 408, 611, 612,
	428, 383, 427, -245, -253, -242, 309, 221, 134, 470,
	471, 472, 95, 380, 453, 486, 444, 446, 441, 445,
	443, 28, 487, 24, 86, 488, 467, 196, 8, 177,
	474, 475, 489, 490, 491, 58, 447, 448, 529, 129,
	92, 492, 493, 84, 495, 496, 569, 452, 59, 494,
	189, 480, 479, 478, 481, 455, 456, 85, 449, 450,
	451, 47, 484, 483, 485, -2, -6, 6, -128, -310,
	-297, -301, -245, -242, -243, -244, 217, 205, -332, 73,
	-241, 309, 221, 50, 87, 55, 54, 202, 191, 193,
	452, -224, 196, -224, 228, 227, -237, 253, -224, -224,
	190, -236, 101, 101, -63, -128, -364, -359, -365, -223,
	196, -245, -223, -223, -223, -223, -223, -223, -223, 73,
	-241, -128, 178, -120, -128, 11, 11, 67, 67, 73,
	-241, 73, 29, -222, 109, 12, 443, 189, 190, 227,
	228, 193, -222, -305, 11, 111, 231, 231, 231, 232,
	231, -220, 420, 422, 229, 423, 424, 12, -101, 109,
	19, -391, -191, -191, 126, -82, 91, -82, 73, 355,
	194, -74, -3, -13, -11, -12, -93, -9, -145, 23,
	101, 29, 29, 75, 51, 29, -51, -50, -52, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 270,
	271, 29, -343, 68, 178, -292, 408, 73, -356, -357,
	-128, 76, 76, 66, 317, 66, 69, 194, 69, 66,
	-382, 327, 68, -382, 293, 327, 328, 255, 291, 193,
	-382, -382, 293, -382, -382, -382, -382, -382, 420, -382,
	-382, -382, 329, 330, -382, 418, 193, -382, -382, -382,
	-382, -382, 71, 66, 69, 317, 66, 11, 66, -329,
	134, 340, 341, 342, 343, 339, 317, 344, 345, 346,
	231, 347, -4, -104, 69, -195, -391, 73, -285, -284,
	-281, -282, -283, -280, 28, 190, 433, -8, -6, -391,
	21, 22, -392, 70, -106, -192, 19, 30, -146, 76,
	79, -174, -177, -100, -253, 50, -88, 21, 22, 81,
	11, -248, 91, 89, 90, 108, -247, 23, 73, -241,
	-242, 75, -243, -244, 178, -100, -140, 111, 92, 109,
	110, 94, 120, 119, 130, 123, 124, 125, 126, 127,
	128, 129, 121, 122, 133, 101, 102, 103, 104, 105,
	106, 107, -218, -391, -116, -391, 178, -391, 178, 179,
	180, 178, -143, -143, -143, -143, -143, -143, -143, -391,
	178, 178, -391, -391, -391, -391, -391, -9, -157, -100,
	533, -391, -391, -391, -391, -391, -391, -391, -391, -391,
	-391, -391, -391, -391, -391, -391, -168, -100, -391, -391,
	-395, -152, -391, -395, -152, -395, -152, -395, -391, -395,
	-152, -395, -152, -395, -395, -152, -395, -391, -391, -391,
	-391, -391, -391, -391, -391, -391, -391, -391, -391, -391,
	-391, -391, -391, -391, -391, -391, -391, -391, -391, -391,
	-391, -391, -391, -391, -391, -391, -217, -217, 11, -120,
	-121, -131, -253, 69, -207, -212, 431, 433, 352, -211,
	-211, -252, -245, 75, 28, 101, 29, 178, -173, -84,
	70, 69, -301, -260, -266, -268, -267, -269, -264, -265,
	380, 383, 387, 385, 381, 386, 134, 384, 389, 390,
	391, 392, 393, 394, 395, 396, 397, 398, 399, 29,
	216, 376, 377, 378, 379, 400, 401, 402, 403, 404,
	405, 406, 407, 359, 382, 531, 360, 361, 362, 363,
	364, 365, 367, 368, 369, 370, 371, 372, 373, 374,
	-260, -260, -260, -260, 73, 231, -242, -332, 68, -245,
	-128, -238, -236, 73, 92, 73, -127, -245, -253, -134,
	254, -368, -367, -359, -362, -224, -237, -359, 259, 257,
	258, 69, 194, 69, 194, 71, -120, 24, 66, -122,
	-128, 73, 73, -127, -134, -361, -359, -362, -254, -253,
	-239, 536, 186, 21, 182, 185, 91, 23, 25, 537,
	242, 94, 365, 134, 470, 471, 472, 394, 460, 16,
	20, 204, 95, 188, 380, 383, 202, 133, 198, 205,
	276, 278, 453, 486, 181, 62, 538, 444, 446, 441,
	445, 277, 443, 418, 539, 540, 541, 542, 373, 371,
	275, 28, 543, 10, 487, 26, 214, 249, 22, 544,
	127, 369, 183, 497, 240, 98, 99, 545, 41, 40,
	315, 24, 279, 215, 86, 285, 488, 370, 546, 547,
	19, 65, 206, 11, 200, 230, 641, 548, 295, 13,
	467, 116, 14, 549, 550, 551, 552, 196, 195, 111,
	191, 631, 60, 247, 8, 553, 363, 554, 555, 556,
	557, 558, 364, 177, 88, 559, 560, 108, 290, 56,
	474, 475, 498, 45, 32, 235, 489, 490, 582, 491,
	458, 289, 561, 38, 37, 393, 397, 392, 288, 409,
	58, 109, 17, 447, 448, 30, 562, 563, 529, 223,
	396, 362, 391, 583, 564, 565, 129, 252, 63, 92,
	348, 492, 493, 84, 372, 645, 33, 66, 219, 344,
	313, 42, 89, 15, 248, 61, 34, 465, 113, 646,
	495, 375, 197, 227, 567, 433, 251, 568, 114, 496,
	368, 584, 208, 110, 357, 184, 569, 452, 325, 273,
	209, 570, 297, 59, 571, 241, 115, 494, 189, 419,
	572, 6, 573, 462, 29, 213, 272, 361, 199, 574,
	253, 284, 274, 283, 575, 49, 576, 304, 43, 480,
	479, 478, 481, 643, 57, 455, 456, 630, 190, 39,
	97, 395, 360, 390, 194, 459, 228, 85, 280, 5,
	44, 31, 414, 9, 338, 64, 67, 449, 450, 451,
	47, 384, 381, 577, 484, 388, 483, 485, 644, 96,
	12, 578, 466, 533, 434, 90, 579, 415, 69, 75,
	75, -201, -202, 73, -241, -201, -222, 75, -257, -100,
	-224, -224, -128, -128, -128, -128, -128, -222, -222, -222,
	-222, -219, 11, 111, 11, -219, -219, -100, -143, -359,
	445, 125, -253, -83, -81, 207, -81, -83, 73, 73,
	355, -74, 33, 73, -51, -51, 75, -51, 69, 101,
	-51, 70, -157, -245, -342, 631, 69, -358, 23, 433,
	434, 409, -384, 190, 230, 227, 66, -384, -380, 335,
	-361, -360, -359, -382, -383, -245, -382, -382, -382, 420,
	-382, -382, -382, -382, -382, -382, -382, -382, -365, -384,
	295, 69, -384, -361, -359, 339, 339, 339, 339, 339,
	339, -113, 23, -194, -193, -246, -242, -243, -244, 217,
	-245, -239, -285, -282, -281, -283, 383, 428, 133, 440,
	-128, 434, 435, -9, -203, 88, 9, 111, 69, 18,
	69, -190, 25, 26, 178, -144, 51, 76, 79, -225,
	49, -128, -100, -100, -100, -155, 84, 92, 85, 86,
	-247, 217, 125, -254, -246, -243, -242, 309, 221, -239,
	-143, -156, -162, -116, 80, 111, 109, 110, 94, -143,
	-143, -143, -143, -143, -143, -143, -143, -143, -143, -143,
	-143, -143, -143, -143, -256, 73, 75, 73, -246, -96,
	-99, 125, -100, -253, -246, -142, 84, -142, -245, -245,
	-88, -246, 421, -246, -88, -88, -88, -88, -88, -392,
	69, -392, -9, -96, -96, -96, -392, -100, -100, -96,
	-96, -165, 75, -96, -165, 75, -96, -143, 458, 459,
	460, -96, -96, -88, -166, -167, 96, -165, -96, -392,
	-143, -245, -245, -96, -97, -96, -96, -96, -392, -392,
	-99, -96, -99, -96, -96, -392, -392, -392, -392, -96,
	-96, -96, -96, -96, -96, -96, -96, -96, -96, -96,
	-96, -130, 88, -128, -103, -108, -110, -111, -132, -115,
	-391, -109, -112, -128, -116, 73, 498, -128, -120, -393,
	11, 67, -393, 69, 178, -210, -213, 69, 432, 434,
	435, -207, -278, -279, 133, 66, 87, -100, -246, -254,
	-191, -90, -312, -297, -299, -300, -301, -323, 205, -331,
	197, 199, 200, 44, -302, 206, 191, 45, -261, -287,
	413, 414, -271, 68, -270, 68, -270, 388, 380, 383,
	381, -270, -270, -270, -270, -270, 381, 68, 68, -271,
	-271, -271, -289, 68, -289, 375, -290, 68, -290, -290,
	-290, -290, -261, -261, -261, -261, -332, -332, -332, -100,
	-249, 67, 23, 193, -285, 24, -285, -57, 242, 211,
	178, 68, 245, 246, -363, 69, 28, -369, 292, -128,
	221, -128, -128, -359, -359, -365, -339, 209, 204, -128,
	69, 69, -128, 69, 75, 73, 73, -145, -306, 11,
	111, -222, -253, -253, -128, -145, -222, -94, 217, 67,
	-395, -392, 357, 358, 73, -143, -50, -142, 70, -129,
	88, 75, -357, -255, 408, 434, -385, 125, -245, -384,
	-385, -388, 533, 194, 70, 69, -382, -385, 313, 295,
	-385, 11, -330, 19, -115, -391, -392, 69, 178, 29,
	-308, 101, -308, -308, -65, -64, 186, 183, 184, 187,
	188, -335, 411, 182, 239, 238, 224, -392, -200, 34,
	35, -245, 52, -146, -146, -177, -216, 19, 11, 47,
	47, -89, 57, 84, 85, 86, 178, -391, -156, -143,
	-143, -143, -94, 91, -392, 69, -392, 178, -97, -96,
	-96, -96, -96, -96, -100, -392, -392, -392, -392, 69,
	67, 23, -392, 67, -392, 11, 11, -392, 11, 11,
	-392, -392, 11, -143, -143, -143, -392, -392, -96, -169,
	-167, 98, -100, -392, -392, -392, 69, 69, -392, -392,
	-392, -392, -178, 465, -178, -392, -392, -392, -392, -392,
	-178, -178, -178, -178, -392, -392, -392, -392, -392, -392,
	-392, -392, -392, -392, -392, -392, -198, 113, -128, 29,
	69, -123, -125, -124, -126, 56, 60, 62, 57, 58,
	59, 421, 63, -233, -103, -114, 47, -391, -133, 113,
	-135, 23, -255, 64, 195, 65, -391, -391, -198, 67,
	-103, -103, -131, -253, 125, -212, -215, 436, 433, 439,
	73, 75, 178, -192, -316, -313, 69, 113, 638, 411,
	500, 428, 28, 383, 501, 133, 82, 502, 236, 36,
	191, 504, 440, 340, 505, 506, 201, 507, 508, 509,
	301, 510, 351, 511, 512, 513, 514, 328, 5, -301,
	68, 73, -307, -242, 45, -302, -304, -302, -302, -307,
	73, -307, 45, 84, 92, -277, -279, 134, -274, -275,
	-291, -294, -272, 23, 641, 416, 383, 28, 66, 411,
	197, 45, 44, 200, 82, -288, 415, 76, 76, 476,
	-270, -270, -270, 388, -270, -295, 75, -295, 76, -289,
	76, 70, 66, -245, -187, -128, -58, 8, 9, 10,
	-245, -344, -345, -346, -245, 111, 247, 248, -372, 325,
	-367, 293, 302, 91, 16, 533, 194, 194, -128, -359,
	-202, -136, 12, 73, 73, -219, -222, -143, -362, 233,
	234, -198, 190, -358, 194, 178, 178, -385, 194, 316,
	-361, -245, 11, 11, 313, 11, -361, 349, -193, -246,
	-308, 73, 134, 73, 134, 75, 69, -234, -302, -341,
	-300, -301, -340, 198, 205, -234, 205, 202, -302, 206,
	197, 198, -231, -302, 194, 23, -234, -234, -308, -234,
	32, 32, 113, 69, 75, 75, 53, -128, -95, -188,
	125, -246, -97, -94, 91, -143, -99, 125, -254, -392,
	-392, -392, -392, -392, -392, -259, 134, 380, 216, 378,
	371, 398, 385, 413, 376, 414, -256, -259, -256, -143,
	-143, -143, -143, -143, 11, 11, 11, 530, -173, 100,
	-100, 97, -143, -143, -245, -183, -391, -178, -178, -178,
	-178, -178, -179, -178, -179, -179, -179, -179, -179, -179,
	-179, -179, -179, -179, -179, -141, 29, 47, -391, -9,
	-391, -205, -209, -165, -242, -244, 217, 309, 221, -108,
	-110, -110, -108, -110, 56, 56, 56, 61, 56, 61,
	61, 56, 56, -124, -255, -392, -392, -161, 241, -391,
	33, -255, -135, 191, 191, 191, -97, -143, -136, -103,
	-136, -136, 178, 433, 437, 438, -313, 16, -308, -308,
	-308, -308, 428, 383, 133, 29, -308, -308, -308, -308,
	-308, 503, 503, -308, -308, -308, -308, -308, -308, -308,
	-308, -308, -308, -308, 352, -308, -308, -308, -308, -314,
	-389, 75, 76, 82, 331, 301, 73, -241, -239, -308,
	-325, -324, -245, -242, 197, -331, 44, -331, -307, -307,
	-307, -307, 68, 84, -391, 642, 76, 29, -142, 124,
	-138, 441, 447, 448, 442, -391, 85, 86, 9, 45,
	45, 45, 75, 70, 70, 70, -270, 70, 69, 70,
	69, 70, 69, -139, 589, 92, -128, -189, 23, 66,
	70, 69, -260, -245, -245, -245, -375, 533, 298, -373,
	-371, 304, 305, 306, 307, 308, -362, 303, -369, 300,
	75, 73, -128, -359, -100, -145, -276, -277, -128, -361,
	125, 125, -245, 194, -361, 313, -387, 533, -361, -361,
	11, -361, 75, 73, 134, -64, 68, -296, 73, -241,
	-307, -227, 197, 73, 73, 73, -242, -241, -243, -244,
	73, -242, -241, -243, -244, -245, 45, 45, 73, -128,
	-245, -296, 73, -100, -245, -245, -245, -203, 69, -98,
	-392, -143, 178, -179, -179, -179, -179, -179, -392, -271,
	-271, -271, -290, -271, 364, -271, 364, -392, -392, -392,
	19, 19, 19, 19, -392, -143, -143, -143, -391, -92,
	462, -100, 69, 69, -250, 73, -204, 66, -205, -160,
	-163, -162, -391, -9, -392, -194, 6, 533, -199, -245,
	-136, 69, 101, 101, 101, 101, -118, -117, 66, 67,
	-119, 66, -117, 56, 56, 56, -197, 68, 69, -162,
	-391, -199, -143, -135, -391, -391, -391, -392, 69, -173,
	-136, -317, -318, 114, 522, -319, 561, -314, -314, -314,
	-256, -308, 29, -308, -308, 76, -389, 75, 75, 75,
	-308, -308, 76, 75, -389, 75, 207, 210, 212, -314,
	-314, -314, 76, 75, -315, 28, 518, 374, 519, 520,
	521, 75, 28, 76, 28, 76, -314, 515, -314, 70,
	69, -271, -271, 45, -304, -196, -245, -143, 23, 73,
	134, -142, -395, -391, -395, -391, -395, -391, -391, -143,
	-149, 441, 451, 450, 449, 447, 448, 444, 446, 445,
	463, 464, 75, 76, 76, 589, 68, -9, -187, -128,
	-347, -348, -349, 82, 532, 92, 249, 250, 207, 251,
	252, 253, -346, -260, -260, -260, -378, -379, -377, 301,
	323, 324, 309, -376, -374, 318, 319, 320, 321, 91,
	75, 75, 75, -370, 292, 91, 301, 16, 23, -222,
	-350, -220, -387, -361, -387, 295, -361, -296, -175, 210,
	211, -260, -260, -249, -304, 45, 73, -232, 194, 23,
	194, -175, -296, 29, 183, 88, -105, 11, -188, -188,
	125, -276, 73, -143, -143, -143, -143, -392, -392, -392,
	-143, -392, 75, -143, -143, -159, 113, 27, -204, 69,
	-392, -392, 47, -392, -392, 69, -173, -209, -100, -100,
	-100, -100, -100, 68, -100, -196, 241, -392, -135, -233,
	-196, -196, -196, 75, -191, -320, 524, -391, 423, -391,
	423, 523, 45, -256, -308, -389, -256, 75, 75, 516,
	517, -327, -326, 67, 201, 82, -324, -190, -190, -307,
	-307, 70, 69, -392, -391, -96, -96, -96, -392, -96,
	-392, 70, 70, -325, -187, -189, 19, -188, -349, 75,
	253, 249, 253, 253, 253, 253, 254, -366, 82, 299,
	-377, 310, 594, 294, 325, 76, 76, 112, 30, 31,
	-374, 76, 76, 76, 76, -371, 16, 533, -369, 300,
	75, 75, -351, 38, -353, 39, -386, 23, -387, -386,
	313, 70, 73, -261, -261, 68, -307, -307, 73, -245,
	-175, 28, 28, -391, -136, 497, -103, -98, -392, -392,
	-392, -392, -91, 111, 533, -392, -392, -173, 16, 45,
	-163, -160, 47, -9, -391, -245, -191, -196, 70, -162,
	-133, -255, -392, -392, -392, 423, -321, 525, 76, -389,
	-391, -389, -391, -391, -391, 256, -256, -326, -389, -308,
	75, 208, -245, -286, 644, 643, -143, -392, -392, -392,
	-392, 70, -9, 240, -189, 36, 36, 245, 246, 75,
	75, 28, 311, 177, 28, 76, 177, 468, 300, 75,
	73, 301, -273, 195, -354, 43, -352, -293, 42, 16,
	-359, -386, -325, -249, 68, -143, -333, -334, 113, -170,
	13, -188, -392, 531, 63, 534, -184, 115, 114, -157,
	9, -160, -9, 70, -135, -391, -391, 16, -392, -196,
	-392, -196, -142, 73, -196, 101, 76, -128, -392, -328,
	-327, -187, 241, -22, -3, -11, -12, -13, -14, -16,
	-59, -17, -18, -23, -24, -19, -66, -69, -70, -71,
	-67, -78, -76, -77, -73, -72, -27, -29, -30, -32,
	-33, -34, -31, -25, -28, -20, -35, -36, -37, -41,
	-42, -26, -43, 95, 196, 275, 286, 287, 288, 73,
	289, 290, 285, 350, 76, 28, 76, 28, 314, 301,
	23, -197, 76, -353, 16, -355, 40, 41, 75, 533,
	70, 68, -325, -392, 69, -245, -171, 14, 16, 53,
	532, 535, -392, -185, 94, -186, 112, 468, -147, 76,
	177, -185, -205, -392, -311, -298, -246, -333, -318, -392,
	-392, -392, -392, -392, 76, 68, -286, -176, 243, 244,
	-187, -100, -100, 73, -55, -251, 278, 279, 280, -246,
	73, 73, -44, -22, 72, 73, 73, -394, 11, 50,
	-44, 312, 312, 75, 38, 115, 75, 16, 16, 293,
	-328, -325, 70, -334, 47, -181, 466, -172, -100, -158,
	-102, -100, 53, -186, 117, 118, 241, 117, 118, -142,
	-392, 69, -260, -392, -322, 526, -391, -196, -187, 73,
	73, -45, -46, 96, 97, 276, 277, 281, -260, 69,
	647, 288, 73, 11, 647, 75, 75, 28, 298, 21,
	-362, 70, -328, 225, -180, -182, -245, 69, 533, 91,
	-245, -392, -298, -262, 499, 24, 76, -196, 70, -189,
	100, 98, -46, -100, -44, 19, 19, 19, -276, -246,
	100, -22, -44, 88, 100, 315, -328, 226, 69, 23,
	-102, 534, -186, 23, -255, 75, 499, -392, -337, -338,
	66, -15, -21, -14, -11, -12, -13, 350, 533, 95,
	-44, 97, 647, -56, 76, -9, -54, -53, 76, -56,
	283, 92, 284, 73, -278, 288, 647, -49, 73, -362,
	-391, -182, -183, 535, -255, -263, 75, -338, 66, -337,
	66, 10, 9, -187, -44, -106, 647, -44, 100, 98,
	-47, -48, 99, -22, 350, 69, 282, 28, 100, 69,
	-143, 223, -398, 84, 28, 341, -336, 209, 204, 207,
	29, -336, 647, 100, 647, 196, -44, 100, 98, -48,
	-100, 100, -53, -143, 288, 73, -392, -392, 66, -143,
	66, 203, 28, 84, 100, 95, 647, 196, -44, 97,
	73, 545, 66, 545, 100, 647, -44, 545, 196, 100,
	647, 196,
}

var yyDef = [...]int{
	-2, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, 35, 36, 37, 1328, 907,
	907, 0, 907, 1009, -2, 736, 737, 0, 0, 0,
	0, 0, 0, 0, -2, 872, 873, 876, 873, 873,
	901, 0, 365, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 592, -2, 0, 1404, 0, 903, 904, 905,
	44, 0, 0, 2275, 2, 1336, 0, 916, 909, 0,
	907, 907, 907, 71, 72, 0, 103, 0, 0, 0,
	1010, 0, 0, 0, 1402, 1402, 255, 1402, 1402, 0,
	1418, 253, 0, 1399, 1414, 1415, 1416, 0, 0, 0,
	1400, 0, 1400, 1400, 1400, 1400, 1400, 1400, 1400, 0,
	0, 804, 1043, 1045, 1046, 1047, 1427, 1428, 2270, 2271,
	2272, 2273, 2274, 2245, 2246, 2247, 2248, 2249, 2250, 2251,
	2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261,
	2262, 2263, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014,
	2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024,
	2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034,
	2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044,
	2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054,
	2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064,
	2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074,
	2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084,
	2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094,
	2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104,
	2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114,
	2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124,
	2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134,
	2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144,
	2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154,
	2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164,
	2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174,
	2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184,
	2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194,
	2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204,
	2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214,
	2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224,
	2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234,
	2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244,
	0, 0, 0, 812, 813, 0, 0, 0, 863, 0,
	863, 830, 831, 0, 833, 0, 0, 0, 0, 0,
	843, 846, 850, 0, 1336, 1336, 613, 614, 615, 868,
	869, 857, 870, 875, 874, 882, 882, 0, 874, 60,
	-2, 0, 990, 0, 344, 346, 0, 366, 0, 369,
	372, 1048, 0, -2, -2, 1433, 888, 0, 0, 1458,
	1459, 0, 0, 0, 0, 0, 2169, 198, 269, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 0, 200,
	200, 200, 2178, 200, 0, 200, 200, 200, 200, 200,
	268, 258, 259, 260, 0, 0, 0, 2169, 0, 593,
	590, 591, 61, 0, 49, 62, 1352, 1011, 1012, 1013,
	-2, 0, 1405, 877, 0, 911, 0, 42, 0, 1342,
	0, 0, 919, 917, 918, 908, 0, 930, 960, 0,
	1057, 1892, 1063, -2, 1805, 1106, 1107, 1108, 1109, 1110,
	1111, 1112, 1113, 1750, 0, 0, 0, 0, 0, 1847,
	1136, 1137, 1138, 1139, 1140, 1141, 1309, 1310, 1311, 1312,
	1313, 1314, 1315, -2, -2, -2, 1295, 1296, 0, 2270,
	2271, 2272, 2273, 2274, 1369, 0, 1231, 1232, 1233, 1234,
	1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244,
	1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254,
	1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264,
	1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1873, 1936,
	1824, 1941, 1769, 0, 1761, 1838, 1965, 1966, 0, 1881,
	2251, 0, -2, 1990, 1929, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 2261, 2262, 1831, 1779, 1889, 1930,
	1770, 1791, 1810, 1859, 1860, 1862, 1894, 1895, 1913, 1922,
	1940, 1751, 1752, 1753, 1854, 1855, 1962, 1961, 1960, 1963,
	1996, 1994, 1997, 1739, 1740, 1741, 1742, 1743, 1744, 1745,
	1746, 1747, 1748, 1749, 1754, 1755, 1756, 1757, 1758, 1760,
	1762, 1763, 1764, 1765, 1766, 1767, 1768, 1771, 1772, 1773,
	1778, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1789,
	1790, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800,
	1801, 1802, 1803, 1804, 1806, 1807, 1809, 1811, 1812, 1813,
	1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823,
	1825, 1826, 1827, 1828, 1829, 1830, 1832, 1833, 1834, 1835,
	1836, 1837, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846,
	1848, 1849, 1850, 1851, 1852, 1853, 1856, 1857, 1858, 1861,
	1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872,
	1874, 1875, 1878, 1879, 1880, 1882, 1883, 1884, 1885, 1886,
	1887, 1888, 1890, 1891, 1893, 1897, 1898, 1899, 1900, 1901,
	1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911,
	1912, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1923,
	1924, 1925, 1926, 1927, 1928, 1931, 1932, 1933, 1934, 1935,
	1937, 1938, 1939, 1942, 1943, 1944, 1945, 1946, 1947, 1948,
	1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958,
	1959, 1964, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974,
	1975, 1976, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985,
	1986, 1991, 1992, 1993, 1995, 1998, 1999, 2000, 2001, 2002,
	2003, 2004, 2005, 2006, 1404, 1404, 0, 88, 2228, 0,
	1376, -2, -2, 1378, 0, 0, 0, -2, -2, -2,
	-2, 1762, -2, 1295, 0, 0, 0, 0, 1750, 1751,
	1752, 1753, 1759, 1761, 1769, 1770, 1774, 1775, 1776, 1777,
	1779, 1788, 1791, 1805, 1808, 1810, 1824, 1831, 1838, 1847,
	1854, 1855, 1859, 1860, 1862, 1873, 1876, 1877, 1881, 1889,
	1892, 1894, 1895, 1896, 1913, 1922, 1929, 1930, 1936, 1940,
	1941, 1960, 1961, 1962, 1963, 1965, 1966, 1977, 1987, 1988,
	1989, 1990, 1994, 1996, 1997, 104, 1328, 907, 105, 0,
	419, 420, 0, 0, 0, 0, 0, 0, 638, 1421,
	1422, 2264, 2265, 2266, 2267, 2268, 2269, 0, 0, 0,
	253, 0, 0, 0, 0, 0, 248, 0, 0, 0,
	1402, 255, 0, 0, 785, 0, 786, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 818,
	819, 803, 0, 805, 82, 0, 0, 0, 0, 816,
	817, 820, 863, 822, 0, 0, 1402, 1402, 0, 0,
	0, 0, 829, 0, 640, 641, 863, 863, 863, 863,
	860, 0, 860, 840, 860, 858, 859, 0, 845, 0,
	0, 0, 853, 854, 0, -2, 880, -2, 889, 0,
	0, 894, 897, 898, 899, 900, 60, 896, 906, 0,
	0, 0, 0, 348, 0, 0, 368, 350, 0, 353,
	354, 355, 356, 357, 358, 359, 360, 361, 362, 363,
	364, 0, 371, 0, 0, 1431, 1434, 893, 1449, 1450,
	0, 1460, 1461, 204, 0, 204, 0, 0, 0, 0,
	167, 200, 0, 169, 200, 200, 200, 0, 200, 200,
	176, 177, 200, 179, 180, 181, 182, 183, 200, 185,
	186, 187, 200, 200, 190, 200, 200, 193, 194, 195,
	196, 197, 267, 204, 0, 0, 204, 0, 0, 575,
	0, 0, 0, 0, 580, 581, 582, 583, 0, 0,
	586, 587, -2, 48, 0, 0, 0, -2, 739, -2,
	556, 557, 558, 0, 553, 0, 0, 45, 67, 0,
	912, 913, 66, 2276, 0, 54, 0, 0, 1337, 1340,
	1341, 1329, 1330, 1333, 0, 0, 914, 920, 921, 910,
	0, 931, 0, 0, 0, 0, 961, 0, 964, 965,
	966, 967, 968, 969, 0, 1061, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1085, 1086, 1087, 1088, 1089,
	1090, 1091, 1064, 0, 1078, 0, 0, 0, 0, 0,
	0, 0, 1129, 1130, 1131, 1132, 1133, 1134, 0, 919,
	0, 0, 919, 919, 919, 919, 919, 0, 0, 1104,
	2002, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 919, 0, 1287, 0, 0,
	1198, 1207, 0, 1199, 1208, 1200, 1209, 1201, 0, 1202,
	1210, 1203, 1211, 1204, 1205, 1212, 1206, 0, 0, 0,
	1100, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 84, 1043, 0, 89, 91, 0, 0, 2228, 1379,
	1380, 548, 1393, 1394, 1395, 0, 1391, 0, 1336, 916,
	655, 0, 421, 437, 525, 452, 453, 454, 515, 456,
	517, 517, 0, 517, 517, 517, 517, 517, 492, 493,
	494, 495, 496, 498, 499, 500, 501, 502, 0, 0,
	475, 515, 515, 515, 479, 505, 506, 507, 508, 509,
	510, 511, 512, 457, 458, 459, 460, 461, 462, 463,
	464, 465, 466, 520, 520, 522, 522, 522, 522, 522,
	437, 437, 437, 437, 0, 0, 0, 637, 0, 1419,
	0, 0, 255, -2, 0, -2, 0, 1038, 0, 0,
	0, 115, 285, 271, 114, 0, 249, 254, 250, 251,
	252, 0, 0, 0, 0, 262, 800, 1401, 0, 793,
	80, 794, 795, 796, 797, 798, 264, 799, 1044, 1429,
	1430, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470,
	1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480,
	1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490,
	1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500,
	1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510,
	1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520,
	1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530,
	1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540,
	1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550,
	1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560,
	1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570,
	1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580,
	1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590,
	1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600,
	1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610,
	1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620,
	1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630,
	1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640,
	1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650,
	1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660,
	1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670,
	1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680,
	1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690,
	1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700,
	1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710,
	1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720,
	1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730,
	1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 0, 806,
	807, 814, 808, 810, 811, 815, 821, 864, 0, 866,
	0, 0, 990, 826, 827, 828, 642, 834, 835, 836,
	842, 863, 0, 0, 0, 990, 863, 844, 1092, 847,
	1215, 0, 871, 886, 0, 881, 0, 887, 891, 890,
	0, 895, 0, 902, 345, 347, 349, 367, 0, 0,
	370, 373, 0, 1049, 0, 0, 0, 1452, 0, 1454,
	1456, 0, 0, 205, 206, 207, 204, 0, 199, 0,
	222, 270, 0, 168, 0, 202, 170, 171, 172, 200,
	174, 175, 178, 184, 188, 189, 191, 192, 266, 0,
	0, 0, 0, 165, 0, 576, 577, 578, 579, 588,
	585, 63, 0, 0, 1354, 1357, 1358, 1359, 1360, 1361,
	1425, 1426, 738, 559, 560, 561, 0, 603, 603, 603,
	0, 878, 879, 0, 40, 0, 1343, 0, 0, 0,
	0, 1332, 1334, 1335, 0, 0, 1317, 0, 0, 922,
	915, 43, 1058, 1059, 1060, 1062, 1079, 0, 1081, 1083,
	962, 963, 932, 0, 1297, 1298, 1299, 1300, 1301, -2,
	1069, 1070, 1094, 1095, 1096, 0, 0, 0, 0, 1092,
	1074, 0, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121,
	1122, 1123, 1124, 1125, 1128, 1229, 1230, 0, 1306, 0,
	1102, 926, 927, 0, 1307, 1126, 1316, 1127, 1302, 1135,
	1100, 1304, 1305, 1303, 0, 0, 0, 0, 0, 1097,
	0, 1368, 0, 0, 0, 0, 1176, 0, 0, 0,
	0, 1110, 1309, 0, 1110, 1309, 0, 0, 1863, 1975,
	1755, 0, 0, 0, 1293, 1290, 0, 0, 0, 1216,
	0, 0, 0, 0, 0, 1101, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 86, 0, 1042, 0, 970, 972, 973, 974, -2,
	0, 978, 979, 1051, 1098, 1427, 0, -2, 0, 0,
	78, 79, 0, 0, 0, 1377, 0, 0, 0, 94,
	95, 90, 1381, 549, 0, -2, 1388, 1389, 1297, 0,
	1342, 919, 712, 422, 424, 425, 426, 0, 620, 628,
	0, 0, 618, 620, 620, 0, 616, 617, 429, 528,
	526, 527, 455, 0, 480, 0, 481, 517, 517, 517,
	517, 484, 485, 487, 490, 491, 497, 0, 0, 476,
	477, 478, 467, 0, 468, 520, 470, 0, 471, 472,
	473, 474, 430, 431, 432, 433, 634, 635, 636, 0,
	0, 0, 100, 0, 109, 1403, 110, 0, 287, 288,
	0, 225, 256, 257, 117, 0, 0, 272, 0, 416,
	417, 0, 787, 0, 789, 261, 791, 801, 802, 792,
	0, 0, 83, 0, 865, 823, 824, 825, 1055, 0,
	0, 837, 861, 862, 860, 863, 841, 855, 0, 0,
	848, 0, 885, 883, 892, 991, 351, 352, 374, 86,
	0, 1432, 1451, 0, 1455, 1457, 0, 208, 210, 0,
	0, 159, 0, 0, 201, 0, 173, 0, 0, 0,
	0, 0, 584, 0, 64, 0, 1353, 0, 0, 603,
	0, 604, 0, 0, 740, 741, -2, 778, 1411, 778,
	778, 764, 603, 778, 0, 0, 0, 68, 55, 0,
	2062, 58, 0, 1338, 1339, 1331, 0, 1396, 1397, 1318,
	1319, 101, 923, 1080, 1082, 1084, 0, 1100, 1071, 1092,
	1075, 0, 1072, 0, 1066, 0, 1174, 0, 0, 0,
	0, 0, 0, 0, 1105, -2, 1172, 1173, 1175, 0,
	0, 0, 1179, 0, 1182, 0, 0, 1222, 0, 0,
	1223, 1187, 0, 0, 0, 0, 0, 1193, 1328, 0,
	1291, 0, 0, 1196, 1197, 1217, 0, 0, 1218, 1219,
	1220, 1221, 1161, 0, 1162, 0, 0, 0, 0, 0,
	1168, 1169, 1170, 1171, 941, 941, 941, 941, 941, 941,
	941, 941, 941, 941, 941, 941, 0, 0, 1041, 0,
	0, 0, 0, 0, 0, 1014, 0, 0, 1017, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 983, 0,
	985, 0, 1051, 0, 0, 0, 1100, 0, 1055, 0,
	1055, 1055, 85, 0, 1050, 92, 93, 0, 0, 99,
	550, 551, 0, 224, 418, 656, 0, 0, 603, 603,
	603, 603, 0, 0, 603, 603, 603, 603, 603, 0,
	0, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 0, 603, 603, 603, 603, 0, 603, 423,
	0, 621, 0, 0, 620, 620, 620, 619, 620, 611,
	621, 612, 0, 438, 0, 440, 441, 442, 443, 444,
	445, 446, 447, 0, 0, 0, 0, 0, 0, 543,
	0, 570, 572, 0, 0, 451, 529, 0, 0, 0,
	486, 482, 483, 517, 488, 0, 513, 0, 0, 469,
	0, 652, 0, 1420, 102, 0, 0, 289, 290, 291,
	1039, 0, 226, 227, 0, 0, 0, 0, 127, 0,
	286, 0, 0, 0, 0, 0, 0, 0, 81, 265,
	809, 832, 0, 643, 644, 990, 839, 1093, 849, 851,
	852, 544, 0, 1453, 0, 0, 0, 0, 0, 0,
	220, 203, 0, 0, 0, 0, 166, 0, 1355, 1356,
	0, 564, 565, 566, 567, 568, 0, 0, 620, 0,
	765, 766, 0, 779, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1412, 1413, 0, 0, 0, 0,
	773, 774, 0, 0, 56, 57, 1344, 41, 54, 0,
	933, 1308, 0, 1073, 0, 1076, 1103, 928, 0, 1142,
	941, 941, 941, 941, 941, 0, 515, 515, 1276, 515,
	522, 1279, 515, 1281, 515, 1284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1288, 1195,
	1294, 0, 0, 0, 934, 935, 937, 1163, 1164, 1165,
	1166, 1167, 1146, 942, 1147, 1148, 1150, 1151, 1153, 1154,
	1155, 1156, 1158, 1159, 1160, 1362, 0, 0, 0, 1347,
	0, 1055, 1370, 0, 0, 0, 0, 2264, 2265, 971,
	1005, 1007, 0, 1002, 1015, 1016, 1018, 0, 1020, 0,
	0, 1023, 1024, 1025, 992, 977, 1099, 980, 0, 0,
	0, 1051, 989, 0, 0, 0, 0, 0, 1328, 1055,
	76, 77, 0, 96, 97, 98, 657, 724, 0, 0,
	0, 0, 603, 0, 603, 603, 0, 0, 0, 0,
	0, 603, 603, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 686, 0, 0, 0, 0, 693,
	694, 698, 699, 700, 701, 702, 709, 710, 711, 0,
	0, 622, 515, 515, 0, 626, 618, 627, 605, 607,
	608, 610, 0, 439, 0, 0, 450, 0, 530, 0,
	532, 1215, 1215, 1215, 0, 0, 1067, 1068, 0, 569,
	571, 573, 574, 516, 518, 519, 489, 503, 0, 504,
	0, 523, 0, 639, 653, 0, 0, 0, 100, 0,
	233, 0, 229, 0, 0, 0, 135, 0, 118, 119,
	120, 122, 123, 0, 0, 0, 116, 0, 274, 0,
	277, 278, 788, 790, 1056, 863, 1443, 545, 1040, 220,
	209, 211, 212, 0, 220, 223, 160, 0, 161, 163,
	0, 162, 589, 562, 563, 742, 0, 775, 0, 0,
	1419, 618, 0, -2, 745, 750, 751, 752, 753, 754,
	755, 756, 757, 758, 759, 760, 0, 771, 0, 747,
	0, 775, 0, 768, 0, 0, 59, 51, 101, 101,
	1143, 1077, 0, 1145, 1149, 1144, 1152, 1157, 1177, 1273,
	544, 1277, 1278, 1280, 1282, 1283, 1285, 1181, 1178, 1180,
	0, 0, 0, 0, 1188, 0, 0, 0, 0, 0,
	0, 1292, 0, 0, 939, 938, 69, 0, 1362, 1345,
	1364, 1366, 0, 0, 0, 0, -2, 1734, 0, 996,
	1328, 0, 0, 0, 0, 0, 999, 1006, 0, 0,
	1000, 0, 1001, 1019, 1021, 1022, 975, 0, 0, 981,
	0, 0, -2, 988, 0, 0, 0, 998, 0, 1336,
	75, 726, 715, 0, 0, 0, 725, 658, 659, 660,
	661, 0, 603, 0, 0, 665, 666, 668, 669, 670,
	0, 0, 673, 674, 675, 676, 677, 678, 679, 680,
	681, 682, 683, 684, 685, 703, 704, 705, 706, 707,
	708, 687, 688, 689, 690, 691, 692, 0, 697, 595,
	0, 1333, 1333, 620, 620, 0, 994, 0, 0, 546,
	547, 531, 533, 0, 535, 0, 537, 0, 0, 0,
	542, 1215, 1215, 1215, 1215, 1215, 1215, 1215, 1215, 1215,
	0, 0, 514, 0, 0, 654, 0, 100, 102, 0,
	101, 234, 235, 0, 0, 0, 240, 0, 0, 0,
	0, 0, 228, 230, 231, 232, 153, 136, 137, 0,
	0, 0, 0, 128, 129, 0, 0, 0, 0, 0,
	124, 125, 126, 273, 0, 0, 276, 0, 0, 838,
	1445, 1439, 213, 220, 213, 0, 164, 0, 744, 776,
	0, 437, 437, 0, 620, 620, 767, 0, 1409, 1410,
	0, 762, 775, 0, 0, 0, 1055, 0, 0, 924,
	929, 1274, 1275, 0, 0, 0, 0, 1189, 1190, 1191,
	1224, 1194, 1289, 0, 0, 1328, 0, 0, 70, 0,
	1367, -2, 0, 0, 87, 0, 1336, 1371, 1372, 1373,
	1374, 1375, 1003, 0, 1008, 0, 0, 1051, 986, 0,
	0, 0, 0, 0, 74, 728, 0, 0, 0, 0,
	0, 0, 0, 662, 0, 667, 663, 671, 672, 695,
	696, 594, 598, 0, 603, 0, 623, 624, 625, 606,
	609, 0, 0, 434, 0, 0, 0, 0, 539, 0,
	541, 521, 524, 0, 107, 0, 0, 102, 236, 237,
	238, 239, 241, 242, 0, 0, 0, 113, 0, 0,
	138, 0, 0, 0, 0, 148, 149, 150, 151, 152,
	130, 131, 132, 133, 134, 121, 0, 0, 275, 0,
	280, 281, 1406, 1447, -2, 0, 156, 0, 213, 158,
	221, 743, 777, 427, 428, 0, 1419, 0, 746, 761,
	763, 0, 770, 0, 1320, 52, 53, 101, 1183, 1185,
	1184, 1186, 0, 0, 0, 1213, 1214, 943, 0, 0,
	1365, 1346, 0, 1350, 0, 997, 73, 0, 993, 982,
	984, 1051, 1052, 1053, 1054, 0, 713, 0, 727, 0,
	0, 0, 0, 0, 0, 0, 664, 599, 600, 0,
	602, 0, 995, 448, 435, 436, 0, 534, 536, 538,
	540, 596, 100, 0, 60, 243, 244, 245, 246, 154,
	155, 139, 140, 0, 142, 143, 0, 0, 0, 283,
	0, 279, 992, 0, 1439, 0, 1441, 0, 1438, 0,
	214, 157, 0, 0, 0, 769, 0, 781, 0, 1325,
	0, 925, 1192, 0, 0, 0, 0, 0, 0, 940,
	0, 1349, 0, 1004, 987, 0, 0, 724, 716, 0,
	718, 0, 0, 0, 0, 0, 601, 0, 434, 106,
	597, 108, 292, 100, 377, 378, 379, 380, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	393, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 0, 0, 0, 0, 0, 60, 0,
	0, 0, 334, 60, 0, 144, 0, 146, 147, 282,
	0, 39, 0, 1446, 0, 1444, 0, 0, 1440, 0,
	596, 0, 0, 780, 0, 0, 953, 0, 0, 1225,
	0, 1228, 936, 944, 0, 947, 0, 0, 0, 958,
	0, 945, 1363, -2, 0, 1028, 0, 0, 730, 717,
	719, 720, 721, 722, 0, 0, 449, 100, 0, 0,
	112, 0, 0, 1421, 0, 0, -2, -2, -2, 1423,
	331, 332, 0, 375, 0, 342, 343, 0, 335, 0,
	0, 141, 145, 284, 1407, 1408, 1448, 0, 0, 0,
	748, 0, 596, 782, 0, 50, 0, 1326, 1327, 1321,
	1322, 1324, 1226, 0, 948, 949, 950, 951, 952, 0,
	0, 0, 0, 714, 729, 0, 0, 0, 102, 293,
	294, 0, 303, 0, 60, 0, 0, 0, 544, 0,
	60, 60, 0, 336, 60, 1442, 1436, 215, 216, 217,
	219, 596, 772, 0, 954, 955, 0, 0, 0, 0,
	959, 0, 1029, 1030, 0, 0, 731, 0, 629, 60,
	0, 60, 304, 0, 0, 0, 0, 0, 548, 1424,
	0, 376, 0, 0, 247, 0, 749, 0, 0, 0,
	1323, 0, 946, 0, 1027, 1033, 0, 723, 630, 631,
	0, 100, 295, 296, 297, 298, 299, 60, 0, 301,
	0, 60, 60, 313, 314, 315, 60, 323, 325, 326,
	327, 0, 329, 330, 318, 339, 60, 333, 337, 218,
	0, 956, 957, 1227, 1026, 1034, 1032, 632, 0, 633,
	0, 0, 0, 111, 0, 61, 60, 0, 0, 60,
	0, 310, 0, 316, 60, 0, 328, 0, 0, 0,
	0, 1882, 1031, 0, 0, 0, 645, 647, 648, 0,
	0, 646, 60, 0, -2, 306, 0, 0, 60, 311,
	0, 317, 324, 319, 340, 338, 783, 784, 0, 0,
	0, 649, 650, 651, 300, 302, 60, 308, 0, 60,
	341, 1035, 0, 1037, 0, 60, 0, 1036, 307, 0,
	-2, 309,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 93, 3, 3, 3, 128, 120, 3,
	68, 70, 125, 123, 69, 124, 178, 126, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 72, 647,
	102, 101, 103, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 130, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 119, 3, 131,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 73, 74, 75, 76,
	77, 78, 79, 80, 81, 82, 83, 84, 85, 86,
	87, 88, 89, 90, 91, 92, 94, 95, 96, 97,
	98, 99, 100, 104, 105, 106, 107, 108, 109, 110,
	111, 112, 113, 114, 115, 116, 117, 118, 121, 122,
	127, 129, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
	251, 252, 253, 254, 255, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 270,
	271, 272, 273, 274, 275, 276,
}

var yyTok3 = [...]int{
	57600, 277, 57601, 278, 57602, 279, 57603, 280, 57604, 281,
	57605, 282, 57606, 283, 57607, 284, 57608, 285, 57609, 286,
	57610, 287, 57611, 288, 57612, 289, 57613, 290, 57614, 291,
	57615, 292, 57616, 293, 57617, 294, 57618, 295, 57619, 296,
	57620, 297, 57621, 298, 57622, 299, 57623, 300, 57624, 301,
	57625, 302, 57626, 303, 57627, 304, 57628, 305, 57629, 306,
	57630, 307, 57631, 308, 57632, 309, 57633, 310, 57634, 311,
	57635, 312, 57636, 313, 57637, 314, 57638, 315, 57639, 316,
	57640, 317, 57641, 318, 57642, 319, 57643, 320, 57644, 321,
	57645, 322, 57646, 323, 57647, 324, 57648, 325, 57649, 326,
	57650, 327, 57651, 328, 57652, 329, 57653, 330, 57654, 331,
	57655, 332, 57656, 333, 57657, 334, 57658, 335, 57659, 336,
	57660, 337, 57661, 338, 57662, 339, 57663, 340, 57664, 341,
	57665, 342, 57666, 343, 57667, 344, 57668, 345, 57669, 346,
	57670, 347, 57671, 348, 57672, 349, 57673, 350, 57674, 351,
	57675, 352, 57676, 353, 57677, 354, 57678, 355, 57679, 356,
	57680, 357, 57681, 358, 57682, 359, 57683, 360, 57684, 361,
	57685, 362, 57686, 363, 57687, 364, 57688, 365, 57689, 366,
	57690, 367, 57691, 368, 57692, 369, 57693, 370, 57694, 371,
	57695, 372, 57696, 373, 57697, 374, 57698, 375, 57699, 376,
	57700, 377, 57701, 378, 57702, 379, 57703, 380, 57704, 381,
	57705, 382, 57706, 383, 57707, 384, 57708, 385, 57709, 386,
	57710, 387, 57711, 388, 57712, 389, 57713, 390, 57714, 391,
	57715, 392, 57716, 393, 57717, 394, 57718, 395, 57719, 396,
	57720, 397, 57721, 398, 57722, 399, 57723, 400, 57724, 401,
	57725, 402, 57726, 403, 57727, 404, 57728, 405, 57729, 406,
	57730, 407, 57731, 408, 57732, 409, 57733, 410, 57734, 411,
	57735, 412, 57736, 413, 57737, 414, 57738, 415, 57739, 416,
	57740, 417, 57741, 418, 57742, 419, 57743, 420, 57744, 421,
	57745, 422, 57746, 423, 57747, 424, 57748, 425, 57749, 426,
	57750, 427, 57751, 428, 57752, 429, 57753, 430, 57754, 431,
	57755, 432, 57756, 433, 57757, 434, 57758, 435, 57759, 436,
	57760, 437, 57761, 438, 57762, 439, 57763, 440, 57764, 441,
	57765, 442, 57766, 443, 57767, 444, 57768, 445, 57769, 446,
	57770, 447, 57771, 448, 57772, 449, 57773, 450, 57774, 451,
	57775, 452, 57776, 453, 57777, 454, 57778, 455, 57779, 456,
	57780, 457, 57781, 458, 57782, 459, 57783, 460, 57784, 461,
	57785, 462, 57786, 463, 57787, 464, 57788, 465, 57789, 466,
	57790, 467, 57791, 468, 57792, 469, 57793, 470, 57794, 471,
	57795, 472, 57796, 473, 57797, 474, 57798, 475, 57799, 476,
	57800, 477, 57801, 478, 57802, 479, 57803, 480, 57804, 481,
	57805, 482, 57806, 483, 57807, 484, 57808, 485, 57809, 486,
	57810, 487, 57811, 488, 57812, 489, 57813, 490, 57814, 491,
	57815, 492, 57816, 493, 57817, 494, 57818, 495, 57819, 496,
	57820, 497, 57821, 498, 57822, 499, 57823, 500, 57824, 501,
	57825, 502, 57826, 503, 57827, 504, 57828, 505, 57829, 506,
	57830, 507, 57831, 508, 57832, 509, 57833, 510, 57834, 511,
	57835, 512, 57836, 513, 57837, 514, 57838, 515, 57839, 516,
	57840, 517, 57841, 518, 57842, 519, 57843, 520, 57844, 521,
	57845, 522, 57846, 523, 57847, 524, 57848, 525, 57849, 526,
	57850, 527, 57851, 528, 57852, 529, 57853, 530, 57854, 531,
	57855, 532, 57856, 533, 57857, 534, 57858, 535, 57859, 536,
	57860, 537, 57861, 538, 57862, 539, 57863, 540, 57864, 541,
	57865, 542, 57866, 543, 57867, 544, 57868, 545, 57869, 546,
	57870, 547, 57871, 548, 57872, 549, 57873, 550, 57874, 551,
	57875, 552, 57876, 553, 57877, 554, 57878, 555, 57879, 556,
	57880, 557, 57881, 558, 57882, 559, 57883, 560, 57884, 561,
	57885, 562, 57886, 563, 57887, 564, 57888, 565, 57889, 566,
	57890, 567, 57891, 568, 57892, 569, 57893, 570, 57894, 571,
	57895, 572, 57896, 573, 57897, 574, 57898, 575, 57899, 576,
	57900, 577, 57901, 578, 57902, 579, 57903, 580, 57904, 581,
	57905, 582, 57906, 583, 57907, 584, 57908, 585, 57909, 586,
	57910, 587, 57911, 588, 57912, 589, 57913, 590, 57914, 591,
	57915, 592, 57916, 593, 57917, 594, 57918, 595, 57919, 596,
	57920, 597, 57921, 598, 57922, 599, 57923, 600, 57924, 601,
	57925, 602, 57926, 603, 57927, 604, 57928, 605, 57929, 606,
	57930, 607, 57931, 608, 57932, 609, 57933, 610, 57934, 611,
	57935, 612, 57936, 613, 57937, 614, 57938, 615, 57939, 616,
	57940, 617, 57941, 618, 57942, 619, 57943, 620, 57944, 621,
	57945, 622, 57946, 623, 57947, 624, 57948, 625, 57949, 626,
	57950, 627, 57951, 628, 57952, 629, 57953, 630, 57954, 631,
	57955, 632, 57956, 633, 57957, 634, 57958, 635, 57959, 636,
	57960, 637, 57961, 638, 57962, 639, 57963, 640, 57964, 641,
	57965, 642, 57966, 643, 57967, 644, 57968, 645, 57969, 646,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:557
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:561
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:568
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:606
		{
			setParseTree(yylex, nil)
		}
	case 39:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:612
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 40:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:618
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			if err := yyDollar[1].selStmt.SetInto(yyDollar[5].into); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 41:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:629
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:635
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 43:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:645
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:652
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 45:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:656
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:662
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:666
		{
			yyDollar[3].selStmt.SetWith(yyDollar[2].with)
			yyVAL.selStmt = yyDollar[3].selStmt
		}
	case 48:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:673
		{
			yyVAL.with = &With{Ctes: yyDollar[2].tableExprs, Recursive: true}
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:676
		{
			yyVAL.with = &With{Ctes: yyDollar[1].tableExprs, Recursive: false}
		}
	case 50:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:682
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr), Window: yyDollar[13].window, Into: yyDollar[8].into}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 51:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:690
		{
			yyVAL.tableExprs = nil
		}
	case 52:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:694
		{
			yyVAL.tableExprs = nil
		}
	case 53:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:698
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 54:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:707
		{
			yyVAL.into = nil
		}
	case 55:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:711
		{
			yyVAL.into = &Into{Variables: yyDollar[2].variables}
		}
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:715
		{
			yyVAL.into = &Into{Outfile: string(yyDollar[3].bytes)}
		}
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:719
		{
			yyVAL.into = &Into{Dumpfile: string(yyDollar[3].bytes)}
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:725
		{
			yyVAL.variables = Variables{yyDollar[1].colIdent}
		}
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:729
		{
			yyVAL.variables = append(yyVAL.variables, yyDollar[3].colIdent)
		}
	case 60:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:734
		{
			yyVAL.with = nil
		}
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:738
		{
			yyVAL.with = yyDollar[2].with
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:744
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:748
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 64:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:754
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[4].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[2].columns}
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:760
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:768
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:774
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:782
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 69:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:788
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[7].ins
			ins.Action = yyDollar[2].str
			ins.Comments = yyDollar[3].bytes2
			ins.Ignore = yyDollar[4].str
			ins.Table = yyDollar[5].tableName
			ins.Partitions = yyDollar[6].partitions
			ins.OnDup = OnDup(yyDollar[8].assignExprs)
			ins.With = yyDollar[1].with
			yyVAL.statement = ins
		}
	case 70:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:801
		{
			cols := make(Columns, 0, len(yyDollar[8].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[9].assignExprs))
			for _, updateList := range yyDollar[8].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[2].str, Comments: Comments(yyDollar[3].bytes2), Ignore: yyDollar[4].str, Table: yyDollar[5].tableName, Partitions: yyDollar[6].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[9].assignExprs), With: yyDollar[1].with}
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:813
		{
			yyVAL.str = InsertStr
		}
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:817
		{
			yyVAL.str = ReplaceStr
		}
	case 73:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:823
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[3].bytes2), Ignore: yyDollar[4].str, TableExprs: yyDollar[5].tableExprs, Exprs: yyDollar[7].assignExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), OrderBy: yyDollar[9].orderBy, Limit: yyDollar[10].limit, With: yyDollar[1].with}
		}
	case 74:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:829
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitions, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit, With: yyDollar[1].with}
		}
	case 75:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:833
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[5].tableNames, TableExprs: yyDollar[7].tableExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), With: yyDollar[1].with}
		}
	case 76:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:837
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), With: yyDollar[1].with}
		}
	case 77:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:841
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), With: yyDollar[1].with}
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:846
		{
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:847
		{
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:851
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 81:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:855
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:861
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 83:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:865
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:871
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:875
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 86:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:880
		{
			yyVAL.partitions = nil
		}
	case 87:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:884
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:890
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 89:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:894
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 90:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:901
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:910
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 92:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:914
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:920
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:924
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 95:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:928
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 96:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:934
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:938
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 98:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:942
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:946
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 100:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:951
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 101:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:956
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 102:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:961
		{
			yyVAL.boolean = yySpecialCommentMode(yylex)
		}
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:967
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:976
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:981
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 106:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:986
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 107:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:990
		{
			yyDollar[2].viewSpec.ViewName = yyDollar[4].tableName.ToViewName()
			yyDollar[2].viewSpec.ViewExpr = yyDollar[8].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[2].viewSpec, SpecialCommentMode: yyDollar[7].boolean, SubStatementPositionStart: yyDollar[6].int, SubStatementPositionEnd: yyDollar[9].int - 1}
		}
	case 108:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:996
		{
			yyDollar[4].viewSpec.ViewName = yyDollar[6].tableName.ToViewName()
			yyDollar[4].viewSpec.ViewExpr = yyDollar[10].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[4].viewSpec, SpecialCommentMode: yyDollar[9].boolean, SubStatementPositionStart: yyDollar[8].int, SubStatementPositionEnd: yyDollar[11].int - 1, OrReplace: true}
		}
	case 109:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1002
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 110:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1010
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 111:
		yyDollar = yyS[yypt-16 : yypt+1]
//line sql.y:1018
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName, Definer: yyDollar[2].str, Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[15].statement}, SpecialCommentMode: yyDollar[14].boolean, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[16].int - 1}
		}
	case 112:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1022
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName, Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[11].statement}, SpecialCommentMode: yyDollar[10].boolean, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[12].int - 1}
		}
	case 113:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1026
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].tlsOptionItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].accountLimitItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].passLockItems)
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames, TLSOptions: tlsOptions, AccountLimits: accountLimits, PasswordOptions: passwordOptions, Locked: locked, Attribute: yyDollar[9].str}
		}
	case 114:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1045
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1054
		{
			yyVAL.accountNames = nil
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1058
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 117:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1063
		{
			yyVAL.tlsOptionItems = nil
		}
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1067
		{
			yyVAL.tlsOptionItems = nil
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1071
		{
			yyVAL.tlsOptionItems = yyDollar[2].tlsOptionItems
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1077
		{
			yyVAL.tlsOptionItems = []TLSOptionItem{yyDollar[1].tlsOptionItem}
		}
	case 121:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1081
		{
			yyVAL.tlsOptionItems = append(yyDollar[1].tlsOptionItems, yyDollar[3].tlsOptionItem)
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1087
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1091
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1095
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1099
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1103
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 127:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1108
		{
			yyVAL.accountLimitItems = nil
		}
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1112
		{
			yyVAL.accountLimitItems = yyDollar[2].accountLimitItems
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1118
		{
			yyVAL.accountLimitItems = []AccountLimitItem{yyDollar[1].accountLimitItem}
		}
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1122
		{
			yyVAL.accountLimitItems = append(yyDollar[1].accountLimitItems, yyDollar[2].accountLimitItem)
		}
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1128
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1132
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1136
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1140
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1145
		{
			yyVAL.passLockItems = nil
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1149
		{
			yyVAL.passLockItems = yyDollar[1].passLockItems
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1155
		{
			yyVAL.passLockItems = []PassLockItem{yyDollar[1].passLockItem}
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1159
		{
			yyVAL.passLockItems = append(yyDollar[1].passLockItems, yyDollar[2].passLockItem)
		}
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1165
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1169
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 141:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1173
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1177
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1181
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 144:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1185
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 145:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1189
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 146:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1193
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1197
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1201
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1205
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1209
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1213
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1217
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 153:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1222
		{
			yyVAL.str = ""
		}
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1226
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.str = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1231
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 156:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1237
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 157:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1242
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[5].grantObjectType, PrivilegeLevel: yyDollar[6].privilegeLevel, To: yyDollar[8].accountNames, WithGrantOption: yyDollar[9].boolean, As: yyDollar[10].grantAssumption}
		}
	case 158:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1247
		{
			yyVAL.statement = &GrantPrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 159:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1251
		{
			yyVAL.statement = &GrantRole{Roles: yyDollar[2].accountNames, To: yyDollar[4].accountNames, WithAdminOption: yyDollar[5].boolean}
		}
	case 160:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1255
		{
			yyVAL.statement = &GrantProxy{On: yyDollar[4].accountName, To: yyDollar[6].accountNames, WithGrantOption: yyDollar[7].boolean}
		}
	case 161:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1261
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &RevokePrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 162:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1266
		{
			yyVAL.statement = &RevokePrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 163:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1270
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[7].accountNames}
		}
	case 164:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1274
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[8].accountNames}
		}
	case 165:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1278
		{
			yyVAL.statement = &RevokeRole{Roles: yyDollar[2].accountNames, From: yyDollar[4].accountNames}
		}
	case 166:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1282
		{
			yyVAL.statement = &RevokeProxy{On: yyDollar[4].accountName, From: yyDollar[6].accountNames}
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1288
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].strs}
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1292
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].strs}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1296
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].strs}
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1300
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].strs}
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1304
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].strs}
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1308
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].strs}
		}
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1312
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].strs}
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1316
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].strs}
		}
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1320
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].strs}
		}
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1324
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].strs}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1328
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].strs}
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1332
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].strs}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1336
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].strs}
		}
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1340
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].strs}
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1344
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].strs}
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1348
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].strs}
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1352
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].strs}
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1356
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].strs}
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1360
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].strs}
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1364
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].strs}
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1368
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].strs}
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1372
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].strs}
		}
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1376
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].strs}
		}
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1380
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].strs}
		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1384
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].strs}
		}
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1388
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].strs}
		}
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1392
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].strs}
		}
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1396
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].strs}
		}
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1400
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].strs}
		}
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1404
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].strs}
		}
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1408
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].strs}
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1414
		{
			yyVAL.grantPrivileges = []Privilege{yyDollar[1].grantPrivilege}
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1418
		{
			yyVAL.grantPrivileges = append(yyDollar[1].grantPrivileges, yyDollar[3].grantPrivilege)
		}
	case 200:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1423
		{
			yyVAL.strs = nil
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1427
		{
			yyVAL.strs = yyDollar[2].strs
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1433
		{
			yyVAL.strs = []string{yyDollar[1].colIdent.String()}
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1437
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].colIdent.String())
		}
	case 204:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1442
		{
			yyVAL.grantObjectType = GrantObjectType_Any
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1446
		{
			yyVAL.grantObjectType = GrantObjectType_Table
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1450
		{
			yyVAL.grantObjectType = GrantObjectType_Function
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1454
		{
			yyVAL.grantObjectType = GrantObjectType_Procedure
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1460
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 209:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1464
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1468
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].colIdent.String()}
		}
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1472
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: "*"}
		}
	case 212:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1476
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: yyDollar[3].colIdent.String()}
		}
	case 213:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1481
		{
			yyVAL.grantAssumption = nil
		}
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1485
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 215:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1489
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 216:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1493
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].accountName, Roles: nil}
		}
	case 217:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1497
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].accountName, Roles: nil}
		}
	case 218:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1501
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].accountName, Roles: yyDollar[7].accountNames}
		}
	case 219:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1505
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].accountName, Roles: yyDollar[5].accountNames}
		}
	case 220:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1510
		{
			yyVAL.boolean = false
		}
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1514
		{
			yyVAL.boolean = true
		}
	case 222:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1519
		{
			yyVAL.boolean = false
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1523
		{
			yyVAL.boolean = true
		}
	case 224:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1530
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 225:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1542
		{
			yyVAL.procedureParams = nil
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1546
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1552
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1556
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1562
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[1].colIdent.String(), Type: yyDollar[2].columnType}
		}
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1566
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1570
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1574
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 233:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1579
		{
			yyVAL.characteristics = nil
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1583
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1589
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1593
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1599
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1603
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 239:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1607
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1611
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1615
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1619
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1623
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1627
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1631
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1635
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 247:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1641
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1647
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: "", Definer: yyDollar[1].str, Security: yyDollar[2].str}
		}
	case 249:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1651
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: yyDollar[1].str, Definer: yyDollar[2].str, Security: yyDollar[3].str}
		}
	case 250:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1657
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 251:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1661
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1665
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 253:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1670
		{
			yyVAL.str = ""
		}
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1674
		{
			yyVAL.str = yyDollar[3].accountName.String()
		}
	case 255:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1679
		{
			yyVAL.str = ""
		}
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1683
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1687
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1693
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1697
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1701
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1707
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 262:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1715
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1719
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1725
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1729
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1735
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1743
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1751
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1761
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1765
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1771
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 272:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1775
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 273:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1779
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 274:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1783
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 275:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1787
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 276:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1793
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1797
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1801
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 279:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1805
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 280:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1809
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 281:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1813
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 282:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1819
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1823
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 284:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1827
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1833
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1837
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1843
		{
			yyVAL.str = BeforeStr
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1847
		{
			yyVAL.str = AfterStr
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1853
		{
			yyVAL.str = InsertStr
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1857
		{
			yyVAL.str = UpdateStr
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1861
		{
			yyVAL.str = DeleteStr
		}
	case 292:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1866
		{
			yyVAL.triggerOrder = nil
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1870
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1874
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1880
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 300:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1890
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 301:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1896
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 302:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1900
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1906
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1910
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 305:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1916
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 306:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1922
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 307:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1927
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 308:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1932
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 309:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1938
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1946
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1950
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 312:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1956
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 313:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1962
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 314:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1966
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 315:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1970
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 316:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1974
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 317:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1978
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: &BeginEndBlock{}}}
		}
	case 318:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1982
		{
			yyDollar[3].columnType.Charset = yyDollar[4].str
			yyDollar[3].columnType.Collate = yyDollar[5].str
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 319:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1988
		{
			yyDollar[3].columnType.Charset = yyDollar[4].str
			yyDollar[3].columnType.Collate = yyDollar[5].str
			yyDollar[3].columnType.Default = yyDollar[7].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1997
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2001
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2005
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2011
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 324:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2015
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2021
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2025
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2029
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2033
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2037
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2041
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2047
		{
			yyVAL.statement = &OpenCursor{Name: string(yyDollar[2].bytes)}
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2053
		{
			yyVAL.statement = &CloseCursor{Name: string(yyDollar[2].bytes)}
		}
	case 333:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2059
		{
			yyVAL.statement = &FetchCursor{Name: string(yyDollar[3].bytes), Variables: yyDollar[5].strs}
		}
	case 334:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2064
		{
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2067
		{
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2071
		{
			yyVAL.strs = []string{string(yyDollar[1].bytes)}
		}
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2075
		{
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[3].bytes))
		}
	case 339:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2081
		{
			yyVAL.statement = &Loop{Label: "", Statements: yyDollar[2].statements}
		}
	case 340:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2085
		{
			yyVAL.statement = &Loop{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].statements}
		}
	case 341:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2089
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[8].bytes) {
				yylex.Error("End-label " + string(yyDollar[8].bytes) + " without match")
				return 1
			}
			yyVAL.statement = &Loop{Label: label, Statements: yyDollar[4].statements}
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2100
		{
			yyVAL.statement = &Leave{Label: string(yyDollar[2].bytes)}
		}
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2106
		{
			yyVAL.statement = &Iterate{Label: string(yyDollar[2].bytes)}
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2112
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 345:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2116
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2120
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 347:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2124
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2130
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2134
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2140
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2144
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2150
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2156
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2160
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2164
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2168
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2172
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2176
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2180
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2184
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2188
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2192
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2196
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2200
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2206
		{
			yyVAL.statement = &Resignal{}
		}
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2210
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 367:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2214
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2218
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 369:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2222
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 370:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2226
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2232
		{
			yyVAL.statement = &Call{ProcName: yyDollar[2].procedureName, Params: yyDollar[3].exprs}
		}
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2237
		{
			yyVAL.exprs = nil
		}
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2241
		{
			yyVAL.exprs = nil
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2245
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2251
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2255
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2261
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 416:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2305
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
		}
	case 417:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2319
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: TableName{Name: NewTableIdent(string(yyDollar[5].bytes))}, IfNotExists: ne, Temporary: neTemp}
		}
	case 418:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2335
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str + yyDollar[5].str
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2342
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2347
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 421:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2352
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2358
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 423:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2362
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2367
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2371
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2375
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2381
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2389
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2399
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2407
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2415
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2423
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2431
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2440
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2444
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2448
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 437:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2453
		{
			yyVAL.columnType = ColumnType{}
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2457
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2466
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2475
		{
			opt := ColumnType{Charset: yyDollar[2].str}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 441:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2484
		{
			opt := ColumnType{Collate: yyDollar[2].str}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2493
		{
			opt := ColumnType{BinaryCollate: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2502
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2511
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 445:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2520
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2529
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2538
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 448:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2547
		{
			opt := ColumnType{GeneratedExpr: yyDollar[4].expr, Stored: yyDollar[6].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 449:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2556
		{
			opt := ColumnType{GeneratedExpr: yyDollar[6].expr, Stored: yyDollar[8].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2565
		{
			opt := ColumnType{SRID: NewIntVal(yyDollar[3].bytes)}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2576
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2587
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2592
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2598
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2602
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2606
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2610
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2614
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2618
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2622
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2626
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2630
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2634
		{
			yyVAL.columnType = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2640
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2646
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2652
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 470:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2658
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 471:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2664
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 472:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2670
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2676
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2682
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2690
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2694
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2698
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2702
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2706
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2712
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 481:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2716
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2720
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2724
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 484:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2728
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2732
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2736
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2740
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2744
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 489:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2748
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2752
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2756
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2760
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2764
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2768
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2772
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2776
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2780
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2784
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2788
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2792
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2796
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2800
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 503:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2804
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs}
		}
	case 504:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2809
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs}
		}
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2815
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2819
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2823
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2827
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2831
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2835
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2839
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2843
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2849
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2854
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2859
		{
			yyVAL.sqlVal = nil
		}
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2863
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2868
		{
			yyVAL.sqlVal = nil
		}
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2872
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2876
		{
			yyVAL.sqlVal = NewValArg(yyDollar[2].bytes)
		}
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2881
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 521:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2885
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 522:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2893
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 523:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2897
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 524:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2903
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 525:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2911
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2915
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2919
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 528:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2924
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2928
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2934
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2938
		{
			if num, ok := yyDollar[3].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.optVal = num
				} else {
					yyVAL.optVal = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.optVal = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[3].expr}
			}
		}
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2952
		{
			yyVAL.optVal = yyDollar[2].boolVal
		}
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2956
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 534:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2960
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes)), Exprs: yyDollar[4].selectExprs}
		}
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2964
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2968
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes)), Exprs: yyDollar[4].selectExprs}
		}
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2972
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 538:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2976
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes)), Exprs: yyDollar[4].selectExprs}
		}
	case 539:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2980
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 540:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2984
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes)), Exprs: yyDollar[4].selectExprs}
		}
	case 541:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2988
		{
			yyVAL.optVal = &ParenExpr{yyDollar[3].expr}
		}
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2994
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3000
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 544:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3005
		{
			yyVAL.str = ""
		}
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3009
		{
			yyVAL.str = yyDollar[1].str
		}
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3015
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3019
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 548:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3024
		{
			yyVAL.str = ""
		}
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3028
		{
			yyVAL.str = yyDollar[1].str
		}
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3034
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3038
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 552:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3043
		{
			yyVAL.boolean = false
		}
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3047
		{
			yyVAL.boolean = true
		}
	case 554:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3052
		{
			yyVAL.charsetCollates = nil
		}
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3056
		{
			yyVAL.charsetCollates = yyDollar[1].charsetCollates
		}
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3062
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3066
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3070
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3074
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3078
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3082
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 562:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3088
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 563:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3092
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 564:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3096
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 565:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3100
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 566:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3106
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 567:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3110
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 568:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3116
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3122
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 570:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3126
		{
			yyVAL.colKeyOpt = colKey
		}
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3130
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3134
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3138
		{
			yyVAL.colKeyOpt = colKeyFulltextKey
		}
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3144
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3150
		{
			yyVAL.statement = &Flush{Type: yyDollar[2].str, Option: yyDollar[3].flushOption}
		}
	case 576:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3156
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3160
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3164
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3168
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3172
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3176
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3180
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3184
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3188
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].str}
		}
	case 585:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3192
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3196
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3200
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 588:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3205
		{
			yyVAL.str = ""
		}
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3207
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3211
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3213
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 592:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3216
		{
			yyVAL.str = ""
		}
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3218
		{
			yyVAL.str = yyDollar[1].str
		}
	case 594:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3222
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3226
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 596:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3231
		{
			yyVAL.indexOptions = nil
		}
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3235
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3241
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3245
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3251
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3255
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3260
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 603:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3266
		{
			yyVAL.str = ""
		}
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3270
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3278
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 606:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3282
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3286
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3290
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true}
		}
	case 609:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3294
		{
			var name string
			name = yyDollar[2].str
			if name == "" {
				name = yyDollar[5].str
			}
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].str), Name: NewColIdent(name), Unique: true}
		}
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3303
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3307
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3311
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 613:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3317
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3321
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3325
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3331
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3335
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 618:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3340
		{
			yyVAL.str = ""
		}
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3344
		{
			yyVAL.str = yyDollar[1].str
		}
	case 620:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3349
		{
			yyVAL.str = ""
		}
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3353
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3359
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3363
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3369
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3373
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3379
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3383
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3387
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 629:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3393
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 630:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3397
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 631:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3401
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 632:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3405
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 633:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3409
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3415
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3420
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3424
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3428
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3432
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 639:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3438
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3444
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3448
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 642:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3453
		{
			yyVAL.str = ""
		}
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3457
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3461
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3467
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3473
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3479
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3483
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3487
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3491
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3495
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 652:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3500
		{
			yyVAL.boolean = true
		}
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3504
		{
			yyVAL.boolean = true
		}
	case 654:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3508
		{
			yyVAL.boolean = false
		}
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3513
		{
			yyVAL.str = ""
		}
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3517
		{
			yyVAL.str = yyDollar[1].str + " " + string(yyDollar[2].str)
		}
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3521
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3527
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3531
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3535
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3539
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].str) + " "
		}
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3543
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + yyDollar[3].str
		}
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3547
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + yyDollar[4].str
		}
	case 664:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3551
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + yyDollar[5].str
		}
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3555
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3559
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 667:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3563
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[4].bytes)
		}
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3567
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3571
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3575
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3579
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + "'" + string(yyDollar[4].bytes) + "'"
		}
	case 672:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3583
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + "'" + string(yyDollar[4].bytes) + "'"
		}
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3587
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3591
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3595
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3599
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3603
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3607
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3611
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3615
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3619
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3623
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3627
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3631
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3635
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3639
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3643
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3647
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3651
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3655
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3659
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3663
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3667
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str
		}
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3671
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3675
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)
		}
	case 696:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3679
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)
		}
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3683
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3689
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3693
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3698
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3702
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3706
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3712
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3716
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3720
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3724
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3728
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3732
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 712:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3743
		{
			yyVAL.str = ""
		}
	case 713:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3747
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + yyDollar[3].str + yyDollar[4].str + yyDollar[5].str
		}
	case 714:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3751
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + yyDollar[3].str + yyDollar[4].str + yyDollar[5].str + "(partition_definitions)"
		}
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3757
		{
			yyVAL.str = yyDollar[1].str
		}
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3761
		{
			yyVAL.str = string(yyDollar[1].bytes) + " (" + string(yyDollar[3].bytes) + ")"
		}
	case 717:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3765
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " (column_list)"
		}
	case 718:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3769
		{
			yyVAL.str = string(yyDollar[1].bytes) + " (" + string(yyDollar[3].bytes) + ")"
		}
	case 719:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3773
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " (column_list)"
		}
	case 720:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3779
		{
			yyVAL.str = yyDollar[1].str + string(yyDollar[2].bytes) + " (value)"
		}
	case 721:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3783
		{
			yyVAL.str = yyDollar[1].str + string(yyDollar[2].bytes) + " (" + string(yyDollar[4].bytes) + ")"
		}
	case 722:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3787
		{
			yyVAL.str = yyDollar[1].str + string(yyDollar[2].bytes) + " (column_list)"
		}
	case 723:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3791
		{
			yyVAL.str = yyDollar[1].str + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[5].bytes) + " (column_list)"
		}
	case 724:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3796
		{
			yyVAL.str = ""
		}
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3800
		{
			yyVAL.str = string(yyDollar[1].bytes) + " "
		}
	case 726:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3805
		{
			yyVAL.str = ""
		}
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3809
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " "
		}
	case 728:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3814
		{
			yyVAL.str = ""
		}
	case 729:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3818
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + yyDollar[3].str + " " + yyDollar[4].str
		}
	case 730:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3823
		{
			yyVAL.str = ""
		}
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3827
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " "
		}
	case 732:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3832
		{
			yyVAL.str = ""
		}
	case 733:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3836
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 734:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3841
		{
			yyVAL.str = string("")
		}
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3845
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3855
		{
			yyVAL.statement = &DBDDL{Action: AlterStr, DBName: string(yyDollar[3].bytes), CharsetCollate: yyDollar[4].charsetCollates}
		}
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3859
		{
			yyVAL.statement = &DBDDL{Action: AlterStr, CharsetCollate: yyDollar[3].charsetCollates}
		}
	case 740:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3865
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3878
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3882
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 743:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3888
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3895
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3902
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 746:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3906
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3910
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 748:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3915
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 749:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3919
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3923
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3928
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3933
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3938
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3943
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3948
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3953
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3958
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3963
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3968
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3973
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 761:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3977
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 762:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3981
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 763:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3988
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3994
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3998
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4004
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4010
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4015
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 769:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4019
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 770:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4023
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4027
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 772:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:4033
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[7].indexColumns, Options: yyDollar[9].indexOptions}
			yyVAL.ddl = ddl
		}
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4039
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4043
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 775:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4048
		{
			yyVAL.columnOrder = nil
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4052
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4056
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 778:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4061
		{
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4063
		{
		}
	case 780:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4067
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4073
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4077
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 783:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4083
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 784:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4087
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4093
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4097
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4103
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 788:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4107
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4115
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 790:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4119
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 791:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4125
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 792:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4133
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 793:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4137
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 794:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4145
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 795:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4153
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 796:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4161
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName}, IfExists: exists}
		}
	case 797:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4169
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName}, IfExists: exists}
		}
	case 798:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4177
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 799:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4185
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 800:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4194
		{

		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4198
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4202
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4208
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4212
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4218
		{
			yyVAL.statement = &Analyze{Tables: yyDollar[3].tableNames}
		}
	case 806:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4224
		{
			yyVAL.statement = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].bytes)}
		}
	case 807:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4228
		{
			yyVAL.statement = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].bytes)}
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4234
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4238
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4245
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4249
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4255
		{
			yyVAL.statement = &Execute{Name: string(yyDollar[2].bytes)}
		}
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4259
		{
			yyVAL.statement = &Execute{Name: string(yyDollar[2].bytes)}
		}
	case 814:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4263
		{
			yyVAL.statement = &Execute{Name: string(yyDollar[2].bytes), VarList: yyDollar[4].strs}
		}
	case 815:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4267
		{
			yyVAL.statement = &Execute{Name: string(yyDollar[2].bytes), VarList: yyDollar[4].strs}
		}
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4273
		{
			yyVAL.statement = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4277
		{
			yyVAL.statement = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4281
		{
			yyVAL.statement = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4285
		{
			yyVAL.statement = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4291
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 821:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4296
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4300
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 823:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4304
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 824:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4308
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 825:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4312
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 826:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4317
		{
			yyVAL.statement = &Show{Type: CreateProcedureStr, Table: yyDollar[4].tableName}
		}
	case 827:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4321
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 828:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4325
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4329
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4333
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4337
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 832:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4341
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4345
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 834:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4349
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 835:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4353
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 836:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4357
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 837:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4361
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 838:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4365
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, AsOf: yyDollar[7].expr, Filter: yyDollar[8].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, Table: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 839:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4370
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4375
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 841:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4379
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 842:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4383
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 843:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4387
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 844:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4391
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4397
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 846:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4405
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 847:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4409
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 848:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4414
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 849:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4418
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4423
		{
			yyVAL.statement = &ShowPrivileges{}
		}
	case 851:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4427
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 852:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4431
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4435
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4439
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4445
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 856:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4451
		{
			yyVAL.boolean = false
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4455
		{
			yyVAL.boolean = true
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4461
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4465
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 860:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4471
		{
			yyVAL.str = ""
		}
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4475
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4479
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 863:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4485
		{
			yyVAL.showFilter = nil
		}
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4489
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4493
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[3].bytes)}
		}
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4497
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 867:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4503
		{
			yyVAL.str = ""
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4507
		{
			yyVAL.str = SessionStr
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4511
		{
			yyVAL.str = GlobalStr
		}
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4517
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 871:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4521
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: yyDollar[2].tableIdent.v + "/" + yyDollar[4].tableIdent.v}}
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4525
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 873:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4530
		{
			yyVAL.bytes = nil
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4534
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4540
		{
			yyVAL.statement = &Begin{}
		}
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4544
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 877:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4550
		{
			yyVAL.statement = &Begin{}
		}
	case 878:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4554
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 879:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4558
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 880:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4563
		{
			yyVAL.bytes = nil
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4567
		{
			yyVAL.bytes = nil
		}
	case 882:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4572
		{
			yyVAL.bytes = nil
		}
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4576
		{
			yyVAL.bytes = nil
		}
	case 884:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4581
		{
			yyVAL.bytes = nil
		}
	case 885:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4585
		{
			yyVAL.bytes = nil
		}
	case 886:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4591
		{
			yyVAL.statement = &Commit{}
		}
	case 887:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4597
		{
			yyVAL.statement = &Rollback{}
		}
	case 888:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4603
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4609
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 890:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4613
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 891:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4617
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 892:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4621
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4627
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 894:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4633
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 895:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4637
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[3].str, Statement: yyDollar[4].statement}
		}
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4641
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4647
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 901:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4655
		{
			yyVAL.str = ""
		}
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4659
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4671
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[3].expr}
			yyVAL.statement = &Show{Type: "columns", Table: yyDollar[2].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 907:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4677
		{
			setAllowComments(yylex, true)
		}
	case 908:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4681
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 909:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4687
		{
			yyVAL.bytes2 = nil
		}
	case 910:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4691
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4697
		{
			yyVAL.str = UnionStr
		}
	case 912:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4701
		{
			yyVAL.str = UnionAllStr
		}
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4705
		{
			yyVAL.str = UnionDistinctStr
		}
	case 914:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4710
		{
			yyVAL.byt = 0
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4714
		{
			yyVAL.byt = 1
		}
	case 916:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4719
		{
			yyVAL.str = ""
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4723
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4727
		{
			yyVAL.str = SQLCacheStr
		}
	case 919:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4732
		{
			yyVAL.str = ""
		}
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4736
		{
			yyVAL.str = ""
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4740
		{
			yyVAL.str = DistinctStr
		}
	case 922:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4745
		{
			yyVAL.str = ""
		}
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4749
		{
			yyVAL.str = StraightJoinHint
		}
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4755
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 925:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4763
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4774
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4778
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4782
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 929:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4786
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4792
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4796
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4800
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 933:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4804
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4810
		{
			yyVAL.over = &Over{NameRef: yyDollar[2].colIdent}
		}
	case 935:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4814
		{
			yyVAL.over = (*Over)(yyDollar[2].windowDef)
		}
	case 936:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4820
		{
			yyVAL.windowDef = &WindowDef{NameRef: yyDollar[2].colIdent, PartitionBy: yyDollar[3].exprs, OrderBy: yyDollar[4].orderBy, Frame: yyDollar[5].frame}
		}
	case 937:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4825
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4828
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 939:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4833
		{
			yyVAL.exprs = nil
		}
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4837
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 941:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4842
		{
			yyVAL.over = nil
		}
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4846
		{
			yyVAL.over = yyDollar[1].over
		}
	case 943:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4851
		{
			yyVAL.frame = nil
		}
	case 944:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4855
		{
			yyVAL.frame = &Frame{Unit: RowsUnit, Extent: yyDollar[2].frameExtent}
		}
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4859
		{
			yyVAL.frame = &Frame{Unit: RangeUnit, Extent: yyDollar[2].frameExtent}
		}
	case 946:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4866
		{
			startBound := yyDollar[2].frameBound
			endBound := yyDollar[4].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound, End: endBound}
		}
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4889
		{
			startBound := yyDollar[1].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound}
		}
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4904
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedPreceding}
		}
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4908
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedFollowing}
		}
	case 950:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4912
		{
			yyVAL.frameBound = &FrameBound{Type: CurrentRow}
		}
	case 951:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4916
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprPreceding,
			}
		}
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4923
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprFollowing,
			}
		}
	case 953:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4931
		{
			yyVAL.window = nil
		}
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4934
		{
			yyVAL.window = yyDollar[2].window
		}
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4940
		{
			yyVAL.window = Window{yyDollar[1].windowDef}
		}
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4943
		{
			yyVAL.window = append(yyDollar[1].window, yyDollar[3].windowDef)
		}
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4949
		{
			def := yyDollar[3].windowDef
			def.Name = yyDollar[1].colIdent
			yyVAL.windowDef = def
		}
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4958
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4962
		{
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 960:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4967
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4971
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 962:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4975
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4979
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[2].bytes))
		}
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4985
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4989
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4993
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4997
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5001
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5005
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5011
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5015
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5025
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 975:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5029
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5039
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5045
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5053
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 981:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5059
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 982:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5063
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 983:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5069
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 984:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5074
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5085
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 986:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5089
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 987:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5093
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5097
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 989:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5101
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 990:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5112
		{
			yyVAL.expr = nil
		}
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5116
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 992:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5121
		{
			yyVAL.columns = nil
		}
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5125
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5131
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5135
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5141
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5145
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 998:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5151
		{
			yyVAL.tableExpr = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].selectExprs}
		}
	case 999:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5165
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 1000:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5169
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 1001:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5173
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5177
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5183
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 1004:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5185
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 1005:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5189
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5191
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 1007:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5195
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5197
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 1009:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5200
		{
			yyVAL.empty = struct{}{}
		}
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5202
		{
			yyVAL.empty = struct{}{}
		}
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5207
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5211
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5217
		{
			yyVAL.str = JoinStr
		}
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5221
		{
			yyVAL.str = JoinStr
		}
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5225
		{
			yyVAL.str = JoinStr
		}
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5231
		{
			yyVAL.str = StraightJoinStr
		}
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5237
		{
			yyVAL.str = LeftJoinStr
		}
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5241
		{
			yyVAL.str = LeftJoinStr
		}
	case 1020:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5245
		{
			yyVAL.str = RightJoinStr
		}
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5249
		{
			yyVAL.str = RightJoinStr
		}
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5253
		{
			yyVAL.str = FullOuterJoinStr
		}
	case 1023:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5257
		{
			yyVAL.str = FullOuterJoinStr
		}
	case 1024:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5263
		{
			yyVAL.str = NaturalJoinStr
		}
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5267
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 1026:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:5277
		{
			yyVAL.tableExpr = &JSONTableExpr{Data: yyDollar[3].expr, Path: string(yyDollar[5].bytes), Spec: yyDollar[8].TableSpec, Alias: yyDollar[12].tableIdent}
		}
	case 1027:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:5281
		{
			yyVAL.tableExpr = &JSONTableExpr{Data: yyDollar[3].expr, Path: string(yyDollar[5].bytes), Spec: yyDollar[8].TableSpec, Alias: yyDollar[11].tableIdent}
		}
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5287
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5292
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5300
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 1031:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5312
		{
			yyVAL.columnType = ColumnType{Path: string(yyDollar[2].bytes)}
		}
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5316
		{
			yyVAL.columnType = ColumnType{Path: string(yyDollar[3].bytes)}
		}
	case 1033:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5322
		{

		}
	case 1034:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5340
		{

		}
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5344
		{

		}
	case 1036:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5348
		{

		}
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5352
		{

		}
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5358
		{
			yyVAL.triggerName = TriggerName{Name: yyDollar[1].colIdent}
		}
	case 1039:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5362
		{
			yyVAL.triggerName = TriggerName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 1040:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5368
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 1041:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5374
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5378
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5384
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5388
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5392
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5396
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5400
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5406
		{
			yyVAL.procedureName = ProcedureName{Name: yyDollar[1].colIdent}
		}
	case 1049:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5410
		{
			yyVAL.procedureName = ProcedureName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5416
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 1051:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5421
		{
			yyVAL.indexHints = nil
		}
	case 1052:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5425
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 1053:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5429
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 1054:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5433
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 1055:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5438
		{
			yyVAL.expr = nil
		}
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5442
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5448
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1058:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5452
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 1059:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5456
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5460
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 1061:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5464
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5468
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5472
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1064:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5476
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 1065:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5482
		{
			yyVAL.str = ""
		}
	case 1066:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5486
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5492
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5496
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1069:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5502
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5506
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 1071:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5510
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 1072:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5514
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 1073:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5518
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 1074:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5522
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 1075:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5526
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 1076:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5530
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 1077:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5534
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 1078:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5538
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5544
		{
			yyVAL.str = IsNullStr
		}
	case 1080:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5548
		{
			yyVAL.str = IsNotNullStr
		}
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5552
		{
			yyVAL.str = IsTrueStr
		}
	case 1082:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5556
		{
			yyVAL.str = IsNotTrueStr
		}
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5560
		{
			yyVAL.str = IsFalseStr
		}
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5564
		{
			yyVAL.str = IsNotFalseStr
		}
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5570
		{
			yyVAL.str = EqualStr
		}
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5574
		{
			yyVAL.str = LessThanStr
		}
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5578
		{
			yyVAL.str = GreaterThanStr
		}
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5582
		{
			yyVAL.str = LessEqualStr
		}
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5586
		{
			yyVAL.str = GreaterEqualStr
		}
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5590
		{
			yyVAL.str = NotEqualStr
		}
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5594
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 1092:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5599
		{
			yyVAL.expr = nil
		}
	case 1093:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5603
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5609
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5613
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5617
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 1097:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5623
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5629
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 1099:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5633
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 1100:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5639
		{
			yyVAL.selectExprs = nil
		}
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5646
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 1103:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5650
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5656
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5660
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5666
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5670
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5674
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5678
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5682
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5686
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5690
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5694
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5698
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5702
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5706
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5710
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5714
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5718
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5722
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5726
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5730
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 1123:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5734
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5738
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5742
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 1126:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5746
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5750
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 1128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5754
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 1129:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5758
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 1130:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5762
		{
			yyVAL.expr = &UnaryExpr{Operator: yyDollar[1].str, Expr: yyDollar[2].expr}
		}
	case 1131:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5766
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 1132:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5774
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 1133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5788
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 1134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5792
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 1135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5796
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 1142:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5816
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 1143:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5820
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 1144:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5830
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1145:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5834
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1146:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5838
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1147:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5842
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1148:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5846
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1149:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5850
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1150:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5854
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1151:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5858
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1152:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5862
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1153:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5866
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1154:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5870
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1155:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5874
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1156:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5878
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1157:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5882
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1158:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5886
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1159:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5890
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1160:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5894
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1161:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5903
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1162:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5907
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1163:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5911
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 1164:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5915
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1165:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5919
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 1166:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5923
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1167:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5927
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5931
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5935
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5939
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1171:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5943
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5954
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1173:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5958
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1174:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5962
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1175:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5966
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5970
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1177:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5974
		{
			yyVAL.expr = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 1178:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5978
		{
			yyVAL.expr = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 1179:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5982
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1180:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5986
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1181:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5990
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 1182:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5994
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1183:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5998
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1184:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6002
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1185:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6006
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1186:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6010
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1187:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6014
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 1188:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6018
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 1189:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:6022
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 1190:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:6026
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 1191:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:6030
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 1192:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:6034
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 1193:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6038
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1194:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:6042
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 1195:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6046
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 1196:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6050
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 1197:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6054
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1198:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6064
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1199:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6068
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1200:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6072
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1201:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6077
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1202:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6082
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1203:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6087
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1204:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6093
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1205:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6098
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1206:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6102
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1207:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6107
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1208:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6111
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1209:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6115
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1210:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6120
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6125
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6130
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1213:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6134
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1214:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6138
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1217:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6149
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1218:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6159
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1219:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6163
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1220:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6167
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1221:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6171
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1222:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6175
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1223:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6179
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1224:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6185
		{
			yyVAL.str = ""
		}
	case 1225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6189
		{
			yyVAL.str = BooleanModeStr
		}
	case 1226:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6193
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 1227:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:6197
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 1228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6201
		{
			yyVAL.str = QueryExpansionStr
		}
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6207
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6211
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6217
		{
			yyVAL.str = Armscii8Str
		}
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6221
		{
			yyVAL.str = AsciiStr
		}
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6225
		{
			yyVAL.str = Big5Str
		}
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6229
		{
			yyVAL.str = UBinaryStr
		}
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6233
		{
			yyVAL.str = Cp1250Str
		}
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6237
		{
			yyVAL.str = Cp1251Str
		}
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6241
		{
			yyVAL.str = Cp1256Str
		}
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6245
		{
			yyVAL.str = Cp1257Str
		}
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6249
		{
			yyVAL.str = Cp850Str
		}
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6253
		{
			yyVAL.str = Cp852Str
		}
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6257
		{
			yyVAL.str = Cp866Str
		}
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6261
		{
			yyVAL.str = Cp932Str
		}
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6265
		{
			yyVAL.str = Dec8Str
		}
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6269
		{
			yyVAL.str = EucjpmsStr
		}
	case 1245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6273
		{
			yyVAL.str = EuckrStr
		}
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6277
		{
			yyVAL.str = Gb18030Str
		}
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6281
		{
			yyVAL.str = Gb2312Str
		}
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6285
		{
			yyVAL.str = GbkStr
		}
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6289
		{
			yyVAL.str = Geostd8Str
		}
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6293
		{
			yyVAL.str = GreekStr
		}
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6297
		{
			yyVAL.str = HebrewStr
		}
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6301
		{
			yyVAL.str = Hp8Str
		}
	case 1253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6305
		{
			yyVAL.str = Keybcs2Str
		}
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6309
		{
			yyVAL.str = Koi8rStr
		}
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6313
		{
			yyVAL.str = Koi8uStr
		}
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6317
		{
			yyVAL.str = Latin1Str
		}
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6321
		{
			yyVAL.str = Latin2Str
		}
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6325
		{
			yyVAL.str = Latin5Str
		}
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6329
		{
			yyVAL.str = Latin7Str
		}
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6333
		{
			yyVAL.str = MacceStr
		}
	case 1261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6337
		{
			yyVAL.str = MacromanStr
		}
	case 1262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6341
		{
			yyVAL.str = SjisStr
		}
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6345
		{
			yyVAL.str = Swe7Str
		}
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6349
		{
			yyVAL.str = Tis620Str
		}
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6353
		{
			yyVAL.str = Ucs2Str
		}
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6357
		{
			yyVAL.str = UjisStr
		}
	case 1267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6361
		{
			yyVAL.str = Utf16Str
		}
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6365
		{
			yyVAL.str = Utf16leStr
		}
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6369
		{
			yyVAL.str = Utf32Str
		}
	case 1270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6373
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6377
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6381
		{
			yyVAL.str = Utf8mb4Str
		}
	case 1273:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6387
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1274:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6391
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 1275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6395
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6399
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1277:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6403
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1278:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6407
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6413
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1280:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6417
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6421
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1282:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6425
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1283:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6429
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6433
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1285:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6437
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1286:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6442
		{
			yyVAL.expr = nil
		}
	case 1287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6446
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1288:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6451
		{
			yyVAL.str = string("")
		}
	case 1289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6455
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6461
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 1291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6465
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 1292:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6471
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 1293:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6476
		{
			yyVAL.expr = nil
		}
	case 1294:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6480
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6486
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 1296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6490
		{
			yyVAL.colName = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1297:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6494
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 1298:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6498
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1299:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6502
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1300:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6506
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1301:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6510
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1302:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6514
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1303:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6518
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1304:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6522
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1305:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6526
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1306:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6530
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1307:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6534
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1308:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6538
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 1309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6544
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6548
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 1311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6552
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 1312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6556
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6560
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 1314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6564
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 1315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6568
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6572
		{
			yyVAL.expr = &NullVal{}
		}
	case 1317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6578
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 1318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6582
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6586
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1320:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6591
		{
			yyVAL.exprs = nil
		}
	case 1321:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6595
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 1322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6601
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1323:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6605
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6611
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1325:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6616
		{
			yyVAL.expr = nil
		}
	case 1326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6620
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6626
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1328:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6631
		{
			yyVAL.orderBy = nil
		}
	case 1329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6635
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 1330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6641
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 1331:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6645
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 1332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6651
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 1333:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6656
		{
			yyVAL.str = AscScr
		}
	case 1334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6660
		{
			yyVAL.str = AscScr
		}
	case 1335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6664
		{
			yyVAL.str = DescScr
		}
	case 1336:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6669
		{
			yyVAL.limit = nil
		}
	case 1337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6673
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 1338:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6677
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 1339:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6681
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 1340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6687
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6691
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1342:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6696
		{
			yyVAL.str = ""
		}
	case 1343:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6700
		{
			yyVAL.str = ForUpdateStr
		}
	case 1344:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6704
		{
			yyVAL.str = ShareModeStr
		}
	case 1345:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6717
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 1346:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6721
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 1347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6725
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 1348:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6729
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 1349:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6734
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 1350:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6738
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 1351:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6742
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 1352:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6748
		{
			yyVAL.columns = nil
		}
	case 1353:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6752
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 1354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6758
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1355:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6762
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1356:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6768
		{
			yyVAL.colIdent = yyDollar[3].colIdent
		}
	case 1357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6772
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6776
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6780
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6784
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6788
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1362:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6793
		{
			yyVAL.assignExprs = nil
		}
	case 1363:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6797
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 1364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6803
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 1365:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6807
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 1366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6813
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 1367:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6817
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 1368:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6823
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 1369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6829
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 1370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6839
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 1371:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6843
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 1372:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6849
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 1373:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6852
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1374:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6856
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6860
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1376:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6866
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 1377:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6870
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 1378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6876
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 1379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6887
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6900
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1381:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6913
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 1382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6919
		{
			yyVAL.setScope = SetScope_Global
		}
	case 1383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6923
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6929
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6933
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 1386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6937
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 1387:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6943
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1388:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6947
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1389:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6951
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 1391:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6958
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6965
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 1394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6969
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6973
		{
			yyVAL.expr = &Default{}
		}
	case 1398:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6982
		{
			yyVAL.byt = 0
		}
	case 1399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6984
		{
			yyVAL.byt = 1
		}
	case 1400:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6987
		{
			yyVAL.byt = 0
		}
	case 1401:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6989
		{
			yyVAL.byt = 1
		}
	case 1402:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6992
		{
			yyVAL.byt = 0
		}
	case 1403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6994
		{
			yyVAL.byt = 1
		}
	case 1404:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6997
		{
			yyVAL.str = ""
		}
	case 1405:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6999
		{
			yyVAL.str = IgnoreStr
		}
	case 1406:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7002
		{
			yyVAL.sqlVal = nil
		}
	case 1407:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7004
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1408:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7006
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7010
		{
			yyVAL.empty = struct{}{}
		}
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7012
		{
			yyVAL.empty = struct{}{}
		}
	case 1411:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7015
		{
			yyVAL.empty = struct{}{}
		}
	case 1412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7017
		{
			yyVAL.empty = struct{}{}
		}
	case 1413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7019
		{
			yyVAL.empty = struct{}{}
		}
	case 1414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7023
		{
			yyVAL.str = UniqueStr
		}
	case 1415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7025
		{
			yyVAL.str = FulltextStr
		}
	case 1416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7027
		{
			yyVAL.str = SpatialStr
		}
	case 1417:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7030
		{
			yyVAL.str = ""
		}
	case 1418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7032
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1419:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7035
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 1420:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7037
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 1421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7041
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7045
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7051
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 1424:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7055
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 1426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7062
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7068
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7072
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7079
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1431:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7084
		{
			yyVAL.str = string("")
		}
	case 1432:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7086
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1433:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7089
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7091
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1435:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7094
		{
			yyVAL.EnclosedBy = nil
		}
	case 1436:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7098
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1437:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7103
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7107
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1439:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7112
		{
			yyVAL.sqlVal = nil
		}
	case 1440:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7116
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1441:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7121
		{
			yyVAL.sqlVal = nil
		}
	case 1442:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7125
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1443:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7130
		{
			yyVAL.Fields = nil
		}
	case 1444:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7134
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1445:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7139
		{
			yyVAL.Lines = nil
		}
	case 1446:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7143
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1447:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7148
		{
			yyVAL.sqlVal = nil
		}
	case 1448:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7152
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1449:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7158
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1450:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7164
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1451:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7168
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1452:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7174
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1453:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7178
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1454:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7184
		{
			yyVAL.lockType = LockRead
		}
	case 1455:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7188
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1456:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7192
		{
			yyVAL.lockType = LockWrite
		}
	case 1457:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7196
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1458:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7202
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1459:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7208
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[2].bytes)}
		}
	case 1460:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7212
		{
			yyVAL.statement = &Kill{ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1461:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7216
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 2275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8071
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8080
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
