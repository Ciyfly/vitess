// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

//import "runtime/debug"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

func yySpecialCommentMode(yylex interface{}) bool {
	tkn := yylex.(*Tokenizer)
	return tkn.specialComment != nil
}

//line sql.y:64
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	variables                Variables
	into                     *Into
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	triggerName              TriggerName
	tableName                TableName
	tableNames               TableNames
	procedureName            ProcedureName
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	flushOption              *FlushOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	viewSpec                 *ViewSpec
	showFilter               *ShowFilter
	frame                    *Frame
	frameExtent              *FrameExtent
	frameBound               *FrameBound
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	charsetCollate           *CharsetAndCollate
	charsetCollates          []*CharsetAndCollate
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptionItem            TLSOptionItem
	tlsOptionItems           []TLSOptionItem
	accountLimitItem         AccountLimitItem
	accountLimitItems        []AccountLimitItem
	passLockItem             PassLockItem
	passLockItems            []PassLockItem
	grantPrivilege           Privilege
	grantPrivileges          []Privilege
	grantObjectType          GrantObjectType
	privilegeLevel           PrivilegeLevel
	grantAssumption          *GrantUserAssumption
	with                     *With
	window                   Window
	over                     *Over
	windowDef                *WindowDef
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const DUPLICATE = 57369
const DEFAULT = 57370
const SET = 57371
const LOCK = 57372
const UNLOCK = 57373
const KEYS = 57374
const OF = 57375
const OUTFILE = 57376
const DUMPFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const INTO = 57425
const OR = 57426
const XOR = 57427
const AND = 57428
const NOT = 57429
const BETWEEN = 57430
const CASE = 57431
const WHEN = 57432
const THEN = 57433
const ELSE = 57434
const ELSEIF = 57435
const END = 57436
const LE = 57437
const GE = 57438
const NE = 57439
const NULL_SAFE_EQUAL = 57440
const IS = 57441
const LIKE = 57442
const REGEXP = 57443
const IN = 57444
const UNBOUNDED = 57445
const PARTITION = 57446
const RANGE = 57447
const ROWS = 57448
const GROUPS = 57449
const PRECEDING = 57450
const FOLLOWING = 57451
const SHIFT_LEFT = 57452
const SHIFT_RIGHT = 57453
const DIV = 57454
const MOD = 57455
const UNARY = 57456
const COLLATE = 57457
const BINARY = 57458
const UNDERSCORE_ARMSCII8 = 57459
const UNDERSCORE_ASCII = 57460
const UNDERSCORE_BIG5 = 57461
const UNDERSCORE_BINARY = 57462
const UNDERSCORE_CP1250 = 57463
const UNDERSCORE_CP1251 = 57464
const UNDERSCORE_CP1256 = 57465
const UNDERSCORE_CP1257 = 57466
const UNDERSCORE_CP850 = 57467
const UNDERSCORE_CP852 = 57468
const UNDERSCORE_CP866 = 57469
const UNDERSCORE_CP932 = 57470
const UNDERSCORE_DEC8 = 57471
const UNDERSCORE_EUCJPMS = 57472
const UNDERSCORE_EUCKR = 57473
const UNDERSCORE_GB18030 = 57474
const UNDERSCORE_GB2312 = 57475
const UNDERSCORE_GBK = 57476
const UNDERSCORE_GEOSTD8 = 57477
const UNDERSCORE_GREEK = 57478
const UNDERSCORE_HEBREW = 57479
const UNDERSCORE_HP8 = 57480
const UNDERSCORE_KEYBCS2 = 57481
const UNDERSCORE_KOI8R = 57482
const UNDERSCORE_KOI8U = 57483
const UNDERSCORE_LATIN1 = 57484
const UNDERSCORE_LATIN2 = 57485
const UNDERSCORE_LATIN5 = 57486
const UNDERSCORE_LATIN7 = 57487
const UNDERSCORE_MACCE = 57488
const UNDERSCORE_MACROMAN = 57489
const UNDERSCORE_SJIS = 57490
const UNDERSCORE_SWE7 = 57491
const UNDERSCORE_TIS620 = 57492
const UNDERSCORE_UCS2 = 57493
const UNDERSCORE_UJIS = 57494
const UNDERSCORE_UTF16 = 57495
const UNDERSCORE_UTF16LE = 57496
const UNDERSCORE_UTF32 = 57497
const UNDERSCORE_UTF8 = 57498
const UNDERSCORE_UTF8MB3 = 57499
const UNDERSCORE_UTF8MB4 = 57500
const INTERVAL = 57501
const JSON_EXTRACT_OP = 57502
const JSON_UNQUOTE_EXTRACT_OP = 57503
const CREATE = 57504
const ALTER = 57505
const DROP = 57506
const RENAME = 57507
const ANALYZE = 57508
const ADD = 57509
const MODIFY = 57510
const CHANGE = 57511
const SCHEMA = 57512
const TABLE = 57513
const INDEX = 57514
const INDEXES = 57515
const VIEW = 57516
const TO = 57517
const IGNORE = 57518
const IF = 57519
const PRIMARY = 57520
const COLUMN = 57521
const SPATIAL = 57522
const FULLTEXT = 57523
const KEY_BLOCK_SIZE = 57524
const CHECK = 57525
const ACTION = 57526
const CASCADE = 57527
const CONSTRAINT = 57528
const FOREIGN = 57529
const NO = 57530
const REFERENCES = 57531
const RESTRICT = 57532
const FIRST = 57533
const AFTER = 57534
const SHOW = 57535
const DESCRIBE = 57536
const EXPLAIN = 57537
const DATE = 57538
const ESCAPE = 57539
const REPAIR = 57540
const OPTIMIZE = 57541
const TRUNCATE = 57542
const FORMAT = 57543
const MAXVALUE = 57544
const REORGANIZE = 57545
const LESS = 57546
const THAN = 57547
const PROCEDURE = 57548
const TRIGGER = 57549
const TRIGGERS = 57550
const FUNCTION = 57551
const STATUS = 57552
const VARIABLES = 57553
const WARNINGS = 57554
const ERRORS = 57555
const KILL = 57556
const CONNECTION = 57557
const SEQUENCE = 57558
const ENABLE = 57559
const DISABLE = 57560
const EACH = 57561
const ROW = 57562
const BEFORE = 57563
const FOLLOWS = 57564
const PRECEDES = 57565
const DEFINER = 57566
const INVOKER = 57567
const INOUT = 57568
const OUT = 57569
const DETERMINISTIC = 57570
const CONTAINS = 57571
const READS = 57572
const MODIFIES = 57573
const SQL = 57574
const SECURITY = 57575
const TEMPORARY = 57576
const ALGORITHM = 57577
const MERGE = 57578
const TEMPTABLE = 57579
const UNDEFINED = 57580
const CLASS_ORIGIN = 57581
const SUBCLASS_ORIGIN = 57582
const MESSAGE_TEXT = 57583
const MYSQL_ERRNO = 57584
const CONSTRAINT_CATALOG = 57585
const CONSTRAINT_SCHEMA = 57586
const CONSTRAINT_NAME = 57587
const CATALOG_NAME = 57588
const SCHEMA_NAME = 57589
const TABLE_NAME = 57590
const COLUMN_NAME = 57591
const CURSOR_NAME = 57592
const SIGNAL = 57593
const RESIGNAL = 57594
const SQLSTATE = 57595
const DECLARE = 57596
const CONDITION = 57597
const CURSOR = 57598
const CONTINUE = 57599
const EXIT = 57600
const UNDO = 57601
const HANDLER = 57602
const FOUND = 57603
const SQLWARNING = 57604
const SQLEXCEPTION = 57605
const USER = 57606
const IDENTIFIED = 57607
const ROLE = 57608
const REUSE = 57609
const GRANT = 57610
const GRANTS = 57611
const REVOKE = 57612
const NONE = 57613
const ATTRIBUTE = 57614
const RANDOM = 57615
const PASSWORD = 57616
const INITIAL = 57617
const AUTHENTICATION = 57618
const SSL = 57619
const X509 = 57620
const CIPHER = 57621
const ISSUER = 57622
const SUBJECT = 57623
const ACCOUNT = 57624
const EXPIRE = 57625
const NEVER = 57626
const DAY = 57627
const OPTION = 57628
const OPTIONAL = 57629
const EXCEPT = 57630
const ADMIN = 57631
const PRIVILEGES = 57632
const MAX_QUERIES_PER_HOUR = 57633
const MAX_UPDATES_PER_HOUR = 57634
const MAX_CONNECTIONS_PER_HOUR = 57635
const MAX_USER_CONNECTIONS = 57636
const FLUSH = 57637
const FAILED_LOGIN_ATTEMPTS = 57638
const PASSWORD_LOCK_TIME = 57639
const REQUIRE = 57640
const PROXY = 57641
const ROUTINE = 57642
const TABLESPACE = 57643
const CLIENT = 57644
const SLAVE = 57645
const EVENT = 57646
const EXECUTE = 57647
const FILE = 57648
const RELOAD = 57649
const REPLICATION = 57650
const SHUTDOWN = 57651
const SUPER = 57652
const USAGE = 57653
const LOGS = 57654
const ENGINE = 57655
const ERROR = 57656
const GENERAL = 57657
const HOSTS = 57658
const OPTIMIZER_COSTS = 57659
const RELAY = 57660
const SLOW = 57661
const USER_RESOURCES = 57662
const NO_WRITE_TO_BINLOG = 57663
const CHANNEL = 57664
const BEGIN = 57665
const START = 57666
const TRANSACTION = 57667
const COMMIT = 57668
const ROLLBACK = 57669
const SAVEPOINT = 57670
const WORK = 57671
const RELEASE = 57672
const BIT = 57673
const TINYINT = 57674
const SMALLINT = 57675
const MEDIUMINT = 57676
const INT = 57677
const INTEGER = 57678
const BIGINT = 57679
const INTNUM = 57680
const SERIAL = 57681
const REAL = 57682
const DOUBLE = 57683
const FLOAT_TYPE = 57684
const DECIMAL = 57685
const NUMERIC = 57686
const DEC = 57687
const FIXED = 57688
const PRECISION = 57689
const TIME = 57690
const TIMESTAMP = 57691
const DATETIME = 57692
const YEAR = 57693
const CHAR = 57694
const VARCHAR = 57695
const BOOL = 57696
const CHARACTER = 57697
const VARBINARY = 57698
const NCHAR = 57699
const NVARCHAR = 57700
const NATIONAL = 57701
const VARYING = 57702
const TEXT = 57703
const TINYTEXT = 57704
const MEDIUMTEXT = 57705
const LONGTEXT = 57706
const LONG = 57707
const BLOB = 57708
const TINYBLOB = 57709
const MEDIUMBLOB = 57710
const LONGBLOB = 57711
const JSON = 57712
const ENUM = 57713
const GEOMETRY = 57714
const POINT = 57715
const LINESTRING = 57716
const POLYGON = 57717
const GEOMETRYCOLLECTION = 57718
const MULTIPOINT = 57719
const MULTILINESTRING = 57720
const MULTIPOLYGON = 57721
const LOCAL = 57722
const LOW_PRIORITY = 57723
const NULLX = 57724
const AUTO_INCREMENT = 57725
const APPROXNUM = 57726
const SIGNED = 57727
const UNSIGNED = 57728
const ZEROFILL = 57729
const SRID = 57730
const COLLATION = 57731
const DATABASES = 57732
const SCHEMAS = 57733
const TABLES = 57734
const FULL = 57735
const PROCESSLIST = 57736
const COLUMNS = 57737
const FIELDS = 57738
const ENGINES = 57739
const PLUGINS = 57740
const NAMES = 57741
const CHARSET = 57742
const GLOBAL = 57743
const SESSION = 57744
const ISOLATION = 57745
const LEVEL = 57746
const READ = 57747
const WRITE = 57748
const ONLY = 57749
const REPEATABLE = 57750
const COMMITTED = 57751
const UNCOMMITTED = 57752
const SERIALIZABLE = 57753
const ENCRYPTION = 57754
const CURRENT_TIMESTAMP = 57755
const DATABASE = 57756
const CURRENT_DATE = 57757
const CURRENT_USER = 57758
const CURRENT_TIME = 57759
const LOCALTIME = 57760
const LOCALTIMESTAMP = 57761
const UTC_DATE = 57762
const UTC_TIME = 57763
const UTC_TIMESTAMP = 57764
const REPLACE = 57765
const CONVERT = 57766
const CAST = 57767
const SUBSTR = 57768
const SUBSTRING = 57769
const TRIM = 57770
const LEADING = 57771
const TRAILING = 57772
const BOTH = 57773
const GROUP_CONCAT = 57774
const SEPARATOR = 57775
const TIMESTAMPADD = 57776
const TIMESTAMPDIFF = 57777
const OVER = 57778
const WINDOW = 57779
const GROUPING = 57780
const CURRENT = 57781
const AVG = 57782
const BIT_AND = 57783
const BIT_OR = 57784
const BIT_XOR = 57785
const COUNT = 57786
const JSON_ARRAYAGG = 57787
const JSON_OBJECTAGG = 57788
const MAX = 57789
const MIN = 57790
const STDDEV_POP = 57791
const STDDEV = 57792
const STD = 57793
const STDDEV_SAMP = 57794
const SUM = 57795
const VAR_POP = 57796
const VARIANCE = 57797
const VAR_SAMP = 57798
const CUME_DIST = 57799
const DENSE_RANK = 57800
const FIRST_VALUE = 57801
const LAG = 57802
const LAST_VALUE = 57803
const LEAD = 57804
const NTH_VALUE = 57805
const NTILE = 57806
const ROW_NUMBER = 57807
const PERCENT_RANK = 57808
const RANK = 57809
const JSON_TABLE = 57810
const PATH = 57811
const MATCH = 57812
const AGAINST = 57813
const BOOLEAN = 57814
const LANGUAGE = 57815
const WITH = 57816
const QUERY = 57817
const EXPANSION = 57818
const ACCESSIBLE = 57819
const ASENSITIVE = 57820
const CUBE = 57821
const DAY_HOUR = 57822
const DAY_MICROSECOND = 57823
const DAY_MINUTE = 57824
const DAY_SECOND = 57825
const DELAYED = 57826
const DISTINCTROW = 57827
const DUAL = 57828
const EMPTY = 57829
const FETCH = 57830
const FLOAT4 = 57831
const FLOAT8 = 57832
const GET = 57833
const HIGH_PRIORITY = 57834
const HOUR_MICROSECOND = 57835
const HOUR_MINUTE = 57836
const HOUR_SECOND = 57837
const INSENSITIVE = 57838
const INT1 = 57839
const INT2 = 57840
const INT3 = 57841
const INT4 = 57842
const INT8 = 57843
const IO_AFTER_GTIDS = 57844
const IO_BEFORE_GTIDS = 57845
const ITERATE = 57846
const LEAVE = 57847
const LINEAR = 57848
const LOOP = 57849
const MASTER_BIND = 57850
const MASTER_SSL_VERIFY_SERVER_CERT = 57851
const MIDDLEINT = 57852
const MINUTE_MICROSECOND = 57853
const MINUTE_SECOND = 57854
const PURGE = 57855
const READ_WRITE = 57856
const REPEAT = 57857
const RETURN = 57858
const RLIKE = 57859
const SECOND_MICROSECOND = 57860
const SENSITIVE = 57861
const SPECIFIC = 57862
const SQL_BIG_RESULT = 57863
const SQL_SMALL_RESULT = 57864
const VARCHARACTER = 57865
const WHILE = 57866
const YEAR_MONTH = 57867
const UNUSED = 57868
const DESCRIPTION = 57869
const LATERAL = 57870
const MEMBER = 57871
const RECURSIVE = 57872
const BUCKETS = 57873
const CLONE = 57874
const COMPONENT = 57875
const DEFINITION = 57876
const ENFORCED = 57877
const EXCLUDE = 57878
const GEOMCOLLECTION = 57879
const GET_MASTER_PUBLIC_KEY = 57880
const HISTOGRAM = 57881
const HISTORY = 57882
const INACTIVE = 57883
const INVISIBLE = 57884
const LOCKED = 57885
const MASTER_COMPRESSION_ALGORITHMS = 57886
const MASTER_PUBLIC_KEY_PATH = 57887
const MASTER_TLS_CIPHERSUITES = 57888
const MASTER_ZSTD_COMPRESSION_LEVEL = 57889
const NESTED = 57890
const NETWORK_NAMESPACE = 57891
const NOWAIT = 57892
const NULLS = 57893
const OJ = 57894
const OLD = 57895
const ORDINALITY = 57896
const ORGANIZATION = 57897
const OTHERS = 57898
const PERSIST = 57899
const PERSIST_ONLY = 57900
const PRIVILEGE_CHECKS_USER = 57901
const PROCESS = 57902
const REFERENCE = 57903
const REQUIRE_ROW_FORMAT = 57904
const RESOURCE = 57905
const RESPECT = 57906
const RESTART = 57907
const RETAIN = 57908
const SECONDARY = 57909
const SECONDARY_ENGINE = 57910
const SECONDARY_LOAD = 57911
const SECONDARY_UNLOAD = 57912
const SKIP = 57913
const THREAD_PRIORITY = 57914
const TIES = 57915
const VCPU = 57916
const VISIBLE = 57917
const SYSTEM = 57918
const INFILE = 57919
const ACTIVE = 57920
const AGGREGATE = 57921
const ANY = 57922
const ARRAY = 57923
const ASCII = 57924
const AT = 57925
const AUTOEXTEND_SIZE = 57926
const ENDS = 57927
const EVENTS = 57928
const GENERATED = 57929
const ALWAYS = 57930
const STORED = 57931
const VIRTUAL = 57932
const NVAR = 57933
const PASSWORD_LOCK = 57934

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DUMPFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"INTO",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB3",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"ENABLE",
	"DISABLE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"ALGORITHM",
	"MERGE",
	"TEMPTABLE",
	"UNDEFINED",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTION",
	"OPTIONAL",
	"EXCEPT",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EVENT",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"SRID",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ENCRYPTION",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"JSON_TABLE",
	"PATH",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ACCESSIBLE",
	"ASENSITIVE",
	"CUBE",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"DELAYED",
	"DISTINCTROW",
	"DUAL",
	"EMPTY",
	"FETCH",
	"FLOAT4",
	"FLOAT8",
	"GET",
	"HIGH_PRIORITY",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"INSENSITIVE",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"IO_AFTER_GTIDS",
	"IO_BEFORE_GTIDS",
	"ITERATE",
	"LEAVE",
	"LINEAR",
	"LOOP",
	"MASTER_BIND",
	"MASTER_SSL_VERIFY_SERVER_CERT",
	"MIDDLEINT",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"PURGE",
	"READ_WRITE",
	"REPEAT",
	"RETURN",
	"RLIKE",
	"SECOND_MICROSECOND",
	"SENSITIVE",
	"SPECIFIC",
	"SQL_BIG_RESULT",
	"SQL_SMALL_RESULT",
	"VARCHARACTER",
	"WHILE",
	"YEAR_MONTH",
	"UNUSED",
	"DESCRIPTION",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"ACTIVE",
	"AGGREGATE",
	"ANY",
	"ARRAY",
	"ASCII",
	"AT",
	"AUTOEXTEND_SIZE",
	"ENDS",
	"EVENTS",
	"GENERATED",
	"ALWAYS",
	"STORED",
	"VIRTUAL",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 35,
	611, 35,
	-2, 56,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 41,
	189, 1269,
	190, 1288,
	-2, 249,
	-1, 47,
	228, 751,
	229, 751,
	-2, 740,
	-1, 67,
	5, 61,
	-2, 43,
	-1, 477,
	177, 1665,
	-2, 939,
	-1, 478,
	177, 1298,
	-2, 1292,
	-1, 479,
	177, 1299,
	-2, 1293,
	-1, 509,
	177, 1775,
	-2, 1187,
	-1, 510,
	177, 1857,
	-2, 941,
	-1, 511,
	177, 1685,
	-2, 942,
	-1, 515,
	177, 1622,
	-2, 2116,
	-1, 516,
	177, 1646,
	-2, 2117,
	-1, 517,
	177, 1759,
	-2, 2118,
	-1, 518,
	177, 1766,
	-2, 2119,
	-1, 519,
	177, 1846,
	-2, 2120,
	-1, 578,
	177, 1635,
	-2, 1160,
	-1, 581,
	177, 1653,
	-2, 1089,
	-1, 582,
	177, 1869,
	-2, 1089,
	-1, 583,
	177, 1868,
	-2, 1089,
	-1, 584,
	177, 1867,
	-2, 1089,
	-1, 585,
	177, 1753,
	-2, 1089,
	-1, 586,
	177, 1754,
	-2, 1089,
	-1, 587,
	177, 1651,
	-2, 1089,
	-1, 588,
	177, 1652,
	-2, 1089,
	-1, 589,
	177, 1654,
	-2, 1089,
	-1, 837,
	100, 1957,
	177, 1957,
	-2, 1253,
	-1, 838,
	100, 2052,
	177, 2052,
	-2, 1254,
	-1, 843,
	100, 1977,
	177, 1977,
	-2, 1255,
	-1, 844,
	100, 2015,
	177, 2015,
	-2, 1256,
	-1, 845,
	100, 2016,
	177, 2016,
	-2, 1257,
	-1, 846,
	100, 1905,
	177, 1905,
	-2, 1261,
	-1, 848,
	100, 1996,
	177, 1996,
	-2, 1263,
	-1, 1108,
	5, 61,
	-2, 44,
	-1, 1370,
	1, 520,
	611, 520,
	-2, 518,
	-1, 1372,
	1, 520,
	611, 520,
	-2, 518,
	-1, 1783,
	177, 1296,
	-2, 1225,
	-1, 1790,
	177, 1342,
	-2, 2116,
	-1, 1791,
	177, 1366,
	-2, 2117,
	-1, 1792,
	177, 1482,
	-2, 2118,
	-1, 1793,
	177, 1489,
	-2, 2119,
	-1, 1794,
	177, 1572,
	-2, 2120,
	-1, 1833,
	177, 1301,
	-2, 1297,
	-1, 1952,
	1, 852,
	5, 852,
	12, 852,
	13, 852,
	14, 852,
	15, 852,
	17, 852,
	19, 852,
	29, 852,
	30, 852,
	56, 852,
	57, 852,
	58, 852,
	59, 852,
	60, 852,
	62, 852,
	63, 852,
	66, 852,
	67, 852,
	69, 852,
	70, 852,
	87, 852,
	455, 852,
	611, 852,
	-2, 885,
	-1, 1960,
	67, 78,
	69, 78,
	-2, 82,
	-1, 1977,
	177, 1779,
	-2, 1258,
	-1, 2060,
	1, 521,
	611, 521,
	-2, 518,
	-1, 2150,
	44, 633,
	196, 635,
	198, 633,
	199, 633,
	-2, 676,
	-1, 2199,
	5, 62,
	-2, 971,
	-1, 2551,
	177, 1622,
	-2, 2116,
	-1, 2552,
	177, 1646,
	-2, 2117,
	-1, 2553,
	177, 1759,
	-2, 2118,
	-1, 2554,
	177, 1766,
	-2, 2119,
	-1, 2555,
	177, 1846,
	-2, 2120,
	-1, 2697,
	196, 636,
	-2, 634,
	-1, 2770,
	177, 1546,
	-2, 783,
	-1, 2795,
	1, 925,
	5, 925,
	12, 925,
	13, 925,
	14, 925,
	15, 925,
	17, 925,
	19, 925,
	29, 925,
	30, 925,
	56, 925,
	57, 925,
	58, 925,
	59, 925,
	60, 925,
	62, 925,
	63, 925,
	66, 925,
	67, 925,
	69, 925,
	70, 925,
	87, 925,
	455, 925,
	611, 925,
	-2, 885,
	-1, 2936,
	5, 62,
	-2, 1219,
	-1, 3023,
	41, 1308,
	-2, 1306,
	-1, 3220,
	5, 62,
	-2, 1222,
	-1, 3235,
	278, 315,
	-2, 1364,
	-1, 3236,
	278, 316,
	-2, 1405,
	-1, 3237,
	278, 317,
	-2, 1584,
	-1, 3402,
	95, 301,
	97, 301,
	99, 301,
	-2, 56,
	-1, 3433,
	97, 308,
	98, 308,
	99, 308,
	-2, 56,
}

const yyPrivate = 57344

const yyLast = 42605

var yyAct = [...]int{
	521, 76, 3383, 3394, 3334, 3353, 3335, 2374, 3239, 1122,
	3240, 2517, 3355, 1987, 958, 451, 410, 3297, 3260, 3150,
	7, 3149, 6, 3148, 5, 3151, 8, 3278, 3212, 2639,
	3222, 481, 2961, 3120, 1300, 3080, 2810, 3210, 3023, 2789,
	3142, 2283, 2593, 1204, 2471, 3025, 2543, 2055, 2763, 520,
	1205, 2459, 2281, 1405, 2764, 2313, 463, 2408, 470, 2893,
	2079, 2277, 2656, 79, 2868, 2862, 2681, 2594, 393, 396,
	2846, 1806, 91, 2544, 1228, 3143, 2760, 76, 447, 435,
	435, 2691, 441, 1975, 1999, 2390, 975, 2317, 498, 2772,
	992, 1782, 2781, 2008, 1799, 2149, 1917, 1986, 1016, 1949,
	1985, 2041, 928, 2487, 1956, 2267, 104, 2108, 1859, 1789,
	1407, 2125, 485, 1865, 1736, 2260, 2063, 1948, 2438, 2062,
	460, 1381, 2061, 1995, 2037, 1278, 839, 1227, 2365, 1908,
	1126, 1282, 1123, 1707, 1836, 1130, 921, 3147, 3, 1952,
	1741, 1045, 1024, 466, 920, 1281, 2059, 835, 971, 836,
	124, 1144, 413, 1134, 488, 1962, 450, 412, 1023, 392,
	941, 490, 1373, 1376, 946, 100, 96, 957, 455, 2318,
	3433, 3428, 67, 2547, 3420, 3402, 3400, 2331, 3378, 3348,
	3286, 78, 2334, 81, 3082, 3081, 2608, 1734, 3002, 2637,
	2833, 3430, 3426, 3424, 3365, 3208, 3328, 918, 2339, 2338,
	3128, 2093, 842, 36, 3000, 405, 3015, 2402, 2093, 3300,
	3196, 39, 2653, 36, 461, 36, 2847, 955, 36, 3003,
	2335, 83, 3207, 89, 2509, 3127, 2849, 2525, 969, 3307,
	3333, 3100, 36, 3256, 74, 2341, 2237, 2324, 2754, 3051,
	940, 2538, 2589, 2590, 3060, 2325, 2381, 1161, 1160, 1170,
	1171, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1162, 2539,
	943, 1172, 948, 949, 1283, 77, 1284, 925, 830, 831,
	832, 951, 1737, 2279, 2124, 77, 1971, 77, 2588, 449,
	77, 1972, 1973, 1740, 2815, 2697, 2821, 2823, 2822, 2819,
	2820, 2818, 2817, 2816, 77, 1114, 2025, 1796, 1797, 87,
	85, 86, 995, 3216, 3216, 2824, 2825, 1738, 1739, 996,
	997, 3073, 118, 114, 115, 1758, 116, 1074, 404, 403,
	428, 3211, 422, 433, 416, 1082, 916, 2301, 2343, 445,
	2300, 479, 2123, 2302, 2010, 2011, 1042, 2312, 2026, 3213,
	3213, 2852, 2740, 2917, 423, 2013, 2738, 1361, 120, 119,
	2337, 1720, 2013, 2340, 2017, 2019, 2031, 2018, 2026, 402,
	1006, 387, 457, 407, 2434, 1779, 1778, 2038, 1777, 1776,
	1775, 1774, 1058, 1404, 1078, 1079, 2397, 130, 1002, 2863,
	130, 2850, 2851, 2853, 2854, 2855, 130, 2866, 446, 2426,
	76, 76, 2869, 2870, 2871, 2872, 438, 438, 3392, 3322,
	130, 2864, 2865, 3094, 3217, 3217, 121, 3029, 122, 1011,
	2680, 1013, 1089, 1012, 937, 1090, 2431, 3184, 3186, 2137,
	3242, 3241, 2663, 3104, 130, 930, 979, 980, 2880, 2401,
	983, 2889, 2138, 3102, 1014, 1003, 1004, 1769, 2080, 1049,
	3249, 1362, 1056, 2399, 130, 438, 2878, 930, 76, 112,
	3387, 3283, 1112, 3391, 2995, 130, 3281, 3282, 2994, 1117,
	2993, 3001, 981, 982, 972, 2654, 937, 2997, 1388, 1389,
	1387, 2657, 2658, 2659, 2660, 2661, 937, 2992, 1181, 2990,
	2991, 1183, 1379, 3019, 1185, 2989, 993, 2379, 994, 996,
	997, 36, 2666, 1362, 415, 414, 417, 2657, 2658, 2659,
	2660, 2661, 947, 1362, 421, 57, 1058, 397, 1046, 3350,
	106, 73, 3266, 1196, 39, 388, 1199, 1200, 1201, 1202,
	1203, 425, 1208, 3343, 3145, 429, 3086, 1010, 461, 106,
	3359, 2951, 2380, 3354, 2573, 394, 945, 944, 991, 432,
	111, 1081, 113, 988, 2382, 3090, 3091, 2074, 2075, 3357,
	398, 3096, 987, 77, 3386, 2336, 117, 3227, 3228, 3324,
	2333, 3078, 947, 1058, 2488, 1209, 1210, 1211, 1212, 1213,
	1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 3177,
	1225, 1226, 1229, 1229, 1229, 1235, 1229, 1229, 1235, 1229,
	1235, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252,
	1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262,
	1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272,
	1108, 3052, 1057, 406, 2682, 1721, 2848, 2416, 2417, 989,
	990, 2131, 2400, 36, 1007, 1182, 418, 419, 420, 426,
	1748, 430, 431, 434, 2026, 2490, 1151, 57, 1740, 1096,
	3101, 2636, 3126, 73, 1091, 2350, 39, 1231, 1233, 461,
	1237, 1239, 2016, 1242, 2040, 41, 69, 44, 43, 46,
	978, 131, 1738, 1739, 3344, 132, 2998, 3095, 133, 134,
	3178, 1050, 3016, 2403, 135, 3214, 3214, 1065, 3295, 462,
	2070, 130, 3306, 1116, 3185, 77, 47, 72, 71, 462,
	3018, 68, 3393, 45, 462, 395, 3415, 1742, 390, 2665,
	1230, 1232, 1234, 1236, 1238, 1240, 1241, 1243, 462, 2069,
	937, 3177, 1068, 131, 3381, 3384, 3380, 132, 1109, 395,
	133, 134, 88, 131, 395, 130, 135, 132, 3356, 3358,
	133, 134, 1744, 391, 1106, 1743, 135, 1063, 2444, 395,
	3398, 2894, 2895, 3434, 55, 56, 1691, 3179, 937, 2332,
	2597, 927, 2157, 2151, 2152, 937, 2150, 2153, 2154, 2005,
	2696, 64, 937, 65, 2007, 3431, 2005, 1064, 3421, 1060,
	130, 108, 2286, 2288, 3403, 942, 960, 2007, 3106, 2962,
	108, 456, 2492, 2904, 130, 2905, 1054, 2496, 66, 2491,
	2678, 2489, 2160, 2964, 1147, 2425, 2494, 41, 69, 44,
	43, 46, 2421, 1061, 1062, 2405, 2159, 2158, 2404, 2493,
	2058, 2456, 3178, 2132, 1102, 97, 3180, 70, 1393, 51,
	52, 59, 1391, 60, 2495, 2497, 1008, 939, 47, 72,
	71, 2007, 2580, 2007, 2579, 45, 1101, 1097, 1098, 1099,
	1100, 1103, 1104, 1105, 1107, 2578, 938, 2419, 1059, 1066,
	1067, 1069, 1070, 1071, 1072, 1073, 2007, 1075, 1076, 1077,
	1113, 1080, 950, 1083, 1084, 1085, 1086, 1087, 1026, 1027,
	1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037,
	2090, 359, 424, 2321, 2908, 2089, 55, 56, 2212, 3179,
	1161, 1160, 1170, 1171, 1163, 1164, 1165, 1166, 1167, 1168,
	1169, 1162, 2287, 64, 1172, 65, 2209, 1187, 1188, 2006,
	1053, 1186, 2963, 77, 3396, 99, 2444, 3397, 1184, 3395,
	937, 2726, 2006, 2445, 2005, 110, 109, 972, 2451, 2444,
	66, 2688, 2587, 2448, 110, 109, 2447, 2450, 842, 2423,
	2422, 2305, 2191, 842, 2180, 2147, 2073, 2071, 1357, 1358,
	1359, 1360, 1286, 2903, 435, 1967, 1383, 1287, 3180, 70,
	1809, 51, 52, 59, 1294, 60, 1198, 68, 1197, 106,
	1295, 1276, 2156, 435, 1152, 1406, 2006, 970, 2006, 107,
	111, 2455, 3099, 1976, 2977, 2452, 1172, 2109, 2983, 1273,
	1274, 2840, 1382, 1976, 2975, 1976, 1386, 2838, 1976, 2827,
	2625, 2006, 1165, 1166, 1167, 1168, 1169, 1162, 1005, 101,
	1172, 102, 1976, 2628, 1976, 2624, 2012, 1976, 2620, 3244,
	1364, 2297, 1186, 1160, 1170, 1171, 1163, 1164, 1165, 1166,
	1167, 1168, 1169, 1162, 1367, 2675, 1172, 2909, 1976, 2618,
	1976, 2363, 1976, 2361, 94, 1715, 1717, 1299, 1802, 2984,
	476, 1692, 2841, 3121, 972, 1187, 1188, 1399, 2839, 435,
	2931, 2626, 1976, 2359, 1703, 1704, 1705, 1706, 1976, 2357,
	1409, 1976, 2354, 1187, 1188, 1698, 1699, 1700, 1701, 1702,
	1162, 1732, 2464, 1172, 2261, 2286, 2288, 3267, 3268, 3264,
	3265, 1296, 1708, 1767, 2100, 3245, 1369, 1368, 1395, 1751,
	3005, 1384, 3131, 3130, 1143, 985, 1385, 1843, 76, 68,
	1140, 977, 2204, 76, 2203, 998, 1784, 1711, 1402, 1712,
	1403, 94, 1841, 1842, 1840, 1909, 2460, 1143, 1694, 1696,
	1697, 2779, 2778, 1141, 1142, 1140, 3006, 2777, 1773, 1161,
	1160, 1170, 1171, 1163, 1164, 1165, 1166, 1167, 1168, 1169,
	1162, 1798, 1143, 1172, 130, 1867, 1829, 2776, 3279, 98,
	3311, 2371, 3310, 930, 1729, 1292, 93, 1724, 1725, 1015,
	953, 1727, 1807, 1808, 76, 1141, 1142, 1140, 952, 1141,
	1142, 1140, 1746, 3423, 1141, 1142, 1140, 1730, 1863, 2511,
	1869, 1709, 3347, 2101, 1143, 1837, 959, 1750, 1143, 1208,
	1747, 1875, 1876, 1143, 986, 3419, 92, 976, 1795, 1870,
	1872, 1000, 3406, 3384, 3405, 2287, 1909, 3345, 2225, 1371,
	1768, 3301, 2879, 1771, 1163, 1164, 1165, 1166, 1167, 1168,
	1169, 1162, 2873, 1816, 1172, 1141, 1142, 1140, 2722, 472,
	1142, 1140, 1885, 2910, 2119, 461, 3416, 1141, 1142, 1140,
	1800, 2606, 1833, 1828, 1143, 3280, 1800, 1780, 1143, 3189,
	930, 130, 2177, 2178, 2179, 1953, 1143, 1137, 2205, 3181,
	438, 438, 77, 3139, 438, 1912, 1787, 3013, 1141, 1142,
	1140, 130, 3182, 1839, 130, 1108, 2513, 1825, 1127, 438,
	438, 1128, 130, 1141, 1142, 1140, 3012, 1143, 1980, 3011,
	1838, 3417, 130, 130, 130, 130, 130, 3010, 3004, 1151,
	3097, 461, 1143, 962, 963, 964, 965, 966, 967, 968,
	1894, 1897, 2832, 438, 1811, 2831, 1947, 130, 1910, 3183,
	1141, 1142, 1140, 1141, 1142, 1140, 461, 3279, 2609, 1860,
	1874, 1861, 1982, 1877, 1878, 1879, 1880, 1881, 1812, 1143,
	2370, 1813, 1143, 1821, 1823, 1824, 1923, 3098, 1925, 2368,
	2344, 1822, 2303, 1048, 2304, 3368, 1906, 1047, 1946, 3332,
	1960, 3288, 3287, 3246, 1021, 438, 438, 438, 3243, 3195,
	930, 3093, 3092, 842, 1170, 1171, 1163, 1164, 1165, 1166,
	1167, 1168, 1169, 1162, 1833, 1981, 1172, 1020, 3077, 2087,
	3020, 2988, 503, 502, 505, 506, 507, 508, 2958, 2927,
	438, 504, 1871, 2876, 1961, 438, 438, 1749, 1969, 1957,
	1968, 1974, 2875, 1965, 2874, 1996, 2842, 2829, 2687, 2615,
	1983, 2467, 130, 1993, 930, 130, 2085, 2086, 2466, 2366,
	2120, 2047, 2048, 2049, 2050, 2043, 2044, 2045, 2046, 2095,
	1726, 3276, 3275, 3103, 2051, 2052, 2053, 1772, 2004, 3075,
	130, 3037, 925, 2321, 3031, 2901, 2039, 1147, 2759, 2716,
	2712, 2269, 2272, 2273, 2274, 2270, 382, 2271, 2275, 2081,
	2698, 2782, 2783, 2667, 2411, 2083, 2084, 1054, 2410, 2113,
	1752, 2097, 2091, 1755, 1756, 1757, 2096, 1759, 1760, 1862,
	2207, 1761, 2189, 1121, 1722, 1394, 930, 1762, 930, 2067,
	1719, 1763, 1764, 1401, 1765, 1766, 1088, 930, 1400, 930,
	930, 1372, 1370, 1043, 973, 401, 399, 2971, 3308, 130,
	2805, 3293, 2524, 3271, 1121, 2805, 3252, 3201, 1121, 1121,
	1189, 1190, 1191, 1192, 1193, 1194, 1195, 2805, 3197, 2216,
	3030, 36, 37, 2971, 3136, 2805, 3084, 2971, 1121, 2971,
	3066, 2971, 2970, 2940, 1121, 57, 930, 930, 2146, 1121,
	2979, 73, 2805, 2804, 39, 61, 62, 360, 2634, 2633,
	2630, 2631, 58, 2630, 2629, 2264, 1121, 2189, 1121, 2134,
	2133, 1883, 2117, 1963, 2978, 130, 130, 130, 1883, 1121,
	1298, 1297, 2646, 2027, 2028, 2029, 2030, 2761, 1121, 48,
	2775, 3325, 2409, 77, 2616, 2409, 2292, 3299, 1691, 930,
	930, 1131, 80, 2775, 363, 1092, 3425, 1051, 1052, 2056,
	1052, 1153, 36, 372, 380, 381, 2934, 1883, 1093, 1963,
	2264, 2093, 1804, 2791, 2647, 2632, 57, 2465, 2437, 1964,
	2263, 1966, 73, 2307, 1970, 39, 1161, 1160, 1170, 1171,
	1163, 1164, 1165, 1166, 1167, 1168, 1169, 1162, 369, 2264,
	1172, 370, 2775, 2189, 378, 379, 2189, 1206, 1161, 1160,
	1170, 1171, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1162,
	2264, 2078, 1172, 1803, 77, 1964, 1054, 1691, 2269, 2272,
	2273, 2274, 2270, 2231, 2271, 2275, 130, 1235, 2230, 1728,
	2092, 917, 130, 130, 438, 438, 438, 1805, 1110, 130,
	3177, 1770, 1735, 1691, 1392, 41, 69, 44, 43, 46,
	1390, 375, 2077, 1280, 1224, 77, 1120, 3224, 3198, 2790,
	3117, 3034, 2948, 2122, 2834, 2013, 2782, 2783, 3262, 2042,
	2605, 2116, 376, 2038, 2311, 1058, 47, 72, 71, 2072,
	2033, 2032, 1365, 45, 1040, 2110, 3414, 3412, 3372, 3370,
	3336, 3206, 2144, 77, 2785, 2761, 2645, 63, 2372, 1745,
	1397, 1094, 1055, 409, 2102, 2565, 2094, 2098, 2563, 2107,
	2566, 2176, 2567, 2564, 2273, 2274, 2788, 2787, 2562, 2561,
	2106, 467, 468, 2468, 2166, 2105, 41, 69, 44, 43,
	46, 1135, 1136, 1829, 55, 56, 1815, 361, 3254, 2937,
	2181, 3178, 2174, 2173, 3057, 2900, 2808, 2711, 2710, 2614,
	1046, 64, 2613, 65, 2111, 3108, 2612, 47, 72, 71,
	1133, 2323, 2315, 2599, 45, 3111, 3194, 3193, 2129, 440,
	3024, 374, 364, 365, 3022, 385, 3089, 3088, 66, 366,
	368, 2115, 362, 384, 383, 400, 1723, 2121, 3007, 3008,
	2136, 2463, 2462, 2139, 1124, 2641, 2128, 2355, 1293, 1038,
	1837, 1022, 1019, 1018, 3318, 1125, 49, 70, 974, 51,
	52, 59, 3041, 60, 3040, 55, 56, 2065, 3179, 1807,
	1808, 2881, 2932, 2066, 1396, 3326, 377, 3187, 2882, 1833,
	1981, 2143, 64, 3026, 65, 2813, 1017, 2640, 1135, 1136,
	3317, 94, 2057, 1781, 2167, 2168, 1957, 1118, 1119, 2172,
	3316, 2169, 3315, 2985, 2142, 1001, 464, 2171, 1121, 66,
	3248, 3247, 2186, 3205, 2280, 3191, 3112, 3056, 465, 2289,
	2290, 80, 3204, 1953, 3123, 2409, 1953, 2384, 2385, 2386,
	3373, 2192, 2285, 3374, 3373, 2182, 2912, 3180, 70, 2685,
	51, 52, 59, 2432, 60, 2430, 2429, 2213, 2210, 2140,
	1710, 1138, 3374, 3133, 2611, 1838, 1161, 1160, 1170, 1171,
	1163, 1164, 1165, 1166, 1167, 1168, 1169, 1162, 1801, 917,
	1172, 459, 3161, 50, 3163, 19, 3162, 18, 3164, 20,
	3165, 21, 3390, 130, 2293, 2276, 82, 2294, 3160, 15,
	3159, 14, 3153, 10, 3176, 34, 53, 2224, 3174, 33,
	130, 130, 130, 3173, 32, 3172, 28, 68, 3171, 27,
	2262, 3170, 26, 3168, 23, 3167, 22, 3169, 24, 2320,
	2322, 1714, 3158, 13, 3155, 12, 1, 130, 2130, 130,
	3154, 11, 1753, 930, 3152, 9, 2291, 1409, 930, 2861,
	2860, 2867, 842, 2308, 2652, 2655, 2396, 2877, 1380, 2996,
	956, 461, 2295, 2076, 1044, 3192, 1286, 3107, 3109, 3021,
	930, 1364, 2298, 930, 2884, 2845, 2844, 2389, 1957, 2353,
	2388, 2356, 2358, 2360, 2362, 2306, 1039, 1957, 1733, 2440,
	1957, 2443, 2088, 2155, 3119, 435, 2141, 2415, 68, 1095,
	2310, 1382, 930, 1997, 1984, 3221, 919, 90, 2099, 984,
	367, 1994, 2329, 1695, 3110, 76, 1041, 2407, 2328, 2236,
	2238, 2342, 2009, 2060, 2064, 2327, 2244, 2245, 2246, 2247,
	2435, 2436, 2367, 2375, 1713, 2369, 2326, 3105, 2330, 1304,
	1302, 2316, 1303, 2319, 1301, 1306, 1305, 2378, 3367, 3305,
	2376, 371, 1288, 2377, 3234, 2758, 1139, 514, 105, 54,
	2902, 2453, 2801, 2413, 2473, 443, 444, 2406, 95, 2398,
	103, 2135, 1814, 373, 1180, 1829, 1206, 2170, 2299, 840,
	841, 833, 2162, 1111, 3129, 1835, 3255, 3296, 1844, 1845,
	1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855,
	1856, 1857, 1858, 3226, 2418, 1129, 3257, 2420, 2518, 2412,
	2424, 1161, 1160, 1170, 1171, 1163, 1164, 1165, 1166, 1167,
	1168, 1169, 1162, 3203, 3122, 1172, 2223, 1223, 1907, 487,
	2572, 2540, 2542, 2930, 3259, 1953, 1953, 1953, 1953, 1953,
	2446, 1820, 2457, 2458, 2441, 2469, 2461, 130, 2474, 501,
	1900, 2280, 461, 2574, 500, 130, 2510, 2442, 130, 499,
	1913, 2475, 2569, 1953, 130, 496, 497, 130, 130, 130,
	2576, 1833, 2480, 2478, 2541, 3215, 1817, 1818, 1819, 2499,
	1810, 2345, 2346, 2498, 2537, 1154, 2500, 930, 2352, 2473,
	2439, 2449, 2454, 2635, 1885, 484, 474, 2577, 2364, 1951,
	1944, 2118, 2607, 2268, 2014, 2015, 2266, 2020, 2021, 2022,
	2023, 2024, 2265, 1398, 1277, 2784, 2780, 2278, 1955, 2583,
	1950, 2585, 2586, 1954, 2584, 2034, 2035, 2036, 38, 2911,
	999, 2470, 389, 2753, 3050, 2557, 2558, 2175, 2560, 84,
	458, 2601, 2602, 2603, 1206, 2604, 2545, 469, 25, 1890,
	1891, 2568, 2556, 17, 1009, 2559, 2581, 16, 930, 2148,
	130, 954, 40, 42, 2383, 2068, 3233, 2598, 461, 2600,
	3352, 1025, 3382, 930, 930, 930, 3277, 2592, 2591, 438,
	31, 30, 29, 3166, 435, 2051, 2662, 2053, 461, 1957,
	1957, 1957, 1957, 1957, 130, 438, 2648, 3175, 3157, 2617,
	2619, 3156, 2642, 2643, 2644, 1957, 2623, 3338, 3337, 4,
	1115, 75, 438, 35, 915, 2, 0, 1957, 2627, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1979, 2669,
	930, 0, 2664, 0, 438, 0, 930, 2519, 2520, 2521,
	2522, 2523, 438, 0, 0, 0, 0, 2638, 930, 930,
	1132, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1882, 1884, 0, 0, 0, 2694, 0, 0, 1889, 0,
	0, 0, 130, 0, 0, 0, 2427, 0, 0, 2668,
	2752, 2671, 930, 0, 2433, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2673, 0, 125, 0, 0, 386,
	2723, 2054, 0, 2689, 0, 125, 1921, 1922, 0, 2715,
	2766, 76, 0, 1928, 1929, 1930, 1931, 2695, 1364, 452,
	0, 0, 0, 0, 1784, 0, 0, 0, 2713, 0,
	0, 0, 0, 0, 473, 2721, 0, 0, 0, 930,
	850, 0, 0, 125, 2793, 0, 0, 0, 0, 2797,
	2798, 2799, 0, 0, 2767, 2762, 0, 0, 0, 2765,
	0, 0, 0, 125, 2736, 0, 130, 130, 130, 130,
	130, 2774, 0, 0, 125, 0, 0, 0, 130, 0,
	0, 0, 130, 0, 0, 0, 130, 2757, 2796, 0,
	0, 2703, 2708, 2792, 130, 0, 0, 0, 0, 0,
	0, 0, 2769, 0, 0, 0, 0, 930, 0, 930,
	76, 930, 2803, 930, 2621, 0, 0, 2802, 2836, 0,
	0, 2545, 2786, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2794, 0, 1161, 1160, 1170, 1171,
	1163, 1164, 1165, 1166, 1167, 1168, 1169, 1162, 461, 0,
	1172, 0, 0, 2835, 2857, 2858, 2859, 2809, 0, 2308,
	0, 0, 0, 2837, 0, 0, 0, 0, 0, 0,
	2814, 0, 2891, 0, 130, 2826, 0, 0, 0, 0,
	0, 0, 0, 0, 1787, 2672, 0, 0, 0, 0,
	0, 0, 0, 0, 930, 930, 930, 2896, 2897, 0,
	0, 438, 0, 2856, 0, 0, 130, 438, 0, 0,
	2473, 2886, 2898, 0, 0, 0, 2888, 0, 0, 0,
	2843, 130, 0, 438, 0, 930, 0, 438, 2883, 0,
	0, 438, 438, 2885, 438, 0, 0, 2913, 2914, 0,
	2693, 0, 2892, 0, 0, 2906, 0, 461, 0, 2701,
	2706, 930, 2598, 2899, 2114, 130, 930, 0, 0, 2693,
	0, 0, 0, 930, 0, 2674, 930, 930, 2907, 2679,
	2051, 0, 0, 2683, 2684, 0, 2686, 0, 0, 0,
	0, 0, 0, 0, 2973, 0, 1229, 1229, 1229, 1235,
	1229, 1229, 1235, 1229, 1235, 1244, 1245, 2950, 0, 0,
	0, 0, 0, 0, 2955, 2956, 2957, 2953, 2941, 2933,
	125, 0, 0, 2981, 0, 0, 0, 0, 0, 2942,
	0, 0, 0, 0, 0, 0, 1918, 0, 0, 2959,
	0, 0, 0, 0, 2968, 2969, 2982, 0, 2954, 0,
	0, 0, 930, 2965, 930, 0, 0, 2980, 2966, 2967,
	2960, 0, 0, 0, 125, 0, 0, 0, 2545, 2986,
	0, 1231, 1233, 0, 1237, 1239, 0, 1242, 0, 0,
	0, 0, 2183, 2184, 2185, 0, 930, 0, 0, 0,
	0, 3042, 2974, 1953, 2976, 0, 2987, 0, 0, 0,
	0, 0, 0, 930, 0, 0, 2828, 2999, 2830, 452,
	0, 0, 3009, 0, 3028, 2766, 3014, 930, 2766, 3062,
	3017, 0, 0, 452, 1230, 1232, 1234, 1236, 1238, 1240,
	1241, 1243, 2793, 0, 3027, 3035, 3036, 0, 0, 0,
	0, 0, 2217, 2218, 2219, 0, 0, 3039, 2285, 3043,
	3069, 1131, 3045, 0, 3044, 0, 0, 130, 0, 930,
	0, 0, 3061, 76, 2765, 3065, 3059, 2765, 0, 3058,
	3032, 3033, 0, 3074, 3055, 0, 0, 0, 3064, 0,
	0, 3067, 0, 2112, 0, 3068, 0, 0, 0, 0,
	438, 0, 0, 0, 0, 3076, 3087, 438, 0, 0,
	930, 0, 2693, 0, 0, 0, 3085, 0, 0, 0,
	0, 2916, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2347, 2348, 2349, 2351, 0, 2693, 2198,
	0, 0, 2887, 0, 0, 0, 0, 0, 930, 2890,
	0, 2766, 0, 76, 0, 0, 0, 1957, 2145, 0,
	0, 0, 0, 3114, 3138, 2226, 461, 3115, 0, 0,
	3113, 0, 0, 3116, 2161, 0, 0, 0, 76, 0,
	3124, 0, 0, 3144, 0, 0, 0, 0, 3146, 0,
	0, 0, 0, 130, 0, 0, 3135, 3132, 0, 3134,
	2765, 3137, 0, 0, 0, 0, 0, 0, 0, 0,
	461, 0, 930, 0, 0, 0, 0, 0, 0, 930,
	930, 930, 0, 0, 0, 0, 0, 930, 0, 0,
	0, 0, 0, 0, 0, 3188, 3190, 0, 2188, 0,
	2190, 0, 3223, 0, 3229, 0, 0, 0, 0, 0,
	3199, 0, 0, 0, 0, 0, 930, 0, 0, 3218,
	2414, 2199, 2200, 2201, 2202, 0, 3074, 3225, 2206, 2208,
	3219, 76, 2211, 3140, 0, 2214, 2215, 0, 0, 0,
	2220, 2221, 0, 3238, 0, 0, 2227, 2228, 0, 2229,
	461, 0, 2232, 2233, 0, 2234, 2235, 0, 0, 2239,
	2240, 2241, 2242, 2243, 0, 0, 0, 0, 2248, 2249,
	2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259,
	0, 0, 0, 0, 3274, 3253, 0, 930, 3250, 0,
	3263, 3251, 0, 0, 130, 0, 2545, 0, 2477, 3269,
	0, 0, 0, 0, 0, 0, 0, 0, 3272, 0,
	0, 3273, 0, 0, 435, 0, 3292, 0, 0, 3284,
	2501, 2502, 930, 2503, 2504, 0, 0, 2505, 0, 0,
	930, 76, 0, 0, 130, 3223, 130, 76, 0, 3314,
	0, 2514, 2515, 3294, 0, 0, 0, 3321, 0, 3319,
	0, 0, 3304, 930, 3309, 3312, 0, 0, 0, 0,
	0, 0, 76, 1279, 0, 0, 850, 76, 3327, 3331,
	3346, 850, 0, 0, 0, 3362, 0, 2518, 3349, 3342,
	3329, 3341, 0, 3340, 3323, 3339, 0, 435, 3364, 3361,
	3371, 3369, 0, 3363, 76, 3375, 3366, 0, 76, 76,
	0, 2582, 3376, 76, 3377, 0, 3379, 0, 438, 3321,
	3351, 0, 0, 3385, 0, 0, 930, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2622, 3399, 76,
	0, 0, 76, 0, 0, 3407, 0, 0, 0, 3321,
	3404, 2512, 3409, 0, 0, 2610, 0, 0, 0, 0,
	0, 76, 0, 76, 0, 0, 0, 76, 0, 0,
	130, 3321, 0, 3321, 0, 3422, 0, 0, 0, 0,
	125, 76, 0, 0, 76, 1375, 1378, 0, 0, 76,
	0, 3321, 3429, 0, 76, 0, 0, 0, 0, 3321,
	125, 0, 0, 125, 3321, 2756, 1375, 1378, 0, 930,
	0, 1408, 0, 930, 461, 0, 0, 0, 0, 0,
	0, 125, 125, 125, 125, 125, 0, 0, 0, 0,
	930, 0, 0, 0, 0, 0, 0, 0, 2481, 2482,
	2483, 2484, 2485, 2486, 0, 0, 1718, 0, 0, 0,
	0, 0, 486, 0, 1161, 1160, 1170, 1171, 1163, 1164,
	1165, 1166, 1167, 1168, 1169, 1162, 0, 0, 1172, 0,
	0, 930, 0, 0, 0, 2733, 2734, 0, 2735, 0,
	0, 2737, 0, 2739, 0, 0, 0, 0, 0, 0,
	930, 0, 0, 0, 0, 0, 0, 2725, 126, 2747,
	0, 0, 0, 0, 0, 0, 0, 126, 0, 0,
	0, 0, 0, 0, 0, 0, 930, 0, 0, 0,
	0, 453, 0, 2570, 2571, 0, 0, 2749, 2750, 2751,
	0, 0, 0, 0, 0, 2670, 0, 0, 0, 0,
	0, 438, 0, 0, 0, 126, 923, 0, 930, 0,
	0, 452, 0, 0, 125, 0, 0, 0, 0, 0,
	0, 930, 0, 930, 0, 126, 0, 0, 0, 2746,
	0, 0, 0, 0, 0, 0, 126, 930, 0, 125,
	0, 0, 2806, 2807, 0, 2717, 0, 0, 0, 0,
	0, 0, 0, 1408, 0, 130, 2795, 472, 1161, 1160,
	1170, 1171, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1162,
	0, 0, 1172, 1326, 438, 0, 0, 930, 0, 0,
	0, 0, 130, 0, 0, 0, 1868, 0, 2812, 0,
	0, 0, 0, 0, 0, 0, 130, 0, 0, 2755,
	0, 0, 0, 0, 0, 0, 0, 0, 452, 0,
	1868, 1868, 1868, 3285, 0, 0, 1868, 1868, 1868, 1868,
	0, 1868, 1868, 0, 0, 0, 850, 1868, 1161, 1160,
	1170, 1171, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1162,
	0, 0, 1172, 0, 0, 0, 0, 1868, 1868, 1868,
	1868, 0, 0, 1868, 1868, 1868, 1868, 1868, 0, 0,
	2745, 0, 1868, 1868, 1868, 1868, 1868, 1868, 1868, 1868,
	1868, 1868, 1868, 1868, 125, 125, 125, 1313, 0, 0,
	2724, 850, 0, 0, 0, 0, 512, 0, 0, 0,
	0, 0, 0, 2732, 0, 1408, 0, 0, 0, 0,
	0, 0, 0, 0, 2741, 2742, 2743, 0, 0, 0,
	0, 2748, 2526, 2527, 2528, 2529, 2530, 2531, 2532, 2533,
	2534, 2535, 2536, 0, 0, 2918, 2919, 2920, 2921, 0,
	0, 0, 0, 2925, 0, 0, 0, 2928, 2929, 0,
	0, 0, 0, 0, 0, 0, 2768, 0, 0, 0,
	0, 0, 0, 0, 513, 0, 0, 0, 1327, 1161,
	1160, 1170, 1171, 1163, 1164, 1165, 1166, 1167, 1168, 1169,
	1162, 0, 126, 1172, 0, 0, 849, 0, 0, 0,
	922, 0, 0, 0, 0, 125, 0, 2800, 0, 0,
	0, 125, 125, 0, 0, 0, 0, 0, 125, 0,
	127, 0, 961, 0, 0, 0, 0, 0, 1156, 127,
	1159, 0, 0, 0, 0, 0, 126, 1173, 1174, 1175,
	1176, 1177, 1178, 1179, 0, 1157, 1158, 1155, 0, 0,
	0, 0, 0, 0, 0, 1161, 1160, 1170, 1171, 1163,
	1164, 1165, 1166, 1167, 1168, 1169, 1162, 127, 924, 1172,
	0, 0, 1206, 0, 0, 0, 0, 0, 0, 0,
	0, 453, 2943, 2944, 2945, 2946, 0, 127, 2947, 0,
	0, 2949, 0, 0, 0, 453, 0, 0, 127, 1206,
	0, 0, 0, 0, 0, 1148, 0, 0, 0, 0,
	0, 0, 0, 1340, 1343, 1344, 1345, 1346, 1347, 1348,
	0, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 0,
	1328, 1329, 1330, 1331, 1307, 1311, 1341, 1308, 1314, 1310,
	1312, 1309, 0, 1315, 1316, 1317, 1318, 1319, 1320, 1321,
	1322, 1323, 1324, 1325, 1332, 1333, 1334, 1335, 1336, 1337,
	1338, 1339, 0, 0, 0, 2727, 2728, 2729, 2730, 2731,
	0, 0, 0, 0, 3083, 2922, 2923, 2924, 2744, 2926,
	0, 0, 1864, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2935, 2936, 0, 2938, 0, 0, 2939, 0,
	0, 0, 0, 0, 0, 0, 1886, 1887, 1888, 0,
	0, 36, 1892, 1893, 1896, 1899, 0, 1904, 1905, 472,
	2952, 0, 0, 1911, 0, 57, 0, 0, 0, 0,
	0, 73, 0, 0, 39, 0, 0, 0, 2972, 0,
	0, 3118, 0, 1916, 0, 1919, 1920, 0, 0, 0,
	1924, 0, 1926, 1927, 1342, 0, 2508, 0, 1932, 1933,
	1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943,
	0, 0, 0, 77, 0, 0, 0, 1161, 1160, 1170,
	1171, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1162, 0,
	0, 1172, 0, 0, 2507, 0, 0, 0, 0, 3177,
	0, 0, 0, 0, 3432, 0, 0, 0, 0, 0,
	0, 0, 125, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2506, 0, 0, 0, 0, 2103,
	2104, 125, 0, 0, 127, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3046, 3047, 3048, 3049, 0, 0,
	0, 0, 0, 0, 3053, 3054, 125, 0, 452, 0,
	0, 0, 1206, 1161, 1160, 1170, 1171, 1163, 1164, 1165,
	1166, 1167, 1168, 1169, 1162, 0, 0, 1172, 127, 0,
	0, 3070, 3071, 3072, 0, 41, 69, 44, 43, 46,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3178, 1161, 1160, 1170, 1171, 1163, 1164, 1165, 1166, 1167,
	1168, 1169, 1162, 0, 0, 1172, 47, 72, 71, 0,
	0, 0, 0, 45, 0, 0, 0, 0, 0, 0,
	1408, 1161, 1160, 1170, 1171, 1163, 1164, 1165, 1166, 1167,
	1168, 1169, 1162, 0, 36, 1172, 0, 1150, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 57, 0,
	0, 0, 0, 0, 73, 126, 0, 39, 0, 0,
	0, 0, 0, 0, 55, 56, 3125, 3179, 0, 0,
	0, 0, 0, 3230, 3231, 0, 0, 0, 0, 0,
	0, 64, 0, 65, 0, 1868, 0, 0, 1868, 1868,
	1868, 1868, 1868, 0, 0, 0, 77, 0, 0, 3141,
	3258, 3261, 0, 0, 0, 0, 0, 0, 66, 3360,
	0, 0, 0, 0, 0, 0, 0, 1868, 0, 0,
	0, 0, 3177, 0, 0, 0, 0, 3427, 0, 0,
	0, 0, 0, 0, 0, 3200, 3180, 70, 0, 51,
	52, 59, 0, 60, 0, 3209, 0, 0, 0, 0,
	1363, 3220, 0, 3388, 0, 0, 125, 0, 0, 0,
	0, 0, 126, 0, 125, 0, 0, 452, 0, 0,
	0, 0, 0, 125, 0, 3313, 125, 2296, 1408, 0,
	850, 0, 126, 3413, 0, 126, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3261, 2476, 0, 0, 0,
	0, 0, 0, 126, 126, 126, 126, 126, 41, 69,
	44, 43, 46, 0, 0, 0, 0, 0, 0, 2187,
	0, 0, 0, 3178, 1161, 1160, 1170, 1171, 1163, 1164,
	1165, 1166, 1167, 1168, 1169, 1162, 0, 3270, 1172, 47,
	72, 71, 0, 0, 0, 0, 45, 1161, 1160, 1170,
	1171, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1162, 0,
	0, 1172, 0, 0, 0, 0, 0, 0, 0, 125,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3408, 0, 0, 0, 0, 0, 3303, 68, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 55, 56, 0,
	3179, 0, 0, 125, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 64, 0, 65, 1161, 1160, 1170,
	1171, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1162, 0,
	0, 1172, 849, 453, 0, 1785, 126, 849, 1289, 0,
	0, 66, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 0, 0, 0, 0, 0, 0, 1148, 3180,
	70, 0, 51, 52, 59, 0, 60, 0, 0, 0,
	0, 125, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1868, 0, 0, 0, 0, 127, 0, 0,
	1868, 0, 1408, 0, 3410, 3411, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	453, 0, 0, 0, 0, 1366, 0, 0, 0, 0,
	0, 1374, 1377, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1374, 1377, 2193, 2194, 2195, 2196, 2197, 0,
	0, 0, 0, 0, 850, 125, 125, 125, 125, 125,
	0, 0, 0, 0, 0, 0, 0, 452, 0, 0,
	0, 125, 0, 2222, 0, 452, 126, 126, 126, 0,
	1868, 0, 0, 125, 127, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	68, 923, 0, 0, 127, 0, 0, 127, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1326, 127, 127, 127, 127, 127,
	0, 0, 0, 0, 0, 1754, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 125, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 0, 1783,
	0, 0, 0, 126, 126, 125, 0, 0, 0, 0,
	126, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	125, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1313, 1834,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 125, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1786, 127, 0,
	0, 1834, 473, 1834, 0, 0, 0, 0, 0, 0,
	0, 0, 1873, 0, 1834, 1834, 0, 0, 0, 0,
	0, 0, 0, 127, 0, 0, 0, 0, 0, 0,
	1150, 0, 0, 0, 0, 0, 0, 1830, 0, 0,
	0, 0, 849, 0, 0, 0, 0, 0, 0, 1327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1914, 1915, 0, 0, 0, 0, 0, 0, 850,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 36, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 57, 0, 849, 0, 0,
	0, 73, 0, 0, 39, 0, 0, 0, 0, 0,
	0, 1834, 0, 0, 1834, 922, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 77, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 127, 127,
	127, 0, 0, 0, 0, 0, 0, 0, 0, 3177,
	0, 0, 0, 0, 3418, 0, 125, 0, 0, 1830,
	0, 0, 0, 924, 1340, 1343, 1344, 1345, 1346, 1347,
	1348, 0, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356,
	0, 1328, 1329, 1330, 1331, 1307, 1311, 1341, 1308, 1314,
	1310, 1312, 1309, 0, 1315, 1316, 1317, 1318, 1319, 1320,
	1321, 1322, 1323, 1324, 1325, 1332, 1333, 1334, 1335, 1336,
	1337, 1338, 1339, 0, 126, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 126, 0, 41, 69, 44, 43, 46,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 127,
	3178, 0, 0, 0, 0, 127, 127, 0, 126, 0,
	453, 0, 127, 0, 0, 0, 47, 72, 71, 0,
	0, 0, 0, 45, 0, 0, 0, 0, 0, 0,
	0, 0, 452, 0, 0, 0, 850, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 36, 0, 0,
	0, 0, 0, 0, 0, 1342, 0, 0, 0, 0,
	0, 57, 0, 0, 0, 0, 0, 73, 0, 36,
	39, 0, 0, 0, 55, 56, 0, 3179, 0, 0,
	0, 0, 0, 57, 0, 0, 0, 0, 0, 73,
	0, 64, 39, 65, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 77,
	0, 0, 0, 0, 0, 0, 0, 0, 66, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 77, 0, 0, 0, 3177, 0, 0, 0, 0,
	3401, 0, 0, 0, 0, 0, 3180, 70, 0, 51,
	52, 59, 0, 60, 0, 0, 0, 3177, 0, 0,
	0, 0, 3320, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 125, 473, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 452, 0, 452, 0, 0, 126, 0,
	0, 41, 69, 44, 43, 46, 126, 0, 0, 453,
	0, 0, 0, 0, 0, 126, 3178, 0, 126, 0,
	0, 0, 0, 41, 69, 44, 43, 46, 0, 0,
	0, 0, 47, 72, 71, 0, 0, 0, 3178, 45,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2314, 0, 0, 47, 72, 71, 0, 0, 0,
	0, 45, 0, 0, 0, 0, 0, 0, 2127, 0,
	0, 0, 0, 2127, 0, 0, 0, 68, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 0, 0, 0,
	55, 56, 0, 3179, 0, 2127, 0, 0, 2127, 0,
	0, 0, 0, 0, 0, 127, 0, 64, 0, 65,
	0, 126, 55, 56, 0, 3179, 0, 0, 0, 125,
	0, 0, 0, 0, 0, 0, 0, 2165, 0, 64,
	127, 65, 0, 0, 66, 0, 1834, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 66, 0, 0, 0,
	0, 0, 3180, 70, 1693, 51, 52, 59, 0, 60,
	0, 0, 0, 0, 850, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3180, 70, 0, 51, 52, 59,
	0, 60, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1830, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 126, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 849, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1834, 68, 0, 0, 2546, 126, 126, 126,
	126, 126, 0, 0, 0, 0, 0, 0, 0, 453,
	0, 0, 0, 126, 0, 68, 0, 453, 0, 0,
	127, 0, 0, 0, 452, 126, 0, 0, 127, 0,
	0, 0, 0, 0, 0, 0, 0, 127, 0, 0,
	127, 0, 0, 0, 2596, 0, 0, 0, 0, 0,
	0, 452, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2373, 0, 452, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2387, 2391,
	2395, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 127, 0, 2127, 0, 126, 0, 0,
	0, 2428, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 1834, 1834, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 127, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2314, 0,
	2700, 2705, 0, 0, 0, 0, 126, 1834, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1834, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2516, 127, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1830, 0, 0, 0,
	849, 2546, 0, 1785, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1834, 0, 1834, 0, 1834, 0, 2595, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 127,
	127, 127, 127, 127, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 127, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 127, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 126, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2649,
	2650, 2651, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2677, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 127, 0, 0,
	0, 0, 0, 0, 0, 0, 2709, 0, 0, 0,
	0, 2714, 0, 0, 0, 0, 0, 0, 2718, 0,
	0, 2719, 2720, 0, 0, 0, 0, 0, 0, 127,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 127, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 453, 0, 0, 0, 2546, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2702, 2707, 0, 0, 0, 0, 127, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2596, 0,
	0, 0, 0, 0, 0, 849, 0, 1783, 0, 2773,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2596, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2773, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1834, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2811, 0, 0, 1786, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 0, 0, 0, 0,
	0, 0, 0, 0, 2391, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 453, 0, 453, 0, 0,
	0, 0, 0, 0, 0, 1834, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	127, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1834, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2596, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 849, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2811, 0, 0,
	0, 0, 0, 0, 2811, 2811, 2811, 0, 0, 0,
	0, 126, 2595, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2595, 0, 0, 0, 0, 0, 0, 0, 0,
	2596, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2546, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3038, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2596, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3063, 0, 0,
	0, 0, 0, 0, 0, 2811, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3079, 0,
	0, 0, 0, 0, 0, 0, 0, 127, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 453, 0, 0, 0,
	0, 2595, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 453, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 453, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2595, 0, 0, 0, 3202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	849, 0, 0, 0, 0, 1834, 0, 0, 0, 0,
	0, 0, 0, 127, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1834, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2595, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2811, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3302, 0, 1834, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 809, 1834, 328, 571, 813, 656, 679, 822, 685,
	687, 750, 632, 727, 273, 676, 633, 0, 0, 624,
	480, 625, 657, 199, 477, 783, 728, 811, 713, 743,
	753, 198, 190, 720, 719, 800, 668, 667, 748, 796,
	810, 0, 3298, 579, 240, 0, 0, 350, 320, 257,
	0, 0, 711, 0, 564, 565, 696, 752, 644, 739,
	815, 677, 744, 816, 77, 0, 0, 0, 478, 503,
	502, 505, 506, 507, 508, 0, 0, 137, 504, 509,
	510, 511, 0, 706, 749, 827, 623, 475, 494, 628,
	578, 0, 801, 664, 665, 202, 0, 0, 0, 0,
	0, 0, 0, 709, 726, 768, 693, 345, 755, 764,
	778, 686, 288, 215, 0, 0, 0, 0, 491, 492,
	471, 0, 0, 0, 594, 0, 493, 0, 638, 489,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 495, 0, 0, 0, 643, 621, 662, 770,
	622, 620, 258, 635, 567, 799, 694, 231, 153, 805,
	692, 592, 758, 639, 787, 680, 238, 637, 154, 634,
	640, 678, 269, 767, 773, 576, 157, 784, 658, 671,
	191, 0, 298, 745, 344, 483, 731, 297, 241, 337,
	759, 807, 343, 681, 327, 351, 355, 208, 714, 182,
	317, 200, 197, 663, 777, 627, 216, 287, 194, 234,
	697, 751, 659, 187, 762, 738, 789, 316, 334, 159,
	255, 335, 354, 174, 329, 256, 262, 184, 186, 185,
	170, 311, 333, 179, 189, 785, 772, 791, 654, 641,
	646, 642, 670, 808, 226, 217, 792, 790, 348, 143,
	307, 306, 684, 225, 775, 144, 136, 294, 145, 232,
	162, 795, 357, 173, 236, 330, 482, 211, 268, 193,
	747, 277, 669, 156, 290, 252, 253, 251, 254, 214,
	140, 146, 771, 292, 309, 332, 175, 323, 138, 139,
	141, 148, 300, 149, 150, 814, 246, 204, 207, 219,
	229, 746, 296, 324, 349, 740, 171, 164, 326, 342,
	180, 308, 310, 356, 769, 166, 803, 786, 733, 699,
	705, 629, 0, 165, 765, 661, 673, 653, 741, 652,
	213, 757, 340, 341, 192, 358, 570, 818, 167, 636,
	817, 265, 272, 264, 820, 336, 804, 734, 723, 721,
	630, 802, 732, 722, 237, 206, 221, 285, 243, 286,
	222, 260, 259, 261, 244, 725, 0, 163, 0, 321,
	812, 829, 325, 177, 647, 779, 331, 218, 291, 178,
	212, 205, 284, 263, 172, 224, 319, 235, 242, 761,
	826, 276, 299, 181, 346, 318, 201, 581, 593, 587,
	589, 588, 585, 586, 584, 583, 582, 595, 568, 569,
	572, 573, 574, 716, 806, 631, 577, 782, 590, 591,
	754, 824, 566, 188, 515, 607, 608, 609, 516, 610,
	611, 517, 518, 612, 613, 614, 615, 519, 616, 617,
	618, 596, 597, 598, 599, 600, 601, 602, 603, 606,
	604, 605, 712, 281, 575, 158, 168, 239, 825, 293,
	210, 619, 626, 645, 648, 649, 650, 651, 655, 660,
	0, 666, 672, 674, 675, 683, 688, 689, 690, 691,
	698, 700, 701, 702, 703, 704, 707, 708, 710, 717,
	718, 724, 729, 730, 736, 737, 0, 760, 763, 580,
	774, 776, 780, 781, 788, 793, 794, 819, 823, 828,
	347, 196, 715, 735, 766, 169, 176, 183, 195, 203,
	209, 220, 223, 227, 228, 230, 233, 245, 247, 248,
	249, 250, 266, 267, 270, 271, 274, 275, 278, 279,
	280, 282, 283, 289, 147, 295, 301, 302, 303, 304,
	305, 312, 313, 314, 315, 322, 338, 339, 352, 353,
	798, 695, 155, 0, 0, 161, 0, 0, 0, 0,
	0, 682, 160, 797, 821, 742, 756, 809, 0, 328,
	571, 813, 656, 679, 822, 685, 687, 750, 632, 727,
	273, 676, 633, 0, 0, 624, 480, 625, 657, 199,
	477, 783, 728, 811, 713, 743, 753, 198, 190, 720,
	719, 800, 668, 667, 748, 796, 810, 0, 0, 579,
	240, 0, 0, 350, 320, 257, 0, 0, 711, 0,
	564, 565, 696, 752, 644, 739, 815, 677, 744, 816,
	77, 0, 1121, 0, 478, 503, 502, 505, 506, 507,
	508, 0, 0, 137, 504, 509, 510, 511, 0, 706,
	749, 827, 623, 475, 494, 628, 578, 0, 801, 664,
	665, 202, 0, 0, 0, 0, 0, 0, 0, 709,
	726, 768, 693, 345, 755, 764, 778, 686, 288, 215,
	0, 0, 0, 0, 491, 492, 0, 0, 0, 0,
	594, 0, 493, 0, 638, 489, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 495, 0,
	0, 0, 643, 621, 662, 770, 622, 620, 258, 635,
	567, 799, 694, 231, 153, 805, 692, 592, 758, 639,
	787, 680, 238, 637, 154, 634, 640, 678, 269, 767,
	773, 576, 157, 784, 658, 671, 191, 0, 298, 745,
	344, 483, 731, 297, 241, 337, 759, 807, 343, 681,
	327, 351, 355, 208, 714, 182, 317, 200, 197, 663,
	777, 627, 216, 287, 194, 234, 697, 751, 659, 187,
	762, 738, 789, 316, 334, 159, 255, 335, 354, 174,
	329, 256, 262, 184, 186, 185, 170, 311, 333, 179,
	189, 785, 772, 791, 654, 641, 646, 642, 670, 808,
	226, 217, 792, 790, 348, 143, 307, 306, 684, 225,
	775, 144, 136, 294, 145, 232, 162, 795, 357, 173,
	236, 330, 482, 211, 268, 193, 747, 277, 669, 156,
	290, 252, 253, 251, 254, 214, 140, 146, 771, 292,
	309, 332, 175, 323, 138, 139, 141, 148, 300, 149,
	150, 814, 246, 204, 207, 219, 229, 746, 296, 324,
	349, 740, 171, 164, 326, 342, 180, 308, 310, 356,
	769, 166, 803, 786, 733, 699, 705, 629, 0, 165,
	765, 661, 673, 653, 741, 652, 213, 757, 340, 341,
	192, 358, 570, 818, 167, 636, 817, 265, 272, 264,
	820, 336, 804, 734, 723, 721, 630, 802, 732, 722,
	237, 206, 221, 285, 243, 286, 222, 260, 259, 261,
	244, 725, 0, 163, 0, 321, 812, 829, 325, 177,
	647, 779, 331, 218, 291, 178, 212, 205, 284, 263,
	172, 224, 319, 235, 242, 761, 826, 276, 299, 181,
	346, 318, 201, 581, 593, 587, 589, 588, 585, 586,
	584, 583, 582, 595, 568, 569, 572, 573, 574, 716,
	806, 631, 577, 782, 590, 591, 754, 824, 566, 188,
	515, 607, 608, 609, 516, 610, 611, 517, 518, 612,
	613, 614, 615, 519, 616, 617, 618, 596, 597, 598,
	599, 600, 601, 602, 603, 606, 604, 605, 712, 281,
	575, 158, 168, 239, 825, 293, 210, 619, 626, 645,
	648, 649, 650, 651, 655, 660, 0, 666, 672, 674,
	675, 683, 688, 689, 690, 691, 698, 700, 701, 702,
	703, 704, 707, 708, 710, 717, 718, 724, 729, 730,
	736, 737, 0, 760, 763, 580, 774, 776, 780, 781,
	788, 793, 794, 819, 823, 828, 347, 196, 715, 735,
	766, 169, 176, 183, 195, 203, 209, 220, 223, 227,
	228, 230, 233, 245, 247, 248, 249, 250, 266, 267,
	270, 271, 274, 275, 278, 279, 280, 282, 283, 289,
	147, 295, 301, 302, 303, 304, 305, 312, 313, 314,
	315, 322, 338, 339, 352, 353, 798, 695, 155, 0,
	0, 161, 0, 0, 0, 0, 0, 682, 160, 797,
	821, 742, 756, 809, 0, 328, 571, 813, 656, 679,
	822, 685, 687, 750, 632, 727, 273, 676, 633, 0,
	0, 624, 480, 625, 657, 199, 477, 783, 728, 811,
	713, 743, 753, 198, 190, 720, 719, 800, 668, 667,
	748, 796, 810, 0, 0, 579, 240, 0, 0, 350,
	320, 257, 0, 0, 711, 0, 564, 565, 696, 752,
	644, 739, 815, 677, 744, 816, 77, 0, 0, 0,
	478, 503, 502, 505, 506, 507, 508, 0, 0, 137,
	504, 509, 510, 511, 0, 706, 749, 827, 623, 475,
	494, 628, 578, 0, 801, 664, 665, 202, 0, 0,
	0, 0, 0, 0, 0, 709, 726, 768, 693, 345,
	755, 764, 778, 686, 288, 215, 0, 0, 0, 0,
	491, 492, 1866, 0, 0, 0, 594, 0, 493, 0,
	638, 489, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 495, 0, 0, 0, 643, 621,
	662, 770, 622, 620, 258, 635, 567, 799, 694, 231,
	153, 805, 692, 592, 758, 639, 787, 680, 238, 637,
	154, 634, 640, 678, 269, 767, 773, 576, 157, 784,
	658, 671, 191, 0, 298, 745, 344, 483, 731, 297,
	241, 337, 759, 807, 343, 681, 327, 351, 355, 208,
	714, 182, 317, 200, 197, 663, 777, 627, 216, 287,
	194, 234, 697, 751, 659, 187, 762, 738, 789, 316,
	334, 159, 255, 335, 354, 174, 329, 256, 262, 184,
	186, 185, 170, 311, 333, 179, 189, 785, 772, 791,
	654, 641, 646, 642, 670, 808, 226, 217, 792, 790,
	348, 143, 307, 306, 684, 225, 775, 144, 136, 294,
	145, 232, 162, 795, 357, 173, 236, 330, 482, 211,
	268, 193, 747, 277, 669, 156, 290, 252, 253, 251,
	254, 214, 140, 146, 771, 292, 309, 332, 175, 323,
	138, 139, 141, 148, 300, 149, 150, 814, 246, 204,
	207, 219, 229, 746, 296, 324, 349, 740, 171, 164,
	326, 342, 180, 308, 310, 356, 769, 166, 803, 786,
	733, 699, 705, 629, 0, 165, 765, 661, 673, 653,
	741, 652, 213, 757, 340, 341, 192, 358, 570, 818,
	167, 636, 817, 265, 272, 264, 820, 336, 804, 734,
	723, 721, 630, 802, 732, 722, 237, 206, 221, 285,
	243, 286, 222, 260, 259, 261, 244, 725, 0, 163,
	0, 321, 812, 829, 325, 177, 647, 779, 331, 218,
	291, 178, 212, 205, 284, 263, 172, 224, 319, 235,
	242, 761, 826, 276, 299, 181, 346, 318, 201, 581,
	593, 587, 589, 588, 585, 586, 584, 583, 582, 595,
	568, 569, 572, 573, 574, 716, 806, 631, 577, 782,
	590, 591, 754, 824, 566, 188, 515, 607, 608, 609,
	516, 610, 611, 517, 518, 612, 613, 614, 615, 519,
	616, 617, 618, 596, 597, 598, 599, 600, 601, 602,
	603, 606, 604, 605, 712, 281, 575, 158, 168, 239,
	825, 293, 210, 619, 626, 645, 648, 649, 650, 651,
	655, 660, 0, 666, 672, 674, 675, 683, 688, 689,
	690, 691, 698, 700, 701, 702, 703, 704, 707, 708,
	710, 717, 718, 724, 729, 730, 736, 737, 0, 760,
	763, 580, 774, 776, 780, 781, 788, 793, 794, 819,
	823, 828, 347, 196, 715, 735, 766, 169, 176, 183,
	195, 203, 209, 220, 223, 227, 228, 230, 233, 245,
	247, 248, 249, 250, 266, 267, 270, 271, 274, 275,
	278, 279, 280, 282, 283, 289, 147, 295, 301, 302,
	303, 304, 305, 312, 313, 314, 315, 322, 338, 339,
	352, 353, 798, 695, 155, 0, 0, 161, 0, 0,
	0, 0, 0, 682, 160, 797, 821, 742, 756, 809,
	0, 328, 571, 813, 656, 679, 822, 685, 687, 750,
	632, 727, 273, 676, 633, 0, 0, 624, 480, 625,
	657, 199, 477, 783, 728, 811, 713, 743, 753, 198,
	190, 720, 719, 800, 668, 667, 748, 796, 810, 0,
	0, 579, 240, 0, 0, 350, 320, 257, 0, 0,
	711, 0, 564, 565, 696, 752, 644, 739, 815, 677,
	1977, 816, 77, 0, 0, 0, 478, 503, 502, 505,
	506, 507, 508, 0, 0, 137, 504, 509, 510, 511,
	1978, 706, 749, 827, 623, 475, 494, 628, 578, 0,
	801, 664, 665, 202, 0, 0, 0, 0, 0, 0,
	0, 709, 726, 768, 693, 345, 755, 764, 778, 686,
	288, 215, 0, 0, 0, 0, 491, 492, 0, 0,
	0, 0, 594, 0, 493, 0, 638, 489, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	495, 0, 0, 0, 643, 621, 662, 770, 622, 620,
	258, 635, 567, 799, 694, 231, 153, 805, 692, 592,
	758, 639, 787, 680, 238, 637, 154, 634, 640, 678,
	269, 767, 773, 576, 157, 784, 658, 671, 191, 0,
	298, 745, 344, 483, 731, 297, 241, 337, 759, 807,
	343, 681, 327, 351, 355, 208, 714, 182, 317, 200,
	197, 663, 777, 627, 216, 287, 194, 234, 697, 751,
	659, 187, 762, 738, 789, 316, 334, 159, 255, 335,
	354, 174, 329, 256, 262, 184, 186, 185, 170, 311,
	333, 179, 189, 785, 772, 791, 654, 641, 646, 642,
	670, 808, 226, 217, 792, 790, 348, 143, 307, 306,
	684, 225, 775, 144, 136, 294, 145, 232, 162, 795,
	357, 173, 236, 330, 482, 211, 268, 193, 747, 277,
	669, 156, 290, 252, 253, 251, 254, 214, 140, 146,
	771, 292, 309, 332, 175, 323, 138, 139, 141, 148,
	300, 149, 150, 814, 246, 204, 207, 219, 229, 746,
	296, 324, 349, 740, 171, 164, 326, 342, 180, 308,
	310, 356, 769, 166, 803, 786, 733, 699, 705, 629,
	0, 165, 765, 661, 673, 653, 741, 652, 213, 757,
	340, 341, 192, 358, 570, 818, 167, 636, 817, 265,
	272, 264, 820, 336, 804, 734, 723, 721, 630, 802,
	732, 722, 237, 206, 221, 285, 243, 286, 222, 260,
	259, 261, 244, 725, 0, 163, 0, 321, 812, 829,
	325, 177, 647, 779, 331, 218, 291, 178, 212, 205,
	284, 263, 172, 224, 319, 235, 242, 761, 826, 276,
	299, 181, 346, 318, 201, 581, 593, 587, 589, 588,
	585, 586, 584, 583, 582, 595, 568, 569, 572, 573,
	574, 716, 806, 631, 577, 782, 590, 591, 754, 824,
	566, 188, 515, 607, 608, 609, 516, 610, 611, 517,
	518, 612, 613, 614, 615, 519, 616, 617, 618, 596,
	597, 598, 599, 600, 601, 602, 603, 606, 604, 605,
	712, 281, 575, 158, 168, 239, 825, 293, 210, 619,
	626, 645, 648, 649, 650, 651, 655, 660, 0, 666,
	672, 674, 675, 683, 688, 689, 690, 691, 698, 700,
	701, 702, 703, 704, 707, 708, 710, 717, 718, 724,
	729, 730, 736, 737, 0, 760, 763, 580, 774, 776,
	780, 781, 788, 793, 794, 819, 823, 828, 347, 196,
	715, 735, 766, 169, 176, 183, 195, 203, 209, 220,
	223, 227, 228, 230, 233, 245, 247, 248, 249, 250,
	266, 267, 270, 271, 274, 275, 278, 279, 280, 282,
	283, 289, 147, 295, 301, 302, 303, 304, 305, 312,
	313, 314, 315, 322, 338, 339, 352, 353, 798, 695,
	155, 0, 0, 161, 0, 0, 0, 0, 0, 682,
	160, 797, 821, 742, 756, 809, 0, 328, 571, 813,
	656, 679, 822, 685, 687, 750, 632, 727, 273, 676,
	633, 0, 0, 624, 870, 625, 657, 199, 868, 783,
	728, 811, 713, 743, 753, 198, 190, 720, 719, 800,
	668, 667, 748, 796, 810, 0, 0, 579, 240, 0,
	0, 350, 320, 257, 0, 0, 711, 0, 564, 565,
	696, 752, 644, 739, 815, 677, 744, 816, 77, 0,
	1121, 0, 478, 503, 502, 505, 506, 507, 508, 0,
	0, 137, 504, 509, 510, 511, 0, 706, 749, 827,
	623, 889, 494, 628, 578, 0, 801, 664, 665, 202,
	0, 0, 0, 0, 0, 0, 0, 709, 726, 768,
	693, 345, 755, 764, 778, 686, 288, 215, 0, 0,
	0, 0, 491, 492, 0, 0, 0, 0, 594, 0,
	493, 0, 638, 489, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 495, 0, 0, 0,
	643, 621, 662, 770, 622, 620, 258, 635, 567, 799,
	694, 231, 153, 805, 692, 592, 758, 639, 787, 680,
	238, 637, 154, 634, 640, 678, 269, 767, 773, 576,
	157, 784, 658, 671, 191, 0, 298, 745, 344, 483,
	731, 297, 241, 337, 759, 807, 343, 681, 327, 351,
	355, 208, 714, 182, 317, 200, 197, 663, 777, 627,
	216, 287, 194, 234, 697, 751, 659, 187, 762, 738,
	789, 316, 334, 159, 255, 335, 354, 174, 329, 256,
	262, 184, 186, 185, 170, 311, 333, 179, 189, 785,
	772, 791, 654, 641, 646, 642, 670, 808, 226, 217,
	792, 790, 348, 143, 307, 306, 684, 225, 775, 144,
	136, 294, 145, 232, 162, 795, 357, 173, 236, 330,
	482, 211, 268, 193, 747, 277, 669, 156, 290, 252,
	253, 251, 254, 214, 140, 146, 771, 292, 309, 332,
	175, 323, 138, 139, 141, 148, 300, 149, 150, 814,
	246, 204, 207, 219, 229, 746, 296, 324, 349, 740,
	171, 164, 326, 342, 180, 308, 310, 356, 769, 166,
	803, 786, 733, 699, 705, 629, 0, 165, 765, 661,
	673, 653, 741, 652, 213, 757, 340, 341, 192, 358,
	570, 818, 167, 636, 817, 265, 272, 264, 820, 336,
	804, 734, 723, 721, 630, 802, 732, 722, 237, 206,
	221, 285, 243, 286, 222, 260, 259, 261, 244, 725,
	0, 163, 0, 321, 812, 829, 325, 177, 647, 779,
	331, 218, 291, 178, 212, 205, 284, 263, 172, 224,
	319, 235, 242, 761, 826, 276, 299, 181, 346, 318,
	201, 581, 593, 587, 589, 588, 585, 586, 584, 583,
	582, 595, 568, 569, 572, 573, 574, 716, 806, 631,
	577, 782, 590, 591, 754, 824, 566, 188, 515, 607,
	608, 609, 516, 610, 611, 517, 518, 612, 613, 614,
	615, 519, 616, 617, 618, 596, 597, 598, 599, 600,
	601, 602, 603, 606, 604, 605, 712, 281, 575, 158,
	168, 239, 825, 293, 210, 619, 626, 645, 648, 649,
	650, 651, 655, 660, 0, 666, 672, 674, 675, 683,
	688, 689, 690, 691, 698, 700, 701, 702, 703, 704,
	707, 708, 710, 717, 718, 724, 729, 730, 736, 737,
	0, 760, 763, 580, 774, 776, 780, 781, 788, 793,
	794, 819, 823, 828, 347, 196, 715, 735, 766, 169,
	176, 183, 195, 203, 209, 220, 223, 227, 228, 230,
	233, 245, 247, 248, 249, 250, 266, 267, 270, 271,
	274, 275, 278, 279, 280, 282, 283, 289, 147, 295,
	301, 302, 303, 304, 305, 312, 313, 314, 315, 322,
	338, 339, 352, 353, 798, 695, 155, 0, 0, 161,
	0, 0, 0, 0, 0, 682, 160, 797, 821, 742,
	756, 809, 0, 328, 571, 813, 656, 679, 822, 685,
	687, 750, 632, 727, 273, 676, 633, 0, 0, 624,
	480, 625, 657, 199, 477, 783, 728, 811, 713, 743,
	753, 198, 190, 720, 719, 800, 668, 667, 748, 796,
	810, 0, 0, 579, 240, 0, 0, 350, 320, 257,
	0, 0, 711, 0, 564, 565, 696, 752, 644, 739,
	815, 677, 744, 816, 77, 0, 0, 0, 478, 503,
	1898, 505, 506, 507, 508, 0, 0, 137, 504, 509,
	510, 511, 0, 706, 749, 827, 623, 475, 494, 628,
	578, 0, 801, 664, 665, 202, 0, 0, 0, 0,
	0, 0, 0, 709, 726, 768, 693, 345, 755, 764,
	778, 686, 288, 215, 0, 0, 0, 0, 491, 492,
	1866, 0, 0, 0, 594, 0, 493, 0, 638, 489,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 495, 0, 0, 0, 643, 621, 662, 770,
	622, 620, 258, 635, 567, 799, 694, 231, 153, 805,
	692, 592, 758, 639, 787, 680, 238, 637, 154, 634,
	640, 678, 269, 767, 773, 576, 157, 784, 658, 671,
	191, 0, 298, 745, 344, 483, 731, 297, 241, 337,
	759, 807, 343, 681, 327, 351, 355, 208, 714, 182,
	317, 200, 197, 663, 777, 627, 216, 287, 194, 234,
	697, 751, 659, 187, 762, 738, 789, 316, 334, 159,
	255, 335, 354, 174, 329, 256, 262, 184, 186, 185,
	170, 311, 333, 179, 189, 785, 772, 791, 654, 641,
	646, 642, 670, 808, 226, 217, 792, 790, 348, 143,
	307, 306, 684, 225, 775, 144, 136, 294, 145, 232,
	162, 795, 357, 173, 236, 330, 482, 211, 268, 193,
	747, 277, 669, 156, 290, 252, 253, 251, 254, 214,
	140, 146, 771, 292, 309, 332, 175, 323, 138, 139,
	141, 148, 300, 149, 150, 814, 246, 204, 207, 219,
	229, 746, 296, 324, 349, 740, 171, 164, 326, 342,
	180, 308, 310, 356, 769, 166, 803, 786, 733, 699,
	705, 629, 0, 165, 765, 661, 673, 653, 741, 652,
	213, 757, 340, 341, 192, 358, 570, 818, 167, 636,
	817, 265, 272, 264, 820, 336, 804, 734, 723, 721,
	630, 802, 732, 722, 237, 206, 221, 285, 243, 286,
	222, 260, 259, 261, 244, 725, 0, 163, 0, 321,
	812, 829, 325, 177, 647, 779, 331, 218, 291, 178,
	212, 205, 284, 263, 172, 224, 319, 235, 242, 761,
	826, 276, 299, 181, 346, 318, 201, 581, 593, 587,
	589, 588, 585, 586, 584, 583, 582, 595, 568, 569,
	572, 573, 574, 716, 806, 631, 577, 782, 590, 591,
	754, 824, 566, 188, 515, 607, 608, 609, 516, 610,
	611, 517, 518, 612, 613, 614, 615, 519, 616, 617,
	618, 596, 597, 598, 599, 600, 601, 602, 603, 606,
	604, 605, 712, 281, 575, 158, 168, 239, 825, 293,
	210, 619, 626, 645, 648, 649, 650, 651, 655, 660,
	0, 666, 672, 674, 675, 683, 688, 689, 690, 691,
	698, 700, 701, 702, 703, 704, 707, 708, 710, 717,
	718, 724, 729, 730, 736, 737, 0, 760, 763, 580,
	774, 776, 780, 781, 788, 793, 794, 819, 823, 828,
	347, 196, 715, 735, 766, 169, 176, 183, 195, 203,
	209, 220, 223, 227, 228, 230, 233, 245, 247, 248,
	249, 250, 266, 267, 270, 271, 274, 275, 278, 279,
	280, 282, 283, 289, 147, 295, 301, 302, 303, 304,
	305, 312, 313, 314, 315, 322, 338, 339, 352, 353,
	798, 695, 155, 0, 0, 161, 0, 0, 0, 0,
	0, 682, 160, 797, 821, 742, 756, 809, 0, 328,
	571, 813, 656, 679, 822, 685, 687, 750, 632, 727,
	273, 676, 633, 0, 0, 624, 480, 625, 657, 199,
	477, 783, 728, 811, 713, 743, 753, 198, 190, 720,
	719, 800, 668, 667, 748, 796, 810, 0, 0, 579,
	240, 0, 0, 350, 320, 257, 0, 0, 711, 0,
	564, 565, 696, 752, 644, 739, 815, 677, 744, 816,
	77, 0, 0, 0, 478, 503, 1895, 505, 506, 507,
	508, 0, 0, 137, 504, 509, 510, 511, 0, 706,
	749, 827, 623, 475, 494, 628, 578, 0, 801, 664,
	665, 202, 0, 0, 0, 0, 0, 0, 0, 709,
	726, 768, 693, 345, 755, 764, 778, 686, 288, 215,
	0, 0, 0, 0, 491, 492, 1866, 0, 0, 0,
	594, 0, 493, 0, 638, 489, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 495, 0,
	0, 0, 643, 621, 662, 770, 622, 620, 258, 635,
	567, 799, 694, 231, 153, 805, 692, 592, 758, 639,
	787, 680, 238, 637, 154, 634, 640, 678, 269, 767,
	773, 576, 157, 784, 658, 671, 191, 0, 298, 745,
	344, 483, 731, 297, 241, 337, 759, 807, 343, 681,
	327, 351, 355, 208, 714, 182, 317, 200, 197, 663,
	777, 627, 216, 287, 194, 234, 697, 751, 659, 187,
	762, 738, 789, 316, 334, 159, 255, 335, 354, 174,
	329, 256, 262, 184, 186, 185, 170, 311, 333, 179,
	189, 785, 772, 791, 654, 641, 646, 642, 670, 808,
	226, 217, 792, 790, 348, 143, 307, 306, 684, 225,
	775, 144, 136, 294, 145, 232, 162, 795, 357, 173,
	236, 330, 482, 211, 268, 193, 747, 277, 669, 156,
	290, 252, 253, 251, 254, 214, 140, 146, 771, 292,
	309, 332, 175, 323, 138, 139, 141, 148, 300, 149,
	150, 814, 246, 204, 207, 219, 229, 746, 296, 324,
	349, 740, 171, 164, 326, 342, 180, 308, 310, 356,
	769, 166, 803, 786, 733, 699, 705, 629, 0, 165,
	765, 661, 673, 653, 741, 652, 213, 757, 340, 341,
	192, 358, 570, 818, 167, 636, 817, 265, 272, 264,
	820, 336, 804, 734, 723, 721, 630, 802, 732, 722,
	237, 206, 221, 285, 243, 286, 222, 260, 259, 261,
	244, 725, 0, 163, 0, 321, 812, 829, 325, 177,
	647, 779, 331, 218, 291, 178, 212, 205, 284, 263,
	172, 224, 319, 235, 242, 761, 826, 276, 299, 181,
	346, 318, 201, 581, 593, 587, 589, 588, 585, 586,
	584, 583, 582, 595, 568, 569, 572, 573, 574, 716,
	806, 631, 577, 782, 590, 591, 754, 824, 566, 188,
	515, 607, 608, 609, 516, 610, 611, 517, 518, 612,
	613, 614, 615, 519, 616, 617, 618, 596, 597, 598,
	599, 600, 601, 602, 603, 606, 604, 605, 712, 281,
	575, 158, 168, 239, 825, 293, 210, 619, 626, 645,
	648, 649, 650, 651, 655, 660, 0, 666, 672, 674,
	675, 683, 688, 689, 690, 691, 698, 700, 701, 702,
	703, 704, 707, 708, 710, 717, 718, 724, 729, 730,
	736, 737, 0, 760, 763, 580, 774, 776, 780, 781,
	788, 793, 794, 819, 823, 828, 347, 196, 715, 735,
	766, 169, 176, 183, 195, 203, 209, 220, 223, 227,
	228, 230, 233, 245, 247, 248, 249, 250, 266, 267,
	270, 271, 274, 275, 278, 279, 280, 282, 283, 289,
	147, 295, 301, 302, 303, 304, 305, 312, 313, 314,
	315, 322, 338, 339, 352, 353, 798, 695, 155, 0,
	0, 161, 0, 0, 0, 0, 0, 682, 160, 797,
	821, 742, 756, 809, 36, 328, 571, 813, 656, 679,
	822, 685, 687, 750, 632, 727, 273, 676, 633, 0,
	0, 624, 480, 625, 657, 199, 477, 783, 728, 811,
	713, 743, 753, 198, 190, 720, 719, 800, 668, 667,
	748, 796, 810, 0, 0, 579, 240, 0, 0, 350,
	320, 257, 0, 0, 711, 0, 564, 565, 696, 752,
	644, 739, 815, 677, 744, 816, 77, 0, 0, 0,
	478, 503, 502, 505, 506, 507, 508, 0, 0, 137,
	504, 509, 510, 511, 0, 706, 749, 827, 623, 475,
	494, 628, 578, 0, 801, 664, 665, 202, 0, 0,
	0, 0, 0, 0, 0, 709, 726, 768, 693, 345,
	755, 764, 778, 686, 288, 215, 0, 0, 0, 0,
	491, 492, 0, 0, 0, 0, 594, 0, 493, 0,
	638, 489, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 495, 0, 0, 0, 643, 621,
	662, 770, 622, 620, 258, 635, 567, 799, 694, 231,
	153, 805, 692, 592, 758, 639, 787, 680, 238, 637,
	154, 634, 640, 678, 269, 767, 773, 576, 157, 784,
	658, 671, 191, 0, 298, 745, 344, 483, 731, 297,
	241, 337, 759, 807, 343, 681, 327, 351, 355, 208,
	714, 182, 317, 200, 197, 663, 777, 627, 216, 287,
	194, 234, 697, 751, 659, 187, 762, 738, 789, 316,
	334, 159, 255, 335, 354, 174, 329, 256, 262, 184,
	186, 185, 170, 311, 333, 179, 189, 785, 772, 791,
	654, 641, 646, 642, 670, 808, 226, 217, 792, 790,
	348, 143, 307, 306, 684, 225, 775, 144, 136, 294,
	145, 232, 162, 795, 357, 173, 236, 330, 482, 211,
	268, 193, 747, 277, 669, 156, 290, 252, 253, 251,
	254, 214, 140, 146, 771, 292, 309, 332, 175, 323,
	138, 139, 141, 148, 300, 149, 150, 814, 246, 204,
	207, 219, 229, 746, 296, 324, 349, 740, 171, 164,
	326, 342, 180, 308, 310, 356, 769, 166, 803, 786,
	733, 699, 705, 629, 0, 165, 765, 661, 673, 653,
	741, 652, 213, 757, 340, 341, 192, 358, 570, 818,
	167, 636, 817, 265, 272, 264, 820, 336, 804, 734,
	723, 721, 630, 802, 732, 722, 237, 206, 221, 285,
	243, 286, 222, 260, 259, 261, 244, 725, 0, 163,
	0, 321, 812, 829, 325, 177, 647, 779, 331, 218,
	291, 178, 212, 205, 284, 263, 172, 224, 319, 235,
	242, 761, 826, 276, 299, 181, 346, 318, 201, 581,
	593, 587, 589, 588, 585, 586, 584, 583, 582, 595,
	568, 569, 572, 573, 574, 716, 806, 631, 577, 782,
	590, 591, 754, 824, 566, 188, 515, 607, 608, 609,
	516, 610, 611, 517, 518, 612, 613, 614, 615, 519,
	616, 617, 618, 596, 597, 598, 599, 600, 601, 602,
	603, 606, 604, 605, 712, 281, 575, 158, 168, 239,
	1207, 293, 210, 619, 626, 645, 648, 649, 650, 651,
	655, 660, 0, 666, 672, 674, 675, 683, 688, 689,
	690, 691, 698, 700, 701, 702, 703, 704, 707, 708,
	710, 717, 718, 724, 729, 730, 736, 737, 0, 760,
	763, 580, 774, 776, 780, 781, 788, 793, 794, 819,
	823, 828, 347, 196, 715, 735, 766, 169, 176, 183,
	195, 203, 209, 220, 223, 227, 228, 230, 233, 245,
	247, 248, 249, 250, 266, 267, 270, 271, 274, 275,
	278, 279, 280, 282, 283, 289, 147, 295, 301, 302,
	303, 304, 305, 312, 313, 314, 315, 322, 338, 339,
	352, 353, 798, 695, 155, 0, 0, 161, 0, 0,
	0, 0, 0, 682, 160, 797, 821, 742, 756, 809,
	0, 328, 571, 813, 656, 679, 822, 685, 687, 750,
	632, 727, 273, 676, 633, 0, 0, 624, 480, 625,
	657, 199, 477, 783, 728, 811, 713, 743, 753, 198,
	190, 720, 719, 800, 668, 667, 748, 796, 810, 0,
	0, 579, 240, 0, 0, 350, 320, 257, 0, 0,
	711, 0, 564, 565, 696, 752, 644, 739, 815, 677,
	744, 816, 77, 0, 1731, 0, 478, 503, 502, 505,
	506, 507, 508, 0, 0, 137, 504, 509, 510, 511,
	0, 706, 749, 827, 623, 475, 494, 628, 578, 0,
	801, 664, 665, 202, 0, 0, 0, 0, 0, 0,
	0, 709, 726, 768, 693, 345, 755, 764, 778, 686,
	288, 215, 0, 0, 0, 0, 491, 492, 0, 0,
	0, 0, 594, 0, 493, 0, 638, 489, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	495, 0, 0, 0, 643, 621, 662, 770, 622, 620,
	258, 635, 567, 799, 694, 231, 153, 805, 692, 592,
	758, 639, 787, 680, 238, 637, 154, 634, 640, 678,
	269, 767, 773, 576, 157, 784, 658, 671, 191, 0,
	298, 745, 344, 483, 731, 297, 241, 337, 759, 807,
	343, 681, 327, 351, 355, 208, 714, 182, 317, 200,
	197, 663, 777, 627, 216, 287, 194, 234, 697, 751,
	659, 187, 762, 738, 789, 316, 334, 159, 255, 335,
	354, 174, 329, 256, 262, 184, 186, 185, 170, 311,
	333, 179, 189, 785, 772, 791, 654, 641, 646, 642,
	670, 808, 226, 217, 792, 790, 348, 143, 307, 306,
	684, 225, 775, 144, 136, 294, 145, 232, 162, 795,
	357, 173, 236, 330, 482, 211, 268, 193, 747, 277,
	669, 156, 290, 252, 253, 251, 254, 214, 140, 146,
	771, 292, 309, 332, 175, 323, 138, 139, 141, 148,
	300, 149, 150, 814, 246, 204, 207, 219, 229, 746,
	296, 324, 349, 740, 171, 164, 326, 342, 180, 308,
	310, 356, 769, 166, 803, 786, 733, 699, 705, 629,
	0, 165, 765, 661, 673, 653, 741, 652, 213, 757,
	340, 341, 192, 358, 570, 818, 167, 636, 817, 265,
	272, 264, 820, 336, 804, 734, 723, 721, 630, 802,
	732, 722, 237, 206, 221, 285, 243, 286, 222, 260,
	259, 261, 244, 725, 0, 163, 0, 321, 812, 829,
	325, 177, 647, 779, 331, 218, 291, 178, 212, 205,
	284, 263, 172, 224, 319, 235, 242, 761, 826, 276,
	299, 181, 346, 318, 201, 581, 593, 587, 589, 588,
	585, 586, 584, 583, 582, 595, 568, 569, 572, 573,
	574, 716, 806, 631, 577, 782, 590, 591, 754, 824,
	566, 188, 515, 607, 608, 609, 516, 610, 611, 517,
	518, 612, 613, 614, 615, 519, 616, 617, 618, 596,
	597, 598, 599, 600, 601, 602, 603, 606, 604, 605,
	712, 281, 575, 158, 168, 239, 825, 293, 210, 619,
	626, 645, 648, 649, 650, 651, 655, 660, 0, 666,
	672, 674, 675, 683, 688, 689, 690, 691, 698, 700,
	701, 702, 703, 704, 707, 708, 710, 717, 718, 724,
	729, 730, 736, 737, 0, 760, 763, 580, 774, 776,
	780, 781, 788, 793, 794, 819, 823, 828, 347, 196,
	715, 735, 766, 169, 176, 183, 195, 203, 209, 220,
	223, 227, 228, 230, 233, 245, 247, 248, 249, 250,
	266, 267, 270, 271, 274, 275, 278, 279, 280, 282,
	283, 289, 147, 295, 301, 302, 303, 304, 305, 312,
	313, 314, 315, 322, 338, 339, 352, 353, 798, 695,
	155, 0, 0, 161, 0, 0, 0, 0, 0, 682,
	160, 797, 821, 742, 756, 809, 0, 328, 571, 813,
	656, 679, 822, 685, 687, 750, 632, 727, 273, 676,
	633, 0, 0, 624, 870, 625, 657, 199, 868, 783,
	728, 811, 713, 743, 753, 198, 190, 720, 719, 800,
	668, 667, 748, 796, 810, 0, 0, 579, 240, 0,
	0, 350, 320, 257, 0, 0, 711, 0, 564, 565,
	696, 752, 644, 739, 815, 677, 744, 816, 77, 0,
	0, 0, 478, 503, 502, 505, 506, 507, 508, 0,
	0, 137, 504, 509, 510, 511, 0, 706, 749, 827,
	623, 889, 494, 628, 578, 0, 801, 664, 665, 202,
	0, 0, 0, 0, 0, 0, 0, 709, 726, 768,
	693, 345, 755, 764, 778, 686, 288, 215, 0, 0,
	0, 0, 491, 492, 0, 0, 0, 0, 594, 0,
	493, 0, 638, 489, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 495, 0, 0, 0,
	643, 621, 662, 770, 622, 620, 258, 635, 567, 799,
	694, 231, 153, 805, 692, 592, 758, 639, 787, 680,
	238, 637, 154, 634, 640, 678, 269, 767, 773, 576,
	157, 784, 658, 671, 191, 0, 298, 745, 344, 483,
	731, 297, 241, 337, 759, 807, 343, 681, 327, 351,
	355, 208, 714, 182, 317, 200, 197, 663, 777, 627,
	216, 287, 194, 234, 697, 751, 659, 187, 762, 738,
	789, 316, 334, 159, 255, 335, 354, 174, 329, 256,
	262, 184, 186, 185, 170, 311, 333, 179, 189, 785,
	772, 791, 654, 641, 646, 642, 670, 808, 226, 217,
	792, 790, 348, 143, 307, 306, 684, 225, 775, 144,
	136, 294, 145, 232, 162, 795, 357, 173, 236, 330,
	482, 211, 268, 193, 747, 277, 669, 156, 290, 252,
	253, 251, 254, 214, 140, 146, 771, 292, 309, 332,
	175, 323, 138, 139, 141, 148, 300, 149, 150, 814,
	246, 204, 207, 219, 229, 746, 296, 324, 349, 740,
	171, 164, 326, 342, 180, 308, 310, 356, 769, 166,
	803, 786, 733, 699, 705, 629, 0, 165, 765, 661,
	673, 653, 741, 652, 213, 757, 340, 341, 192, 358,
	570, 818, 167, 636, 817, 265, 272, 264, 820, 336,
	804, 734, 723, 721, 630, 802, 732, 722, 237, 206,
	221, 285, 243, 286, 222, 260, 259, 261, 244, 725,
	0, 163, 0, 321, 812, 829, 325, 177, 647, 779,
	331, 218, 291, 178, 212, 205, 284, 263, 172, 224,
	319, 235, 242, 761, 826, 276, 299, 181, 346, 318,
	201, 581, 593, 587, 589, 588, 585, 586, 584, 583,
	582, 595, 568, 569, 572, 573, 574, 716, 806, 631,
	577, 782, 590, 591, 754, 824, 566, 188, 515, 607,
	608, 609, 516, 610, 611, 517, 518, 612, 613, 614,
	615, 519, 616, 617, 618, 596, 597, 598, 599, 600,
	601, 602, 603, 606, 604, 605, 712, 281, 575, 158,
	168, 239, 825, 293, 210, 619, 626, 645, 648, 649,
	650, 651, 655, 660, 0, 666, 672, 674, 675, 683,
	688, 689, 690, 691, 698, 700, 701, 702, 703, 704,
	707, 708, 710, 717, 718, 724, 729, 730, 736, 737,
	0, 760, 763, 580, 774, 776, 780, 781, 788, 793,
	794, 819, 823, 828, 347, 196, 715, 735, 766, 169,
	176, 183, 195, 203, 209, 220, 223, 227, 228, 230,
	233, 245, 247, 248, 249, 250, 266, 267, 270, 271,
	274, 275, 278, 279, 280, 282, 283, 289, 147, 295,
	301, 302, 303, 304, 305, 312, 313, 314, 315, 322,
	338, 339, 352, 353, 798, 695, 155, 0, 0, 161,
	0, 0, 0, 0, 0, 682, 160, 797, 821, 742,
	756, 809, 0, 328, 571, 813, 656, 679, 822, 685,
	687, 750, 632, 727, 273, 676, 633, 0, 0, 624,
	480, 625, 657, 199, 477, 783, 728, 811, 713, 743,
	753, 198, 190, 720, 719, 800, 668, 667, 748, 796,
	810, 0, 0, 579, 240, 0, 0, 350, 320, 257,
	0, 0, 711, 0, 564, 565, 696, 752, 644, 739,
	815, 677, 744, 816, 77, 0, 0, 0, 478, 503,
	502, 505, 506, 507, 508, 0, 0, 137, 504, 509,
	510, 511, 0, 706, 749, 827, 623, 475, 494, 628,
	578, 0, 801, 664, 665, 202, 0, 0, 0, 0,
	0, 0, 0, 709, 726, 768, 693, 345, 755, 764,
	778, 686, 288, 215, 0, 0, 0, 0, 491, 492,
	0, 0, 0, 0, 594, 0, 493, 0, 638, 489,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 495, 0, 0, 0, 643, 621, 662, 770,
	622, 620, 258, 635, 567, 799, 694, 231, 153, 805,
	692, 592, 758, 639, 787, 680, 238, 637, 154, 634,
	640, 678, 269, 767, 773, 576, 157, 784, 658, 671,
	191, 0, 298, 745, 344, 483, 731, 297, 241, 337,
	759, 807, 343, 681, 327, 351, 355, 208, 714, 182,
	317, 200, 197, 663, 777, 627, 216, 287, 194, 234,
	697, 751, 659, 187, 762, 738, 789, 316, 334, 159,
	255, 335, 354, 174, 329, 256, 262, 184, 186, 185,
	170, 311, 333, 179, 189, 785, 772, 791, 654, 641,
	646, 642, 670, 808, 226, 217, 792, 790, 348, 143,
	307, 306, 684, 225, 775, 144, 136, 294, 145, 232,
	162, 795, 357, 173, 236, 330, 482, 211, 268, 193,
	747, 277, 669, 156, 290, 252, 253, 251, 254, 214,
	140, 146, 771, 292, 309, 332, 175, 323, 138, 139,
	141, 148, 300, 149, 150, 814, 246, 204, 207, 219,
	229, 746, 296, 324, 349, 740, 171, 164, 326, 342,
	180, 308, 310, 356, 769, 166, 803, 786, 733, 699,
	705, 629, 0, 165, 765, 661, 673, 653, 741, 652,
	213, 757, 340, 341, 192, 358, 570, 818, 167, 636,
	817, 265, 272, 264, 820, 336, 804, 734, 723, 721,
	630, 802, 732, 722, 237, 206, 221, 285, 243, 286,
	222, 260, 259, 261, 244, 725, 0, 163, 0, 321,
	812, 829, 325, 177, 647, 779, 331, 218, 291, 178,
	212, 205, 284, 263, 172, 224, 319, 235, 242, 761,
	826, 276, 299, 181, 346, 318, 201, 581, 593, 587,
	589, 588, 585, 586, 584, 583, 582, 595, 568, 569,
	572, 573, 574, 716, 806, 631, 577, 782, 590, 591,
	754, 824, 566, 188, 515, 607, 608, 609, 516, 610,
	611, 517, 518, 612, 613, 614, 615, 519, 616, 617,
	618, 596, 597, 598, 599, 600, 601, 602, 603, 606,
	604, 605, 712, 281, 575, 158, 168, 239, 825, 293,
	210, 619, 626, 645, 648, 649, 650, 651, 655, 660,
	0, 666, 672, 674, 675, 683, 688, 689, 690, 691,
	698, 700, 701, 702, 703, 704, 707, 708, 710, 717,
	718, 724, 729, 730, 736, 737, 0, 760, 763, 580,
	774, 776, 780, 781, 788, 793, 794, 819, 823, 828,
	347, 196, 715, 735, 766, 169, 176, 183, 195, 203,
	209, 220, 223, 227, 228, 230, 233, 245, 247, 248,
	249, 250, 266, 267, 270, 271, 274, 275, 278, 279,
	280, 282, 283, 289, 147, 295, 301, 302, 303, 304,
	305, 312, 313, 314, 315, 322, 338, 339, 352, 353,
	798, 695, 155, 0, 0, 161, 0, 0, 0, 0,
	0, 682, 160, 797, 821, 742, 756, 809, 0, 328,
	571, 813, 656, 679, 822, 685, 687, 750, 632, 727,
	273, 676, 633, 0, 0, 624, 870, 625, 657, 199,
	868, 783, 728, 811, 713, 743, 753, 198, 190, 720,
	719, 800, 668, 667, 748, 796, 810, 0, 0, 579,
	240, 0, 0, 350, 320, 257, 0, 0, 711, 0,
	564, 565, 696, 752, 644, 739, 815, 677, 744, 816,
	77, 0, 0, 0, 478, 503, 502, 505, 506, 507,
	508, 0, 0, 137, 504, 509, 510, 511, 0, 706,
	749, 827, 623, 889, 494, 628, 578, 0, 801, 664,
	665, 202, 0, 0, 0, 0, 0, 0, 0, 709,
	726, 768, 693, 345, 755, 764, 778, 686, 288, 215,
	0, 0, 0, 0, 491, 492, 0, 0, 0, 0,
	594, 0, 493, 0, 638, 489, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 495, 0,
	0, 0, 643, 621, 662, 770, 622, 620, 258, 635,
	567, 799, 694, 231, 153, 805, 692, 592, 758, 639,
	787, 680, 238, 637, 154, 634, 640, 678, 269, 767,
	773, 576, 157, 784, 658, 671, 191, 0, 298, 745,
	344, 483, 3389, 297, 241, 337, 759, 807, 343, 681,
	327, 351, 355, 208, 714, 182, 317, 200, 197, 663,
	777, 627, 216, 287, 194, 234, 697, 751, 659, 187,
	762, 738, 789, 316, 334, 159, 255, 335, 354, 174,
	329, 256, 262, 184, 186, 185, 170, 311, 333, 179,
	189, 785, 772, 791, 654, 641, 646, 642, 670, 808,
	226, 217, 792, 790, 348, 143, 307, 306, 684, 225,
	775, 144, 136, 294, 145, 232, 162, 795, 357, 173,
	236, 330, 482, 211, 268, 193, 747, 277, 669, 156,
	290, 252, 253, 251, 254, 214, 140, 146, 771, 292,
	309, 332, 175, 323, 138, 139, 141, 148, 300, 149,
	150, 814, 246, 204, 207, 219, 229, 746, 296, 324,
	349, 740, 171, 164, 326, 342, 180, 308, 310, 356,
	769, 166, 803, 786, 733, 699, 705, 629, 0, 165,
	765, 661, 673, 653, 741, 652, 213, 757, 340, 341,
	192, 358, 570, 818, 167, 636, 817, 265, 272, 264,
	820, 336, 804, 734, 723, 721, 630, 802, 732, 722,
	237, 206, 221, 285, 243, 286, 222, 260, 259, 261,
	244, 725, 0, 163, 0, 321, 812, 829, 325, 177,
	647, 779, 331, 218, 291, 178, 212, 205, 284, 263,
	172, 224, 319, 235, 242, 761, 826, 276, 299, 181,
	346, 318, 201, 581, 593, 587, 589, 588, 585, 586,
	584, 583, 582, 595, 568, 569, 572, 573, 574, 716,
	806, 631, 577, 782, 590, 591, 754, 824, 566, 188,
	515, 607, 608, 609, 516, 610, 611, 517, 518, 612,
	613, 614, 615, 519, 616, 617, 618, 596, 597, 598,
	599, 600, 601, 602, 603, 606, 604, 605, 712, 281,
	575, 158, 168, 239, 825, 293, 210, 619, 626, 645,
	648, 649, 650, 651, 655, 660, 0, 666, 672, 674,
	675, 683, 688, 689, 690, 691, 698, 700, 701, 702,
	703, 704, 707, 708, 710, 717, 718, 724, 729, 730,
	736, 737, 0, 760, 763, 580, 774, 776, 780, 781,
	788, 793, 794, 819, 823, 828, 347, 196, 715, 735,
	766, 169, 176, 183, 195, 203, 209, 220, 223, 227,
	228, 230, 233, 245, 247, 248, 249, 250, 266, 267,
	270, 271, 274, 275, 278, 279, 280, 282, 283, 289,
	147, 295, 301, 302, 303, 304, 305, 312, 313, 314,
	315, 322, 338, 339, 352, 353, 798, 695, 155, 0,
	0, 161, 0, 0, 0, 0, 0, 682, 160, 797,
	821, 742, 756, 809, 0, 328, 571, 813, 656, 679,
	822, 685, 687, 750, 632, 727, 273, 676, 633, 0,
	0, 624, 870, 625, 657, 199, 868, 783, 728, 811,
	713, 743, 753, 198, 190, 720, 719, 800, 668, 667,
	748, 796, 810, 0, 0, 579, 240, 0, 0, 350,
	320, 257, 0, 0, 711, 0, 564, 565, 696, 752,
	644, 739, 815, 677, 744, 816, 77, 0, 0, 0,
	478, 503, 502, 505, 506, 507, 508, 0, 0, 137,
	504, 509, 510, 511, 0, 706, 749, 827, 623, 889,
	494, 628, 578, 0, 801, 664, 665, 202, 0, 0,
	0, 0, 0, 0, 0, 709, 726, 768, 693, 345,
	755, 764, 778, 686, 288, 215, 0, 0, 0, 0,
	491, 492, 0, 0, 0, 0, 594, 0, 493, 0,
	638, 489, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 495, 0, 0, 0, 643, 621,
	662, 770, 622, 620, 258, 635, 567, 799, 694, 231,
	153, 805, 692, 592, 758, 639, 787, 680, 238, 637,
	154, 634, 640, 678, 269, 767, 773, 576, 157, 784,
	658, 671, 191, 0, 298, 745, 344, 483, 731, 297,
	241, 337, 759, 807, 343, 681, 327, 351, 355, 208,
	714, 182, 317, 200, 197, 663, 777, 627, 216, 287,
	194, 234, 697, 751, 659, 187, 762, 738, 789, 316,
	334, 159, 255, 335, 354, 174, 329, 256, 262, 184,
	186, 185, 170, 311, 333, 179, 189, 785, 772, 791,
	654, 641, 646, 642, 670, 808, 226, 217, 792, 790,
	348, 143, 307, 306, 684, 225, 775, 144, 136, 294,
	145, 232, 162, 795, 357, 173, 236, 330, 482, 211,
	268, 193, 747, 277, 669, 156, 290, 252, 253, 251,
	254, 214, 140, 146, 771, 292, 309, 332, 175, 323,
	138, 139, 141, 148, 300, 149, 150, 814, 246, 204,
	207, 219, 229, 746, 296, 324, 349, 740, 171, 164,
	326, 342, 180, 308, 310, 356, 769, 166, 803, 786,
	733, 699, 705, 629, 0, 165, 765, 661, 673, 653,
	741, 652, 213, 757, 340, 341, 192, 358, 570, 818,
	167, 636, 817, 265, 272, 264, 820, 336, 804, 734,
	723, 721, 630, 802, 732, 722, 237, 206, 221, 285,
	243, 286, 222, 260, 259, 261, 244, 725, 0, 163,
	0, 321, 812, 829, 325, 177, 647, 779, 331, 218,
	291, 178, 212, 205, 284, 263, 172, 224, 319, 235,
	242, 761, 826, 276, 299, 181, 346, 318, 201, 581,
	593, 587, 589, 588, 585, 586, 584, 583, 582, 595,
	568, 569, 572, 573, 574, 1901, 1902, 1903, 577, 782,
	590, 591, 754, 824, 566, 188, 515, 607, 608, 609,
	516, 610, 611, 517, 518, 612, 613, 614, 615, 519,
	616, 617, 618, 596, 597, 598, 599, 600, 601, 602,
	603, 606, 604, 605, 712, 281, 575, 158, 168, 239,
	825, 293, 210, 619, 626, 645, 648, 649, 650, 651,
	655, 660, 0, 666, 672, 674, 675, 683, 688, 689,
	690, 691, 698, 700, 701, 702, 703, 704, 707, 708,
	710, 717, 718, 724, 729, 730, 736, 737, 0, 760,
	763, 580, 774, 776, 780, 781, 788, 793, 794, 819,
	823, 828, 347, 196, 715, 735, 766, 169, 176, 183,
	195, 203, 209, 220, 223, 227, 228, 230, 233, 245,
	247, 248, 249, 250, 266, 267, 270, 271, 274, 275,
	278, 279, 280, 282, 283, 289, 147, 295, 301, 302,
	303, 304, 305, 312, 313, 314, 315, 322, 338, 339,
	352, 353, 798, 695, 155, 0, 0, 161, 0, 0,
	0, 0, 0, 682, 160, 797, 821, 742, 756, 1662,
	2770, 328, 1514, 1666, 1464, 1493, 1683, 1499, 1502, 1585,
	1429, 1552, 273, 1490, 1430, 1412, 1469, 1416, 1481, 1417,
	1466, 199, 1462, 1626, 1555, 1664, 1534, 1578, 1588, 198,
	190, 1544, 1543, 1652, 1479, 1478, 1583, 1640, 1663, 1533,
	0, 1673, 240, 1637, 933, 350, 320, 257, 936, 935,
	1529, 1646, 1550, 1615, 1512, 1587, 1446, 1570, 1668, 1491,
	1579, 1669, 77, 0, 1121, 0, 929, 0, 0, 0,
	0, 0, 0, 0, 0, 137, 0, 1575, 1660, 1484,
	934, 1524, 1584, 1688, 1415, 1571, 0, 1421, 1432, 1682,
	1653, 1475, 1476, 202, 0, 0, 0, 0, 0, 0,
	0, 1527, 1551, 1605, 1509, 345, 1590, 1600, 1618, 1501,
	288, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	1471, 0, 1568, 0, 0, 0, 1437, 1423, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1523, 0, 0, 0, 1445, 1413, 1473, 1607, 1414, 1411,
	258, 1433, 1620, 1651, 1510, 231, 153, 1657, 1508, 1507,
	1594, 1438, 1630, 1494, 238, 1436, 154, 1431, 1439, 1492,
	269, 1604, 1612, 142, 157, 1627, 1467, 1483, 191, 1788,
	298, 1580, 344, 932, 1560, 297, 241, 337, 1595, 1659,
	343, 1495, 327, 351, 355, 208, 1535, 182, 317, 200,
	197, 1474, 1617, 1420, 216, 287, 194, 234, 1513, 1586,
	1468, 187, 1598, 1569, 1632, 316, 334, 159, 255, 335,
	354, 174, 329, 256, 262, 184, 186, 185, 170, 311,
	333, 179, 189, 1628, 1611, 1634, 1461, 1440, 1452, 1441,
	1482, 1661, 226, 217, 1635, 1633, 348, 143, 307, 306,
	1498, 225, 1614, 144, 136, 294, 145, 232, 162, 1639,
	357, 173, 236, 330, 931, 211, 268, 193, 1582, 277,
	1480, 156, 290, 252, 253, 251, 254, 214, 140, 146,
	1610, 292, 309, 332, 175, 323, 138, 139, 141, 148,
	300, 149, 150, 1667, 246, 204, 207, 219, 229, 1581,
	296, 324, 349, 1572, 171, 164, 326, 342, 180, 308,
	310, 356, 1606, 166, 1655, 1629, 1562, 1516, 1522, 1422,
	0, 165, 1602, 1472, 1487, 1460, 1576, 1459, 213, 1593,
	340, 341, 192, 358, 1434, 1675, 167, 1435, 1674, 265,
	272, 264, 1678, 336, 1656, 1563, 1547, 1545, 1427, 1654,
	1561, 1546, 237, 206, 221, 285, 243, 286, 222, 260,
	259, 261, 244, 1549, 0, 163, 0, 321, 1665, 1690,
	325, 177, 1454, 1621, 331, 218, 291, 178, 212, 205,
	284, 263, 172, 224, 319, 235, 242, 1597, 1687, 276,
	299, 181, 346, 318, 201, 1450, 1453, 1448, 1451, 1449,
	1553, 1554, 1670, 1671, 1672, 1609, 1442, 0, 1647, 1648,
	0, 1540, 1658, 1428, 0, 1625, 151, 152, 1589, 1685,
	1500, 188, 1790, 1424, 1425, 1426, 1791, 1530, 1531, 1792,
	1793, 1643, 1642, 1641, 1644, 1794, 1679, 1677, 1680, 1444,
	1465, 1486, 1536, 1537, 1539, 1573, 1574, 1619, 1592, 1601,
	1532, 281, 1558, 158, 168, 239, 2771, 293, 210, 1410,
	1418, 1447, 1455, 1456, 1457, 1458, 1463, 1470, 0, 1477,
	1485, 1488, 1489, 1497, 1503, 1504, 1505, 1506, 1515, 1517,
	1518, 1519, 1520, 1521, 1525, 1526, 1528, 1541, 1542, 1548,
	1556, 1557, 1565, 1567, 0, 1596, 1599, 1608, 1613, 1616,
	1622, 1624, 1631, 1636, 1638, 1676, 1684, 1689, 347, 196,
	1538, 1564, 1603, 169, 176, 183, 195, 203, 209, 220,
	223, 227, 228, 230, 233, 245, 247, 248, 249, 250,
	266, 267, 270, 271, 274, 275, 278, 279, 280, 282,
	283, 289, 147, 295, 301, 302, 303, 304, 305, 312,
	313, 314, 315, 322, 338, 339, 352, 353, 1650, 1511,
	155, 0, 0, 161, 0, 0, 0, 0, 0, 1496,
	160, 1645, 1681, 1577, 1591, 1662, 1623, 328, 1514, 1666,
	1464, 1493, 1683, 1499, 1502, 1585, 1429, 1552, 273, 1490,
	1430, 1412, 1469, 1416, 1481, 1417, 1466, 199, 1462, 1626,
	1555, 1664, 1534, 1578, 1588, 198, 190, 1544, 1543, 1652,
	1479, 1478, 1583, 1640, 1663, 1533, 0, 1673, 240, 1637,
	933, 350, 320, 257, 936, 935, 1529, 1646, 1550, 1615,
	1512, 1587, 1446, 1570, 1668, 1491, 1579, 1669, 0, 0,
	0, 0, 929, 0, 0, 0, 0, 0, 0, 0,
	0, 137, 0, 1575, 1660, 1484, 934, 1524, 1584, 1688,
	1415, 1571, 0, 1421, 1432, 1682, 1653, 1475, 1476, 202,
	0, 0, 0, 0, 0, 0, 0, 1527, 1551, 1605,
	1509, 345, 1590, 1600, 1618, 1501, 288, 215, 0, 0,
	0, 0, 0, 0, 0, 0, 1471, 0, 1568, 0,
	0, 0, 1437, 1423, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1523, 0, 0, 0,
	1445, 1413, 1473, 1607, 1414, 1411, 258, 1433, 1620, 1651,
	1510, 231, 153, 1657, 1508, 1507, 1594, 1438, 1630, 1494,
	238, 1436, 154, 1431, 1439, 1492, 269, 1604, 1612, 142,
	157, 1627, 1467, 1483, 191, 1788, 298, 1580, 344, 932,
	1560, 297, 241, 337, 1595, 1659, 343, 1495, 327, 351,
	355, 208, 1535, 182, 317, 200, 197, 1474, 1617, 1420,
	216, 287, 194, 234, 1513, 1586, 1468, 187, 1598, 1569,
	1632, 316, 334, 159, 255, 335, 354, 174, 329, 256,
	262, 184, 186, 185, 170, 311, 333, 179, 189, 1628,
	1611, 1634, 1461, 1440, 1452, 1441, 1482, 1661, 226, 217,
	1635, 1633, 348, 143, 307, 306, 1498, 225, 1614, 144,
	136, 294, 145, 232, 162, 1639, 357, 173, 236, 330,
	931, 211, 268, 193, 1582, 277, 1480, 156, 290, 252,
	253, 251, 254, 214, 140, 146, 1610, 292, 309, 332,
	175, 323, 138, 139, 141, 148, 300, 149, 150, 1667,
	246, 204, 207, 219, 229, 1581, 296, 324, 349, 1572,
	171, 164, 326, 342, 180, 308, 310, 356, 1606, 166,
	1655, 1629, 1562, 1516, 1522, 1422, 0, 165, 1602, 1472,
	1487, 1460, 1576, 1459, 213, 1593, 340, 341, 192, 358,
	1434, 1675, 167, 1435, 1674, 265, 272, 264, 1678, 336,
	1656, 1563, 1547, 1545, 1427, 1654, 1561, 1546, 237, 206,
	221, 285, 243, 286, 222, 260, 259, 261, 244, 1549,
	0, 163, 0, 321, 1665, 1690, 325, 177, 1454, 1621,
	331, 218, 291, 178, 212, 205, 284, 263, 172, 224,
	319, 235, 242, 1597, 1687, 276, 299, 181, 346, 318,
	201, 1450, 1453, 1448, 1451, 1449, 1553, 1554, 1670, 1671,
	1672, 1609, 1442, 0, 1647, 1648, 0, 1540, 1658, 1428,
	0, 1625, 151, 152, 1589, 1685, 1500, 188, 1790, 1424,
	1425, 1426, 1791, 1530, 1531, 1792, 1793, 1643, 1642, 1641,
	1644, 1794, 1679, 1677, 1680, 1444, 1465, 1486, 1536, 1537,
	1539, 1573, 1574, 1619, 1592, 1601, 1532, 281, 1558, 158,
	168, 239, 1686, 293, 210, 1410, 1418, 1447, 1455, 1456,
	1457, 1458, 1463, 1470, 0, 1477, 1485, 1488, 1489, 1497,
	1503, 1504, 1505, 1506, 1515, 1517, 1518, 1519, 1520, 1521,
	1525, 1526, 1528, 1541, 1542, 1548, 1556, 1557, 1565, 1567,
	0, 1596, 1599, 1608, 1613, 1616, 1622, 1624, 1631, 1636,
	1638, 1676, 1684, 1689, 347, 196, 1538, 1564, 1603, 169,
	176, 183, 195, 203, 209, 220, 223, 227, 228, 230,
	233, 245, 247, 248, 249, 250, 266, 267, 270, 271,
	274, 275, 278, 279, 280, 282, 283, 289, 147, 295,
	301, 302, 303, 304, 305, 312, 313, 314, 315, 322,
	338, 339, 352, 353, 1650, 1511, 155, 0, 0, 161,
	0, 0, 0, 0, 0, 1496, 160, 1645, 1681, 1577,
	1591, 1662, 1623, 328, 1514, 1666, 1464, 1493, 1683, 1499,
	1502, 1585, 1429, 1552, 273, 1490, 1430, 1412, 1469, 1416,
	1481, 1417, 1466, 199, 1462, 1626, 1555, 1664, 1534, 1578,
	1588, 198, 190, 1544, 1543, 1652, 1479, 1478, 1583, 1640,
	1663, 1533, 0, 1673, 240, 1637, 0, 350, 320, 257,
	0, 0, 1529, 1646, 1550, 1615, 1512, 1587, 1446, 1570,
	1668, 1491, 1579, 1669, 0, 0, 0, 0, 478, 0,
	0, 0, 0, 0, 0, 0, 0, 137, 0, 1575,
	1660, 1484, 0, 1524, 1584, 1688, 1415, 1571, 0, 1421,
	1432, 1682, 1653, 1475, 1476, 202, 0, 0, 0, 0,
	0, 0, 0, 1527, 1551, 1605, 1509, 345, 1590, 1600,
	1618, 1501, 288, 215, 0, 0, 0, 0, 0, 0,
	2479, 0, 1471, 0, 1568, 0, 0, 0, 1437, 1423,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1523, 0, 0, 0, 1445, 1413, 1473, 1607,
	1414, 1411, 258, 1433, 1620, 1651, 1510, 231, 153, 1657,
	1508, 1507, 1594, 1438, 1630, 1494, 238, 1436, 154, 1431,
	1439, 1492, 269, 1604, 1612, 142, 157, 1627, 1467, 1483,
	191, 0, 298, 1580, 344, 1832, 1560, 297, 241, 337,
	1595, 1659, 343, 1495, 327, 351, 355, 208, 1535, 182,
	317, 200, 197, 1474, 1617, 1420, 216, 287, 194, 234,
	1513, 1586, 1468, 187, 1598, 1569, 1632, 316, 334, 159,
	255, 335, 354, 174, 329, 256, 262, 184, 186, 185,
	170, 311, 333, 179, 189, 1628, 1611, 1634, 1461, 1440,
	1452, 1441, 1482, 1661, 226, 217, 1635, 1633, 348, 143,
	307, 306, 1498, 225, 1614, 144, 136, 294, 145, 232,
	162, 1639, 357, 173, 236, 330, 1831, 211, 268, 193,
	1582, 277, 1480, 156, 290, 252, 253, 251, 254, 214,
	140, 146, 1610, 292, 309, 332, 175, 323, 138, 139,
	141, 148, 300, 149, 150, 1667, 246, 204, 207, 219,
	229, 1581, 296, 324, 349, 1572, 171, 164, 326, 342,
	180, 308, 310, 356, 1606, 166, 1655, 1629, 1562, 1516,
	1522, 1422, 0, 165, 1602, 1472, 1487, 1460, 1576, 1459,
	213, 1593, 340, 341, 192, 358, 1434, 1675, 167, 1435,
	1674, 265, 272, 264, 1678, 336, 1656, 1563, 1547, 1545,
	1427, 1654, 1561, 1546, 237, 206, 221, 285, 243, 286,
	222, 260, 259, 261, 244, 1549, 0, 163, 0, 321,
	1665, 1690, 325, 177, 1454, 1621, 331, 218, 291, 178,
	212, 205, 284, 263, 172, 224, 319, 235, 242, 1597,
	1687, 276, 299, 181, 346, 318, 201, 1450, 1453, 1448,
	1451, 1449, 1553, 1554, 1670, 1671, 1672, 1609, 1442, 0,
	1647, 1648, 0, 1540, 1658, 1428, 0, 1625, 151, 152,
	1589, 1685, 1500, 188, 1419, 1424, 1425, 1426, 1443, 1530,
	1531, 1559, 1566, 1643, 1642, 1641, 1644, 1649, 1679, 1677,
	1680, 1444, 1465, 1486, 1536, 1537, 1539, 1573, 1574, 1619,
	1592, 1601, 1532, 281, 1558, 158, 168, 239, 1686, 293,
	210, 1410, 1418, 1447, 1455, 1456, 1457, 1458, 1463, 1470,
	0, 1477, 1485, 1488, 1489, 1497, 1503, 1504, 1505, 1506,
	1515, 1517, 1518, 1519, 1520, 1521, 1525, 1526, 1528, 1541,
	1542, 1548, 1556, 1557, 1565, 1567, 0, 1596, 1599, 1608,
	1613, 1616, 1622, 1624, 1631, 1636, 1638, 1676, 1684, 1689,
	347, 196, 1538, 1564, 1603, 169, 176, 183, 195, 203,
	209, 220, 223, 227, 228, 230, 233, 245, 247, 248,
	249, 250, 266, 267, 270, 271, 274, 275, 278, 279,
	280, 282, 283, 289, 147, 295, 301, 302, 303, 304,
	305, 312, 313, 314, 315, 322, 338, 339, 352, 353,
	1650, 1511, 155, 0, 0, 161, 0, 0, 0, 0,
	0, 1496, 160, 1645, 1681, 1577, 1591, 1662, 1623, 328,
	1514, 1666, 1464, 1493, 1683, 1499, 1502, 1585, 1429, 1552,
	273, 1490, 1430, 1412, 1469, 1416, 1481, 1417, 1466, 199,
	1462, 1626, 1555, 1664, 1534, 1578, 1588, 198, 190, 1544,
	1543, 1652, 1479, 1478, 1583, 1640, 1663, 1533, 0, 1673,
	240, 1637, 0, 350, 320, 257, 0, 0, 1529, 1646,
	1550, 1615, 1512, 1587, 1446, 1570, 1668, 1491, 1579, 1669,
	0, 0, 0, 0, 478, 0, 0, 0, 0, 0,
	0, 0, 0, 137, 0, 1575, 1660, 1484, 0, 1524,
	1584, 1688, 1415, 1571, 0, 1421, 1432, 1682, 1653, 1475,
	1476, 202, 0, 0, 0, 0, 0, 0, 0, 1527,
	1551, 1605, 1509, 345, 1590, 1600, 1618, 1501, 288, 215,
	0, 0, 0, 0, 0, 0, 1827, 0, 1471, 0,
	1568, 0, 0, 0, 1437, 1423, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1523, 0,
	0, 0, 1445, 1413, 1473, 1607, 1414, 1411, 258, 1433,
	1620, 1651, 1510, 231, 153, 1657, 1508, 1507, 1594, 1438,
	1630, 1494, 238, 1436, 154, 1431, 1439, 1492, 269, 1604,
	1612, 142, 157, 1627, 1467, 1483, 191, 0, 298, 1580,
	344, 1832, 1560, 297, 241, 337, 1595, 1659, 343, 1495,
	327, 351, 355, 208, 1535, 182, 317, 200, 197, 1474,
	1617, 1420, 216, 287, 194, 234, 1513, 1586, 1468, 187,
	1598, 1569, 1632, 316, 334, 159, 255, 335, 354, 174,
	329, 256, 262, 184, 186, 185, 170, 311, 333, 179,
	189, 1628, 1611, 1634, 1461, 1440, 1452, 1441, 1482, 1661,
	226, 217, 1635, 1633, 348, 143, 307, 306, 1498, 225,
	1614, 144, 136, 294, 145, 232, 162, 1639, 357, 173,
	236, 330, 1831, 211, 268, 193, 1582, 277, 1480, 156,
	290, 252, 253, 251, 254, 214, 140, 146, 1610, 292,
	309, 332, 175, 323, 138, 139, 141, 148, 300, 149,
	150, 1667, 246, 204, 207, 219, 229, 1581, 296, 324,
	349, 1572, 171, 164, 326, 342, 180, 308, 310, 356,
	1606, 166, 1655, 1629, 1562, 1516, 1522, 1422, 0, 165,
	1602, 1472, 1487, 1460, 1576, 1459, 213, 1593, 340, 341,
	192, 358, 1434, 1675, 167, 1435, 1674, 265, 272, 264,
	1678, 336, 1656, 1563, 1547, 1545, 1427, 1654, 1561, 1546,
	237, 206, 221, 285, 243, 286, 222, 260, 259, 261,
	244, 1549, 0, 163, 0, 321, 1665, 1690, 325, 177,
	1454, 1621, 331, 218, 291, 178, 212, 205, 284, 263,
	172, 224, 319, 235, 242, 1597, 1687, 276, 299, 181,
	346, 318, 201, 1450, 1453, 1448, 1451, 1449, 1553, 1554,
	1670, 1671, 1672, 1609, 1442, 0, 1647, 1648, 0, 1540,
	1658, 1428, 0, 1625, 151, 152, 1589, 1685, 1500, 188,
	1419, 1424, 1425, 1426, 1443, 1530, 1531, 1559, 1566, 1643,
	1642, 1641, 1644, 1649, 1679, 1677, 1680, 1444, 1465, 1486,
	1536, 1537, 1539, 1573, 1574, 1619, 1592, 1601, 1532, 281,
	1558, 158, 168, 239, 1686, 293, 210, 1410, 1418, 1447,
	1455, 1456, 1457, 1458, 1463, 1470, 0, 1477, 1485, 1488,
	1489, 1497, 1503, 1504, 1505, 1506, 1515, 1517, 1518, 1519,
	1520, 1521, 1525, 1526, 1528, 1541, 1542, 1548, 1556, 1557,
	1565, 1567, 0, 1596, 1599, 1608, 1613, 1616, 1622, 1624,
	1631, 1636, 1638, 1676, 1684, 1689, 347, 196, 1538, 1564,
	1603, 169, 176, 183, 195, 203, 209, 220, 223, 227,
	228, 230, 233, 245, 247, 248, 249, 250, 266, 267,
	270, 271, 274, 275, 278, 279, 280, 282, 283, 289,
	147, 295, 301, 302, 303, 304, 305, 312, 313, 314,
	315, 322, 338, 339, 352, 353, 1650, 1511, 155, 0,
	0, 161, 0, 0, 0, 0, 0, 1496, 160, 1645,
	1681, 1577, 1591, 1662, 1623, 328, 1514, 1666, 1464, 1493,
	1683, 1499, 1502, 1585, 1429, 1552, 273, 1490, 1430, 1412,
	1469, 1416, 1481, 1417, 1466, 199, 1462, 1626, 1555, 1664,
	1534, 1578, 1588, 198, 190, 1544, 1543, 1652, 1479, 1478,
	1583, 1640, 1663, 1533, 0, 1673, 240, 1637, 0, 350,
	320, 257, 0, 0, 1529, 1646, 1550, 1615, 1512, 1587,
	1446, 1570, 1668, 1491, 1579, 1669, 0, 0, 0, 0,
	478, 0, 0, 0, 0, 0, 0, 0, 0, 137,
	0, 1575, 1660, 1484, 0, 1524, 1584, 1688, 1415, 1571,
	0, 1421, 1432, 1682, 1653, 1475, 1476, 202, 0, 0,
	0, 0, 0, 0, 0, 1527, 1551, 1605, 1509, 345,
	1590, 1600, 1618, 1501, 288, 215, 0, 0, 0, 0,
	0, 0, 0, 0, 1471, 0, 1568, 0, 0, 0,
	1437, 1423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1523, 0, 0, 0, 1445, 1413,
	1473, 1607, 1414, 1411, 258, 1433, 1620, 1651, 1510, 231,
	153, 1657, 1508, 1507, 1594, 1438, 1630, 1494, 238, 1436,
	154, 1431, 1439, 1492, 269, 1604, 1612, 142, 157, 1627,
	1467, 1483, 191, 0, 298, 1580, 344, 1832, 1560, 297,
	241, 337, 1595, 1659, 343, 1495, 327, 351, 355, 208,
	1535, 182, 317, 200, 197, 1474, 1617, 1420, 216, 287,
	194, 234, 1513, 1586, 1468, 187, 1598, 1569, 1632, 316,
	334, 159, 255, 335, 354, 174, 329, 256, 262, 184,
	186, 185, 170, 311, 333, 179, 189, 1628, 1611, 1634,
	1461, 1440, 1452, 1441, 1482, 1661, 226, 217, 1635, 1633,
	348, 143, 307, 306, 1498, 225, 1614, 144, 136, 294,
	145, 232, 162, 1639, 357, 173, 236, 330, 1831, 211,
	268, 193, 1582, 277, 1480, 156, 290, 252, 253, 251,
	254, 214, 140, 146, 1610, 292, 309, 332, 175, 323,
	138, 139, 141, 148, 300, 149, 150, 1667, 246, 204,
	207, 219, 229, 1581, 296, 324, 349, 1572, 171, 164,
	326, 342, 180, 308, 310, 356, 1606, 166, 1655, 1629,
	1562, 1516, 1522, 1422, 0, 165, 1602, 1472, 1487, 1460,
	1576, 1459, 213, 1593, 340, 341, 192, 358, 1434, 1675,
	167, 1435, 1674, 265, 272, 264, 1678, 336, 1656, 1563,
	1547, 1545, 1427, 1654, 1561, 1546, 237, 206, 221, 285,
	243, 286, 222, 260, 259, 261, 244, 1549, 0, 163,
	0, 321, 1665, 1690, 325, 177, 1454, 1621, 331, 218,
	291, 178, 212, 205, 284, 263, 172, 224, 319, 235,
	242, 1597, 1687, 276, 299, 181, 346, 318, 201, 1450,
	1453, 1448, 1451, 1449, 1553, 1554, 1670, 1671, 1672, 1609,
	1442, 0, 1647, 1648, 0, 1540, 1658, 1428, 0, 1625,
	151, 152, 1589, 1685, 1500, 188, 1419, 1424, 1425, 1426,
	1443, 1530, 1531, 1559, 1566, 1643, 1642, 1641, 1644, 1649,
	1679, 1677, 1680, 1444, 1465, 1486, 1536, 1537, 1539, 1573,
	1574, 1619, 1592, 1601, 1532, 281, 1558, 158, 168, 239,
	1686, 293, 210, 1410, 1418, 1447, 1455, 1456, 1457, 1458,
	1463, 1470, 0, 1477, 1485, 1488, 1489, 1497, 1503, 1504,
	1505, 1506, 1515, 1517, 1518, 1519, 1520, 1521, 1525, 1526,
	1528, 1541, 1542, 1548, 1556, 1557, 1565, 1567, 0, 1596,
	1599, 1608, 1613, 1616, 1622, 1624, 1631, 1636, 1638, 1676,
	1684, 1689, 347, 196, 1538, 1564, 1603, 169, 176, 183,
	195, 203, 209, 220, 223, 227, 228, 230, 233, 245,
	247, 248, 249, 250, 266, 267, 270, 271, 274, 275,
	278, 279, 280, 282, 283, 289, 147, 295, 301, 302,
	303, 304, 305, 312, 313, 314, 315, 322, 338, 339,
	352, 353, 1650, 1511, 155, 0, 0, 161, 0, 0,
	0, 0, 0, 1496, 160, 1645, 1681, 1577, 1591, 809,
	0, 328, 875, 813, 656, 679, 822, 685, 687, 750,
	632, 727, 273, 676, 633, 0, 0, 624, 870, 625,
	657, 199, 868, 783, 728, 811, 713, 743, 753, 198,
	190, 720, 719, 800, 668, 667, 748, 796, 810, 0,
	0, 911, 240, 0, 933, 350, 320, 257, 936, 935,
	711, 0, 882, 897, 696, 752, 644, 739, 815, 677,
	744, 816, 0, 0, 0, 0, 478, 0, 0, 0,
	0, 0, 0, 0, 0, 137, 0, 892, 907, 871,
	934, 706, 749, 827, 623, 889, 0, 628, 858, 0,
	801, 664, 665, 202, 0, 0, 0, 0, 0, 0,
	0, 709, 726, 768, 693, 345, 755, 764, 778, 686,
	288, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 888, 0, 0, 0, 638, 854, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	876, 0, 0, 0, 643, 621, 662, 770, 622, 620,
	258, 635, 899, 799, 694, 231, 153, 805, 692, 874,
	758, 639, 787, 680, 238, 637, 154, 634, 640, 678,
	269, 767, 773, 142, 157, 784, 658, 671, 191, 2548,
	298, 745, 344, 2550, 731, 297, 241, 337, 759, 807,
	343, 681, 327, 351, 355, 208, 714, 182, 317, 200,
	197, 663, 777, 627, 216, 287, 194, 234, 697, 751,
	659, 187, 762, 738, 789, 316, 334, 159, 255, 335,
	354, 174, 329, 256, 262, 184, 186, 185, 170, 311,
	333, 179, 189, 785, 772, 791, 654, 641, 646, 642,
	670, 808, 226, 217, 792, 790, 348, 143, 307, 306,
	684, 225, 775, 144, 136, 294, 145, 232, 162, 795,
	357, 173, 236, 330, 2549, 211, 268, 193, 747, 277,
	669, 156, 290, 252, 253, 251, 254, 214, 140, 146,
	771, 292, 309, 332, 175, 323, 138, 139, 141, 148,
	300, 149, 150, 814, 246, 204, 207, 219, 229, 746,
	296, 324, 349, 740, 171, 164, 326, 342, 180, 308,
	310, 356, 769, 166, 803, 786, 733, 699, 705, 629,
	0, 165, 765, 661, 673, 653, 741, 652, 213, 757,
	340, 341, 192, 358, 859, 818, 167, 636, 817, 265,
	272, 264, 820, 336, 804, 734, 723, 721, 630, 802,
	732, 722, 237, 206, 221, 285, 243, 286, 222, 260,
	259, 261, 244, 725, 0, 163, 0, 321, 812, 829,
	325, 177, 647, 779, 331, 218, 291, 178, 212, 205,
	284, 263, 172, 224, 319, 235, 242, 761, 826, 276,
	299, 181, 346, 318, 201, 865, 867, 863, 866, 864,
	883, 884, 908, 909, 910, 896, 860, 0, 904, 905,
	0, 716, 806, 631, 0, 782, 151, 152, 754, 824,
	873, 188, 2551, 855, 856, 857, 2552, 877, 878, 2553,
	2554, 902, 901, 900, 903, 2555, 913, 912, 914, 862,
	869, 872, 879, 880, 881, 890, 891, 898, 893, 894,
	712, 281, 885, 158, 168, 239, 825, 293, 210, 619,
	626, 645, 648, 649, 650, 651, 655, 660, 0, 666,
	672, 674, 675, 683, 688, 689, 690, 691, 698, 700,
	701, 702, 703, 704, 707, 708, 710, 717, 718, 724,
	729, 730, 736, 737, 0, 760, 763, 895, 774, 776,
	780, 781, 788, 793, 794, 819, 823, 828, 347, 196,
	715, 735, 766, 169, 176, 183, 195, 203, 209, 220,
	223, 227, 228, 230, 233, 245, 247, 248, 249, 250,
	266, 267, 270, 271, 274, 275, 278, 279, 280, 282,
	283, 289, 147, 295, 301, 302, 303, 304, 305, 312,
	313, 314, 315, 322, 338, 339, 352, 353, 798, 695,
	155, 0, 0, 161, 0, 0, 0, 0, 0, 682,
	160, 797, 821, 742, 756, 809, 0, 328, 875, 813,
	656, 679, 822, 685, 687, 750, 632, 727, 273, 676,
	633, 0, 0, 624, 870, 625, 657, 199, 868, 783,
	728, 811, 713, 743, 753, 198, 190, 720, 719, 800,
	668, 667, 748, 796, 810, 0, 0, 911, 240, 0,
	0, 350, 320, 257, 0, 0, 711, 0, 882, 897,
	696, 752, 644, 739, 815, 677, 744, 816, 0, 0,
	0, 0, 478, 0, 0, 0, 0, 0, 0, 0,
	0, 137, 0, 892, 907, 871, 0, 706, 749, 827,
	623, 889, 0, 628, 858, 0, 801, 664, 665, 202,
	0, 0, 0, 0, 0, 0, 0, 709, 726, 768,
	693, 345, 755, 764, 778, 686, 288, 215, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 888, 0,
	0, 0, 638, 854, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 876, 0, 0, 0,
	643, 621, 662, 770, 622, 620, 258, 635, 899, 799,
	694, 231, 153, 805, 692, 874, 758, 639, 787, 680,
	238, 637, 154, 634, 640, 678, 269, 767, 773, 142,
	157, 784, 658, 671, 191, 0, 298, 745, 344, 852,
	731, 297, 241, 337, 759, 807, 343, 681, 327, 351,
	355, 208, 714, 182, 317, 200, 197, 663, 777, 627,
	216, 287, 194, 234, 697, 751, 659, 187, 762, 738,
	789, 316, 334, 159, 255, 335, 354, 174, 329, 256,
	262, 184, 186, 185, 170, 311, 333, 179, 189, 785,
	772, 791, 654, 641, 646, 642, 670, 808, 226, 217,
	792, 790, 348, 143, 307, 306, 684, 225, 775, 144,
	136, 294, 145, 232, 162, 795, 357, 173, 236, 330,
	851, 211, 268, 193, 747, 277, 669, 156, 290, 252,
	253, 251, 254, 214, 140, 146, 771, 292, 309, 332,
	175, 323, 138, 139, 141, 148, 300, 149, 150, 814,
	246, 204, 207, 219, 229, 746, 296, 324, 349, 740,
	171, 164, 326, 342, 180, 308, 310, 356, 769, 166,
	803, 786, 733, 699, 705, 629, 0, 165, 765, 661,
	673, 653, 741, 652, 213, 757, 340, 341, 192, 358,
	859, 818, 167, 636, 817, 265, 272, 264, 820, 336,
	804, 734, 723, 721, 630, 802, 732, 722, 237, 206,
	221, 285, 243, 286, 222, 260, 259, 261, 244, 725,
	0, 163, 0, 321, 812, 829, 325, 177, 647, 779,
	331, 218, 291, 178, 212, 205, 284, 263, 172, 224,
	319, 235, 242, 761, 826, 276, 299, 181, 346, 318,
	201, 865, 867, 863, 866, 864, 883, 884, 908, 909,
	910, 896, 860, 0, 904, 905, 0, 716, 806, 631,
	0, 782, 151, 152, 754, 824, 873, 188, 853, 855,
	856, 857, 861, 877, 878, 886, 887, 902, 901, 900,
	903, 906, 913, 912, 914, 862, 869, 872, 879, 880,
	881, 890, 891, 898, 893, 894, 712, 281, 885, 158,
	168, 239, 825, 293, 210, 619, 626, 645, 648, 649,
	650, 651, 655, 660, 0, 666, 672, 674, 675, 683,
	688, 689, 690, 691, 698, 700, 701, 702, 703, 704,
	707, 708, 710, 717, 718, 724, 729, 730, 736, 737,
	0, 760, 763, 895, 774, 776, 780, 781, 788, 793,
	794, 819, 823, 828, 347, 196, 715, 735, 766, 169,
	176, 183, 195, 203, 209, 220, 223, 227, 228, 230,
	233, 245, 247, 248, 249, 250, 266, 267, 270, 271,
	274, 275, 278, 279, 280, 282, 283, 289, 147, 295,
	301, 302, 303, 304, 305, 312, 313, 314, 315, 322,
	338, 339, 352, 353, 798, 695, 155, 0, 0, 161,
	0, 0, 0, 0, 0, 682, 160, 797, 821, 742,
	756, 809, 0, 328, 875, 813, 656, 679, 822, 685,
	687, 750, 632, 727, 273, 676, 633, 0, 0, 624,
	870, 625, 657, 199, 868, 783, 728, 811, 713, 743,
	753, 198, 190, 720, 719, 800, 668, 667, 748, 796,
	810, 0, 0, 911, 240, 0, 0, 350, 320, 257,
	0, 0, 711, 0, 882, 897, 696, 752, 644, 739,
	815, 677, 744, 816, 0, 0, 0, 0, 478, 0,
	0, 0, 0, 0, 0, 0, 0, 137, 0, 892,
	907, 871, 0, 706, 749, 827, 623, 889, 0, 628,
	858, 0, 801, 664, 665, 202, 0, 0, 0, 0,
	0, 0, 0, 709, 726, 768, 693, 345, 755, 764,
	778, 686, 288, 215, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 888, 0, 0, 0, 638, 854,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 876, 0, 0, 0, 643, 621, 662, 770,
	622, 620, 258, 635, 899, 799, 694, 231, 153, 805,
	692, 874, 758, 639, 787, 680, 238, 637, 154, 634,
	640, 678, 269, 767, 773, 142, 157, 784, 658, 671,
	191, 0, 298, 745, 344, 852, 731, 297, 241, 337,
	759, 807, 343, 681, 327, 351, 355, 208, 714, 182,
	317, 200, 197, 663, 777, 627, 216, 287, 194, 234,
	697, 751, 659, 187, 762, 738, 789, 316, 334, 159,
	255, 335, 354, 174, 329, 256, 262, 184, 186, 185,
	170, 311, 333, 179, 189, 785, 772, 791, 654, 641,
	646, 642, 670, 808, 226, 217, 792, 790, 348, 143,
	307, 306, 684, 225, 775, 144, 136, 294, 145, 232,
	162, 795, 357, 173, 236, 330, 851, 211, 268, 193,
	747, 277, 669, 156, 290, 252, 253, 251, 254, 214,
	140, 146, 771, 292, 309, 332, 175, 323, 138, 139,
	141, 148, 300, 149, 150, 814, 246, 204, 207, 219,
	229, 746, 296, 324, 349, 740, 171, 164, 326, 342,
	180, 308, 310, 356, 769, 166, 803, 786, 733, 699,
	705, 629, 0, 165, 765, 661, 673, 653, 741, 652,
	213, 757, 340, 341, 192, 358, 859, 818, 167, 847,
	817, 265, 272, 264, 820, 336, 804, 734, 723, 721,
	630, 802, 732, 722, 237, 206, 221, 285, 243, 286,
	222, 260, 259, 261, 843, 725, 0, 163, 0, 321,
	812, 829, 325, 177, 647, 779, 331, 218, 291, 178,
	212, 205, 284, 848, 846, 837, 838, 235, 242, 761,
	826, 276, 299, 181, 346, 318, 201, 865, 867, 863,
	866, 864, 883, 884, 908, 909, 910, 896, 860, 0,
	904, 905, 0, 716, 806, 631, 0, 782, 151, 152,
	754, 824, 873, 188, 853, 855, 856, 857, 861, 877,
	878, 886, 887, 902, 901, 900, 903, 906, 913, 912,
	914, 862, 869, 872, 879, 880, 881, 890, 891, 898,
	893, 894, 712, 281, 885, 158, 168, 239, 825, 293,
	210, 619, 626, 645, 648, 649, 650, 651, 655, 660,
	0, 666, 672, 674, 675, 683, 688, 689, 690, 691,
	698, 700, 701, 702, 703, 704, 707, 708, 710, 717,
	718, 724, 729, 730, 736, 737, 0, 760, 763, 895,
	774, 776, 780, 781, 788, 793, 794, 819, 823, 828,
	347, 196, 715, 735, 766, 169, 176, 183, 195, 203,
	209, 220, 223, 227, 228, 230, 233, 245, 247, 248,
	249, 250, 266, 267, 270, 271, 274, 275, 278, 279,
	280, 844, 845, 289, 147, 295, 301, 302, 303, 304,
	305, 312, 313, 314, 315, 322, 338, 339, 352, 353,
	798, 695, 155, 0, 0, 161, 0, 0, 0, 0,
	0, 682, 160, 797, 821, 742, 756, 809, 0, 328,
	875, 813, 656, 679, 822, 685, 687, 750, 632, 727,
	273, 676, 633, 0, 0, 624, 870, 625, 657, 199,
	868, 783, 728, 811, 713, 743, 753, 198, 190, 720,
	719, 800, 668, 667, 748, 796, 810, 0, 0, 911,
	240, 0, 0, 350, 320, 257, 0, 0, 711, 0,
	882, 897, 696, 752, 644, 739, 815, 677, 744, 816,
	0, 0, 0, 0, 478, 0, 0, 0, 0, 0,
	0, 0, 0, 137, 0, 892, 907, 871, 0, 706,
	749, 827, 623, 889, 0, 628, 858, 0, 801, 664,
	665, 202, 0, 0, 0, 0, 0, 0, 0, 709,
	726, 768, 693, 345, 755, 764, 778, 686, 288, 215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	888, 0, 0, 0, 638, 854, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 876, 0,
	0, 0, 643, 621, 662, 770, 622, 620, 258, 635,
	899, 799, 694, 231, 153, 805, 692, 874, 758, 639,
	787, 680, 238, 637, 154, 634, 640, 678, 269, 767,
	773, 142, 157, 784, 658, 671, 191, 0, 298, 745,
	344, 852, 731, 297, 241, 337, 759, 807, 343, 681,
	327, 351, 355, 208, 714, 182, 317, 200, 197, 663,
	777, 627, 216, 287, 194, 234, 697, 751, 659, 187,
	762, 738, 789, 316, 334, 159, 255, 335, 354, 174,
	329, 256, 262, 184, 186, 185, 170, 311, 333, 179,
	189, 785, 772, 791, 654, 641, 646, 642, 670, 808,
	226, 217, 792, 790, 348, 143, 307, 306, 684, 225,
	775, 144, 136, 294, 145, 232, 162, 795, 357, 173,
	236, 330, 851, 211, 268, 193, 747, 277, 669, 156,
	290, 252, 253, 251, 254, 214, 140, 146, 771, 292,
	309, 332, 175, 323, 138, 139, 141, 148, 300, 149,
	150, 814, 246, 204, 207, 219, 229, 746, 296, 324,
	349, 740, 171, 164, 326, 1285, 180, 308, 310, 356,
	769, 166, 803, 786, 733, 699, 705, 629, 0, 165,
	765, 661, 673, 653, 741, 652, 213, 757, 340, 341,
	192, 358, 859, 818, 167, 636, 817, 265, 272, 264,
	820, 336, 804, 734, 723, 721, 630, 802, 732, 722,
	237, 206, 221, 285, 243, 286, 222, 260, 259, 261,
	244, 725, 0, 163, 0, 321, 812, 829, 325, 177,
	647, 779, 331, 218, 291, 178, 212, 205, 284, 263,
	172, 224, 319, 235, 242, 761, 826, 276, 299, 181,
	346, 318, 201, 865, 867, 863, 866, 864, 883, 884,
	908, 909, 910, 896, 860, 0, 904, 905, 0, 716,
	806, 631, 0, 782, 151, 152, 754, 824, 873, 188,
	853, 855, 856, 857, 861, 877, 878, 886, 887, 902,
	901, 900, 903, 906, 913, 912, 914, 862, 869, 872,
	879, 880, 881, 890, 891, 898, 893, 894, 712, 281,
	885, 158, 168, 239, 825, 293, 210, 619, 626, 645,
	648, 649, 650, 651, 655, 660, 0, 666, 672, 674,
	675, 683, 688, 689, 690, 691, 698, 700, 701, 702,
	703, 704, 707, 708, 710, 717, 718, 724, 729, 730,
	736, 737, 0, 760, 763, 895, 774, 776, 780, 781,
	788, 793, 794, 819, 823, 828, 347, 196, 715, 735,
	766, 169, 176, 183, 195, 203, 209, 220, 223, 227,
	228, 230, 233, 245, 247, 248, 249, 250, 266, 267,
	270, 271, 274, 275, 278, 279, 280, 282, 283, 289,
	147, 295, 301, 302, 303, 304, 305, 312, 313, 314,
	315, 322, 338, 339, 352, 353, 798, 695, 155, 0,
	0, 161, 0, 0, 0, 0, 0, 682, 160, 797,
	821, 742, 756, 809, 0, 328, 875, 813, 656, 679,
	822, 685, 687, 750, 632, 727, 273, 676, 633, 0,
	0, 624, 870, 625, 657, 199, 868, 783, 728, 811,
	713, 743, 753, 198, 190, 720, 719, 800, 668, 667,
	748, 796, 810, 0, 0, 911, 240, 0, 0, 350,
	320, 257, 0, 0, 711, 0, 882, 897, 696, 752,
	644, 739, 815, 677, 744, 816, 0, 0, 0, 0,
	478, 0, 0, 0, 0, 0, 0, 0, 0, 137,
	0, 892, 907, 871, 0, 706, 749, 827, 623, 889,
	0, 628, 858, 0, 801, 664, 665, 202, 0, 0,
	0, 0, 0, 0, 0, 709, 726, 768, 693, 345,
	755, 764, 778, 686, 288, 215, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 888, 0, 0, 0,
	638, 854, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 876, 0, 0, 0, 643, 621,
	662, 770, 622, 620, 258, 635, 899, 799, 694, 231,
	153, 805, 692, 874, 758, 639, 787, 680, 238, 637,
	154, 634, 640, 678, 269, 767, 773, 142, 157, 784,
	658, 671, 191, 0, 298, 745, 344, 852, 731, 297,
	241, 337, 759, 807, 343, 681, 327, 351, 355, 208,
	714, 182, 317, 200, 197, 663, 777, 627, 216, 287,
	194, 234, 697, 751, 659, 187, 762, 738, 789, 316,
	334, 159, 255, 335, 354, 174, 329, 256, 262, 184,
	186, 185, 170, 311, 333, 179, 189, 785, 772, 791,
	654, 641, 646, 642, 670, 808, 226, 217, 792, 790,
	348, 143, 307, 306, 684, 225, 775, 144, 136, 294,
	145, 232, 162, 795, 357, 173, 236, 330, 851, 211,
	268, 193, 747, 277, 669, 156, 290, 252, 253, 251,
	254, 214, 140, 146, 771, 292, 309, 332, 175, 323,
	138, 139, 141, 148, 300, 149, 150, 814, 246, 204,
	207, 219, 229, 746, 296, 324, 349, 740, 171, 164,
	326, 834, 180, 308, 310, 356, 769, 166, 803, 786,
	733, 699, 705, 629, 0, 165, 765, 661, 673, 653,
	741, 652, 213, 757, 340, 341, 192, 358, 859, 818,
	167, 847, 817, 265, 272, 264, 820, 336, 804, 734,
	723, 721, 630, 802, 732, 722, 237, 206, 221, 285,
	243, 286, 222, 260, 259, 261, 843, 725, 0, 163,
	0, 321, 812, 829, 325, 177, 647, 779, 331, 218,
	291, 178, 212, 205, 284, 848, 846, 837, 838, 235,
	242, 761, 826, 276, 299, 181, 346, 318, 201, 865,
	867, 863, 866, 864, 883, 884, 908, 909, 910, 896,
	860, 0, 904, 905, 0, 716, 806, 631, 0, 782,
	151, 152, 754, 824, 873, 188, 853, 855, 856, 857,
	861, 877, 878, 886, 887, 902, 901, 900, 903, 906,
	913, 912, 914, 862, 869, 872, 879, 880, 881, 890,
	891, 898, 893, 894, 712, 281, 885, 158, 168, 239,
	825, 293, 210, 619, 626, 645, 648, 649, 650, 651,
	655, 660, 0, 666, 672, 674, 675, 683, 688, 689,
	690, 691, 698, 700, 701, 702, 703, 704, 707, 708,
	710, 717, 718, 724, 729, 730, 736, 737, 0, 760,
	763, 895, 774, 776, 780, 781, 788, 793, 794, 819,
	823, 828, 347, 196, 715, 735, 766, 169, 176, 183,
	195, 203, 209, 220, 223, 227, 228, 230, 233, 245,
	247, 248, 249, 250, 266, 267, 270, 271, 274, 275,
	278, 279, 280, 844, 845, 289, 147, 295, 301, 302,
	303, 304, 305, 312, 313, 314, 315, 322, 338, 339,
	352, 353, 798, 695, 155, 0, 0, 161, 0, 0,
	0, 0, 0, 682, 160, 797, 821, 742, 756, 1662,
	1623, 328, 1514, 1666, 1464, 1493, 1683, 1499, 1502, 1585,
	1429, 1552, 273, 1490, 1430, 1412, 1469, 1416, 1481, 1417,
	1466, 199, 1462, 1626, 1555, 1664, 1534, 1578, 1588, 198,
	190, 1544, 1543, 1652, 1479, 1478, 1583, 1640, 1663, 1533,
	0, 1673, 240, 1637, 0, 350, 320, 257, 0, 0,
	1529, 1646, 1550, 1615, 1512, 1587, 1446, 1570, 1668, 1491,
	1579, 1669, 0, 0, 0, 0, 929, 0, 1988, 1989,
	0, 0, 0, 0, 0, 1990, 0, 1575, 1660, 1484,
	0, 1524, 1584, 1688, 1415, 1571, 0, 1421, 1432, 1682,
	1653, 1475, 1476, 202, 2309, 0, 0, 0, 0, 0,
	0, 1527, 1551, 1605, 1509, 345, 1590, 1600, 1618, 1501,
	288, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	1471, 0, 1568, 0, 0, 0, 1437, 1423, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1523, 0, 0, 0, 1445, 1413, 1473, 1607, 1414, 1411,
	258, 1433, 1620, 1651, 1510, 231, 0, 1657, 1508, 1507,
	1594, 1438, 1630, 1494, 238, 1436, 154, 1431, 1439, 1492,
	269, 1604, 1612, 0, 157, 1627, 1467, 1483, 191, 0,
	298, 1580, 344, 0, 1560, 297, 241, 337, 1595, 1659,
	343, 1495, 327, 351, 355, 208, 1535, 182, 317, 200,
	197, 1474, 1617, 1420, 216, 287, 194, 234, 1513, 1586,
	1468, 187, 1598, 1569, 1632, 316, 334, 159, 255, 335,
	354, 174, 329, 256, 262, 184, 186, 185, 170, 311,
	333, 179, 189, 1628, 1611, 1634, 1461, 1440, 1452, 1441,
	1482, 1661, 226, 217, 1635, 1633, 348, 0, 307, 306,
	1498, 225, 1614, 0, 0, 294, 1992, 232, 162, 1639,
	357, 173, 236, 330, 0, 211, 268, 193, 1582, 277,
	1480, 156, 290, 252, 253, 251, 254, 214, 0, 0,
	1610, 292, 309, 332, 175, 323, 1991, 0, 0, 0,
	300, 0, 0, 1667, 246, 204, 207, 219, 229, 1581,
	296, 324, 349, 1572, 171, 164, 326, 342, 180, 308,
	310, 356, 1606, 166, 1655, 1629, 1562, 1516, 1522, 1422,
	0, 165, 1602, 1472, 1487, 1460, 1576, 1459, 213, 1593,
	340, 341, 192, 358, 1434, 1675, 167, 1435, 1674, 265,
	272, 264, 1678, 336, 1656, 1563, 1547, 1545, 1427, 1654,
	1561, 1546, 237, 206, 221, 285, 243, 286, 222, 260,
	259, 261, 244, 1549, 0, 163, 0, 321, 1665, 1690,
	325, 177, 1454, 1621, 331, 218, 291, 178, 212, 205,
	284, 263, 172, 224, 319, 235, 242, 1597, 1687, 276,
	299, 181, 346, 318, 201, 1450, 1453, 1448, 1451, 1449,
	1553, 1554, 1670, 1671, 1672, 1609, 1442, 0, 1647, 1648,
	0, 1540, 1658, 1428, 0, 1625, 0, 0, 1589, 1685,
	1500, 188, 1419, 1424, 1425, 1426, 1443, 1530, 1531, 1559,
	1566, 1643, 1642, 1641, 1644, 1649, 1679, 1677, 1680, 1444,
	1465, 1486, 1536, 1537, 1539, 1573, 1574, 1619, 1592, 1601,
	1532, 281, 1558, 158, 168, 239, 1686, 293, 210, 1410,
	1418, 1447, 1455, 1456, 1457, 1458, 1463, 1470, 0, 1477,
	1485, 1488, 1489, 1497, 1503, 1504, 1505, 1506, 1515, 1517,
	1518, 1519, 1520, 1521, 1525, 1526, 1528, 1541, 1542, 1548,
	1556, 1557, 1565, 1567, 0, 1596, 1599, 1608, 1613, 1616,
	1622, 1624, 1631, 1636, 1638, 1676, 1684, 1689, 347, 196,
	1538, 1564, 1603, 169, 176, 183, 195, 203, 209, 220,
	223, 227, 228, 230, 233, 245, 247, 248, 249, 250,
	266, 267, 270, 271, 274, 275, 278, 279, 280, 282,
	283, 289, 0, 295, 301, 302, 303, 304, 305, 312,
	313, 314, 315, 322, 338, 339, 352, 353, 1650, 1511,
	155, 0, 0, 161, 0, 0, 0, 0, 0, 1496,
	160, 1645, 1681, 1577, 1591, 1662, 1623, 328, 1514, 1666,
	1464, 1493, 1683, 1499, 1502, 1585, 1429, 1552, 273, 1490,
	1430, 1412, 1469, 1416, 1481, 1417, 1466, 199, 1462, 1626,
	1555, 1664, 1534, 1578, 1588, 198, 190, 1544, 1543, 1652,
	1479, 1478, 1583, 1640, 1663, 1533, 0, 1673, 240, 1637,
	0, 350, 320, 257, 0, 0, 1529, 1646, 1550, 1615,
	1512, 1587, 1446, 1570, 1668, 1491, 1579, 1669, 0, 0,
	0, 0, 929, 0, 1988, 1989, 0, 0, 0, 0,
	0, 1990, 0, 1575, 1660, 1484, 0, 1524, 1584, 1688,
	1415, 1571, 0, 1421, 1432, 1682, 1653, 1475, 1476, 202,
	0, 0, 0, 0, 0, 0, 0, 1527, 1551, 1605,
	1509, 345, 1590, 1600, 1618, 1501, 288, 215, 0, 0,
	0, 0, 0, 0, 0, 0, 1471, 0, 1568, 0,
	0, 0, 1437, 1423, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1523, 0, 0, 0,
	1445, 1413, 1473, 1607, 1414, 1411, 258, 1433, 1620, 1651,
	1510, 231, 0, 1657, 1508, 1507, 1594, 1438, 1630, 1494,
	238, 1436, 154, 1431, 1439, 1492, 269, 1604, 1612, 0,
	157, 1627, 1467, 1483, 191, 0, 298, 1580, 344, 0,
	1560, 297, 241, 337, 1595, 1659, 343, 1495, 327, 351,
	355, 208, 1535, 182, 317, 200, 197, 1474, 1617, 1420,
	216, 287, 194, 234, 1513, 1586, 1468, 187, 1598, 1569,
	1632, 316, 334, 159, 255, 335, 354, 174, 329, 256,
	262, 184, 186, 185, 170, 311, 333, 179, 189, 1628,
	1611, 1634, 1461, 1440, 1452, 1441, 1482, 1661, 226, 217,
	1635, 1633, 348, 0, 307, 306, 1498, 225, 1614, 0,
	0, 294, 1992, 232, 162, 1639, 357, 173, 236, 330,
	0, 211, 268, 193, 1582, 277, 1480, 156, 290, 252,
	253, 251, 254, 214, 0, 0, 1610, 292, 309, 332,
	175, 323, 1991, 0, 0, 0, 300, 0, 0, 1667,
	246, 204, 207, 219, 229, 1581, 296, 324, 349, 1572,
	171, 164, 326, 342, 180, 308, 310, 356, 1606, 166,
	1655, 1629, 1562, 1516, 1522, 1422, 0, 165, 1602, 1472,
	1487, 1460, 1576, 1459, 213, 1593, 340, 341, 192, 358,
	1434, 1675, 167, 1435, 1674, 265, 272, 264, 1678, 336,
	1656, 1563, 1547, 1545, 1427, 1654, 1561, 1546, 237, 206,
	221, 285, 243, 286, 222, 260, 259, 261, 244, 1549,
	0, 163, 0, 321, 1665, 1690, 325, 177, 1454, 1621,
	331, 218, 291, 178, 212, 205, 284, 263, 172, 224,
	319, 235, 242, 1597, 1687, 276, 299, 181, 346, 318,
	201, 1450, 1453, 1448, 1451, 1449, 1553, 1554, 1670, 1671,
	1672, 1609, 1442, 0, 1647, 1648, 0, 1540, 1658, 1428,
	0, 1625, 0, 0, 1589, 1685, 1500, 188, 1419, 1424,
	1425, 1426, 1443, 1530, 1531, 1559, 1566, 1643, 1642, 1641,
	1644, 1649, 1679, 1677, 1680, 1444, 1465, 1486, 1536, 1537,
	1539, 1573, 1574, 1619, 1592, 1601, 1532, 281, 1558, 158,
	168, 239, 1686, 293, 210, 1410, 1418, 1447, 1455, 1456,
	1457, 1458, 1463, 1470, 0, 1477, 1485, 1488, 1489, 1497,
	1503, 1504, 1505, 1506, 1515, 1517, 1518, 1519, 1520, 1521,
	1525, 1526, 1528, 1541, 1542, 1548, 1556, 1557, 1565, 1567,
	0, 1596, 1599, 1608, 1613, 1616, 1622, 1624, 1631, 1636,
	1638, 1676, 1684, 1689, 347, 196, 1538, 1564, 1603, 169,
	176, 183, 195, 203, 209, 220, 223, 227, 228, 230,
	233, 245, 247, 248, 249, 250, 266, 267, 270, 271,
	274, 275, 278, 279, 280, 282, 283, 289, 0, 295,
	301, 302, 303, 304, 305, 312, 313, 314, 315, 322,
	338, 339, 352, 353, 1650, 1511, 155, 0, 0, 161,
	0, 0, 0, 0, 0, 1496, 160, 1645, 1681, 1577,
	1591, 1662, 1623, 328, 1514, 1666, 1464, 1493, 1683, 1499,
	1502, 1585, 1429, 1552, 273, 1490, 1430, 1412, 1469, 1416,
	1481, 1417, 1466, 199, 1462, 1626, 1555, 1664, 1534, 1578,
	1588, 198, 190, 1544, 1543, 1652, 1479, 1478, 1583, 1640,
	1663, 1533, 0, 1673, 240, 1637, 0, 350, 320, 257,
	0, 0, 1529, 1646, 1550, 1615, 1512, 1587, 1446, 1570,
	1668, 1491, 1579, 1669, 0, 0, 0, 0, 929, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1575,
	1660, 1484, 0, 1524, 1584, 1688, 1415, 1571, 0, 1421,
	1432, 1682, 1653, 1475, 1476, 202, 0, 0, 0, 0,
	0, 0, 0, 1527, 1551, 1605, 1509, 345, 1590, 1600,
	1618, 1501, 288, 215, 0, 0, 0, 0, 0, 0,
	2915, 0, 1471, 0, 1568, 0, 0, 0, 1437, 1423,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1523, 0, 0, 0, 1445, 1413, 1473, 1607,
	1414, 1411, 258, 1433, 1620, 1651, 1510, 231, 0, 1657,
	1508, 1507, 1594, 1438, 1630, 1494, 238, 1436, 154, 1431,
	1439, 1492, 269, 1604, 1612, 0, 157, 1627, 1467, 1483,
	191, 0, 298, 1580, 344, 0, 1560, 297, 241, 337,
	1595, 1659, 343, 1495, 327, 351, 355, 208, 1535, 182,
	317, 200, 197, 1474, 1617, 1420, 216, 287, 194, 234,
	1513, 1586, 1468, 187, 1598, 1569, 1632, 316, 334, 159,
	255, 335, 354, 174, 329, 256, 262, 184, 186, 185,
	170, 311, 333, 179, 189, 1628, 1611, 1634, 1461, 1440,
	1452, 1441, 1482, 1661, 226, 217, 1635, 1633, 348, 0,
	307, 306, 1498, 225, 1614, 0, 0, 294, 0, 232,
	162, 1639, 357, 173, 236, 330, 0, 211, 268, 193,
	1582, 277, 1480, 156, 290, 252, 253, 251, 254, 214,
	0, 0, 1610, 292, 309, 332, 175, 323, 0, 0,
	0, 0, 300, 0, 0, 1667, 246, 204, 207, 219,
	229, 1581, 296, 324, 349, 1572, 171, 164, 326, 342,
	180, 308, 310, 356, 1606, 166, 1655, 1629, 1562, 1516,
	1522, 1422, 0, 165, 1602, 1472, 1487, 1460, 1576, 1459,
	213, 1593, 340, 341, 192, 358, 1434, 1675, 167, 1435,
	1674, 265, 272, 264, 1678, 336, 1656, 1563, 1547, 1545,
	1427, 1654, 1561, 1546, 237, 206, 221, 285, 243, 286,
	222, 260, 259, 261, 244, 1549, 0, 163, 0, 321,
	1665, 1690, 325, 177, 1454, 1621, 331, 218, 291, 178,
	212, 205, 284, 263, 172, 224, 319, 235, 242, 1597,
	1687, 276, 299, 181, 346, 318, 201, 1450, 1453, 1448,
	1451, 1449, 1553, 1554, 1670, 1671, 1672, 1609, 1442, 0,
	1647, 1648, 0, 1540, 1658, 1428, 0, 1625, 0, 0,
	1589, 1685, 1500, 188, 1419, 1424, 1425, 1426, 1443, 1530,
	1531, 1559, 1566, 1643, 1642, 1641, 1644, 1649, 1679, 1677,
	1680, 1444, 1465, 1486, 1536, 1537, 1539, 1573, 1574, 1619,
	1592, 1601, 1532, 281, 1558, 158, 168, 239, 1686, 293,
	210, 1410, 1418, 1447, 1455, 1456, 1457, 1458, 1463, 1470,
	0, 1477, 1485, 1488, 1489, 1497, 1503, 1504, 1505, 1506,
	1515, 1517, 1518, 1519, 1520, 1521, 1525, 1526, 1528, 1541,
	1542, 1548, 1556, 1557, 1565, 1567, 0, 1596, 1599, 1608,
	1613, 1616, 1622, 1624, 1631, 1636, 1638, 1676, 1684, 1689,
	347, 196, 1538, 1564, 1603, 169, 176, 183, 195, 203,
	209, 220, 223, 227, 228, 230, 233, 245, 247, 248,
	249, 250, 266, 267, 270, 271, 274, 275, 278, 279,
	280, 282, 283, 289, 0, 295, 301, 302, 303, 304,
	305, 312, 313, 314, 315, 322, 338, 339, 352, 353,
	1650, 1511, 155, 0, 0, 161, 0, 0, 0, 0,
	0, 1496, 160, 1645, 1681, 1577, 1591, 1662, 1623, 328,
	1514, 1666, 1464, 1493, 1683, 1499, 1502, 1585, 1429, 1552,
	273, 1490, 1430, 1412, 1469, 1416, 1481, 1417, 1466, 199,
	1462, 1626, 1555, 1664, 1534, 1578, 1588, 198, 190, 1544,
	1543, 1652, 1479, 1478, 1583, 1640, 1663, 1533, 0, 1673,
	240, 1637, 0, 350, 320, 257, 0, 0, 1529, 1646,
	1550, 1615, 1512, 1587, 1446, 1570, 1668, 1491, 1579, 1669,
	0, 0, 0, 0, 929, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1575, 1660, 1484, 0, 1524,
	1584, 1688, 1415, 1571, 0, 1421, 1432, 1682, 1653, 1475,
	1476, 202, 0, 0, 0, 0, 0, 0, 0, 1527,
	1551, 1605, 1509, 345, 1590, 1600, 1618, 1501, 288, 215,
	0, 0, 0, 0, 0, 0, 2472, 0, 1471, 0,
	1568, 0, 0, 0, 1437, 1423, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1523, 0,
	0, 0, 1445, 1413, 1473, 1607, 1414, 1411, 258, 1433,
	1620, 1651, 1510, 231, 0, 1657, 1508, 1507, 1594, 1438,
	1630, 1494, 238, 1436, 154, 1431, 1439, 1492, 269, 1604,
	1612, 0, 157, 1627, 1467, 1483, 191, 0, 298, 1580,
	344, 0, 1560, 297, 241, 337, 1595, 1659, 343, 1495,
	327, 351, 355, 208, 1535, 182, 317, 200, 197, 1474,
	1617, 1420, 216, 287, 194, 234, 1513, 1586, 1468, 187,
	1598, 1569, 1632, 316, 334, 159, 255, 335, 354, 174,
	329, 256, 262, 184, 186, 185, 170, 311, 333, 179,
	189, 1628, 1611, 1634, 1461, 1440, 1452, 1441, 1482, 1661,
	226, 217, 1635, 1633, 348, 0, 307, 306, 1498, 225,
	1614, 0, 0, 294, 0, 232, 162, 1639, 357, 173,
	236, 330, 0, 211, 268, 193, 1582, 277, 1480, 156,
	290, 252, 253, 251, 254, 214, 0, 0, 1610, 292,
	309, 332, 175, 323, 0, 0, 0, 0, 300, 0,
	0, 1667, 246, 204, 207, 219, 229, 1581, 296, 324,
	349, 1572, 171, 164, 326, 342, 180, 308, 310, 356,
	1606, 166, 1655, 1629, 1562, 1516, 1522, 1422, 0, 165,
	1602, 1472, 1487, 1460, 1576, 1459, 213, 1593, 340, 341,
	192, 358, 1434, 1675, 167, 1435, 1674, 265, 272, 264,
	1678, 336, 1656, 1563, 1547, 1545, 1427, 1654, 1561, 1546,
	237, 206, 221, 285, 243, 286, 222, 260, 259, 261,
	244, 1549, 0, 163, 0, 321, 1665, 1690, 325, 177,
	1454, 1621, 331, 218, 291, 178, 212, 205, 284, 263,
	172, 224, 319, 235, 242, 1597, 1687, 276, 299, 181,
	346, 318, 201, 1450, 1453, 1448, 1451, 1449, 1553, 1554,
	1670, 1671, 1672, 1609, 1442, 0, 1647, 1648, 0, 1540,
	1658, 1428, 0, 1625, 0, 0, 1589, 1685, 1500, 188,
	1419, 1424, 1425, 1426, 1443, 1530, 1531, 1559, 1566, 1643,
	1642, 1641, 1644, 1649, 1679, 1677, 1680, 1444, 1465, 1486,
	1536, 1537, 1539, 1573, 1574, 1619, 1592, 1601, 1532, 281,
	1558, 158, 168, 239, 1686, 293, 210, 1410, 1418, 1447,
	1455, 1456, 1457, 1458, 1463, 1470, 0, 1477, 1485, 1488,
	1489, 1497, 1503, 1504, 1505, 1506, 1515, 1517, 1518, 1519,
	1520, 1521, 1525, 1526, 1528, 1541, 1542, 1548, 1556, 1557,
	1565, 1567, 0, 1596, 1599, 1608, 1613, 1616, 1622, 1624,
	1631, 1636, 1638, 1676, 1684, 1689, 347, 196, 1538, 1564,
	1603, 169, 176, 183, 195, 203, 209, 220, 223, 227,
	228, 230, 233, 245, 247, 248, 249, 250, 266, 267,
	270, 271, 274, 275, 278, 279, 280, 282, 283, 289,
	0, 295, 301, 302, 303, 304, 305, 312, 313, 314,
	315, 322, 338, 339, 352, 353, 1650, 1511, 155, 0,
	0, 161, 0, 0, 0, 0, 0, 1496, 160, 1645,
	1681, 1577, 1591, 1662, 1623, 328, 1514, 1666, 1464, 1493,
	1683, 1499, 1502, 1585, 1429, 1552, 273, 1490, 1430, 1412,
	1469, 1416, 1481, 1417, 1466, 199, 1462, 1626, 1555, 1664,
	1534, 1578, 1588, 198, 190, 1544, 1543, 1652, 1479, 1478,
	1583, 1640, 1663, 1533, 0, 1673, 240, 1637, 0, 350,
	320, 257, 0, 0, 1529, 1646, 1550, 1615, 1512, 1587,
	1446, 1570, 1668, 1491, 1579, 1669, 0, 0, 0, 0,
	129, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1575, 1660, 1484, 0, 1524, 1584, 1688, 1415, 1571,
	0, 1421, 1432, 1682, 1653, 1475, 1476, 202, 0, 0,
	0, 0, 0, 0, 0, 1527, 1551, 1605, 1509, 345,
	1590, 1600, 1618, 1501, 288, 215, 0, 0, 0, 0,
	0, 0, 2297, 0, 1471, 0, 1568, 0, 0, 0,
	1437, 1423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1523, 0, 0, 0, 1445, 1413,
	1473, 1607, 1414, 1411, 258, 1433, 1620, 1651, 1510, 231,
	0, 1657, 1508, 1507, 1594, 1438, 1630, 1494, 238, 1436,
	154, 1431, 1439, 1492, 269, 1604, 1612, 0, 157, 1627,
	1467, 1483, 191, 0, 298, 1580, 344, 0, 1560, 297,
	241, 337, 1595, 1659, 343, 1495, 327, 351, 355, 208,
	1535, 182, 317, 200, 197, 1474, 1617, 1420, 216, 287,
	194, 234, 1513, 1586, 1468, 187, 1598, 1569, 1632, 316,
	334, 159, 255, 335, 354, 174, 329, 256, 262, 184,
	186, 185, 170, 311, 333, 179, 189, 1628, 1611, 1634,
	1461, 1440, 1452, 1441, 1482, 1661, 226, 217, 1635, 1633,
	348, 0, 307, 306, 1498, 225, 1614, 0, 0, 294,
	0, 232, 162, 1639, 357, 173, 236, 330, 0, 211,
	268, 193, 1582, 277, 1480, 156, 290, 252, 253, 251,
	254, 214, 0, 0, 1610, 292, 309, 332, 175, 323,
	0, 0, 0, 0, 300, 0, 0, 1667, 246, 204,
	207, 219, 229, 1581, 296, 324, 349, 1572, 171, 164,
	326, 342, 180, 308, 310, 356, 1606, 166, 1655, 1629,
	1562, 1516, 1522, 1422, 0, 165, 1602, 1472, 1487, 1460,
	1576, 1459, 213, 1593, 340, 341, 192, 358, 1434, 1675,
	167, 1435, 1674, 265, 272, 264, 1678, 336, 1656, 1563,
	1547, 1545, 1427, 1654, 1561, 1546, 237, 206, 221, 285,
	243, 286, 222, 260, 259, 261, 244, 1549, 0, 163,
	0, 321, 1665, 1690, 325, 177, 1454, 1621, 331, 218,
	291, 178, 212, 205, 284, 263, 172, 224, 319, 235,
	242, 1597, 1687, 276, 299, 181, 346, 318, 201, 1450,
	1453, 1448, 1451, 1449, 1553, 1554, 1670, 1671, 1672, 1609,
	1442, 0, 1647, 1648, 0, 1540, 1658, 1428, 0, 1625,
	0, 0, 1589, 1685, 1500, 188, 1419, 1424, 1425, 1426,
	1443, 1530, 1531, 1559, 1566, 1643, 1642, 1641, 1644, 1649,
	1679, 1677, 1680, 1444, 1465, 1486, 1536, 1537, 1539, 1573,
	1574, 1619, 1592, 1601, 1532, 281, 1558, 158, 168, 239,
	1686, 293, 210, 1410, 1418, 1447, 1455, 1456, 1457, 1458,
	1463, 1470, 0, 1477, 1485, 1488, 1489, 1497, 1503, 1504,
	1505, 1506, 1515, 1517, 1518, 1519, 1520, 1521, 1525, 1526,
	1528, 1541, 1542, 1548, 1556, 1557, 1565, 1567, 0, 1596,
	1599, 1608, 1613, 1616, 1622, 1624, 1631, 1636, 1638, 1676,
	1684, 1689, 347, 196, 1538, 1564, 1603, 169, 176, 183,
	195, 203, 209, 220, 223, 227, 228, 230, 233, 245,
	247, 248, 249, 250, 266, 267, 270, 271, 274, 275,
	278, 279, 280, 282, 283, 289, 0, 295, 301, 302,
	303, 304, 305, 312, 313, 314, 315, 322, 338, 339,
	352, 353, 1650, 1511, 155, 0, 0, 161, 0, 0,
	0, 0, 0, 1496, 160, 1645, 1681, 1577, 1591, 1662,
	1623, 328, 1514, 1666, 1464, 1493, 1683, 1499, 1502, 1585,
	1429, 1552, 273, 1490, 1430, 1412, 1469, 1416, 1481, 1417,
	1466, 199, 1462, 1626, 1555, 1664, 1534, 1578, 1588, 198,
	190, 1544, 1543, 1652, 1479, 1478, 1583, 1640, 1663, 1533,
	0, 1673, 240, 1637, 0, 350, 320, 257, 0, 0,
	1529, 1646, 1550, 1615, 1512, 1587, 1446, 1570, 1668, 1491,
	1579, 1669, 0, 0, 0, 0, 929, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1575, 1660, 1484,
	0, 1524, 1584, 1688, 1415, 1571, 0, 1421, 1432, 1682,
	1653, 1475, 1476, 202, 0, 0, 0, 0, 0, 0,
	0, 1527, 1551, 1605, 1509, 345, 1590, 1600, 1618, 1501,
	288, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	1471, 0, 1568, 0, 0, 0, 1437, 1423, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1523, 0, 0, 0, 1445, 1413, 1473, 1607, 1414, 1411,
	258, 1433, 1620, 1651, 1510, 231, 0, 1657, 1508, 1507,
	1594, 1438, 1630, 1494, 238, 1436, 154, 1431, 1439, 1492,
	269, 1604, 1612, 0, 157, 1627, 1467, 1483, 191, 0,
	298, 1580, 344, 0, 1560, 297, 241, 337, 1595, 1659,
	343, 1495, 327, 351, 355, 208, 1535, 182, 317, 200,
	197, 1474, 1617, 1420, 216, 287, 194, 234, 1513, 1586,
	1468, 187, 1598, 1569, 1632, 316, 334, 159, 255, 335,
	354, 174, 329, 256, 262, 184, 186, 185, 170, 311,
	333, 179, 189, 1628, 1611, 1634, 1461, 1440, 1452, 1441,
	1482, 1661, 226, 217, 1635, 1633, 348, 0, 307, 306,
	1498, 225, 1614, 0, 0, 294, 0, 232, 162, 1639,
	357, 173, 236, 330, 0, 211, 268, 193, 1582, 277,
	1480, 156, 290, 252, 253, 251, 254, 214, 0, 0,
	1610, 292, 309, 332, 175, 323, 0, 0, 0, 0,
	300, 0, 0, 1667, 246, 204, 207, 219, 229, 1581,
	296, 324, 349, 1572, 171, 164, 326, 342, 180, 308,
	310, 356, 1606, 166, 1655, 1629, 1562, 1516, 1522, 1422,
	0, 165, 1602, 1472, 1487, 1460, 1576, 1459, 213, 1593,
	340, 341, 192, 358, 1434, 1675, 167, 1435, 1674, 265,
	272, 264, 1678, 336, 1656, 1563, 1547, 1545, 1427, 1654,
	1561, 1546, 237, 206, 221, 285, 243, 286, 222, 260,
	259, 261, 244, 1549, 0, 163, 0, 321, 1665, 1690,
	325, 177, 1454, 1621, 331, 218, 291, 178, 212, 205,
	284, 263, 172, 224, 319, 235, 242, 1597, 1687, 276,
	299, 181, 346, 318, 201, 1450, 1453, 1448, 1451, 1449,
	1553, 1554, 1670, 1671, 1672, 1609, 1442, 0, 1647, 1648,
	0, 1540, 1658, 1428, 0, 1625, 0, 0, 1589, 1685,
	1500, 188, 1419, 1424, 1425, 1426, 1443, 1530, 1531, 1559,
	1566, 1643, 1642, 1641, 1644, 1649, 1679, 1677, 1680, 1444,
	1465, 1486, 1536, 1537, 1539, 1573, 1574, 1619, 1592, 1601,
	1532, 281, 1558, 158, 168, 239, 1686, 293, 210, 1410,
	1418, 1447, 1455, 1456, 1457, 1458, 1463, 1470, 0, 1477,
	1485, 1488, 1489, 1497, 1503, 1504, 1505, 1506, 1515, 1517,
	1518, 1519, 1520, 1521, 1525, 1526, 1528, 1541, 1542, 1548,
	1556, 1557, 1565, 1567, 0, 1596, 1599, 1608, 1613, 1616,
	1622, 1624, 1631, 1636, 1638, 1676, 1684, 1689, 347, 196,
	1538, 1564, 1603, 169, 176, 183, 195, 203, 209, 220,
	223, 227, 228, 230, 233, 245, 247, 248, 249, 250,
	266, 267, 270, 271, 274, 275, 278, 279, 280, 282,
	283, 289, 0, 295, 301, 302, 303, 304, 305, 312,
	313, 314, 315, 322, 338, 339, 352, 353, 1650, 1511,
	155, 0, 0, 161, 0, 0, 0, 0, 0, 1496,
	160, 1645, 1681, 1577, 1591, 1662, 1623, 328, 1514, 1666,
	1464, 1493, 1683, 1499, 1502, 1585, 1429, 1552, 273, 1490,
	1430, 1412, 1469, 1416, 1481, 1417, 1466, 199, 1462, 1626,
	1555, 1664, 1534, 1578, 1588, 198, 190, 1544, 1543, 1652,
	1479, 1478, 1583, 1640, 1663, 1533, 0, 1673, 240, 1637,
	0, 350, 320, 257, 0, 0, 1529, 1646, 1550, 1615,
	1512, 1587, 1446, 1570, 1668, 1491, 1579, 1669, 0, 0,
	0, 0, 3232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1575, 1660, 1484, 0, 1524, 1584, 1688,
	1415, 1571, 0, 1421, 1432, 1682, 1653, 1475, 1476, 202,
	0, 0, 0, 0, 0, 0, 0, 1527, 1551, 1605,
	1509, 345, 1590, 1600, 1618, 1501, 288, 215, 0, 0,
	0, 0, 0, 0, 0, 0, 1471, 0, 1568, 0,
	0, 0, 1437, 1423, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1523, 0, 0, 0,
	1445, 1413, 1473, 1607, 1414, 1411, 258, 1433, 1620, 1651,
	1510, 231, 0, 1657, 1508, 1507, 1594, 1438, 1630, 1494,
	238, 1436, 154, 1431, 1439, 1492, 269, 1604, 1612, 0,
	157, 1627, 1467, 1483, 191, 0, 298, 1580, 344, 0,
	1560, 297, 241, 337, 1595, 1659, 343, 1495, 327, 351,
	355, 208, 1535, 182, 317, 200, 197, 1474, 1617, 1420,
	216, 287, 194, 234, 1513, 1586, 1468, 187, 1598, 1569,
	1632, 316, 334, 159, 255, 335, 354, 174, 329, 256,
	262, 184, 186, 185, 170, 311, 333, 179, 189, 1628,
	1611, 1634, 1461, 1440, 1452, 3235, 3236, 3237, 226, 217,
	1635, 1633, 348, 0, 307, 306, 1498, 225, 1614, 0,
	0, 294, 0, 232, 162, 1639, 357, 173, 236, 330,
	0, 211, 268, 193, 1582, 277, 1480, 156, 290, 252,
	253, 251, 254, 214, 0, 0, 1610, 292, 309, 332,
	175, 323, 0, 0, 0, 0, 300, 0, 0, 1667,
	246, 204, 207, 219, 229, 1581, 296, 324, 349, 1572,
	171, 164, 326, 342, 180, 308, 310, 356, 1606, 166,
	1655, 1629, 1562, 1516, 1522, 1422, 0, 165, 1602, 1472,
	1487, 1460, 1576, 1459, 213, 1593, 340, 341, 192, 358,
	1434, 1675, 167, 1435, 1674, 265, 272, 264, 1678, 336,
	1656, 1563, 1547, 1545, 1427, 1654, 1561, 1546, 237, 206,
	221, 285, 243, 286, 222, 260, 259, 261, 244, 1549,
	0, 163, 0, 321, 1665, 1690, 325, 177, 1454, 1621,
	331, 218, 291, 178, 212, 205, 284, 263, 172, 224,
	319, 235, 242, 1597, 1687, 276, 299, 181, 346, 318,
	201, 1450, 1453, 1448, 1451, 1449, 1553, 1554, 1670, 1671,
	1672, 1609, 1442, 0, 1647, 1648, 0, 1540, 1658, 1428,
	0, 1625, 0, 0, 1589, 1685, 1500, 188, 1419, 1424,
	1425, 1426, 1443, 1530, 1531, 1559, 1566, 1643, 1642, 1641,
	1644, 1649, 1679, 1677, 1680, 1444, 1465, 1486, 1536, 1537,
	1539, 1573, 1574, 1619, 1592, 1601, 1532, 281, 1558, 158,
	168, 239, 1686, 293, 210, 1410, 1418, 1447, 1455, 1456,
	1457, 1458, 1463, 1470, 0, 1477, 1485, 1488, 1489, 1497,
	1503, 1504, 1505, 1506, 1515, 1517, 1518, 1519, 1520, 1521,
	1525, 1526, 1528, 1541, 1542, 1548, 1556, 1557, 1565, 1567,
	0, 1596, 1599, 1608, 1613, 1616, 1622, 1624, 1631, 1636,
	1638, 1676, 1684, 1689, 347, 196, 1538, 1564, 1603, 169,
	176, 183, 195, 203, 209, 220, 223, 227, 228, 230,
	233, 245, 247, 248, 249, 250, 266, 267, 270, 271,
	274, 275, 278, 279, 280, 282, 283, 289, 0, 295,
	301, 302, 303, 304, 305, 312, 313, 314, 315, 322,
	338, 339, 352, 353, 1650, 1511, 155, 0, 0, 161,
	0, 0, 0, 0, 0, 1496, 160, 1645, 1681, 1577,
	1591, 1662, 1623, 328, 1514, 1666, 1464, 1493, 1683, 1499,
	1502, 1585, 1429, 1552, 273, 1490, 1430, 1412, 1469, 1416,
	1481, 1417, 1466, 199, 1462, 1626, 1555, 1664, 1534, 1578,
	1588, 198, 190, 1544, 1543, 1652, 1479, 1478, 1583, 1640,
	1663, 1533, 0, 1673, 240, 1637, 0, 350, 320, 257,
	0, 0, 1529, 1646, 1550, 1615, 1512, 1587, 1446, 1570,
	1668, 1491, 1579, 1669, 0, 0, 0, 0, 129, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1575,
	1660, 1484, 0, 1524, 1584, 1688, 1415, 1571, 0, 1421,
	1432, 1682, 1653, 1475, 1476, 202, 0, 0, 0, 0,
	0, 0, 0, 1527, 1551, 1605, 1509, 345, 1590, 1600,
	1618, 1501, 288, 215, 0, 0, 0, 0, 0, 0,
	0, 0, 1471, 0, 1568, 0, 0, 0, 1437, 1423,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1523, 0, 0, 0, 1445, 1413, 1473, 1607,
	1414, 1411, 258, 1433, 1620, 1651, 1510, 231, 0, 1657,
	1508, 1507, 1594, 1438, 1630, 1494, 238, 1436, 154, 1431,
	1439, 1492, 269, 1604, 1612, 0, 157, 1627, 1467, 1483,
	191, 0, 298, 1580, 344, 0, 1560, 297, 241, 337,
	1595, 1659, 343, 1495, 327, 351, 355, 208, 1535, 182,
	317, 200, 197, 1474, 1617, 1420, 216, 287, 194, 234,
	1513, 1586, 1468, 187, 1598, 1569, 1632, 316, 334, 159,
	255, 335, 354, 174, 329, 256, 262, 184, 186, 185,
	170, 311, 333, 179, 189, 1628, 1611, 1634, 1461, 1440,
	1452, 1441, 1482, 1661, 226, 217, 1635, 1633, 348, 0,
	307, 306, 1498, 225, 1614, 0, 0, 294, 0, 232,
	162, 1639, 357, 173, 236, 330, 0, 211, 268, 193,
	1582, 277, 1480, 156, 290, 252, 253, 251, 254, 214,
	0, 0, 1610, 292, 309, 332, 175, 323, 0, 0,
	0, 0, 300, 0, 0, 1667, 246, 204, 207, 219,
	229, 1581, 296, 324, 349, 1572, 171, 164, 326, 342,
	180, 308, 310, 356, 1606, 166, 1655, 1629, 1562, 1516,
	1522, 1422, 0, 165, 1602, 1472, 1487, 1460, 1576, 1459,
	213, 1593, 340, 341, 192, 358, 1434, 1675, 167, 1435,
	1674, 265, 272, 264, 1678, 336, 1656, 1563, 1547, 1545,
	1427, 1654, 1561, 1546, 237, 206, 221, 285, 243, 286,
	222, 260, 259, 261, 244, 1549, 0, 163, 0, 321,
	1665, 1690, 325, 177, 1454, 1621, 331, 218, 291, 178,
	212, 205, 284, 263, 172, 224, 319, 235, 242, 1597,
	1687, 276, 299, 181, 346, 318, 201, 1450, 1453, 1448,
	1451, 1449, 1553, 1554, 1670, 1671, 1672, 1609, 1442, 0,
	1647, 1648, 0, 1540, 1658, 1428, 0, 1625, 0, 0,
	1589, 1685, 1500, 188, 1419, 1424, 1425, 1426, 1443, 1530,
	1531, 1559, 1566, 1643, 1642, 1641, 1644, 1649, 1679, 1677,
	1680, 1444, 1465, 1486, 1536, 1537, 1539, 1573, 1574, 1619,
	1592, 1601, 1532, 281, 1558, 158, 168, 239, 1686, 293,
	210, 1410, 1418, 1447, 1455, 1456, 1457, 1458, 1463, 1470,
	0, 1477, 1485, 1488, 1489, 1497, 1503, 1504, 1505, 1506,
	1515, 1517, 1518, 1519, 1520, 1521, 1525, 1526, 1528, 1541,
	1542, 1548, 1556, 1557, 1565, 1567, 0, 1596, 1599, 1608,
	1613, 1616, 1622, 1624, 1631, 1636, 1638, 1676, 1684, 1689,
	347, 196, 1538, 1564, 1603, 169, 176, 183, 195, 203,
	209, 220, 223, 227, 228, 230, 233, 245, 247, 248,
	249, 250, 266, 267, 270, 271, 274, 275, 278, 279,
	280, 282, 283, 289, 0, 295, 301, 302, 303, 304,
	305, 312, 313, 314, 315, 322, 338, 339, 352, 353,
	1650, 1511, 155, 0, 0, 161, 328, 0, 0, 0,
	0, 1496, 160, 1645, 1681, 1577, 1591, 273, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 0, 0, 0,
	0, 0, 0, 0, 198, 190, 0, 0, 0, 0,
	0, 0, 0, 2003, 2007, 0, 0, 240, 0, 933,
	350, 320, 257, 936, 935, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 929, 0, 0, 0, 0, 0, 0, 0, 0,
	137, 0, 0, 0, 0, 934, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 0, 288, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 2006,
	231, 153, 0, 0, 0, 2000, 0, 2001, 2002, 238,
	937, 154, 0, 1998, 2005, 269, 0, 0, 142, 157,
	0, 0, 0, 191, 926, 298, 0, 344, 932, 0,
	297, 241, 337, 0, 0, 343, 0, 327, 351, 355,
	208, 0, 182, 317, 200, 197, 0, 0, 0, 216,
	287, 194, 234, 0, 0, 0, 187, 0, 0, 0,
	316, 334, 159, 255, 335, 354, 174, 329, 256, 262,
	184, 186, 185, 170, 311, 333, 179, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 217, 0,
	0, 348, 143, 307, 306, 0, 225, 0, 144, 136,
	294, 145, 232, 162, 0, 357, 173, 236, 330, 931,
	211, 268, 193, 0, 277, 0, 156, 290, 252, 253,
	251, 254, 214, 140, 146, 0, 292, 309, 332, 175,
	323, 138, 139, 141, 148, 300, 149, 150, 0, 246,
	204, 207, 219, 229, 0, 296, 324, 349, 0, 171,
	164, 326, 342, 180, 308, 310, 356, 0, 166, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 0, 0,
	0, 0, 0, 213, 0, 340, 341, 192, 358, 0,
	0, 167, 0, 0, 265, 272, 264, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 206, 221,
	285, 243, 286, 222, 260, 259, 261, 244, 0, 0,
	163, 0, 321, 0, 0, 325, 177, 0, 0, 331,
	218, 291, 178, 212, 205, 284, 263, 172, 224, 319,
	235, 242, 0, 0, 276, 299, 181, 346, 318, 201,
	328, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 273, 0, 0, 0, 0, 1145, 0, 0, 0,
	199, 151, 152, 0, 0, 0, 188, 131, 198, 190,
	0, 132, 0, 0, 133, 134, 0, 0, 0, 0,
	135, 240, 0, 933, 350, 320, 257, 936, 935, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 158, 168,
	239, 0, 293, 210, 0, 1146, 0, 1149, 0, 0,
	0, 0, 0, 0, 137, 0, 0, 0, 0, 934,
	0, 1141, 1142, 1140, 0, 0, 0, 0, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	1143, 0, 0, 0, 345, 0, 0, 0, 0, 288,
	215, 0, 0, 347, 196, 0, 0, 0, 169, 176,
	183, 195, 203, 209, 220, 223, 227, 228, 230, 233,
	245, 247, 248, 249, 250, 266, 267, 270, 271, 274,
	275, 278, 279, 280, 282, 283, 289, 147, 295, 301,
	302, 303, 304, 305, 312, 313, 314, 315, 322, 338,
	339, 352, 353, 0, 0, 155, 0, 0, 161, 0,
	0, 0, 0, 0, 0, 160, 0, 0, 0, 258,
	0, 0, 0, 0, 231, 153, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 154, 0, 0, 0, 269,
	0, 0, 142, 157, 0, 0, 0, 191, 0, 298,
	0, 344, 932, 0, 297, 241, 337, 0, 0, 343,
	0, 327, 351, 355, 208, 0, 182, 317, 200, 197,
	0, 0, 0, 216, 287, 194, 234, 0, 0, 0,
	187, 0, 0, 0, 316, 334, 159, 255, 335, 354,
	174, 329, 256, 262, 184, 186, 185, 170, 311, 333,
	179, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 217, 0, 0, 348, 143, 307, 306, 0,
	225, 0, 144, 136, 294, 145, 232, 162, 0, 357,
	173, 236, 330, 931, 211, 268, 193, 0, 277, 0,
	156, 290, 252, 253, 251, 254, 214, 140, 146, 0,
	292, 309, 332, 175, 323, 138, 139, 141, 148, 300,
	149, 150, 0, 246, 204, 207, 219, 229, 0, 296,
	324, 349, 0, 171, 164, 326, 342, 180, 308, 310,
	356, 0, 166, 0, 0, 0, 0, 0, 0, 0,
	165, 0, 0, 0, 0, 0, 0, 213, 0, 340,
	341, 192, 358, 0, 0, 167, 0, 0, 265, 272,
	264, 0, 336, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 206, 221, 285, 243, 286, 222, 260, 259,
	261, 244, 0, 0, 163, 0, 321, 0, 0, 325,
	177, 0, 0, 331, 218, 291, 178, 212, 205, 284,
	263, 172, 224, 319, 235, 242, 0, 0, 276, 299,
	181, 346, 318, 201, 328, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 273, 0, 0, 0, 0,
	0, 0, 0, 0, 199, 151, 152, 0, 0, 0,
	188, 131, 198, 190, 0, 132, 0, 0, 133, 134,
	0, 0, 0, 0, 135, 240, 0, 933, 350, 320,
	257, 936, 935, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 158, 168, 239, 0, 293, 210, 0, 929,
	0, 0, 0, 0, 0, 0, 0, 0, 137, 0,
	0, 0, 0, 934, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 0, 288, 215, 0, 0, 347, 196, 0,
	0, 0, 169, 176, 183, 195, 203, 209, 220, 223,
	227, 228, 230, 233, 245, 247, 248, 249, 250, 266,
	267, 270, 271, 274, 275, 278, 279, 280, 282, 283,
	289, 147, 295, 301, 302, 303, 304, 305, 312, 313,
	314, 315, 322, 338, 339, 352, 353, 0, 0, 155,
	0, 0, 161, 0, 0, 0, 0, 0, 0, 160,
	0, 0, 0, 258, 0, 0, 0, 0, 231, 153,
	0, 0, 0, 0, 0, 0, 0, 238, 937, 154,
	0, 927, 0, 269, 0, 0, 142, 157, 0, 0,
	0, 191, 926, 298, 0, 344, 932, 0, 297, 241,
	337, 0, 0, 343, 0, 327, 351, 355, 208, 0,
	182, 317, 200, 197, 0, 0, 0, 216, 287, 194,
	234, 0, 0, 0, 187, 0, 0, 0, 316, 334,
	159, 255, 335, 354, 174, 329, 256, 262, 184, 186,
	185, 170, 311, 333, 179, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 217, 0, 0, 348,
	143, 307, 306, 0, 225, 0, 144, 136, 294, 145,
	232, 162, 0, 357, 173, 236, 330, 931, 211, 268,
	193, 0, 277, 0, 156, 290, 252, 253, 251, 254,
	214, 140, 146, 0, 292, 309, 332, 175, 323, 138,
	139, 141, 148, 300, 149, 150, 0, 246, 204, 207,
	219, 229, 0, 296, 324, 349, 0, 171, 164, 326,
	342, 180, 308, 310, 356, 0, 166, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 0, 0, 0, 0,
	0, 213, 0, 340, 341, 192, 358, 0, 0, 167,
	0, 0, 265, 272, 264, 0, 336, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 206, 221, 285, 243,
	286, 222, 260, 259, 261, 244, 0, 0, 163, 0,
	321, 0, 0, 325, 177, 0, 0, 331, 218, 291,
	178, 212, 205, 284, 263, 172, 224, 319, 235, 242,
	0, 0, 276, 299, 181, 346, 318, 201, 328, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 199, 151,
	152, 0, 0, 0, 188, 131, 198, 190, 0, 132,
	0, 0, 133, 134, 0, 0, 0, 0, 135, 240,
	0, 933, 350, 320, 257, 936, 935, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 158, 168, 239, 0,
	293, 210, 0, 1146, 0, 1149, 0, 0, 0, 0,
	0, 0, 137, 0, 0, 0, 0, 934, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 0, 288, 215, 0,
	0, 347, 196, 0, 0, 0, 169, 176, 183, 195,
	203, 209, 220, 223, 227, 228, 230, 233, 245, 247,
	248, 249, 250, 266, 267, 270, 271, 274, 275, 278,
	279, 280, 282, 283, 289, 147, 295, 301, 302, 303,
	304, 305, 312, 313, 314, 315, 322, 338, 339, 352,
	353, 0, 0, 155, 0, 0, 161, 0, 0, 0,
	0, 0, 0, 160, 0, 0, 0, 258, 0, 0,
	0, 0, 231, 153, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 154, 0, 0, 0, 269, 0, 0,
	142, 157, 0, 0, 0, 191, 1826, 298, 0, 344,
	932, 0, 297, 241, 337, 0, 0, 343, 0, 327,
	351, 355, 208, 0, 182, 317, 200, 197, 0, 0,
	0, 216, 287, 194, 234, 0, 0, 0, 187, 0,
	0, 0, 316, 334, 159, 255, 335, 354, 174, 329,
	256, 262, 184, 186, 185, 170, 311, 333, 179, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	217, 0, 0, 348, 143, 307, 306, 0, 225, 0,
	144, 136, 294, 145, 232, 162, 0, 357, 173, 236,
	330, 931, 211, 268, 193, 0, 277, 0, 156, 290,
	252, 253, 251, 254, 214, 140, 146, 0, 292, 309,
	332, 175, 323, 138, 139, 141, 148, 300, 149, 150,
	0, 246, 204, 207, 219, 229, 0, 296, 324, 349,
	0, 171, 164, 326, 342, 180, 308, 310, 356, 0,
	166, 0, 0, 0, 0, 0, 0, 0, 165, 0,
	0, 0, 0, 0, 0, 213, 0, 340, 341, 192,
	358, 0, 0, 167, 0, 0, 265, 272, 264, 0,
	336, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	206, 221, 285, 243, 286, 222, 260, 259, 261, 244,
	0, 0, 163, 0, 321, 0, 0, 325, 177, 0,
	0, 331, 218, 291, 178, 212, 205, 284, 263, 172,
	224, 319, 235, 242, 0, 0, 276, 299, 181, 346,
	318, 201, 328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 199, 151, 152, 0, 0, 0, 188, 131,
	198, 190, 0, 132, 0, 0, 133, 134, 0, 0,
	0, 0, 135, 240, 0, 933, 350, 320, 257, 936,
	935, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	158, 168, 239, 0, 293, 210, 0, 2704, 0, 0,
	0, 0, 0, 0, 0, 0, 137, 0, 0, 0,
	0, 934, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	0, 288, 215, 0, 0, 347, 196, 0, 0, 0,
	169, 176, 183, 195, 203, 209, 220, 223, 227, 228,
	230, 233, 245, 247, 248, 249, 250, 266, 267, 270,
	271, 274, 275, 278, 279, 280, 282, 283, 289, 147,
	295, 301, 302, 303, 304, 305, 312, 313, 314, 315,
	322, 338, 339, 352, 353, 0, 0, 155, 0, 0,
	161, 0, 0, 0, 0, 0, 0, 160, 0, 0,
	0, 258, 0, 0, 0, 0, 231, 153, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 154, 0, 0,
	0, 269, 0, 0, 142, 157, 0, 0, 0, 191,
	0, 298, 0, 344, 932, 0, 297, 241, 337, 0,
	0, 343, 0, 327, 351, 355, 208, 0, 182, 317,
	200, 197, 0, 0, 0, 216, 287, 194, 234, 0,
	0, 0, 187, 0, 0, 0, 316, 334, 159, 255,
	335, 354, 174, 329, 256, 262, 184, 186, 185, 170,
	311, 333, 179, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 217, 0, 0, 348, 143, 307,
	306, 0, 225, 0, 144, 136, 294, 145, 232, 162,
	0, 357, 173, 236, 330, 931, 211, 268, 193, 0,
	277, 0, 156, 290, 252, 253, 251, 254, 214, 140,
	146, 0, 292, 309, 332, 175, 323, 138, 139, 141,
	148, 300, 149, 150, 0, 246, 204, 207, 219, 229,
	0, 296, 324, 349, 0, 171, 164, 326, 342, 180,
	308, 310, 356, 0, 166, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 0, 213,
	0, 340, 341, 192, 358, 0, 0, 167, 0, 0,
	265, 272, 264, 0, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 206, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 0, 0, 163, 0, 321, 0,
	0, 325, 177, 0, 0, 331, 218, 291, 178, 212,
	205, 284, 263, 172, 224, 319, 235, 242, 0, 0,
	276, 299, 181, 346, 318, 201, 328, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 151, 152, 0,
	0, 0, 188, 131, 198, 190, 0, 132, 0, 0,
	133, 134, 0, 0, 0, 0, 135, 240, 0, 933,
	350, 320, 257, 936, 935, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 158, 168, 239, 0, 293, 210,
	0, 2699, 0, 0, 0, 0, 0, 0, 0, 0,
	137, 0, 0, 0, 0, 934, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 0, 288, 215, 0, 0, 347,
	196, 0, 0, 0, 169, 176, 183, 195, 203, 209,
	220, 223, 227, 228, 230, 233, 245, 247, 248, 249,
	250, 266, 267, 270, 271, 274, 275, 278, 279, 280,
	282, 283, 289, 147, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 0,
	0, 155, 0, 0, 161, 0, 0, 0, 0, 0,
	0, 160, 0, 0, 0, 258, 0, 0, 0, 0,
	231, 153, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 154, 0, 0, 0, 269, 0, 0, 142, 157,
	0, 0, 0, 191, 0, 298, 0, 344, 932, 0,
	297, 241, 337, 0, 0, 343, 0, 327, 351, 355,
	208, 0, 182, 317, 200, 197, 0, 0, 0, 216,
	287, 194, 234, 0, 0, 0, 187, 0, 0, 0,
	316, 334, 159, 255, 335, 354, 174, 329, 256, 262,
	184, 186, 185, 170, 311, 333, 179, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 217, 0,
	0, 348, 143, 307, 306, 0, 225, 0, 144, 136,
	294, 145, 232, 162, 0, 357, 173, 236, 330, 931,
	211, 268, 193, 0, 277, 0, 156, 290, 252, 253,
	251, 254, 214, 140, 146, 0, 292, 309, 332, 175,
	323, 138, 139, 141, 148, 300, 149, 150, 0, 246,
	204, 207, 219, 229, 0, 296, 324, 349, 0, 171,
	164, 326, 342, 180, 308, 310, 356, 0, 166, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 0, 0,
	0, 0, 0, 213, 0, 340, 341, 192, 358, 0,
	0, 167, 0, 0, 265, 272, 264, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 206, 221,
	285, 243, 286, 222, 260, 259, 261, 244, 0, 0,
	163, 0, 321, 0, 0, 325, 177, 0, 0, 331,
	218, 291, 178, 212, 205, 284, 263, 172, 224, 319,
	235, 242, 0, 0, 276, 299, 181, 346, 318, 201,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 151, 152, 0, 0, 0, 188, 131, 0, 0,
	0, 132, 0, 0, 133, 134, 0, 0, 0, 0,
	135, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 158, 168,
	239, 0, 293, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 196, 0, 0, 0, 169, 176,
	183, 195, 203, 209, 220, 223, 227, 228, 230, 233,
	245, 247, 248, 249, 250, 266, 267, 270, 271, 274,
	275, 278, 279, 280, 282, 283, 289, 147, 295, 301,
	302, 303, 304, 305, 312, 313, 314, 315, 322, 338,
	339, 352, 353, 0, 0, 155, 36, 328, 161, 0,
	0, 0, 0, 0, 0, 160, 0, 0, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 199, 0, 0,
	0, 0, 0, 0, 0, 198, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2279, 240, 0,
	0, 350, 320, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 77, 0,
	0, 0, 1958, 0, 0, 0, 0, 0, 0, 0,
	0, 137, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 0, 0, 0, 288, 215, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 231, 153, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 154, 0, 0, 0, 269, 0, 0, 142,
	157, 0, 0, 0, 191, 0, 298, 0, 344, 0,
	0, 297, 241, 337, 0, 0, 343, 0, 327, 351,
	355, 208, 0, 182, 317, 200, 197, 0, 0, 0,
	216, 287, 194, 234, 0, 0, 0, 187, 0, 0,
	0, 316, 334, 159, 255, 335, 354, 174, 329, 256,
	262, 184, 186, 185, 170, 311, 333, 179, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 217,
	0, 0, 348, 143, 307, 306, 0, 225, 0, 144,
	136, 294, 145, 232, 162, 0, 357, 173, 236, 330,
	128, 211, 268, 193, 0, 277, 0, 156, 290, 252,
	253, 251, 254, 214, 140, 146, 0, 292, 309, 332,
	175, 323, 138, 139, 141, 148, 300, 149, 150, 0,
	246, 204, 207, 219, 229, 0, 296, 324, 349, 0,
	171, 164, 326, 342, 180, 308, 310, 356, 0, 166,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 0, 213, 0, 340, 341, 192, 358,
	0, 0, 167, 0, 0, 265, 272, 264, 0, 336,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 206,
	221, 285, 243, 286, 222, 260, 259, 261, 244, 0,
	0, 163, 0, 321, 0, 0, 325, 177, 0, 0,
	331, 218, 291, 178, 212, 205, 284, 263, 172, 224,
	319, 235, 242, 0, 0, 276, 299, 181, 346, 318,
	201, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 151, 152, 0, 0, 0, 188, 131, 0,
	0, 0, 132, 0, 0, 133, 134, 0, 0, 0,
	0, 135, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1959, 281, 0, 158,
	168, 239, 462, 293, 210, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 196, 0, 0, 0, 169,
	176, 183, 195, 203, 209, 220, 223, 227, 228, 230,
	233, 245, 247, 248, 249, 250, 266, 267, 270, 271,
	274, 275, 278, 279, 280, 282, 283, 289, 147, 295,
	301, 302, 303, 304, 305, 312, 313, 314, 315, 322,
	338, 339, 352, 353, 328, 0, 155, 0, 0, 161,
	0, 0, 0, 0, 0, 273, 160, 0, 0, 0,
	0, 0, 0, 0, 199, 0, 0, 0, 0, 0,
	0, 0, 198, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 350, 320,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 77, 0, 0, 0, 1958,
	0, 0, 0, 0, 0, 0, 0, 0, 137, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 0, 288, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 231, 153,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 154,
	0, 0, 0, 269, 0, 0, 142, 157, 0, 0,
	0, 191, 0, 298, 0, 344, 0, 0, 297, 241,
	337, 0, 0, 343, 0, 327, 351, 355, 208, 0,
	182, 317, 200, 197, 0, 0, 0, 216, 287, 194,
	234, 0, 0, 0, 187, 0, 0, 0, 316, 334,
	159, 255, 335, 354, 174, 329, 256, 262, 184, 186,
	185, 170, 311, 333, 179, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 217, 0, 0, 348,
	143, 307, 306, 0, 225, 0, 144, 136, 294, 145,
	232, 162, 0, 357, 173, 236, 330, 128, 211, 268,
	193, 0, 277, 0, 156, 290, 252, 253, 251, 254,
	214, 140, 146, 0, 292, 309, 332, 175, 323, 138,
	139, 141, 148, 300, 149, 150, 0, 246, 204, 207,
	219, 229, 0, 296, 324, 349, 0, 171, 164, 326,
	342, 180, 308, 310, 356, 0, 166, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 0, 0, 0, 0,
	0, 213, 0, 340, 341, 192, 358, 0, 0, 167,
	0, 0, 265, 272, 264, 0, 336, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 206, 221, 285, 243,
	286, 222, 260, 259, 261, 244, 0, 0, 163, 0,
	321, 0, 0, 325, 177, 0, 0, 331, 218, 291,
	178, 212, 205, 284, 263, 172, 224, 319, 235, 242,
	0, 0, 276, 299, 181, 346, 318, 201, 328, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 199, 151,
	152, 0, 0, 0, 188, 131, 198, 190, 0, 132,
	0, 0, 133, 134, 0, 0, 0, 0, 135, 240,
	0, 0, 350, 320, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 1959, 281, 0, 158, 168, 239, 0,
	293, 210, 0, 129, 0, 0, 0, 0, 0, 0,
	0, 0, 137, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 0, 288, 215, 0,
	0, 347, 196, 0, 0, 0, 169, 176, 183, 195,
	203, 209, 220, 223, 227, 228, 230, 233, 245, 247,
	248, 249, 250, 266, 267, 270, 271, 274, 275, 278,
	279, 280, 282, 283, 289, 147, 295, 301, 302, 303,
	304, 305, 312, 313, 314, 315, 322, 338, 339, 352,
	353, 0, 0, 155, 0, 0, 161, 0, 0, 0,
	0, 0, 0, 160, 0, 0, 0, 258, 0, 0,
	0, 0, 231, 153, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 154, 0, 0, 0, 269, 0, 0,
	142, 157, 0, 0, 0, 191, 0, 298, 0, 344,
	2082, 0, 297, 241, 337, 0, 0, 343, 0, 327,
	351, 355, 208, 0, 182, 317, 200, 197, 0, 0,
	0, 216, 287, 194, 234, 0, 0, 0, 187, 0,
	0, 0, 316, 334, 159, 255, 335, 354, 174, 329,
	256, 262, 184, 186, 185, 170, 311, 333, 179, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	217, 0, 0, 348, 143, 307, 306, 0, 225, 0,
	144, 136, 294, 145, 232, 162, 0, 357, 173, 236,
	330, 128, 211, 268, 193, 0, 277, 0, 156, 290,
	252, 253, 251, 254, 214, 140, 146, 0, 292, 309,
	332, 175, 323, 138, 139, 141, 148, 300, 149, 150,
	0, 246, 204, 207, 219, 229, 0, 296, 324, 349,
	0, 171, 164, 326, 342, 180, 308, 310, 356, 0,
	166, 0, 0, 0, 0, 0, 0, 0, 165, 0,
	0, 0, 0, 0, 0, 213, 0, 340, 341, 192,
	358, 0, 0, 167, 0, 0, 265, 272, 264, 0,
	336, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	206, 221, 285, 243, 286, 222, 260, 259, 261, 244,
	0, 0, 163, 0, 321, 0, 0, 325, 177, 0,
	0, 331, 218, 291, 178, 212, 205, 284, 263, 172,
	224, 319, 235, 242, 0, 0, 276, 299, 181, 346,
	318, 201, 328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 199, 151, 152, 0, 0, 0, 188, 131,
	198, 190, 0, 132, 0, 0, 133, 134, 0, 0,
	0, 0, 135, 240, 0, 0, 350, 320, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	158, 168, 239, 0, 293, 210, 0, 129, 0, 0,
	0, 0, 0, 0, 0, 0, 137, 0, 0, 0,
	0, 0, 1945, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	0, 288, 215, 0, 0, 347, 196, 0, 0, 0,
	169, 176, 183, 195, 203, 209, 220, 223, 227, 228,
	230, 233, 245, 247, 248, 249, 250, 266, 267, 270,
	271, 274, 275, 278, 279, 280, 282, 283, 289, 147,
	295, 301, 302, 303, 304, 305, 312, 313, 314, 315,
	322, 338, 339, 352, 353, 0, 0, 155, 0, 0,
	161, 0, 0, 0, 0, 0, 0, 160, 0, 0,
	0, 258, 0, 0, 0, 0, 231, 153, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 154, 0, 0,
	0, 269, 0, 0, 142, 157, 0, 0, 0, 191,
	0, 298, 0, 344, 0, 0, 297, 241, 337, 0,
	0, 343, 0, 327, 351, 355, 208, 0, 182, 317,
	200, 197, 0, 0, 0, 216, 287, 194, 234, 0,
	0, 0, 187, 0, 0, 0, 316, 334, 159, 255,
	335, 354, 174, 329, 256, 262, 184, 186, 185, 170,
	311, 333, 179, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 217, 0, 0, 348, 143, 307,
	306, 0, 225, 0, 144, 136, 294, 145, 232, 162,
	0, 357, 173, 236, 330, 128, 211, 268, 193, 0,
	277, 0, 156, 290, 252, 253, 251, 254, 214, 140,
	146, 0, 292, 309, 332, 175, 323, 138, 139, 141,
	148, 300, 149, 150, 0, 246, 204, 207, 219, 229,
	0, 296, 324, 349, 0, 171, 164, 326, 342, 180,
	308, 310, 356, 0, 166, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 0, 213,
	0, 340, 341, 192, 358, 0, 0, 167, 0, 0,
	265, 272, 264, 0, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 206, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 0, 0, 163, 0, 321, 0,
	0, 325, 177, 0, 0, 331, 218, 291, 178, 212,
	205, 284, 263, 172, 224, 319, 235, 242, 0, 0,
	276, 299, 181, 346, 318, 201, 328, 0, 0, 0,
	1275, 0, 0, 0, 0, 0, 0, 273, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 151, 152, 0,
	0, 0, 188, 131, 198, 190, 0, 132, 0, 0,
	133, 134, 0, 0, 0, 0, 135, 240, 0, 0,
	350, 320, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 158, 168, 239, 0, 293, 210,
	0, 129, 0, 0, 0, 0, 0, 0, 0, 0,
	137, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 0, 288, 215, 0, 0, 347,
	196, 0, 0, 0, 169, 176, 183, 195, 203, 209,
	220, 223, 227, 228, 230, 233, 245, 247, 248, 249,
	250, 266, 267, 270, 271, 274, 275, 278, 279, 280,
	282, 283, 289, 147, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 0,
	0, 155, 0, 0, 161, 0, 0, 0, 0, 0,
	0, 160, 0, 0, 0, 258, 0, 0, 0, 0,
	231, 153, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 154, 0, 0, 0, 269, 0, 0, 142, 157,
	0, 0, 0, 191, 0, 298, 0, 344, 0, 0,
	297, 241, 337, 0, 0, 343, 0, 327, 351, 355,
	208, 0, 182, 317, 200, 197, 0, 0, 0, 216,
	287, 194, 234, 0, 0, 0, 187, 0, 0, 0,
	316, 334, 159, 255, 335, 354, 174, 329, 256, 262,
	184, 186, 185, 170, 311, 333, 179, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 217, 0,
	0, 348, 143, 307, 306, 0, 225, 0, 144, 136,
	294, 145, 232, 162, 0, 357, 173, 236, 330, 128,
	211, 268, 193, 0, 277, 0, 156, 290, 252, 253,
	251, 254, 214, 140, 146, 0, 292, 309, 332, 175,
	323, 138, 139, 141, 148, 300, 149, 150, 0, 246,
	204, 207, 219, 229, 0, 296, 324, 349, 0, 171,
	164, 326, 342, 180, 308, 310, 356, 0, 166, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 0, 0,
	0, 0, 0, 213, 0, 340, 341, 192, 358, 0,
	0, 167, 0, 0, 265, 272, 264, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 206, 221,
	285, 243, 286, 222, 260, 259, 261, 244, 0, 0,
	163, 0, 321, 0, 0, 325, 177, 0, 0, 331,
	218, 291, 178, 212, 205, 284, 263, 172, 224, 319,
	235, 242, 0, 0, 276, 299, 181, 346, 318, 201,
	328, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 273, 0, 0, 0, 0, 0, 0, 0, 0,
	199, 151, 152, 0, 0, 0, 188, 131, 198, 190,
	0, 132, 0, 0, 133, 134, 0, 0, 0, 0,
	135, 240, 0, 0, 350, 320, 257, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 158, 168,
	239, 0, 293, 210, 0, 129, 0, 0, 0, 0,
	0, 0, 0, 0, 137, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 0, 0, 0, 288,
	215, 0, 0, 347, 196, 0, 0, 0, 169, 176,
	183, 195, 203, 209, 220, 223, 227, 228, 230, 233,
	245, 247, 248, 249, 250, 266, 267, 270, 271, 274,
	275, 278, 279, 280, 282, 283, 289, 147, 295, 301,
	302, 303, 304, 305, 312, 313, 314, 315, 322, 338,
	339, 352, 353, 0, 0, 155, 0, 0, 161, 0,
	0, 0, 0, 0, 0, 160, 0, 0, 0, 258,
	0, 0, 123, 0, 231, 153, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 154, 0, 0, 0, 269,
	0, 0, 142, 157, 0, 0, 0, 191, 0, 298,
	0, 344, 0, 0, 297, 241, 337, 0, 0, 343,
	0, 327, 351, 355, 208, 0, 182, 317, 200, 197,
	0, 0, 0, 216, 287, 194, 234, 0, 0, 0,
	187, 0, 0, 0, 316, 334, 159, 255, 335, 354,
	174, 329, 256, 262, 184, 186, 185, 170, 311, 333,
	179, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 217, 0, 0, 348, 143, 307, 306, 0,
	225, 0, 144, 136, 294, 145, 232, 162, 0, 357,
	173, 236, 330, 128, 211, 268, 193, 0, 277, 0,
	156, 290, 252, 253, 251, 254, 214, 140, 146, 0,
	292, 309, 332, 175, 323, 138, 139, 141, 148, 300,
	149, 150, 0, 246, 204, 207, 219, 229, 0, 296,
	324, 349, 0, 171, 164, 326, 342, 180, 308, 310,
	356, 0, 166, 0, 0, 0, 0, 0, 0, 0,
	165, 0, 0, 0, 0, 0, 0, 213, 0, 340,
	341, 192, 358, 0, 0, 167, 0, 0, 265, 272,
	264, 0, 336, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 206, 221, 285, 243, 286, 222, 260, 259,
	261, 244, 0, 0, 163, 0, 321, 0, 0, 325,
	177, 0, 0, 331, 218, 291, 178, 212, 205, 284,
	263, 172, 224, 319, 235, 242, 0, 0, 276, 299,
	181, 346, 318, 201, 328, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 273, 0, 0, 0, 0,
	0, 0, 0, 0, 199, 151, 152, 0, 0, 0,
	188, 131, 198, 190, 0, 132, 0, 0, 133, 134,
	0, 0, 0, 0, 135, 240, 0, 0, 350, 320,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 158, 168, 239, 0, 293, 210, 0, 129,
	0, 0, 0, 0, 0, 0, 0, 0, 137, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 0, 288, 215, 0, 0, 347, 196, 0,
	0, 0, 169, 176, 183, 195, 203, 209, 220, 223,
	227, 228, 230, 233, 245, 247, 248, 249, 250, 266,
	267, 270, 271, 274, 275, 278, 279, 280, 282, 283,
	289, 147, 295, 301, 302, 303, 304, 305, 312, 313,
	314, 315, 322, 338, 339, 352, 353, 0, 0, 155,
	0, 0, 161, 0, 0, 0, 0, 0, 0, 160,
	0, 0, 0, 258, 0, 0, 0, 0, 231, 153,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 154,
	0, 0, 0, 269, 0, 0, 142, 157, 0, 0,
	0, 191, 0, 298, 0, 344, 0, 0, 297, 241,
	337, 0, 0, 343, 0, 327, 351, 355, 208, 0,
	182, 317, 200, 197, 0, 0, 0, 216, 287, 194,
	234, 0, 0, 0, 187, 0, 0, 0, 316, 334,
	159, 255, 335, 354, 174, 329, 256, 262, 184, 186,
	185, 170, 311, 333, 179, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 217, 0, 0, 348,
	143, 307, 306, 0, 225, 0, 144, 136, 294, 145,
	232, 162, 0, 357, 173, 236, 330, 128, 211, 268,
	193, 0, 277, 0, 156, 290, 252, 253, 251, 254,
	214, 140, 146, 0, 292, 309, 332, 175, 323, 138,
	139, 141, 148, 300, 149, 150, 0, 246, 204, 207,
	219, 229, 0, 296, 324, 349, 0, 171, 164, 326,
	342, 180, 308, 310, 356, 0, 166, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 0, 0, 0, 0,
	0, 213, 0, 340, 341, 192, 358, 0, 0, 167,
	0, 0, 265, 272, 264, 0, 336, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 206, 221, 285, 243,
	286, 222, 260, 259, 261, 244, 0, 0, 163, 0,
	321, 0, 0, 325, 177, 0, 0, 331, 218, 291,
	178, 212, 205, 284, 263, 172, 224, 319, 235, 242,
	0, 0, 276, 299, 181, 346, 318, 201, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 151,
	152, 0, 0, 0, 188, 131, 0, 0, 0, 132,
	0, 0, 133, 134, 0, 0, 0, 0, 135, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 158, 168, 239, 0,
	293, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 196, 0, 0, 0, 169, 176, 183, 195,
	203, 209, 220, 223, 227, 228, 230, 233, 245, 247,
	248, 249, 250, 266, 267, 270, 271, 274, 275, 278,
	279, 280, 282, 283, 289, 147, 295, 301, 302, 303,
	304, 305, 312, 313, 314, 315, 322, 338, 339, 352,
	353, 0, 0, 155, 0, 0, 161, 428, 328, 422,
	433, 416, 0, 160, 0, 0, 0, 0, 0, 273,
	0, 0, 439, 0, 0, 0, 0, 0, 199, 0,
	0, 423, 0, 0, 0, 0, 198, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 350, 320, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 437, 0, 436, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 0, 288, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 415, 414, 417, 0, 0, 0, 258, 0, 0,
	0, 421, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 154, 0, 0, 0, 269, 425, 0,
	0, 157, 429, 0, 0, 191, 0, 298, 0, 344,
	0, 0, 297, 241, 337, 0, 432, 343, 0, 327,
	351, 355, 208, 0, 182, 317, 200, 197, 0, 0,
	0, 216, 287, 194, 234, 0, 0, 0, 187, 0,
	0, 0, 316, 334, 159, 255, 335, 354, 174, 329,
	256, 262, 184, 186, 185, 170, 311, 333, 179, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	217, 0, 0, 348, 0, 307, 306, 0, 225, 0,
	0, 0, 294, 0, 232, 162, 0, 357, 173, 236,
	330, 0, 211, 268, 193, 0, 277, 0, 156, 290,
	252, 253, 251, 254, 214, 0, 0, 0, 442, 309,
	332, 175, 323, 418, 419, 420, 426, 427, 430, 431,
	434, 246, 204, 207, 219, 229, 0, 296, 324, 349,
	0, 171, 164, 326, 342, 180, 308, 310, 356, 0,
	166, 0, 0, 0, 0, 0, 0, 0, 165, 0,
	0, 0, 0, 0, 0, 213, 0, 340, 341, 192,
	358, 0, 0, 167, 0, 0, 265, 272, 264, 0,
	336, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	206, 221, 285, 243, 286, 222, 260, 259, 261, 244,
	0, 0, 163, 0, 321, 0, 0, 325, 177, 0,
	0, 331, 218, 291, 178, 212, 205, 284, 263, 172,
	224, 319, 235, 242, 0, 0, 276, 299, 181, 346,
	318, 201, 0, 0, 0, 0, 0, 0, 428, 328,
	422, 433, 416, 0, 0, 0, 0, 0, 0, 0,
	273, 0, 0, 408, 0, 0, 0, 0, 188, 199,
	0, 0, 423, 0, 0, 0, 0, 198, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 350, 320, 257, 0, 0, 281, 0,
	158, 168, 239, 0, 293, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 437, 0, 436, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 347, 196, 0, 288, 215,
	169, 176, 183, 195, 203, 209, 220, 223, 227, 228,
	230, 233, 245, 247, 248, 249, 250, 266, 267, 270,
	271, 274, 275, 278, 279, 280, 282, 283, 289, 424,
	295, 301, 302, 303, 304, 305, 312, 313, 314, 315,
	322, 338, 339, 352, 353, 0, 0, 155, 0, 0,
	161, 0, 0, 0, 0, 0, 0, 160, 0, 0,
	0, 0, 415, 414, 417, 0, 0, 0, 258, 0,
	0, 0, 421, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 154, 0, 0, 0, 269, 425,
	0, 0, 157, 429, 0, 0, 191, 0, 298, 0,
	344, 0, 0, 297, 241, 337, 0, 432, 343, 0,
	327, 351, 355, 208, 0, 182, 317, 200, 197, 0,
	0, 0, 216, 287, 194, 234, 0, 0, 0, 187,
	0, 0, 0, 316, 334, 159, 255, 335, 354, 174,
	329, 256, 262, 184, 186, 185, 170, 311, 333, 179,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 217, 0, 0, 348, 0, 307, 306, 0, 225,
	0, 0, 0, 294, 0, 232, 162, 0, 357, 173,
	236, 330, 0, 211, 268, 193, 0, 277, 0, 156,
	290, 252, 253, 251, 254, 214, 0, 0, 0, 411,
	309, 332, 175, 323, 418, 419, 420, 426, 427, 430,
	431, 434, 246, 204, 207, 219, 229, 0, 296, 324,
	349, 0, 171, 164, 326, 342, 180, 308, 310, 356,
	0, 166, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 0, 0, 213, 0, 340, 341,
	192, 358, 0, 0, 167, 0, 0, 265, 272, 264,
	0, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 206, 221, 285, 243, 286, 222, 260, 259, 261,
	244, 0, 0, 163, 0, 321, 0, 0, 325, 177,
	0, 0, 331, 218, 291, 178, 212, 205, 284, 263,
	172, 224, 319, 235, 242, 0, 0, 276, 299, 181,
	346, 318, 201, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 188,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 158, 168, 239, 0, 293, 210, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 347, 196, 0, 0,
	0, 169, 176, 183, 195, 203, 209, 220, 223, 227,
	228, 230, 233, 245, 247, 248, 249, 250, 266, 267,
	270, 271, 274, 275, 278, 279, 280, 282, 283, 289,
	424, 295, 301, 302, 303, 304, 305, 312, 313, 314,
	315, 322, 338, 339, 352, 353, 328, 0, 155, 0,
	0, 161, 0, 0, 0, 0, 0, 273, 160, 0,
	0, 0, 0, 0, 0, 0, 199, 0, 0, 0,
	0, 0, 0, 0, 198, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 0, 0,
	350, 320, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 929, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 0, 288, 215, 1161, 1160, 1170,
	1171, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1162, 0,
	0, 1172, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 154, 0, 0, 0, 269, 0, 0, 0, 157,
	0, 0, 0, 191, 0, 298, 0, 344, 0, 0,
	297, 241, 337, 0, 0, 343, 0, 327, 351, 355,
	208, 0, 182, 317, 200, 197, 0, 0, 0, 216,
	287, 194, 234, 0, 0, 0, 187, 0, 0, 0,
	316, 334, 159, 255, 335, 354, 174, 329, 256, 262,
	184, 186, 185, 170, 311, 333, 179, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 217, 0,
	0, 348, 0, 307, 306, 0, 225, 0, 0, 0,
	294, 0, 232, 162, 0, 357, 173, 236, 330, 0,
	211, 268, 193, 0, 277, 0, 156, 290, 252, 253,
	251, 254, 214, 0, 0, 0, 292, 309, 332, 175,
	323, 0, 0, 0, 0, 300, 0, 0, 0, 246,
	204, 207, 219, 229, 0, 296, 324, 349, 0, 171,
	164, 326, 342, 180, 308, 310, 356, 0, 166, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 0, 0,
	0, 0, 0, 213, 0, 340, 341, 192, 358, 0,
	0, 167, 0, 0, 265, 272, 264, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 206, 221,
	285, 243, 286, 222, 260, 259, 261, 244, 0, 0,
	163, 0, 321, 0, 0, 325, 177, 0, 0, 331,
	218, 291, 178, 212, 205, 284, 263, 172, 224, 319,
	235, 242, 0, 0, 276, 299, 181, 346, 318, 201,
	0, 0, 0, 0, 0, 0, 0, 328, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 2284, 0, 0, 188, 199, 0, 0,
	0, 0, 0, 0, 0, 198, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 350, 320, 257, 0, 0, 281, 0, 158, 168,
	239, 0, 293, 210, 2286, 2288, 0, 0, 0, 0,
	0, 0, 129, 0, 454, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 2282, 347, 196, 0, 288, 215, 169, 176,
	183, 195, 203, 209, 220, 223, 227, 228, 230, 233,
	245, 247, 248, 249, 250, 266, 267, 270, 271, 274,
	275, 278, 279, 280, 282, 283, 289, 0, 295, 301,
	302, 303, 304, 305, 312, 313, 314, 315, 322, 338,
	339, 352, 353, 0, 0, 155, 0, 0, 161, 0,
	0, 0, 0, 0, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 231, 0, 0, 2287, 0, 0, 0, 0, 0,
	238, 0, 154, 0, 0, 0, 269, 0, 0, 0,
	157, 0, 0, 0, 191, 0, 298, 0, 344, 0,
	0, 297, 241, 337, 0, 0, 343, 0, 327, 351,
	355, 208, 0, 182, 317, 200, 197, 0, 0, 0,
	216, 287, 194, 234, 0, 0, 0, 187, 0, 0,
	0, 316, 334, 159, 255, 335, 354, 174, 329, 256,
	262, 184, 186, 185, 170, 311, 333, 179, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 217,
	0, 0, 348, 0, 307, 306, 0, 225, 0, 0,
	0, 294, 0, 232, 162, 0, 357, 173, 236, 330,
	0, 211, 268, 193, 0, 277, 0, 156, 290, 252,
	253, 251, 254, 214, 0, 0, 0, 292, 309, 332,
	175, 323, 0, 0, 0, 0, 300, 0, 0, 0,
	246, 204, 207, 219, 229, 0, 296, 324, 349, 0,
	171, 164, 326, 342, 180, 308, 310, 356, 0, 166,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 0, 213, 0, 340, 341, 192, 358,
	0, 0, 167, 0, 0, 265, 272, 264, 0, 336,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 206,
	221, 285, 243, 286, 222, 260, 259, 261, 244, 0,
	0, 163, 0, 321, 0, 0, 325, 177, 0, 0,
	331, 218, 291, 178, 212, 205, 284, 263, 172, 224,
	319, 235, 242, 0, 0, 276, 299, 181, 346, 318,
	201, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 188, 131, 0,
	0, 0, 132, 0, 0, 133, 134, 0, 0, 0,
	0, 135, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 158,
	168, 239, 0, 293, 210, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 196, 0, 0, 0, 169,
	176, 183, 195, 203, 209, 220, 223, 227, 228, 230,
	233, 245, 247, 248, 249, 250, 266, 267, 270, 271,
	274, 275, 278, 279, 280, 282, 283, 289, 0, 295,
	301, 302, 303, 304, 305, 312, 313, 314, 315, 322,
	338, 339, 352, 353, 328, 0, 155, 0, 0, 161,
	0, 0, 0, 0, 0, 273, 160, 0, 0, 0,
	2284, 0, 0, 0, 199, 0, 0, 0, 0, 0,
	0, 0, 198, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 350, 320,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2286, 2288, 0, 0, 0, 0, 0, 0, 129,
	0, 454, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 0, 288, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 231, 0,
	0, 2287, 0, 0, 0, 0, 0, 238, 0, 154,
	0, 0, 0, 269, 0, 0, 0, 157, 0, 0,
	0, 191, 0, 298, 0, 344, 0, 0, 297, 241,
	337, 0, 0, 343, 0, 327, 351, 355, 208, 0,
	182, 317, 200, 197, 0, 0, 0, 216, 287, 194,
	234, 0, 0, 0, 187, 0, 0, 0, 316, 334,
	159, 255, 335, 354, 174, 329, 256, 262, 184, 186,
	185, 170, 311, 333, 179, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 217, 0, 0, 348,
	0, 307, 306, 0, 225, 0, 0, 0, 294, 0,
	232, 162, 0, 357, 173, 236, 330, 0, 211, 268,
	193, 0, 277, 0, 156, 290, 252, 253, 251, 254,
	214, 0, 0, 0, 292, 309, 332, 175, 323, 0,
	0, 0, 0, 300, 0, 0, 0, 246, 204, 207,
	219, 229, 0, 296, 324, 349, 0, 171, 164, 326,
	342, 180, 308, 310, 356, 0, 166, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 0, 0, 0, 0,
	0, 213, 0, 340, 341, 192, 358, 0, 0, 167,
	0, 0, 265, 272, 264, 0, 336, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 206, 221, 285, 243,
	286, 222, 260, 259, 261, 244, 0, 0, 163, 0,
	321, 0, 0, 325, 177, 0, 0, 331, 218, 291,
	178, 212, 205, 284, 263, 172, 224, 319, 235, 242,
	0, 0, 276, 299, 181, 346, 318, 201, 328, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 199, 0,
	0, 0, 0, 0, 188, 131, 198, 190, 0, 132,
	0, 0, 133, 134, 0, 0, 0, 0, 135, 240,
	0, 0, 350, 320, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 158, 168, 239, 0,
	293, 210, 0, 129, 0, 454, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 0, 288, 215, 0,
	0, 347, 196, 0, 0, 0, 169, 176, 183, 195,
	203, 209, 220, 223, 227, 228, 230, 233, 245, 247,
	248, 249, 250, 266, 267, 270, 271, 274, 275, 278,
	279, 280, 282, 283, 289, 0, 295, 301, 302, 303,
	304, 305, 312, 313, 314, 315, 322, 338, 339, 352,
	353, 0, 0, 155, 0, 0, 161, 0, 0, 0,
	0, 0, 0, 160, 0, 0, 0, 258, 0, 0,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 154, 0, 0, 0, 269, 0, 0,
	0, 157, 0, 0, 0, 191, 0, 298, 0, 344,
	0, 0, 297, 241, 337, 0, 0, 343, 0, 327,
	351, 355, 208, 0, 182, 317, 200, 197, 0, 0,
	0, 216, 287, 194, 234, 0, 0, 0, 187, 0,
	0, 0, 316, 334, 159, 255, 335, 354, 174, 329,
	256, 262, 184, 186, 185, 170, 311, 333, 179, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	217, 0, 0, 348, 0, 307, 306, 0, 225, 0,
	0, 0, 294, 0, 232, 162, 0, 357, 173, 236,
	330, 0, 211, 268, 193, 0, 277, 0, 156, 290,
	252, 253, 251, 254, 214, 0, 0, 0, 292, 309,
	332, 175, 323, 0, 0, 0, 0, 300, 0, 0,
	0, 246, 204, 207, 219, 229, 0, 296, 324, 349,
	0, 171, 164, 326, 342, 180, 308, 310, 356, 0,
	166, 0, 0, 0, 0, 0, 0, 0, 165, 0,
	0, 0, 0, 0, 0, 213, 0, 340, 341, 192,
	358, 0, 0, 167, 0, 0, 265, 272, 264, 0,
	336, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	206, 221, 285, 243, 286, 222, 260, 259, 261, 244,
	0, 0, 163, 0, 321, 0, 0, 325, 177, 0,
	0, 331, 218, 291, 178, 212, 205, 284, 263, 172,
	224, 319, 235, 242, 0, 0, 276, 299, 181, 346,
	318, 201, 328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 0, 0, 0, 3330, 0,
	0, 0, 199, 0, 0, 0, 0, 0, 188, 131,
	198, 190, 0, 132, 0, 0, 133, 134, 0, 0,
	0, 0, 135, 240, 0, 0, 350, 320, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	158, 168, 239, 0, 293, 210, 0, 129, 0, 454,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	0, 288, 215, 0, 0, 347, 196, 0, 0, 448,
	169, 176, 183, 195, 203, 209, 220, 223, 227, 228,
	230, 233, 245, 247, 248, 249, 250, 266, 267, 270,
	271, 274, 275, 278, 279, 280, 282, 283, 289, 0,
	295, 301, 302, 303, 304, 305, 312, 313, 314, 315,
	322, 338, 339, 352, 353, 0, 0, 155, 0, 0,
	161, 0, 0, 0, 0, 0, 0, 160, 0, 0,
	0, 258, 0, 0, 0, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 154, 0, 0,
	0, 269, 0, 0, 0, 157, 0, 0, 0, 191,
	0, 298, 0, 344, 0, 0, 297, 241, 337, 0,
	0, 343, 0, 327, 351, 355, 208, 0, 182, 317,
	200, 197, 0, 0, 0, 216, 287, 194, 234, 0,
	0, 0, 187, 0, 0, 0, 316, 334, 159, 255,
	335, 354, 174, 329, 256, 262, 184, 186, 185, 170,
	311, 333, 179, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 217, 0, 0, 348, 0, 307,
	306, 0, 225, 0, 0, 0, 294, 0, 232, 162,
	0, 357, 173, 236, 330, 0, 211, 268, 193, 0,
	277, 0, 156, 290, 252, 253, 251, 254, 214, 0,
	0, 0, 292, 309, 332, 175, 323, 0, 0, 0,
	0, 300, 0, 0, 0, 246, 204, 207, 219, 229,
	0, 296, 324, 349, 0, 171, 164, 326, 342, 180,
	308, 310, 356, 0, 166, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 0, 213,
	0, 340, 341, 192, 358, 0, 0, 167, 0, 0,
	265, 272, 264, 0, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 206, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 0, 0, 163, 0, 321, 0,
	0, 325, 177, 0, 0, 331, 218, 291, 178, 212,
	205, 284, 263, 172, 224, 319, 235, 242, 0, 0,
	276, 299, 181, 346, 318, 201, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 188, 131, 0, 0, 0, 132, 0, 0,
	133, 134, 0, 0, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 158, 168, 239, 0, 293, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	196, 0, 0, 0, 169, 176, 183, 195, 203, 209,
	220, 223, 227, 228, 230, 233, 245, 247, 248, 249,
	250, 266, 267, 270, 271, 274, 275, 278, 279, 280,
	282, 283, 289, 0, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 328,
	0, 155, 0, 0, 161, 0, 0, 0, 0, 0,
	273, 160, 0, 0, 0, 0, 0, 0, 0, 199,
	0, 0, 0, 0, 0, 2575, 0, 198, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 350, 320, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 129, 0, 454, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 0, 0, 0, 288, 215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 154, 0, 0, 0, 269, 0,
	0, 0, 157, 0, 0, 0, 191, 0, 298, 0,
	344, 0, 0, 297, 241, 337, 0, 0, 343, 0,
	327, 351, 355, 208, 0, 182, 317, 200, 197, 0,
	0, 0, 216, 287, 194, 234, 0, 0, 0, 187,
	0, 0, 0, 316, 334, 159, 255, 335, 354, 174,
	329, 256, 262, 184, 186, 185, 170, 311, 333, 179,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 217, 0, 0, 348, 0, 307, 306, 0, 225,
	0, 0, 0, 294, 0, 232, 162, 0, 357, 173,
	236, 330, 0, 211, 268, 193, 0, 277, 0, 156,
	290, 252, 253, 251, 254, 214, 0, 0, 0, 292,
	309, 332, 175, 323, 0, 0, 0, 0, 300, 0,
	0, 0, 246, 204, 207, 219, 229, 0, 296, 324,
	349, 0, 171, 164, 326, 342, 180, 308, 310, 356,
	0, 166, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 0, 0, 213, 0, 340, 341,
	192, 358, 0, 0, 167, 0, 0, 265, 272, 264,
	0, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 206, 221, 285, 243, 286, 222, 260, 259, 261,
	244, 0, 0, 163, 0, 321, 0, 0, 325, 177,
	0, 0, 331, 218, 291, 178, 212, 205, 284, 263,
	172, 224, 319, 235, 242, 0, 0, 276, 299, 181,
	346, 318, 201, 328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 199, 0, 0, 0, 0, 0, 188,
	131, 198, 190, 0, 132, 0, 0, 133, 134, 0,
	0, 0, 0, 135, 240, 0, 0, 350, 320, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 158, 168, 239, 0, 293, 210, 0, 129, 0,
	454, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 0, 0,
	0, 0, 288, 215, 0, 0, 347, 196, 0, 0,
	0, 169, 176, 183, 195, 203, 209, 220, 223, 227,
	228, 230, 233, 245, 247, 248, 249, 250, 266, 267,
	270, 271, 274, 275, 278, 279, 280, 282, 283, 289,
	0, 295, 301, 302, 303, 304, 305, 312, 313, 314,
	315, 322, 338, 339, 352, 353, 0, 0, 155, 0,
	0, 161, 0, 0, 0, 0, 0, 0, 160, 0,
	0, 0, 258, 0, 0, 0, 0, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 154, 0,
	0, 0, 269, 0, 0, 0, 157, 0, 0, 0,
	191, 0, 298, 0, 344, 0, 0, 297, 241, 337,
	0, 0, 343, 0, 327, 351, 355, 208, 0, 182,
	317, 200, 197, 0, 0, 0, 216, 287, 194, 234,
	0, 0, 0, 187, 0, 0, 0, 316, 334, 159,
	255, 335, 354, 174, 329, 256, 262, 184, 186, 185,
	170, 311, 333, 179, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 217, 0, 0, 348, 0,
	307, 306, 0, 225, 0, 0, 0, 294, 0, 232,
	162, 0, 357, 173, 236, 330, 0, 211, 268, 193,
	0, 277, 0, 156, 290, 252, 253, 251, 254, 214,
	0, 0, 0, 292, 309, 332, 175, 323, 0, 0,
	0, 0, 300, 0, 0, 0, 246, 204, 207, 219,
	229, 0, 296, 324, 349, 0, 171, 164, 326, 342,
	180, 308, 310, 356, 0, 166, 0, 0, 0, 0,
	0, 0, 0, 165, 0, 0, 0, 0, 0, 0,
	213, 0, 340, 341, 192, 358, 0, 0, 167, 0,
	0, 265, 272, 264, 0, 336, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 206, 221, 285, 243, 286,
	222, 260, 259, 261, 244, 0, 0, 163, 0, 321,
	0, 0, 325, 177, 0, 0, 331, 218, 291, 178,
	212, 205, 284, 263, 172, 224, 319, 235, 242, 328,
	0, 276, 299, 181, 346, 318, 201, 0, 0, 0,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 199,
	0, 0, 0, 0, 0, 0, 0, 198, 190, 0,
	0, 0, 0, 188, 131, 0, 0, 0, 132, 0,
	240, 133, 134, 350, 320, 257, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 929, 158, 168, 239, 0, 293,
	210, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 0, 0, 0, 288, 215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	347, 196, 0, 0, 0, 169, 176, 183, 195, 203,
	209, 220, 223, 227, 228, 230, 233, 245, 247, 248,
	249, 250, 266, 267, 270, 271, 274, 275, 278, 279,
	280, 282, 283, 289, 0, 295, 301, 302, 303, 304,
	305, 312, 313, 314, 315, 322, 338, 339, 352, 353,
	0, 0, 155, 0, 0, 161, 0, 0, 258, 0,
	0, 0, 160, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 154, 0, 0, 0, 269, 0,
	0, 0, 157, 0, 0, 0, 191, 0, 298, 0,
	344, 0, 0, 297, 241, 337, 0, 0, 343, 0,
	327, 351, 355, 208, 0, 182, 317, 200, 197, 0,
	0, 0, 216, 287, 194, 234, 0, 0, 0, 187,
	0, 0, 0, 316, 334, 159, 255, 335, 354, 174,
	329, 256, 262, 184, 186, 185, 170, 311, 333, 179,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 217, 0, 0, 348, 0, 307, 306, 0, 225,
	0, 0, 0, 294, 0, 232, 162, 0, 357, 173,
	236, 330, 0, 211, 268, 193, 0, 277, 0, 156,
	290, 252, 253, 251, 254, 214, 0, 0, 0, 292,
	309, 332, 175, 323, 0, 0, 0, 0, 300, 0,
	0, 0, 246, 204, 207, 219, 229, 0, 296, 324,
	349, 0, 171, 164, 326, 342, 180, 308, 310, 356,
	0, 166, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 0, 0, 213, 0, 340, 341,
	192, 358, 0, 0, 167, 0, 0, 265, 272, 264,
	0, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 206, 221, 285, 243, 286, 222, 260, 259, 261,
	244, 0, 0, 163, 0, 321, 0, 0, 325, 177,
	0, 0, 331, 218, 291, 178, 212, 205, 284, 263,
	172, 224, 319, 235, 242, 0, 0, 276, 299, 181,
	346, 318, 201, 328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 0, 0, 3291, 0, 0,
	0, 0, 0, 199, 3289, 0, 0, 0, 0, 188,
	131, 198, 190, 0, 132, 0, 0, 133, 134, 0,
	0, 0, 0, 135, 240, 0, 0, 350, 320, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 158, 168, 239, 0, 293, 210, 0, 437, 0,
	436, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 0, 0,
	0, 0, 288, 215, 0, 0, 347, 196, 0, 0,
	0, 169, 176, 183, 195, 203, 209, 220, 223, 227,
	228, 230, 233, 245, 247, 248, 249, 250, 266, 267,
	270, 271, 274, 275, 278, 279, 280, 282, 283, 289,
	0, 295, 301, 302, 303, 304, 305, 312, 313, 314,
	315, 322, 338, 339, 352, 353, 0, 0, 155, 0,
	0, 161, 0, 0, 0, 0, 0, 0, 160, 0,
	0, 0, 258, 0, 0, 0, 0, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 154, 0,
	0, 0, 269, 0, 0, 0, 157, 0, 0, 0,
	191, 0, 298, 0, 344, 0, 0, 297, 241, 337,
	0, 0, 343, 0, 327, 351, 355, 208, 0, 182,
	317, 200, 197, 0, 0, 0, 216, 287, 194, 234,
	0, 0, 0, 187, 0, 0, 0, 316, 334, 159,
	255, 335, 354, 174, 329, 256, 262, 184, 186, 185,
	170, 311, 333, 179, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 217, 0, 0, 348, 0,
	307, 306, 0, 225, 0, 3290, 0, 294, 0, 232,
	162, 0, 357, 173, 236, 330, 0, 211, 268, 193,
	0, 277, 0, 156, 290, 252, 253, 251, 254, 214,
	0, 0, 0, 292, 309, 332, 175, 323, 0, 0,
	0, 0, 300, 0, 0, 0, 246, 204, 207, 219,
	229, 0, 296, 324, 349, 0, 171, 164, 326, 342,
	180, 308, 310, 356, 0, 166, 0, 0, 0, 0,
	0, 0, 0, 165, 0, 0, 0, 0, 0, 0,
	213, 0, 340, 341, 192, 358, 0, 0, 167, 0,
	0, 265, 272, 264, 0, 336, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 206, 221, 285, 243, 286,
	222, 260, 259, 261, 244, 0, 0, 163, 0, 321,
	0, 0, 325, 177, 0, 0, 331, 218, 291, 178,
	212, 205, 284, 263, 172, 224, 319, 235, 242, 328,
	0, 276, 299, 181, 346, 318, 201, 0, 0, 0,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 199,
	0, 0, 0, 0, 0, 0, 0, 198, 190, 0,
	0, 0, 0, 188, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 350, 320, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 929, 158, 168, 239, 0, 293,
	210, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2392, 345, 0, 0, 0, 0, 288, 215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	347, 196, 0, 0, 0, 169, 176, 183, 195, 203,
	209, 220, 223, 227, 228, 230, 233, 245, 247, 248,
	249, 250, 266, 267, 270, 271, 274, 275, 278, 279,
	280, 282, 283, 289, 0, 295, 301, 302, 303, 304,
	305, 312, 313, 314, 315, 322, 338, 339, 352, 353,
	0, 0, 155, 0, 0, 161, 0, 0, 258, 0,
	0, 0, 160, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 154, 0, 0, 0, 269, 0,
	0, 0, 157, 0, 0, 0, 191, 0, 298, 0,
	344, 0, 0, 297, 241, 337, 0, 0, 343, 0,
	327, 351, 355, 208, 0, 182, 317, 200, 197, 0,
	0, 0, 216, 287, 194, 234, 2393, 2394, 0, 187,
	0, 0, 0, 316, 334, 159, 255, 335, 354, 174,
	329, 256, 262, 184, 186, 185, 170, 311, 333, 179,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 217, 0, 0, 348, 0, 307, 306, 0, 225,
	0, 0, 0, 294, 0, 232, 162, 0, 357, 173,
	236, 330, 0, 211, 268, 193, 0, 277, 0, 156,
	290, 252, 253, 251, 254, 214, 0, 0, 0, 292,
	309, 332, 175, 323, 0, 0, 0, 0, 300, 0,
	0, 0, 246, 204, 207, 219, 229, 0, 296, 324,
	349, 0, 171, 164, 326, 342, 180, 308, 310, 356,
	0, 166, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 0, 0, 213, 0, 340, 341,
	192, 358, 0, 0, 167, 0, 0, 265, 272, 264,
	0, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 206, 221, 285, 243, 286, 222, 260, 259, 261,
	244, 0, 0, 163, 0, 321, 0, 0, 325, 177,
	0, 0, 331, 218, 291, 178, 212, 205, 284, 263,
	172, 224, 319, 235, 242, 0, 0, 276, 299, 181,
	346, 318, 201, 328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 199, 0, 0, 0, 0, 0, 188,
	0, 198, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 350, 320, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 158, 168, 239, 0, 293, 210, 0, 437, 0,
	436, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 0, 0,
	0, 0, 288, 215, 0, 0, 347, 196, 0, 0,
	0, 169, 176, 183, 195, 203, 209, 220, 223, 227,
	228, 230, 233, 245, 247, 248, 249, 250, 266, 267,
	270, 271, 274, 275, 278, 279, 280, 282, 283, 289,
	0, 295, 301, 302, 303, 304, 305, 312, 313, 314,
	315, 322, 338, 339, 352, 353, 0, 0, 155, 0,
	0, 161, 0, 0, 0, 0, 0, 0, 160, 0,
	0, 0, 258, 0, 0, 0, 0, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 154, 0,
	0, 0, 269, 0, 0, 0, 157, 0, 0, 0,
	191, 0, 298, 0, 344, 0, 0, 297, 241, 337,
	0, 0, 343, 0, 327, 351, 355, 208, 0, 182,
	317, 200, 197, 0, 0, 0, 216, 287, 194, 234,
	0, 0, 0, 187, 0, 0, 0, 316, 334, 159,
	255, 335, 354, 174, 329, 256, 262, 184, 186, 185,
	170, 311, 333, 179, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 217, 0, 0, 348, 0,
	307, 306, 0, 225, 0, 0, 0, 294, 0, 232,
	162, 0, 357, 173, 236, 330, 0, 211, 268, 193,
	0, 277, 0, 156, 290, 252, 253, 251, 254, 214,
	0, 0, 0, 292, 309, 332, 175, 323, 0, 0,
	0, 0, 300, 0, 0, 0, 246, 204, 207, 219,
	229, 0, 296, 324, 349, 0, 171, 164, 326, 342,
	180, 308, 310, 356, 0, 166, 0, 0, 0, 0,
	0, 0, 0, 165, 0, 0, 0, 0, 0, 0,
	213, 0, 340, 341, 192, 358, 0, 0, 167, 0,
	0, 265, 272, 264, 0, 336, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 206, 221, 285, 243, 286,
	222, 260, 259, 261, 244, 0, 0, 163, 0, 321,
	0, 0, 325, 177, 0, 0, 331, 218, 291, 178,
	212, 205, 284, 263, 172, 224, 319, 235, 242, 0,
	0, 276, 299, 181, 346, 318, 201, 328, 0, 0,
	1716, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 199, 1291, 0,
	0, 0, 0, 188, 0, 198, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 350, 320, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 158, 168, 239, 0, 293,
	210, 0, 929, 0, 1290, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 0, 0, 0, 288, 215, 0, 0,
	347, 196, 0, 0, 0, 169, 176, 183, 195, 203,
	209, 220, 223, 227, 228, 230, 233, 245, 247, 248,
	249, 250, 266, 267, 270, 271, 274, 275, 278, 279,
	280, 282, 283, 289, 0, 295, 301, 302, 303, 304,
	305, 312, 313, 314, 315, 322, 338, 339, 352, 353,
	0, 0, 155, 0, 0, 161, 0, 0, 0, 0,
	0, 0, 160, 0, 0, 0, 258, 0, 0, 0,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 154, 0, 0, 0, 269, 0, 0, 0,
	157, 0, 0, 0, 191, 0, 298, 0, 344, 0,
	0, 297, 241, 337, 0, 0, 343, 0, 327, 351,
	355, 208, 0, 182, 317, 200, 197, 0, 0, 0,
	216, 287, 194, 234, 0, 0, 0, 187, 0, 0,
	0, 316, 334, 159, 255, 335, 354, 174, 329, 256,
	262, 184, 186, 185, 170, 311, 333, 179, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 217,
	0, 0, 348, 0, 307, 306, 0, 225, 0, 0,
	0, 294, 0, 232, 162, 0, 357, 173, 236, 330,
	0, 211, 268, 193, 0, 277, 0, 156, 290, 252,
	253, 251, 254, 214, 0, 0, 0, 292, 309, 332,
	175, 323, 0, 0, 0, 0, 300, 0, 0, 0,
	246, 204, 207, 219, 229, 0, 296, 324, 349, 0,
	171, 164, 326, 342, 180, 308, 310, 356, 0, 166,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 0, 213, 0, 340, 341, 192, 358,
	0, 0, 167, 0, 0, 265, 272, 264, 0, 336,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 206,
	221, 285, 243, 286, 222, 260, 259, 261, 244, 0,
	0, 163, 0, 321, 0, 0, 325, 177, 0, 0,
	331, 218, 291, 178, 212, 205, 284, 263, 172, 224,
	319, 235, 242, 0, 0, 276, 299, 181, 346, 318,
	201, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 199, 0, 0, 0, 0, 0, 188, 0, 198,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 350, 320, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 158,
	168, 239, 0, 293, 210, 0, 437, 0, 436, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 0, 0, 0,
	288, 215, 0, 0, 347, 196, 0, 0, 0, 169,
	176, 183, 195, 203, 209, 220, 223, 227, 228, 230,
	233, 245, 247, 248, 249, 250, 266, 267, 270, 271,
	274, 275, 278, 279, 280, 282, 283, 289, 0, 295,
	301, 302, 303, 304, 305, 312, 313, 314, 315, 322,
	338, 339, 352, 353, 0, 0, 155, 0, 0, 161,
	0, 0, 0, 0, 0, 0, 160, 0, 0, 0,
	258, 0, 0, 0, 0, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 154, 0, 0, 0,
	269, 0, 0, 0, 157, 0, 0, 0, 191, 0,
	298, 0, 344, 0, 0, 297, 241, 337, 0, 0,
	343, 0, 327, 351, 355, 208, 0, 182, 317, 200,
	197, 0, 0, 0, 216, 287, 194, 234, 0, 0,
	0, 187, 0, 0, 0, 316, 334, 159, 255, 335,
	354, 174, 329, 256, 262, 184, 186, 185, 170, 311,
	333, 179, 189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 226, 217, 0, 0, 348, 0, 307, 306,
	0, 225, 0, 0, 0, 294, 0, 232, 162, 0,
	357, 173, 236, 330, 0, 211, 268, 193, 0, 277,
	0, 156, 290, 252, 253, 251, 254, 214, 0, 0,
	0, 292, 309, 332, 175, 323, 0, 0, 0, 0,
	300, 0, 0, 0, 246, 204, 207, 219, 229, 0,
	296, 324, 349, 0, 171, 164, 326, 342, 180, 308,
	310, 356, 0, 166, 0, 0, 0, 0, 0, 0,
	0, 165, 0, 0, 0, 0, 0, 0, 213, 0,
	340, 341, 192, 358, 0, 0, 167, 0, 0, 265,
	272, 264, 0, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 206, 221, 285, 243, 286, 222, 260,
	259, 261, 244, 0, 0, 163, 0, 321, 0, 0,
	325, 177, 0, 0, 331, 218, 291, 178, 212, 205,
	284, 263, 172, 224, 319, 235, 242, 328, 0, 276,
	299, 181, 346, 318, 201, 0, 0, 0, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 199, 0, 0,
	0, 0, 0, 0, 0, 198, 190, 0, 0, 0,
	0, 188, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 350, 320, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2690, 0,
	0, 281, 2692, 158, 168, 239, 0, 293, 210, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 0, 0, 0, 288, 215, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 347, 196,
	0, 0, 0, 169, 176, 183, 195, 203, 209, 220,
	223, 227, 228, 230, 233, 245, 247, 248, 249, 250,
	266, 267, 270, 271, 274, 275, 278, 279, 280, 282,
	283, 289, 0, 295, 301, 302, 303, 304, 305, 312,
	313, 314, 315, 322, 338, 339, 352, 353, 0, 0,
	155, 0, 0, 161, 0, 0, 258, 0, 0, 0,
	160, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 154, 0, 0, 0, 269, 0, 0, 0,
	157, 0, 0, 0, 191, 0, 298, 0, 344, 0,
	0, 297, 241, 337, 0, 0, 343, 0, 327, 351,
	355, 208, 0, 182, 317, 200, 197, 0, 0, 0,
	216, 287, 194, 234, 0, 0, 0, 187, 0, 0,
	0, 316, 334, 159, 255, 335, 354, 174, 329, 256,
	262, 184, 186, 185, 170, 311, 333, 179, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 217,
	0, 0, 348, 0, 307, 306, 0, 225, 0, 0,
	0, 294, 0, 232, 162, 0, 357, 173, 236, 330,
	0, 211, 268, 193, 0, 277, 0, 156, 290, 252,
	253, 251, 254, 214, 0, 0, 0, 292, 309, 332,
	175, 323, 0, 0, 0, 0, 300, 0, 0, 0,
	246, 204, 207, 219, 229, 0, 296, 324, 349, 0,
	171, 164, 326, 342, 180, 308, 310, 356, 0, 166,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 0, 213, 0, 340, 341, 192, 358,
	0, 0, 167, 0, 0, 265, 272, 264, 0, 336,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 206,
	221, 285, 243, 286, 222, 260, 259, 261, 244, 0,
	0, 163, 0, 321, 0, 0, 325, 177, 0, 0,
	331, 218, 291, 178, 212, 205, 284, 263, 172, 224,
	319, 235, 242, 328, 0, 276, 299, 181, 346, 318,
	201, 0, 0, 0, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 199, 0, 0, 0, 0, 0, 0,
	0, 198, 190, 0, 0, 0, 0, 188, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 350, 320, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 929, 158,
	168, 239, 0, 293, 210, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 0, 0,
	0, 0, 288, 215, 0, 0, 0, 0, 0, 0,
	2676, 0, 0, 0, 347, 196, 0, 0, 0, 169,
	176, 183, 195, 203, 209, 220, 223, 227, 228, 230,
	233, 245, 247, 248, 249, 250, 266, 267, 270, 271,
	274, 275, 278, 279, 280, 282, 283, 289, 0, 295,
	301, 302, 303, 304, 305, 312, 313, 314, 315, 322,
	338, 339, 352, 353, 0, 0, 155, 0, 0, 161,
	0, 0, 258, 0, 0, 0, 160, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 154, 0,
	0, 0, 269, 0, 0, 0, 157, 0, 0, 0,
	191, 0, 298, 0, 344, 0, 0, 297, 241, 337,
	0, 0, 343, 0, 327, 351, 355, 208, 0, 182,
	317, 200, 197, 0, 0, 0, 216, 287, 194, 234,
	0, 0, 0, 187, 0, 0, 0, 316, 334, 159,
	255, 335, 354, 174, 329, 256, 262, 184, 186, 185,
	170, 311, 333, 179, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 217, 0, 0, 348, 0,
	307, 306, 0, 225, 0, 0, 0, 294, 0, 232,
	162, 0, 357, 173, 236, 330, 0, 211, 268, 193,
	0, 277, 0, 156, 290, 252, 253, 251, 254, 214,
	0, 0, 0, 292, 309, 332, 175, 323, 0, 0,
	0, 0, 300, 0, 0, 0, 246, 204, 207, 219,
	229, 0, 296, 324, 349, 0, 171, 164, 326, 342,
	180, 308, 310, 356, 0, 166, 0, 0, 0, 0,
	0, 0, 0, 165, 0, 0, 0, 0, 0, 0,
	213, 0, 340, 341, 192, 358, 0, 0, 167, 0,
	0, 265, 272, 264, 0, 336, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 206, 221, 285, 243, 286,
	222, 260, 259, 261, 244, 0, 0, 163, 0, 321,
	0, 0, 325, 177, 0, 0, 331, 218, 291, 178,
	212, 205, 284, 263, 172, 224, 319, 235, 242, 328,
	0, 276, 299, 181, 346, 318, 201, 0, 0, 0,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 199,
	0, 0, 0, 0, 0, 0, 0, 198, 190, 0,
	0, 0, 0, 188, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 350, 320, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	77, 0, 0, 281, 929, 158, 168, 239, 0, 293,
	210, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 0, 0, 0, 288, 215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	347, 196, 0, 0, 0, 169, 176, 183, 195, 203,
	209, 220, 223, 227, 228, 230, 233, 245, 247, 248,
	249, 250, 266, 267, 270, 271, 274, 275, 278, 279,
	280, 282, 283, 289, 0, 295, 301, 302, 303, 304,
	305, 312, 313, 314, 315, 322, 338, 339, 352, 353,
	0, 0, 155, 0, 0, 161, 0, 0, 258, 0,
	0, 0, 160, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 154, 0, 0, 0, 269, 0,
	0, 0, 157, 0, 0, 0, 191, 0, 298, 0,
	344, 0, 0, 297, 241, 337, 0, 0, 343, 0,
	327, 351, 355, 208, 0, 182, 317, 200, 197, 0,
	0, 0, 216, 287, 194, 234, 0, 0, 0, 187,
	0, 0, 0, 316, 334, 159, 255, 335, 354, 174,
	329, 256, 262, 184, 186, 185, 170, 311, 333, 179,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 217, 0, 0, 348, 0, 307, 306, 0, 225,
	0, 0, 0, 294, 0, 232, 162, 0, 357, 173,
	236, 330, 0, 211, 268, 193, 0, 277, 0, 156,
	290, 252, 253, 251, 254, 214, 0, 0, 0, 292,
	309, 332, 175, 323, 0, 0, 0, 0, 300, 0,
	0, 0, 246, 204, 207, 219, 229, 0, 296, 324,
	349, 0, 171, 164, 326, 342, 180, 308, 310, 356,
	0, 166, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 0, 0, 213, 0, 340, 341,
	192, 358, 0, 0, 167, 0, 0, 265, 272, 264,
	0, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 206, 221, 285, 243, 286, 222, 260, 259, 261,
	244, 0, 0, 163, 0, 321, 0, 0, 325, 177,
	0, 0, 331, 218, 291, 178, 212, 205, 284, 263,
	172, 224, 319, 235, 242, 328, 0, 276, 299, 181,
	346, 318, 201, 0, 0, 0, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 199, 0, 0, 0, 0,
	0, 0, 0, 198, 190, 0, 0, 0, 0, 188,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 350,
	320, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	929, 158, 168, 239, 0, 293, 210, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	0, 0, 0, 0, 288, 215, 0, 0, 0, 0,
	0, 0, 2126, 0, 0, 0, 347, 196, 0, 0,
	0, 169, 176, 183, 195, 203, 209, 220, 223, 227,
	228, 230, 233, 245, 247, 248, 249, 250, 266, 267,
	270, 271, 274, 275, 278, 279, 280, 282, 283, 289,
	0, 295, 301, 302, 303, 304, 305, 312, 313, 314,
	315, 322, 338, 339, 352, 353, 0, 0, 155, 0,
	0, 161, 0, 0, 258, 0, 0, 0, 160, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	154, 0, 0, 0, 269, 0, 0, 0, 157, 0,
	0, 0, 191, 0, 298, 0, 344, 0, 0, 297,
	241, 337, 0, 0, 343, 0, 327, 351, 355, 208,
	0, 182, 317, 200, 197, 0, 0, 0, 216, 287,
	194, 234, 0, 0, 0, 187, 0, 0, 0, 316,
	334, 159, 255, 335, 354, 174, 329, 256, 262, 184,
	186, 185, 170, 311, 333, 179, 189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 217, 0, 0,
	348, 0, 307, 306, 0, 225, 0, 0, 0, 294,
	0, 232, 162, 0, 357, 173, 236, 330, 0, 211,
	268, 193, 0, 277, 0, 156, 290, 252, 253, 251,
	254, 214, 0, 0, 0, 292, 309, 332, 175, 323,
	0, 0, 0, 0, 300, 0, 0, 0, 246, 204,
	207, 219, 229, 0, 296, 324, 349, 0, 171, 164,
	326, 342, 180, 308, 310, 356, 0, 166, 0, 0,
	0, 0, 0, 0, 0, 165, 0, 0, 0, 0,
	0, 0, 213, 0, 340, 341, 192, 358, 0, 0,
	167, 0, 0, 265, 272, 264, 0, 336, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 206, 221, 285,
	243, 286, 222, 260, 259, 261, 244, 0, 0, 163,
	0, 321, 0, 0, 325, 177, 0, 0, 331, 218,
	291, 178, 212, 205, 284, 263, 172, 224, 319, 235,
	242, 328, 0, 276, 299, 181, 346, 318, 201, 0,
	0, 0, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 199, 0, 0, 0, 0, 0, 0, 2163, 2164,
	190, 0, 0, 0, 0, 188, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 350, 320, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 929, 158, 168, 239,
	0, 293, 210, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 0, 0, 0,
	288, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 347, 196, 0, 0, 0, 169, 176, 183,
	195, 203, 209, 220, 223, 227, 228, 230, 233, 245,
	247, 248, 249, 250, 266, 267, 270, 271, 274, 275,
	278, 279, 280, 282, 283, 289, 0, 295, 301, 302,
	303, 304, 305, 312, 313, 314, 315, 322, 338, 339,
	352, 353, 0, 0, 155, 0, 0, 161, 0, 0,
	258, 0, 0, 0, 160, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 154, 0, 0, 0,
	269, 0, 0, 0, 157, 0, 0, 0, 191, 0,
	298, 0, 344, 0, 0, 297, 241, 337, 0, 0,
	343, 0, 327, 351, 355, 208, 0, 182, 317, 200,
	197, 0, 0, 0, 216, 287, 194, 234, 0, 0,
	0, 187, 0, 0, 0, 316, 334, 159, 255, 335,
	354, 174, 329, 256, 262, 184, 186, 185, 170, 311,
	333, 179, 189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 226, 217, 0, 0, 348, 0, 307, 306,
	0, 225, 0, 0, 0, 294, 0, 232, 162, 0,
	357, 173, 236, 330, 0, 211, 268, 193, 0, 277,
	0, 156, 290, 252, 253, 251, 254, 214, 0, 0,
	0, 292, 309, 332, 175, 323, 0, 0, 0, 0,
	300, 0, 0, 0, 246, 204, 207, 219, 229, 0,
	296, 324, 349, 0, 171, 164, 326, 342, 180, 308,
	310, 356, 0, 166, 0, 0, 0, 0, 0, 0,
	0, 165, 0, 0, 0, 0, 0, 0, 213, 0,
	340, 341, 192, 358, 0, 0, 167, 0, 0, 265,
	272, 264, 0, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 206, 221, 285, 243, 286, 222, 260,
	259, 261, 244, 0, 0, 163, 0, 321, 0, 0,
	325, 177, 0, 0, 331, 218, 291, 178, 212, 205,
	284, 263, 172, 224, 319, 235, 242, 328, 0, 276,
	299, 181, 346, 318, 201, 0, 0, 0, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 199, 0, 0,
	0, 0, 0, 0, 0, 198, 190, 0, 0, 0,
	0, 188, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 350, 320, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 929, 158, 168, 239, 0, 293, 210, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 0, 0, 0, 288, 215, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 347, 196,
	0, 0, 0, 169, 176, 183, 195, 203, 209, 220,
	223, 227, 228, 230, 233, 245, 247, 248, 249, 250,
	266, 267, 270, 271, 274, 275, 278, 279, 280, 282,
	283, 289, 0, 295, 301, 302, 303, 304, 305, 312,
	313, 314, 315, 322, 338, 339, 352, 353, 0, 0,
	155, 0, 0, 161, 0, 0, 258, 0, 0, 0,
	160, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 154, 0, 0, 0, 269, 0, 0, 0,
	157, 0, 0, 0, 191, 0, 298, 0, 344, 0,
	0, 297, 241, 337, 0, 0, 343, 0, 327, 351,
	355, 208, 0, 182, 317, 200, 197, 0, 0, 0,
	216, 287, 194, 234, 0, 0, 0, 187, 0, 0,
	0, 316, 334, 159, 255, 335, 354, 174, 329, 256,
	262, 184, 186, 185, 170, 311, 333, 179, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 217,
	0, 0, 348, 0, 307, 306, 0, 225, 0, 0,
	0, 294, 0, 232, 162, 0, 357, 173, 236, 330,
	0, 211, 268, 193, 0, 277, 0, 156, 290, 252,
	253, 251, 254, 214, 0, 0, 0, 292, 309, 332,
	175, 323, 0, 0, 0, 0, 300, 0, 0, 0,
	246, 204, 207, 219, 229, 0, 296, 324, 349, 0,
	171, 164, 326, 342, 180, 308, 310, 356, 0, 166,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 0, 213, 0, 340, 341, 192, 358,
	0, 0, 167, 0, 0, 265, 272, 264, 0, 336,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 206,
	221, 285, 243, 286, 222, 260, 259, 261, 244, 0,
	0, 163, 0, 321, 0, 0, 325, 177, 0, 0,
	331, 218, 291, 178, 212, 205, 284, 263, 172, 224,
	319, 235, 242, 328, 0, 276, 299, 181, 346, 318,
	201, 0, 0, 0, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 199, 0, 0, 0, 0, 0, 0,
	0, 198, 190, 0, 0, 0, 0, 188, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 350, 320, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 2692, 158,
	168, 239, 0, 293, 210, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 0, 0,
	0, 0, 288, 215, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 196, 0, 0, 0, 169,
	176, 183, 195, 203, 209, 220, 223, 227, 228, 230,
	233, 245, 247, 248, 249, 250, 266, 267, 270, 271,
	274, 275, 278, 279, 280, 282, 283, 289, 0, 295,
	301, 302, 303, 304, 305, 312, 313, 314, 315, 322,
	338, 339, 352, 353, 0, 0, 155, 0, 0, 161,
	0, 0, 258, 0, 0, 0, 160, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 154, 0,
	0, 0, 269, 0, 0, 0, 157, 0, 0, 0,
	191, 0, 298, 0, 344, 0, 0, 297, 241, 337,
	0, 0, 343, 0, 327, 351, 355, 208, 0, 182,
	317, 200, 197, 0, 0, 0, 216, 287, 194, 234,
	0, 0, 0, 187, 0, 0, 0, 316, 334, 159,
	255, 335, 354, 174, 329, 256, 262, 184, 186, 185,
	170, 311, 333, 179, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 217, 0, 0, 348, 0,
	307, 306, 0, 225, 0, 0, 0, 294, 0, 232,
	162, 0, 357, 173, 236, 330, 0, 211, 268, 193,
	0, 277, 0, 156, 290, 252, 253, 251, 254, 214,
	0, 0, 0, 292, 309, 332, 175, 323, 0, 0,
	0, 0, 300, 0, 0, 0, 246, 204, 207, 219,
	229, 0, 296, 324, 349, 0, 171, 164, 326, 342,
	180, 308, 310, 356, 0, 166, 0, 0, 0, 0,
	0, 0, 0, 165, 0, 0, 0, 0, 0, 0,
	213, 0, 340, 341, 192, 358, 0, 0, 167, 0,
	0, 265, 272, 264, 0, 336, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 206, 221, 285, 243, 286,
	222, 260, 259, 261, 244, 0, 0, 163, 0, 321,
	0, 0, 325, 177, 0, 0, 331, 218, 291, 178,
	212, 205, 284, 263, 172, 224, 319, 235, 242, 328,
	0, 276, 299, 181, 346, 318, 201, 0, 0, 0,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 199,
	0, 0, 0, 0, 0, 0, 0, 198, 190, 0,
	0, 0, 0, 188, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 350, 320, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 129, 158, 168, 239, 0, 293,
	210, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 0, 0, 0, 288, 215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	347, 196, 0, 0, 0, 169, 176, 183, 195, 203,
	209, 220, 223, 227, 228, 230, 233, 245, 247, 248,
	249, 250, 266, 267, 270, 271, 274, 275, 278, 279,
	280, 282, 283, 289, 0, 295, 301, 302, 303, 304,
	305, 312, 313, 314, 315, 322, 338, 339, 352, 353,
	0, 0, 155, 0, 0, 161, 0, 0, 258, 0,
	0, 0, 160, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 154, 0, 0, 0, 269, 0,
	0, 0, 157, 0, 0, 0, 191, 0, 298, 0,
	344, 0, 0, 297, 241, 337, 0, 0, 343, 0,
	327, 351, 355, 208, 0, 182, 317, 200, 197, 0,
	0, 0, 216, 287, 194, 234, 0, 0, 0, 187,
	0, 0, 0, 316, 334, 159, 255, 335, 354, 174,
	329, 256, 262, 184, 186, 185, 170, 311, 333, 179,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 217, 0, 0, 348, 0, 307, 306, 0, 225,
	0, 0, 0, 294, 0, 232, 162, 0, 357, 173,
	236, 330, 0, 211, 268, 193, 0, 277, 0, 156,
	290, 252, 253, 251, 254, 214, 0, 0, 0, 292,
	309, 332, 175, 323, 0, 0, 0, 0, 300, 0,
	0, 0, 246, 204, 207, 219, 229, 0, 296, 324,
	349, 0, 171, 164, 326, 342, 180, 308, 310, 356,
	0, 166, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 0, 0, 213, 0, 340, 341,
	192, 358, 0, 0, 167, 0, 0, 265, 272, 264,
	0, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 206, 221, 285, 243, 286, 222, 260, 259, 261,
	244, 0, 0, 163, 0, 321, 0, 0, 325, 177,
	0, 0, 331, 218, 291, 178, 212, 205, 284, 263,
	172, 224, 319, 235, 242, 328, 0, 276, 299, 181,
	346, 318, 201, 0, 0, 0, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 199, 0, 0, 0, 0,
	0, 0, 0, 198, 190, 0, 0, 0, 0, 188,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 350,
	320, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	478, 158, 168, 239, 0, 293, 210, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	0, 0, 0, 0, 288, 215, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 347, 196, 0, 0,
	0, 169, 176, 183, 195, 203, 209, 220, 223, 227,
	228, 230, 233, 245, 247, 248, 249, 250, 266, 267,
	270, 271, 274, 275, 278, 279, 280, 282, 283, 289,
	0, 295, 301, 302, 303, 304, 305, 312, 313, 314,
	315, 322, 338, 339, 352, 353, 0, 0, 155, 0,
	0, 161, 0, 0, 258, 0, 0, 0, 160, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	154, 0, 0, 0, 269, 0, 0, 0, 157, 0,
	0, 0, 191, 0, 298, 0, 344, 0, 0, 297,
	241, 337, 0, 0, 343, 0, 327, 351, 355, 208,
	0, 182, 317, 200, 197, 0, 0, 0, 216, 287,
	194, 234, 0, 0, 0, 187, 0, 0, 0, 316,
	334, 159, 255, 335, 354, 174, 329, 256, 262, 184,
	186, 185, 170, 311, 333, 179, 189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 217, 0, 0,
	348, 0, 307, 306, 0, 225, 0, 0, 0, 294,
	0, 232, 162, 0, 357, 173, 236, 330, 0, 211,
	268, 193, 0, 277, 0, 156, 290, 252, 253, 251,
	254, 214, 0, 0, 0, 292, 309, 332, 175, 323,
	0, 0, 0, 0, 300, 0, 0, 0, 246, 204,
	207, 219, 229, 0, 296, 324, 349, 0, 171, 164,
	326, 342, 180, 308, 310, 356, 0, 166, 0, 0,
	0, 0, 0, 0, 0, 165, 0, 0, 0, 0,
	0, 0, 213, 0, 340, 341, 192, 358, 0, 0,
	167, 0, 0, 265, 272, 264, 0, 336, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 206, 221, 285,
	243, 286, 222, 260, 259, 261, 244, 0, 0, 163,
	0, 321, 0, 0, 325, 177, 0, 0, 331, 218,
	291, 178, 212, 205, 284, 263, 172, 224, 319, 235,
	242, 0, 0, 276, 299, 181, 346, 318, 201, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 188, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 158, 168, 239,
	0, 293, 210, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 347, 196, 0, 0, 0, 169, 176, 183,
	195, 203, 209, 220, 223, 227, 228, 230, 233, 245,
	247, 248, 249, 250, 266, 267, 270, 271, 274, 275,
	278, 279, 280, 282, 283, 289, 0, 295, 301, 302,
	303, 304, 305, 312, 313, 314, 315, 322, 338, 339,
	352, 353, 0, 0, 155, 0, 0, 161, 0, 0,
	0, 0, 0, 0, 160,
}

var yyPact = [...]int{
	1555, -1000, -430, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1946, -1000, -1000, 291, -1000,
	1108, 737, -1000, 260, 124, 30813, 702, 1454, 41582, -1000,
	-1000, -1000, 168, 524, 31237, 463, 478, 1464, 1839, 1463,
	13, -91, -92, 130, 32262, 31831, -10, -1000, 34291, 597,
	19, -1000, -1000, -1000, -1000, 2006, 207, -1000, -1000, 1929,
	1942, 1757, -1000, 7046, -1000, -1000, -1000, -1000, -1000, 20378,
	-1000, 2003, 31237, 26667, -1000, 666, 645, -201, 590, 590,
	312, 590, 590, 683, -1000, 268, 1088, -1000, -1000, -1000,
	-1000, 1080, 31237, 38254, 591, 40750, 591, 591, 591, 591,
	591, 591, 591, 31237, -1000, 810, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 31237,
	1462, 1869, 1109, 238, -1000, -1000, -1000, 1104, -1000, 324,
	315, 401, 310, 76, 1113, 1926, -1000, 1677, 1929, 1929,
	-1000, -1000, -1000, -1000, -1000, -1000, 893, 288, 643, 209,
	207, 1079, 1903, 1864, 1863, 1333, 1862, 621, 1860, 1706,
	-62, -1000, 1461, 31237, -1000, -1000, 1302, 1298, 373, 1571,
	727, 1726, -1000, -1000, 304, 495, 1697, 438, 1697, 1697,
	1697, 1697, 1697, -93, 1697, 1697, 1697, 54, 1697, 133,
	1697, 1697, 1697, 1697, 1697, 1455, -1000, -1000, -1000, 346,
	1569, 1637, 1725, 516, -1000, -1000, -1000, 1715, 35726, 1659,
	-1000, 1677, -1000, -1000, -1000, 681, -1000, -128, 1715, 1916,
	1479, -1000, 34291, 1865, 1223, 13106, 1800, -1000, -1000, 1197,
	1980, -1000, 26243, 807, -1000, 13106, 3797, 1677, -1000, -1000,
	1677, -1000, 751, 855, -1000, 739, -1000, -1000, -1000, 12500,
	12500, 12500, 12500, 12500, 12500, 12500, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1677, 801, 799, 1677, 1677, 1677, 1677, 1677,
	-1000, 11288, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1677, 1677, 1677, 1677, 1677, 1677,
	1677, 1677, 1677, 1677, 1677, 1677, 1677, 1677, 13106, 1677,
	1677, 1677, 1677, 1677, 1677, 1677, 1677, 1677, 1677, 1677,
	1677, 1677, 1677, 1677, 1677, 1677, 1677, 1677, 1677, 1677,
	1677, 1677, 1677, 1677, 1677, 1677, 1677, 1677, 1677, 1677,
	1677, 1677, 1677, 1677, 1677, 1677, 1677, 1677, 1677, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	597, 597, 30389, 1674, -157, 19772, -1000, -1000, -1000, -1000,
	18560, 37830, 1075, -1000, -1000, -1000, -1000, 1859, -1000, -1000,
	797, 751, 744, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1946, -1000, -1000, 1541,
	557, -1000, 4785, 4785, 4785, 4785, 4785, 275, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1704, 40750, 31237,
	287, 1460, 1138, 1459, 41998, 41998, -1000, 231, 38254, 38254,
	590, 252, 38254, 214, 1671, 639, 1665, 635, 1444, 31237,
	1890, 1724, 31237, 1456, 1451, 41998, 41998, 38254, 38254, -1000,
	25226, 1664, -1000, -1000, 1109, -1000, 5530, 13106, 590, 590,
	31237, 31237, 31237, 31237, 31237, -1000, -1000, 1109, 1109, 1109,
	1109, 1091, 1979, 1091, -1000, 1091, -1000, -1000, 13106, -1000,
	12500, 37406, 932, -1000, -1000, 41582, -1000, 1448, 279, -1000,
	-1000, -1000, -1000, -1000, -1000, 1442, -1000, 1843, 621, 621,
	-1000, 1386, 621, 1650, -1000, 1074, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 621, -1000,
	11894, -408, -1000, -1000, 1663, -1000, 249, -1000, -1000, 518,
	1723, 518, 314, 38254, 38254, 38254, -1000, 1697, 40750, -1000,
	1697, 1697, 1697, -95, 1697, 1697, -1000, -1000, 1697, -1000,
	-1000, -1000, -1000, -1000, 1697, -1000, -1000, -1000, 1697, 1697,
	-1000, 1697, 1697, -1000, -1000, -1000, -1000, -1000, 38254, 518,
	151, 1662, 518, 38254, 38254, -1000, 41, 40, 39, 38,
	-1000, -1000, -1000, -1000, 36, 35, -1000, -1000, -1000, 1659,
	35726, 1910, 15530, 31237, -127, -1000, -1000, 207, -1000, -1000,
	-1000, -1000, 1715, 1173, 1999, 948, 1634, -1000, -1000, 1658,
	-1000, 1157, 793, 1283, 1777, -1000, -1000, -1000, 31237, -1000,
	13106, 13106, 13106, 1280, -1000, 27091, -1000, -1000, -1000, -1000,
	-1000, -1000, 16742, 1007, 12500, 1214, 1024, 12500, 12500, 12500,
	12500, 12500, 12500, 12500, 12500, 12500, 12500, 12500, 12500, 12500,
	12500, 12500, 1277, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1437, -1000, 207, 24014, 8258, 24014, 1339, 1339, 864,
	864, 864, 864, 864, 864, 32849, 1907, 24014, 24014, 1907,
	1907, 1907, 1907, 1907, 1479, 1539, 1215, 34291, 11288, 8258,
	8258, 8258, 1479, 13106, 13106, 8258, 8258, 10682, 10076, 14318,
	8258, 8258, 1907, 1040, 1215, 18560, 8258, -1000, -1000, 9470,
	-1000, -1000, -1000, -1000, -1000, 1479, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 40750, 40750, 8258, 8258, 8258, 8258,
	1479, 1479, 8258, 8258, 8258, 8258, 8258, 1479, 1479, 1479,
	1479, 8258, 8258, 8258, 8258, 8258, 8258, 8258, 8258, 8258,
	8258, 8258, 8258, 29965, 29117, 31237, 1638, 1592, -1000, 788,
	19166, 1595, -1000, -146, -143, -157, -1000, -1000, 873, -1000,
	-1000, -1000, 8864, -1000, 17348, 1929, 1757, 21590, 25819, -1000,
	-1000, -69, -1000, -1000, -1000, 1687, -1000, 1687, 284, -16,
	1687, 1687, 1687, 1687, 1687, -35, -35, -35, -35, -15,
	-1000, -1000, -1000, -1000, -1000, 1703, 1702, -1000, 1687, 1687,
	1687, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1695, 299, 1691, 1691, 1691, 1691, 1691, -1000, -1000, -1000,
	-1000, 519, 519, 519, -1000, 13106, 1572, 1909, 628, 252,
	1879, 1889, 1879, 480, -1000, 780, 1701, -1000, 779, 305,
	1673, -1000, 155, 1428, 29541, -1000, -1000, -1000, -1000, -1000,
	31237, 31237, 38254, 38254, 38254, 687, -1000, 31237, 1651, -1000,
	-1000, -1000, -1000, -1000, 1582, -1000, 1428, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 31237, -1000, -1000, 1385, 1215, 1434, 1429, 1903, -1000,
	-1000, -1000, 1093, -1000, -1000, -1000, -1000, 1109, 41582, 41582,
	31237, 1903, 1109, 1215, 782, 1708, 1677, 1479, -1000, -1000,
	-1000, 1427, -1000, 12500, 1650, 1650, -1000, 1650, 621, 1339,
	1650, -1000, 1532, 1167, 1376, 31237, -1000, 35726, -66, -1000,
	-150, 39918, -1000, -1000, -1000, 518, 39918, -1000, 54, 139,
	-1000, 630, -1000, 1530, -1000, -1000, -1000, -1000, 1697, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 39918, 115,
	146, 39918, 1582, 1978, -1000, -1000, -1000, -1000, 1925, -1000,
	-1000, 1677, 1509, -1000, 778, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 581, -1000, -1000, 1479, -1000,
	40334, -1000, 1762, 1223, 1223, 13106, -1000, -1000, -1000, 17348,
	1928, -1000, 1786, 1785, 1744, -1000, -1000, 1007, 1161, 1030,
	-1000, -1000, 1189, -1000, -1000, -1000, -1000, -1000, 777, 1677,
	-1000, -1000, -1000, -1000, -1000, 4469, -1000, -1000, -1000, -1000,
	1214, 12500, 12500, 12500, 782, 4469, 4399, 1274, 914, 864,
	888, 888, 961, 961, 961, 961, 961, 1112, 1112, -1000,
	-1000, -1000, 1479, -1000, 1528, -1000, -1000, 1215, 775, -1000,
	-1000, -1000, -1000, -1000, 8258, -1000, -1000, 8258, 8258, 8258,
	8258, 8258, -1000, 13106, -1000, 1479, 1528, 1528, 1528, -1000,
	1055, 1255, 1443, 1528, 905, 1977, 1528, 887, 1976, 1528,
	1548, 12500, 12500, 12500, 1528, 1528, 8258, 1131, -1000, 13106,
	1479, 1528, -1000, 1878, 1649, 1644, 1528, 1479, 1614, 1528,
	1528, -218, -218, 1479, 1528, 1479, 1528, 1528, -218, -218,
	-218, -218, 1528, 1528, 1528, 1528, 1528, 1528, 1528, 1528,
	1528, 1528, 1528, 1528, 982, 31237, -1000, 1631, 1652, -1000,
	-1000, -1000, 1908, 28530, -1000, -1000, 33280, -1000, 1677, 1677,
	982, 1559, 29117, -1000, -1000, 29117, 41582, 23408, -1000, 18560,
	-157, -96, -1000, -1000, 1595, -1000, 1300, -1000, -1000, 1215,
	-1000, 774, 1865, 1907, 1594, 20984, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 557, -1000, -1000, -1000, 1696, 265, -1000,
	1807, 796, 796, 821, 1401, 1806, -1000, -1000, 154, -77,
	-1000, -1000, -1000, 1295, -35, -35, 1687, 1687, 277, 1687,
	-1000, -35, -1000, -1000, -1000, 949, 1858, 946, 940, 920,
	918, -35, 1375, 1375, -1000, -1000, -1000, -1000, 1294, -1000,
	1695, -1000, 1285, -1000, -1000, -1000, -1000, 154, 154, 154,
	154, -1000, -1000, -1000, 1101, 1722, 40750, -1000, 31237, -1000,
	1879, -1000, -1000, -1000, 114, -1000, -1000, -1000, 1959, -1000,
	-1000, 40750, 36982, 40750, -1000, -1000, 60, 38254, 159, 339,
	191, -1000, -1000, 625, -1000, 622, -1000, -1000, -1000, -1000,
	-1000, -1000, 31237, 38254, -1000, -1000, -1000, -1000, -1000, 1953,
	1426, 1422, -1000, -1000, -1000, 1091, 1109, -1000, -1000, 12500,
	38254, -1000, 397, -1000, 4469, -1000, -1000, -1000, 982, 668,
	-1000, -1000, -116, -1000, -1000, 619, 773, 772, 39918, 612,
	-1000, 82, 38254, -1000, 40750, -1000, 1975, 1974, 112, 1972,
	38254, -1000, 24, -1000, 226, -1000, 24014, 24014, 1589, -1000,
	729, 742, 798, 551, 551, -1000, 1036, 551, 1850, 1849,
	980, -1000, 1588, 1374, 1367, -1000, 1760, -1000, -1000, -1000,
	31237, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	22802, 8258, -1000, 782, 4469, 4376, -1000, 12500, -1000, 8258,
	-1000, 16136, 1479, 1528, 1528, 1528, 1528, 1528, 1215, -1000,
	-1000, -1000, -1000, 431, 1277, 431, -1000, 1277, -1000, 12500,
	12500, -1000, 12500, 12500, -1000, -1000, 12500, 4173, 4143, 4105,
	-265, -1000, 1617, 1100, -1000, 13106, 1200, -1000, -1000, -1000,
	12500, 12500, -1000, -1000, -1000, -1000, -1000, 39502, -1000, -218,
	-218, -218, -218, -218, -1000, -1000, -1000, -1000, -218, -218,
	-218, -218, -218, -218, -218, -218, -218, -218, -218, -218,
	212, 1677, -1000, 17954, 29117, 29117, 29117, 29117, 29117, -1000,
	1753, 1752, -1000, 1742, 1739, 1746, 35726, 1526, 1479, 296,
	28530, -1000, 1677, -1000, 35302, 718, 665, 654, 652, 8258,
	12500, 1953, 29117, 1610, 1610, -1000, 765, -1000, -1000, -1000,
	-145, -185, -1000, -1000, -1000, 24014, -1000, 21590, -1000, 21590,
	-1000, 36142, 564, 1809, 571, 1401, 1401, 1401, -1000, 1401,
	-1000, -1000, -1000, 1692, -1000, 1178, -1000, -1000, -1000, -1000,
	-1000, 1677, -420, 1273, 12500, 1985, -1000, 1801, -1000, 1797,
	1794, 1365, -1000, -1000, 1554, 916, 895, -35, -1000, -1000,
	1687, -1000, 892, -1000, -1000, 938, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 890, 1524, -1000, 1521, 1586, -1000,
	1519, 98, 31237, -1000, -1000, 1904, -1000, -1000, -1000, 1856,
	1036, 1036, 1036, 1720, -1000, -1000, -1000, -1000, 1542, 1585,
	-1000, 4785, 40750, 40750, 40750, -1000, -280, 176, -1000, 38254,
	128, 155, 418, 1421, 31237, 38254, -1000, -1000, -1000, 13106,
	-1000, -1000, 1903, -1000, 4469, 1428, -1000, -1000, -35, 31237,
	-1000, 38254, 921, 39086, 607, 38254, 106, 132, -1000, 38254,
	38254, 1968, 38254, 1582, 1364, 764, -1000, 581, 38670, 1401,
	746, -1000, -1000, 574, -1000, 213, 1418, 27939, 27515, 40750,
	1793, 1792, 1408, 31237, 40750, -1000, -1000, 41166, 1407, 13106,
	-1000, 40750, -1000, -1000, 40750, 40750, -1000, -1000, -1000, -1000,
	1179, 7046, -1000, -1000, 1479, -1000, 12500, 4469, -1000, -1000,
	754, -1000, -218, -218, -218, -218, -218, 1479, 1687, 1687,
	-1000, 1687, 1691, -1000, 1687, -8, 1687, -12, 1479, 1479,
	1479, 4019, 3721, 3590, 3520, 1878, 12500, 12500, 12500, 1677,
	-213, -1000, 1215, 13106, 3376, 2548, -1000, -1000, 1406, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1719, 17954, 1677,
	14924, -1000, 40750, 1613, -1000, 1067, 1047, 1042, 1041, 751,
	744, -1000, -1000, -1000, -1000, -1000, 1652, 1690, 1718, 1425,
	-1000, -1000, -1000, -1000, 1751, -1000, 1750, -1000, -1000, 1681,
	-1000, -1000, 1584, 1677, 40750, 12500, 718, -1000, 1677, 1677,
	1677, 1479, 2123, 1946, 1610, -1000, -1000, 907, -1000, -1000,
	-1000, 20984, -1000, 1513, -1000, 1687, 1687, 1791, -1000, 796,
	-1000, -1000, -1000, -1000, -1000, 40750, -1000, 12500, 1902, -1000,
	4469, -147, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 876, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -35,
	1363, -35, 1260, -1000, 1257, -1000, -1000, -363, 1686, 207,
	-1000, 1036, 935, 929, 1362, 31237, 135, 36982, -1000, 4785,
	4785, 4785, 87, 83, -1000, 1152, -1000, -1000, -1000, 1360,
	1358, 1349, 1428, 163, 1142, 136, -1000, 1895, -1000, -1000,
	1215, 1109, -104, -1000, 132, -1000, -1000, -1000, 38254, 132,
	-1000, -1000, 145, 1582, 1582, 38254, 1582, -1000, 24014, -1000,
	41166, 542, 4785, 4785, 1572, 796, 1790, 571, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1403, -1000, 770, -1000, 602, 542, 41166, 1215, 865, 1166,
	-1000, 1965, -1000, -1000, -1000, 4469, 22196, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 271, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 12500, 12500, 12500, 12500, -1000, 1878,
	1878, 1878, 12500, 1479, 1345, 1215, 12500, 12500, 958, -1000,
	-1000, 1885, 1551, 1577, -1000, -1000, 7652, 1479, 1782, 1509,
	-1000, 34291, 1504, -1000, 1946, 17954, 13106, 13106, 13106, 13106,
	-1000, -1000, 13106, 1684, -1000, 13106, -1000, -1000, -1000, -1000,
	40750, 293, -1000, 13106, 1504, 1031, -1000, 40750, 40750, 40750,
	-1000, 1344, 1929, -1000, 722, 36142, 1884, 1884, 1401, 1401,
	1502, -1000, 1878, 1677, -1000, 1677, 1677, 1677, 1677, 1677,
	1677, 1677, 1677, 1677, 1677, 1677, -1000, -1000, 871, -1000,
	861, 1534, 1510, -1000, 36142, -1000, -1000, 926, -1000, -1000,
	-1000, -1000, -1000, 1924, -1000, 135, -1000, 1337, 235, 233,
	-1000, 230, 227, 210, 208, 203, -1000, -1000, -1000, -1000,
	386, 87, -1000, -97, 1243, 1035, 1848, 83, -1000, 1242,
	1234, 1231, 1212, 202, -1000, -1000, -1000, -1000, 190, 155,
	-1000, 409, 1336, -1000, 1826, 1821, 1900, 132, 1900, 103,
	1582, -1000, 1490, -1000, -1000, 1402, -1000, -1000, 1683, 1401,
	1401, -1000, 1399, -1000, -1000, 40750, -1000, 542, 1876, 1874,
	1677, 1953, 29117, 7046, -1000, -1000, -1000, -1000, 1878, 1878,
	1878, 1878, -1000, -1000, -1000, 129, -1000, -1000, 1878, 1878,
	1946, 1941, 1789, -1000, 1677, -1000, -1000, 1677, 197, -1000,
	40750, 1929, -1000, 1215, 1215, 1215, 1215, 1215, 40750, 1215,
	1500, 1677, 33867, -1000, 35726, 1498, 1498, 1498, -102, -1000,
	722, -1000, 1397, 1036, 1334, -1000, -1000, -1000, -1000, -1000,
	354, 40750, -423, 12500, -1000, -1000, -1000, -1000, -1000, -1000,
	1496, -1000, 207, -1000, -1000, 289, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1831, 1830, 303, -1000, 1318, 1317, -1000,
	375, 1292, 816, -226, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 359, 1391, -1000, 131, -1000,
	-1000, 594, 1802, 1813, 1940, -1000, 38254, 1900, -1000, -1000,
	-1000, -1000, 154, 154, 36142, 1572, 1682, -1000, -1000, -1000,
	12500, -1000, 951, 1951, 1581, -1000, -1000, -1000, -1000, -1000,
	1479, 162, -293, -1000, -1000, 999, 13106, 1984, -1000, 1577,
	1677, -1000, 207, -1000, -1000, 1494, -1000, -1000, -1000, 718,
	-1000, -1000, -1000, 1677, -1000, -1000, 1208, -1000, 31237, -1000,
	-1000, -1000, -1000, 1878, 722, -1000, 286, 1636, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1204, -1000, -1000, 1264,
	389, 126, -1000, 1894, -1000, 1681, 1194, 1821, 1939, 1817,
	1815, -1000, 1315, -282, -1000, 1488, 1680, 36142, 4469, 1478,
	-1000, 40750, 1948, 1937, -1000, -1000, 1728, -269, -299, 1479,
	228, 228, 1578, 17954, 1577, 1479, -1000, -1000, 24014, -1000,
	1679, -423, -1000, 722, -1000, 317, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 13106, 13106, 24620,
	1636, 118, -1000, 117, -1000, -1000, -1000, 1314, -1000, 991,
	-1000, 1309, -1000, 1935, 1934, -1000, 156, 722, 36142, 1476,
	-1000, 951, 1781, -222, 13106, 13106, -1000, 1705, -1000, -1000,
	-1000, 229, -1000, 983, 274, 981, -1000, 1339, -1000, 1564,
	-1000, 1474, -1000, 4785, 40750, -1000, -1000, 1390, 1389, -1000,
	1252, 1169, 183, 173, 3624, -1000, -1000, -1000, -1000, -431,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1308, 1307, 36566,
	-1000, 1471, 722, -1000, 466, -1000, 40750, -1000, 1215, 1558,
	-1000, 1215, -283, 1141, -1000, -1000, -1000, -1000, -1000, 40750,
	1479, 24014, 205, 1468, -1000, -1000, -1000, 1073, -1000, 13106,
	1636, 1923, 1921, 1911, 1866, 24014, 5283, -1000, -1000, -1000,
	-1000, 93, 1428, 722, -1000, 336, 1552, -1000, 1892, 13106,
	-297, 229, -1000, 34715, -1000, -1000, 1305, -257, 1714, 182,
	1133, 1636, -1000, 1106, -432, 434, 207, 458, 12500, -1000,
	-1000, -1000, 38254, -1000, 1677, 40750, 1677, -1000, -300, -1000,
	35726, -1000, -1000, 1301, 1713, 1712, 1964, -1000, -1000, -1000,
	-1000, -1000, -1000, 1636, 34291, -1000, -433, 1636, 627, -1000,
	-1000, -1000, 485, -1000, -1000, -1000, -1000, 171, -1000, -1000,
	4469, 1428, 13712, -1000, -1000, -1000, -1000, 370, -1000, -1000,
	1983, -1000, 1960, 721, 721, -1000, -435, -1000, 5261, -436,
	589, 1636, 1125, -1000, 13106, -1000, 458, -1000, 1878, 1479,
	-1000, 1711, 12500, 1710, -1000, -1000, -1000, 504, 1228, -1000,
	5025, 1121, 1636, -1000, -437, 583, 1636, -1000, 1097, -1000,
	-1000, -1000, -312, 1570, -313, -1000, -1000, -1000, -1000, -1000,
	4298, -1000, -440, 1636, -1000, -314, -1000, 580, 4065, -441,
	-1000, -1000, 558, 1636, -1000,
}

var yyPgo = [...]int{
	0, 2445, 2444, 137, 172, 2443, 234, 2441, 2440, 43,
	2439, 23, 21, 19, 25, 2438, 2074, 2070, 2064, 2062,
	2057, 2437, 10, 2431, 2428, 2055, 2427, 2413, 2053, 2051,
	2048, 2045, 2412, 2411, 2410, 2043, 2038, 2034, 8, 2406,
	27, 2402, 2, 142, 158, 2401, 5, 2400, 2396, 12,
	2395, 2394, 2032, 2393, 2392, 2391, 95, 2389, 2030, 2028,
	2387, 2020, 2018, 2384, 2383, 2016, 2014, 2012, 2378, 183,
	2377, 2370, 2369, 153, 2367, 143, 2364, 2363, 2362, 107,
	2361, 2856, 96, 58, 113, 1165, 2360, 18, 61, 279,
	2359, 2358, 9, 117, 2353, 99, 2350, 2348, 156, 2347,
	139, 154, 92, 2346, 2345, 148, 2344, 2343, 2342, 105,
	2336, 2333, 162, 104, 2331, 2330, 125, 2329, 52, 163,
	41, 57, 2326, 2325, 2323, 2315, 2314, 31, 1060, 2310,
	98, 130, 2305, 2296, 88, 2295, 2289, 74, 2284, 2279,
	2271, 134, 50, 2264, 2263, 48, 2260, 49, 54, 2259,
	112, 2258, 129, 2257, 2256, 2254, 2253, 2236, 63, 2235,
	59, 2233, 135, 227, 1542, 2217, 2216, 17, 11, 2214,
	37, 28, 7, 44, 29, 71, 56, 132, 91, 2213,
	36, 39, 115, 89, 2212, 94, 76, 46, 2211, 145,
	2210, 73, 149, 126, 131, 147, 2209, 2208, 2207, 168,
	2204, 133, 90, 2203, 86, 1206, 160, 2202, 2200, 106,
	2198, 2196, 2195, 2191, 2190, 72, 118, 2189, 2188, 165,
	164, 166, 109, 2187, 331, 3492, 3834, 173, 3766, 13,
	151, 2186, 47, 2185, 2184, 2182, 2480, 110, 15, 108,
	161, 2181, 103, 34, 93, 2179, 2178, 2176, 2175, 2174,
	2172, 2170, 2169, 1026, 2168, 2167, 2166, 2155, 296, 83,
	2154, 122, 119, 116, 2153, 146, 35, 2152, 2151, 124,
	101, 2148, 2146, 2144, 2142, 128, 81, 144, 30, 2141,
	123, 136, 169, 2140, 87, 2139, 2138, 55, 51, 2137,
	2136, 2135, 2134, 100, 97, 2133, 67, 42, 32, 75,
	40, 2129, 2126, 84, 102, 2124, 33, 2123, 3, 4,
	6, 2122, 2121, 2119, 2118, 2116, 2110, 2107, 85, 2106,
	2105, 70, 2104, 2099, 2098, 38, 2097, 2095, 2094, 141,
	114, 53, 152, 373, 16, 2093, 2090, 14, 2089, 121,
	2088, 60, 2087, 62, 2086, 2085, 64, 2084, 2081, 65,
	2080, 2079, 157, 1793, 442, 2072, 140, 111, 45, 66,
	2068, 2066, 0, 1285, 155, 127, 2036, 2026, 2022,
}

var yyR1 = [...]int{
	0, 361, 361, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 68, 3, 3, 9,
	10, 4, 4, 5, 5, 92, 92, 6, 90, 90,
	185, 185, 185, 185, 184, 184, 91, 91, 89, 89,
	98, 7, 7, 8, 8, 11, 11, 72, 72, 12,
	13, 13, 13, 13, 364, 364, 107, 107, 105, 105,
	106, 106, 182, 182, 14, 14, 14, 189, 189, 194,
	194, 194, 197, 197, 197, 197, 172, 173, 174, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 335, 335, 344, 344, 344, 345, 345, 343, 343,
	343, 343, 343, 347, 347, 348, 348, 346, 346, 346,
	346, 350, 350, 351, 351, 349, 349, 349, 349, 349,
	349, 349, 349, 349, 349, 349, 349, 349, 349, 338,
	338, 338, 35, 35, 35, 35, 35, 36, 36, 36,
	36, 36, 36, 352, 352, 352, 352, 352, 352, 352,
	352, 352, 352, 352, 352, 352, 352, 352, 352, 352,
	352, 352, 352, 352, 352, 352, 352, 352, 352, 352,
	352, 352, 352, 352, 353, 353, 354, 354, 355, 355,
	356, 356, 356, 356, 357, 357, 357, 357, 357, 358,
	358, 358, 358, 358, 358, 358, 359, 359, 360, 360,
	2, 316, 316, 317, 317, 318, 318, 318, 318, 319,
	319, 320, 320, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 26, 221, 221, 218, 218, 218, 219,
	219, 220, 220, 220, 337, 337, 337, 331, 331, 331,
	333, 333, 332, 332, 332, 334, 334, 339, 339, 339,
	339, 339, 341, 341, 341, 341, 341, 341, 342, 342,
	342, 340, 340, 50, 50, 51, 51, 51, 161, 161,
	161, 15, 15, 15, 15, 15, 21, 23, 23, 39,
	39, 40, 24, 24, 24, 24, 41, 41, 42, 27,
	27, 27, 27, 27, 27, 48, 48, 48, 47, 47,
	46, 46, 46, 46, 46, 46, 25, 25, 25, 25,
	49, 49, 44, 44, 43, 45, 45, 45, 45, 45,
	45, 45, 45, 45, 45, 45, 45, 28, 28, 28,
	28, 28, 28, 20, 315, 315, 315, 38, 38, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 54,
	54, 289, 290, 290, 290, 290, 290, 290, 290, 290,
	276, 276, 277, 277, 277, 277, 277, 266, 266, 266,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 243, 243, 243, 243, 249, 249, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 248, 248, 248,
	248, 248, 248, 248, 248, 250, 250, 250, 250, 250,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 252, 252, 252,
	252, 252, 252, 252, 252, 275, 275, 253, 253, 269,
	269, 270, 270, 270, 267, 267, 267, 268, 268, 256,
	257, 271, 258, 258, 258, 259, 259, 259, 260, 260,
	265, 265, 264, 264, 264, 264, 264, 264, 261, 261,
	261, 261, 262, 262, 263, 274, 274, 274, 274, 274,
	254, 37, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 302, 302, 211, 211, 212, 212,
	279, 279, 300, 300, 299, 299, 298, 298, 298, 288,
	288, 295, 295, 295, 295, 295, 295, 295, 295, 283,
	283, 283, 282, 282, 284, 284, 287, 287, 297, 297,
	296, 296, 280, 280, 280, 303, 303, 303, 303, 303,
	281, 281, 281, 281, 281, 304, 285, 285, 286, 286,
	286, 309, 310, 308, 308, 308, 308, 308, 124, 124,
	124, 292, 292, 292, 293, 293, 293, 294, 294, 294,
	294, 294, 294, 313, 313, 312, 312, 52, 53, 57,
	57, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 56, 160, 160, 160, 216, 216, 307, 305,
	305, 306, 306, 17, 17, 55, 55, 336, 336, 18,
	18, 18, 18, 18, 18, 18, 18, 18, 311, 311,
	311, 19, 19, 58, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 86,
	203, 203, 202, 202, 201, 201, 201, 204, 204, 204,
	204, 241, 241, 241, 60, 60, 60, 64, 64, 67,
	67, 67, 65, 66, 29, 30, 30, 30, 30, 31,
	217, 217, 62, 62, 63, 63, 63, 63, 78, 78,
	366, 366, 61, 367, 69, 70, 70, 71, 71, 71,
	207, 207, 75, 75, 75, 73, 73, 73, 74, 74,
	80, 80, 84, 84, 84, 84, 83, 83, 83, 83,
	163, 163, 168, 233, 233, 144, 144, 164, 164, 169,
	169, 169, 170, 170, 171, 171, 171, 171, 171, 166,
	166, 165, 165, 167, 132, 132, 231, 231, 231, 231,
	230, 230, 230, 230, 230, 230, 88, 88, 93, 93,
	95, 95, 95, 95, 95, 95, 99, 146, 146, 117,
	117, 118, 118, 118, 118, 118, 130, 130, 181, 181,
	180, 180, 183, 183, 94, 96, 96, 96, 96, 102,
	102, 103, 103, 104, 104, 215, 215, 238, 238, 238,
	108, 108, 108, 110, 109, 109, 109, 109, 111, 111,
	97, 97, 291, 291, 278, 245, 245, 246, 368, 368,
	368, 368, 112, 112, 114, 115, 115, 113, 113, 113,
	113, 113, 119, 119, 116, 120, 120, 120, 120, 121,
	121, 85, 85, 85, 85, 85, 85, 85, 85, 200,
	200, 123, 123, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 140, 140, 140, 140, 140, 140, 125,
	125, 125, 125, 125, 125, 125, 79, 79, 141, 141,
	141, 101, 100, 100, 82, 82, 81, 81, 142, 142,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 135, 135, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 134, 134, 134, 134, 134, 134, 134, 134,
	134, 134, 134, 134, 134, 134, 134, 134, 134, 365,
	365, 137, 136, 136, 136, 136, 136, 136, 76, 76,
	76, 76, 76, 239, 239, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	153, 153, 77, 77, 151, 151, 152, 154, 154, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	127, 127, 127, 127, 127, 127, 127, 127, 129, 129,
	129, 155, 155, 143, 143, 87, 156, 156, 157, 158,
	158, 159, 159, 162, 175, 175, 175, 176, 176, 176,
	176, 131, 131, 177, 177, 177, 126, 126, 126, 126,
	126, 126, 126, 179, 179, 178, 178, 178, 178, 178,
	178, 178, 178, 186, 186, 145, 145, 148, 148, 147,
	149, 187, 187, 191, 191, 191, 191, 188, 188, 192,
	192, 192, 192, 195, 195, 196, 196, 196, 193, 193,
	193, 190, 190, 190, 235, 235, 235, 198, 198, 208,
	208, 205, 205, 206, 206, 199, 199, 255, 255, 255,
	214, 214, 213, 213, 213, 209, 209, 209, 210, 210,
	232, 232, 228, 228, 234, 234, 229, 229, 236, 236,
	237, 237, 314, 314, 272, 272, 324, 324, 273, 273,
	325, 325, 327, 327, 322, 322, 323, 323, 326, 326,
	32, 328, 328, 329, 329, 330, 330, 330, 330, 33,
	34, 34, 34, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	227, 227, 227, 227, 227, 227, 225, 225, 225, 225,
	225, 362, 363,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 11, 5, 7, 1,
	5, 1, 3, 1, 3, 2, 1, 13, 0, 2,
	0, 2, 3, 3, 1, 3, 0, 2, 1, 3,
	4, 1, 3, 1, 3, 8, 9, 1, 1, 10,
	9, 8, 7, 7, 1, 1, 1, 3, 1, 3,
	1, 3, 0, 4, 3, 4, 5, 1, 3, 3,
	2, 2, 2, 2, 2, 1, 0, 0, 0, 2,
	3, 3, 11, 9, 11, 5, 5, 16, 12, 9,
	4, 0, 3, 0, 2, 2, 1, 3, 1, 1,
	2, 2, 2, 0, 2, 1, 2, 2, 2, 2,
	2, 0, 1, 1, 2, 3, 3, 5, 3, 3,
	4, 5, 4, 4, 2, 2, 2, 2, 2, 0,
	2, 2, 9, 10, 9, 5, 7, 7, 7, 7,
	8, 4, 6, 2, 3, 2, 3, 3, 3, 4,
	3, 3, 2, 2, 3, 2, 2, 2, 2, 2,
	3, 2, 2, 2, 3, 3, 2, 3, 3, 2,
	2, 2, 2, 2, 1, 3, 0, 3, 1, 3,
	0, 1, 1, 1, 1, 3, 1, 3, 3, 0,
	2, 5, 5, 5, 7, 5, 0, 3, 0, 3,
	4, 0, 1, 1, 3, 2, 3, 3, 3, 0,
	1, 1, 2, 2, 2, 2, 1, 2, 2, 3,
	3, 3, 3, 4, 2, 3, 3, 3, 3, 0,
	3, 0, 3, 3, 1, 1, 1, 3, 2, 1,
	1, 3, 3, 2, 1, 1, 3, 1, 2, 5,
	4, 6, 4, 3, 3, 6, 5, 5, 4, 3,
	5, 1, 3, 1, 1, 1, 1, 1, 0, 2,
	2, 1, 1, 1, 1, 1, 4, 5, 8, 1,
	2, 5, 7, 10, 8, 11, 1, 2, 5, 5,
	5, 5, 6, 3, 5, 1, 1, 1, 1, 3,
	1, 1, 1, 2, 1, 1, 2, 4, 2, 4,
	2, 3, 1, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 4,
	3, 2, 4, 3, 0, 2, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 5,
	5, 4, 1, 1, 2, 3, 4, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 0, 1, 1,
	0, 2, 3, 2, 2, 2, 2, 2, 6, 8,
	3, 3, 1, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 3,
	2, 2, 2, 2, 2, 1, 2, 2, 2, 1,
	4, 4, 3, 3, 2, 4, 5, 2, 3, 4,
	2, 2, 3, 3, 3, 3, 3, 4, 1, 1,
	1, 1, 1, 6, 6, 4, 4, 4, 5, 3,
	3, 3, 3, 3, 4, 6, 6, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 3, 0,
	5, 0, 3, 5, 0, 1, 1, 0, 1, 2,
	3, 1, 0, 3, 3, 0, 2, 2, 0, 1,
	0, 1, 1, 1, 1, 2, 2, 2, 5, 5,
	4, 4, 4, 4, 4, 2, 1, 2, 1, 2,
	2, 3, 2, 2, 2, 2, 1, 1, 1, 1,
	3, 2, 1, 1, 0, 3, 1, 1, 0, 1,
	5, 4, 0, 1, 1, 2, 2, 3, 2, 0,
	1, 3, 5, 3, 3, 5, 3, 2, 2, 1,
	1, 1, 1, 1, 0, 1, 0, 1, 1, 3,
	3, 3, 3, 3, 1, 10, 11, 11, 12, 12,
	3, 3, 3, 2, 1, 5, 1, 1, 0, 2,
	2, 3, 3, 1, 1, 2, 2, 2, 0, 1,
	2, 0, 1, 3, 1, 2, 3, 1, 1, 1,
	1, 1, 1, 0, 2, 0, 2, 1, 5, 1,
	3, 5, 4, 3, 5, 3, 8, 10, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 5,
	4, 5, 1, 2, 2, 4, 3, 6, 5, 3,
	9, 2, 2, 0, 1, 2, 0, 1, 7, 1,
	3, 8, 8, 3, 3, 3, 5, 3, 5, 5,
	5, 4, 4, 4, 4, 4, 4, 4, 0, 1,
	1, 3, 2, 3, 3, 4, 3, 5, 5, 5,
	4, 4, 4, 2, 2, 2, 6, 2, 4, 4,
	4, 5, 8, 6, 3, 5, 4, 2, 4, 3,
	2, 4, 5, 6, 2, 6, 6, 3, 3, 3,
	0, 1, 1, 1, 0, 2, 2, 0, 2, 3,
	2, 0, 1, 1, 2, 4, 1, 1, 1, 2,
	4, 4, 1, 1, 2, 3, 4, 4, 5, 3,
	1, 1, 3, 3, 1, 1, 1, 1, 0, 3,
	1, 1, 3, 0, 2, 0, 2, 1, 2, 2,
	0, 1, 0, 1, 1, 0, 1, 1, 0, 1,
	3, 5, 1, 1, 3, 5, 1, 2, 3, 5,
	2, 2, 6, 0, 1, 0, 3, 0, 1, 0,
	2, 2, 4, 1, 2, 2, 2, 2, 2, 0,
	2, 1, 3, 3, 1, 3, 0, 1, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 1,
	1, 4, 1, 3, 1, 1, 2, 2, 4, 2,
	6, 1, 4, 6, 3, 2, 0, 3, 0, 3,
	1, 3, 1, 3, 4, 4, 4, 4, 3, 2,
	4, 0, 1, 0, 2, 0, 1, 1, 1, 1,
	1, 2, 2, 1, 2, 3, 2, 3, 2, 2,
	12, 11, 1, 3, 3, 4, 3, 0, 0, 3,
	4, 3, 1, 3, 3, 2, 1, 1, 3, 1,
	1, 1, 1, 3, 3, 0, 5, 5, 5, 0,
	2, 1, 3, 3, 3, 2, 3, 1, 2, 0,
	3, 1, 1, 3, 3, 4, 4, 5, 3, 4,
	5, 6, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 0, 2, 1, 1,
	1, 3, 1, 3, 0, 1, 1, 3, 1, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 2, 2, 2, 2, 3,
	1, 1, 1, 1, 1, 1, 5, 6, 6, 6,
	5, 5, 5, 6, 5, 5, 6, 5, 5, 5,
	5, 6, 5, 5, 5, 4, 4, 5, 5, 5,
	5, 5, 4, 4, 4, 4, 4, 4, 4, 4,
	3, 6, 6, 4, 6, 6, 4, 8, 8, 8,
	8, 4, 6, 7, 7, 7, 9, 4, 7, 5,
	4, 4, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 8, 8, 0,
	2, 3, 4, 4, 4, 4, 4, 4, 0, 3,
	4, 7, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 3, 3,
	1, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	0, 1, 0, 2, 1, 2, 4, 0, 2, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 0, 3, 1, 3, 1, 0, 2, 1, 0,
	3, 1, 3, 2, 0, 1, 1, 0, 2, 4,
	4, 1, 1, 0, 2, 4, 2, 4, 1, 3,
	5, 4, 6, 0, 3, 1, 3, 3, 5, 1,
	1, 1, 1, 0, 5, 1, 3, 1, 2, 3,
	1, 1, 3, 3, 3, 3, 3, 1, 3, 1,
	2, 2, 3, 1, 1, 1, 1, 1, 3, 3,
	3, 1, 2, 1, 1, 1, 1, 1, 1, 0,
	1, 0, 2, 0, 3, 0, 1, 0, 3, 3,
	1, 1, 0, 1, 1, 1, 1, 1, 0, 1,
	0, 2, 1, 1, 1, 3, 1, 1, 1, 1,
	1, 1, 0, 2, 0, 1, 0, 4, 0, 1,
	0, 3, 0, 3, 0, 4, 0, 3, 0, 3,
	3, 1, 3, 2, 4, 1, 2, 1, 2, 2,
	2, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1,
}

var yyChk = [...]int{
	-1000, -361, -1, -3, -10, -11, -12, -13, -14, -16,
	-52, -17, -18, -19, -58, -59, -60, -64, -65, -66,
	-62, -61, -25, -28, -20, -68, -29, -30, -31, -32,
	-33, -34, -35, -36, -37, -5, 6, 7, -91, 29,
	-54, 180, -53, 183, 182, 218, 184, 211, 64, 341,
	-67, 344, 345, -366, -217, 269, 270, 20, 37, 346,
	348, 30, 31, 232, 286, 288, 313, -4, 492, 181,
	342, 213, 212, 26, -6, -7, -362, 68, 611, -158,
	15, -69, -367, -69, -72, 9, 10, 8, 441, -69,
	-289, -215, 108, 68, 23, -210, -221, 88, 432, 188,
	-219, 282, 284, -208, -209, -218, 242, 252, 44, 199,
	198, 253, 189, 282, 189, 190, 192, 432, 188, 225,
	224, 282, 284, 189, -113, -236, -225, -226, 300, 72,
	-224, 458, 462, 465, 466, 471, 290, 81, 322, 323,
	314, 324, 209, 283, 289, 292, 315, 578, 325, 327,
	328, 452, 453, 192, 202, 596, 307, 210, 489, 253,
	606, 599, 294, 401, 341, 357, 349, 372, 490, 549,
	264, 340, 418, 297, 257, 320, 550, 407, 413, 267,
	344, 427, 233, 551, 261, 263, 262, 247, 457, 268,
	36, 214, 368, 303, 242, 552, 545, 236, 35, 27,
	235, 430, 99, 553, 331, 415, 389, 332, 231, 554,
	494, 301, 414, 364, 313, 117, 240, 279, 411, 333,
	555, 390, 394, 556, 419, 287, 278, 557, 558, 334,
	559, 191, 293, 560, 243, 421, 298, 388, 200, 491,
	48, 222, 422, 392, 398, 561, 330, 562, 563, 564,
	565, 311, 309, 310, 312, 254, 259, 53, 186, 396,
	395, 397, 260, 417, 377, 375, 566, 567, 302, 206,
	568, 569, 376, 18, 570, 571, 425, 305, 572, 573,
	574, 487, 575, 576, 416, 391, 393, 241, 116, 577,
	308, 412, 317, 493, 291, 579, 336, 221, 216, 426,
	326, 580, 581, 582, 583, 584, 285, 284, 345, 318,
	346, 265, 585, 586, 587, 588, 251, 234, 429, 420,
	52, 403, 589, 321, 337, 406, 342, 228, 7, 258,
	299, 410, 319, 266, 252, 255, 379, 223, 590, 591,
	366, 367, 343, 226, 218, 111, 428, 544, 282, 338,
	51, 229, 592, 593, 256, 230, 347, 296, 369, 189,
	133, 373, 418, 180, 408, 409, 415, -283, 416, 224,
	227, -241, 189, -203, 407, 287, 308, 462, 230, 231,
	190, 191, 32, 420, 419, 411, -236, 193, 347, -78,
	184, 219, -113, -49, 72, 271, -49, 29, 72, 72,
	36, 72, 346, 410, 410, 75, 493, 233, 21, -353,
	-334, 317, -352, -332, 181, 180, 10, 182, 322, 323,
	324, 190, 8, 30, 578, 207, 325, 326, 6, 211,
	327, 328, 225, 9, 329, -337, 74, 72, -224, 21,
	-353, -334, 317, -212, -211, 339, 398, -92, 548, -89,
	-98, -238, -236, -225, 74, -199, 194, 343, -71, 5,
	-9, -3, 492, -176, 17, 16, -75, 54, 55, -70,
	-83, 124, -85, -236, -122, 91, -128, 28, 72, -224,
	24, -127, 300, 219, -123, -150, -225, -149, -101, 133,
	-240, 122, 123, 130, 92, 176, -135, -133, -134, -136,
	-138, -139, 74, 73, 82, 75, 76, 77, 78, 83,
	84, 85, -228, -226, -223, 458, 462, 465, 466, 471,
	-147, -362, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 58, 59, 456, 188, 442, 443,
	370, 8, 444, 445, 446, 488, 209, 450, 94, 47,
	533, 431, 440, 439, 438, 436, 437, 433, 435, 434,
	452, 453, 195, 432, 128, 441, 475, 476, 477, 478,
	479, 480, 481, 482, 484, 485, 483, 459, 460, 461,
	463, 464, 467, 468, 469, 470, 472, 473, 474, 495,
	185, 181, 184, 90, 23, 25, 496, 239, 93, 355,
	384, 449, 16, 20, 203, 187, 373, 201, 132, 197,
	204, 273, 275, 180, 62, 497, 274, 408, 498, 499,
	500, 501, 363, 361, 272, 502, 10, 26, 212, 246,
	503, 359, 182, 237, 97, 98, 505, 41, 40, 306,
	276, 213, 506, 360, 507, 508, 19, 65, 205, 11,
	199, 227, 605, 509, 286, 13, 115, 14, 510, 511,
	512, 513, 194, 110, 190, 595, 60, 244, 514, 353,
	515, 516, 517, 518, 519, 354, 87, 520, 521, 107,
	522, 56, 486, 32, 232, 546, 447, 523, 524, 38,
	37, 383, 387, 382, 525, 399, 108, 17, 30, 526,
	527, 220, 386, 352, 381, 547, 528, 529, 249, 63,
	339, 362, 609, 33, 66, 217, 335, 304, 42, 88,
	15, 245, 61, 34, 454, 112, 610, 365, 196, 224,
	531, 423, 248, 532, 113, 358, 548, 207, 109, 348,
	183, 316, 270, 208, 534, 288, 535, 238, 114, 409,
	536, 537, 451, 29, 211, 269, 351, 198, 538, 250,
	281, 271, 280, 539, 540, 295, 43, 607, 594, 189,
	39, 96, 385, 350, 380, 193, 448, 225, 277, 5,
	44, 31, 404, 9, 329, 64, 67, 374, 371, 541,
	378, 608, 12, 542, 455, 492, 424, 89, 543, 405,
	-69, -69, -69, -188, 343, -195, -192, 419, 420, -193,
	-196, -190, -150, 398, 575, 576, 418, 373, 417, -228,
	-236, 300, 219, 458, 133, 459, 460, 461, 94, 370,
	442, 462, 475, 433, 435, 431, 434, 432, 28, 476,
	24, 85, 477, 456, 195, 8, 176, 463, 464, 478,
	479, 480, 58, 436, 437, 488, 465, 466, 128, 91,
	481, 482, 83, 484, 485, 533, 441, 59, 483, 188,
	469, 468, 467, 470, 444, 445, 471, 84, 438, 439,
	440, 47, 473, 472, 474, -2, -6, 6, -113, -290,
	-277, -281, -228, -225, -226, -227, 215, 204, -304, 72,
	-224, 300, 219, 50, 86, 55, 54, 201, 190, 192,
	441, -206, 195, -206, 225, 224, -220, 250, -206, -206,
	189, -219, 100, 100, -55, -113, -336, -331, -337, -205,
	195, -228, -205, -205, -205, -205, -205, -205, -205, -113,
	177, -105, -113, 72, 29, -204, 108, 12, 432, 188,
	189, 224, 225, 192, -285, 11, 110, 228, 228, 228,
	229, 228, -202, 410, 412, 226, 413, 414, 12, -86,
	108, 19, -362, -176, -176, 125, 72, 346, 193, -63,
	-3, -13, -11, -12, -9, 100, -130, 23, 29, 29,
	74, 51, 29, -44, -43, -45, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 29, -315,
	68, -272, 398, 72, -328, -329, -113, 75, 75, 66,
	308, 66, 69, 193, 69, 66, -354, 318, 68, -354,
	284, 318, 319, 252, 282, 192, -354, -354, 284, -354,
	-354, -354, -354, -354, 410, -354, -354, -354, 320, 321,
	-354, 408, 192, -354, -354, -354, -354, -354, 71, 66,
	69, 308, 66, 11, 66, -301, 133, 331, 332, 333,
	334, 330, 308, 335, 336, 337, 228, 338, -4, -89,
	69, -179, -362, 189, 423, -8, -6, -362, 21, 22,
	-363, 70, -92, -177, 19, 30, -131, 75, 78, -159,
	-162, -85, -236, 50, -73, 21, 22, 80, 11, -231,
	90, 88, 89, 107, -230, 23, 72, -224, -225, 74,
	-226, -227, 177, -85, -125, 110, 91, 108, 109, 93,
	119, 118, 129, 122, 123, 124, 125, 126, 127, 128,
	120, 121, 132, 100, 101, 102, 103, 104, 105, 106,
	-200, -362, -101, -362, 177, -362, 177, 178, 179, -128,
	-128, -128, -128, -128, -128, -128, -362, 177, 177, -362,
	-362, -362, -362, -362, -9, -142, -85, 492, -362, -362,
	-362, -362, -362, -362, -362, -362, -362, -362, -362, -362,
	-362, -362, -362, -153, -85, -362, -362, -365, -137, -362,
	-365, -137, -365, -137, -365, -362, -365, -137, -365, -137,
	-365, -365, -137, -365, -362, -362, -362, -362, -362, -362,
	-362, -362, -362, -362, -362, -362, -362, -362, -362, -362,
	-362, -362, -362, -362, -362, -362, -362, -362, -362, -362,
	-362, -362, -362, -199, -199, 11, -105, -106, -116, -236,
	69, -189, -194, 421, 423, 343, -193, -193, -235, -228,
	74, 28, 100, 29, 177, -158, -69, 70, 69, -281,
	-243, -249, -251, -250, -252, -247, -248, 370, 373, 377,
	375, 371, 376, 133, 374, 379, 380, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 29, 214, 366, 367,
	368, 369, 390, 391, 392, 393, 394, 395, 396, 397,
	349, 372, 490, 350, 351, 352, 353, 354, 355, 357,
	358, 359, 360, 361, 362, 363, 364, -243, -243, -243,
	-243, 72, 228, -225, -304, 68, -228, -113, -221, -219,
	72, 91, 72, -112, -228, -236, -119, -228, -236, 251,
	-340, -339, -331, -334, -206, -220, -331, 256, 254, 255,
	69, 193, 69, 193, 71, -105, 24, 66, -107, -113,
	72, 72, -112, -119, -333, -331, -334, -237, -236, -222,
	495, 185, 21, 181, 184, 90, 23, 25, 496, 458,
	239, 93, 355, 133, 459, 460, 461, 384, 449, 16,
	20, 203, 94, 187, 370, 373, 201, 132, 197, 204,
	273, 275, 442, 462, 475, 180, 62, 497, 433, 435,
	431, 434, 274, 432, 408, 498, 499, 500, 501, 363,
	361, 272, 28, 502, 10, 476, 26, 212, 246, 22,
	503, 126, 359, 182, 237, 97, 98, 505, 41, 40,
	306, 24, 276, 213, 85, 506, 477, 360, 507, 508,
	19, 65, 205, 11, 199, 227, 605, 509, 286, 13,
	456, 115, 14, 510, 511, 512, 513, 195, 194, 110,
	190, 595, 60, 244, 8, 514, 353, 515, 516, 517,
	518, 519, 354, 176, 87, 520, 521, 107, 522, 56,
	463, 464, 486, 45, 32, 232, 478, 479, 546, 480,
	447, 523, 524, 38, 37, 383, 387, 382, 525, 399,
	58, 108, 17, 436, 437, 30, 526, 527, 488, 465,
	220, 386, 352, 381, 547, 528, 466, 529, 128, 249,
	63, 91, 339, 481, 482, 83, 362, 609, 33, 66,
	217, 335, 304, 42, 88, 15, 245, 61, 34, 454,
	112, 610, 484, 365, 196, 224, 531, 423, 248, 532,
	113, 485, 358, 548, 207, 109, 348, 183, 533, 441,
	316, 270, 208, 534, 288, 59, 535, 238, 114, 483,
	188, 409, 536, 6, 537, 451, 29, 211, 269, 351,
	198, 538, 250, 281, 271, 280, 539, 49, 540, 295,
	43, 469, 468, 467, 470, 607, 57, 444, 445, 471,
	594, 189, 39, 96, 385, 350, 380, 193, 448, 225,
	84, 277, 5, 44, 31, 404, 9, 329, 64, 67,
	438, 439, 440, 47, 374, 371, 541, 473, 378, 472,
	474, 608, 95, 12, 542, 455, 492, 424, 89, 543,
	405, 69, -204, 74, -240, -85, -206, -206, -113, -113,
	-113, -113, -113, -204, -204, -204, -204, -201, 11, 110,
	11, -201, -201, -85, -128, -331, 434, 124, -236, 72,
	72, 346, 72, 33, -44, -44, 74, -44, 69, 100,
	-44, 70, -142, -314, 595, 69, -330, 23, 423, 424,
	399, -356, 189, 227, 224, 66, -356, -352, 326, -333,
	-332, -331, -354, -355, -228, -354, -354, -354, 410, -354,
	-354, -354, -354, -354, -354, -354, -354, -337, -356, 286,
	69, -356, -333, -331, 330, 330, 330, 330, 330, 330,
	-98, 23, -178, -228, -229, -225, -226, -227, 215, -222,
	458, 462, 465, 466, 471, -113, 424, 425, -9, -185,
	87, 9, 110, 69, 18, 69, -175, 25, 26, 177,
	-129, 51, 75, 78, -207, 49, -113, -85, -85, -85,
	-140, 83, 91, 84, 85, -230, 215, 124, -237, -229,
	-226, 300, 219, -222, -228, -128, -141, -147, -101, 79,
	110, 108, 109, 93, -128, -128, -128, -128, -128, -128,
	-128, -128, -128, -128, -128, -128, -128, -128, -128, -239,
	72, 74, 72, -229, -81, -84, 124, -85, -236, -229,
	-127, 83, -127, -228, -73, -229, -229, -73, -73, -73,
	-73, -73, -363, 69, -363, -9, -81, -81, -81, -363,
	-85, -85, -81, -81, -150, 74, -81, -150, 74, -81,
	-128, 447, 448, 449, -81, -81, -73, -151, -152, 95,
	-150, -81, -363, -128, -228, -228, -81, -82, -81, -81,
	-81, -363, -363, -84, -81, -84, -81, -81, -363, -363,
	-363, -363, -81, -81, -81, -81, -81, -81, -81, -81,
	-81, -81, -81, -81, -115, 87, -113, -88, -93, -95,
	-96, -117, -100, -362, -94, -97, -113, -101, 72, 486,
	-113, -105, -364, 11, 67, -364, 69, 177, -192, -195,
	69, 422, 424, 425, -189, -259, 132, 66, 86, -85,
	-229, -237, -176, -75, -292, -293, -294, -229, 74, 75,
	81, 322, 292, -277, -279, -280, -281, -295, 204, -303,
	196, 198, 199, 44, -282, 205, 190, 45, -244, -267,
	403, 404, -253, 68, -253, -253, 378, 370, 373, 371,
	-253, -253, -253, -253, -253, -258, 373, -258, -258, -258,
	-258, 371, 68, 68, -253, -253, -253, -269, 68, -269,
	365, -270, 68, -270, -270, -270, -270, -244, -244, -244,
	-244, -304, -304, -304, -85, -232, 67, 23, 192, -265,
	-264, -261, -262, -263, -260, 28, 24, -265, -50, 239,
	210, 177, 68, 177, 242, 243, -335, 69, 28, -341,
	283, -113, 219, -113, -113, -331, -331, -337, -311, 208,
	203, -113, 69, 69, -113, 74, 72, 72, -130, -286,
	11, 110, -204, -236, -236, -113, -130, -204, -79, 215,
	67, -365, -363, 72, -128, -43, -127, 70, -114, 87,
	74, -329, -238, 398, 424, -357, 124, -228, -356, -357,
	-360, 492, 193, 70, 69, -354, -357, 304, 286, -357,
	11, -302, 19, -100, -362, -363, 69, 177, -57, -56,
	185, 182, 183, 186, 187, -307, 401, 181, 236, 235,
	221, -363, -184, 34, 35, -228, 52, -131, -131, -162,
	-198, 19, 11, 47, 47, -74, 57, 83, 84, 85,
	177, -362, -141, -128, -128, -128, -79, 90, -363, 69,
	-363, 177, -82, -81, -81, -81, -81, -81, -85, -363,
	-363, -363, -363, 69, 67, 23, -363, 67, -363, 11,
	11, -363, 11, 11, -363, -363, 11, -128, -128, -128,
	-363, -363, -81, -154, -152, 97, -85, -363, -363, -363,
	69, 69, -363, -363, -363, -363, -163, 454, -163, -363,
	-363, -363, -363, -363, -163, -163, -163, -163, -363, -363,
	-363, -363, -363, -363, -363, -363, -363, -363, -363, -363,
	-182, 112, -113, 29, 69, -108, -110, -109, -111, 56,
	60, 62, 57, 58, 59, 63, -215, -88, -99, 47,
	-362, -118, 112, -120, 23, -238, 64, 194, 65, -362,
	-362, -182, 67, -88, -88, -116, -236, 124, -194, -197,
	426, 423, 429, 72, 74, 177, -177, 69, -294, 100,
	-281, 68, 72, -287, -225, 45, -282, -284, -282, -282,
	-287, 72, -287, 45, 83, 91, -256, -257, -271, -274,
	-254, 23, 605, 406, 28, 66, 401, 196, 45, 44,
	199, 81, -268, 405, 75, -258, -258, -253, -253, -253,
	378, -253, -258, -259, 133, 29, -259, 133, -259, 133,
	-259, 133, -259, 133, -258, -275, 74, -275, 75, -269,
	75, 70, 66, -228, -172, -113, -262, -261, -263, 373,
	418, 132, 430, -51, 8, 9, 10, -228, -316, -317,
	-318, -228, 110, 244, 245, -228, -344, 316, -339, 284,
	293, 90, 16, 492, 193, 193, -113, -331, -121, 12,
	72, 72, -201, -204, -128, -334, 230, 231, -182, 189,
	-330, 193, 177, 177, -357, 193, 307, -333, -228, 11,
	11, 304, 11, -333, 340, -229, -229, 69, -216, -282,
	-313, -280, -281, -312, 197, 204, -216, 204, 201, -282,
	205, 196, 197, -213, -282, 193, 23, -216, -216, -288,
	100, -216, 32, 32, 112, 69, 74, 74, 53, -113,
	-80, -173, 124, -229, -82, -79, 90, -128, -84, 124,
	-237, -363, -363, -363, -363, -363, -363, -242, 133, 370,
	214, 368, 361, 388, 375, 403, 366, 404, -239, -242,
	-239, -128, -128, -128, -128, -128, 11, 11, 11, 489,
	-158, 99, -85, 96, -128, -128, -228, -168, -362, -163,
	-163, -163, -163, -163, -164, -163, -164, -164, -164, -164,
	-164, -164, -164, -164, -164, -164, -164, -126, 29, 47,
	-362, -9, -362, -187, -191, -150, -225, -227, 215, 300,
	219, 458, 462, 465, 466, 471, -93, -95, -95, -93,
	-95, 56, 56, 56, 61, 56, 61, 56, -109, -238,
	-363, -363, -146, 238, -362, 33, -238, -120, 190, 190,
	190, -82, -128, -121, -88, -121, -121, 177, 423, 427,
	428, -293, -294, -297, -296, -228, -225, 196, -303, 44,
	-303, -287, -287, -287, -287, 68, 83, -362, 606, 75,
	-128, 9, 45, 45, 45, 74, 70, -259, 133, -259,
	133, -258, -253, -259, 133, 72, 133, -259, 133, 70,
	69, 70, 69, 70, 69, -124, 553, 91, -113, -174,
	23, 29, -288, -288, -288, 66, 70, 69, -243, -228,
	-228, -228, -347, 492, 289, -345, -343, 295, 296, 297,
	298, 299, -334, 294, -341, 291, 74, 72, -113, -331,
	-85, -130, -258, -113, -333, 124, 124, -228, 193, -333,
	304, -359, 492, -333, -333, 11, -333, 74, 177, -56,
	68, -276, 72, -224, -287, -209, 196, 72, 72, 72,
	-225, -224, -226, -227, 72, -225, -224, -226, -227, -228,
	45, 45, 72, -113, -228, -276, 72, -85, -228, -228,
	-228, -185, 69, -83, -363, -128, 177, -164, -164, -164,
	-164, -164, -363, -253, -253, -253, -270, -253, 354, -253,
	354, -363, -363, -363, 19, 19, 19, 19, -363, -128,
	-128, -128, -362, -77, 451, -85, 69, 69, -233, 72,
	-186, 66, -187, -145, -148, -147, -362, -9, -363, -178,
	6, 492, -183, -228, -121, 69, 100, 100, 100, 100,
	-103, -102, 66, 67, -104, 66, -102, 56, 56, -181,
	68, 69, -147, -362, -183, -128, -120, -362, -362, -362,
	-363, 69, -158, -121, 70, 69, -253, -253, 45, -284,
	-180, -228, -128, 23, -134, 431, 440, 439, 438, 436,
	437, 433, 435, 434, 452, 453, -259, 133, -258, 74,
	-258, 75, 75, 553, 68, -9, -172, -288, 72, 133,
	72, 133, 74, -113, -319, -320, -321, 81, 491, 91,
	246, 247, 206, 248, 249, 250, -318, -243, -243, -243,
	-350, -351, -349, 292, 314, 315, 300, -348, -346, 309,
	310, 311, 312, 90, 74, 74, 74, -342, 283, 90,
	292, 16, 23, -204, -322, -202, -359, -333, -359, 286,
	-333, -229, -276, -160, 209, 210, -243, -243, -232, -284,
	45, 72, -214, 193, 23, 193, -160, -276, 29, 182,
	87, -90, 11, -173, -173, 124, -258, 72, -128, -128,
	-128, -128, -363, -363, -363, -128, -363, 74, -128, -128,
	-144, 112, 27, -186, 69, -363, -363, 47, -363, -363,
	69, -158, -191, -85, -85, -85, -85, -85, 68, -85,
	-180, 238, -363, -120, -215, -180, -180, -180, 74, -176,
	-299, -298, 67, 200, 81, -296, -175, -175, -287, -287,
	70, 69, -363, -362, -259, 133, -259, 133, 70, 70,
	-297, -172, -174, 72, 133, 19, -173, -321, 74, 250,
	246, 250, 250, 250, 250, 251, -338, 81, 290, -349,
	301, 558, 285, 316, 75, 75, 111, 30, 31, -346,
	75, 75, 75, 75, -343, 16, 492, -341, 291, 74,
	74, -323, 38, -325, 39, -358, 23, -359, -358, 304,
	70, 72, -244, -244, 68, -287, -287, 72, -228, -160,
	28, 28, -362, -121, -88, -83, -363, -363, -363, -363,
	-76, 110, 492, -363, -363, -158, 16, 45, -148, -145,
	47, -9, -362, -228, -176, -180, 70, -147, -118, -238,
	-363, -363, -363, 413, -298, 72, -288, 74, 207, -228,
	-266, 608, 607, -128, 70, -9, 237, -174, 36, 36,
	242, 243, 74, 74, 28, 302, 176, 28, 75, 176,
	457, 291, 74, 72, 292, -255, 194, -326, 43, -324,
	-273, 42, 16, -331, -358, -297, -232, 68, -128, -305,
	-306, 112, -155, 13, -173, -363, 490, 63, 493, -169,
	114, 113, -142, 9, -145, -9, 70, -120, -362, 75,
	-113, -363, -300, -299, -172, 238, -22, -3, -11, -12,
	-13, -14, -16, -52, -17, -18, -23, -24, -19, -58,
	-59, -67, -65, -66, -62, -61, -27, -25, -28, -20,
	-29, -30, -31, -35, -36, -26, -37, 94, 195, 272,
	341, 75, 28, 75, 28, 305, 292, 23, -181, 75,
	-325, 16, -327, 40, 41, 74, 492, 70, 68, -297,
	-363, 69, -228, -156, 14, 16, 53, 491, 494, -363,
	-170, 93, -171, 111, 457, -132, 75, 176, -170, -187,
	-363, -291, -278, -229, 68, -266, -161, 240, 241, -172,
	-85, -85, 72, -48, -234, 275, 276, 277, -229, -38,
	-22, 303, 303, 74, 38, 114, 74, 16, 16, 284,
	-300, -297, 70, -306, 47, -166, 455, -157, -85, -143,
	-87, -85, 53, -171, 116, 117, 238, 116, 117, -127,
	-363, 69, -243, -180, -172, 72, 72, -39, -40, 95,
	96, 273, 274, 278, -243, 69, 611, 74, 74, 28,
	289, 21, -334, 70, -300, 222, -165, -167, -228, 69,
	492, 90, -228, -363, -278, -245, 487, 24, 70, -174,
	99, 97, -40, -85, -38, 19, 19, 19, 28, -229,
	99, -22, 306, -300, 223, 69, 23, -87, 493, -171,
	23, -238, 74, 487, -309, -310, 66, -15, -21, -14,
	-11, -12, -13, 341, 492, 94, -38, 96, 611, -49,
	75, -9, -47, -46, 75, -49, 280, 91, 281, 72,
	-128, -334, -362, -167, -168, 494, -238, -246, 74, -310,
	66, -309, 66, 10, 9, -172, -38, -92, 611, -38,
	99, 97, -41, -42, 98, -22, 69, 279, -128, 220,
	-368, 83, 28, 332, -308, 208, 203, 206, 29, -308,
	611, 99, 611, 195, -38, 99, 97, -42, -85, -46,
	-363, -363, 66, -128, 66, 202, 28, 83, 99, 94,
	611, 195, -38, 96, 505, 66, 505, 99, 611, -38,
	505, 195, 99, 611, 195,
}

var yyDef = [...]int{
	-2, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, 1199, 783, 783, 0, 783,
	885, -2, 637, 0, 0, 0, 0, -2, 756, 757,
	758, 762, 763, 778, 780, 0, 347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 558, -2, 0, 1275,
	0, 781, 770, 771, 41, 0, 0, 2121, 2, 1207,
	0, 792, 785, 0, 783, 783, 783, 67, 68, 0,
	99, 0, 0, 0, 886, 0, 0, 0, 1273, 1273,
	251, 1273, 1273, 0, 1289, 249, 0, 1270, 1285, 1286,
	1287, 0, 0, 0, 1271, 0, 1271, 1271, 1271, 1271,
	1271, 1271, 1271, 0, 702, 917, 919, 920, 921, 1298,
	1299, 2116, 2117, 2118, 2119, 2120, 2092, 2093, 2094, 2095,
	2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105,
	2106, 2107, 2108, 2109, 1887, 1888, 1889, 1890, 1891, 1892,
	1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902,
	1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912,
	1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922,
	1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932,
	1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942,
	1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952,
	1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962,
	1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972,
	1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982,
	1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992,
	1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
	2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012,
	2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022,
	2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032,
	2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042,
	2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052,
	2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062,
	2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072,
	2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082,
	2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 0,
	0, 0, 747, 0, 713, 714, 715, 0, 717, 0,
	0, 0, 0, 0, 727, 730, 734, 0, 1207, 1207,
	579, 580, 581, 752, 753, 741, 754, 0, 0, 56,
	0, 0, 866, 326, 328, 0, 348, 0, 351, 354,
	1304, 764, 0, 0, 1329, 1330, 0, 0, 0, 0,
	0, 2025, 194, 265, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 0, 196, 196, 196, 2033, 196, 0,
	196, 196, 196, 196, 196, 264, 254, 255, 256, 0,
	0, 0, 2025, 0, 559, 556, 557, 57, 0, 46,
	58, 1223, 887, 888, 889, 0, 1276, 759, 0, 787,
	0, 39, 0, 1213, 0, 0, 795, 793, 794, 784,
	0, 806, 836, 0, 931, 1771, 937, -2, -2, -2,
	1682, 980, 981, 982, 983, 984, 985, 986, 987, 1626,
	0, 0, 0, 0, 0, 1724, 1010, 1011, 1012, 1013,
	1014, 1015, 1180, 1181, 1182, 1183, 1184, 1185, 1186, -2,
	-2, -2, 1169, 1170, 0, -2, -2, -2, -2, -2,
	1240, 0, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112,
	1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122,
	1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132,
	1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142,
	1143, 1144, 1145, 1146, 1750, 1815, 1701, 1820, 1645, 0,
	1637, 1715, 1844, 1845, 0, 1758, 2098, 0, -2, 1870,
	1808, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	2107, 2108, 1708, 1656, 1768, 1809, 1647, 1668, 1687, 1736,
	1737, 1739, 1773, 1774, 1792, 1801, 1819, 1627, 1628, 1629,
	1731, 1732, 1841, 1840, 1839, 1842, 1876, 1874, 1877, 1614,
	1615, 1616, 1617, 1618, 1619, 1620, 1621, 1623, 1624, 1625,
	1630, 1631, 1632, 1633, 1634, 1636, 1638, 1639, 1640, 1641,
	1642, 1643, 1644, 1648, 1649, 1650, 1655, 1657, 1658, 1659,
	1660, 1661, 1662, 1663, 1664, 1666, 1667, 1669, 1670, 1671,
	1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681,
	1683, 1684, 1686, 1688, 1689, 1690, 1691, 1692, 1693, 1694,
	1695, 1696, 1697, 1698, 1699, 1700, 1702, 1703, 1704, 1705,
	1706, 1707, 1709, 1710, 1711, 1712, 1713, 1714, 1716, 1717,
	1718, 1719, 1720, 1721, 1722, 1723, 1725, 1726, 1727, 1728,
	1729, 1730, 1733, 1734, 1735, 1738, 1740, 1741, 1742, 1743,
	1744, 1745, 1746, 1747, 1748, 1749, 1751, 1752, 1755, 1756,
	1757, 1760, 1761, 1762, 1763, 1764, 1765, 1767, 1769, 1770,
	1772, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784,
	1785, 1786, 1787, 1788, 1789, 1790, 1791, 1793, 1794, 1795,
	1796, 1797, 1798, 1799, 1800, 1802, 1803, 1804, 1805, 1806,
	1807, 1810, 1811, 1812, 1813, 1814, 1816, 1817, 1818, 1821,
	1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831,
	1832, 1833, 1834, 1835, 1836, 1837, 1838, 1843, 1847, 1848,
	1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1858, 1859,
	1860, 1861, 1862, 1863, 1864, 1865, 1866, 1871, 1872, 1873,
	1875, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886,
	1275, 1275, 0, 84, 2075, 0, 1247, -2, -2, 1249,
	0, 0, 0, -2, -2, -2, -2, 1638, -2, 1169,
	0, 0, 0, 1622, 1626, 1627, 1628, 1629, 1635, 1637,
	1645, 1646, 1647, 1651, 1652, 1653, 1654, 1656, 1665, 1668,
	1682, 1685, 1687, 1701, 1708, 1715, 1724, 1731, 1732, 1736,
	1737, 1739, 1750, 1753, 1754, 1758, 1759, 1766, 1768, 1771,
	1773, 1774, 1775, 1792, 1801, 1808, 1809, 1815, 1819, 1820,
	1839, 1840, 1841, 1842, 1844, 1845, 1846, 1857, 1867, 1868,
	1869, 1870, 1874, 1876, 1877, 100, 1199, 783, 101, 0,
	392, 393, 0, 0, 0, 0, 0, 0, 604, 1292,
	1293, 2110, 2111, 2112, 2113, 2114, 2115, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	1273, 251, 0, 0, 683, 0, 684, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 701,
	0, 703, 78, 704, 747, 706, 0, 0, 1273, 1273,
	0, 0, 0, 0, 0, 606, 607, 747, 747, 747,
	747, 744, 0, 744, 724, 744, 742, 743, 0, 729,
	0, 0, 0, 737, 738, 0, 765, 0, 0, 772,
	774, 775, 776, 777, 773, 0, 782, 0, 0, 0,
	330, 0, 0, 350, 332, 0, 335, 336, 337, 338,
	339, 340, 341, 342, 343, 344, 345, 346, 0, 353,
	0, 1302, 1305, 769, 1320, 1321, 0, 1331, 1332, 200,
	0, 200, 0, 0, 0, 0, 163, 196, 0, 165,
	196, 196, 196, 0, 196, 196, 172, 173, 196, 175,
	176, 177, 178, 179, 196, 181, 182, 183, 196, 196,
	186, 196, 196, 189, 190, 191, 192, 193, 263, 200,
	0, 0, 200, 0, 0, 541, 0, 0, 0, 0,
	546, 547, 548, 549, 0, 0, 552, 553, -2, 45,
	0, 0, 0, 0, 0, 42, 63, 0, 788, 789,
	62, 2122, 0, 50, 0, 0, 1208, 1211, 1212, 1200,
	1201, 1204, 0, 0, 790, 796, 797, 786, 0, 807,
	0, 0, 0, 0, 837, 0, 840, 841, 842, 843,
	844, 845, 0, 935, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 959, 960, 961, 962, 963, 964, 965,
	938, 0, 952, 0, 0, 0, 0, 0, 0, 1003,
	1004, 1005, 1006, 1007, 1008, 0, 795, 0, 0, 795,
	795, 795, 795, 795, 0, 0, 978, 1882, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 795, 0, 1161, 0, 0, 1072, 1081, 0,
	1073, 1082, 1074, 1083, 1075, 0, 1076, 1084, 1077, 1085,
	1078, 1079, 1086, 1080, 0, 0, 0, 974, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 80, 917,
	0, 85, 87, 0, 0, 2075, 1250, 1251, 515, 1264,
	1265, 1266, 0, 1262, 0, 1207, 792, 621, 0, 394,
	410, 504, 422, 423, 424, 497, 426, 497, 497, 0,
	497, 497, 497, 497, 497, 512, 512, 512, 512, 512,
	468, 469, 470, 471, 472, 0, 0, 445, 497, 497,
	497, 449, 487, 488, 489, 490, 491, 492, 493, 494,
	427, 428, 429, 430, 431, 432, 433, 434, 435, 436,
	499, 499, 501, 501, 501, 501, 501, 410, 410, 410,
	410, 0, 0, 0, 603, 0, 1290, 0, 0, 251,
	-2, 0, -2, 0, 912, 0, 0, 922, 0, 0,
	111, 281, 267, 110, 0, 245, 250, 246, 247, 248,
	0, 0, 0, 0, 258, 698, 1272, 0, 691, 76,
	692, 693, 694, 695, 696, 260, 697, 918, 1300, 1301,
	1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342,
	1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352,
	1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362,
	1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372,
	1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382,
	1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392,
	1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402,
	1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412,
	1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422,
	1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432,
	1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442,
	1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452,
	1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462,
	1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472,
	1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482,
	1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492,
	1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502,
	1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512,
	1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522,
	1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532,
	1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542,
	1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552,
	1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562,
	1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572,
	1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582,
	1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592,
	1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602,
	1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612,
	1613, 0, 705, 748, 0, 750, 0, 0, 866, 710,
	711, 712, 608, 718, 719, 720, 726, 747, 0, 0,
	0, 866, 747, 728, 966, 731, 1089, 0, 755, 767,
	766, 0, 779, 0, 327, 329, 331, 349, 0, 0,
	352, 355, 0, 0, 0, 0, 1323, 0, 1325, 1327,
	0, 0, 201, 202, 203, 200, 0, 195, 0, 218,
	266, 0, 164, 0, 198, 166, 167, 168, 196, 170,
	171, 174, 180, 184, 185, 187, 188, 262, 0, 0,
	0, 0, 161, 0, 542, 543, 544, 545, 554, 551,
	59, 0, 0, -2, 0, 1229, 1230, 1231, 1232, 1297,
	-2, -2, -2, -2, -2, 0, 760, 761, 0, 37,
	0, 1214, 0, 0, 0, 0, 1203, 1205, 1206, 0,
	0, 1188, 0, 0, 798, 791, 40, 932, 933, 934,
	936, 953, 0, 955, 957, 838, 839, 808, 0, 1171,
	1172, 1173, 1174, -2, 1296, 943, 944, 968, 969, 970,
	0, 0, 0, 0, 966, 948, 0, 988, 989, 990,
	991, 992, 993, 994, 995, 996, 997, 998, 999, 1002,
	1103, 1104, 0, 1177, 0, 976, 802, 803, 0, 1178,
	1000, 1187, 1001, 1009, 974, 1176, 1175, 0, 0, 0,
	0, 0, 971, 0, 1239, 0, 0, 0, 0, 1050,
	0, 0, 0, 0, 984, 1180, 0, 984, 1180, 0,
	0, 1740, 1855, 1631, 0, 0, 0, 1167, 1164, 0,
	0, 0, 1090, 0, 0, 0, 0, 0, 975, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 82, 0, 916, 0, 846, 848,
	849, 850, -2, 0, 854, 855, 925, 972, 1298, 0,
	-2, 0, 0, 74, 75, 0, 0, 0, 1248, 0,
	0, 0, 90, 91, 86, 1252, 0, -2, 1259, 1260,
	1171, 0, 1213, 795, 391, 622, 624, 627, 628, 629,
	630, 631, 632, 395, 397, 398, 399, 0, 586, 594,
	0, 0, 584, 586, 586, 0, 582, 583, 402, 507,
	505, 506, 425, 0, 512, 512, 497, 497, 497, 497,
	454, 512, 457, 460, 461, 515, 0, 515, 515, 515,
	515, 512, 0, 0, 446, 447, 448, 437, 0, 438,
	499, 440, 0, 441, 442, 443, 444, 403, 404, 405,
	406, 600, 601, 602, 0, 0, 0, 96, 0, 105,
	-2, 522, 523, 524, 0, 519, 1274, 106, 0, 283,
	284, 0, 221, 0, 252, 253, 113, 0, 0, 268,
	0, 389, 390, 0, 685, 0, 687, 257, 689, 699,
	700, 690, 0, 0, 79, 749, 707, 708, 709, 929,
	0, 0, 721, 745, 746, 744, 747, 725, 739, 0,
	0, 732, 0, 768, 867, 333, 334, 356, 82, 0,
	1303, 1322, 0, 1326, 1328, 0, 204, 206, 0, 0,
	155, 0, 0, 197, 0, 169, 0, 0, 0, 0,
	0, 550, 0, 60, 0, 1224, 0, 0, 638, 639,
	-2, 676, 1282, 676, 676, 662, 569, 676, 0, 0,
	0, 64, 51, 0, 1931, 54, 0, 1209, 1210, 1202,
	0, 1267, 1268, 1189, 1190, 97, 799, 954, 956, 958,
	0, 974, 945, 966, 949, 0, 946, 0, 940, 0,
	1048, 0, 0, 0, 0, 0, 0, 0, 979, -2,
	1046, 1047, 1049, 0, 0, 0, 1053, 0, 1056, 0,
	0, 1096, 0, 0, 1097, 1061, 0, 0, 0, 0,
	0, 1067, 1199, 0, 1165, 0, 0, 1070, 1071, 1091,
	0, 0, 1092, 1093, 1094, 1095, 1035, 0, 1036, 0,
	0, 0, 0, 0, 1042, 1043, 1044, 1045, 817, 817,
	817, 817, 817, 817, 817, 817, 817, 817, 817, 817,
	0, 0, 915, 0, 0, 0, 0, 0, 0, 890,
	0, 0, 893, 0, 0, 0, 0, 0, 0, 0,
	0, 859, 0, 861, 0, 925, 0, 0, 0, 974,
	0, 929, 0, 929, 929, 81, 0, 924, 88, 89,
	0, 0, 95, 516, 517, 0, 220, 0, 625, 0,
	396, 0, 587, 0, 0, 586, 586, 586, 585, 586,
	577, 587, 578, 0, 411, 0, 413, 414, 415, 416,
	417, 0, 0, 0, 0, 0, 511, 0, 536, 538,
	0, 0, 421, 508, 0, 515, 515, 512, 452, 453,
	497, 458, 515, 462, 479, 0, 463, 480, 464, 481,
	465, 482, 466, 483, 515, 0, 495, 0, 0, 439,
	0, 618, 0, 1291, 98, 0, 525, 526, 527, 0,
	569, 569, 569, 0, 285, 286, 287, 913, 0, 222,
	223, 0, 0, 0, 0, 923, 123, 0, 282, 0,
	0, 0, 0, 0, 0, 0, 77, 261, 716, 0,
	609, 610, 866, 723, 967, 733, 735, 736, 512, 0,
	1324, 0, 0, 0, 0, 0, 0, 216, 199, 0,
	0, 0, 0, 162, 0, 1227, 1226, 0, 0, 586,
	0, 663, 664, 0, 677, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1283, 1284, 0, 0, 0,
	570, 0, 671, 672, 0, 0, 52, 53, 1215, 38,
	50, 0, 809, 1179, 0, 947, 0, 950, 977, 804,
	0, 1016, 817, 817, 817, 817, 817, 0, 497, 497,
	1150, 497, 501, 1153, 497, 1155, 497, 1158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1162, 1069, 1168, 0, 0, 0, 810, 811, 813, 1037,
	1038, 1039, 1040, 1041, 1020, 818, 1021, 1022, 1024, 1025,
	1027, 1028, 1029, 1030, 1032, 1033, 1034, 1233, 0, 0,
	0, 1218, 0, 929, 1241, 0, 0, 0, 0, 2110,
	2111, -2, -2, -2, -2, -2, 847, 881, 883, 0,
	878, 891, 892, 894, 0, 896, 0, 898, 899, 868,
	853, 973, 856, 0, 0, 0, 925, 865, 0, 0,
	0, 0, 0, 1199, 929, 72, 73, 0, 92, 93,
	94, 623, 626, 0, 588, 497, 497, 0, 592, 584,
	593, 571, 573, 574, 576, 0, 412, 0, 0, 420,
	509, 0, 535, 537, 539, 540, 498, 450, 475, 451,
	476, 515, 459, 455, 477, 513, 514, 467, 484, 512,
	0, 512, 0, 502, 0, 605, 619, 0, 0, 0,
	96, 569, 0, 0, 0, 0, 229, 0, 225, 0,
	0, 0, 131, 0, 114, 115, 116, 118, 119, 0,
	0, 0, 112, 0, 270, 0, 273, 274, 686, 688,
	930, 747, 1314, 914, 216, 205, 207, 208, 0, 216,
	219, 156, 0, 157, 159, 0, 158, 555, 0, 640,
	0, 673, 0, 0, 1290, 584, 0, -2, 643, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	0, 669, 0, 645, 0, 673, 0, 666, 0, 0,
	55, 48, 97, 97, 1017, 951, 0, 1019, 1023, 1018,
	1026, 1031, 1051, 1147, 512, 1151, 1152, 1154, 1156, 1157,
	1159, 1055, 1052, 1054, 0, 0, 0, 0, 1062, 0,
	0, 0, 0, 0, 0, 1166, 0, 0, 815, 814,
	65, 0, 1233, 1216, 1235, 1237, 0, 0, 0, 0,
	-2, 1609, 0, 872, 1199, 0, 0, 0, 0, 0,
	875, 882, 0, 0, 876, 0, 877, 895, 897, 851,
	0, 0, 857, 0, 0, -2, 864, 0, 0, 0,
	874, 0, 1207, 71, 561, 0, 1204, 1204, 586, 586,
	0, 870, 0, 0, 510, 1089, 1089, 1089, 1089, 1089,
	1089, 1089, 1089, 1089, 0, 0, 456, 478, 515, 496,
	515, 0, 0, 620, 0, 96, 98, 0, 530, 531,
	532, 533, 534, 0, 97, 230, 231, 0, 0, 0,
	236, 0, 0, 0, 0, 0, 224, 226, 227, 228,
	149, 132, 133, 0, 0, 0, 0, 124, 125, 0,
	0, 0, 0, 0, 120, 121, 122, 269, 0, 0,
	272, 0, 0, 722, 1316, 1310, 209, 216, 209, 0,
	160, 1228, 0, 642, 674, 0, 410, 410, 0, 586,
	586, 665, 0, 1280, 1281, 0, 660, 673, 0, 0,
	0, 929, 0, 0, 800, 805, 1148, 1149, 0, 0,
	0, 0, 1063, 1064, 1065, 1098, 1068, 1163, 0, 0,
	1199, 0, 0, 66, 0, 1238, -2, 0, 0, 83,
	0, 1207, 1242, 1243, 1244, 1245, 1246, 879, 0, 884,
	0, 0, 925, 862, 0, 0, 0, 0, 0, 70,
	560, 564, 0, 569, 0, 589, 590, 591, 572, 575,
	0, 0, 407, 0, 473, 485, 474, 486, 500, 503,
	0, 103, 0, 528, 529, 0, 98, 232, 233, 234,
	235, 237, 238, 0, 0, 0, 109, 0, 0, 134,
	0, 0, 0, 0, 144, 145, 146, 147, 148, 126,
	127, 128, 129, 130, 117, 0, 0, 271, 0, 276,
	277, 1277, 1318, -2, 0, 152, 0, 209, 154, 217,
	641, 675, 400, 401, 0, 1290, 0, 644, 659, 661,
	0, 668, 0, 1191, 49, 97, 1057, 1059, 1058, 1060,
	0, 0, 0, 1087, 1088, 819, 0, 0, 1236, 1217,
	0, 1221, 0, 873, 69, 0, 869, 858, 860, 925,
	926, 927, 928, 0, 565, 566, 0, 568, 0, 871,
	418, 408, 409, 0, 562, 96, 0, 56, 239, 240,
	241, 242, 150, 151, 135, 136, 0, 138, 139, 0,
	0, 0, 279, 0, 275, 868, 0, 1310, 0, 1312,
	0, 1309, 0, 210, 153, 0, 0, 0, 667, 0,
	679, 0, 1196, 0, 801, 1066, 0, 0, 0, 0,
	0, 0, 816, 0, 1220, 0, 880, 863, 0, 567,
	0, 407, 102, 563, 104, 288, 96, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 383, 384, 385, 386, 387, 388, 0, 0, 0,
	56, 0, 140, 0, 142, 143, 278, 0, 36, 0,
	1317, 0, 1315, 0, 0, 1311, 0, 562, 0, 0,
	678, 0, 0, 829, 0, 0, 1099, 0, 1102, 812,
	820, 0, 823, 0, 0, 0, 834, 0, 821, 1234,
	-2, 0, 902, 0, 0, 419, 96, 0, 0, 108,
	0, 0, 1292, 0, 0, -2, -2, -2, 1294, 0,
	357, 137, 141, 280, 1278, 1279, 1319, 0, 0, 0,
	646, 0, 562, 680, 0, 47, 0, 1197, 1198, 1192,
	1193, 1195, 1100, 0, 824, 825, 826, 827, 828, 0,
	0, 0, 0, 0, 98, 289, 290, 0, 299, 0,
	56, 0, 0, 0, 313, 0, 56, 1313, 1307, 211,
	212, 213, 215, 562, 670, 0, 830, 831, 0, 0,
	0, 0, 835, 0, 903, 904, 0, 0, 595, 56,
	0, 56, 300, 0, 0, 0, 0, 0, 0, 1295,
	243, 358, 0, 647, 0, 0, 0, 1194, 0, 822,
	0, 901, 907, 0, 596, 597, 0, 96, 291, 292,
	293, 294, 295, 56, 0, 297, 0, 56, 56, 309,
	310, 311, 56, 318, 320, 321, 322, 0, 324, 325,
	314, 214, 0, 832, 833, 1101, 900, 908, 906, 598,
	0, 599, 0, 0, 0, 107, 0, 57, 56, 0,
	0, 56, 0, 306, 0, 312, 0, 323, 0, 1760,
	905, 0, 0, 0, 611, 613, 614, 0, 0, 612,
	56, 0, -2, 302, 0, 0, 56, 307, 0, 319,
	681, 682, 0, 0, 0, 615, 616, 617, 296, 298,
	56, 304, 0, 56, 909, 0, 911, 0, 56, 0,
	910, 303, 0, -2, 305,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 92, 3, 3, 3, 127, 119, 3,
	68, 70, 124, 122, 69, 123, 177, 125, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 611,
	101, 100, 102, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 129, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 118, 3, 130,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 82, 83, 84, 85,
	86, 87, 88, 89, 90, 91, 93, 94, 95, 96,
	97, 98, 99, 103, 104, 105, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 116, 117, 120, 121,
	126, 128, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 274, 275,
}

var yyTok3 = [...]int{
	57600, 276, 57601, 277, 57602, 278, 57603, 279, 57604, 280,
	57605, 281, 57606, 282, 57607, 283, 57608, 284, 57609, 285,
	57610, 286, 57611, 287, 57612, 288, 57613, 289, 57614, 290,
	57615, 291, 57616, 292, 57617, 293, 57618, 294, 57619, 295,
	57620, 296, 57621, 297, 57622, 298, 57623, 299, 57624, 300,
	57625, 301, 57626, 302, 57627, 303, 57628, 304, 57629, 305,
	57630, 306, 57631, 307, 57632, 308, 57633, 309, 57634, 310,
	57635, 311, 57636, 312, 57637, 313, 57638, 314, 57639, 315,
	57640, 316, 57641, 317, 57642, 318, 57643, 319, 57644, 320,
	57645, 321, 57646, 322, 57647, 323, 57648, 324, 57649, 325,
	57650, 326, 57651, 327, 57652, 328, 57653, 329, 57654, 330,
	57655, 331, 57656, 332, 57657, 333, 57658, 334, 57659, 335,
	57660, 336, 57661, 337, 57662, 338, 57663, 339, 57664, 340,
	57665, 341, 57666, 342, 57667, 343, 57668, 344, 57669, 345,
	57670, 346, 57671, 347, 57672, 348, 57673, 349, 57674, 350,
	57675, 351, 57676, 352, 57677, 353, 57678, 354, 57679, 355,
	57680, 356, 57681, 357, 57682, 358, 57683, 359, 57684, 360,
	57685, 361, 57686, 362, 57687, 363, 57688, 364, 57689, 365,
	57690, 366, 57691, 367, 57692, 368, 57693, 369, 57694, 370,
	57695, 371, 57696, 372, 57697, 373, 57698, 374, 57699, 375,
	57700, 376, 57701, 377, 57702, 378, 57703, 379, 57704, 380,
	57705, 381, 57706, 382, 57707, 383, 57708, 384, 57709, 385,
	57710, 386, 57711, 387, 57712, 388, 57713, 389, 57714, 390,
	57715, 391, 57716, 392, 57717, 393, 57718, 394, 57719, 395,
	57720, 396, 57721, 397, 57722, 398, 57723, 399, 57724, 400,
	57725, 401, 57726, 402, 57727, 403, 57728, 404, 57729, 405,
	57730, 406, 57731, 407, 57732, 408, 57733, 409, 57734, 410,
	57735, 411, 57736, 412, 57737, 413, 57738, 414, 57739, 415,
	57740, 416, 57741, 417, 57742, 418, 57743, 419, 57744, 420,
	57745, 421, 57746, 422, 57747, 423, 57748, 424, 57749, 425,
	57750, 426, 57751, 427, 57752, 428, 57753, 429, 57754, 430,
	57755, 431, 57756, 432, 57757, 433, 57758, 434, 57759, 435,
	57760, 436, 57761, 437, 57762, 438, 57763, 439, 57764, 440,
	57765, 441, 57766, 442, 57767, 443, 57768, 444, 57769, 445,
	57770, 446, 57771, 447, 57772, 448, 57773, 449, 57774, 450,
	57775, 451, 57776, 452, 57777, 453, 57778, 454, 57779, 455,
	57780, 456, 57781, 457, 57782, 458, 57783, 459, 57784, 460,
	57785, 461, 57786, 462, 57787, 463, 57788, 464, 57789, 465,
	57790, 466, 57791, 467, 57792, 468, 57793, 469, 57794, 470,
	57795, 471, 57796, 472, 57797, 473, 57798, 474, 57799, 475,
	57800, 476, 57801, 477, 57802, 478, 57803, 479, 57804, 480,
	57805, 481, 57806, 482, 57807, 483, 57808, 484, 57809, 485,
	57810, 486, 57811, 487, 57812, 488, 57813, 489, 57814, 490,
	57815, 491, 57816, 492, 57817, 493, 57818, 494, 57819, 495,
	57820, 496, 57821, 497, 57822, 498, 57823, 499, 57824, 500,
	57825, 501, 57826, 502, 57827, 503, 57828, 504, 57829, 505,
	57830, 506, 57831, 507, 57832, 508, 57833, 509, 57834, 510,
	57835, 511, 57836, 512, 57837, 513, 57838, 514, 57839, 515,
	57840, 516, 57841, 517, 57842, 518, 57843, 519, 57844, 520,
	57845, 521, 57846, 522, 57847, 523, 57848, 524, 57849, 525,
	57850, 526, 57851, 527, 57852, 528, 57853, 529, 57854, 530,
	57855, 531, 57856, 532, 57857, 533, 57858, 534, 57859, 535,
	57860, 536, 57861, 537, 57862, 538, 57863, 539, 57864, 540,
	57865, 541, 57866, 542, 57867, 543, 57868, 544, 57869, 545,
	57870, 546, 57871, 547, 57872, 548, 57873, 549, 57874, 550,
	57875, 551, 57876, 552, 57877, 553, 57878, 554, 57879, 555,
	57880, 556, 57881, 557, 57882, 558, 57883, 559, 57884, 560,
	57885, 561, 57886, 562, 57887, 563, 57888, 564, 57889, 565,
	57890, 566, 57891, 567, 57892, 568, 57893, 569, 57894, 570,
	57895, 571, 57896, 572, 57897, 573, 57898, 574, 57899, 575,
	57900, 576, 57901, 577, 57902, 578, 57903, 579, 57904, 580,
	57905, 581, 57906, 582, 57907, 583, 57908, 584, 57909, 585,
	57910, 586, 57911, 587, 57912, 588, 57913, 589, 57914, 590,
	57915, 591, 57916, 592, 57917, 593, 57918, 594, 57919, 595,
	57920, 596, 57921, 597, 57922, 598, 57923, 599, 57924, 600,
	57925, 601, 57926, 602, 57927, 603, 57928, 604, 57929, 605,
	57930, 606, 57931, 607, 57932, 608, 57933, 609, 57934, 610,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:541
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:545
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:552
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:587
		{
			setParseTree(yylex, nil)
		}
	case 36:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:593
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 37:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:599
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			if err := yyDollar[1].selStmt.SetInto(yyDollar[5].into); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 38:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:610
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:616
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 40:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:626
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:633
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 42:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:637
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:643
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:647
		{
			yyDollar[3].selStmt.SetWith(yyDollar[2].with)
			yyVAL.selStmt = yyDollar[3].selStmt
		}
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:654
		{
			yyVAL.with = &With{Ctes: yyDollar[2].tableExprs, Recursive: true}
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:657
		{
			yyVAL.with = &With{Ctes: yyDollar[1].tableExprs, Recursive: false}
		}
	case 47:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:663
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr), Window: yyDollar[13].window, Into: yyDollar[8].into}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 48:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:671
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 49:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:675
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 50:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:684
		{
			yyVAL.into = nil
		}
	case 51:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:688
		{
			yyVAL.into = &Into{Variables: yyDollar[2].variables}
		}
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:692
		{
			yyVAL.into = &Into{Outfile: string(yyDollar[3].bytes)}
		}
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:696
		{
			yyVAL.into = &Into{Dumpfile: string(yyDollar[3].bytes)}
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:702
		{
			yyVAL.variables = Variables{yyDollar[1].colIdent}
		}
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:706
		{
			yyVAL.variables = append(yyVAL.variables, yyDollar[3].colIdent)
		}
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:711
		{
			yyVAL.with = nil
		}
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:715
		{
			yyVAL.with = yyDollar[2].with
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:721
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:725
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:731
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[4].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[2].columns}
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:737
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:745
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:751
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:759
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 65:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:765
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[7].ins
			ins.Action = yyDollar[2].str
			ins.Comments = yyDollar[3].bytes2
			ins.Ignore = yyDollar[4].str
			ins.Table = yyDollar[5].tableName
			ins.Partitions = yyDollar[6].partitions
			ins.OnDup = OnDup(yyDollar[8].assignExprs)
			ins.With = yyDollar[1].with
			yyVAL.statement = ins
		}
	case 66:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:778
		{
			cols := make(Columns, 0, len(yyDollar[8].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[9].assignExprs))
			for _, updateList := range yyDollar[8].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[2].str, Comments: Comments(yyDollar[3].bytes2), Ignore: yyDollar[4].str, Table: yyDollar[5].tableName, Partitions: yyDollar[6].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[9].assignExprs), With: yyDollar[1].with}
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:790
		{
			yyVAL.str = InsertStr
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:794
		{
			yyVAL.str = ReplaceStr
		}
	case 69:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:800
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[3].bytes2), Ignore: yyDollar[4].str, TableExprs: yyDollar[5].tableExprs, Exprs: yyDollar[7].assignExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), OrderBy: yyDollar[9].orderBy, Limit: yyDollar[10].limit, With: yyDollar[1].with}
		}
	case 70:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:806
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitions, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit, With: yyDollar[1].with}
		}
	case 71:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:810
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[5].tableNames, TableExprs: yyDollar[7].tableExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), With: yyDollar[1].with}
		}
	case 72:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:814
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), With: yyDollar[1].with}
		}
	case 73:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:818
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), With: yyDollar[1].with}
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:823
		{
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:824
		{
		}
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:828
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:832
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:838
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:842
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:848
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 81:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:852
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 82:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:857
		{
			yyVAL.partitions = nil
		}
	case 83:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:861
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:867
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 85:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:871
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 86:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:878
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:887
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:891
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:897
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:901
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 91:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:905
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:911
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:915
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:919
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:923
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:928
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 97:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:933
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:938
		{
			yyVAL.boolean = yySpecialCommentMode(yylex)
		}
	case 99:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:944
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:953
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:958
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 102:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:963
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 103:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:967
		{
			yyDollar[2].viewSpec.ViewName = yyDollar[4].tableName.ToViewName()
			yyDollar[2].viewSpec.ViewExpr = yyDollar[8].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[2].viewSpec, SpecialCommentMode: yyDollar[7].boolean, SubStatementPositionStart: yyDollar[6].int, SubStatementPositionEnd: yyDollar[9].int - 1}
		}
	case 104:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:973
		{
			yyDollar[4].viewSpec.ViewName = yyDollar[6].tableName.ToViewName()
			yyDollar[4].viewSpec.ViewExpr = yyDollar[10].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[4].viewSpec, SpecialCommentMode: yyDollar[9].boolean, SubStatementPositionStart: yyDollar[8].int, SubStatementPositionEnd: yyDollar[11].int - 1, OrReplace: true}
		}
	case 105:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:979
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 106:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:987
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 107:
		yyDollar = yyS[yypt-16 : yypt+1]
//line sql.y:995
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName, Definer: yyDollar[2].str, Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[15].statement}, SpecialCommentMode: yyDollar[14].boolean, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[16].int - 1}
		}
	case 108:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:999
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName, Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[11].statement}, SpecialCommentMode: yyDollar[10].boolean, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[12].int - 1}
		}
	case 109:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1003
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].tlsOptionItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].accountLimitItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].passLockItems)
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames, TLSOptions: tlsOptions, AccountLimits: accountLimits, PasswordOptions: passwordOptions, Locked: locked, Attribute: yyDollar[9].str}
		}
	case 110:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1022
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 111:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1031
		{
			yyVAL.accountNames = nil
		}
	case 112:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1035
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 113:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1040
		{
			yyVAL.tlsOptionItems = nil
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1044
		{
			yyVAL.tlsOptionItems = nil
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1048
		{
			yyVAL.tlsOptionItems = yyDollar[2].tlsOptionItems
		}
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1054
		{
			yyVAL.tlsOptionItems = []TLSOptionItem{yyDollar[1].tlsOptionItem}
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1058
		{
			yyVAL.tlsOptionItems = append(yyDollar[1].tlsOptionItems, yyDollar[3].tlsOptionItem)
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1064
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1068
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1072
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1076
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1080
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 123:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1085
		{
			yyVAL.accountLimitItems = nil
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1089
		{
			yyVAL.accountLimitItems = yyDollar[2].accountLimitItems
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1095
		{
			yyVAL.accountLimitItems = []AccountLimitItem{yyDollar[1].accountLimitItem}
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1099
		{
			yyVAL.accountLimitItems = append(yyDollar[1].accountLimitItems, yyDollar[2].accountLimitItem)
		}
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1105
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1109
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1113
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1117
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 131:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1122
		{
			yyVAL.passLockItems = nil
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1126
		{
			yyVAL.passLockItems = yyDollar[1].passLockItems
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1132
		{
			yyVAL.passLockItems = []PassLockItem{yyDollar[1].passLockItem}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1136
		{
			yyVAL.passLockItems = append(yyDollar[1].passLockItems, yyDollar[2].passLockItem)
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1142
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1146
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 137:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1150
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1154
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1158
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 140:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1162
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 141:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1166
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 142:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1170
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 143:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1174
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1178
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1182
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1186
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1190
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1194
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 149:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1199
		{
			yyVAL.str = ""
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1203
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.str = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1208
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 152:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1214
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 153:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1219
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[5].grantObjectType, PrivilegeLevel: yyDollar[6].privilegeLevel, To: yyDollar[8].accountNames, WithGrantOption: yyDollar[9].boolean, As: yyDollar[10].grantAssumption}
		}
	case 154:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1224
		{
			yyVAL.statement = &GrantPrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 155:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1228
		{
			yyVAL.statement = &GrantRole{Roles: yyDollar[2].accountNames, To: yyDollar[4].accountNames, WithAdminOption: yyDollar[5].boolean}
		}
	case 156:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1232
		{
			yyVAL.statement = &GrantProxy{On: yyDollar[4].accountName, To: yyDollar[6].accountNames, WithGrantOption: yyDollar[7].boolean}
		}
	case 157:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1238
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &RevokePrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 158:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1243
		{
			yyVAL.statement = &RevokePrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 159:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1247
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[7].accountNames}
		}
	case 160:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1251
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[8].accountNames}
		}
	case 161:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1255
		{
			yyVAL.statement = &RevokeRole{Roles: yyDollar[2].accountNames, From: yyDollar[4].accountNames}
		}
	case 162:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1259
		{
			yyVAL.statement = &RevokeProxy{On: yyDollar[4].accountName, From: yyDollar[6].accountNames}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1265
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].strs}
		}
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1269
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].strs}
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1273
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].strs}
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1277
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].strs}
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1281
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].strs}
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1285
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].strs}
		}
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1289
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].strs}
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1293
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].strs}
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1297
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].strs}
		}
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1301
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].strs}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1305
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].strs}
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1309
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].strs}
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1313
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].strs}
		}
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1317
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].strs}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1321
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].strs}
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1325
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].strs}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1329
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].strs}
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1333
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].strs}
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1337
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].strs}
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1341
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].strs}
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1345
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].strs}
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1349
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].strs}
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1353
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].strs}
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1357
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].strs}
		}
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1361
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].strs}
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1365
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].strs}
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1369
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].strs}
		}
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1373
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].strs}
		}
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1377
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].strs}
		}
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1381
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].strs}
		}
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1385
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].strs}
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1391
		{
			yyVAL.grantPrivileges = []Privilege{yyDollar[1].grantPrivilege}
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1395
		{
			yyVAL.grantPrivileges = append(yyDollar[1].grantPrivileges, yyDollar[3].grantPrivilege)
		}
	case 196:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1400
		{
			yyVAL.strs = nil
		}
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1404
		{
			yyVAL.strs = yyDollar[2].strs
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1410
		{
			yyVAL.strs = []string{yyDollar[1].colIdent.String()}
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1414
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].colIdent.String())
		}
	case 200:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1419
		{
			yyVAL.grantObjectType = GrantObjectType_Any
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1423
		{
			yyVAL.grantObjectType = GrantObjectType_Table
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1427
		{
			yyVAL.grantObjectType = GrantObjectType_Function
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1431
		{
			yyVAL.grantObjectType = GrantObjectType_Procedure
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1437
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1441
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1445
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].colIdent.String()}
		}
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1449
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: "*"}
		}
	case 208:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1453
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: yyDollar[3].colIdent.String()}
		}
	case 209:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1458
		{
			yyVAL.grantAssumption = nil
		}
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1462
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 211:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1466
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 212:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1470
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].accountName, Roles: nil}
		}
	case 213:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1474
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].accountName, Roles: nil}
		}
	case 214:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1478
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].accountName, Roles: yyDollar[7].accountNames}
		}
	case 215:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1482
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].accountName, Roles: yyDollar[5].accountNames}
		}
	case 216:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1487
		{
			yyVAL.boolean = false
		}
	case 217:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1491
		{
			yyVAL.boolean = true
		}
	case 218:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1496
		{
			yyVAL.boolean = false
		}
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1500
		{
			yyVAL.boolean = true
		}
	case 220:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1507
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 221:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1519
		{
			yyVAL.procedureParams = nil
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1523
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1529
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1533
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1539
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[1].colIdent.String(), Type: yyDollar[2].columnType}
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1543
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1547
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1551
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 229:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1556
		{
			yyVAL.characteristics = nil
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1560
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1566
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1570
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1576
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1580
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1584
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1588
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1592
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1596
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1600
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1604
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1608
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1612
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1618
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1624
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: "", Definer: yyDollar[1].str, Security: yyDollar[2].str}
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1628
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: yyDollar[1].str, Definer: yyDollar[2].str, Security: yyDollar[3].str}
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1634
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1638
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1642
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 249:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1647
		{
			yyVAL.str = ""
		}
	case 250:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1651
		{
			yyVAL.str = yyDollar[3].accountName.String()
		}
	case 251:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1656
		{
			yyVAL.str = ""
		}
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1660
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1664
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1670
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1674
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1678
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1684
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1692
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1696
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1702
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1706
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1712
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1720
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1728
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1738
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1742
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1748
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1752
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 269:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1756
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1760
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 271:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1764
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 272:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1770
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1774
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1778
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 275:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1782
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 276:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1786
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 277:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1790
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1796
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1800
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 280:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1804
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1810
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1814
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1820
		{
			yyVAL.str = BeforeStr
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1824
		{
			yyVAL.str = AfterStr
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1830
		{
			yyVAL.str = InsertStr
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1834
		{
			yyVAL.str = UpdateStr
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1838
		{
			yyVAL.str = DeleteStr
		}
	case 288:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1843
		{
			yyVAL.triggerOrder = nil
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1847
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1851
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1857
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 296:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1867
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 297:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1873
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 298:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1877
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1883
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1887
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 301:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1893
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 302:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1899
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 303:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1904
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 304:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1909
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 305:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1915
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1923
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1927
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 308:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1933
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 309:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1939
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 310:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1943
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 311:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1947
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 312:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1951
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1955
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 314:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1959
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1966
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1970
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1974
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1980
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1984
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1990
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1994
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1998
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2002
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2006
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2010
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2016
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2020
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2024
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 329:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2028
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2034
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2038
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2044
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2048
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2054
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2060
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2064
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2068
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2072
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2076
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2080
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2084
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2088
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2092
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2096
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2100
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2104
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2110
		{
			yyVAL.statement = &Resignal{}
		}
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2114
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 349:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2118
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2122
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2126
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 352:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2130
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2136
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 354:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2141
		{
			yyVAL.exprs = nil
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2145
		{
			yyVAL.exprs = nil
		}
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2149
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2155
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2159
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2165
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 389:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2200
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
		}
	case 390:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2214
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: TableName{Name: NewTableIdent(string(yyDollar[5].bytes))}, IfNotExists: ne, Temporary: neTemp}
		}
	case 391:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2230
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2237
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2242
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2247
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2253
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 396:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2257
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2262
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2266
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2270
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2276
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2284
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2294
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2302
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2310
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2318
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2326
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 407:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2335
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2339
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2343
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 410:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2348
		{
			yyVAL.columnType = ColumnType{}
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2352
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2361
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2370
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2379
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2388
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2397
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2406
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 418:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2415
		{
			opt := ColumnType{GeneratedExpr: yyDollar[4].expr, Stored: yyDollar[6].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 419:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2424
		{
			opt := ColumnType{GeneratedExpr: yyDollar[6].expr, Stored: yyDollar[8].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2433
		{
			opt := ColumnType{SRID: NewIntVal(yyDollar[3].bytes)}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2444
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2455
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2460
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2466
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2470
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2474
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2478
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2482
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2486
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2490
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2494
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2498
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2502
		{
			yyVAL.columnType = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2508
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2514
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2520
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2526
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 441:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2532
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2538
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2544
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2550
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2558
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2562
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2566
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2570
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2574
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2580
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2584
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2588
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2592
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2596
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 455:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2600
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 456:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2604
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2608
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2612
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 459:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2616
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 460:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2620
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2624
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2628
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2632
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2636
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2640
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2644
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 467:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2648
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2652
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2656
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2660
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2664
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2668
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 473:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2672
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 474:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2677
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2681
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 476:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2685
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 477:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2689
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 478:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2693
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, BinaryCollate: true}
		}
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2697
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2701
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2705
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2709
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2713
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 484:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2717
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 485:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2721
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, BinaryCollate: true}
		}
	case 486:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2725
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, BinaryCollate: true}
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2731
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2735
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2739
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2743
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2747
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2751
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2755
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2759
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2765
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2770
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2775
		{
			yyVAL.sqlVal = nil
		}
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2779
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 499:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2784
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 500:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2788
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 501:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2796
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2800
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 503:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2806
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 504:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2814
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2818
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2822
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 507:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2827
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2831
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2837
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2843
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2849
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 512:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2854
		{
			yyVAL.str = ""
		}
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2858
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2862
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2867
		{
			yyVAL.str = ""
		}
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2871
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2875
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2880
		{
			yyVAL.boolean = false
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2884
		{
			yyVAL.boolean = true
		}
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2889
		{
			yyVAL.charsetCollates = nil
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2893
		{
			yyVAL.charsetCollates = yyDollar[1].charsetCollates
		}
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2899
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2903
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2907
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2911
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2915
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2919
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 528:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2925
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 529:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2929
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 530:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2933
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 531:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2937
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 532:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2943
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2947
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2953
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2959
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2963
		{
			yyVAL.colKeyOpt = colKey
		}
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2967
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2971
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 539:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2975
		{
			yyVAL.colKeyOpt = colKeyFulltextKey
		}
	case 540:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2981
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2987
		{
			yyVAL.statement = &Flush{Type: yyDollar[2].str, Option: yyDollar[3].flushOption}
		}
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2993
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2997
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3001
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3005
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3009
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3013
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3017
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3021
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3025
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].str}
		}
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3029
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3033
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3037
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 554:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3042
		{
			yyVAL.str = ""
		}
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3044
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3048
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3050
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 558:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3053
		{
			yyVAL.str = ""
		}
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3055
		{
			yyVAL.str = yyDollar[1].str
		}
	case 560:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3059
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 561:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3063
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 562:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3068
		{
			yyVAL.indexOptions = nil
		}
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3072
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3078
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3082
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3088
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3092
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3097
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 569:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3103
		{
			yyVAL.str = ""
		}
	case 570:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3107
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3115
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 572:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3119
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3123
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3127
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true}
		}
	case 575:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3131
		{
			var name string
			name = yyDollar[2].str
			if name == "" {
				name = yyDollar[5].str
			}
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].str), Name: NewColIdent(name), Unique: true}
		}
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3140
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3144
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3148
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3154
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3158
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3162
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3168
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3172
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 584:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3177
		{
			yyVAL.str = ""
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3181
		{
			yyVAL.str = yyDollar[1].str
		}
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3186
		{
			yyVAL.str = ""
		}
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3190
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3196
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3200
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3206
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3210
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3216
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3220
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3224
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 595:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3230
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 596:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3234
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 597:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3238
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 598:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3242
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 599:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3246
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3252
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3257
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3261
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3265
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3269
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 605:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3275
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3281
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3285
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 608:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3290
		{
			yyVAL.str = ""
		}
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3294
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3298
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3304
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3310
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 613:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3316
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3320
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3324
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3328
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3332
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 618:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3337
		{
			yyVAL.boolean = true
		}
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3341
		{
			yyVAL.boolean = true
		}
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3345
		{
			yyVAL.boolean = false
		}
	case 621:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3350
		{
			yyVAL.str = ""
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3354
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3358
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3366
		{
			yyVAL.str = yyDollar[1].str
		}
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3370
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3374
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3380
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3384
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3388
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3393
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3397
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3401
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 633:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3407
		{
			yyVAL.str = ""
		}
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3411
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3416
		{
			yyVAL.str = string("")
		}
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3420
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 638:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3429
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3442
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3446
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 641:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3452
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 642:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3459
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3466
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 644:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3470
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3474
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 646:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3479
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 647:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3483
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3487
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3492
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3497
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3502
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3507
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3512
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3517
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3522
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3527
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3532
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3537
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 659:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3541
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 660:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3545
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 661:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3552
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3558
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3562
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3568
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 665:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3574
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3579
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 667:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3583
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 668:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3587
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3591
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 670:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3597
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[7].indexColumns, Options: yyDollar[9].indexOptions}
			yyVAL.ddl = ddl
		}
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3603
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3607
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 673:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3612
		{
			yyVAL.columnOrder = nil
		}
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3616
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3620
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 676:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3625
		{
		}
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3627
		{
		}
	case 678:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3631
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3637
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3641
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 681:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3647
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 682:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3651
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3657
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3661
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3667
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 686:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3671
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3679
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 688:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3683
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 689:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3689
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 690:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3697
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 691:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3701
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 692:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3709
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 693:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3717
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 694:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3725
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName}, IfExists: exists}
		}
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3733
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName}, IfExists: exists}
		}
	case 696:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3741
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3749
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 698:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3758
		{

		}
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3762
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3766
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3772
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3776
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3782
		{
			yyVAL.statement = &Analyze{Tables: yyDollar[3].tableNames}
		}
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3788
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 705:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3793
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3797
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 707:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3801
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 708:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3805
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 709:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3809
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3814
		{
			yyVAL.statement = &Show{Type: CreateProcedureStr, Table: yyDollar[4].tableName}
		}
	case 711:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3818
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3822
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3826
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3830
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3834
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 716:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3838
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3842
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 718:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3846
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 719:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3850
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 720:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3854
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 721:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3858
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 722:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3862
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, AsOf: yyDollar[7].expr, Filter: yyDollar[8].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, Table: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 723:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3867
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3872
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 725:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3876
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 726:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3880
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3884
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 728:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3888
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3894
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3902
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3906
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 732:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3911
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 733:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3915
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3920
		{
			yyVAL.statement = &ShowPrivileges{}
		}
	case 735:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3924
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 736:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3928
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3932
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3936
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3942
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 740:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3948
		{
			yyVAL.boolean = false
		}
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3952
		{
			yyVAL.boolean = true
		}
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3958
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3962
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 744:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3968
		{
			yyVAL.str = ""
		}
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3972
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3976
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 747:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3982
		{
			yyVAL.showFilter = nil
		}
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3986
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3990
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[3].bytes)}
		}
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3994
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 751:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4000
		{
			yyVAL.str = ""
		}
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4004
		{
			yyVAL.str = SessionStr
		}
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4008
		{
			yyVAL.str = GlobalStr
		}
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4014
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4018
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: yyDollar[2].tableIdent.v + "/" + yyDollar[4].tableIdent.v}}
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4022
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4028
		{
			yyVAL.statement = &Begin{}
		}
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4032
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4038
		{
			yyVAL.statement = &Begin{}
		}
	case 760:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4042
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 761:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4046
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4052
		{
			yyVAL.statement = &Commit{}
		}
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4058
		{
			yyVAL.statement = &Rollback{}
		}
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4064
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4070
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 766:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4074
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4078
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 768:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4082
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4088
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4093
		{
		}
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4094
		{
		}
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4098
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4102
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4108
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 778:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4116
		{
			yyVAL.str = ""
		}
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4120
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4131
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[3].expr}
			yyVAL.statement = &Show{Type: "columns", Table: yyDollar[2].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4137
		{
			setAllowComments(yylex, true)
		}
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4141
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4147
		{
			yyVAL.bytes2 = nil
		}
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4151
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4157
		{
			yyVAL.str = UnionStr
		}
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4161
		{
			yyVAL.str = UnionAllStr
		}
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4165
		{
			yyVAL.str = UnionDistinctStr
		}
	case 790:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4170
		{
			yyVAL.byt = 0
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4174
		{
			yyVAL.byt = 1
		}
	case 792:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4179
		{
			yyVAL.str = ""
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4183
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4187
		{
			yyVAL.str = SQLCacheStr
		}
	case 795:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4192
		{
			yyVAL.str = ""
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4196
		{
			yyVAL.str = ""
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4200
		{
			yyVAL.str = DistinctStr
		}
	case 798:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4205
		{
			yyVAL.str = ""
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4209
		{
			yyVAL.str = StraightJoinHint
		}
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4215
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 801:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4223
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4234
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4238
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4242
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 805:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4246
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4252
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4256
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4260
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 809:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4264
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4270
		{
			yyVAL.over = &Over{NameRef: yyDollar[2].colIdent}
		}
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4274
		{
			yyVAL.over = (*Over)(yyDollar[2].windowDef)
		}
	case 812:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4280
		{
			yyVAL.windowDef = &WindowDef{NameRef: yyDollar[2].colIdent, PartitionBy: yyDollar[3].exprs, OrderBy: yyDollar[4].orderBy, Frame: yyDollar[5].frame}
		}
	case 813:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4285
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4288
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 815:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4293
		{
			yyVAL.exprs = nil
		}
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4297
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4302
		{
			yyVAL.over = nil
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4306
		{
			yyVAL.over = yyDollar[1].over
		}
	case 819:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4311
		{
			yyVAL.frame = nil
		}
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4315
		{
			yyVAL.frame = &Frame{Unit: RowsUnit, Extent: yyDollar[2].frameExtent}
		}
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4319
		{
			yyVAL.frame = &Frame{Unit: RangeUnit, Extent: yyDollar[2].frameExtent}
		}
	case 822:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4326
		{
			startBound := yyDollar[2].frameBound
			endBound := yyDollar[4].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound, End: endBound}
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4349
		{
			startBound := yyDollar[1].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound}
		}
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4364
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedPreceding}
		}
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4368
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedFollowing}
		}
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4372
		{
			yyVAL.frameBound = &FrameBound{Type: CurrentRow}
		}
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4376
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprPreceding,
			}
		}
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4383
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprFollowing,
			}
		}
	case 829:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4391
		{
			yyVAL.window = nil
		}
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4394
		{
			yyVAL.window = yyDollar[2].window
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4400
		{
			yyVAL.window = Window{yyDollar[1].windowDef}
		}
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4403
		{
			yyVAL.window = append(yyDollar[1].window, yyDollar[3].windowDef)
		}
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4409
		{
			def := yyDollar[3].windowDef
			def.Name = yyDollar[1].colIdent
			yyVAL.windowDef = def
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4418
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4422
		{
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 836:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4427
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4431
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 838:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4435
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4439
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[2].bytes))
		}
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4445
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4449
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4453
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4457
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4461
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4465
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4471
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4475
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4485
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 851:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4489
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4499
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4505
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4513
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4519
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 858:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4523
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4529
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 860:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4534
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4545
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 862:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4549
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 863:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4553
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4557
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4561
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 866:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4572
		{
			yyVAL.expr = nil
		}
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4576
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 868:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4581
		{
			yyVAL.columns = nil
		}
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4585
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4591
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4595
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4601
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4605
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 874:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4611
		{
			yyVAL.tableExpr = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].selectExprs}
		}
	case 875:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4625
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 876:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4629
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 877:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4633
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4637
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4643
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 880:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4645
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 881:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4649
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4651
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 883:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4655
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 884:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4657
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 885:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4660
		{
			yyVAL.empty = struct{}{}
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4662
		{
			yyVAL.empty = struct{}{}
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4667
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4671
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4677
		{
			yyVAL.str = JoinStr
		}
	case 891:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4681
		{
			yyVAL.str = JoinStr
		}
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4685
		{
			yyVAL.str = JoinStr
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4691
		{
			yyVAL.str = StraightJoinStr
		}
	case 894:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4697
		{
			yyVAL.str = LeftJoinStr
		}
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4701
		{
			yyVAL.str = LeftJoinStr
		}
	case 896:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4705
		{
			yyVAL.str = RightJoinStr
		}
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4709
		{
			yyVAL.str = RightJoinStr
		}
	case 898:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4715
		{
			yyVAL.str = NaturalJoinStr
		}
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4719
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 900:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:4729
		{
			yyVAL.tableExpr = &JSONTableExpr{Data: yyDollar[3].expr, Path: string(yyDollar[5].bytes), Spec: yyDollar[8].TableSpec, Alias: yyDollar[12].tableIdent}
		}
	case 901:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:4733
		{
			yyVAL.tableExpr = &JSONTableExpr{Data: yyDollar[3].expr, Path: string(yyDollar[5].bytes), Spec: yyDollar[8].TableSpec, Alias: yyDollar[11].tableIdent}
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4739
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4744
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4752
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 905:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4764
		{
			yyVAL.columnType = ColumnType{Path: string(yyDollar[2].bytes)}
		}
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4768
		{
			yyVAL.columnType = ColumnType{Path: string(yyDollar[3].bytes)}
		}
	case 907:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4774
		{

		}
	case 908:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4792
		{

		}
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4796
		{

		}
	case 910:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4800
		{

		}
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4804
		{

		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4810
		{
			yyVAL.triggerName = TriggerName{Name: yyDollar[1].colIdent}
		}
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4814
		{
			yyVAL.triggerName = TriggerName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4820
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 915:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4826
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4830
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4836
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4840
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4844
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4848
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4852
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4858
		{
			yyVAL.procedureName = ProcedureName{Name: yyDollar[1].colIdent}
		}
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4862
		{
			yyVAL.procedureName = ProcedureName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4868
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 925:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4873
		{
			yyVAL.indexHints = nil
		}
	case 926:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4877
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 927:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4881
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 928:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4885
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 929:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4890
		{
			yyVAL.expr = nil
		}
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4894
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4900
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4904
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4908
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4912
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 935:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4916
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4920
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4924
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 938:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4928
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 939:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4934
		{
			yyVAL.str = ""
		}
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4938
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4944
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4948
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4954
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4958
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 945:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4962
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 946:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4966
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 947:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4970
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4974
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 949:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4978
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 950:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4982
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 951:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4986
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4990
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4996
		{
			yyVAL.str = IsNullStr
		}
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5000
		{
			yyVAL.str = IsNotNullStr
		}
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5004
		{
			yyVAL.str = IsTrueStr
		}
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5008
		{
			yyVAL.str = IsNotTrueStr
		}
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5012
		{
			yyVAL.str = IsFalseStr
		}
	case 958:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5016
		{
			yyVAL.str = IsNotFalseStr
		}
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5022
		{
			yyVAL.str = EqualStr
		}
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5026
		{
			yyVAL.str = LessThanStr
		}
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5030
		{
			yyVAL.str = GreaterThanStr
		}
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5034
		{
			yyVAL.str = LessEqualStr
		}
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5038
		{
			yyVAL.str = GreaterEqualStr
		}
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5042
		{
			yyVAL.str = NotEqualStr
		}
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5046
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 966:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5051
		{
			yyVAL.expr = nil
		}
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5055
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5061
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5065
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5069
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5075
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5081
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5085
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 974:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5091
		{
			yyVAL.selectExprs = nil
		}
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5098
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5102
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5108
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5112
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5118
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5122
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5126
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5130
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5134
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5138
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5142
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5146
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5150
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5154
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5158
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5162
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5166
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5170
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5174
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5178
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5182
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5186
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5190
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5194
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5198
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5202
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5206
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5210
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 1004:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5214
		{
			yyVAL.expr = &UnaryExpr{Operator: yyDollar[1].str, Expr: yyDollar[2].expr}
		}
	case 1005:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5218
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 1006:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5226
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 1007:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5240
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5244
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5248
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 1016:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5268
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 1017:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5272
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 1018:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5282
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1019:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5286
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1020:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5290
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1021:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5294
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1022:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5298
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1023:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5302
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1024:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5306
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1025:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5310
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1026:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5314
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1027:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5318
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1028:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5322
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1029:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5326
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1030:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5330
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1031:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5334
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1032:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5338
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1033:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5342
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1034:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5346
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1035:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5355
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1036:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5359
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1037:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5363
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 1038:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5367
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1039:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5371
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 1040:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5375
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1041:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5379
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1042:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5383
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1043:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5387
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1044:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5391
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1045:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5395
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1046:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5406
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1047:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5410
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1048:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5414
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1049:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5418
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5422
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1051:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5426
		{
			yyVAL.expr = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 1052:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5430
		{
			yyVAL.expr = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 1053:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5434
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1054:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5438
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1055:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5442
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 1056:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5446
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1057:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5450
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1058:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5454
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1059:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5458
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1060:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5462
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1061:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5466
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 1062:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5470
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 1063:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5474
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 1064:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5478
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 1065:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5482
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 1066:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5486
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 1067:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5490
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1068:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5494
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 1069:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5498
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 1070:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5502
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 1071:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5506
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1072:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5516
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1073:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5520
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1074:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5524
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1075:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5529
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5534
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1077:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5539
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1078:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5545
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1079:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5550
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1080:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5554
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1081:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5559
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1082:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5563
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1083:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5567
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5572
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1085:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5577
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5582
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1087:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5586
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1088:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5590
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5601
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1092:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5611
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1093:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5615
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1094:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5619
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1095:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5623
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1096:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5627
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1097:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5631
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1098:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5637
		{
			yyVAL.str = ""
		}
	case 1099:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5641
		{
			yyVAL.str = BooleanModeStr
		}
	case 1100:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5645
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 1101:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5649
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 1102:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5653
		{
			yyVAL.str = QueryExpansionStr
		}
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5659
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5663
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5669
		{
			yyVAL.str = Armscii8Str
		}
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5673
		{
			yyVAL.str = AsciiStr
		}
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5677
		{
			yyVAL.str = Big5Str
		}
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5681
		{
			yyVAL.str = UBinaryStr
		}
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5685
		{
			yyVAL.str = Cp1250Str
		}
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5689
		{
			yyVAL.str = Cp1251Str
		}
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5693
		{
			yyVAL.str = Cp1256Str
		}
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5697
		{
			yyVAL.str = Cp1257Str
		}
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5701
		{
			yyVAL.str = Cp850Str
		}
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5705
		{
			yyVAL.str = Cp852Str
		}
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5709
		{
			yyVAL.str = Cp866Str
		}
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5713
		{
			yyVAL.str = Cp932Str
		}
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5717
		{
			yyVAL.str = Dec8Str
		}
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5721
		{
			yyVAL.str = EucjpmsStr
		}
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5725
		{
			yyVAL.str = EuckrStr
		}
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5729
		{
			yyVAL.str = Gb18030Str
		}
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5733
		{
			yyVAL.str = Gb2312Str
		}
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5737
		{
			yyVAL.str = GbkStr
		}
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5741
		{
			yyVAL.str = Geostd8Str
		}
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5745
		{
			yyVAL.str = GreekStr
		}
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5749
		{
			yyVAL.str = HebrewStr
		}
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5753
		{
			yyVAL.str = Hp8Str
		}
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5757
		{
			yyVAL.str = Keybcs2Str
		}
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5761
		{
			yyVAL.str = Koi8rStr
		}
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5765
		{
			yyVAL.str = Koi8uStr
		}
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5769
		{
			yyVAL.str = Latin1Str
		}
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5773
		{
			yyVAL.str = Latin2Str
		}
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5777
		{
			yyVAL.str = Latin5Str
		}
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5781
		{
			yyVAL.str = Latin7Str
		}
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5785
		{
			yyVAL.str = MacceStr
		}
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5789
		{
			yyVAL.str = MacromanStr
		}
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5793
		{
			yyVAL.str = SjisStr
		}
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5797
		{
			yyVAL.str = Swe7Str
		}
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5801
		{
			yyVAL.str = Tis620Str
		}
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5805
		{
			yyVAL.str = Ucs2Str
		}
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5809
		{
			yyVAL.str = UjisStr
		}
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5813
		{
			yyVAL.str = Utf16Str
		}
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5817
		{
			yyVAL.str = Utf16leStr
		}
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5821
		{
			yyVAL.str = Utf32Str
		}
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5825
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5829
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5833
		{
			yyVAL.str = Utf8mb4Str
		}
	case 1147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5839
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1148:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5843
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 1149:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5847
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5851
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5855
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5859
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5865
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1154:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5869
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5873
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5877
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1157:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5881
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5885
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5889
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1160:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5894
		{
			yyVAL.expr = nil
		}
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5898
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1162:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5903
		{
			yyVAL.str = string("")
		}
	case 1163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5907
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5913
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 1165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5917
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 1166:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5923
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 1167:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5928
		{
			yyVAL.expr = nil
		}
	case 1168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5932
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5938
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5942
		{
			yyVAL.colName = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5946
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 1172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5950
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5954
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5958
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5962
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5966
		{
			yyVAL.colName = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1177:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5970
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5974
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1179:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5978
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5984
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5988
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5992
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5996
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6000
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6004
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6008
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6012
		{
			yyVAL.expr = &NullVal{}
		}
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6018
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 1189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6022
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6026
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1191:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6031
		{
			yyVAL.exprs = nil
		}
	case 1192:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6035
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6041
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1194:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6045
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6051
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1196:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6056
		{
			yyVAL.expr = nil
		}
	case 1197:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6060
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6066
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1199:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6071
		{
			yyVAL.orderBy = nil
		}
	case 1200:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6075
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6081
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 1202:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6085
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 1203:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6091
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 1204:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6096
		{
			yyVAL.str = AscScr
		}
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6100
		{
			yyVAL.str = AscScr
		}
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6104
		{
			yyVAL.str = DescScr
		}
	case 1207:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6109
		{
			yyVAL.limit = nil
		}
	case 1208:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6113
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 1209:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6117
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 1210:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6121
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6127
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6131
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1213:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6136
		{
			yyVAL.str = ""
		}
	case 1214:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6140
		{
			yyVAL.str = ForUpdateStr
		}
	case 1215:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6144
		{
			yyVAL.str = ShareModeStr
		}
	case 1216:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6157
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 1217:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6161
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6165
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 1219:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6169
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 1220:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6174
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 1221:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6178
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 1222:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6182
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 1223:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6188
		{
			yyVAL.columns = nil
		}
	case 1224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6192
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6198
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6202
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 1227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6206
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1228:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6210
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6214
		{
			yyVAL.columns = Columns{NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6218
		{
			yyVAL.columns = Columns{NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6222
		{
			yyVAL.columns = Columns{NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6226
		{
			yyVAL.columns = Columns{NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1233:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6231
		{
			yyVAL.assignExprs = nil
		}
	case 1234:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6235
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6241
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 1236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6245
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6251
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 1238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6255
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 1239:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6261
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6267
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6277
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 1242:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6281
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 1243:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6287
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 1244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6290
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6294
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6298
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6304
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 1248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6308
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6314
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 1250:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6325
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1251:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6338
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1252:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6351
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 1253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6357
		{
			yyVAL.setScope = SetScope_Global
		}
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6361
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6367
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6371
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6375
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 1258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6381
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1259:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6385
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6389
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 1262:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6396
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6403
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6407
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6411
		{
			yyVAL.expr = &Default{}
		}
	case 1269:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6420
		{
			yyVAL.byt = 0
		}
	case 1270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6422
		{
			yyVAL.byt = 1
		}
	case 1271:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6425
		{
			yyVAL.byt = 0
		}
	case 1272:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6427
		{
			yyVAL.byt = 1
		}
	case 1273:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6430
		{
			yyVAL.byt = 0
		}
	case 1274:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6432
		{
			yyVAL.byt = 1
		}
	case 1275:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6435
		{
			yyVAL.str = ""
		}
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6437
		{
			yyVAL.str = IgnoreStr
		}
	case 1277:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6440
		{
			yyVAL.sqlVal = nil
		}
	case 1278:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6442
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1279:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6444
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6448
		{
			yyVAL.empty = struct{}{}
		}
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6450
		{
			yyVAL.empty = struct{}{}
		}
	case 1282:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6453
		{
			yyVAL.empty = struct{}{}
		}
	case 1283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6455
		{
			yyVAL.empty = struct{}{}
		}
	case 1284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6457
		{
			yyVAL.empty = struct{}{}
		}
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6461
		{
			yyVAL.str = UniqueStr
		}
	case 1286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6463
		{
			yyVAL.str = FulltextStr
		}
	case 1287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6465
		{
			yyVAL.str = SpatialStr
		}
	case 1288:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6468
		{
			yyVAL.str = ""
		}
	case 1289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6470
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1290:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6473
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 1291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6475
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 1292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6479
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6483
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6489
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 1295:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6493
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 1297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6500
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6506
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6510
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6517
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1302:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6522
		{
			yyVAL.str = string("")
		}
	case 1303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6524
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1304:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6527
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6529
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1306:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6532
		{
			yyVAL.EnclosedBy = nil
		}
	case 1307:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6536
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1308:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6541
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6545
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1310:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6550
		{
			yyVAL.sqlVal = nil
		}
	case 1311:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6554
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1312:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6559
		{
			yyVAL.sqlVal = nil
		}
	case 1313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6563
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1314:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6568
		{
			yyVAL.Fields = nil
		}
	case 1315:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6572
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1316:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6577
		{
			yyVAL.Lines = nil
		}
	case 1317:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6581
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1318:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6586
		{
			yyVAL.sqlVal = nil
		}
	case 1319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6590
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1320:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6596
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6602
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1322:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6606
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6612
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1324:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6616
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6622
		{
			yyVAL.lockType = LockRead
		}
	case 1326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6626
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6630
		{
			yyVAL.lockType = LockWrite
		}
	case 1328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6634
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1329:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6640
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6646
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[2].bytes)}
		}
	case 1331:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6650
		{
			yyVAL.statement = &Kill{ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6654
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 2121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7482
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7491
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
