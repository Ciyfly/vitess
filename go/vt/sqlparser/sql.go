// Code generated by goyacc -v y.output -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

//import "runtime/debug"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

func yySpecialCommentMode(yylex interface{}) bool {
	tkn := yylex.(*Tokenizer)
	return tkn.specialComment != nil
}

//line sql.y:64
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	variables                Variables
	into                     *Into
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	triggerName              TriggerName
	tableName                TableName
	tableNames               TableNames
	procedureName            ProcedureName
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	flushOption              *FlushOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	viewSpec                 *ViewSpec
	showFilter               *ShowFilter
	frame                    *Frame
	frameExtent              *FrameExtent
	frameBound               *FrameBound
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	charsetCollate           *CharsetAndCollate
	charsetCollates          []*CharsetAndCollate
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptionItem            TLSOptionItem
	tlsOptionItems           []TLSOptionItem
	accountLimitItem         AccountLimitItem
	accountLimitItems        []AccountLimitItem
	passLockItem             PassLockItem
	passLockItems            []PassLockItem
	grantPrivilege           Privilege
	grantPrivileges          []Privilege
	grantObjectType          GrantObjectType
	privilegeLevel           PrivilegeLevel
	grantAssumption          *GrantUserAssumption
	with                     *With
	window                   Window
	over                     *Over
	windowDef                *WindowDef
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const DUPLICATE = 57369
const DEFAULT = 57370
const SET = 57371
const LOCK = 57372
const UNLOCK = 57373
const KEYS = 57374
const OF = 57375
const OUTFILE = 57376
const DUMPFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const INTO = 57425
const OR = 57426
const XOR = 57427
const AND = 57428
const NOT = 57429
const BETWEEN = 57430
const CASE = 57431
const WHEN = 57432
const THEN = 57433
const ELSE = 57434
const ELSEIF = 57435
const END = 57436
const LE = 57437
const GE = 57438
const NE = 57439
const NULL_SAFE_EQUAL = 57440
const IS = 57441
const LIKE = 57442
const REGEXP = 57443
const IN = 57444
const UNBOUNDED = 57445
const PARTITION = 57446
const RANGE = 57447
const ROWS = 57448
const GROUPS = 57449
const PRECEDING = 57450
const FOLLOWING = 57451
const SHIFT_LEFT = 57452
const SHIFT_RIGHT = 57453
const DIV = 57454
const MOD = 57455
const UNARY = 57456
const COLLATE = 57457
const BINARY = 57458
const UNDERSCORE_ARMSCII8 = 57459
const UNDERSCORE_ASCII = 57460
const UNDERSCORE_BIG5 = 57461
const UNDERSCORE_BINARY = 57462
const UNDERSCORE_CP1250 = 57463
const UNDERSCORE_CP1251 = 57464
const UNDERSCORE_CP1256 = 57465
const UNDERSCORE_CP1257 = 57466
const UNDERSCORE_CP850 = 57467
const UNDERSCORE_CP852 = 57468
const UNDERSCORE_CP866 = 57469
const UNDERSCORE_CP932 = 57470
const UNDERSCORE_DEC8 = 57471
const UNDERSCORE_EUCJPMS = 57472
const UNDERSCORE_EUCKR = 57473
const UNDERSCORE_GB18030 = 57474
const UNDERSCORE_GB2312 = 57475
const UNDERSCORE_GBK = 57476
const UNDERSCORE_GEOSTD8 = 57477
const UNDERSCORE_GREEK = 57478
const UNDERSCORE_HEBREW = 57479
const UNDERSCORE_HP8 = 57480
const UNDERSCORE_KEYBCS2 = 57481
const UNDERSCORE_KOI8R = 57482
const UNDERSCORE_KOI8U = 57483
const UNDERSCORE_LATIN1 = 57484
const UNDERSCORE_LATIN2 = 57485
const UNDERSCORE_LATIN5 = 57486
const UNDERSCORE_LATIN7 = 57487
const UNDERSCORE_MACCE = 57488
const UNDERSCORE_MACROMAN = 57489
const UNDERSCORE_SJIS = 57490
const UNDERSCORE_SWE7 = 57491
const UNDERSCORE_TIS620 = 57492
const UNDERSCORE_UCS2 = 57493
const UNDERSCORE_UJIS = 57494
const UNDERSCORE_UTF16 = 57495
const UNDERSCORE_UTF16LE = 57496
const UNDERSCORE_UTF32 = 57497
const UNDERSCORE_UTF8 = 57498
const UNDERSCORE_UTF8MB3 = 57499
const UNDERSCORE_UTF8MB4 = 57500
const INTERVAL = 57501
const JSON_EXTRACT_OP = 57502
const JSON_UNQUOTE_EXTRACT_OP = 57503
const CREATE = 57504
const ALTER = 57505
const DROP = 57506
const RENAME = 57507
const ANALYZE = 57508
const ADD = 57509
const MODIFY = 57510
const CHANGE = 57511
const SCHEMA = 57512
const TABLE = 57513
const INDEX = 57514
const INDEXES = 57515
const VIEW = 57516
const TO = 57517
const IGNORE = 57518
const IF = 57519
const PRIMARY = 57520
const COLUMN = 57521
const SPATIAL = 57522
const FULLTEXT = 57523
const KEY_BLOCK_SIZE = 57524
const CHECK = 57525
const ACTION = 57526
const CASCADE = 57527
const CONSTRAINT = 57528
const FOREIGN = 57529
const NO = 57530
const REFERENCES = 57531
const RESTRICT = 57532
const FIRST = 57533
const AFTER = 57534
const SHOW = 57535
const DESCRIBE = 57536
const EXPLAIN = 57537
const DATE = 57538
const ESCAPE = 57539
const REPAIR = 57540
const OPTIMIZE = 57541
const TRUNCATE = 57542
const FORMAT = 57543
const MAXVALUE = 57544
const REORGANIZE = 57545
const LESS = 57546
const THAN = 57547
const PROCEDURE = 57548
const TRIGGER = 57549
const TRIGGERS = 57550
const FUNCTION = 57551
const STATUS = 57552
const VARIABLES = 57553
const WARNINGS = 57554
const ERRORS = 57555
const KILL = 57556
const CONNECTION = 57557
const SEQUENCE = 57558
const ENABLE = 57559
const DISABLE = 57560
const EACH = 57561
const ROW = 57562
const BEFORE = 57563
const FOLLOWS = 57564
const PRECEDES = 57565
const DEFINER = 57566
const INVOKER = 57567
const INOUT = 57568
const OUT = 57569
const DETERMINISTIC = 57570
const CONTAINS = 57571
const READS = 57572
const MODIFIES = 57573
const SQL = 57574
const SECURITY = 57575
const TEMPORARY = 57576
const ALGORITHM = 57577
const MERGE = 57578
const TEMPTABLE = 57579
const UNDEFINED = 57580
const CLASS_ORIGIN = 57581
const SUBCLASS_ORIGIN = 57582
const MESSAGE_TEXT = 57583
const MYSQL_ERRNO = 57584
const CONSTRAINT_CATALOG = 57585
const CONSTRAINT_SCHEMA = 57586
const CONSTRAINT_NAME = 57587
const CATALOG_NAME = 57588
const SCHEMA_NAME = 57589
const TABLE_NAME = 57590
const COLUMN_NAME = 57591
const CURSOR_NAME = 57592
const SIGNAL = 57593
const RESIGNAL = 57594
const SQLSTATE = 57595
const DECLARE = 57596
const CONDITION = 57597
const CURSOR = 57598
const CONTINUE = 57599
const EXIT = 57600
const UNDO = 57601
const HANDLER = 57602
const FOUND = 57603
const SQLWARNING = 57604
const SQLEXCEPTION = 57605
const USER = 57606
const IDENTIFIED = 57607
const ROLE = 57608
const REUSE = 57609
const GRANT = 57610
const GRANTS = 57611
const REVOKE = 57612
const NONE = 57613
const ATTRIBUTE = 57614
const RANDOM = 57615
const PASSWORD = 57616
const INITIAL = 57617
const AUTHENTICATION = 57618
const SSL = 57619
const X509 = 57620
const CIPHER = 57621
const ISSUER = 57622
const SUBJECT = 57623
const ACCOUNT = 57624
const EXPIRE = 57625
const NEVER = 57626
const DAY = 57627
const OPTION = 57628
const OPTIONAL = 57629
const EXCEPT = 57630
const ADMIN = 57631
const PRIVILEGES = 57632
const MAX_QUERIES_PER_HOUR = 57633
const MAX_UPDATES_PER_HOUR = 57634
const MAX_CONNECTIONS_PER_HOUR = 57635
const MAX_USER_CONNECTIONS = 57636
const FLUSH = 57637
const FAILED_LOGIN_ATTEMPTS = 57638
const PASSWORD_LOCK_TIME = 57639
const REQUIRE = 57640
const PROXY = 57641
const ROUTINE = 57642
const TABLESPACE = 57643
const CLIENT = 57644
const SLAVE = 57645
const EVENT = 57646
const EXECUTE = 57647
const FILE = 57648
const RELOAD = 57649
const REPLICATION = 57650
const SHUTDOWN = 57651
const SUPER = 57652
const USAGE = 57653
const LOGS = 57654
const ENGINE = 57655
const ERROR = 57656
const GENERAL = 57657
const HOSTS = 57658
const OPTIMIZER_COSTS = 57659
const RELAY = 57660
const SLOW = 57661
const USER_RESOURCES = 57662
const NO_WRITE_TO_BINLOG = 57663
const CHANNEL = 57664
const BEGIN = 57665
const START = 57666
const TRANSACTION = 57667
const COMMIT = 57668
const ROLLBACK = 57669
const SAVEPOINT = 57670
const WORK = 57671
const RELEASE = 57672
const BIT = 57673
const TINYINT = 57674
const SMALLINT = 57675
const MEDIUMINT = 57676
const INT = 57677
const INTEGER = 57678
const BIGINT = 57679
const INTNUM = 57680
const SERIAL = 57681
const REAL = 57682
const DOUBLE = 57683
const FLOAT_TYPE = 57684
const DECIMAL = 57685
const NUMERIC = 57686
const DEC = 57687
const FIXED = 57688
const PRECISION = 57689
const TIME = 57690
const TIMESTAMP = 57691
const DATETIME = 57692
const YEAR = 57693
const CHAR = 57694
const VARCHAR = 57695
const BOOL = 57696
const CHARACTER = 57697
const VARBINARY = 57698
const NCHAR = 57699
const NVARCHAR = 57700
const NATIONAL = 57701
const VARYING = 57702
const TEXT = 57703
const TINYTEXT = 57704
const MEDIUMTEXT = 57705
const LONGTEXT = 57706
const LONG = 57707
const BLOB = 57708
const TINYBLOB = 57709
const MEDIUMBLOB = 57710
const LONGBLOB = 57711
const JSON = 57712
const ENUM = 57713
const GEOMETRY = 57714
const POINT = 57715
const LINESTRING = 57716
const POLYGON = 57717
const GEOMETRYCOLLECTION = 57718
const MULTIPOINT = 57719
const MULTILINESTRING = 57720
const MULTIPOLYGON = 57721
const LOCAL = 57722
const LOW_PRIORITY = 57723
const NULLX = 57724
const AUTO_INCREMENT = 57725
const APPROXNUM = 57726
const SIGNED = 57727
const UNSIGNED = 57728
const ZEROFILL = 57729
const SRID = 57730
const COLLATION = 57731
const DATABASES = 57732
const SCHEMAS = 57733
const TABLES = 57734
const FULL = 57735
const PROCESSLIST = 57736
const COLUMNS = 57737
const FIELDS = 57738
const ENGINES = 57739
const PLUGINS = 57740
const NAMES = 57741
const CHARSET = 57742
const GLOBAL = 57743
const SESSION = 57744
const ISOLATION = 57745
const LEVEL = 57746
const READ = 57747
const WRITE = 57748
const ONLY = 57749
const REPEATABLE = 57750
const COMMITTED = 57751
const UNCOMMITTED = 57752
const SERIALIZABLE = 57753
const ENCRYPTION = 57754
const CURRENT_TIMESTAMP = 57755
const DATABASE = 57756
const CURRENT_DATE = 57757
const CURRENT_USER = 57758
const CURRENT_TIME = 57759
const LOCALTIME = 57760
const LOCALTIMESTAMP = 57761
const UTC_DATE = 57762
const UTC_TIME = 57763
const UTC_TIMESTAMP = 57764
const REPLACE = 57765
const CONVERT = 57766
const CAST = 57767
const SUBSTR = 57768
const SUBSTRING = 57769
const TRIM = 57770
const LEADING = 57771
const TRAILING = 57772
const BOTH = 57773
const GROUP_CONCAT = 57774
const SEPARATOR = 57775
const TIMESTAMPADD = 57776
const TIMESTAMPDIFF = 57777
const OVER = 57778
const WINDOW = 57779
const GROUPING = 57780
const CURRENT = 57781
const AVG = 57782
const BIT_AND = 57783
const BIT_OR = 57784
const BIT_XOR = 57785
const COUNT = 57786
const JSON_ARRAYAGG = 57787
const JSON_OBJECTAGG = 57788
const MAX = 57789
const MIN = 57790
const STDDEV_POP = 57791
const STDDEV = 57792
const STD = 57793
const STDDEV_SAMP = 57794
const SUM = 57795
const VAR_POP = 57796
const VARIANCE = 57797
const VAR_SAMP = 57798
const CUME_DIST = 57799
const DENSE_RANK = 57800
const FIRST_VALUE = 57801
const LAG = 57802
const LAST_VALUE = 57803
const LEAD = 57804
const NTH_VALUE = 57805
const NTILE = 57806
const ROW_NUMBER = 57807
const PERCENT_RANK = 57808
const RANK = 57809
const MATCH = 57810
const AGAINST = 57811
const BOOLEAN = 57812
const LANGUAGE = 57813
const WITH = 57814
const QUERY = 57815
const EXPANSION = 57816
const ACCESSIBLE = 57817
const ASENSITIVE = 57818
const CUBE = 57819
const DAY_HOUR = 57820
const DAY_MICROSECOND = 57821
const DAY_MINUTE = 57822
const DAY_SECOND = 57823
const DELAYED = 57824
const DISTINCTROW = 57825
const DUAL = 57826
const EMPTY = 57827
const FETCH = 57828
const FLOAT4 = 57829
const FLOAT8 = 57830
const GET = 57831
const HIGH_PRIORITY = 57832
const HOUR_MICROSECOND = 57833
const HOUR_MINUTE = 57834
const HOUR_SECOND = 57835
const INSENSITIVE = 57836
const INT1 = 57837
const INT2 = 57838
const INT3 = 57839
const INT4 = 57840
const INT8 = 57841
const IO_AFTER_GTIDS = 57842
const IO_BEFORE_GTIDS = 57843
const ITERATE = 57844
const LEAVE = 57845
const LINEAR = 57846
const LOOP = 57847
const MASTER_BIND = 57848
const MASTER_SSL_VERIFY_SERVER_CERT = 57849
const MIDDLEINT = 57850
const MINUTE_MICROSECOND = 57851
const MINUTE_SECOND = 57852
const PURGE = 57853
const READ_WRITE = 57854
const REPEAT = 57855
const RETURN = 57856
const RLIKE = 57857
const SECOND_MICROSECOND = 57858
const SENSITIVE = 57859
const SPECIFIC = 57860
const SQL_BIG_RESULT = 57861
const SQL_SMALL_RESULT = 57862
const VARCHARACTER = 57863
const WHILE = 57864
const YEAR_MONTH = 57865
const UNUSED = 57866
const DESCRIPTION = 57867
const JSON_TABLE = 57868
const LATERAL = 57869
const MEMBER = 57870
const RECURSIVE = 57871
const BUCKETS = 57872
const CLONE = 57873
const COMPONENT = 57874
const DEFINITION = 57875
const ENFORCED = 57876
const EXCLUDE = 57877
const GEOMCOLLECTION = 57878
const GET_MASTER_PUBLIC_KEY = 57879
const HISTOGRAM = 57880
const HISTORY = 57881
const INACTIVE = 57882
const INVISIBLE = 57883
const LOCKED = 57884
const MASTER_COMPRESSION_ALGORITHMS = 57885
const MASTER_PUBLIC_KEY_PATH = 57886
const MASTER_TLS_CIPHERSUITES = 57887
const MASTER_ZSTD_COMPRESSION_LEVEL = 57888
const NESTED = 57889
const NETWORK_NAMESPACE = 57890
const NOWAIT = 57891
const NULLS = 57892
const OJ = 57893
const OLD = 57894
const ORDINALITY = 57895
const ORGANIZATION = 57896
const OTHERS = 57897
const PATH = 57898
const PERSIST = 57899
const PERSIST_ONLY = 57900
const PRIVILEGE_CHECKS_USER = 57901
const PROCESS = 57902
const REFERENCE = 57903
const REQUIRE_ROW_FORMAT = 57904
const RESOURCE = 57905
const RESPECT = 57906
const RESTART = 57907
const RETAIN = 57908
const SECONDARY = 57909
const SECONDARY_ENGINE = 57910
const SECONDARY_LOAD = 57911
const SECONDARY_UNLOAD = 57912
const SKIP = 57913
const THREAD_PRIORITY = 57914
const TIES = 57915
const VCPU = 57916
const VISIBLE = 57917
const SYSTEM = 57918
const INFILE = 57919
const ACTIVE = 57920
const AGGREGATE = 57921
const ANY = 57922
const ARRAY = 57923
const ASCII = 57924
const AT = 57925
const AUTOEXTEND_SIZE = 57926
const ENDS = 57927
const EVENTS = 57928
const GENERATED = 57929
const ALWAYS = 57930
const STORED = 57931
const VIRTUAL = 57932
const NVAR = 57933
const PASSWORD_LOCK = 57934

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DUMPFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"INTO",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB3",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"ENABLE",
	"DISABLE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"ALGORITHM",
	"MERGE",
	"TEMPTABLE",
	"UNDEFINED",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTION",
	"OPTIONAL",
	"EXCEPT",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EVENT",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"SRID",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ENCRYPTION",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ACCESSIBLE",
	"ASENSITIVE",
	"CUBE",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"DELAYED",
	"DISTINCTROW",
	"DUAL",
	"EMPTY",
	"FETCH",
	"FLOAT4",
	"FLOAT8",
	"GET",
	"HIGH_PRIORITY",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"INSENSITIVE",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"IO_AFTER_GTIDS",
	"IO_BEFORE_GTIDS",
	"ITERATE",
	"LEAVE",
	"LINEAR",
	"LOOP",
	"MASTER_BIND",
	"MASTER_SSL_VERIFY_SERVER_CERT",
	"MIDDLEINT",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"PURGE",
	"READ_WRITE",
	"REPEAT",
	"RETURN",
	"RLIKE",
	"SECOND_MICROSECOND",
	"SENSITIVE",
	"SPECIFIC",
	"SQL_BIG_RESULT",
	"SQL_SMALL_RESULT",
	"VARCHARACTER",
	"WHILE",
	"YEAR_MONTH",
	"UNUSED",
	"DESCRIPTION",
	"JSON_TABLE",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"ACTIVE",
	"AGGREGATE",
	"ANY",
	"ARRAY",
	"ASCII",
	"AT",
	"AUTOEXTEND_SIZE",
	"ENDS",
	"EVENTS",
	"GENERATED",
	"ALWAYS",
	"STORED",
	"VIRTUAL",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 35,
	5, 58,
	-2, 1146,
	-1, 43,
	189, 1210,
	190, 1229,
	-2, 245,
	-1, 49,
	228, 732,
	229, 732,
	-2, 721,
	-1, 538,
	177, 1239,
	-2, 1233,
	-1, 539,
	177, 1240,
	-2, 1234,
	-1, 684,
	100, 1580,
	177, 1580,
	-2, 1194,
	-1, 685,
	100, 1695,
	177, 1695,
	-2, 1195,
	-1, 690,
	100, 1601,
	177, 1601,
	-2, 1196,
	-1, 691,
	100, 1648,
	177, 1648,
	-2, 1197,
	-1, 692,
	100, 1649,
	177, 1649,
	-2, 1198,
	-1, 693,
	100, 1529,
	177, 1529,
	-2, 1202,
	-1, 695,
	100, 1625,
	177, 1625,
	-2, 1204,
	-1, 1276,
	1, 830,
	5, 830,
	12, 830,
	13, 830,
	14, 830,
	15, 830,
	17, 830,
	19, 830,
	29, 830,
	30, 830,
	56, 830,
	57, 830,
	58, 830,
	59, 830,
	60, 830,
	62, 830,
	63, 830,
	66, 830,
	67, 830,
	69, 830,
	70, 830,
	87, 830,
	455, 830,
	611, 830,
	-2, 862,
	-1, 1282,
	67, 75,
	69, 75,
	-2, 79,
	-1, 1378,
	1, 511,
	611, 511,
	-2, 509,
	-1, 1380,
	1, 511,
	611, 511,
	-2, 509,
	-1, 1544,
	177, 1242,
	-2, 1238,
	-1, 1710,
	44, 577,
	-2, 1541,
	-1, 1714,
	68, 575,
	72, 575,
	-2, 1574,
	-1, 1715,
	68, 577,
	-2, 1483,
	-1, 1718,
	68, 573,
	72, 573,
	-2, 1368,
	-1, 1719,
	68, 574,
	72, 574,
	-2, 1390,
	-1, 1767,
	1, 512,
	611, 512,
	-2, 509,
	-1, 1851,
	44, 620,
	196, 622,
	198, 620,
	199, 620,
	-2, 657,
	-1, 1919,
	5, 59,
	-2, 933,
	-1, 2252,
	69, 1452,
	70, 1452,
	177, 1452,
	-2, 764,
	-1, 2275,
	1, 887,
	5, 887,
	12, 887,
	13, 887,
	14, 887,
	15, 887,
	17, 887,
	19, 887,
	29, 887,
	30, 887,
	56, 887,
	57, 887,
	58, 887,
	59, 887,
	60, 887,
	62, 887,
	63, 887,
	66, 887,
	67, 887,
	69, 887,
	70, 887,
	87, 887,
	455, 887,
	611, 887,
	-2, 862,
	-1, 2391,
	196, 623,
	-2, 621,
	-1, 2452,
	5, 59,
	-2, 1166,
	-1, 2671,
	41, 1249,
	-2, 1247,
	-1, 2770,
	5, 59,
	-2, 1169,
}

const yyPrivate = 57344

const yyLast = 38926

var yyAct = [...]int{
	593, 80, 2971, 2953, 2997, 3004, 2954, 2868, 2973, 967,
	419, 2235, 2845, 2924, 2836, 2782, 7, 2781, 6, 2867,
	2780, 5, 2080, 2884, 2904, 1702, 2335, 2783, 8, 541,
	2756, 2758, 539, 2716, 2843, 2289, 2610, 2671, 2889, 1313,
	1996, 2269, 1220, 1966, 2177, 1662, 709, 530, 2774, 2552,
	1720, 2464, 2163, 2673, 2017, 1762, 2245, 2352, 1413, 2528,
	1786, 2522, 2506, 544, 1521, 1690, 402, 405, 83, 2290,
	465, 2775, 1711, 2246, 2385, 2023, 444, 444, 450, 1668,
	129, 80, 1666, 129, 707, 2176, 2096, 556, 1219, 129,
	93, 1701, 2375, 1000, 1850, 523, 1967, 592, 1514, 447,
	447, 1700, 1880, 2779, 3, 106, 2254, 2261, 1753, 1512,
	1569, 1412, 129, 2242, 1024, 2208, 1415, 1578, 2141, 1462,
	1707, 705, 1529, 129, 1389, 1645, 983, 129, 712, 1630,
	2071, 1129, 1749, 1813, 1433, 686, 1293, 1273, 2024, 1770,
	1652, 1624, 1769, 1136, 1768, 1546, 1276, 129, 447, 1272,
	712, 704, 1132, 1053, 1032, 689, 1737, 1766, 129, 682,
	1236, 703, 1830, 678, 526, 1292, 683, 1150, 422, 521,
	464, 421, 548, 1384, 966, 1467, 1381, 1031, 675, 1063,
	950, 955, 102, 1284, 522, 546, 1140, 98, 1237, 3036,
	85, 3032, 3027, 3012, 3010, 2992, 2966, 2912, 82, 2718,
	2717, 2304, 437, 1460, 431, 442, 425, 2650, 2493, 36,
	414, 36, 2037, 2983, 1580, 2333, 2841, 2040, 2951, 36,
	2764, 2927, 2663, 2648, 36, 2507, 432, 2108, 87, 88,
	89, 90, 91, 2045, 2044, 2509, 2828, 2349, 2651, 2840,
	2229, 69, 1961, 2849, 2736, 462, 2885, 2849, 1949, 2444,
	2595, 949, 1664, 1466, 36, 2041, 72, 39, 40, 1799,
	1962, 2187, 1799, 2763, 2284, 2844, 2087, 2285, 2286, 1829,
	2047, 81, 2030, 81, 1687, 1688, 1122, 1464, 1465, 2846,
	2031, 81, 952, 2846, 957, 958, 81, 1483, 2005, 110,
	960, 2004, 987, 988, 2006, 2701, 991, 1686, 72, 39,
	40, 1081, 532, 1165, 1164, 1174, 1175, 1167, 1168, 1169,
	1170, 1171, 1172, 1173, 1166, 1463, 81, 1176, 648, 41,
	654, 656, 655, 652, 653, 651, 650, 649, 989, 990,
	1508, 1509, 1294, 99, 1295, 699, 1004, 1005, 413, 2484,
	2485, 412, 1089, 2049, 2850, 454, 1003, 1828, 2850, 1050,
	2512, 1722, 1723, 1729, 1731, 1743, 1730, 1738, 1738, 120,
	116, 117, 2431, 118, 2429, 411, 461, 2138, 416, 1504,
	1503, 1725, 1725, 1502, 396, 1501, 424, 423, 426, 1279,
	1500, 1750, 1499, 2579, 2186, 2043, 430, 1010, 2046, 2103,
	2510, 2511, 2513, 2514, 2515, 122, 121, 1085, 1086, 80,
	80, 129, 2523, 434, 455, 2130, 2944, 438, 2818, 2676,
	2526, 1446, 1014, 2374, 1019, 2816, 1021, 2135, 1841, 1020,
	2730, 441, 2359, 2548, 2524, 2525, 2870, 126, 2529, 2530,
	2531, 2532, 2350, 101, 2869, 1842, 401, 1065, 2353, 2354,
	2355, 2356, 2357, 112, 111, 129, 2740, 2540, 1096, 1494,
	2877, 1097, 1787, 123, 2105, 124, 2538, 114, 1118, 1858,
	1852, 1853, 3001, 1851, 1854, 1855, 1126, 108, 406, 2909,
	677, 2907, 2908, 2643, 701, 1396, 1397, 1395, 113, 2649,
	954, 953, 1387, 1011, 1012, 2738, 2642, 108, 1022, 2353,
	2354, 2355, 2356, 2357, 964, 2107, 129, 109, 113, 1861,
	2667, 2362, 1018, 522, 2645, 978, 956, 2085, 1065, 2641,
	2640, 407, 2639, 1860, 1859, 403, 2968, 2637, 427, 428,
	429, 435, 1473, 439, 440, 443, 956, 103, 397, 104,
	1001, 2638, 1002, 1004, 1005, 108, 986, 1777, 1185, 2726,
	2727, 1187, 1781, 1782, 2895, 2855, 2856, 980, 2777, 1065,
	115, 2209, 2086, 2466, 1987, 2722, 2121, 2122, 1088, 997,
	998, 999, 1468, 996, 2088, 1153, 1776, 2947, 2732, 1197,
	1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207,
	1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217,
	2042, 995, 1218, 2922, 1222, 2039, 1339, 1470, 3008, 399,
	1469, 2715, 2022, 119, 1066, 1073, 1074, 1076, 1077, 1078,
	1079, 1080, 3022, 1082, 1083, 1084, 2147, 1087, 1285, 1090,
	1091, 1092, 1093, 1094, 2390, 2847, 415, 1103, 110, 2847,
	1312, 2962, 2211, 2508, 400, 1061, 2911, 1223, 1224, 1225,
	1226, 1227, 1228, 1229, 1230, 1231, 1232, 1115, 1235, 1238,
	1238, 1238, 1244, 1238, 1238, 1244, 1238, 1244, 1253, 1254,
	1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264,
	1265, 1266, 1267, 1072, 1277, 2702, 2332, 100, 1752, 1857,
	2376, 2056, 1728, 1835, 1738, 1447, 1015, 1064, 2762, 73,
	1098, 1466, 2817, 79, 2731, 79, 2664, 522, 2106, 1117,
	1326, 2109, 2737, 79, 3037, 129, 129, 129, 79, 1124,
	404, 3034, 404, 2646, 404, 1464, 1465, 2666, 2361, 1271,
	1312, 712, 1113, 1311, 1075, 2293, 1186, 2553, 2554, 542,
	1312, 73, 1312, 1070, 2149, 3028, 2149, 3013, 79, 951,
	1137, 969, 2742, 2563, 460, 2564, 689, 2021, 677, 2129,
	1157, 689, 1796, 2155, 2147, 2126, 2611, 1795, 2152, 1060,
	1765, 2151, 2154, 1071, 2111, 1067, 2977, 2110, 1306, 2972,
	2613, 1836, 3006, 1401, 433, 3007, 1399, 3005, 1016, 2213,
	948, 1340, 112, 111, 2217, 2975, 2212, 2022, 2210, 1994,
	1993, 1372, 1054, 2215, 2038, 2416, 1992, 947, 2124, 1068,
	1069, 1121, 1109, 959, 368, 96, 2214, 2408, 1221, 467,
	1239, 1241, 1243, 1245, 1247, 1249, 1250, 1252, 1297, 2567,
	2128, 2216, 2218, 1298, 1108, 1104, 1105, 1106, 1107, 1110,
	1111, 1112, 1114, 2022, 2127, 1928, 1671, 1673, 1240, 1242,
	1925, 1246, 1248, 2009, 1251, 2001, 1671, 1673, 1188, 1189,
	1897, 1885, 1866, 1283, 1780, 1310, 1778, 1524, 1305, 1280,
	1288, 1234, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041,
	1042, 1043, 1044, 1045, 1165, 1164, 1174, 1175, 1167, 1168,
	1169, 1170, 1171, 1172, 1173, 1166, 1290, 1156, 1176, 2612,
	2160, 1307, 979, 2735, 1691, 2625, 2022, 1691, 2623, 1176,
	1165, 1164, 1174, 1175, 1167, 1168, 1169, 1170, 1171, 1172,
	1173, 1166, 2022, 2562, 1176, 1691, 1353, 1356, 1357, 1358,
	1359, 1360, 1361, 2027, 1362, 1363, 1364, 1365, 1366, 1367,
	1368, 1369, 2021, 1341, 1342, 1343, 1344, 1320, 1324, 1354,
	1321, 1327, 1323, 1325, 1322, 2631, 1328, 1329, 1330, 1331,
	1332, 1333, 1334, 1335, 1336, 1337, 1338, 1345, 1346, 1347,
	1348, 1349, 1350, 1351, 1352, 404, 1672, 2500, 444, 1391,
	1166, 1814, 2568, 1176, 2974, 2976, 1672, 1013, 2021, 2370,
	712, 129, 1691, 2487, 2498, 2147, 2321, 444, 1414, 1312,
	447, 447, 2148, 2149, 447, 1691, 2324, 1691, 2320, 1682,
	1443, 129, 1188, 1189, 129, 2757, 2632, 1188, 1189, 447,
	447, 2591, 129, 1691, 2316, 2168, 1390, 1691, 2314, 1646,
	1394, 129, 129, 129, 129, 129, 1417, 1128, 2501, 1165,
	1164, 1174, 1175, 1167, 1168, 1169, 1170, 1171, 1172, 1173,
	1166, 2021, 447, 1176, 1517, 2499, 129, 2322, 1691, 2069,
	1627, 2872, 1270, 1149, 1282, 1355, 2653, 2021, 1691, 2067,
	2159, 1691, 2065, 96, 2156, 1691, 2063, 1434, 1441, 1691,
	2060, 444, 2896, 2897, 1805, 1165, 1164, 1174, 1175, 1167,
	1168, 1169, 1170, 1171, 1172, 1173, 1166, 2893, 2894, 1176,
	993, 1458, 2654, 447, 447, 447, 2767, 2766, 712, 1169,
	1170, 1171, 1172, 1173, 1166, 1492, 985, 1176, 95, 1418,
	1167, 1168, 1169, 1170, 1171, 1172, 1173, 1166, 968, 80,
	1176, 1476, 1429, 1430, 1431, 1432, 2164, 2873, 447, 1553,
	1006, 2259, 1377, 447, 447, 2258, 1437, 1376, 1438, 1455,
	1392, 1923, 1393, 1922, 1551, 1552, 1550, 1403, 94, 1411,
	1303, 1410, 1513, 1023, 129, 962, 129, 1420, 1146, 712,
	1498, 961, 1147, 1148, 1146, 2231, 1435, 1422, 1423, 1148,
	1146, 1625, 1474, 1806, 1379, 1149, 536, 129, 1147, 1148,
	1146, 1149, 1543, 1625, 1153, 1940, 3030, 1149, 80, 994,
	1147, 1148, 1146, 467, 3026, 1522, 1523, 1149, 2965, 2963,
	1421, 2928, 984, 1544, 1450, 1451, 2539, 1506, 1453, 1149,
	2533, 459, 1497, 1147, 1148, 1146, 2569, 2411, 1573, 1574,
	2905, 1439, 522, 1222, 1456, 1824, 1008, 1515, 2302, 712,
	1475, 1472, 1149, 1143, 1471, 1515, 2821, 971, 972, 973,
	974, 975, 976, 977, 1477, 712, 712, 1480, 1481, 1482,
	2813, 1484, 1485, 81, 3023, 1486, 2771, 1547, 1147, 1148,
	1146, 1487, 1154, 1221, 1549, 1488, 1489, 1133, 1490, 1491,
	1134, 2661, 1493, 1542, 2660, 1496, 2659, 1149, 1665, 2905,
	1505, 2933, 1674, 2932, 2658, 1277, 3016, 2998, 3015, 1277,
	2652, 522, 1611, 1614, 1510, 1147, 1148, 1146, 2492, 1626,
	672, 673, 129, 2906, 2491, 1147, 1148, 1146, 1924, 3024,
	129, 1605, 129, 2233, 1149, 2305, 2076, 129, 129, 1540,
	2077, 129, 129, 129, 1149, 1570, 522, 1571, 1375, 1526,
	1677, 1695, 2074, 2814, 1679, 705, 2050, 1417, 1147, 1148,
	1146, 712, 712, 1056, 2007, 1548, 2008, 2914, 677, 1055,
	1670, 1407, 1544, 1527, 2913, 689, 1528, 1149, 1882, 1883,
	1884, 1532, 1533, 1534, 1147, 1148, 1146, 1661, 1424, 1425,
	1426, 1427, 1428, 1147, 1148, 1146, 2733, 1636, 2874, 1638,
	2815, 522, 2871, 1149, 1576, 2827, 1029, 2729, 1584, 1536,
	1538, 1539, 1149, 1589, 1590, 2728, 1372, 1537, 2714, 2668,
	2636, 1597, 1697, 2589, 2536, 1601, 2535, 2534, 1675, 1028,
	2502, 2489, 1793, 2381, 2311, 2173, 2172, 2072, 1825, 1622,
	1800, 1452, 1696, 2734, 2902, 129, 2901, 2739, 2712, 2685,
	2027, 129, 129, 447, 447, 447, 1371, 1221, 129, 2679,
	2560, 1609, 1610, 1244, 2447, 2404, 2400, 2392, 1716, 2363,
	1724, 1684, 2116, 1680, 2115, 1759, 1760, 1818, 1683, 1791,
	1792, 1708, 1689, 1280, 1802, 1801, 1572, 129, 129, 129,
	1280, 1705, 1698, 1448, 1280, 1755, 1756, 1757, 1758, 1445,
	1409, 1408, 1380, 1378, 1051, 1821, 1739, 1740, 1741, 1742,
	981, 410, 408, 1402, 129, 1095, 129, 1751, 2602, 2930,
	712, 1507, 2475, 2920, 712, 2475, 2881, 2834, 1128, 1932,
	2475, 2830, 1863, 2475, 2720, 2602, 2708, 1128, 1694, 2602,
	2619, 2602, 1128, 2678, 1531, 2627, 712, 2602, 2601, 712,
	2475, 2474, 2456, 1128, 1827, 1865, 1128, 2626, 1774, 1803,
	2330, 2329, 2342, 1061, 1886, 2326, 2327, 2312, 712, 81,
	1543, 1997, 1811, 561, 560, 563, 564, 565, 566, 1676,
	1807, 1285, 562, 567, 1160, 1812, 1163, 2852, 1128, 2326,
	2325, 1544, 1127, 1177, 1178, 1179, 1180, 1181, 1182, 1183,
	1286, 1161, 1162, 1159, 1895, 1128, 1649, 1128, 1761, 1838,
	1837, 1165, 1164, 1174, 1175, 1167, 1168, 1169, 1170, 1171,
	1172, 1173, 1166, 1816, 1286, 1176, 1603, 1822, 1649, 1820,
	1603, 1128, 1309, 1308, 1785, 1826, 1165, 1164, 1174, 1175,
	1167, 1168, 1169, 1170, 1171, 1172, 1173, 1166, 2243, 2677,
	1176, 2257, 1997, 1648, 1833, 1100, 1287, 84, 1289, 1519,
	1099, 1696, 1058, 1059, 2948, 1059, 1963, 1965, 1547, 1647,
	1277, 1277, 1277, 1277, 1277, 1784, 1840, 2926, 1862, 1843,
	1287, 2257, 1285, 1839, 1874, 1678, 1665, 1603, 1988, 2450,
	1649, 1872, 1873, 1649, 1799, 2343, 2328, 1277, 2271, 2171,
	2140, 2011, 129, 129, 129, 129, 129, 2411, 1891, 2257,
	1518, 1895, 1847, 1061, 129, 1969, 1887, 1280, 129, 1685,
	1895, 1912, 129, 1911, 1654, 1657, 1658, 1659, 1655, 129,
	1656, 1660, 1968, 1454, 2262, 2263, 1798, 2831, 1999, 1520,
	2000, 1123, 1998, 1495, 1190, 1191, 1192, 1193, 1194, 1195,
	1196, 1917, 1983, 712, 1964, 1137, 1548, 1461, 1285, 1400,
	1990, 1398, 1291, 2270, 2753, 2682, 2494, 700, 689, 522,
	1991, 1725, 2462, 1754, 1605, 1174, 1175, 1167, 1168, 1169,
	1170, 1171, 1172, 1173, 1166, 1939, 2301, 1176, 1750, 522,
	2026, 2028, 1788, 2262, 2263, 1881, 2015, 1065, 1789, 1790,
	1654, 1657, 1658, 1659, 1655, 1797, 1656, 1660, 1971, 1972,
	1779, 1974, 2012, 1745, 1744, 1372, 712, 1373, 129, 1970,
	1048, 1982, 1973, 2059, 1995, 2062, 2064, 2066, 2068, 81,
	418, 712, 712, 712, 1763, 1815, 1810, 447, 1918, 2987,
	1297, 2985, 2002, 2955, 2341, 444, 2120, 2437, 2265, 2010,
	2243, 129, 447, 2078, 1405, 1280, 1280, 1280, 1280, 1280,
	1941, 1054, 1101, 1390, 1062, 2114, 1057, 2268, 447, 2267,
	1979, 1280, 2020, 467, 2025, 1980, 1977, 2014, 2113, 1976,
	1975, 1978, 1280, 1981, 80, 1658, 1659, 527, 528, 447,
	2891, 712, 2839, 2174, 1871, 1530, 2073, 447, 449, 2883,
	2453, 1154, 1879, 2051, 2052, 2075, 1141, 1142, 1878, 2592,
	2058, 2169, 2170, 2559, 2478, 2399, 1948, 1950, 712, 712,
	2070, 2398, 2029, 1956, 1957, 1958, 1959, 2084, 129, 2104,
	2082, 2179, 2083, 2310, 2309, 1139, 2308, 2019, 712, 2295,
	2744, 2747, 2826, 1543, 2825, 2672, 1165, 1164, 1174, 1175,
	1167, 1168, 1169, 1170, 1171, 1172, 1173, 1166, 2118, 2670,
	1176, 591, 2725, 2724, 1544, 2117, 409, 2125, 2131, 2123,
	2236, 1449, 2655, 2656, 1130, 2167, 2137, 2166, 2337, 2061,
	1304, 1046, 1030, 2248, 80, 1131, 1027, 522, 1026, 982,
	2139, 2150, 2144, 2161, 2162, 2940, 2689, 2165, 2688, 1772,
	1522, 1523, 712, 2448, 1773, 1404, 2949, 2819, 2273, 1513,
	2142, 2153, 2158, 2277, 2278, 2279, 712, 2541, 712, 2674,
	2482, 1025, 2336, 2145, 2542, 2244, 2230, 2256, 1969, 467,
	1141, 1142, 2939, 2185, 2189, 1764, 2180, 96, 1511, 1119,
	1120, 712, 2181, 1877, 2938, 1968, 2937, 2633, 1846, 1009,
	524, 1876, 2876, 696, 2219, 2179, 2875, 708, 2303, 2283,
	2220, 1371, 712, 2838, 712, 2823, 712, 2748, 712, 2704,
	525, 84, 2249, 2837, 2759, 1997, 2090, 2091, 2092, 970,
	2247, 2989, 2988, 2989, 2572, 2281, 2379, 522, 2136, 2134,
	2276, 2133, 1929, 2251, 2297, 2298, 1926, 1844, 2299, 1436,
	2300, 2266, 1144, 2988, 2705, 2272, 2307, 1516, 700, 2294,
	456, 2296, 458, 2793, 52, 2274, 2795, 19, 2794, 18,
	86, 1759, 55, 1760, 1, 2288, 2796, 20, 2797, 21,
	1834, 129, 1478, 2287, 2521, 444, 2358, 2313, 2315, 2792,
	15, 2791, 14, 2520, 2319, 2785, 10, 2808, 34, 2806,
	33, 712, 712, 712, 2805, 32, 2323, 2344, 447, 2338,
	2339, 2340, 2527, 129, 447, 2081, 2804, 28, 2803, 27,
	2802, 26, 2800, 23, 2348, 2232, 2351, 129, 2102, 447,
	2537, 712, 447, 2799, 22, 1388, 447, 447, 2360, 447,
	2365, 2801, 24, 2790, 13, 2787, 12, 2644, 2112, 2786,
	11, 2784, 9, 965, 1783, 1440, 712, 1052, 2824, 2743,
	129, 712, 2745, 467, 2669, 2544, 2505, 2388, 712, 2504,
	2095, 712, 2094, 1047, 712, 1459, 2143, 2146, 1794, 2421,
	2317, 1856, 2282, 2237, 2238, 2239, 2240, 2241, 2755, 1845,
	1102, 1709, 1699, 702, 92, 2412, 1804, 992, 376, 1706,
	2442, 2035, 2366, 1372, 2746, 2383, 2403, 1049, 2369, 2034,
	2048, 2373, 2382, 1721, 1767, 2377, 2378, 1771, 2380, 2389,
	2033, 2032, 2741, 2036, 1317, 2175, 1315, 1316, 1165, 1164,
	1174, 1175, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1166,
	1602, 1604, 1176, 1314, 1319, 2410, 1608, 1318, 380, 1299,
	2367, 2862, 2446, 2190, 2191, 1145, 129, 107, 2193, 2194,
	56, 2561, 2197, 2198, 2199, 2200, 2157, 452, 453, 2204,
	2205, 2206, 97, 712, 1969, 105, 382, 1184, 1634, 1635,
	712, 712, 712, 1875, 2003, 1641, 1642, 1643, 1644, 687,
	712, 1968, 2427, 688, 680, 2457, 1867, 1125, 2765, 2470,
	2471, 2472, 2923, 2854, 712, 1545, 80, 1135, 1554, 1555,
	1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565,
	1566, 1567, 1568, 2480, 2458, 2468, 2886, 1938, 2449, 2496,
	1233, 1623, 545, 1986, 2590, 2888, 2469, 1535, 559, 558,
	557, 2479, 554, 555, 129, 2848, 712, 2473, 2405, 2012,
	1525, 1960, 1158, 2486, 2331, 2517, 2518, 2519, 543, 534,
	2497, 467, 532, 1275, 1268, 2483, 1823, 1653, 1651, 467,
	1650, 1406, 676, 2264, 2260, 1663, 1274, 1617, 1278, 70,
	2571, 1007, 447, 398, 2443, 1628, 2700, 38, 457, 529,
	25, 17, 1017, 16, 2495, 1849, 2555, 2556, 963, 42,
	2516, 44, 2089, 1775, 2570, 2861, 2970, 1033, 2996, 522,
	2018, 712, 2179, 2903, 2557, 31, 30, 29, 2445, 712,
	2798, 2248, 2807, 2565, 2248, 2597, 2573, 2574, 2334, 2551,
	2789, 2545, 2546, 1221, 2294, 2558, 2547, 2273, 2550, 2788,
	2957, 2956, 4, 2459, 2460, 1116, 1759, 2461, 71, 2566,
	2463, 35, 2488, 2621, 2490, 1212, 1213, 698, 1221, 712,
	2364, 2549, 2, 2543, 1817, 712, 0, 0, 0, 0,
	129, 0, 129, 0, 2368, 0, 0, 0, 712, 0,
	2594, 0, 0, 0, 2600, 0, 0, 0, 2629, 0,
	0, 0, 0, 2630, 2593, 0, 0, 712, 0, 0,
	2628, 0, 0, 2617, 2618, 0, 0, 2401, 1670, 0,
	2605, 2615, 2616, 2596, 0, 2614, 2609, 0, 2247, 2634,
	2604, 2247, 0, 2599, 2622, 0, 2624, 1848, 522, 0,
	0, 0, 0, 1864, 2603, 0, 0, 0, 2635, 2415,
	2690, 0, 0, 1277, 0, 0, 0, 2417, 0, 0,
	2418, 2419, 2578, 2647, 0, 0, 0, 2657, 2422, 0,
	0, 2662, 0, 0, 0, 0, 2248, 712, 80, 0,
	2665, 2675, 0, 0, 0, 129, 2680, 2681, 0, 0,
	0, 0, 2691, 2683, 2684, 0, 2687, 0, 2692, 0,
	0, 2693, 0, 1893, 696, 0, 1819, 0, 1896, 696,
	1300, 80, 0, 1898, 1899, 712, 1901, 1902, 1903, 1904,
	0, 0, 1907, 1908, 1909, 1910, 2711, 0, 0, 1914,
	1915, 1916, 2706, 0, 0, 0, 1919, 1920, 1921, 2703,
	0, 2723, 0, 0, 1927, 2713, 0, 1930, 1931, 0,
	0, 0, 1936, 0, 0, 0, 0, 1942, 1277, 1943,
	1944, 1945, 0, 1946, 1947, 2710, 2707, 1951, 1952, 1953,
	1954, 1955, 0, 2247, 0, 0, 0, 0, 0, 0,
	0, 522, 0, 0, 0, 0, 0, 447, 0, 0,
	129, 0, 0, 1984, 1985, 712, 2436, 0, 2751, 2721,
	0, 2503, 0, 2750, 80, 0, 0, 0, 1888, 1889,
	1890, 2778, 0, 2749, 522, 0, 0, 0, 2760, 2752,
	0, 0, 0, 0, 2776, 2292, 2435, 2768, 129, 2769,
	0, 0, 1969, 0, 0, 0, 0, 0, 1280, 0,
	0, 1631, 0, 0, 0, 0, 0, 0, 0, 1968,
	0, 1726, 1727, 0, 1732, 1733, 1734, 1735, 1736, 0,
	0, 2822, 0, 2820, 0, 0, 712, 0, 532, 2832,
	712, 2829, 1746, 1747, 1748, 1933, 1934, 1935, 0, 0,
	0, 2857, 2851, 0, 0, 0, 0, 2853, 0, 0,
	0, 0, 2711, 80, 0, 1165, 1164, 1174, 1175, 1167,
	1168, 1169, 1170, 1171, 1172, 1173, 1166, 0, 0, 1176,
	0, 0, 0, 0, 0, 0, 0, 2866, 0, 0,
	0, 0, 0, 0, 712, 1165, 1164, 1174, 1175, 1167,
	1168, 1169, 1170, 1171, 1172, 1173, 1166, 2892, 0, 1176,
	0, 2878, 0, 1280, 712, 2882, 0, 2880, 0, 0,
	0, 2387, 0, 0, 0, 0, 0, 2900, 2018, 2879,
	2898, 2394, 2396, 0, 0, 712, 0, 444, 2918, 1374,
	0, 2387, 0, 2919, 0, 1382, 1385, 0, 0, 0,
	0, 0, 2910, 0, 2899, 0, 0, 80, 0, 0,
	447, 0, 0, 80, 0, 0, 1382, 1385, 712, 1221,
	2943, 0, 0, 0, 0, 0, 2936, 2931, 2934, 0,
	2921, 712, 0, 0, 80, 0, 0, 2941, 0, 80,
	0, 2952, 0, 2945, 712, 2184, 2967, 2961, 2980, 2960,
	2236, 2192, 2959, 2964, 444, 2979, 2195, 2196, 2986, 2958,
	2984, 2982, 2981, 80, 2203, 2950, 80, 80, 2207, 2946,
	0, 80, 0, 0, 2943, 0, 0, 447, 2999, 2990,
	0, 712, 2991, 467, 0, 2993, 0, 0, 0, 0,
	0, 2119, 0, 80, 0, 3009, 80, 0, 0, 0,
	2943, 3017, 0, 3019, 0, 0, 0, 1479, 0, 0,
	0, 80, 0, 80, 2250, 3014, 0, 80, 2943, 0,
	2943, 0, 0, 0, 2858, 2859, 0, 2969, 80, 0,
	0, 80, 0, 80, 0, 2943, 3029, 80, 0, 0,
	2943, 0, 522, 0, 2943, 0, 2280, 0, 0, 0,
	3033, 0, 2887, 2890, 0, 0, 0, 0, 0, 0,
	36, 0, 72, 39, 40, 0, 0, 0, 708, 2183,
	0, 0, 0, 0, 59, 0, 0, 0, 0, 0,
	78, 0, 0, 41, 0, 2434, 0, 0, 2201, 2202,
	0, 0, 0, 0, 0, 2772, 0, 0, 708, 0,
	0, 0, 2221, 2222, 0, 2223, 2224, 0, 0, 2225,
	0, 0, 0, 0, 2387, 0, 0, 0, 0, 0,
	2935, 0, 81, 1164, 1174, 1175, 1167, 1168, 1169, 1170,
	1171, 1172, 1173, 1166, 2387, 0, 1176, 0, 1575, 0,
	0, 2890, 0, 0, 0, 0, 0, 0, 2809, 0,
	0, 2995, 2998, 2994, 1595, 1596, 0, 0, 0, 0,
	0, 0, 0, 391, 0, 0, 2275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 696, 0, 2053,
	2054, 2055, 2057, 0, 1165, 1164, 1174, 1175, 1167, 1168,
	1169, 1170, 1171, 1172, 1173, 1166, 0, 467, 1176, 467,
	0, 0, 0, 0, 0, 2292, 0, 0, 0, 0,
	0, 0, 0, 3018, 0, 0, 0, 2306, 0, 0,
	0, 0, 0, 0, 2292, 0, 0, 0, 2420, 0,
	0, 2413, 0, 696, 43, 74, 46, 45, 48, 0,
	0, 0, 0, 0, 0, 0, 0, 708, 0, 2810,
	708, 708, 0, 0, 0, 0, 0, 0, 0, 2423,
	0, 1138, 0, 0, 369, 49, 77, 76, 0, 0,
	2432, 2433, 47, 0, 0, 0, 2438, 1165, 1164, 1174,
	1175, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1166, 0,
	0, 1176, 0, 0, 0, 0, 0, 0, 0, 2451,
	2452, 0, 2454, 0, 0, 2455, 0, 0, 0, 127,
	0, 372, 395, 2228, 0, 0, 0, 0, 127, 0,
	381, 389, 390, 57, 58, 2467, 2811, 0, 0, 0,
	0, 0, 0, 2227, 0, 0, 0, 0, 0, 0,
	66, 466, 67, 0, 0, 0, 0, 0, 0, 533,
	0, 0, 679, 697, 0, 378, 127, 0, 379, 2414,
	2226, 387, 388, 0, 0, 0, 0, 68, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 127, 0, 0,
	0, 0, 0, 0, 0, 2812, 75, 0, 53, 54,
	61, 0, 62, 2439, 2440, 2441, 0, 0, 0, 1832,
	0, 0, 2292, 1832, 0, 0, 0, 0, 384, 0,
	1165, 1164, 1174, 1175, 1167, 1168, 1169, 1170, 1171, 1172,
	1173, 1166, 0, 0, 1176, 1832, 0, 0, 1832, 385,
	1165, 1164, 1174, 1175, 1167, 1168, 1169, 1170, 1171, 1172,
	1173, 1166, 0, 0, 1176, 0, 0, 1870, 0, 0,
	0, 0, 0, 0, 0, 0, 708, 1165, 1164, 1174,
	1175, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1166, 0,
	2481, 1176, 0, 2292, 0, 0, 0, 0, 0, 0,
	2584, 2585, 2586, 0, 2588, 73, 0, 0, 0, 0,
	0, 0, 0, 0, 370, 0, 0, 2318, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2606, 2607, 2608, 0, 0, 0, 0, 0, 0,
	0, 0, 2620, 0, 2182, 0, 0, 0, 383, 373,
	374, 0, 394, 0, 79, 0, 375, 377, 0, 371,
	393, 392, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2292, 1165, 1164, 1174, 1175, 1167, 1168, 1169, 1170,
	1171, 1172, 1173, 1166, 0, 0, 1176, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 515, 0, 0,
	696, 0, 0, 386, 0, 0, 0, 2576, 2577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2391, 0,
	0, 2580, 2581, 2582, 2583, 0, 0, 520, 0, 2587,
	0, 0, 0, 0, 0, 0, 696, 2694, 2695, 0,
	127, 2696, 2697, 2698, 2699, 480, 0, 0, 0, 0,
	0, 0, 708, 0, 0, 0, 0, 1892, 0, 0,
	0, 0, 0, 487, 0, 0, 0, 0, 0, 0,
	2424, 2425, 0, 2426, 0, 0, 2428, 0, 2430, 0,
	0, 0, 0, 0, 127, 1165, 1164, 1174, 1175, 1167,
	1168, 1169, 1170, 1171, 1172, 1173, 1166, 0, 0, 1176,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2079, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2093, 2097, 2101, 0, 0, 466, 0, 0, 519, 0,
	0, 0, 0, 0, 0, 0, 0, 1312, 0, 0,
	0, 0, 2476, 2477, 0, 486, 470, 0, 0, 0,
	0, 2761, 0, 0, 0, 489, 0, 0, 2770, 0,
	0, 0, 0, 0, 506, 0, 0, 481, 0, 478,
	2773, 0, 0, 0, 0, 0, 488, 0, 0, 0,
	2132, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2719, 0,
	0, 0, 0, 0, 0, 0, 2833, 708, 708, 0,
	0, 0, 0, 0, 492, 490, 2842, 0, 0, 493,
	0, 0, 0, 0, 0, 498, 472, 708, 500, 0,
	0, 0, 0, 0, 0, 0, 469, 0, 0, 708,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	484, 502, 0, 0, 0, 0, 0, 0, 482, 483,
	485, 504, 0, 505, 511, 2754, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2234, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 696, 0, 708, 0, 2255, 0, 0,
	515, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2384, 0, 0,
	2255, 2386, 0, 0, 127, 127, 127, 473, 0, 0,
	520, 0, 0, 0, 697, 0, 0, 491, 0, 697,
	0, 708, 0, 708, 0, 708, 0, 2291, 480, 0,
	1577, 1582, 1583, 0, 1585, 1586, 1587, 1588, 0, 0,
	1591, 1592, 1593, 1594, 0, 0, 487, 1598, 1599, 1600,
	0, 0, 0, 0, 0, 1606, 1607, 0, 512, 513,
	1613, 1616, 0, 1621, 474, 475, 476, 477, 479, 494,
	495, 496, 497, 509, 508, 507, 510, 514, 517, 516,
	518, 0, 0, 0, 0, 1629, 0, 1632, 1633, 0,
	0, 0, 1637, 0, 1639, 1640, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2345, 2346, 2347, 0, 0, 0, 0, 0, 0, 0,
	0, 519, 0, 3020, 3021, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 486, 470,
	2372, 0, 0, 0, 0, 0, 0, 0, 489, 0,
	0, 0, 0, 0, 0, 0, 0, 506, 0, 0,
	481, 0, 478, 0, 0, 2397, 0, 0, 0, 488,
	2402, 0, 0, 0, 0, 0, 0, 2406, 0, 0,
	2407, 0, 0, 2409, 503, 0, 0, 2978, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 471, 0, 492, 490, 0,
	0, 0, 493, 0, 0, 499, 501, 0, 498, 472,
	0, 500, 0, 0, 0, 0, 0, 3002, 0, 469,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 484, 502, 0, 0, 0, 0, 0,
	0, 482, 483, 485, 504, 0, 505, 511, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 696,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	127, 0, 2465, 0, 0, 1383, 1386, 0, 0, 2465,
	2465, 2465, 0, 0, 0, 0, 0, 0, 0, 708,
	127, 0, 0, 127, 0, 0, 1383, 1386, 0, 0,
	0, 1416, 0, 2465, 0, 0, 0, 0, 0, 0,
	127, 127, 127, 127, 127, 0, 0, 0, 0, 0,
	473, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	491, 0, 0, 0, 0, 1444, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2097, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 512, 513, 0, 0, 0, 0, 474, 475, 476,
	477, 479, 494, 495, 496, 497, 509, 508, 507, 510,
	514, 517, 516, 518, 0, 0, 0, 0, 1894, 0,
	0, 0, 0, 0, 0, 0, 1900, 0, 0, 0,
	708, 1905, 1906, 0, 0, 0, 0, 0, 708, 1913,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 127, 1937, 466, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2598, 0,
	0, 0, 0, 0, 2465, 0, 127, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2291, 1416, 0,
	0, 0, 0, 0, 0, 36, 37, 72, 39, 40,
	0, 0, 0, 0, 0, 0, 2291, 503, 0, 59,
	0, 0, 0, 0, 0, 78, 0, 0, 41, 63,
	64, 0, 0, 0, 0, 0, 60, 0, 471, 0,
	1581, 1581, 1581, 0, 1581, 1581, 1581, 1581, 499, 501,
	1581, 1581, 1581, 1581, 0, 0, 0, 1581, 1581, 1581,
	0, 0, 0, 50, 0, 1581, 1581, 81, 0, 0,
	1581, 1581, 0, 1581, 0, 0, 0, 697, 0, 0,
	0, 0, 0, 0, 0, 0, 2686, 0, 0, 0,
	0, 0, 0, 0, 0, 1581, 1581, 1581, 1581, 0,
	0, 1581, 1581, 1581, 1581, 1581, 0, 0, 0, 0,
	0, 127, 0, 0, 0, 0, 0, 0, 0, 127,
	0, 466, 515, 0, 2709, 0, 127, 127, 0, 0,
	127, 1681, 1416, 697, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2016, 0, 0, 0, 1416, 0, 0,
	0, 0, 520, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	480, 0, 0, 0, 0, 0, 0, 0, 0, 43,
	74, 46, 45, 48, 0, 0, 0, 0, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2291, 0, 0, 0, 0, 0,
	49, 77, 76, 0, 0, 0, 0, 47, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 696, 0, 0,
	0, 65, 0, 0, 127, 0, 0, 0, 0, 0,
	127, 127, 0, 0, 0, 0, 0, 127, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 519, 0, 0, 0, 0, 57, 58,
	0, 0, 1312, 0, 0, 2291, 1808, 1809, 127, 2835,
	486, 470, 0, 0, 0, 66, 0, 67, 0, 0,
	489, 0, 0, 0, 0, 0, 0, 0, 0, 506,
	0, 0, 481, 127, 478, 466, 0, 0, 0, 0,
	0, 488, 68, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 708, 0, 0, 0, 0, 0, 0,
	51, 75, 0, 53, 54, 61, 0, 62, 0, 492,
	490, 0, 0, 2291, 493, 0, 0, 0, 0, 0,
	498, 472, 0, 500, 0, 0, 1416, 0, 0, 0,
	0, 469, 0, 0, 2465, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 484, 502, 0, 0, 0,
	0, 0, 0, 482, 483, 485, 504, 0, 505, 511,
	0, 0, 0, 0, 0, 0, 0, 2925, 0, 0,
	0, 0, 0, 0, 515, 0, 0, 0, 1581, 0,
	2929, 0, 0, 0, 0, 0, 1581, 0, 0, 0,
	0, 1581, 1581, 708, 0, 1370, 0, 0, 0, 1581,
	73, 0, 0, 1581, 520, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 480, 0, 1581, 0, 0, 0, 0, 0,
	2925, 0, 473, 0, 0, 0, 0, 0, 0, 0,
	487, 0, 491, 0, 0, 0, 0, 0, 0, 79,
	697, 127, 127, 127, 127, 127, 0, 0, 0, 0,
	0, 0, 0, 466, 0, 0, 0, 127, 0, 0,
	0, 466, 0, 0, 0, 0, 1581, 0, 127, 0,
	0, 0, 0, 512, 513, 0, 697, 0, 0, 474,
	475, 476, 477, 479, 494, 495, 496, 497, 509, 508,
	507, 510, 514, 517, 516, 518, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 519, 0, 0, 0, 0,
	0, 0, 0, 0, 1312, 0, 0, 0, 0, 0,
	0, 0, 486, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 489, 0, 0, 0, 0, 0, 0, 0,
	0, 506, 0, 0, 481, 0, 478, 0, 0, 0,
	0, 0, 0, 488, 0, 0, 0, 127, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	127, 492, 490, 0, 0, 0, 493, 0, 0, 503,
	0, 0, 498, 472, 0, 500, 0, 0, 0, 0,
	0, 0, 0, 469, 0, 0, 0, 0, 0, 0,
	471, 0, 0, 0, 0, 0, 0, 484, 502, 0,
	499, 501, 0, 1339, 0, 482, 483, 485, 504, 0,
	505, 511, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 515, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 127, 0, 0,
	0, 0, 0, 0, 0, 2386, 0, 0, 1581, 0,
	0, 0, 0, 0, 520, 0, 0, 1581, 0, 1416,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 473, 0, 0, 0, 0, 0,
	487, 0, 0, 0, 491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 697, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 512, 513, 0, 0, 0,
	0, 474, 475, 476, 477, 479, 494, 495, 496, 497,
	509, 508, 507, 510, 514, 517, 516, 518, 0, 0,
	0, 0, 0, 0, 0, 519, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 486, 470, 0, 0, 0, 0, 1340, 0,
	0, 0, 489, 0, 0, 0, 0, 0, 0, 0,
	0, 506, 0, 0, 481, 0, 478, 0, 0, 0,
	0, 0, 0, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	127, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 492, 490, 0, 0, 0, 493, 0, 0, 0,
	0, 503, 498, 472, 0, 500, 0, 0, 0, 0,
	0, 0, 127, 469, 0, 0, 0, 0, 0, 0,
	0, 0, 471, 0, 0, 0, 127, 484, 502, 0,
	0, 0, 499, 501, 0, 482, 483, 485, 504, 0,
	505, 511, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 127,
	0, 0, 0, 1353, 1356, 1357, 1358, 1359, 1360, 1361,
	0, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 533,
	1341, 1342, 1343, 1344, 1320, 1324, 1354, 1321, 1327, 1323,
	1325, 1322, 0, 1328, 1329, 1330, 1331, 1332, 1333, 1334,
	1335, 1336, 1337, 1338, 1345, 1346, 1347, 1348, 1349, 1350,
	1351, 1352, 0, 0, 473, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 491, 0, 0, 0, 0, 0,
	36, 0, 72, 39, 40, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 59, 0, 0, 0, 0, 0,
	78, 0, 0, 41, 0, 466, 0, 0, 0, 697,
	0, 0, 0, 0, 0, 512, 513, 0, 0, 0,
	0, 474, 475, 476, 477, 479, 494, 495, 496, 497,
	509, 508, 507, 510, 514, 517, 516, 518, 1419, 0,
	0, 0, 81, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1355, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2809, 0,
	0, 0, 0, 3035, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 127, 0, 0, 0, 0, 594, 595,
	596, 597, 598, 599, 600, 601, 602, 603, 604, 605,
	606, 607, 608, 609, 610, 611, 612, 613, 614, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	626, 627, 628, 629, 630, 631, 632, 633, 634, 635,
	0, 503, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 43, 74, 46, 45, 48, 0,
	0, 0, 471, 0, 0, 0, 0, 0, 0, 2810,
	0, 0, 499, 501, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 49, 77, 76, 0, 0,
	0, 0, 47, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 466,
	0, 466, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 57, 58, 0, 2811, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	66, 0, 67, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 68, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2812, 75, 0, 53, 54,
	61, 0, 62, 0, 127, 533, 0, 0, 921, 891,
	330, 810, 924, 753, 788, 940, 794, 798, 865, 731,
	839, 257, 784, 732, 0, 757, 721, 772, 722, 754,
	181, 751, 894, 842, 923, 215, 860, 0, 180, 170,
	222, 834, 0, 0, 0, 264, 329, 922, 829, 0,
	931, 218, 0, 855, 932, 318, 241, 0, 0, 825,
	908, 837, 887, 808, 867, 741, 854, 926, 785, 862,
	927, 0, 0, 0, 0, 2860, 0, 0, 0, 0,
	0, 0, 0, 0, 736, 0, 858, 920, 775, 861,
	820, 864, 945, 719, 857, 73, 726, 733, 939, 915,
	763, 764, 766, 0, 0, 0, 0, 0, 0, 127,
	823, 838, 879, 806, 350, 268, 285, 306, 796, 276,
	782, 0, 0, 0, 0, 0, 0, 0, 0, 759,
	0, 852, 0, 0, 0, 735, 727, 697, 0, 0,
	0, 0, 0, 0, 79, 0, 0, 127, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 819,
	0, 0, 0, 740, 718, 761, 881, 0, 716, 242,
	148, 889, 914, 807, 208, 937, 918, 805, 804, 278,
	0, 325, 196, 216, 152, 130, 146, 163, 195, 253,
	878, 300, 778, 717, 895, 755, 773, 171, 768, 292,
	261, 349, 786, 847, 291, 219, 339, 872, 919, 348,
	790, 902, 358, 363, 767, 830, 738, 315, 182, 179,
	762, 0, 137, 783, 275, 176, 211, 809, 866, 756,
	167, 875, 853, 898, 314, 336, 134, 239, 337, 362,
	154, 331, 240, 246, 164, 166, 165, 147, 309, 335,
	159, 169, 319, 296, 899, 175, 0, 0, 2863, 2864,
	2865, 797, 787, 0, 0, 354, 803, 303, 302, 793,
	203, 886, 856, 723, 284, 869, 209, 136, 327, 365,
	153, 213, 332, 715, 191, 252, 173, 262, 263, 770,
	132, 280, 233, 234, 232, 235, 194, 774, 871, 884,
	282, 305, 334, 155, 322, 769, 771, 777, 880, 294,
	896, 912, 925, 225, 185, 188, 197, 204, 863, 289,
	323, 355, 0, 149, 138, 328, 347, 160, 304, 307,
	364, 290, 141, 345, 324, 237, 812, 818, 139, 0,
	140, 287, 760, 779, 174, 256, 0, 193, 277, 342,
	343, 172, 366, 150, 357, 143, 734, 356, 249, 0,
	248, 359, 338, 346, 238, 227, 0, 142, 344, 236,
	226, 214, 187, 199, 273, 221, 274, 200, 244, 243,
	245, 223, 836, 0, 724, 0, 320, 352, 367, 326,
	157, 747, 308, 333, 789, 281, 158, 192, 186, 272,
	247, 151, 202, 317, 212, 220, 286, 944, 260, 293,
	161, 351, 316, 183, 745, 746, 743, 0, 744, 840,
	841, 928, 929, 930, 883, 737, 0, 909, 910, 0,
	0, 0, 0, 0, 893, 916, 917, 868, 942, 795,
	168, 725, 728, 729, 730, 739, 826, 827, 846, 850,
	905, 904, 903, 906, 911, 935, 934, 936, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 845,
	133, 144, 217, 943, 283, 190, 713, 714, 742, 748,
	749, 750, 0, 752, 758, 0, 765, 776, 780, 781,
	792, 799, 800, 801, 802, 811, 813, 814, 815, 816,
	817, 821, 822, 824, 832, 833, 835, 843, 844, 849,
	851, 0, 874, 876, 882, 885, 888, 890, 892, 897,
	900, 901, 933, 941, 946, 353, 178, 828, 831, 848,
	877, 145, 156, 162, 177, 184, 189, 198, 201, 205,
	206, 207, 210, 224, 228, 229, 230, 231, 250, 251,
	254, 255, 258, 259, 265, 266, 267, 269, 270, 271,
	279, 873, 288, 295, 297, 298, 299, 301, 310, 311,
	312, 313, 321, 340, 341, 360, 361, 913, 0, 131,
	0, 0, 720, 0, 0, 0, 0, 0, 791, 135,
	907, 938, 859, 870, 921, 891, 330, 810, 924, 753,
	788, 940, 794, 798, 865, 731, 839, 257, 784, 732,
	0, 757, 721, 772, 722, 754, 181, 751, 894, 842,
	923, 215, 860, 0, 180, 170, 222, 834, 0, 0,
	0, 264, 329, 922, 829, 0, 931, 218, 0, 855,
	932, 318, 241, 0, 0, 825, 908, 837, 887, 808,
	867, 741, 854, 926, 785, 862, 927, 0, 0, 0,
	0, 711, 0, 1703, 1704, 0, 0, 0, 0, 0,
	736, 0, 858, 920, 775, 861, 820, 864, 945, 719,
	857, 0, 726, 733, 939, 915, 763, 764, 766, 2013,
	0, 0, 0, 0, 0, 0, 823, 838, 879, 806,
	350, 268, 285, 306, 796, 276, 782, 0, 0, 0,
	0, 0, 0, 0, 0, 759, 0, 852, 0, 0,
	0, 735, 727, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 819, 0, 0, 0, 740,
	718, 761, 881, 0, 716, 242, 148, 889, 914, 807,
	208, 937, 918, 805, 804, 278, 0, 325, 196, 216,
	152, 130, 146, 163, 195, 253, 878, 300, 778, 717,
	895, 755, 773, 171, 768, 292, 261, 349, 786, 847,
	291, 219, 339, 872, 919, 348, 790, 902, 358, 363,
	767, 830, 738, 315, 182, 179, 762, 0, 137, 783,
	275, 176, 211, 809, 866, 756, 167, 875, 853, 898,
	314, 336, 134, 239, 337, 362, 154, 331, 240, 246,
	164, 166, 165, 147, 309, 335, 159, 169, 319, 296,
	899, 175, 0, 0, 0, 0, 0, 797, 787, 0,
	0, 354, 803, 303, 302, 793, 203, 886, 856, 723,
	284, 869, 209, 136, 327, 365, 153, 213, 332, 715,
	191, 252, 173, 262, 263, 770, 132, 280, 233, 234,
	232, 235, 194, 774, 871, 884, 282, 305, 334, 155,
	322, 769, 771, 777, 880, 294, 896, 912, 925, 225,
	185, 188, 197, 204, 863, 289, 323, 355, 0, 149,
	138, 328, 347, 160, 304, 307, 364, 290, 141, 345,
	324, 237, 812, 818, 139, 0, 140, 287, 760, 779,
	174, 256, 0, 193, 277, 342, 343, 172, 366, 150,
	357, 143, 734, 356, 249, 0, 248, 359, 338, 346,
	238, 227, 0, 142, 344, 236, 226, 214, 187, 199,
	273, 221, 274, 200, 244, 243, 245, 223, 836, 0,
	724, 0, 320, 352, 367, 326, 157, 747, 308, 333,
	789, 281, 158, 192, 186, 272, 247, 151, 202, 317,
	212, 220, 286, 944, 260, 293, 161, 351, 316, 183,
	745, 746, 743, 0, 744, 840, 841, 928, 929, 930,
	883, 737, 0, 909, 910, 0, 0, 0, 0, 0,
	893, 916, 917, 868, 942, 795, 168, 725, 728, 729,
	730, 739, 826, 827, 846, 850, 905, 904, 903, 906,
	911, 935, 934, 936, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 845, 133, 144, 217, 943,
	283, 190, 713, 714, 742, 748, 749, 750, 0, 752,
	758, 0, 765, 776, 780, 781, 792, 799, 800, 801,
	802, 811, 813, 814, 815, 816, 817, 821, 822, 824,
	832, 833, 835, 843, 844, 849, 851, 0, 874, 876,
	882, 885, 888, 890, 892, 897, 900, 901, 933, 941,
	946, 353, 178, 828, 831, 848, 877, 145, 156, 162,
	177, 184, 189, 198, 201, 205, 206, 207, 210, 224,
	228, 229, 230, 231, 250, 251, 254, 255, 258, 259,
	265, 266, 267, 269, 270, 271, 279, 873, 288, 295,
	297, 298, 299, 301, 310, 311, 312, 313, 321, 340,
	341, 360, 361, 913, 0, 131, 0, 0, 720, 0,
	0, 0, 0, 0, 791, 135, 907, 938, 859, 870,
	921, 891, 330, 810, 924, 753, 788, 940, 794, 798,
	865, 731, 839, 257, 784, 732, 0, 757, 721, 772,
	722, 754, 181, 751, 894, 842, 923, 215, 860, 0,
	180, 170, 222, 834, 0, 0, 0, 264, 329, 922,
	829, 0, 931, 218, 0, 855, 932, 318, 241, 0,
	0, 825, 908, 837, 887, 808, 867, 741, 854, 926,
	785, 862, 927, 0, 0, 0, 0, 711, 0, 1703,
	1704, 0, 0, 0, 0, 0, 736, 0, 858, 920,
	775, 861, 820, 864, 945, 719, 857, 0, 726, 733,
	939, 915, 763, 764, 766, 0, 0, 0, 0, 0,
	0, 0, 823, 838, 879, 806, 350, 268, 285, 306,
	796, 276, 782, 0, 0, 0, 0, 0, 0, 0,
	0, 759, 0, 852, 0, 0, 0, 735, 727, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 819, 0, 0, 0, 740, 718, 761, 881, 0,
	716, 242, 148, 889, 914, 807, 208, 937, 918, 805,
	804, 278, 0, 325, 196, 216, 152, 130, 146, 163,
	195, 253, 878, 300, 778, 717, 895, 755, 773, 171,
	768, 292, 261, 349, 786, 847, 291, 219, 339, 872,
	919, 348, 790, 902, 358, 363, 767, 830, 738, 315,
	182, 179, 762, 0, 137, 783, 275, 176, 211, 809,
	866, 756, 167, 875, 853, 898, 314, 336, 134, 239,
	337, 362, 154, 331, 240, 246, 164, 166, 165, 147,
	309, 335, 159, 169, 319, 296, 899, 175, 0, 0,
	0, 0, 0, 797, 787, 0, 0, 354, 803, 303,
	302, 793, 203, 886, 856, 723, 284, 869, 209, 136,
	327, 365, 153, 213, 332, 715, 191, 252, 173, 262,
	263, 770, 132, 280, 233, 234, 232, 235, 194, 774,
	871, 884, 282, 305, 334, 155, 322, 769, 771, 777,
	880, 294, 896, 912, 925, 225, 185, 188, 197, 204,
	863, 289, 323, 355, 0, 149, 138, 328, 347, 160,
	304, 307, 364, 290, 141, 345, 324, 237, 812, 818,
	139, 0, 140, 287, 760, 779, 174, 256, 0, 193,
	277, 342, 343, 172, 366, 150, 357, 143, 734, 356,
	249, 0, 248, 359, 338, 346, 238, 227, 0, 142,
	344, 236, 226, 214, 187, 199, 273, 221, 274, 200,
	244, 243, 245, 223, 836, 0, 724, 0, 320, 352,
	367, 326, 157, 747, 308, 333, 789, 281, 158, 192,
	186, 272, 247, 151, 202, 317, 212, 220, 286, 944,
	260, 293, 161, 351, 316, 183, 745, 746, 743, 0,
	744, 840, 841, 928, 929, 930, 883, 737, 0, 909,
	910, 0, 0, 0, 0, 0, 893, 916, 917, 868,
	942, 795, 168, 725, 728, 729, 730, 739, 826, 827,
	846, 850, 905, 904, 903, 906, 911, 935, 934, 936,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 845, 133, 144, 217, 943, 283, 190, 713, 714,
	742, 748, 749, 750, 0, 752, 758, 0, 765, 776,
	780, 781, 792, 799, 800, 801, 802, 811, 813, 814,
	815, 816, 817, 821, 822, 824, 832, 833, 835, 843,
	844, 849, 851, 0, 874, 876, 882, 885, 888, 890,
	892, 897, 900, 901, 933, 941, 946, 353, 178, 828,
	831, 848, 877, 145, 156, 162, 177, 184, 189, 198,
	201, 205, 206, 207, 210, 224, 228, 229, 230, 231,
	250, 251, 254, 255, 258, 259, 265, 266, 267, 269,
	270, 271, 279, 873, 288, 295, 297, 298, 299, 301,
	310, 311, 312, 313, 321, 340, 341, 360, 361, 913,
	0, 131, 0, 0, 720, 0, 0, 0, 0, 0,
	791, 135, 907, 938, 859, 870, 921, 2252, 330, 810,
	924, 753, 788, 940, 794, 798, 865, 731, 839, 257,
	784, 732, 0, 757, 721, 772, 722, 754, 181, 751,
	894, 842, 923, 215, 860, 0, 180, 170, 222, 834,
	0, 0, 0, 264, 329, 922, 829, 0, 931, 218,
	0, 855, 932, 318, 241, 0, 0, 825, 908, 837,
	887, 808, 867, 741, 854, 926, 785, 862, 927, 81,
	0, 1128, 0, 711, 0, 0, 0, 0, 0, 0,
	0, 0, 736, 0, 858, 920, 775, 861, 820, 864,
	945, 719, 857, 0, 726, 733, 939, 915, 763, 764,
	766, 0, 0, 0, 0, 0, 0, 0, 823, 838,
	879, 806, 350, 268, 285, 306, 796, 276, 782, 0,
	0, 0, 0, 0, 0, 0, 0, 759, 0, 852,
	0, 0, 0, 735, 727, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 819, 0, 0,
	0, 740, 718, 761, 881, 0, 716, 242, 148, 889,
	914, 807, 208, 937, 918, 805, 804, 278, 0, 325,
	196, 216, 152, 130, 146, 163, 195, 253, 878, 300,
	778, 717, 895, 755, 773, 171, 768, 292, 261, 349,
	786, 847, 291, 219, 339, 872, 919, 348, 790, 902,
	358, 363, 767, 830, 738, 315, 182, 179, 762, 0,
	137, 783, 275, 176, 211, 809, 866, 756, 167, 875,
	853, 898, 314, 336, 134, 239, 337, 362, 154, 331,
	240, 246, 164, 166, 165, 147, 309, 335, 159, 169,
	319, 296, 899, 175, 0, 0, 0, 0, 0, 797,
	787, 0, 0, 354, 803, 303, 302, 793, 203, 886,
	856, 723, 284, 869, 209, 136, 327, 365, 153, 213,
	332, 715, 191, 252, 173, 262, 263, 770, 132, 280,
	233, 234, 232, 235, 194, 774, 871, 884, 282, 305,
	334, 155, 322, 769, 771, 777, 880, 294, 896, 912,
	925, 225, 185, 188, 197, 204, 863, 289, 323, 355,
	0, 149, 138, 328, 347, 160, 304, 307, 364, 290,
	141, 345, 324, 237, 812, 818, 139, 0, 140, 287,
	760, 779, 174, 256, 0, 193, 277, 342, 343, 172,
	366, 150, 357, 143, 734, 356, 249, 0, 248, 359,
	338, 346, 238, 227, 0, 142, 344, 236, 226, 214,
	187, 199, 273, 221, 274, 200, 244, 243, 245, 223,
	836, 0, 724, 0, 320, 352, 367, 326, 157, 747,
	308, 333, 789, 281, 158, 192, 186, 272, 247, 151,
	202, 317, 212, 220, 286, 944, 260, 293, 161, 351,
	316, 183, 745, 746, 743, 0, 744, 840, 841, 928,
	929, 930, 883, 737, 0, 909, 910, 0, 0, 0,
	0, 0, 893, 916, 917, 868, 942, 795, 168, 725,
	728, 729, 730, 739, 826, 827, 846, 850, 905, 904,
	903, 906, 911, 935, 934, 936, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 845, 133, 144,
	217, 2253, 283, 190, 713, 714, 742, 748, 749, 750,
	0, 752, 758, 0, 765, 776, 780, 781, 792, 799,
	800, 801, 802, 811, 813, 814, 815, 816, 817, 821,
	822, 824, 832, 833, 835, 843, 844, 849, 851, 0,
	874, 876, 882, 885, 888, 890, 892, 897, 900, 901,
	933, 941, 946, 353, 178, 828, 831, 848, 877, 145,
	156, 162, 177, 184, 189, 198, 201, 205, 206, 207,
	210, 224, 228, 229, 230, 231, 250, 251, 254, 255,
	258, 259, 265, 266, 267, 269, 270, 271, 279, 873,
	288, 295, 297, 298, 299, 301, 310, 311, 312, 313,
	321, 340, 341, 360, 361, 913, 0, 131, 0, 0,
	720, 0, 0, 0, 0, 0, 791, 135, 907, 938,
	859, 870, 921, 891, 330, 810, 924, 753, 788, 940,
	794, 798, 865, 731, 839, 257, 784, 732, 0, 757,
	721, 772, 722, 754, 181, 751, 894, 842, 923, 215,
	860, 0, 180, 170, 222, 834, 0, 0, 0, 264,
	329, 922, 829, 0, 931, 218, 0, 855, 932, 318,
	241, 0, 0, 825, 908, 837, 887, 808, 867, 741,
	854, 926, 785, 862, 927, 0, 0, 0, 0, 711,
	0, 0, 0, 0, 0, 0, 0, 0, 736, 0,
	858, 920, 775, 861, 820, 864, 945, 719, 857, 0,
	726, 733, 939, 915, 763, 764, 766, 0, 0, 0,
	0, 0, 0, 0, 823, 838, 879, 806, 350, 268,
	285, 306, 796, 276, 782, 0, 0, 0, 0, 0,
	0, 2575, 0, 759, 0, 852, 0, 0, 0, 735,
	727, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 819, 0, 0, 0, 740, 718, 761,
	881, 0, 716, 242, 148, 889, 914, 807, 208, 937,
	918, 805, 804, 278, 0, 325, 196, 216, 152, 130,
	146, 163, 195, 253, 878, 300, 778, 717, 895, 755,
	773, 171, 768, 292, 261, 349, 786, 847, 291, 219,
	339, 872, 919, 348, 790, 902, 358, 363, 767, 830,
	738, 315, 182, 179, 762, 0, 137, 783, 275, 176,
	211, 809, 866, 756, 167, 875, 853, 898, 314, 336,
	134, 239, 337, 362, 154, 331, 240, 246, 164, 166,
	165, 147, 309, 335, 159, 169, 319, 296, 899, 175,
	0, 0, 0, 0, 0, 797, 787, 0, 0, 354,
	803, 303, 302, 793, 203, 886, 856, 723, 284, 869,
	209, 136, 327, 365, 153, 213, 332, 715, 191, 252,
	173, 262, 263, 770, 132, 280, 233, 234, 232, 235,
	194, 774, 871, 884, 282, 305, 334, 155, 322, 769,
	771, 777, 880, 294, 896, 912, 925, 225, 185, 188,
	197, 204, 863, 289, 323, 355, 0, 149, 138, 328,
	347, 160, 304, 307, 364, 290, 141, 345, 324, 237,
	812, 818, 139, 0, 140, 287, 760, 779, 174, 256,
	0, 193, 277, 342, 343, 172, 366, 150, 357, 143,
	734, 356, 249, 0, 248, 359, 338, 346, 238, 227,
	0, 142, 344, 236, 226, 214, 187, 199, 273, 221,
	274, 200, 244, 243, 245, 223, 836, 0, 724, 0,
	320, 352, 367, 326, 157, 747, 308, 333, 789, 281,
	158, 192, 186, 272, 247, 151, 202, 317, 212, 220,
	286, 944, 260, 293, 161, 351, 316, 183, 745, 746,
	743, 0, 744, 840, 841, 928, 929, 930, 883, 737,
	0, 909, 910, 0, 0, 0, 0, 0, 893, 916,
	917, 868, 942, 795, 168, 725, 728, 729, 730, 739,
	826, 827, 846, 850, 905, 904, 903, 906, 911, 935,
	934, 936, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 845, 133, 144, 217, 943, 283, 190,
	713, 714, 742, 748, 749, 750, 0, 752, 758, 0,
	765, 776, 780, 781, 792, 799, 800, 801, 802, 811,
	813, 814, 815, 816, 817, 821, 822, 824, 832, 833,
	835, 843, 844, 849, 851, 0, 874, 876, 882, 885,
	888, 890, 892, 897, 900, 901, 933, 941, 946, 353,
	178, 828, 831, 848, 877, 145, 156, 162, 177, 184,
	189, 198, 201, 205, 206, 207, 210, 224, 228, 229,
	230, 231, 250, 251, 254, 255, 258, 259, 265, 266,
	267, 269, 270, 271, 279, 873, 288, 295, 297, 298,
	299, 301, 310, 311, 312, 313, 321, 340, 341, 360,
	361, 913, 0, 131, 0, 0, 720, 0, 0, 0,
	0, 0, 791, 135, 907, 938, 859, 870, 921, 891,
	330, 810, 924, 753, 788, 940, 794, 798, 865, 731,
	839, 257, 784, 732, 0, 757, 721, 772, 722, 754,
	181, 751, 894, 842, 923, 215, 860, 0, 180, 170,
	222, 834, 0, 0, 0, 264, 329, 922, 829, 0,
	931, 218, 0, 855, 932, 318, 241, 0, 0, 825,
	908, 837, 887, 808, 867, 741, 854, 926, 785, 862,
	927, 0, 0, 0, 0, 538, 0, 0, 0, 0,
	0, 0, 0, 0, 736, 0, 858, 920, 775, 861,
	820, 864, 945, 719, 857, 0, 726, 733, 939, 915,
	763, 764, 766, 0, 0, 0, 0, 0, 0, 0,
	823, 838, 879, 806, 350, 268, 285, 306, 796, 276,
	782, 0, 0, 0, 0, 0, 0, 2188, 0, 759,
	0, 852, 0, 0, 0, 735, 727, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 819,
	0, 0, 0, 740, 718, 761, 881, 0, 716, 242,
	148, 889, 914, 807, 208, 937, 918, 805, 804, 278,
	0, 325, 196, 216, 152, 130, 146, 163, 195, 253,
	878, 300, 778, 717, 895, 755, 773, 171, 768, 292,
	261, 349, 786, 847, 291, 219, 339, 872, 919, 348,
	790, 902, 358, 363, 767, 830, 738, 315, 182, 179,
	762, 0, 137, 783, 275, 176, 211, 809, 866, 756,
	167, 875, 853, 898, 314, 336, 134, 239, 337, 362,
	154, 331, 240, 246, 164, 166, 165, 147, 309, 335,
	159, 169, 319, 296, 899, 175, 0, 0, 0, 0,
	0, 797, 787, 0, 0, 354, 803, 303, 302, 793,
	203, 886, 856, 723, 284, 869, 209, 136, 327, 365,
	153, 213, 332, 715, 191, 252, 173, 262, 263, 770,
	132, 280, 233, 234, 232, 235, 194, 774, 871, 884,
	282, 305, 334, 155, 322, 769, 771, 777, 880, 294,
	896, 912, 925, 225, 185, 188, 197, 204, 863, 289,
	323, 355, 0, 149, 138, 328, 347, 160, 304, 307,
	364, 290, 141, 345, 324, 237, 812, 818, 139, 0,
	140, 287, 760, 779, 174, 256, 0, 193, 277, 342,
	343, 172, 366, 150, 357, 143, 734, 356, 249, 0,
	248, 359, 338, 346, 238, 227, 0, 142, 344, 236,
	226, 214, 187, 199, 273, 221, 274, 200, 244, 243,
	245, 223, 836, 0, 724, 0, 320, 352, 367, 326,
	157, 747, 308, 333, 789, 281, 158, 192, 186, 272,
	247, 151, 202, 317, 212, 220, 286, 944, 260, 293,
	161, 351, 316, 183, 745, 746, 743, 0, 744, 840,
	841, 928, 929, 930, 883, 737, 0, 909, 910, 0,
	0, 0, 0, 0, 893, 916, 917, 868, 942, 795,
	168, 725, 728, 729, 730, 739, 826, 827, 846, 850,
	905, 904, 903, 906, 911, 935, 934, 936, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 845,
	133, 144, 217, 943, 283, 190, 713, 714, 742, 748,
	749, 750, 0, 752, 758, 0, 765, 776, 780, 781,
	792, 799, 800, 801, 802, 811, 813, 814, 815, 816,
	817, 821, 822, 824, 832, 833, 835, 843, 844, 849,
	851, 0, 874, 876, 882, 885, 888, 890, 892, 897,
	900, 901, 933, 941, 946, 353, 178, 828, 831, 848,
	877, 145, 156, 162, 177, 184, 189, 198, 201, 205,
	206, 207, 210, 224, 228, 229, 230, 231, 250, 251,
	254, 255, 258, 259, 265, 266, 267, 269, 270, 271,
	279, 873, 288, 295, 297, 298, 299, 301, 310, 311,
	312, 313, 321, 340, 341, 360, 361, 913, 0, 131,
	0, 0, 720, 0, 0, 0, 0, 0, 791, 135,
	907, 938, 859, 870, 921, 891, 330, 810, 924, 753,
	788, 940, 794, 798, 865, 731, 839, 257, 784, 732,
	0, 757, 721, 772, 722, 754, 181, 751, 894, 842,
	923, 215, 860, 0, 180, 170, 222, 834, 0, 0,
	0, 264, 329, 922, 829, 0, 931, 218, 0, 855,
	932, 318, 241, 0, 0, 825, 908, 837, 887, 808,
	867, 741, 854, 926, 785, 862, 927, 0, 0, 0,
	0, 711, 0, 0, 0, 0, 0, 0, 0, 0,
	736, 0, 858, 920, 775, 861, 820, 864, 945, 719,
	857, 0, 726, 733, 939, 915, 763, 764, 766, 0,
	0, 0, 0, 0, 0, 0, 823, 838, 879, 806,
	350, 268, 285, 306, 796, 276, 782, 0, 0, 0,
	0, 0, 0, 2178, 0, 759, 0, 852, 0, 0,
	0, 735, 727, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 819, 0, 0, 0, 740,
	718, 761, 881, 0, 716, 242, 148, 889, 914, 807,
	208, 937, 918, 805, 804, 278, 0, 325, 196, 216,
	152, 130, 146, 163, 195, 253, 878, 300, 778, 717,
	895, 755, 773, 171, 768, 292, 261, 349, 786, 847,
	291, 219, 339, 872, 919, 348, 790, 902, 358, 363,
	767, 830, 738, 315, 182, 179, 762, 0, 137, 783,
	275, 176, 211, 809, 866, 756, 167, 875, 853, 898,
	314, 336, 134, 239, 337, 362, 154, 331, 240, 246,
	164, 166, 165, 147, 309, 335, 159, 169, 319, 296,
	899, 175, 0, 0, 0, 0, 0, 797, 787, 0,
	0, 354, 803, 303, 302, 793, 203, 886, 856, 723,
	284, 869, 209, 136, 327, 365, 153, 213, 332, 715,
	191, 252, 173, 262, 263, 770, 132, 280, 233, 234,
	232, 235, 194, 774, 871, 884, 282, 305, 334, 155,
	322, 769, 771, 777, 880, 294, 896, 912, 925, 225,
	185, 188, 197, 204, 863, 289, 323, 355, 0, 149,
	138, 328, 347, 160, 304, 307, 364, 290, 141, 345,
	324, 237, 812, 818, 139, 0, 140, 287, 760, 779,
	174, 256, 0, 193, 277, 342, 343, 172, 366, 150,
	357, 143, 734, 356, 249, 0, 248, 359, 338, 346,
	238, 227, 0, 142, 344, 236, 226, 214, 187, 199,
	273, 221, 274, 200, 244, 243, 245, 223, 836, 0,
	724, 0, 320, 352, 367, 326, 157, 747, 308, 333,
	789, 281, 158, 192, 186, 272, 247, 151, 202, 317,
	212, 220, 286, 944, 260, 293, 161, 351, 316, 183,
	745, 746, 743, 0, 744, 840, 841, 928, 929, 930,
	883, 737, 0, 909, 910, 0, 0, 0, 0, 0,
	893, 916, 917, 868, 942, 795, 168, 725, 728, 729,
	730, 739, 826, 827, 846, 850, 905, 904, 903, 906,
	911, 935, 934, 936, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 845, 133, 144, 217, 943,
	283, 190, 713, 714, 742, 748, 749, 750, 0, 752,
	758, 0, 765, 776, 780, 781, 792, 799, 800, 801,
	802, 811, 813, 814, 815, 816, 817, 821, 822, 824,
	832, 833, 835, 843, 844, 849, 851, 0, 874, 876,
	882, 885, 888, 890, 892, 897, 900, 901, 933, 941,
	946, 353, 178, 828, 831, 848, 877, 145, 156, 162,
	177, 184, 189, 198, 201, 205, 206, 207, 210, 224,
	228, 229, 230, 231, 250, 251, 254, 255, 258, 259,
	265, 266, 267, 269, 270, 271, 279, 873, 288, 295,
	297, 298, 299, 301, 310, 311, 312, 313, 321, 340,
	341, 360, 361, 913, 0, 131, 0, 0, 720, 0,
	0, 0, 0, 0, 791, 135, 907, 938, 859, 870,
	921, 891, 330, 810, 924, 753, 788, 940, 794, 798,
	865, 731, 839, 257, 784, 732, 0, 757, 721, 772,
	722, 754, 181, 751, 894, 842, 923, 215, 860, 0,
	180, 170, 222, 834, 0, 0, 0, 264, 329, 922,
	829, 0, 931, 218, 0, 855, 932, 318, 241, 0,
	0, 825, 908, 837, 887, 808, 867, 741, 854, 926,
	785, 862, 927, 0, 0, 0, 0, 128, 0, 0,
	0, 0, 0, 0, 0, 0, 736, 0, 858, 920,
	775, 861, 820, 864, 945, 719, 857, 0, 726, 733,
	939, 915, 763, 764, 766, 0, 0, 0, 0, 0,
	0, 0, 823, 838, 879, 806, 350, 268, 285, 306,
	796, 276, 782, 0, 0, 0, 0, 0, 0, 1682,
	0, 759, 0, 852, 0, 0, 0, 735, 727, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 819, 0, 0, 0, 740, 718, 761, 881, 0,
	716, 242, 148, 889, 914, 807, 208, 937, 918, 805,
	804, 278, 0, 325, 196, 216, 152, 130, 146, 163,
	195, 253, 878, 300, 778, 717, 895, 755, 773, 171,
	768, 292, 261, 349, 786, 847, 291, 219, 339, 872,
	919, 348, 790, 902, 358, 363, 767, 830, 738, 315,
	182, 179, 762, 0, 137, 783, 275, 176, 211, 809,
	866, 756, 167, 875, 853, 898, 314, 336, 134, 239,
	337, 362, 154, 331, 240, 246, 164, 166, 165, 147,
	309, 335, 159, 169, 319, 296, 899, 175, 0, 0,
	0, 0, 0, 797, 787, 0, 0, 354, 803, 303,
	302, 793, 203, 886, 856, 723, 284, 869, 209, 136,
	327, 365, 153, 213, 332, 715, 191, 252, 173, 262,
	263, 770, 132, 280, 233, 234, 232, 235, 194, 774,
	871, 884, 282, 305, 334, 155, 322, 769, 771, 777,
	880, 294, 896, 912, 925, 225, 185, 188, 197, 204,
	863, 289, 323, 355, 0, 149, 138, 328, 347, 160,
	304, 307, 364, 290, 141, 345, 324, 237, 812, 818,
	139, 0, 140, 287, 760, 779, 174, 256, 0, 193,
	277, 342, 343, 172, 366, 150, 357, 143, 734, 356,
	249, 0, 248, 359, 338, 346, 238, 227, 0, 142,
	344, 236, 226, 214, 187, 199, 273, 221, 274, 200,
	244, 243, 245, 223, 836, 0, 724, 0, 320, 352,
	367, 326, 157, 747, 308, 333, 789, 281, 158, 192,
	186, 272, 247, 151, 202, 317, 212, 220, 286, 944,
	260, 293, 161, 351, 316, 183, 745, 746, 743, 0,
	744, 840, 841, 928, 929, 930, 883, 737, 0, 909,
	910, 0, 0, 0, 0, 0, 893, 916, 917, 868,
	942, 795, 168, 725, 728, 729, 730, 739, 826, 827,
	846, 850, 905, 904, 903, 906, 911, 935, 934, 936,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 845, 133, 144, 217, 943, 283, 190, 713, 714,
	742, 748, 749, 750, 0, 752, 758, 0, 765, 776,
	780, 781, 792, 799, 800, 801, 802, 811, 813, 814,
	815, 816, 817, 821, 822, 824, 832, 833, 835, 843,
	844, 849, 851, 0, 874, 876, 882, 885, 888, 890,
	892, 897, 900, 901, 933, 941, 946, 353, 178, 828,
	831, 848, 877, 145, 156, 162, 177, 184, 189, 198,
	201, 205, 206, 207, 210, 224, 228, 229, 230, 231,
	250, 251, 254, 255, 258, 259, 265, 266, 267, 269,
	270, 271, 279, 873, 288, 295, 297, 298, 299, 301,
	310, 311, 312, 313, 321, 340, 341, 360, 361, 913,
	0, 131, 0, 0, 720, 0, 0, 0, 0, 0,
	791, 135, 907, 938, 859, 870, 921, 891, 330, 810,
	924, 753, 788, 940, 794, 798, 865, 731, 839, 257,
	784, 732, 0, 757, 721, 772, 722, 754, 181, 751,
	894, 842, 923, 215, 860, 0, 180, 170, 222, 834,
	0, 0, 0, 264, 329, 922, 829, 0, 931, 218,
	0, 855, 932, 318, 241, 0, 0, 825, 908, 837,
	887, 808, 867, 741, 854, 926, 785, 862, 927, 0,
	0, 0, 0, 538, 0, 0, 0, 0, 0, 0,
	0, 0, 736, 0, 858, 920, 775, 861, 820, 864,
	945, 719, 857, 0, 726, 733, 939, 915, 763, 764,
	766, 0, 0, 0, 0, 0, 0, 0, 823, 838,
	879, 806, 350, 268, 285, 306, 796, 276, 782, 0,
	0, 0, 0, 0, 0, 1541, 0, 759, 0, 852,
	0, 0, 0, 735, 727, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 819, 0, 0,
	0, 740, 718, 761, 881, 0, 716, 242, 148, 889,
	914, 807, 208, 937, 918, 805, 804, 278, 0, 325,
	196, 216, 152, 130, 146, 163, 195, 253, 878, 300,
	778, 717, 895, 755, 773, 171, 768, 292, 261, 349,
	786, 847, 291, 219, 339, 872, 919, 348, 790, 902,
	358, 363, 767, 830, 738, 315, 182, 179, 762, 0,
	137, 783, 275, 176, 211, 809, 866, 756, 167, 875,
	853, 898, 314, 336, 134, 239, 337, 362, 154, 331,
	240, 246, 164, 166, 165, 147, 309, 335, 159, 169,
	319, 296, 899, 175, 0, 0, 0, 0, 0, 797,
	787, 0, 0, 354, 803, 303, 302, 793, 203, 886,
	856, 723, 284, 869, 209, 136, 327, 365, 153, 213,
	332, 715, 191, 252, 173, 262, 263, 770, 132, 280,
	233, 234, 232, 235, 194, 774, 871, 884, 282, 305,
	334, 155, 322, 769, 771, 777, 880, 294, 896, 912,
	925, 225, 185, 188, 197, 204, 863, 289, 323, 355,
	0, 149, 138, 328, 347, 160, 304, 307, 364, 290,
	141, 345, 324, 237, 812, 818, 139, 0, 140, 287,
	760, 779, 174, 256, 0, 193, 277, 342, 343, 172,
	366, 150, 357, 143, 734, 356, 249, 0, 248, 359,
	338, 346, 238, 227, 0, 142, 344, 236, 226, 214,
	187, 199, 273, 221, 274, 200, 244, 243, 245, 223,
	836, 0, 724, 0, 320, 352, 367, 326, 157, 747,
	308, 333, 789, 281, 158, 192, 186, 272, 247, 151,
	202, 317, 212, 220, 286, 944, 260, 293, 161, 351,
	316, 183, 745, 746, 743, 0, 744, 840, 841, 928,
	929, 930, 883, 737, 0, 909, 910, 0, 0, 0,
	0, 0, 893, 916, 917, 868, 942, 795, 168, 725,
	728, 729, 730, 739, 826, 827, 846, 850, 905, 904,
	903, 906, 911, 935, 934, 936, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 845, 133, 144,
	217, 943, 283, 190, 713, 714, 742, 748, 749, 750,
	0, 752, 758, 0, 765, 776, 780, 781, 792, 799,
	800, 801, 802, 811, 813, 814, 815, 816, 817, 821,
	822, 824, 832, 833, 835, 843, 844, 849, 851, 0,
	874, 876, 882, 885, 888, 890, 892, 897, 900, 901,
	933, 941, 946, 353, 178, 828, 831, 848, 877, 145,
	156, 162, 177, 184, 189, 198, 201, 205, 206, 207,
	210, 224, 228, 229, 230, 231, 250, 251, 254, 255,
	258, 259, 265, 266, 267, 269, 270, 271, 279, 873,
	288, 295, 297, 298, 299, 301, 310, 311, 312, 313,
	321, 340, 341, 360, 361, 913, 0, 131, 0, 0,
	720, 0, 0, 0, 0, 0, 791, 135, 907, 938,
	859, 870, 921, 891, 330, 810, 924, 753, 788, 940,
	794, 798, 865, 731, 839, 257, 784, 732, 0, 757,
	721, 772, 722, 754, 181, 751, 894, 842, 923, 215,
	860, 0, 180, 170, 222, 834, 0, 0, 0, 264,
	329, 922, 829, 0, 931, 218, 0, 855, 932, 318,
	241, 0, 0, 825, 908, 837, 887, 808, 867, 741,
	854, 926, 785, 862, 927, 0, 0, 0, 0, 711,
	0, 0, 0, 0, 0, 0, 0, 0, 736, 0,
	858, 920, 775, 861, 820, 864, 945, 719, 857, 0,
	726, 733, 939, 915, 763, 764, 766, 0, 0, 0,
	0, 0, 0, 0, 823, 838, 879, 806, 350, 268,
	285, 306, 796, 276, 782, 0, 0, 0, 0, 0,
	0, 0, 0, 759, 0, 852, 0, 0, 0, 735,
	727, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 819, 0, 0, 0, 740, 718, 761,
	881, 0, 716, 242, 148, 889, 914, 807, 208, 937,
	918, 805, 804, 278, 0, 325, 196, 216, 152, 130,
	146, 163, 195, 253, 878, 300, 778, 717, 895, 755,
	773, 171, 768, 292, 261, 349, 786, 847, 291, 219,
	339, 872, 919, 348, 790, 902, 358, 363, 767, 830,
	738, 315, 182, 179, 762, 0, 137, 783, 275, 176,
	211, 809, 866, 756, 167, 875, 853, 898, 314, 336,
	134, 239, 337, 362, 154, 331, 240, 246, 164, 166,
	165, 147, 309, 335, 159, 169, 319, 296, 899, 175,
	0, 0, 0, 0, 0, 797, 787, 0, 0, 354,
	803, 303, 302, 793, 203, 886, 856, 723, 284, 869,
	209, 136, 327, 365, 153, 213, 332, 715, 191, 252,
	173, 262, 263, 770, 132, 280, 233, 234, 232, 235,
	194, 774, 871, 884, 282, 305, 334, 155, 322, 769,
	771, 777, 880, 294, 896, 912, 925, 225, 185, 188,
	197, 204, 863, 289, 323, 355, 0, 149, 138, 328,
	347, 160, 304, 307, 364, 290, 141, 345, 324, 237,
	812, 818, 139, 0, 140, 287, 760, 779, 174, 256,
	0, 193, 277, 342, 343, 172, 366, 150, 357, 143,
	734, 356, 249, 0, 248, 359, 338, 346, 238, 227,
	0, 142, 344, 236, 226, 214, 187, 199, 273, 221,
	274, 200, 244, 243, 245, 223, 836, 0, 724, 0,
	320, 352, 367, 326, 157, 747, 308, 333, 789, 281,
	158, 192, 186, 272, 247, 151, 202, 317, 212, 220,
	286, 944, 260, 293, 161, 351, 316, 183, 745, 746,
	743, 0, 744, 840, 841, 928, 929, 930, 883, 737,
	0, 909, 910, 0, 0, 0, 0, 0, 893, 916,
	917, 868, 942, 795, 168, 725, 728, 729, 730, 739,
	826, 827, 846, 850, 905, 904, 903, 906, 911, 935,
	934, 936, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 845, 133, 144, 217, 943, 283, 190,
	713, 714, 742, 748, 749, 750, 0, 752, 758, 0,
	765, 776, 780, 781, 792, 799, 800, 801, 802, 811,
	813, 814, 815, 816, 817, 821, 822, 824, 832, 833,
	835, 843, 844, 849, 851, 0, 874, 876, 882, 885,
	888, 890, 892, 897, 900, 901, 933, 941, 946, 353,
	178, 828, 831, 848, 877, 145, 156, 162, 177, 184,
	189, 198, 201, 205, 206, 207, 210, 224, 228, 229,
	230, 231, 250, 251, 254, 255, 258, 259, 265, 266,
	267, 269, 270, 271, 279, 873, 288, 295, 297, 298,
	299, 301, 310, 311, 312, 313, 321, 340, 341, 360,
	361, 913, 0, 131, 0, 0, 720, 0, 0, 0,
	0, 0, 791, 135, 907, 938, 859, 870, 921, 891,
	330, 810, 924, 753, 788, 940, 794, 798, 865, 731,
	839, 257, 784, 732, 0, 757, 721, 772, 722, 754,
	181, 751, 894, 842, 923, 215, 860, 0, 180, 170,
	222, 834, 0, 0, 0, 264, 329, 922, 829, 0,
	931, 218, 0, 855, 932, 318, 241, 0, 0, 825,
	908, 837, 887, 808, 867, 741, 854, 926, 785, 862,
	927, 0, 0, 0, 0, 538, 0, 0, 0, 0,
	0, 0, 0, 0, 736, 0, 858, 920, 775, 861,
	820, 864, 945, 719, 857, 0, 726, 733, 939, 915,
	763, 764, 766, 0, 0, 0, 0, 0, 0, 0,
	823, 838, 879, 806, 350, 268, 285, 306, 796, 276,
	782, 0, 0, 0, 0, 0, 0, 0, 0, 759,
	0, 852, 0, 0, 0, 735, 727, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 819,
	0, 0, 0, 740, 718, 761, 881, 0, 716, 242,
	148, 889, 914, 807, 208, 937, 918, 805, 804, 278,
	0, 325, 196, 216, 152, 130, 146, 163, 195, 253,
	878, 300, 778, 717, 895, 755, 773, 171, 768, 292,
	261, 349, 786, 847, 291, 219, 339, 872, 919, 348,
	790, 902, 358, 363, 767, 830, 738, 315, 182, 179,
	762, 0, 137, 783, 275, 176, 211, 809, 866, 756,
	167, 875, 853, 898, 314, 336, 134, 239, 337, 362,
	154, 331, 240, 246, 164, 166, 165, 147, 309, 335,
	159, 169, 319, 296, 899, 175, 0, 0, 0, 0,
	0, 797, 787, 0, 0, 354, 803, 303, 302, 793,
	203, 886, 856, 723, 284, 869, 209, 136, 327, 365,
	153, 213, 332, 715, 191, 252, 173, 262, 263, 770,
	132, 280, 233, 234, 232, 235, 194, 774, 871, 884,
	282, 305, 334, 155, 322, 769, 771, 777, 880, 294,
	896, 912, 925, 225, 185, 188, 197, 204, 863, 289,
	323, 355, 0, 149, 138, 328, 347, 160, 304, 307,
	364, 290, 141, 345, 324, 237, 812, 818, 139, 0,
	140, 287, 760, 779, 174, 256, 0, 193, 277, 342,
	343, 172, 366, 150, 357, 143, 734, 356, 249, 0,
	248, 359, 338, 346, 238, 227, 0, 142, 344, 236,
	226, 214, 187, 199, 273, 221, 274, 200, 244, 243,
	245, 223, 836, 0, 724, 0, 320, 352, 367, 326,
	157, 747, 308, 333, 789, 281, 158, 192, 186, 272,
	247, 151, 202, 317, 212, 220, 286, 944, 260, 293,
	161, 351, 316, 183, 745, 746, 743, 0, 744, 840,
	841, 928, 929, 930, 883, 737, 0, 909, 910, 0,
	0, 0, 0, 0, 893, 916, 917, 868, 942, 795,
	168, 725, 728, 729, 730, 739, 826, 827, 846, 850,
	905, 904, 903, 906, 911, 935, 934, 936, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 845,
	133, 144, 217, 943, 283, 190, 713, 714, 742, 748,
	749, 750, 0, 752, 758, 0, 765, 776, 780, 781,
	792, 799, 800, 801, 802, 811, 813, 814, 815, 816,
	817, 821, 822, 824, 832, 833, 835, 843, 844, 849,
	851, 0, 874, 876, 882, 885, 888, 890, 892, 897,
	900, 901, 933, 941, 946, 353, 178, 828, 831, 848,
	877, 145, 156, 162, 177, 184, 189, 198, 201, 205,
	206, 207, 210, 224, 228, 229, 230, 231, 250, 251,
	254, 255, 258, 259, 265, 266, 267, 269, 270, 271,
	279, 873, 288, 295, 297, 298, 299, 301, 310, 311,
	312, 313, 321, 340, 341, 360, 361, 913, 0, 131,
	0, 0, 720, 0, 0, 0, 0, 0, 791, 135,
	907, 938, 859, 870, 921, 891, 330, 810, 924, 753,
	788, 940, 794, 798, 865, 731, 839, 257, 784, 732,
	0, 757, 721, 772, 722, 754, 181, 751, 894, 842,
	923, 215, 860, 0, 180, 170, 222, 834, 0, 0,
	0, 264, 329, 1715, 1719, 0, 931, 218, 0, 855,
	932, 318, 241, 0, 0, 825, 908, 837, 887, 808,
	867, 741, 854, 926, 785, 862, 927, 0, 0, 0,
	0, 711, 0, 0, 0, 0, 0, 0, 0, 0,
	736, 0, 858, 920, 775, 861, 820, 864, 945, 719,
	857, 0, 726, 733, 939, 915, 763, 764, 766, 0,
	0, 0, 0, 0, 0, 0, 823, 838, 879, 806,
	350, 268, 285, 306, 796, 276, 782, 0, 0, 0,
	0, 0, 0, 0, 0, 759, 0, 852, 0, 0,
	0, 735, 727, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 819, 0, 0, 0, 740,
	718, 761, 881, 0, 716, 242, 148, 889, 914, 1718,
	208, 937, 918, 805, 804, 1712, 0, 1713, 1714, 216,
	710, 130, 146, 1710, 1717, 253, 878, 300, 778, 717,
	895, 755, 773, 171, 768, 292, 261, 349, 786, 847,
	291, 219, 339, 872, 919, 348, 790, 902, 358, 363,
	767, 830, 738, 315, 182, 179, 762, 0, 137, 783,
	275, 176, 211, 809, 866, 756, 167, 875, 853, 898,
	314, 336, 134, 239, 337, 362, 154, 331, 240, 246,
	164, 166, 165, 147, 309, 335, 159, 169, 319, 296,
	899, 175, 0, 0, 0, 0, 0, 797, 787, 0,
	0, 354, 803, 303, 302, 793, 203, 886, 856, 723,
	284, 869, 209, 136, 327, 365, 153, 213, 332, 715,
	191, 252, 173, 262, 263, 770, 132, 280, 233, 234,
	232, 235, 194, 774, 871, 884, 282, 305, 334, 155,
	322, 769, 771, 777, 880, 294, 896, 912, 925, 225,
	185, 188, 197, 204, 863, 289, 323, 355, 0, 149,
	138, 328, 347, 160, 304, 307, 364, 290, 141, 345,
	324, 237, 812, 818, 139, 0, 140, 287, 760, 779,
	174, 256, 0, 193, 277, 342, 343, 172, 366, 150,
	357, 143, 734, 356, 249, 0, 248, 359, 338, 346,
	238, 227, 0, 142, 344, 236, 226, 214, 187, 199,
	273, 221, 274, 200, 244, 243, 245, 223, 836, 0,
	724, 0, 320, 352, 367, 326, 157, 747, 308, 333,
	789, 281, 158, 192, 186, 272, 247, 151, 202, 317,
	212, 220, 286, 944, 260, 293, 161, 351, 316, 183,
	745, 746, 743, 0, 744, 840, 841, 928, 929, 930,
	883, 737, 0, 909, 910, 0, 0, 0, 0, 0,
	893, 916, 917, 868, 942, 795, 168, 725, 728, 729,
	730, 739, 826, 827, 846, 850, 905, 904, 903, 906,
	911, 935, 934, 936, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 845, 133, 144, 217, 943,
	283, 190, 713, 714, 742, 748, 749, 750, 0, 752,
	758, 0, 765, 776, 780, 781, 792, 799, 800, 801,
	802, 811, 813, 814, 815, 816, 817, 821, 822, 824,
	832, 833, 835, 843, 844, 849, 851, 0, 874, 876,
	882, 885, 888, 890, 892, 897, 900, 901, 933, 941,
	946, 353, 178, 828, 831, 848, 877, 145, 156, 162,
	177, 184, 189, 198, 201, 205, 206, 207, 210, 224,
	228, 229, 230, 231, 250, 251, 254, 255, 258, 259,
	265, 266, 267, 269, 270, 271, 279, 873, 288, 295,
	297, 298, 299, 301, 310, 311, 312, 313, 321, 340,
	341, 360, 361, 913, 0, 131, 0, 0, 720, 0,
	0, 0, 0, 0, 791, 135, 907, 938, 859, 870,
	921, 891, 330, 810, 924, 753, 788, 940, 794, 798,
	865, 731, 839, 257, 784, 732, 0, 757, 721, 772,
	722, 754, 181, 751, 894, 842, 923, 215, 860, 0,
	180, 170, 222, 834, 0, 0, 0, 264, 329, 922,
	829, 0, 931, 218, 0, 855, 932, 318, 241, 0,
	0, 825, 908, 837, 887, 808, 867, 741, 854, 926,
	785, 862, 927, 0, 0, 0, 0, 128, 0, 0,
	0, 0, 0, 0, 0, 0, 736, 0, 858, 920,
	775, 861, 820, 864, 945, 719, 857, 0, 726, 733,
	939, 915, 763, 764, 766, 0, 0, 0, 0, 0,
	0, 0, 823, 838, 879, 806, 350, 268, 285, 306,
	796, 276, 782, 0, 0, 0, 0, 0, 0, 0,
	0, 759, 0, 852, 0, 0, 0, 735, 727, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 819, 0, 0, 0, 740, 718, 761, 881, 0,
	716, 242, 148, 889, 914, 807, 208, 937, 918, 805,
	804, 278, 0, 325, 196, 216, 152, 130, 146, 163,
	195, 253, 878, 300, 778, 717, 895, 755, 773, 171,
	768, 292, 261, 349, 786, 847, 291, 219, 339, 872,
	919, 348, 790, 902, 358, 363, 767, 830, 738, 315,
	182, 179, 762, 0, 137, 783, 275, 176, 211, 809,
	866, 756, 167, 875, 853, 898, 314, 336, 134, 239,
	337, 362, 154, 331, 240, 246, 164, 166, 165, 147,
	309, 335, 159, 169, 319, 296, 899, 175, 0, 0,
	0, 0, 0, 797, 787, 0, 0, 354, 803, 303,
	302, 793, 203, 886, 856, 723, 284, 869, 209, 136,
	327, 365, 153, 213, 332, 715, 191, 252, 173, 262,
	263, 770, 132, 280, 233, 234, 232, 235, 194, 774,
	871, 884, 282, 305, 334, 155, 322, 769, 771, 777,
	880, 294, 896, 912, 925, 225, 185, 188, 197, 204,
	863, 289, 323, 355, 0, 149, 138, 328, 347, 160,
	304, 307, 364, 290, 141, 345, 324, 237, 812, 818,
	139, 0, 140, 287, 760, 779, 174, 256, 0, 193,
	277, 342, 343, 172, 366, 150, 357, 143, 734, 356,
	249, 0, 248, 359, 338, 346, 238, 227, 0, 142,
	344, 236, 226, 214, 187, 199, 273, 221, 274, 200,
	244, 243, 245, 223, 836, 0, 724, 0, 320, 352,
	367, 326, 157, 747, 308, 333, 789, 281, 158, 192,
	186, 272, 247, 151, 202, 317, 212, 220, 286, 944,
	260, 293, 161, 351, 316, 183, 745, 746, 743, 0,
	744, 840, 841, 928, 929, 930, 883, 737, 0, 909,
	910, 0, 0, 0, 0, 0, 893, 916, 917, 868,
	942, 795, 168, 725, 728, 729, 730, 739, 826, 827,
	846, 850, 905, 904, 903, 906, 911, 935, 934, 936,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 845, 133, 144, 217, 943, 283, 190, 713, 714,
	742, 748, 749, 750, 0, 752, 758, 0, 765, 776,
	780, 781, 792, 799, 800, 801, 802, 811, 813, 814,
	815, 816, 817, 821, 822, 824, 832, 833, 835, 843,
	844, 849, 851, 0, 874, 876, 882, 885, 888, 890,
	892, 897, 900, 901, 933, 941, 946, 353, 178, 828,
	831, 848, 877, 145, 156, 162, 177, 184, 189, 198,
	201, 205, 206, 207, 210, 224, 228, 229, 230, 231,
	250, 251, 254, 255, 258, 259, 265, 266, 267, 269,
	270, 271, 279, 873, 288, 295, 297, 298, 299, 301,
	310, 311, 312, 313, 321, 340, 341, 360, 361, 913,
	0, 131, 0, 0, 720, 0, 0, 0, 0, 0,
	791, 135, 907, 938, 859, 870, 921, 891, 330, 810,
	924, 753, 788, 940, 794, 798, 865, 731, 839, 257,
	784, 732, 0, 757, 721, 772, 722, 754, 181, 751,
	894, 842, 923, 215, 860, 0, 180, 170, 222, 834,
	0, 0, 0, 264, 329, 922, 829, 0, 931, 218,
	0, 855, 932, 318, 241, 0, 0, 825, 908, 837,
	887, 808, 867, 741, 854, 926, 785, 862, 927, 0,
	0, 0, 0, 711, 0, 0, 0, 0, 0, 0,
	0, 0, 736, 0, 858, 920, 775, 861, 820, 864,
	945, 719, 857, 0, 726, 733, 939, 915, 763, 764,
	766, 0, 0, 0, 0, 0, 0, 0, 823, 838,
	879, 806, 350, 268, 285, 306, 796, 276, 782, 0,
	0, 0, 0, 0, 0, 0, 0, 759, 0, 852,
	0, 0, 0, 735, 727, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 819, 0, 0,
	0, 740, 718, 761, 881, 0, 716, 242, 148, 889,
	914, 807, 208, 937, 918, 805, 804, 278, 0, 325,
	196, 216, 710, 130, 146, 706, 195, 253, 878, 300,
	778, 717, 895, 755, 773, 171, 768, 292, 261, 349,
	786, 847, 291, 219, 339, 872, 919, 348, 790, 902,
	358, 363, 767, 830, 738, 315, 182, 179, 762, 0,
	137, 783, 275, 176, 211, 809, 866, 756, 167, 875,
	853, 898, 314, 336, 134, 239, 337, 362, 154, 331,
	240, 246, 164, 166, 165, 147, 309, 335, 159, 169,
	319, 296, 899, 175, 0, 0, 0, 0, 0, 797,
	787, 0, 0, 354, 803, 303, 302, 793, 203, 886,
	856, 723, 284, 869, 209, 136, 327, 365, 153, 213,
	332, 715, 191, 252, 173, 262, 263, 770, 132, 280,
	233, 234, 232, 235, 194, 774, 871, 884, 282, 305,
	334, 155, 322, 769, 771, 777, 880, 294, 896, 912,
	925, 225, 185, 188, 197, 204, 863, 289, 323, 355,
	0, 149, 138, 328, 347, 160, 304, 307, 364, 290,
	141, 345, 324, 237, 812, 818, 139, 0, 140, 287,
	760, 779, 174, 256, 0, 193, 277, 342, 343, 172,
	366, 150, 357, 143, 734, 356, 249, 0, 248, 359,
	338, 346, 238, 227, 0, 142, 344, 236, 226, 214,
	187, 199, 273, 221, 274, 200, 244, 243, 245, 223,
	836, 0, 724, 0, 320, 352, 367, 326, 157, 747,
	308, 333, 789, 281, 158, 192, 186, 272, 247, 151,
	202, 317, 212, 220, 286, 944, 260, 293, 161, 351,
	316, 183, 745, 746, 743, 0, 744, 840, 841, 928,
	929, 930, 883, 737, 0, 909, 910, 0, 0, 0,
	0, 0, 893, 916, 917, 868, 942, 795, 168, 725,
	728, 729, 730, 739, 826, 827, 846, 850, 905, 904,
	903, 906, 911, 935, 934, 936, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 845, 133, 144,
	217, 943, 283, 190, 713, 714, 742, 748, 749, 750,
	0, 752, 758, 0, 765, 776, 780, 781, 792, 799,
	800, 801, 802, 811, 813, 814, 815, 816, 817, 821,
	822, 824, 832, 833, 835, 843, 844, 849, 851, 0,
	874, 876, 882, 885, 888, 890, 892, 897, 900, 901,
	933, 941, 946, 353, 178, 828, 831, 848, 877, 145,
	156, 162, 177, 184, 189, 198, 201, 205, 206, 207,
	210, 224, 228, 229, 230, 231, 250, 251, 254, 255,
	258, 259, 265, 266, 267, 269, 270, 271, 279, 873,
	288, 295, 297, 298, 299, 301, 310, 311, 312, 313,
	321, 340, 341, 360, 361, 913, 0, 131, 0, 0,
	720, 330, 0, 0, 0, 0, 791, 135, 907, 938,
	859, 870, 257, 0, 0, 0, 0, 0, 540, 0,
	0, 181, 537, 0, 0, 0, 215, 0, 0, 180,
	170, 222, 0, 0, 0, 0, 264, 329, 0, 0,
	0, 647, 218, 0, 0, 515, 318, 241, 0, 0,
	0, 0, 636, 637, 0, 0, 0, 0, 0, 0,
	1692, 0, 81, 0, 0, 0, 538, 561, 560, 563,
	564, 565, 566, 0, 0, 520, 562, 567, 589, 590,
	1693, 0, 0, 0, 0, 535, 552, 0, 646, 0,
	0, 0, 0, 480, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 350, 268, 285, 306, 0,
	276, 487, 0, 0, 0, 0, 549, 550, 0, 0,
	0, 0, 659, 0, 551, 0, 0, 547, 594, 595,
	596, 597, 598, 599, 600, 601, 602, 603, 604, 605,
	606, 607, 608, 609, 610, 611, 612, 613, 614, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	626, 627, 628, 629, 630, 631, 632, 633, 634, 635,
	553, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 148, 638, 0, 0, 208, 519, 0, 0, 657,
	278, 0, 325, 196, 216, 152, 130, 146, 163, 195,
	253, 0, 300, 573, 470, 0, 0, 0, 171, 0,
	292, 261, 349, 574, 0, 291, 219, 339, 0, 0,
	348, 0, 506, 358, 363, 481, 0, 478, 315, 182,
	179, 0, 0, 137, 488, 275, 176, 211, 0, 0,
	0, 167, 0, 0, 0, 314, 336, 134, 239, 337,
	362, 154, 331, 240, 246, 164, 166, 165, 147, 309,
	335, 159, 169, 319, 296, 0, 175, 0, 0, 0,
	0, 0, 492, 490, 0, 0, 354, 493, 303, 302,
	0, 203, 0, 498, 472, 284, 500, 209, 136, 327,
	365, 153, 213, 332, 469, 191, 252, 173, 262, 263,
	0, 132, 280, 233, 234, 232, 235, 194, 484, 502,
	0, 282, 305, 334, 155, 322, 482, 483, 485, 504,
	294, 505, 511, 0, 225, 185, 188, 197, 204, 0,
	289, 323, 355, 0, 149, 138, 328, 347, 160, 304,
	307, 364, 290, 141, 345, 324, 237, 0, 0, 139,
	0, 140, 287, 0, 0, 174, 256, 0, 193, 277,
	342, 343, 172, 366, 150, 357, 143, 0, 356, 249,
	0, 248, 359, 338, 346, 238, 227, 0, 142, 344,
	236, 226, 214, 187, 199, 273, 221, 274, 200, 244,
	243, 245, 223, 0, 0, 473, 0, 320, 352, 367,
	326, 157, 0, 308, 333, 491, 281, 158, 192, 186,
	272, 247, 151, 202, 317, 212, 220, 286, 0, 260,
	293, 161, 351, 316, 183, 648, 658, 654, 656, 655,
	652, 653, 651, 650, 649, 660, 639, 640, 641, 642,
	643, 0, 0, 0, 645, 0, 583, 584, 0, 0,
	0, 168, 568, 569, 570, 571, 572, 575, 576, 577,
	578, 581, 580, 579, 582, 585, 587, 586, 588, 661,
	662, 663, 664, 665, 666, 667, 668, 671, 669, 670,
	644, 133, 144, 217, 0, 283, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 353, 178, 0, 0,
	0, 0, 145, 156, 162, 177, 184, 189, 198, 201,
	205, 206, 207, 210, 224, 228, 229, 230, 231, 250,
	251, 254, 255, 258, 259, 265, 266, 267, 269, 270,
	271, 279, 503, 288, 295, 297, 298, 299, 301, 310,
	311, 312, 313, 321, 340, 341, 360, 361, 0, 0,
	131, 0, 0, 471, 36, 330, 0, 0, 0, 0,
	135, 0, 0, 499, 501, 0, 257, 0, 0, 0,
	0, 0, 540, 0, 0, 181, 537, 0, 0, 0,
	215, 0, 0, 180, 170, 222, 0, 0, 0, 0,
	264, 329, 0, 0, 0, 647, 218, 0, 0, 515,
	318, 241, 0, 0, 0, 0, 636, 637, 0, 0,
	0, 0, 0, 0, 0, 0, 81, 0, 0, 0,
	538, 561, 560, 563, 564, 565, 566, 0, 0, 520,
	562, 567, 589, 590, 0, 0, 0, 0, 0, 535,
	552, 0, 646, 0, 0, 0, 0, 480, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 350,
	268, 285, 306, 0, 276, 487, 0, 0, 0, 0,
	549, 550, 0, 0, 0, 0, 659, 0, 551, 0,
	0, 547, 594, 595, 596, 597, 598, 599, 600, 601,
	602, 603, 604, 605, 606, 607, 608, 609, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 626, 627, 628, 629, 630, 631,
	632, 633, 634, 635, 553, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 148, 638, 0, 0, 208,
	519, 0, 0, 657, 278, 0, 325, 196, 216, 152,
	130, 146, 163, 195, 253, 0, 300, 573, 470, 0,
	0, 0, 171, 0, 292, 261, 349, 574, 0, 291,
	219, 339, 0, 0, 348, 0, 506, 358, 363, 481,
	0, 478, 315, 182, 179, 0, 0, 137, 488, 275,
	176, 211, 0, 0, 0, 167, 0, 0, 0, 314,
	336, 134, 239, 337, 362, 154, 331, 240, 246, 164,
	166, 165, 147, 309, 335, 159, 169, 319, 296, 0,
	175, 0, 0, 0, 0, 0, 492, 490, 0, 0,
	354, 493, 303, 302, 0, 203, 0, 498, 472, 284,
	500, 209, 136, 327, 365, 153, 213, 332, 469, 191,
	252, 173, 262, 263, 0, 132, 280, 233, 234, 232,
	235, 194, 484, 502, 0, 282, 305, 334, 155, 322,
	482, 483, 485, 504, 294, 505, 511, 0, 225, 185,
	188, 197, 204, 0, 289, 323, 355, 0, 149, 138,
	328, 347, 160, 304, 307, 364, 290, 141, 345, 324,
	237, 0, 0, 139, 0, 140, 287, 0, 0, 174,
	256, 0, 193, 277, 342, 343, 172, 366, 150, 357,
	143, 0, 356, 249, 0, 248, 359, 338, 346, 238,
	227, 0, 142, 344, 236, 226, 214, 187, 199, 273,
	221, 274, 200, 244, 243, 245, 223, 0, 0, 473,
	0, 320, 352, 367, 326, 157, 0, 308, 333, 491,
	281, 158, 192, 186, 272, 247, 151, 202, 317, 212,
	220, 286, 0, 260, 293, 161, 351, 316, 183, 648,
	658, 654, 656, 655, 652, 653, 651, 650, 649, 660,
	639, 640, 641, 642, 643, 0, 0, 0, 645, 0,
	583, 584, 0, 0, 0, 168, 568, 569, 570, 571,
	572, 575, 576, 577, 578, 581, 580, 579, 582, 585,
	587, 586, 588, 661, 662, 663, 664, 665, 666, 667,
	668, 671, 669, 670, 644, 133, 144, 217, 79, 283,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	353, 178, 0, 0, 0, 0, 145, 156, 162, 177,
	184, 189, 198, 201, 205, 206, 207, 210, 224, 228,
	229, 230, 231, 250, 251, 254, 255, 258, 259, 265,
	266, 267, 269, 270, 271, 279, 503, 288, 295, 297,
	298, 299, 301, 310, 311, 312, 313, 321, 340, 341,
	360, 361, 330, 0, 131, 0, 0, 471, 0, 0,
	0, 0, 0, 257, 135, 0, 0, 499, 501, 540,
	0, 0, 181, 537, 0, 0, 0, 215, 0, 0,
	180, 170, 222, 0, 0, 0, 0, 264, 329, 0,
	0, 0, 647, 218, 0, 0, 515, 318, 241, 0,
	0, 0, 0, 636, 637, 0, 0, 0, 0, 0,
	0, 0, 0, 81, 0, 0, 0, 538, 561, 560,
	563, 564, 565, 566, 0, 0, 520, 562, 567, 589,
	590, 0, 0, 0, 0, 0, 535, 552, 0, 646,
	0, 0, 0, 0, 480, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 350, 268, 285, 306,
	0, 276, 487, 0, 0, 0, 0, 549, 550, 531,
	0, 0, 0, 659, 0, 551, 0, 0, 547, 594,
	595, 596, 597, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 620, 621, 622, 623, 624,
	625, 626, 627, 628, 629, 630, 631, 632, 633, 634,
	635, 553, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 148, 638, 0, 0, 208, 519, 0, 0,
	657, 278, 0, 325, 196, 216, 152, 130, 146, 163,
	195, 253, 0, 300, 573, 470, 0, 0, 0, 171,
	0, 292, 261, 349, 574, 0, 291, 219, 339, 0,
	0, 348, 0, 506, 358, 363, 481, 0, 478, 315,
	182, 179, 0, 0, 137, 488, 275, 176, 211, 0,
	0, 0, 167, 0, 0, 0, 314, 336, 134, 239,
	337, 362, 154, 331, 240, 246, 164, 166, 165, 147,
	309, 335, 159, 169, 319, 296, 0, 175, 0, 0,
	0, 0, 0, 492, 490, 0, 0, 354, 493, 303,
	302, 0, 203, 0, 498, 472, 284, 500, 209, 136,
	327, 365, 153, 213, 332, 469, 191, 252, 173, 262,
	263, 0, 132, 280, 233, 234, 232, 235, 194, 484,
	502, 0, 282, 305, 334, 155, 322, 482, 483, 485,
	504, 294, 505, 511, 0, 225, 185, 188, 197, 204,
	0, 289, 323, 355, 0, 149, 138, 328, 347, 160,
	304, 307, 364, 290, 141, 345, 324, 237, 0, 0,
	139, 0, 140, 287, 0, 0, 174, 256, 0, 193,
	277, 342, 343, 172, 366, 150, 357, 143, 0, 356,
	249, 0, 248, 359, 338, 346, 238, 227, 0, 142,
	344, 236, 226, 214, 187, 199, 273, 221, 274, 200,
	244, 243, 245, 223, 0, 0, 473, 0, 320, 352,
	367, 326, 157, 0, 308, 333, 491, 281, 158, 192,
	186, 272, 247, 151, 202, 317, 212, 220, 286, 0,
	260, 293, 161, 351, 316, 183, 648, 658, 654, 656,
	655, 652, 653, 651, 650, 649, 660, 639, 640, 641,
	642, 643, 0, 0, 0, 645, 0, 583, 584, 0,
	0, 0, 168, 568, 569, 570, 571, 572, 575, 576,
	577, 578, 581, 580, 579, 582, 585, 587, 586, 588,
	661, 662, 663, 664, 665, 666, 667, 668, 671, 669,
	670, 644, 133, 144, 217, 0, 283, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 353, 178, 0,
	0, 0, 0, 145, 156, 162, 177, 184, 189, 198,
	201, 205, 206, 207, 210, 224, 228, 229, 230, 231,
	250, 251, 254, 255, 258, 259, 265, 266, 267, 269,
	270, 271, 279, 503, 288, 295, 297, 298, 299, 301,
	310, 311, 312, 313, 321, 340, 341, 360, 361, 330,
	0, 131, 0, 0, 471, 0, 0, 0, 0, 0,
	257, 135, 0, 0, 499, 501, 540, 0, 0, 181,
	537, 0, 0, 0, 215, 0, 0, 180, 170, 222,
	0, 0, 0, 0, 264, 329, 0, 0, 0, 647,
	218, 0, 0, 515, 318, 241, 0, 0, 0, 0,
	636, 637, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 1128, 0, 538, 561, 560, 563, 564, 565,
	566, 0, 0, 520, 562, 567, 589, 590, 0, 0,
	0, 0, 0, 535, 552, 0, 646, 0, 0, 0,
	0, 480, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 350, 268, 285, 306, 0, 276, 487,
	0, 0, 0, 0, 549, 550, 0, 0, 0, 0,
	659, 0, 551, 0, 0, 547, 594, 595, 596, 597,
	598, 599, 600, 601, 602, 603, 604, 605, 606, 607,
	608, 609, 610, 611, 612, 613, 614, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 626, 627,
	628, 629, 630, 631, 632, 633, 634, 635, 553, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 148,
	638, 0, 0, 208, 519, 0, 0, 657, 278, 0,
	325, 196, 216, 152, 130, 146, 163, 195, 253, 0,
	300, 573, 470, 0, 0, 0, 171, 0, 292, 261,
	349, 574, 0, 291, 219, 339, 0, 0, 348, 0,
	506, 358, 363, 481, 0, 478, 315, 182, 179, 0,
	0, 137, 488, 275, 176, 211, 0, 0, 0, 167,
	0, 0, 0, 314, 336, 134, 239, 337, 362, 154,
	331, 240, 246, 164, 166, 165, 147, 309, 335, 159,
	169, 319, 296, 0, 175, 0, 0, 0, 0, 0,
	492, 490, 0, 0, 354, 493, 303, 302, 0, 203,
	0, 498, 472, 284, 500, 209, 136, 327, 365, 153,
	213, 332, 469, 191, 252, 173, 262, 263, 0, 132,
	280, 233, 234, 232, 235, 194, 484, 502, 0, 282,
	305, 334, 155, 322, 482, 483, 485, 504, 294, 505,
	511, 0, 225, 185, 188, 197, 204, 0, 289, 323,
	355, 0, 149, 138, 328, 347, 160, 304, 307, 364,
	290, 141, 345, 324, 237, 0, 0, 139, 0, 140,
	287, 0, 0, 174, 256, 0, 193, 277, 342, 343,
	172, 366, 150, 357, 143, 0, 356, 249, 0, 248,
	359, 338, 346, 238, 227, 0, 142, 344, 236, 226,
	214, 187, 199, 273, 221, 274, 200, 244, 243, 245,
	223, 0, 0, 473, 0, 320, 352, 367, 326, 157,
	0, 308, 333, 491, 281, 158, 192, 186, 272, 247,
	151, 202, 317, 212, 220, 286, 0, 260, 293, 161,
	351, 316, 183, 648, 658, 654, 656, 655, 652, 653,
	651, 650, 649, 660, 639, 640, 641, 642, 643, 0,
	0, 0, 645, 0, 583, 584, 0, 0, 0, 168,
	568, 569, 570, 571, 572, 575, 576, 577, 578, 581,
	580, 579, 582, 585, 587, 586, 588, 661, 662, 663,
	664, 665, 666, 667, 668, 671, 669, 670, 644, 133,
	144, 217, 0, 283, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 353, 178, 0, 0, 0, 0,
	145, 156, 162, 177, 184, 189, 198, 201, 205, 206,
	207, 210, 224, 228, 229, 230, 231, 250, 251, 254,
	255, 258, 259, 265, 266, 267, 269, 270, 271, 279,
	503, 288, 295, 297, 298, 299, 301, 310, 311, 312,
	313, 321, 340, 341, 360, 361, 330, 0, 131, 0,
	0, 471, 0, 0, 0, 0, 0, 257, 135, 0,
	0, 499, 501, 540, 0, 0, 181, 537, 0, 0,
	0, 215, 0, 0, 180, 170, 222, 0, 0, 0,
	0, 264, 329, 0, 0, 0, 647, 218, 0, 0,
	515, 318, 241, 0, 0, 0, 0, 636, 637, 0,
	0, 0, 0, 0, 0, 0, 0, 81, 0, 0,
	0, 538, 561, 560, 563, 564, 565, 566, 0, 0,
	520, 562, 567, 589, 590, 0, 0, 0, 0, 0,
	535, 552, 0, 646, 0, 0, 0, 0, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	350, 268, 285, 306, 0, 276, 487, 0, 0, 0,
	0, 549, 550, 1579, 0, 0, 0, 659, 0, 551,
	0, 0, 547, 594, 595, 596, 597, 598, 599, 600,
	601, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	611, 612, 613, 614, 615, 616, 617, 618, 619, 620,
	621, 622, 623, 624, 625, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 553, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 148, 638, 0, 0,
	208, 519, 0, 0, 657, 278, 0, 325, 196, 216,
	152, 130, 146, 163, 195, 253, 0, 300, 573, 470,
	0, 0, 0, 171, 0, 292, 261, 349, 574, 0,
	291, 219, 339, 0, 0, 348, 0, 506, 358, 363,
	481, 0, 478, 315, 182, 179, 0, 0, 137, 488,
	275, 176, 211, 0, 0, 0, 167, 0, 0, 0,
	314, 336, 134, 239, 337, 362, 154, 331, 240, 246,
	164, 166, 165, 147, 309, 335, 159, 169, 319, 296,
	0, 175, 0, 0, 0, 0, 0, 492, 490, 0,
	0, 354, 493, 303, 302, 0, 203, 0, 498, 472,
	284, 500, 209, 136, 327, 365, 153, 213, 332, 469,
	191, 252, 173, 262, 263, 0, 132, 280, 233, 234,
	232, 235, 194, 484, 502, 0, 282, 305, 334, 155,
	322, 482, 483, 485, 504, 294, 505, 511, 0, 225,
	185, 188, 197, 204, 0, 289, 323, 355, 0, 149,
	138, 328, 347, 160, 304, 307, 364, 290, 141, 345,
	324, 237, 0, 0, 139, 0, 140, 287, 0, 0,
	174, 256, 0, 193, 277, 342, 343, 172, 366, 150,
	357, 143, 0, 356, 249, 0, 248, 359, 338, 346,
	238, 227, 0, 142, 344, 236, 226, 214, 187, 199,
	273, 221, 274, 200, 244, 243, 245, 223, 0, 0,
	473, 0, 320, 352, 367, 326, 157, 0, 308, 333,
	491, 281, 158, 192, 186, 272, 247, 151, 202, 317,
	212, 220, 286, 0, 260, 293, 161, 351, 316, 183,
	648, 658, 654, 656, 655, 652, 653, 651, 650, 649,
	660, 639, 640, 641, 642, 643, 0, 0, 0, 645,
	0, 583, 584, 0, 0, 0, 168, 568, 569, 570,
	571, 572, 575, 576, 577, 578, 581, 580, 579, 582,
	585, 587, 586, 588, 661, 662, 663, 664, 665, 666,
	667, 668, 671, 669, 670, 644, 133, 144, 217, 0,
	283, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 353, 178, 0, 0, 0, 0, 145, 156, 162,
	177, 184, 189, 198, 201, 205, 206, 207, 210, 224,
	228, 229, 230, 231, 250, 251, 254, 255, 258, 259,
	265, 266, 267, 269, 270, 271, 279, 503, 288, 295,
	297, 298, 299, 301, 310, 311, 312, 313, 321, 340,
	341, 360, 361, 330, 0, 131, 0, 0, 471, 0,
	0, 0, 0, 0, 257, 135, 0, 0, 499, 501,
	540, 0, 0, 181, 537, 0, 0, 0, 215, 0,
	0, 180, 170, 222, 0, 0, 0, 0, 264, 329,
	0, 0, 0, 647, 218, 0, 0, 515, 318, 241,
	0, 0, 0, 0, 636, 637, 0, 0, 0, 0,
	0, 0, 0, 0, 81, 0, 0, 0, 538, 561,
	1615, 563, 564, 565, 566, 0, 0, 520, 562, 567,
	589, 590, 0, 0, 0, 0, 0, 535, 552, 0,
	646, 0, 0, 0, 0, 480, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 350, 268, 285,
	306, 0, 276, 487, 0, 0, 0, 0, 549, 550,
	1579, 0, 0, 0, 659, 0, 551, 0, 0, 547,
	594, 595, 596, 597, 598, 599, 600, 601, 602, 603,
	604, 605, 606, 607, 608, 609, 610, 611, 612, 613,
	614, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 626, 627, 628, 629, 630, 631, 632, 633,
	634, 635, 553, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 148, 638, 0, 0, 208, 519, 0,
	0, 657, 278, 0, 325, 196, 216, 152, 130, 146,
	163, 195, 253, 0, 300, 573, 470, 0, 0, 0,
	171, 0, 292, 261, 349, 574, 0, 291, 219, 339,
	0, 0, 348, 0, 506, 358, 363, 481, 0, 478,
	315, 182, 179, 0, 0, 137, 488, 275, 176, 211,
	0, 0, 0, 167, 0, 0, 0, 314, 336, 134,
	239, 337, 362, 154, 331, 240, 246, 164, 166, 165,
	147, 309, 335, 159, 169, 319, 296, 0, 175, 0,
	0, 0, 0, 0, 492, 490, 0, 0, 354, 493,
	303, 302, 0, 203, 0, 498, 472, 284, 500, 209,
	136, 327, 365, 153, 213, 332, 469, 191, 252, 173,
	262, 263, 0, 132, 280, 233, 234, 232, 235, 194,
	484, 502, 0, 282, 305, 334, 155, 322, 482, 483,
	485, 504, 294, 505, 511, 0, 225, 185, 188, 197,
	204, 0, 289, 323, 355, 0, 149, 138, 328, 347,
	160, 304, 307, 364, 290, 141, 345, 324, 237, 0,
	0, 139, 0, 140, 287, 0, 0, 174, 256, 0,
	193, 277, 342, 343, 172, 366, 150, 357, 143, 0,
	356, 249, 0, 248, 359, 338, 346, 238, 227, 0,
	142, 344, 236, 226, 214, 187, 199, 273, 221, 274,
	200, 244, 243, 245, 223, 0, 0, 473, 0, 320,
	352, 367, 326, 157, 0, 308, 333, 491, 281, 158,
	192, 186, 272, 247, 151, 202, 317, 212, 220, 286,
	0, 260, 293, 161, 351, 316, 183, 648, 658, 654,
	656, 655, 652, 653, 651, 650, 649, 660, 639, 640,
	641, 642, 643, 0, 0, 0, 645, 0, 583, 584,
	0, 0, 0, 168, 568, 569, 570, 571, 572, 575,
	576, 577, 578, 581, 580, 579, 582, 585, 587, 586,
	588, 661, 662, 663, 664, 665, 666, 667, 668, 671,
	669, 670, 644, 133, 144, 217, 0, 283, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 353, 178,
	0, 0, 0, 0, 145, 156, 162, 177, 184, 189,
	198, 201, 205, 206, 207, 210, 224, 228, 229, 230,
	231, 250, 251, 254, 255, 258, 259, 265, 266, 267,
	269, 270, 271, 279, 503, 288, 295, 297, 298, 299,
	301, 310, 311, 312, 313, 321, 340, 341, 360, 361,
	330, 0, 131, 0, 0, 471, 0, 0, 0, 0,
	0, 257, 135, 0, 0, 499, 501, 540, 0, 0,
	181, 537, 0, 0, 0, 215, 0, 0, 180, 170,
	222, 0, 0, 0, 0, 264, 329, 0, 0, 0,
	647, 218, 0, 0, 515, 318, 241, 0, 0, 0,
	0, 636, 637, 0, 0, 0, 0, 0, 0, 0,
	0, 81, 0, 0, 0, 538, 561, 1612, 563, 564,
	565, 566, 0, 0, 520, 562, 567, 589, 590, 0,
	0, 0, 0, 0, 535, 552, 0, 646, 0, 0,
	0, 0, 480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 350, 268, 285, 306, 0, 276,
	487, 0, 0, 0, 0, 549, 550, 1579, 0, 0,
	0, 659, 0, 551, 0, 0, 547, 594, 595, 596,
	597, 598, 599, 600, 601, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 611, 612, 613, 614, 615, 616,
	617, 618, 619, 620, 621, 622, 623, 624, 625, 626,
	627, 628, 629, 630, 631, 632, 633, 634, 635, 553,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	148, 638, 0, 0, 208, 519, 0, 0, 657, 278,
	0, 325, 196, 216, 152, 130, 146, 163, 195, 253,
	0, 300, 573, 470, 0, 0, 0, 171, 0, 292,
	261, 349, 574, 0, 291, 219, 339, 0, 0, 348,
	0, 506, 358, 363, 481, 0, 478, 315, 182, 179,
	0, 0, 137, 488, 275, 176, 211, 0, 0, 0,
	167, 0, 0, 0, 314, 336, 134, 239, 337, 362,
	154, 331, 240, 246, 164, 166, 165, 147, 309, 335,
	159, 169, 319, 296, 0, 175, 0, 0, 0, 0,
	0, 492, 490, 0, 0, 354, 493, 303, 302, 0,
	203, 0, 498, 472, 284, 500, 209, 136, 327, 365,
	153, 213, 332, 469, 191, 252, 173, 262, 263, 0,
	132, 280, 233, 234, 232, 235, 194, 484, 502, 0,
	282, 305, 334, 155, 322, 482, 483, 485, 504, 294,
	505, 511, 0, 225, 185, 188, 197, 204, 0, 289,
	323, 355, 0, 149, 138, 328, 347, 160, 304, 307,
	364, 290, 141, 345, 324, 237, 0, 0, 139, 0,
	140, 287, 0, 0, 174, 256, 0, 193, 277, 342,
	343, 172, 366, 150, 357, 143, 0, 356, 249, 0,
	248, 359, 338, 346, 238, 227, 0, 142, 344, 236,
	226, 214, 187, 199, 273, 221, 274, 200, 244, 243,
	245, 223, 0, 0, 473, 0, 320, 352, 367, 326,
	157, 0, 308, 333, 491, 281, 158, 192, 186, 272,
	247, 151, 202, 317, 212, 220, 286, 0, 260, 293,
	161, 351, 316, 183, 648, 658, 654, 656, 655, 652,
	653, 651, 650, 649, 660, 639, 640, 641, 642, 643,
	0, 0, 0, 645, 0, 583, 584, 0, 0, 0,
	168, 568, 569, 570, 571, 572, 575, 576, 577, 578,
	581, 580, 579, 582, 585, 587, 586, 588, 661, 662,
	663, 664, 665, 666, 667, 668, 671, 669, 670, 644,
	133, 144, 217, 0, 283, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 353, 178, 0, 0, 0,
	0, 145, 156, 162, 177, 184, 189, 198, 201, 205,
	206, 207, 210, 224, 228, 229, 230, 231, 250, 251,
	254, 255, 258, 259, 265, 266, 267, 269, 270, 271,
	279, 503, 288, 295, 297, 298, 299, 301, 310, 311,
	312, 313, 321, 340, 341, 360, 361, 330, 0, 131,
	0, 0, 471, 0, 0, 0, 0, 0, 257, 135,
	0, 0, 499, 501, 540, 0, 0, 181, 537, 0,
	0, 0, 215, 0, 0, 180, 170, 222, 0, 0,
	0, 0, 264, 329, 0, 0, 0, 647, 218, 0,
	0, 515, 318, 241, 0, 0, 0, 0, 636, 637,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 0,
	1457, 0, 538, 561, 560, 563, 564, 565, 566, 0,
	0, 520, 562, 567, 589, 590, 0, 0, 0, 0,
	0, 535, 552, 0, 646, 0, 0, 0, 0, 480,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 350, 268, 285, 306, 0, 276, 487, 0, 0,
	0, 0, 549, 550, 0, 0, 0, 0, 659, 0,
	551, 0, 0, 547, 594, 595, 596, 597, 598, 599,
	600, 601, 602, 603, 604, 605, 606, 607, 608, 609,
	610, 611, 612, 613, 614, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 626, 627, 628, 629,
	630, 631, 632, 633, 634, 635, 553, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 148, 638, 0,
	0, 208, 519, 0, 0, 657, 278, 0, 325, 196,
	216, 152, 130, 146, 163, 195, 253, 0, 300, 573,
	470, 0, 0, 0, 171, 0, 292, 261, 349, 574,
	0, 291, 219, 339, 0, 0, 348, 0, 506, 358,
	363, 481, 0, 478, 315, 182, 179, 0, 0, 137,
	488, 275, 176, 211, 0, 0, 0, 167, 0, 0,
	0, 314, 336, 134, 239, 337, 362, 154, 331, 240,
	246, 164, 166, 165, 147, 309, 335, 159, 169, 319,
	296, 0, 175, 0, 0, 0, 0, 0, 492, 490,
	0, 0, 354, 493, 303, 302, 0, 203, 0, 498,
	472, 284, 500, 209, 136, 327, 365, 153, 213, 332,
	469, 191, 252, 173, 262, 263, 0, 132, 280, 233,
	234, 232, 235, 194, 484, 502, 0, 282, 305, 334,
	155, 322, 482, 483, 485, 504, 294, 505, 511, 0,
	225, 185, 188, 197, 204, 0, 289, 323, 355, 0,
	149, 138, 328, 347, 160, 304, 307, 364, 290, 141,
	345, 324, 237, 0, 0, 139, 0, 140, 287, 0,
	0, 174, 256, 0, 193, 277, 342, 343, 172, 366,
	150, 357, 143, 0, 356, 249, 0, 248, 359, 338,
	346, 238, 227, 0, 142, 344, 236, 226, 214, 187,
	199, 273, 221, 274, 200, 244, 243, 245, 223, 0,
	0, 473, 0, 320, 352, 367, 326, 157, 0, 308,
	333, 491, 281, 158, 192, 186, 272, 247, 151, 202,
	317, 212, 220, 286, 0, 260, 293, 161, 351, 316,
	183, 648, 658, 654, 656, 655, 652, 653, 651, 650,
	649, 660, 639, 640, 641, 642, 643, 0, 0, 0,
	645, 0, 583, 584, 0, 0, 0, 168, 568, 569,
	570, 571, 572, 575, 576, 577, 578, 581, 580, 579,
	582, 585, 587, 586, 588, 661, 662, 663, 664, 665,
	666, 667, 668, 671, 669, 670, 644, 133, 144, 217,
	0, 283, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 353, 178, 0, 0, 0, 0, 145, 156,
	162, 177, 184, 189, 198, 201, 205, 206, 207, 210,
	224, 228, 229, 230, 231, 250, 251, 254, 255, 258,
	259, 265, 266, 267, 269, 270, 271, 279, 503, 288,
	295, 297, 298, 299, 301, 310, 311, 312, 313, 321,
	340, 341, 360, 361, 330, 0, 131, 0, 0, 471,
	0, 0, 0, 0, 0, 257, 135, 0, 0, 499,
	501, 540, 0, 0, 181, 537, 0, 0, 0, 215,
	0, 0, 180, 170, 222, 0, 0, 0, 0, 264,
	329, 0, 0, 0, 647, 218, 0, 0, 515, 318,
	241, 0, 0, 0, 0, 636, 637, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 0, 0, 0, 538,
	561, 560, 563, 564, 565, 566, 0, 0, 520, 562,
	567, 589, 590, 0, 0, 0, 0, 0, 535, 552,
	0, 646, 0, 0, 0, 0, 480, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 350, 268,
	285, 306, 0, 276, 487, 0, 0, 0, 0, 549,
	550, 0, 0, 0, 0, 659, 0, 551, 0, 0,
	547, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 611, 612,
	613, 614, 615, 616, 617, 618, 619, 620, 621, 622,
	623, 624, 625, 626, 627, 628, 629, 630, 631, 632,
	633, 634, 635, 553, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 148, 638, 0, 0, 208, 519,
	0, 0, 657, 278, 0, 325, 196, 216, 152, 130,
	146, 163, 195, 253, 0, 300, 573, 470, 0, 0,
	0, 171, 0, 292, 261, 349, 574, 0, 291, 219,
	339, 0, 0, 348, 0, 506, 358, 363, 481, 0,
	478, 315, 182, 179, 0, 0, 137, 488, 275, 176,
	211, 0, 0, 0, 167, 0, 0, 0, 314, 336,
	134, 239, 337, 362, 154, 331, 240, 246, 164, 166,
	165, 147, 309, 335, 159, 169, 319, 296, 0, 175,
	0, 0, 0, 0, 0, 492, 490, 0, 0, 354,
	493, 303, 302, 0, 203, 0, 498, 472, 284, 500,
	209, 136, 327, 365, 153, 213, 332, 469, 191, 252,
	173, 262, 263, 0, 132, 280, 233, 234, 232, 235,
	194, 484, 502, 0, 282, 305, 334, 155, 322, 482,
	483, 485, 504, 294, 505, 511, 0, 225, 185, 188,
	197, 204, 0, 289, 323, 355, 0, 149, 138, 328,
	347, 160, 304, 307, 364, 290, 141, 345, 324, 237,
	0, 0, 139, 0, 140, 287, 0, 0, 174, 256,
	0, 193, 277, 342, 343, 172, 366, 150, 357, 143,
	0, 356, 249, 0, 248, 359, 338, 346, 238, 227,
	0, 142, 344, 236, 226, 214, 187, 199, 273, 221,
	274, 200, 244, 243, 245, 223, 0, 0, 473, 0,
	320, 352, 367, 326, 157, 0, 308, 333, 491, 281,
	158, 192, 186, 272, 247, 151, 202, 317, 212, 220,
	286, 0, 260, 293, 161, 351, 316, 183, 648, 658,
	654, 656, 655, 652, 653, 651, 650, 649, 660, 639,
	640, 641, 642, 643, 0, 0, 0, 645, 0, 583,
	584, 0, 0, 0, 168, 568, 569, 570, 571, 572,
	575, 576, 577, 578, 581, 580, 579, 582, 585, 587,
	586, 588, 661, 662, 663, 664, 665, 666, 667, 668,
	671, 669, 670, 644, 133, 144, 217, 0, 283, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 353,
	178, 0, 0, 0, 0, 145, 156, 162, 177, 184,
	189, 198, 201, 205, 206, 207, 210, 224, 228, 229,
	230, 231, 250, 251, 254, 255, 258, 259, 265, 266,
	267, 269, 270, 271, 279, 503, 288, 295, 297, 298,
	299, 301, 310, 311, 312, 313, 321, 340, 341, 360,
	361, 330, 0, 131, 0, 0, 471, 0, 0, 0,
	0, 0, 257, 135, 0, 0, 499, 501, 0, 0,
	0, 181, 0, 0, 0, 0, 215, 0, 0, 180,
	170, 222, 0, 0, 0, 0, 264, 329, 0, 0,
	0, 647, 218, 0, 0, 515, 318, 241, 0, 0,
	0, 0, 636, 637, 0, 0, 0, 0, 0, 0,
	0, 0, 81, 0, 0, 0, 538, 561, 560, 563,
	564, 565, 566, 0, 0, 520, 562, 567, 589, 590,
	0, 0, 0, 0, 0, 0, 552, 0, 646, 0,
	0, 0, 0, 480, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 350, 268, 285, 306, 0,
	276, 487, 0, 0, 0, 0, 549, 550, 0, 0,
	0, 0, 659, 0, 551, 0, 0, 547, 594, 595,
	596, 597, 598, 599, 600, 601, 602, 603, 604, 605,
	606, 607, 608, 609, 610, 611, 612, 613, 614, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	626, 627, 628, 629, 630, 631, 632, 633, 634, 635,
	553, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 148, 638, 0, 0, 208, 519, 0, 0, 657,
	278, 0, 325, 196, 216, 152, 130, 146, 163, 195,
	253, 0, 300, 573, 470, 0, 0, 0, 171, 0,
	292, 261, 349, 574, 0, 291, 219, 339, 0, 0,
	348, 0, 506, 358, 363, 481, 0, 478, 315, 182,
	179, 0, 0, 137, 488, 275, 176, 211, 0, 0,
	0, 167, 0, 0, 0, 314, 336, 134, 239, 337,
	362, 154, 331, 240, 246, 164, 166, 165, 147, 309,
	335, 159, 169, 319, 296, 0, 175, 0, 0, 0,
	0, 0, 492, 490, 0, 0, 354, 493, 303, 302,
	0, 203, 0, 498, 472, 284, 500, 209, 136, 327,
	365, 153, 213, 332, 469, 191, 252, 173, 262, 263,
	0, 132, 280, 233, 234, 232, 235, 194, 484, 502,
	0, 282, 305, 334, 155, 322, 482, 483, 485, 504,
	294, 505, 511, 0, 225, 185, 188, 197, 204, 0,
	289, 323, 355, 0, 149, 138, 328, 347, 160, 304,
	307, 364, 290, 141, 345, 324, 237, 0, 0, 139,
	0, 140, 287, 0, 0, 174, 256, 0, 193, 277,
	342, 343, 172, 366, 150, 357, 143, 0, 356, 249,
	0, 248, 359, 338, 346, 238, 227, 0, 142, 344,
	236, 226, 214, 187, 199, 273, 221, 274, 200, 244,
	243, 245, 223, 0, 0, 473, 0, 320, 352, 367,
	326, 157, 0, 308, 333, 491, 281, 158, 192, 186,
	272, 247, 151, 202, 317, 212, 220, 286, 0, 260,
	293, 161, 351, 316, 183, 648, 658, 654, 656, 655,
	652, 653, 651, 650, 649, 660, 639, 640, 641, 642,
	643, 1618, 1619, 1620, 645, 0, 583, 584, 0, 0,
	0, 168, 568, 569, 570, 571, 572, 575, 576, 577,
	578, 581, 580, 579, 582, 585, 587, 586, 588, 661,
	662, 663, 664, 665, 666, 667, 668, 671, 669, 670,
	644, 133, 144, 217, 0, 283, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 353, 178, 0, 0,
	0, 0, 145, 156, 162, 177, 184, 189, 198, 201,
	205, 206, 207, 210, 224, 228, 229, 230, 231, 250,
	251, 254, 255, 258, 259, 265, 266, 267, 269, 270,
	271, 279, 503, 288, 295, 297, 298, 299, 301, 310,
	311, 312, 313, 321, 340, 341, 360, 361, 330, 0,
	131, 0, 0, 471, 0, 0, 0, 0, 0, 257,
	135, 0, 0, 499, 501, 0, 0, 0, 181, 0,
	0, 0, 0, 215, 0, 0, 180, 170, 222, 0,
	0, 0, 0, 264, 329, 0, 0, 0, 647, 218,
	0, 0, 515, 318, 241, 0, 0, 0, 0, 636,
	637, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	0, 0, 0, 538, 561, 560, 563, 564, 565, 566,
	0, 0, 520, 562, 567, 589, 590, 0, 0, 0,
	0, 0, 0, 552, 0, 646, 0, 0, 0, 0,
	480, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 350, 268, 285, 306, 0, 276, 487, 0,
	0, 0, 0, 549, 550, 0, 0, 0, 0, 659,
	0, 551, 0, 0, 547, 594, 595, 596, 597, 598,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 611, 612, 613, 614, 615, 616, 617, 618,
	619, 620, 621, 622, 623, 624, 625, 626, 627, 628,
	629, 630, 631, 632, 633, 634, 635, 553, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 148, 638,
	0, 0, 208, 519, 0, 0, 657, 278, 0, 325,
	196, 216, 152, 130, 146, 163, 195, 253, 0, 300,
	573, 470, 0, 0, 0, 171, 0, 292, 261, 349,
	574, 3003, 291, 219, 339, 0, 0, 348, 0, 506,
	358, 363, 481, 0, 478, 315, 182, 179, 0, 0,
	137, 488, 275, 176, 211, 0, 0, 0, 167, 0,
	0, 0, 314, 336, 134, 239, 337, 362, 154, 331,
	240, 246, 164, 166, 165, 147, 309, 335, 159, 169,
	319, 296, 0, 175, 0, 0, 0, 0, 0, 492,
	490, 0, 0, 354, 493, 303, 302, 0, 203, 0,
	498, 472, 284, 500, 209, 136, 327, 365, 153, 213,
	332, 469, 191, 252, 173, 262, 263, 0, 132, 280,
	233, 234, 232, 235, 194, 484, 502, 0, 282, 305,
	334, 155, 322, 482, 483, 485, 504, 294, 505, 511,
	0, 225, 185, 188, 197, 204, 0, 289, 323, 355,
	0, 149, 138, 328, 347, 160, 304, 307, 364, 290,
	141, 345, 324, 237, 0, 0, 139, 0, 140, 287,
	0, 0, 174, 256, 0, 193, 277, 342, 343, 172,
	366, 150, 357, 143, 0, 356, 249, 0, 248, 359,
	338, 346, 238, 227, 0, 142, 344, 236, 226, 214,
	187, 199, 273, 221, 274, 200, 244, 243, 245, 223,
	0, 0, 473, 0, 320, 352, 367, 326, 157, 0,
	308, 333, 491, 281, 158, 192, 186, 272, 247, 151,
	202, 317, 212, 220, 286, 0, 260, 293, 161, 351,
	316, 183, 648, 658, 654, 656, 655, 652, 653, 651,
	650, 649, 660, 639, 640, 641, 642, 643, 0, 0,
	0, 645, 0, 583, 584, 0, 0, 0, 168, 568,
	569, 570, 571, 572, 575, 576, 577, 578, 581, 580,
	579, 582, 585, 587, 586, 588, 661, 662, 663, 664,
	665, 666, 667, 668, 671, 669, 670, 644, 133, 144,
	217, 0, 283, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 353, 178, 0, 0, 0, 0, 145,
	156, 162, 177, 184, 189, 198, 201, 205, 206, 207,
	210, 224, 228, 229, 230, 231, 250, 251, 254, 255,
	258, 259, 265, 266, 267, 269, 270, 271, 279, 503,
	288, 295, 297, 298, 299, 301, 310, 311, 312, 313,
	321, 340, 341, 360, 361, 330, 0, 131, 0, 0,
	471, 0, 0, 0, 0, 0, 257, 135, 0, 0,
	499, 501, 0, 0, 0, 181, 0, 0, 0, 0,
	215, 0, 0, 180, 170, 222, 0, 0, 0, 0,
	264, 329, 0, 0, 0, 647, 218, 0, 0, 515,
	318, 241, 0, 0, 0, 0, 636, 637, 0, 0,
	0, 0, 0, 0, 0, 0, 81, 0, 1128, 0,
	538, 561, 560, 563, 564, 565, 566, 0, 0, 520,
	562, 567, 589, 590, 0, 0, 0, 0, 0, 0,
	552, 0, 646, 0, 0, 0, 0, 480, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 350,
	268, 285, 306, 0, 276, 487, 0, 0, 0, 0,
	549, 550, 0, 0, 0, 0, 659, 0, 551, 0,
	0, 547, 594, 595, 596, 597, 598, 599, 600, 601,
	602, 603, 604, 605, 606, 607, 608, 609, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 626, 627, 628, 629, 630, 631,
	632, 633, 634, 635, 553, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 148, 638, 0, 0, 208,
	519, 0, 0, 657, 278, 0, 325, 196, 216, 152,
	130, 146, 163, 195, 253, 0, 300, 573, 470, 0,
	0, 0, 171, 0, 292, 261, 349, 574, 0, 291,
	219, 339, 0, 0, 348, 0, 506, 358, 363, 481,
	0, 478, 315, 182, 179, 0, 0, 137, 488, 275,
	176, 211, 0, 0, 0, 167, 0, 0, 0, 314,
	336, 134, 239, 337, 362, 154, 331, 240, 246, 164,
	166, 165, 147, 309, 335, 159, 169, 319, 296, 0,
	175, 0, 0, 0, 0, 0, 492, 490, 0, 0,
	354, 493, 303, 302, 0, 203, 0, 498, 472, 284,
	500, 209, 136, 327, 365, 153, 213, 332, 469, 191,
	252, 173, 262, 263, 0, 132, 280, 233, 234, 232,
	235, 194, 484, 502, 0, 282, 305, 334, 155, 322,
	482, 483, 485, 504, 294, 505, 511, 0, 225, 185,
	188, 197, 204, 0, 289, 323, 355, 0, 149, 138,
	328, 347, 160, 304, 307, 364, 290, 141, 345, 324,
	237, 0, 0, 139, 0, 140, 287, 0, 0, 174,
	256, 0, 193, 277, 342, 343, 172, 366, 150, 357,
	143, 0, 356, 249, 0, 248, 359, 338, 346, 238,
	227, 0, 142, 344, 236, 226, 214, 187, 199, 273,
	221, 274, 200, 244, 243, 245, 223, 0, 0, 473,
	0, 320, 352, 367, 326, 157, 0, 308, 333, 491,
	281, 158, 192, 186, 272, 247, 151, 202, 317, 212,
	220, 286, 0, 260, 293, 161, 351, 316, 183, 648,
	658, 654, 656, 655, 652, 653, 651, 650, 649, 660,
	639, 640, 641, 642, 643, 0, 0, 0, 645, 0,
	583, 584, 0, 0, 0, 168, 568, 569, 570, 571,
	572, 575, 576, 577, 578, 581, 580, 579, 582, 585,
	587, 586, 588, 661, 662, 663, 664, 665, 666, 667,
	668, 671, 669, 670, 644, 133, 144, 217, 0, 283,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	353, 178, 0, 0, 0, 0, 145, 156, 162, 177,
	184, 189, 198, 201, 205, 206, 207, 210, 224, 228,
	229, 230, 231, 250, 251, 254, 255, 258, 259, 265,
	266, 267, 269, 270, 271, 279, 503, 288, 295, 297,
	298, 299, 301, 310, 311, 312, 313, 321, 340, 341,
	360, 361, 330, 0, 131, 0, 0, 471, 0, 0,
	0, 0, 0, 257, 135, 0, 0, 499, 501, 0,
	0, 0, 181, 0, 0, 0, 0, 215, 0, 0,
	180, 170, 222, 0, 0, 0, 0, 264, 329, 0,
	0, 0, 647, 218, 0, 0, 515, 318, 241, 0,
	0, 0, 0, 636, 637, 0, 0, 0, 0, 0,
	0, 0, 0, 81, 0, 0, 0, 538, 561, 560,
	563, 564, 565, 566, 0, 0, 520, 562, 567, 589,
	590, 0, 0, 0, 0, 0, 0, 552, 0, 646,
	0, 0, 0, 0, 480, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 350, 268, 285, 306,
	0, 276, 487, 0, 0, 0, 0, 549, 550, 0,
	0, 0, 0, 659, 0, 551, 0, 0, 547, 594,
	595, 596, 597, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 620, 621, 622, 623, 624,
	625, 626, 627, 628, 629, 630, 631, 632, 633, 634,
	635, 553, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 148, 638, 0, 0, 208, 519, 0, 0,
	657, 278, 0, 325, 196, 216, 152, 130, 146, 163,
	195, 253, 0, 300, 573, 470, 0, 0, 0, 171,
	0, 292, 261, 349, 574, 0, 291, 219, 339, 0,
	0, 348, 0, 506, 358, 363, 481, 0, 478, 315,
	182, 179, 0, 0, 137, 488, 275, 176, 211, 0,
	0, 0, 167, 0, 0, 0, 314, 336, 134, 239,
	337, 362, 154, 331, 240, 246, 164, 166, 165, 147,
	309, 335, 159, 169, 319, 296, 0, 175, 0, 0,
	0, 0, 0, 492, 490, 0, 0, 354, 493, 303,
	302, 0, 203, 0, 498, 472, 284, 500, 209, 136,
	327, 365, 153, 213, 332, 469, 191, 252, 173, 262,
	263, 0, 132, 280, 233, 234, 232, 235, 194, 484,
	502, 0, 282, 305, 334, 155, 322, 482, 483, 485,
	504, 294, 505, 511, 0, 225, 185, 188, 197, 204,
	0, 289, 323, 355, 0, 149, 138, 328, 347, 160,
	304, 307, 364, 290, 141, 345, 324, 237, 0, 0,
	139, 0, 140, 287, 0, 0, 174, 256, 0, 193,
	277, 342, 343, 172, 366, 150, 357, 143, 0, 356,
	249, 0, 248, 359, 338, 346, 238, 227, 0, 142,
	344, 236, 226, 214, 187, 199, 273, 221, 274, 200,
	244, 243, 245, 223, 0, 0, 473, 0, 320, 352,
	367, 326, 157, 0, 308, 333, 491, 281, 158, 192,
	186, 272, 247, 151, 202, 317, 212, 220, 286, 0,
	260, 293, 161, 351, 316, 183, 648, 658, 654, 656,
	655, 652, 653, 651, 650, 649, 660, 639, 640, 641,
	642, 643, 0, 0, 0, 645, 0, 583, 584, 0,
	0, 0, 168, 568, 569, 570, 571, 572, 575, 576,
	577, 578, 581, 580, 579, 582, 585, 587, 586, 588,
	661, 662, 663, 664, 665, 666, 667, 668, 671, 669,
	670, 644, 133, 144, 217, 0, 283, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 353, 178, 0,
	0, 0, 0, 145, 156, 162, 177, 184, 189, 198,
	201, 205, 206, 207, 210, 224, 228, 229, 230, 231,
	250, 251, 254, 255, 258, 259, 265, 266, 267, 269,
	270, 271, 279, 503, 288, 295, 297, 298, 299, 301,
	310, 311, 312, 313, 321, 340, 341, 360, 361, 0,
	0, 131, 330, 0, 471, 0, 0, 0, 0, 0,
	0, 135, 0, 257, 499, 501, 0, 0, 1151, 0,
	0, 0, 181, 0, 0, 0, 0, 215, 0, 0,
	180, 170, 222, 0, 0, 0, 0, 264, 329, 0,
	0, 0, 0, 218, 0, 0, 515, 318, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1152, 0, 1155,
	0, 0, 0, 0, 0, 0, 520, 0, 0, 0,
	0, 0, 0, 1147, 1148, 1146, 0, 0, 0, 0,
	0, 0, 0, 0, 480, 0, 0, 0, 0, 0,
	0, 0, 1149, 0, 0, 0, 350, 268, 285, 306,
	0, 276, 487, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 148, 0, 0, 0, 208, 519, 0, 0,
	0, 278, 0, 325, 196, 216, 152, 130, 146, 163,
	195, 253, 0, 300, 486, 470, 0, 0, 0, 171,
	0, 292, 261, 349, 489, 0, 291, 219, 339, 0,
	0, 348, 0, 506, 358, 363, 481, 0, 478, 315,
	182, 179, 0, 0, 137, 488, 275, 176, 211, 0,
	0, 0, 167, 0, 0, 0, 314, 336, 134, 239,
	337, 362, 154, 331, 240, 246, 164, 166, 165, 147,
	309, 335, 159, 169, 319, 296, 0, 175, 0, 0,
	0, 0, 0, 492, 490, 0, 0, 354, 493, 303,
	302, 0, 203, 0, 498, 472, 284, 500, 209, 136,
	327, 365, 153, 213, 332, 469, 191, 252, 173, 262,
	263, 0, 132, 280, 233, 234, 232, 235, 194, 484,
	502, 0, 282, 305, 334, 155, 322, 482, 483, 485,
	504, 294, 505, 511, 0, 225, 185, 188, 197, 204,
	0, 289, 323, 355, 0, 149, 138, 328, 347, 160,
	304, 307, 364, 290, 141, 345, 324, 237, 0, 0,
	139, 0, 140, 287, 0, 0, 174, 256, 0, 193,
	277, 342, 343, 172, 366, 150, 357, 143, 0, 356,
	249, 0, 248, 359, 338, 346, 238, 227, 0, 142,
	344, 236, 226, 214, 187, 199, 273, 221, 274, 200,
	244, 243, 245, 223, 0, 0, 473, 0, 320, 352,
	367, 326, 157, 0, 308, 333, 491, 281, 158, 192,
	186, 272, 247, 151, 202, 317, 212, 220, 286, 0,
	260, 293, 161, 351, 316, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 512, 513, 0,
	0, 0, 168, 474, 475, 476, 477, 479, 494, 495,
	496, 497, 509, 508, 507, 510, 514, 517, 516, 518,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 133, 144, 217, 0, 283, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 353, 178, 0,
	0, 0, 0, 145, 156, 162, 177, 184, 189, 198,
	201, 205, 206, 207, 210, 224, 228, 229, 230, 231,
	250, 251, 254, 255, 258, 259, 265, 266, 267, 269,
	270, 271, 279, 503, 288, 295, 297, 298, 299, 301,
	310, 311, 312, 313, 321, 340, 341, 360, 361, 0,
	0, 131, 330, 0, 471, 0, 0, 0, 0, 0,
	0, 135, 0, 257, 499, 501, 0, 0, 1669, 0,
	0, 0, 181, 0, 0, 0, 0, 215, 0, 0,
	180, 170, 222, 0, 0, 0, 0, 264, 329, 0,
	0, 0, 0, 218, 0, 0, 515, 318, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1671,
	1673, 0, 0, 0, 0, 0, 0, 128, 0, 468,
	0, 0, 0, 0, 0, 0, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 480, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 350, 268, 285, 306,
	0, 276, 487, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 148, 0, 0, 0, 208, 519, 0, 1672,
	0, 278, 0, 325, 196, 216, 152, 130, 146, 163,
	195, 253, 0, 300, 486, 470, 0, 0, 0, 171,
	0, 292, 261, 349, 489, 0, 291, 219, 339, 0,
	0, 348, 0, 506, 358, 363, 481, 0, 478, 315,
	182, 179, 0, 0, 137, 488, 275, 176, 211, 0,
	0, 0, 167, 0, 0, 0, 314, 336, 134, 239,
	337, 362, 154, 331, 240, 246, 164, 166, 165, 147,
	309, 335, 159, 169, 319, 296, 0, 175, 0, 0,
	0, 0, 0, 492, 490, 0, 0, 354, 493, 303,
	302, 0, 203, 0, 498, 472, 284, 500, 209, 136,
	327, 365, 153, 213, 332, 469, 191, 252, 173, 262,
	263, 0, 132, 280, 233, 234, 232, 235, 194, 484,
	502, 0, 282, 305, 334, 155, 322, 482, 483, 485,
	504, 294, 505, 511, 0, 225, 185, 188, 197, 204,
	0, 289, 323, 355, 0, 149, 138, 328, 347, 160,
	304, 307, 364, 290, 141, 345, 324, 237, 0, 0,
	139, 0, 140, 287, 0, 0, 174, 256, 0, 193,
	277, 342, 343, 172, 366, 150, 357, 143, 0, 356,
	249, 0, 248, 359, 338, 346, 238, 227, 0, 142,
	344, 236, 226, 214, 187, 199, 273, 221, 274, 200,
	244, 243, 245, 223, 0, 0, 473, 0, 320, 352,
	367, 326, 157, 0, 308, 333, 491, 281, 158, 192,
	186, 272, 247, 151, 202, 317, 212, 220, 286, 0,
	260, 293, 161, 351, 316, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 512, 513, 0,
	0, 0, 168, 474, 475, 476, 477, 479, 494, 495,
	496, 497, 509, 508, 507, 510, 514, 517, 516, 518,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 133, 144, 217, 0, 283, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 353, 178, 0,
	0, 0, 0, 145, 156, 162, 177, 184, 189, 198,
	201, 205, 206, 207, 210, 224, 228, 229, 230, 231,
	250, 251, 254, 255, 258, 259, 265, 266, 267, 269,
	270, 271, 279, 503, 288, 295, 297, 298, 299, 301,
	310, 311, 312, 313, 321, 340, 341, 360, 361, 0,
	0, 131, 330, 0, 471, 0, 0, 0, 0, 0,
	0, 135, 0, 257, 499, 501, 0, 0, 1669, 0,
	0, 0, 181, 0, 0, 0, 0, 215, 0, 0,
	180, 170, 222, 0, 0, 0, 0, 264, 329, 0,
	0, 0, 0, 218, 0, 0, 515, 318, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1671,
	1673, 0, 0, 0, 0, 0, 0, 128, 0, 468,
	0, 0, 0, 0, 0, 0, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 480, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 350, 1667, 285, 306,
	0, 276, 487, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 148, 0, 0, 0, 208, 519, 0, 1672,
	0, 278, 0, 325, 196, 216, 152, 130, 146, 163,
	195, 253, 0, 300, 486, 470, 0, 0, 0, 171,
	0, 292, 261, 349, 489, 0, 291, 219, 339, 0,
	0, 348, 0, 506, 358, 363, 481, 0, 478, 315,
	182, 179, 0, 0, 137, 488, 275, 176, 211, 0,
	0, 0, 167, 0, 0, 0, 314, 336, 134, 239,
	337, 362, 154, 331, 240, 246, 164, 166, 165, 147,
	309, 335, 159, 169, 319, 296, 0, 175, 0, 0,
	0, 0, 0, 492, 490, 0, 0, 354, 493, 303,
	302, 0, 203, 0, 498, 472, 284, 500, 209, 136,
	327, 365, 153, 213, 332, 469, 191, 252, 173, 262,
	263, 0, 132, 280, 233, 234, 232, 235, 194, 484,
	502, 0, 282, 305, 334, 155, 322, 482, 483, 485,
	504, 294, 505, 511, 0, 225, 185, 188, 197, 204,
	0, 289, 323, 355, 0, 149, 138, 328, 347, 160,
	304, 307, 364, 290, 141, 345, 324, 237, 0, 0,
	139, 0, 140, 287, 0, 0, 174, 256, 0, 193,
	277, 342, 343, 172, 366, 150, 357, 143, 0, 356,
	249, 0, 248, 359, 338, 346, 238, 227, 0, 142,
	344, 236, 226, 214, 187, 199, 273, 221, 274, 200,
	244, 243, 245, 223, 0, 0, 473, 0, 320, 352,
	367, 326, 157, 0, 308, 333, 491, 281, 158, 192,
	186, 272, 247, 151, 202, 317, 212, 220, 286, 0,
	260, 293, 161, 351, 316, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 512, 513, 0,
	0, 0, 168, 474, 475, 476, 477, 479, 494, 495,
	496, 497, 509, 508, 507, 510, 514, 517, 516, 518,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 133, 144, 217, 0, 283, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 353, 178, 0,
	0, 0, 0, 145, 156, 162, 177, 184, 189, 198,
	201, 205, 206, 207, 210, 224, 228, 229, 230, 231,
	250, 251, 254, 255, 258, 259, 265, 266, 267, 269,
	270, 271, 279, 503, 288, 295, 297, 298, 299, 301,
	310, 311, 312, 313, 321, 340, 341, 360, 361, 330,
	0, 131, 0, 0, 471, 0, 0, 0, 0, 0,
	257, 135, 0, 0, 499, 501, 0, 0, 0, 181,
	0, 0, 0, 0, 215, 0, 0, 180, 170, 222,
	0, 0, 0, 0, 264, 329, 0, 0, 0, 0,
	218, 0, 0, 515, 318, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 128, 0, 468, 0, 0, 0,
	0, 0, 0, 520, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 480, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 350, 268, 285, 306, 0, 276, 487,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 148,
	0, 0, 0, 208, 519, 0, 0, 0, 278, 0,
	325, 196, 216, 152, 130, 146, 163, 195, 253, 0,
	300, 486, 470, 0, 0, 0, 171, 0, 292, 261,
	349, 489, 0, 291, 219, 339, 0, 0, 348, 0,
	506, 358, 363, 481, 0, 478, 315, 182, 179, 0,
	0, 137, 488, 275, 176, 211, 0, 0, 0, 167,
	0, 0, 0, 314, 336, 134, 239, 337, 362, 154,
	331, 240, 246, 164, 166, 165, 147, 309, 335, 159,
	169, 319, 296, 0, 175, 0, 0, 0, 0, 0,
	492, 490, 0, 0, 354, 493, 303, 302, 0, 203,
	0, 498, 472, 284, 500, 209, 136, 327, 365, 153,
	213, 332, 469, 191, 252, 173, 262, 263, 0, 132,
	280, 233, 234, 232, 235, 194, 484, 502, 0, 282,
	305, 334, 155, 322, 482, 483, 485, 504, 294, 505,
	511, 0, 225, 185, 188, 197, 204, 0, 289, 323,
	355, 0, 149, 138, 328, 347, 160, 304, 307, 364,
	290, 141, 345, 324, 237, 0, 0, 139, 0, 140,
	287, 0, 0, 174, 256, 0, 193, 277, 342, 343,
	172, 366, 150, 357, 143, 0, 356, 249, 0, 248,
	359, 338, 346, 238, 227, 0, 142, 344, 236, 226,
	214, 187, 199, 273, 221, 274, 200, 244, 243, 245,
	223, 0, 0, 473, 0, 320, 352, 367, 326, 157,
	0, 308, 333, 491, 281, 158, 192, 186, 272, 247,
	151, 202, 317, 212, 220, 286, 0, 260, 293, 161,
	351, 316, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 512, 513, 0, 0, 0, 168,
	474, 475, 476, 477, 479, 494, 495, 496, 497, 509,
	508, 507, 510, 514, 517, 516, 518, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 133,
	144, 217, 0, 283, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 353, 178, 0, 0, 0, 463,
	145, 156, 162, 177, 184, 189, 198, 201, 205, 206,
	207, 210, 224, 228, 229, 230, 231, 250, 251, 254,
	255, 258, 259, 265, 266, 267, 269, 270, 271, 279,
	503, 288, 295, 297, 298, 299, 301, 310, 311, 312,
	313, 321, 340, 341, 360, 361, 330, 0, 131, 0,
	0, 471, 0, 0, 0, 0, 0, 257, 135, 0,
	0, 499, 501, 0, 0, 0, 181, 0, 0, 0,
	0, 215, 1989, 0, 180, 170, 222, 0, 0, 0,
	0, 264, 329, 0, 0, 0, 0, 218, 0, 0,
	515, 318, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 128, 0, 468, 0, 0, 0, 0, 0, 0,
	520, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	350, 268, 285, 306, 0, 276, 487, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 148, 0, 0, 0,
	208, 519, 0, 0, 0, 278, 0, 325, 196, 216,
	152, 130, 146, 163, 195, 253, 0, 300, 486, 470,
	0, 0, 0, 171, 0, 292, 261, 349, 489, 0,
	291, 219, 339, 0, 0, 348, 0, 506, 358, 363,
	481, 0, 478, 315, 182, 179, 0, 0, 137, 488,
	275, 176, 211, 0, 0, 0, 167, 0, 0, 0,
	314, 336, 134, 239, 337, 362, 154, 331, 240, 246,
	164, 166, 165, 147, 309, 335, 159, 169, 319, 296,
	0, 175, 0, 0, 0, 0, 0, 492, 490, 0,
	0, 354, 493, 303, 302, 0, 203, 0, 498, 472,
	284, 500, 209, 136, 327, 365, 153, 213, 332, 469,
	191, 252, 173, 262, 263, 0, 132, 280, 233, 234,
	232, 235, 194, 484, 502, 0, 282, 305, 334, 155,
	322, 482, 483, 485, 504, 294, 505, 511, 0, 225,
	185, 188, 197, 204, 0, 289, 323, 355, 0, 149,
	138, 328, 347, 160, 304, 307, 364, 290, 141, 345,
	324, 237, 0, 0, 139, 0, 140, 287, 0, 0,
	174, 256, 0, 193, 277, 342, 343, 172, 366, 150,
	357, 143, 0, 356, 249, 0, 248, 359, 338, 346,
	238, 227, 0, 142, 344, 236, 226, 214, 187, 199,
	273, 221, 274, 200, 244, 243, 245, 223, 0, 0,
	473, 0, 320, 352, 367, 326, 157, 0, 308, 333,
	491, 281, 158, 192, 186, 272, 247, 151, 202, 317,
	212, 220, 286, 0, 260, 293, 161, 351, 316, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 512, 513, 0, 0, 0, 168, 474, 475, 476,
	477, 479, 494, 495, 496, 497, 509, 508, 507, 510,
	514, 517, 516, 518, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 133, 144, 217, 0,
	283, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 353, 178, 0, 0, 0, 0, 145, 156, 162,
	177, 184, 189, 198, 201, 205, 206, 207, 210, 224,
	228, 229, 230, 231, 250, 251, 254, 255, 258, 259,
	265, 266, 267, 269, 270, 271, 279, 503, 288, 295,
	297, 298, 299, 301, 310, 311, 312, 313, 321, 340,
	341, 360, 361, 330, 0, 131, 0, 0, 471, 0,
	0, 0, 0, 0, 257, 135, 0, 0, 499, 501,
	0, 0, 0, 181, 0, 0, 0, 0, 215, 0,
	0, 180, 170, 222, 0, 0, 0, 0, 264, 329,
	0, 0, 0, 0, 218, 0, 0, 515, 318, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 128, 0,
	468, 0, 0, 0, 0, 0, 0, 520, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 480, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 350, 268, 285,
	306, 0, 276, 487, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 148, 0, 0, 0, 208, 519, 0,
	0, 0, 278, 0, 325, 196, 216, 152, 130, 146,
	163, 195, 253, 0, 300, 486, 470, 0, 0, 0,
	171, 0, 292, 261, 349, 489, 0, 291, 219, 339,
	0, 0, 348, 0, 506, 358, 363, 481, 0, 478,
	315, 182, 179, 0, 0, 137, 488, 275, 176, 211,
	0, 0, 0, 167, 0, 0, 0, 314, 336, 134,
	239, 337, 362, 154, 331, 240, 246, 164, 166, 165,
	147, 309, 335, 159, 169, 319, 296, 0, 175, 0,
	0, 0, 0, 0, 492, 490, 0, 0, 354, 493,
	303, 302, 0, 203, 0, 498, 472, 284, 500, 209,
	136, 327, 365, 153, 213, 332, 469, 191, 252, 173,
	262, 263, 0, 132, 280, 233, 234, 232, 235, 194,
	484, 502, 0, 282, 305, 334, 155, 322, 482, 483,
	485, 504, 294, 505, 511, 0, 225, 185, 188, 197,
	204, 0, 289, 323, 355, 0, 149, 138, 328, 347,
	160, 304, 307, 364, 290, 141, 345, 324, 237, 0,
	0, 139, 0, 140, 287, 0, 0, 174, 256, 0,
	193, 277, 342, 343, 172, 366, 150, 357, 143, 0,
	356, 249, 0, 248, 359, 338, 346, 238, 227, 0,
	142, 344, 236, 226, 214, 187, 199, 273, 221, 274,
	200, 244, 243, 245, 223, 0, 0, 473, 0, 320,
	352, 367, 326, 157, 0, 308, 333, 491, 281, 158,
	192, 186, 272, 247, 151, 202, 317, 212, 220, 286,
	0, 260, 293, 161, 351, 316, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 512, 513,
	0, 0, 0, 168, 474, 475, 476, 477, 479, 494,
	495, 496, 497, 509, 508, 507, 510, 514, 517, 516,
	518, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 133, 144, 217, 0, 283, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 353, 178,
	0, 0, 0, 0, 145, 156, 162, 177, 184, 189,
	198, 201, 205, 206, 207, 210, 224, 228, 229, 230,
	231, 250, 251, 254, 255, 258, 259, 265, 266, 267,
	269, 270, 271, 279, 503, 288, 295, 297, 298, 299,
	301, 310, 311, 312, 313, 321, 340, 341, 360, 361,
	330, 0, 131, 0, 0, 471, 0, 0, 0, 0,
	0, 257, 135, 0, 0, 499, 501, 0, 0, 0,
	181, 0, 0, 0, 0, 215, 0, 0, 180, 170,
	222, 0, 0, 0, 0, 264, 329, 0, 0, 0,
	0, 218, 0, 0, 515, 318, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1152, 0, 1155, 0, 0,
	0, 0, 0, 0, 520, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 350, 268, 285, 306, 0, 276,
	487, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	148, 0, 0, 0, 208, 519, 0, 0, 0, 278,
	0, 325, 196, 216, 152, 130, 146, 163, 195, 253,
	0, 300, 486, 470, 0, 0, 0, 171, 0, 292,
	261, 349, 489, 0, 291, 219, 339, 0, 0, 348,
	0, 506, 358, 363, 481, 0, 478, 315, 182, 179,
	0, 0, 137, 488, 275, 176, 211, 0, 0, 0,
	167, 0, 0, 0, 314, 336, 134, 239, 337, 362,
	154, 331, 240, 246, 164, 166, 165, 147, 309, 335,
	159, 169, 319, 296, 0, 175, 0, 0, 0, 0,
	0, 492, 490, 0, 0, 354, 493, 303, 302, 0,
	203, 0, 498, 472, 284, 500, 209, 136, 327, 365,
	153, 213, 332, 469, 191, 252, 173, 262, 263, 0,
	132, 280, 233, 234, 232, 235, 194, 484, 502, 0,
	282, 305, 334, 155, 322, 482, 483, 485, 504, 294,
	505, 511, 0, 225, 185, 188, 197, 204, 0, 289,
	323, 355, 0, 149, 138, 328, 347, 160, 304, 307,
	364, 290, 141, 345, 324, 237, 0, 0, 139, 0,
	140, 287, 0, 0, 174, 256, 0, 193, 277, 342,
	343, 172, 366, 150, 357, 143, 0, 356, 249, 0,
	248, 359, 338, 346, 238, 227, 0, 142, 344, 236,
	226, 214, 187, 199, 273, 221, 274, 200, 244, 243,
	245, 223, 0, 0, 473, 0, 320, 352, 367, 326,
	157, 0, 308, 333, 491, 281, 158, 192, 186, 272,
	247, 151, 202, 317, 212, 220, 286, 0, 260, 293,
	161, 351, 316, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 512, 513, 0, 0, 0,
	168, 474, 475, 476, 477, 479, 494, 495, 496, 497,
	509, 508, 507, 510, 514, 517, 516, 518, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	133, 144, 217, 0, 283, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 353, 178, 0, 0, 0,
	0, 145, 156, 162, 177, 184, 189, 198, 201, 205,
	206, 207, 210, 224, 228, 229, 230, 231, 250, 251,
	254, 255, 258, 259, 265, 266, 267, 269, 270, 271,
	279, 503, 288, 295, 297, 298, 299, 301, 310, 311,
	312, 313, 321, 340, 341, 360, 361, 330, 0, 131,
	0, 0, 471, 0, 0, 0, 0, 0, 257, 135,
	0, 0, 499, 501, 0, 0, 0, 181, 0, 0,
	0, 0, 215, 0, 0, 180, 170, 222, 0, 0,
	0, 0, 264, 329, 0, 0, 0, 0, 218, 0,
	0, 515, 318, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 711, 0, 0, 0, 0, 0, 0, 0,
	0, 520, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 480,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 350, 268, 285, 306, 0, 276, 487, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 148, 0, 0,
	0, 208, 519, 0, 0, 0, 278, 0, 325, 196,
	216, 152, 130, 146, 163, 195, 253, 0, 300, 486,
	470, 0, 0, 0, 171, 0, 292, 261, 349, 489,
	0, 291, 219, 339, 0, 0, 348, 0, 506, 358,
	363, 481, 0, 478, 315, 182, 179, 0, 0, 137,
	488, 275, 176, 211, 0, 0, 0, 167, 0, 0,
	0, 314, 336, 134, 239, 337, 362, 154, 331, 240,
	246, 164, 166, 165, 147, 309, 335, 159, 169, 319,
	296, 0, 175, 0, 0, 0, 0, 0, 492, 490,
	0, 0, 354, 493, 303, 302, 0, 203, 0, 498,
	472, 284, 500, 209, 136, 327, 365, 153, 213, 332,
	469, 191, 252, 173, 262, 263, 0, 132, 280, 233,
	234, 232, 235, 194, 484, 502, 0, 282, 305, 334,
	155, 322, 482, 483, 485, 504, 294, 505, 511, 0,
	225, 185, 188, 197, 204, 0, 289, 323, 355, 0,
	149, 138, 328, 347, 160, 304, 307, 364, 290, 141,
	345, 324, 237, 0, 0, 139, 0, 140, 287, 0,
	0, 174, 256, 0, 193, 277, 342, 343, 172, 366,
	150, 357, 143, 0, 356, 249, 0, 248, 359, 338,
	346, 238, 227, 0, 142, 344, 236, 226, 214, 187,
	199, 273, 221, 274, 200, 244, 243, 245, 223, 0,
	0, 473, 0, 320, 352, 367, 326, 157, 0, 308,
	333, 491, 281, 158, 192, 186, 272, 247, 151, 202,
	317, 212, 220, 286, 0, 260, 293, 161, 351, 316,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 512, 513, 0, 0, 0, 168, 474, 475,
	476, 477, 479, 494, 495, 496, 497, 509, 508, 507,
	510, 514, 517, 516, 518, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 133, 144, 217,
	0, 283, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 353, 178, 0, 0, 0, 0, 145, 156,
	162, 177, 184, 189, 198, 201, 205, 206, 207, 210,
	224, 228, 229, 230, 231, 250, 251, 254, 255, 258,
	259, 265, 266, 267, 269, 270, 271, 279, 503, 288,
	295, 297, 298, 299, 301, 310, 311, 312, 313, 321,
	340, 341, 360, 361, 0, 0, 131, 0, 0, 471,
	437, 330, 431, 442, 425, 0, 135, 0, 0, 499,
	501, 0, 257, 0, 0, 448, 0, 0, 0, 0,
	0, 181, 0, 0, 432, 0, 215, 0, 0, 180,
	170, 222, 0, 0, 0, 0, 264, 329, 0, 0,
	0, 0, 218, 0, 0, 0, 318, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 446, 0, 445, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 350, 268, 285, 306, 0,
	276, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 424, 423, 426, 0, 0, 0,
	242, 148, 0, 0, 430, 208, 0, 0, 0, 0,
	278, 0, 325, 196, 216, 152, 130, 146, 163, 195,
	253, 434, 300, 0, 0, 438, 0, 0, 171, 0,
	292, 261, 349, 0, 0, 291, 219, 339, 0, 441,
	348, 0, 0, 358, 363, 0, 0, 0, 315, 182,
	179, 0, 0, 137, 0, 275, 176, 211, 0, 0,
	0, 167, 0, 0, 0, 314, 336, 134, 239, 337,
	362, 154, 331, 240, 246, 164, 166, 165, 147, 309,
	335, 159, 169, 319, 296, 0, 175, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 354, 0, 303, 302,
	0, 203, 0, 0, 0, 284, 0, 209, 136, 327,
	365, 153, 213, 332, 0, 191, 252, 173, 262, 263,
	0, 132, 280, 233, 234, 232, 235, 194, 0, 0,
	0, 451, 305, 334, 155, 322, 427, 428, 429, 435,
	436, 439, 440, 443, 225, 185, 188, 197, 204, 0,
	289, 323, 355, 0, 149, 138, 328, 347, 160, 304,
	307, 364, 290, 141, 345, 324, 237, 0, 0, 139,
	0, 140, 287, 0, 0, 174, 256, 0, 193, 277,
	342, 343, 172, 366, 150, 357, 143, 0, 356, 249,
	0, 248, 359, 338, 346, 238, 227, 0, 142, 344,
	236, 226, 214, 187, 199, 273, 221, 274, 200, 244,
	243, 245, 223, 0, 0, 0, 0, 320, 352, 367,
	326, 157, 0, 308, 333, 0, 281, 158, 192, 186,
	272, 247, 151, 202, 317, 212, 220, 286, 0, 260,
	293, 161, 351, 316, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 133, 144, 217, 0, 283, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 353, 178, 0, 0,
	0, 0, 145, 156, 162, 177, 184, 189, 198, 201,
	205, 206, 207, 210, 224, 228, 229, 230, 231, 250,
	251, 254, 255, 258, 259, 265, 266, 267, 269, 270,
	271, 279, 433, 288, 295, 297, 298, 299, 301, 310,
	311, 312, 313, 321, 340, 341, 360, 361, 0, 0,
	131, 437, 330, 431, 442, 425, 0, 0, 0, 0,
	135, 0, 0, 257, 0, 0, 417, 0, 0, 0,
	0, 0, 181, 0, 0, 432, 0, 215, 0, 0,
	180, 170, 222, 0, 0, 0, 0, 264, 329, 0,
	0, 0, 0, 218, 0, 0, 0, 318, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 446, 0, 445,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 350, 268, 285, 306,
	0, 276, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 424, 423, 426, 0, 0,
	0, 242, 148, 0, 0, 430, 208, 0, 0, 0,
	0, 278, 0, 325, 196, 216, 152, 130, 146, 163,
	195, 253, 434, 300, 0, 0, 438, 0, 0, 171,
	0, 292, 261, 349, 0, 0, 291, 219, 339, 0,
	441, 348, 0, 0, 358, 363, 0, 0, 0, 315,
	182, 179, 0, 0, 137, 0, 275, 176, 211, 0,
	0, 0, 167, 0, 0, 0, 314, 336, 134, 239,
	337, 362, 154, 331, 240, 246, 164, 166, 165, 147,
	309, 335, 159, 169, 319, 296, 0, 175, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 354, 0, 303,
	302, 0, 203, 0, 0, 0, 284, 0, 209, 136,
	327, 365, 153, 213, 332, 0, 191, 252, 173, 262,
	263, 0, 132, 280, 233, 234, 232, 235, 194, 0,
	0, 0, 420, 305, 334, 155, 322, 427, 428, 429,
	435, 436, 439, 440, 443, 225, 185, 188, 197, 204,
	0, 289, 323, 355, 0, 149, 138, 328, 347, 160,
	304, 307, 364, 290, 141, 345, 324, 237, 0, 0,
	139, 0, 140, 287, 0, 0, 174, 256, 0, 193,
	277, 342, 343, 172, 366, 150, 357, 143, 0, 356,
	249, 0, 248, 359, 338, 346, 238, 227, 0, 142,
	344, 236, 226, 214, 187, 199, 273, 221, 274, 200,
	244, 243, 245, 223, 0, 0, 0, 0, 320, 352,
	367, 326, 157, 0, 308, 333, 0, 281, 158, 192,
	186, 272, 247, 151, 202, 317, 212, 220, 286, 0,
	260, 293, 161, 351, 316, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 168, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 133, 144, 217, 0, 283, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 353, 178, 0,
	0, 0, 0, 145, 156, 162, 177, 184, 189, 198,
	201, 205, 206, 207, 210, 224, 228, 229, 230, 231,
	250, 251, 254, 255, 258, 259, 265, 266, 267, 269,
	270, 271, 279, 433, 288, 295, 297, 298, 299, 301,
	310, 311, 312, 313, 321, 340, 341, 360, 361, 330,
	0, 131, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 135, 0, 0, 0, 0, 0, 0, 0, 181,
	0, 0, 0, 0, 215, 0, 0, 180, 170, 222,
	0, 0, 0, 0, 264, 329, 0, 0, 0, 0,
	218, 0, 0, 0, 318, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 711, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 350, 268, 285, 306, 0, 276, 0,
	1165, 1164, 1174, 1175, 1167, 1168, 1169, 1170, 1171, 1172,
	1173, 1166, 0, 0, 1176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 148,
	0, 0, 0, 208, 0, 0, 0, 0, 278, 0,
	325, 196, 216, 152, 130, 146, 163, 195, 253, 0,
	300, 0, 0, 0, 0, 0, 171, 0, 292, 261,
	349, 0, 0, 291, 219, 339, 0, 0, 348, 0,
	0, 358, 363, 0, 0, 0, 315, 182, 179, 0,
	0, 137, 0, 275, 176, 211, 0, 0, 0, 167,
	0, 0, 0, 314, 336, 134, 239, 337, 362, 154,
	331, 240, 246, 164, 166, 165, 147, 309, 335, 159,
	169, 319, 296, 0, 175, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 354, 0, 303, 302, 0, 203,
	0, 0, 0, 284, 0, 209, 136, 327, 365, 153,
	213, 332, 0, 191, 252, 173, 262, 263, 0, 132,
	280, 233, 234, 232, 235, 194, 0, 0, 0, 282,
	305, 334, 155, 322, 0, 0, 0, 0, 294, 0,
	0, 0, 225, 185, 188, 197, 204, 0, 289, 323,
	355, 0, 149, 138, 328, 347, 160, 304, 307, 364,
	290, 141, 345, 324, 237, 0, 0, 139, 0, 140,
	287, 0, 0, 174, 256, 0, 193, 277, 342, 343,
	172, 366, 150, 357, 143, 0, 356, 249, 0, 248,
	359, 338, 346, 238, 227, 0, 142, 344, 236, 226,
	214, 187, 199, 273, 221, 274, 200, 244, 243, 245,
	223, 0, 0, 0, 0, 320, 352, 367, 326, 157,
	0, 308, 333, 0, 281, 158, 192, 186, 272, 247,
	151, 202, 317, 212, 220, 286, 0, 260, 293, 161,
	351, 316, 183, 330, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 2917, 0, 0,
	0, 0, 0, 181, 2915, 0, 0, 0, 215, 168,
	0, 180, 170, 222, 0, 0, 0, 0, 264, 329,
	0, 0, 0, 0, 218, 0, 0, 0, 318, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 133,
	144, 217, 0, 283, 190, 0, 0, 0, 446, 0,
	445, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 350, 268, 285,
	306, 0, 276, 0, 353, 178, 0, 0, 0, 0,
	145, 156, 162, 177, 184, 189, 198, 201, 205, 206,
	207, 210, 224, 228, 229, 230, 231, 250, 251, 254,
	255, 258, 259, 265, 266, 267, 269, 270, 271, 279,
	0, 288, 295, 297, 298, 299, 301, 310, 311, 312,
	313, 321, 340, 341, 360, 361, 0, 0, 131, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 135, 0,
	0, 0, 242, 148, 0, 0, 0, 208, 0, 0,
	0, 0, 278, 0, 325, 196, 216, 152, 130, 146,
	163, 195, 253, 0, 300, 0, 0, 0, 0, 0,
	171, 0, 292, 261, 349, 0, 0, 291, 219, 339,
	0, 0, 348, 0, 0, 358, 363, 0, 0, 0,
	315, 182, 179, 0, 0, 137, 0, 275, 176, 211,
	0, 0, 0, 167, 0, 0, 0, 314, 336, 134,
	239, 337, 362, 154, 331, 240, 246, 164, 166, 165,
	147, 309, 335, 159, 169, 319, 296, 0, 175, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 354, 0,
	303, 302, 0, 203, 0, 2916, 0, 284, 0, 209,
	136, 327, 365, 153, 213, 332, 0, 191, 252, 173,
	262, 263, 0, 132, 280, 233, 234, 232, 235, 194,
	0, 0, 0, 282, 305, 334, 155, 322, 0, 0,
	0, 0, 294, 0, 0, 0, 225, 185, 188, 197,
	204, 0, 289, 323, 355, 0, 149, 138, 328, 347,
	160, 304, 307, 364, 290, 141, 345, 324, 237, 0,
	0, 139, 0, 140, 287, 0, 0, 174, 256, 0,
	193, 277, 342, 343, 172, 366, 150, 357, 143, 0,
	356, 249, 0, 248, 359, 338, 346, 238, 227, 0,
	142, 344, 236, 226, 214, 187, 199, 273, 221, 274,
	200, 244, 243, 245, 223, 0, 0, 0, 0, 320,
	352, 367, 326, 157, 0, 308, 333, 0, 281, 158,
	192, 186, 272, 247, 151, 202, 317, 212, 220, 286,
	0, 260, 293, 161, 351, 316, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 168, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 133, 144, 217, 0, 283, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 353, 178,
	0, 0, 0, 0, 145, 156, 162, 177, 184, 189,
	198, 201, 205, 206, 207, 210, 224, 228, 229, 230,
	231, 250, 251, 254, 255, 258, 259, 265, 266, 267,
	269, 270, 271, 279, 0, 288, 295, 297, 298, 299,
	301, 310, 311, 312, 313, 321, 340, 341, 360, 361,
	0, 0, 131, 36, 330, 0, 0, 0, 0, 0,
	0, 0, 135, 0, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 0, 0, 0, 0, 215,
	0, 0, 180, 170, 222, 0, 0, 0, 0, 264,
	329, 0, 0, 0, 1664, 218, 0, 0, 0, 318,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 0, 0, 0, 1281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 350, 268,
	285, 306, 0, 276, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 148, 0, 0, 0, 208, 0,
	0, 0, 0, 278, 0, 325, 196, 216, 152, 130,
	146, 163, 195, 253, 0, 300, 0, 0, 0, 0,
	0, 171, 0, 292, 261, 349, 0, 0, 291, 219,
	339, 0, 0, 348, 0, 0, 358, 363, 0, 0,
	0, 315, 182, 179, 0, 0, 137, 0, 275, 176,
	211, 0, 0, 0, 167, 0, 0, 0, 314, 336,
	134, 239, 337, 362, 154, 331, 240, 246, 164, 166,
	165, 147, 309, 335, 159, 169, 319, 296, 0, 175,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 354,
	0, 303, 302, 0, 203, 0, 0, 0, 284, 0,
	209, 136, 327, 365, 153, 213, 332, 0, 191, 252,
	173, 262, 263, 0, 132, 280, 233, 234, 232, 235,
	194, 0, 0, 0, 282, 305, 334, 155, 322, 0,
	0, 0, 0, 294, 0, 0, 0, 225, 185, 188,
	197, 204, 0, 289, 323, 355, 0, 149, 138, 328,
	347, 160, 304, 307, 364, 290, 141, 345, 324, 237,
	0, 0, 139, 0, 140, 287, 0, 0, 174, 256,
	0, 193, 277, 342, 343, 172, 366, 150, 357, 143,
	0, 356, 249, 0, 248, 359, 338, 346, 238, 227,
	0, 142, 344, 236, 226, 214, 187, 199, 273, 221,
	274, 200, 244, 243, 245, 223, 0, 0, 0, 0,
	320, 352, 367, 326, 157, 0, 308, 333, 0, 281,
	158, 192, 186, 272, 247, 151, 202, 317, 212, 220,
	286, 0, 260, 293, 161, 351, 316, 183, 330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 0,
	0, 0, 0, 215, 168, 0, 180, 170, 222, 0,
	0, 0, 0, 264, 329, 0, 0, 0, 0, 218,
	0, 0, 0, 318, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 133, 144, 217, 79, 283, 190,
	0, 0, 0, 711, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2098, 350, 268, 285, 306, 0, 276, 0, 353,
	178, 0, 0, 0, 0, 145, 156, 162, 177, 184,
	189, 198, 201, 205, 206, 207, 210, 224, 228, 229,
	230, 231, 250, 251, 254, 255, 258, 259, 265, 266,
	267, 269, 270, 271, 279, 0, 288, 295, 297, 298,
	299, 301, 310, 311, 312, 313, 321, 340, 341, 360,
	361, 0, 0, 131, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 135, 0, 0, 0, 242, 148, 0,
	0, 0, 208, 0, 0, 0, 0, 278, 0, 325,
	196, 216, 152, 130, 146, 163, 195, 253, 0, 300,
	0, 0, 0, 0, 0, 171, 0, 292, 261, 349,
	0, 0, 291, 219, 339, 0, 0, 348, 0, 0,
	358, 363, 0, 0, 0, 315, 182, 179, 0, 0,
	137, 0, 275, 176, 211, 2099, 2100, 0, 167, 0,
	0, 0, 314, 336, 134, 239, 337, 362, 154, 331,
	240, 246, 164, 166, 165, 147, 309, 335, 159, 169,
	319, 296, 0, 175, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 354, 0, 303, 302, 0, 203, 0,
	0, 0, 284, 0, 209, 136, 327, 365, 153, 213,
	332, 0, 191, 252, 173, 262, 263, 0, 132, 280,
	233, 234, 232, 235, 194, 0, 0, 0, 282, 305,
	334, 155, 322, 0, 0, 0, 0, 294, 0, 0,
	0, 225, 185, 188, 197, 204, 0, 289, 323, 355,
	0, 149, 138, 328, 347, 160, 304, 307, 364, 290,
	141, 345, 324, 237, 0, 0, 139, 0, 140, 287,
	0, 0, 174, 256, 0, 193, 277, 342, 343, 172,
	366, 150, 357, 143, 0, 356, 249, 0, 248, 359,
	338, 346, 238, 227, 0, 142, 344, 236, 226, 214,
	187, 199, 273, 221, 274, 200, 244, 243, 245, 223,
	0, 0, 0, 0, 320, 352, 367, 326, 157, 0,
	308, 333, 0, 281, 158, 192, 186, 272, 247, 151,
	202, 317, 212, 220, 286, 0, 260, 293, 161, 351,
	316, 183, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 0, 0, 0, 0, 215, 168, 0,
	180, 170, 222, 0, 0, 0, 0, 264, 329, 0,
	0, 0, 0, 218, 0, 0, 0, 318, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 133, 144,
	217, 0, 283, 190, 0, 0, 0, 446, 0, 445,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 350, 268, 285, 306,
	0, 276, 0, 353, 178, 0, 0, 0, 0, 145,
	156, 162, 177, 184, 189, 198, 201, 205, 206, 207,
	210, 224, 228, 229, 230, 231, 250, 251, 254, 255,
	258, 259, 265, 266, 267, 269, 270, 271, 279, 0,
	288, 295, 297, 298, 299, 301, 310, 311, 312, 313,
	321, 340, 341, 360, 361, 0, 0, 131, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 135, 0, 0,
	0, 242, 148, 0, 0, 0, 208, 0, 0, 0,
	0, 278, 0, 325, 196, 216, 152, 130, 146, 163,
	195, 253, 0, 300, 0, 0, 0, 0, 0, 171,
	0, 292, 261, 349, 0, 0, 291, 219, 339, 0,
	0, 348, 0, 0, 358, 363, 0, 0, 0, 315,
	182, 179, 0, 0, 137, 0, 275, 176, 211, 0,
	0, 0, 167, 0, 0, 0, 314, 336, 134, 239,
	337, 362, 154, 331, 240, 246, 164, 166, 165, 147,
	309, 335, 159, 169, 319, 296, 0, 175, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 354, 0, 303,
	302, 0, 203, 0, 0, 0, 284, 0, 209, 136,
	327, 365, 153, 213, 332, 0, 191, 252, 173, 262,
	263, 0, 132, 280, 233, 234, 232, 235, 194, 0,
	0, 0, 282, 305, 334, 155, 322, 0, 0, 0,
	0, 294, 0, 0, 0, 225, 185, 188, 197, 204,
	0, 289, 323, 355, 0, 149, 138, 328, 347, 160,
	304, 307, 364, 290, 141, 345, 324, 237, 0, 0,
	139, 0, 140, 287, 0, 0, 174, 256, 0, 193,
	277, 342, 343, 172, 366, 150, 357, 143, 0, 356,
	249, 0, 248, 359, 338, 346, 238, 227, 0, 142,
	344, 236, 226, 214, 187, 199, 273, 221, 274, 200,
	244, 243, 245, 223, 0, 0, 0, 0, 320, 352,
	367, 326, 157, 0, 308, 333, 0, 281, 158, 192,
	186, 272, 247, 151, 202, 317, 212, 220, 286, 0,
	260, 293, 161, 351, 316, 183, 330, 0, 0, 1442,
	0, 0, 0, 0, 0, 0, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 1302, 0, 0,
	0, 215, 168, 0, 180, 170, 222, 0, 0, 0,
	0, 264, 329, 0, 0, 0, 0, 218, 0, 0,
	0, 318, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 133, 144, 217, 0, 283, 190, 0, 0,
	0, 711, 0, 1301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	350, 268, 285, 306, 0, 276, 0, 353, 178, 0,
	0, 0, 0, 145, 156, 162, 177, 184, 189, 198,
	201, 205, 206, 207, 210, 224, 228, 229, 230, 231,
	250, 251, 254, 255, 258, 259, 265, 266, 267, 269,
	270, 271, 279, 0, 288, 295, 297, 298, 299, 301,
	310, 311, 312, 313, 321, 340, 341, 360, 361, 0,
	0, 131, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 135, 0, 0, 0, 242, 148, 0, 0, 0,
	208, 0, 0, 0, 0, 278, 0, 325, 196, 216,
	152, 130, 146, 163, 195, 253, 0, 300, 0, 0,
	0, 0, 0, 171, 0, 292, 261, 349, 0, 0,
	291, 219, 339, 0, 0, 348, 0, 0, 358, 363,
	0, 0, 0, 315, 182, 179, 0, 0, 137, 0,
	275, 176, 211, 0, 0, 0, 167, 0, 0, 0,
	314, 336, 134, 239, 337, 362, 154, 331, 240, 246,
	164, 166, 165, 147, 309, 335, 159, 169, 319, 296,
	0, 175, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 354, 0, 303, 302, 0, 203, 0, 0, 0,
	284, 0, 209, 136, 327, 365, 153, 213, 332, 0,
	191, 252, 173, 262, 263, 0, 132, 280, 233, 234,
	232, 235, 194, 0, 0, 0, 282, 305, 334, 155,
	322, 0, 0, 0, 0, 294, 0, 0, 0, 225,
	185, 188, 197, 204, 0, 289, 323, 355, 0, 149,
	138, 328, 347, 160, 304, 307, 364, 290, 141, 345,
	324, 237, 0, 0, 139, 0, 140, 287, 0, 0,
	174, 256, 0, 193, 277, 342, 343, 172, 366, 150,
	357, 143, 0, 356, 249, 0, 248, 359, 338, 346,
	238, 227, 0, 142, 344, 236, 226, 214, 187, 199,
	273, 221, 274, 200, 244, 243, 245, 223, 0, 0,
	0, 0, 320, 352, 367, 326, 157, 0, 308, 333,
	0, 281, 158, 192, 186, 272, 247, 151, 202, 317,
	212, 220, 286, 0, 260, 293, 161, 351, 316, 183,
	330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 0, 0, 0, 0, 215, 168, 0, 180, 170,
	222, 0, 0, 0, 0, 264, 329, 0, 0, 0,
	0, 218, 0, 0, 0, 318, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 133, 144, 217, 0,
	283, 190, 0, 0, 0, 446, 0, 445, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 350, 268, 285, 306, 0, 276,
	0, 353, 178, 0, 0, 0, 0, 145, 156, 162,
	177, 184, 189, 198, 201, 205, 206, 207, 210, 224,
	228, 229, 230, 231, 250, 251, 254, 255, 258, 259,
	265, 266, 267, 269, 270, 271, 279, 0, 288, 295,
	297, 298, 299, 301, 310, 311, 312, 313, 321, 340,
	341, 360, 361, 0, 0, 131, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 135, 0, 0, 0, 242,
	148, 0, 0, 0, 208, 0, 0, 0, 0, 278,
	0, 325, 196, 216, 152, 130, 146, 163, 195, 253,
	0, 300, 0, 0, 0, 0, 0, 171, 0, 292,
	261, 349, 0, 0, 291, 219, 339, 0, 0, 348,
	0, 0, 358, 363, 0, 0, 0, 315, 182, 179,
	0, 0, 137, 0, 275, 176, 211, 0, 0, 0,
	167, 0, 0, 0, 314, 336, 134, 239, 337, 362,
	154, 331, 240, 246, 164, 166, 165, 147, 309, 335,
	159, 169, 319, 296, 0, 175, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 354, 0, 303, 302, 0,
	203, 0, 0, 0, 284, 0, 209, 136, 327, 365,
	153, 213, 332, 0, 191, 252, 173, 262, 263, 0,
	132, 280, 233, 234, 232, 235, 194, 0, 0, 0,
	282, 305, 334, 155, 322, 0, 0, 0, 0, 294,
	0, 0, 0, 225, 185, 188, 197, 204, 0, 289,
	323, 355, 0, 149, 138, 328, 347, 160, 304, 307,
	364, 290, 141, 345, 324, 237, 0, 0, 139, 0,
	140, 287, 0, 0, 174, 256, 0, 193, 277, 342,
	343, 172, 366, 150, 357, 143, 0, 356, 249, 0,
	248, 359, 338, 346, 238, 227, 0, 142, 344, 236,
	226, 214, 187, 199, 273, 221, 274, 200, 244, 243,
	245, 223, 0, 0, 0, 0, 320, 352, 367, 326,
	157, 0, 308, 333, 0, 281, 158, 192, 186, 272,
	247, 151, 202, 317, 212, 220, 286, 0, 260, 293,
	161, 351, 316, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	168, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	133, 144, 217, 0, 283, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 353, 178, 0, 0, 0,
	0, 145, 156, 162, 177, 184, 189, 198, 201, 205,
	206, 207, 210, 224, 228, 229, 230, 231, 250, 251,
	254, 255, 258, 259, 265, 266, 267, 269, 270, 271,
	279, 0, 288, 295, 297, 298, 299, 301, 310, 311,
	312, 313, 321, 340, 341, 360, 361, 330, 0, 131,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 135,
	0, 0, 0, 0, 0, 0, 0, 181, 0, 0,
	0, 0, 215, 0, 0, 180, 170, 222, 0, 0,
	0, 0, 264, 329, 0, 0, 0, 0, 218, 0,
	0, 0, 318, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 0,
	0, 0, 1281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 350, 268, 285, 306, 0, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 148, 0, 0,
	0, 208, 0, 0, 0, 0, 278, 0, 325, 196,
	216, 152, 130, 146, 163, 195, 253, 0, 300, 0,
	0, 0, 0, 0, 171, 0, 292, 261, 349, 0,
	0, 291, 219, 339, 0, 0, 348, 0, 0, 358,
	363, 0, 0, 0, 315, 182, 179, 0, 0, 137,
	0, 275, 176, 211, 0, 0, 0, 167, 0, 0,
	0, 314, 336, 134, 239, 337, 362, 154, 331, 240,
	246, 164, 166, 165, 147, 309, 335, 159, 169, 319,
	296, 0, 175, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 354, 0, 303, 302, 0, 203, 0, 0,
	0, 284, 0, 209, 136, 327, 365, 153, 213, 332,
	0, 191, 252, 173, 262, 263, 0, 132, 280, 233,
	234, 232, 235, 194, 0, 0, 0, 282, 305, 334,
	155, 322, 0, 0, 0, 0, 294, 0, 0, 0,
	225, 185, 188, 197, 204, 0, 289, 323, 355, 0,
	149, 138, 328, 347, 160, 304, 307, 364, 290, 141,
	345, 324, 237, 0, 0, 139, 0, 140, 287, 0,
	0, 174, 256, 0, 193, 277, 342, 343, 172, 366,
	150, 357, 143, 0, 356, 249, 0, 248, 359, 338,
	346, 238, 227, 0, 142, 344, 236, 226, 214, 187,
	199, 273, 221, 274, 200, 244, 243, 245, 223, 0,
	0, 0, 0, 320, 352, 367, 326, 157, 0, 308,
	333, 0, 281, 158, 192, 186, 272, 247, 151, 202,
	317, 212, 220, 286, 0, 260, 293, 161, 351, 316,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 133, 144, 217,
	0, 283, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 353, 178, 0, 0, 0, 0, 145, 156,
	162, 177, 184, 189, 198, 201, 205, 206, 207, 210,
	224, 228, 229, 230, 231, 250, 251, 254, 255, 258,
	259, 265, 266, 267, 269, 270, 271, 279, 0, 288,
	295, 297, 298, 299, 301, 310, 311, 312, 313, 321,
	340, 341, 360, 361, 330, 0, 131, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 135, 0, 0, 0,
	0, 0, 0, 0, 181, 0, 0, 0, 0, 215,
	0, 0, 180, 170, 222, 0, 0, 0, 0, 264,
	329, 0, 0, 0, 0, 218, 0, 0, 0, 318,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 711,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 350, 268,
	285, 306, 0, 276, 0, 0, 0, 0, 0, 0,
	0, 2371, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 148, 0, 0, 0, 208, 0,
	0, 0, 0, 278, 0, 325, 196, 216, 152, 130,
	146, 163, 195, 253, 0, 300, 0, 0, 0, 0,
	0, 171, 0, 292, 261, 349, 0, 0, 291, 219,
	339, 0, 0, 348, 0, 0, 358, 363, 0, 0,
	0, 315, 182, 179, 0, 0, 137, 0, 275, 176,
	211, 0, 0, 0, 167, 0, 0, 0, 314, 336,
	134, 239, 337, 362, 154, 331, 240, 246, 164, 166,
	165, 147, 309, 335, 159, 169, 319, 296, 0, 175,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 354,
	0, 303, 302, 0, 203, 0, 0, 0, 284, 0,
	209, 136, 327, 365, 153, 213, 332, 0, 191, 252,
	173, 262, 263, 0, 132, 280, 233, 234, 232, 235,
	194, 0, 0, 0, 282, 305, 334, 155, 322, 0,
	0, 0, 0, 294, 0, 0, 0, 225, 185, 188,
	197, 204, 0, 289, 323, 355, 0, 149, 138, 328,
	347, 160, 304, 307, 364, 290, 141, 345, 324, 237,
	0, 0, 139, 0, 140, 287, 0, 0, 174, 256,
	0, 193, 277, 342, 343, 172, 366, 150, 357, 143,
	0, 356, 249, 0, 248, 359, 338, 346, 238, 227,
	0, 142, 344, 236, 226, 214, 187, 199, 273, 221,
	274, 200, 244, 243, 245, 223, 0, 0, 0, 0,
	320, 352, 367, 326, 157, 0, 308, 333, 0, 281,
	158, 192, 186, 272, 247, 151, 202, 317, 212, 220,
	286, 0, 260, 293, 161, 351, 316, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 133, 144, 217, 0, 283, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 353,
	178, 0, 0, 0, 0, 145, 156, 162, 177, 184,
	189, 198, 201, 205, 206, 207, 210, 224, 228, 229,
	230, 231, 250, 251, 254, 255, 258, 259, 265, 266,
	267, 269, 270, 271, 279, 0, 288, 295, 297, 298,
	299, 301, 310, 311, 312, 313, 321, 340, 341, 360,
	361, 330, 0, 131, 0, 0, 0, 0, 0, 0,
	0, 0, 257, 135, 0, 0, 0, 0, 0, 0,
	0, 181, 0, 0, 0, 0, 215, 0, 0, 180,
	170, 222, 0, 0, 0, 0, 264, 329, 0, 0,
	0, 0, 218, 0, 0, 0, 318, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 81, 0, 0, 0, 711, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 350, 268, 285, 306, 0,
	276, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 148, 0, 0, 0, 208, 0, 0, 0, 0,
	278, 0, 325, 196, 216, 152, 130, 146, 163, 195,
	253, 0, 300, 0, 0, 0, 0, 0, 171, 0,
	292, 261, 349, 0, 0, 291, 219, 339, 0, 0,
	348, 0, 0, 358, 363, 0, 0, 0, 315, 182,
	179, 0, 0, 137, 0, 275, 176, 211, 0, 0,
	0, 167, 0, 0, 0, 314, 336, 134, 239, 337,
	362, 154, 331, 240, 246, 164, 166, 165, 147, 309,
	335, 159, 169, 319, 296, 0, 175, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 354, 0, 303, 302,
	0, 203, 0, 0, 0, 284, 0, 209, 136, 327,
	365, 153, 213, 332, 0, 191, 252, 173, 262, 263,
	0, 132, 280, 233, 234, 232, 235, 194, 0, 0,
	0, 282, 305, 334, 155, 322, 0, 0, 0, 0,
	294, 0, 0, 0, 225, 185, 188, 197, 204, 0,
	289, 323, 355, 0, 149, 138, 328, 347, 160, 304,
	307, 364, 290, 141, 345, 324, 237, 0, 0, 139,
	0, 140, 287, 0, 0, 174, 256, 0, 193, 277,
	342, 343, 172, 366, 150, 357, 143, 0, 356, 249,
	0, 248, 359, 338, 346, 238, 227, 0, 142, 344,
	236, 226, 214, 187, 199, 273, 221, 274, 200, 244,
	243, 245, 223, 0, 0, 0, 0, 320, 352, 367,
	326, 157, 0, 308, 333, 0, 281, 158, 192, 186,
	272, 247, 151, 202, 317, 212, 220, 286, 0, 260,
	293, 161, 351, 316, 183, 330, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 257, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 0, 0, 0, 0,
	215, 168, 1868, 1869, 170, 222, 0, 0, 0, 0,
	264, 329, 0, 0, 0, 0, 218, 0, 0, 0,
	318, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 133, 144, 217, 0, 283, 190, 0, 0, 0,
	711, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 350,
	268, 285, 306, 0, 276, 0, 353, 178, 0, 0,
	0, 0, 145, 156, 162, 177, 184, 189, 198, 201,
	205, 206, 207, 210, 224, 228, 229, 230, 231, 250,
	251, 254, 255, 258, 259, 265, 266, 267, 269, 270,
	271, 279, 0, 288, 295, 297, 298, 299, 301, 310,
	311, 312, 313, 321, 340, 341, 360, 361, 0, 0,
	131, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	135, 0, 0, 0, 242, 148, 0, 0, 0, 208,
	0, 0, 0, 0, 278, 0, 325, 196, 216, 152,
	130, 146, 163, 195, 253, 0, 300, 0, 0, 0,
	0, 0, 171, 0, 292, 261, 349, 0, 0, 291,
	219, 339, 0, 0, 348, 0, 0, 358, 363, 0,
	0, 0, 315, 182, 179, 0, 0, 137, 0, 275,
	176, 211, 0, 0, 0, 167, 0, 0, 0, 314,
	336, 134, 239, 337, 362, 154, 331, 240, 246, 164,
	166, 165, 147, 309, 335, 159, 169, 319, 296, 0,
	175, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	354, 0, 303, 302, 0, 203, 0, 0, 0, 284,
	0, 209, 136, 327, 365, 153, 213, 332, 0, 191,
	252, 173, 262, 263, 0, 132, 280, 233, 234, 232,
	235, 194, 0, 0, 0, 282, 305, 334, 155, 322,
	0, 0, 0, 0, 294, 0, 0, 0, 225, 185,
	188, 197, 204, 0, 289, 323, 355, 0, 149, 138,
	328, 347, 160, 304, 307, 364, 290, 141, 345, 324,
	237, 0, 0, 139, 0, 140, 287, 0, 0, 174,
	256, 0, 193, 277, 342, 343, 172, 366, 150, 357,
	143, 0, 356, 249, 0, 248, 359, 338, 346, 238,
	227, 0, 142, 344, 236, 226, 214, 187, 199, 273,
	221, 274, 200, 244, 243, 245, 223, 0, 0, 0,
	0, 320, 352, 367, 326, 157, 0, 308, 333, 0,
	281, 158, 192, 186, 272, 247, 151, 202, 317, 212,
	220, 286, 0, 260, 293, 161, 351, 316, 183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 168, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 133, 144, 217, 0, 283,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	353, 178, 0, 0, 0, 0, 145, 156, 162, 177,
	184, 189, 198, 201, 205, 206, 207, 210, 224, 228,
	229, 230, 231, 250, 251, 254, 255, 258, 259, 265,
	266, 267, 269, 270, 271, 279, 0, 288, 295, 297,
	298, 299, 301, 310, 311, 312, 313, 321, 340, 341,
	360, 361, 330, 0, 131, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 135, 0, 0, 0, 0, 0,
	0, 0, 181, 0, 0, 0, 0, 215, 0, 0,
	180, 170, 222, 0, 0, 0, 0, 264, 329, 0,
	0, 0, 0, 218, 0, 0, 0, 318, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 711, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 350, 268, 285, 306,
	0, 276, 0, 0, 0, 0, 0, 0, 0, 1831,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 148, 0, 0, 0, 208, 0, 0, 0,
	0, 278, 0, 325, 196, 216, 152, 130, 146, 163,
	195, 253, 0, 300, 0, 0, 0, 0, 0, 171,
	0, 292, 261, 349, 0, 0, 291, 219, 339, 0,
	0, 348, 0, 0, 358, 363, 0, 0, 0, 315,
	182, 179, 0, 0, 137, 0, 275, 176, 211, 0,
	0, 0, 167, 0, 0, 0, 314, 336, 134, 239,
	337, 362, 154, 331, 240, 246, 164, 166, 165, 147,
	309, 335, 159, 169, 319, 296, 0, 175, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 354, 0, 303,
	302, 0, 203, 0, 0, 0, 284, 0, 209, 136,
	327, 365, 153, 213, 332, 0, 191, 252, 173, 262,
	263, 0, 132, 280, 233, 234, 232, 235, 194, 0,
	0, 0, 282, 305, 334, 155, 322, 0, 0, 0,
	0, 294, 0, 0, 0, 225, 185, 188, 197, 204,
	0, 289, 323, 355, 0, 149, 138, 328, 347, 160,
	304, 307, 364, 290, 141, 345, 324, 237, 0, 0,
	139, 0, 140, 287, 0, 0, 174, 256, 0, 193,
	277, 342, 343, 172, 366, 150, 357, 143, 0, 356,
	249, 0, 248, 359, 338, 346, 238, 227, 0, 142,
	344, 236, 226, 214, 187, 199, 273, 221, 274, 200,
	244, 243, 245, 223, 0, 0, 0, 0, 320, 352,
	367, 326, 157, 0, 308, 333, 0, 281, 158, 192,
	186, 272, 247, 151, 202, 317, 212, 220, 286, 0,
	260, 293, 161, 351, 316, 183, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 0, 0, 0,
	0, 215, 168, 0, 180, 170, 222, 0, 0, 0,
	0, 264, 329, 0, 0, 0, 0, 218, 0, 0,
	0, 318, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 133, 144, 217, 0, 283, 190, 0, 0,
	0, 538, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	350, 268, 285, 306, 0, 276, 0, 353, 178, 0,
	0, 0, 0, 145, 156, 162, 177, 184, 189, 198,
	201, 205, 206, 207, 210, 224, 228, 229, 230, 231,
	250, 251, 254, 255, 258, 259, 265, 266, 267, 269,
	270, 271, 279, 0, 288, 295, 297, 298, 299, 301,
	310, 311, 312, 313, 321, 340, 341, 360, 361, 0,
	0, 131, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 135, 0, 0, 0, 242, 148, 0, 0, 0,
	208, 0, 0, 0, 0, 278, 0, 325, 196, 216,
	152, 130, 146, 163, 195, 253, 0, 300, 0, 0,
	0, 0, 0, 171, 0, 292, 261, 349, 0, 0,
	291, 219, 339, 0, 0, 348, 0, 0, 358, 363,
	0, 0, 0, 315, 182, 179, 0, 0, 137, 0,
	275, 176, 211, 0, 0, 0, 167, 0, 0, 0,
	314, 336, 134, 239, 337, 362, 154, 331, 240, 246,
	164, 166, 165, 147, 309, 335, 159, 169, 319, 296,
	0, 175, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 354, 0, 303, 302, 0, 203, 0, 0, 0,
	284, 0, 209, 136, 327, 365, 153, 213, 332, 0,
	191, 252, 173, 262, 263, 0, 132, 280, 233, 234,
	232, 235, 194, 0, 0, 0, 282, 305, 334, 155,
	322, 0, 0, 0, 0, 294, 0, 0, 0, 225,
	185, 188, 197, 204, 0, 289, 323, 355, 0, 149,
	138, 328, 347, 160, 304, 307, 364, 290, 141, 345,
	324, 237, 0, 0, 139, 0, 140, 287, 0, 0,
	174, 256, 0, 193, 277, 342, 343, 172, 366, 150,
	357, 143, 694, 356, 249, 0, 248, 359, 338, 346,
	238, 227, 0, 142, 344, 236, 226, 214, 187, 199,
	273, 221, 274, 200, 244, 243, 245, 690, 0, 0,
	0, 0, 320, 352, 367, 326, 157, 0, 308, 333,
	0, 281, 158, 192, 186, 272, 695, 693, 684, 685,
	212, 220, 286, 0, 260, 293, 161, 351, 316, 183,
	330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 0, 0, 0, 0, 215, 168, 0, 180, 170,
	222, 0, 0, 0, 0, 264, 329, 0, 0, 0,
	0, 218, 0, 0, 0, 318, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 133, 144, 217, 0,
	283, 190, 0, 0, 0, 128, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 350, 268, 285, 306, 0, 276,
	0, 353, 178, 0, 0, 0, 0, 145, 156, 162,
	177, 184, 189, 198, 201, 205, 206, 207, 210, 224,
	228, 229, 230, 231, 250, 251, 254, 255, 258, 259,
	265, 266, 267, 269, 691, 692, 279, 0, 288, 295,
	297, 298, 299, 301, 310, 311, 312, 313, 321, 340,
	341, 360, 361, 0, 0, 131, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 135, 0, 0, 0, 242,
	148, 0, 0, 0, 208, 0, 0, 0, 0, 278,
	0, 325, 196, 216, 152, 130, 146, 163, 195, 253,
	0, 300, 0, 0, 0, 0, 0, 171, 0, 292,
	261, 349, 0, 0, 291, 219, 339, 0, 0, 348,
	0, 0, 358, 363, 0, 0, 0, 315, 182, 179,
	0, 0, 137, 0, 275, 176, 211, 0, 0, 0,
	167, 0, 0, 0, 314, 336, 134, 239, 337, 362,
	154, 331, 240, 246, 164, 166, 165, 147, 309, 335,
	159, 169, 319, 296, 0, 175, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 354, 0, 303, 302, 0,
	203, 0, 0, 0, 284, 0, 209, 136, 327, 365,
	153, 213, 332, 0, 191, 252, 173, 262, 263, 0,
	132, 280, 233, 234, 232, 235, 194, 0, 0, 0,
	282, 305, 334, 155, 322, 0, 0, 0, 0, 294,
	0, 0, 0, 225, 185, 188, 197, 204, 0, 289,
	323, 355, 0, 149, 138, 328, 347, 160, 304, 307,
	364, 290, 141, 345, 324, 237, 0, 0, 139, 0,
	140, 287, 0, 0, 174, 256, 0, 193, 277, 342,
	343, 172, 366, 150, 357, 143, 0, 356, 249, 0,
	248, 359, 338, 346, 238, 227, 0, 142, 344, 236,
	226, 214, 187, 199, 273, 221, 274, 200, 244, 243,
	245, 223, 0, 0, 0, 0, 320, 352, 367, 326,
	157, 0, 308, 333, 0, 281, 158, 192, 186, 272,
	247, 151, 202, 317, 212, 220, 286, 0, 260, 293,
	161, 351, 316, 183, 330, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 0, 0, 0, 0, 215,
	168, 0, 180, 170, 222, 0, 0, 0, 0, 264,
	329, 0, 0, 0, 0, 218, 0, 0, 0, 318,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	133, 144, 217, 0, 283, 190, 0, 0, 0, 538,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 350, 268,
	285, 306, 0, 276, 0, 353, 178, 0, 0, 0,
	0, 145, 156, 162, 177, 184, 189, 198, 201, 205,
	206, 207, 210, 224, 228, 229, 230, 231, 250, 251,
	254, 255, 258, 259, 265, 266, 267, 269, 270, 271,
	279, 0, 288, 295, 297, 298, 299, 301, 310, 311,
	312, 313, 321, 340, 341, 360, 361, 0, 0, 131,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 135,
	0, 0, 0, 242, 148, 0, 0, 0, 208, 0,
	0, 0, 0, 278, 0, 325, 196, 216, 152, 130,
	146, 163, 195, 253, 0, 300, 0, 0, 0, 0,
	0, 171, 0, 292, 261, 349, 0, 0, 291, 219,
	339, 0, 0, 348, 0, 0, 358, 363, 0, 0,
	0, 315, 182, 179, 0, 0, 137, 0, 275, 176,
	211, 0, 0, 0, 167, 0, 0, 0, 314, 336,
	134, 239, 337, 362, 154, 331, 240, 246, 164, 166,
	165, 147, 309, 335, 159, 169, 319, 296, 0, 175,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 354,
	0, 303, 302, 0, 203, 0, 0, 0, 284, 0,
	209, 136, 327, 365, 153, 213, 332, 0, 191, 252,
	173, 262, 263, 0, 132, 280, 233, 234, 232, 235,
	194, 0, 0, 0, 282, 305, 334, 155, 322, 0,
	0, 0, 0, 294, 0, 0, 0, 225, 185, 188,
	197, 204, 0, 289, 323, 355, 0, 149, 138, 328,
	681, 160, 304, 307, 364, 290, 141, 345, 324, 237,
	0, 0, 139, 0, 140, 287, 0, 0, 174, 256,
	0, 193, 277, 342, 343, 172, 366, 150, 357, 143,
	694, 356, 249, 0, 248, 359, 338, 346, 238, 227,
	0, 142, 344, 236, 226, 214, 187, 199, 273, 221,
	274, 200, 244, 243, 245, 690, 0, 0, 0, 0,
	320, 352, 367, 326, 157, 0, 308, 333, 0, 281,
	158, 192, 186, 272, 695, 693, 684, 685, 212, 220,
	286, 0, 260, 293, 161, 351, 316, 183, 330, 0,
	0, 0, 674, 0, 0, 0, 0, 0, 0, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 0,
	0, 0, 0, 215, 168, 0, 180, 170, 222, 0,
	0, 0, 0, 264, 329, 0, 0, 0, 0, 218,
	0, 0, 0, 318, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 133, 144, 217, 0, 283, 190,
	0, 0, 0, 128, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 350, 268, 285, 306, 0, 276, 0, 353,
	178, 0, 0, 0, 0, 145, 156, 162, 177, 184,
	189, 198, 201, 205, 206, 207, 210, 224, 228, 229,
	230, 231, 250, 251, 254, 255, 258, 259, 265, 266,
	267, 269, 691, 692, 279, 0, 288, 295, 297, 298,
	299, 301, 310, 311, 312, 313, 321, 340, 341, 360,
	361, 0, 0, 131, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 135, 0, 0, 0, 242, 148, 0,
	0, 0, 208, 0, 0, 0, 0, 278, 0, 325,
	196, 216, 152, 130, 146, 163, 195, 253, 0, 300,
	0, 0, 0, 0, 0, 171, 0, 292, 261, 349,
	0, 0, 291, 219, 339, 0, 0, 348, 0, 0,
	358, 363, 0, 0, 0, 315, 182, 179, 0, 0,
	137, 0, 275, 176, 211, 0, 0, 0, 167, 0,
	0, 0, 314, 336, 134, 239, 337, 362, 154, 331,
	240, 246, 164, 166, 165, 147, 309, 335, 159, 169,
	319, 296, 0, 175, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 354, 0, 303, 302, 0, 203, 0,
	0, 0, 284, 0, 209, 136, 327, 365, 153, 213,
	332, 0, 191, 252, 173, 262, 263, 0, 132, 280,
	233, 234, 232, 235, 194, 0, 0, 0, 282, 305,
	334, 155, 322, 0, 0, 0, 0, 294, 0, 0,
	0, 225, 185, 188, 197, 204, 0, 289, 323, 355,
	0, 149, 138, 328, 347, 160, 304, 307, 364, 290,
	141, 345, 324, 237, 0, 0, 139, 0, 140, 287,
	0, 0, 174, 256, 0, 193, 277, 342, 343, 172,
	366, 150, 357, 143, 0, 356, 249, 0, 248, 359,
	338, 346, 238, 227, 0, 142, 344, 236, 226, 214,
	187, 199, 273, 221, 274, 200, 244, 243, 245, 223,
	0, 0, 0, 0, 320, 352, 367, 326, 157, 0,
	308, 333, 0, 281, 158, 192, 186, 272, 247, 151,
	202, 317, 212, 220, 286, 0, 260, 293, 161, 351,
	316, 183, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 0, 0, 0, 0, 215, 168, 0,
	180, 170, 222, 0, 0, 0, 0, 264, 329, 0,
	0, 0, 0, 218, 0, 0, 0, 318, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 133, 144,
	217, 0, 283, 190, 0, 0, 0, 128, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 350, 268, 285, 306,
	0, 276, 0, 353, 178, 0, 0, 0, 0, 145,
	156, 162, 177, 184, 189, 198, 201, 205, 206, 207,
	210, 224, 228, 229, 230, 231, 250, 251, 254, 255,
	258, 259, 265, 266, 267, 269, 270, 271, 279, 0,
	288, 295, 297, 298, 299, 301, 310, 311, 312, 313,
	321, 340, 341, 360, 361, 0, 0, 131, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 135, 0, 0,
	0, 242, 148, 0, 125, 0, 208, 0, 0, 0,
	0, 278, 0, 325, 196, 216, 152, 130, 146, 163,
	195, 253, 0, 300, 0, 0, 0, 0, 0, 171,
	0, 292, 261, 349, 0, 0, 291, 219, 339, 0,
	0, 348, 0, 0, 358, 363, 0, 0, 0, 315,
	182, 179, 0, 0, 137, 0, 275, 176, 211, 0,
	0, 0, 167, 0, 0, 0, 314, 336, 134, 239,
	337, 362, 154, 331, 240, 246, 164, 166, 165, 147,
	309, 335, 159, 169, 319, 296, 0, 175, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 354, 0, 303,
	302, 0, 203, 0, 0, 0, 284, 0, 209, 136,
	327, 365, 153, 213, 332, 0, 191, 252, 173, 262,
	263, 0, 132, 280, 233, 234, 232, 235, 194, 0,
	0, 0, 282, 305, 334, 155, 322, 0, 0, 0,
	0, 294, 0, 0, 0, 225, 185, 188, 197, 204,
	0, 289, 323, 355, 0, 149, 138, 328, 347, 160,
	304, 307, 364, 290, 141, 345, 324, 237, 0, 0,
	139, 0, 140, 287, 0, 0, 174, 256, 0, 193,
	277, 342, 343, 172, 366, 150, 357, 143, 0, 356,
	249, 0, 248, 359, 338, 346, 238, 227, 0, 142,
	344, 236, 226, 214, 187, 199, 273, 221, 274, 200,
	244, 243, 245, 223, 0, 0, 0, 0, 320, 352,
	367, 326, 157, 0, 308, 333, 0, 281, 158, 192,
	186, 272, 247, 151, 202, 317, 212, 220, 286, 0,
	260, 293, 161, 351, 316, 183, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 0, 0, 0,
	0, 215, 168, 0, 180, 170, 222, 0, 0, 0,
	0, 264, 329, 0, 0, 0, 0, 218, 0, 0,
	0, 318, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 133, 144, 217, 0, 283, 190, 0, 0,
	0, 711, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	350, 268, 285, 306, 0, 276, 0, 353, 178, 0,
	0, 0, 0, 145, 156, 162, 177, 184, 189, 198,
	201, 205, 206, 207, 210, 224, 228, 229, 230, 231,
	250, 251, 254, 255, 258, 259, 265, 266, 267, 269,
	270, 271, 279, 0, 288, 295, 297, 298, 299, 301,
	310, 311, 312, 313, 321, 340, 341, 360, 361, 0,
	0, 131, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 135, 0, 0, 0, 242, 148, 0, 0, 0,
	208, 0, 0, 0, 0, 278, 0, 325, 196, 216,
	152, 130, 146, 163, 195, 253, 0, 300, 0, 0,
	0, 0, 0, 171, 0, 292, 261, 349, 0, 0,
	291, 219, 339, 0, 0, 348, 0, 0, 358, 363,
	0, 0, 0, 315, 182, 179, 0, 0, 137, 0,
	275, 176, 211, 0, 0, 0, 167, 0, 0, 0,
	314, 336, 134, 239, 337, 362, 154, 331, 240, 246,
	164, 166, 165, 147, 309, 335, 159, 169, 319, 296,
	0, 175, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 354, 0, 303, 302, 0, 203, 0, 0, 0,
	284, 0, 209, 136, 327, 365, 153, 213, 332, 0,
	191, 252, 173, 262, 263, 0, 132, 280, 233, 234,
	232, 235, 194, 0, 0, 0, 282, 305, 334, 155,
	322, 0, 0, 0, 0, 294, 0, 0, 0, 225,
	185, 188, 197, 204, 0, 289, 323, 355, 0, 149,
	138, 328, 347, 160, 304, 307, 364, 290, 141, 345,
	324, 237, 0, 0, 139, 0, 140, 287, 0, 0,
	174, 256, 0, 193, 277, 342, 343, 172, 366, 150,
	357, 143, 0, 356, 249, 0, 248, 359, 338, 346,
	238, 227, 0, 142, 344, 236, 226, 214, 187, 199,
	273, 221, 274, 200, 244, 243, 245, 223, 0, 0,
	0, 0, 320, 352, 367, 326, 157, 0, 308, 333,
	0, 281, 158, 192, 186, 272, 247, 151, 202, 317,
	212, 220, 286, 0, 260, 293, 161, 351, 316, 183,
	330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 0, 0, 0, 0, 215, 168, 0, 180, 170,
	222, 0, 0, 0, 0, 264, 329, 0, 0, 0,
	0, 218, 0, 0, 0, 318, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 133, 144, 217, 0,
	283, 190, 0, 0, 0, 128, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 350, 268, 285, 306, 0, 276,
	0, 353, 178, 0, 0, 0, 0, 145, 156, 162,
	177, 184, 189, 198, 201, 205, 206, 207, 210, 224,
	228, 229, 230, 231, 250, 251, 254, 255, 258, 259,
	265, 266, 267, 269, 270, 271, 279, 0, 288, 295,
	297, 298, 299, 301, 310, 311, 312, 313, 321, 340,
	341, 360, 361, 0, 0, 131, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 135, 0, 0, 0, 242,
	148, 0, 0, 0, 208, 0, 0, 0, 0, 278,
	0, 325, 196, 216, 152, 130, 146, 163, 195, 253,
	0, 300, 0, 0, 0, 0, 0, 171, 0, 292,
	261, 349, 0, 0, 291, 219, 339, 0, 0, 348,
	0, 0, 358, 363, 0, 0, 0, 315, 182, 179,
	0, 0, 137, 0, 275, 176, 211, 0, 0, 0,
	167, 0, 0, 0, 314, 336, 134, 239, 337, 362,
	154, 331, 240, 246, 164, 166, 165, 147, 309, 335,
	159, 169, 319, 296, 0, 175, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 354, 0, 303, 302, 0,
	203, 0, 0, 0, 284, 0, 209, 136, 327, 365,
	153, 213, 332, 0, 191, 252, 173, 262, 263, 0,
	132, 280, 233, 234, 232, 235, 194, 0, 0, 0,
	282, 305, 334, 155, 322, 0, 0, 0, 0, 294,
	0, 0, 0, 225, 185, 188, 197, 204, 0, 289,
	323, 355, 0, 149, 138, 328, 347, 160, 304, 307,
	364, 290, 141, 345, 324, 237, 0, 0, 139, 0,
	140, 287, 0, 0, 174, 256, 0, 193, 277, 342,
	343, 172, 366, 150, 357, 143, 0, 356, 249, 0,
	248, 359, 338, 346, 238, 227, 0, 142, 344, 236,
	226, 214, 187, 199, 273, 221, 274, 200, 244, 243,
	245, 223, 0, 0, 0, 0, 320, 352, 367, 326,
	157, 0, 308, 333, 0, 281, 158, 192, 186, 272,
	247, 151, 202, 317, 212, 220, 286, 0, 260, 293,
	161, 351, 316, 183, 330, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 0, 0, 0, 0, 215,
	168, 0, 180, 170, 222, 0, 0, 0, 0, 264,
	329, 0, 0, 0, 0, 218, 0, 0, 0, 318,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	133, 144, 217, 0, 283, 190, 0, 0, 0, 538,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 350, 268,
	285, 306, 0, 276, 0, 353, 178, 0, 0, 0,
	0, 145, 156, 162, 177, 184, 189, 198, 201, 205,
	206, 207, 210, 224, 228, 229, 230, 231, 250, 251,
	254, 255, 258, 259, 265, 266, 267, 269, 270, 271,
	279, 0, 288, 295, 297, 298, 299, 301, 310, 311,
	312, 313, 321, 340, 341, 360, 361, 0, 0, 131,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 135,
	0, 0, 0, 242, 148, 0, 0, 0, 208, 0,
	0, 0, 0, 278, 0, 325, 196, 216, 152, 130,
	146, 163, 195, 253, 0, 300, 0, 0, 0, 0,
	0, 171, 0, 292, 261, 349, 0, 0, 291, 219,
	339, 0, 0, 348, 0, 0, 358, 363, 0, 0,
	0, 315, 182, 179, 0, 0, 137, 0, 275, 176,
	211, 0, 0, 0, 167, 0, 0, 0, 314, 336,
	134, 239, 337, 362, 154, 331, 240, 246, 164, 166,
	165, 147, 309, 335, 159, 169, 319, 296, 0, 175,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 354,
	0, 303, 302, 0, 203, 0, 0, 0, 284, 0,
	209, 136, 327, 365, 153, 213, 332, 0, 191, 252,
	173, 262, 263, 0, 132, 280, 233, 234, 232, 235,
	194, 0, 0, 0, 282, 305, 334, 155, 322, 0,
	0, 0, 0, 294, 0, 0, 0, 225, 185, 188,
	197, 204, 0, 289, 323, 355, 0, 149, 138, 328,
	347, 160, 304, 307, 364, 290, 141, 345, 324, 237,
	0, 0, 139, 0, 140, 287, 0, 0, 174, 256,
	0, 193, 277, 342, 343, 172, 366, 150, 357, 143,
	0, 356, 249, 0, 248, 359, 338, 346, 238, 227,
	0, 142, 344, 236, 226, 214, 187, 199, 273, 221,
	274, 200, 244, 243, 245, 223, 0, 0, 0, 0,
	320, 352, 367, 326, 157, 0, 308, 333, 0, 281,
	158, 192, 186, 272, 247, 151, 202, 317, 212, 220,
	286, 0, 260, 293, 161, 351, 316, 183, 330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 0,
	0, 0, 0, 215, 168, 0, 180, 170, 222, 0,
	0, 0, 0, 264, 329, 0, 0, 0, 0, 218,
	0, 0, 0, 318, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 133, 144, 217, 0, 283, 190,
	0, 0, 0, 538, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 350, 268, 285, 306, 0, 276, 0, 353,
	178, 0, 0, 0, 0, 145, 156, 162, 177, 184,
	189, 198, 201, 205, 206, 207, 210, 224, 228, 229,
	230, 231, 250, 251, 254, 255, 258, 259, 265, 266,
	267, 269, 270, 271, 279, 0, 288, 295, 297, 298,
	299, 301, 310, 311, 312, 313, 321, 340, 341, 360,
	361, 0, 0, 131, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 135, 0, 0, 0, 242, 148, 0,
	0, 0, 208, 0, 0, 0, 0, 278, 0, 325,
	196, 216, 152, 130, 146, 163, 195, 253, 0, 300,
	0, 0, 0, 0, 0, 171, 0, 292, 261, 349,
	0, 0, 291, 219, 339, 0, 0, 348, 0, 0,
	358, 363, 0, 0, 0, 315, 182, 179, 0, 0,
	137, 0, 275, 176, 211, 0, 0, 0, 167, 0,
	0, 0, 314, 336, 134, 239, 337, 362, 154, 331,
	240, 246, 164, 166, 165, 147, 309, 335, 159, 169,
	319, 296, 0, 175, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 354, 0, 303, 302, 0, 203, 0,
	0, 0, 284, 0, 209, 136, 327, 365, 153, 213,
	332, 0, 191, 252, 173, 262, 263, 0, 132, 280,
	233, 234, 232, 235, 194, 0, 0, 0, 282, 305,
	334, 155, 322, 0, 0, 0, 0, 294, 0, 0,
	0, 225, 185, 188, 197, 204, 0, 289, 323, 355,
	0, 149, 138, 328, 1296, 160, 304, 307, 364, 290,
	141, 345, 324, 237, 0, 0, 139, 0, 140, 287,
	0, 0, 174, 256, 0, 193, 277, 342, 343, 172,
	366, 150, 357, 143, 0, 356, 249, 0, 248, 359,
	338, 346, 238, 227, 0, 142, 344, 236, 226, 214,
	187, 199, 273, 221, 274, 200, 244, 243, 245, 223,
	0, 0, 0, 0, 320, 352, 367, 326, 157, 0,
	308, 333, 0, 281, 158, 192, 186, 272, 247, 151,
	202, 317, 212, 220, 286, 0, 260, 293, 161, 351,
	316, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 515, 0, 0, 0, 168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2395, 0, 0, 0, 0,
	0, 0, 0, 0, 520, 0, 0, 0, 133, 144,
	217, 0, 283, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	487, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 353, 178, 0, 0, 0, 0, 145,
	156, 162, 177, 184, 189, 198, 201, 205, 206, 207,
	210, 224, 228, 229, 230, 231, 250, 251, 254, 255,
	258, 259, 265, 266, 267, 269, 270, 271, 279, 0,
	288, 295, 297, 298, 299, 301, 310, 311, 312, 313,
	321, 340, 341, 360, 361, 519, 0, 131, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 135, 0, 0,
	0, 0, 486, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 489, 0, 0, 0, 0, 0, 0, 0,
	0, 506, 0, 0, 481, 0, 478, 0, 0, 0,
	0, 0, 0, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 515, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2393, 0, 0, 0, 0,
	0, 492, 490, 0, 520, 0, 493, 0, 0, 0,
	0, 0, 498, 472, 0, 500, 0, 0, 0, 0,
	0, 0, 480, 469, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 484, 502, 0,
	487, 0, 0, 0, 0, 482, 483, 485, 504, 0,
	505, 511, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 36, 0, 72, 39, 40,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 59,
	0, 0, 0, 0, 0, 78, 0, 0, 41, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 519, 0, 0, 0, 0,
	0, 0, 0, 0, 473, 0, 0, 81, 0, 0,
	0, 0, 486, 470, 491, 0, 0, 0, 0, 0,
	0, 0, 489, 0, 0, 0, 0, 0, 0, 0,
	0, 506, 0, 2809, 481, 0, 478, 0, 3031, 0,
	0, 0, 0, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 512, 513, 0, 0, 0,
	0, 474, 475, 476, 477, 479, 494, 495, 496, 497,
	509, 508, 507, 510, 514, 517, 516, 518, 0, 0,
	0, 492, 490, 0, 0, 0, 493, 0, 0, 0,
	0, 0, 498, 472, 0, 500, 0, 0, 0, 0,
	0, 0, 0, 469, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 484, 502, 43,
	74, 46, 45, 48, 0, 482, 483, 485, 504, 0,
	505, 511, 0, 0, 2810, 36, 0, 72, 39, 40,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 59,
	49, 77, 76, 0, 0, 78, 0, 47, 41, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 503, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 81, 0, 0,
	0, 0, 471, 0, 473, 0, 0, 0, 57, 58,
	0, 2811, 499, 501, 491, 0, 0, 0, 0, 0,
	0, 0, 0, 2809, 0, 66, 0, 67, 3025, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 68, 0, 0, 512, 513, 0, 0, 0,
	0, 474, 475, 476, 477, 479, 494, 495, 496, 497,
	509, 508, 507, 510, 514, 517, 516, 518, 0, 0,
	2812, 75, 0, 53, 54, 61, 0, 62, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 43,
	74, 46, 45, 48, 0, 36, 0, 72, 39, 40,
	0, 0, 0, 36, 2810, 72, 39, 40, 0, 59,
	0, 0, 0, 0, 0, 78, 0, 59, 41, 0,
	49, 77, 76, 78, 0, 0, 41, 47, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 81, 0, 0,
	73, 503, 0, 0, 0, 81, 3000, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 57, 58,
	0, 2811, 471, 2809, 0, 0, 0, 0, 3011, 0,
	0, 2809, 499, 501, 0, 66, 0, 67, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 79,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 68, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2812, 75, 0, 53, 54, 61, 0, 62, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 43,
	74, 46, 45, 48, 0, 0, 0, 43, 74, 46,
	45, 48, 0, 36, 2810, 72, 39, 40, 0, 0,
	0, 36, 2810, 72, 39, 40, 0, 59, 0, 0,
	49, 77, 76, 78, 0, 59, 41, 47, 49, 77,
	76, 78, 0, 0, 41, 47, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 0, 0, 0, 0,
	73, 0, 0, 81, 0, 0, 0, 0, 57, 58,
	0, 2811, 0, 0, 0, 0, 57, 58, 0, 2811,
	0, 2809, 0, 0, 0, 66, 2942, 67, 0, 2809,
	0, 0, 0, 66, 0, 67, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 79,
	0, 0, 68, 0, 0, 0, 0, 0, 0, 0,
	68, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2812, 75, 0, 53, 54, 61, 0, 62, 2812, 75,
	0, 53, 54, 61, 0, 62, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 43, 74, 46,
	45, 48, 0, 0, 0, 43, 74, 46, 45, 48,
	0, 0, 2810, 0, 0, 0, 0, 0, 0, 0,
	2810, 0, 0, 0, 0, 0, 0, 0, 49, 77,
	76, 0, 0, 0, 0, 47, 49, 77, 76, 0,
	0, 0, 0, 47, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	73, 0, 0, 0, 0, 0, 0, 0, 73, 0,
	0, 0, 0, 0, 0, 0, 57, 58, 0, 2811,
	0, 0, 0, 0, 57, 58, 0, 2811, 0, 0,
	0, 0, 0, 66, 0, 67, 0, 0, 0, 0,
	0, 66, 0, 67, 0, 0, 0, 0, 0, 79,
	0, 0, 0, 0, 0, 0, 0, 79, 0, 0,
	68, 0, 0, 0, 0, 0, 0, 0, 68, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2812, 75,
	0, 53, 54, 61, 0, 62, 2812, 75, 0, 53,
	54, 61, 0, 62, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 73, 0,
	0, 0, 0, 0, 0, 0, 73, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 79, 0, 0,
	0, 0, 0, 0, 0, 79,
}

var yyPact = [...]int{
	4419, -1000, -413, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2036, -1000, -1000, -1000, -1000,
	-1000, -1000, 1040, 245, -1000, 268, 171, 35435, 615, 3131,
	36283, -1000, -1000, -1000, 181, 415, 36283, 443, 439, 1420,
	1910, 1419, 19, -69, -72, 135, 27245, 26654, 6, -1000,
	2084, 2087, -1000, -1000, 550, 23, -1000, -1000, -1000, 23712,
	218, -1000, -1000, 2013, 2034, 1813, -1000, 15485, 550, 550,
	35011, 34587, -1000, 2082, 36283, 13711, -1000, 607, 588, -190,
	544, 544, 256, 544, 544, 614, -1000, 293, 1061, -1000,
	-1000, -1000, -1000, 1055, 36283, 30543, 546, 35859, 546, 546,
	546, 546, 546, 546, 546, 36283, -1000, 715, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 36283, 1418,
	1940, 1094, 104, -1000, -1000, -1000, 1079, -1000, 363, 335,
	331, 333, 120, 1118, 2010, -1000, 1481, 2013, 2013, -1000,
	-1000, -1000, -1000, -1000, -1000, 852, 340, 585, 248, 218,
	1053, 1978, 1939, 1937, 1335, 1933, 605, 1932, 1732, -49,
	-1000, 1412, 36283, -1000, -1000, 1274, 1268, 1780, 1576, 566,
	1778, -1000, -1000, 369, 481, 1709, 440, 1709, 1709, 1709,
	1709, 1709, -109, 1709, 1709, 1709, 77, 1709, 150, 1709,
	1709, 1709, 1709, 1709, 1424, -1000, -1000, -1000, 382, 1574,
	1624, 1776, 494, -1000, -1000, -1000, -1000, 1741, 1998, 612,
	-1000, -147, 1652, 24886, -1000, 1481, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1447, -1000, 1935, 1192, 19007, 1865, -1000, -1000, 1153,
	2071, -1000, 21945, 710, -1000, 19007, 1473, 1481, -1000, -1000,
	1481, -1000, -1000, -1000, 670, -1000, -1000, 21355, 21355, 21355,
	21355, 21355, 21355, 21355, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1481, 1481,
	1481, 1481, 1481, 1481, 1481, 1481, 1481, 1481, 1481, 1481,
	1481, 1481, 1481, 1481, 1481, 1481, 1481, 1481, 1481, -1000,
	-1000, 1481, -1000, 14898, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1481, 1481, 1481, 1481,
	1481, 1481, 1481, 1481, 1481, 1481, 19007, 1481, 1481, 1481,
	1481, 1481, 1481, 1481, 1481, 1481, 1481, 1481, 1481, 1481,
	1481, 1481, 1481, 1481, 1481, 1481, 1481, 1481, 1481, 1481,
	1481, 1481, 34163, 31130, 36283, 1593, 1569, -1000, -1000, 709,
	1673, -89, 37131, -1000, -1000, -1000, -1000, 36707, 30119, 1050,
	-1000, -1000, -1000, -1000, 1931, -1000, -1000, 681, -1000, 2036,
	-1000, -1000, 1543, 519, -1000, 5074, 4783, -1000, -1000, -1000,
	1729, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 35859, 36283, 225,
	1411, 1083, 1410, 36707, 36707, -1000, 231, 30543, 30543, 544,
	276, 30543, 221, 1672, 583, 1670, 580, 1422, 36283, 1961,
	1768, 36283, 1409, 1408, 36707, 36707, 30543, 30543, -1000, 13105,
	1669, -1000, 1094, -1000, 5474, 19007, 544, 544, 36283, 36283,
	36283, 36283, 36283, -1000, -1000, 1094, 1094, 1094, 1094, 1056,
	2068, 1056, -1000, 1056, -1000, -1000, 19007, -1000, 21355, 29695,
	876, -1000, -1000, 36283, -1000, 1407, 339, -1000, -1000, -1000,
	-1000, -1000, -1000, 1401, -1000, 1918, 605, 605, -1000, 1347,
	605, 1644, -1000, 1039, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 605, -1000, 18420, -392,
	-1000, -1000, 1668, -1000, 292, -1000, -1000, 373, 373, 196,
	30543, 30543, 30543, -1000, 1709, 35859, -1000, 1709, 1709, 1709,
	-123, 1709, 1709, -1000, -1000, 1709, -1000, -1000, -1000, -1000,
	-1000, 1709, -1000, -1000, -1000, 1709, 1709, -1000, 1709, 1709,
	-1000, -1000, -1000, -1000, -1000, 30543, 373, 163, 1654, 373,
	30543, 30543, -1000, 52, 50, 45, 43, -1000, -1000, -1000,
	-1000, 40, 39, -1000, -1000, 1813, -1000, -1000, 218, -1000,
	-1000, 36283, -94, 24886, 1652, 1995, 11287, -1000, -1000, 1140,
	2078, 934, 1621, -1000, -1000, 1650, -1000, 1170, 680, 1278,
	1826, -1000, -1000, -1000, 36283, -1000, 19007, 19007, 19007, 1306,
	-1000, 25473, -1000, -1000, -1000, -1000, 10681, 946, 21355, 1185,
	1036, 21355, 21355, 21355, 21355, 21355, 21355, 21355, 21355, 21355,
	21355, 21355, 21355, 21355, 21355, 21355, 1253, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1394, -1000, 218, 1480, 1480,
	767, 767, 767, 767, 767, 767, 27832, 1989, 16659, 16659,
	16659, 1989, 16659, 16659, 16659, 16659, 1989, 1989, 16659, 16659,
	16659, 16659, 35859, 35859, 1989, 16659, 16659, 16659, 1989, 1447,
	1541, 1276, 14898, 16659, 16659, 1447, 19007, 19007, 17833, 17246,
	19594, 16659, 1989, 1076, 1276, 36707, -1000, -1000, 20768, -1000,
	-1000, -1000, -1000, -1000, 1447, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 16659, 16659, 16659, 16659, 1447, 1447, 16659,
	16659, 16659, 16659, 16659, 1447, 1447, 1447, 1447, 907, 36283,
	-1000, 1604, 1724, -1000, -1000, -1000, 1994, 28847, -1000, 23125,
	-1000, 1481, 907, 1492, 31130, 36283, -1000, -1000, 31130, 36283,
	10075, 33739, 1630, -1000, -125, -150, -89, -1000, -1000, 783,
	-1000, -1000, -1000, 14304, -1000, 11893, 2013, 1813, 7045, 12499,
	-1000, 4783, 1729, -1000, -52, -1000, -1000, -1000, 1683, -1000,
	1683, 304, -17, 1683, 1683, 1683, 1683, 1683, -15, -15,
	-15, -15, -16, -1000, -1000, -1000, -1000, -1000, 1726, 1725,
	-1000, 1683, 1683, 1683, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1700, 313, 1685, 1685, 1685, 1685, 1685,
	429, 429, -1000, 19007, 1747, 1992, 568, 276, 1951, 1960,
	1951, 327, -1000, 679, 1722, -1000, 677, 300, 1586, -1000,
	169, 1474, 36283, -1000, -1000, -1000, -1000, -1000, 36283, 36283,
	30543, 30543, 30543, 549, -1000, 36283, 1647, -1000, -1000, -1000,
	-1000, -1000, 1605, -1000, 1474, -1000, -1000, -1000, -1000, -1000,
	1346, 1276, 1393, 1392, 1978, -1000, -1000, -1000, 1063, -1000,
	-1000, -1000, -1000, 1094, 36283, 36283, 36283, 1978, 1094, 1276,
	756, 1748, 1481, 1447, -1000, -1000, -1000, 1385, -1000, 21355,
	1644, 1644, -1000, 1644, 605, 1480, 1644, -1000, 1537, 1138,
	1344, 36283, -1000, 24886, -51, -1000, -155, 33315, -1000, -1000,
	-1000, 33315, -1000, 77, 193, -1000, 578, -1000, 1520, -1000,
	-1000, -1000, -1000, 1709, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 33315, 114, 149, 33315, 1605, 2066, -1000,
	-1000, -1000, -1000, 2009, -1000, 1989, 1447, 278, -1000, -1000,
	-1000, 1481, 1466, 675, -1000, 32728, -1000, 1822, 1192, 1192,
	19007, -1000, -1000, -1000, 11893, 2012, -1000, 1841, 1835, 1718,
	-1000, -1000, 946, 1080, 1068, -1000, -1000, 1275, -1000, -1000,
	-1000, -1000, 674, 1481, -1000, 911, -1000, -1000, -1000, -1000,
	1185, 21355, 21355, 21355, 756, 911, 3557, 1635, 3004, 767,
	975, 975, 841, 841, 841, 841, 841, 988, 988, -1000,
	-1000, -1000, 1447, -1000, -1000, -1000, 16659, 1515, -1000, -1000,
	1276, 673, 1515, 1515, 16659, 1515, 1515, 1515, 1515, 16659,
	16659, 1515, 1515, 1515, 1515, 1634, 1632, 16659, 1515, 1515,
	1515, 16659, -1000, 19007, -1000, 1447, 1515, 1515, -1000, 1074,
	1285, 829, 2065, 1515, 824, 2061, 1515, 1498, 21355, 21355,
	21355, 1515, 16659, 1088, -1000, 19007, 1447, -1000, 957, 1515,
	1447, 1631, 1515, 1515, -206, -206, 1447, 1515, 1447, 1515,
	1515, -206, -206, -206, -206, 213, 1481, -1000, 11893, 31130,
	31130, 31130, 31130, 31130, -1000, 1804, 1803, -1000, 1800, 1794,
	1807, 24886, 1517, 1447, 316, 28847, -1000, 1481, -1000, 24299,
	772, 606, 600, 599, 16659, 2043, 31130, 1539, -1000, 1539,
	-1000, 668, -1000, -1000, 36707, -89, -135, -1000, -1000, 1630,
	-1000, 1272, -1000, -1000, 1276, -1000, 666, 1935, 1989, 1612,
	6439, -1000, -1000, -1000, -1000, 519, -1000, -1000, -1000, 1708,
	4491, -1000, 1872, 742, 742, 851, 1358, 1857, -1000, -1000,
	189, -62, -1000, -1000, -1000, 1261, -15, -15, 1683, 1683,
	303, 1683, -1000, -15, -1000, -1000, -1000, 937, 1930, 933,
	929, 926, 916, -15, 1343, 1343, -1000, -1000, -1000, -1000,
	1257, -1000, 1700, -1000, 1241, -1000, -1000, -1000, -1000, -1000,
	-1000, 1250, 1767, 35859, -1000, 36283, -1000, 1951, -1000, -1000,
	-1000, 134, -1000, -1000, -1000, 2048, -1000, -1000, 35859, 29271,
	35859, -1000, -1000, 73, 30543, 170, 405, 211, -1000, 574,
	-1000, 571, -1000, -1000, -1000, -1000, -1000, -1000, 36283, 30543,
	-1000, -1000, -1000, -1000, 2043, 1382, 1380, -1000, -1000, -1000,
	1056, 1094, -1000, -1000, 21355, 30543, -1000, 326, -1000, 911,
	-1000, -1000, -1000, 907, 609, -1000, -1000, -146, -1000, -1000,
	562, 657, 643, 556, -1000, 98, 30543, -1000, 35859, -1000,
	2060, 2058, 113, 2057, 30543, -1000, 27, 1826, -1000, 1611,
	-1000, 788, 557, 867, 419, 419, -1000, 1026, 419, 1925,
	1923, 903, -1000, 205, -1000, 11287, 11287, 1610, 1342, 1341,
	-1000, 1820, -1000, -1000, -1000, 36283, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 9469, 16659, -1000, 756, 911,
	3444, -1000, 21355, -1000, 1515, 16659, -206, 8863, -206, -206,
	1515, -1000, -1000, -206, -206, 1515, 1515, -206, -206, -206,
	-206, 21355, 21355, 1515, -206, -206, -206, 1447, 1276, -1000,
	-1000, -1000, 418, 1253, 418, 21355, 21355, -1000, 21355, 21355,
	-1000, -1000, 21355, 3349, 3322, 3302, -247, 1622, 1066, -1000,
	19007, 1217, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 32304,
	-1000, -206, -206, -206, -206, -206, -1000, -1000, -1000, -1000,
	1764, 11893, 1481, 7651, -1000, 35859, 1620, -1000, 1035, 1031,
	1724, 1707, 1762, 1648, -1000, -1000, -1000, -1000, 1793, -1000,
	1791, -1000, -1000, 1675, -1000, -1000, 1609, 1481, 35859, 21355,
	772, -1000, 1481, 1481, 1481, 1447, 2036, 19007, 1539, -1000,
	-1000, 875, -1000, -1000, -159, -160, -1000, -1000, -1000, 11287,
	-1000, 7045, -1000, 7045, -1000, 26060, 529, 1875, 531, 1358,
	1358, -1000, -1000, 1358, -1000, 1358, -1000, -1000, -1000, 1698,
	-1000, 1145, -1000, -1000, -1000, -1000, -1000, 1481, -405, 1240,
	21355, 2077, -1000, 1871, -1000, 1869, 1868, 1340, -1000, -1000,
	1477, 885, 881, -15, -1000, -1000, 1683, -1000, 865, -1000,
	-1000, 914, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	863, 1500, -1000, 1476, 1607, -1000, 1471, 124, 36283, -1000,
	-1000, 1979, -1000, -1000, -1000, 1929, 1026, 1026, 1026, 1758,
	-1000, -1000, -1000, -1000, 1472, 1606, -1000, 5074, 35859, 35859,
	35859, -1000, -253, 143, -1000, 30543, 128, 169, 427, 1377,
	36283, 30543, -1000, -1000, -1000, -1000, -1000, 1978, -1000, 911,
	1474, -1000, -1000, -15, 36283, -1000, 30543, 855, 31717, 30543,
	109, 190, -1000, 30543, 30543, 2055, 30543, 1605, 1339, 1718,
	278, 3859, 1358, 584, -1000, -1000, 428, -1000, 3536, 1857,
	1375, 37733, 37533, 35859, 1856, 1850, 1374, 36283, 35859, -1000,
	-1000, 5073, 1373, 19007, -1000, 35859, -1000, -1000, 35859, 630,
	-1000, 35859, -1000, -1000, -1000, -1000, 1148, 15485, -1000, -1000,
	1447, -1000, 21355, 911, -206, -1000, -1000, -1000, -1000, 618,
	-1000, -1000, -206, -1000, -1000, -206, -206, -1000, -1000, -1000,
	-1000, 3159, 2140, -206, -1000, -1000, -1000, -1000, 1447, 1683,
	1683, -1000, 1683, 1685, -1000, 1683, 10, 1683, 8, 1447,
	1447, 3066, 2727, 2697, 1808, 957, 21355, 21355, 21355, 1481,
	-202, -1000, 1276, 19007, -1000, -1000, 1372, -1000, -1000, -1000,
	-1000, -1000, -1000, 1956, 1562, 1600, -1000, -1000, 16072, 1447,
	1833, 1466, -1000, 23712, 1463, -1000, 2036, 11893, 19007, 19007,
	-1000, -1000, 19007, 1684, -1000, 19007, -1000, -1000, -1000, -1000,
	35859, 315, -1000, 19007, 1463, 782, -1000, 35859, 35859, 35859,
	-1000, 2013, 1276, -1000, -1000, -1000, -1000, 6439, -1000, 1461,
	-1000, 1683, 1683, 1849, -1000, 742, -1000, -1000, -1000, -1000,
	-1000, 35859, -1000, 21355, 1977, -1000, 911, -113, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 850, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -15, 1337, -15, 1229, -1000,
	1223, -1000, -1000, -344, 1678, 218, -1000, 1026, 912, 895,
	1336, 36283, 144, 29271, -1000, 5074, 5074, 5074, 110, 119,
	-1000, 1120, -1000, -1000, -1000, 1333, 1332, 1330, 1474, 173,
	1116, 155, -1000, 1981, -1000, -1000, 1094, -77, -1000, 190,
	-1000, -1000, -1000, 190, -1000, -1000, 137, 1605, 1605, 30543,
	1605, -1000, -1000, -1000, 5073, 518, 5074, 5074, 1747, 742,
	1848, 531, -1000, -1000, -1000, -1000, -1000, -1000, 1368, -1000,
	720, -1000, 552, 518, 5073, 1276, 790, 1129, 11287, -1000,
	2053, -1000, -1000, -1000, 911, -1000, 8257, -1000, -1000, -1000,
	21355, 21355, -1000, -1000, -1000, 311, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 21355, 21355, 21355, 21355, -1000, 957,
	957, 957, 21355, 1447, 1329, 1276, 899, -1000, 1844, -1000,
	1481, -1000, -1000, 1481, 203, -1000, 35859, 2013, -1000, 1276,
	1276, 1276, 35859, 1276, 1458, -1000, 1481, 22535, -1000, 24886,
	1452, 1452, 1452, -1000, 689, 26060, 1955, 1955, 1358, 1358,
	1450, 957, 1481, -1000, 1481, 1481, -1000, -1000, 765, -1000,
	762, 1467, 1455, -1000, 26060, -1000, -1000, 873, -1000, -1000,
	-1000, -1000, -1000, 2008, -1000, 144, -1000, 1326, 267, 285,
	-1000, 262, 260, 259, 236, 222, -1000, -1000, -1000, -1000,
	423, 110, -1000, -78, 1215, 981, 1922, 119, -1000, 1209,
	1201, 1199, 1196, 194, -1000, -1000, -1000, -1000, 206, 169,
	-1000, 426, 1325, -1000, 1901, 1886, 1976, 1976, 105, 1605,
	1618, 1453, -1000, -1000, 1367, -1000, -1000, 1677, 1358, 1358,
	-1000, 1357, -1000, -1000, 35859, -1000, 518, 1950, 1948, 1481,
	-1000, 2043, 31130, 15485, -1000, -1000, 957, 957, -1000, -1000,
	957, 957, 957, 957, -1000, -1000, -1000, 185, -1000, -1000,
	2036, 2033, 2075, -1000, 1600, 1481, -1000, 218, -1000, -1000,
	1446, -1000, 35859, -1000, -1000, 772, -1000, -1000, -1000, 689,
	-1000, 1356, 1026, 1324, -1000, -1000, -1000, -1000, -1000, 394,
	-408, 21355, -1000, -1000, -1000, -1000, -1000, -1000, 1444, -1000,
	218, -1000, -1000, 318, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1907, 1906, 297, -1000, 1321, 1313, -1000, 392, 1348,
	717, -213, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 411, 1355, -1000, 154, -1000, -1000, 548,
	1877, 1879, 2031, -1000, 30543, -1000, -1000, 31130, -1000, -1000,
	189, 189, 26060, 1747, 1676, -1000, -1000, -1000, 21355, -1000,
	893, 2041, 1601, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1447, 200, -271, 983, 19007, 11893, 1600, 1447, -1000, -1000,
	-1000, -1000, -1000, 1181, -1000, 36283, -1000, -1000, -1000, 957,
	689, -1000, 310, 38435, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1175, -1000, -1000, 1305, 387, 116, -1000, 1964,
	-1000, 1675, 1161, 1886, 2029, 1884, 1881, -1000, 1311, -254,
	1539, 1441, 1649, 26060, 911, 1438, -1000, 35859, 2039, 2027,
	-1000, -1000, 1819, -250, -276, 1447, 172, 172, 1598, 1592,
	-1000, -1000, 1499, -408, -1000, 689, -1000, 305, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 19007,
	19007, 5833, 38435, 131, -1000, 123, -1000, -1000, -1000, 1308,
	-1000, 1013, -1000, 1304, -1000, 2020, 2016, -1000, 166, 2041,
	689, 26060, 1436, -1000, 893, 1832, -209, 19007, 19007, -1000,
	1817, -1000, -1000, -1000, 168, -1000, 971, 306, 956, -1000,
	1480, -1000, 35859, -1000, -1000, 1354, 1352, -1000, 1125, 1207,
	198, 191, 567, -1000, -1000, -1000, -1000, -414, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1280, 1273, 28256, 2039, -1000,
	1433, 689, -1000, 371, -1000, 35859, -1000, 1276, 1588, -1000,
	1276, -269, 1111, -1000, -1000, -1000, -1000, -1000, 35859, 1429,
	-1000, -1000, -1000, 1184, -1000, 19007, 38435, 2007, 2005, 1993,
	1947, 11287, 38427, -1000, -1000, -1000, -1000, 100, 1474, -209,
	689, -1000, 344, 1575, -1000, 1963, 19007, -273, 168, -1000,
	1757, 290, 1105, 38435, -1000, 1102, -415, 441, 218, 694,
	21355, -1000, -1000, -1000, 30543, -1000, -1000, 1481, 35859, 1481,
	-1000, -279, -1000, 1755, 1753, 2052, -1000, -1000, -1000, -1000,
	-1000, -1000, 38435, -1000, -416, 38435, 3054, -1000, -1000, -1000,
	38247, -1000, -1000, -1000, -1000, 183, -1000, -1000, 911, 1474,
	20181, -1000, -1000, -1000, -1000, 2054, -1000, 2073, 569, 569,
	-1000, -417, 38239, -418, 542, 38435, 1189, -1000, 19007, -1000,
	694, -1000, 957, 1447, -1000, -1000, -1000, 410, 1226, -1000,
	38059, 1100, 38435, -1000, -419, 540, 38435, -1000, 1090, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 37869, -1000, -420,
	38435, 516, 5484, -422, -1000, 509, 38435, -1000,
}

var yyPgo = [...]int{
	0, 2492, 2487, 103, 2481, 241, 2478, 2475, 88, 2472,
	20, 17, 15, 27, 2471, 2181, 2179, 2175, 2173, 2171,
	2470, 7, 2469, 2460, 2163, 2452, 2450, 2152, 2150, 2148,
	2146, 2447, 2446, 2445, 2134, 2129, 2127, 19, 2443, 24,
	2438, 4, 154, 177, 2437, 2, 2436, 2435, 8, 2433,
	2432, 2125, 2431, 2429, 2428, 94, 2425, 2121, 2119, 2423,
	2108, 2106, 2422, 2421, 2098, 2096, 2093, 2420, 190, 2419,
	2418, 2417, 186, 102, 164, 2416, 2414, 2413, 133, 85,
	2761, 129, 47, 117, 214, 2411, 38, 45, 245, 2410,
	2409, 149, 2408, 137, 2406, 170, 2405, 146, 185, 107,
	2404, 2403, 178, 2402, 2401, 2400, 140, 2398, 2397, 176,
	379, 2396, 2394, 163, 2393, 82, 173, 79, 40, 2389,
	2388, 2384, 2382, 2381, 29, 1176, 2380, 114, 152, 2375,
	2373, 87, 2372, 2370, 188, 2369, 2368, 2367, 145, 42,
	2365, 2364, 56, 2363, 97, 73, 2362, 63, 2361, 141,
	2360, 2357, 31, 14, 2356, 68, 2337, 49, 2333, 143,
	261, 384, 2332, 23, 13, 11, 2328, 34, 12, 22,
	44, 26, 64, 95, 131, 109, 2327, 51, 41, 125,
	106, 2326, 98, 113, 43, 2324, 165, 2323, 96, 166,
	135, 136, 159, 2319, 2314, 2313, 1211, 2307, 134, 93,
	2306, 126, 1118, 180, 122, 2305, 105, 2302, 2298, 2297,
	2296, 2291, 90, 118, 2290, 2287, 182, 181, 187, 46,
	32, 729, 1941, 25, 167, 2285, 55, 2282, 2281, 2279,
	3261, 116, 70, 110, 172, 2278, 115, 39, 50, 2277,
	2274, 2273, 2257, 2256, 2254, 1450, 2253, 2252, 2251, 2250,
	156, 65, 2247, 144, 142, 139, 2244, 157, 33, 2243,
	2240, 132, 108, 2239, 2237, 2234, 2231, 130, 74, 161,
	2229, 120, 151, 138, 2228, 75, 2227, 2226, 54, 52,
	2224, 2223, 2222, 101, 91, 2221, 69, 35, 36, 71,
	48, 2220, 2219, 72, 84, 2218, 30, 2211, 5, 3,
	6, 2208, 2207, 2206, 2205, 2203, 2202, 2200, 86, 2199,
	2196, 62, 2195, 2194, 2192, 37, 2189, 2188, 2187, 153,
	119, 58, 168, 111, 10, 2184, 2183, 9, 2177, 124,
	2165, 60, 2160, 57, 2158, 2156, 59, 2154, 2142, 61,
	2123, 2114, 171, 1810, 179, 2112, 175, 162, 53, 92,
	2110, 2104, 0, 1050, 183, 160, 2102, 2100,
}

var yyR1 = [...]int{
	0, 351, 351, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 67, 3, 3, 8,
	9, 4, 4, 4, 5, 89, 89, 182, 182, 182,
	182, 181, 181, 90, 90, 88, 88, 95, 6, 6,
	7, 7, 10, 10, 71, 71, 11, 12, 12, 12,
	12, 354, 354, 104, 104, 102, 102, 103, 103, 179,
	179, 13, 13, 13, 186, 186, 191, 191, 191, 194,
	194, 194, 194, 169, 170, 171, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 325, 325,
	334, 334, 334, 335, 335, 333, 333, 333, 333, 333,
	337, 337, 338, 338, 336, 336, 336, 336, 340, 340,
	341, 341, 339, 339, 339, 339, 339, 339, 339, 339,
	339, 339, 339, 339, 339, 339, 328, 328, 328, 34,
	34, 34, 34, 35, 35, 35, 35, 35, 35, 342,
	342, 342, 342, 342, 342, 342, 342, 342, 342, 342,
	342, 342, 342, 342, 342, 342, 342, 342, 342, 342,
	342, 342, 342, 342, 342, 342, 342, 342, 342, 342,
	343, 343, 344, 344, 345, 345, 346, 346, 346, 346,
	347, 347, 347, 347, 347, 348, 348, 348, 348, 348,
	348, 348, 349, 349, 350, 350, 2, 306, 306, 307,
	307, 308, 308, 308, 308, 309, 309, 310, 310, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 25,
	218, 218, 215, 215, 215, 216, 216, 217, 217, 217,
	327, 327, 327, 321, 321, 321, 323, 323, 322, 322,
	322, 324, 324, 329, 329, 329, 329, 329, 331, 331,
	331, 331, 331, 331, 332, 332, 332, 330, 330, 49,
	49, 50, 50, 50, 158, 158, 158, 14, 14, 14,
	14, 14, 20, 22, 22, 38, 38, 39, 23, 23,
	23, 23, 40, 40, 41, 26, 26, 26, 26, 26,
	26, 47, 47, 47, 46, 46, 45, 45, 45, 45,
	45, 45, 24, 24, 24, 24, 48, 48, 43, 43,
	42, 44, 44, 44, 44, 44, 44, 44, 44, 44,
	44, 44, 44, 27, 27, 27, 27, 27, 27, 19,
	305, 305, 305, 37, 37, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 53, 280, 281, 281, 281,
	281, 281, 281, 281, 281, 268, 268, 269, 258, 258,
	258, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 237, 237, 237, 237, 241, 241, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 240, 240,
	240, 240, 240, 240, 240, 240, 242, 242, 242, 242,
	242, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 244, 244,
	244, 244, 244, 244, 244, 244, 267, 267, 245, 245,
	261, 261, 262, 262, 262, 259, 259, 259, 260, 260,
	248, 249, 263, 250, 250, 250, 251, 251, 251, 252,
	252, 257, 257, 256, 256, 256, 256, 256, 256, 253,
	253, 253, 253, 254, 254, 255, 266, 266, 266, 266,
	266, 246, 36, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 292, 292, 208, 208, 209,
	209, 270, 270, 290, 290, 289, 289, 288, 288, 288,
	279, 279, 285, 285, 285, 285, 285, 285, 285, 285,
	274, 274, 274, 273, 273, 275, 275, 278, 278, 287,
	287, 286, 286, 271, 271, 271, 293, 293, 293, 293,
	293, 272, 272, 272, 272, 294, 276, 276, 277, 277,
	277, 299, 300, 298, 298, 298, 298, 298, 121, 121,
	121, 282, 282, 282, 283, 283, 283, 284, 284, 284,
	303, 303, 302, 302, 51, 52, 56, 56, 55, 55,
	55, 55, 55, 55, 55, 55, 55, 55, 55, 55,
	55, 55, 55, 55, 55, 55, 55, 55, 55, 55,
	55, 55, 55, 55, 157, 157, 157, 213, 213, 297,
	295, 295, 296, 296, 16, 16, 54, 54, 326, 326,
	17, 17, 17, 17, 17, 17, 17, 17, 17, 301,
	301, 301, 18, 18, 57, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	85, 200, 200, 199, 199, 198, 198, 198, 201, 201,
	201, 201, 235, 235, 235, 59, 59, 59, 63, 63,
	66, 66, 66, 64, 65, 28, 29, 29, 29, 29,
	30, 214, 214, 61, 61, 62, 62, 62, 62, 77,
	77, 356, 356, 60, 357, 68, 69, 69, 70, 70,
	70, 204, 204, 74, 74, 74, 72, 72, 72, 73,
	73, 79, 79, 83, 83, 83, 83, 82, 82, 82,
	82, 160, 160, 165, 227, 227, 141, 141, 161, 161,
	166, 166, 166, 167, 167, 168, 168, 168, 168, 168,
	163, 163, 162, 162, 164, 129, 129, 225, 225, 225,
	224, 224, 224, 224, 87, 87, 91, 91, 93, 93,
	93, 93, 93, 96, 143, 143, 114, 114, 115, 115,
	115, 115, 115, 127, 127, 178, 178, 177, 177, 180,
	180, 92, 94, 94, 94, 94, 99, 99, 100, 100,
	101, 101, 212, 212, 232, 232, 232, 105, 105, 105,
	107, 106, 106, 106, 106, 108, 108, 109, 109, 111,
	112, 112, 110, 110, 116, 116, 113, 117, 117, 117,
	117, 118, 118, 84, 84, 84, 84, 84, 84, 84,
	84, 197, 197, 120, 120, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 137, 137, 137, 137, 137,
	137, 122, 122, 122, 122, 122, 122, 122, 78, 78,
	138, 138, 138, 98, 97, 97, 81, 81, 80, 80,
	139, 139, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 132, 132, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 131, 131, 131,
	131, 131, 131, 131, 131, 131, 131, 131, 131, 131,
	131, 131, 131, 131, 355, 355, 134, 133, 133, 133,
	133, 133, 133, 75, 75, 75, 75, 75, 233, 233,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 150, 150, 76, 76, 148,
	148, 149, 151, 151, 147, 147, 147, 124, 124, 124,
	124, 124, 124, 124, 124, 126, 126, 126, 152, 152,
	140, 140, 86, 153, 153, 154, 155, 155, 156, 156,
	159, 172, 172, 172, 173, 173, 173, 173, 128, 128,
	174, 174, 174, 123, 123, 123, 123, 123, 123, 123,
	176, 176, 175, 175, 175, 175, 183, 183, 142, 142,
	145, 145, 144, 146, 184, 184, 188, 188, 185, 185,
	189, 189, 189, 189, 192, 192, 193, 193, 193, 190,
	190, 190, 187, 187, 187, 229, 229, 229, 195, 195,
	205, 205, 202, 202, 203, 203, 196, 196, 247, 247,
	247, 211, 211, 210, 210, 210, 206, 206, 206, 207,
	207, 226, 226, 222, 222, 228, 228, 223, 223, 230,
	230, 231, 231, 304, 304, 264, 264, 314, 314, 265,
	265, 315, 315, 317, 317, 312, 312, 313, 313, 316,
	316, 31, 318, 318, 319, 319, 320, 320, 320, 320,
	32, 33, 33, 33, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 352, 353,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 11, 5, 7, 1,
	5, 1, 14, 3, 13, 0, 2, 0, 2, 3,
	3, 1, 3, 2, 3, 1, 3, 4, 1, 3,
	1, 3, 7, 8, 1, 1, 9, 8, 7, 6,
	6, 1, 1, 1, 3, 1, 3, 1, 3, 0,
	4, 3, 4, 5, 1, 3, 3, 2, 2, 2,
	2, 2, 1, 0, 0, 0, 2, 3, 3, 11,
	9, 11, 5, 5, 16, 12, 9, 4, 0, 3,
	0, 2, 2, 1, 3, 1, 1, 2, 2, 2,
	0, 2, 1, 2, 2, 2, 2, 2, 0, 1,
	1, 2, 3, 3, 5, 3, 3, 4, 5, 4,
	4, 2, 2, 2, 2, 2, 0, 2, 2, 9,
	9, 5, 7, 7, 7, 7, 8, 4, 6, 2,
	3, 2, 3, 3, 3, 4, 3, 3, 2, 2,
	3, 2, 2, 2, 2, 2, 3, 2, 2, 2,
	3, 3, 2, 3, 3, 2, 2, 2, 2, 2,
	1, 3, 0, 3, 1, 3, 0, 1, 1, 1,
	1, 3, 1, 3, 3, 0, 2, 5, 5, 5,
	7, 5, 0, 3, 0, 3, 4, 0, 1, 1,
	3, 2, 3, 3, 3, 0, 1, 1, 2, 2,
	2, 2, 1, 2, 2, 3, 3, 3, 3, 4,
	2, 3, 3, 3, 3, 0, 3, 0, 3, 3,
	1, 1, 1, 3, 2, 1, 1, 3, 3, 2,
	1, 1, 3, 1, 2, 5, 4, 6, 4, 3,
	3, 6, 5, 5, 4, 3, 5, 1, 3, 1,
	1, 1, 1, 1, 0, 2, 2, 1, 1, 1,
	1, 1, 4, 5, 8, 1, 2, 5, 7, 10,
	8, 11, 1, 2, 5, 5, 5, 5, 6, 3,
	5, 1, 1, 1, 1, 3, 1, 1, 1, 2,
	1, 1, 2, 4, 2, 4, 2, 3, 1, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 4, 3, 2, 4, 3,
	0, 2, 3, 1, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 5, 4, 1, 1, 2,
	3, 4, 3, 3, 3, 3, 3, 3, 0, 1,
	1, 0, 2, 3, 2, 2, 2, 2, 2, 6,
	8, 3, 3, 1, 1, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	3, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	1, 4, 4, 3, 3, 2, 4, 5, 2, 3,
	4, 2, 2, 3, 3, 3, 3, 3, 4, 1,
	1, 1, 1, 1, 6, 6, 4, 4, 4, 5,
	3, 3, 3, 3, 3, 4, 6, 6, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 3,
	0, 5, 0, 3, 5, 0, 1, 1, 0, 1,
	2, 3, 1, 0, 3, 3, 0, 2, 2, 0,
	1, 0, 1, 1, 1, 1, 2, 2, 2, 5,
	5, 4, 4, 4, 4, 4, 2, 1, 2, 1,
	2, 2, 3, 2, 2, 2, 2, 1, 1, 1,
	1, 3, 2, 1, 1, 0, 3, 1, 1, 0,
	1, 5, 4, 0, 1, 1, 2, 2, 3, 2,
	0, 1, 3, 5, 3, 3, 5, 3, 2, 2,
	1, 1, 1, 1, 1, 0, 1, 0, 1, 1,
	3, 3, 3, 3, 3, 1, 10, 11, 11, 12,
	12, 3, 3, 2, 1, 5, 1, 1, 0, 2,
	2, 3, 3, 1, 1, 2, 2, 2, 0, 1,
	2, 0, 1, 3, 1, 2, 3, 1, 1, 1,
	0, 2, 0, 2, 1, 5, 1, 3, 5, 4,
	3, 5, 3, 8, 10, 3, 3, 3, 3, 3,
	5, 4, 5, 1, 2, 2, 4, 3, 6, 5,
	3, 9, 2, 2, 0, 1, 2, 0, 1, 7,
	1, 3, 8, 8, 3, 3, 3, 5, 3, 5,
	5, 5, 4, 4, 4, 4, 4, 4, 4, 0,
	1, 1, 3, 2, 3, 3, 4, 3, 5, 5,
	5, 4, 4, 4, 2, 2, 2, 6, 2, 4,
	4, 4, 5, 8, 6, 3, 5, 4, 2, 4,
	3, 2, 4, 5, 6, 2, 6, 6, 3, 3,
	3, 0, 1, 1, 1, 0, 2, 2, 0, 2,
	3, 2, 0, 1, 1, 2, 4, 1, 1, 1,
	2, 4, 4, 1, 1, 2, 3, 4, 4, 5,
	3, 1, 1, 3, 3, 1, 1, 1, 1, 0,
	3, 1, 1, 3, 0, 2, 0, 2, 1, 2,
	2, 0, 1, 0, 1, 1, 0, 1, 1, 0,
	1, 3, 5, 1, 1, 3, 5, 1, 2, 3,
	5, 2, 2, 6, 0, 1, 0, 3, 0, 1,
	0, 2, 2, 4, 1, 2, 2, 2, 2, 2,
	0, 2, 1, 3, 3, 1, 3, 0, 1, 2,
	1, 1, 1, 1, 1, 3, 1, 1, 1, 4,
	1, 3, 1, 2, 2, 4, 2, 6, 1, 4,
	6, 3, 2, 0, 3, 0, 3, 1, 3, 1,
	3, 4, 4, 4, 4, 3, 2, 4, 0, 1,
	0, 2, 0, 1, 1, 1, 1, 1, 2, 2,
	1, 2, 3, 2, 3, 2, 2, 1, 3, 3,
	2, 1, 1, 3, 1, 3, 3, 0, 5, 5,
	5, 0, 2, 1, 3, 3, 3, 2, 3, 1,
	2, 0, 3, 1, 1, 3, 3, 4, 4, 5,
	3, 4, 5, 6, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 0, 2,
	1, 1, 1, 3, 1, 3, 0, 1, 1, 3,
	1, 3, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 2, 2, 2, 2, 3,
	1, 1, 1, 1, 1, 1, 5, 6, 6, 6,
	5, 5, 5, 6, 5, 5, 6, 5, 5, 5,
	5, 6, 5, 5, 5, 4, 4, 5, 5, 5,
	5, 5, 4, 4, 4, 4, 4, 4, 4, 3,
	6, 6, 6, 8, 8, 8, 8, 4, 6, 7,
	7, 7, 9, 4, 7, 5, 4, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 8, 8, 0, 2, 3, 4, 4, 4,
	4, 4, 4, 0, 3, 4, 7, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 3, 3, 1, 2, 2, 1, 2,
	1, 2, 2, 1, 2, 0, 1, 0, 2, 1,
	2, 4, 0, 2, 1, 3, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 0, 3,
	1, 3, 1, 0, 2, 1, 0, 3, 1, 3,
	2, 0, 1, 1, 0, 2, 4, 4, 1, 1,
	0, 2, 4, 2, 4, 1, 3, 5, 4, 6,
	0, 3, 1, 3, 3, 5, 0, 5, 1, 3,
	1, 2, 3, 1, 1, 3, 3, 3, 1, 3,
	1, 2, 2, 3, 1, 1, 1, 1, 1, 3,
	3, 3, 1, 2, 1, 1, 1, 1, 1, 1,
	0, 1, 0, 2, 0, 3, 0, 1, 0, 3,
	3, 1, 1, 0, 1, 1, 1, 1, 1, 0,
	1, 0, 2, 1, 1, 1, 3, 1, 1, 1,
	1, 1, 1, 0, 2, 0, 1, 0, 4, 0,
	1, 0, 3, 0, 3, 0, 4, 0, 3, 0,
	3, 3, 1, 3, 2, 4, 1, 2, 1, 2,
	2, 2, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -351, -1, -3, -9, -10, -11, -12, -13, -15,
	-51, -16, -17, -18, -57, -58, -59, -63, -64, -65,
	-61, -60, -24, -27, -19, -67, -28, -29, -30, -31,
	-32, -33, -34, -35, -36, -4, 6, 7, -71, 9,
	10, 29, -53, 180, -52, 183, 182, 218, 184, 211,
	64, 341, -66, 344, 345, -356, -214, 269, 270, 20,
	37, 346, 348, 30, 31, 232, 286, 288, 313, -5,
	-90, -6, 8, 441, 181, 342, 213, 212, 26, 490,
	-352, 68, 611, -155, 15, -68, -357, -68, -68, -68,
	-68, -68, -280, -212, 108, 68, 23, -207, -218, 88,
	432, 188, -216, 282, 284, -205, -206, -215, 242, 252,
	44, 199, 198, 253, 189, 282, 189, 190, 192, 432,
	188, 225, 224, 282, 284, 189, -110, -230, 72, -220,
	202, 596, 307, 487, 253, 606, 294, 239, 341, 355,
	357, 349, 384, 372, 488, 548, 203, 264, 187, 340,
	370, 418, 201, 297, 257, 320, 549, 407, 413, 267,
	344, 427, 550, 204, 261, 263, 262, 247, 457, 268,
	36, 214, 368, 303, 361, 272, 242, 551, 543, 236,
	35, 27, 235, 430, 552, 331, 415, 389, 332, 553,
	492, 301, 414, 364, 313, 205, 199, 333, 554, 390,
	394, 555, 419, 287, 334, 556, 557, 558, 191, 293,
	559, 243, 421, 298, 388, 32, 200, 489, 48, 222,
	422, 392, 37, 398, 560, 330, 387, 382, 561, 562,
	563, 564, 311, 309, 310, 312, 386, 352, 381, 254,
	259, 53, 186, 396, 395, 397, 260, 417, 377, 375,
	565, 566, 302, 206, 567, 568, 362, 18, 569, 570,
	425, 217, 304, 305, 42, 571, 572, 573, 112, 574,
	575, 576, 416, 391, 393, 241, 116, 365, 196, 577,
	308, 412, 317, 491, 291, 113, 423, 358, 579, 336,
	348, 221, 216, 426, 326, 580, 270, 581, 582, 583,
	208, 584, 285, 284, 345, 318, 114, 346, 409, 265,
	585, 586, 587, 588, 251, 234, 429, 420, 52, 269,
	403, 589, 321, 337, 351, 198, 406, 295, 342, 43,
	7, 258, 299, 410, 319, 266, 252, 255, 379, 223,
	590, 591, 366, 367, 385, 350, 380, 343, 226, 218,
	111, 428, 404, 542, 282, 338, 374, 371, 229, 378,
	592, 593, 256, 230, 347, 296, 369, 405, 189, 133,
	373, 418, 180, 408, 409, 415, -274, 416, 224, 227,
	-235, 189, -200, 407, 287, 308, 462, 230, 231, 190,
	191, 32, 420, 419, 411, -230, 193, 347, -77, 184,
	219, -110, -48, 72, 271, -48, 29, 72, 72, 36,
	72, 346, 410, 410, 75, 491, 233, 21, -343, -324,
	317, -342, -322, 181, 180, 10, 182, 322, 323, 324,
	190, 8, 30, 578, 207, 325, 326, 6, 211, 327,
	328, 225, 9, 329, -327, 74, 72, -220, 21, -343,
	-324, 317, -209, -208, 339, 398, 6, -70, 5, -196,
	194, 343, -88, 547, -95, -232, -230, -221, 74, 300,
	210, 599, 290, 401, 458, 459, 460, 461, 233, 462,
	99, 231, 322, 323, 314, 324, 209, 117, 240, 219,
	279, 411, 278, 283, 463, 464, 465, 466, 289, 609,
	292, 610, 315, 578, 325, 327, 228, 469, 468, 467,
	470, 328, 452, 453, 471, 51, 473, 472, 474, 192,
	81, -8, -3, -173, 17, 16, -74, 54, 55, -69,
	-82, 124, -84, -230, -119, 91, -125, 28, 72, -220,
	24, -124, -221, -120, -147, -146, -98, 133, -234, 122,
	123, 130, 92, 176, -132, -130, -131, -133, -135, -136,
	74, 73, 82, 75, 76, 77, 78, 83, 458, 459,
	460, 461, 462, 209, 219, 463, 464, 465, 466, 469,
	468, 467, 470, 452, 453, 471, 473, 472, 474, 84,
	85, -222, -144, -352, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 58, 59, 188, 442,
	443, 444, 445, 446, 486, 450, 94, 47, 431, 440,
	439, 438, 436, 437, 433, 435, 434, 195, 432, 128,
	441, 475, 476, 477, 478, 479, 480, 481, 482, 484,
	485, 483, -196, -196, 11, -102, -103, -110, -113, -230,
	-185, 343, -192, -189, 419, 420, -190, -193, -187, -147,
	398, 575, 576, 418, 373, 417, -222, -230, -2, -5,
	6, -110, -281, -269, -272, -223, 204, -294, -222, -219,
	201, 72, -220, 493, 494, 300, 185, 210, 181, 90,
	599, 23, 25, 290, 401, 458, 93, 133, 459, 460,
	461, 16, 20, 94, 373, 132, 81, 442, 233, 462,
	180, 62, 495, 433, 435, 431, 432, 408, 496, 497,
	498, 28, 500, 10, 26, 212, 246, 22, 501, 126,
	359, 182, 237, 97, 98, 503, 99, 231, 215, 322,
	306, 323, 24, 213, 314, 85, 504, 324, 209, 360,
	505, 506, 117, 240, 19, 65, 219, 279, 11, 411,
	227, 605, 507, 286, 13, 456, 115, 278, 14, 508,
	509, 510, 511, 283, 195, 194, 110, 190, 60, 244,
	8, 512, 353, 513, 514, 515, 516, 517, 354, 176,
	87, 518, 519, 107, 520, 56, 463, 464, 544, 45,
	232, 545, 521, 522, 38, 523, 399, 58, 108, 17,
	436, 437, 30, 524, 525, 486, 465, 220, 546, 526,
	466, 527, 128, 249, 63, 50, 289, 91, 83, 609,
	33, 86, 66, 335, 88, 15, 245, 61, 454, 292,
	610, 315, 224, 578, 529, 248, 530, 547, 207, 109,
	325, 183, 531, 441, 316, 532, 288, 59, 533, 188,
	534, 6, 535, 451, 29, 211, 327, 536, 250, 271,
	537, 538, 228, 469, 468, 467, 470, 607, 57, 444,
	445, 471, 328, 594, 189, 96, 452, 453, 193, 225,
	84, 5, 44, 31, 9, 329, 64, 67, 438, 439,
	440, 47, 51, 539, 473, 472, 474, 192, 608, 95,
	12, 540, 455, 490, 424, 89, 541, 190, 192, 441,
	-203, 195, -203, 225, 224, -217, 250, -203, -203, 189,
	-216, 100, 100, -54, -110, -326, -321, -327, -202, 195,
	-222, -202, -202, -202, -202, -202, -202, -202, -110, 177,
	-102, 72, 29, -201, 108, 12, 432, 188, 189, 224,
	225, 192, -276, 11, 110, 228, 228, 228, 229, 228,
	-199, 410, 412, 226, 413, 414, 12, -85, 108, 19,
	-352, -173, -173, 125, 72, 346, 193, -62, -3, -12,
	-10, -11, -8, 100, -127, 23, 29, 29, 74, 51,
	29, -43, -42, -44, 257, 258, 259, 260, 261, 262,
	263, 264, 265, 266, 267, 268, 29, -305, 68, -264,
	398, 72, -318, -319, -110, 75, 75, 66, 66, 69,
	193, 69, 66, -344, 318, 68, -344, 284, 318, 319,
	252, 282, 192, -344, -344, 284, -344, -344, -344, -344,
	-344, 410, -344, -344, -344, 320, 321, -344, 408, 192,
	-344, -344, -344, -344, -344, 71, 66, 69, 308, 66,
	11, 66, -291, 133, 331, 332, 333, 334, 330, 308,
	335, 336, 337, 228, 338, -68, -7, -5, -352, 21,
	22, 189, 423, 69, -88, -176, -352, -353, 70, -174,
	19, 30, -128, 75, 78, -156, -159, -84, -230, 50,
	-72, 21, 22, 80, 11, -225, 90, 88, 89, 107,
	-224, 23, 72, -220, -221, 74, 177, -84, -122, 110,
	91, 108, 109, 93, 119, 118, 129, 122, 123, 124,
	125, 126, 127, 128, 120, 121, 132, 100, 101, 102,
	103, 104, 105, 106, -197, -352, -98, -352, 178, 179,
	-125, -125, -125, -125, -125, -125, -125, -352, -352, -352,
	-352, -352, -352, -352, -352, -352, -352, -352, -352, -352,
	-352, -352, -352, -352, -352, -352, -352, -352, -352, -8,
	-139, -84, -352, -352, -352, -352, -352, -352, -352, -352,
	-352, -352, -352, -150, -84, -352, -355, -134, -352, -355,
	-134, -355, -134, -355, -352, -355, -134, -355, -134, -355,
	-355, -134, -355, -352, -352, -352, -352, -352, -352, -352,
	-352, -352, -352, -352, -352, -352, -352, -352, -112, 87,
	-110, -87, -91, -93, -94, -114, -97, -352, -92, -110,
	-98, 72, -110, -102, -354, 69, 11, 67, -354, 69,
	177, 69, -186, -191, 421, 423, 343, -190, -190, -229,
	-222, 74, 28, 100, 29, 177, -155, -68, 70, 69,
	-272, 204, 201, -237, -241, -243, -242, -244, -239, -240,
	370, 373, 377, 375, 371, 376, 133, 374, 379, 380,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 29,
	214, 366, 367, 368, 369, 390, 391, 392, 393, 394,
	395, 396, 397, 349, 372, 488, 350, 351, 352, 353,
	354, 355, 357, 358, 359, 360, 361, 362, 363, 364,
	72, -221, -294, 68, -222, -110, -218, -216, 72, 91,
	72, -109, -222, -230, -116, -222, -230, 251, -330, -329,
	-321, -324, -203, -217, -321, 256, 254, 255, 69, 193,
	69, 193, 71, -102, 24, 66, -104, -110, 72, 72,
	-109, -116, -323, -321, -324, -231, -230, -219, -201, 74,
	-234, -84, -203, -203, -110, -110, -110, -110, -110, -201,
	-201, -201, -201, -198, 11, 110, 11, -198, -198, -84,
	-125, -321, 434, 124, -230, 72, 72, 346, 72, 33,
	-43, -43, 74, -43, 69, 100, -43, 70, -139, -304,
	595, 69, -320, 23, 423, 424, 399, -346, 189, 227,
	224, -346, -342, 326, -323, -322, -321, -344, -345, -222,
	-344, -344, -344, 410, -344, -344, -344, -344, -344, -344,
	-344, -344, -327, -346, 286, 69, -346, -323, -321, 330,
	330, 330, 330, 330, 330, -74, -8, -110, 424, 425,
	-95, 23, -175, -223, -182, 87, 9, 110, 69, 18,
	69, -172, 25, 26, 177, -126, 51, 75, 78, -204,
	49, -110, -84, -84, -84, -137, 83, 91, 84, 85,
	-224, 124, -231, -223, -219, -125, -138, -144, -98, 79,
	110, 108, 109, 93, -125, -125, -125, -125, -125, -125,
	-125, -125, -125, -125, -125, -125, -125, -125, -125, -233,
	72, 74, 72, -124, -124, -222, -72, -80, -83, 124,
	-84, -230, -80, -80, -72, -80, -80, -80, -80, -72,
	-72, -80, -80, -80, -80, -222, -222, -72, -80, -80,
	-80, -72, -353, 69, -353, -8, -80, -80, -353, -84,
	-84, -147, 74, -80, -147, 74, -80, -125, 447, 448,
	449, -80, -72, -148, -149, 95, -147, -353, -125, -80,
	-81, -80, -80, -80, -353, -353, -83, -80, -83, -80,
	-80, -353, -353, -353, -353, -179, 112, -110, 29, 69,
	-105, -107, -106, -108, 56, 60, 62, 57, 58, 59,
	63, -212, -87, -96, 47, -352, -115, 112, -117, 23,
	-232, 64, 194, 65, -352, -179, 67, -87, -110, -87,
	-113, -230, 124, -189, -192, 69, 422, 424, 425, -186,
	-251, 132, 66, 86, -84, -223, -231, -173, -74, -282,
	-283, -284, -223, 74, 75, -269, -270, -271, -272, -285,
	204, -293, 196, 198, 199, 44, -273, 205, 190, 45,
	-238, -259, 403, 404, -245, 68, -245, -245, 378, 370,
	373, 371, -245, -245, -245, -245, -245, -250, 373, -250,
	-250, -250, -250, 371, 68, 68, -245, -245, -245, -261,
	68, -261, 365, -262, 68, -262, -262, -262, -262, -294,
	-294, -84, -226, 67, 23, 192, -257, -256, -253, -254,
	-255, -252, 28, 24, -257, -49, 239, 210, 177, 68,
	177, 242, 243, -325, 69, 28, -331, 283, -110, -110,
	-110, -321, -321, -327, -301, 208, 203, -110, 69, 69,
	74, 72, 72, -127, -277, 11, 110, -201, -230, -230,
	-110, -127, -201, -78, 215, 67, -355, -353, 72, -125,
	-42, -124, 70, -111, 87, 74, -319, -232, 398, 424,
	-347, 124, -222, -347, -350, 490, 193, 70, 69, -344,
	-347, 304, 286, -347, 11, -292, 19, -72, -353, -56,
	-55, 185, 182, 183, 186, 187, -297, 401, 181, 236,
	235, 221, -97, -352, -353, 69, 177, -181, 34, 35,
	-222, 52, -128, -128, -159, -195, 19, 11, 47, 47,
	-73, 57, 83, 84, 85, 177, -352, -138, -125, -125,
	-125, -78, 90, -353, -80, 69, -353, 177, -353, -353,
	-80, -353, -353, -353, -353, -80, -80, -353, -353, -353,
	-353, 69, 69, -80, -353, -353, -353, -81, -84, -353,
	-353, -353, 69, 67, 23, 11, 11, -353, 11, 11,
	-353, -353, 11, -125, -125, -125, -353, -80, -151, -149,
	97, -84, -353, -353, -353, -353, -353, -353, -160, 454,
	-160, -353, -353, -353, -353, -353, -160, -160, -160, -160,
	-123, 29, 47, -352, -8, -352, -184, -188, -147, -219,
	-91, -93, -93, -91, -93, 56, 56, 56, 61, 56,
	61, 56, -106, -232, -353, -353, -143, 238, -352, 33,
	-232, -117, 190, 190, 190, -81, -118, 12, -87, -118,
	-118, 177, -191, -194, 426, 423, 429, 72, 74, 177,
	-174, 69, -284, 100, -272, 68, 72, -278, -221, 45,
	-273, 190, 45, -275, -273, -273, -278, 72, -278, 45,
	83, 91, -248, -249, -263, -266, -246, 23, 605, 406,
	28, 66, 401, 196, 45, 44, 199, 81, -260, 405,
	75, -250, -250, -245, -245, -245, 378, -245, -250, -251,
	133, 29, -251, 133, -251, 133, -251, 133, -251, 133,
	-250, -267, 74, -267, 75, -261, 75, 70, 66, -222,
	-169, -110, -254, -253, -255, 373, 418, 132, 430, -50,
	8, 9, 10, -222, -306, -307, -308, -222, 110, 244,
	245, -222, -334, 316, -329, 284, 293, 90, 16, 490,
	193, 193, -110, -321, -118, 72, 72, -198, -201, -125,
	-324, 230, 231, -179, 189, -320, 193, 177, 177, 193,
	307, -323, -222, 11, 11, 304, 11, -323, 340, -204,
	69, -213, -273, -303, -271, -272, -302, 197, 204, 205,
	-213, 204, 201, -273, 205, 196, 197, -210, -273, 193,
	23, -213, -213, -279, 100, -213, 32, 32, 112, -223,
	-223, 69, 74, 74, 53, -110, -79, -170, 124, -223,
	-81, -78, 90, -125, -353, -83, -161, -160, 124, -231,
	-161, -161, -353, -161, -161, -353, -353, -161, -161, -161,
	-161, -125, -125, -353, -161, -161, -161, -353, -236, 133,
	370, 214, 368, 361, 388, 375, 403, 366, 404, -233,
	-236, -125, -125, -125, -125, -125, 11, 11, 11, 487,
	-155, 99, -84, 96, -222, -165, -352, -160, -160, -160,
	-160, -160, -183, 66, -184, -142, -145, -144, -352, -8,
	-353, -175, 6, 490, -180, -222, -118, 69, 100, 100,
	-100, -99, 66, 67, -101, 66, -99, 56, 56, -178,
	68, 69, -144, -352, -180, -125, -117, -352, -352, -352,
	-353, -155, -84, -118, 423, 427, 428, -283, -284, -287,
	-286, -222, -221, 196, -293, 44, -293, -278, -278, -278,
	-278, 68, 83, -352, 606, 75, -125, 9, 45, 45,
	45, 74, 70, -251, 133, -251, 133, -250, -245, -251,
	133, 72, 133, -251, 133, 70, 69, 70, 69, 70,
	69, -121, 552, 91, -110, -171, 23, 29, -279, -279,
	-279, 66, 70, 69, -237, -222, -222, -222, -337, 490,
	289, -335, -333, 295, 296, 297, 298, 299, -324, 294,
	-331, 291, 74, 72, -110, -321, -127, -250, -110, -323,
	124, 124, -222, -323, 304, -349, 490, -323, -323, 11,
	-323, 74, -73, -55, 68, -268, 72, -221, -278, -206,
	196, 72, 72, 72, -221, 72, -221, -222, 45, 45,
	72, -110, -222, -268, 72, -84, -222, -222, 177, -222,
	-182, 69, -82, -353, -125, -161, 177, -161, -161, -161,
	69, 69, -161, -353, -245, -245, -245, -262, -245, 354,
	-245, 354, -353, -353, 19, 19, 19, 19, -353, -125,
	-125, -125, -352, -76, 451, -84, -227, 72, 27, -183,
	69, -353, -353, 47, -353, -353, 69, -155, -188, -84,
	-84, -84, 68, -84, -177, -222, 238, -353, -117, -212,
	-177, -177, -177, -173, 70, 69, -245, -245, 45, -275,
	-177, -125, 23, -131, 452, 453, -251, 133, -250, 74,
	-250, 75, 75, 552, 68, -8, -169, -279, 72, 133,
	72, 133, 74, -110, -309, -310, -311, 81, 489, 91,
	246, 247, 206, 248, 249, 250, -308, -237, -237, -237,
	-340, -341, -339, 292, 314, 315, 300, -338, -336, 309,
	310, 311, 312, 90, 74, 74, 74, -332, 283, 90,
	292, 16, 23, -201, -312, -199, -349, -349, 286, -323,
	-79, -268, -157, 209, 210, -237, -237, -226, -275, 45,
	72, -211, 193, 23, 193, -157, -268, 29, 182, 87,
	-223, -89, 11, -170, -170, 124, -125, -125, -250, 72,
	-125, -125, -125, -125, -353, -353, -353, -125, -353, 74,
	-141, 112, 45, -145, -142, 47, -8, -352, -222, -173,
	-177, 70, 69, -144, -115, -232, -353, -353, -353, -289,
	-288, 67, 200, 81, -286, -172, -172, -278, -278, 70,
	-353, -352, -251, 133, -251, 133, 70, 70, -287, -169,
	-171, 72, 133, 19, -170, -311, 74, 250, 246, 250,
	250, 250, 250, 251, -328, 81, 290, -339, 301, 557,
	285, 316, 75, 75, 111, 30, 31, -336, 75, 75,
	75, 75, -333, 16, 490, -331, 291, 74, 74, -313,
	38, -315, 39, -348, 23, -348, 304, 11, 70, 72,
	-238, -238, 68, -278, -278, 72, -222, -157, 28, 28,
	-352, -118, -87, -82, -353, -353, -353, -353, -353, -353,
	-75, 110, 490, -155, 16, 9, -142, -8, 70, -222,
	-117, -288, 72, -279, 74, 207, -258, 608, 607, -125,
	70, -8, 237, -171, 36, 36, 242, 243, 74, 74,
	28, 302, 176, 28, 75, 176, 457, 291, 74, 72,
	292, -247, 194, -316, 43, -314, -265, 42, 16, -321,
	-87, -287, -226, 68, -125, -295, -296, 112, -152, 13,
	-170, -353, 488, 63, 491, -166, 114, 113, -139, -184,
	-353, 75, -110, -353, -290, -289, -169, 238, -21, -3,
	-10, -11, -12, -13, -15, -51, -16, -17, -22, -23,
	-18, -57, -58, -66, -64, -65, -61, -60, -26, -24,
	-27, -19, -28, -29, -30, -34, -35, -25, -36, 94,
	195, 272, 341, 75, 28, 75, 28, 305, 292, 23,
	-178, 75, -315, 16, -317, 40, 41, 74, 490, -118,
	70, 68, -287, -353, 69, -222, -153, 14, 16, 53,
	489, 492, -353, -167, 93, -168, 111, 457, -129, 75,
	176, -167, 68, -258, -158, 240, 241, -169, -84, -84,
	72, -47, -228, 275, 276, 277, -223, -37, -21, 303,
	303, 74, 38, 114, 74, 16, 16, 284, -152, -290,
	-287, 70, -296, 47, -163, 455, -154, -84, -140, -86,
	-84, 53, -168, 116, 117, 238, 116, 117, -124, -177,
	-169, 72, 72, -38, -39, 95, 96, 273, 274, 278,
	-237, 69, 611, 74, 74, 28, 289, 21, -324, -153,
	70, -290, 222, -162, -164, -222, 69, 490, 90, -222,
	70, -171, 99, 97, -39, -84, -37, 19, 19, 19,
	28, -223, 99, -21, 306, -163, -290, 223, 69, 23,
	-86, 491, -168, -299, -300, 66, -14, -20, -13, -10,
	-11, -12, 341, 94, -37, 96, 611, -48, 75, -8,
	-46, -45, 75, -48, 280, 91, 281, 72, -125, -324,
	-352, -164, -165, 492, -300, 66, -299, 66, 10, 9,
	-169, -37, 611, -37, 99, 97, -40, -41, 98, -21,
	69, 279, -125, 220, -298, 208, 203, 206, 29, -298,
	611, 99, 611, 195, -37, 99, 97, -41, -84, -45,
	-353, -353, 202, 28, 83, 99, 94, 611, 195, -37,
	96, 99, 611, -37, 195, 99, 611, 195,
}

var yyDef = [...]int{
	35, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, -2, 764, 764, 764, 764,
	764, 764, 862, -2, 624, 0, 0, 0, 0, -2,
	737, 738, 739, 743, 744, 759, 761, 0, 343, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 549, 41,
	0, 0, 64, 65, 1216, 0, 762, 751, 752, 0,
	0, 1798, 2, 1154, 0, 773, 766, 0, 1216, 1216,
	0, 0, 96, 0, 0, 0, 863, 0, 0, 0,
	1214, 1214, 247, 1214, 1214, 0, 1230, 245, 0, 1211,
	1226, 1227, 1228, 0, 0, 0, 1212, 0, 1212, 1212,
	1212, 1212, 1212, 1212, 1212, 0, 683, 882, 1239, 1240,
	1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517,
	1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527,
	1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537,
	1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547,
	1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557,
	1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567,
	1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577,
	1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587,
	1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597,
	1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607,
	1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617,
	1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627,
	1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637,
	1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647,
	1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657,
	1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667,
	1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677,
	1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687,
	1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697,
	1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707,
	1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717,
	1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727,
	1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737,
	1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 0, 0,
	0, 728, 0, 694, 695, 696, 0, 698, 0, 0,
	0, 0, 0, 708, 711, 715, 0, 1154, 1154, 570,
	571, 572, 733, 734, 722, 735, 0, 0, 0, 0,
	0, 843, 322, 324, 0, 344, 0, 347, 350, 1245,
	745, 0, 0, 1270, 1271, 0, 0, 0, 0, 0,
	1660, 190, 261, 192, 192, 192, 192, 192, 192, 192,
	192, 192, 0, 192, 192, 192, 1672, 192, 0, 192,
	192, 192, 192, 192, 260, 250, 251, 252, 0, 0,
	0, 1660, 0, 550, 547, 548, 764, 0, 768, 0,
	1217, 740, 53, 0, 55, 1170, 864, 865, 866, 1746,
	1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756,
	1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766,
	1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776,
	1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786,
	1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796,
	1797, 0, 39, 1160, 0, 0, 776, 774, 775, 765,
	0, 787, 817, 0, 893, 0, 899, 901, -2, -2,
	0, 942, 943, 944, 945, 946, 947, 0, 0, 0,
	0, 0, 0, 0, 970, 971, 972, 973, 974, 975,
	1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1751, 1752,
	1753, 1754, 1756, 1763, 1766, 1771, 1772, 1773, 1774, 1784,
	1785, 1786, 1787, 1789, 1790, 1791, 1793, 1794, 1795, 903,
	904, 1124, 1183, 0, 1060, 1061, 1062, 1063, 1064, 1065,
	1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075,
	1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085,
	1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095,
	1096, 1097, 1098, 1099, 1100, 1101, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1115, 0, 1044, 1044,
	1044, 1044, 1044, 1044, 1044, 1044, 1044, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 75, 77, 882,
	81, 1725, 0, 1188, -2, -2, 1190, 0, 0, 0,
	-2, -2, -2, -2, 0, -2, 1124, 0, 97, 1146,
	764, 98, 0, 387, 388, 0, 1541, 594, 1237, 1238,
	1530, 1233, 1234, 1274, 1275, 1276, 1277, 1278, 1279, 1280,
	1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290,
	1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300,
	1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310,
	1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320,
	1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330,
	1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340,
	1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350,
	1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360,
	1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370,
	1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380,
	1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390,
	1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400,
	1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410,
	1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420,
	1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430,
	1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440,
	1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450,
	1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460,
	1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470,
	1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480,
	1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490,
	1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500,
	1501, 1502, 1503, 1504, 1505, 1506, 1507, 0, 0, 245,
	0, 0, 0, 0, 0, 240, 0, 0, 0, 1214,
	247, 0, 0, 664, 0, 665, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 682, 0,
	684, 685, 728, 687, 0, 0, 1214, 1214, 0, 0,
	0, 0, 0, 596, 597, 728, 728, 728, 728, 725,
	0, 725, 705, 725, 723, 724, 0, 710, 0, 0,
	0, 718, 719, 0, 746, 0, 0, 753, 755, 756,
	757, 758, 754, 0, 763, 0, 0, 0, 326, 0,
	0, 346, 328, 0, 331, 332, 333, 334, 335, 336,
	337, 338, 339, 340, 341, 342, 0, 349, 0, 1243,
	1246, 750, 1261, 1262, 0, 1272, 1273, 196, 196, 0,
	0, 0, 0, 159, 192, 0, 161, 192, 192, 192,
	0, 192, 192, 168, 169, 192, 171, 172, 173, 174,
	175, 192, 177, 178, 179, 192, 192, 182, 192, 192,
	185, 186, 187, 188, 189, 259, 196, 0, 0, 196,
	0, 0, 532, 0, 0, 0, 0, 537, 538, 539,
	540, 0, 0, 543, 544, 773, 43, 60, 0, 769,
	770, 0, 0, 0, 54, 0, 0, 59, 1799, 47,
	0, 0, 1155, 1158, 1159, 1147, 1148, 1151, 0, 0,
	771, 777, 778, 767, 0, 788, 0, 0, 0, 0,
	818, 0, 820, 821, 822, 823, 0, 897, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 921, 922, 923,
	924, 925, 926, 927, 900, 0, 914, 0, 0, 0,
	963, 964, 965, 966, 967, 968, 0, 776, 0, 0,
	0, 776, 0, 0, 0, 0, 776, 776, 0, 0,
	0, 0, 0, 0, 776, 0, 0, 0, 776, 0,
	0, 940, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 776, 0, 1116, 0, 1027, 1036, 0, 1028,
	1037, 1029, 1038, 1030, 0, 1031, 1039, 1032, 1040, 1033,
	1034, 1041, 1035, 0, 936, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 79, 0,
	881, 0, 824, 826, 827, 828, -2, 0, 832, 887,
	934, 1239, -2, 0, 0, 0, 71, 72, 0, 0,
	0, 0, 82, 84, 0, 0, 1725, 1191, 1192, 506,
	1205, 1206, 1207, 0, 1203, 0, 1154, 773, 611, 0,
	389, 0, 0, 401, 495, 413, 414, 415, 488, 417,
	488, 488, 0, 488, 488, 488, 488, 488, 503, 503,
	503, 503, 503, 459, 460, 461, 462, 463, 0, 0,
	436, 488, 488, 488, 440, 478, 479, 480, 481, 482,
	483, 484, 485, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 490, 490, 492, 492, 492, 492, 492,
	0, 0, 593, 0, 1231, 0, 0, 247, -2, 0,
	-2, 0, 877, 0, 0, 884, 0, 0, 108, 277,
	263, 107, 0, 241, 246, 242, 243, 244, 0, 0,
	0, 0, 254, 679, 1213, 0, 672, 73, 673, 674,
	675, 676, 677, 256, 678, 883, 1241, 1242, 686, 729,
	0, 731, 0, 0, 843, 691, 692, 693, 598, 699,
	700, 701, 707, 728, 0, 0, 0, 843, 728, 709,
	928, 712, 1044, 0, 736, 748, 747, 0, 760, 0,
	323, 325, 327, 345, 0, 0, 348, 351, 0, 0,
	0, 0, 1264, 0, 1266, 1268, 0, 0, 197, 198,
	199, 0, 191, 0, 214, 262, 0, 160, 0, 194,
	162, 163, 164, 192, 166, 167, 170, 176, 180, 181,
	183, 184, 258, 0, 0, 0, 0, 157, 0, 533,
	534, 535, 536, 545, 542, 776, 0, 0, 741, 742,
	56, 0, 0, 1172, 37, 0, 1161, 0, 0, 0,
	0, 1150, 1152, 1153, 0, 0, 1135, 0, 0, 779,
	772, 40, 894, 895, 896, 898, 915, 0, 917, 919,
	819, 789, 0, 1125, -2, 905, 906, 930, 931, 932,
	0, 0, 0, 0, 928, 910, 0, 948, 949, 950,
	951, 952, 953, 954, 955, 956, 957, 958, 959, 962,
	1058, 1059, 0, 960, 961, 969, 0, 0, 938, 783,
	784, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 936, 933, 0, 1182, 0, 0, 0, 1009, 0,
	0, 945, 1127, 0, 945, 1127, 0, 0, 0, 0,
	0, 0, 0, 1122, 1119, 0, 0, 1045, 0, 0,
	0, 937, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 880, 0, 0,
	0, 0, 0, 0, 867, 0, 0, 870, 0, 0,
	0, 0, 0, 0, 0, 0, 836, 1646, 838, 0,
	887, 0, 0, 0, 936, 891, 0, 891, 76, 891,
	78, 0, 886, 1189, 0, 0, 0, 87, 88, 83,
	1193, 0, 1199, 1200, 1201, 1125, 0, 1160, 776, 386,
	612, 614, 617, 618, 619, 390, 392, 393, 394, 0,
	-2, 585, 1656, 1703, -2, -2, 577, 1573, -2, -2,
	397, 498, 496, 497, 416, 0, 503, 503, 488, 488,
	488, 488, 445, 503, 448, 451, 452, 506, 0, 506,
	506, 506, 506, 503, 0, 0, 437, 438, 439, 428,
	0, 429, 490, 431, 0, 432, 433, 434, 435, 591,
	592, 0, 0, 0, 93, 0, 102, -2, 513, 514,
	515, 0, 510, 1215, 103, 0, 279, 280, 0, 217,
	0, 248, 249, 110, 0, 0, 264, 0, 385, 0,
	666, 0, 668, 253, 670, 680, 681, 671, 0, 0,
	730, 688, 689, 690, 891, 0, 0, 702, 726, 727,
	725, 728, 706, 720, 0, 0, 713, 0, 749, 844,
	329, 330, 352, 79, 0, 1244, 1263, 0, 1267, 1269,
	0, 200, 202, 0, 151, 0, 0, 193, 0, 165,
	0, 0, 0, 0, 0, 541, 0, 771, 61, 625,
	626, -2, 657, 1223, 657, 657, 643, 560, 657, 0,
	0, 0, 57, 0, 1171, 0, 0, 48, 0, 1558,
	51, 0, 1156, 1157, 1149, 0, 1208, 1209, 1136, 1137,
	94, 780, 916, 918, 920, 0, 936, 907, 928, 911,
	0, 908, 0, 902, 0, 0, 798, 0, 798, 798,
	0, 1023, 1008, 798, 798, 0, 0, 798, 798, 798,
	798, 0, 0, 0, 798, 798, 798, 0, 941, -2,
	1006, 1007, 0, 0, 0, 0, 0, 1051, 0, 0,
	1052, 1017, 0, 0, 0, 0, 0, 1146, 0, 1120,
	0, 0, 1026, 1046, 1047, 1048, 1049, 1050, 995, 0,
	996, 0, 0, 0, 0, 0, 1002, 1003, 1004, 1005,
	1176, 0, 0, 0, 1165, 0, 891, 1184, 0, 0,
	825, 858, 860, 0, 855, 868, 869, 871, 0, 873,
	0, 875, 876, 845, 831, 935, 833, 0, 0, 0,
	887, 842, 0, 0, 0, 0, 1146, 0, 891, 69,
	70, 0, 85, 86, 0, 0, 92, 507, 508, 0,
	216, 0, 615, 0, 391, 0, 578, 0, 0, 577,
	577, 573, 574, 577, 576, 577, 568, 578, 569, 0,
	402, 0, 404, 405, 406, 407, 408, 0, 0, 0,
	0, 0, 502, 0, 527, 529, 0, 0, 412, 499,
	0, 506, 506, 503, 443, 444, 488, 449, 506, 453,
	470, 0, 454, 471, 455, 472, 456, 473, 457, 474,
	506, 0, 486, 0, 0, 430, 0, 608, 0, 1232,
	95, 0, 516, 517, 518, 0, 560, 560, 560, 0,
	281, 282, 283, 878, 0, 218, 219, 0, 0, 0,
	0, 885, 120, 0, 278, 0, 0, 0, 0, 0,
	0, 0, 74, 257, 697, 599, 600, 843, 704, 929,
	714, 716, 717, 503, 0, 1265, 0, 0, 0, 0,
	0, 212, 195, 0, 0, 0, 0, 158, 0, 779,
	0, 0, 577, 0, 644, 645, 0, 658, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1224,
	1225, 0, 0, 0, 561, 0, 652, 653, 0, 1174,
	1173, 0, 49, 50, 1162, 38, 47, 0, 790, 1126,
	0, 909, 0, 912, 798, 939, 980, 799, 785, 0,
	981, 982, 798, 984, 985, 798, 798, 989, 988, 987,
	990, 0, 0, 798, 993, 992, 994, 976, 0, 488,
	488, 1105, 488, 492, 1108, 488, 1110, 488, 1113, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1117, 1025, 1123, 0, 791, 792, 794, 997, 998, 999,
	1000, 1001, 62, 0, 1176, 1163, 1178, 1180, 0, 0,
	0, 0, -2, 1504, 0, 849, 1146, 0, 0, 0,
	852, 859, 0, 0, 853, 0, 854, 872, 874, 829,
	0, 0, 834, 0, 0, -2, 841, 0, 0, 0,
	851, 1154, 892, 68, 89, 90, 91, 613, 616, 0,
	579, 488, 488, 0, 583, 575, 584, 562, 564, 565,
	567, 0, 403, 0, 0, 411, 500, 0, 526, 528,
	530, 531, 489, 441, 466, 442, 467, 506, 450, 446,
	468, 504, 505, 458, 475, 503, 0, 503, 0, 493,
	0, 595, 609, 0, 0, 0, 93, 560, 0, 0,
	0, 0, 225, 0, 221, 0, 0, 0, 128, 0,
	111, 112, 113, 115, 116, 0, 0, 0, 109, 0,
	266, 0, 269, 270, 667, 669, 728, 1255, 879, 212,
	201, 203, 204, 212, 215, 152, 0, 153, 155, 0,
	154, 546, 94, 627, 0, 654, 0, 0, 1231, 575,
	0, -2, 630, 635, 636, 637, 638, 639, 0, 650,
	0, 632, 0, 654, 0, 647, 0, 0, 0, 52,
	45, 94, 94, 977, 913, 979, 0, 983, 978, 986,
	0, 0, 991, 1010, 1102, 503, 1106, 1107, 1109, 1111,
	1112, 1114, 1012, 1011, 0, 0, 0, 0, 1018, 0,
	0, 0, 0, 0, 0, 1121, 796, 795, 0, 63,
	0, 1181, -2, 0, 0, 80, 0, 1154, 1185, 1186,
	1187, 856, 0, 861, 0, 847, 0, 887, 839, 0,
	0, 0, 0, 67, 552, 0, 1151, 1151, 577, 577,
	0, 0, 0, 501, 0, 0, 447, 469, 506, 487,
	506, 0, 0, 610, 0, 93, 95, 0, 521, 522,
	523, 524, 525, 0, 94, 226, 227, 0, 0, 0,
	232, 0, 0, 0, 0, 0, 220, 222, 223, 224,
	146, 129, 130, 0, 0, 0, 0, 121, 122, 0,
	0, 0, 0, 0, 117, 118, 119, 265, 0, 0,
	268, 0, 0, 703, 1257, 1251, 205, 205, 0, 156,
	0, 0, 629, 655, 0, 401, 401, 0, 577, 577,
	646, 0, 1221, 1222, 0, 641, 654, 0, 0, 0,
	1175, 891, 0, 0, 781, 786, 0, 0, 1103, 1104,
	0, 0, 0, 0, 1019, 1020, 1021, 1053, 1024, 1118,
	1146, 0, 0, 1179, 1164, 0, 1168, 0, 850, 66,
	0, 846, 0, 835, 837, 887, 888, 889, 890, 551,
	555, 0, 560, 0, 580, 581, 582, 563, 566, 0,
	398, 0, 464, 476, 465, 477, 491, 494, 0, 100,
	0, 519, 520, 0, 95, 228, 229, 230, 231, 233,
	234, 0, 0, 0, 106, 0, 0, 131, 0, 0,
	0, 0, 141, 142, 143, 144, 145, 123, 124, 125,
	126, 127, 114, 0, 0, 267, 0, 272, 273, 1218,
	1259, -2, 0, 149, 0, 150, 213, 0, 628, 656,
	395, 396, 0, 1231, 0, 631, 640, 642, 0, 649,
	0, 1138, 46, 94, 1042, 1043, 1013, 1015, 1014, 1016,
	0, 0, 0, 800, 0, 0, 1167, 0, 857, 848,
	840, 556, 557, 0, 559, 0, 409, 399, 400, 0,
	553, 93, 0, 0, 235, 236, 237, 238, 147, 148,
	132, 133, 0, 135, 136, 0, 0, 0, 275, 0,
	271, 845, 0, 1251, 0, 1253, 0, 1250, 0, 206,
	891, 0, 0, 0, 648, 0, 660, 0, 1143, 0,
	782, 1022, 0, 0, 0, 0, 0, 0, 797, 1177,
	-2, 558, 0, 398, 99, 554, 101, 284, 93, 355,
	356, 357, 358, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 383, 384, 0,
	0, 0, 0, 0, 137, 0, 139, 140, 274, 0,
	36, 0, 1258, 0, 1256, 0, 0, 1252, 0, 1138,
	553, 0, 0, 659, 0, 0, 810, 0, 0, 1054,
	0, 1057, 793, 801, 0, 804, 0, 0, 0, 815,
	0, 802, 0, 410, 93, 0, 0, 105, 0, 0,
	1233, 0, 0, 311, 312, 313, 1235, 0, 353, 134,
	138, 276, 1219, 1220, 1260, 0, 0, 0, 1143, 633,
	0, 553, 661, 0, 44, 0, 1144, 1145, 1139, 1140,
	1142, 1055, 0, 805, 806, 807, 808, 809, 0, 0,
	95, 285, 286, 0, 295, 0, 0, 0, 0, 0,
	309, 0, 0, 1254, 1248, 207, 208, 209, 211, 810,
	553, 651, 0, 811, 812, 0, 0, 0, 0, 816,
	586, 0, 0, 0, 296, 0, 0, 0, 0, 0,
	0, 1236, 239, 354, 0, 42, 634, 0, 0, 0,
	1141, 0, 803, 587, 588, 0, 93, 287, 288, 289,
	290, 291, 0, 293, 0, 0, 0, 305, 306, 307,
	0, 314, 316, 317, 318, 0, 320, 321, 310, 210,
	0, 813, 814, 1056, 589, 0, 590, 0, 0, 0,
	104, 0, 0, 0, 0, 0, 0, 302, 0, 308,
	0, 319, 0, 0, 601, 603, 604, 0, 0, 602,
	0, 0, 297, 298, 0, 0, 0, 303, 0, 315,
	662, 663, 605, 606, 607, 292, 294, 0, 300, 0,
	0, 0, 0, 0, 299, 0, 304, 301,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 92, 3, 3, 3, 127, 119, 3,
	68, 70, 124, 122, 69, 123, 177, 125, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 611,
	101, 100, 102, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 129, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 118, 3, 130,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 82, 83, 84, 85,
	86, 87, 88, 89, 90, 91, 93, 94, 95, 96,
	97, 98, 99, 103, 104, 105, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 116, 117, 120, 121,
	126, 128, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 274, 275,
}

var yyTok3 = [...]int{
	57600, 276, 57601, 277, 57602, 278, 57603, 279, 57604, 280,
	57605, 281, 57606, 282, 57607, 283, 57608, 284, 57609, 285,
	57610, 286, 57611, 287, 57612, 288, 57613, 289, 57614, 290,
	57615, 291, 57616, 292, 57617, 293, 57618, 294, 57619, 295,
	57620, 296, 57621, 297, 57622, 298, 57623, 299, 57624, 300,
	57625, 301, 57626, 302, 57627, 303, 57628, 304, 57629, 305,
	57630, 306, 57631, 307, 57632, 308, 57633, 309, 57634, 310,
	57635, 311, 57636, 312, 57637, 313, 57638, 314, 57639, 315,
	57640, 316, 57641, 317, 57642, 318, 57643, 319, 57644, 320,
	57645, 321, 57646, 322, 57647, 323, 57648, 324, 57649, 325,
	57650, 326, 57651, 327, 57652, 328, 57653, 329, 57654, 330,
	57655, 331, 57656, 332, 57657, 333, 57658, 334, 57659, 335,
	57660, 336, 57661, 337, 57662, 338, 57663, 339, 57664, 340,
	57665, 341, 57666, 342, 57667, 343, 57668, 344, 57669, 345,
	57670, 346, 57671, 347, 57672, 348, 57673, 349, 57674, 350,
	57675, 351, 57676, 352, 57677, 353, 57678, 354, 57679, 355,
	57680, 356, 57681, 357, 57682, 358, 57683, 359, 57684, 360,
	57685, 361, 57686, 362, 57687, 363, 57688, 364, 57689, 365,
	57690, 366, 57691, 367, 57692, 368, 57693, 369, 57694, 370,
	57695, 371, 57696, 372, 57697, 373, 57698, 374, 57699, 375,
	57700, 376, 57701, 377, 57702, 378, 57703, 379, 57704, 380,
	57705, 381, 57706, 382, 57707, 383, 57708, 384, 57709, 385,
	57710, 386, 57711, 387, 57712, 388, 57713, 389, 57714, 390,
	57715, 391, 57716, 392, 57717, 393, 57718, 394, 57719, 395,
	57720, 396, 57721, 397, 57722, 398, 57723, 399, 57724, 400,
	57725, 401, 57726, 402, 57727, 403, 57728, 404, 57729, 405,
	57730, 406, 57731, 407, 57732, 408, 57733, 409, 57734, 410,
	57735, 411, 57736, 412, 57737, 413, 57738, 414, 57739, 415,
	57740, 416, 57741, 417, 57742, 418, 57743, 419, 57744, 420,
	57745, 421, 57746, 422, 57747, 423, 57748, 424, 57749, 425,
	57750, 426, 57751, 427, 57752, 428, 57753, 429, 57754, 430,
	57755, 431, 57756, 432, 57757, 433, 57758, 434, 57759, 435,
	57760, 436, 57761, 437, 57762, 438, 57763, 439, 57764, 440,
	57765, 441, 57766, 442, 57767, 443, 57768, 444, 57769, 445,
	57770, 446, 57771, 447, 57772, 448, 57773, 449, 57774, 450,
	57775, 451, 57776, 452, 57777, 453, 57778, 454, 57779, 455,
	57780, 456, 57781, 457, 57782, 458, 57783, 459, 57784, 460,
	57785, 461, 57786, 462, 57787, 463, 57788, 464, 57789, 465,
	57790, 466, 57791, 467, 57792, 468, 57793, 469, 57794, 470,
	57795, 471, 57796, 472, 57797, 473, 57798, 474, 57799, 475,
	57800, 476, 57801, 477, 57802, 478, 57803, 479, 57804, 480,
	57805, 481, 57806, 482, 57807, 483, 57808, 484, 57809, 485,
	57810, 486, 57811, 487, 57812, 488, 57813, 489, 57814, 490,
	57815, 491, 57816, 492, 57817, 493, 57818, 494, 57819, 495,
	57820, 496, 57821, 497, 57822, 498, 57823, 499, 57824, 500,
	57825, 501, 57826, 502, 57827, 503, 57828, 504, 57829, 505,
	57830, 506, 57831, 507, 57832, 508, 57833, 509, 57834, 510,
	57835, 511, 57836, 512, 57837, 513, 57838, 514, 57839, 515,
	57840, 516, 57841, 517, 57842, 518, 57843, 519, 57844, 520,
	57845, 521, 57846, 522, 57847, 523, 57848, 524, 57849, 525,
	57850, 526, 57851, 527, 57852, 528, 57853, 529, 57854, 530,
	57855, 531, 57856, 532, 57857, 533, 57858, 534, 57859, 535,
	57860, 536, 57861, 537, 57862, 538, 57863, 539, 57864, 540,
	57865, 541, 57866, 542, 57867, 543, 57868, 544, 57869, 545,
	57870, 546, 57871, 547, 57872, 548, 57873, 549, 57874, 550,
	57875, 551, 57876, 552, 57877, 553, 57878, 554, 57879, 555,
	57880, 556, 57881, 557, 57882, 558, 57883, 559, 57884, 560,
	57885, 561, 57886, 562, 57887, 563, 57888, 564, 57889, 565,
	57890, 566, 57891, 567, 57892, 568, 57893, 569, 57894, 570,
	57895, 571, 57896, 572, 57897, 573, 57898, 574, 57899, 575,
	57900, 576, 57901, 577, 57902, 578, 57903, 579, 57904, 580,
	57905, 581, 57906, 582, 57907, 583, 57908, 584, 57909, 585,
	57910, 586, 57911, 587, 57912, 588, 57913, 589, 57914, 590,
	57915, 591, 57916, 592, 57917, 593, 57918, 594, 57919, 595,
	57920, 596, 57921, 597, 57922, 598, 57923, 599, 57924, 600,
	57925, 601, 57926, 602, 57927, 603, 57928, 604, 57929, 605,
	57930, 606, 57931, 607, 57932, 608, 57933, 609, 57934, 610,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:538
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:542
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:549
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:584
		{
			setParseTree(yylex, nil)
		}
	case 36:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:590
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 37:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:596
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			if err := yyDollar[1].selStmt.SetInto(yyDollar[5].into); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 38:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:607
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:613
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 40:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:623
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:630
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 42:
		yyDollar = yyS[yypt-14 : yypt+1]
//line sql.y:634
		{
			yyVAL.selStmt = &Select{With: yyDollar[1].with, Comments: Comments(yyDollar[3].bytes2), Cache: yyDollar[4].str, Distinct: yyDollar[5].str, Hints: yyDollar[7].str, SelectExprs: yyDollar[8].selectExprs, From: yyDollar[10].tableExprs, Where: NewWhere(WhereStr, yyDollar[11].expr), GroupBy: GroupBy(yyDollar[12].exprs), Having: NewWhere(HavingStr, yyDollar[13].expr), Window: yyDollar[14].window}
			if yyDollar[6].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 43:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:641
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 44:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:647
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr), Window: yyDollar[13].window, Into: yyDollar[8].into}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 45:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:655
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:659
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:668
		{
			yyVAL.into = nil
		}
	case 48:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:672
		{
			yyVAL.into = &Into{Variables: yyDollar[2].variables}
		}
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:676
		{
			yyVAL.into = &Into{Outfile: string(yyDollar[3].bytes)}
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:680
		{
			yyVAL.into = &Into{Dumpfile: string(yyDollar[3].bytes)}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:686
		{
			yyVAL.variables = Variables{yyDollar[1].colIdent}
		}
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:690
		{
			yyVAL.variables = append(yyVAL.variables, yyDollar[3].colIdent)
		}
	case 53:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:696
		{
			yyVAL.with = &With{Ctes: yyDollar[2].tableExprs, Recursive: false}
		}
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:700
		{
			yyVAL.with = &With{Ctes: yyDollar[3].tableExprs, Recursive: true}
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:706
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:710
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 57:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:716
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[4].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[2].columns}
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:722
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:730
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:736
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:744
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:750
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].assignExprs)
			yyVAL.statement = ins
		}
	case 63:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:762
		{
			cols := make(Columns, 0, len(yyDollar[7].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].assignExprs))
			for _, updateList := range yyDollar[7].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].assignExprs)}
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:774
		{
			yyVAL.str = InsertStr
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:778
		{
			yyVAL.str = ReplaceStr
		}
	case 66:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:784
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].assignExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 67:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:790
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 68:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:794
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 69:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:798
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 70:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:802
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:807
		{
		}
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:808
		{
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:812
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:816
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:822
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:826
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:832
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:836
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 79:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:841
		{
			yyVAL.partitions = nil
		}
	case 80:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:845
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 81:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:851
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 82:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:855
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 83:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:862
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:871
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:875
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:881
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 87:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:885
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 88:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:889
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 89:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:895
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:899
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 91:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:903
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:907
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:912
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 94:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:917
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 95:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:922
		{
			yyVAL.boolean = yySpecialCommentMode(yylex)
		}
	case 96:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:928
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:937
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:942
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 99:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:947
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 100:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:951
		{
			yyDollar[2].viewSpec.ViewName = yyDollar[4].tableName.ToViewName()
			yyDollar[2].viewSpec.ViewExpr = yyDollar[8].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[2].viewSpec, SpecialCommentMode: yyDollar[7].boolean, SubStatementPositionStart: yyDollar[6].int, SubStatementPositionEnd: yyDollar[9].int - 1}
		}
	case 101:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:957
		{
			yyDollar[4].viewSpec.ViewName = yyDollar[6].tableName.ToViewName()
			yyDollar[4].viewSpec.ViewExpr = yyDollar[10].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[4].viewSpec, SpecialCommentMode: yyDollar[9].boolean, SubStatementPositionStart: yyDollar[8].int, SubStatementPositionEnd: yyDollar[11].int - 1, OrReplace: true}
		}
	case 102:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:963
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 103:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:971
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 104:
		yyDollar = yyS[yypt-16 : yypt+1]
//line sql.y:979
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName, Definer: yyDollar[2].str, Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[15].statement}, SpecialCommentMode: yyDollar[14].boolean, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[16].int - 1}
		}
	case 105:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:983
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName, Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[11].statement}, SpecialCommentMode: yyDollar[10].boolean, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[12].int - 1}
		}
	case 106:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:987
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].tlsOptionItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].accountLimitItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].passLockItems)
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames, TLSOptions: tlsOptions, AccountLimits: accountLimits, PasswordOptions: passwordOptions, Locked: locked, Attribute: yyDollar[9].str}
		}
	case 107:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1006
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 108:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1015
		{
			yyVAL.accountNames = nil
		}
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1019
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 110:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1024
		{
			yyVAL.tlsOptionItems = nil
		}
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1028
		{
			yyVAL.tlsOptionItems = nil
		}
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1032
		{
			yyVAL.tlsOptionItems = yyDollar[2].tlsOptionItems
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1038
		{
			yyVAL.tlsOptionItems = []TLSOptionItem{yyDollar[1].tlsOptionItem}
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1042
		{
			yyVAL.tlsOptionItems = append(yyDollar[1].tlsOptionItems, yyDollar[3].tlsOptionItem)
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1048
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1052
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1056
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1060
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1064
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 120:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1069
		{
			yyVAL.accountLimitItems = nil
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1073
		{
			yyVAL.accountLimitItems = yyDollar[2].accountLimitItems
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1079
		{
			yyVAL.accountLimitItems = []AccountLimitItem{yyDollar[1].accountLimitItem}
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1083
		{
			yyVAL.accountLimitItems = append(yyDollar[1].accountLimitItems, yyDollar[2].accountLimitItem)
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1089
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1093
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1097
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1101
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 128:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1106
		{
			yyVAL.passLockItems = nil
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1110
		{
			yyVAL.passLockItems = yyDollar[1].passLockItems
		}
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1116
		{
			yyVAL.passLockItems = []PassLockItem{yyDollar[1].passLockItem}
		}
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1120
		{
			yyVAL.passLockItems = append(yyDollar[1].passLockItems, yyDollar[2].passLockItem)
		}
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1126
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1130
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 134:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1134
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1138
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1142
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 137:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1146
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 138:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1150
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 139:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1154
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 140:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1158
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1162
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1166
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1170
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1174
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1178
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 146:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1183
		{
			yyVAL.str = ""
		}
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1187
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.str = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1192
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 149:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1198
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 150:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1203
		{
			yyVAL.statement = &GrantPrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 151:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1207
		{
			yyVAL.statement = &GrantRole{Roles: yyDollar[2].accountNames, To: yyDollar[4].accountNames, WithAdminOption: yyDollar[5].boolean}
		}
	case 152:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1211
		{
			yyVAL.statement = &GrantProxy{On: yyDollar[4].accountName, To: yyDollar[6].accountNames, WithGrantOption: yyDollar[7].boolean}
		}
	case 153:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1217
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &RevokePrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 154:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1222
		{
			yyVAL.statement = &RevokePrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 155:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1226
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[7].accountNames}
		}
	case 156:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1230
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[8].accountNames}
		}
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1234
		{
			yyVAL.statement = &RevokeRole{Roles: yyDollar[2].accountNames, From: yyDollar[4].accountNames}
		}
	case 158:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1238
		{
			yyVAL.statement = &RevokeProxy{On: yyDollar[4].accountName, From: yyDollar[6].accountNames}
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1244
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].strs}
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1248
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].strs}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1252
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].strs}
		}
	case 162:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1256
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].strs}
		}
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1260
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].strs}
		}
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1264
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].strs}
		}
	case 165:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1268
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].strs}
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1272
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].strs}
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1276
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].strs}
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1280
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].strs}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1284
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].strs}
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1288
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].strs}
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1292
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].strs}
		}
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1296
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].strs}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1300
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].strs}
		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1304
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].strs}
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1308
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].strs}
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1312
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].strs}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1316
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].strs}
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1320
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].strs}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1324
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].strs}
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1328
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].strs}
		}
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1332
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].strs}
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1336
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].strs}
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1340
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].strs}
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1344
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].strs}
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1348
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].strs}
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1352
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].strs}
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1356
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].strs}
		}
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1360
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].strs}
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1364
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].strs}
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1370
		{
			yyVAL.grantPrivileges = []Privilege{yyDollar[1].grantPrivilege}
		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1374
		{
			yyVAL.grantPrivileges = append(yyDollar[1].grantPrivileges, yyDollar[3].grantPrivilege)
		}
	case 192:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1379
		{
			yyVAL.strs = nil
		}
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1383
		{
			yyVAL.strs = yyDollar[2].strs
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1389
		{
			yyVAL.strs = []string{yyDollar[1].colIdent.String()}
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1393
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].colIdent.String())
		}
	case 196:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1398
		{
			yyVAL.grantObjectType = GrantObjectType_Any
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1402
		{
			yyVAL.grantObjectType = GrantObjectType_Table
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1406
		{
			yyVAL.grantObjectType = GrantObjectType_Function
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1410
		{
			yyVAL.grantObjectType = GrantObjectType_Procedure
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1416
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1420
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1424
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].colIdent.String()}
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1428
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: "*"}
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1432
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: yyDollar[3].colIdent.String()}
		}
	case 205:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1437
		{
			yyVAL.grantAssumption = nil
		}
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1441
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 207:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1445
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 208:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1449
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].accountName, Roles: nil}
		}
	case 209:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1453
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].accountName, Roles: nil}
		}
	case 210:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1457
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].accountName, Roles: yyDollar[7].accountNames}
		}
	case 211:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1461
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].accountName, Roles: yyDollar[5].accountNames}
		}
	case 212:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1466
		{
			yyVAL.boolean = false
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1470
		{
			yyVAL.boolean = true
		}
	case 214:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1475
		{
			yyVAL.boolean = false
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1479
		{
			yyVAL.boolean = true
		}
	case 216:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1486
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 217:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1498
		{
			yyVAL.procedureParams = nil
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1502
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1508
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1512
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1518
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[1].colIdent.String(), Type: yyDollar[2].columnType}
		}
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1522
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1526
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1530
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 225:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1535
		{
			yyVAL.characteristics = nil
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1539
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1545
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1549
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1555
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1559
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1563
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1567
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1571
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1575
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1579
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1583
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1587
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1591
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 239:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1597
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1603
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: "", Definer: yyDollar[1].str, Security: yyDollar[2].str}
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1607
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: yyDollar[1].str, Definer: yyDollar[2].str, Security: yyDollar[3].str}
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1613
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1617
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1621
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 245:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1626
		{
			yyVAL.str = ""
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1630
		{
			yyVAL.str = yyDollar[3].accountName.String()
		}
	case 247:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1635
		{
			yyVAL.str = ""
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1639
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 249:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1643
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1649
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1653
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1657
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1663
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 254:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1671
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1675
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1681
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1685
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1691
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1699
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1707
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1717
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1721
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1727
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1731
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 265:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1735
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 266:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1739
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 267:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1743
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 268:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1749
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 269:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1753
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1757
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 271:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1761
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 272:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1765
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 273:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1769
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 274:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1775
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1779
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 276:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1783
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1789
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1793
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1799
		{
			yyVAL.str = BeforeStr
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1803
		{
			yyVAL.str = AfterStr
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1809
		{
			yyVAL.str = InsertStr
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1813
		{
			yyVAL.str = UpdateStr
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1817
		{
			yyVAL.str = DeleteStr
		}
	case 284:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1822
		{
			yyVAL.triggerOrder = nil
		}
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1826
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1830
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1836
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 292:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1846
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 293:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1852
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 294:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1856
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1862
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 296:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1866
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 297:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1872
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 298:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1878
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 299:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1883
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 300:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1888
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 301:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1894
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1902
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1906
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 304:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1912
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 305:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1918
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 306:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1922
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 307:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1926
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 308:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1930
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1934
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 310:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1938
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1945
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1949
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1953
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1959
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1963
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1969
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1973
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1977
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1981
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1985
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1989
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1995
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 323:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1999
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2003
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 325:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2007
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2013
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2017
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2023
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2027
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2033
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2039
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2043
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2047
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2051
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2055
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2059
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2063
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2067
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2071
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2075
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2079
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2083
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2089
		{
			yyVAL.statement = &Resignal{}
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2093
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 345:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2097
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2101
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2105
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 348:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2109
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2115
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2120
		{
			yyVAL.exprs = nil
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2124
		{
			yyVAL.exprs = nil
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2128
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2134
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2138
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2144
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 385:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2179
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
		}
	case 386:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2195
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2202
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2207
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2212
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2218
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 391:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2222
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2227
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2231
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2235
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2241
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2249
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2259
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 398:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2268
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2272
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2276
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2281
		{
			yyVAL.columnType = ColumnType{}
		}
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2285
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2294
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2303
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2312
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2321
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2330
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2339
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 409:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2348
		{
			opt := ColumnType{GeneratedExpr: yyDollar[4].expr, Stored: yyDollar[6].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 410:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2357
		{
			opt := ColumnType{GeneratedExpr: yyDollar[6].expr, Stored: yyDollar[8].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2366
		{
			opt := ColumnType{SRID: NewIntVal(yyDollar[3].bytes)}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2377
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2388
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2393
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2399
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2403
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2407
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2411
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2415
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2419
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2423
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2427
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2431
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2435
		{
			yyVAL.columnType = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2441
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 429:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2447
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2453
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2459
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2465
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 433:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2471
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2477
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 435:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2483
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2491
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2495
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2499
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2503
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2507
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 441:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2513
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2517
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2521
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2525
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 445:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2529
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 446:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2533
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 447:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2537
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2541
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2545
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2549
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2553
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2557
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2561
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2565
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2569
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2573
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2577
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 458:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2581
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2585
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2589
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2593
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2597
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2601
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 464:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2605
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 465:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2610
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 466:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2614
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 467:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2618
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 468:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2622
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 469:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2626
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, BinaryCollate: true}
		}
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2630
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2634
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2638
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2642
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2646
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2650
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 476:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2654
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, BinaryCollate: true}
		}
	case 477:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2658
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, BinaryCollate: true}
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2664
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2668
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2672
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2676
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2680
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2684
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2688
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2692
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2698
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2703
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 488:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2708
		{
			yyVAL.sqlVal = nil
		}
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2712
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 490:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2717
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 491:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2721
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 492:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2729
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2733
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 494:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2739
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2747
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2751
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2755
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2760
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2764
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2770
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2776
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2782
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 503:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2787
		{
			yyVAL.str = ""
		}
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2791
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2795
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 506:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2800
		{
			yyVAL.str = ""
		}
	case 507:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2804
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2808
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 509:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2813
		{
			yyVAL.boolean = false
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2817
		{
			yyVAL.boolean = true
		}
	case 511:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2822
		{
			yyVAL.charsetCollates = nil
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2826
		{
			yyVAL.charsetCollates = yyDollar[1].charsetCollates
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2832
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2836
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2840
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2844
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2848
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2852
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 519:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2858
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 520:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2862
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 521:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2866
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 522:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2870
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 523:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2876
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 524:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2880
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 525:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2886
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2892
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2896
		{
			yyVAL.colKeyOpt = colKey
		}
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2900
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2904
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2908
		{
			yyVAL.colKeyOpt = colKeyFulltextKey
		}
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2914
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2920
		{
			yyVAL.statement = &Flush{Type: yyDollar[2].str, Option: yyDollar[3].flushOption}
		}
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2926
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2930
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2934
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2938
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2942
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2946
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2950
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2954
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2958
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].str}
		}
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2962
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2966
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2970
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 545:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2975
		{
			yyVAL.str = ""
		}
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2977
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2981
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2983
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 549:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2986
		{
			yyVAL.str = ""
		}
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2988
		{
			yyVAL.str = yyDollar[1].str
		}
	case 551:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2992
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 552:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2996
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 553:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3001
		{
			yyVAL.indexOptions = nil
		}
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3005
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3011
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3015
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3021
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3025
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3030
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 560:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3036
		{
			yyVAL.str = ""
		}
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3040
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3048
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 563:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3052
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3056
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3060
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true}
		}
	case 566:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3064
		{
			var name string
			name = yyDollar[2].str
			if name == "" {
				name = yyDollar[5].str
			}
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].str), Name: NewColIdent(name), Unique: true}
		}
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3073
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3077
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3081
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 570:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3087
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 571:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3091
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3095
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3101
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3105
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 575:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3110
		{
			yyVAL.str = ""
		}
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3114
		{
			yyVAL.str = yyDollar[1].str
		}
	case 577:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3119
		{
			yyVAL.str = ""
		}
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3123
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3129
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3133
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3139
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3143
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3149
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3153
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3157
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 586:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3163
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 587:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3167
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 588:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3171
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 589:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3175
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 590:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3179
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3185
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3189
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3193
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3197
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 595:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3203
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3209
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3213
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 598:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3218
		{
			yyVAL.str = ""
		}
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3222
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3226
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3232
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3238
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 603:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3244
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3248
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3252
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3256
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3260
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 608:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3265
		{
			yyVAL.boolean = true
		}
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3269
		{
			yyVAL.boolean = true
		}
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3273
		{
			yyVAL.boolean = false
		}
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3278
		{
			yyVAL.str = ""
		}
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3282
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3286
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3294
		{
			yyVAL.str = yyDollar[1].str
		}
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3298
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3302
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3308
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3312
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3316
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 620:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3321
		{
			yyVAL.str = ""
		}
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3325
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 622:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3330
		{
			yyVAL.str = string("")
		}
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3334
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 625:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3343
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3356
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3360
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 628:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3366
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 629:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3373
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3380
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 631:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3384
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3388
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 633:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3393
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 634:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3397
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3401
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3406
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3411
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3416
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3421
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 640:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3425
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 641:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3429
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 642:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3436
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3442
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3446
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3452
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3458
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3463
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 648:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3467
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 649:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3471
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3475
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 651:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3481
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[7].indexColumns, Options: yyDollar[9].indexOptions}
			yyVAL.ddl = ddl
		}
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3487
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3491
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 654:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3496
		{
			yyVAL.columnOrder = nil
		}
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3500
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3504
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 657:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3509
		{
		}
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3511
		{
		}
	case 659:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3515
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3521
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3525
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 662:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3531
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 663:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3535
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3541
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3545
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3551
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 667:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3555
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3563
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 669:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3567
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 670:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3573
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 671:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3581
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 672:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3585
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 673:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3593
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 674:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3601
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 675:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3609
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName}, IfExists: exists}
		}
	case 676:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3617
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName}, IfExists: exists}
		}
	case 677:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3625
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 678:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3633
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3642
		{

		}
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3646
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3650
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3656
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3660
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3666
		{
			yyVAL.statement = &Analyze{Tables: yyDollar[3].tableNames}
		}
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3672
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 686:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3677
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3681
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 688:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3685
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 689:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3689
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 690:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3693
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 691:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3698
		{
			yyVAL.statement = &Show{Type: CreateProcedureStr, Table: yyDollar[4].tableName}
		}
	case 692:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3702
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 693:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3706
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3710
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3714
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3718
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 697:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3722
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3726
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3730
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3734
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3738
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 702:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3742
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 703:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3746
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, AsOf: yyDollar[7].expr, Filter: yyDollar[8].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, Table: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 704:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3751
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3756
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 706:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3760
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 707:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3764
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3768
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3772
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3778
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3786
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3790
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 713:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3795
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 714:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3799
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3804
		{
			yyVAL.statement = &ShowPrivileges{}
		}
	case 716:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3808
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 717:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3812
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3816
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3820
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3826
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 721:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3832
		{
			yyVAL.boolean = false
		}
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3836
		{
			yyVAL.boolean = true
		}
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3842
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3846
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 725:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3852
		{
			yyVAL.str = ""
		}
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3856
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3860
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 728:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3866
		{
			yyVAL.showFilter = nil
		}
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3870
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3874
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[3].bytes)}
		}
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3878
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 732:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3884
		{
			yyVAL.str = ""
		}
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3888
		{
			yyVAL.str = SessionStr
		}
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3892
		{
			yyVAL.str = GlobalStr
		}
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3898
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3902
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: yyDollar[2].tableIdent.v + "/" + yyDollar[4].tableIdent.v}}
		}
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3906
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3912
		{
			yyVAL.statement = &Begin{}
		}
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3916
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3922
		{
			yyVAL.statement = &Begin{}
		}
	case 741:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3926
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3930
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3936
		{
			yyVAL.statement = &Commit{}
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3942
		{
			yyVAL.statement = &Rollback{}
		}
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3948
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3954
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 747:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3958
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3962
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 749:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3966
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3972
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3977
		{
		}
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3978
		{
		}
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3982
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3986
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3992
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 759:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4000
		{
			yyVAL.str = ""
		}
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4004
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4015
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[3].expr}
			yyVAL.statement = &Show{Type: "columns", Table: yyDollar[2].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 764:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4021
		{
			setAllowComments(yylex, true)
		}
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4025
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 766:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4031
		{
			yyVAL.bytes2 = nil
		}
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4035
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4041
		{
			yyVAL.str = UnionStr
		}
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4045
		{
			yyVAL.str = UnionAllStr
		}
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4049
		{
			yyVAL.str = UnionDistinctStr
		}
	case 771:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4054
		{
			yyVAL.byt = 0
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4058
		{
			yyVAL.byt = 1
		}
	case 773:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4063
		{
			yyVAL.str = ""
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4067
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4071
		{
			yyVAL.str = SQLCacheStr
		}
	case 776:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4076
		{
			yyVAL.str = ""
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4080
		{
			yyVAL.str = ""
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4084
		{
			yyVAL.str = DistinctStr
		}
	case 779:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4089
		{
			yyVAL.str = ""
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4093
		{
			yyVAL.str = StraightJoinHint
		}
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4099
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 782:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4107
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4118
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4122
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4126
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 786:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4130
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4136
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4140
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4144
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 790:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4148
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4154
		{
			yyVAL.over = &Over{NameRef: yyDollar[2].colIdent}
		}
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4158
		{
			yyVAL.over = (*Over)(yyDollar[2].windowDef)
		}
	case 793:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4164
		{
			yyVAL.windowDef = &WindowDef{NameRef: yyDollar[2].colIdent, PartitionBy: yyDollar[3].exprs, OrderBy: yyDollar[4].orderBy, Frame: yyDollar[5].frame}
		}
	case 794:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4169
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4172
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 796:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4177
		{
			yyVAL.exprs = nil
		}
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4181
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 798:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4186
		{
			yyVAL.over = nil
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4190
		{
			yyVAL.over = yyDollar[1].over
		}
	case 800:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4195
		{
			yyVAL.frame = nil
		}
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4199
		{
			yyVAL.frame = &Frame{Unit: RowsUnit, Extent: yyDollar[2].frameExtent}
		}
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4203
		{
			yyVAL.frame = &Frame{Unit: RangeUnit, Extent: yyDollar[2].frameExtent}
		}
	case 803:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4210
		{
			startBound := yyDollar[2].frameBound
			endBound := yyDollar[4].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound, End: endBound}
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4233
		{
			startBound := yyDollar[1].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound}
		}
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4248
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedPreceding}
		}
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4252
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedFollowing}
		}
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4256
		{
			yyVAL.frameBound = &FrameBound{Type: CurrentRow}
		}
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4260
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprPreceding,
			}
		}
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4267
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprFollowing,
			}
		}
	case 810:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4275
		{
			yyVAL.window = nil
		}
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4278
		{
			yyVAL.window = yyDollar[2].window
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4284
		{
			yyVAL.window = Window{yyDollar[1].windowDef}
		}
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4287
		{
			yyVAL.window = append(yyDollar[1].window, yyDollar[3].windowDef)
		}
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4293
		{
			def := yyDollar[3].windowDef
			def.Name = yyDollar[1].colIdent
			yyVAL.windowDef = def
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4302
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4306
		{
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4311
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4315
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4319
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4325
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4329
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4333
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4337
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4343
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4347
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4357
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 829:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4361
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4371
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4377
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4384
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 834:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4390
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 835:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4394
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 836:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4400
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 837:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4405
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4416
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 839:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4420
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 840:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4424
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4428
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 842:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4432
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 843:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4443
		{
			yyVAL.expr = nil
		}
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4447
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 845:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4452
		{
			yyVAL.columns = nil
		}
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4456
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4462
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4466
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4472
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4476
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 851:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4482
		{
			yyVAL.tableExpr = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].selectExprs}
		}
	case 852:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4495
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 853:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4499
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 854:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4503
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4507
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4513
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 857:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4515
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 858:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4519
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4521
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 860:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4525
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4527
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 862:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4530
		{
			yyVAL.empty = struct{}{}
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4532
		{
			yyVAL.empty = struct{}{}
		}
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4537
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4541
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4547
		{
			yyVAL.str = JoinStr
		}
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4551
		{
			yyVAL.str = JoinStr
		}
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4555
		{
			yyVAL.str = JoinStr
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4561
		{
			yyVAL.str = StraightJoinStr
		}
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4567
		{
			yyVAL.str = LeftJoinStr
		}
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4571
		{
			yyVAL.str = LeftJoinStr
		}
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4575
		{
			yyVAL.str = RightJoinStr
		}
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4579
		{
			yyVAL.str = RightJoinStr
		}
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4585
		{
			yyVAL.str = NaturalJoinStr
		}
	case 876:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4589
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4599
		{
			yyVAL.triggerName = TriggerName{Name: yyDollar[1].colIdent}
		}
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4603
		{
			yyVAL.triggerName = TriggerName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4609
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4615
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4619
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4625
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4629
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4635
		{
			yyVAL.procedureName = ProcedureName{Name: yyDollar[1].colIdent}
		}
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4639
		{
			yyVAL.procedureName = ProcedureName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4645
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 887:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4650
		{
			yyVAL.indexHints = nil
		}
	case 888:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4654
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 889:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4658
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 890:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4662
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 891:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4667
		{
			yyVAL.expr = nil
		}
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4671
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4677
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 894:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4681
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4685
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4689
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 897:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4693
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4697
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4701
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 900:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4705
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 901:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4711
		{
			yyVAL.str = ""
		}
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4715
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4721
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4725
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4731
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4735
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 907:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4739
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 908:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4743
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 909:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4747
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4751
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 911:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4755
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 912:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4759
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 913:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4763
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4767
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4773
		{
			yyVAL.str = IsNullStr
		}
	case 916:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4777
		{
			yyVAL.str = IsNotNullStr
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4781
		{
			yyVAL.str = IsTrueStr
		}
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4785
		{
			yyVAL.str = IsNotTrueStr
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4789
		{
			yyVAL.str = IsFalseStr
		}
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4793
		{
			yyVAL.str = IsNotFalseStr
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4799
		{
			yyVAL.str = EqualStr
		}
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4803
		{
			yyVAL.str = LessThanStr
		}
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4807
		{
			yyVAL.str = GreaterThanStr
		}
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4811
		{
			yyVAL.str = LessEqualStr
		}
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4815
		{
			yyVAL.str = GreaterEqualStr
		}
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4819
		{
			yyVAL.str = NotEqualStr
		}
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4823
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 928:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4828
		{
			yyVAL.expr = nil
		}
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4832
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4838
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4842
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4846
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4852
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4858
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4862
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 936:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4868
		{
			yyVAL.selectExprs = nil
		}
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4875
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4879
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4885
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4889
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4895
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4899
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4903
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4907
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4911
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4915
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4919
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4923
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4927
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4931
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4935
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4939
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4943
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4947
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4951
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4955
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4959
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4963
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4967
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4971
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4975
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4979
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 964:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4983
		{
			yyVAL.expr = &UnaryExpr{Operator: yyDollar[1].str, Expr: yyDollar[2].expr}
		}
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4987
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4995
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5009
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5013
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5017
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 976:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5037
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 977:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5041
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 978:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5051
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 979:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5055
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 980:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5059
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 981:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5063
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 982:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5067
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 983:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5071
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 984:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5075
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 985:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5079
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 986:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5083
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 987:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5087
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 988:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5091
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 989:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5095
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 990:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5099
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 991:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5103
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 992:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5107
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 993:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5111
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 994:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5115
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 995:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5124
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 996:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5128
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 997:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5132
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 998:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5136
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 999:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5140
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 1000:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5144
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1001:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5148
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1002:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5152
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1003:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5156
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1004:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5160
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1005:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5164
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1006:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5175
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1007:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5179
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1008:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5183
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5187
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1010:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5191
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 1011:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5195
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 1012:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5199
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 1013:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5203
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1014:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5207
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1015:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5211
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1016:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5215
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1017:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5219
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 1018:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5223
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 1019:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5227
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 1020:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5231
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 1021:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5235
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 1022:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5239
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 1023:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5243
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1024:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5247
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 1025:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5251
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 1026:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5255
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 1027:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5265
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1028:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5269
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5273
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1030:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5278
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1031:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5283
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1032:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5288
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1033:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5294
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1034:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5299
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1035:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5303
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1036:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5308
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1037:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5312
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1038:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5316
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1039:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5321
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1040:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5326
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1041:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5331
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1042:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5335
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1043:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5339
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1046:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5350
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1047:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5360
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1048:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5364
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1049:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5368
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1050:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5372
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1051:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5376
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1052:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5380
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1053:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5386
		{
			yyVAL.str = ""
		}
	case 1054:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5390
		{
			yyVAL.str = BooleanModeStr
		}
	case 1055:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5394
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 1056:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5398
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 1057:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5402
		{
			yyVAL.str = QueryExpansionStr
		}
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5408
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5412
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5418
		{
			yyVAL.str = Armscii8Str
		}
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5422
		{
			yyVAL.str = AsciiStr
		}
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5426
		{
			yyVAL.str = Big5Str
		}
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5430
		{
			yyVAL.str = UBinaryStr
		}
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5434
		{
			yyVAL.str = Cp1250Str
		}
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5438
		{
			yyVAL.str = Cp1251Str
		}
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5442
		{
			yyVAL.str = Cp1256Str
		}
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5446
		{
			yyVAL.str = Cp1257Str
		}
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5450
		{
			yyVAL.str = Cp850Str
		}
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5454
		{
			yyVAL.str = Cp852Str
		}
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5458
		{
			yyVAL.str = Cp866Str
		}
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5462
		{
			yyVAL.str = Cp932Str
		}
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5466
		{
			yyVAL.str = Dec8Str
		}
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5470
		{
			yyVAL.str = EucjpmsStr
		}
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5474
		{
			yyVAL.str = EuckrStr
		}
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5478
		{
			yyVAL.str = Gb18030Str
		}
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5482
		{
			yyVAL.str = Gb2312Str
		}
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5486
		{
			yyVAL.str = GbkStr
		}
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5490
		{
			yyVAL.str = Geostd8Str
		}
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5494
		{
			yyVAL.str = GreekStr
		}
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5498
		{
			yyVAL.str = HebrewStr
		}
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5502
		{
			yyVAL.str = Hp8Str
		}
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5506
		{
			yyVAL.str = Keybcs2Str
		}
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5510
		{
			yyVAL.str = Koi8rStr
		}
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5514
		{
			yyVAL.str = Koi8uStr
		}
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5518
		{
			yyVAL.str = Latin1Str
		}
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5522
		{
			yyVAL.str = Latin2Str
		}
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5526
		{
			yyVAL.str = Latin5Str
		}
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5530
		{
			yyVAL.str = Latin7Str
		}
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5534
		{
			yyVAL.str = MacceStr
		}
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5538
		{
			yyVAL.str = MacromanStr
		}
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5542
		{
			yyVAL.str = SjisStr
		}
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5546
		{
			yyVAL.str = Swe7Str
		}
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5550
		{
			yyVAL.str = Tis620Str
		}
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5554
		{
			yyVAL.str = Ucs2Str
		}
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5558
		{
			yyVAL.str = UjisStr
		}
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5562
		{
			yyVAL.str = Utf16Str
		}
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5566
		{
			yyVAL.str = Utf16leStr
		}
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5570
		{
			yyVAL.str = Utf32Str
		}
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5574
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5578
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5582
		{
			yyVAL.str = Utf8mb4Str
		}
	case 1102:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5588
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1103:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5592
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 1104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5596
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5600
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1106:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5604
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1107:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5608
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5614
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5618
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5622
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1111:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5626
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1112:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5630
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5634
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5638
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5643
		{
			yyVAL.expr = nil
		}
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5647
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1117:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5652
		{
			yyVAL.str = string("")
		}
	case 1118:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5656
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5662
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 1120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5666
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 1121:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5672
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 1122:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5677
		{
			yyVAL.expr = nil
		}
	case 1123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5681
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5687
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5691
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 1126:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5695
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5701
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5705
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5709
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5713
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5717
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5721
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5725
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5729
		{
			yyVAL.expr = &NullVal{}
		}
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5735
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 1136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5739
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1137:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5743
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1138:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5748
		{
			yyVAL.exprs = nil
		}
	case 1139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5752
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5758
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5762
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5768
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1143:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5773
		{
			yyVAL.expr = nil
		}
	case 1144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5777
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5783
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1146:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5788
		{
			yyVAL.orderBy = nil
		}
	case 1147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5792
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5798
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 1149:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5802
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 1150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5808
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 1151:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5813
		{
			yyVAL.str = AscScr
		}
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5817
		{
			yyVAL.str = AscScr
		}
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5821
		{
			yyVAL.str = DescScr
		}
	case 1154:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5826
		{
			yyVAL.limit = nil
		}
	case 1155:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5830
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 1156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5834
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 1157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5838
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5844
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5848
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1160:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5853
		{
			yyVAL.str = ""
		}
	case 1161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5857
		{
			yyVAL.str = ForUpdateStr
		}
	case 1162:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5861
		{
			yyVAL.str = ShareModeStr
		}
	case 1163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5874
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 1164:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5878
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5882
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 1166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5886
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 1167:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5891
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 1168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5895
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 1169:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5899
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 1170:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5905
		{
			yyVAL.columns = nil
		}
	case 1171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5909
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5915
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5919
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 1174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5923
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1175:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5927
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 1176:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5932
		{
			yyVAL.assignExprs = nil
		}
	case 1177:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5936
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5942
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 1179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5946
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5952
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 1181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5956
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 1182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5962
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5968
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5978
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 1185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5982
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 1186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5988
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 1187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5991
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5997
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 1189:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6001
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6007
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 1191:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6018
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6031
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1193:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6044
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6050
		{
			yyVAL.setScope = SetScope_Global
		}
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6054
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6060
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6064
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6068
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 1199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6074
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1200:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6078
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6082
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 1203:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6089
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6096
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6100
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6104
		{
			yyVAL.expr = &Default{}
		}
	case 1210:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6113
		{
			yyVAL.byt = 0
		}
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6115
		{
			yyVAL.byt = 1
		}
	case 1212:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6118
		{
			yyVAL.byt = 0
		}
	case 1213:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6120
		{
			yyVAL.byt = 1
		}
	case 1214:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6123
		{
			yyVAL.byt = 0
		}
	case 1215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6125
		{
			yyVAL.byt = 1
		}
	case 1216:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6128
		{
			yyVAL.str = ""
		}
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6130
		{
			yyVAL.str = IgnoreStr
		}
	case 1218:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6133
		{
			yyVAL.sqlVal = nil
		}
	case 1219:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6135
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1220:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6137
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6141
		{
			yyVAL.empty = struct{}{}
		}
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6143
		{
			yyVAL.empty = struct{}{}
		}
	case 1223:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6146
		{
			yyVAL.empty = struct{}{}
		}
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6148
		{
			yyVAL.empty = struct{}{}
		}
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6150
		{
			yyVAL.empty = struct{}{}
		}
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6154
		{
			yyVAL.str = UniqueStr
		}
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6156
		{
			yyVAL.str = FulltextStr
		}
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6158
		{
			yyVAL.str = SpatialStr
		}
	case 1229:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6161
		{
			yyVAL.str = ""
		}
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6163
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1231:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6166
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 1232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6168
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6172
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6176
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6182
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 1236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6186
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6193
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6199
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6203
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6210
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1243:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6215
		{
			yyVAL.str = string("")
		}
	case 1244:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6217
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1245:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6220
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6222
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1247:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6225
		{
			yyVAL.EnclosedBy = nil
		}
	case 1248:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6229
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1249:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6234
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6238
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1251:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6243
		{
			yyVAL.sqlVal = nil
		}
	case 1252:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6247
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1253:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6252
		{
			yyVAL.sqlVal = nil
		}
	case 1254:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6256
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1255:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6261
		{
			yyVAL.Fields = nil
		}
	case 1256:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6265
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1257:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6270
		{
			yyVAL.Lines = nil
		}
	case 1258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6274
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1259:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6279
		{
			yyVAL.sqlVal = nil
		}
	case 1260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6283
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1261:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6289
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6295
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1263:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6299
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1264:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6305
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1265:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6309
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6315
		{
			yyVAL.lockType = LockRead
		}
	case 1267:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6319
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6323
		{
			yyVAL.lockType = LockWrite
		}
	case 1269:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6327
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1270:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6333
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1271:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6339
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[2].bytes)}
		}
	case 1272:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6343
		{
			yyVAL.statement = &Kill{ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1273:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6347
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6910
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6919
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
