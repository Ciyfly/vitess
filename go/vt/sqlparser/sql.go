// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

//import "runtime/debug"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

func yySpecialCommentMode(yylex interface{}) bool {
	tkn := yylex.(*Tokenizer)
	return tkn.specialComment != nil
}

//line sql.y:64
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	variables                Variables
	into                     *Into
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	triggerName              TriggerName
	tableName                TableName
	tableNames               TableNames
	procedureName            ProcedureName
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	flushOption              *FlushOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	viewSpec                 *ViewSpec
	showFilter               *ShowFilter
	frame                    *Frame
	frameExtent              *FrameExtent
	frameBound               *FrameBound
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	charsetCollate           *CharsetAndCollate
	charsetCollates          []*CharsetAndCollate
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptionItem            TLSOptionItem
	tlsOptionItems           []TLSOptionItem
	accountLimitItem         AccountLimitItem
	accountLimitItems        []AccountLimitItem
	passLockItem             PassLockItem
	passLockItems            []PassLockItem
	grantPrivilege           Privilege
	grantPrivileges          []Privilege
	grantObjectType          GrantObjectType
	privilegeLevel           PrivilegeLevel
	grantAssumption          *GrantUserAssumption
	with                     *With
	window                   Window
	over                     *Over
	windowDef                *WindowDef
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const DUPLICATE = 57369
const DEFAULT = 57370
const SET = 57371
const LOCK = 57372
const UNLOCK = 57373
const KEYS = 57374
const OF = 57375
const OUTFILE = 57376
const DUMPFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const INTO = 57425
const OR = 57426
const XOR = 57427
const AND = 57428
const NOT = 57429
const BETWEEN = 57430
const CASE = 57431
const WHEN = 57432
const THEN = 57433
const ELSE = 57434
const ELSEIF = 57435
const END = 57436
const LE = 57437
const GE = 57438
const NE = 57439
const NULL_SAFE_EQUAL = 57440
const IS = 57441
const LIKE = 57442
const REGEXP = 57443
const IN = 57444
const UNBOUNDED = 57445
const PARTITION = 57446
const RANGE = 57447
const ROWS = 57448
const GROUPS = 57449
const PRECEDING = 57450
const FOLLOWING = 57451
const FULL = 57452
const SHIFT_LEFT = 57453
const SHIFT_RIGHT = 57454
const DIV = 57455
const MOD = 57456
const UNARY = 57457
const COLLATE = 57458
const BINARY = 57459
const UNDERSCORE_ARMSCII8 = 57460
const UNDERSCORE_ASCII = 57461
const UNDERSCORE_BIG5 = 57462
const UNDERSCORE_BINARY = 57463
const UNDERSCORE_CP1250 = 57464
const UNDERSCORE_CP1251 = 57465
const UNDERSCORE_CP1256 = 57466
const UNDERSCORE_CP1257 = 57467
const UNDERSCORE_CP850 = 57468
const UNDERSCORE_CP852 = 57469
const UNDERSCORE_CP866 = 57470
const UNDERSCORE_CP932 = 57471
const UNDERSCORE_DEC8 = 57472
const UNDERSCORE_EUCJPMS = 57473
const UNDERSCORE_EUCKR = 57474
const UNDERSCORE_GB18030 = 57475
const UNDERSCORE_GB2312 = 57476
const UNDERSCORE_GBK = 57477
const UNDERSCORE_GEOSTD8 = 57478
const UNDERSCORE_GREEK = 57479
const UNDERSCORE_HEBREW = 57480
const UNDERSCORE_HP8 = 57481
const UNDERSCORE_KEYBCS2 = 57482
const UNDERSCORE_KOI8R = 57483
const UNDERSCORE_KOI8U = 57484
const UNDERSCORE_LATIN1 = 57485
const UNDERSCORE_LATIN2 = 57486
const UNDERSCORE_LATIN5 = 57487
const UNDERSCORE_LATIN7 = 57488
const UNDERSCORE_MACCE = 57489
const UNDERSCORE_MACROMAN = 57490
const UNDERSCORE_SJIS = 57491
const UNDERSCORE_SWE7 = 57492
const UNDERSCORE_TIS620 = 57493
const UNDERSCORE_UCS2 = 57494
const UNDERSCORE_UJIS = 57495
const UNDERSCORE_UTF16 = 57496
const UNDERSCORE_UTF16LE = 57497
const UNDERSCORE_UTF32 = 57498
const UNDERSCORE_UTF8 = 57499
const UNDERSCORE_UTF8MB3 = 57500
const UNDERSCORE_UTF8MB4 = 57501
const INTERVAL = 57502
const JSON_EXTRACT_OP = 57503
const JSON_UNQUOTE_EXTRACT_OP = 57504
const CREATE = 57505
const ALTER = 57506
const DROP = 57507
const RENAME = 57508
const ANALYZE = 57509
const ADD = 57510
const MODIFY = 57511
const CHANGE = 57512
const SCHEMA = 57513
const TABLE = 57514
const INDEX = 57515
const INDEXES = 57516
const VIEW = 57517
const TO = 57518
const IGNORE = 57519
const IF = 57520
const PRIMARY = 57521
const COLUMN = 57522
const SPATIAL = 57523
const FULLTEXT = 57524
const KEY_BLOCK_SIZE = 57525
const CHECK = 57526
const ACTION = 57527
const CASCADE = 57528
const CONSTRAINT = 57529
const FOREIGN = 57530
const NO = 57531
const REFERENCES = 57532
const RESTRICT = 57533
const FIRST = 57534
const AFTER = 57535
const SHOW = 57536
const DESCRIBE = 57537
const EXPLAIN = 57538
const DATE = 57539
const ESCAPE = 57540
const REPAIR = 57541
const OPTIMIZE = 57542
const TRUNCATE = 57543
const FORMAT = 57544
const MAXVALUE = 57545
const REORGANIZE = 57546
const LESS = 57547
const THAN = 57548
const PROCEDURE = 57549
const TRIGGER = 57550
const TRIGGERS = 57551
const FUNCTION = 57552
const STATUS = 57553
const VARIABLES = 57554
const WARNINGS = 57555
const ERRORS = 57556
const KILL = 57557
const CONNECTION = 57558
const SEQUENCE = 57559
const ENABLE = 57560
const DISABLE = 57561
const EACH = 57562
const ROW = 57563
const BEFORE = 57564
const FOLLOWS = 57565
const PRECEDES = 57566
const DEFINER = 57567
const INVOKER = 57568
const INOUT = 57569
const OUT = 57570
const DETERMINISTIC = 57571
const CONTAINS = 57572
const READS = 57573
const MODIFIES = 57574
const SQL = 57575
const SECURITY = 57576
const TEMPORARY = 57577
const ALGORITHM = 57578
const MERGE = 57579
const TEMPTABLE = 57580
const UNDEFINED = 57581
const CLASS_ORIGIN = 57582
const SUBCLASS_ORIGIN = 57583
const MESSAGE_TEXT = 57584
const MYSQL_ERRNO = 57585
const CONSTRAINT_CATALOG = 57586
const CONSTRAINT_SCHEMA = 57587
const CONSTRAINT_NAME = 57588
const CATALOG_NAME = 57589
const SCHEMA_NAME = 57590
const TABLE_NAME = 57591
const COLUMN_NAME = 57592
const CURSOR_NAME = 57593
const SIGNAL = 57594
const RESIGNAL = 57595
const SQLSTATE = 57596
const DECLARE = 57597
const CONDITION = 57598
const CURSOR = 57599
const CONTINUE = 57600
const EXIT = 57601
const UNDO = 57602
const HANDLER = 57603
const FOUND = 57604
const SQLWARNING = 57605
const SQLEXCEPTION = 57606
const USER = 57607
const IDENTIFIED = 57608
const ROLE = 57609
const REUSE = 57610
const GRANT = 57611
const GRANTS = 57612
const REVOKE = 57613
const NONE = 57614
const ATTRIBUTE = 57615
const RANDOM = 57616
const PASSWORD = 57617
const INITIAL = 57618
const AUTHENTICATION = 57619
const SSL = 57620
const X509 = 57621
const CIPHER = 57622
const ISSUER = 57623
const SUBJECT = 57624
const ACCOUNT = 57625
const EXPIRE = 57626
const NEVER = 57627
const DAY = 57628
const OPTION = 57629
const OPTIONAL = 57630
const EXCEPT = 57631
const ADMIN = 57632
const PRIVILEGES = 57633
const MAX_QUERIES_PER_HOUR = 57634
const MAX_UPDATES_PER_HOUR = 57635
const MAX_CONNECTIONS_PER_HOUR = 57636
const MAX_USER_CONNECTIONS = 57637
const FLUSH = 57638
const FAILED_LOGIN_ATTEMPTS = 57639
const PASSWORD_LOCK_TIME = 57640
const REQUIRE = 57641
const PROXY = 57642
const ROUTINE = 57643
const TABLESPACE = 57644
const CLIENT = 57645
const SLAVE = 57646
const EVENT = 57647
const EXECUTE = 57648
const FILE = 57649
const RELOAD = 57650
const REPLICATION = 57651
const SHUTDOWN = 57652
const SUPER = 57653
const USAGE = 57654
const LOGS = 57655
const ENGINE = 57656
const ERROR = 57657
const GENERAL = 57658
const HOSTS = 57659
const OPTIMIZER_COSTS = 57660
const RELAY = 57661
const SLOW = 57662
const USER_RESOURCES = 57663
const NO_WRITE_TO_BINLOG = 57664
const CHANNEL = 57665
const BEGIN = 57666
const START = 57667
const TRANSACTION = 57668
const COMMIT = 57669
const ROLLBACK = 57670
const SAVEPOINT = 57671
const WORK = 57672
const RELEASE = 57673
const BIT = 57674
const TINYINT = 57675
const SMALLINT = 57676
const MEDIUMINT = 57677
const INT = 57678
const INTEGER = 57679
const BIGINT = 57680
const INTNUM = 57681
const SERIAL = 57682
const REAL = 57683
const DOUBLE = 57684
const FLOAT_TYPE = 57685
const DECIMAL = 57686
const NUMERIC = 57687
const DEC = 57688
const FIXED = 57689
const PRECISION = 57690
const TIME = 57691
const TIMESTAMP = 57692
const DATETIME = 57693
const YEAR = 57694
const CHAR = 57695
const VARCHAR = 57696
const BOOL = 57697
const CHARACTER = 57698
const VARBINARY = 57699
const NCHAR = 57700
const NVARCHAR = 57701
const NATIONAL = 57702
const VARYING = 57703
const TEXT = 57704
const TINYTEXT = 57705
const MEDIUMTEXT = 57706
const LONGTEXT = 57707
const LONG = 57708
const BLOB = 57709
const TINYBLOB = 57710
const MEDIUMBLOB = 57711
const LONGBLOB = 57712
const JSON = 57713
const ENUM = 57714
const GEOMETRY = 57715
const POINT = 57716
const LINESTRING = 57717
const POLYGON = 57718
const GEOMETRYCOLLECTION = 57719
const MULTIPOINT = 57720
const MULTILINESTRING = 57721
const MULTIPOLYGON = 57722
const LOCAL = 57723
const LOW_PRIORITY = 57724
const NULLX = 57725
const AUTO_INCREMENT = 57726
const APPROXNUM = 57727
const SIGNED = 57728
const UNSIGNED = 57729
const ZEROFILL = 57730
const SRID = 57731
const COLLATION = 57732
const DATABASES = 57733
const SCHEMAS = 57734
const TABLES = 57735
const PROCESSLIST = 57736
const COLUMNS = 57737
const FIELDS = 57738
const ENGINES = 57739
const PLUGINS = 57740
const NAMES = 57741
const CHARSET = 57742
const GLOBAL = 57743
const SESSION = 57744
const ISOLATION = 57745
const LEVEL = 57746
const READ = 57747
const WRITE = 57748
const ONLY = 57749
const REPEATABLE = 57750
const COMMITTED = 57751
const UNCOMMITTED = 57752
const SERIALIZABLE = 57753
const ENCRYPTION = 57754
const CURRENT_TIMESTAMP = 57755
const DATABASE = 57756
const CURRENT_DATE = 57757
const CURRENT_USER = 57758
const CURRENT_TIME = 57759
const LOCALTIME = 57760
const LOCALTIMESTAMP = 57761
const UTC_DATE = 57762
const UTC_TIME = 57763
const UTC_TIMESTAMP = 57764
const REPLACE = 57765
const CONVERT = 57766
const CAST = 57767
const SUBSTR = 57768
const SUBSTRING = 57769
const TRIM = 57770
const LEADING = 57771
const TRAILING = 57772
const BOTH = 57773
const GROUP_CONCAT = 57774
const SEPARATOR = 57775
const TIMESTAMPADD = 57776
const TIMESTAMPDIFF = 57777
const OVER = 57778
const WINDOW = 57779
const GROUPING = 57780
const CURRENT = 57781
const AVG = 57782
const BIT_AND = 57783
const BIT_OR = 57784
const BIT_XOR = 57785
const COUNT = 57786
const JSON_ARRAYAGG = 57787
const JSON_OBJECTAGG = 57788
const MAX = 57789
const MIN = 57790
const STDDEV_POP = 57791
const STDDEV = 57792
const STD = 57793
const STDDEV_SAMP = 57794
const SUM = 57795
const VAR_POP = 57796
const VARIANCE = 57797
const VAR_SAMP = 57798
const CUME_DIST = 57799
const DENSE_RANK = 57800
const FIRST_VALUE = 57801
const LAG = 57802
const LAST_VALUE = 57803
const LEAD = 57804
const NTH_VALUE = 57805
const NTILE = 57806
const ROW_NUMBER = 57807
const PERCENT_RANK = 57808
const RANK = 57809
const JSON_TABLE = 57810
const PATH = 57811
const MATCH = 57812
const AGAINST = 57813
const BOOLEAN = 57814
const LANGUAGE = 57815
const WITH = 57816
const QUERY = 57817
const EXPANSION = 57818
const ACCESSIBLE = 57819
const ASENSITIVE = 57820
const CUBE = 57821
const DAY_HOUR = 57822
const DAY_MICROSECOND = 57823
const DAY_MINUTE = 57824
const DAY_SECOND = 57825
const DELAYED = 57826
const DISTINCTROW = 57827
const DUAL = 57828
const EMPTY = 57829
const FETCH = 57830
const FLOAT4 = 57831
const FLOAT8 = 57832
const GET = 57833
const HIGH_PRIORITY = 57834
const HOUR_MICROSECOND = 57835
const HOUR_MINUTE = 57836
const HOUR_SECOND = 57837
const INSENSITIVE = 57838
const INT1 = 57839
const INT2 = 57840
const INT3 = 57841
const INT4 = 57842
const INT8 = 57843
const IO_AFTER_GTIDS = 57844
const IO_BEFORE_GTIDS = 57845
const ITERATE = 57846
const LEAVE = 57847
const LINEAR = 57848
const LOOP = 57849
const MASTER_BIND = 57850
const MASTER_SSL_VERIFY_SERVER_CERT = 57851
const MIDDLEINT = 57852
const MINUTE_MICROSECOND = 57853
const MINUTE_SECOND = 57854
const PURGE = 57855
const READ_WRITE = 57856
const REPEAT = 57857
const RETURN = 57858
const RLIKE = 57859
const SECOND_MICROSECOND = 57860
const SENSITIVE = 57861
const SPECIFIC = 57862
const SQL_BIG_RESULT = 57863
const SQL_SMALL_RESULT = 57864
const VARCHARACTER = 57865
const WHILE = 57866
const YEAR_MONTH = 57867
const UNUSED = 57868
const DESCRIPTION = 57869
const LATERAL = 57870
const MEMBER = 57871
const RECURSIVE = 57872
const BUCKETS = 57873
const CLONE = 57874
const COMPONENT = 57875
const DEFINITION = 57876
const ENFORCED = 57877
const EXCLUDE = 57878
const GEOMCOLLECTION = 57879
const GET_MASTER_PUBLIC_KEY = 57880
const HISTOGRAM = 57881
const HISTORY = 57882
const INACTIVE = 57883
const INVISIBLE = 57884
const LOCKED = 57885
const MASTER_COMPRESSION_ALGORITHMS = 57886
const MASTER_PUBLIC_KEY_PATH = 57887
const MASTER_TLS_CIPHERSUITES = 57888
const MASTER_ZSTD_COMPRESSION_LEVEL = 57889
const NESTED = 57890
const NETWORK_NAMESPACE = 57891
const NOWAIT = 57892
const NULLS = 57893
const OJ = 57894
const OLD = 57895
const ORDINALITY = 57896
const ORGANIZATION = 57897
const OTHERS = 57898
const PERSIST = 57899
const PERSIST_ONLY = 57900
const PRIVILEGE_CHECKS_USER = 57901
const PROCESS = 57902
const REFERENCE = 57903
const REQUIRE_ROW_FORMAT = 57904
const RESOURCE = 57905
const RESPECT = 57906
const RESTART = 57907
const RETAIN = 57908
const SECONDARY = 57909
const SECONDARY_ENGINE = 57910
const SECONDARY_LOAD = 57911
const SECONDARY_UNLOAD = 57912
const SKIP = 57913
const THREAD_PRIORITY = 57914
const TIES = 57915
const VCPU = 57916
const VISIBLE = 57917
const SYSTEM = 57918
const INFILE = 57919
const ACTIVE = 57920
const AGGREGATE = 57921
const ANY = 57922
const ARRAY = 57923
const ASCII = 57924
const AT = 57925
const AUTOEXTEND_SIZE = 57926
const ENDS = 57927
const EVENTS = 57928
const GENERATED = 57929
const ALWAYS = 57930
const STORED = 57931
const VIRTUAL = 57932
const NVAR = 57933
const PASSWORD_LOCK = 57934

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DUMPFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"INTO",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"FULL",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB3",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"ENABLE",
	"DISABLE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"ALGORITHM",
	"MERGE",
	"TEMPTABLE",
	"UNDEFINED",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTION",
	"OPTIONAL",
	"EXCEPT",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EVENT",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"SRID",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ENCRYPTION",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"JSON_TABLE",
	"PATH",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ACCESSIBLE",
	"ASENSITIVE",
	"CUBE",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"DELAYED",
	"DISTINCTROW",
	"DUAL",
	"EMPTY",
	"FETCH",
	"FLOAT4",
	"FLOAT8",
	"GET",
	"HIGH_PRIORITY",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"INSENSITIVE",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"IO_AFTER_GTIDS",
	"IO_BEFORE_GTIDS",
	"ITERATE",
	"LEAVE",
	"LINEAR",
	"LOOP",
	"MASTER_BIND",
	"MASTER_SSL_VERIFY_SERVER_CERT",
	"MIDDLEINT",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"PURGE",
	"READ_WRITE",
	"REPEAT",
	"RETURN",
	"RLIKE",
	"SECOND_MICROSECOND",
	"SENSITIVE",
	"SPECIFIC",
	"SQL_BIG_RESULT",
	"SQL_SMALL_RESULT",
	"VARCHARACTER",
	"WHILE",
	"YEAR_MONTH",
	"UNUSED",
	"DESCRIPTION",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"ACTIVE",
	"AGGREGATE",
	"ANY",
	"ARRAY",
	"ASCII",
	"AT",
	"AUTOEXTEND_SIZE",
	"ENDS",
	"EVENTS",
	"GENERATED",
	"ALWAYS",
	"STORED",
	"VIRTUAL",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 35,
	611, 35,
	-2, 56,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 41,
	190, 1276,
	191, 1295,
	-2, 249,
	-1, 47,
	229, 754,
	230, 754,
	-2, 743,
	-1, 67,
	5, 61,
	-2, 43,
	-1, 477,
	178, 1665,
	-2, 943,
	-1, 478,
	178, 1305,
	-2, 1299,
	-1, 479,
	178, 1306,
	-2, 1300,
	-1, 509,
	178, 1773,
	-2, 1194,
	-1, 510,
	178, 1854,
	-2, 945,
	-1, 511,
	178, 1685,
	-2, 946,
	-1, 578,
	178, 1636,
	-2, 1164,
	-1, 581,
	178, 1653,
	-2, 1093,
	-1, 582,
	178, 1866,
	-2, 1093,
	-1, 583,
	178, 1865,
	-2, 1093,
	-1, 584,
	178, 1864,
	-2, 1093,
	-1, 585,
	178, 1753,
	-2, 1093,
	-1, 586,
	178, 1754,
	-2, 1093,
	-1, 587,
	178, 1651,
	-2, 1093,
	-1, 588,
	178, 1652,
	-2, 1093,
	-1, 589,
	178, 1654,
	-2, 1093,
	-1, 837,
	100, 1953,
	178, 1953,
	-2, 1260,
	-1, 838,
	100, 2048,
	178, 2048,
	-2, 1261,
	-1, 843,
	100, 1973,
	178, 1973,
	-2, 1262,
	-1, 844,
	100, 2011,
	178, 2011,
	-2, 1263,
	-1, 845,
	100, 2012,
	178, 2012,
	-2, 1264,
	-1, 846,
	100, 1902,
	178, 1902,
	-2, 1268,
	-1, 848,
	100, 1992,
	178, 1992,
	-2, 1270,
	-1, 1104,
	5, 61,
	-2, 44,
	-1, 1367,
	1, 523,
	611, 523,
	-2, 521,
	-1, 1369,
	1, 523,
	611, 523,
	-2, 521,
	-1, 1822,
	178, 1308,
	-2, 1304,
	-1, 1942,
	1, 855,
	5, 855,
	12, 855,
	13, 855,
	14, 855,
	15, 855,
	17, 855,
	19, 855,
	29, 855,
	30, 855,
	56, 855,
	57, 855,
	58, 855,
	59, 855,
	60, 855,
	62, 855,
	63, 855,
	66, 855,
	67, 855,
	69, 855,
	70, 855,
	87, 855,
	118, 855,
	455, 855,
	611, 855,
	-2, 888,
	-1, 1950,
	67, 78,
	69, 78,
	-2, 82,
	-1, 1967,
	178, 1777,
	-2, 1265,
	-1, 2051,
	1, 524,
	611, 524,
	-2, 521,
	-1, 2141,
	44, 636,
	197, 638,
	199, 636,
	200, 636,
	-2, 679,
	-1, 2190,
	5, 62,
	-2, 975,
	-1, 2688,
	197, 639,
	-2, 637,
	-1, 2761,
	69, 1549,
	70, 1549,
	178, 1549,
	-2, 786,
	-1, 2787,
	1, 929,
	5, 929,
	12, 929,
	13, 929,
	14, 929,
	15, 929,
	17, 929,
	19, 929,
	29, 929,
	30, 929,
	56, 929,
	57, 929,
	58, 929,
	59, 929,
	60, 929,
	62, 929,
	63, 929,
	66, 929,
	67, 929,
	69, 929,
	70, 929,
	87, 929,
	118, 929,
	455, 929,
	611, 929,
	-2, 888,
	-1, 2927,
	5, 62,
	-2, 1226,
	-1, 3014,
	41, 1315,
	-2, 1313,
	-1, 3211,
	5, 62,
	-2, 1229,
	-1, 3226,
	279, 315,
	-2, 1370,
	-1, 3227,
	279, 316,
	-2, 1410,
	-1, 3228,
	279, 317,
	-2, 1586,
	-1, 3393,
	95, 301,
	97, 301,
	99, 301,
	-2, 56,
	-1, 3424,
	97, 308,
	98, 308,
	99, 308,
	-2, 56,
}

const yyPrivate = 57344

const yyLast = 43417

var yyAct = [...]int{
	521, 76, 3344, 3230, 3374, 3385, 3325, 451, 954, 1118,
	3326, 3288, 3346, 410, 2511, 3133, 3231, 3269, 1977, 2368,
	3141, 7, 3138, 3, 3251, 3140, 6, 3203, 3213, 1297,
	3111, 2583, 2631, 2952, 481, 2537, 3139, 5, 3071, 3014,
	2781, 2802, 2754, 3201, 1402, 1201, 3142, 8, 2275, 2465,
	3016, 2046, 485, 2453, 2273, 79, 2755, 1998, 1202, 470,
	463, 2673, 2402, 520, 2860, 2269, 2070, 2648, 393, 396,
	2838, 2884, 2751, 435, 435, 2682, 2584, 76, 447, 441,
	2854, 1224, 3134, 2538, 924, 1989, 971, 2305, 91, 988,
	2309, 498, 2384, 2763, 2016, 2772, 1976, 1787, 1774, 461,
	1794, 2032, 104, 1975, 2140, 1012, 1907, 2258, 1225, 1939,
	1847, 2481, 1938, 1782, 2099, 2116, 2004, 1775, 1853, 2432,
	1378, 917, 460, 2002, 1985, 1728, 2251, 1404, 1699, 2519,
	2054, 1946, 2028, 476, 2053, 2052, 2359, 1898, 1824, 1119,
	839, 1279, 842, 1126, 1942, 1733, 1275, 1122, 1020, 1041,
	916, 2050, 835, 466, 1278, 836, 1952, 450, 953, 967,
	2310, 1140, 412, 1019, 490, 1373, 1401, 488, 942, 413,
	1370, 81, 455, 2323, 937, 3424, 2541, 124, 2326, 3419,
	100, 3411, 3393, 67, 3391, 96, 392, 1130, 3369, 3339,
	3277, 78, 3073, 3072, 2331, 2330, 2598, 1726, 2993, 2629,
	2825, 3421, 3417, 3415, 405, 3356, 3199, 36, 3319, 83,
	36, 89, 3119, 36, 2991, 39, 2327, 3291, 36, 36,
	3187, 2084, 3006, 2645, 914, 1965, 2396, 2518, 2084, 2994,
	2532, 2333, 3198, 2316, 2503, 2839, 3118, 3324, 3298, 3091,
	2338, 2317, 3247, 2228, 951, 2841, 2745, 936, 2533, 74,
	2115, 3051, 2375, 2578, 2271, 965, 830, 831, 832, 2293,
	449, 1280, 2292, 1281, 3207, 2294, 2579, 2580, 1110, 77,
	921, 1961, 77, 3064, 939, 77, 944, 945, 3042, 1729,
	77, 77, 3202, 87, 85, 86, 947, 1157, 1156, 1166,
	1167, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1158, 1750,
	3204, 1168, 108, 2807, 1052, 2813, 2815, 2814, 2811, 2812,
	2810, 2809, 2808, 1732, 1962, 1963, 1784, 1785, 3207, 428,
	2688, 422, 433, 416, 2816, 2817, 1070, 992, 993, 404,
	403, 1078, 2335, 2017, 1908, 2114, 1730, 1731, 2000, 2001,
	445, 912, 1038, 423, 2005, 991, 97, 2329, 2005, 2029,
	2332, 2908, 2008, 2010, 3204, 2009, 2022, 2304, 2017, 2731,
	2729, 2844, 402, 407, 457, 2428, 3208, 1358, 3383, 387,
	1771, 1770, 1769, 1768, 1767, 1766, 2420, 1712, 998, 1002,
	1074, 1075, 2391, 1054, 2861, 2862, 2863, 2864, 3313, 3020,
	76, 76, 118, 114, 115, 2672, 116, 3175, 2425, 446,
	2128, 2842, 2843, 2845, 2846, 2847, 3085, 975, 976, 2855,
	1007, 979, 1006, 461, 1045, 1009, 3233, 2858, 3232, 1085,
	3208, 2655, 1086, 3382, 3177, 3095, 1008, 2872, 120, 119,
	2881, 2856, 2857, 2129, 1761, 2071, 1010, 3274, 3240, 999,
	1000, 1054, 2393, 977, 978, 2870, 3378, 99, 76, 112,
	933, 2986, 1108, 2985, 2646, 3272, 3273, 110, 109, 1113,
	2649, 2650, 2651, 2652, 2653, 2649, 2650, 2651, 2652, 2653,
	2992, 3093, 2395, 2988, 394, 3341, 1376, 1359, 1177, 106,
	2984, 1179, 2983, 2982, 1181, 2980, 121, 933, 122, 3010,
	111, 968, 943, 2373, 415, 414, 417, 933, 106, 2658,
	2981, 106, 3218, 3219, 421, 397, 1385, 1386, 1384, 3081,
	3082, 107, 111, 1193, 1359, 3077, 1196, 1197, 1198, 1199,
	1200, 425, 1205, 388, 1359, 429, 2065, 2066, 3334, 989,
	990, 992, 993, 941, 940, 1042, 3257, 2374, 3136, 432,
	2942, 101, 113, 102, 461, 2563, 987, 1077, 398, 2376,
	984, 2482, 2328, 2410, 2411, 3087, 983, 2325, 3315, 943,
	985, 986, 3286, 3069, 3406, 1206, 1207, 1208, 1209, 1210,
	1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1323,
	1222, 1223, 1226, 1226, 1226, 1232, 1226, 1226, 1232, 1226,
	1232, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249,
	1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259,
	1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269,
	2885, 2886, 406, 1186, 1187, 1188, 1189, 1190, 1191, 1192,
	2339, 1104, 2484, 1092, 1053, 117, 418, 419, 420, 426,
	1740, 430, 431, 434, 2674, 2840, 3205, 2031, 1178, 1147,
	974, 2122, 1713, 2017, 1003, 2344, 1732, 1046, 1064, 2007,
	3043, 2628, 1087, 3117, 1227, 1229, 1231, 1233, 1235, 1237,
	1238, 1240, 395, 3384, 395, 3176, 2394, 1734, 3335, 1730,
	1731, 3086, 2061, 2989, 1310, 1683, 933, 2438, 2687, 3092,
	98, 1228, 1230, 462, 1234, 1236, 462, 1239, 3007, 462,
	3205, 3297, 2397, 479, 462, 68, 131, 3009, 1112, 1105,
	132, 2060, 1736, 133, 134, 1735, 88, 2657, 108, 135,
	1055, 1062, 1063, 1065, 1066, 1067, 1068, 1069, 1102, 1071,
	1072, 1073, 390, 1076, 3425, 1079, 1080, 1081, 1082, 1083,
	2148, 2142, 2143, 131, 2141, 2144, 2145, 132, 395, 130,
	133, 134, 130, 131, 2587, 2324, 135, 132, 130, 933,
	133, 134, 3422, 1995, 2953, 1324, 135, 391, 438, 438,
	1054, 933, 130, 933, 3412, 1995, 923, 3097, 2955, 2486,
	2151, 3394, 938, 3389, 2490, 956, 2485, 456, 2483, 2896,
	2670, 2895, 2419, 2488, 2150, 2149, 130, 926, 2278, 2280,
	2415, 2399, 2398, 2123, 1390, 1388, 2487, 3350, 1098, 1004,
	3345, 2049, 935, 2570, 2569, 2568, 130, 438, 934, 926,
	2081, 2489, 2491, 1997, 1997, 2080, 3348, 130, 2413, 1109,
	1097, 1093, 1094, 1095, 1096, 1099, 1100, 1101, 1103, 1022,
	1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032,
	1033, 2313, 1997, 946, 1050, 2450, 1157, 1156, 1166, 1167,
	1159, 1160, 1161, 1162, 1163, 1164, 1165, 1158, 359, 1182,
	1168, 1180, 1997, 110, 109, 2203, 77, 1997, 2200, 2717,
	2899, 3090, 1183, 1184, 2577, 2417, 2416, 2768, 842, 2297,
	2182, 424, 2171, 842, 2138, 1061, 2064, 2062, 2954, 1957,
	1337, 1340, 1341, 1342, 1343, 1344, 1345, 1797, 1346, 1347,
	1348, 1349, 1350, 1351, 1352, 1353, 1185, 1325, 1326, 1327,
	1328, 1304, 1308, 1338, 1305, 1311, 1307, 1309, 1306, 2279,
	1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321,
	1322, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1354,
	1355, 1356, 1357, 2100, 435, 1059, 1168, 2974, 3387, 1380,
	2147, 3388, 2894, 3386, 968, 1185, 1291, 1195, 1292, 1996,
	1996, 1194, 1148, 435, 966, 2832, 1283, 2830, 1403, 1049,
	1966, 1284, 1966, 2968, 1001, 1060, 1182, 1056, 3112, 1379,
	1966, 2966, 1273, 1383, 1966, 2819, 1966, 2620, 1996, 2617,
	2289, 1966, 2616, 1270, 1271, 2438, 1790, 395, 1361, 933,
	1855, 2667, 2439, 1995, 1966, 2612, 3347, 3349, 1996, 2975,
	1709, 1057, 1058, 1996, 2445, 2438, 2449, 1966, 2608, 2442,
	2446, 2922, 2441, 2444, 2900, 1966, 2357, 2833, 1296, 2831,
	1339, 2458, 1707, 1183, 1184, 2996, 1183, 1184, 1159, 1160,
	1161, 1162, 1163, 1164, 1165, 1158, 2252, 1684, 1168, 435,
	1139, 2618, 973, 130, 1966, 2355, 1700, 1364, 1966, 2353,
	1695, 1696, 1697, 1698, 1161, 1162, 1163, 1164, 1165, 1158,
	1406, 2997, 1168, 1966, 2351, 1293, 3235, 968, 1966, 2348,
	1396, 3258, 3259, 1759, 472, 1724, 1743, 1158, 2091, 2557,
	1168, 2264, 2265, 2454, 955, 3255, 3256, 130, 1690, 1691,
	1692, 1693, 1694, 981, 76, 1392, 1382, 1366, 1703, 76,
	1704, 1381, 1365, 3122, 3121, 2770, 2769, 1776, 1400, 2767,
	1706, 1721, 1399, 994, 1289, 1765, 461, 1686, 1156, 1166,
	1167, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1158, 1688,
	1689, 1168, 130, 1011, 1137, 1138, 1136, 949, 972, 1786,
	1136, 2266, 3236, 1138, 1136, 1701, 130, 1817, 2260, 2263,
	2264, 2265, 2261, 1139, 2262, 2267, 1143, 1139, 1716, 1717,
	76, 1139, 1719, 1166, 1167, 1159, 1160, 1161, 1162, 1163,
	1164, 1165, 1158, 1738, 948, 1168, 2505, 2092, 1722, 1851,
	1899, 1857, 461, 3397, 3375, 3396, 1205, 1368, 1899, 3410,
	2216, 1739, 982, 1864, 1866, 1825, 1741, 3336, 1858, 1860,
	1742, 958, 959, 960, 961, 962, 963, 964, 461, 996,
	2266, 1760, 3292, 2871, 1763, 94, 2865, 2195, 2738, 2194,
	2901, 1783, 2260, 2263, 2264, 2265, 2261, 2110, 2262, 2267,
	1788, 1875, 2773, 2774, 1831, 2596, 1764, 3407, 1137, 1138,
	1136, 3270, 1822, 3302, 1772, 3301, 1804, 1884, 1887, 1829,
	1830, 1828, 1943, 1133, 3180, 1900, 1816, 1139, 3173, 3172,
	93, 2168, 2169, 2170, 1823, 1779, 3130, 1832, 1833, 1834,
	1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844,
	1845, 1846, 1104, 1813, 2266, 1137, 1138, 1136, 1795, 1796,
	1970, 2196, 3408, 3414, 1137, 1138, 1136, 2713, 1147, 1826,
	92, 77, 3338, 3359, 1139, 3174, 1809, 1811, 1812, 3004,
	842, 3003, 1827, 1139, 1810, 1788, 3002, 1937, 1157, 1156,
	1166, 1167, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1158,
	1890, 1123, 1168, 1972, 1124, 3001, 3088, 2995, 1744, 2824,
	1903, 1747, 1748, 1749, 2823, 1751, 1752, 1799, 1913, 1753,
	1915, 1137, 1138, 1136, 2599, 1754, 1137, 1138, 1136, 1755,
	1756, 1863, 1757, 1758, 1867, 1868, 1869, 1870, 1871, 2364,
	1139, 1800, 2362, 2336, 1801, 1139, 1848, 2295, 1849, 2296,
	2078, 1044, 1936, 3089, 1950, 1822, 1043, 1896, 2018, 2019,
	2020, 2021, 2038, 2039, 2040, 2041, 3323, 1986, 3279, 1971,
	3278, 3237, 2006, 3234, 2011, 2012, 2013, 2014, 2015, 3186,
	1959, 1955, 1951, 1958, 2076, 2077, 3084, 1964, 1017, 1947,
	1137, 1138, 1136, 2042, 2043, 2044, 1983, 1973, 3271, 2025,
	2026, 2027, 2034, 2035, 2036, 2037, 1994, 3083, 3068, 1139,
	3011, 1016, 2979, 94, 2365, 36, 37, 2949, 1137, 1138,
	1136, 2918, 921, 2868, 2867, 3270, 1127, 3267, 2866, 57,
	2834, 2030, 1137, 1138, 1136, 73, 1149, 1139, 39, 61,
	62, 1137, 1138, 1136, 2821, 2679, 58, 2207, 2605, 2507,
	2461, 1139, 2460, 2360, 2278, 2280, 2111, 2086, 1718, 3266,
	1139, 3094, 1391, 2072, 3066, 3028, 1852, 2313, 3022, 2074,
	2075, 2058, 2892, 48, 2750, 2707, 2082, 77, 2703, 2689,
	2659, 1084, 1203, 2405, 2404, 2198, 130, 2180, 1117, 2104,
	1117, 1876, 1877, 1878, 2088, 926, 2087, 1882, 1883, 1886,
	1889, 1850, 1894, 1895, 1714, 1711, 1117, 1398, 1901, 1157,
	1156, 1166, 1167, 1159, 1160, 1161, 1162, 1163, 1164, 1165,
	1158, 1117, 1397, 1168, 1369, 1367, 1039, 969, 1906, 401,
	1909, 1910, 399, 2962, 3299, 1914, 3021, 1916, 1917, 1221,
	2797, 3284, 2970, 1922, 1923, 1924, 1925, 1926, 1927, 1928,
	1929, 1930, 1931, 1932, 1933, 1157, 1156, 1166, 1167, 1159,
	1160, 1161, 1162, 1163, 1164, 1165, 1158, 3262, 1117, 1168,
	1157, 1156, 1166, 1167, 1159, 1160, 1161, 1162, 1163, 1164,
	1165, 1158, 2797, 3243, 1168, 2279, 3192, 1117, 926, 130,
	41, 69, 44, 43, 46, 2797, 3188, 2969, 438, 438,
	2962, 3127, 438, 2797, 3075, 2962, 1117, 1902, 2638, 130,
	2962, 3057, 130, 2752, 2962, 2961, 2766, 438, 438, 2610,
	130, 47, 72, 71, 2931, 1117, 2137, 1117, 45, 2609,
	130, 130, 130, 130, 130, 1152, 2606, 1155, 2797, 2796,
	2626, 2625, 63, 80, 1169, 1170, 1171, 1172, 1173, 1174,
	1175, 438, 1153, 1154, 1151, 130, 2622, 2623, 3416, 1232,
	2284, 2502, 1683, 1157, 1156, 1166, 1167, 1159, 1160, 1161,
	1162, 1163, 1164, 1165, 1158, 2622, 2621, 1168, 2403, 55,
	56, 503, 502, 505, 506, 507, 508, 2113, 2255, 1117,
	504, 1859, 2180, 1117, 2125, 2124, 64, 2180, 65, 1873,
	2108, 1873, 1117, 438, 438, 438, 2107, 2403, 926, 1295,
	1294, 1157, 1156, 1166, 1167, 1159, 1160, 1161, 1162, 1163,
	1164, 1165, 1158, 66, 2135, 1168, 1050, 2254, 1088, 1953,
	1792, 1048, 1089, 1953, 1047, 2255, 2093, 1048, 438, 3316,
	2102, 2098, 3290, 438, 438, 2069, 2089, 2766, 2925, 1873,
	2255, 49, 70, 2084, 51, 52, 59, 2783, 60, 2097,
	130, 2639, 926, 130, 2766, 2085, 1817, 2255, 2172, 1157,
	1156, 1166, 1167, 1159, 1160, 1161, 1162, 1163, 1164, 1165,
	1158, 1791, 2624, 1168, 2096, 1954, 2068, 1956, 130, 1954,
	1050, 1683, 2459, 2431, 2299, 1143, 1960, 2180, 2222, 2105,
	2221, 1720, 2083, 1793, 2120, 913, 1106, 1762, 1727, 1042,
	1683, 1389, 1387, 1277, 77, 3215, 3189, 2782, 3108, 2106,
	3025, 2939, 2826, 2003, 2773, 2774, 2127, 2112, 2033, 2130,
	2005, 2595, 2029, 2119, 926, 2303, 926, 1054, 2063, 926,
	2024, 2023, 1825, 1362, 1036, 2047, 926, 2101, 926, 926,
	3405, 3403, 3363, 3361, 3327, 2776, 2752, 2637, 130, 2366,
	1737, 1822, 1394, 1090, 1051, 409, 2554, 77, 2134, 2552,
	2556, 2555, 2167, 2780, 2553, 1971, 2779, 2778, 2551, 2550,
	467, 468, 3253, 3197, 2462, 2157, 1803, 2160, 3245, 2158,
	2159, 1947, 1131, 1132, 2272, 926, 926, 2177, 2928, 2281,
	2282, 68, 2165, 1943, 2277, 2164, 1943, 3048, 2891, 2800,
	2702, 2701, 2604, 2174, 2175, 2176, 461, 2173, 2603, 2602,
	2183, 1129, 2315, 2307, 130, 130, 130, 2589, 3099, 3102,
	3185, 440, 3184, 3015, 1687, 3013, 3080, 3079, 400, 1715,
	2998, 2999, 1120, 2457, 2456, 2633, 1826, 2349, 926, 926,
	1290, 1034, 3309, 1121, 1018, 1705, 1015, 1014, 970, 3032,
	3031, 2056, 842, 1795, 1796, 2873, 2923, 2057, 2285, 1393,
	3317, 2286, 2874, 3178, 3017, 2208, 2209, 2210, 2805, 1013,
	2632, 2268, 1131, 1132, 464, 2215, 94, 2048, 1773, 1114,
	1115, 2227, 2229, 3308, 2163, 3307, 3306, 1203, 2235, 2236,
	2237, 2238, 2162, 2976, 2133, 2126, 997, 3239, 3238, 3196,
	3182, 3103, 3047, 3195, 465, 80, 3114, 2253, 2403, 3365,
	3364, 1406, 2300, 1361, 2378, 2379, 2380, 2283, 2903, 2677,
	2426, 2312, 2314, 2424, 2423, 130, 2204, 2201, 2131, 1702,
	1134, 130, 130, 438, 438, 438, 3364, 3365, 130, 2337,
	1283, 2340, 2290, 2287, 3124, 2302, 2601, 2346, 1789, 913,
	435, 1947, 2298, 1379, 459, 2409, 2793, 2358, 1116, 3381,
	1947, 3152, 50, 1947, 2341, 2342, 2343, 2345, 82, 2401,
	3154, 19, 3153, 18, 3155, 20, 76, 3156, 21, 3151,
	15, 3150, 14, 3144, 10, 3167, 34, 1805, 1806, 1807,
	3165, 33, 2308, 53, 2311, 1, 1776, 2430, 461, 3164,
	32, 2361, 3163, 28, 2363, 2121, 1157, 1156, 1166, 1167,
	1159, 1160, 1161, 1162, 1163, 1164, 1165, 1158, 3162, 27,
	1168, 2369, 2372, 1745, 2407, 2853, 2370, 2371, 2852, 2392,
	2467, 3161, 26, 3159, 23, 3158, 22, 3160, 24, 3149,
	13, 1817, 2184, 2185, 2186, 2187, 2188, 3146, 12, 3145,
	11, 3143, 9, 2859, 2644, 2400, 1203, 2647, 2390, 2869,
	1377, 1880, 1881, 2987, 952, 2406, 2067, 1040, 3183, 2512,
	3098, 2213, 3100, 3012, 2408, 2418, 2412, 2876, 2837, 2414,
	2836, 2383, 2347, 2382, 2350, 2352, 2354, 2356, 1035, 1725,
	2434, 2437, 2534, 2536, 2079, 2429, 1943, 1943, 1943, 1943,
	1943, 2146, 2440, 2436, 2451, 2452, 2435, 3110, 2455, 2504,
	2132, 1091, 1987, 2272, 461, 2564, 2559, 1974, 3212, 2468,
	915, 90, 2090, 980, 2566, 1943, 367, 1984, 2321, 2469,
	2421, 3101, 1037, 2463, 2320, 461, 1822, 2535, 2427, 2472,
	1969, 2334, 2433, 2443, 2448, 1999, 2492, 2539, 2493, 2494,
	2474, 2051, 2471, 2055, 1779, 2319, 2467, 2318, 1875, 3096,
	2322, 1301, 1299, 1300, 2597, 1298, 2567, 1303, 1302, 3358,
	3296, 371, 1285, 3225, 2495, 2496, 2749, 2497, 2498, 1135,
	514, 2499, 105, 54, 2893, 2447, 2573, 443, 2575, 2576,
	2574, 444, 95, 103, 1802, 2508, 2509, 373, 1176, 2161,
	2513, 2514, 2515, 2516, 2517, 2291, 2546, 2547, 2545, 2549,
	840, 2548, 841, 2045, 833, 2558, 2153, 1107, 3120, 2737,
	3246, 3287, 3217, 1125, 3248, 3194, 3113, 130, 2571, 2042,
	2588, 2044, 2590, 2214, 1220, 2591, 2592, 2593, 2582, 2594,
	1897, 487, 435, 2581, 130, 130, 130, 2654, 2562, 2921,
	3250, 1808, 501, 500, 499, 2640, 2572, 496, 497, 3206,
	1798, 2531, 1150, 1947, 1947, 1947, 1947, 1947, 2634, 2635,
	2636, 130, 2627, 130, 484, 474, 2613, 926, 1941, 1934,
	1947, 2109, 926, 2259, 2661, 2257, 2256, 1395, 1274, 2775,
	2771, 2270, 1947, 1945, 1940, 1944, 38, 2902, 995, 2464,
	2600, 2614, 2656, 389, 926, 2744, 3041, 926, 2520, 2521,
	2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530, 1157,
	1156, 1166, 1167, 1159, 1160, 1161, 1162, 1163, 1164, 1165,
	1158, 2166, 926, 1168, 84, 458, 469, 25, 2630, 17,
	1005, 16, 2139, 950, 2743, 40, 42, 2664, 2377, 2059,
	3224, 3343, 2663, 1021, 3373, 3268, 31, 30, 29, 3157,
	3166, 2685, 3148, 3147, 1361, 2714, 3329, 2706, 3328, 4,
	2660, 1111, 75, 35, 2757, 76, 2680, 2686, 911, 2,
	0, 0, 0, 0, 0, 2665, 0, 0, 0, 0,
	0, 0, 0, 1776, 0, 0, 0, 461, 0, 0,
	0, 0, 2712, 2607, 2785, 0, 2611, 0, 2753, 2789,
	2790, 2791, 2615, 0, 0, 0, 0, 0, 0, 2704,
	2758, 0, 2666, 0, 2619, 2539, 2671, 0, 2727, 0,
	2675, 2676, 0, 2678, 0, 0, 0, 2756, 0, 0,
	2765, 0, 0, 0, 2716, 0, 2724, 2725, 0, 2726,
	0, 0, 2728, 0, 2730, 2788, 0, 0, 2694, 2699,
	0, 0, 0, 0, 0, 0, 0, 2784, 0, 2794,
	0, 0, 76, 2760, 2740, 2741, 2742, 2795, 0, 130,
	0, 0, 0, 0, 2777, 0, 0, 130, 0, 0,
	130, 0, 2828, 0, 461, 0, 130, 0, 2786, 130,
	130, 130, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2849, 2850, 2851, 0, 0, 0, 2827, 2300, 926,
	2801, 0, 0, 0, 0, 0, 0, 2829, 2748, 2736,
	0, 0, 0, 2806, 0, 0, 0, 0, 0, 2787,
	0, 0, 0, 0, 2718, 2719, 2720, 2721, 2722, 2798,
	2799, 1779, 0, 2887, 2888, 0, 2820, 0, 2822, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2878, 0,
	0, 2804, 2848, 2880, 0, 0, 2467, 2889, 1157, 1156,
	1166, 1167, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1158,
	2875, 926, 1168, 130, 2877, 0, 0, 2883, 0, 0,
	0, 0, 0, 2904, 2905, 0, 926, 926, 926, 2835,
	0, 0, 438, 2042, 2588, 0, 0, 2890, 2897, 0,
	0, 0, 0, 2898, 0, 0, 0, 130, 438, 1157,
	1156, 1166, 1167, 1159, 1160, 1161, 1162, 1163, 1164, 1165,
	1158, 0, 0, 1168, 1127, 438, 2964, 0, 1226, 1226,
	1226, 1232, 1226, 1226, 1232, 1226, 1232, 1241, 1242, 2539,
	2907, 2932, 0, 926, 2941, 0, 2924, 438, 0, 926,
	0, 2946, 2947, 2948, 0, 438, 2944, 2879, 0, 2818,
	0, 926, 926, 0, 2882, 0, 0, 2972, 0, 0,
	2933, 0, 0, 0, 0, 2950, 0, 0, 2971, 1872,
	1874, 2973, 0, 0, 0, 130, 0, 1879, 0, 2909,
	2910, 2911, 2912, 513, 2956, 926, 2945, 2916, 0, 2951,
	0, 2919, 2920, 0, 2189, 0, 2977, 0, 2959, 2960,
	1227, 1229, 1231, 1233, 1235, 1237, 1238, 1240, 0, 2957,
	2958, 0, 3033, 0, 1943, 1911, 1912, 0, 2978, 0,
	2217, 0, 1918, 1919, 1920, 1921, 0, 1228, 1230, 127,
	1234, 1236, 0, 1239, 3000, 0, 2757, 0, 127, 2757,
	3053, 3019, 926, 3005, 2990, 0, 0, 0, 3008, 0,
	0, 3018, 0, 2785, 0, 3023, 3024, 0, 0, 0,
	0, 2277, 461, 3060, 0, 0, 0, 0, 0, 130,
	130, 130, 130, 130, 3036, 3034, 127, 920, 0, 3035,
	3030, 3050, 130, 2747, 76, 3052, 130, 3046, 3026, 3027,
	130, 3056, 3049, 0, 0, 3065, 127, 0, 130, 2756,
	0, 0, 2756, 3055, 0, 0, 461, 127, 3059, 0,
	0, 926, 0, 926, 0, 926, 3058, 926, 3067, 0,
	3078, 0, 0, 0, 0, 0, 0, 0, 0, 3076,
	0, 0, 0, 1157, 1156, 1166, 1167, 1159, 1160, 1161,
	1162, 1163, 1164, 1165, 1158, 0, 0, 1168, 0, 0,
	0, 0, 0, 0, 0, 0, 2965, 0, 2967, 0,
	0, 0, 2757, 0, 76, 0, 0, 3106, 0, 0,
	0, 0, 3104, 0, 0, 3129, 0, 0, 0, 3105,
	130, 1947, 0, 0, 0, 0, 461, 0, 3107, 76,
	0, 0, 0, 0, 0, 0, 3115, 0, 0, 0,
	926, 926, 926, 0, 3125, 3137, 3135, 438, 3074, 3126,
	0, 0, 130, 438, 0, 2735, 3123, 0, 0, 3128,
	0, 0, 0, 0, 0, 2756, 0, 130, 0, 438,
	0, 926, 0, 438, 0, 0, 0, 438, 438, 0,
	438, 0, 0, 0, 0, 0, 2684, 3179, 3181, 0,
	3190, 0, 0, 0, 0, 2692, 2697, 926, 3214, 0,
	0, 130, 926, 0, 0, 2684, 0, 3220, 0, 926,
	3210, 0, 926, 926, 0, 3109, 3209, 0, 3065, 0,
	0, 3216, 76, 0, 0, 0, 0, 2539, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3131, 0, 0, 3241, 1157, 1156, 1166, 1167, 1159,
	1160, 1161, 1162, 1163, 1164, 1165, 1158, 0, 0, 1168,
	0, 3242, 0, 3244, 0, 0, 0, 2506, 0, 0,
	3254, 0, 0, 127, 0, 0, 0, 3265, 926, 0,
	926, 1128, 0, 3260, 3263, 0, 0, 0, 0, 435,
	0, 0, 0, 0, 3283, 3275, 0, 3264, 0, 3285,
	0, 0, 0, 0, 0, 0, 0, 0, 926, 0,
	0, 0, 76, 0, 0, 3305, 0, 127, 76, 0,
	0, 3214, 0, 0, 0, 926, 3303, 125, 0, 0,
	386, 3295, 0, 0, 3312, 3310, 125, 0, 3300, 926,
	3314, 0, 3322, 76, 0, 0, 3337, 0, 76, 0,
	452, 0, 0, 0, 0, 3318, 3353, 0, 2512, 3340,
	3320, 3333, 435, 0, 0, 473, 3332, 3352, 3354, 3357,
	461, 850, 3355, 3362, 125, 76, 3360, 3331, 3367, 76,
	76, 130, 3370, 926, 76, 3368, 1146, 3330, 3366, 0,
	0, 0, 0, 3342, 125, 0, 3312, 0, 0, 0,
	3376, 0, 0, 0, 0, 125, 0, 2103, 0, 0,
	76, 3390, 0, 76, 438, 0, 3395, 0, 3398, 0,
	3400, 438, 0, 0, 0, 2684, 3312, 0, 0, 0,
	0, 0, 76, 0, 76, 0, 0, 0, 76, 0,
	0, 3413, 0, 0, 0, 0, 0, 0, 3312, 0,
	3312, 2684, 76, 0, 2662, 76, 2470, 0, 3420, 36,
	76, 926, 0, 0, 0, 76, 0, 0, 3312, 0,
	0, 0, 2136, 57, 0, 0, 3312, 0, 0, 73,
	0, 3312, 39, 3351, 2152, 1157, 1156, 1166, 1167, 1159,
	1160, 1161, 1162, 1163, 1164, 1165, 1158, 0, 0, 1168,
	0, 0, 0, 0, 2708, 0, 130, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 472, 0, 0, 0,
	0, 77, 0, 0, 0, 0, 926, 3379, 0, 0,
	0, 0, 0, 926, 926, 926, 0, 0, 0, 0,
	0, 926, 2501, 0, 0, 0, 0, 3168, 2179, 0,
	2181, 0, 3423, 0, 0, 0, 0, 3404, 2746, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	926, 0, 0, 2190, 2191, 2192, 2193, 0, 0, 0,
	2197, 2199, 0, 2500, 2202, 0, 0, 2205, 2206, 0,
	0, 0, 2211, 2212, 0, 0, 0, 0, 2218, 2219,
	0, 2220, 0, 0, 2223, 2224, 0, 2225, 2226, 0,
	0, 2230, 2231, 2232, 2233, 2234, 0, 0, 0, 0,
	2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248,
	2249, 2250, 0, 0, 41, 69, 44, 43, 46, 0,
	926, 125, 0, 0, 0, 0, 0, 130, 0, 3169,
	1157, 1156, 1166, 1167, 1159, 1160, 1161, 1162, 1163, 1164,
	1165, 1158, 0, 0, 1168, 47, 72, 71, 0, 0,
	486, 0, 45, 0, 0, 926, 0, 0, 0, 0,
	0, 0, 0, 926, 0, 125, 0, 130, 0, 130,
	0, 1157, 1156, 1166, 1167, 1159, 1160, 1161, 1162, 1163,
	1164, 1165, 1158, 0, 382, 1168, 926, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 0, 0, 2178,
	0, 0, 0, 55, 56, 126, 3170, 0, 0, 0,
	452, 0, 0, 0, 0, 0, 0, 0, 0, 453,
	64, 0, 65, 0, 452, 0, 127, 0, 1157, 1156,
	1166, 1167, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1158,
	851, 438, 1168, 126, 919, 0, 0, 66, 0, 926,
	1157, 1156, 1166, 1167, 1159, 1160, 1161, 1162, 1163, 1164,
	1165, 1158, 0, 126, 1168, 0, 0, 0, 0, 0,
	385, 0, 0, 0, 126, 3171, 70, 0, 51, 52,
	59, 0, 60, 0, 0, 0, 360, 0, 1203, 0,
	0, 0, 0, 130, 0, 0, 0, 0, 2934, 2935,
	2936, 2937, 0, 0, 2938, 0, 0, 2940, 0, 0,
	0, 0, 0, 0, 0, 0, 1203, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 127,
	0, 0, 926, 363, 0, 0, 926, 0, 0, 0,
	0, 0, 372, 380, 381, 0, 0, 0, 0, 127,
	0, 0, 127, 926, 0, 0, 0, 0, 0, 0,
	0, 2475, 2476, 2477, 2478, 2479, 2480, 0, 0, 0,
	127, 127, 127, 127, 127, 0, 0, 369, 0, 0,
	370, 0, 0, 378, 379, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 926, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 926, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 68, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 472, 0, 0, 0, 926,
	375, 0, 0, 0, 0, 0, 0, 2560, 2561, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 376, 0, 0, 438, 0, 0, 0, 0, 0,
	0, 926, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 926, 0, 926, 0, 0, 0,
	0, 0, 0, 1323, 0, 0, 0, 0, 0, 0,
	926, 0, 1778, 127, 0, 0, 512, 0, 0, 0,
	126, 0, 0, 0, 0, 0, 0, 0, 130, 0,
	0, 0, 0, 0, 0, 0, 361, 0, 127, 0,
	0, 0, 0, 3276, 0, 1146, 0, 438, 0, 0,
	926, 0, 1818, 0, 0, 130, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 0, 0, 0, 0, 130,
	374, 364, 365, 0, 0, 0, 0, 366, 368, 0,
	362, 384, 383, 0, 0, 0, 0, 0, 1203, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1276, 0, 849, 850, 1310, 453,
	918, 0, 850, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 453, 377, 0, 0, 0, 0, 0,
	0, 0, 957, 1144, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2715, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2723,
	0, 0, 0, 0, 127, 127, 127, 0, 0, 0,
	2732, 2733, 2734, 0, 0, 0, 0, 2739, 0, 1324,
	0, 0, 0, 0, 0, 1818, 0, 0, 0, 920,
	0, 0, 0, 0, 0, 0, 0, 125, 0, 3221,
	3222, 0, 1372, 1375, 0, 0, 0, 0, 0, 0,
	0, 0, 2759, 0, 0, 0, 0, 125, 0, 0,
	125, 0, 0, 1372, 1375, 0, 3249, 3252, 1405, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 125, 125,
	125, 125, 125, 0, 0, 0, 0, 0, 0, 2792,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1710, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 127, 0, 0, 0, 0,
	0, 127, 127, 0, 0, 0, 0, 0, 127, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3304, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1337, 1340, 1341, 1342, 1343, 1344,
	1345, 3252, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353,
	0, 1325, 1326, 1327, 1328, 1304, 1308, 1338, 1305, 1311,
	1307, 1309, 1306, 0, 1312, 1313, 1314, 1315, 1316, 1317,
	1318, 1319, 1320, 1321, 1322, 1329, 1330, 1331, 1332, 1333,
	1334, 1335, 1336, 0, 0, 0, 0, 0, 452, 0,
	0, 125, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 125, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3399, 0, 0, 0,
	1405, 0, 0, 0, 0, 0, 0, 0, 2913, 2914,
	2915, 0, 2917, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2926, 2927, 0, 2929, 0,
	0, 2930, 0, 1856, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2943, 0, 452, 0, 1856, 1856,
	1856, 0, 0, 0, 1856, 1856, 1856, 1856, 0, 1856,
	1856, 0, 2963, 126, 850, 1856, 851, 0, 0, 0,
	0, 851, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1856, 1856, 1856, 1856, 0,
	0, 1856, 1856, 1856, 1856, 1856, 0, 0, 0, 0,
	1856, 1856, 1856, 1856, 1856, 1856, 1856, 1856, 1856, 1856,
	1856, 1856, 125, 125, 125, 0, 0, 0, 0, 850,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1405, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1360, 0, 0, 127, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 3037, 3038, 3039,
	3040, 0, 0, 0, 0, 0, 127, 3044, 3045, 0,
	0, 0, 0, 0, 0, 0, 126, 0, 0, 126,
	0, 0, 0, 0, 0, 0, 0, 0, 36, 0,
	0, 127, 0, 0, 3061, 3062, 3063, 126, 126, 126,
	126, 126, 57, 0, 0, 0, 0, 0, 73, 0,
	0, 39, 0, 125, 0, 0, 0, 0, 0, 125,
	125, 0, 0, 0, 0, 0, 125, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	77, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1818, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3168, 0, 0, 3372,
	3375, 3371, 0, 0, 0, 0, 0, 0, 0, 3116,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3132, 0, 0, 0, 0, 453, 0, 1777,
	126, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 0, 0, 3191, 0,
	0, 0, 1144, 41, 69, 44, 43, 46, 3200, 1819,
	0, 0, 0, 0, 3211, 0, 0, 0, 3169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 47, 72, 71, 0, 0, 127,
	0, 45, 0, 0, 0, 0, 36, 127, 0, 0,
	0, 0, 849, 0, 0, 0, 127, 849, 1286, 127,
	57, 0, 0, 0, 0, 453, 73, 0, 0, 39,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 851, 0, 0, 0, 0, 0, 0,
	0, 0, 55, 56, 0, 3170, 0, 0, 0, 0,
	3261, 0, 0, 0, 0, 0, 0, 0, 77, 64,
	0, 65, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 126, 126, 3168, 0, 66, 0, 851, 3418,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3294,
	0, 1363, 1819, 127, 0, 125, 919, 1371, 1374, 0,
	0, 0, 0, 0, 3171, 70, 0, 51, 52, 59,
	0, 60, 2094, 2095, 125, 0, 0, 0, 1371, 1374,
	0, 0, 0, 0, 0, 0, 0, 127, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 125,
	0, 452, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 41, 69, 44, 43, 46, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3169, 0, 0, 0,
	0, 1778, 126, 0, 0, 0, 0, 0, 126, 126,
	0, 0, 47, 72, 71, 126, 0, 0, 0, 45,
	0, 0, 0, 0, 0, 127, 0, 3401, 3402, 1405,
	0, 1746, 0, 0, 0, 0, 36, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1818, 0, 0, 0,
	57, 0, 0, 0, 0, 0, 73, 0, 0, 39,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	55, 56, 0, 3170, 68, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1781, 0, 64, 0, 65,
	0, 0, 0, 0, 0, 1856, 0, 0, 77, 1856,
	1856, 1856, 1856, 1856, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 66, 0, 0, 0, 0, 127,
	127, 127, 127, 127, 3168, 1781, 0, 0, 1856, 3409,
	0, 0, 0, 0, 0, 0, 127, 0, 0, 0,
	0, 0, 3171, 70, 0, 51, 52, 59, 127, 60,
	0, 0, 0, 0, 0, 0, 0, 1781, 0, 1781,
	0, 0, 1861, 0, 0, 0, 0, 125, 0, 1862,
	0, 1781, 1781, 0, 0, 125, 0, 0, 452, 0,
	0, 0, 0, 0, 125, 0, 0, 125, 2288, 1405,
	0, 850, 0, 0, 0, 0, 0, 0, 0, 849,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 41, 69, 44, 43, 46, 0, 0, 1904, 1905,
	0, 0, 0, 0, 0, 0, 3169, 0, 0, 0,
	127, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 47, 72, 71, 0, 0, 36, 0, 45,
	0, 0, 0, 0, 849, 0, 0, 0, 0, 0,
	0, 57, 127, 0, 0, 0, 0, 73, 1781, 0,
	39, 1781, 918, 0, 0, 0, 0, 127, 0, 0,
	0, 125, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 68, 0, 0, 0, 0, 0, 0, 0,
	55, 56, 0, 3170, 126, 2693, 2698, 0, 0, 77,
	0, 127, 0, 0, 0, 125, 0, 64, 0, 65,
	0, 0, 0, 126, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3168, 0, 0, 0, 0,
	3392, 0, 0, 0, 66, 0, 0, 0, 126, 0,
	453, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3171, 70, 0, 51, 52, 59, 0, 60,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 125, 0, 0, 0, 0, 1778, 0,
	0, 0, 0, 0, 1856, 0, 0, 0, 0, 0,
	0, 0, 1856, 0, 1405, 0, 0, 0, 1819, 0,
	0, 0, 41, 69, 44, 43, 46, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 36, 3169, 0, 0,
	0, 0, 0, 0, 36, 0, 0, 0, 0, 0,
	57, 0, 0, 47, 72, 71, 73, 0, 57, 39,
	45, 0, 0, 0, 73, 0, 0, 39, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 850, 125, 125, 125,
	125, 125, 0, 0, 0, 0, 0, 0, 77, 3377,
	452, 127, 0, 0, 125, 0, 77, 0, 452, 0,
	0, 55, 56, 1856, 3170, 0, 125, 0, 0, 0,
	0, 0, 68, 0, 3168, 0, 0, 0, 64, 0,
	65, 0, 3168, 0, 0, 0, 0, 3311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 66, 126, 0, 0, 0,
	0, 0, 0, 0, 126, 0, 0, 453, 0, 0,
	0, 0, 0, 126, 0, 0, 126, 0, 0, 0,
	851, 0, 0, 3171, 70, 0, 51, 52, 59, 0,
	60, 0, 0, 0, 0, 0, 0, 0, 125, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2306,
	0, 41, 69, 44, 43, 46, 0, 0, 36, 41,
	69, 44, 43, 46, 0, 0, 3169, 0, 0, 0,
	125, 0, 57, 0, 3169, 0, 0, 0, 73, 0,
	0, 39, 47, 72, 71, 125, 0, 0, 0, 45,
	47, 72, 71, 0, 0, 0, 0, 45, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 0, 0, 0, 0, 0, 0, 0, 0, 125,
	77, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 473, 0, 0,
	55, 56, 0, 3170, 126, 0, 3168, 0, 55, 56,
	2118, 3170, 0, 0, 0, 2118, 0, 64, 0, 65,
	0, 0, 0, 0, 0, 64, 0, 65, 0, 0,
	0, 0, 0, 68, 0, 0, 0, 2118, 0, 0,
	2118, 0, 0, 0, 66, 0, 0, 0, 0, 0,
	0, 0, 66, 0, 0, 0, 0, 0, 1777, 0,
	0, 0, 0, 0, 850, 2156, 0, 127, 0, 0,
	0, 0, 3171, 70, 1781, 51, 52, 59, 0, 60,
	3171, 70, 126, 51, 52, 59, 0, 60, 0, 0,
	0, 0, 0, 41, 69, 44, 43, 46, 0, 0,
	0, 0, 0, 1819, 0, 0, 0, 0, 3169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 47, 72, 71, 0, 0, 0,
	0, 45, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 125,
	0, 0, 0, 0, 0, 2540, 126, 126, 126, 126,
	126, 0, 55, 56, 0, 3170, 0, 0, 0, 453,
	0, 0, 0, 126, 0, 0, 0, 453, 0, 64,
	0, 65, 0, 0, 0, 126, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 68, 0, 2586, 0, 66, 0, 0, 0,
	68, 0, 0, 127, 0, 0, 849, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1781, 0, 3171, 70, 0, 51, 52, 59,
	0, 60, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 0, 0,
	0, 0, 0, 0, 452, 0, 0, 0, 850, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	0, 0, 0, 0, 2367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 0, 0, 0, 0, 2381,
	2385, 2389, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2306, 0, 2691, 2696, 0, 0, 0, 0, 126, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2118, 0, 0, 0,
	0, 0, 2422, 0, 68, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1781, 1781, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 125, 473, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1781, 0,
	0, 0, 0, 2540, 0, 1777, 0, 0, 0, 1781,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 452, 0, 452, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2510, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 849, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1685, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 126, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1781, 0, 1781, 0, 1781, 0,
	2585, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 125, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 850, 0, 0, 0,
	0, 0, 0, 2641, 2642, 2643, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 453, 0, 0, 0, 2540, 0, 0,
	0, 0, 0, 0, 2669, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2586, 0,
	2700, 0, 0, 0, 0, 2705, 0, 0, 0, 0,
	0, 0, 2709, 0, 0, 2710, 2711, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2586, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 849,
	0, 1781, 0, 2764, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 0, 452, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2764, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 452, 0, 0, 0, 0, 1781, 0,
	0, 0, 0, 0, 453, 0, 453, 452, 0, 0,
	0, 0, 2803, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2385, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2586, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 0, 0, 0, 1781, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2586,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 849, 0, 2540, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2803,
	0, 0, 0, 0, 0, 0, 2803, 2803, 2803, 0,
	0, 0, 0, 0, 2585, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2585, 0, 0, 0, 0, 0, 0,
	2586, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3029, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3054, 0,
	0, 0, 0, 0, 0, 453, 2803, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3070,
	0, 0, 453, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 453, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2585, 0, 0, 0, 3193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 849, 0, 0, 0, 0, 1781, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1781, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2585, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2803, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3293, 0, 1781,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 809, 1781, 328, 571, 813, 656, 679, 822,
	685, 687, 750, 632, 727, 273, 676, 633, 0, 0,
	624, 480, 625, 657, 200, 477, 783, 728, 811, 713,
	743, 753, 199, 191, 720, 719, 800, 668, 667, 748,
	796, 810, 0, 3289, 579, 240, 0, 0, 350, 320,
	257, 0, 0, 711, 0, 564, 565, 696, 752, 644,
	739, 815, 677, 744, 816, 77, 0, 0, 0, 478,
	503, 502, 505, 506, 507, 508, 0, 0, 137, 504,
	509, 510, 511, 0, 706, 749, 827, 623, 475, 494,
	628, 578, 0, 801, 664, 665, 203, 0, 0, 0,
	0, 0, 0, 0, 709, 726, 768, 693, 345, 755,
	764, 778, 686, 288, 216, 143, 0, 0, 0, 0,
	491, 492, 471, 0, 0, 0, 594, 0, 493, 0,
	638, 489, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 495, 0, 0, 0, 643, 621,
	662, 770, 622, 620, 258, 635, 567, 799, 694, 231,
	154, 805, 692, 592, 758, 639, 787, 680, 238, 637,
	155, 634, 640, 678, 269, 767, 773, 576, 158, 784,
	658, 671, 192, 0, 298, 745, 344, 483, 731, 297,
	241, 337, 759, 807, 343, 681, 327, 351, 355, 209,
	714, 183, 317, 201, 198, 663, 777, 627, 217, 287,
	195, 234, 697, 751, 659, 188, 762, 738, 789, 316,
	334, 160, 255, 335, 354, 175, 329, 256, 262, 185,
	187, 186, 171, 311, 333, 180, 190, 785, 772, 791,
	654, 641, 646, 642, 670, 808, 226, 218, 792, 790,
	348, 144, 307, 306, 684, 225, 775, 145, 136, 294,
	146, 232, 163, 795, 357, 174, 236, 330, 482, 212,
	268, 194, 747, 277, 669, 157, 290, 252, 253, 251,
	254, 215, 140, 147, 771, 292, 309, 332, 176, 323,
	138, 139, 141, 149, 300, 150, 151, 814, 246, 205,
	208, 219, 229, 746, 296, 324, 349, 740, 172, 165,
	326, 342, 181, 308, 310, 356, 769, 167, 803, 786,
	733, 699, 705, 629, 0, 166, 765, 661, 673, 653,
	741, 652, 214, 757, 340, 341, 193, 358, 570, 818,
	168, 636, 817, 265, 272, 264, 820, 336, 804, 734,
	723, 721, 630, 802, 732, 722, 237, 207, 221, 285,
	243, 286, 222, 260, 259, 261, 244, 725, 0, 164,
	0, 321, 812, 829, 325, 178, 647, 779, 331, 291,
	179, 213, 206, 284, 263, 173, 224, 319, 235, 242,
	761, 826, 276, 299, 182, 346, 318, 202, 581, 593,
	587, 589, 588, 585, 586, 584, 583, 582, 595, 568,
	569, 572, 573, 574, 716, 806, 631, 577, 782, 590,
	591, 754, 824, 566, 189, 515, 607, 608, 609, 516,
	610, 611, 517, 518, 612, 613, 614, 615, 519, 616,
	617, 618, 596, 597, 598, 599, 600, 601, 602, 603,
	606, 604, 605, 712, 281, 575, 159, 169, 239, 825,
	293, 211, 619, 626, 645, 648, 649, 650, 651, 655,
	660, 0, 666, 672, 674, 675, 683, 688, 689, 690,
	691, 698, 700, 701, 702, 703, 704, 707, 708, 710,
	717, 718, 724, 729, 730, 736, 737, 0, 760, 763,
	580, 774, 776, 780, 781, 788, 793, 794, 819, 823,
	828, 347, 197, 715, 735, 766, 170, 177, 184, 196,
	204, 210, 220, 223, 227, 228, 230, 233, 245, 247,
	248, 249, 250, 266, 267, 270, 271, 274, 275, 278,
	279, 280, 282, 283, 289, 148, 295, 301, 302, 303,
	304, 305, 312, 313, 314, 315, 322, 338, 339, 352,
	353, 798, 695, 156, 0, 0, 162, 0, 0, 0,
	0, 0, 682, 161, 797, 821, 742, 756, 809, 0,
	328, 571, 813, 656, 679, 822, 685, 687, 750, 632,
	727, 273, 676, 633, 0, 0, 624, 480, 625, 657,
	200, 477, 783, 728, 811, 713, 743, 753, 199, 191,
	720, 719, 800, 668, 667, 748, 796, 810, 0, 0,
	579, 240, 0, 0, 350, 320, 257, 0, 0, 711,
	0, 564, 565, 696, 752, 644, 739, 815, 677, 744,
	816, 77, 0, 1117, 0, 478, 503, 502, 505, 506,
	507, 508, 0, 0, 137, 504, 509, 510, 511, 0,
	706, 749, 827, 623, 475, 494, 628, 578, 0, 801,
	664, 665, 203, 0, 0, 0, 0, 0, 0, 0,
	709, 726, 768, 693, 345, 755, 764, 778, 686, 288,
	216, 143, 0, 0, 0, 0, 491, 492, 0, 0,
	0, 0, 594, 0, 493, 0, 638, 489, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	495, 0, 0, 0, 643, 621, 662, 770, 622, 620,
	258, 635, 567, 799, 694, 231, 154, 805, 692, 592,
	758, 639, 787, 680, 238, 637, 155, 634, 640, 678,
	269, 767, 773, 576, 158, 784, 658, 671, 192, 0,
	298, 745, 344, 483, 731, 297, 241, 337, 759, 807,
	343, 681, 327, 351, 355, 209, 714, 183, 317, 201,
	198, 663, 777, 627, 217, 287, 195, 234, 697, 751,
	659, 188, 762, 738, 789, 316, 334, 160, 255, 335,
	354, 175, 329, 256, 262, 185, 187, 186, 171, 311,
	333, 180, 190, 785, 772, 791, 654, 641, 646, 642,
	670, 808, 226, 218, 792, 790, 348, 144, 307, 306,
	684, 225, 775, 145, 136, 294, 146, 232, 163, 795,
	357, 174, 236, 330, 482, 212, 268, 194, 747, 277,
	669, 157, 290, 252, 253, 251, 254, 215, 140, 147,
	771, 292, 309, 332, 176, 323, 138, 139, 141, 149,
	300, 150, 151, 814, 246, 205, 208, 219, 229, 746,
	296, 324, 349, 740, 172, 165, 326, 342, 181, 308,
	310, 356, 769, 167, 803, 786, 733, 699, 705, 629,
	0, 166, 765, 661, 673, 653, 741, 652, 214, 757,
	340, 341, 193, 358, 570, 818, 168, 636, 817, 265,
	272, 264, 820, 336, 804, 734, 723, 721, 630, 802,
	732, 722, 237, 207, 221, 285, 243, 286, 222, 260,
	259, 261, 244, 725, 0, 164, 0, 321, 812, 829,
	325, 178, 647, 779, 331, 291, 179, 213, 206, 284,
	263, 173, 224, 319, 235, 242, 761, 826, 276, 299,
	182, 346, 318, 202, 581, 593, 587, 589, 588, 585,
	586, 584, 583, 582, 595, 568, 569, 572, 573, 574,
	716, 806, 631, 577, 782, 590, 591, 754, 824, 566,
	189, 515, 607, 608, 609, 516, 610, 611, 517, 518,
	612, 613, 614, 615, 519, 616, 617, 618, 596, 597,
	598, 599, 600, 601, 602, 603, 606, 604, 605, 712,
	281, 575, 159, 169, 239, 825, 293, 211, 619, 626,
	645, 648, 649, 650, 651, 655, 660, 0, 666, 672,
	674, 675, 683, 688, 689, 690, 691, 698, 700, 701,
	702, 703, 704, 707, 708, 710, 717, 718, 724, 729,
	730, 736, 737, 0, 760, 763, 580, 774, 776, 780,
	781, 788, 793, 794, 819, 823, 828, 347, 197, 715,
	735, 766, 170, 177, 184, 196, 204, 210, 220, 223,
	227, 228, 230, 233, 245, 247, 248, 249, 250, 266,
	267, 270, 271, 274, 275, 278, 279, 280, 282, 283,
	289, 148, 295, 301, 302, 303, 304, 305, 312, 313,
	314, 315, 322, 338, 339, 352, 353, 798, 695, 156,
	0, 0, 162, 0, 0, 0, 0, 0, 682, 161,
	797, 821, 742, 756, 809, 0, 328, 571, 813, 656,
	679, 822, 685, 687, 750, 632, 727, 273, 676, 633,
	0, 0, 624, 480, 625, 657, 200, 477, 783, 728,
	811, 713, 743, 753, 199, 191, 720, 719, 800, 668,
	667, 748, 796, 810, 0, 0, 579, 240, 0, 0,
	350, 320, 257, 0, 0, 711, 0, 564, 565, 696,
	752, 644, 739, 815, 677, 744, 816, 77, 0, 0,
	0, 478, 503, 502, 505, 506, 507, 508, 0, 0,
	137, 504, 509, 510, 511, 0, 706, 749, 827, 623,
	475, 494, 628, 578, 0, 801, 664, 665, 203, 0,
	0, 0, 0, 0, 0, 0, 709, 726, 768, 693,
	345, 755, 764, 778, 686, 288, 216, 143, 0, 0,
	0, 0, 491, 492, 1854, 0, 0, 0, 594, 0,
	493, 0, 638, 489, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 495, 0, 0, 0,
	643, 621, 662, 770, 622, 620, 258, 635, 567, 799,
	694, 231, 154, 805, 692, 592, 758, 639, 787, 680,
	238, 637, 155, 634, 640, 678, 269, 767, 773, 576,
	158, 784, 658, 671, 192, 0, 298, 745, 344, 483,
	731, 297, 241, 337, 759, 807, 343, 681, 327, 351,
	355, 209, 714, 183, 317, 201, 198, 663, 777, 627,
	217, 287, 195, 234, 697, 751, 659, 188, 762, 738,
	789, 316, 334, 160, 255, 335, 354, 175, 329, 256,
	262, 185, 187, 186, 171, 311, 333, 180, 190, 785,
	772, 791, 654, 641, 646, 642, 670, 808, 226, 218,
	792, 790, 348, 144, 307, 306, 684, 225, 775, 145,
	136, 294, 146, 232, 163, 795, 357, 174, 236, 330,
	482, 212, 268, 194, 747, 277, 669, 157, 290, 252,
	253, 251, 254, 215, 140, 147, 771, 292, 309, 332,
	176, 323, 138, 139, 141, 149, 300, 150, 151, 814,
	246, 205, 208, 219, 229, 746, 296, 324, 349, 740,
	172, 165, 326, 342, 181, 308, 310, 356, 769, 167,
	803, 786, 733, 699, 705, 629, 0, 166, 765, 661,
	673, 653, 741, 652, 214, 757, 340, 341, 193, 358,
	570, 818, 168, 636, 817, 265, 272, 264, 820, 336,
	804, 734, 723, 721, 630, 802, 732, 722, 237, 207,
	221, 285, 243, 286, 222, 260, 259, 261, 244, 725,
	0, 164, 0, 321, 812, 829, 325, 178, 647, 779,
	331, 291, 179, 213, 206, 284, 263, 173, 224, 319,
	235, 242, 761, 826, 276, 299, 182, 346, 318, 202,
	581, 593, 587, 589, 588, 585, 586, 584, 583, 582,
	595, 568, 569, 572, 573, 574, 716, 806, 631, 577,
	782, 590, 591, 754, 824, 566, 189, 515, 607, 608,
	609, 516, 610, 611, 517, 518, 612, 613, 614, 615,
	519, 616, 617, 618, 596, 597, 598, 599, 600, 601,
	602, 603, 606, 604, 605, 712, 281, 575, 159, 169,
	239, 825, 293, 211, 619, 626, 645, 648, 649, 650,
	651, 655, 660, 0, 666, 672, 674, 675, 683, 688,
	689, 690, 691, 698, 700, 701, 702, 703, 704, 707,
	708, 710, 717, 718, 724, 729, 730, 736, 737, 0,
	760, 763, 580, 774, 776, 780, 781, 788, 793, 794,
	819, 823, 828, 347, 197, 715, 735, 766, 170, 177,
	184, 196, 204, 210, 220, 223, 227, 228, 230, 233,
	245, 247, 248, 249, 250, 266, 267, 270, 271, 274,
	275, 278, 279, 280, 282, 283, 289, 148, 295, 301,
	302, 303, 304, 305, 312, 313, 314, 315, 322, 338,
	339, 352, 353, 798, 695, 156, 0, 0, 162, 0,
	0, 0, 0, 0, 682, 161, 797, 821, 742, 756,
	809, 0, 328, 571, 813, 656, 679, 822, 685, 687,
	750, 632, 727, 273, 676, 633, 0, 0, 624, 480,
	625, 657, 200, 477, 783, 728, 811, 713, 743, 753,
	199, 191, 720, 719, 800, 668, 667, 748, 796, 810,
	0, 0, 579, 240, 0, 0, 350, 320, 257, 0,
	0, 711, 0, 564, 565, 696, 752, 644, 739, 815,
	677, 1967, 816, 77, 0, 0, 0, 478, 503, 502,
	505, 506, 507, 508, 0, 0, 137, 504, 509, 510,
	511, 1968, 706, 749, 827, 623, 475, 494, 628, 578,
	0, 801, 664, 665, 203, 0, 0, 0, 0, 0,
	0, 0, 709, 726, 768, 693, 345, 755, 764, 778,
	686, 288, 216, 143, 0, 0, 0, 0, 491, 492,
	0, 0, 0, 0, 594, 0, 493, 0, 638, 489,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 495, 0, 0, 0, 643, 621, 662, 770,
	622, 620, 258, 635, 567, 799, 694, 231, 154, 805,
	692, 592, 758, 639, 787, 680, 238, 637, 155, 634,
	640, 678, 269, 767, 773, 576, 158, 784, 658, 671,
	192, 0, 298, 745, 344, 483, 731, 297, 241, 337,
	759, 807, 343, 681, 327, 351, 355, 209, 714, 183,
	317, 201, 198, 663, 777, 627, 217, 287, 195, 234,
	697, 751, 659, 188, 762, 738, 789, 316, 334, 160,
	255, 335, 354, 175, 329, 256, 262, 185, 187, 186,
	171, 311, 333, 180, 190, 785, 772, 791, 654, 641,
	646, 642, 670, 808, 226, 218, 792, 790, 348, 144,
	307, 306, 684, 225, 775, 145, 136, 294, 146, 232,
	163, 795, 357, 174, 236, 330, 482, 212, 268, 194,
	747, 277, 669, 157, 290, 252, 253, 251, 254, 215,
	140, 147, 771, 292, 309, 332, 176, 323, 138, 139,
	141, 149, 300, 150, 151, 814, 246, 205, 208, 219,
	229, 746, 296, 324, 349, 740, 172, 165, 326, 342,
	181, 308, 310, 356, 769, 167, 803, 786, 733, 699,
	705, 629, 0, 166, 765, 661, 673, 653, 741, 652,
	214, 757, 340, 341, 193, 358, 570, 818, 168, 636,
	817, 265, 272, 264, 820, 336, 804, 734, 723, 721,
	630, 802, 732, 722, 237, 207, 221, 285, 243, 286,
	222, 260, 259, 261, 244, 725, 0, 164, 0, 321,
	812, 829, 325, 178, 647, 779, 331, 291, 179, 213,
	206, 284, 263, 173, 224, 319, 235, 242, 761, 826,
	276, 299, 182, 346, 318, 202, 581, 593, 587, 589,
	588, 585, 586, 584, 583, 582, 595, 568, 569, 572,
	573, 574, 716, 806, 631, 577, 782, 590, 591, 754,
	824, 566, 189, 515, 607, 608, 609, 516, 610, 611,
	517, 518, 612, 613, 614, 615, 519, 616, 617, 618,
	596, 597, 598, 599, 600, 601, 602, 603, 606, 604,
	605, 712, 281, 575, 159, 169, 239, 825, 293, 211,
	619, 626, 645, 648, 649, 650, 651, 655, 660, 0,
	666, 672, 674, 675, 683, 688, 689, 690, 691, 698,
	700, 701, 702, 703, 704, 707, 708, 710, 717, 718,
	724, 729, 730, 736, 737, 0, 760, 763, 580, 774,
	776, 780, 781, 788, 793, 794, 819, 823, 828, 347,
	197, 715, 735, 766, 170, 177, 184, 196, 204, 210,
	220, 223, 227, 228, 230, 233, 245, 247, 248, 249,
	250, 266, 267, 270, 271, 274, 275, 278, 279, 280,
	282, 283, 289, 148, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 798,
	695, 156, 0, 0, 162, 0, 0, 0, 0, 0,
	682, 161, 797, 821, 742, 756, 809, 0, 328, 571,
	813, 656, 679, 822, 685, 687, 750, 632, 727, 273,
	676, 633, 0, 0, 624, 869, 625, 657, 200, 867,
	783, 728, 811, 713, 743, 753, 199, 191, 720, 719,
	800, 668, 667, 748, 796, 810, 0, 0, 579, 240,
	0, 0, 350, 320, 257, 0, 0, 711, 0, 564,
	565, 696, 752, 644, 739, 815, 677, 744, 816, 77,
	0, 1117, 0, 478, 503, 502, 505, 506, 507, 508,
	0, 0, 137, 504, 509, 510, 511, 0, 706, 749,
	827, 623, 886, 494, 628, 578, 0, 801, 664, 665,
	203, 0, 0, 0, 0, 0, 0, 0, 709, 726,
	768, 693, 345, 755, 764, 778, 686, 288, 216, 143,
	0, 0, 0, 0, 491, 492, 0, 0, 0, 0,
	594, 0, 493, 0, 638, 489, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 495, 0,
	0, 0, 643, 621, 662, 770, 622, 620, 258, 635,
	567, 799, 694, 231, 154, 805, 692, 592, 758, 639,
	787, 680, 238, 637, 155, 634, 640, 678, 269, 767,
	773, 576, 158, 784, 658, 671, 192, 0, 298, 745,
	344, 483, 731, 297, 241, 337, 759, 807, 343, 681,
	327, 351, 355, 209, 714, 183, 317, 201, 198, 663,
	777, 627, 217, 287, 195, 234, 697, 751, 659, 188,
	762, 738, 789, 316, 334, 160, 255, 335, 354, 175,
	329, 256, 262, 185, 187, 186, 171, 311, 333, 180,
	190, 785, 772, 791, 654, 641, 646, 642, 670, 808,
	226, 218, 792, 790, 348, 144, 307, 306, 684, 225,
	775, 145, 136, 294, 146, 232, 163, 795, 357, 174,
	236, 330, 482, 212, 268, 194, 747, 277, 669, 157,
	290, 252, 253, 251, 254, 215, 140, 147, 771, 292,
	309, 332, 176, 323, 138, 139, 141, 149, 300, 150,
	151, 814, 246, 205, 208, 219, 229, 746, 296, 324,
	349, 740, 172, 165, 326, 342, 181, 308, 310, 356,
	769, 167, 803, 786, 733, 699, 705, 629, 0, 166,
	765, 661, 673, 653, 741, 652, 214, 757, 340, 341,
	193, 358, 570, 818, 168, 636, 817, 265, 272, 264,
	820, 336, 804, 734, 723, 721, 630, 802, 732, 722,
	237, 207, 221, 285, 243, 286, 222, 260, 259, 261,
	244, 725, 0, 164, 0, 321, 812, 829, 325, 178,
	647, 779, 331, 291, 179, 213, 206, 284, 263, 173,
	224, 319, 235, 242, 761, 826, 276, 299, 182, 346,
	318, 202, 581, 593, 587, 589, 588, 585, 586, 584,
	583, 582, 595, 568, 569, 572, 573, 574, 716, 806,
	631, 577, 782, 590, 591, 754, 824, 566, 189, 515,
	607, 608, 609, 516, 610, 611, 517, 518, 612, 613,
	614, 615, 519, 616, 617, 618, 596, 597, 598, 599,
	600, 601, 602, 603, 606, 604, 605, 712, 281, 575,
	159, 169, 239, 825, 293, 211, 619, 626, 645, 648,
	649, 650, 651, 655, 660, 0, 666, 672, 674, 675,
	683, 688, 689, 690, 691, 698, 700, 701, 702, 703,
	704, 707, 708, 710, 717, 718, 724, 729, 730, 736,
	737, 0, 760, 763, 580, 774, 776, 780, 781, 788,
	793, 794, 819, 823, 828, 347, 197, 715, 735, 766,
	170, 177, 184, 196, 204, 210, 220, 223, 227, 228,
	230, 233, 245, 247, 248, 249, 250, 266, 267, 270,
	271, 274, 275, 278, 279, 280, 282, 283, 289, 148,
	295, 301, 302, 303, 304, 305, 312, 313, 314, 315,
	322, 338, 339, 352, 353, 798, 695, 156, 0, 0,
	162, 0, 0, 0, 0, 0, 682, 161, 797, 821,
	742, 756, 809, 0, 328, 571, 813, 656, 679, 822,
	685, 687, 750, 632, 727, 273, 676, 633, 0, 0,
	624, 480, 625, 657, 200, 477, 783, 728, 811, 713,
	743, 753, 199, 191, 720, 719, 800, 668, 667, 748,
	796, 810, 0, 0, 579, 240, 0, 0, 350, 320,
	257, 0, 0, 711, 0, 564, 565, 696, 752, 644,
	739, 815, 677, 744, 816, 77, 0, 0, 0, 478,
	503, 1888, 505, 506, 507, 508, 0, 0, 137, 504,
	509, 510, 511, 0, 706, 749, 827, 623, 475, 494,
	628, 578, 0, 801, 664, 665, 203, 0, 0, 0,
	0, 0, 0, 0, 709, 726, 768, 693, 345, 755,
	764, 778, 686, 288, 216, 143, 0, 0, 0, 0,
	491, 492, 1854, 0, 0, 0, 594, 0, 493, 0,
	638, 489, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 495, 0, 0, 0, 643, 621,
	662, 770, 622, 620, 258, 635, 567, 799, 694, 231,
	154, 805, 692, 592, 758, 639, 787, 680, 238, 637,
	155, 634, 640, 678, 269, 767, 773, 576, 158, 784,
	658, 671, 192, 0, 298, 745, 344, 483, 731, 297,
	241, 337, 759, 807, 343, 681, 327, 351, 355, 209,
	714, 183, 317, 201, 198, 663, 777, 627, 217, 287,
	195, 234, 697, 751, 659, 188, 762, 738, 789, 316,
	334, 160, 255, 335, 354, 175, 329, 256, 262, 185,
	187, 186, 171, 311, 333, 180, 190, 785, 772, 791,
	654, 641, 646, 642, 670, 808, 226, 218, 792, 790,
	348, 144, 307, 306, 684, 225, 775, 145, 136, 294,
	146, 232, 163, 795, 357, 174, 236, 330, 482, 212,
	268, 194, 747, 277, 669, 157, 290, 252, 253, 251,
	254, 215, 140, 147, 771, 292, 309, 332, 176, 323,
	138, 139, 141, 149, 300, 150, 151, 814, 246, 205,
	208, 219, 229, 746, 296, 324, 349, 740, 172, 165,
	326, 342, 181, 308, 310, 356, 769, 167, 803, 786,
	733, 699, 705, 629, 0, 166, 765, 661, 673, 653,
	741, 652, 214, 757, 340, 341, 193, 358, 570, 818,
	168, 636, 817, 265, 272, 264, 820, 336, 804, 734,
	723, 721, 630, 802, 732, 722, 237, 207, 221, 285,
	243, 286, 222, 260, 259, 261, 244, 725, 0, 164,
	0, 321, 812, 829, 325, 178, 647, 779, 331, 291,
	179, 213, 206, 284, 263, 173, 224, 319, 235, 242,
	761, 826, 276, 299, 182, 346, 318, 202, 581, 593,
	587, 589, 588, 585, 586, 584, 583, 582, 595, 568,
	569, 572, 573, 574, 716, 806, 631, 577, 782, 590,
	591, 754, 824, 566, 189, 515, 607, 608, 609, 516,
	610, 611, 517, 518, 612, 613, 614, 615, 519, 616,
	617, 618, 596, 597, 598, 599, 600, 601, 602, 603,
	606, 604, 605, 712, 281, 575, 159, 169, 239, 825,
	293, 211, 619, 626, 645, 648, 649, 650, 651, 655,
	660, 0, 666, 672, 674, 675, 683, 688, 689, 690,
	691, 698, 700, 701, 702, 703, 704, 707, 708, 710,
	717, 718, 724, 729, 730, 736, 737, 0, 760, 763,
	580, 774, 776, 780, 781, 788, 793, 794, 819, 823,
	828, 347, 197, 715, 735, 766, 170, 177, 184, 196,
	204, 210, 220, 223, 227, 228, 230, 233, 245, 247,
	248, 249, 250, 266, 267, 270, 271, 274, 275, 278,
	279, 280, 282, 283, 289, 148, 295, 301, 302, 303,
	304, 305, 312, 313, 314, 315, 322, 338, 339, 352,
	353, 798, 695, 156, 0, 0, 162, 0, 0, 0,
	0, 0, 682, 161, 797, 821, 742, 756, 809, 0,
	328, 571, 813, 656, 679, 822, 685, 687, 750, 632,
	727, 273, 676, 633, 0, 0, 624, 480, 625, 657,
	200, 477, 783, 728, 811, 713, 743, 753, 199, 191,
	720, 719, 800, 668, 667, 748, 796, 810, 0, 0,
	579, 240, 0, 0, 350, 320, 257, 0, 0, 711,
	0, 564, 565, 696, 752, 644, 739, 815, 677, 744,
	816, 77, 0, 0, 0, 478, 503, 1885, 505, 506,
	507, 508, 0, 0, 137, 504, 509, 510, 511, 0,
	706, 749, 827, 623, 475, 494, 628, 578, 0, 801,
	664, 665, 203, 0, 0, 0, 0, 0, 0, 0,
	709, 726, 768, 693, 345, 755, 764, 778, 686, 288,
	216, 143, 0, 0, 0, 0, 491, 492, 1854, 0,
	0, 0, 594, 0, 493, 0, 638, 489, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	495, 0, 0, 0, 643, 621, 662, 770, 622, 620,
	258, 635, 567, 799, 694, 231, 154, 805, 692, 592,
	758, 639, 787, 680, 238, 637, 155, 634, 640, 678,
	269, 767, 773, 576, 158, 784, 658, 671, 192, 0,
	298, 745, 344, 483, 731, 297, 241, 337, 759, 807,
	343, 681, 327, 351, 355, 209, 714, 183, 317, 201,
	198, 663, 777, 627, 217, 287, 195, 234, 697, 751,
	659, 188, 762, 738, 789, 316, 334, 160, 255, 335,
	354, 175, 329, 256, 262, 185, 187, 186, 171, 311,
	333, 180, 190, 785, 772, 791, 654, 641, 646, 642,
	670, 808, 226, 218, 792, 790, 348, 144, 307, 306,
	684, 225, 775, 145, 136, 294, 146, 232, 163, 795,
	357, 174, 236, 330, 482, 212, 268, 194, 747, 277,
	669, 157, 290, 252, 253, 251, 254, 215, 140, 147,
	771, 292, 309, 332, 176, 323, 138, 139, 141, 149,
	300, 150, 151, 814, 246, 205, 208, 219, 229, 746,
	296, 324, 349, 740, 172, 165, 326, 342, 181, 308,
	310, 356, 769, 167, 803, 786, 733, 699, 705, 629,
	0, 166, 765, 661, 673, 653, 741, 652, 214, 757,
	340, 341, 193, 358, 570, 818, 168, 636, 817, 265,
	272, 264, 820, 336, 804, 734, 723, 721, 630, 802,
	732, 722, 237, 207, 221, 285, 243, 286, 222, 260,
	259, 261, 244, 725, 0, 164, 0, 321, 812, 829,
	325, 178, 647, 779, 331, 291, 179, 213, 206, 284,
	263, 173, 224, 319, 235, 242, 761, 826, 276, 299,
	182, 346, 318, 202, 581, 593, 587, 589, 588, 585,
	586, 584, 583, 582, 595, 568, 569, 572, 573, 574,
	716, 806, 631, 577, 782, 590, 591, 754, 824, 566,
	189, 515, 607, 608, 609, 516, 610, 611, 517, 518,
	612, 613, 614, 615, 519, 616, 617, 618, 596, 597,
	598, 599, 600, 601, 602, 603, 606, 604, 605, 712,
	281, 575, 159, 169, 239, 825, 293, 211, 619, 626,
	645, 648, 649, 650, 651, 655, 660, 0, 666, 672,
	674, 675, 683, 688, 689, 690, 691, 698, 700, 701,
	702, 703, 704, 707, 708, 710, 717, 718, 724, 729,
	730, 736, 737, 0, 760, 763, 580, 774, 776, 780,
	781, 788, 793, 794, 819, 823, 828, 347, 197, 715,
	735, 766, 170, 177, 184, 196, 204, 210, 220, 223,
	227, 228, 230, 233, 245, 247, 248, 249, 250, 266,
	267, 270, 271, 274, 275, 278, 279, 280, 282, 283,
	289, 148, 295, 301, 302, 303, 304, 305, 312, 313,
	314, 315, 322, 338, 339, 352, 353, 798, 695, 156,
	0, 0, 162, 0, 0, 0, 0, 0, 682, 161,
	797, 821, 742, 756, 809, 36, 328, 571, 813, 656,
	679, 822, 685, 687, 750, 632, 727, 273, 676, 633,
	0, 0, 624, 480, 625, 657, 200, 477, 783, 728,
	811, 713, 743, 753, 199, 191, 720, 719, 800, 668,
	667, 748, 796, 810, 0, 0, 579, 240, 0, 0,
	350, 320, 257, 0, 0, 711, 0, 564, 565, 696,
	752, 644, 739, 815, 677, 744, 816, 77, 0, 0,
	0, 478, 503, 502, 505, 506, 507, 508, 0, 0,
	137, 504, 509, 510, 511, 0, 706, 749, 827, 623,
	475, 494, 628, 578, 0, 801, 664, 665, 203, 0,
	0, 0, 0, 0, 0, 0, 709, 726, 768, 693,
	345, 755, 764, 778, 686, 288, 216, 143, 0, 0,
	0, 0, 491, 492, 0, 0, 0, 0, 594, 0,
	493, 0, 638, 489, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 495, 0, 0, 0,
	643, 621, 662, 770, 622, 620, 258, 635, 567, 799,
	694, 231, 154, 805, 692, 592, 758, 639, 787, 680,
	238, 637, 155, 634, 640, 678, 269, 767, 773, 576,
	158, 784, 658, 671, 192, 0, 298, 745, 344, 483,
	731, 297, 241, 337, 759, 807, 343, 681, 327, 351,
	355, 209, 714, 183, 317, 201, 198, 663, 777, 627,
	217, 287, 195, 234, 697, 751, 659, 188, 762, 738,
	789, 316, 334, 160, 255, 335, 354, 175, 329, 256,
	262, 185, 187, 186, 171, 311, 333, 180, 190, 785,
	772, 791, 654, 641, 646, 642, 670, 808, 226, 218,
	792, 790, 348, 144, 307, 306, 684, 225, 775, 145,
	136, 294, 146, 232, 163, 795, 357, 174, 236, 330,
	482, 212, 268, 194, 747, 277, 669, 157, 290, 252,
	253, 251, 254, 215, 140, 147, 771, 292, 309, 332,
	176, 323, 138, 139, 141, 149, 300, 150, 151, 814,
	246, 205, 208, 219, 229, 746, 296, 324, 349, 740,
	172, 165, 326, 342, 181, 308, 310, 356, 769, 167,
	803, 786, 733, 699, 705, 629, 0, 166, 765, 661,
	673, 653, 741, 652, 214, 757, 340, 341, 193, 358,
	570, 818, 168, 636, 817, 265, 272, 264, 820, 336,
	804, 734, 723, 721, 630, 802, 732, 722, 237, 207,
	221, 285, 243, 286, 222, 260, 259, 261, 244, 725,
	0, 164, 0, 321, 812, 829, 325, 178, 647, 779,
	331, 291, 179, 213, 206, 284, 263, 173, 224, 319,
	235, 242, 761, 826, 276, 299, 182, 346, 318, 202,
	581, 593, 587, 589, 588, 585, 586, 584, 583, 582,
	595, 568, 569, 572, 573, 574, 716, 806, 631, 577,
	782, 590, 591, 754, 824, 566, 189, 515, 607, 608,
	609, 516, 610, 611, 517, 518, 612, 613, 614, 615,
	519, 616, 617, 618, 596, 597, 598, 599, 600, 601,
	602, 603, 606, 604, 605, 712, 281, 575, 159, 169,
	239, 1204, 293, 211, 619, 626, 645, 648, 649, 650,
	651, 655, 660, 0, 666, 672, 674, 675, 683, 688,
	689, 690, 691, 698, 700, 701, 702, 703, 704, 707,
	708, 710, 717, 718, 724, 729, 730, 736, 737, 0,
	760, 763, 580, 774, 776, 780, 781, 788, 793, 794,
	819, 823, 828, 347, 197, 715, 735, 766, 170, 177,
	184, 196, 204, 210, 220, 223, 227, 228, 230, 233,
	245, 247, 248, 249, 250, 266, 267, 270, 271, 274,
	275, 278, 279, 280, 282, 283, 289, 148, 295, 301,
	302, 303, 304, 305, 312, 313, 314, 315, 322, 338,
	339, 352, 353, 798, 695, 156, 0, 0, 162, 0,
	0, 0, 0, 0, 682, 161, 797, 821, 742, 756,
	809, 0, 328, 571, 813, 656, 679, 822, 685, 687,
	750, 632, 727, 273, 676, 633, 0, 0, 624, 480,
	625, 657, 200, 477, 783, 728, 811, 713, 743, 753,
	199, 191, 720, 719, 800, 668, 667, 748, 796, 810,
	0, 0, 579, 240, 0, 0, 350, 320, 257, 0,
	0, 711, 0, 564, 565, 696, 752, 644, 739, 815,
	677, 744, 816, 77, 0, 1723, 0, 478, 503, 502,
	505, 506, 507, 508, 0, 0, 137, 504, 509, 510,
	511, 0, 706, 749, 827, 623, 475, 494, 628, 578,
	0, 801, 664, 665, 203, 0, 0, 0, 0, 0,
	0, 0, 709, 726, 768, 693, 345, 755, 764, 778,
	686, 288, 216, 143, 0, 0, 0, 0, 491, 492,
	0, 0, 0, 0, 594, 0, 493, 0, 638, 489,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 495, 0, 0, 0, 643, 621, 662, 770,
	622, 620, 258, 635, 567, 799, 694, 231, 154, 805,
	692, 592, 758, 639, 787, 680, 238, 637, 155, 634,
	640, 678, 269, 767, 773, 576, 158, 784, 658, 671,
	192, 0, 298, 745, 344, 483, 731, 297, 241, 337,
	759, 807, 343, 681, 327, 351, 355, 209, 714, 183,
	317, 201, 198, 663, 777, 627, 217, 287, 195, 234,
	697, 751, 659, 188, 762, 738, 789, 316, 334, 160,
	255, 335, 354, 175, 329, 256, 262, 185, 187, 186,
	171, 311, 333, 180, 190, 785, 772, 791, 654, 641,
	646, 642, 670, 808, 226, 218, 792, 790, 348, 144,
	307, 306, 684, 225, 775, 145, 136, 294, 146, 232,
	163, 795, 357, 174, 236, 330, 482, 212, 268, 194,
	747, 277, 669, 157, 290, 252, 253, 251, 254, 215,
	140, 147, 771, 292, 309, 332, 176, 323, 138, 139,
	141, 149, 300, 150, 151, 814, 246, 205, 208, 219,
	229, 746, 296, 324, 349, 740, 172, 165, 326, 342,
	181, 308, 310, 356, 769, 167, 803, 786, 733, 699,
	705, 629, 0, 166, 765, 661, 673, 653, 741, 652,
	214, 757, 340, 341, 193, 358, 570, 818, 168, 636,
	817, 265, 272, 264, 820, 336, 804, 734, 723, 721,
	630, 802, 732, 722, 237, 207, 221, 285, 243, 286,
	222, 260, 259, 261, 244, 725, 0, 164, 0, 321,
	812, 829, 325, 178, 647, 779, 331, 291, 179, 213,
	206, 284, 263, 173, 224, 319, 235, 242, 761, 826,
	276, 299, 182, 346, 318, 202, 581, 593, 587, 589,
	588, 585, 586, 584, 583, 582, 595, 568, 569, 572,
	573, 574, 716, 806, 631, 577, 782, 590, 591, 754,
	824, 566, 189, 515, 607, 608, 609, 516, 610, 611,
	517, 518, 612, 613, 614, 615, 519, 616, 617, 618,
	596, 597, 598, 599, 600, 601, 602, 603, 606, 604,
	605, 712, 281, 575, 159, 169, 239, 825, 293, 211,
	619, 626, 645, 648, 649, 650, 651, 655, 660, 0,
	666, 672, 674, 675, 683, 688, 689, 690, 691, 698,
	700, 701, 702, 703, 704, 707, 708, 710, 717, 718,
	724, 729, 730, 736, 737, 0, 760, 763, 580, 774,
	776, 780, 781, 788, 793, 794, 819, 823, 828, 347,
	197, 715, 735, 766, 170, 177, 184, 196, 204, 210,
	220, 223, 227, 228, 230, 233, 245, 247, 248, 249,
	250, 266, 267, 270, 271, 274, 275, 278, 279, 280,
	282, 283, 289, 148, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 798,
	695, 156, 0, 0, 162, 0, 0, 0, 0, 0,
	682, 161, 797, 821, 742, 756, 809, 0, 328, 571,
	813, 656, 679, 822, 685, 687, 750, 632, 727, 273,
	676, 633, 0, 0, 624, 869, 625, 657, 200, 867,
	783, 728, 811, 713, 743, 753, 199, 191, 720, 719,
	800, 668, 667, 748, 796, 810, 0, 0, 579, 240,
	0, 0, 350, 320, 257, 0, 0, 711, 0, 564,
	565, 696, 752, 644, 739, 815, 677, 744, 816, 77,
	0, 0, 0, 478, 503, 502, 505, 506, 507, 508,
	0, 0, 137, 504, 509, 510, 511, 0, 706, 749,
	827, 623, 886, 494, 628, 578, 0, 801, 664, 665,
	203, 0, 0, 0, 0, 0, 0, 0, 709, 726,
	768, 693, 345, 755, 764, 778, 686, 288, 216, 143,
	0, 0, 0, 0, 491, 492, 0, 0, 0, 0,
	594, 0, 493, 0, 638, 489, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 495, 0,
	0, 0, 643, 621, 662, 770, 622, 620, 258, 635,
	567, 799, 694, 231, 154, 805, 692, 592, 758, 639,
	787, 680, 238, 637, 155, 634, 640, 678, 269, 767,
	773, 576, 158, 784, 658, 671, 192, 0, 298, 745,
	344, 483, 731, 297, 241, 337, 759, 807, 343, 681,
	327, 351, 355, 209, 714, 183, 317, 201, 198, 663,
	777, 627, 217, 287, 195, 234, 697, 751, 659, 188,
	762, 738, 789, 316, 334, 160, 255, 335, 354, 175,
	329, 256, 262, 185, 187, 186, 171, 311, 333, 180,
	190, 785, 772, 791, 654, 641, 646, 642, 670, 808,
	226, 218, 792, 790, 348, 144, 307, 306, 684, 225,
	775, 145, 136, 294, 146, 232, 163, 795, 357, 174,
	236, 330, 482, 212, 268, 194, 747, 277, 669, 157,
	290, 252, 253, 251, 254, 215, 140, 147, 771, 292,
	309, 332, 176, 323, 138, 139, 141, 149, 300, 150,
	151, 814, 246, 205, 208, 219, 229, 746, 296, 324,
	349, 740, 172, 165, 326, 342, 181, 308, 310, 356,
	769, 167, 803, 786, 733, 699, 705, 629, 0, 166,
	765, 661, 673, 653, 741, 652, 214, 757, 340, 341,
	193, 358, 570, 818, 168, 636, 817, 265, 272, 264,
	820, 336, 804, 734, 723, 721, 630, 802, 732, 722,
	237, 207, 221, 285, 243, 286, 222, 260, 259, 261,
	244, 725, 0, 164, 0, 321, 812, 829, 325, 178,
	647, 779, 331, 291, 179, 213, 206, 284, 263, 173,
	224, 319, 235, 242, 761, 826, 276, 299, 182, 346,
	318, 202, 581, 593, 587, 589, 588, 585, 586, 584,
	583, 582, 595, 568, 569, 572, 573, 574, 716, 806,
	631, 577, 782, 590, 591, 754, 824, 566, 189, 515,
	607, 608, 609, 516, 610, 611, 517, 518, 612, 613,
	614, 615, 519, 616, 617, 618, 596, 597, 598, 599,
	600, 601, 602, 603, 606, 604, 605, 712, 281, 575,
	159, 169, 239, 825, 293, 211, 619, 626, 645, 648,
	649, 650, 651, 655, 660, 0, 666, 672, 674, 675,
	683, 688, 689, 690, 691, 698, 700, 701, 702, 703,
	704, 707, 708, 710, 717, 718, 724, 729, 730, 736,
	737, 0, 760, 763, 580, 774, 776, 780, 781, 788,
	793, 794, 819, 823, 828, 347, 197, 715, 735, 766,
	170, 177, 184, 196, 204, 210, 220, 223, 227, 228,
	230, 233, 245, 247, 248, 249, 250, 266, 267, 270,
	271, 274, 275, 278, 279, 280, 282, 283, 289, 148,
	295, 301, 302, 303, 304, 305, 312, 313, 314, 315,
	322, 338, 339, 352, 353, 798, 695, 156, 0, 0,
	162, 0, 0, 0, 0, 0, 682, 161, 797, 821,
	742, 756, 809, 0, 328, 571, 813, 656, 679, 822,
	685, 687, 750, 632, 727, 273, 676, 633, 0, 0,
	624, 480, 625, 657, 200, 477, 783, 728, 811, 713,
	743, 753, 199, 191, 720, 719, 800, 668, 667, 748,
	796, 810, 0, 0, 579, 240, 0, 0, 350, 320,
	257, 0, 0, 711, 0, 564, 565, 696, 752, 644,
	739, 815, 677, 744, 816, 77, 0, 0, 0, 478,
	503, 502, 505, 506, 507, 508, 0, 0, 137, 504,
	509, 510, 511, 0, 706, 749, 827, 623, 475, 494,
	628, 578, 0, 801, 664, 665, 203, 0, 0, 0,
	0, 0, 0, 0, 709, 726, 768, 693, 345, 755,
	764, 778, 686, 288, 216, 143, 0, 0, 0, 0,
	491, 492, 0, 0, 0, 0, 594, 0, 493, 0,
	638, 489, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 495, 0, 0, 0, 643, 621,
	662, 770, 622, 620, 258, 635, 567, 799, 694, 231,
	154, 805, 692, 592, 758, 639, 787, 680, 238, 637,
	155, 634, 640, 678, 269, 767, 773, 576, 158, 784,
	658, 671, 192, 0, 298, 745, 344, 483, 731, 297,
	241, 337, 759, 807, 343, 681, 327, 351, 355, 209,
	714, 183, 317, 201, 198, 663, 777, 627, 217, 287,
	195, 234, 697, 751, 659, 188, 762, 738, 789, 316,
	334, 160, 255, 335, 354, 175, 329, 256, 262, 185,
	187, 186, 171, 311, 333, 180, 190, 785, 772, 791,
	654, 641, 646, 642, 670, 808, 226, 218, 792, 790,
	348, 144, 307, 306, 684, 225, 775, 145, 136, 294,
	146, 232, 163, 795, 357, 174, 236, 330, 482, 212,
	268, 194, 747, 277, 669, 157, 290, 252, 253, 251,
	254, 215, 140, 147, 771, 292, 309, 332, 176, 323,
	138, 139, 141, 149, 300, 150, 151, 814, 246, 205,
	208, 219, 229, 746, 296, 324, 349, 740, 172, 165,
	326, 342, 181, 308, 310, 356, 769, 167, 803, 786,
	733, 699, 705, 629, 0, 166, 765, 661, 673, 653,
	741, 652, 214, 757, 340, 341, 193, 358, 570, 818,
	168, 636, 817, 265, 272, 264, 820, 336, 804, 734,
	723, 721, 630, 802, 732, 722, 237, 207, 221, 285,
	243, 286, 222, 260, 259, 261, 244, 725, 0, 164,
	0, 321, 812, 829, 325, 178, 647, 779, 331, 291,
	179, 213, 206, 284, 263, 173, 224, 319, 235, 242,
	761, 826, 276, 299, 182, 346, 318, 202, 581, 593,
	587, 589, 588, 585, 586, 584, 583, 582, 595, 568,
	569, 572, 573, 574, 716, 806, 631, 577, 782, 590,
	591, 754, 824, 566, 189, 515, 607, 608, 609, 516,
	610, 611, 517, 518, 612, 613, 614, 615, 519, 616,
	617, 618, 596, 597, 598, 599, 600, 601, 602, 603,
	606, 604, 605, 712, 281, 575, 159, 169, 239, 825,
	293, 211, 619, 626, 645, 648, 649, 650, 651, 655,
	660, 0, 666, 672, 674, 675, 683, 688, 689, 690,
	691, 698, 700, 701, 702, 703, 704, 707, 708, 710,
	717, 718, 724, 729, 730, 736, 737, 0, 760, 763,
	580, 774, 776, 780, 781, 788, 793, 794, 819, 823,
	828, 347, 197, 715, 735, 766, 170, 177, 184, 196,
	204, 210, 220, 223, 227, 228, 230, 233, 245, 247,
	248, 249, 250, 266, 267, 270, 271, 274, 275, 278,
	279, 280, 282, 283, 289, 148, 295, 301, 302, 303,
	304, 305, 312, 313, 314, 315, 322, 338, 339, 352,
	353, 798, 695, 156, 0, 0, 162, 0, 0, 0,
	0, 0, 682, 161, 797, 821, 742, 756, 809, 0,
	328, 571, 813, 656, 679, 822, 685, 687, 750, 632,
	727, 273, 676, 633, 0, 0, 624, 869, 625, 657,
	200, 867, 783, 728, 811, 713, 743, 753, 199, 191,
	720, 719, 800, 668, 667, 748, 796, 810, 0, 0,
	579, 240, 0, 0, 350, 320, 257, 0, 0, 711,
	0, 564, 565, 696, 752, 644, 739, 815, 677, 744,
	816, 77, 0, 0, 0, 478, 503, 502, 505, 506,
	507, 508, 0, 0, 137, 504, 509, 510, 511, 0,
	706, 749, 827, 623, 886, 494, 628, 578, 0, 801,
	664, 665, 203, 0, 0, 0, 0, 0, 0, 0,
	709, 726, 768, 693, 345, 755, 764, 778, 686, 288,
	216, 143, 0, 0, 0, 0, 491, 492, 0, 0,
	0, 0, 594, 0, 493, 0, 638, 489, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	495, 0, 0, 0, 643, 621, 662, 770, 622, 620,
	258, 635, 567, 799, 694, 231, 154, 805, 692, 592,
	758, 639, 787, 680, 238, 637, 155, 634, 640, 678,
	269, 767, 773, 576, 158, 784, 658, 671, 192, 0,
	298, 745, 344, 483, 3380, 297, 241, 337, 759, 807,
	343, 681, 327, 351, 355, 209, 714, 183, 317, 201,
	198, 663, 777, 627, 217, 287, 195, 234, 697, 751,
	659, 188, 762, 738, 789, 316, 334, 160, 255, 335,
	354, 175, 329, 256, 262, 185, 187, 186, 171, 311,
	333, 180, 190, 785, 772, 791, 654, 641, 646, 642,
	670, 808, 226, 218, 792, 790, 348, 144, 307, 306,
	684, 225, 775, 145, 136, 294, 146, 232, 163, 795,
	357, 174, 236, 330, 482, 212, 268, 194, 747, 277,
	669, 157, 290, 252, 253, 251, 254, 215, 140, 147,
	771, 292, 309, 332, 176, 323, 138, 139, 141, 149,
	300, 150, 151, 814, 246, 205, 208, 219, 229, 746,
	296, 324, 349, 740, 172, 165, 326, 342, 181, 308,
	310, 356, 769, 167, 803, 786, 733, 699, 705, 629,
	0, 166, 765, 661, 673, 653, 741, 652, 214, 757,
	340, 341, 193, 358, 570, 818, 168, 636, 817, 265,
	272, 264, 820, 336, 804, 734, 723, 721, 630, 802,
	732, 722, 237, 207, 221, 285, 243, 286, 222, 260,
	259, 261, 244, 725, 0, 164, 0, 321, 812, 829,
	325, 178, 647, 779, 331, 291, 179, 213, 206, 284,
	263, 173, 224, 319, 235, 242, 761, 826, 276, 299,
	182, 346, 318, 202, 581, 593, 587, 589, 588, 585,
	586, 584, 583, 582, 595, 568, 569, 572, 573, 574,
	716, 806, 631, 577, 782, 590, 591, 754, 824, 566,
	189, 515, 607, 608, 609, 516, 610, 611, 517, 518,
	612, 613, 614, 615, 519, 616, 617, 618, 596, 597,
	598, 599, 600, 601, 602, 603, 606, 604, 605, 712,
	281, 575, 159, 169, 239, 825, 293, 211, 619, 626,
	645, 648, 649, 650, 651, 655, 660, 0, 666, 672,
	674, 675, 683, 688, 689, 690, 691, 698, 700, 701,
	702, 703, 704, 707, 708, 710, 717, 718, 724, 729,
	730, 736, 737, 0, 760, 763, 580, 774, 776, 780,
	781, 788, 793, 794, 819, 823, 828, 347, 197, 715,
	735, 766, 170, 177, 184, 196, 204, 210, 220, 223,
	227, 228, 230, 233, 245, 247, 248, 249, 250, 266,
	267, 270, 271, 274, 275, 278, 279, 280, 282, 283,
	289, 148, 295, 301, 302, 303, 304, 305, 312, 313,
	314, 315, 322, 338, 339, 352, 353, 798, 695, 156,
	0, 0, 162, 0, 0, 0, 0, 0, 682, 161,
	797, 821, 742, 756, 809, 0, 328, 571, 813, 656,
	679, 822, 685, 687, 750, 632, 727, 273, 676, 633,
	0, 0, 624, 869, 625, 657, 200, 867, 783, 728,
	811, 713, 743, 753, 199, 191, 720, 719, 800, 668,
	667, 748, 796, 810, 0, 0, 579, 240, 0, 0,
	350, 320, 257, 0, 0, 711, 0, 564, 565, 696,
	752, 644, 739, 815, 677, 744, 816, 77, 0, 0,
	0, 478, 503, 502, 505, 506, 507, 508, 0, 0,
	137, 504, 509, 510, 511, 0, 706, 749, 827, 623,
	886, 494, 628, 578, 0, 801, 664, 665, 203, 0,
	0, 0, 0, 0, 0, 0, 709, 726, 768, 693,
	345, 755, 764, 778, 686, 288, 216, 143, 0, 0,
	0, 0, 491, 492, 0, 0, 0, 0, 594, 0,
	493, 0, 638, 489, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 495, 0, 0, 0,
	643, 621, 662, 770, 622, 620, 258, 635, 567, 799,
	694, 231, 154, 805, 692, 592, 758, 639, 787, 680,
	238, 637, 155, 634, 640, 678, 269, 767, 773, 576,
	158, 784, 658, 671, 192, 0, 298, 745, 344, 483,
	731, 297, 241, 337, 759, 807, 343, 681, 327, 351,
	355, 209, 714, 183, 317, 201, 198, 663, 777, 627,
	217, 287, 195, 234, 697, 751, 659, 188, 762, 738,
	789, 316, 334, 160, 255, 335, 354, 175, 329, 256,
	262, 185, 187, 186, 171, 311, 333, 180, 190, 785,
	772, 791, 654, 641, 646, 642, 670, 808, 226, 218,
	792, 790, 348, 144, 307, 306, 684, 225, 775, 145,
	136, 294, 146, 232, 163, 795, 357, 174, 236, 330,
	482, 212, 268, 194, 747, 277, 669, 157, 290, 252,
	253, 251, 254, 215, 140, 147, 771, 292, 309, 332,
	176, 323, 138, 139, 141, 149, 300, 150, 151, 814,
	246, 205, 208, 219, 229, 746, 296, 324, 349, 740,
	172, 165, 326, 342, 181, 308, 310, 356, 769, 167,
	803, 786, 733, 699, 705, 629, 0, 166, 765, 661,
	673, 653, 741, 652, 214, 757, 340, 341, 193, 358,
	570, 818, 168, 636, 817, 265, 272, 264, 820, 336,
	804, 734, 723, 721, 630, 802, 732, 722, 237, 207,
	221, 285, 243, 286, 222, 260, 259, 261, 244, 725,
	0, 164, 0, 321, 812, 829, 325, 178, 647, 779,
	331, 291, 179, 213, 206, 284, 263, 173, 224, 319,
	235, 242, 761, 826, 276, 299, 182, 346, 318, 202,
	581, 593, 587, 589, 588, 585, 586, 584, 583, 582,
	595, 568, 569, 572, 573, 574, 1891, 1892, 1893, 577,
	782, 590, 591, 754, 824, 566, 189, 515, 607, 608,
	609, 516, 610, 611, 517, 518, 612, 613, 614, 615,
	519, 616, 617, 618, 596, 597, 598, 599, 600, 601,
	602, 603, 606, 604, 605, 712, 281, 575, 159, 169,
	239, 825, 293, 211, 619, 626, 645, 648, 649, 650,
	651, 655, 660, 0, 666, 672, 674, 675, 683, 688,
	689, 690, 691, 698, 700, 701, 702, 703, 704, 707,
	708, 710, 717, 718, 724, 729, 730, 736, 737, 0,
	760, 763, 580, 774, 776, 780, 781, 788, 793, 794,
	819, 823, 828, 347, 197, 715, 735, 766, 170, 177,
	184, 196, 204, 210, 220, 223, 227, 228, 230, 233,
	245, 247, 248, 249, 250, 266, 267, 270, 271, 274,
	275, 278, 279, 280, 282, 283, 289, 148, 295, 301,
	302, 303, 304, 305, 312, 313, 314, 315, 322, 338,
	339, 352, 353, 798, 695, 156, 0, 0, 162, 0,
	0, 0, 0, 0, 682, 161, 797, 821, 742, 756,
	1654, 2761, 328, 1509, 1658, 1459, 1488, 1675, 1494, 1497,
	1578, 1425, 1547, 273, 1485, 1426, 1409, 1464, 1413, 1476,
	1414, 1461, 200, 1457, 1619, 1550, 1656, 1529, 1571, 1581,
	199, 191, 1539, 1538, 1644, 1474, 1473, 1576, 1633, 1655,
	1528, 0, 1665, 240, 1630, 929, 350, 320, 257, 932,
	931, 1524, 1639, 1545, 1608, 1507, 1580, 1441, 1563, 1660,
	1486, 1572, 1661, 77, 0, 1117, 0, 925, 0, 0,
	0, 0, 0, 0, 0, 0, 137, 0, 1568, 1652,
	1479, 930, 1519, 1577, 1680, 1412, 1564, 0, 1417, 1428,
	1674, 1645, 1470, 1471, 203, 0, 0, 0, 0, 0,
	0, 0, 1522, 1546, 1598, 1504, 345, 1583, 1593, 1611,
	1496, 288, 216, 143, 0, 0, 0, 0, 0, 0,
	0, 0, 1466, 0, 1561, 0, 0, 0, 1433, 1419,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1518, 0, 0, 0, 1440, 1410, 1468, 1600,
	1411, 1408, 258, 1429, 1613, 1643, 1505, 231, 154, 1649,
	1503, 1502, 1587, 1434, 1623, 1489, 238, 1432, 155, 1427,
	1435, 1487, 269, 1597, 1605, 142, 158, 1620, 1462, 1478,
	192, 1780, 298, 1573, 344, 928, 1554, 297, 241, 337,
	1588, 1651, 343, 1490, 327, 351, 355, 209, 1530, 183,
	317, 201, 198, 1469, 1610, 1416, 217, 287, 195, 234,
	1508, 1579, 1463, 188, 1591, 1562, 1625, 316, 334, 160,
	255, 335, 354, 175, 329, 256, 262, 185, 187, 186,
	171, 311, 333, 180, 190, 1621, 1604, 1627, 1456, 1436,
	1447, 1437, 1477, 1653, 226, 218, 1628, 1626, 348, 144,
	307, 306, 1493, 225, 1607, 145, 136, 294, 146, 232,
	163, 1632, 357, 174, 236, 330, 927, 212, 268, 194,
	1575, 277, 1475, 157, 290, 252, 253, 251, 254, 215,
	140, 147, 1603, 292, 309, 332, 176, 323, 138, 139,
	141, 149, 300, 150, 151, 1659, 246, 205, 208, 219,
	229, 1574, 296, 324, 349, 1565, 172, 165, 326, 342,
	181, 308, 310, 356, 1599, 167, 1647, 1622, 1556, 1511,
	1517, 1418, 0, 166, 1595, 1467, 1482, 1455, 1569, 1454,
	214, 1586, 340, 341, 193, 358, 1430, 1667, 168, 1431,
	1666, 265, 272, 264, 1670, 336, 1648, 1557, 1542, 1540,
	1423, 1646, 1555, 1541, 237, 207, 221, 285, 243, 286,
	222, 260, 259, 261, 244, 1544, 0, 164, 0, 321,
	1657, 1682, 325, 178, 1449, 1614, 331, 291, 179, 213,
	206, 284, 263, 173, 224, 319, 235, 242, 1590, 1679,
	276, 299, 182, 346, 318, 202, 1445, 1448, 1443, 1446,
	1444, 1548, 1549, 1662, 1663, 1664, 1602, 1438, 0, 1640,
	1641, 0, 1535, 1650, 1424, 0, 1618, 152, 153, 1582,
	1677, 1495, 189, 131, 1420, 1421, 1422, 132, 1525, 1526,
	133, 134, 1636, 1635, 1634, 1637, 135, 1671, 1669, 1672,
	1439, 1460, 1481, 1531, 1532, 1534, 1566, 1567, 1612, 1585,
	1594, 1527, 281, 1553, 159, 169, 239, 2762, 293, 211,
	1407, 1415, 1442, 1450, 1451, 1452, 1453, 1458, 1465, 0,
	1472, 1480, 1483, 1484, 1492, 1498, 1499, 1500, 1501, 1510,
	1512, 1513, 1514, 1515, 1516, 1520, 1521, 1523, 1536, 1537,
	1543, 1551, 1552, 1559, 1560, 0, 1589, 1592, 1601, 1606,
	1609, 1615, 1617, 1624, 1629, 1631, 1668, 1676, 1681, 347,
	197, 1533, 1558, 1596, 170, 177, 184, 196, 204, 210,
	220, 223, 227, 228, 230, 233, 245, 247, 248, 249,
	250, 266, 267, 270, 271, 274, 275, 278, 279, 280,
	282, 283, 289, 148, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 1642,
	1506, 156, 0, 0, 162, 0, 0, 0, 0, 0,
	1491, 161, 1638, 1673, 1570, 1584, 1654, 1616, 328, 1509,
	1658, 1459, 1488, 1675, 1494, 1497, 1578, 1425, 1547, 273,
	1485, 1426, 1409, 1464, 1413, 1476, 1414, 1461, 200, 1457,
	1619, 1550, 1656, 1529, 1571, 1581, 199, 191, 1539, 1538,
	1644, 1474, 1473, 1576, 1633, 1655, 1528, 0, 1665, 240,
	1630, 929, 350, 320, 257, 932, 931, 1524, 1639, 1545,
	1608, 1507, 1580, 1441, 1563, 1660, 1486, 1572, 1661, 0,
	0, 0, 0, 925, 0, 0, 0, 0, 0, 0,
	0, 0, 137, 0, 1568, 1652, 1479, 930, 1519, 1577,
	1680, 1412, 1564, 0, 1417, 1428, 1674, 1645, 1470, 1471,
	203, 0, 0, 0, 0, 0, 0, 0, 1522, 1546,
	1598, 1504, 345, 1583, 1593, 1611, 1496, 288, 216, 143,
	0, 0, 0, 0, 0, 0, 0, 0, 1466, 0,
	1561, 0, 0, 0, 1433, 1419, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1518, 0,
	0, 0, 1440, 1410, 1468, 1600, 1411, 1408, 258, 1429,
	1613, 1643, 1505, 231, 154, 1649, 1503, 1502, 1587, 1434,
	1623, 1489, 238, 1432, 155, 1427, 1435, 1487, 269, 1597,
	1605, 142, 158, 1620, 1462, 1478, 192, 1780, 298, 1573,
	344, 928, 1554, 297, 241, 337, 1588, 1651, 343, 1490,
	327, 351, 355, 209, 1530, 183, 317, 201, 198, 1469,
	1610, 1416, 217, 287, 195, 234, 1508, 1579, 1463, 188,
	1591, 1562, 1625, 316, 334, 160, 255, 335, 354, 175,
	329, 256, 262, 185, 187, 186, 171, 311, 333, 180,
	190, 1621, 1604, 1627, 1456, 1436, 1447, 1437, 1477, 1653,
	226, 218, 1628, 1626, 348, 144, 307, 306, 1493, 225,
	1607, 145, 136, 294, 146, 232, 163, 1632, 357, 174,
	236, 330, 927, 212, 268, 194, 1575, 277, 1475, 157,
	290, 252, 253, 251, 254, 215, 140, 147, 1603, 292,
	309, 332, 176, 323, 138, 139, 141, 149, 300, 150,
	151, 1659, 246, 205, 208, 219, 229, 1574, 296, 324,
	349, 1565, 172, 165, 326, 342, 181, 308, 310, 356,
	1599, 167, 1647, 1622, 1556, 1511, 1517, 1418, 0, 166,
	1595, 1467, 1482, 1455, 1569, 1454, 214, 1586, 340, 341,
	193, 358, 1430, 1667, 168, 1431, 1666, 265, 272, 264,
	1670, 336, 1648, 1557, 1542, 1540, 1423, 1646, 1555, 1541,
	237, 207, 221, 285, 243, 286, 222, 260, 259, 261,
	244, 1544, 0, 164, 0, 321, 1657, 1682, 325, 178,
	1449, 1614, 331, 291, 179, 213, 206, 284, 263, 173,
	224, 319, 235, 242, 1590, 1679, 276, 299, 182, 346,
	318, 202, 1445, 1448, 1443, 1446, 1444, 1548, 1549, 1662,
	1663, 1664, 1602, 1438, 0, 1640, 1641, 0, 1535, 1650,
	1424, 0, 1618, 152, 153, 1582, 1677, 1495, 189, 131,
	1420, 1421, 1422, 132, 1525, 1526, 133, 134, 1636, 1635,
	1634, 1637, 135, 1671, 1669, 1672, 1439, 1460, 1481, 1531,
	1532, 1534, 1566, 1567, 1612, 1585, 1594, 1527, 281, 1553,
	159, 169, 239, 1678, 293, 211, 1407, 1415, 1442, 1450,
	1451, 1452, 1453, 1458, 1465, 0, 1472, 1480, 1483, 1484,
	1492, 1498, 1499, 1500, 1501, 1510, 1512, 1513, 1514, 1515,
	1516, 1520, 1521, 1523, 1536, 1537, 1543, 1551, 1552, 1559,
	1560, 0, 1589, 1592, 1601, 1606, 1609, 1615, 1617, 1624,
	1629, 1631, 1668, 1676, 1681, 347, 197, 1533, 1558, 1596,
	170, 177, 184, 196, 204, 210, 220, 223, 227, 228,
	230, 233, 245, 247, 248, 249, 250, 266, 267, 270,
	271, 274, 275, 278, 279, 280, 282, 283, 289, 148,
	295, 301, 302, 303, 304, 305, 312, 313, 314, 315,
	322, 338, 339, 352, 353, 1642, 1506, 156, 0, 0,
	162, 0, 0, 0, 0, 0, 1491, 161, 1638, 1673,
	1570, 1584, 1654, 1616, 328, 1509, 1658, 1459, 1488, 1675,
	1494, 1497, 1578, 1425, 1547, 273, 1485, 1426, 1409, 1464,
	1413, 1476, 1414, 1461, 200, 1457, 1619, 1550, 1656, 1529,
	1571, 1581, 199, 191, 1539, 1538, 1644, 1474, 1473, 1576,
	1633, 1655, 1528, 0, 1665, 240, 1630, 0, 350, 320,
	257, 0, 0, 1524, 1639, 1545, 1608, 1507, 1580, 1441,
	1563, 1660, 1486, 1572, 1661, 0, 0, 0, 0, 478,
	0, 0, 0, 0, 0, 0, 0, 0, 137, 0,
	1568, 1652, 1479, 0, 1519, 1577, 1680, 1412, 1564, 0,
	1417, 1428, 1674, 1645, 1470, 1471, 203, 0, 0, 0,
	0, 0, 0, 0, 1522, 1546, 1598, 1504, 345, 1583,
	1593, 1611, 1496, 288, 216, 143, 0, 0, 0, 0,
	0, 0, 2473, 0, 1466, 0, 1561, 0, 0, 0,
	1433, 1419, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1518, 0, 0, 0, 1440, 1410,
	1468, 1600, 1411, 1408, 258, 1429, 1613, 1643, 1505, 231,
	154, 1649, 1503, 1502, 1587, 1434, 1623, 1489, 238, 1432,
	155, 1427, 1435, 1487, 269, 1597, 1605, 142, 158, 1620,
	1462, 1478, 192, 0, 298, 1573, 344, 1821, 1554, 297,
	241, 337, 1588, 1651, 343, 1490, 327, 351, 355, 209,
	1530, 183, 317, 201, 198, 1469, 1610, 1416, 217, 287,
	195, 234, 1508, 1579, 1463, 188, 1591, 1562, 1625, 316,
	334, 160, 255, 335, 354, 175, 329, 256, 262, 185,
	187, 186, 171, 311, 333, 180, 190, 1621, 1604, 1627,
	1456, 1436, 1447, 1437, 1477, 1653, 226, 218, 1628, 1626,
	348, 144, 307, 306, 1493, 225, 1607, 145, 136, 294,
	146, 232, 163, 1632, 357, 174, 236, 330, 1820, 212,
	268, 194, 1575, 277, 1475, 157, 290, 252, 253, 251,
	254, 215, 140, 147, 1603, 292, 309, 332, 176, 323,
	138, 139, 141, 149, 300, 150, 151, 1659, 246, 205,
	208, 219, 229, 1574, 296, 324, 349, 1565, 172, 165,
	326, 342, 181, 308, 310, 356, 1599, 167, 1647, 1622,
	1556, 1511, 1517, 1418, 0, 166, 1595, 1467, 1482, 1455,
	1569, 1454, 214, 1586, 340, 341, 193, 358, 1430, 1667,
	168, 1431, 1666, 265, 272, 264, 1670, 336, 1648, 1557,
	1542, 1540, 1423, 1646, 1555, 1541, 237, 207, 221, 285,
	243, 286, 222, 260, 259, 261, 244, 1544, 0, 164,
	0, 321, 1657, 1682, 325, 178, 1449, 1614, 331, 291,
	179, 213, 206, 284, 263, 173, 224, 319, 235, 242,
	1590, 1679, 276, 299, 182, 346, 318, 202, 1445, 1448,
	1443, 1446, 1444, 1548, 1549, 1662, 1663, 1664, 1602, 1438,
	0, 1640, 1641, 0, 1535, 1650, 1424, 0, 1618, 152,
	153, 1582, 1677, 1495, 189, 131, 1420, 1421, 1422, 132,
	1525, 1526, 133, 134, 1636, 1635, 1634, 1637, 135, 1671,
	1669, 1672, 1439, 1460, 1481, 1531, 1532, 1534, 1566, 1567,
	1612, 1585, 1594, 1527, 281, 1553, 159, 169, 239, 1678,
	293, 211, 1407, 1415, 1442, 1450, 1451, 1452, 1453, 1458,
	1465, 0, 1472, 1480, 1483, 1484, 1492, 1498, 1499, 1500,
	1501, 1510, 1512, 1513, 1514, 1515, 1516, 1520, 1521, 1523,
	1536, 1537, 1543, 1551, 1552, 1559, 1560, 0, 1589, 1592,
	1601, 1606, 1609, 1615, 1617, 1624, 1629, 1631, 1668, 1676,
	1681, 347, 197, 1533, 1558, 1596, 170, 177, 184, 196,
	204, 210, 220, 223, 227, 228, 230, 233, 245, 247,
	248, 249, 250, 266, 267, 270, 271, 274, 275, 278,
	279, 280, 282, 283, 289, 148, 295, 301, 302, 303,
	304, 305, 312, 313, 314, 315, 322, 338, 339, 352,
	353, 1642, 1506, 156, 0, 0, 162, 0, 0, 0,
	0, 0, 1491, 161, 1638, 1673, 1570, 1584, 1654, 1616,
	328, 1509, 1658, 1459, 1488, 1675, 1494, 1497, 1578, 1425,
	1547, 273, 1485, 1426, 1409, 1464, 1413, 1476, 1414, 1461,
	200, 1457, 1619, 1550, 1656, 1529, 1571, 1581, 199, 191,
	1539, 1538, 1644, 1474, 1473, 1576, 1633, 1655, 1528, 0,
	1665, 240, 1630, 0, 350, 320, 257, 0, 0, 1524,
	1639, 1545, 1608, 1507, 1580, 1441, 1563, 1660, 1486, 1572,
	1661, 0, 0, 0, 0, 478, 0, 0, 0, 0,
	0, 0, 0, 0, 137, 0, 1568, 1652, 1479, 0,
	1519, 1577, 1680, 1412, 1564, 0, 1417, 1428, 1674, 1645,
	1470, 1471, 203, 0, 0, 0, 0, 0, 0, 0,
	1522, 1546, 1598, 1504, 345, 1583, 1593, 1611, 1496, 288,
	216, 143, 0, 0, 0, 0, 0, 0, 1815, 0,
	1466, 0, 1561, 0, 0, 0, 1433, 1419, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1518, 0, 0, 0, 1440, 1410, 1468, 1600, 1411, 1408,
	258, 1429, 1613, 1643, 1505, 231, 154, 1649, 1503, 1502,
	1587, 1434, 1623, 1489, 238, 1432, 155, 1427, 1435, 1487,
	269, 1597, 1605, 142, 158, 1620, 1462, 1478, 192, 0,
	298, 1573, 344, 1821, 1554, 297, 241, 337, 1588, 1651,
	343, 1490, 327, 351, 355, 209, 1530, 183, 317, 201,
	198, 1469, 1610, 1416, 217, 287, 195, 234, 1508, 1579,
	1463, 188, 1591, 1562, 1625, 316, 334, 160, 255, 335,
	354, 175, 329, 256, 262, 185, 187, 186, 171, 311,
	333, 180, 190, 1621, 1604, 1627, 1456, 1436, 1447, 1437,
	1477, 1653, 226, 218, 1628, 1626, 348, 144, 307, 306,
	1493, 225, 1607, 145, 136, 294, 146, 232, 163, 1632,
	357, 174, 236, 330, 1820, 212, 268, 194, 1575, 277,
	1475, 157, 290, 252, 253, 251, 254, 215, 140, 147,
	1603, 292, 309, 332, 176, 323, 138, 139, 141, 149,
	300, 150, 151, 1659, 246, 205, 208, 219, 229, 1574,
	296, 324, 349, 1565, 172, 165, 326, 342, 181, 308,
	310, 356, 1599, 167, 1647, 1622, 1556, 1511, 1517, 1418,
	0, 166, 1595, 1467, 1482, 1455, 1569, 1454, 214, 1586,
	340, 341, 193, 358, 1430, 1667, 168, 1431, 1666, 265,
	272, 264, 1670, 336, 1648, 1557, 1542, 1540, 1423, 1646,
	1555, 1541, 237, 207, 221, 285, 243, 286, 222, 260,
	259, 261, 244, 1544, 0, 164, 0, 321, 1657, 1682,
	325, 178, 1449, 1614, 331, 291, 179, 213, 206, 284,
	263, 173, 224, 319, 235, 242, 1590, 1679, 276, 299,
	182, 346, 318, 202, 1445, 1448, 1443, 1446, 1444, 1548,
	1549, 1662, 1663, 1664, 1602, 1438, 0, 1640, 1641, 0,
	1535, 1650, 1424, 0, 1618, 152, 153, 1582, 1677, 1495,
	189, 131, 1420, 1421, 1422, 132, 1525, 1526, 133, 134,
	1636, 1635, 1634, 1637, 135, 1671, 1669, 1672, 1439, 1460,
	1481, 1531, 1532, 1534, 1566, 1567, 1612, 1585, 1594, 1527,
	281, 1553, 159, 169, 239, 1678, 293, 211, 1407, 1415,
	1442, 1450, 1451, 1452, 1453, 1458, 1465, 0, 1472, 1480,
	1483, 1484, 1492, 1498, 1499, 1500, 1501, 1510, 1512, 1513,
	1514, 1515, 1516, 1520, 1521, 1523, 1536, 1537, 1543, 1551,
	1552, 1559, 1560, 0, 1589, 1592, 1601, 1606, 1609, 1615,
	1617, 1624, 1629, 1631, 1668, 1676, 1681, 347, 197, 1533,
	1558, 1596, 170, 177, 184, 196, 204, 210, 220, 223,
	227, 228, 230, 233, 245, 247, 248, 249, 250, 266,
	267, 270, 271, 274, 275, 278, 279, 280, 282, 283,
	289, 148, 295, 301, 302, 303, 304, 305, 312, 313,
	314, 315, 322, 338, 339, 352, 353, 1642, 1506, 156,
	0, 0, 162, 0, 0, 0, 0, 0, 1491, 161,
	1638, 1673, 1570, 1584, 1654, 1616, 328, 1509, 1658, 1459,
	1488, 1675, 1494, 1497, 1578, 1425, 1547, 273, 1485, 1426,
	1409, 1464, 1413, 1476, 1414, 1461, 200, 1457, 1619, 1550,
	1656, 1529, 1571, 1581, 199, 191, 1539, 1538, 1644, 1474,
	1473, 1576, 1633, 1655, 1528, 0, 1665, 240, 1630, 0,
	350, 320, 257, 0, 0, 1524, 1639, 1545, 1608, 1507,
	1580, 1441, 1563, 1660, 1486, 1572, 1661, 0, 0, 0,
	0, 478, 0, 0, 0, 0, 0, 0, 0, 0,
	137, 0, 1568, 1652, 1479, 0, 1519, 1577, 1680, 1412,
	1564, 0, 1417, 1428, 1674, 1645, 1470, 1471, 203, 0,
	0, 0, 0, 0, 0, 0, 1522, 1546, 1598, 1504,
	345, 1583, 1593, 1611, 1496, 288, 216, 143, 0, 0,
	0, 0, 0, 0, 0, 0, 1466, 0, 1561, 0,
	0, 0, 1433, 1419, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1518, 0, 0, 0,
	1440, 1410, 1468, 1600, 1411, 1408, 258, 1429, 1613, 1643,
	1505, 231, 154, 1649, 1503, 1502, 1587, 1434, 1623, 1489,
	238, 1432, 155, 1427, 1435, 1487, 269, 1597, 1605, 142,
	158, 1620, 1462, 1478, 192, 0, 298, 1573, 344, 1821,
	1554, 297, 241, 337, 1588, 1651, 343, 1490, 327, 351,
	355, 209, 1530, 183, 317, 201, 198, 1469, 1610, 1416,
	217, 287, 195, 234, 1508, 1579, 1463, 188, 1591, 1562,
	1625, 316, 334, 160, 255, 335, 354, 175, 329, 256,
	262, 185, 187, 186, 171, 311, 333, 180, 190, 1621,
	1604, 1627, 1456, 1436, 1447, 1437, 1477, 1653, 226, 218,
	1628, 1626, 348, 144, 307, 306, 1493, 225, 1607, 145,
	136, 294, 146, 232, 163, 1632, 357, 174, 236, 330,
	1820, 212, 268, 194, 1575, 277, 1475, 157, 290, 252,
	253, 251, 254, 215, 140, 147, 1603, 292, 309, 332,
	176, 323, 138, 139, 141, 149, 300, 150, 151, 1659,
	246, 205, 208, 219, 229, 1574, 296, 324, 349, 1565,
	172, 165, 326, 342, 181, 308, 310, 356, 1599, 167,
	1647, 1622, 1556, 1511, 1517, 1418, 0, 166, 1595, 1467,
	1482, 1455, 1569, 1454, 214, 1586, 340, 341, 193, 358,
	1430, 1667, 168, 1431, 1666, 265, 272, 264, 1670, 336,
	1648, 1557, 1542, 1540, 1423, 1646, 1555, 1541, 237, 207,
	221, 285, 243, 286, 222, 260, 259, 261, 244, 1544,
	0, 164, 0, 321, 1657, 1682, 325, 178, 1449, 1614,
	331, 291, 179, 213, 206, 284, 263, 173, 224, 319,
	235, 242, 1590, 1679, 276, 299, 182, 346, 318, 202,
	1445, 1448, 1443, 1446, 1444, 1548, 1549, 1662, 1663, 1664,
	1602, 1438, 0, 1640, 1641, 0, 1535, 1650, 1424, 0,
	1618, 152, 153, 1582, 1677, 1495, 189, 131, 1420, 1421,
	1422, 132, 1525, 1526, 133, 134, 1636, 1635, 1634, 1637,
	135, 1671, 1669, 1672, 1439, 1460, 1481, 1531, 1532, 1534,
	1566, 1567, 1612, 1585, 1594, 1527, 281, 1553, 159, 169,
	239, 1678, 293, 211, 1407, 1415, 1442, 1450, 1451, 1452,
	1453, 1458, 1465, 0, 1472, 1480, 1483, 1484, 1492, 1498,
	1499, 1500, 1501, 1510, 1512, 1513, 1514, 1515, 1516, 1520,
	1521, 1523, 1536, 1537, 1543, 1551, 1552, 1559, 1560, 0,
	1589, 1592, 1601, 1606, 1609, 1615, 1617, 1624, 1629, 1631,
	1668, 1676, 1681, 347, 197, 1533, 1558, 1596, 170, 177,
	184, 196, 204, 210, 220, 223, 227, 228, 230, 233,
	245, 247, 248, 249, 250, 266, 267, 270, 271, 274,
	275, 278, 279, 280, 282, 283, 289, 148, 295, 301,
	302, 303, 304, 305, 312, 313, 314, 315, 322, 338,
	339, 352, 353, 1642, 1506, 156, 0, 0, 162, 0,
	0, 0, 0, 0, 1491, 161, 1638, 1673, 1570, 1584,
	809, 0, 328, 874, 813, 656, 679, 822, 685, 687,
	750, 632, 727, 273, 676, 633, 0, 0, 624, 869,
	625, 657, 200, 867, 783, 728, 811, 713, 743, 753,
	199, 191, 720, 719, 800, 668, 667, 748, 796, 810,
	0, 0, 907, 240, 0, 929, 350, 320, 257, 932,
	931, 711, 0, 881, 894, 696, 752, 644, 739, 815,
	677, 744, 816, 0, 0, 0, 0, 478, 0, 0,
	0, 0, 0, 0, 0, 0, 137, 0, 889, 903,
	870, 930, 706, 749, 827, 623, 886, 0, 628, 858,
	0, 801, 664, 665, 203, 0, 0, 0, 0, 0,
	0, 0, 709, 726, 768, 693, 345, 755, 764, 778,
	686, 288, 216, 143, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 885, 0, 0, 0, 638, 854,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 875, 0, 0, 0, 643, 621, 662, 770,
	622, 620, 258, 635, 896, 799, 694, 231, 154, 805,
	692, 873, 758, 639, 787, 680, 238, 637, 155, 634,
	640, 678, 269, 767, 773, 142, 158, 784, 658, 671,
	192, 2542, 298, 745, 344, 2544, 731, 297, 241, 337,
	759, 807, 343, 681, 327, 351, 355, 209, 714, 183,
	317, 201, 198, 663, 777, 627, 217, 287, 195, 234,
	697, 751, 659, 188, 762, 738, 789, 316, 334, 160,
	255, 335, 354, 175, 329, 256, 262, 185, 187, 186,
	171, 311, 333, 180, 190, 785, 772, 791, 654, 641,
	646, 642, 670, 808, 226, 218, 792, 790, 348, 144,
	307, 306, 684, 225, 775, 145, 136, 294, 146, 232,
	163, 795, 357, 174, 236, 330, 2543, 212, 268, 194,
	747, 277, 669, 157, 290, 252, 253, 251, 254, 215,
	140, 147, 771, 292, 309, 332, 176, 323, 138, 139,
	141, 149, 300, 150, 151, 814, 246, 205, 208, 219,
	229, 746, 296, 324, 349, 740, 172, 165, 326, 342,
	181, 308, 310, 356, 769, 167, 803, 786, 733, 699,
	705, 629, 0, 166, 765, 661, 673, 653, 741, 652,
	214, 757, 340, 341, 193, 358, 859, 818, 168, 636,
	817, 265, 272, 264, 820, 336, 804, 734, 723, 721,
	630, 802, 732, 722, 237, 207, 221, 285, 243, 286,
	222, 260, 259, 261, 244, 725, 0, 164, 0, 321,
	812, 829, 325, 178, 647, 779, 331, 291, 179, 213,
	206, 284, 263, 173, 224, 319, 235, 242, 761, 826,
	276, 299, 182, 346, 318, 202, 864, 866, 862, 865,
	863, 882, 883, 904, 905, 906, 893, 860, 0, 901,
	902, 0, 716, 806, 631, 0, 782, 152, 153, 754,
	824, 872, 189, 131, 855, 856, 857, 132, 876, 877,
	133, 134, 899, 898, 897, 900, 135, 909, 908, 910,
	861, 868, 871, 878, 879, 880, 887, 888, 895, 890,
	891, 712, 281, 884, 159, 169, 239, 825, 293, 211,
	619, 626, 645, 648, 649, 650, 651, 655, 660, 0,
	666, 672, 674, 675, 683, 688, 689, 690, 691, 698,
	700, 701, 702, 703, 704, 707, 708, 710, 717, 718,
	724, 729, 730, 736, 737, 0, 760, 763, 892, 774,
	776, 780, 781, 788, 793, 794, 819, 823, 828, 347,
	197, 715, 735, 766, 170, 177, 184, 196, 204, 210,
	220, 223, 227, 228, 230, 233, 245, 247, 248, 249,
	250, 266, 267, 270, 271, 274, 275, 278, 279, 280,
	282, 283, 289, 148, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 798,
	695, 156, 0, 0, 162, 0, 0, 0, 0, 0,
	682, 161, 797, 821, 742, 756, 809, 0, 328, 874,
	813, 656, 679, 822, 685, 687, 750, 632, 727, 273,
	676, 633, 0, 0, 624, 869, 625, 657, 200, 867,
	783, 728, 811, 713, 743, 753, 199, 191, 720, 719,
	800, 668, 667, 748, 796, 810, 0, 0, 907, 240,
	0, 0, 350, 320, 257, 0, 0, 711, 0, 881,
	894, 696, 752, 644, 739, 815, 677, 744, 816, 0,
	0, 0, 0, 478, 0, 0, 0, 0, 0, 0,
	0, 0, 137, 0, 889, 903, 870, 0, 706, 749,
	827, 623, 886, 0, 628, 858, 0, 801, 664, 665,
	203, 0, 0, 0, 0, 0, 0, 0, 709, 726,
	768, 693, 345, 755, 764, 778, 686, 288, 216, 143,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	885, 0, 0, 0, 638, 854, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 875, 0,
	0, 0, 643, 621, 662, 770, 622, 620, 258, 635,
	896, 799, 694, 231, 154, 805, 692, 873, 758, 639,
	787, 680, 238, 637, 155, 634, 640, 678, 269, 767,
	773, 142, 158, 784, 658, 671, 192, 0, 298, 745,
	344, 853, 731, 297, 241, 337, 759, 807, 343, 681,
	327, 351, 355, 209, 714, 183, 317, 201, 198, 663,
	777, 627, 217, 287, 195, 234, 697, 751, 659, 188,
	762, 738, 789, 316, 334, 160, 255, 335, 354, 175,
	329, 256, 262, 185, 187, 186, 171, 311, 333, 180,
	190, 785, 772, 791, 654, 641, 646, 642, 670, 808,
	226, 218, 792, 790, 348, 144, 307, 306, 684, 225,
	775, 145, 136, 294, 146, 232, 163, 795, 357, 174,
	236, 330, 852, 212, 268, 194, 747, 277, 669, 157,
	290, 252, 253, 251, 254, 215, 140, 147, 771, 292,
	309, 332, 176, 323, 138, 139, 141, 149, 300, 150,
	151, 814, 246, 205, 208, 219, 229, 746, 296, 324,
	349, 740, 172, 165, 326, 342, 181, 308, 310, 356,
	769, 167, 803, 786, 733, 699, 705, 629, 0, 166,
	765, 661, 673, 653, 741, 652, 214, 757, 340, 341,
	193, 358, 859, 818, 168, 636, 817, 265, 272, 264,
	820, 336, 804, 734, 723, 721, 630, 802, 732, 722,
	237, 207, 221, 285, 243, 286, 222, 260, 259, 261,
	244, 725, 0, 164, 0, 321, 812, 829, 325, 178,
	647, 779, 331, 291, 179, 213, 206, 284, 263, 173,
	224, 319, 235, 242, 761, 826, 276, 299, 182, 346,
	318, 202, 864, 866, 862, 865, 863, 882, 883, 904,
	905, 906, 893, 860, 0, 901, 902, 0, 716, 806,
	631, 0, 782, 152, 153, 754, 824, 872, 189, 131,
	855, 856, 857, 132, 876, 877, 133, 134, 899, 898,
	897, 900, 135, 909, 908, 910, 861, 868, 871, 878,
	879, 880, 887, 888, 895, 890, 891, 712, 281, 884,
	159, 169, 239, 825, 293, 211, 619, 626, 645, 648,
	649, 650, 651, 655, 660, 0, 666, 672, 674, 675,
	683, 688, 689, 690, 691, 698, 700, 701, 702, 703,
	704, 707, 708, 710, 717, 718, 724, 729, 730, 736,
	737, 0, 760, 763, 892, 774, 776, 780, 781, 788,
	793, 794, 819, 823, 828, 347, 197, 715, 735, 766,
	170, 177, 184, 196, 204, 210, 220, 223, 227, 228,
	230, 233, 245, 247, 248, 249, 250, 266, 267, 270,
	271, 274, 275, 278, 279, 280, 282, 283, 289, 148,
	295, 301, 302, 303, 304, 305, 312, 313, 314, 315,
	322, 338, 339, 352, 353, 798, 695, 156, 0, 0,
	162, 0, 0, 0, 0, 0, 682, 161, 797, 821,
	742, 756, 809, 0, 328, 874, 813, 656, 679, 822,
	685, 687, 750, 632, 727, 273, 676, 633, 0, 0,
	624, 869, 625, 657, 200, 867, 783, 728, 811, 713,
	743, 753, 199, 191, 720, 719, 800, 668, 667, 748,
	796, 810, 0, 0, 907, 240, 0, 0, 350, 320,
	257, 0, 0, 711, 0, 881, 894, 696, 752, 644,
	739, 815, 677, 744, 816, 0, 0, 0, 0, 478,
	0, 0, 0, 0, 0, 0, 0, 0, 137, 0,
	889, 903, 870, 0, 706, 749, 827, 623, 886, 0,
	628, 858, 0, 801, 664, 665, 203, 0, 0, 0,
	0, 0, 0, 0, 709, 726, 768, 693, 345, 755,
	764, 778, 686, 288, 216, 143, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 885, 0, 0, 0,
	638, 854, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 875, 0, 0, 0, 643, 621,
	662, 770, 622, 620, 258, 635, 896, 799, 694, 231,
	154, 805, 692, 873, 758, 639, 787, 680, 238, 637,
	155, 634, 640, 678, 269, 767, 773, 142, 158, 784,
	658, 671, 192, 0, 298, 745, 344, 853, 731, 297,
	241, 337, 759, 807, 343, 681, 327, 351, 355, 209,
	714, 183, 317, 201, 198, 663, 777, 627, 217, 287,
	195, 234, 697, 751, 659, 188, 762, 738, 789, 316,
	334, 160, 255, 335, 354, 175, 329, 256, 262, 185,
	187, 186, 171, 311, 333, 180, 190, 785, 772, 791,
	654, 641, 646, 642, 670, 808, 226, 218, 792, 790,
	348, 144, 307, 306, 684, 225, 775, 145, 136, 294,
	146, 232, 163, 795, 357, 174, 236, 330, 852, 212,
	268, 194, 747, 277, 669, 157, 290, 252, 253, 251,
	254, 215, 140, 147, 771, 292, 309, 332, 176, 323,
	138, 139, 141, 149, 300, 150, 151, 814, 246, 205,
	208, 219, 229, 746, 296, 324, 349, 740, 172, 165,
	326, 342, 181, 308, 310, 356, 769, 167, 803, 786,
	733, 699, 705, 629, 0, 166, 765, 661, 673, 653,
	741, 652, 214, 757, 340, 341, 193, 358, 859, 818,
	168, 847, 817, 265, 272, 264, 820, 336, 804, 734,
	723, 721, 630, 802, 732, 722, 237, 207, 221, 285,
	243, 286, 222, 260, 259, 261, 843, 725, 0, 164,
	0, 321, 812, 829, 325, 178, 647, 779, 331, 291,
	179, 213, 206, 284, 848, 846, 837, 838, 235, 242,
	761, 826, 276, 299, 182, 346, 318, 202, 864, 866,
	862, 865, 863, 882, 883, 904, 905, 906, 893, 860,
	0, 901, 902, 0, 716, 806, 631, 0, 782, 152,
	153, 754, 824, 872, 189, 131, 855, 856, 857, 132,
	876, 877, 133, 134, 899, 898, 897, 900, 135, 909,
	908, 910, 861, 868, 871, 878, 879, 880, 887, 888,
	895, 890, 891, 712, 281, 884, 159, 169, 239, 825,
	293, 211, 619, 626, 645, 648, 649, 650, 651, 655,
	660, 0, 666, 672, 674, 675, 683, 688, 689, 690,
	691, 698, 700, 701, 702, 703, 704, 707, 708, 710,
	717, 718, 724, 729, 730, 736, 737, 0, 760, 763,
	892, 774, 776, 780, 781, 788, 793, 794, 819, 823,
	828, 347, 197, 715, 735, 766, 170, 177, 184, 196,
	204, 210, 220, 223, 227, 228, 230, 233, 245, 247,
	248, 249, 250, 266, 267, 270, 271, 274, 275, 278,
	279, 280, 844, 845, 289, 148, 295, 301, 302, 303,
	304, 305, 312, 313, 314, 315, 322, 338, 339, 352,
	353, 798, 695, 156, 0, 0, 162, 0, 0, 0,
	0, 0, 682, 161, 797, 821, 742, 756, 809, 0,
	328, 874, 813, 656, 679, 822, 685, 687, 750, 632,
	727, 273, 676, 633, 0, 0, 624, 869, 625, 657,
	200, 867, 783, 728, 811, 713, 743, 753, 199, 191,
	720, 719, 800, 668, 667, 748, 796, 810, 0, 0,
	907, 240, 0, 0, 350, 320, 257, 0, 0, 711,
	0, 881, 894, 696, 752, 644, 739, 815, 677, 744,
	816, 0, 0, 0, 0, 478, 0, 0, 0, 0,
	0, 0, 0, 0, 137, 0, 889, 903, 870, 0,
	706, 749, 827, 623, 886, 0, 628, 858, 0, 801,
	664, 665, 203, 0, 0, 0, 0, 0, 0, 0,
	709, 726, 768, 693, 345, 755, 764, 778, 686, 288,
	216, 143, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 885, 0, 0, 0, 638, 854, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	875, 0, 0, 0, 643, 621, 662, 770, 622, 620,
	258, 635, 896, 799, 694, 231, 154, 805, 692, 873,
	758, 639, 787, 680, 238, 637, 155, 634, 640, 678,
	269, 767, 773, 142, 158, 784, 658, 671, 192, 0,
	298, 745, 344, 853, 731, 297, 241, 337, 759, 807,
	343, 681, 327, 351, 355, 209, 714, 183, 317, 201,
	198, 663, 777, 627, 217, 287, 195, 234, 697, 751,
	659, 188, 762, 738, 789, 316, 334, 160, 255, 335,
	354, 175, 329, 256, 262, 185, 187, 186, 171, 311,
	333, 180, 190, 785, 772, 791, 654, 641, 646, 642,
	670, 808, 226, 218, 792, 790, 348, 144, 307, 306,
	684, 225, 775, 145, 136, 294, 146, 232, 163, 795,
	357, 174, 236, 330, 852, 212, 268, 194, 747, 277,
	669, 157, 290, 252, 253, 251, 254, 215, 140, 147,
	771, 292, 309, 332, 176, 323, 138, 139, 141, 149,
	300, 150, 151, 814, 246, 205, 208, 219, 229, 746,
	296, 324, 349, 740, 172, 165, 326, 1282, 181, 308,
	310, 356, 769, 167, 803, 786, 733, 699, 705, 629,
	0, 166, 765, 661, 673, 653, 741, 652, 214, 757,
	340, 341, 193, 358, 859, 818, 168, 636, 817, 265,
	272, 264, 820, 336, 804, 734, 723, 721, 630, 802,
	732, 722, 237, 207, 221, 285, 243, 286, 222, 260,
	259, 261, 244, 725, 0, 164, 0, 321, 812, 829,
	325, 178, 647, 779, 331, 291, 179, 213, 206, 284,
	263, 173, 224, 319, 235, 242, 761, 826, 276, 299,
	182, 346, 318, 202, 864, 866, 862, 865, 863, 882,
	883, 904, 905, 906, 893, 860, 0, 901, 902, 0,
	716, 806, 631, 0, 782, 152, 153, 754, 824, 872,
	189, 131, 855, 856, 857, 132, 876, 877, 133, 134,
	899, 898, 897, 900, 135, 909, 908, 910, 861, 868,
	871, 878, 879, 880, 887, 888, 895, 890, 891, 712,
	281, 884, 159, 169, 239, 825, 293, 211, 619, 626,
	645, 648, 649, 650, 651, 655, 660, 0, 666, 672,
	674, 675, 683, 688, 689, 690, 691, 698, 700, 701,
	702, 703, 704, 707, 708, 710, 717, 718, 724, 729,
	730, 736, 737, 0, 760, 763, 892, 774, 776, 780,
	781, 788, 793, 794, 819, 823, 828, 347, 197, 715,
	735, 766, 170, 177, 184, 196, 204, 210, 220, 223,
	227, 228, 230, 233, 245, 247, 248, 249, 250, 266,
	267, 270, 271, 274, 275, 278, 279, 280, 282, 283,
	289, 148, 295, 301, 302, 303, 304, 305, 312, 313,
	314, 315, 322, 338, 339, 352, 353, 798, 695, 156,
	0, 0, 162, 0, 0, 0, 0, 0, 682, 161,
	797, 821, 742, 756, 809, 0, 328, 874, 813, 656,
	679, 822, 685, 687, 750, 632, 727, 273, 676, 633,
	0, 0, 624, 869, 625, 657, 200, 867, 783, 728,
	811, 713, 743, 753, 199, 191, 720, 719, 800, 668,
	667, 748, 796, 810, 0, 0, 907, 240, 0, 0,
	350, 320, 257, 0, 0, 711, 0, 881, 894, 696,
	752, 644, 739, 815, 677, 744, 816, 0, 0, 0,
	0, 478, 0, 0, 0, 0, 0, 0, 0, 0,
	137, 0, 889, 903, 870, 0, 706, 749, 827, 623,
	886, 0, 628, 858, 0, 801, 664, 665, 203, 0,
	0, 0, 0, 0, 0, 0, 709, 726, 768, 693,
	345, 755, 764, 778, 686, 288, 216, 143, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 885, 0,
	0, 0, 638, 854, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 875, 0, 0, 0,
	643, 621, 662, 770, 622, 620, 258, 635, 896, 799,
	694, 231, 154, 805, 692, 873, 758, 639, 787, 680,
	238, 637, 155, 634, 640, 678, 269, 767, 773, 142,
	158, 784, 658, 671, 192, 0, 298, 745, 344, 853,
	731, 297, 241, 337, 759, 807, 343, 681, 327, 351,
	355, 209, 714, 183, 317, 201, 198, 663, 777, 627,
	217, 287, 195, 234, 697, 751, 659, 188, 762, 738,
	789, 316, 334, 160, 255, 335, 354, 175, 329, 256,
	262, 185, 187, 186, 171, 311, 333, 180, 190, 785,
	772, 791, 654, 641, 646, 642, 670, 808, 226, 218,
	792, 790, 348, 144, 307, 306, 684, 225, 775, 145,
	136, 294, 146, 232, 163, 795, 357, 174, 236, 330,
	852, 212, 268, 194, 747, 277, 669, 157, 290, 252,
	253, 251, 254, 215, 140, 147, 771, 292, 309, 332,
	176, 323, 138, 139, 141, 149, 300, 150, 151, 814,
	246, 205, 208, 219, 229, 746, 296, 324, 349, 740,
	172, 165, 326, 834, 181, 308, 310, 356, 769, 167,
	803, 786, 733, 699, 705, 629, 0, 166, 765, 661,
	673, 653, 741, 652, 214, 757, 340, 341, 193, 358,
	859, 818, 168, 847, 817, 265, 272, 264, 820, 336,
	804, 734, 723, 721, 630, 802, 732, 722, 237, 207,
	221, 285, 243, 286, 222, 260, 259, 261, 843, 725,
	0, 164, 0, 321, 812, 829, 325, 178, 647, 779,
	331, 291, 179, 213, 206, 284, 848, 846, 837, 838,
	235, 242, 761, 826, 276, 299, 182, 346, 318, 202,
	864, 866, 862, 865, 863, 882, 883, 904, 905, 906,
	893, 860, 0, 901, 902, 0, 716, 806, 631, 0,
	782, 152, 153, 754, 824, 872, 189, 131, 855, 856,
	857, 132, 876, 877, 133, 134, 899, 898, 897, 900,
	135, 909, 908, 910, 861, 868, 871, 878, 879, 880,
	887, 888, 895, 890, 891, 712, 281, 884, 159, 169,
	239, 825, 293, 211, 619, 626, 645, 648, 649, 650,
	651, 655, 660, 0, 666, 672, 674, 675, 683, 688,
	689, 690, 691, 698, 700, 701, 702, 703, 704, 707,
	708, 710, 717, 718, 724, 729, 730, 736, 737, 0,
	760, 763, 892, 774, 776, 780, 781, 788, 793, 794,
	819, 823, 828, 347, 197, 715, 735, 766, 170, 177,
	184, 196, 204, 210, 220, 223, 227, 228, 230, 233,
	245, 247, 248, 249, 250, 266, 267, 270, 271, 274,
	275, 278, 279, 280, 844, 845, 289, 148, 295, 301,
	302, 303, 304, 305, 312, 313, 314, 315, 322, 338,
	339, 352, 353, 798, 695, 156, 0, 0, 162, 0,
	0, 0, 0, 0, 682, 161, 797, 821, 742, 756,
	1654, 1616, 328, 1509, 1658, 1459, 1488, 1675, 1494, 1497,
	1578, 1425, 1547, 273, 1485, 1426, 1409, 1464, 1413, 1476,
	1414, 1461, 200, 1457, 1619, 1550, 1656, 1529, 1571, 1581,
	199, 191, 1539, 1538, 1644, 1474, 1473, 1576, 1633, 1655,
	1528, 0, 1665, 240, 1630, 0, 350, 320, 257, 0,
	0, 1524, 1639, 1545, 1608, 1507, 1580, 1441, 1563, 1660,
	1486, 1572, 1661, 0, 0, 0, 0, 925, 0, 1978,
	1979, 0, 0, 0, 0, 0, 1980, 0, 1568, 1652,
	1479, 0, 1519, 1577, 1680, 1412, 1564, 0, 1417, 1428,
	1674, 1645, 1470, 1471, 203, 2301, 0, 0, 0, 0,
	0, 0, 1522, 1546, 1598, 1504, 345, 1583, 1593, 1611,
	1496, 288, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1466, 0, 1561, 0, 0, 0, 1433, 1419,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1518, 0, 0, 0, 1440, 1410, 1468, 1600,
	1411, 1408, 258, 1429, 1613, 1643, 1505, 231, 0, 1649,
	1503, 1502, 1587, 1434, 1623, 1489, 238, 1432, 155, 1427,
	1435, 1487, 269, 1597, 1605, 0, 158, 1620, 1462, 1478,
	192, 0, 298, 1573, 344, 0, 1554, 297, 241, 337,
	1588, 1651, 343, 1490, 327, 351, 355, 209, 1530, 183,
	317, 201, 198, 1469, 1610, 1416, 217, 287, 195, 234,
	1508, 1579, 1463, 188, 1591, 1562, 1625, 316, 334, 160,
	255, 335, 354, 175, 329, 256, 262, 185, 187, 186,
	171, 311, 333, 180, 190, 1621, 1604, 1627, 1456, 1436,
	1447, 1437, 1477, 1653, 226, 218, 1628, 1626, 348, 0,
	307, 306, 1493, 225, 1607, 0, 0, 294, 1982, 232,
	163, 1632, 357, 174, 236, 330, 0, 212, 268, 194,
	1575, 277, 1475, 157, 290, 252, 253, 251, 254, 215,
	0, 0, 1603, 292, 309, 332, 176, 323, 1981, 0,
	0, 0, 300, 0, 0, 1659, 246, 205, 208, 219,
	229, 1574, 296, 324, 349, 1565, 172, 165, 326, 342,
	181, 308, 310, 356, 1599, 167, 1647, 1622, 1556, 1511,
	1517, 1418, 0, 166, 1595, 1467, 1482, 1455, 1569, 1454,
	214, 1586, 340, 341, 193, 358, 1430, 1667, 168, 1431,
	1666, 265, 272, 264, 1670, 336, 1648, 1557, 1542, 1540,
	1423, 1646, 1555, 1541, 237, 207, 221, 285, 243, 286,
	222, 260, 259, 261, 244, 1544, 0, 164, 0, 321,
	1657, 1682, 325, 178, 1449, 1614, 331, 291, 179, 213,
	206, 284, 263, 173, 224, 319, 235, 242, 1590, 1679,
	276, 299, 182, 346, 318, 202, 1445, 1448, 1443, 1446,
	1444, 1548, 1549, 1662, 1663, 1664, 1602, 1438, 0, 1640,
	1641, 0, 1535, 1650, 1424, 0, 1618, 0, 0, 1582,
	1677, 1495, 189, 0, 1420, 1421, 1422, 0, 1525, 1526,
	0, 0, 1636, 1635, 1634, 1637, 0, 1671, 1669, 1672,
	1439, 1460, 1481, 1531, 1532, 1534, 1566, 1567, 1612, 1585,
	1594, 1527, 281, 1553, 159, 169, 239, 1678, 293, 211,
	1407, 1415, 1442, 1450, 1451, 1452, 1453, 1458, 1465, 0,
	1472, 1480, 1483, 1484, 1492, 1498, 1499, 1500, 1501, 1510,
	1512, 1513, 1514, 1515, 1516, 1520, 1521, 1523, 1536, 1537,
	1543, 1551, 1552, 1559, 1560, 0, 1589, 1592, 1601, 1606,
	1609, 1615, 1617, 1624, 1629, 1631, 1668, 1676, 1681, 347,
	197, 1533, 1558, 1596, 170, 177, 184, 196, 204, 210,
	220, 223, 227, 228, 230, 233, 245, 247, 248, 249,
	250, 266, 267, 270, 271, 274, 275, 278, 279, 280,
	282, 283, 289, 0, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 1642,
	1506, 156, 0, 0, 162, 0, 0, 0, 0, 0,
	1491, 161, 1638, 1673, 1570, 1584, 1654, 1616, 328, 1509,
	1658, 1459, 1488, 1675, 1494, 1497, 1578, 1425, 1547, 273,
	1485, 1426, 1409, 1464, 1413, 1476, 1414, 1461, 200, 1457,
	1619, 1550, 1656, 1529, 1571, 1581, 199, 191, 1539, 1538,
	1644, 1474, 1473, 1576, 1633, 1655, 1528, 0, 1665, 240,
	1630, 0, 350, 320, 257, 0, 0, 1524, 1639, 1545,
	1608, 1507, 1580, 1441, 1563, 1660, 1486, 1572, 1661, 0,
	0, 0, 0, 925, 0, 1978, 1979, 0, 0, 0,
	0, 0, 1980, 0, 1568, 1652, 1479, 0, 1519, 1577,
	1680, 1412, 1564, 0, 1417, 1428, 1674, 1645, 1470, 1471,
	203, 0, 0, 0, 0, 0, 0, 0, 1522, 1546,
	1598, 1504, 345, 1583, 1593, 1611, 1496, 288, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1466, 0,
	1561, 0, 0, 0, 1433, 1419, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1518, 0,
	0, 0, 1440, 1410, 1468, 1600, 1411, 1408, 258, 1429,
	1613, 1643, 1505, 231, 0, 1649, 1503, 1502, 1587, 1434,
	1623, 1489, 238, 1432, 155, 1427, 1435, 1487, 269, 1597,
	1605, 0, 158, 1620, 1462, 1478, 192, 0, 298, 1573,
	344, 0, 1554, 297, 241, 337, 1588, 1651, 343, 1490,
	327, 351, 355, 209, 1530, 183, 317, 201, 198, 1469,
	1610, 1416, 217, 287, 195, 234, 1508, 1579, 1463, 188,
	1591, 1562, 1625, 316, 334, 160, 255, 335, 354, 175,
	329, 256, 262, 185, 187, 186, 171, 311, 333, 180,
	190, 1621, 1604, 1627, 1456, 1436, 1447, 1437, 1477, 1653,
	226, 218, 1628, 1626, 348, 0, 307, 306, 1493, 225,
	1607, 0, 0, 294, 1982, 232, 163, 1632, 357, 174,
	236, 330, 0, 212, 268, 194, 1575, 277, 1475, 157,
	290, 252, 253, 251, 254, 215, 0, 0, 1603, 292,
	309, 332, 176, 323, 1981, 0, 0, 0, 300, 0,
	0, 1659, 246, 205, 208, 219, 229, 1574, 296, 324,
	349, 1565, 172, 165, 326, 342, 181, 308, 310, 356,
	1599, 167, 1647, 1622, 1556, 1511, 1517, 1418, 0, 166,
	1595, 1467, 1482, 1455, 1569, 1454, 214, 1586, 340, 341,
	193, 358, 1430, 1667, 168, 1431, 1666, 265, 272, 264,
	1670, 336, 1648, 1557, 1542, 1540, 1423, 1646, 1555, 1541,
	237, 207, 221, 285, 243, 286, 222, 260, 259, 261,
	244, 1544, 0, 164, 0, 321, 1657, 1682, 325, 178,
	1449, 1614, 331, 291, 179, 213, 206, 284, 263, 173,
	224, 319, 235, 242, 1590, 1679, 276, 299, 182, 346,
	318, 202, 1445, 1448, 1443, 1446, 1444, 1548, 1549, 1662,
	1663, 1664, 1602, 1438, 0, 1640, 1641, 0, 1535, 1650,
	1424, 0, 1618, 0, 0, 1582, 1677, 1495, 189, 0,
	1420, 1421, 1422, 0, 1525, 1526, 0, 0, 1636, 1635,
	1634, 1637, 0, 1671, 1669, 1672, 1439, 1460, 1481, 1531,
	1532, 1534, 1566, 1567, 1612, 1585, 1594, 1527, 281, 1553,
	159, 169, 239, 1678, 293, 211, 1407, 1415, 1442, 1450,
	1451, 1452, 1453, 1458, 1465, 0, 1472, 1480, 1483, 1484,
	1492, 1498, 1499, 1500, 1501, 1510, 1512, 1513, 1514, 1515,
	1516, 1520, 1521, 1523, 1536, 1537, 1543, 1551, 1552, 1559,
	1560, 0, 1589, 1592, 1601, 1606, 1609, 1615, 1617, 1624,
	1629, 1631, 1668, 1676, 1681, 347, 197, 1533, 1558, 1596,
	170, 177, 184, 196, 204, 210, 220, 223, 227, 228,
	230, 233, 245, 247, 248, 249, 250, 266, 267, 270,
	271, 274, 275, 278, 279, 280, 282, 283, 289, 0,
	295, 301, 302, 303, 304, 305, 312, 313, 314, 315,
	322, 338, 339, 352, 353, 1642, 1506, 156, 0, 0,
	162, 0, 0, 0, 0, 0, 1491, 161, 1638, 1673,
	1570, 1584, 1654, 1616, 328, 1509, 1658, 1459, 1488, 1675,
	1494, 1497, 1578, 1425, 1547, 273, 1485, 1426, 1409, 1464,
	1413, 1476, 1414, 1461, 200, 1457, 1619, 1550, 1656, 1529,
	1571, 1581, 199, 191, 1539, 1538, 1644, 1474, 1473, 1576,
	1633, 1655, 1528, 0, 1665, 240, 1630, 0, 350, 320,
	257, 0, 0, 1524, 1639, 1545, 1608, 1507, 1580, 1441,
	1563, 1660, 1486, 1572, 1661, 0, 0, 0, 0, 925,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1568, 1652, 1479, 0, 1519, 1577, 1680, 1412, 1564, 0,
	1417, 1428, 1674, 1645, 1470, 1471, 203, 0, 0, 0,
	0, 0, 0, 0, 1522, 1546, 1598, 1504, 345, 1583,
	1593, 1611, 1496, 288, 216, 0, 0, 0, 0, 0,
	0, 0, 2906, 0, 1466, 0, 1561, 0, 0, 0,
	1433, 1419, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1518, 0, 0, 0, 1440, 1410,
	1468, 1600, 1411, 1408, 258, 1429, 1613, 1643, 1505, 231,
	0, 1649, 1503, 1502, 1587, 1434, 1623, 1489, 238, 1432,
	155, 1427, 1435, 1487, 269, 1597, 1605, 0, 158, 1620,
	1462, 1478, 192, 0, 298, 1573, 344, 0, 1554, 297,
	241, 337, 1588, 1651, 343, 1490, 327, 351, 355, 209,
	1530, 183, 317, 201, 198, 1469, 1610, 1416, 217, 287,
	195, 234, 1508, 1579, 1463, 188, 1591, 1562, 1625, 316,
	334, 160, 255, 335, 354, 175, 329, 256, 262, 185,
	187, 186, 171, 311, 333, 180, 190, 1621, 1604, 1627,
	1456, 1436, 1447, 1437, 1477, 1653, 226, 218, 1628, 1626,
	348, 0, 307, 306, 1493, 225, 1607, 0, 0, 294,
	0, 232, 163, 1632, 357, 174, 236, 330, 0, 212,
	268, 194, 1575, 277, 1475, 157, 290, 252, 253, 251,
	254, 215, 0, 0, 1603, 292, 309, 332, 176, 323,
	0, 0, 0, 0, 300, 0, 0, 1659, 246, 205,
	208, 219, 229, 1574, 296, 324, 349, 1565, 172, 165,
	326, 342, 181, 308, 310, 356, 1599, 167, 1647, 1622,
	1556, 1511, 1517, 1418, 0, 166, 1595, 1467, 1482, 1455,
	1569, 1454, 214, 1586, 340, 341, 193, 358, 1430, 1667,
	168, 1431, 1666, 265, 272, 264, 1670, 336, 1648, 1557,
	1542, 1540, 1423, 1646, 1555, 1541, 237, 207, 221, 285,
	243, 286, 222, 260, 259, 261, 244, 1544, 0, 164,
	0, 321, 1657, 1682, 325, 178, 1449, 1614, 331, 291,
	179, 213, 206, 284, 263, 173, 224, 319, 235, 242,
	1590, 1679, 276, 299, 182, 346, 318, 202, 1445, 1448,
	1443, 1446, 1444, 1548, 1549, 1662, 1663, 1664, 1602, 1438,
	0, 1640, 1641, 0, 1535, 1650, 1424, 0, 1618, 0,
	0, 1582, 1677, 1495, 189, 0, 1420, 1421, 1422, 0,
	1525, 1526, 0, 0, 1636, 1635, 1634, 1637, 0, 1671,
	1669, 1672, 1439, 1460, 1481, 1531, 1532, 1534, 1566, 1567,
	1612, 1585, 1594, 1527, 281, 1553, 159, 169, 239, 1678,
	293, 211, 1407, 1415, 1442, 1450, 1451, 1452, 1453, 1458,
	1465, 0, 1472, 1480, 1483, 1484, 1492, 1498, 1499, 1500,
	1501, 1510, 1512, 1513, 1514, 1515, 1516, 1520, 1521, 1523,
	1536, 1537, 1543, 1551, 1552, 1559, 1560, 0, 1589, 1592,
	1601, 1606, 1609, 1615, 1617, 1624, 1629, 1631, 1668, 1676,
	1681, 347, 197, 1533, 1558, 1596, 170, 177, 184, 196,
	204, 210, 220, 223, 227, 228, 230, 233, 245, 247,
	248, 249, 250, 266, 267, 270, 271, 274, 275, 278,
	279, 280, 282, 283, 289, 0, 295, 301, 302, 303,
	304, 305, 312, 313, 314, 315, 322, 338, 339, 352,
	353, 1642, 1506, 156, 0, 0, 162, 0, 0, 0,
	0, 0, 1491, 161, 1638, 1673, 1570, 1584, 1654, 1616,
	328, 1509, 1658, 1459, 1488, 1675, 1494, 1497, 1578, 1425,
	1547, 273, 1485, 1426, 1409, 1464, 1413, 1476, 1414, 1461,
	200, 1457, 1619, 1550, 1656, 1529, 1571, 1581, 199, 191,
	1539, 1538, 1644, 1474, 1473, 1576, 1633, 1655, 1528, 0,
	1665, 240, 1630, 0, 350, 320, 257, 0, 0, 1524,
	1639, 1545, 1608, 1507, 1580, 1441, 1563, 1660, 1486, 1572,
	1661, 0, 0, 0, 0, 925, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1568, 1652, 1479, 0,
	1519, 1577, 1680, 1412, 1564, 0, 1417, 1428, 1674, 1645,
	1470, 1471, 203, 0, 0, 0, 0, 0, 0, 0,
	1522, 1546, 1598, 1504, 345, 1583, 1593, 1611, 1496, 288,
	216, 0, 0, 0, 0, 0, 0, 0, 2466, 0,
	1466, 0, 1561, 0, 0, 0, 1433, 1419, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1518, 0, 0, 0, 1440, 1410, 1468, 1600, 1411, 1408,
	258, 1429, 1613, 1643, 1505, 231, 0, 1649, 1503, 1502,
	1587, 1434, 1623, 1489, 238, 1432, 155, 1427, 1435, 1487,
	269, 1597, 1605, 0, 158, 1620, 1462, 1478, 192, 0,
	298, 1573, 344, 0, 1554, 297, 241, 337, 1588, 1651,
	343, 1490, 327, 351, 355, 209, 1530, 183, 317, 201,
	198, 1469, 1610, 1416, 217, 287, 195, 234, 1508, 1579,
	1463, 188, 1591, 1562, 1625, 316, 334, 160, 255, 335,
	354, 175, 329, 256, 262, 185, 187, 186, 171, 311,
	333, 180, 190, 1621, 1604, 1627, 1456, 1436, 1447, 1437,
	1477, 1653, 226, 218, 1628, 1626, 348, 0, 307, 306,
	1493, 225, 1607, 0, 0, 294, 0, 232, 163, 1632,
	357, 174, 236, 330, 0, 212, 268, 194, 1575, 277,
	1475, 157, 290, 252, 253, 251, 254, 215, 0, 0,
	1603, 292, 309, 332, 176, 323, 0, 0, 0, 0,
	300, 0, 0, 1659, 246, 205, 208, 219, 229, 1574,
	296, 324, 349, 1565, 172, 165, 326, 342, 181, 308,
	310, 356, 1599, 167, 1647, 1622, 1556, 1511, 1517, 1418,
	0, 166, 1595, 1467, 1482, 1455, 1569, 1454, 214, 1586,
	340, 341, 193, 358, 1430, 1667, 168, 1431, 1666, 265,
	272, 264, 1670, 336, 1648, 1557, 1542, 1540, 1423, 1646,
	1555, 1541, 237, 207, 221, 285, 243, 286, 222, 260,
	259, 261, 244, 1544, 0, 164, 0, 321, 1657, 1682,
	325, 178, 1449, 1614, 331, 291, 179, 213, 206, 284,
	263, 173, 224, 319, 235, 242, 1590, 1679, 276, 299,
	182, 346, 318, 202, 1445, 1448, 1443, 1446, 1444, 1548,
	1549, 1662, 1663, 1664, 1602, 1438, 0, 1640, 1641, 0,
	1535, 1650, 1424, 0, 1618, 0, 0, 1582, 1677, 1495,
	189, 0, 1420, 1421, 1422, 0, 1525, 1526, 0, 0,
	1636, 1635, 1634, 1637, 0, 1671, 1669, 1672, 1439, 1460,
	1481, 1531, 1532, 1534, 1566, 1567, 1612, 1585, 1594, 1527,
	281, 1553, 159, 169, 239, 1678, 293, 211, 1407, 1415,
	1442, 1450, 1451, 1452, 1453, 1458, 1465, 0, 1472, 1480,
	1483, 1484, 1492, 1498, 1499, 1500, 1501, 1510, 1512, 1513,
	1514, 1515, 1516, 1520, 1521, 1523, 1536, 1537, 1543, 1551,
	1552, 1559, 1560, 0, 1589, 1592, 1601, 1606, 1609, 1615,
	1617, 1624, 1629, 1631, 1668, 1676, 1681, 347, 197, 1533,
	1558, 1596, 170, 177, 184, 196, 204, 210, 220, 223,
	227, 228, 230, 233, 245, 247, 248, 249, 250, 266,
	267, 270, 271, 274, 275, 278, 279, 280, 282, 283,
	289, 0, 295, 301, 302, 303, 304, 305, 312, 313,
	314, 315, 322, 338, 339, 352, 353, 1642, 1506, 156,
	0, 0, 162, 0, 0, 0, 0, 0, 1491, 161,
	1638, 1673, 1570, 1584, 1654, 1616, 328, 1509, 1658, 1459,
	1488, 1675, 1494, 1497, 1578, 1425, 1547, 273, 1485, 1426,
	1409, 1464, 1413, 1476, 1414, 1461, 200, 1457, 1619, 1550,
	1656, 1529, 1571, 1581, 199, 191, 1539, 1538, 1644, 1474,
	1473, 1576, 1633, 1655, 1528, 0, 1665, 240, 1630, 0,
	350, 320, 257, 0, 0, 1524, 1639, 1545, 1608, 1507,
	1580, 1441, 1563, 1660, 1486, 1572, 1661, 0, 0, 0,
	0, 129, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1568, 1652, 1479, 0, 1519, 1577, 1680, 1412,
	1564, 0, 1417, 1428, 1674, 1645, 1470, 1471, 203, 0,
	0, 0, 0, 0, 0, 0, 1522, 1546, 1598, 1504,
	345, 1583, 1593, 1611, 1496, 288, 216, 0, 0, 0,
	0, 0, 0, 0, 2289, 0, 1466, 0, 1561, 0,
	0, 0, 1433, 1419, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1518, 0, 0, 0,
	1440, 1410, 1468, 1600, 1411, 1408, 258, 1429, 1613, 1643,
	1505, 231, 0, 1649, 1503, 1502, 1587, 1434, 1623, 1489,
	238, 1432, 155, 1427, 1435, 1487, 269, 1597, 1605, 0,
	158, 1620, 1462, 1478, 192, 0, 298, 1573, 344, 0,
	1554, 297, 241, 337, 1588, 1651, 343, 1490, 327, 351,
	355, 209, 1530, 183, 317, 201, 198, 1469, 1610, 1416,
	217, 287, 195, 234, 1508, 1579, 1463, 188, 1591, 1562,
	1625, 316, 334, 160, 255, 335, 354, 175, 329, 256,
	262, 185, 187, 186, 171, 311, 333, 180, 190, 1621,
	1604, 1627, 1456, 1436, 1447, 1437, 1477, 1653, 226, 218,
	1628, 1626, 348, 0, 307, 306, 1493, 225, 1607, 0,
	0, 294, 0, 232, 163, 1632, 357, 174, 236, 330,
	0, 212, 268, 194, 1575, 277, 1475, 157, 290, 252,
	253, 251, 254, 215, 0, 0, 1603, 292, 309, 332,
	176, 323, 0, 0, 0, 0, 300, 0, 0, 1659,
	246, 205, 208, 219, 229, 1574, 296, 324, 349, 1565,
	172, 165, 326, 342, 181, 308, 310, 356, 1599, 167,
	1647, 1622, 1556, 1511, 1517, 1418, 0, 166, 1595, 1467,
	1482, 1455, 1569, 1454, 214, 1586, 340, 341, 193, 358,
	1430, 1667, 168, 1431, 1666, 265, 272, 264, 1670, 336,
	1648, 1557, 1542, 1540, 1423, 1646, 1555, 1541, 237, 207,
	221, 285, 243, 286, 222, 260, 259, 261, 244, 1544,
	0, 164, 0, 321, 1657, 1682, 325, 178, 1449, 1614,
	331, 291, 179, 213, 206, 284, 263, 173, 224, 319,
	235, 242, 1590, 1679, 276, 299, 182, 346, 318, 202,
	1445, 1448, 1443, 1446, 1444, 1548, 1549, 1662, 1663, 1664,
	1602, 1438, 0, 1640, 1641, 0, 1535, 1650, 1424, 0,
	1618, 0, 0, 1582, 1677, 1495, 189, 0, 1420, 1421,
	1422, 0, 1525, 1526, 0, 0, 1636, 1635, 1634, 1637,
	0, 1671, 1669, 1672, 1439, 1460, 1481, 1531, 1532, 1534,
	1566, 1567, 1612, 1585, 1594, 1527, 281, 1553, 159, 169,
	239, 1678, 293, 211, 1407, 1415, 1442, 1450, 1451, 1452,
	1453, 1458, 1465, 0, 1472, 1480, 1483, 1484, 1492, 1498,
	1499, 1500, 1501, 1510, 1512, 1513, 1514, 1515, 1516, 1520,
	1521, 1523, 1536, 1537, 1543, 1551, 1552, 1559, 1560, 0,
	1589, 1592, 1601, 1606, 1609, 1615, 1617, 1624, 1629, 1631,
	1668, 1676, 1681, 347, 197, 1533, 1558, 1596, 170, 177,
	184, 196, 204, 210, 220, 223, 227, 228, 230, 233,
	245, 247, 248, 249, 250, 266, 267, 270, 271, 274,
	275, 278, 279, 280, 282, 283, 289, 0, 295, 301,
	302, 303, 304, 305, 312, 313, 314, 315, 322, 338,
	339, 352, 353, 1642, 1506, 156, 0, 0, 162, 0,
	0, 0, 0, 0, 1491, 161, 1638, 1673, 1570, 1584,
	1654, 1616, 328, 1509, 1658, 1459, 1488, 1675, 1494, 1497,
	1578, 1425, 1547, 273, 1485, 1426, 1409, 1464, 1413, 1476,
	1414, 1461, 200, 1457, 1619, 1550, 1656, 1529, 1571, 1581,
	199, 191, 1539, 1538, 1644, 1474, 1473, 1576, 1633, 1655,
	1528, 0, 1665, 240, 1630, 0, 350, 320, 257, 0,
	0, 1524, 1639, 1545, 1608, 1507, 1580, 1441, 1563, 1660,
	1486, 1572, 1661, 0, 0, 0, 0, 925, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1568, 1652,
	1479, 0, 1519, 1577, 1680, 1412, 1564, 0, 1417, 1428,
	1674, 1645, 1470, 1471, 203, 0, 0, 0, 0, 0,
	0, 0, 1522, 1546, 1598, 1504, 345, 1583, 1593, 1611,
	1496, 288, 216, 1865, 0, 0, 0, 0, 0, 0,
	0, 0, 1466, 0, 1561, 0, 0, 0, 1433, 1419,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1518, 0, 0, 0, 1440, 1410, 1468, 1600,
	1411, 1408, 258, 1429, 1613, 1643, 1505, 231, 0, 1649,
	1503, 1502, 1587, 1434, 1623, 1489, 238, 1432, 155, 1427,
	1435, 1487, 269, 1597, 1605, 0, 158, 1620, 1462, 1478,
	192, 0, 298, 1573, 344, 0, 1554, 297, 241, 337,
	1588, 1651, 343, 1490, 327, 351, 355, 209, 1530, 183,
	317, 201, 198, 1469, 1610, 1416, 217, 287, 195, 234,
	1508, 1579, 1463, 188, 1591, 1562, 1625, 316, 334, 160,
	255, 335, 354, 175, 329, 256, 262, 185, 187, 186,
	171, 311, 333, 180, 190, 1621, 1604, 1627, 1456, 1436,
	1447, 1437, 1477, 1653, 226, 218, 1628, 1626, 348, 0,
	307, 306, 1493, 225, 1607, 0, 0, 294, 0, 232,
	163, 1632, 357, 174, 236, 330, 0, 212, 268, 194,
	1575, 277, 1475, 157, 290, 252, 253, 251, 254, 215,
	0, 0, 1603, 292, 309, 332, 176, 323, 0, 0,
	0, 0, 300, 0, 0, 1659, 246, 205, 208, 219,
	229, 1574, 296, 324, 349, 1565, 172, 165, 326, 342,
	181, 308, 310, 356, 1599, 167, 1647, 1622, 1556, 1511,
	1517, 1418, 0, 166, 1595, 1467, 1482, 1455, 1569, 1454,
	214, 1586, 340, 341, 193, 358, 1430, 1667, 168, 1431,
	1666, 265, 272, 264, 1670, 336, 1648, 1557, 1542, 1540,
	1423, 1646, 1555, 1541, 237, 207, 221, 285, 243, 286,
	222, 260, 259, 261, 244, 1544, 0, 164, 0, 321,
	1657, 1682, 325, 178, 1449, 1614, 331, 291, 179, 213,
	206, 284, 263, 173, 224, 319, 235, 242, 1590, 1679,
	276, 299, 182, 346, 318, 202, 1445, 1448, 1443, 1446,
	1444, 1548, 1549, 1662, 1663, 1664, 1602, 1438, 0, 1640,
	1641, 0, 1535, 1650, 1424, 0, 1618, 0, 0, 1582,
	1677, 1495, 189, 0, 1420, 1421, 1422, 0, 1525, 1526,
	0, 0, 1636, 1635, 1634, 1637, 0, 1671, 1669, 1672,
	1439, 1460, 1481, 1531, 1532, 1534, 1566, 1567, 1612, 1585,
	1594, 1527, 281, 1553, 159, 169, 239, 1678, 293, 211,
	1407, 1415, 1442, 1450, 1451, 1452, 1453, 1458, 1465, 0,
	1472, 1480, 1483, 1484, 1492, 1498, 1499, 1500, 1501, 1510,
	1512, 1513, 1514, 1515, 1516, 1520, 1521, 1523, 1536, 1537,
	1543, 1551, 1552, 1559, 1560, 0, 1589, 1592, 1601, 1606,
	1609, 1615, 1617, 1624, 1629, 1631, 1668, 1676, 1681, 347,
	197, 1533, 1558, 1596, 170, 177, 184, 196, 204, 210,
	220, 223, 227, 228, 230, 233, 245, 247, 248, 249,
	250, 266, 267, 270, 271, 274, 275, 278, 279, 280,
	282, 283, 289, 0, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 1642,
	1506, 156, 0, 0, 162, 0, 0, 0, 0, 0,
	1491, 161, 1638, 1673, 1570, 1584, 1654, 1616, 328, 1509,
	1658, 1459, 1488, 1675, 1494, 1497, 1578, 1425, 1547, 273,
	1485, 1426, 1409, 1464, 1413, 1476, 1414, 1461, 200, 1457,
	1619, 1550, 1656, 1529, 1571, 1581, 199, 191, 1539, 1538,
	1644, 1474, 1473, 1576, 1633, 1655, 1528, 0, 1665, 240,
	1630, 0, 350, 320, 257, 0, 0, 1524, 1639, 1545,
	1608, 1507, 1580, 1441, 1563, 1660, 1486, 1572, 1661, 0,
	0, 0, 0, 925, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1568, 1652, 1479, 0, 1519, 1577,
	1680, 1412, 1564, 0, 1417, 1428, 1674, 1645, 1470, 1471,
	203, 0, 0, 0, 0, 0, 0, 0, 1522, 1546,
	1598, 1504, 345, 1583, 1593, 1611, 1496, 288, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1466, 0,
	1561, 0, 0, 0, 1433, 1419, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1518, 0,
	0, 0, 1440, 1410, 1468, 1600, 1411, 1408, 258, 1429,
	1613, 1643, 1505, 231, 0, 1649, 1503, 1502, 1587, 1434,
	1623, 1489, 238, 1432, 155, 1427, 1435, 1487, 269, 1597,
	1605, 0, 158, 1620, 1462, 1478, 192, 0, 298, 1573,
	344, 0, 1554, 297, 241, 337, 1588, 1651, 343, 1490,
	327, 351, 355, 209, 1530, 183, 317, 201, 198, 1469,
	1610, 1416, 217, 287, 195, 234, 1508, 1579, 1463, 188,
	1591, 1562, 1625, 316, 334, 160, 255, 335, 354, 175,
	329, 256, 262, 185, 187, 186, 171, 311, 333, 180,
	190, 1621, 1604, 1627, 1456, 1436, 1447, 1437, 1477, 1653,
	226, 218, 1628, 1626, 348, 0, 307, 306, 1493, 225,
	1607, 0, 0, 294, 0, 232, 163, 1632, 357, 174,
	236, 330, 0, 212, 268, 194, 1575, 277, 1475, 157,
	290, 252, 253, 251, 254, 215, 0, 0, 1603, 292,
	309, 332, 176, 323, 0, 0, 0, 0, 300, 0,
	0, 1659, 246, 205, 208, 219, 229, 1574, 296, 324,
	349, 1565, 172, 165, 326, 342, 181, 308, 310, 356,
	1599, 167, 1647, 1622, 1556, 1511, 1517, 1418, 0, 166,
	1595, 1467, 1482, 1455, 1569, 1454, 214, 1586, 340, 341,
	193, 358, 1430, 1667, 168, 1431, 1666, 265, 272, 264,
	1670, 336, 1648, 1557, 1542, 1540, 1423, 1646, 1555, 1541,
	237, 207, 221, 285, 243, 286, 222, 260, 259, 261,
	244, 1544, 0, 164, 0, 321, 1657, 1682, 325, 178,
	1449, 1614, 331, 291, 179, 213, 206, 284, 263, 173,
	224, 319, 235, 242, 1590, 1679, 276, 299, 182, 346,
	318, 202, 1445, 1448, 1443, 1446, 1444, 1548, 1549, 1662,
	1663, 1664, 1602, 1438, 0, 1640, 1641, 0, 1535, 1650,
	1424, 0, 1618, 0, 0, 1582, 1677, 1495, 189, 0,
	1420, 1421, 1422, 0, 1525, 1526, 0, 0, 1636, 1635,
	1634, 1637, 0, 1671, 1669, 1672, 1439, 1460, 1481, 1531,
	1532, 1534, 1566, 1567, 1612, 1585, 1594, 1527, 281, 1553,
	159, 169, 239, 1678, 293, 211, 1407, 1415, 1442, 1450,
	1451, 1452, 1453, 1458, 1465, 0, 1472, 1480, 1483, 1484,
	1492, 1498, 1499, 1500, 1501, 1510, 1512, 1513, 1514, 1515,
	1516, 1520, 1521, 1523, 1536, 1537, 1543, 1551, 1552, 1559,
	1560, 0, 1589, 1592, 1601, 1606, 1609, 1615, 1617, 1624,
	1629, 1631, 1668, 1676, 1681, 347, 197, 1533, 1558, 1596,
	170, 177, 184, 196, 204, 210, 220, 223, 227, 228,
	230, 233, 245, 247, 248, 249, 250, 266, 267, 270,
	271, 274, 275, 278, 279, 280, 282, 283, 289, 0,
	295, 301, 302, 303, 304, 305, 312, 313, 314, 315,
	322, 338, 339, 352, 353, 1642, 1506, 156, 0, 0,
	162, 0, 0, 0, 0, 0, 1491, 161, 1638, 1673,
	1570, 1584, 1654, 1616, 328, 1509, 1658, 1459, 1488, 1675,
	1494, 1497, 1578, 1425, 1547, 273, 1485, 1426, 1409, 1464,
	1413, 1476, 1414, 1461, 200, 1457, 1619, 1550, 1656, 1529,
	1571, 1581, 199, 191, 1539, 1538, 1644, 1474, 1473, 1576,
	1633, 1655, 1528, 0, 1665, 240, 1630, 0, 350, 320,
	257, 0, 0, 1524, 1639, 1545, 1608, 1507, 1580, 1441,
	1563, 1660, 1486, 1572, 1661, 0, 0, 0, 0, 3223,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1568, 1652, 1479, 0, 1519, 1577, 1680, 1412, 1564, 0,
	1417, 1428, 1674, 1645, 1470, 1471, 203, 0, 0, 0,
	0, 0, 0, 0, 1522, 1546, 1598, 1504, 345, 1583,
	1593, 1611, 1496, 288, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1466, 0, 1561, 0, 0, 0,
	1433, 1419, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1518, 0, 0, 0, 1440, 1410,
	1468, 1600, 1411, 1408, 258, 1429, 1613, 1643, 1505, 231,
	0, 1649, 1503, 1502, 1587, 1434, 1623, 1489, 238, 1432,
	155, 1427, 1435, 1487, 269, 1597, 1605, 0, 158, 1620,
	1462, 1478, 192, 0, 298, 1573, 344, 0, 1554, 297,
	241, 337, 1588, 1651, 343, 1490, 327, 351, 355, 209,
	1530, 183, 317, 201, 198, 1469, 1610, 1416, 217, 287,
	195, 234, 1508, 1579, 1463, 188, 1591, 1562, 1625, 316,
	334, 160, 255, 335, 354, 175, 329, 256, 262, 185,
	187, 186, 171, 311, 333, 180, 190, 1621, 1604, 1627,
	1456, 1436, 1447, 3226, 3227, 3228, 226, 218, 1628, 1626,
	348, 0, 307, 306, 1493, 225, 1607, 0, 0, 294,
	0, 232, 163, 1632, 357, 174, 236, 330, 0, 212,
	268, 194, 1575, 277, 1475, 157, 290, 252, 253, 251,
	254, 215, 0, 0, 1603, 292, 309, 332, 176, 323,
	0, 0, 0, 0, 300, 0, 0, 1659, 246, 205,
	208, 219, 229, 1574, 296, 324, 349, 1565, 172, 165,
	326, 342, 181, 308, 310, 356, 1599, 167, 1647, 1622,
	1556, 1511, 1517, 1418, 0, 166, 1595, 1467, 1482, 1455,
	1569, 1454, 214, 1586, 340, 341, 193, 358, 1430, 1667,
	168, 1431, 1666, 265, 272, 264, 1670, 336, 1648, 1557,
	1542, 1540, 1423, 1646, 1555, 1541, 237, 207, 221, 285,
	243, 286, 222, 260, 259, 261, 244, 1544, 0, 164,
	0, 321, 1657, 1682, 325, 178, 1449, 1614, 331, 291,
	179, 213, 206, 284, 263, 173, 224, 319, 235, 242,
	1590, 1679, 276, 299, 182, 346, 318, 202, 1445, 1448,
	1443, 1446, 1444, 1548, 1549, 1662, 1663, 1664, 1602, 1438,
	0, 1640, 1641, 0, 1535, 1650, 1424, 0, 1618, 0,
	0, 1582, 1677, 1495, 189, 0, 1420, 1421, 1422, 0,
	1525, 1526, 0, 0, 1636, 1635, 1634, 1637, 0, 1671,
	1669, 1672, 1439, 1460, 1481, 1531, 1532, 1534, 1566, 1567,
	1612, 1585, 1594, 1527, 281, 1553, 159, 169, 239, 1678,
	293, 211, 1407, 1415, 1442, 1450, 1451, 1452, 1453, 1458,
	1465, 0, 1472, 1480, 1483, 1484, 1492, 1498, 1499, 1500,
	1501, 1510, 1512, 1513, 1514, 1515, 1516, 1520, 1521, 1523,
	1536, 1537, 1543, 1551, 1552, 1559, 1560, 0, 1589, 1592,
	1601, 1606, 1609, 1615, 1617, 1624, 1629, 1631, 1668, 1676,
	1681, 347, 197, 1533, 1558, 1596, 170, 177, 184, 196,
	204, 210, 220, 223, 227, 228, 230, 233, 245, 247,
	248, 249, 250, 266, 267, 270, 271, 274, 275, 278,
	279, 280, 282, 283, 289, 0, 295, 301, 302, 303,
	304, 305, 312, 313, 314, 315, 322, 338, 339, 352,
	353, 1642, 1506, 156, 0, 0, 162, 0, 0, 0,
	0, 0, 1491, 161, 1638, 1673, 1570, 1584, 1654, 1616,
	328, 1509, 1658, 1459, 1488, 1675, 1494, 1497, 1578, 1425,
	1547, 273, 1485, 1426, 1409, 1464, 1413, 1476, 1414, 1461,
	200, 1457, 1619, 1550, 1656, 1529, 1571, 1581, 199, 191,
	1539, 1538, 1644, 1474, 1473, 1576, 1633, 1655, 1528, 0,
	1665, 240, 1630, 0, 350, 320, 257, 0, 0, 1524,
	1639, 1545, 1608, 1507, 1580, 1441, 1563, 1660, 1486, 1572,
	1661, 0, 0, 0, 0, 129, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1568, 1652, 1479, 0,
	1519, 1577, 1680, 1412, 1564, 0, 1417, 1428, 1674, 1645,
	1470, 1471, 203, 0, 0, 0, 0, 0, 0, 0,
	1522, 1546, 1598, 1504, 345, 1583, 1593, 1611, 1496, 288,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1466, 0, 1561, 0, 0, 0, 1433, 1419, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1518, 0, 0, 0, 1440, 1410, 1468, 1600, 1411, 1408,
	258, 1429, 1613, 1643, 1505, 231, 0, 1649, 1503, 1502,
	1587, 1434, 1623, 1489, 238, 1432, 155, 1427, 1435, 1487,
	269, 1597, 1605, 0, 158, 1620, 1462, 1478, 192, 0,
	298, 1573, 344, 0, 1554, 297, 241, 337, 1588, 1651,
	343, 1490, 327, 351, 355, 209, 1530, 183, 317, 201,
	198, 1469, 1610, 1416, 217, 287, 195, 234, 1508, 1579,
	1463, 188, 1591, 1562, 1625, 316, 334, 160, 255, 335,
	354, 175, 329, 256, 262, 185, 187, 186, 171, 311,
	333, 180, 190, 1621, 1604, 1627, 1456, 1436, 1447, 1437,
	1477, 1653, 226, 218, 1628, 1626, 348, 0, 307, 306,
	1493, 225, 1607, 0, 0, 294, 0, 232, 163, 1632,
	357, 174, 236, 330, 0, 212, 268, 194, 1575, 277,
	1475, 157, 290, 252, 253, 251, 254, 215, 0, 0,
	1603, 292, 309, 332, 176, 323, 0, 0, 0, 0,
	300, 0, 0, 1659, 246, 205, 208, 219, 229, 1574,
	296, 324, 349, 1565, 172, 165, 326, 342, 181, 308,
	310, 356, 1599, 167, 1647, 1622, 1556, 1511, 1517, 1418,
	0, 166, 1595, 1467, 1482, 1455, 1569, 1454, 214, 1586,
	340, 341, 193, 358, 1430, 1667, 168, 1431, 1666, 265,
	272, 264, 1670, 336, 1648, 1557, 1542, 1540, 1423, 1646,
	1555, 1541, 237, 207, 221, 285, 243, 286, 222, 260,
	259, 261, 244, 1544, 0, 164, 0, 321, 1657, 1682,
	325, 178, 1449, 1614, 331, 291, 179, 213, 206, 284,
	263, 173, 224, 319, 235, 242, 1590, 1679, 276, 299,
	182, 346, 318, 202, 1445, 1448, 1443, 1446, 1444, 1548,
	1549, 1662, 1663, 1664, 1602, 1438, 0, 1640, 1641, 0,
	1535, 1650, 1424, 0, 1618, 0, 0, 1582, 1677, 1495,
	189, 0, 1420, 1421, 1422, 0, 1525, 1526, 0, 0,
	1636, 1635, 1634, 1637, 0, 1671, 1669, 1672, 1439, 1460,
	1481, 1531, 1532, 1534, 1566, 1567, 1612, 1585, 1594, 1527,
	281, 1553, 159, 169, 239, 1678, 293, 211, 1407, 1415,
	1442, 1450, 1451, 1452, 1453, 1458, 1465, 0, 1472, 1480,
	1483, 1484, 1492, 1498, 1499, 1500, 1501, 1510, 1512, 1513,
	1514, 1515, 1516, 1520, 1521, 1523, 1536, 1537, 1543, 1551,
	1552, 1559, 1560, 0, 1589, 1592, 1601, 1606, 1609, 1615,
	1617, 1624, 1629, 1631, 1668, 1676, 1681, 347, 197, 1533,
	1558, 1596, 170, 177, 184, 196, 204, 210, 220, 223,
	227, 228, 230, 233, 245, 247, 248, 249, 250, 266,
	267, 270, 271, 274, 275, 278, 279, 280, 282, 283,
	289, 0, 295, 301, 302, 303, 304, 305, 312, 313,
	314, 315, 322, 338, 339, 352, 353, 1642, 1506, 156,
	0, 0, 162, 328, 0, 0, 0, 0, 1491, 161,
	1638, 1673, 1570, 1584, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 0, 0, 0, 0, 0, 0,
	0, 199, 191, 0, 0, 0, 0, 0, 0, 0,
	1993, 1997, 0, 0, 240, 0, 929, 350, 320, 257,
	932, 931, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 925, 0,
	0, 0, 0, 0, 0, 0, 0, 137, 0, 0,
	0, 0, 930, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 203, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 0, 0,
	0, 0, 288, 216, 143, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 1996, 231, 154,
	0, 0, 0, 1990, 0, 1991, 1992, 238, 933, 155,
	0, 1988, 1995, 269, 0, 0, 142, 158, 0, 0,
	0, 192, 922, 298, 0, 344, 928, 0, 297, 241,
	337, 0, 0, 343, 0, 327, 351, 355, 209, 0,
	183, 317, 201, 198, 0, 0, 0, 217, 287, 195,
	234, 0, 0, 0, 188, 0, 0, 0, 316, 334,
	160, 255, 335, 354, 175, 329, 256, 262, 185, 187,
	186, 171, 311, 333, 180, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 218, 0, 0, 348,
	144, 307, 306, 0, 225, 0, 145, 136, 294, 146,
	232, 163, 0, 357, 174, 236, 330, 927, 212, 268,
	194, 0, 277, 0, 157, 290, 252, 253, 251, 254,
	215, 140, 147, 0, 292, 309, 332, 176, 323, 138,
	139, 141, 149, 300, 150, 151, 0, 246, 205, 208,
	219, 229, 0, 296, 324, 349, 0, 172, 165, 326,
	342, 181, 308, 310, 356, 0, 167, 0, 0, 0,
	0, 0, 0, 0, 166, 0, 0, 0, 0, 0,
	0, 214, 0, 340, 341, 193, 358, 0, 0, 168,
	0, 0, 265, 272, 264, 0, 336, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 207, 221, 285, 243,
	286, 222, 260, 259, 261, 244, 0, 0, 164, 0,
	321, 0, 0, 325, 178, 0, 0, 331, 291, 179,
	213, 206, 284, 263, 173, 224, 319, 235, 242, 0,
	0, 276, 299, 182, 346, 318, 202, 328, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 1141, 0, 0, 0, 200, 152, 153,
	0, 0, 0, 189, 131, 199, 191, 0, 132, 0,
	0, 133, 134, 0, 0, 0, 0, 135, 240, 0,
	929, 350, 320, 257, 932, 931, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 159, 169, 239, 0, 293,
	211, 0, 1142, 0, 1145, 0, 0, 0, 0, 0,
	0, 137, 0, 0, 0, 0, 930, 0, 1137, 1138,
	1136, 0, 0, 0, 0, 0, 0, 0, 0, 203,
	0, 0, 0, 0, 0, 0, 0, 1139, 0, 0,
	0, 345, 0, 0, 0, 0, 288, 216, 143, 0,
	347, 197, 0, 0, 0, 170, 177, 184, 196, 204,
	210, 220, 223, 227, 228, 230, 233, 245, 247, 248,
	249, 250, 266, 267, 270, 271, 274, 275, 278, 279,
	280, 282, 283, 289, 148, 295, 301, 302, 303, 304,
	305, 312, 313, 314, 315, 322, 338, 339, 352, 353,
	0, 0, 156, 0, 0, 162, 0, 0, 0, 0,
	0, 0, 161, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 231, 154, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 155, 0, 0, 0, 269, 0, 0,
	142, 158, 0, 0, 0, 192, 0, 298, 0, 344,
	928, 0, 297, 241, 337, 0, 0, 343, 0, 327,
	351, 355, 209, 0, 183, 317, 201, 198, 0, 0,
	0, 217, 287, 195, 234, 0, 0, 0, 188, 0,
	0, 0, 316, 334, 160, 255, 335, 354, 175, 329,
	256, 262, 185, 187, 186, 171, 311, 333, 180, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	218, 0, 0, 348, 144, 307, 306, 0, 225, 0,
	145, 136, 294, 146, 232, 163, 0, 357, 174, 236,
	330, 927, 212, 268, 194, 0, 277, 0, 157, 290,
	252, 253, 251, 254, 215, 140, 147, 0, 292, 309,
	332, 176, 323, 138, 139, 141, 149, 300, 150, 151,
	0, 246, 205, 208, 219, 229, 0, 296, 324, 349,
	0, 172, 165, 326, 342, 181, 308, 310, 356, 0,
	167, 0, 0, 0, 0, 0, 0, 0, 166, 0,
	0, 0, 0, 0, 0, 214, 0, 340, 341, 193,
	358, 0, 0, 168, 0, 0, 265, 272, 264, 0,
	336, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	207, 221, 285, 243, 286, 222, 260, 259, 261, 244,
	0, 0, 164, 0, 321, 0, 0, 325, 178, 0,
	0, 331, 291, 179, 213, 206, 284, 263, 173, 224,
	319, 235, 242, 0, 0, 276, 299, 182, 346, 318,
	202, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 152, 153, 0, 0, 0, 189, 131, 199,
	191, 0, 132, 0, 0, 133, 134, 0, 0, 0,
	0, 135, 240, 0, 929, 350, 320, 257, 932, 931,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 159,
	169, 239, 0, 293, 211, 0, 925, 0, 0, 0,
	0, 0, 0, 0, 0, 137, 0, 0, 0, 0,
	930, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 203, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 0, 0, 0,
	288, 216, 143, 0, 347, 197, 0, 0, 0, 170,
	177, 184, 196, 204, 210, 220, 223, 227, 228, 230,
	233, 245, 247, 248, 249, 250, 266, 267, 270, 271,
	274, 275, 278, 279, 280, 282, 283, 289, 148, 295,
	301, 302, 303, 304, 305, 312, 313, 314, 315, 322,
	338, 339, 352, 353, 0, 0, 156, 0, 0, 162,
	0, 0, 0, 0, 0, 0, 161, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 231, 154, 0, 0,
	0, 0, 0, 0, 0, 238, 933, 155, 0, 923,
	0, 269, 0, 0, 142, 158, 0, 0, 0, 192,
	922, 298, 0, 344, 928, 0, 297, 241, 337, 0,
	0, 343, 0, 327, 351, 355, 209, 0, 183, 317,
	201, 198, 0, 0, 0, 217, 287, 195, 234, 0,
	0, 0, 188, 0, 0, 0, 316, 334, 160, 255,
	335, 354, 175, 329, 256, 262, 185, 187, 186, 171,
	311, 333, 180, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 218, 0, 0, 348, 144, 307,
	306, 0, 225, 0, 145, 136, 294, 146, 232, 163,
	0, 357, 174, 236, 330, 927, 212, 268, 194, 0,
	277, 0, 157, 290, 252, 253, 251, 254, 215, 140,
	147, 0, 292, 309, 332, 176, 323, 138, 139, 141,
	149, 300, 150, 151, 0, 246, 205, 208, 219, 229,
	0, 296, 324, 349, 0, 172, 165, 326, 342, 181,
	308, 310, 356, 0, 167, 0, 0, 0, 0, 0,
	0, 0, 166, 0, 0, 0, 0, 0, 0, 214,
	0, 340, 341, 193, 358, 0, 0, 168, 0, 0,
	265, 272, 264, 0, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 207, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 0, 0, 164, 0, 321, 0,
	0, 325, 178, 0, 0, 331, 291, 179, 213, 206,
	284, 263, 173, 224, 319, 235, 242, 0, 0, 276,
	299, 182, 346, 318, 202, 328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 152, 153, 0, 0,
	0, 189, 131, 199, 191, 0, 132, 0, 0, 133,
	134, 0, 0, 0, 0, 135, 240, 0, 929, 350,
	320, 257, 932, 931, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 159, 169, 239, 0, 293, 211, 0,
	1142, 0, 1145, 0, 0, 0, 0, 0, 0, 137,
	0, 0, 0, 0, 930, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 203, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	0, 0, 0, 0, 288, 216, 143, 0, 347, 197,
	0, 0, 0, 170, 177, 184, 196, 204, 210, 220,
	223, 227, 228, 230, 233, 245, 247, 248, 249, 250,
	266, 267, 270, 271, 274, 275, 278, 279, 280, 282,
	283, 289, 148, 295, 301, 302, 303, 304, 305, 312,
	313, 314, 315, 322, 338, 339, 352, 353, 0, 0,
	156, 0, 0, 162, 0, 0, 0, 0, 0, 0,
	161, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	231, 154, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 155, 0, 0, 0, 269, 0, 0, 142, 158,
	0, 0, 0, 192, 1814, 298, 0, 344, 928, 0,
	297, 241, 337, 0, 0, 343, 0, 327, 351, 355,
	209, 0, 183, 317, 201, 198, 0, 0, 0, 217,
	287, 195, 234, 0, 0, 0, 188, 0, 0, 0,
	316, 334, 160, 255, 335, 354, 175, 329, 256, 262,
	185, 187, 186, 171, 311, 333, 180, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 218, 0,
	0, 348, 144, 307, 306, 0, 225, 0, 145, 136,
	294, 146, 232, 163, 0, 357, 174, 236, 330, 927,
	212, 268, 194, 0, 277, 0, 157, 290, 252, 253,
	251, 254, 215, 140, 147, 0, 292, 309, 332, 176,
	323, 138, 139, 141, 149, 300, 150, 151, 0, 246,
	205, 208, 219, 229, 0, 296, 324, 349, 0, 172,
	165, 326, 342, 181, 308, 310, 356, 0, 167, 0,
	0, 0, 0, 0, 0, 0, 166, 0, 0, 0,
	0, 0, 0, 214, 0, 340, 341, 193, 358, 0,
	0, 168, 0, 0, 265, 272, 264, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 207, 221,
	285, 243, 286, 222, 260, 259, 261, 244, 0, 0,
	164, 0, 321, 0, 0, 325, 178, 0, 0, 331,
	291, 179, 213, 206, 284, 263, 173, 224, 319, 235,
	242, 0, 0, 276, 299, 182, 346, 318, 202, 328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	152, 153, 0, 0, 0, 189, 131, 199, 191, 0,
	132, 0, 0, 133, 134, 0, 0, 0, 0, 135,
	240, 0, 929, 350, 320, 257, 932, 931, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 159, 169, 239,
	0, 293, 211, 0, 2695, 0, 0, 0, 0, 0,
	0, 0, 0, 137, 0, 0, 0, 0, 930, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 203, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 0, 0, 0, 288, 216,
	143, 0, 347, 197, 0, 0, 0, 170, 177, 184,
	196, 204, 210, 220, 223, 227, 228, 230, 233, 245,
	247, 248, 249, 250, 266, 267, 270, 271, 274, 275,
	278, 279, 280, 282, 283, 289, 148, 295, 301, 302,
	303, 304, 305, 312, 313, 314, 315, 322, 338, 339,
	352, 353, 0, 0, 156, 0, 0, 162, 0, 0,
	0, 0, 0, 0, 161, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 231, 154, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 155, 0, 0, 0, 269,
	0, 0, 142, 158, 0, 0, 0, 192, 0, 298,
	0, 344, 928, 0, 297, 241, 337, 0, 0, 343,
	0, 327, 351, 355, 209, 0, 183, 317, 201, 198,
	0, 0, 0, 217, 287, 195, 234, 0, 0, 0,
	188, 0, 0, 0, 316, 334, 160, 255, 335, 354,
	175, 329, 256, 262, 185, 187, 186, 171, 311, 333,
	180, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 218, 0, 0, 348, 144, 307, 306, 0,
	225, 0, 145, 136, 294, 146, 232, 163, 0, 357,
	174, 236, 330, 927, 212, 268, 194, 0, 277, 0,
	157, 290, 252, 253, 251, 254, 215, 140, 147, 0,
	292, 309, 332, 176, 323, 138, 139, 141, 149, 300,
	150, 151, 0, 246, 205, 208, 219, 229, 0, 296,
	324, 349, 0, 172, 165, 326, 342, 181, 308, 310,
	356, 0, 167, 0, 0, 0, 0, 0, 0, 0,
	166, 0, 0, 0, 0, 0, 0, 214, 0, 340,
	341, 193, 358, 0, 0, 168, 0, 0, 265, 272,
	264, 0, 336, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 207, 221, 285, 243, 286, 222, 260, 259,
	261, 244, 0, 0, 164, 0, 321, 0, 0, 325,
	178, 0, 0, 331, 291, 179, 213, 206, 284, 263,
	173, 224, 319, 235, 242, 0, 0, 276, 299, 182,
	346, 318, 202, 328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 152, 153, 0, 0, 0, 189,
	131, 199, 191, 0, 132, 0, 0, 133, 134, 0,
	0, 0, 0, 135, 240, 0, 929, 350, 320, 257,
	932, 931, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 159, 169, 239, 0, 293, 211, 0, 2690, 0,
	0, 0, 0, 0, 0, 0, 0, 137, 0, 0,
	0, 0, 930, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 203, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 0, 0,
	0, 0, 288, 216, 143, 0, 347, 197, 0, 0,
	0, 170, 177, 184, 196, 204, 210, 220, 223, 227,
	228, 230, 233, 245, 247, 248, 249, 250, 266, 267,
	270, 271, 274, 275, 278, 279, 280, 282, 283, 289,
	148, 295, 301, 302, 303, 304, 305, 312, 313, 314,
	315, 322, 338, 339, 352, 353, 0, 0, 156, 0,
	0, 162, 0, 0, 0, 0, 0, 0, 161, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 231, 154,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 155,
	0, 0, 0, 269, 0, 0, 142, 158, 0, 0,
	0, 192, 0, 298, 0, 344, 928, 0, 297, 241,
	337, 0, 0, 343, 0, 327, 351, 355, 209, 0,
	183, 317, 201, 198, 0, 0, 0, 217, 287, 195,
	234, 0, 0, 0, 188, 0, 0, 0, 316, 334,
	160, 255, 335, 354, 175, 329, 256, 262, 185, 187,
	186, 171, 311, 333, 180, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 218, 0, 0, 348,
	144, 307, 306, 0, 225, 0, 145, 136, 294, 146,
	232, 163, 0, 357, 174, 236, 330, 927, 212, 268,
	194, 0, 277, 0, 157, 290, 252, 253, 251, 254,
	215, 140, 147, 0, 292, 309, 332, 176, 323, 138,
	139, 141, 149, 300, 150, 151, 0, 246, 205, 208,
	219, 229, 0, 296, 324, 349, 0, 172, 165, 326,
	342, 181, 308, 310, 356, 0, 167, 0, 0, 0,
	0, 0, 0, 0, 166, 0, 0, 0, 0, 0,
	0, 214, 0, 340, 341, 193, 358, 0, 0, 168,
	0, 0, 265, 272, 264, 0, 336, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 207, 221, 285, 243,
	286, 222, 260, 259, 261, 244, 0, 0, 164, 0,
	321, 0, 0, 325, 178, 0, 0, 331, 291, 179,
	213, 206, 284, 263, 173, 224, 319, 235, 242, 0,
	0, 276, 299, 182, 346, 318, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 152, 153,
	0, 0, 0, 189, 131, 0, 0, 0, 132, 0,
	0, 133, 134, 0, 0, 0, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 159, 169, 239, 0, 293,
	211, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	347, 197, 0, 0, 0, 170, 177, 184, 196, 204,
	210, 220, 223, 227, 228, 230, 233, 245, 247, 248,
	249, 250, 266, 267, 270, 271, 274, 275, 278, 279,
	280, 282, 283, 289, 148, 295, 301, 302, 303, 304,
	305, 312, 313, 314, 315, 322, 338, 339, 352, 353,
	0, 0, 156, 36, 328, 162, 0, 0, 0, 0,
	0, 0, 161, 0, 0, 273, 0, 0, 0, 0,
	0, 0, 0, 0, 200, 0, 0, 0, 0, 0,
	0, 0, 199, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2271, 240, 0, 0, 350, 320,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 77, 0, 0, 0, 1948,
	0, 0, 0, 0, 0, 0, 0, 0, 137, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 203, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 0, 288, 216, 143, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 231,
	154, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	155, 0, 0, 0, 269, 0, 0, 142, 158, 0,
	0, 0, 192, 0, 298, 0, 344, 0, 0, 297,
	241, 337, 0, 0, 343, 0, 327, 351, 355, 209,
	0, 183, 317, 201, 198, 0, 0, 0, 217, 287,
	195, 234, 0, 0, 0, 188, 0, 0, 0, 316,
	334, 160, 255, 335, 354, 175, 329, 256, 262, 185,
	187, 186, 171, 311, 333, 180, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 218, 0, 0,
	348, 144, 307, 306, 0, 225, 0, 145, 136, 294,
	146, 232, 163, 0, 357, 174, 236, 330, 128, 212,
	268, 194, 0, 277, 0, 157, 290, 252, 253, 251,
	254, 215, 140, 147, 0, 292, 309, 332, 176, 323,
	138, 139, 141, 149, 300, 150, 151, 0, 246, 205,
	208, 219, 229, 0, 296, 324, 349, 0, 172, 165,
	326, 342, 181, 308, 310, 356, 0, 167, 0, 0,
	0, 0, 0, 0, 0, 166, 0, 0, 0, 0,
	0, 0, 214, 0, 340, 341, 193, 358, 0, 0,
	168, 0, 0, 265, 272, 264, 0, 336, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 207, 221, 285,
	243, 286, 222, 260, 259, 261, 244, 0, 0, 164,
	0, 321, 0, 0, 325, 178, 0, 0, 331, 291,
	179, 213, 206, 284, 263, 173, 224, 319, 235, 242,
	0, 0, 276, 299, 182, 346, 318, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 152,
	153, 0, 0, 0, 189, 131, 0, 0, 0, 132,
	0, 0, 133, 134, 0, 0, 0, 0, 135, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1949, 281, 0, 159, 169, 239, 462,
	293, 211, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 197, 0, 0, 0, 170, 177, 184, 196,
	204, 210, 220, 223, 227, 228, 230, 233, 245, 247,
	248, 249, 250, 266, 267, 270, 271, 274, 275, 278,
	279, 280, 282, 283, 289, 148, 295, 301, 302, 303,
	304, 305, 312, 313, 314, 315, 322, 338, 339, 352,
	353, 328, 0, 156, 0, 0, 162, 0, 0, 0,
	0, 0, 273, 161, 0, 0, 0, 0, 0, 0,
	0, 200, 0, 0, 0, 0, 0, 0, 0, 199,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 350, 320, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 77, 0, 0, 0, 1948, 0, 0, 0,
	0, 0, 0, 0, 0, 137, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 203, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 0, 0, 0,
	288, 216, 143, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 231, 154, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 155, 0, 0,
	0, 269, 0, 0, 142, 158, 0, 0, 0, 192,
	0, 298, 0, 344, 0, 0, 297, 241, 337, 0,
	0, 343, 0, 327, 351, 355, 209, 0, 183, 317,
	201, 198, 0, 0, 0, 217, 287, 195, 234, 0,
	0, 0, 188, 0, 0, 0, 316, 334, 160, 255,
	335, 354, 175, 329, 256, 262, 185, 187, 186, 171,
	311, 333, 180, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 218, 0, 0, 348, 144, 307,
	306, 0, 225, 0, 145, 136, 294, 146, 232, 163,
	0, 357, 174, 236, 330, 128, 212, 268, 194, 0,
	277, 0, 157, 290, 252, 253, 251, 254, 215, 140,
	147, 0, 292, 309, 332, 176, 323, 138, 139, 141,
	149, 300, 150, 151, 0, 246, 205, 208, 219, 229,
	0, 296, 324, 349, 0, 172, 165, 326, 342, 181,
	308, 310, 356, 0, 167, 0, 0, 0, 0, 0,
	0, 0, 166, 0, 0, 0, 0, 0, 0, 214,
	0, 340, 341, 193, 358, 0, 0, 168, 0, 0,
	265, 272, 264, 0, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 207, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 0, 0, 164, 0, 321, 0,
	0, 325, 178, 0, 0, 331, 291, 179, 213, 206,
	284, 263, 173, 224, 319, 235, 242, 0, 0, 276,
	299, 182, 346, 318, 202, 328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 152, 153, 0, 0,
	0, 189, 131, 199, 191, 0, 132, 0, 0, 133,
	134, 0, 0, 0, 0, 135, 240, 0, 0, 350,
	320, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	1949, 281, 0, 159, 169, 239, 0, 293, 211, 0,
	129, 0, 0, 0, 0, 0, 0, 0, 0, 137,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 203, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	0, 0, 0, 0, 288, 216, 143, 0, 347, 197,
	0, 0, 0, 170, 177, 184, 196, 204, 210, 220,
	223, 227, 228, 230, 233, 245, 247, 248, 249, 250,
	266, 267, 270, 271, 274, 275, 278, 279, 280, 282,
	283, 289, 148, 295, 301, 302, 303, 304, 305, 312,
	313, 314, 315, 322, 338, 339, 352, 353, 0, 0,
	156, 0, 0, 162, 0, 0, 0, 0, 0, 0,
	161, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	231, 154, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 155, 0, 0, 0, 269, 0, 0, 142, 158,
	0, 0, 0, 192, 0, 298, 0, 344, 2073, 0,
	297, 241, 337, 0, 0, 343, 0, 327, 351, 355,
	209, 0, 183, 317, 201, 198, 0, 0, 0, 217,
	287, 195, 234, 0, 0, 0, 188, 0, 0, 0,
	316, 334, 160, 255, 335, 354, 175, 329, 256, 262,
	185, 187, 186, 171, 311, 333, 180, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 218, 0,
	0, 348, 144, 307, 306, 0, 225, 0, 145, 136,
	294, 146, 232, 163, 0, 357, 174, 236, 330, 128,
	212, 268, 194, 0, 277, 0, 157, 290, 252, 253,
	251, 254, 215, 140, 147, 0, 292, 309, 332, 176,
	323, 138, 139, 141, 149, 300, 150, 151, 0, 246,
	205, 208, 219, 229, 0, 296, 324, 349, 0, 172,
	165, 326, 342, 181, 308, 310, 356, 0, 167, 0,
	0, 0, 0, 0, 0, 0, 166, 0, 0, 0,
	0, 0, 0, 214, 0, 340, 341, 193, 358, 0,
	0, 168, 0, 0, 265, 272, 264, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 207, 221,
	285, 243, 286, 222, 260, 259, 261, 244, 0, 0,
	164, 0, 321, 0, 0, 325, 178, 0, 0, 331,
	291, 179, 213, 206, 284, 263, 173, 224, 319, 235,
	242, 0, 0, 276, 299, 182, 346, 318, 202, 328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	152, 153, 0, 0, 0, 189, 131, 199, 191, 0,
	132, 0, 0, 133, 134, 0, 0, 0, 0, 135,
	240, 0, 0, 350, 320, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 159, 169, 239,
	0, 293, 211, 0, 129, 0, 0, 0, 0, 0,
	0, 0, 0, 137, 0, 0, 0, 0, 0, 1935,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 203, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 0, 0, 0, 288, 216,
	143, 0, 347, 197, 0, 0, 0, 170, 177, 184,
	196, 204, 210, 220, 223, 227, 228, 230, 233, 245,
	247, 248, 249, 250, 266, 267, 270, 271, 274, 275,
	278, 279, 280, 282, 283, 289, 148, 295, 301, 302,
	303, 304, 305, 312, 313, 314, 315, 322, 338, 339,
	352, 353, 0, 0, 156, 0, 0, 162, 0, 0,
	0, 0, 0, 0, 161, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 231, 154, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 155, 0, 0, 0, 269,
	0, 0, 142, 158, 0, 0, 0, 192, 0, 298,
	0, 344, 0, 0, 297, 241, 337, 0, 0, 343,
	0, 327, 351, 355, 209, 0, 183, 317, 201, 198,
	0, 0, 0, 217, 287, 195, 234, 0, 0, 0,
	188, 0, 0, 0, 316, 334, 160, 255, 335, 354,
	175, 329, 256, 262, 185, 187, 186, 171, 311, 333,
	180, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 218, 0, 0, 348, 144, 307, 306, 0,
	225, 0, 145, 136, 294, 146, 232, 163, 0, 357,
	174, 236, 330, 128, 212, 268, 194, 0, 277, 0,
	157, 290, 252, 253, 251, 254, 215, 140, 147, 0,
	292, 309, 332, 176, 323, 138, 139, 141, 149, 300,
	150, 151, 0, 246, 205, 208, 219, 229, 0, 296,
	324, 349, 0, 172, 165, 326, 342, 181, 308, 310,
	356, 0, 167, 0, 0, 0, 0, 0, 0, 0,
	166, 0, 0, 0, 0, 0, 0, 214, 0, 340,
	341, 193, 358, 0, 0, 168, 0, 0, 265, 272,
	264, 0, 336, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 207, 221, 285, 243, 286, 222, 260, 259,
	261, 244, 0, 0, 164, 0, 321, 0, 0, 325,
	178, 0, 0, 331, 291, 179, 213, 206, 284, 263,
	173, 224, 319, 235, 242, 0, 0, 276, 299, 182,
	346, 318, 202, 328, 0, 0, 0, 1272, 0, 0,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 152, 153, 0, 0, 0, 189,
	131, 199, 191, 0, 132, 0, 0, 133, 134, 0,
	0, 0, 0, 135, 240, 0, 0, 350, 320, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 159, 169, 239, 0, 293, 211, 0, 129, 0,
	0, 0, 0, 0, 0, 0, 0, 137, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 203, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 0, 0,
	0, 0, 288, 216, 143, 0, 347, 197, 0, 0,
	0, 170, 177, 184, 196, 204, 210, 220, 223, 227,
	228, 230, 233, 245, 247, 248, 249, 250, 266, 267,
	270, 271, 274, 275, 278, 279, 280, 282, 283, 289,
	148, 295, 301, 302, 303, 304, 305, 312, 313, 314,
	315, 322, 338, 339, 352, 353, 0, 0, 156, 0,
	0, 162, 0, 0, 0, 0, 0, 0, 161, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 231, 154,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 155,
	0, 0, 0, 269, 0, 0, 142, 158, 0, 0,
	0, 192, 0, 298, 0, 344, 0, 0, 297, 241,
	337, 0, 0, 343, 0, 327, 351, 355, 209, 0,
	183, 317, 201, 198, 0, 0, 0, 217, 287, 195,
	234, 0, 0, 0, 188, 0, 0, 0, 316, 334,
	160, 255, 335, 354, 175, 329, 256, 262, 185, 187,
	186, 171, 311, 333, 180, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 218, 0, 0, 348,
	144, 307, 306, 0, 225, 0, 145, 136, 294, 146,
	232, 163, 0, 357, 174, 236, 330, 128, 212, 268,
	194, 0, 277, 0, 157, 290, 252, 253, 251, 254,
	215, 140, 147, 0, 292, 309, 332, 176, 323, 138,
	139, 141, 149, 300, 150, 151, 0, 246, 205, 208,
	219, 229, 0, 296, 324, 349, 0, 172, 165, 326,
	342, 181, 308, 310, 356, 0, 167, 0, 0, 0,
	0, 0, 0, 0, 166, 0, 0, 0, 0, 0,
	0, 214, 0, 340, 341, 193, 358, 0, 0, 168,
	0, 0, 265, 272, 264, 0, 336, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 207, 221, 285, 243,
	286, 222, 260, 259, 261, 244, 0, 0, 164, 0,
	321, 0, 0, 325, 178, 0, 0, 331, 291, 179,
	213, 206, 284, 263, 173, 224, 319, 235, 242, 0,
	0, 276, 299, 182, 346, 318, 202, 328, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 152, 153,
	0, 0, 0, 189, 131, 199, 191, 0, 132, 0,
	0, 133, 134, 0, 0, 0, 0, 135, 240, 0,
	0, 350, 320, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 159, 169, 239, 0, 293,
	211, 0, 129, 0, 0, 0, 0, 0, 0, 0,
	0, 137, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 203,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 0, 0, 0, 288, 216, 143, 0,
	347, 197, 0, 0, 0, 170, 177, 184, 196, 204,
	210, 220, 223, 227, 228, 230, 233, 245, 247, 248,
	249, 250, 266, 267, 270, 271, 274, 275, 278, 279,
	280, 282, 283, 289, 148, 295, 301, 302, 303, 304,
	305, 312, 313, 314, 315, 322, 338, 339, 352, 353,
	0, 0, 156, 0, 0, 162, 0, 0, 0, 0,
	0, 0, 161, 0, 0, 0, 0, 258, 0, 0,
	123, 0, 231, 154, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 155, 0, 0, 0, 269, 0, 0,
	142, 158, 0, 0, 0, 192, 0, 298, 0, 344,
	0, 0, 297, 241, 337, 0, 0, 343, 0, 327,
	351, 355, 209, 0, 183, 317, 201, 198, 0, 0,
	0, 217, 287, 195, 234, 0, 0, 0, 188, 0,
	0, 0, 316, 334, 160, 255, 335, 354, 175, 329,
	256, 262, 185, 187, 186, 171, 311, 333, 180, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	218, 0, 0, 348, 144, 307, 306, 0, 225, 0,
	145, 136, 294, 146, 232, 163, 0, 357, 174, 236,
	330, 128, 212, 268, 194, 0, 277, 0, 157, 290,
	252, 253, 251, 254, 215, 140, 147, 0, 292, 309,
	332, 176, 323, 138, 139, 141, 149, 300, 150, 151,
	0, 246, 205, 208, 219, 229, 0, 296, 324, 349,
	0, 172, 165, 326, 342, 181, 308, 310, 356, 0,
	167, 0, 0, 0, 0, 0, 0, 0, 166, 0,
	0, 0, 0, 0, 0, 214, 0, 340, 341, 193,
	358, 0, 0, 168, 0, 0, 265, 272, 264, 0,
	336, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	207, 221, 285, 243, 286, 222, 260, 259, 261, 244,
	0, 0, 164, 0, 321, 0, 0, 325, 178, 0,
	0, 331, 291, 179, 213, 206, 284, 263, 173, 224,
	319, 235, 242, 0, 0, 276, 299, 182, 346, 318,
	202, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 152, 153, 0, 0, 0, 189, 131, 199,
	191, 0, 132, 0, 0, 133, 134, 0, 0, 0,
	0, 135, 240, 0, 0, 350, 320, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 159,
	169, 239, 0, 293, 211, 0, 129, 0, 0, 0,
	0, 0, 0, 0, 0, 137, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 203, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 0, 0, 0,
	288, 216, 143, 0, 347, 197, 0, 0, 0, 170,
	177, 184, 196, 204, 210, 220, 223, 227, 228, 230,
	233, 245, 247, 248, 249, 250, 266, 267, 270, 271,
	274, 275, 278, 279, 280, 282, 283, 289, 148, 295,
	301, 302, 303, 304, 305, 312, 313, 314, 315, 322,
	338, 339, 352, 353, 0, 0, 156, 0, 0, 162,
	0, 0, 0, 0, 0, 0, 161, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 231, 154, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 155, 0, 0,
	0, 269, 0, 0, 142, 158, 0, 0, 0, 192,
	0, 298, 0, 344, 0, 0, 297, 241, 337, 0,
	0, 343, 0, 327, 351, 355, 209, 0, 183, 317,
	201, 198, 0, 0, 0, 217, 287, 195, 234, 0,
	0, 0, 188, 0, 0, 0, 316, 334, 160, 255,
	335, 354, 175, 329, 256, 262, 185, 187, 186, 171,
	311, 333, 180, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 218, 0, 0, 348, 144, 307,
	306, 0, 225, 0, 145, 136, 294, 146, 232, 163,
	0, 357, 174, 236, 330, 128, 212, 268, 194, 0,
	277, 0, 157, 290, 252, 253, 251, 254, 215, 140,
	147, 0, 292, 309, 332, 176, 323, 138, 139, 141,
	149, 300, 150, 151, 0, 246, 205, 208, 219, 229,
	0, 296, 324, 349, 0, 172, 165, 326, 342, 181,
	308, 310, 356, 0, 167, 0, 0, 0, 0, 0,
	0, 0, 166, 0, 0, 0, 0, 0, 0, 214,
	0, 340, 341, 193, 358, 0, 0, 168, 0, 0,
	265, 272, 264, 0, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 207, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 0, 0, 164, 0, 321, 0,
	0, 325, 178, 0, 0, 331, 291, 179, 213, 206,
	284, 263, 173, 224, 319, 235, 242, 0, 0, 276,
	299, 182, 346, 318, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 152, 153, 0, 0,
	0, 189, 131, 0, 0, 0, 132, 0, 0, 133,
	134, 0, 0, 0, 0, 135, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 159, 169, 239, 0, 293, 211, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 347, 197,
	0, 0, 0, 170, 177, 184, 196, 204, 210, 220,
	223, 227, 228, 230, 233, 245, 247, 248, 249, 250,
	266, 267, 270, 271, 274, 275, 278, 279, 280, 282,
	283, 289, 148, 295, 301, 302, 303, 304, 305, 312,
	313, 314, 315, 322, 338, 339, 352, 353, 0, 0,
	156, 0, 0, 162, 428, 328, 422, 433, 416, 0,
	161, 0, 0, 0, 0, 0, 273, 0, 0, 439,
	0, 0, 0, 0, 0, 200, 0, 0, 423, 0,
	0, 0, 0, 199, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 350,
	320, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	437, 0, 436, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 203, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	0, 0, 0, 0, 288, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 415,
	414, 417, 0, 0, 0, 258, 0, 0, 0, 421,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 155, 0, 0, 0, 269, 425, 0, 0, 158,
	429, 0, 0, 192, 0, 298, 0, 344, 0, 0,
	297, 241, 337, 0, 432, 343, 0, 327, 351, 355,
	209, 0, 183, 317, 201, 198, 0, 0, 0, 217,
	287, 195, 234, 0, 0, 0, 188, 0, 0, 0,
	316, 334, 160, 255, 335, 354, 175, 329, 256, 262,
	185, 187, 186, 171, 311, 333, 180, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 218, 0,
	0, 348, 0, 307, 306, 0, 225, 0, 0, 0,
	294, 0, 232, 163, 0, 357, 174, 236, 330, 0,
	212, 268, 194, 0, 277, 0, 157, 290, 252, 253,
	251, 254, 215, 0, 0, 0, 442, 309, 332, 176,
	323, 418, 419, 420, 426, 427, 430, 431, 434, 246,
	205, 208, 219, 229, 0, 296, 324, 349, 0, 172,
	165, 326, 342, 181, 308, 310, 356, 0, 167, 0,
	0, 0, 0, 0, 0, 0, 166, 0, 0, 0,
	0, 0, 0, 214, 0, 340, 341, 193, 358, 0,
	0, 168, 0, 0, 265, 272, 264, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 207, 221,
	285, 243, 286, 222, 260, 259, 261, 244, 0, 0,
	164, 0, 321, 0, 0, 325, 178, 0, 0, 331,
	291, 179, 213, 206, 284, 263, 173, 224, 319, 235,
	242, 0, 0, 276, 299, 182, 346, 318, 202, 0,
	428, 328, 422, 433, 416, 0, 0, 0, 0, 0,
	0, 0, 273, 0, 0, 408, 0, 0, 0, 0,
	0, 200, 0, 0, 423, 189, 0, 0, 0, 199,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 350, 320, 257, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 159, 169, 239,
	0, 293, 211, 0, 0, 0, 437, 0, 436, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 203, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 0, 0, 0,
	288, 216, 347, 197, 0, 0, 0, 170, 177, 184,
	196, 204, 210, 220, 223, 227, 228, 230, 233, 245,
	247, 248, 249, 250, 266, 267, 270, 271, 274, 275,
	278, 279, 280, 282, 283, 289, 424, 295, 301, 302,
	303, 304, 305, 312, 313, 314, 315, 322, 338, 339,
	352, 353, 0, 0, 156, 0, 0, 162, 0, 0,
	0, 0, 0, 0, 161, 415, 414, 417, 0, 0,
	0, 258, 0, 0, 0, 421, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 155, 0, 0,
	0, 269, 425, 0, 0, 158, 429, 0, 0, 192,
	0, 298, 0, 344, 0, 0, 297, 241, 337, 0,
	432, 343, 0, 327, 351, 355, 209, 0, 183, 317,
	201, 198, 0, 0, 0, 217, 287, 195, 234, 0,
	0, 0, 188, 0, 0, 0, 316, 334, 160, 255,
	335, 354, 175, 329, 256, 262, 185, 187, 186, 171,
	311, 333, 180, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 218, 0, 0, 348, 0, 307,
	306, 0, 225, 0, 0, 0, 294, 0, 232, 163,
	0, 357, 174, 236, 330, 0, 212, 268, 194, 0,
	277, 0, 157, 290, 252, 253, 251, 254, 215, 0,
	0, 0, 411, 309, 332, 176, 323, 418, 419, 420,
	426, 427, 430, 431, 434, 246, 205, 208, 219, 229,
	0, 296, 324, 349, 0, 172, 165, 326, 342, 181,
	308, 310, 356, 0, 167, 0, 0, 0, 0, 0,
	0, 0, 166, 0, 0, 0, 0, 0, 0, 214,
	0, 340, 341, 193, 358, 0, 0, 168, 0, 0,
	265, 272, 264, 0, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 207, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 0, 0, 164, 0, 321, 0,
	0, 325, 178, 0, 0, 331, 291, 179, 213, 206,
	284, 263, 173, 224, 319, 235, 242, 0, 0, 276,
	299, 182, 346, 318, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 159, 169, 239, 0, 293, 211, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 347, 197,
	0, 0, 0, 170, 177, 184, 196, 204, 210, 220,
	223, 227, 228, 230, 233, 245, 247, 248, 249, 250,
	266, 267, 270, 271, 274, 275, 278, 279, 280, 282,
	283, 289, 424, 295, 301, 302, 303, 304, 305, 312,
	313, 314, 315, 322, 338, 339, 352, 353, 328, 0,
	156, 0, 0, 162, 0, 0, 0, 0, 0, 273,
	161, 0, 0, 0, 0, 0, 0, 0, 200, 0,
	0, 0, 0, 0, 0, 0, 199, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 350, 320, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 925, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	203, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 0, 288, 216, 0,
	1157, 1156, 1166, 1167, 1159, 1160, 1161, 1162, 1163, 1164,
	1165, 1158, 0, 0, 1168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 155, 0, 0, 0, 269, 0,
	0, 0, 158, 0, 0, 0, 192, 0, 298, 0,
	344, 0, 0, 297, 241, 337, 0, 0, 343, 0,
	327, 351, 355, 209, 0, 183, 317, 201, 198, 0,
	0, 0, 217, 287, 195, 234, 0, 0, 0, 188,
	0, 0, 0, 316, 334, 160, 255, 335, 354, 175,
	329, 256, 262, 185, 187, 186, 171, 311, 333, 180,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 218, 0, 0, 348, 0, 307, 306, 0, 225,
	0, 0, 0, 294, 0, 232, 163, 0, 357, 174,
	236, 330, 0, 212, 268, 194, 0, 277, 0, 157,
	290, 252, 253, 251, 254, 215, 0, 0, 0, 292,
	309, 332, 176, 323, 0, 0, 0, 0, 300, 0,
	0, 0, 246, 205, 208, 219, 229, 0, 296, 324,
	349, 0, 172, 165, 326, 342, 181, 308, 310, 356,
	0, 167, 0, 0, 0, 0, 0, 0, 0, 166,
	0, 0, 0, 0, 0, 0, 214, 0, 340, 341,
	193, 358, 0, 0, 168, 0, 0, 265, 272, 264,
	0, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 207, 221, 285, 243, 286, 222, 260, 259, 261,
	244, 0, 0, 164, 0, 321, 0, 0, 325, 178,
	0, 0, 331, 291, 179, 213, 206, 284, 263, 173,
	224, 319, 235, 242, 0, 0, 276, 299, 182, 346,
	318, 202, 0, 0, 0, 0, 0, 0, 0, 328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	273, 0, 0, 0, 0, 2276, 0, 0, 189, 200,
	0, 0, 0, 0, 0, 0, 0, 199, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 350, 320, 257, 0, 0, 281, 0,
	159, 169, 239, 0, 293, 211, 2278, 2280, 0, 0,
	0, 0, 0, 0, 129, 0, 454, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 203, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 2274, 347, 197, 0, 288, 216,
	170, 177, 184, 196, 204, 210, 220, 223, 227, 228,
	230, 233, 245, 247, 248, 249, 250, 266, 267, 270,
	271, 274, 275, 278, 279, 280, 282, 283, 289, 0,
	295, 301, 302, 303, 304, 305, 312, 313, 314, 315,
	322, 338, 339, 352, 353, 0, 0, 156, 0, 0,
	162, 0, 0, 0, 0, 0, 0, 161, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 231, 0, 0, 2279, 0, 0,
	0, 0, 0, 238, 0, 155, 0, 0, 0, 269,
	0, 0, 0, 158, 0, 0, 0, 192, 0, 298,
	0, 344, 0, 0, 297, 241, 337, 0, 0, 343,
	0, 327, 351, 355, 209, 0, 183, 317, 201, 198,
	0, 0, 0, 217, 287, 195, 234, 0, 0, 0,
	188, 0, 0, 0, 316, 334, 160, 255, 335, 354,
	175, 329, 256, 262, 185, 187, 186, 171, 311, 333,
	180, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 218, 0, 0, 348, 0, 307, 306, 0,
	225, 0, 0, 0, 294, 0, 232, 163, 0, 357,
	174, 236, 330, 0, 212, 268, 194, 0, 277, 0,
	157, 290, 252, 253, 251, 254, 215, 0, 0, 0,
	292, 309, 332, 176, 323, 0, 0, 0, 0, 300,
	0, 0, 0, 246, 205, 208, 219, 229, 0, 296,
	324, 349, 0, 172, 165, 326, 342, 181, 308, 310,
	356, 0, 167, 0, 0, 0, 0, 0, 0, 0,
	166, 0, 0, 0, 0, 0, 0, 214, 0, 340,
	341, 193, 358, 0, 0, 168, 0, 0, 265, 272,
	264, 0, 336, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 207, 221, 285, 243, 286, 222, 260, 259,
	261, 244, 0, 0, 164, 0, 321, 0, 0, 325,
	178, 0, 0, 331, 291, 179, 213, 206, 284, 263,
	173, 224, 319, 235, 242, 0, 0, 276, 299, 182,
	346, 318, 202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	131, 0, 0, 0, 132, 0, 0, 133, 134, 0,
	0, 0, 0, 135, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 159, 169, 239, 0, 293, 211, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 347, 197, 0, 0,
	0, 170, 177, 184, 196, 204, 210, 220, 223, 227,
	228, 230, 233, 245, 247, 248, 249, 250, 266, 267,
	270, 271, 274, 275, 278, 279, 280, 282, 283, 289,
	0, 295, 301, 302, 303, 304, 305, 312, 313, 314,
	315, 322, 338, 339, 352, 353, 328, 0, 156, 0,
	0, 162, 0, 0, 0, 0, 0, 273, 161, 0,
	0, 0, 2276, 0, 0, 0, 200, 0, 0, 0,
	0, 0, 0, 0, 199, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 0, 0,
	350, 320, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2278, 2280, 0, 0, 0, 0, 0,
	0, 129, 0, 454, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 203, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 0, 288, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 231, 0, 0, 2279, 0, 0, 0, 0, 0,
	238, 0, 155, 0, 0, 0, 269, 0, 0, 0,
	158, 0, 0, 0, 192, 0, 298, 0, 344, 0,
	0, 297, 241, 337, 0, 0, 343, 0, 327, 351,
	355, 209, 0, 183, 317, 201, 198, 0, 0, 0,
	217, 287, 195, 234, 0, 0, 0, 188, 0, 0,
	0, 316, 334, 160, 255, 335, 354, 175, 329, 256,
	262, 185, 187, 186, 171, 311, 333, 180, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 218,
	0, 0, 348, 0, 307, 306, 0, 225, 0, 0,
	0, 294, 0, 232, 163, 0, 357, 174, 236, 330,
	0, 212, 268, 194, 0, 277, 0, 157, 290, 252,
	253, 251, 254, 215, 0, 0, 0, 292, 309, 332,
	176, 323, 0, 0, 0, 0, 300, 0, 0, 0,
	246, 205, 208, 219, 229, 0, 296, 324, 349, 0,
	172, 165, 326, 342, 181, 308, 310, 356, 0, 167,
	0, 0, 0, 0, 0, 0, 0, 166, 0, 0,
	0, 0, 0, 0, 214, 0, 340, 341, 193, 358,
	0, 0, 168, 0, 0, 265, 272, 264, 0, 336,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 207,
	221, 285, 243, 286, 222, 260, 259, 261, 244, 0,
	0, 164, 0, 321, 0, 0, 325, 178, 0, 0,
	331, 291, 179, 213, 206, 284, 263, 173, 224, 319,
	235, 242, 0, 0, 276, 299, 182, 346, 318, 202,
	328, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 273, 0, 0, 0, 0, 0, 0, 0, 0,
	200, 0, 0, 0, 0, 0, 189, 131, 199, 191,
	0, 132, 0, 0, 133, 134, 0, 0, 0, 0,
	135, 240, 0, 0, 350, 320, 257, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 159, 169,
	239, 0, 293, 211, 0, 129, 0, 454, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 0, 0, 0, 288,
	216, 0, 0, 347, 197, 0, 0, 0, 170, 177,
	184, 196, 204, 210, 220, 223, 227, 228, 230, 233,
	245, 247, 248, 249, 250, 266, 267, 270, 271, 274,
	275, 278, 279, 280, 282, 283, 289, 0, 295, 301,
	302, 303, 304, 305, 312, 313, 314, 315, 322, 338,
	339, 352, 353, 0, 0, 156, 0, 0, 162, 0,
	0, 0, 0, 0, 0, 161, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 155, 0, 0, 0,
	269, 0, 0, 0, 158, 0, 0, 0, 192, 0,
	298, 0, 344, 0, 0, 297, 241, 337, 0, 0,
	343, 0, 327, 351, 355, 209, 0, 183, 317, 201,
	198, 0, 0, 0, 217, 287, 195, 234, 0, 0,
	0, 188, 0, 0, 0, 316, 334, 160, 255, 335,
	354, 175, 329, 256, 262, 185, 187, 186, 171, 311,
	333, 180, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 226, 218, 0, 0, 348, 0, 307, 306,
	0, 225, 0, 0, 0, 294, 0, 232, 163, 0,
	357, 174, 236, 330, 0, 212, 268, 194, 0, 277,
	0, 157, 290, 252, 253, 251, 254, 215, 0, 0,
	0, 292, 309, 332, 176, 323, 0, 0, 0, 0,
	300, 0, 0, 0, 246, 205, 208, 219, 229, 0,
	296, 324, 349, 0, 172, 165, 326, 342, 181, 308,
	310, 356, 0, 167, 0, 0, 0, 0, 0, 0,
	0, 166, 0, 0, 0, 0, 0, 0, 214, 0,
	340, 341, 193, 358, 0, 0, 168, 0, 0, 265,
	272, 264, 0, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 207, 221, 285, 243, 286, 222, 260,
	259, 261, 244, 0, 0, 164, 0, 321, 0, 0,
	325, 178, 0, 0, 331, 291, 179, 213, 206, 284,
	263, 173, 224, 319, 235, 242, 0, 0, 276, 299,
	182, 346, 318, 202, 328, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 273, 0, 0, 0, 0,
	3321, 0, 0, 0, 200, 0, 0, 0, 0, 0,
	189, 131, 199, 191, 0, 132, 0, 0, 133, 134,
	0, 0, 0, 0, 135, 240, 0, 0, 350, 320,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 159, 169, 239, 0, 293, 211, 0, 129,
	0, 454, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 203, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 0, 288, 216, 0, 0, 347, 197, 0,
	0, 448, 170, 177, 184, 196, 204, 210, 220, 223,
	227, 228, 230, 233, 245, 247, 248, 249, 250, 266,
	267, 270, 271, 274, 275, 278, 279, 280, 282, 283,
	289, 0, 295, 301, 302, 303, 304, 305, 312, 313,
	314, 315, 322, 338, 339, 352, 353, 0, 0, 156,
	0, 0, 162, 0, 0, 0, 0, 0, 0, 161,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	155, 0, 0, 0, 269, 0, 0, 0, 158, 0,
	0, 0, 192, 0, 298, 0, 344, 0, 0, 297,
	241, 337, 0, 0, 343, 0, 327, 351, 355, 209,
	0, 183, 317, 201, 198, 0, 0, 0, 217, 287,
	195, 234, 0, 0, 0, 188, 0, 0, 0, 316,
	334, 160, 255, 335, 354, 175, 329, 256, 262, 185,
	187, 186, 171, 311, 333, 180, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 218, 0, 0,
	348, 0, 307, 306, 0, 225, 0, 0, 0, 294,
	0, 232, 163, 0, 357, 174, 236, 330, 0, 212,
	268, 194, 0, 277, 0, 157, 290, 252, 253, 251,
	254, 215, 0, 0, 0, 292, 309, 332, 176, 323,
	0, 0, 0, 0, 300, 0, 0, 0, 246, 205,
	208, 219, 229, 0, 296, 324, 349, 0, 172, 165,
	326, 342, 181, 308, 310, 356, 0, 167, 0, 0,
	0, 0, 0, 0, 0, 166, 0, 0, 0, 0,
	0, 0, 214, 0, 340, 341, 193, 358, 0, 0,
	168, 0, 0, 265, 272, 264, 0, 336, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 207, 221, 285,
	243, 286, 222, 260, 259, 261, 244, 0, 0, 164,
	0, 321, 0, 0, 325, 178, 0, 0, 331, 291,
	179, 213, 206, 284, 263, 173, 224, 319, 235, 242,
	0, 0, 276, 299, 182, 346, 318, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 131, 0, 0, 0, 132,
	0, 0, 133, 134, 0, 0, 0, 0, 135, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 159, 169, 239, 0,
	293, 211, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 197, 0, 0, 0, 170, 177, 184, 196,
	204, 210, 220, 223, 227, 228, 230, 233, 245, 247,
	248, 249, 250, 266, 267, 270, 271, 274, 275, 278,
	279, 280, 282, 283, 289, 0, 295, 301, 302, 303,
	304, 305, 312, 313, 314, 315, 322, 338, 339, 352,
	353, 328, 0, 156, 0, 0, 162, 0, 0, 0,
	0, 0, 273, 161, 0, 0, 0, 0, 0, 0,
	0, 200, 0, 0, 0, 0, 0, 2565, 0, 199,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 350, 320, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 129, 0, 454, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 203, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 0, 0, 0,
	288, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 155, 0, 0,
	0, 269, 0, 0, 0, 158, 0, 0, 0, 192,
	0, 298, 0, 344, 0, 0, 297, 241, 337, 0,
	0, 343, 0, 327, 351, 355, 209, 0, 183, 317,
	201, 198, 0, 0, 0, 217, 287, 195, 234, 0,
	0, 0, 188, 0, 0, 0, 316, 334, 160, 255,
	335, 354, 175, 329, 256, 262, 185, 187, 186, 171,
	311, 333, 180, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 218, 0, 0, 348, 0, 307,
	306, 0, 225, 0, 0, 0, 294, 0, 232, 163,
	0, 357, 174, 236, 330, 0, 212, 268, 194, 0,
	277, 0, 157, 290, 252, 253, 251, 254, 215, 0,
	0, 0, 292, 309, 332, 176, 323, 0, 0, 0,
	0, 300, 0, 0, 0, 246, 205, 208, 219, 229,
	0, 296, 324, 349, 0, 172, 165, 326, 342, 181,
	308, 310, 356, 0, 167, 0, 0, 0, 0, 0,
	0, 0, 166, 0, 0, 0, 0, 0, 0, 214,
	0, 340, 341, 193, 358, 0, 0, 168, 0, 0,
	265, 272, 264, 0, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 207, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 0, 0, 164, 0, 321, 0,
	0, 325, 178, 0, 0, 331, 291, 179, 213, 206,
	284, 263, 173, 224, 319, 235, 242, 0, 0, 276,
	299, 182, 346, 318, 202, 328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 0, 0, 0, 0,
	0, 189, 131, 199, 191, 0, 132, 0, 0, 133,
	134, 0, 0, 0, 0, 135, 240, 0, 0, 350,
	320, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 159, 169, 239, 0, 293, 211, 0,
	129, 0, 454, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 203, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	0, 0, 0, 0, 288, 216, 0, 0, 347, 197,
	0, 0, 0, 170, 177, 184, 196, 204, 210, 220,
	223, 227, 228, 230, 233, 245, 247, 248, 249, 250,
	266, 267, 270, 271, 274, 275, 278, 279, 280, 282,
	283, 289, 0, 295, 301, 302, 303, 304, 305, 312,
	313, 314, 315, 322, 338, 339, 352, 353, 0, 0,
	156, 0, 0, 162, 0, 0, 0, 0, 0, 0,
	161, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 155, 0, 0, 0, 269, 0, 0, 0, 158,
	0, 0, 0, 192, 0, 298, 0, 344, 0, 0,
	297, 241, 337, 0, 0, 343, 0, 327, 351, 355,
	209, 0, 183, 317, 201, 198, 0, 0, 0, 217,
	287, 195, 234, 0, 0, 0, 188, 0, 0, 0,
	316, 334, 160, 255, 335, 354, 175, 329, 256, 262,
	185, 187, 186, 171, 311, 333, 180, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 218, 0,
	0, 348, 0, 307, 306, 0, 225, 0, 0, 0,
	294, 0, 232, 163, 0, 357, 174, 236, 330, 0,
	212, 268, 194, 0, 277, 0, 157, 290, 252, 253,
	251, 254, 215, 0, 0, 0, 292, 309, 332, 176,
	323, 0, 0, 0, 0, 300, 0, 0, 0, 246,
	205, 208, 219, 229, 0, 296, 324, 349, 0, 172,
	165, 326, 342, 181, 308, 310, 356, 0, 167, 0,
	0, 0, 0, 0, 0, 0, 166, 0, 0, 0,
	0, 0, 0, 214, 0, 340, 341, 193, 358, 0,
	0, 168, 0, 0, 265, 272, 264, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 207, 221,
	285, 243, 286, 222, 260, 259, 261, 244, 0, 0,
	164, 0, 321, 0, 0, 325, 178, 0, 0, 331,
	291, 179, 213, 206, 284, 263, 173, 224, 319, 235,
	242, 328, 0, 276, 299, 182, 346, 318, 202, 0,
	0, 0, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 0, 0, 0, 0, 0, 0, 0, 199,
	191, 0, 0, 0, 0, 189, 131, 0, 0, 0,
	132, 0, 240, 133, 134, 350, 320, 257, 0, 135,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 925, 159, 169, 239,
	0, 293, 211, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 203, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 0, 0, 0,
	288, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 347, 197, 0, 0, 0, 170, 177, 184,
	196, 204, 210, 220, 223, 227, 228, 230, 233, 245,
	247, 248, 249, 250, 266, 267, 270, 271, 274, 275,
	278, 279, 280, 282, 283, 289, 0, 295, 301, 302,
	303, 304, 305, 312, 313, 314, 315, 322, 338, 339,
	352, 353, 0, 0, 156, 0, 0, 162, 0, 0,
	0, 258, 0, 0, 161, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 155, 0, 0,
	0, 269, 0, 0, 0, 158, 0, 0, 0, 192,
	0, 298, 0, 344, 0, 0, 297, 241, 337, 0,
	0, 343, 0, 327, 351, 355, 209, 0, 183, 317,
	201, 198, 0, 0, 0, 217, 287, 195, 234, 0,
	0, 0, 188, 0, 0, 0, 316, 334, 160, 255,
	335, 354, 175, 329, 256, 262, 185, 187, 186, 171,
	311, 333, 180, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 218, 0, 0, 348, 0, 307,
	306, 0, 225, 0, 0, 0, 294, 0, 232, 163,
	0, 357, 174, 236, 330, 0, 212, 268, 194, 0,
	277, 0, 157, 290, 252, 253, 251, 254, 215, 0,
	0, 0, 292, 309, 332, 176, 323, 0, 0, 0,
	0, 300, 0, 0, 0, 246, 205, 208, 219, 229,
	0, 296, 324, 349, 0, 172, 165, 326, 342, 181,
	308, 310, 356, 0, 167, 0, 0, 0, 0, 0,
	0, 0, 166, 0, 0, 0, 0, 0, 0, 214,
	0, 340, 341, 193, 358, 0, 0, 168, 0, 0,
	265, 272, 264, 0, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 207, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 0, 0, 164, 0, 321, 0,
	0, 325, 178, 0, 0, 331, 291, 179, 213, 206,
	284, 263, 173, 224, 319, 235, 242, 0, 0, 276,
	299, 182, 346, 318, 202, 328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 0, 3282,
	0, 0, 0, 0, 0, 200, 3280, 0, 0, 0,
	0, 189, 131, 199, 191, 0, 132, 0, 0, 133,
	134, 0, 0, 0, 0, 135, 240, 0, 0, 350,
	320, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 159, 169, 239, 0, 293, 211, 0,
	437, 0, 436, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 203, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	0, 0, 0, 0, 288, 216, 0, 0, 347, 197,
	0, 0, 0, 170, 177, 184, 196, 204, 210, 220,
	223, 227, 228, 230, 233, 245, 247, 248, 249, 250,
	266, 267, 270, 271, 274, 275, 278, 279, 280, 282,
	283, 289, 0, 295, 301, 302, 303, 304, 305, 312,
	313, 314, 315, 322, 338, 339, 352, 353, 0, 0,
	156, 0, 0, 162, 0, 0, 0, 0, 0, 0,
	161, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 155, 0, 0, 0, 269, 0, 0, 0, 158,
	0, 0, 0, 192, 0, 298, 0, 344, 0, 0,
	297, 241, 337, 0, 0, 343, 0, 327, 351, 355,
	209, 0, 183, 317, 201, 198, 0, 0, 0, 217,
	287, 195, 234, 0, 0, 0, 188, 0, 0, 0,
	316, 334, 160, 255, 335, 354, 175, 329, 256, 262,
	185, 187, 186, 171, 311, 333, 180, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 218, 0,
	0, 348, 0, 307, 306, 0, 225, 0, 3281, 0,
	294, 0, 232, 163, 0, 357, 174, 236, 330, 0,
	212, 268, 194, 0, 277, 0, 157, 290, 252, 253,
	251, 254, 215, 0, 0, 0, 292, 309, 332, 176,
	323, 0, 0, 0, 0, 300, 0, 0, 0, 246,
	205, 208, 219, 229, 0, 296, 324, 349, 0, 172,
	165, 326, 342, 181, 308, 310, 356, 0, 167, 0,
	0, 0, 0, 0, 0, 0, 166, 0, 0, 0,
	0, 0, 0, 214, 0, 340, 341, 193, 358, 0,
	0, 168, 0, 0, 265, 272, 264, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 207, 221,
	285, 243, 286, 222, 260, 259, 261, 244, 0, 0,
	164, 0, 321, 0, 0, 325, 178, 0, 0, 331,
	291, 179, 213, 206, 284, 263, 173, 224, 319, 235,
	242, 328, 0, 276, 299, 182, 346, 318, 202, 0,
	0, 0, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 0, 0, 0, 0, 0, 0, 0, 199,
	191, 0, 0, 0, 0, 189, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 350, 320, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 925, 159, 169, 239,
	0, 293, 211, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 203, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2386, 345, 0, 0, 0, 0,
	288, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 347, 197, 0, 0, 0, 170, 177, 184,
	196, 204, 210, 220, 223, 227, 228, 230, 233, 245,
	247, 248, 249, 250, 266, 267, 270, 271, 274, 275,
	278, 279, 280, 282, 283, 289, 0, 295, 301, 302,
	303, 304, 305, 312, 313, 314, 315, 322, 338, 339,
	352, 353, 0, 0, 156, 0, 0, 162, 0, 0,
	0, 258, 0, 0, 161, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 155, 0, 0,
	0, 269, 0, 0, 0, 158, 0, 0, 0, 192,
	0, 298, 0, 344, 0, 0, 297, 241, 337, 0,
	0, 343, 0, 327, 351, 355, 209, 0, 183, 317,
	201, 198, 0, 0, 0, 217, 287, 195, 234, 2387,
	2388, 0, 188, 0, 0, 0, 316, 334, 160, 255,
	335, 354, 175, 329, 256, 262, 185, 187, 186, 171,
	311, 333, 180, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 218, 0, 0, 348, 0, 307,
	306, 0, 225, 0, 0, 0, 294, 0, 232, 163,
	0, 357, 174, 236, 330, 0, 212, 268, 194, 0,
	277, 0, 157, 290, 252, 253, 251, 254, 215, 0,
	0, 0, 292, 309, 332, 176, 323, 0, 0, 0,
	0, 300, 0, 0, 0, 246, 205, 208, 219, 229,
	0, 296, 324, 349, 0, 172, 165, 326, 342, 181,
	308, 310, 356, 0, 167, 0, 0, 0, 0, 0,
	0, 0, 166, 0, 0, 0, 0, 0, 0, 214,
	0, 340, 341, 193, 358, 0, 0, 168, 0, 0,
	265, 272, 264, 0, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 207, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 0, 0, 164, 0, 321, 0,
	0, 325, 178, 0, 0, 331, 291, 179, 213, 206,
	284, 263, 173, 224, 319, 235, 242, 0, 0, 276,
	299, 182, 346, 318, 202, 328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 0, 0, 0, 0,
	0, 189, 0, 199, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 350,
	320, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 159, 169, 239, 0, 293, 211, 0,
	437, 0, 436, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 203, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	0, 0, 0, 0, 288, 216, 0, 0, 347, 197,
	0, 0, 0, 170, 177, 184, 196, 204, 210, 220,
	223, 227, 228, 230, 233, 245, 247, 248, 249, 250,
	266, 267, 270, 271, 274, 275, 278, 279, 280, 282,
	283, 289, 0, 295, 301, 302, 303, 304, 305, 312,
	313, 314, 315, 322, 338, 339, 352, 353, 0, 0,
	156, 0, 0, 162, 0, 0, 0, 0, 0, 0,
	161, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 155, 0, 0, 0, 269, 0, 0, 0, 158,
	0, 0, 0, 192, 0, 298, 0, 344, 0, 0,
	297, 241, 337, 0, 0, 343, 0, 327, 351, 355,
	209, 0, 183, 317, 201, 198, 0, 0, 0, 217,
	287, 195, 234, 0, 0, 0, 188, 0, 0, 0,
	316, 334, 160, 255, 335, 354, 175, 329, 256, 262,
	185, 187, 186, 171, 311, 333, 180, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 218, 0,
	0, 348, 0, 307, 306, 0, 225, 0, 0, 0,
	294, 0, 232, 163, 0, 357, 174, 236, 330, 0,
	212, 268, 194, 0, 277, 0, 157, 290, 252, 253,
	251, 254, 215, 0, 0, 0, 292, 309, 332, 176,
	323, 0, 0, 0, 0, 300, 0, 0, 0, 246,
	205, 208, 219, 229, 0, 296, 324, 349, 0, 172,
	165, 326, 342, 181, 308, 310, 356, 0, 167, 0,
	0, 0, 0, 0, 0, 0, 166, 0, 0, 0,
	0, 0, 0, 214, 0, 340, 341, 193, 358, 0,
	0, 168, 0, 0, 265, 272, 264, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 207, 221,
	285, 243, 286, 222, 260, 259, 261, 244, 0, 0,
	164, 0, 321, 0, 0, 325, 178, 0, 0, 331,
	291, 179, 213, 206, 284, 263, 173, 224, 319, 235,
	242, 0, 0, 276, 299, 182, 346, 318, 202, 328,
	0, 0, 1708, 0, 0, 0, 0, 0, 0, 0,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	1288, 0, 0, 0, 0, 189, 0, 199, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 350, 320, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 159, 169, 239,
	0, 293, 211, 0, 925, 0, 1287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 203, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 0, 0, 0, 288, 216,
	0, 0, 347, 197, 0, 0, 0, 170, 177, 184,
	196, 204, 210, 220, 223, 227, 228, 230, 233, 245,
	247, 248, 249, 250, 266, 267, 270, 271, 274, 275,
	278, 279, 280, 282, 283, 289, 0, 295, 301, 302,
	303, 304, 305, 312, 313, 314, 315, 322, 338, 339,
	352, 353, 0, 0, 156, 0, 0, 162, 0, 0,
	0, 0, 0, 0, 161, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 155, 0, 0, 0, 269,
	0, 0, 0, 158, 0, 0, 0, 192, 0, 298,
	0, 344, 0, 0, 297, 241, 337, 0, 0, 343,
	0, 327, 351, 355, 209, 0, 183, 317, 201, 198,
	0, 0, 0, 217, 287, 195, 234, 0, 0, 0,
	188, 0, 0, 0, 316, 334, 160, 255, 335, 354,
	175, 329, 256, 262, 185, 187, 186, 171, 311, 333,
	180, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 218, 0, 0, 348, 0, 307, 306, 0,
	225, 0, 0, 0, 294, 0, 232, 163, 0, 357,
	174, 236, 330, 0, 212, 268, 194, 0, 277, 0,
	157, 290, 252, 253, 251, 254, 215, 0, 0, 0,
	292, 309, 332, 176, 323, 0, 0, 0, 0, 300,
	0, 0, 0, 246, 205, 208, 219, 229, 0, 296,
	324, 349, 0, 172, 165, 326, 342, 181, 308, 310,
	356, 0, 167, 0, 0, 0, 0, 0, 0, 0,
	166, 0, 0, 0, 0, 0, 0, 214, 0, 340,
	341, 193, 358, 0, 0, 168, 0, 0, 265, 272,
	264, 0, 336, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 207, 221, 285, 243, 286, 222, 260, 259,
	261, 244, 0, 0, 164, 0, 321, 0, 0, 325,
	178, 0, 0, 331, 291, 179, 213, 206, 284, 263,
	173, 224, 319, 235, 242, 0, 0, 276, 299, 182,
	346, 318, 202, 328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 0, 0, 0, 0, 0, 189,
	0, 199, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 350, 320, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 159, 169, 239, 0, 293, 211, 0, 437, 0,
	436, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 203, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 0, 0,
	0, 0, 288, 216, 0, 0, 347, 197, 0, 0,
	0, 170, 177, 184, 196, 204, 210, 220, 223, 227,
	228, 230, 233, 245, 247, 248, 249, 250, 266, 267,
	270, 271, 274, 275, 278, 279, 280, 282, 283, 289,
	0, 295, 301, 302, 303, 304, 305, 312, 313, 314,
	315, 322, 338, 339, 352, 353, 0, 0, 156, 0,
	0, 162, 0, 0, 0, 0, 0, 0, 161, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 155,
	0, 0, 0, 269, 0, 0, 0, 158, 0, 0,
	0, 192, 0, 298, 0, 344, 0, 0, 297, 241,
	337, 0, 0, 343, 0, 327, 351, 355, 209, 0,
	183, 317, 201, 198, 0, 0, 0, 217, 287, 195,
	234, 0, 0, 0, 188, 0, 0, 0, 316, 334,
	160, 255, 335, 354, 175, 329, 256, 262, 185, 187,
	186, 171, 311, 333, 180, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 218, 0, 0, 348,
	0, 307, 306, 0, 225, 0, 0, 0, 294, 0,
	232, 163, 0, 357, 174, 236, 330, 0, 212, 268,
	194, 0, 277, 0, 157, 290, 252, 253, 251, 254,
	215, 0, 0, 0, 292, 309, 332, 176, 323, 0,
	0, 0, 0, 300, 0, 0, 0, 246, 205, 208,
	219, 229, 0, 296, 324, 349, 0, 172, 165, 326,
	342, 181, 308, 310, 356, 0, 167, 0, 0, 0,
	0, 0, 0, 0, 166, 0, 0, 0, 0, 0,
	0, 214, 0, 340, 341, 193, 358, 0, 0, 168,
	0, 0, 265, 272, 264, 0, 336, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 207, 221, 285, 243,
	286, 222, 260, 259, 261, 244, 0, 0, 164, 0,
	321, 0, 0, 325, 178, 0, 0, 331, 291, 179,
	213, 206, 284, 263, 173, 224, 319, 235, 242, 328,
	0, 276, 299, 182, 346, 318, 202, 0, 0, 0,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	0, 0, 0, 0, 0, 0, 0, 199, 191, 0,
	0, 0, 0, 189, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 350, 320, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2681, 0, 0, 281, 2683, 159, 169, 239, 0, 293,
	211, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 203, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 0, 0, 0, 288, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	347, 197, 0, 0, 0, 170, 177, 184, 196, 204,
	210, 220, 223, 227, 228, 230, 233, 245, 247, 248,
	249, 250, 266, 267, 270, 271, 274, 275, 278, 279,
	280, 282, 283, 289, 0, 295, 301, 302, 303, 304,
	305, 312, 313, 314, 315, 322, 338, 339, 352, 353,
	0, 0, 156, 0, 0, 162, 0, 0, 0, 258,
	0, 0, 161, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 155, 0, 0, 0, 269,
	0, 0, 0, 158, 0, 0, 0, 192, 0, 298,
	0, 344, 0, 0, 297, 241, 337, 0, 0, 343,
	0, 327, 351, 355, 209, 0, 183, 317, 201, 198,
	0, 0, 0, 217, 287, 195, 234, 0, 0, 0,
	188, 0, 0, 0, 316, 334, 160, 255, 335, 354,
	175, 329, 256, 262, 185, 187, 186, 171, 311, 333,
	180, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 218, 0, 0, 348, 0, 307, 306, 0,
	225, 0, 0, 0, 294, 0, 232, 163, 0, 357,
	174, 236, 330, 0, 212, 268, 194, 0, 277, 0,
	157, 290, 252, 253, 251, 254, 215, 0, 0, 0,
	292, 309, 332, 176, 323, 0, 0, 0, 0, 300,
	0, 0, 0, 246, 205, 208, 219, 229, 0, 296,
	324, 349, 0, 172, 165, 326, 342, 181, 308, 310,
	356, 0, 167, 0, 0, 0, 0, 0, 0, 0,
	166, 0, 0, 0, 0, 0, 0, 214, 0, 340,
	341, 193, 358, 0, 0, 168, 0, 0, 265, 272,
	264, 0, 336, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 207, 221, 285, 243, 286, 222, 260, 259,
	261, 244, 0, 0, 164, 0, 321, 0, 0, 325,
	178, 0, 0, 331, 291, 179, 213, 206, 284, 263,
	173, 224, 319, 235, 242, 328, 0, 276, 299, 182,
	346, 318, 202, 0, 0, 0, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 0, 0, 0, 0,
	0, 0, 0, 199, 191, 0, 0, 0, 0, 189,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 350,
	320, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	925, 159, 169, 239, 0, 293, 211, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 203, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	0, 0, 0, 0, 288, 216, 0, 0, 0, 0,
	0, 0, 0, 2668, 0, 0, 347, 197, 0, 0,
	0, 170, 177, 184, 196, 204, 210, 220, 223, 227,
	228, 230, 233, 245, 247, 248, 249, 250, 266, 267,
	270, 271, 274, 275, 278, 279, 280, 282, 283, 289,
	0, 295, 301, 302, 303, 304, 305, 312, 313, 314,
	315, 322, 338, 339, 352, 353, 0, 0, 156, 0,
	0, 162, 0, 0, 0, 258, 0, 0, 161, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 155, 0, 0, 0, 269, 0, 0, 0, 158,
	0, 0, 0, 192, 0, 298, 0, 344, 0, 0,
	297, 241, 337, 0, 0, 343, 0, 327, 351, 355,
	209, 0, 183, 317, 201, 198, 0, 0, 0, 217,
	287, 195, 234, 0, 0, 0, 188, 0, 0, 0,
	316, 334, 160, 255, 335, 354, 175, 329, 256, 262,
	185, 187, 186, 171, 311, 333, 180, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 218, 0,
	0, 348, 0, 307, 306, 0, 225, 0, 0, 0,
	294, 0, 232, 163, 0, 357, 174, 236, 330, 0,
	212, 268, 194, 0, 277, 0, 157, 290, 252, 253,
	251, 254, 215, 0, 0, 0, 292, 309, 332, 176,
	323, 0, 0, 0, 0, 300, 0, 0, 0, 246,
	205, 208, 219, 229, 0, 296, 324, 349, 0, 172,
	165, 326, 342, 181, 308, 310, 356, 0, 167, 0,
	0, 0, 0, 0, 0, 0, 166, 0, 0, 0,
	0, 0, 0, 214, 0, 340, 341, 193, 358, 0,
	0, 168, 0, 0, 265, 272, 264, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 207, 221,
	285, 243, 286, 222, 260, 259, 261, 244, 0, 0,
	164, 0, 321, 0, 0, 325, 178, 0, 0, 331,
	291, 179, 213, 206, 284, 263, 173, 224, 319, 235,
	242, 328, 0, 276, 299, 182, 346, 318, 202, 0,
	0, 0, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 0, 0, 0, 0, 0, 0, 0, 199,
	191, 0, 0, 0, 0, 189, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 350, 320, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 77, 0, 0, 281, 925, 159, 169, 239,
	0, 293, 211, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 203, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 0, 0, 0,
	288, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 347, 197, 0, 0, 0, 170, 177, 184,
	196, 204, 210, 220, 223, 227, 228, 230, 233, 245,
	247, 248, 249, 250, 266, 267, 270, 271, 274, 275,
	278, 279, 280, 282, 283, 289, 0, 295, 301, 302,
	303, 304, 305, 312, 313, 314, 315, 322, 338, 339,
	352, 353, 0, 0, 156, 0, 0, 162, 0, 0,
	0, 258, 0, 0, 161, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 155, 0, 0,
	0, 269, 0, 0, 0, 158, 0, 0, 0, 192,
	0, 298, 0, 344, 0, 0, 297, 241, 337, 0,
	0, 343, 0, 327, 351, 355, 209, 0, 183, 317,
	201, 198, 0, 0, 0, 217, 287, 195, 234, 0,
	0, 0, 188, 0, 0, 0, 316, 334, 160, 255,
	335, 354, 175, 329, 256, 262, 185, 187, 186, 171,
	311, 333, 180, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 218, 0, 0, 348, 0, 307,
	306, 0, 225, 0, 0, 0, 294, 0, 232, 163,
	0, 357, 174, 236, 330, 0, 212, 268, 194, 0,
	277, 0, 157, 290, 252, 253, 251, 254, 215, 0,
	0, 0, 292, 309, 332, 176, 323, 0, 0, 0,
	0, 300, 0, 0, 0, 246, 205, 208, 219, 229,
	0, 296, 324, 349, 0, 172, 165, 326, 342, 181,
	308, 310, 356, 0, 167, 0, 0, 0, 0, 0,
	0, 0, 166, 0, 0, 0, 0, 0, 0, 214,
	0, 340, 341, 193, 358, 0, 0, 168, 0, 0,
	265, 272, 264, 0, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 207, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 0, 0, 164, 0, 321, 0,
	0, 325, 178, 0, 0, 331, 291, 179, 213, 206,
	284, 263, 173, 224, 319, 235, 242, 328, 0, 276,
	299, 182, 346, 318, 202, 0, 0, 0, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 0, 0,
	0, 0, 0, 0, 0, 199, 191, 0, 0, 0,
	0, 189, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 350, 320, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 925, 159, 169, 239, 0, 293, 211, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 203,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 0, 0, 0, 288, 216, 0, 0,
	0, 0, 0, 0, 0, 2117, 0, 0, 347, 197,
	0, 0, 0, 170, 177, 184, 196, 204, 210, 220,
	223, 227, 228, 230, 233, 245, 247, 248, 249, 250,
	266, 267, 270, 271, 274, 275, 278, 279, 280, 282,
	283, 289, 0, 295, 301, 302, 303, 304, 305, 312,
	313, 314, 315, 322, 338, 339, 352, 353, 0, 0,
	156, 0, 0, 162, 0, 0, 0, 258, 0, 0,
	161, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 155, 0, 0, 0, 269, 0, 0,
	0, 158, 0, 0, 0, 192, 0, 298, 0, 344,
	0, 0, 297, 241, 337, 0, 0, 343, 0, 327,
	351, 355, 209, 0, 183, 317, 201, 198, 0, 0,
	0, 217, 287, 195, 234, 0, 0, 0, 188, 0,
	0, 0, 316, 334, 160, 255, 335, 354, 175, 329,
	256, 262, 185, 187, 186, 171, 311, 333, 180, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	218, 0, 0, 348, 0, 307, 306, 0, 225, 0,
	0, 0, 294, 0, 232, 163, 0, 357, 174, 236,
	330, 0, 212, 268, 194, 0, 277, 0, 157, 290,
	252, 253, 251, 254, 215, 0, 0, 0, 292, 309,
	332, 176, 323, 0, 0, 0, 0, 300, 0, 0,
	0, 246, 205, 208, 219, 229, 0, 296, 324, 349,
	0, 172, 165, 326, 342, 181, 308, 310, 356, 0,
	167, 0, 0, 0, 0, 0, 0, 0, 166, 0,
	0, 0, 0, 0, 0, 214, 0, 340, 341, 193,
	358, 0, 0, 168, 0, 0, 265, 272, 264, 0,
	336, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	207, 221, 285, 243, 286, 222, 260, 259, 261, 244,
	0, 0, 164, 0, 321, 0, 0, 325, 178, 0,
	0, 331, 291, 179, 213, 206, 284, 263, 173, 224,
	319, 235, 242, 328, 0, 276, 299, 182, 346, 318,
	202, 0, 0, 0, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 0, 0, 0, 0, 0, 0,
	2154, 2155, 191, 0, 0, 0, 0, 189, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 350, 320, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 925, 159,
	169, 239, 0, 293, 211, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 203, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 0, 0,
	0, 0, 288, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 197, 0, 0, 0, 170,
	177, 184, 196, 204, 210, 220, 223, 227, 228, 230,
	233, 245, 247, 248, 249, 250, 266, 267, 270, 271,
	274, 275, 278, 279, 280, 282, 283, 289, 0, 295,
	301, 302, 303, 304, 305, 312, 313, 314, 315, 322,
	338, 339, 352, 353, 0, 0, 156, 0, 0, 162,
	0, 0, 0, 258, 0, 0, 161, 0, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 155,
	0, 0, 0, 269, 0, 0, 0, 158, 0, 0,
	0, 192, 0, 298, 0, 344, 0, 0, 297, 241,
	337, 0, 0, 343, 0, 327, 351, 355, 209, 0,
	183, 317, 201, 198, 0, 0, 0, 217, 287, 195,
	234, 0, 0, 0, 188, 0, 0, 0, 316, 334,
	160, 255, 335, 354, 175, 329, 256, 262, 185, 187,
	186, 171, 311, 333, 180, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 218, 0, 0, 348,
	0, 307, 306, 0, 225, 0, 0, 0, 294, 0,
	232, 163, 0, 357, 174, 236, 330, 0, 212, 268,
	194, 0, 277, 0, 157, 290, 252, 253, 251, 254,
	215, 0, 0, 0, 292, 309, 332, 176, 323, 0,
	0, 0, 0, 300, 0, 0, 0, 246, 205, 208,
	219, 229, 0, 296, 324, 349, 0, 172, 165, 326,
	342, 181, 308, 310, 356, 0, 167, 0, 0, 0,
	0, 0, 0, 0, 166, 0, 0, 0, 0, 0,
	0, 214, 0, 340, 341, 193, 358, 0, 0, 168,
	0, 0, 265, 272, 264, 0, 336, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 207, 221, 285, 243,
	286, 222, 260, 259, 261, 244, 0, 0, 164, 0,
	321, 0, 0, 325, 178, 0, 0, 331, 291, 179,
	213, 206, 284, 263, 173, 224, 319, 235, 242, 328,
	0, 276, 299, 182, 346, 318, 202, 0, 0, 0,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	0, 0, 0, 0, 0, 0, 0, 199, 191, 0,
	0, 0, 0, 189, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 350, 320, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 925, 159, 169, 239, 0, 293,
	211, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 203, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 0, 0, 0, 288, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	347, 197, 0, 0, 0, 170, 177, 184, 196, 204,
	210, 220, 223, 227, 228, 230, 233, 245, 247, 248,
	249, 250, 266, 267, 270, 271, 274, 275, 278, 279,
	280, 282, 283, 289, 0, 295, 301, 302, 303, 304,
	305, 312, 313, 314, 315, 322, 338, 339, 352, 353,
	0, 0, 156, 0, 0, 162, 0, 0, 0, 258,
	0, 0, 161, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 155, 0, 0, 0, 269,
	0, 0, 0, 158, 0, 0, 0, 192, 0, 298,
	0, 344, 0, 0, 297, 241, 337, 0, 0, 343,
	0, 327, 351, 355, 209, 0, 183, 317, 201, 198,
	0, 0, 0, 217, 287, 195, 234, 0, 0, 0,
	188, 0, 0, 0, 316, 334, 160, 255, 335, 354,
	175, 329, 256, 262, 185, 187, 186, 171, 311, 333,
	180, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 218, 0, 0, 348, 0, 307, 306, 0,
	225, 0, 0, 0, 294, 0, 232, 163, 0, 357,
	174, 236, 330, 0, 212, 268, 194, 0, 277, 0,
	157, 290, 252, 253, 251, 254, 215, 0, 0, 0,
	292, 309, 332, 176, 323, 0, 0, 0, 0, 300,
	0, 0, 0, 246, 205, 208, 219, 229, 0, 296,
	324, 349, 0, 172, 165, 326, 342, 181, 308, 310,
	356, 0, 167, 0, 0, 0, 0, 0, 0, 0,
	166, 0, 0, 0, 0, 0, 0, 214, 0, 340,
	341, 193, 358, 0, 0, 168, 0, 0, 265, 272,
	264, 0, 336, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 207, 221, 285, 243, 286, 222, 260, 259,
	261, 244, 0, 0, 164, 0, 321, 0, 0, 325,
	178, 0, 0, 331, 291, 179, 213, 206, 284, 263,
	173, 224, 319, 235, 242, 328, 0, 276, 299, 182,
	346, 318, 202, 0, 0, 0, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 0, 0, 0, 0,
	0, 0, 0, 199, 191, 0, 0, 0, 0, 189,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 350,
	320, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	2683, 159, 169, 239, 0, 293, 211, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 203, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	0, 0, 0, 0, 288, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 347, 197, 0, 0,
	0, 170, 177, 184, 196, 204, 210, 220, 223, 227,
	228, 230, 233, 245, 247, 248, 249, 250, 266, 267,
	270, 271, 274, 275, 278, 279, 280, 282, 283, 289,
	0, 295, 301, 302, 303, 304, 305, 312, 313, 314,
	315, 322, 338, 339, 352, 353, 0, 0, 156, 0,
	0, 162, 0, 0, 0, 258, 0, 0, 161, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 155, 0, 0, 0, 269, 0, 0, 0, 158,
	0, 0, 0, 192, 0, 298, 0, 344, 0, 0,
	297, 241, 337, 0, 0, 343, 0, 327, 351, 355,
	209, 0, 183, 317, 201, 198, 0, 0, 0, 217,
	287, 195, 234, 0, 0, 0, 188, 0, 0, 0,
	316, 334, 160, 255, 335, 354, 175, 329, 256, 262,
	185, 187, 186, 171, 311, 333, 180, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 218, 0,
	0, 348, 0, 307, 306, 0, 225, 0, 0, 0,
	294, 0, 232, 163, 0, 357, 174, 236, 330, 0,
	212, 268, 194, 0, 277, 0, 157, 290, 252, 253,
	251, 254, 215, 0, 0, 0, 292, 309, 332, 176,
	323, 0, 0, 0, 0, 300, 0, 0, 0, 246,
	205, 208, 219, 229, 0, 296, 324, 349, 0, 172,
	165, 326, 342, 181, 308, 310, 356, 0, 167, 0,
	0, 0, 0, 0, 0, 0, 166, 0, 0, 0,
	0, 0, 0, 214, 0, 340, 341, 193, 358, 0,
	0, 168, 0, 0, 265, 272, 264, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 207, 221,
	285, 243, 286, 222, 260, 259, 261, 244, 0, 0,
	164, 0, 321, 0, 0, 325, 178, 0, 0, 331,
	291, 179, 213, 206, 284, 263, 173, 224, 319, 235,
	242, 328, 0, 276, 299, 182, 346, 318, 202, 0,
	0, 0, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 0, 0, 0, 0, 0, 0, 0, 199,
	191, 0, 0, 0, 0, 189, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 350, 320, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 129, 159, 169, 239,
	0, 293, 211, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 203, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 0, 0, 0,
	288, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 347, 197, 0, 0, 0, 170, 177, 184,
	196, 204, 210, 220, 223, 227, 228, 230, 233, 245,
	247, 248, 249, 250, 266, 267, 270, 271, 274, 275,
	278, 279, 280, 282, 283, 289, 0, 295, 301, 302,
	303, 304, 305, 312, 313, 314, 315, 322, 338, 339,
	352, 353, 0, 0, 156, 0, 0, 162, 0, 0,
	0, 258, 0, 0, 161, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 155, 0, 0,
	0, 269, 0, 0, 0, 158, 0, 0, 0, 192,
	0, 298, 0, 344, 0, 0, 297, 241, 337, 0,
	0, 343, 0, 327, 351, 355, 209, 0, 183, 317,
	201, 198, 0, 0, 0, 217, 287, 195, 234, 0,
	0, 0, 188, 0, 0, 0, 316, 334, 160, 255,
	335, 354, 175, 329, 256, 262, 185, 187, 186, 171,
	311, 333, 180, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 218, 0, 0, 348, 0, 307,
	306, 0, 225, 0, 0, 0, 294, 0, 232, 163,
	0, 357, 174, 236, 330, 0, 212, 268, 194, 0,
	277, 0, 157, 290, 252, 253, 251, 254, 215, 0,
	0, 0, 292, 309, 332, 176, 323, 0, 0, 0,
	0, 300, 0, 0, 0, 246, 205, 208, 219, 229,
	0, 296, 324, 349, 0, 172, 165, 326, 342, 181,
	308, 310, 356, 0, 167, 0, 0, 0, 0, 0,
	0, 0, 166, 0, 0, 0, 0, 0, 0, 214,
	0, 340, 341, 193, 358, 0, 0, 168, 0, 0,
	265, 272, 264, 0, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 207, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 0, 0, 164, 0, 321, 0,
	0, 325, 178, 0, 0, 331, 291, 179, 213, 206,
	284, 263, 173, 224, 319, 235, 242, 328, 0, 276,
	299, 182, 346, 318, 202, 0, 0, 0, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 0, 0,
	0, 0, 0, 0, 0, 199, 191, 0, 0, 0,
	0, 189, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 350, 320, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 478, 159, 169, 239, 0, 293, 211, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 203,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 0, 0, 0, 288, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 347, 197,
	0, 0, 0, 170, 177, 184, 196, 204, 210, 220,
	223, 227, 228, 230, 233, 245, 247, 248, 249, 250,
	266, 267, 270, 271, 274, 275, 278, 279, 280, 282,
	283, 289, 0, 295, 301, 302, 303, 304, 305, 312,
	313, 314, 315, 322, 338, 339, 352, 353, 0, 0,
	156, 0, 0, 162, 0, 0, 0, 258, 0, 0,
	161, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 155, 0, 0, 0, 269, 0, 0,
	0, 158, 0, 0, 0, 192, 0, 298, 0, 344,
	0, 0, 297, 241, 337, 0, 0, 343, 0, 327,
	351, 355, 209, 0, 183, 317, 201, 198, 0, 0,
	0, 217, 287, 195, 234, 0, 0, 0, 188, 0,
	0, 0, 316, 334, 160, 255, 335, 354, 175, 329,
	256, 262, 185, 187, 186, 171, 311, 333, 180, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	218, 0, 0, 348, 0, 307, 306, 0, 225, 0,
	0, 0, 294, 0, 232, 163, 0, 357, 174, 236,
	330, 0, 212, 268, 194, 0, 277, 0, 157, 290,
	252, 253, 251, 254, 215, 0, 0, 0, 292, 309,
	332, 176, 323, 0, 0, 0, 0, 300, 0, 0,
	0, 246, 205, 208, 219, 229, 0, 296, 324, 349,
	0, 172, 165, 326, 342, 181, 308, 310, 356, 0,
	167, 0, 0, 0, 0, 0, 0, 0, 166, 0,
	0, 0, 0, 0, 0, 214, 0, 340, 341, 193,
	358, 0, 0, 168, 0, 0, 265, 272, 264, 0,
	336, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	207, 221, 285, 243, 286, 222, 260, 259, 261, 244,
	0, 0, 164, 0, 321, 0, 0, 325, 178, 0,
	0, 331, 291, 179, 213, 206, 284, 263, 173, 224,
	319, 235, 242, 0, 0, 276, 299, 182, 346, 318,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 159,
	169, 239, 0, 293, 211, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 197, 0, 0, 0, 170,
	177, 184, 196, 204, 210, 220, 223, 227, 228, 230,
	233, 245, 247, 248, 249, 250, 266, 267, 270, 271,
	274, 275, 278, 279, 280, 282, 283, 289, 0, 295,
	301, 302, 303, 304, 305, 312, 313, 314, 315, 322,
	338, 339, 352, 353, 0, 0, 156, 0, 0, 162,
	0, 0, 0, 0, 0, 0, 161,
}

var yyPact = [...]int{
	1459, -1000, -420, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2050, -1000, -1000, 275, -1000,
	1212, 258, -1000, 259, 203, 31630, 678, 3632, 42394, -1000,
	-1000, -1000, 175, 547, 32054, 402, 476, 1510, 1952, 1507,
	15, -81, -82, 129, 33074, 32648, 0, -1000, 35103, 592,
	20, -1000, -1000, -1000, -1000, 2109, 212, -1000, -1000, 2017,
	2048, 1876, -1000, 7257, -1000, -1000, -1000, -1000, -1000, 20589,
	-1000, 2103, 32054, 27484, -1000, 627, 619, -194, 586, 586,
	308, 586, 586, 663, -1000, 255, 1094, -1000, -1000, -1000,
	-1000, 1057, 32054, 39066, 589, 41562, 589, 589, 589, 589,
	589, 589, 589, 32054, -1000, 796, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 32054,
	1505, 1979, 1050, 218, -1000, -1000, -1000, 1102, -1000, 327,
	321, 331, 317, 118, 1121, 2037, -1000, 1796, 2017, 2017,
	-1000, -1000, -1000, -1000, -1000, -1000, 858, 307, 615, 213,
	212, 1053, 2006, 1978, 1977, 1387, 1975, 581, 1972, 1826,
	-57, -1000, 1504, 32054, -1000, -1000, 1331, 1326, 348, 1718,
	785, 1848, -1000, -1000, 315, 702, 1819, 373, 1819, 1819,
	1819, 1819, 1819, -85, 1819, 1819, 1819, 59, 1819, 138,
	1819, 1819, 1819, 1819, 1819, 1460, -1000, -1000, -1000, 353,
	1712, 1771, 1847, 499, -1000, -1000, -1000, 1849, 36538, 1787,
	-1000, 1796, -1000, -1000, -1000, 639, -1000, -155, 1849, 2018,
	1470, -1000, 35103, 1973, 1276, 13317, 1921, -1000, -1000, 1193,
	2079, -1000, 27060, 794, -1000, 13317, 1594, 1796, -1000, -1000,
	1796, -1000, 693, 808, -1000, 703, 738, -1000, -1000, 12711,
	12711, 12711, 12711, 12711, 12711, 12711, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1796, 793, 789, 1796, 1796, 1796, 1796, 1796,
	-1000, 11499, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1796, 1796, 1796, 1796, 1796, 1796,
	1796, 1796, 1796, 1796, 1796, 1796, 1796, 1796, 13317, 1796,
	1796, 1796, 1796, 1796, 1796, 1796, 1796, 1796, 1796, 1796,
	1796, 1796, 1796, 1796, 1796, 1796, 1796, 1796, 1796, 1796,
	1796, 1796, 1796, 1796, 1796, 1796, 1796, 1796, 1796, 1796,
	1796, 1796, 1796, 1796, 1796, 1796, 1796, 1796, 1796, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	592, 592, 31206, 1794, -160, 19983, -1000, -1000, -1000, -1000,
	18771, 38642, 1034, -1000, -1000, -1000, -1000, 1971, -1000, -1000,
	788, 738, 693, 691, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2050, -1000, -1000, 1690, 571, -1000, 550, 550,
	550, 550, 550, 295, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1825, 41562, 32054, 236, 1503, 1116, 1502,
	42810, 42810, -1000, 224, 39066, 39066, 586, 241, 39066, 251,
	1793, 611, 1792, 610, 1441, 32054, 1995, 1846, 32054, 1500,
	1485, 42810, 42810, 39066, 39066, -1000, 26043, 1791, -1000, -1000,
	1050, -1000, 6177, 13317, 586, 586, 32054, 32054, 32054, 32054,
	32054, -1000, -1000, 1050, 1050, 1050, 1050, 1055, 2078, 1055,
	-1000, 1055, -1000, -1000, 13317, -1000, 12711, 38218, 895, -1000,
	-1000, 42394, -1000, 1483, 305, -1000, -1000, -1000, -1000, -1000,
	-1000, 1482, -1000, 1956, 581, 581, -1000, 1434, 581, 1782,
	-1000, 1031, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 581, -1000, 12105, -398, -1000, -1000,
	1789, -1000, 256, -1000, -1000, 487, 1844, 487, 313, 39066,
	39066, 39066, -1000, 1819, 41562, -1000, 1819, 1819, 1819, -112,
	1819, 1819, -1000, -1000, 1819, -1000, -1000, -1000, -1000, -1000,
	1819, -1000, -1000, -1000, 1819, 1819, -1000, 1819, 1819, -1000,
	-1000, -1000, -1000, -1000, 39066, 487, 147, 1788, 487, 39066,
	39066, -1000, 44, 43, 42, 41, -1000, -1000, -1000, -1000,
	40, 39, -1000, -1000, -1000, 1787, 36538, 2015, 15741, 32054,
	-108, -1000, -1000, 212, -1000, -1000, -1000, -1000, 1849, 1163,
	2099, 896, 1762, -1000, -1000, 1784, -1000, 1283, 729, 1316,
	1887, -1000, -1000, -1000, 32054, -1000, 13317, 13317, 13317, 1243,
	-1000, 27908, -1000, -1000, -1000, -1000, -1000, -1000, 16953, 953,
	12711, 1253, 1161, 12711, 12711, 12711, 12711, 12711, 12711, 12711,
	12711, 12711, 12711, 12711, 12711, 12711, 12711, 12711, 1324, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1479, -1000, 212,
	24831, 8469, 24831, 1658, 1658, 41562, 823, 823, 823, 823,
	823, 823, 33661, 2011, 24225, 24831, 2011, 2011, 2011, 2011,
	2011, 1470, 1682, 1066, 35103, 11499, 8469, 8469, 8469, 1470,
	13317, 13317, 8469, 8469, 10893, 10287, 14529, 8469, 8469, 2011,
	1105, 1066, 18771, 8469, -1000, -1000, 9681, -1000, -1000, -1000,
	-1000, -1000, 1470, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 41562, 41562, 8469, 8469, 8469, 8469, 1470, 1470, 8469,
	8469, 8469, 8469, 8469, 1470, 1470, 1470, 1470, 8469, 8469,
	8469, 8469, 8469, 8469, 8469, 8469, 8469, 8469, 8469, 8469,
	30782, 29934, 32054, 1772, 1768, -1000, 721, 19377, 1777, -1000,
	-151, -110, -160, -1000, -1000, 847, -1000, -1000, -1000, 9075,
	-1000, 17559, 2017, 1876, 21801, 26636, -1000, -1000, -66, -1000,
	-1000, -1000, 1805, -1000, 1812, 280, -19, 1812, 1812, 1812,
	1812, 1812, -41, -41, -41, -41, -16, -1000, -1000, -1000,
	-1000, -1000, 1823, 1822, -1000, 1805, 1805, 1805, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1814, 281, 1810,
	1810, 1810, 1810, 1810, -1000, -1000, -1000, -1000, 484, 484,
	484, -1000, 13317, 1828, 2014, 618, 241, 1983, 1993, 1983,
	471, -1000, 719, 1820, -1000, 718, 283, 1767, -1000, 151,
	1707, 30358, -1000, -1000, -1000, -1000, -1000, 32054, 32054, 39066,
	39066, 39066, 616, -1000, 32054, 1783, -1000, -1000, -1000, -1000,
	-1000, 1734, -1000, 1707, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 32054, -1000, -1000, 1433, 1066, 1474, 1472,
	2006, -1000, -1000, -1000, 1087, -1000, -1000, -1000, -1000, 1050,
	42394, 42394, 32054, 2006, 1050, 1066, 737, 1830, 1796, 1470,
	-1000, -1000, -1000, 1467, -1000, 12711, 1782, 1782, -1000, 1782,
	581, 1658, 1782, -1000, 1680, 1160, 1432, 32054, -1000, 36538,
	-64, -1000, -174, 40730, -1000, -1000, -1000, 487, 40730, -1000,
	59, 159, -1000, 609, -1000, 1675, -1000, -1000, -1000, -1000,
	1819, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	40730, 95, 146, 40730, 1734, 2077, -1000, -1000, -1000, -1000,
	2035, -1000, -1000, 1796, 1607, -1000, 716, -1000, -1000, -1000,
	-1000, -1000, -1000, 558, -1000, -1000, 1470, -1000, 41146, -1000,
	1883, 1276, 1276, 13317, -1000, -1000, -1000, 17559, 2033, -1000,
	1908, 1905, 1865, -1000, -1000, 953, 1074, 1070, -1000, -1000,
	1198, -1000, -1000, -1000, -1000, -1000, 714, 1796, -1000, -1000,
	-1000, -1000, -1000, 3611, -1000, -1000, -1000, -1000, 1253, 12711,
	12711, 12711, 737, 3611, 3589, 1062, 1018, 823, 949, 949,
	967, 967, 967, 967, 967, 925, 925, -1000, -1000, -1000,
	1470, -1000, 1673, -1000, -1000, 1066, 712, -1000, -1000, -1000,
	-1000, -1000, -1000, 8469, -1000, -1000, -1000, 8469, 8469, 8469,
	8469, 8469, -1000, 13317, -1000, 1470, 1673, 1673, 1673, -1000,
	1170, 1288, 1468, 1673, 867, 2076, 1673, 864, 2075, 1673,
	1486, 12711, 12711, 12711, 1673, 1673, 8469, 1113, -1000, 13317,
	1470, 1673, -1000, 1501, 1781, 1779, 1673, 1470, 1778, 1673,
	1673, -211, -211, 1470, 1673, 1470, 1673, 1673, -211, -211,
	-211, -211, 1673, 1673, 1673, 1673, 1673, 1673, 1673, 1673,
	1673, 1673, 1673, 1673, 944, 32054, -1000, 1748, 1112, -1000,
	-1000, -1000, 2013, 29347, -1000, -1000, 34092, -1000, 1796, 1796,
	944, 1643, 29934, -1000, -1000, 29934, 42394, 23619, -1000, 18771,
	-160, -164, -1000, -1000, 1777, -1000, 1325, -1000, -1000, 1066,
	-1000, 711, 1973, 2011, 1775, 21195, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 571, -1000, -1000, -1000, 1817, 285, -1000,
	1928, 778, 778, 779, 1445, 1927, -1000, -1000, 150, -74,
	-1000, -1000, -1000, 1318, -41, 165, -41, 1812, 1812, 276,
	1812, -1000, -41, -1000, -1000, -1000, 955, 1968, 950, 935,
	931, 902, -41, 1429, 1429, -1000, -1000, -1000, -1000, 1317,
	-1000, 1814, -1000, 1314, -1000, -1000, -1000, -1000, 150, 150,
	150, 150, -1000, -1000, -1000, 1394, 1843, 41562, -1000, 32054,
	-1000, 1983, -1000, -1000, -1000, 119, -1000, -1000, -1000, 2066,
	-1000, -1000, 41562, 37794, 41562, -1000, -1000, 65, 39066, 157,
	382, 210, -1000, -1000, 608, -1000, 607, -1000, -1000, -1000,
	-1000, -1000, -1000, 32054, 39066, -1000, -1000, -1000, -1000, -1000,
	2056, 1462, 1461, -1000, -1000, -1000, 1055, 1050, -1000, -1000,
	12711, 39066, -1000, 322, -1000, 3611, -1000, -1000, -1000, 944,
	638, -1000, -1000, -87, -1000, -1000, 606, 708, 707, 40730,
	598, -1000, 68, 39066, -1000, 41562, -1000, 2073, 2072, 93,
	2069, 39066, -1000, 24, -1000, 207, -1000, 15741, 24831, 1774,
	-1000, 807, 827, 832, 489, 489, -1000, 1003, 489, 1962,
	1961, 929, -1000, 1773, 1428, 1426, -1000, 1881, -1000, -1000,
	-1000, 32054, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 23013, 8469, -1000, 737, 3611, 3326, -1000, 12711, -1000,
	8469, -1000, 16347, 1470, 1673, 1673, 1673, 1673, 1673, 1066,
	-1000, -1000, -1000, -1000, 417, 1324, 417, -1000, 1324, -1000,
	12711, 12711, -1000, 12711, 12711, -1000, -1000, 12711, 3532, 3491,
	1700, -255, -1000, 1678, 1097, -1000, 13317, 1403, -1000, -1000,
	-1000, 12711, 12711, -1000, -1000, -1000, -1000, -1000, 40314, -1000,
	-211, -211, -211, -211, -211, -1000, -1000, -1000, -1000, -211,
	-211, -211, -211, -211, -211, -211, -211, -211, -211, -211,
	-211, 201, 1796, -1000, 18165, 29934, 29934, 29934, 29934, 29934,
	-1000, 1873, 1872, -1000, 1863, 1860, 1859, 1043, 36538, 1669,
	1470, 306, 29347, -1000, 1796, -1000, 36114, 734, 624, 623,
	622, 8469, 12711, 2056, 29934, 1716, 1716, -1000, 706, -1000,
	-1000, -1000, -170, -161, -1000, -1000, -1000, 24831, -1000, 21801,
	-1000, 21801, -1000, 36954, 557, 1933, 569, 1445, 1445, 1445,
	-1000, 1445, -1000, -1000, -1000, 1813, -1000, 1172, -1000, -1000,
	-1000, -1000, -1000, 1796, -410, 1299, 12711, 2097, -1000, 1924,
	-1000, 1923, 1917, 1424, -1000, -1000, 1616, 894, 1609, 1599,
	881, -41, -1000, -1000, 1812, -1000, 868, -1000, -1000, 927,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 863, 1656,
	-1000, 1637, 1763, -1000, 1621, 108, 32054, -1000, -1000, 2007,
	-1000, -1000, -1000, 1966, 1003, 1003, 1003, 1841, -1000, -1000,
	-1000, -1000, 1588, 1742, -1000, 550, 41562, 41562, 41562, -1000,
	-269, 164, -1000, 39066, 126, 151, 425, 1458, 32054, 39066,
	-1000, -1000, -1000, 13317, -1000, -1000, 2006, -1000, 3611, 1707,
	-1000, -1000, -41, 32054, -1000, 39066, 886, 39898, 596, 39066,
	90, 152, -1000, 39066, 39066, 2068, 39066, 1734, 1421, -1000,
	-1000, 558, 39482, 1445, 674, -1000, -1000, 491, -1000, 248,
	1457, 28756, 28332, 41562, 1916, 1915, 1456, 32054, 41562, -1000,
	-1000, 41978, 1453, 13317, -1000, 41562, -1000, -1000, 41562, 41562,
	-1000, -1000, -1000, -1000, 1248, 7257, -1000, -1000, 1470, -1000,
	12711, 3611, -1000, -1000, 701, -1000, -211, -211, -211, -211,
	-211, 1470, 1805, 1805, -1000, 1805, 1810, -1000, 1805, 5,
	1805, 4, 1470, 1470, 1470, 3086, 2670, 2360, 1219, 1501,
	12711, 12711, 12711, 1796, -205, -1000, 1066, 13317, 2904, 2619,
	-1000, -1000, 1452, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1840, 18165, 1796, 15135, -1000, 41562, 1745, -1000, 1029,
	787, 1026, 1025, 693, 691, 1112, 1808, 1839, 1186, -1000,
	-1000, -1000, -1000, 1871, -1000, 1870, 1867, -1000, -1000, 1799,
	-1000, -1000, 1738, 1796, 41562, 12711, 734, -1000, 1796, 1796,
	1796, 1470, 2047, 2050, 1716, -1000, -1000, 875, -1000, -1000,
	-1000, 21195, -1000, 1619, -1000, 1805, 1805, 1914, -1000, 778,
	-1000, -1000, -1000, -1000, -1000, 41562, -1000, 12711, 2005, -1000,
	3611, -128, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 861, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -41, 1420, -41, 1289, -1000, 1284, -1000, -1000, -353,
	1804, 212, -1000, 1003, 905, 903, 1406, 32054, 154, 37794,
	-1000, 550, 550, 550, 116, 74, -1000, 1146, -1000, -1000,
	-1000, 1404, 1400, 1399, 1707, 161, 1143, 134, -1000, 1999,
	-1000, -1000, 1066, 1050, -86, -1000, 152, -1000, -1000, -1000,
	39066, 152, -1000, -1000, 143, 1734, 1734, 39066, 1734, -1000,
	-1000, 41978, 410, 550, 550, 1828, 778, 1913, 569, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1450, -1000, 768, -1000, 595, 410, 41978, 1066, 851,
	1153, -1000, 2067, -1000, -1000, -1000, 3611, 22407, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 279, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 12711, 12711, 12711, 12711, -1000,
	1501, 1501, 1501, 12711, 1470, 1397, 1066, 12711, 12711, 919,
	-1000, -1000, 1989, 1597, 1729, -1000, -1000, 7863, 1470, 1901,
	1607, -1000, 35103, 1605, -1000, 2050, 18165, 13317, 13317, 13317,
	13317, -1000, -1000, 13317, 1803, -1000, 13317, -1000, -1000, -1000,
	-1000, -1000, 41562, 301, -1000, 13317, 1605, 1440, -1000, 41562,
	41562, 41562, -1000, 1393, 2017, -1000, 697, 36954, 1988, 1988,
	1445, 1445, 1595, -1000, 1501, 1796, -1000, 1796, 1796, 1796,
	1796, 1796, 1796, 1796, 1796, 1796, 1796, 1796, -1000, -1000,
	857, -1000, 849, 1577, 1522, -1000, 36954, -1000, -1000, 885,
	-1000, -1000, -1000, -1000, -1000, 2034, -1000, 154, -1000, 1388,
	234, 253, -1000, 232, 231, 229, 202, 199, -1000, -1000,
	-1000, -1000, 392, 116, -1000, -88, 1282, 970, 1960, 74,
	-1000, 1280, 1261, 1256, 1254, 169, -1000, -1000, -1000, -1000,
	206, 151, -1000, 415, 1386, -1000, 1947, 1944, 2001, 152,
	2001, 84, 1734, 1516, -1000, -1000, 1446, -1000, -1000, 1802,
	1445, 1445, -1000, 1443, -1000, -1000, 41562, -1000, 410, 1982,
	1981, 1796, 2056, 29934, 7257, -1000, -1000, -1000, -1000, 1501,
	1501, 1501, 1501, -1000, -1000, -1000, 168, -1000, -1000, 1501,
	1501, 2050, 2046, 1912, -1000, 1796, -1000, -1000, 1796, 204,
	-1000, 41562, 2017, -1000, 1066, 1066, 1066, 1066, 1066, 41562,
	1066, 1591, 1796, 34679, -1000, 36538, 1586, 1586, 1586, -140,
	-1000, 697, -1000, 1442, 1003, 1384, -1000, -1000, -1000, -1000,
	-1000, 355, 41562, -415, 12711, -1000, -1000, -1000, -1000, -1000,
	-1000, 1584, -1000, 212, -1000, -1000, 277, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1951, 1950, 266, -1000, 1383, 1362,
	-1000, 378, 1328, 704, -218, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 397, 1439, -1000, 132,
	-1000, -1000, 582, 1935, 1937, 2045, -1000, 39066, 2001, -1000,
	-1000, -1000, -1000, 150, 150, 36954, 1828, 1800, -1000, -1000,
	-1000, 12711, -1000, 876, 2053, 1731, -1000, -1000, -1000, -1000,
	-1000, 1470, 173, -281, -1000, -1000, 1010, 13317, 2095, -1000,
	1729, 1796, -1000, 212, -1000, -1000, 1581, -1000, -1000, -1000,
	734, -1000, -1000, -1000, 1796, -1000, -1000, 1211, -1000, 32054,
	-1000, -1000, -1000, -1000, 1501, 697, -1000, 299, 5622, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1204, -1000, -1000,
	1250, 369, 131, -1000, 2000, -1000, 1799, 1199, 1944, 2044,
	1942, 1939, -1000, 1355, -272, -1000, 1576, 1798, 36954, 3611,
	1567, -1000, 41562, 2049, 2043, -1000, -1000, 1880, -259, -288,
	1470, 189, 189, 1730, 18165, 1729, 1470, -1000, -1000, 24831,
	-1000, 1797, -415, -1000, 697, -1000, 261, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 13317, 13317,
	25437, 5622, 114, -1000, 112, -1000, -1000, -1000, 1349, -1000,
	1048, -1000, 1347, -1000, 2042, 2041, -1000, 153, 697, 36954,
	1563, -1000, 876, 1891, -213, 13317, 13317, -1000, 1879, -1000,
	-1000, -1000, 243, -1000, 989, 297, 975, -1000, 1658, -1000,
	1728, -1000, 1548, -1000, 550, 41562, -1000, -1000, 1437, 1405,
	-1000, 1380, 1352, 181, 158, 3944, -1000, -1000, -1000, -1000,
	-421, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1346, 1344,
	37378, -1000, 1521, 697, -1000, 339, -1000, 41562, -1000, 1066,
	1723, -1000, 1066, -275, 1142, -1000, -1000, -1000, -1000, -1000,
	41562, 1470, 24831, 214, 1514, -1000, -1000, -1000, 1166, -1000,
	13317, 5622, 2027, 2026, 2024, 1974, 24831, 5448, -1000, -1000,
	-1000, -1000, 81, 1707, 697, -1000, 334, 1720, -1000, 1997,
	13317, -285, 243, -1000, 35527, -1000, -1000, 1342, -250, 1838,
	186, 1123, 5622, -1000, 1226, -422, 400, 212, 735, 12711,
	-1000, -1000, -1000, 39066, -1000, 1796, 41562, 1796, -1000, -289,
	-1000, 36538, -1000, -1000, 1249, 1837, 1836, 2060, -1000, -1000,
	-1000, -1000, -1000, -1000, 5622, 35103, -1000, -423, 5622, 4592,
	-1000, -1000, -1000, 5440, -1000, -1000, -1000, -1000, 166, -1000,
	-1000, 3611, 1707, 13923, -1000, -1000, -1000, -1000, 340, -1000,
	-1000, 2088, -1000, 2086, 754, 754, -1000, -427, -1000, 5251,
	-429, 585, 5622, 1106, -1000, 13317, -1000, 735, -1000, 1501,
	1470, -1000, 1835, 12711, 1834, -1000, -1000, -1000, 361, 1229,
	-1000, 5040, 1115, 5622, -1000, -430, 578, 5622, -1000, 1217,
	-1000, -1000, -1000, -302, 1642, -303, -1000, -1000, -1000, -1000,
	-1000, 4810, -1000, -432, 5622, -1000, -304, -1000, 566, 3413,
	-436, -1000, -1000, 538, 5622, -1000,
}

var yyPgo = [...]int{
	0, 2539, 2538, 22, 183, 2533, 249, 2532, 2531, 45,
	2529, 36, 25, 20, 46, 2528, 2211, 2209, 2207, 2199,
	2197, 2526, 16, 2523, 2522, 2195, 2520, 2519, 2193, 2191,
	2178, 2162, 2518, 2517, 2516, 2159, 2150, 2145, 3, 2515,
	17, 2514, 4, 148, 163, 2513, 2, 2511, 2510, 12,
	2509, 2508, 2143, 2506, 2505, 2503, 104, 2502, 2141, 2139,
	2501, 2137, 2134, 2500, 2499, 2132, 2130, 2121, 2497, 171,
	2496, 2495, 2494, 187, 2491, 153, 2466, 2465, 2463, 114,
	2459, 334, 106, 59, 118, 1010, 2458, 24, 65, 260,
	2457, 9, 2456, 112, 2455, 109, 2454, 2453, 157, 2451,
	144, 167, 95, 2450, 2449, 159, 2448, 2447, 2446, 107,
	2445, 2443, 170, 131, 2441, 2439, 146, 2438, 54, 165,
	48, 62, 2435, 2434, 2432, 2422, 2421, 34, 133, 2420,
	105, 147, 2419, 2418, 91, 2417, 2414, 108, 2413, 2412,
	2411, 138, 58, 2410, 2409, 42, 2408, 63, 56, 2401,
	52, 2400, 137, 2394, 2393, 2386, 2385, 2384, 55, 2383,
	71, 2382, 143, 129, 227, 2381, 2380, 11, 14, 2378,
	43, 27, 19, 49, 32, 100, 60, 139, 117, 98,
	2377, 41, 40, 126, 93, 2376, 97, 72, 35, 2374,
	154, 2372, 83, 155, 140, 141, 152, 2370, 2365, 2359,
	172, 2358, 128, 89, 2357, 86, 1104, 174, 2354, 2353,
	102, 2352, 2351, 2347, 2345, 2344, 88, 119, 2343, 2342,
	180, 168, 185, 113, 2340, 703, 3630, 2873, 176, 3986,
	18, 161, 2339, 51, 2336, 2333, 2332, 3241, 127, 7,
	110, 164, 2331, 111, 29, 57, 2330, 2329, 2328, 2327,
	2325, 2323, 2322, 2321, 116, 123, 2320, 2319, 2317, 2315,
	94, 225, 2313, 135, 134, 130, 2311, 151, 38, 2305,
	2301, 132, 101, 2294, 2292, 2291, 2288, 136, 75, 150,
	28, 2287, 124, 121, 160, 2286, 90, 2283, 2282, 87,
	53, 2281, 2280, 2278, 2277, 103, 96, 2272, 76, 31,
	33, 82, 15, 2271, 2270, 85, 84, 2267, 30, 2261,
	5, 6, 10, 2254, 2251, 2250, 2249, 2248, 2243, 2241,
	92, 2240, 2238, 70, 2237, 2233, 2232, 39, 2230, 2228,
	2227, 149, 125, 44, 169, 166, 13, 2226, 2224, 8,
	2223, 120, 2220, 66, 2219, 67, 2218, 2217, 64, 2214,
	2213, 80, 2188, 2185, 162, 1915, 304, 2183, 145, 115,
	50, 61, 2165, 2155, 0, 1657, 156, 81, 2153, 2128,
	2119,
}

var yyR1 = [...]int{
	0, 363, 363, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 68, 3, 3, 9,
	10, 4, 4, 5, 5, 91, 91, 6, 90, 90,
	186, 186, 186, 186, 185, 185, 92, 92, 89, 89,
	98, 7, 7, 8, 8, 11, 11, 72, 72, 12,
	13, 13, 13, 13, 366, 366, 107, 107, 105, 105,
	106, 106, 183, 183, 14, 14, 14, 190, 190, 195,
	195, 195, 198, 198, 198, 198, 172, 173, 174, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 337, 337, 346, 346, 346, 347, 347, 345, 345,
	345, 345, 345, 349, 349, 350, 350, 348, 348, 348,
	348, 352, 352, 353, 353, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 340,
	340, 340, 35, 35, 35, 35, 35, 36, 36, 36,
	36, 36, 36, 354, 354, 354, 354, 354, 354, 354,
	354, 354, 354, 354, 354, 354, 354, 354, 354, 354,
	354, 354, 354, 354, 354, 354, 354, 354, 354, 354,
	354, 354, 354, 354, 355, 355, 356, 356, 357, 357,
	358, 358, 358, 358, 359, 359, 359, 359, 359, 360,
	360, 360, 360, 360, 360, 360, 361, 361, 362, 362,
	2, 318, 318, 319, 319, 320, 320, 320, 320, 321,
	321, 322, 322, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 26, 222, 222, 219, 219, 219, 220,
	220, 221, 221, 221, 339, 339, 339, 333, 333, 333,
	335, 335, 334, 334, 334, 336, 336, 341, 341, 341,
	341, 341, 343, 343, 343, 343, 343, 343, 344, 344,
	344, 342, 342, 50, 50, 51, 51, 51, 161, 161,
	161, 15, 15, 15, 15, 15, 21, 23, 23, 39,
	39, 40, 24, 24, 24, 24, 41, 41, 42, 27,
	27, 27, 27, 27, 27, 48, 48, 48, 47, 47,
	46, 46, 46, 46, 46, 46, 25, 25, 25, 25,
	49, 49, 44, 44, 43, 45, 45, 45, 45, 45,
	45, 45, 45, 45, 45, 45, 45, 28, 28, 28,
	28, 28, 28, 20, 317, 317, 317, 38, 38, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 54,
	54, 291, 292, 292, 292, 292, 292, 292, 292, 292,
	278, 278, 279, 279, 279, 279, 279, 268, 268, 268,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 244, 244, 244, 244, 250, 250, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 249, 249, 249,
	249, 249, 249, 249, 249, 251, 251, 251, 251, 251,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 253, 253, 253,
	253, 253, 253, 253, 253, 277, 277, 255, 255, 254,
	254, 254, 271, 271, 272, 272, 272, 269, 269, 269,
	270, 270, 258, 259, 273, 260, 260, 260, 261, 261,
	261, 262, 262, 267, 267, 266, 266, 266, 266, 266,
	266, 263, 263, 263, 263, 264, 264, 265, 276, 276,
	276, 276, 276, 256, 37, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 304, 304, 212,
	212, 213, 213, 281, 281, 302, 302, 301, 301, 300,
	300, 300, 290, 290, 297, 297, 297, 297, 297, 297,
	297, 297, 285, 285, 285, 284, 284, 286, 286, 289,
	289, 299, 299, 298, 298, 282, 282, 282, 305, 305,
	305, 305, 305, 283, 283, 283, 283, 283, 306, 287,
	287, 288, 288, 288, 311, 312, 310, 310, 310, 310,
	310, 124, 124, 124, 294, 294, 294, 295, 295, 295,
	296, 296, 296, 296, 296, 296, 315, 315, 314, 314,
	52, 53, 57, 57, 56, 56, 56, 56, 56, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 56, 56, 56, 56, 160, 160, 160, 217,
	217, 309, 307, 307, 308, 308, 17, 17, 55, 55,
	338, 338, 18, 18, 18, 18, 18, 18, 18, 18,
	18, 313, 313, 313, 19, 19, 58, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 86, 204, 204, 203, 203, 202, 202, 202,
	205, 205, 205, 205, 242, 242, 242, 60, 60, 60,
	64, 64, 67, 67, 67, 65, 66, 29, 30, 30,
	30, 30, 31, 218, 218, 62, 62, 63, 63, 63,
	63, 78, 78, 368, 368, 61, 369, 69, 70, 70,
	71, 71, 71, 208, 208, 75, 75, 75, 73, 73,
	73, 74, 74, 80, 80, 84, 84, 84, 84, 83,
	83, 83, 83, 163, 163, 168, 234, 234, 144, 144,
	164, 164, 169, 169, 169, 170, 170, 171, 171, 171,
	171, 171, 166, 166, 165, 165, 167, 132, 132, 232,
	232, 232, 232, 231, 231, 231, 231, 231, 231, 88,
	88, 93, 93, 95, 95, 95, 95, 95, 95, 99,
	146, 146, 117, 117, 118, 118, 118, 118, 118, 130,
	130, 182, 182, 181, 181, 184, 184, 94, 96, 96,
	96, 96, 102, 102, 103, 103, 104, 104, 216, 216,
	239, 239, 239, 108, 108, 108, 110, 109, 109, 109,
	109, 109, 111, 111, 97, 97, 293, 293, 280, 246,
	246, 247, 370, 370, 370, 370, 112, 112, 114, 115,
	115, 113, 113, 113, 113, 113, 119, 119, 116, 120,
	120, 120, 120, 121, 121, 85, 85, 85, 85, 85,
	85, 85, 85, 201, 201, 123, 123, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 140, 140, 140,
	140, 140, 140, 125, 125, 125, 125, 125, 125, 125,
	79, 79, 141, 141, 141, 101, 100, 100, 82, 82,
	81, 81, 142, 142, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	135, 135, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 138,
	138, 138, 138, 138, 138, 138, 138, 138, 138, 138,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 134, 134, 134, 134,
	134, 134, 134, 134, 134, 134, 134, 134, 134, 134,
	134, 134, 134, 367, 367, 137, 136, 136, 136, 136,
	136, 136, 76, 76, 76, 76, 76, 240, 240, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 153, 153, 77, 77, 151, 151,
	152, 154, 154, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 127, 127, 127,
	127, 127, 127, 127, 127, 129, 129, 129, 155, 155,
	143, 143, 87, 156, 156, 157, 158, 158, 159, 159,
	162, 175, 175, 175, 176, 176, 176, 176, 131, 131,
	177, 177, 177, 126, 126, 126, 126, 126, 126, 126,
	180, 180, 179, 179, 178, 178, 178, 178, 178, 178,
	187, 187, 145, 145, 148, 148, 147, 149, 188, 188,
	192, 192, 192, 192, 189, 189, 193, 193, 193, 193,
	196, 196, 197, 197, 197, 194, 194, 194, 191, 191,
	191, 236, 236, 236, 199, 199, 209, 209, 206, 206,
	207, 207, 200, 200, 257, 257, 257, 215, 215, 214,
	214, 214, 210, 210, 210, 211, 211, 233, 233, 229,
	229, 235, 235, 230, 230, 237, 237, 238, 238, 316,
	316, 274, 274, 326, 326, 275, 275, 327, 327, 329,
	329, 324, 324, 325, 325, 328, 328, 32, 330, 330,
	331, 331, 332, 332, 332, 332, 33, 34, 34, 34,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 228, 228, 228,
	228, 228, 228, 226, 226, 226, 226, 226, 364, 365,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 11, 5, 7, 1,
	5, 1, 3, 1, 3, 2, 1, 13, 0, 2,
	0, 2, 3, 3, 1, 3, 0, 2, 1, 3,
	4, 1, 3, 1, 3, 8, 9, 1, 1, 10,
	9, 8, 7, 7, 1, 1, 1, 3, 1, 3,
	1, 3, 0, 4, 3, 4, 5, 1, 3, 3,
	2, 2, 2, 2, 2, 1, 0, 0, 0, 2,
	3, 3, 11, 9, 11, 5, 5, 16, 12, 9,
	4, 0, 3, 0, 2, 2, 1, 3, 1, 1,
	2, 2, 2, 0, 2, 1, 2, 2, 2, 2,
	2, 0, 1, 1, 2, 3, 3, 5, 3, 3,
	4, 5, 4, 4, 2, 2, 2, 2, 2, 0,
	2, 2, 9, 10, 9, 5, 7, 7, 7, 7,
	8, 4, 6, 2, 3, 2, 3, 3, 3, 4,
	3, 3, 2, 2, 3, 2, 2, 2, 2, 2,
	3, 2, 2, 2, 3, 3, 2, 3, 3, 2,
	2, 2, 2, 2, 1, 3, 0, 3, 1, 3,
	0, 1, 1, 1, 1, 3, 1, 3, 3, 0,
	2, 5, 5, 5, 7, 5, 0, 3, 0, 3,
	4, 0, 1, 1, 3, 2, 3, 3, 3, 0,
	1, 1, 2, 2, 2, 2, 1, 2, 2, 3,
	3, 3, 3, 4, 2, 3, 3, 3, 3, 0,
	3, 0, 3, 3, 1, 1, 1, 3, 2, 1,
	1, 3, 3, 2, 1, 1, 3, 1, 2, 5,
	4, 6, 4, 3, 3, 6, 5, 5, 4, 3,
	5, 1, 3, 1, 1, 1, 1, 1, 0, 2,
	2, 1, 1, 1, 1, 1, 4, 5, 8, 1,
	2, 5, 7, 10, 8, 11, 1, 2, 5, 5,
	5, 5, 6, 3, 5, 1, 1, 1, 1, 3,
	1, 1, 1, 2, 1, 1, 2, 4, 2, 4,
	2, 3, 1, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 4,
	3, 2, 4, 3, 0, 2, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 5,
	5, 4, 1, 1, 2, 3, 4, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 0, 1, 1,
	0, 2, 3, 2, 2, 2, 2, 2, 6, 8,
	3, 3, 1, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 3,
	2, 2, 2, 2, 2, 1, 2, 2, 2, 1,
	4, 4, 3, 3, 2, 4, 5, 2, 3, 4,
	2, 2, 3, 3, 3, 3, 3, 4, 1, 1,
	1, 1, 1, 6, 6, 4, 4, 4, 5, 3,
	3, 3, 3, 3, 4, 6, 6, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 3, 0,
	3, 3, 0, 5, 0, 3, 5, 0, 1, 1,
	0, 1, 2, 3, 1, 0, 3, 3, 0, 2,
	2, 0, 1, 0, 1, 1, 1, 1, 2, 2,
	2, 5, 5, 4, 4, 4, 4, 4, 2, 1,
	2, 1, 2, 2, 3, 2, 2, 2, 2, 1,
	1, 1, 1, 3, 2, 1, 1, 0, 3, 1,
	1, 0, 1, 5, 4, 0, 1, 1, 2, 2,
	3, 2, 0, 1, 3, 5, 3, 3, 5, 3,
	2, 2, 1, 1, 1, 1, 1, 0, 1, 0,
	1, 1, 3, 3, 3, 3, 3, 1, 10, 11,
	11, 12, 12, 3, 3, 3, 2, 1, 5, 1,
	1, 0, 2, 2, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 2, 0, 1, 3, 1, 2, 3,
	1, 1, 1, 1, 1, 1, 0, 2, 0, 2,
	1, 5, 1, 3, 5, 4, 3, 5, 3, 8,
	10, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 5, 4, 5, 1, 2, 2, 4, 3,
	6, 5, 3, 9, 2, 2, 0, 1, 2, 0,
	1, 7, 1, 3, 8, 8, 3, 3, 3, 5,
	3, 5, 5, 5, 4, 4, 4, 4, 4, 4,
	4, 0, 1, 1, 3, 2, 3, 3, 4, 3,
	5, 5, 5, 4, 4, 4, 2, 2, 2, 6,
	2, 4, 4, 4, 5, 8, 6, 3, 5, 4,
	2, 4, 3, 2, 4, 5, 6, 2, 6, 6,
	3, 3, 3, 0, 1, 1, 1, 0, 2, 2,
	0, 2, 3, 2, 0, 1, 1, 2, 4, 1,
	1, 1, 2, 4, 4, 1, 1, 2, 3, 4,
	4, 5, 3, 1, 1, 3, 3, 1, 1, 1,
	1, 0, 3, 1, 1, 3, 0, 2, 0, 2,
	1, 2, 2, 0, 1, 0, 1, 1, 0, 1,
	1, 0, 1, 3, 5, 1, 1, 3, 5, 1,
	2, 3, 5, 2, 2, 6, 0, 1, 0, 3,
	0, 1, 0, 2, 2, 4, 1, 2, 2, 2,
	2, 2, 0, 2, 1, 3, 3, 1, 3, 0,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 1, 1, 4, 1, 3, 1, 1, 2,
	2, 4, 2, 6, 1, 4, 6, 3, 2, 0,
	3, 0, 3, 1, 3, 1, 3, 4, 4, 4,
	4, 3, 2, 4, 0, 1, 0, 2, 0, 1,
	1, 1, 1, 1, 2, 2, 1, 2, 3, 2,
	3, 3, 2, 2, 12, 11, 1, 3, 3, 4,
	3, 0, 0, 3, 4, 3, 1, 3, 3, 2,
	1, 1, 3, 1, 1, 1, 1, 3, 3, 0,
	5, 5, 5, 0, 2, 1, 3, 3, 3, 2,
	3, 1, 2, 0, 3, 1, 1, 3, 3, 4,
	4, 5, 3, 4, 5, 6, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	0, 2, 1, 1, 1, 3, 1, 3, 0, 1,
	1, 3, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 2,
	2, 2, 2, 3, 1, 1, 1, 1, 1, 1,
	5, 6, 6, 6, 5, 5, 5, 6, 5, 5,
	6, 5, 5, 5, 5, 6, 5, 5, 5, 4,
	4, 5, 5, 5, 5, 5, 4, 4, 4, 4,
	4, 4, 4, 4, 3, 6, 6, 4, 6, 6,
	4, 8, 8, 8, 8, 4, 6, 7, 7, 7,
	9, 4, 7, 5, 4, 4, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 8, 8, 0, 2, 3, 4, 4, 4, 4,
	4, 4, 0, 3, 4, 7, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 3, 3, 1, 2, 2, 1, 2, 1,
	2, 2, 1, 2, 0, 1, 0, 2, 1, 2,
	4, 0, 2, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 0, 3,
	1, 3, 1, 0, 2, 1, 0, 3, 1, 3,
	2, 0, 1, 1, 0, 2, 4, 4, 1, 1,
	0, 2, 4, 2, 4, 1, 3, 5, 4, 6,
	0, 3, 1, 3, 3, 1, 1, 1, 1, 1,
	0, 5, 1, 3, 1, 2, 3, 1, 1, 3,
	3, 3, 3, 3, 1, 3, 1, 2, 2, 3,
	1, 1, 1, 1, 1, 3, 3, 3, 1, 2,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 2,
	0, 3, 0, 1, 0, 3, 3, 1, 1, 0,
	1, 1, 1, 1, 1, 0, 1, 0, 2, 1,
	1, 1, 3, 1, 1, 1, 1, 1, 1, 0,
	2, 0, 1, 0, 4, 0, 1, 0, 3, 0,
	3, 0, 4, 0, 3, 0, 3, 3, 1, 3,
	2, 4, 1, 2, 1, 2, 2, 2, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -363, -1, -3, -10, -11, -12, -13, -14, -16,
	-52, -17, -18, -19, -58, -59, -60, -64, -65, -66,
	-62, -61, -25, -28, -20, -68, -29, -30, -31, -32,
	-33, -34, -35, -36, -37, -5, 6, 7, -92, 29,
	-54, 181, -53, 184, 183, 219, 185, 212, 64, 342,
	-67, 345, 346, -368, -218, 270, 271, 20, 37, 347,
	349, 30, 31, 233, 287, 289, 314, -4, 492, 182,
	343, 214, 213, 26, -6, -7, -364, 68, 611, -158,
	15, -69, -369, -69, -72, 9, 10, 8, 441, -69,
	-291, -216, 108, 68, 23, -211, -222, 88, 432, 189,
	-220, 283, 285, -209, -210, -219, 243, 253, 44, 200,
	199, 254, 190, 283, 190, 191, 193, 432, 189, 226,
	225, 283, 285, 190, -113, -237, -226, -227, 301, 72,
	-225, 458, 462, 465, 466, 471, 291, 81, 323, 324,
	315, 325, 210, 118, 284, 290, 293, 316, 578, 326,
	328, 329, 452, 453, 193, 203, 596, 308, 211, 489,
	254, 606, 599, 295, 402, 342, 358, 350, 373, 490,
	549, 265, 341, 418, 298, 258, 321, 550, 408, 413,
	268, 345, 427, 234, 551, 262, 264, 263, 248, 457,
	269, 36, 215, 369, 304, 243, 552, 545, 237, 35,
	27, 236, 430, 99, 553, 332, 415, 390, 333, 232,
	554, 494, 302, 414, 365, 314, 117, 241, 280, 334,
	555, 391, 395, 556, 419, 288, 279, 557, 558, 335,
	559, 192, 294, 560, 244, 421, 299, 389, 201, 491,
	48, 223, 422, 393, 399, 561, 331, 562, 563, 564,
	565, 312, 310, 311, 313, 255, 260, 53, 187, 397,
	396, 398, 261, 417, 378, 376, 566, 567, 303, 207,
	568, 569, 377, 18, 570, 571, 425, 306, 572, 573,
	574, 487, 575, 576, 416, 392, 394, 242, 116, 577,
	309, 412, 318, 493, 292, 579, 337, 222, 217, 426,
	327, 580, 581, 582, 583, 584, 286, 285, 346, 319,
	347, 266, 585, 586, 587, 588, 252, 235, 429, 420,
	52, 404, 589, 322, 338, 407, 343, 229, 7, 259,
	300, 411, 320, 267, 253, 256, 380, 224, 590, 591,
	367, 368, 344, 227, 219, 111, 428, 544, 283, 339,
	51, 230, 592, 593, 257, 231, 348, 297, 370, 190,
	134, 374, 418, 181, 409, 410, 415, -285, 416, 225,
	228, -242, 190, -204, 408, 288, 309, 462, 231, 232,
	191, 192, 32, 420, 419, 118, -237, 194, 348, -78,
	185, 220, -113, -49, 72, 272, -49, 29, 72, 72,
	36, 72, 347, 411, 411, 75, 493, 234, 21, -355,
	-336, 318, -354, -334, 182, 181, 10, 183, 323, 324,
	325, 191, 8, 30, 578, 208, 326, 327, 6, 212,
	328, 329, 226, 9, 330, -339, 74, 72, -225, 21,
	-355, -336, 318, -213, -212, 340, 399, -91, 548, -89,
	-98, -239, -237, -226, 74, -200, 195, 344, -71, 5,
	-9, -3, 492, -176, 17, 16, -75, 54, 55, -70,
	-83, 125, -85, -237, -122, 91, -128, 28, 72, -225,
	24, -127, 301, 220, -123, -150, -226, -149, -101, 134,
	-241, 123, 124, 131, 92, 177, -135, -133, -134, -136,
	-138, -139, 74, 73, 82, 75, 76, 77, 78, 83,
	84, 85, -229, -227, -224, 458, 462, 465, 466, 471,
	-147, -364, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 58, 59, 456, 189, 442, 443,
	371, 8, 444, 445, 446, 488, 210, 450, 94, 47,
	533, 431, 440, 439, 438, 436, 437, 433, 435, 434,
	452, 453, 196, 432, 129, 441, 475, 476, 477, 478,
	479, 480, 481, 482, 484, 485, 483, 459, 460, 461,
	463, 464, 467, 468, 469, 470, 472, 473, 474, 495,
	186, 182, 185, 90, 23, 25, 496, 240, 93, 356,
	385, 449, 16, 20, 204, 188, 374, 202, 133, 198,
	205, 274, 276, 181, 62, 497, 275, 409, 498, 499,
	500, 501, 364, 362, 273, 502, 10, 26, 213, 247,
	503, 360, 183, 238, 97, 98, 505, 41, 40, 307,
	277, 214, 506, 361, 507, 508, 19, 65, 206, 11,
	200, 228, 605, 509, 287, 13, 115, 14, 510, 511,
	512, 513, 195, 110, 191, 595, 60, 245, 514, 354,
	515, 516, 517, 518, 519, 355, 87, 520, 521, 107,
	522, 56, 486, 32, 233, 546, 447, 523, 524, 38,
	37, 384, 388, 383, 525, 400, 108, 17, 30, 526,
	527, 221, 387, 353, 382, 547, 528, 529, 250, 63,
	340, 363, 609, 33, 66, 218, 336, 305, 42, 88,
	15, 246, 61, 34, 454, 112, 610, 366, 197, 225,
	531, 423, 249, 532, 113, 359, 548, 208, 109, 349,
	184, 317, 271, 209, 534, 289, 535, 239, 114, 410,
	536, 537, 451, 29, 212, 270, 352, 199, 538, 251,
	282, 272, 281, 539, 540, 296, 43, 607, 594, 190,
	39, 96, 386, 351, 381, 194, 448, 226, 278, 5,
	44, 31, 405, 9, 330, 64, 67, 375, 372, 541,
	379, 608, 12, 542, 455, 492, 424, 89, 543, 406,
	-69, -69, -69, -189, 344, -196, -193, 419, 420, -194,
	-197, -191, -150, 399, 575, 576, 418, 374, 417, -229,
	-237, -226, 301, 220, 134, 459, 460, 461, 94, 371,
	442, 475, 433, 435, 431, 434, 432, 28, 476, 24,
	85, 477, 456, 196, 8, 177, 463, 464, 478, 479,
	480, 58, 436, 437, 488, 129, 91, 481, 482, 83,
	484, 485, 533, 441, 59, 483, 189, 469, 468, 467,
	470, 444, 445, 84, 438, 439, 440, 47, 473, 472,
	474, -2, -6, 6, -113, -292, -279, -283, -229, -226,
	-227, -228, 216, 205, -306, 72, -225, 301, 220, 50,
	86, 55, 54, 202, 191, 193, 441, -207, 196, -207,
	226, 225, -221, 251, -207, -207, 190, -220, 100, 100,
	-55, -113, -338, -333, -339, -206, 196, -229, -206, -206,
	-206, -206, -206, -206, -206, -113, 178, -105, -113, 72,
	29, -205, 108, 12, 432, 189, 190, 225, 226, 193,
	-287, 11, 110, 229, 229, 229, 230, 229, -203, 411,
	412, 227, 413, 414, 12, -86, 108, 19, -364, -176,
	-176, 126, 72, 347, 194, -63, -3, -13, -11, -12,
	-9, 100, -130, 23, 29, 29, 74, 51, 29, -44,
	-43, -45, 258, 259, 260, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 29, -317, 68, -274, 399, 72,
	-330, -331, -113, 75, 75, 66, 309, 66, 69, 194,
	69, 66, -356, 319, 68, -356, 285, 319, 320, 253,
	283, 193, -356, -356, 285, -356, -356, -356, -356, -356,
	411, -356, -356, -356, 321, 322, -356, 409, 193, -356,
	-356, -356, -356, -356, 71, 66, 69, 309, 66, 11,
	66, -303, 134, 332, 333, 334, 335, 331, 309, 336,
	337, 338, 229, 339, -4, -89, 69, -180, -364, 190,
	423, -8, -6, -364, 21, 22, -365, 70, -91, -177,
	19, 30, -131, 75, 78, -159, -162, -85, -237, 50,
	-73, 21, 22, 80, 11, -232, 90, 88, 89, 107,
	-231, 23, 72, -225, -226, 74, -227, -228, 178, -85,
	-125, 110, 91, 108, 109, 93, 120, 119, 130, 123,
	124, 125, 126, 127, 128, 129, 121, 122, 133, 100,
	101, 102, 103, 104, 105, 106, -201, -364, -101, -364,
	178, -364, 178, 179, 180, 178, -128, -128, -128, -128,
	-128, -128, -128, -364, 178, 178, -364, -364, -364, -364,
	-364, -9, -142, -85, 492, -364, -364, -364, -364, -364,
	-364, -364, -364, -364, -364, -364, -364, -364, -364, -364,
	-153, -85, -364, -364, -367, -137, -364, -367, -137, -367,
	-137, -367, -364, -367, -137, -367, -137, -367, -367, -137,
	-367, -364, -364, -364, -364, -364, -364, -364, -364, -364,
	-364, -364, -364, -364, -364, -364, -364, -364, -364, -364,
	-364, -364, -364, -364, -364, -364, -364, -364, -364, -364,
	-200, -200, 11, -105, -106, -116, -237, 69, -190, -195,
	421, 423, 344, -194, -194, -236, -229, 74, 28, 100,
	29, 178, -158, -69, 70, 69, -283, -244, -250, -252,
	-251, -253, -248, -249, 371, 374, 378, 376, 372, 377,
	134, 375, 380, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 390, 29, 215, 367, 368, 369, 370, 391,
	392, 393, 394, 395, 396, 397, 398, 350, 373, 490,
	351, 352, 353, 354, 355, 356, 358, 359, 360, 361,
	362, 363, 364, 365, -244, -244, -244, -244, 72, 229,
	-226, -306, 68, -229, -113, -222, -220, 72, 91, 72,
	-112, -229, -237, -119, -229, -237, 252, -342, -341, -333,
	-336, -207, -221, -333, 257, 255, 256, 69, 194, 69,
	194, 71, -105, 24, 66, -107, -113, 72, 72, -112,
	-119, -335, -333, -336, -238, -237, -223, 495, 186, 21,
	182, 185, 90, 23, 25, 496, 240, 93, 356, 134,
	459, 460, 461, 385, 449, 16, 20, 204, 94, 188,
	371, 374, 202, 133, 198, 205, 274, 276, 442, 475,
	181, 62, 497, 433, 435, 431, 434, 275, 432, 409,
	498, 499, 500, 501, 364, 362, 273, 28, 502, 10,
	476, 26, 213, 247, 22, 503, 127, 360, 183, 238,
	97, 98, 505, 41, 40, 307, 24, 277, 214, 85,
	506, 477, 361, 507, 508, 19, 65, 206, 11, 200,
	228, 605, 509, 287, 13, 456, 115, 14, 510, 511,
	512, 513, 196, 195, 110, 191, 595, 60, 245, 8,
	514, 354, 515, 516, 517, 518, 519, 355, 177, 87,
	520, 521, 107, 522, 56, 463, 464, 486, 45, 32,
	233, 478, 479, 546, 480, 447, 523, 524, 38, 37,
	384, 388, 383, 525, 400, 58, 108, 17, 436, 437,
	30, 526, 527, 488, 221, 387, 353, 382, 547, 528,
	529, 129, 250, 63, 91, 340, 481, 482, 83, 363,
	609, 33, 66, 218, 336, 305, 42, 88, 15, 246,
	61, 34, 454, 112, 610, 484, 366, 197, 225, 531,
	423, 249, 532, 113, 485, 359, 548, 208, 109, 349,
	184, 533, 441, 317, 271, 209, 534, 289, 59, 535,
	239, 114, 483, 189, 410, 536, 6, 537, 451, 29,
	212, 270, 352, 199, 538, 251, 282, 272, 281, 539,
	49, 540, 296, 43, 469, 468, 467, 470, 607, 57,
	444, 445, 594, 190, 39, 96, 386, 351, 381, 194,
	448, 226, 84, 278, 5, 44, 31, 405, 9, 330,
	64, 67, 438, 439, 440, 47, 375, 372, 541, 473,
	379, 472, 474, 608, 95, 12, 542, 455, 492, 424,
	89, 543, 406, 69, -205, 74, -241, -85, -207, -207,
	-113, -113, -113, -113, -113, -205, -205, -205, -205, -202,
	11, 110, 11, -202, -202, -85, -128, -333, 434, 125,
	-237, 72, 72, 347, 72, 33, -44, -44, 74, -44,
	69, 100, -44, 70, -142, -316, 595, 69, -332, 23,
	423, 424, 400, -358, 190, 228, 225, 66, -358, -354,
	327, -335, -334, -333, -356, -357, -229, -356, -356, -356,
	411, -356, -356, -356, -356, -356, -356, -356, -356, -339,
	-358, 287, 69, -358, -335, -333, 331, 331, 331, 331,
	331, 331, -98, 23, -179, -178, -230, -226, -227, -228,
	216, -229, -223, -113, 424, 425, -9, -186, 87, 9,
	110, 69, 18, 69, -175, 25, 26, 178, -129, 51,
	75, 78, -208, 49, -113, -85, -85, -85, -140, 83,
	91, 84, 85, -231, 216, 125, -238, -230, -227, -226,
	301, 220, -223, -128, -141, -147, -101, 79, 110, 108,
	109, 93, -128, -128, -128, -128, -128, -128, -128, -128,
	-128, -128, -128, -128, -128, -128, -128, -240, 72, 74,
	72, -230, -81, -84, 125, -85, -237, -230, -127, 83,
	-127, -229, -229, -73, -230, 118, -230, -73, -73, -73,
	-73, -73, -365, 69, -365, -9, -81, -81, -81, -365,
	-85, -85, -81, -81, -150, 74, -81, -150, 74, -81,
	-128, 447, 448, 449, -81, -81, -73, -151, -152, 95,
	-150, -81, -365, -128, -229, -229, -81, -82, -81, -81,
	-81, -365, -365, -84, -81, -84, -81, -81, -365, -365,
	-365, -365, -81, -81, -81, -81, -81, -81, -81, -81,
	-81, -81, -81, -81, -115, 87, -113, -88, -93, -95,
	-96, -117, -100, -364, -94, -97, -113, -101, 72, 486,
	-113, -105, -366, 11, 67, -366, 69, 178, -193, -196,
	69, 422, 424, 425, -190, -261, 133, 66, 86, -85,
	-230, -238, -176, -75, -294, -295, -296, -230, 74, 75,
	81, 323, 293, -279, -281, -282, -283, -297, 205, -305,
	197, 199, 200, 44, -284, 206, 191, 45, -245, -269,
	404, 405, -255, 68, -254, 68, -254, 379, 371, 374,
	372, -254, -254, -254, -254, -254, -260, 374, -260, -260,
	-260, -260, 372, 68, 68, -255, -255, -255, -271, 68,
	-271, 366, -272, 68, -272, -272, -272, -272, -245, -245,
	-245, -245, -306, -306, -306, -85, -233, 67, 23, 193,
	-267, -266, -263, -264, -265, -262, 28, 24, -267, -50,
	240, 211, 178, 68, 178, 243, 244, -337, 69, 28,
	-343, 284, -113, 220, -113, -113, -333, -333, -339, -313,
	209, 204, -113, 69, 69, -113, 74, 72, 72, -130,
	-288, 11, 110, -205, -237, -237, -113, -130, -205, -79,
	216, 67, -367, -365, 72, -128, -43, -127, 70, -114,
	87, 74, -331, -239, 399, 424, -359, 125, -229, -358,
	-359, -362, 492, 194, 70, 69, -356, -359, 305, 287,
	-359, 11, -304, 19, -100, -364, -365, 69, 178, -57,
	-56, 186, 183, 184, 187, 188, -309, 402, 182, 237,
	236, 222, -365, -185, 34, 35, -229, 52, -131, -131,
	-162, -199, 19, 11, 47, 47, -74, 57, 83, 84,
	85, 178, -364, -141, -128, -128, -128, -79, 90, -365,
	69, -365, 178, -82, -81, -81, -81, -81, -81, -85,
	-365, -365, -365, -365, 69, 67, 23, -365, 67, -365,
	11, 11, -365, 11, 11, -365, -365, 11, -128, -128,
	-128, -365, -365, -81, -154, -152, 97, -85, -365, -365,
	-365, 69, 69, -365, -365, -365, -365, -163, 454, -163,
	-365, -365, -365, -365, -365, -163, -163, -163, -163, -365,
	-365, -365, -365, -365, -365, -365, -365, -365, -365, -365,
	-365, -183, 112, -113, 29, 69, -108, -110, -109, -111,
	56, 60, 62, 57, 58, 59, 118, 63, -216, -88,
	-99, 47, -364, -118, 112, -120, 23, -239, 64, 195,
	65, -364, -364, -183, 67, -88, -88, -116, -237, 125,
	-195, -198, 426, 423, 429, 72, 74, 178, -177, 69,
	-296, 100, -283, 68, 72, -289, -226, 45, -284, -286,
	-284, -284, -289, 72, -289, 45, 83, 91, -258, -259,
	-273, -276, -256, 23, 605, 407, 28, 66, 402, 197,
	45, 44, 200, 81, -270, 406, 75, -260, 75, 465,
	-260, -254, -254, -254, 379, -254, -260, -261, 134, 29,
	-261, 134, -261, 134, -261, 134, -261, 134, -260, -277,
	74, -277, 75, -271, 75, 70, 66, -229, -172, -113,
	-264, -263, -265, 374, 418, 133, 430, -51, 8, 9,
	10, -229, -318, -319, -320, -229, 110, 245, 246, -229,
	-346, 317, -341, 285, 294, 90, 16, 492, 194, 194,
	-113, -333, -121, 12, 72, 72, -202, -205, -128, -336,
	231, 232, -183, 190, -332, 194, 178, 178, -359, 194,
	308, -335, -229, 11, 11, 305, 11, -335, 341, -178,
	-230, 69, -217, -284, -315, -282, -283, -314, 198, 205,
	-217, 205, 202, -284, 206, 197, 198, -214, -284, 194,
	23, -217, -217, -290, 100, -217, 32, 32, 112, 69,
	74, 74, 53, -113, -80, -173, 125, -230, -82, -79,
	90, -128, -84, 125, -238, -365, -365, -365, -365, -365,
	-365, -243, 134, 371, 215, 369, 362, 389, 376, 404,
	367, 405, -240, -243, -240, -128, -128, -128, -128, -128,
	11, 11, 11, 489, -158, 99, -85, 96, -128, -128,
	-229, -168, -364, -163, -163, -163, -163, -163, -164, -163,
	-164, -164, -164, -164, -164, -164, -164, -164, -164, -164,
	-164, -126, 29, 47, -364, -9, -364, -188, -192, -150,
	-226, -228, 216, 301, 220, -93, -95, -95, -93, -95,
	56, 56, 56, 61, 56, 61, 61, 56, -109, -239,
	-365, -365, -146, 239, -364, 33, -239, -120, 191, 191,
	191, -82, -128, -121, -88, -121, -121, 178, 423, 427,
	428, -295, -296, -299, -298, -229, -226, 197, -305, 44,
	-305, -289, -289, -289, -289, 68, 83, -364, 606, 75,
	-128, 9, 45, 45, 45, 74, 70, -261, 134, 70,
	70, -261, 134, -260, -254, -261, 134, 72, 134, -261,
	134, 70, 69, 70, 69, 70, 69, -124, 553, 91,
	-113, -174, 23, 29, -290, -290, -290, 66, 70, 69,
	-244, -229, -229, -229, -349, 492, 290, -347, -345, 296,
	297, 298, 299, 300, -336, 295, -343, 292, 74, 72,
	-113, -333, -85, -130, -260, -113, -335, 125, 125, -229,
	194, -335, 305, -361, 492, -335, -335, 11, -335, 74,
	-56, 68, -278, 72, -225, -289, -210, 197, 72, 72,
	72, -226, -225, -227, -228, 72, -226, -225, -227, -228,
	-229, 45, 45, 72, -113, -229, -278, 72, -85, -229,
	-229, -229, -186, 69, -83, -365, -128, 178, -164, -164,
	-164, -164, -164, -365, -255, -255, -255, -272, -255, 355,
	-255, 355, -365, -365, -365, 19, 19, 19, 19, -365,
	-128, -128, -128, -364, -77, 451, -85, 69, 69, -234,
	72, -187, 66, -188, -145, -148, -147, -364, -9, -365,
	-179, 6, 492, -184, -229, -121, 69, 100, 100, 100,
	100, -103, -102, 66, 67, -104, 66, -102, 56, 56,
	56, -182, 68, 69, -147, -364, -184, -128, -120, -364,
	-364, -364, -365, 69, -158, -121, 70, 69, -255, -255,
	45, -286, -181, -229, -128, 23, -134, 431, 440, 439,
	438, 436, 437, 433, 435, 434, 452, 453, -261, 134,
	-260, 74, -260, 75, 75, 553, 68, -9, -172, -290,
	72, 134, 72, 134, 74, -113, -321, -322, -323, 81,
	491, 91, 247, 248, 207, 249, 250, 251, -320, -244,
	-244, -244, -352, -353, -351, 293, 315, 316, 301, -350,
	-348, 310, 311, 312, 313, 90, 74, 74, 74, -344,
	284, 90, 293, 16, 23, -205, -324, -203, -361, -335,
	-361, 287, -335, -278, -160, 210, 211, -244, -244, -233,
	-286, 45, 72, -215, 194, 23, 194, -160, -278, 29,
	183, 87, -90, 11, -173, -173, 125, -260, 72, -128,
	-128, -128, -128, -365, -365, -365, -128, -365, 74, -128,
	-128, -144, 112, 27, -187, 69, -365, -365, 47, -365,
	-365, 69, -158, -192, -85, -85, -85, -85, -85, 68,
	-85, -181, 239, -365, -120, -216, -181, -181, -181, 74,
	-176, -301, -300, 67, 201, 81, -298, -175, -175, -289,
	-289, 70, 69, -365, -364, -261, 134, -261, 134, 70,
	70, -299, -172, -174, 72, 134, 19, -173, -323, 74,
	251, 247, 251, 251, 251, 251, 252, -340, 81, 291,
	-351, 302, 558, 286, 317, 75, 75, 111, 30, 31,
	-348, 75, 75, 75, 75, -345, 16, 492, -343, 292,
	74, 74, -325, 38, -327, 39, -360, 23, -361, -360,
	305, 70, 72, -245, -245, 68, -289, -289, 72, -229,
	-160, 28, 28, -364, -121, -88, -83, -365, -365, -365,
	-365, -76, 110, 492, -365, -365, -158, 16, 45, -148,
	-145, 47, -9, -364, -229, -176, -181, 70, -147, -118,
	-239, -365, -365, -365, 413, -300, 72, -290, 74, 208,
	-229, -268, 608, 607, -128, 70, -9, 238, -174, 36,
	36, 243, 244, 74, 74, 28, 303, 177, 28, 75,
	177, 457, 292, 74, 72, 293, -257, 195, -328, 43,
	-326, -275, 42, 16, -333, -360, -299, -233, 68, -128,
	-307, -308, 112, -155, 13, -173, -365, 490, 63, 493,
	-169, 114, 113, -142, 9, -145, -9, 70, -120, -364,
	75, -113, -365, -302, -301, -172, 239, -22, -3, -11,
	-12, -13, -14, -16, -52, -17, -18, -23, -24, -19,
	-58, -59, -67, -65, -66, -62, -61, -27, -25, -28,
	-20, -29, -30, -31, -35, -36, -26, -37, 94, 196,
	273, 342, 75, 28, 75, 28, 306, 293, 23, -182,
	75, -327, 16, -329, 40, 41, 74, 492, 70, 68,
	-299, -365, 69, -229, -156, 14, 16, 53, 491, 494,
	-365, -170, 93, -171, 111, 457, -132, 75, 177, -170,
	-188, -365, -293, -280, -230, 68, -268, -161, 241, 242,
	-172, -85, -85, 72, -48, -235, 276, 277, 278, -230,
	-38, -22, 304, 304, 74, 38, 114, 74, 16, 16,
	285, -302, -299, 70, -308, 47, -166, 455, -157, -85,
	-143, -87, -85, 53, -171, 116, 117, 239, 116, 117,
	-127, -365, 69, -244, -181, -172, 72, 72, -39, -40,
	95, 96, 274, 275, 279, -244, 69, 611, 74, 74,
	28, 290, 21, -336, 70, -302, 223, -165, -167, -229,
	69, 492, 90, -229, -365, -280, -246, 487, 24, 70,
	-174, 99, 97, -40, -85, -38, 19, 19, 19, 28,
	-230, 99, -22, 307, -302, 224, 69, 23, -87, 493,
	-171, 23, -239, 74, 487, -311, -312, 66, -15, -21,
	-14, -11, -12, -13, 342, 492, 94, -38, 96, 611,
	-49, 75, -9, -47, -46, 75, -49, 281, 91, 282,
	72, -128, -336, -364, -167, -168, 494, -239, -247, 74,
	-312, 66, -311, 66, 10, 9, -172, -38, -91, 611,
	-38, 99, 97, -41, -42, 98, -22, 69, 280, -128,
	221, -370, 83, 28, 333, -310, 209, 204, 207, 29,
	-310, 611, 99, 611, 196, -38, 99, 97, -42, -85,
	-46, -365, -365, 66, -128, 66, 203, 28, 83, 99,
	94, 611, 196, -38, 96, 505, 66, 505, 99, 611,
	-38, 505, 196, 99, 611, 196,
}

var yyDef = [...]int{
	-2, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, 1206, 786, 786, 0, 786,
	888, -2, 640, 0, 0, 0, 0, -2, 759, 760,
	761, 765, 766, 781, 783, 0, 347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 561, -2, 0, 1282,
	0, 784, 773, 774, 41, 0, 0, 2118, 2, 1214,
	0, 795, 788, 0, 786, 786, 786, 67, 68, 0,
	99, 0, 0, 0, 889, 0, 0, 0, 1280, 1280,
	251, 1280, 1280, 0, 1296, 249, 0, 1277, 1292, 1293,
	1294, 0, 0, 0, 1278, 0, 1278, 1278, 1278, 1278,
	1278, 1278, 1278, 0, 705, 921, 923, 924, 925, 1305,
	1306, 2113, 2114, 2115, 2116, 2117, 2088, 2089, 2090, 2091,
	2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101,
	2102, 2103, 2104, 2105, 2106, 1884, 1885, 1886, 1887, 1888,
	1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898,
	1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908,
	1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918,
	1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928,
	1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938,
	1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948,
	1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958,
	1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968,
	1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978,
	1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988,
	1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998,
	1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008,
	2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018,
	2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028,
	2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038,
	2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048,
	2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058,
	2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068,
	2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078,
	2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 0,
	0, 0, 750, 0, 716, 717, 718, 0, 720, 0,
	0, 0, 0, 0, 730, 733, 737, 0, 1214, 1214,
	582, 583, 584, 755, 756, 744, 757, 0, 0, 56,
	0, 0, 869, 326, 328, 0, 348, 0, 351, 354,
	1311, 767, 0, 0, 1336, 1337, 0, 0, 0, 0,
	0, 2021, 194, 265, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 0, 196, 196, 196, 2029, 196, 0,
	196, 196, 196, 196, 196, 264, 254, 255, 256, 0,
	0, 0, 2021, 0, 562, 559, 560, 57, 0, 46,
	58, 1230, 890, 891, 892, 0, 1283, 762, 0, 790,
	0, 39, 0, 1220, 0, 0, 798, 796, 797, 787,
	0, 809, 839, 0, 935, 1769, 941, -2, -2, -2,
	1682, 984, 985, 986, 987, 988, 989, 990, 991, 1627,
	0, 0, 0, 0, 0, 1724, 1014, 1015, 1016, 1017,
	1018, 1019, 1187, 1188, 1189, 1190, 1191, 1192, 1193, -2,
	-2, -2, 1173, 1174, 0, 2113, 2114, 2115, 2116, 2117,
	1247, 0, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116,
	1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126,
	1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136,
	1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146,
	1147, 1148, 1149, 1150, 1750, 1813, 1701, 1818, 1646, 0,
	1638, 1715, 1842, 1843, 0, 1758, 2094, 0, -2, 1867,
	1806, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	2104, 2105, 1708, 1656, 1766, 1807, 1647, 1668, 1687, 1736,
	1737, 1739, 1771, 1772, 1790, 1799, 1817, 1628, 1629, 1630,
	1731, 1732, 1839, 1838, 1837, 1840, 1873, 1871, 1874, 1616,
	1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626,
	1631, 1632, 1633, 1634, 1635, 1637, 1639, 1640, 1641, 1642,
	1643, 1644, 1645, 1648, 1649, 1650, 1655, 1657, 1658, 1659,
	1660, 1661, 1662, 1663, 1664, 1666, 1667, 1669, 1670, 1671,
	1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681,
	1683, 1684, 1686, 1688, 1689, 1690, 1691, 1692, 1693, 1694,
	1695, 1696, 1697, 1698, 1699, 1700, 1702, 1703, 1704, 1705,
	1706, 1707, 1709, 1710, 1711, 1712, 1713, 1714, 1716, 1717,
	1718, 1719, 1720, 1721, 1722, 1723, 1725, 1726, 1727, 1728,
	1729, 1730, 1733, 1734, 1735, 1738, 1740, 1741, 1742, 1743,
	1744, 1745, 1746, 1747, 1748, 1749, 1751, 1752, 1755, 1756,
	1757, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1767, 1768,
	1770, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782,
	1783, 1784, 1785, 1786, 1787, 1788, 1789, 1791, 1792, 1793,
	1794, 1795, 1796, 1797, 1798, 1800, 1801, 1802, 1803, 1804,
	1805, 1808, 1809, 1810, 1811, 1812, 1814, 1815, 1816, 1819,
	1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829,
	1830, 1831, 1832, 1833, 1834, 1835, 1836, 1841, 1844, 1845,
	1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1855, 1856,
	1857, 1858, 1859, 1860, 1861, 1862, 1863, 1868, 1869, 1870,
	1872, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883,
	1282, 1282, 0, 84, 2071, 0, 1254, -2, -2, 1256,
	0, 0, 0, -2, -2, -2, -2, 1639, -2, 1173,
	0, 0, 0, 0, 1627, 1628, 1629, 1630, 1636, 1638,
	1646, 1647, 1651, 1652, 1653, 1654, 1656, 1665, 1668, 1682,
	1685, 1687, 1701, 1708, 1715, 1724, 1731, 1732, 1736, 1737,
	1739, 1750, 1753, 1754, 1758, 1766, 1769, 1771, 1772, 1773,
	1790, 1799, 1806, 1807, 1813, 1817, 1818, 1837, 1838, 1839,
	1840, 1842, 1843, 1854, 1864, 1865, 1866, 1867, 1871, 1873,
	1874, 100, 1206, 786, 101, 0, 392, 393, 0, 0,
	0, 0, 0, 0, 607, 1299, 1300, 2107, 2108, 2109,
	2110, 2111, 2112, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 1280, 251, 0, 0,
	686, 0, 687, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 704, 0, 706, 78, 707,
	750, 709, 0, 0, 1280, 1280, 0, 0, 0, 0,
	0, 609, 610, 750, 750, 750, 750, 747, 0, 747,
	727, 747, 745, 746, 0, 732, 0, 0, 0, 740,
	741, 0, 768, 0, 0, 775, 777, 778, 779, 780,
	776, 0, 785, 0, 0, 0, 330, 0, 0, 350,
	332, 0, 335, 336, 337, 338, 339, 340, 341, 342,
	343, 344, 345, 346, 0, 353, 0, 1309, 1312, 772,
	1327, 1328, 0, 1338, 1339, 200, 0, 200, 0, 0,
	0, 0, 163, 196, 0, 165, 196, 196, 196, 0,
	196, 196, 172, 173, 196, 175, 176, 177, 178, 179,
	196, 181, 182, 183, 196, 196, 186, 196, 196, 189,
	190, 191, 192, 193, 263, 200, 0, 0, 200, 0,
	0, 544, 0, 0, 0, 0, 549, 550, 551, 552,
	0, 0, 555, 556, -2, 45, 0, 0, 0, 0,
	0, 42, 63, 0, 791, 792, 62, 2119, 0, 50,
	0, 0, 1215, 1218, 1219, 1207, 1208, 1211, 0, 0,
	793, 799, 800, 789, 0, 810, 0, 0, 0, 0,
	840, 0, 843, 844, 845, 846, 847, 848, 0, 939,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 963,
	964, 965, 966, 967, 968, 969, 942, 0, 956, 0,
	0, 0, 0, 0, 0, 0, 1007, 1008, 1009, 1010,
	1011, 1012, 0, 798, 0, 0, 798, 798, 798, 798,
	798, 0, 0, 982, 1879, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 798,
	0, 1165, 0, 0, 1076, 1085, 0, 1077, 1086, 1078,
	1087, 1079, 0, 1080, 1088, 1081, 1089, 1082, 1083, 1090,
	1084, 0, 0, 0, 978, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 80, 921, 0, 85, 87,
	0, 0, 2071, 1257, 1258, 518, 1271, 1272, 1273, 0,
	1269, 0, 1214, 795, 624, 0, 394, 410, 507, 422,
	423, 424, 497, 426, 499, 499, 0, 499, 499, 499,
	499, 499, 515, 515, 515, 515, 515, 468, 469, 470,
	471, 472, 0, 0, 445, 497, 497, 497, 449, 487,
	488, 489, 490, 491, 492, 493, 494, 427, 428, 429,
	430, 431, 432, 433, 434, 435, 436, 502, 502, 504,
	504, 504, 504, 504, 410, 410, 410, 410, 0, 0,
	0, 606, 0, 1297, 0, 0, 251, -2, 0, -2,
	0, 916, 0, 0, 926, 0, 0, 111, 281, 267,
	110, 0, 245, 250, 246, 247, 248, 0, 0, 0,
	0, 258, 701, 1279, 0, 694, 76, 695, 696, 697,
	698, 699, 260, 700, 922, 1307, 1308, 1340, 1341, 1342,
	1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352,
	1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362,
	1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372,
	1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382,
	1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392,
	1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402,
	1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412,
	1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422,
	1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432,
	1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442,
	1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452,
	1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462,
	1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472,
	1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482,
	1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492,
	1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502,
	1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512,
	1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522,
	1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532,
	1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542,
	1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552,
	1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562,
	1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572,
	1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582,
	1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592,
	1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602,
	1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612,
	1613, 1614, 1615, 0, 708, 751, 0, 753, 0, 0,
	869, 713, 714, 715, 611, 721, 722, 723, 729, 750,
	0, 0, 0, 869, 750, 731, 970, 734, 1093, 0,
	758, 770, 769, 0, 782, 0, 327, 329, 331, 349,
	0, 0, 352, 355, 0, 0, 0, 0, 1330, 0,
	1332, 1334, 0, 0, 201, 202, 203, 200, 0, 195,
	0, 218, 266, 0, 164, 0, 198, 166, 167, 168,
	196, 170, 171, 174, 180, 184, 185, 187, 188, 262,
	0, 0, 0, 0, 161, 0, 545, 546, 547, 548,
	557, 554, 59, 0, 0, 1232, 1235, 1236, 1237, 1238,
	1239, 1303, 1304, 0, 763, 764, 0, 37, 0, 1221,
	0, 0, 0, 0, 1210, 1212, 1213, 0, 0, 1195,
	0, 0, 801, 794, 40, 936, 937, 938, 940, 957,
	0, 959, 961, 841, 842, 811, 0, 1175, 1176, 1177,
	1178, 1179, -2, 947, 948, 972, 973, 974, 0, 0,
	0, 0, 970, 952, 0, 992, 993, 994, 995, 996,
	997, 998, 999, 1000, 1001, 1002, 1003, 1006, 1107, 1108,
	0, 1184, 0, 980, 805, 806, 0, 1185, 1004, 1194,
	1005, 1180, 1013, 978, 1182, 1183, 1181, 0, 0, 0,
	0, 0, 975, 0, 1246, 0, 0, 0, 0, 1054,
	0, 0, 0, 0, 988, 1187, 0, 988, 1187, 0,
	0, 1740, 1852, 1632, 0, 0, 0, 1171, 1168, 0,
	0, 0, 1094, 0, 0, 0, 0, 0, 979, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 82, 0, 920, 0, 849, 851,
	852, 853, -2, 0, 857, 858, 929, 976, 1305, 0,
	-2, 0, 0, 74, 75, 0, 0, 0, 1255, 0,
	0, 0, 90, 91, 86, 1259, 0, -2, 1266, 1267,
	1175, 0, 1220, 798, 391, 625, 627, 630, 631, 632,
	633, 634, 635, 395, 397, 398, 399, 0, 589, 597,
	0, 0, 587, 589, 589, 0, 585, 586, 402, 510,
	508, 509, 425, 0, 515, 0, 515, 499, 499, 499,
	499, 454, 515, 457, 460, 461, 518, 0, 518, 518,
	518, 518, 515, 0, 0, 446, 447, 448, 437, 0,
	438, 502, 440, 0, 441, 442, 443, 444, 403, 404,
	405, 406, 603, 604, 605, 0, 0, 0, 96, 0,
	105, -2, 525, 526, 527, 0, 522, 1281, 106, 0,
	283, 284, 0, 221, 0, 252, 253, 113, 0, 0,
	268, 0, 389, 390, 0, 688, 0, 690, 257, 692,
	702, 703, 693, 0, 0, 79, 752, 710, 711, 712,
	933, 0, 0, 724, 748, 749, 747, 750, 728, 742,
	0, 0, 735, 0, 771, 870, 333, 334, 356, 82,
	0, 1310, 1329, 0, 1333, 1335, 0, 204, 206, 0,
	0, 155, 0, 0, 197, 0, 169, 0, 0, 0,
	0, 0, 553, 0, 60, 0, 1231, 0, 0, 641,
	642, -2, 679, 1289, 679, 679, 665, 572, 679, 0,
	0, 0, 64, 51, 0, 1928, 54, 0, 1216, 1217,
	1209, 0, 1274, 1275, 1196, 1197, 97, 802, 958, 960,
	962, 0, 978, 949, 970, 953, 0, 950, 0, 944,
	0, 1052, 0, 0, 0, 0, 0, 0, 0, 983,
	-2, 1050, 1051, 1053, 0, 0, 0, 1057, 0, 1060,
	0, 0, 1100, 0, 0, 1101, 1065, 0, 0, 0,
	0, 0, 1071, 1206, 0, 1169, 0, 0, 1074, 1075,
	1095, 0, 0, 1096, 1097, 1098, 1099, 1039, 0, 1040,
	0, 0, 0, 0, 0, 1046, 1047, 1048, 1049, 820,
	820, 820, 820, 820, 820, 820, 820, 820, 820, 820,
	820, 0, 0, 919, 0, 0, 0, 0, 0, 0,
	893, 0, 0, 896, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 862, 0, 864, 0, 929, 0, 0,
	0, 978, 0, 933, 0, 933, 933, 81, 0, 928,
	88, 89, 0, 0, 95, 519, 520, 0, 220, 0,
	628, 0, 396, 0, 590, 0, 0, 589, 589, 589,
	588, 589, 580, 590, 581, 0, 411, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 0, 0, 514, 0,
	539, 541, 0, 0, 421, 511, 0, 518, 0, 0,
	518, 515, 452, 453, 499, 458, 518, 462, 479, 0,
	463, 480, 464, 481, 465, 482, 466, 483, 518, 0,
	495, 0, 0, 439, 0, 621, 0, 1298, 98, 0,
	528, 529, 530, 0, 572, 572, 572, 0, 285, 286,
	287, 917, 0, 222, 223, 0, 0, 0, 0, 927,
	123, 0, 282, 0, 0, 0, 0, 0, 0, 0,
	77, 261, 719, 0, 612, 613, 869, 726, 971, 736,
	738, 739, 515, 0, 1331, 0, 0, 0, 0, 0,
	0, 216, 199, 0, 0, 0, 0, 162, 0, 1233,
	1234, 0, 0, 589, 0, 666, 667, 0, 680, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1290,
	1291, 0, 0, 0, 573, 0, 674, 675, 0, 0,
	52, 53, 1222, 38, 50, 0, 812, 1186, 0, 951,
	0, 954, 981, 807, 0, 1020, 820, 820, 820, 820,
	820, 0, 497, 497, 1154, 497, 504, 1157, 497, 1159,
	497, 1162, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1166, 1073, 1172, 0, 0, 0,
	813, 814, 816, 1041, 1042, 1043, 1044, 1045, 1024, 821,
	1025, 1026, 1028, 1029, 1031, 1032, 1033, 1034, 1036, 1037,
	1038, 1240, 0, 0, 0, 1225, 0, 933, 1248, 0,
	0, 0, 0, 2107, 2108, 850, 884, 886, 0, 881,
	894, 895, 897, 0, 899, 0, 0, 902, 903, 871,
	856, 977, 859, 0, 0, 0, 929, 868, 0, 0,
	0, 0, 0, 1206, 933, 72, 73, 0, 92, 93,
	94, 626, 629, 0, 591, 497, 497, 0, 595, 587,
	596, 574, 576, 577, 579, 0, 412, 0, 0, 420,
	512, 0, 538, 540, 542, 543, 498, 450, 475, 500,
	501, 451, 476, 518, 459, 455, 477, 516, 517, 467,
	484, 515, 0, 515, 0, 505, 0, 608, 622, 0,
	0, 0, 96, 572, 0, 0, 0, 0, 229, 0,
	225, 0, 0, 0, 131, 0, 114, 115, 116, 118,
	119, 0, 0, 0, 112, 0, 270, 0, 273, 274,
	689, 691, 934, 750, 1321, 918, 216, 205, 207, 208,
	0, 216, 219, 156, 0, 157, 159, 0, 158, 558,
	643, 0, 676, 0, 0, 1297, 587, 0, -2, 646,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 0, 672, 0, 648, 0, 676, 0, 669, 0,
	0, 55, 48, 97, 97, 1021, 955, 0, 1023, 1027,
	1022, 1030, 1035, 1055, 1151, 515, 1155, 1156, 1158, 1160,
	1161, 1163, 1059, 1056, 1058, 0, 0, 0, 0, 1066,
	0, 0, 0, 0, 0, 0, 1170, 0, 0, 818,
	817, 65, 0, 1240, 1223, 1242, 1244, 0, 0, 0,
	0, -2, 1611, 0, 875, 1206, 0, 0, 0, 0,
	0, 878, 885, 0, 0, 879, 0, 880, 898, 900,
	901, 854, 0, 0, 860, 0, 0, -2, 867, 0,
	0, 0, 877, 0, 1214, 71, 564, 0, 1211, 1211,
	589, 589, 0, 873, 0, 0, 513, 1093, 1093, 1093,
	1093, 1093, 1093, 1093, 1093, 1093, 0, 0, 456, 478,
	518, 496, 518, 0, 0, 623, 0, 96, 98, 0,
	533, 534, 535, 536, 537, 0, 97, 230, 231, 0,
	0, 0, 236, 0, 0, 0, 0, 0, 224, 226,
	227, 228, 149, 132, 133, 0, 0, 0, 0, 124,
	125, 0, 0, 0, 0, 0, 120, 121, 122, 269,
	0, 0, 272, 0, 0, 725, 1323, 1317, 209, 216,
	209, 0, 160, 0, 645, 677, 0, 410, 410, 0,
	589, 589, 668, 0, 1287, 1288, 0, 663, 676, 0,
	0, 0, 933, 0, 0, 803, 808, 1152, 1153, 0,
	0, 0, 0, 1067, 1068, 1069, 1102, 1072, 1167, 0,
	0, 1206, 0, 0, 66, 0, 1245, -2, 0, 0,
	83, 0, 1214, 1249, 1250, 1251, 1252, 1253, 882, 0,
	887, 0, 0, 929, 865, 0, 0, 0, 0, 0,
	70, 563, 567, 0, 572, 0, 592, 593, 594, 575,
	578, 0, 0, 407, 0, 473, 485, 474, 486, 503,
	506, 0, 103, 0, 531, 532, 0, 98, 232, 233,
	234, 235, 237, 238, 0, 0, 0, 109, 0, 0,
	134, 0, 0, 0, 0, 144, 145, 146, 147, 148,
	126, 127, 128, 129, 130, 117, 0, 0, 271, 0,
	276, 277, 1284, 1325, -2, 0, 152, 0, 209, 154,
	217, 644, 678, 400, 401, 0, 1297, 0, 647, 662,
	664, 0, 671, 0, 1198, 49, 97, 1061, 1063, 1062,
	1064, 0, 0, 0, 1091, 1092, 822, 0, 0, 1243,
	1224, 0, 1228, 0, 876, 69, 0, 872, 861, 863,
	929, 930, 931, 932, 0, 568, 569, 0, 571, 0,
	874, 418, 408, 409, 0, 565, 96, 0, 56, 239,
	240, 241, 242, 150, 151, 135, 136, 0, 138, 139,
	0, 0, 0, 279, 0, 275, 871, 0, 1317, 0,
	1319, 0, 1316, 0, 210, 153, 0, 0, 0, 670,
	0, 682, 0, 1203, 0, 804, 1070, 0, 0, 0,
	0, 0, 0, 819, 0, 1227, 0, 883, 866, 0,
	570, 0, 407, 102, 566, 104, 288, 96, 359, 360,
	361, 362, 363, 364, 365, 366, 367, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 383, 384, 385, 386, 387, 388, 0, 0,
	0, 56, 0, 140, 0, 142, 143, 278, 0, 36,
	0, 1324, 0, 1322, 0, 0, 1318, 0, 565, 0,
	0, 681, 0, 0, 832, 0, 0, 1103, 0, 1106,
	815, 823, 0, 826, 0, 0, 0, 837, 0, 824,
	1241, -2, 0, 906, 0, 0, 419, 96, 0, 0,
	108, 0, 0, 1299, 0, 0, -2, -2, -2, 1301,
	0, 357, 137, 141, 280, 1285, 1286, 1326, 0, 0,
	0, 649, 0, 565, 683, 0, 47, 0, 1204, 1205,
	1199, 1200, 1202, 1104, 0, 827, 828, 829, 830, 831,
	0, 0, 0, 0, 0, 98, 289, 290, 0, 299,
	0, 56, 0, 0, 0, 313, 0, 56, 1320, 1314,
	211, 212, 213, 215, 565, 673, 0, 833, 834, 0,
	0, 0, 0, 838, 0, 907, 908, 0, 0, 598,
	56, 0, 56, 300, 0, 0, 0, 0, 0, 0,
	1302, 243, 358, 0, 650, 0, 0, 0, 1201, 0,
	825, 0, 905, 911, 0, 599, 600, 0, 96, 291,
	292, 293, 294, 295, 56, 0, 297, 0, 56, 56,
	309, 310, 311, 56, 318, 320, 321, 322, 0, 324,
	325, 314, 214, 0, 835, 836, 1105, 904, 912, 910,
	601, 0, 602, 0, 0, 0, 107, 0, 57, 56,
	0, 0, 56, 0, 306, 0, 312, 0, 323, 0,
	1759, 909, 0, 0, 0, 614, 616, 617, 0, 0,
	615, 56, 0, -2, 302, 0, 0, 56, 307, 0,
	319, 684, 685, 0, 0, 0, 618, 619, 620, 296,
	298, 56, 304, 0, 56, 913, 0, 915, 0, 56,
	0, 914, 303, 0, -2, 305,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 92, 3, 3, 3, 128, 120, 3,
	68, 70, 125, 123, 69, 124, 178, 126, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 611,
	101, 100, 102, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 130, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 119, 3, 131,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 82, 83, 84, 85,
	86, 87, 88, 89, 90, 91, 93, 94, 95, 96,
	97, 98, 99, 103, 104, 105, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 116, 117, 118, 121,
	122, 127, 129, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 274, 275,
}

var yyTok3 = [...]int{
	57600, 276, 57601, 277, 57602, 278, 57603, 279, 57604, 280,
	57605, 281, 57606, 282, 57607, 283, 57608, 284, 57609, 285,
	57610, 286, 57611, 287, 57612, 288, 57613, 289, 57614, 290,
	57615, 291, 57616, 292, 57617, 293, 57618, 294, 57619, 295,
	57620, 296, 57621, 297, 57622, 298, 57623, 299, 57624, 300,
	57625, 301, 57626, 302, 57627, 303, 57628, 304, 57629, 305,
	57630, 306, 57631, 307, 57632, 308, 57633, 309, 57634, 310,
	57635, 311, 57636, 312, 57637, 313, 57638, 314, 57639, 315,
	57640, 316, 57641, 317, 57642, 318, 57643, 319, 57644, 320,
	57645, 321, 57646, 322, 57647, 323, 57648, 324, 57649, 325,
	57650, 326, 57651, 327, 57652, 328, 57653, 329, 57654, 330,
	57655, 331, 57656, 332, 57657, 333, 57658, 334, 57659, 335,
	57660, 336, 57661, 337, 57662, 338, 57663, 339, 57664, 340,
	57665, 341, 57666, 342, 57667, 343, 57668, 344, 57669, 345,
	57670, 346, 57671, 347, 57672, 348, 57673, 349, 57674, 350,
	57675, 351, 57676, 352, 57677, 353, 57678, 354, 57679, 355,
	57680, 356, 57681, 357, 57682, 358, 57683, 359, 57684, 360,
	57685, 361, 57686, 362, 57687, 363, 57688, 364, 57689, 365,
	57690, 366, 57691, 367, 57692, 368, 57693, 369, 57694, 370,
	57695, 371, 57696, 372, 57697, 373, 57698, 374, 57699, 375,
	57700, 376, 57701, 377, 57702, 378, 57703, 379, 57704, 380,
	57705, 381, 57706, 382, 57707, 383, 57708, 384, 57709, 385,
	57710, 386, 57711, 387, 57712, 388, 57713, 389, 57714, 390,
	57715, 391, 57716, 392, 57717, 393, 57718, 394, 57719, 395,
	57720, 396, 57721, 397, 57722, 398, 57723, 399, 57724, 400,
	57725, 401, 57726, 402, 57727, 403, 57728, 404, 57729, 405,
	57730, 406, 57731, 407, 57732, 408, 57733, 409, 57734, 410,
	57735, 411, 57736, 412, 57737, 413, 57738, 414, 57739, 415,
	57740, 416, 57741, 417, 57742, 418, 57743, 419, 57744, 420,
	57745, 421, 57746, 422, 57747, 423, 57748, 424, 57749, 425,
	57750, 426, 57751, 427, 57752, 428, 57753, 429, 57754, 430,
	57755, 431, 57756, 432, 57757, 433, 57758, 434, 57759, 435,
	57760, 436, 57761, 437, 57762, 438, 57763, 439, 57764, 440,
	57765, 441, 57766, 442, 57767, 443, 57768, 444, 57769, 445,
	57770, 446, 57771, 447, 57772, 448, 57773, 449, 57774, 450,
	57775, 451, 57776, 452, 57777, 453, 57778, 454, 57779, 455,
	57780, 456, 57781, 457, 57782, 458, 57783, 459, 57784, 460,
	57785, 461, 57786, 462, 57787, 463, 57788, 464, 57789, 465,
	57790, 466, 57791, 467, 57792, 468, 57793, 469, 57794, 470,
	57795, 471, 57796, 472, 57797, 473, 57798, 474, 57799, 475,
	57800, 476, 57801, 477, 57802, 478, 57803, 479, 57804, 480,
	57805, 481, 57806, 482, 57807, 483, 57808, 484, 57809, 485,
	57810, 486, 57811, 487, 57812, 488, 57813, 489, 57814, 490,
	57815, 491, 57816, 492, 57817, 493, 57818, 494, 57819, 495,
	57820, 496, 57821, 497, 57822, 498, 57823, 499, 57824, 500,
	57825, 501, 57826, 502, 57827, 503, 57828, 504, 57829, 505,
	57830, 506, 57831, 507, 57832, 508, 57833, 509, 57834, 510,
	57835, 511, 57836, 512, 57837, 513, 57838, 514, 57839, 515,
	57840, 516, 57841, 517, 57842, 518, 57843, 519, 57844, 520,
	57845, 521, 57846, 522, 57847, 523, 57848, 524, 57849, 525,
	57850, 526, 57851, 527, 57852, 528, 57853, 529, 57854, 530,
	57855, 531, 57856, 532, 57857, 533, 57858, 534, 57859, 535,
	57860, 536, 57861, 537, 57862, 538, 57863, 539, 57864, 540,
	57865, 541, 57866, 542, 57867, 543, 57868, 544, 57869, 545,
	57870, 546, 57871, 547, 57872, 548, 57873, 549, 57874, 550,
	57875, 551, 57876, 552, 57877, 553, 57878, 554, 57879, 555,
	57880, 556, 57881, 557, 57882, 558, 57883, 559, 57884, 560,
	57885, 561, 57886, 562, 57887, 563, 57888, 564, 57889, 565,
	57890, 566, 57891, 567, 57892, 568, 57893, 569, 57894, 570,
	57895, 571, 57896, 572, 57897, 573, 57898, 574, 57899, 575,
	57900, 576, 57901, 577, 57902, 578, 57903, 579, 57904, 580,
	57905, 581, 57906, 582, 57907, 583, 57908, 584, 57909, 585,
	57910, 586, 57911, 587, 57912, 588, 57913, 589, 57914, 590,
	57915, 591, 57916, 592, 57917, 593, 57918, 594, 57919, 595,
	57920, 596, 57921, 597, 57922, 598, 57923, 599, 57924, 600,
	57925, 601, 57926, 602, 57927, 603, 57928, 604, 57929, 605,
	57930, 606, 57931, 607, 57932, 608, 57933, 609, 57934, 610,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:543
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:547
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:554
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:589
		{
			setParseTree(yylex, nil)
		}
	case 36:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:595
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 37:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:601
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			if err := yyDollar[1].selStmt.SetInto(yyDollar[5].into); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 38:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:612
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:618
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 40:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:628
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:635
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 42:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:639
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:645
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:649
		{
			yyDollar[3].selStmt.SetWith(yyDollar[2].with)
			yyVAL.selStmt = yyDollar[3].selStmt
		}
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:656
		{
			yyVAL.with = &With{Ctes: yyDollar[2].tableExprs, Recursive: true}
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:659
		{
			yyVAL.with = &With{Ctes: yyDollar[1].tableExprs, Recursive: false}
		}
	case 47:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:665
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr), Window: yyDollar[13].window, Into: yyDollar[8].into}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 48:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:673
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 49:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:677
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 50:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:686
		{
			yyVAL.into = nil
		}
	case 51:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:690
		{
			yyVAL.into = &Into{Variables: yyDollar[2].variables}
		}
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:694
		{
			yyVAL.into = &Into{Outfile: string(yyDollar[3].bytes)}
		}
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:698
		{
			yyVAL.into = &Into{Dumpfile: string(yyDollar[3].bytes)}
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:704
		{
			yyVAL.variables = Variables{yyDollar[1].colIdent}
		}
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:708
		{
			yyVAL.variables = append(yyVAL.variables, yyDollar[3].colIdent)
		}
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:713
		{
			yyVAL.with = nil
		}
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:717
		{
			yyVAL.with = yyDollar[2].with
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:723
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:727
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:733
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[4].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[2].columns}
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:739
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:747
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:753
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:761
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 65:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:767
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[7].ins
			ins.Action = yyDollar[2].str
			ins.Comments = yyDollar[3].bytes2
			ins.Ignore = yyDollar[4].str
			ins.Table = yyDollar[5].tableName
			ins.Partitions = yyDollar[6].partitions
			ins.OnDup = OnDup(yyDollar[8].assignExprs)
			ins.With = yyDollar[1].with
			yyVAL.statement = ins
		}
	case 66:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:780
		{
			cols := make(Columns, 0, len(yyDollar[8].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[9].assignExprs))
			for _, updateList := range yyDollar[8].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[2].str, Comments: Comments(yyDollar[3].bytes2), Ignore: yyDollar[4].str, Table: yyDollar[5].tableName, Partitions: yyDollar[6].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[9].assignExprs), With: yyDollar[1].with}
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:792
		{
			yyVAL.str = InsertStr
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:796
		{
			yyVAL.str = ReplaceStr
		}
	case 69:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:802
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[3].bytes2), Ignore: yyDollar[4].str, TableExprs: yyDollar[5].tableExprs, Exprs: yyDollar[7].assignExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), OrderBy: yyDollar[9].orderBy, Limit: yyDollar[10].limit, With: yyDollar[1].with}
		}
	case 70:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:808
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitions, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit, With: yyDollar[1].with}
		}
	case 71:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:812
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[5].tableNames, TableExprs: yyDollar[7].tableExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), With: yyDollar[1].with}
		}
	case 72:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:816
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), With: yyDollar[1].with}
		}
	case 73:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:820
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), With: yyDollar[1].with}
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:825
		{
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:826
		{
		}
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:830
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:834
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:840
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:844
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:850
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 81:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:854
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 82:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:859
		{
			yyVAL.partitions = nil
		}
	case 83:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:863
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:869
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 85:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:873
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 86:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:880
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:889
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:893
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:899
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:903
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 91:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:907
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:913
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:917
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:921
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:925
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:930
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 97:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:935
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:940
		{
			yyVAL.boolean = yySpecialCommentMode(yylex)
		}
	case 99:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:946
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:955
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:960
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 102:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:965
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 103:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:969
		{
			yyDollar[2].viewSpec.ViewName = yyDollar[4].tableName.ToViewName()
			yyDollar[2].viewSpec.ViewExpr = yyDollar[8].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[2].viewSpec, SpecialCommentMode: yyDollar[7].boolean, SubStatementPositionStart: yyDollar[6].int, SubStatementPositionEnd: yyDollar[9].int - 1}
		}
	case 104:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:975
		{
			yyDollar[4].viewSpec.ViewName = yyDollar[6].tableName.ToViewName()
			yyDollar[4].viewSpec.ViewExpr = yyDollar[10].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[4].viewSpec, SpecialCommentMode: yyDollar[9].boolean, SubStatementPositionStart: yyDollar[8].int, SubStatementPositionEnd: yyDollar[11].int - 1, OrReplace: true}
		}
	case 105:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:981
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 106:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:989
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 107:
		yyDollar = yyS[yypt-16 : yypt+1]
//line sql.y:997
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName, Definer: yyDollar[2].str, Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[15].statement}, SpecialCommentMode: yyDollar[14].boolean, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[16].int - 1}
		}
	case 108:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1001
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName, Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[11].statement}, SpecialCommentMode: yyDollar[10].boolean, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[12].int - 1}
		}
	case 109:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1005
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].tlsOptionItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].accountLimitItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].passLockItems)
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames, TLSOptions: tlsOptions, AccountLimits: accountLimits, PasswordOptions: passwordOptions, Locked: locked, Attribute: yyDollar[9].str}
		}
	case 110:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1024
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 111:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1033
		{
			yyVAL.accountNames = nil
		}
	case 112:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1037
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 113:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1042
		{
			yyVAL.tlsOptionItems = nil
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1046
		{
			yyVAL.tlsOptionItems = nil
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1050
		{
			yyVAL.tlsOptionItems = yyDollar[2].tlsOptionItems
		}
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1056
		{
			yyVAL.tlsOptionItems = []TLSOptionItem{yyDollar[1].tlsOptionItem}
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1060
		{
			yyVAL.tlsOptionItems = append(yyDollar[1].tlsOptionItems, yyDollar[3].tlsOptionItem)
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1066
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1070
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1074
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1078
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1082
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 123:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1087
		{
			yyVAL.accountLimitItems = nil
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1091
		{
			yyVAL.accountLimitItems = yyDollar[2].accountLimitItems
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1097
		{
			yyVAL.accountLimitItems = []AccountLimitItem{yyDollar[1].accountLimitItem}
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1101
		{
			yyVAL.accountLimitItems = append(yyDollar[1].accountLimitItems, yyDollar[2].accountLimitItem)
		}
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1107
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1111
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1115
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1119
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 131:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1124
		{
			yyVAL.passLockItems = nil
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1128
		{
			yyVAL.passLockItems = yyDollar[1].passLockItems
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1134
		{
			yyVAL.passLockItems = []PassLockItem{yyDollar[1].passLockItem}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1138
		{
			yyVAL.passLockItems = append(yyDollar[1].passLockItems, yyDollar[2].passLockItem)
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1144
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1148
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 137:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1152
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1156
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1160
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 140:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1164
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 141:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1168
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 142:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1172
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 143:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1176
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1180
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1184
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1188
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1192
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1196
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 149:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1201
		{
			yyVAL.str = ""
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1205
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.str = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1210
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 152:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1216
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 153:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1221
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[5].grantObjectType, PrivilegeLevel: yyDollar[6].privilegeLevel, To: yyDollar[8].accountNames, WithGrantOption: yyDollar[9].boolean, As: yyDollar[10].grantAssumption}
		}
	case 154:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1226
		{
			yyVAL.statement = &GrantPrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 155:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1230
		{
			yyVAL.statement = &GrantRole{Roles: yyDollar[2].accountNames, To: yyDollar[4].accountNames, WithAdminOption: yyDollar[5].boolean}
		}
	case 156:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1234
		{
			yyVAL.statement = &GrantProxy{On: yyDollar[4].accountName, To: yyDollar[6].accountNames, WithGrantOption: yyDollar[7].boolean}
		}
	case 157:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1240
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &RevokePrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 158:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1245
		{
			yyVAL.statement = &RevokePrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 159:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1249
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[7].accountNames}
		}
	case 160:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1253
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[8].accountNames}
		}
	case 161:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1257
		{
			yyVAL.statement = &RevokeRole{Roles: yyDollar[2].accountNames, From: yyDollar[4].accountNames}
		}
	case 162:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1261
		{
			yyVAL.statement = &RevokeProxy{On: yyDollar[4].accountName, From: yyDollar[6].accountNames}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1267
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].strs}
		}
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1271
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].strs}
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1275
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].strs}
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1279
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].strs}
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1283
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].strs}
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1287
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].strs}
		}
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1291
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].strs}
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1295
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].strs}
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1299
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].strs}
		}
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1303
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].strs}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1307
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].strs}
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1311
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].strs}
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1315
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].strs}
		}
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1319
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].strs}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1323
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].strs}
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1327
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].strs}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1331
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].strs}
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1335
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].strs}
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1339
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].strs}
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1343
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].strs}
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1347
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].strs}
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1351
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].strs}
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1355
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].strs}
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1359
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].strs}
		}
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1363
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].strs}
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1367
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].strs}
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1371
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].strs}
		}
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1375
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].strs}
		}
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1379
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].strs}
		}
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1383
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].strs}
		}
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1387
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].strs}
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1393
		{
			yyVAL.grantPrivileges = []Privilege{yyDollar[1].grantPrivilege}
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1397
		{
			yyVAL.grantPrivileges = append(yyDollar[1].grantPrivileges, yyDollar[3].grantPrivilege)
		}
	case 196:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1402
		{
			yyVAL.strs = nil
		}
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1406
		{
			yyVAL.strs = yyDollar[2].strs
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1412
		{
			yyVAL.strs = []string{yyDollar[1].colIdent.String()}
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1416
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].colIdent.String())
		}
	case 200:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1421
		{
			yyVAL.grantObjectType = GrantObjectType_Any
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1425
		{
			yyVAL.grantObjectType = GrantObjectType_Table
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1429
		{
			yyVAL.grantObjectType = GrantObjectType_Function
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1433
		{
			yyVAL.grantObjectType = GrantObjectType_Procedure
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1439
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1443
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1447
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].colIdent.String()}
		}
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1451
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: "*"}
		}
	case 208:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1455
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: yyDollar[3].colIdent.String()}
		}
	case 209:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1460
		{
			yyVAL.grantAssumption = nil
		}
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1464
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 211:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1468
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 212:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1472
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].accountName, Roles: nil}
		}
	case 213:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1476
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].accountName, Roles: nil}
		}
	case 214:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1480
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].accountName, Roles: yyDollar[7].accountNames}
		}
	case 215:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1484
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].accountName, Roles: yyDollar[5].accountNames}
		}
	case 216:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1489
		{
			yyVAL.boolean = false
		}
	case 217:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1493
		{
			yyVAL.boolean = true
		}
	case 218:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1498
		{
			yyVAL.boolean = false
		}
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1502
		{
			yyVAL.boolean = true
		}
	case 220:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1509
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 221:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1521
		{
			yyVAL.procedureParams = nil
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1525
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1531
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1535
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1541
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[1].colIdent.String(), Type: yyDollar[2].columnType}
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1545
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1549
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1553
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 229:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1558
		{
			yyVAL.characteristics = nil
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1562
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1568
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1572
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1578
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1582
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1586
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1590
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1594
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1598
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1602
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1606
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1610
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1614
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1620
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1626
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: "", Definer: yyDollar[1].str, Security: yyDollar[2].str}
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1630
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: yyDollar[1].str, Definer: yyDollar[2].str, Security: yyDollar[3].str}
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1636
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1640
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1644
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 249:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1649
		{
			yyVAL.str = ""
		}
	case 250:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1653
		{
			yyVAL.str = yyDollar[3].accountName.String()
		}
	case 251:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1658
		{
			yyVAL.str = ""
		}
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1662
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1666
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1672
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1676
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1680
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1686
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1694
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1698
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1704
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1708
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1714
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1722
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1730
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1740
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1744
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1750
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1754
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 269:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1758
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1762
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 271:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1766
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 272:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1772
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1776
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1780
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 275:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1784
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 276:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1788
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 277:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1792
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1798
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1802
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 280:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1806
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1812
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1816
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1822
		{
			yyVAL.str = BeforeStr
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1826
		{
			yyVAL.str = AfterStr
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1832
		{
			yyVAL.str = InsertStr
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1836
		{
			yyVAL.str = UpdateStr
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1840
		{
			yyVAL.str = DeleteStr
		}
	case 288:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1845
		{
			yyVAL.triggerOrder = nil
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1849
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1853
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1859
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 296:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1869
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 297:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1875
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 298:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1879
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1885
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1889
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 301:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1895
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 302:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1901
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 303:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1906
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 304:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1911
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 305:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1917
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1925
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1929
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 308:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1935
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 309:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1941
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 310:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1945
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 311:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1949
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 312:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1953
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1957
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 314:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1961
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1968
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1972
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1976
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1982
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1986
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1992
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1996
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2000
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2004
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2008
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2012
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2018
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2022
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2026
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 329:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2030
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2036
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2040
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2046
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2050
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2056
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2062
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2066
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2070
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2074
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2078
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2082
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2086
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2090
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2094
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2098
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2102
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2106
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2112
		{
			yyVAL.statement = &Resignal{}
		}
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2116
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 349:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2120
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2124
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2128
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 352:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2132
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2138
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 354:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2143
		{
			yyVAL.exprs = nil
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2147
		{
			yyVAL.exprs = nil
		}
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2151
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2157
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2161
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2167
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 389:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2202
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
		}
	case 390:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2216
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: TableName{Name: NewTableIdent(string(yyDollar[5].bytes))}, IfNotExists: ne, Temporary: neTemp}
		}
	case 391:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2232
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2239
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2244
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2249
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2255
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 396:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2259
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2264
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2268
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2272
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2278
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2286
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2296
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2304
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2312
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2320
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2328
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 407:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2337
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2341
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2345
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 410:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2350
		{
			yyVAL.columnType = ColumnType{}
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2354
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2363
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2372
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2381
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2390
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2399
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2408
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 418:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2417
		{
			opt := ColumnType{GeneratedExpr: yyDollar[4].expr, Stored: yyDollar[6].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 419:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2426
		{
			opt := ColumnType{GeneratedExpr: yyDollar[6].expr, Stored: yyDollar[8].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2435
		{
			opt := ColumnType{SRID: NewIntVal(yyDollar[3].bytes)}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2446
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2457
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2462
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2468
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2472
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2476
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2480
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2484
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2488
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2492
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2496
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2500
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2504
		{
			yyVAL.columnType = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2510
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2516
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2522
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2528
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 441:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2534
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2540
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2546
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2552
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2560
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2564
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2568
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2572
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2576
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2582
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2586
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2590
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2594
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2598
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 455:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2602
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 456:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2606
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2610
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2614
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 459:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2618
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 460:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2622
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2626
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2630
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2634
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2638
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2642
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2646
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 467:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2650
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2654
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2658
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2662
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2666
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2670
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 473:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2674
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 474:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2679
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2683
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 476:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2687
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 477:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2691
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 478:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2695
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, BinaryCollate: true}
		}
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2699
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2703
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2707
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2711
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2715
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 484:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2719
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 485:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2723
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, BinaryCollate: true}
		}
	case 486:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2727
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, BinaryCollate: true}
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2733
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2737
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2741
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2745
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2749
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2753
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2757
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2761
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2767
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2772
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2777
		{
			yyVAL.sqlVal = nil
		}
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2781
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 499:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2786
		{
			yyVAL.sqlVal = nil
		}
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2790
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2794
		{
			yyVAL.sqlVal = NewValArg(yyDollar[2].bytes)
		}
	case 502:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2800
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 503:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2804
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 504:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2812
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2816
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 506:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2822
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 507:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2830
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2834
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2838
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 510:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2843
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2847
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 512:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2853
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2859
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2865
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2870
		{
			yyVAL.str = ""
		}
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2874
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2878
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2883
		{
			yyVAL.str = ""
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2887
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2891
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2896
		{
			yyVAL.boolean = false
		}
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2900
		{
			yyVAL.boolean = true
		}
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2905
		{
			yyVAL.charsetCollates = nil
		}
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2909
		{
			yyVAL.charsetCollates = yyDollar[1].charsetCollates
		}
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2915
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2919
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2923
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2927
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 529:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2931
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2935
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 531:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2941
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 532:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2945
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2949
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2953
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2959
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2963
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 537:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2969
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2975
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2979
		{
			yyVAL.colKeyOpt = colKey
		}
	case 540:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2983
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2987
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2991
		{
			yyVAL.colKeyOpt = colKeyFulltextKey
		}
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2997
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3003
		{
			yyVAL.statement = &Flush{Type: yyDollar[2].str, Option: yyDollar[3].flushOption}
		}
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3009
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3013
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3017
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3021
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3025
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3029
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3033
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3037
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3041
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].str}
		}
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3045
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3049
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3053
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 557:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3058
		{
			yyVAL.str = ""
		}
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3060
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3064
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3066
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 561:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3069
		{
			yyVAL.str = ""
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3071
		{
			yyVAL.str = yyDollar[1].str
		}
	case 563:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3075
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 564:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3079
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 565:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3084
		{
			yyVAL.indexOptions = nil
		}
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3088
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3094
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3098
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3104
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3108
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3113
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 572:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3119
		{
			yyVAL.str = ""
		}
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3123
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3131
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 575:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3135
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3139
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3143
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true}
		}
	case 578:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3147
		{
			var name string
			name = yyDollar[2].str
			if name == "" {
				name = yyDollar[5].str
			}
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].str), Name: NewColIdent(name), Unique: true}
		}
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3156
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3160
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3164
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3170
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3174
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3178
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3184
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3188
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 587:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3193
		{
			yyVAL.str = ""
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3197
		{
			yyVAL.str = yyDollar[1].str
		}
	case 589:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3202
		{
			yyVAL.str = ""
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3206
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3212
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3216
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3222
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3226
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3232
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3236
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3240
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 598:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3246
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 599:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3250
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 600:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3254
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 601:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3258
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 602:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3262
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3268
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3273
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3277
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3281
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3285
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 608:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3291
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3297
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3301
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3306
		{
			yyVAL.str = ""
		}
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3310
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3314
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3320
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3326
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3332
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3336
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3340
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3344
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3348
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 621:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3353
		{
			yyVAL.boolean = true
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3357
		{
			yyVAL.boolean = true
		}
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3361
		{
			yyVAL.boolean = false
		}
	case 624:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3366
		{
			yyVAL.str = ""
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3370
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3374
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3382
		{
			yyVAL.str = yyDollar[1].str
		}
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3386
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3390
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3396
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3400
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3404
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3409
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3413
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3417
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 636:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3423
		{
			yyVAL.str = ""
		}
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3427
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 638:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3432
		{
			yyVAL.str = string("")
		}
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3436
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 641:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3445
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3458
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3462
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 644:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3468
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 645:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3475
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3482
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 647:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3486
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3490
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 649:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3495
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 650:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3499
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3503
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3508
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3513
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3518
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3523
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3528
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3533
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3538
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3543
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3548
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3553
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 662:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3557
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3561
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 664:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3568
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3574
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3578
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3584
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 668:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3590
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3595
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 670:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3599
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 671:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3603
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3607
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 673:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3613
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[7].indexColumns, Options: yyDollar[9].indexOptions}
			yyVAL.ddl = ddl
		}
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3619
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3623
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 676:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3628
		{
			yyVAL.columnOrder = nil
		}
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3632
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3636
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3641
		{
		}
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3643
		{
		}
	case 681:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3647
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3653
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3657
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 684:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3663
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 685:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3667
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3673
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3677
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3683
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 689:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3687
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3695
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 691:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3699
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 692:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3705
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 693:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3713
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 694:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3717
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3725
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 696:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3733
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3741
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName}, IfExists: exists}
		}
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3749
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName}, IfExists: exists}
		}
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3757
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3765
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 701:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3774
		{

		}
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3778
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3782
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3788
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3792
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3798
		{
			yyVAL.statement = &Analyze{Tables: yyDollar[3].tableNames}
		}
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3804
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 708:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3809
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3813
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 710:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3817
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 711:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3821
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 712:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3825
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 713:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3830
		{
			yyVAL.statement = &Show{Type: CreateProcedureStr, Table: yyDollar[4].tableName}
		}
	case 714:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3834
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 715:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3838
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3842
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3846
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3850
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 719:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3854
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3858
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 721:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3862
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 722:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3866
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 723:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3870
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 724:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3874
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 725:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3878
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, AsOf: yyDollar[7].expr, Filter: yyDollar[8].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, Table: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 726:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3883
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3888
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 728:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3892
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 729:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3896
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3900
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3904
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3910
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 733:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3918
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 734:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3922
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 735:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3927
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 736:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3931
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 737:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3936
		{
			yyVAL.statement = &ShowPrivileges{}
		}
	case 738:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3940
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 739:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3944
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3948
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3952
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3958
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 743:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3964
		{
			yyVAL.boolean = false
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3968
		{
			yyVAL.boolean = true
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3974
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3978
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 747:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3984
		{
			yyVAL.str = ""
		}
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3988
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3992
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 750:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3998
		{
			yyVAL.showFilter = nil
		}
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4002
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4006
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[3].bytes)}
		}
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4010
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 754:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4016
		{
			yyVAL.str = ""
		}
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4020
		{
			yyVAL.str = SessionStr
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4024
		{
			yyVAL.str = GlobalStr
		}
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4030
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 758:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4034
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: yyDollar[2].tableIdent.v + "/" + yyDollar[4].tableIdent.v}}
		}
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4038
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4044
		{
			yyVAL.statement = &Begin{}
		}
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4048
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4054
		{
			yyVAL.statement = &Begin{}
		}
	case 763:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4058
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 764:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4062
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4068
		{
			yyVAL.statement = &Commit{}
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4074
		{
			yyVAL.statement = &Rollback{}
		}
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4080
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4086
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4090
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4094
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 771:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4098
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4104
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4109
		{
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4110
		{
		}
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4114
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4118
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4124
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4132
		{
			yyVAL.str = ""
		}
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4136
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4147
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[3].expr}
			yyVAL.statement = &Show{Type: "columns", Table: yyDollar[2].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 786:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4153
		{
			setAllowComments(yylex, true)
		}
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4157
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 788:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4163
		{
			yyVAL.bytes2 = nil
		}
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4167
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4173
		{
			yyVAL.str = UnionStr
		}
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4177
		{
			yyVAL.str = UnionAllStr
		}
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4181
		{
			yyVAL.str = UnionDistinctStr
		}
	case 793:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4186
		{
			yyVAL.byt = 0
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4190
		{
			yyVAL.byt = 1
		}
	case 795:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4195
		{
			yyVAL.str = ""
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4199
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4203
		{
			yyVAL.str = SQLCacheStr
		}
	case 798:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4208
		{
			yyVAL.str = ""
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4212
		{
			yyVAL.str = ""
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4216
		{
			yyVAL.str = DistinctStr
		}
	case 801:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4221
		{
			yyVAL.str = ""
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4225
		{
			yyVAL.str = StraightJoinHint
		}
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4231
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 804:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4239
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4250
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4254
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4258
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 808:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4262
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4268
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4272
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4276
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 812:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4280
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4286
		{
			yyVAL.over = &Over{NameRef: yyDollar[2].colIdent}
		}
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4290
		{
			yyVAL.over = (*Over)(yyDollar[2].windowDef)
		}
	case 815:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4296
		{
			yyVAL.windowDef = &WindowDef{NameRef: yyDollar[2].colIdent, PartitionBy: yyDollar[3].exprs, OrderBy: yyDollar[4].orderBy, Frame: yyDollar[5].frame}
		}
	case 816:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4301
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4304
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 818:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4309
		{
			yyVAL.exprs = nil
		}
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4313
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 820:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4318
		{
			yyVAL.over = nil
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4322
		{
			yyVAL.over = yyDollar[1].over
		}
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4327
		{
			yyVAL.frame = nil
		}
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4331
		{
			yyVAL.frame = &Frame{Unit: RowsUnit, Extent: yyDollar[2].frameExtent}
		}
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4335
		{
			yyVAL.frame = &Frame{Unit: RangeUnit, Extent: yyDollar[2].frameExtent}
		}
	case 825:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4342
		{
			startBound := yyDollar[2].frameBound
			endBound := yyDollar[4].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound, End: endBound}
		}
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4365
		{
			startBound := yyDollar[1].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound}
		}
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4380
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedPreceding}
		}
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4384
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedFollowing}
		}
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4388
		{
			yyVAL.frameBound = &FrameBound{Type: CurrentRow}
		}
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4392
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprPreceding,
			}
		}
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4399
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprFollowing,
			}
		}
	case 832:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4407
		{
			yyVAL.window = nil
		}
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4410
		{
			yyVAL.window = yyDollar[2].window
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4416
		{
			yyVAL.window = Window{yyDollar[1].windowDef}
		}
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4419
		{
			yyVAL.window = append(yyDollar[1].window, yyDollar[3].windowDef)
		}
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4425
		{
			def := yyDollar[3].windowDef
			def.Name = yyDollar[1].colIdent
			yyVAL.windowDef = def
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4434
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4438
		{
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 839:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4443
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4447
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 841:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4451
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 842:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4455
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[2].bytes))
		}
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4461
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4465
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4469
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4473
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4477
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4481
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4487
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4491
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4501
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 854:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4505
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4515
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4521
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4529
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4535
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 861:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4539
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4545
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 863:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4550
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4561
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 865:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4565
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 866:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4569
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4573
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4577
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 869:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4588
		{
			yyVAL.expr = nil
		}
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4592
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 871:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4597
		{
			yyVAL.columns = nil
		}
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4601
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4607
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4611
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4617
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4621
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 877:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4627
		{
			yyVAL.tableExpr = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].selectExprs}
		}
	case 878:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4641
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 879:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4645
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 880:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4649
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4653
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 882:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4659
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 883:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4661
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 884:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4665
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4667
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 886:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4671
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 887:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4673
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 888:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4676
		{
			yyVAL.empty = struct{}{}
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4678
		{
			yyVAL.empty = struct{}{}
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4683
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4687
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4693
		{
			yyVAL.str = JoinStr
		}
	case 894:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4697
		{
			yyVAL.str = JoinStr
		}
	case 895:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4701
		{
			yyVAL.str = JoinStr
		}
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4707
		{
			yyVAL.str = StraightJoinStr
		}
	case 897:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4713
		{
			yyVAL.str = LeftJoinStr
		}
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4717
		{
			yyVAL.str = LeftJoinStr
		}
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4721
		{
			yyVAL.str = RightJoinStr
		}
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4725
		{
			yyVAL.str = RightJoinStr
		}
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4729
		{
			yyVAL.str = FullOuterJoinStr
		}
	case 902:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4735
		{
			yyVAL.str = NaturalJoinStr
		}
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4739
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 904:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:4749
		{
			yyVAL.tableExpr = &JSONTableExpr{Data: yyDollar[3].expr, Path: string(yyDollar[5].bytes), Spec: yyDollar[8].TableSpec, Alias: yyDollar[12].tableIdent}
		}
	case 905:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:4753
		{
			yyVAL.tableExpr = &JSONTableExpr{Data: yyDollar[3].expr, Path: string(yyDollar[5].bytes), Spec: yyDollar[8].TableSpec, Alias: yyDollar[11].tableIdent}
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4759
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4764
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4772
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 909:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4784
		{
			yyVAL.columnType = ColumnType{Path: string(yyDollar[2].bytes)}
		}
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4788
		{
			yyVAL.columnType = ColumnType{Path: string(yyDollar[3].bytes)}
		}
	case 911:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4794
		{

		}
	case 912:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4812
		{

		}
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4816
		{

		}
	case 914:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4820
		{

		}
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4824
		{

		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4830
		{
			yyVAL.triggerName = TriggerName{Name: yyDollar[1].colIdent}
		}
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4834
		{
			yyVAL.triggerName = TriggerName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4840
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4846
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4850
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4856
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4860
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4864
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4868
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4872
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4878
		{
			yyVAL.procedureName = ProcedureName{Name: yyDollar[1].colIdent}
		}
	case 927:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4882
		{
			yyVAL.procedureName = ProcedureName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4888
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 929:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4893
		{
			yyVAL.indexHints = nil
		}
	case 930:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4897
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 931:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4901
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 932:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4905
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 933:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4910
		{
			yyVAL.expr = nil
		}
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4914
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4920
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4924
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4928
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4932
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 939:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4936
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4940
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4944
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4948
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 943:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4954
		{
			yyVAL.str = ""
		}
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4958
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4964
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4968
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4974
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4978
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 949:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4982
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 950:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4986
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 951:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4990
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4994
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 953:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4998
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 954:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5002
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 955:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5006
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5010
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5016
		{
			yyVAL.str = IsNullStr
		}
	case 958:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5020
		{
			yyVAL.str = IsNotNullStr
		}
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5024
		{
			yyVAL.str = IsTrueStr
		}
	case 960:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5028
		{
			yyVAL.str = IsNotTrueStr
		}
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5032
		{
			yyVAL.str = IsFalseStr
		}
	case 962:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5036
		{
			yyVAL.str = IsNotFalseStr
		}
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5042
		{
			yyVAL.str = EqualStr
		}
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5046
		{
			yyVAL.str = LessThanStr
		}
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5050
		{
			yyVAL.str = GreaterThanStr
		}
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5054
		{
			yyVAL.str = LessEqualStr
		}
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5058
		{
			yyVAL.str = GreaterEqualStr
		}
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5062
		{
			yyVAL.str = NotEqualStr
		}
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5066
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 970:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5071
		{
			yyVAL.expr = nil
		}
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5075
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5081
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5085
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5089
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5095
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5101
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5105
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 978:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5111
		{
			yyVAL.selectExprs = nil
		}
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5118
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5122
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5128
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5132
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5138
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5142
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5146
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5150
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5154
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5158
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5162
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5166
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5170
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5174
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5178
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5182
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5186
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5190
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5194
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5198
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5202
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5206
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5210
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5214
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5218
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5222
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5226
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 1007:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5230
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5234
		{
			yyVAL.expr = &UnaryExpr{Operator: yyDollar[1].str, Expr: yyDollar[2].expr}
		}
	case 1009:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5238
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 1010:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5246
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 1011:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5260
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 1012:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5264
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5268
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 1020:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5288
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 1021:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5292
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 1022:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5302
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1023:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5306
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1024:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5310
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1025:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5314
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1026:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5318
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1027:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5322
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1028:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5326
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1029:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5330
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1030:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5334
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1031:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5338
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1032:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5342
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1033:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5346
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1034:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5350
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1035:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5354
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1036:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5358
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1037:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5362
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1038:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5366
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1039:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5375
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1040:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5379
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1041:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5383
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 1042:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5387
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1043:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5391
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 1044:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5395
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1045:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5399
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1046:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5403
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1047:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5407
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1048:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5411
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1049:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5415
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1050:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5426
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1051:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5430
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1052:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5434
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1053:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5438
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1054:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5442
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1055:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5446
		{
			yyVAL.expr = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 1056:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5450
		{
			yyVAL.expr = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 1057:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5454
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1058:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5458
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1059:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5462
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 1060:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5466
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1061:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5470
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1062:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5474
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1063:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5478
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1064:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5482
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1065:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5486
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 1066:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5490
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 1067:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5494
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 1068:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5498
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 1069:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5502
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 1070:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5506
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 1071:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5510
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1072:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5514
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 1073:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5518
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 1074:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5522
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 1075:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5526
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5536
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1077:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5540
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1078:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5544
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1079:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5549
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1080:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5554
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1081:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5559
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1082:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5565
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1083:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5570
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5574
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1085:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5579
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5583
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1087:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5587
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1088:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5592
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1089:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5597
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1090:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5602
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1091:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5606
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1092:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5610
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5621
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1096:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5631
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1097:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5635
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1098:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5639
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1099:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5643
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1100:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5647
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1101:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5651
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1102:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5657
		{
			yyVAL.str = ""
		}
	case 1103:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5661
		{
			yyVAL.str = BooleanModeStr
		}
	case 1104:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5665
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 1105:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5669
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 1106:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5673
		{
			yyVAL.str = QueryExpansionStr
		}
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5679
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5683
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5689
		{
			yyVAL.str = Armscii8Str
		}
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5693
		{
			yyVAL.str = AsciiStr
		}
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5697
		{
			yyVAL.str = Big5Str
		}
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5701
		{
			yyVAL.str = UBinaryStr
		}
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5705
		{
			yyVAL.str = Cp1250Str
		}
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5709
		{
			yyVAL.str = Cp1251Str
		}
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5713
		{
			yyVAL.str = Cp1256Str
		}
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5717
		{
			yyVAL.str = Cp1257Str
		}
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5721
		{
			yyVAL.str = Cp850Str
		}
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5725
		{
			yyVAL.str = Cp852Str
		}
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5729
		{
			yyVAL.str = Cp866Str
		}
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5733
		{
			yyVAL.str = Cp932Str
		}
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5737
		{
			yyVAL.str = Dec8Str
		}
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5741
		{
			yyVAL.str = EucjpmsStr
		}
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5745
		{
			yyVAL.str = EuckrStr
		}
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5749
		{
			yyVAL.str = Gb18030Str
		}
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5753
		{
			yyVAL.str = Gb2312Str
		}
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5757
		{
			yyVAL.str = GbkStr
		}
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5761
		{
			yyVAL.str = Geostd8Str
		}
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5765
		{
			yyVAL.str = GreekStr
		}
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5769
		{
			yyVAL.str = HebrewStr
		}
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5773
		{
			yyVAL.str = Hp8Str
		}
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5777
		{
			yyVAL.str = Keybcs2Str
		}
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5781
		{
			yyVAL.str = Koi8rStr
		}
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5785
		{
			yyVAL.str = Koi8uStr
		}
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5789
		{
			yyVAL.str = Latin1Str
		}
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5793
		{
			yyVAL.str = Latin2Str
		}
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5797
		{
			yyVAL.str = Latin5Str
		}
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5801
		{
			yyVAL.str = Latin7Str
		}
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5805
		{
			yyVAL.str = MacceStr
		}
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5809
		{
			yyVAL.str = MacromanStr
		}
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5813
		{
			yyVAL.str = SjisStr
		}
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5817
		{
			yyVAL.str = Swe7Str
		}
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5821
		{
			yyVAL.str = Tis620Str
		}
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5825
		{
			yyVAL.str = Ucs2Str
		}
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5829
		{
			yyVAL.str = UjisStr
		}
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5833
		{
			yyVAL.str = Utf16Str
		}
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5837
		{
			yyVAL.str = Utf16leStr
		}
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5841
		{
			yyVAL.str = Utf32Str
		}
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5845
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5849
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5853
		{
			yyVAL.str = Utf8mb4Str
		}
	case 1151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5859
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5863
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 1153:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5867
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5871
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1155:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5875
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5879
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5885
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1158:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5889
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5893
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1160:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5897
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5901
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5905
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5909
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1164:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5914
		{
			yyVAL.expr = nil
		}
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5918
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1166:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5923
		{
			yyVAL.str = string("")
		}
	case 1167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5927
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5933
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 1169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5937
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 1170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5943
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 1171:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5948
		{
			yyVAL.expr = nil
		}
	case 1172:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5952
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5958
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5962
		{
			yyVAL.colName = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5966
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 1176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5970
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1177:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5974
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5978
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5982
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5986
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5990
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5994
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5998
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6002
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6006
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1186:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6010
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6016
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6020
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6024
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6028
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6032
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6036
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6040
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6044
		{
			yyVAL.expr = &NullVal{}
		}
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6050
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 1196:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6054
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1197:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6058
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1198:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6063
		{
			yyVAL.exprs = nil
		}
	case 1199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6067
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6073
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6077
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6083
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1203:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6088
		{
			yyVAL.expr = nil
		}
	case 1204:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6092
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6098
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1206:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6103
		{
			yyVAL.orderBy = nil
		}
	case 1207:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6107
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6113
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 1209:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6117
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 1210:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6123
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 1211:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6128
		{
			yyVAL.str = AscScr
		}
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6132
		{
			yyVAL.str = AscScr
		}
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6136
		{
			yyVAL.str = DescScr
		}
	case 1214:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6141
		{
			yyVAL.limit = nil
		}
	case 1215:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6145
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 1216:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6149
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 1217:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6153
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6159
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6163
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1220:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6168
		{
			yyVAL.str = ""
		}
	case 1221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6172
		{
			yyVAL.str = ForUpdateStr
		}
	case 1222:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6176
		{
			yyVAL.str = ShareModeStr
		}
	case 1223:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6189
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 1224:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6193
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6197
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 1226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6201
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 1227:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6206
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 1228:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6210
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 1229:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6214
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 1230:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6220
		{
			yyVAL.columns = nil
		}
	case 1231:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6224
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6230
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1233:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6234
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1234:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6240
		{
			yyVAL.colIdent = yyDollar[3].colIdent
		}
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6244
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6248
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6252
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6256
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6260
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1240:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6265
		{
			yyVAL.assignExprs = nil
		}
	case 1241:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6269
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6275
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 1243:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6279
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6285
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 1245:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6289
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 1246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6295
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6301
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6311
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 1249:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6315
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 1250:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6321
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 1251:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6324
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1252:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6328
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6332
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6338
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 1255:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6342
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6348
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 1257:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6359
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1258:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6372
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1259:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6385
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6391
		{
			yyVAL.setScope = SetScope_Global
		}
	case 1261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6395
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6401
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6405
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6409
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 1265:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6415
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1266:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6419
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1267:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6423
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 1269:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6430
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6437
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6441
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6445
		{
			yyVAL.expr = &Default{}
		}
	case 1276:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6454
		{
			yyVAL.byt = 0
		}
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6456
		{
			yyVAL.byt = 1
		}
	case 1278:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6459
		{
			yyVAL.byt = 0
		}
	case 1279:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6461
		{
			yyVAL.byt = 1
		}
	case 1280:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6464
		{
			yyVAL.byt = 0
		}
	case 1281:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6466
		{
			yyVAL.byt = 1
		}
	case 1282:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6469
		{
			yyVAL.str = ""
		}
	case 1283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6471
		{
			yyVAL.str = IgnoreStr
		}
	case 1284:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6474
		{
			yyVAL.sqlVal = nil
		}
	case 1285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6476
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1286:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6478
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6482
		{
			yyVAL.empty = struct{}{}
		}
	case 1288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6484
		{
			yyVAL.empty = struct{}{}
		}
	case 1289:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6487
		{
			yyVAL.empty = struct{}{}
		}
	case 1290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6489
		{
			yyVAL.empty = struct{}{}
		}
	case 1291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6491
		{
			yyVAL.empty = struct{}{}
		}
	case 1292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6495
		{
			yyVAL.str = UniqueStr
		}
	case 1293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6497
		{
			yyVAL.str = FulltextStr
		}
	case 1294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6499
		{
			yyVAL.str = SpatialStr
		}
	case 1295:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6502
		{
			yyVAL.str = ""
		}
	case 1296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6504
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1297:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6507
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 1298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6509
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 1299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6513
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6517
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6523
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 1302:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6527
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 1304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6534
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6540
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6544
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6551
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1309:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6556
		{
			yyVAL.str = string("")
		}
	case 1310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6558
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1311:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6561
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6563
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1313:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6566
		{
			yyVAL.EnclosedBy = nil
		}
	case 1314:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6570
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1315:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6575
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6579
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1317:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6584
		{
			yyVAL.sqlVal = nil
		}
	case 1318:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6588
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1319:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6593
		{
			yyVAL.sqlVal = nil
		}
	case 1320:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6597
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1321:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6602
		{
			yyVAL.Fields = nil
		}
	case 1322:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6606
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1323:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6611
		{
			yyVAL.Lines = nil
		}
	case 1324:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6615
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1325:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6620
		{
			yyVAL.sqlVal = nil
		}
	case 1326:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6624
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1327:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6630
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6636
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6640
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6646
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1331:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6650
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6656
		{
			yyVAL.lockType = LockRead
		}
	case 1333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6660
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6664
		{
			yyVAL.lockType = LockWrite
		}
	case 1335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6668
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6674
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6680
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[2].bytes)}
		}
	case 1338:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6684
		{
			yyVAL.statement = &Kill{ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1339:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6688
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 2118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7508
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7517
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
