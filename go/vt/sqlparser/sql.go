// Code generated by goyacc -o sql.go -v y.output sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

//import "runtime/debug"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

func yySpecialCommentMode(yylex interface{}) bool {
	tkn := yylex.(*Tokenizer)
	return tkn.specialComment != nil
}

//line sql.y:64
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	variables                Variables
	into                     *Into
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	triggerName              TriggerName
	tableName                TableName
	tableNames               TableNames
	procedureName            ProcedureName
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	flushOption              *FlushOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	viewSpec                 *ViewSpec
	showFilter               *ShowFilter
	frame                    *Frame
	frameExtent              *FrameExtent
	frameBound               *FrameBound
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	charsetCollate           *CharsetAndCollate
	charsetCollates          []*CharsetAndCollate
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptionItem            TLSOptionItem
	tlsOptionItems           []TLSOptionItem
	accountLimitItem         AccountLimitItem
	accountLimitItems        []AccountLimitItem
	passLockItem             PassLockItem
	passLockItems            []PassLockItem
	grantPrivilege           Privilege
	grantPrivileges          []Privilege
	grantObjectType          GrantObjectType
	privilegeLevel           PrivilegeLevel
	grantAssumption          *GrantUserAssumption
	with                     *With
	window                   Window
	over                     *Over
	windowDef                *WindowDef
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const DUPLICATE = 57369
const DEFAULT = 57370
const SET = 57371
const LOCK = 57372
const UNLOCK = 57373
const KEYS = 57374
const OF = 57375
const OUTFILE = 57376
const DUMPFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const INTO = 57425
const OR = 57426
const XOR = 57427
const AND = 57428
const NOT = 57429
const BETWEEN = 57430
const CASE = 57431
const WHEN = 57432
const THEN = 57433
const ELSE = 57434
const ELSEIF = 57435
const END = 57436
const LE = 57437
const GE = 57438
const NE = 57439
const NULL_SAFE_EQUAL = 57440
const IS = 57441
const LIKE = 57442
const REGEXP = 57443
const IN = 57444
const UNBOUNDED = 57445
const PARTITION = 57446
const RANGE = 57447
const ROWS = 57448
const GROUPS = 57449
const PRECEDING = 57450
const FOLLOWING = 57451
const SHIFT_LEFT = 57452
const SHIFT_RIGHT = 57453
const DIV = 57454
const MOD = 57455
const UNARY = 57456
const COLLATE = 57457
const BINARY = 57458
const UNDERSCORE_ARMSCII8 = 57459
const UNDERSCORE_ASCII = 57460
const UNDERSCORE_BIG5 = 57461
const UNDERSCORE_BINARY = 57462
const UNDERSCORE_CP1250 = 57463
const UNDERSCORE_CP1251 = 57464
const UNDERSCORE_CP1256 = 57465
const UNDERSCORE_CP1257 = 57466
const UNDERSCORE_CP850 = 57467
const UNDERSCORE_CP852 = 57468
const UNDERSCORE_CP866 = 57469
const UNDERSCORE_CP932 = 57470
const UNDERSCORE_DEC8 = 57471
const UNDERSCORE_EUCJPMS = 57472
const UNDERSCORE_EUCKR = 57473
const UNDERSCORE_GB18030 = 57474
const UNDERSCORE_GB2312 = 57475
const UNDERSCORE_GBK = 57476
const UNDERSCORE_GEOSTD8 = 57477
const UNDERSCORE_GREEK = 57478
const UNDERSCORE_HEBREW = 57479
const UNDERSCORE_HP8 = 57480
const UNDERSCORE_KEYBCS2 = 57481
const UNDERSCORE_KOI8R = 57482
const UNDERSCORE_KOI8U = 57483
const UNDERSCORE_LATIN1 = 57484
const UNDERSCORE_LATIN2 = 57485
const UNDERSCORE_LATIN5 = 57486
const UNDERSCORE_LATIN7 = 57487
const UNDERSCORE_MACCE = 57488
const UNDERSCORE_MACROMAN = 57489
const UNDERSCORE_SJIS = 57490
const UNDERSCORE_SWE7 = 57491
const UNDERSCORE_TIS620 = 57492
const UNDERSCORE_UCS2 = 57493
const UNDERSCORE_UJIS = 57494
const UNDERSCORE_UTF16 = 57495
const UNDERSCORE_UTF16LE = 57496
const UNDERSCORE_UTF32 = 57497
const UNDERSCORE_UTF8 = 57498
const UNDERSCORE_UTF8MB3 = 57499
const UNDERSCORE_UTF8MB4 = 57500
const INTERVAL = 57501
const JSON_EXTRACT_OP = 57502
const JSON_UNQUOTE_EXTRACT_OP = 57503
const CREATE = 57504
const ALTER = 57505
const DROP = 57506
const RENAME = 57507
const ANALYZE = 57508
const ADD = 57509
const MODIFY = 57510
const CHANGE = 57511
const SCHEMA = 57512
const TABLE = 57513
const INDEX = 57514
const INDEXES = 57515
const VIEW = 57516
const TO = 57517
const IGNORE = 57518
const IF = 57519
const PRIMARY = 57520
const COLUMN = 57521
const SPATIAL = 57522
const FULLTEXT = 57523
const KEY_BLOCK_SIZE = 57524
const CHECK = 57525
const ACTION = 57526
const CASCADE = 57527
const CONSTRAINT = 57528
const FOREIGN = 57529
const NO = 57530
const REFERENCES = 57531
const RESTRICT = 57532
const FIRST = 57533
const AFTER = 57534
const LAST = 57535
const SHOW = 57536
const DESCRIBE = 57537
const EXPLAIN = 57538
const DATE = 57539
const ESCAPE = 57540
const REPAIR = 57541
const OPTIMIZE = 57542
const TRUNCATE = 57543
const FORMAT = 57544
const MAXVALUE = 57545
const REORGANIZE = 57546
const LESS = 57547
const THAN = 57548
const PROCEDURE = 57549
const TRIGGER = 57550
const TRIGGERS = 57551
const FUNCTION = 57552
const STATUS = 57553
const VARIABLES = 57554
const WARNINGS = 57555
const ERRORS = 57556
const KILL = 57557
const CONNECTION = 57558
const SEQUENCE = 57559
const ENABLE = 57560
const DISABLE = 57561
const EACH = 57562
const ROW = 57563
const BEFORE = 57564
const FOLLOWS = 57565
const PRECEDES = 57566
const DEFINER = 57567
const INVOKER = 57568
const INOUT = 57569
const OUT = 57570
const DETERMINISTIC = 57571
const CONTAINS = 57572
const READS = 57573
const MODIFIES = 57574
const SQL = 57575
const SECURITY = 57576
const TEMPORARY = 57577
const ALGORITHM = 57578
const MERGE = 57579
const TEMPTABLE = 57580
const UNDEFINED = 57581
const CLASS_ORIGIN = 57582
const SUBCLASS_ORIGIN = 57583
const MESSAGE_TEXT = 57584
const MYSQL_ERRNO = 57585
const CONSTRAINT_CATALOG = 57586
const CONSTRAINT_SCHEMA = 57587
const CONSTRAINT_NAME = 57588
const CATALOG_NAME = 57589
const SCHEMA_NAME = 57590
const TABLE_NAME = 57591
const COLUMN_NAME = 57592
const CURSOR_NAME = 57593
const SIGNAL = 57594
const RESIGNAL = 57595
const SQLSTATE = 57596
const DECLARE = 57597
const CONDITION = 57598
const CURSOR = 57599
const CONTINUE = 57600
const EXIT = 57601
const UNDO = 57602
const HANDLER = 57603
const FOUND = 57604
const SQLWARNING = 57605
const SQLEXCEPTION = 57606
const USER = 57607
const IDENTIFIED = 57608
const ROLE = 57609
const REUSE = 57610
const GRANT = 57611
const GRANTS = 57612
const REVOKE = 57613
const NONE = 57614
const ATTRIBUTE = 57615
const RANDOM = 57616
const PASSWORD = 57617
const INITIAL = 57618
const AUTHENTICATION = 57619
const SSL = 57620
const X509 = 57621
const CIPHER = 57622
const ISSUER = 57623
const SUBJECT = 57624
const ACCOUNT = 57625
const EXPIRE = 57626
const NEVER = 57627
const DAY = 57628
const OPTION = 57629
const OPTIONAL = 57630
const EXCEPT = 57631
const ADMIN = 57632
const PRIVILEGES = 57633
const MAX_QUERIES_PER_HOUR = 57634
const MAX_UPDATES_PER_HOUR = 57635
const MAX_CONNECTIONS_PER_HOUR = 57636
const MAX_USER_CONNECTIONS = 57637
const FLUSH = 57638
const FAILED_LOGIN_ATTEMPTS = 57639
const PASSWORD_LOCK_TIME = 57640
const REQUIRE = 57641
const PROXY = 57642
const ROUTINE = 57643
const TABLESPACE = 57644
const CLIENT = 57645
const SLAVE = 57646
const EVENT = 57647
const EXECUTE = 57648
const FILE = 57649
const RELOAD = 57650
const REPLICATION = 57651
const SHUTDOWN = 57652
const SUPER = 57653
const USAGE = 57654
const LOGS = 57655
const ENGINE = 57656
const ERROR = 57657
const GENERAL = 57658
const HOSTS = 57659
const OPTIMIZER_COSTS = 57660
const RELAY = 57661
const SLOW = 57662
const USER_RESOURCES = 57663
const NO_WRITE_TO_BINLOG = 57664
const CHANNEL = 57665
const BEGIN = 57666
const START = 57667
const TRANSACTION = 57668
const COMMIT = 57669
const ROLLBACK = 57670
const SAVEPOINT = 57671
const WORK = 57672
const RELEASE = 57673
const BIT = 57674
const TINYINT = 57675
const SMALLINT = 57676
const MEDIUMINT = 57677
const INT = 57678
const INTEGER = 57679
const BIGINT = 57680
const INTNUM = 57681
const SERIAL = 57682
const REAL = 57683
const DOUBLE = 57684
const FLOAT_TYPE = 57685
const DECIMAL = 57686
const NUMERIC = 57687
const DEC = 57688
const FIXED = 57689
const PRECISION = 57690
const TIME = 57691
const TIMESTAMP = 57692
const DATETIME = 57693
const YEAR = 57694
const CHAR = 57695
const VARCHAR = 57696
const BOOL = 57697
const CHARACTER = 57698
const VARBINARY = 57699
const NCHAR = 57700
const NVARCHAR = 57701
const NATIONAL = 57702
const VARYING = 57703
const TEXT = 57704
const TINYTEXT = 57705
const MEDIUMTEXT = 57706
const LONGTEXT = 57707
const LONG = 57708
const BLOB = 57709
const TINYBLOB = 57710
const MEDIUMBLOB = 57711
const LONGBLOB = 57712
const JSON = 57713
const ENUM = 57714
const GEOMETRY = 57715
const POINT = 57716
const LINESTRING = 57717
const POLYGON = 57718
const GEOMETRYCOLLECTION = 57719
const MULTIPOINT = 57720
const MULTILINESTRING = 57721
const MULTIPOLYGON = 57722
const LOCAL = 57723
const LOW_PRIORITY = 57724
const NULLX = 57725
const AUTO_INCREMENT = 57726
const APPROXNUM = 57727
const SIGNED = 57728
const UNSIGNED = 57729
const ZEROFILL = 57730
const SRID = 57731
const COLLATION = 57732
const DATABASES = 57733
const SCHEMAS = 57734
const TABLES = 57735
const FULL = 57736
const PROCESSLIST = 57737
const COLUMNS = 57738
const FIELDS = 57739
const ENGINES = 57740
const PLUGINS = 57741
const NAMES = 57742
const CHARSET = 57743
const GLOBAL = 57744
const SESSION = 57745
const ISOLATION = 57746
const LEVEL = 57747
const READ = 57748
const WRITE = 57749
const ONLY = 57750
const REPEATABLE = 57751
const COMMITTED = 57752
const UNCOMMITTED = 57753
const SERIALIZABLE = 57754
const ENCRYPTION = 57755
const CURRENT_TIMESTAMP = 57756
const DATABASE = 57757
const CURRENT_DATE = 57758
const CURRENT_USER = 57759
const CURRENT_TIME = 57760
const LOCALTIME = 57761
const LOCALTIMESTAMP = 57762
const UTC_DATE = 57763
const UTC_TIME = 57764
const UTC_TIMESTAMP = 57765
const REPLACE = 57766
const CONVERT = 57767
const CAST = 57768
const SUBSTR = 57769
const SUBSTRING = 57770
const TRIM = 57771
const LEADING = 57772
const TRAILING = 57773
const BOTH = 57774
const GROUP_CONCAT = 57775
const SEPARATOR = 57776
const TIMESTAMPADD = 57777
const TIMESTAMPDIFF = 57778
const OVER = 57779
const WINDOW = 57780
const GROUPING = 57781
const CURRENT = 57782
const AVG = 57783
const BIT_AND = 57784
const BIT_OR = 57785
const BIT_XOR = 57786
const COUNT = 57787
const JSON_ARRAYAGG = 57788
const JSON_OBJECTAGG = 57789
const MAX = 57790
const MIN = 57791
const STDDEV_POP = 57792
const STDDEV = 57793
const STD = 57794
const STDDEV_SAMP = 57795
const SUM = 57796
const VAR_POP = 57797
const VARIANCE = 57798
const VAR_SAMP = 57799
const CUME_DIST = 57800
const DENSE_RANK = 57801
const FIRST_VALUE = 57802
const LAG = 57803
const LAST_VALUE = 57804
const LEAD = 57805
const NTH_VALUE = 57806
const NTILE = 57807
const ROW_NUMBER = 57808
const PERCENT_RANK = 57809
const RANK = 57810
const JSON_TABLE = 57811
const PATH = 57812
const AVG_ROW_LENGTH = 57813
const CHECKSUM = 57814
const COMPRESSION = 57815
const DIRECTORY = 57816
const DELAY_KEY_WRITE = 57817
const ENGINE_ATTRIBUTE = 57818
const INSERT_METHOD = 57819
const MAX_ROWS = 57820
const MIN_ROWS = 57821
const PACK_KEYS = 57822
const ROW_FORMAT = 57823
const SECONDARY_ENGINE_ATTRIBUTE = 57824
const STATS_AUTO_RECALC = 57825
const STATS_PERSISTENT = 57826
const STATS_SAMPLE_PAGES = 57827
const TABLESPACE_NAME = 57828
const STORAGE = 57829
const DISK = 57830
const MEMORY = 57831
const DYNAMIC = 57832
const COMPRESSED = 57833
const REDUNDANT = 57834
const COMPACT = 57835
const MATCH = 57836
const AGAINST = 57837
const BOOLEAN = 57838
const LANGUAGE = 57839
const WITH = 57840
const QUERY = 57841
const EXPANSION = 57842
const ACCESSIBLE = 57843
const ASENSITIVE = 57844
const CUBE = 57845
const DAY_HOUR = 57846
const DAY_MICROSECOND = 57847
const DAY_MINUTE = 57848
const DAY_SECOND = 57849
const DELAYED = 57850
const DISTINCTROW = 57851
const DUAL = 57852
const EMPTY = 57853
const FETCH = 57854
const FLOAT4 = 57855
const FLOAT8 = 57856
const GET = 57857
const HIGH_PRIORITY = 57858
const HOUR_MICROSECOND = 57859
const HOUR_MINUTE = 57860
const HOUR_SECOND = 57861
const INSENSITIVE = 57862
const INT1 = 57863
const INT2 = 57864
const INT3 = 57865
const INT4 = 57866
const INT8 = 57867
const IO_AFTER_GTIDS = 57868
const IO_BEFORE_GTIDS = 57869
const ITERATE = 57870
const LEAVE = 57871
const LINEAR = 57872
const LOOP = 57873
const MASTER_BIND = 57874
const MASTER_SSL_VERIFY_SERVER_CERT = 57875
const MIDDLEINT = 57876
const MINUTE_MICROSECOND = 57877
const MINUTE_SECOND = 57878
const PURGE = 57879
const READ_WRITE = 57880
const REPEAT = 57881
const RETURN = 57882
const RLIKE = 57883
const SECOND_MICROSECOND = 57884
const SENSITIVE = 57885
const SPECIFIC = 57886
const SQL_BIG_RESULT = 57887
const SQL_SMALL_RESULT = 57888
const VARCHARACTER = 57889
const WHILE = 57890
const YEAR_MONTH = 57891
const UNUSED = 57892
const DESCRIPTION = 57893
const LATERAL = 57894
const MEMBER = 57895
const RECURSIVE = 57896
const BUCKETS = 57897
const CLONE = 57898
const COMPONENT = 57899
const DEFINITION = 57900
const ENFORCED = 57901
const EXCLUDE = 57902
const GEOMCOLLECTION = 57903
const GET_MASTER_PUBLIC_KEY = 57904
const HISTOGRAM = 57905
const HISTORY = 57906
const INACTIVE = 57907
const INVISIBLE = 57908
const LOCKED = 57909
const MASTER_COMPRESSION_ALGORITHMS = 57910
const MASTER_PUBLIC_KEY_PATH = 57911
const MASTER_TLS_CIPHERSUITES = 57912
const MASTER_ZSTD_COMPRESSION_LEVEL = 57913
const NESTED = 57914
const NETWORK_NAMESPACE = 57915
const NOWAIT = 57916
const NULLS = 57917
const OJ = 57918
const OLD = 57919
const ORDINALITY = 57920
const ORGANIZATION = 57921
const OTHERS = 57922
const PERSIST = 57923
const PERSIST_ONLY = 57924
const PRIVILEGE_CHECKS_USER = 57925
const PROCESS = 57926
const REFERENCE = 57927
const REQUIRE_ROW_FORMAT = 57928
const RESOURCE = 57929
const RESPECT = 57930
const RESTART = 57931
const RETAIN = 57932
const SECONDARY = 57933
const SECONDARY_ENGINE = 57934
const SECONDARY_LOAD = 57935
const SECONDARY_UNLOAD = 57936
const SKIP = 57937
const THREAD_PRIORITY = 57938
const TIES = 57939
const VCPU = 57940
const VISIBLE = 57941
const SYSTEM = 57942
const INFILE = 57943
const ACTIVE = 57944
const AGGREGATE = 57945
const ANY = 57946
const ARRAY = 57947
const ASCII = 57948
const AT = 57949
const AUTOEXTEND_SIZE = 57950
const ENDS = 57951
const EVENTS = 57952
const GENERATED = 57953
const ALWAYS = 57954
const STORED = 57955
const VIRTUAL = 57956
const NVAR = 57957
const PASSWORD_LOCK = 57958

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DUMPFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"INTO",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'0'",
	"'1'",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB3",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"LAST",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"ENABLE",
	"DISABLE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"ALGORITHM",
	"MERGE",
	"TEMPTABLE",
	"UNDEFINED",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTION",
	"OPTIONAL",
	"EXCEPT",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EVENT",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"SRID",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ENCRYPTION",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"JSON_TABLE",
	"PATH",
	"AVG_ROW_LENGTH",
	"CHECKSUM",
	"COMPRESSION",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"TABLESPACE_NAME",
	"STORAGE",
	"DISK",
	"MEMORY",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ACCESSIBLE",
	"ASENSITIVE",
	"CUBE",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"DELAYED",
	"DISTINCTROW",
	"DUAL",
	"EMPTY",
	"FETCH",
	"FLOAT4",
	"FLOAT8",
	"GET",
	"HIGH_PRIORITY",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"INSENSITIVE",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"IO_AFTER_GTIDS",
	"IO_BEFORE_GTIDS",
	"ITERATE",
	"LEAVE",
	"LINEAR",
	"LOOP",
	"MASTER_BIND",
	"MASTER_SSL_VERIFY_SERVER_CERT",
	"MIDDLEINT",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"PURGE",
	"READ_WRITE",
	"REPEAT",
	"RETURN",
	"RLIKE",
	"SECOND_MICROSECOND",
	"SENSITIVE",
	"SPECIFIC",
	"SQL_BIG_RESULT",
	"SQL_SMALL_RESULT",
	"VARCHARACTER",
	"WHILE",
	"YEAR_MONTH",
	"UNUSED",
	"DESCRIPTION",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"ACTIVE",
	"AGGREGATE",
	"ANY",
	"ARRAY",
	"ASCII",
	"AT",
	"AUTOEXTEND_SIZE",
	"ENDS",
	"EVENTS",
	"GENERATED",
	"ALWAYS",
	"STORED",
	"VIRTUAL",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 35,
	637, 35,
	-2, 56,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 41,
	191, 1322,
	192, 1341,
	-2, 249,
	-1, 47,
	231, 799,
	232, 799,
	-2, 788,
	-1, 67,
	5, 61,
	-2, 43,
	-1, 493,
	179, 1711,
	-2, 989,
	-1, 494,
	179, 1351,
	-2, 1345,
	-1, 495,
	179, 1352,
	-2, 1346,
	-1, 525,
	179, 1819,
	-2, 1240,
	-1, 526,
	179, 1900,
	-2, 991,
	-1, 527,
	179, 1731,
	-2, 992,
	-1, 594,
	179, 1682,
	-2, 1210,
	-1, 597,
	179, 1699,
	-2, 1139,
	-1, 598,
	179, 1912,
	-2, 1139,
	-1, 599,
	179, 1911,
	-2, 1139,
	-1, 600,
	179, 1910,
	-2, 1139,
	-1, 601,
	179, 1799,
	-2, 1139,
	-1, 602,
	179, 1800,
	-2, 1139,
	-1, 603,
	179, 1697,
	-2, 1139,
	-1, 604,
	179, 1698,
	-2, 1139,
	-1, 605,
	179, 1700,
	-2, 1139,
	-1, 853,
	100, 2005,
	179, 2005,
	-2, 1306,
	-1, 854,
	100, 2107,
	179, 2107,
	-2, 1307,
	-1, 859,
	100, 2027,
	179, 2027,
	-2, 1308,
	-1, 860,
	100, 2068,
	179, 2068,
	-2, 1309,
	-1, 861,
	100, 2069,
	179, 2069,
	-2, 1310,
	-1, 862,
	100, 1949,
	179, 1949,
	-2, 1314,
	-1, 864,
	100, 2048,
	179, 2048,
	-2, 1316,
	-1, 1120,
	5, 61,
	-2, 44,
	-1, 1383,
	1, 523,
	637, 523,
	-2, 521,
	-1, 1385,
	1, 523,
	637, 523,
	-2, 521,
	-1, 1838,
	179, 1354,
	-2, 1350,
	-1, 1958,
	1, 900,
	5, 900,
	12, 900,
	13, 900,
	14, 900,
	15, 900,
	17, 900,
	19, 900,
	29, 900,
	30, 900,
	56, 900,
	57, 900,
	58, 900,
	59, 900,
	60, 900,
	62, 900,
	63, 900,
	66, 900,
	67, 900,
	69, 900,
	70, 900,
	87, 900,
	414, 900,
	458, 900,
	637, 900,
	-2, 933,
	-1, 1966,
	67, 78,
	69, 78,
	-2, 82,
	-1, 1983,
	179, 1823,
	-2, 1311,
	-1, 2090,
	1, 524,
	637, 524,
	-2, 521,
	-1, 2180,
	44, 681,
	198, 683,
	200, 681,
	201, 681,
	-2, 724,
	-1, 2229,
	5, 62,
	-2, 1021,
	-1, 2806,
	198, 684,
	-2, 682,
	-1, 2879,
	69, 1595,
	70, 1595,
	179, 1595,
	-2, 831,
	-1, 2905,
	1, 975,
	5, 975,
	12, 975,
	13, 975,
	14, 975,
	15, 975,
	17, 975,
	19, 975,
	29, 975,
	30, 975,
	56, 975,
	57, 975,
	58, 975,
	59, 975,
	60, 975,
	62, 975,
	63, 975,
	66, 975,
	67, 975,
	69, 975,
	70, 975,
	87, 975,
	414, 975,
	458, 975,
	637, 975,
	-2, 933,
	-1, 3052,
	5, 62,
	-2, 1272,
	-1, 3140,
	41, 1361,
	-2, 1359,
	-1, 3337,
	5, 62,
	-2, 1275,
	-1, 3352,
	281, 315,
	-2, 1416,
	-1, 3353,
	281, 316,
	-2, 1456,
	-1, 3354,
	281, 317,
	-2, 1632,
	-1, 3519,
	95, 301,
	97, 301,
	99, 301,
	-2, 56,
	-1, 3550,
	97, 308,
	98, 308,
	99, 308,
	-2, 56,
}

const yyPrivate = 57344

const yyLast = 45842

var yyAct = [...]int{
	537, 76, 3500, 3511, 2443, 3470, 3452, 467, 3356, 1134,
	3357, 3451, 2586, 3472, 3414, 3264, 3, 3395, 3377, 1217,
	3237, 3267, 7, 3266, 6, 2749, 3329, 3259, 497, 3339,
	2701, 3078, 3197, 3265, 5, 3268, 8, 1792, 3327, 1313,
	2899, 970, 426, 2927, 2612, 3140, 2873, 2540, 2872, 2314,
	486, 2085, 3142, 536, 2528, 2312, 479, 3009, 1218, 2791,
	2109, 2477, 2766, 79, 2985, 495, 2979, 2963, 1241, 409,
	412, 2037, 2308, 501, 1810, 3260, 2613, 76, 463, 2028,
	2384, 2702, 2869, 1004, 1863, 1240, 91, 2800, 2459, 514,
	1790, 2881, 477, 2665, 2890, 1803, 476, 104, 1798, 1028,
	1991, 1923, 1981, 1954, 2179, 2297, 451, 451, 457, 2024,
	1418, 130, 987, 2556, 130, 940, 1869, 1420, 2071, 1955,
	130, 1744, 2385, 1791, 2138, 2155, 2290, 1394, 2093, 2092,
	454, 454, 2091, 2434, 130, 1295, 1142, 1914, 1840, 504,
	2067, 1138, 1715, 855, 1962, 1135, 1958, 933, 1291, 1749,
	1057, 2089, 1036, 2616, 932, 2043, 851, 482, 130, 942,
	1968, 1294, 1156, 858, 852, 429, 466, 2041, 428, 2507,
	2055, 953, 983, 67, 1035, 506, 1389, 81, 130, 454,
	1386, 942, 958, 1918, 471, 3550, 2398, 1417, 3545, 130,
	124, 2401, 3537, 3519, 100, 3517, 3495, 3465, 96, 408,
	1146, 3403, 78, 3199, 3198, 2716, 1742, 2406, 2405, 2594,
	3119, 2747, 2950, 3547, 3543, 83, 3541, 89, 2964, 421,
	3482, 2380, 39, 3325, 969, 3445, 3117, 3245, 2966, 2402,
	36, 2123, 36, 2123, 3417, 3313, 3132, 930, 2763, 2687,
	3324, 3120, 3244, 2578, 2408, 2699, 2391, 937, 36, 2471,
	36, 2352, 36, 2351, 2392, 2919, 2920, 967, 3450, 3424,
	2806, 2593, 846, 847, 848, 2413, 3168, 3333, 981, 3217,
	3373, 955, 2267, 960, 961, 2607, 1173, 1172, 1182, 1183,
	1175, 1176, 1177, 1178, 1179, 1180, 1181, 1174, 465, 3177,
	1184, 2310, 77, 2608, 77, 2863, 2369, 952, 1068, 1745,
	963, 74, 991, 992, 2379, 3330, 995, 2655, 2656, 3333,
	77, 1296, 77, 1297, 77, 2154, 87, 85, 86, 1978,
	1979, 2654, 2371, 2372, 1800, 1801, 1126, 3328, 2932, 2373,
	2938, 2940, 2939, 2936, 2937, 2935, 2934, 2933, 2332, 993,
	994, 2331, 1748, 1977, 2333, 2969, 3190, 3330, 1766, 2941,
	2942, 1086, 2299, 2302, 2303, 2304, 2300, 420, 2301, 2306,
	419, 2404, 2891, 2892, 2407, 2410, 1746, 1747, 1008, 1009,
	3334, 1007, 1374, 2039, 2040, 461, 2153, 1054, 1094, 2044,
	423, 2047, 2049, 2056, 2048, 2044, 2967, 2968, 2970, 2971,
	2972, 949, 2849, 928, 1014, 118, 114, 115, 2633, 116,
	2303, 2304, 2345, 3033, 2068, 2847, 76, 76, 2061, 2450,
	2056, 403, 3334, 418, 2364, 473, 2503, 1787, 1786, 1375,
	1785, 1022, 477, 1784, 1783, 1782, 1026, 1023, 1728, 1025,
	1090, 1091, 120, 119, 462, 949, 1018, 2466, 1061, 1024,
	2495, 130, 3439, 2187, 2181, 2182, 3146, 2180, 2183, 2184,
	3509, 1015, 1016, 2790, 2500, 1339, 2167, 3359, 2371, 2372,
	3358, 492, 1070, 1375, 76, 2373, 2773, 3303, 1124, 2470,
	2299, 2302, 2303, 2304, 2300, 1129, 2301, 2306, 2986, 2987,
	2988, 2989, 3221, 1101, 2190, 130, 1102, 3301, 3006, 3211,
	121, 2997, 122, 2980, 1193, 3402, 2168, 1195, 2189, 2188,
	1197, 2983, 2764, 949, 3114, 3508, 3118, 3219, 2767, 2768,
	2769, 2770, 2771, 2110, 1777, 2981, 2982, 3366, 2468, 3504,
	984, 2767, 2768, 2769, 2770, 2771, 2995, 413, 3400, 1209,
	130, 1375, 1212, 1213, 1214, 1215, 1216, 3460, 1221, 3136,
	3112, 1339, 1392, 2375, 130, 3398, 3399, 990, 3111, 106,
	2776, 112, 1070, 477, 1159, 1005, 3467, 1006, 1008, 1009,
	111, 1326, 3110, 3109, 1058, 3108, 404, 2403, 3106, 959,
	414, 410, 2400, 2374, 3107, 1401, 1402, 1400, 2689, 3207,
	3208, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230,
	1231, 1232, 1233, 1234, 1235, 1093, 1238, 1239, 1242, 1242,
	1242, 1248, 1242, 1242, 1248, 1242, 1248, 1257, 1258, 1259,
	1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269,
	1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279,
	1280, 1281, 1282, 1283, 1284, 1285, 1194, 1120, 106, 3213,
	117, 3383, 1163, 1340, 2344, 113, 2100, 1326, 3262, 131,
	3067, 2448, 3331, 132, 2965, 3203, 133, 134, 2414, 2639,
	1132, 1003, 135, 422, 2186, 2104, 2105, 1244, 1246, 1000,
	1250, 1252, 999, 1255, 3169, 2469, 2099, 3441, 1748, 2375,
	2792, 3412, 2161, 1062, 1243, 1245, 1247, 1249, 1251, 1253,
	1254, 1256, 2419, 131, 3331, 3243, 2449, 132, 2046, 2746,
	133, 134, 1746, 1747, 2070, 1729, 135, 2056, 2451, 2374,
	2305, 3461, 1699, 1019, 3195, 1069, 3115, 3344, 3345, 2485,
	2486, 2688, 2690, 2691, 2692, 3423, 1070, 3218, 1103, 1340,
	1071, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 3133, 1087,
	1088, 1089, 478, 1092, 68, 1095, 1096, 1097, 1098, 1099,
	1108, 2472, 88, 1121, 2370, 411, 2305, 3510, 3515, 3135,
	478, 131, 478, 3532, 478, 132, 3212, 3302, 133, 134,
	2775, 1080, 411, 411, 135, 949, 1128, 2513, 1353, 1356,
	1357, 1358, 1359, 1360, 1361, 2805, 1362, 1363, 1364, 1365,
	1366, 1367, 1368, 1369, 2399, 1341, 1342, 1343, 1344, 1320,
	1324, 1354, 1321, 1327, 1323, 1325, 1322, 406, 1328, 1329,
	1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1345,
	1346, 1347, 1348, 1349, 1350, 1351, 1352, 2036, 2305, 957,
	956, 3551, 3476, 3548, 2557, 3471, 1001, 1002, 3538, 2678,
	3010, 3011, 2679, 407, 2680, 2705, 1118, 3520, 2120, 108,
	949, 3474, 1077, 2119, 2034, 959, 949, 954, 949, 972,
	2034, 939, 2317, 2319, 1353, 1356, 1357, 1358, 1359, 1360,
	1361, 3223, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369,
	3020, 1341, 1342, 1343, 1344, 1320, 1324, 1354, 1321, 1327,
	1323, 1325, 1322, 1750, 1328, 1329, 1330, 1331, 1332, 1333,
	1334, 1335, 1336, 1337, 1338, 1345, 1346, 1347, 1348, 1349,
	1350, 1351, 1352, 1075, 130, 472, 2559, 3021, 2788, 3079,
	2494, 2490, 2525, 942, 1066, 858, 1114, 2474, 2473, 1752,
	858, 2036, 1751, 3081, 3513, 2162, 1406, 3514, 1404, 3512,
	1020, 2088, 1355, 1076, 2036, 1072, 951, 2646, 1113, 1109,
	1110, 1111, 1112, 1115, 1116, 1117, 1119, 2036, 2645, 2644,
	950, 2488, 2036, 1125, 962, 375, 3024, 1202, 1203, 1204,
	1205, 1206, 1207, 1208, 2035, 1370, 1371, 1372, 1373, 1073,
	1074, 2513, 1198, 2242, 2388, 949, 77, 2239, 2514, 2034,
	1199, 1200, 1308, 984, 2318, 1299, 1196, 2886, 2835, 2653,
	1300, 2492, 2491, 451, 1396, 110, 109, 2336, 2221, 2210,
	2177, 2103, 2101, 1973, 1813, 1201, 942, 130, 1307, 1211,
	1210, 1289, 451, 1419, 1164, 982, 454, 454, 1355, 3216,
	454, 1286, 1287, 1017, 411, 1982, 3094, 130, 3100, 2957,
	130, 1982, 3092, 3473, 3475, 454, 454, 2955, 130, 1184,
	1065, 2328, 3019, 1982, 3080, 1377, 1982, 2944, 130, 130,
	130, 130, 130, 2561, 1982, 2738, 2735, 2785, 2565, 1725,
	2560, 1395, 2558, 1982, 2734, 1399, 1201, 2563, 2035, 454,
	1312, 1422, 3238, 130, 2520, 2513, 1982, 2730, 3047, 2517,
	2562, 2035, 2516, 2519, 2524, 3361, 1380, 1198, 2521, 1700,
	1174, 3101, 2958, 1184, 2035, 2564, 2566, 1309, 451, 2035,
	2956, 1740, 1711, 1712, 1713, 1714, 984, 1982, 2726, 1412,
	2533, 3025, 1982, 2432, 1723, 1982, 2430, 1982, 2428, 2736,
	76, 454, 454, 454, 1397, 76, 942, 1706, 1707, 1708,
	1709, 1710, 1775, 2291, 1408, 477, 1398, 1382, 1719, 1802,
	1720, 1381, 1199, 1200, 3122, 1416, 1199, 1200, 1415, 1982,
	2426, 1155, 1704, 1705, 1702, 989, 454, 1982, 2423, 3384,
	3385, 454, 454, 3362, 3381, 3382, 3248, 3247, 1759, 1175,
	1176, 1177, 1178, 1179, 1180, 1181, 1174, 108, 130, 1184,
	942, 130, 3123, 1153, 1154, 1152, 76, 1716, 1806, 2529,
	2340, 3540, 1833, 1847, 2130, 1732, 1733, 997, 971, 1735,
	1152, 477, 1155, 1754, 2888, 2887, 130, 1781, 1845, 1846,
	1844, 1841, 1221, 1159, 2885, 1738, 1010, 1155, 1874, 1876,
	1737, 97, 1758, 1755, 1867, 1305, 1873, 477, 1153, 1154,
	1152, 1891, 1177, 1178, 1179, 1180, 1181, 1174, 1880, 1882,
	1184, 1776, 1027, 1757, 1779, 1154, 1152, 1155, 2234, 965,
	2233, 988, 942, 1838, 942, 94, 2580, 942, 964, 1915,
	1799, 2255, 1915, 1155, 942, 3536, 942, 942, 1795, 1153,
	1154, 1152, 1832, 3462, 1811, 1812, 130, 3418, 1959, 1788,
	1153, 1154, 1152, 1780, 2996, 1820, 1717, 3396, 1155, 2440,
	3523, 3501, 3522, 2131, 1900, 1903, 998, 1842, 1120, 1155,
	93, 1163, 1916, 1153, 1154, 1152, 2990, 1153, 1154, 1152,
	1829, 3464, 1012, 942, 942, 974, 975, 976, 977, 978,
	979, 980, 1155, 99, 1384, 1871, 1155, 444, 3026, 438,
	449, 432, 2149, 110, 109, 1986, 2831, 1153, 1154, 1152,
	92, 2714, 130, 130, 130, 1153, 1154, 1152, 1804, 77,
	1953, 439, 1149, 3397, 1804, 1988, 1155, 858, 1760, 3533,
	1843, 1763, 1764, 1765, 1155, 1767, 1768, 942, 1139, 1769,
	3306, 1140, 1929, 3298, 1931, 1770, 3393, 3256, 106, 1771,
	1772, 3299, 1773, 1774, 2207, 2208, 2209, 3130, 107, 111,
	3129, 1888, 1890, 1153, 1154, 1152, 1838, 3128, 3127, 1895,
	1879, 2582, 3121, 1883, 1884, 1885, 1886, 1887, 1864, 488,
	1865, 3214, 1155, 2949, 3534, 1987, 2948, 1963, 101, 2717,
	102, 1952, 2684, 1966, 2033, 3396, 1912, 3428, 3300, 3427,
	2674, 2664, 2077, 2078, 2079, 2080, 2696, 1927, 1928, 2117,
	1975, 1971, 2694, 2439, 1934, 1935, 1936, 1937, 1974, 2025,
	1980, 1967, 2437, 130, 2411, 937, 2022, 1989, 3215, 130,
	130, 454, 454, 454, 1722, 1060, 130, 2045, 1059, 2050,
	2051, 2052, 2053, 2054, 1033, 2073, 2074, 2075, 2076, 3485,
	2081, 2082, 2083, 2697, 1815, 2235, 1825, 1827, 1828, 2695,
	2057, 2058, 2059, 2060, 1826, 2069, 2334, 1032, 2335, 2064,
	2065, 2066, 3449, 431, 430, 433, 2115, 2116, 1816, 1701,
	1407, 1817, 3405, 437, 1038, 1039, 1040, 1041, 1042, 1043,
	1044, 1045, 1046, 1047, 1048, 1049, 3404, 2097, 3363, 3360,
	441, 3312, 2111, 3210, 3209, 445, 3392, 3194, 2113, 2114,
	3137, 3105, 3074, 3043, 2993, 2121, 2992, 2991, 2959, 448,
	1153, 1154, 1152, 2946, 2918, 2917, 1173, 1172, 1182, 1183,
	1175, 1176, 1177, 1178, 1179, 1180, 1181, 1174, 98, 1155,
	1184, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 2797, 2723, 2693, 2685, 2677, 1839, 94,
	2675, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856,
	1857, 1858, 1859, 1860, 1861, 1862, 2671, 2670, 2669, 2536,
	2535, 2435, 2150, 2125, 1734, 3220, 434, 435, 436, 442,
	1756, 446, 447, 450, 2139, 3192, 2856, 3154, 2388, 3148,
	2317, 2319, 519, 518, 521, 522, 523, 524, 1168, 3017,
	1171, 520, 1875, 2868, 2825, 2821, 2807, 1185, 1186, 1187,
	1188, 1189, 1190, 1191, 1906, 1169, 1170, 1167, 2777, 2480,
	2479, 2143, 2127, 2237, 1919, 2219, 1133, 1173, 1172, 1182,
	1183, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1174, 1133,
	2126, 1184, 1866, 1730, 1727, 1248, 1173, 1172, 1182, 1183,
	1175, 1176, 1177, 1178, 1179, 1180, 1181, 1174, 1414, 2339,
	1184, 1173, 1172, 1182, 1183, 1175, 1176, 1177, 1178, 1179,
	1180, 1181, 1174, 2152, 1413, 1184, 1385, 1383, 1055, 985,
	417, 415, 3088, 3425, 3147, 130, 2146, 1173, 1172, 1182,
	1183, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1174, 2922,
	3410, 1184, 130, 130, 130, 3388, 1133, 2922, 3369, 3096,
	2174, 1172, 1182, 1183, 1175, 1176, 1177, 1178, 1179, 1180,
	1181, 1174, 2318, 1100, 1184, 2246, 2128, 3318, 1133, 130,
	2141, 130, 2922, 3314, 3095, 942, 2756, 1143, 2728, 2136,
	942, 3088, 3253, 2922, 3201, 3088, 1133, 1165, 2132, 3088,
	3183, 3088, 3087, 2137, 2211, 3056, 1133, 2176, 1133, 2922,
	2921, 1969, 942, 2478, 2124, 942, 2744, 2743, 2740, 2741,
	1969, 1833, 2727, 1182, 1183, 1175, 1176, 1177, 1178, 1179,
	1180, 1181, 1174, 2135, 1133, 1184, 2740, 2739, 2294, 1133,
	942, 2219, 1133, 1219, 2164, 2163, 1889, 2147, 1889, 1133,
	2159, 1311, 1310, 2870, 2478, 2724, 2884, 2293, 1058, 2145,
	2323, 80, 1699, 2108, 2151, 1105, 1808, 1970, 1841, 1972,
	2294, 1104, 2166, 2158, 1064, 2169, 1970, 1063, 1699, 2142,
	1064, 1066, 1838, 3442, 1173, 1172, 1182, 1183, 1175, 1176,
	1177, 1178, 1179, 1180, 1181, 1174, 3416, 2294, 1184, 1963,
	1237, 1987, 2884, 3542, 2107, 440, 2173, 3050, 1889, 2294,
	2123, 2884, 2901, 2757, 2577, 2219, 2199, 1807, 2742, 2197,
	2198, 77, 1133, 1066, 2534, 2506, 2338, 1976, 2219, 2261,
	2311, 2260, 1736, 2122, 1809, 2320, 2321, 929, 1122, 1959,
	2316, 1778, 1959, 2216, 2175, 477, 1743, 1699, 1405, 1403,
	1293, 2222, 3341, 2212, 1842, 3315, 2191, 1173, 1172, 1182,
	1183, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1174, 2900,
	3234, 1184, 1173, 1172, 1182, 1183, 1175, 1176, 1177, 1178,
	1179, 1180, 1181, 1174, 3151, 3064, 1184, 130, 2951, 2042,
	2891, 2892, 425, 2072, 2044, 130, 2713, 2068, 130, 77,
	2378, 1070, 2102, 2063, 130, 2062, 1378, 130, 130, 130,
	1052, 2324, 2086, 2140, 2325, 2307, 3531, 3529, 3489, 858,
	2218, 2254, 2220, 1173, 1172, 1182, 1183, 1175, 1176, 1177,
	1178, 1179, 1180, 1181, 1174, 2165, 3487, 1184, 3453, 2894,
	2870, 2755, 1422, 2441, 1753, 2229, 2230, 2231, 2232, 1410,
	1106, 1067, 2236, 2238, 2206, 2898, 2241, 2632, 456, 2244,
	2245, 2897, 2631, 2322, 2250, 2251, 2292, 2629, 2896, 1963,
	2257, 2258, 2630, 2259, 2626, 2625, 2262, 2263, 1963, 2264,
	2265, 1963, 2329, 2269, 2270, 2271, 2272, 2273, 3379, 1299,
	3323, 2326, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285,
	2286, 2287, 2288, 2289, 2337, 2627, 2537, 2266, 2268, 1819,
	2628, 483, 484, 1377, 2274, 2275, 2276, 2277, 2196, 1147,
	1148, 3371, 942, 2383, 130, 2386, 3053, 2204, 2422, 2203,
	2425, 2427, 2429, 2431, 3174, 3016, 2925, 942, 942, 942,
	2377, 2820, 2819, 454, 2722, 76, 2721, 2720, 1145, 2390,
	2382, 2707, 451, 2484, 3225, 3228, 3311, 3310, 130, 454,
	477, 3141, 3139, 2144, 3206, 3205, 416, 2436, 1731, 3124,
	3125, 1136, 2416, 2417, 2418, 2420, 454, 2532, 2531, 2751,
	2662, 2438, 1137, 2424, 2412, 2505, 2415, 2343, 1395, 2447,
	2445, 1306, 2421, 2446, 942, 1050, 1034, 1031, 454, 1030,
	942, 986, 2433, 2444, 2476, 2467, 454, 3435, 3158, 3157,
	2095, 3048, 942, 942, 1811, 1812, 2998, 2096, 2542, 2482,
	1409, 3443, 3304, 2999, 2387, 2389, 3143, 2930, 1029, 1833,
	2750, 1147, 1148, 3434, 94, 2087, 130, 2475, 2587, 1789,
	1130, 1131, 2202, 3433, 2489, 2487, 942, 3432, 2481, 3102,
	2201, 2172, 1013, 480, 2493, 3365, 3364, 3322, 3308, 3229,
	2510, 2609, 2611, 3173, 481, 1959, 1959, 1959, 1959, 1959,
	2504, 80, 3321, 2508, 2518, 2523, 477, 2213, 2214, 2215,
	2610, 3240, 2311, 2543, 2640, 2635, 2579, 2478, 3028, 2567,
	1838, 2795, 2569, 2642, 1959, 1703, 2501, 477, 2511, 2499,
	1795, 1891, 2498, 942, 3491, 3490, 2547, 2243, 2544, 2549,
	2453, 2454, 2455, 3491, 2240, 2538, 1721, 2170, 1718, 2568,
	2496, 2515, 1150, 2526, 2527, 3490, 3250, 2530, 2502, 2719,
	130, 130, 130, 130, 130, 1805, 2643, 2614, 929, 2247,
	2248, 2249, 475, 130, 2542, 3278, 50, 130, 1144, 3280,
	19, 130, 3279, 18, 2649, 3507, 2651, 2652, 1219, 130,
	3281, 20, 3282, 21, 3277, 15, 2650, 82, 2620, 2715,
	53, 2623, 942, 3276, 14, 1, 2550, 2551, 2552, 2553,
	2554, 2555, 2634, 2667, 2160, 2621, 2622, 1761, 2624, 3270,
	10, 2667, 2647, 2978, 125, 3293, 34, 402, 3291, 33,
	3290, 32, 2977, 125, 1963, 1963, 1963, 1963, 1963, 2657,
	3289, 28, 3288, 27, 942, 2984, 2668, 468, 2762, 2676,
	2765, 1963, 3287, 26, 2668, 3285, 23, 3284, 22, 2706,
	2465, 2708, 489, 1963, 3286, 24, 3275, 13, 866, 3272,
	12, 125, 3271, 11, 3269, 9, 2994, 1393, 3113, 2588,
	2589, 2590, 2591, 2592, 968, 2106, 1056, 3309, 1821, 1822,
	1823, 125, 2636, 2637, 3224, 2081, 3226, 2083, 3138, 3001,
	2758, 2962, 125, 2961, 2752, 2753, 2754, 130, 2458, 2457,
	451, 2772, 1051, 1741, 2509, 2725, 2512, 2118, 2729, 2185,
	3236, 2171, 1107, 2026, 2733, 2686, 1990, 942, 942, 942,
	3338, 2774, 931, 90, 454, 2129, 2737, 996, 383, 130,
	454, 2595, 2596, 2597, 2598, 2599, 2600, 2601, 2602, 2603,
	2604, 2605, 2023, 2396, 130, 3227, 454, 1219, 942, 1053,
	454, 2395, 1896, 1897, 454, 454, 2409, 454, 2038, 2090,
	2094, 2394, 2393, 2802, 3222, 2732, 2397, 1317, 1315, 2861,
	1316, 2781, 2810, 2815, 942, 2779, 2748, 2731, 130, 942,
	1314, 2832, 2802, 1319, 1318, 3484, 942, 3422, 387, 942,
	942, 2483, 1301, 3351, 2709, 2710, 2711, 2804, 2712, 2875,
	76, 2798, 2867, 1151, 2824, 530, 105, 54, 2778, 3018,
	2522, 459, 460, 95, 103, 477, 1818, 389, 1192, 2876,
	1377, 2200, 2330, 2783, 856, 2830, 2658, 857, 2659, 2660,
	2903, 1985, 849, 2192, 1123, 2907, 2908, 2909, 3246, 3372,
	3413, 3343, 2871, 1141, 3374, 2681, 2682, 2683, 2782, 3320,
	3239, 2253, 2874, 1236, 1913, 2698, 503, 2822, 2638, 3046,
	2812, 2817, 3376, 2700, 2883, 942, 1824, 942, 2784, 2546,
	2845, 2614, 2789, 517, 516, 515, 2793, 2794, 512, 2796,
	513, 3332, 2906, 2902, 1814, 2606, 1166, 2745, 500, 490,
	2878, 2570, 2571, 1957, 2572, 2573, 942, 1950, 2574, 2148,
	2298, 2296, 2913, 2912, 2084, 2295, 1411, 1290, 2895, 1924,
	2893, 2889, 2583, 2584, 2309, 2842, 2843, 2833, 2844, 2667,
	2803, 2846, 2904, 2848, 1961, 502, 1956, 1960, 38, 3027,
	2841, 1011, 2539, 405, 2862, 3167, 2914, 2205, 84, 474,
	76, 2850, 2851, 2852, 125, 2953, 485, 2916, 2857, 25,
	17, 1021, 2668, 1795, 16, 477, 2178, 966, 40, 2952,
	42, 2452, 2098, 3350, 3469, 1037, 3499, 3394, 31, 942,
	30, 126, 29, 2648, 3283, 3292, 3274, 3273, 2926, 3455,
	126, 3454, 4, 2877, 1127, 75, 35, 927, 125, 2974,
	2975, 2976, 2, 0, 469, 0, 2954, 0, 0, 2931,
	0, 0, 0, 2836, 2837, 2838, 2839, 2840, 0, 0,
	0, 130, 0, 942, 0, 867, 0, 0, 126, 935,
	0, 2910, 0, 0, 2943, 0, 0, 0, 0, 0,
	0, 3012, 3013, 468, 3003, 0, 2973, 0, 126, 3005,
	0, 0, 0, 0, 454, 3014, 0, 468, 0, 126,
	0, 454, 0, 2718, 0, 2802, 3002, 0, 0, 0,
	0, 2923, 2924, 2542, 0, 0, 0, 0, 0, 3029,
	3030, 0, 3022, 0, 0, 3015, 2706, 3008, 0, 0,
	0, 2802, 0, 0, 3000, 0, 0, 0, 0, 0,
	2960, 942, 0, 0, 0, 0, 0, 0, 0, 0,
	2945, 0, 2947, 3023, 0, 0, 0, 0, 0, 0,
	0, 0, 2081, 0, 0, 0, 0, 0, 0, 0,
	0, 3090, 0, 1242, 1242, 1242, 1248, 1242, 1242, 1248,
	1242, 1248, 1257, 1258, 3066, 0, 130, 3057, 0, 0,
	0, 3071, 3072, 3073, 3049, 3069, 0, 3098, 2614, 0,
	0, 3058, 0, 0, 0, 0, 942, 0, 0, 3075,
	0, 0, 0, 942, 942, 942, 3004, 0, 0, 3099,
	0, 0, 3097, 3007, 0, 0, 0, 0, 942, 528,
	0, 0, 3070, 0, 0, 0, 0, 3077, 3083, 3084,
	3076, 0, 1244, 1246, 3082, 1250, 1252, 2834, 1255, 3103,
	0, 0, 0, 0, 3032, 0, 0, 942, 0, 1243,
	1245, 1247, 1249, 1251, 1253, 1254, 1256, 3159, 0, 1959,
	3104, 0, 0, 0, 0, 0, 0, 2858, 2859, 2860,
	0, 0, 3038, 3039, 3040, 3116, 3042, 2576, 3091, 3126,
	3093, 2875, 0, 3131, 2875, 3179, 0, 3134, 3145, 3051,
	3052, 0, 3054, 0, 3144, 3055, 0, 0, 2903, 0,
	477, 0, 0, 0, 3178, 0, 2316, 0, 3186, 865,
	3162, 3156, 0, 934, 3149, 3150, 0, 942, 3068, 3160,
	0, 0, 0, 0, 130, 0, 0, 3175, 0, 0,
	76, 3161, 3176, 2905, 2874, 973, 0, 2874, 3182, 3191,
	3172, 126, 0, 3089, 3181, 477, 0, 0, 0, 3202,
	0, 3184, 942, 0, 3185, 0, 0, 0, 0, 3204,
	942, 0, 0, 0, 130, 3193, 130, 0, 0, 0,
	0, 0, 0, 0, 0, 1143, 0, 3085, 3086, 0,
	0, 0, 0, 0, 942, 126, 1173, 1172, 1182, 1183,
	1175, 1176, 1177, 1178, 1179, 1180, 1181, 1174, 1963, 0,
	1184, 0, 0, 0, 0, 0, 0, 2929, 2875, 0,
	76, 0, 3232, 0, 0, 0, 0, 0, 2911, 0,
	0, 3255, 0, 0, 0, 477, 0, 3231, 0, 3252,
	469, 0, 0, 0, 3233, 76, 0, 3261, 0, 454,
	3241, 0, 0, 0, 469, 3263, 0, 942, 3163, 3164,
	3165, 3166, 0, 2866, 1160, 2228, 3251, 1292, 3170, 3171,
	866, 2874, 3249, 0, 0, 866, 3254, 3152, 3153, 1173,
	1172, 1182, 1183, 1175, 1176, 1177, 1178, 1179, 1180, 1181,
	1174, 2256, 0, 1184, 3230, 3187, 3188, 3189, 0, 0,
	0, 130, 0, 3305, 0, 3316, 0, 0, 3346, 0,
	3307, 0, 0, 0, 1173, 1172, 1182, 1183, 1175, 1176,
	1177, 1178, 1179, 1180, 1181, 1174, 0, 3335, 1184, 0,
	0, 3342, 3191, 3340, 0, 3336, 0, 0, 76, 0,
	942, 0, 0, 0, 942, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3034, 3035, 3036, 3037, 0,
	0, 942, 0, 3041, 2614, 0, 0, 3044, 3045, 0,
	125, 0, 0, 0, 3355, 1388, 1391, 0, 0, 3370,
	3257, 0, 3367, 0, 0, 0, 3368, 0, 3391, 0,
	125, 3242, 0, 125, 0, 3380, 1388, 1391, 0, 0,
	0, 1421, 942, 3386, 0, 0, 0, 0, 0, 0,
	0, 125, 125, 125, 125, 125, 0, 0, 0, 0,
	3389, 942, 0, 0, 3258, 3390, 0, 0, 0, 0,
	0, 3401, 0, 0, 0, 0, 1726, 3411, 76, 0,
	0, 0, 0, 0, 76, 0, 3431, 942, 451, 3409,
	0, 0, 3429, 0, 3438, 0, 0, 3426, 3421, 0,
	3317, 0, 0, 0, 0, 0, 3340, 0, 3448, 76,
	3326, 0, 454, 0, 76, 3444, 3337, 3463, 3440, 942,
	3436, 0, 3479, 0, 2587, 3446, 3466, 0, 3459, 477,
	3458, 0, 942, 3468, 942, 3483, 3481, 3480, 3486, 3492,
	3457, 76, 3456, 0, 3488, 76, 76, 0, 942, 3493,
	76, 3494, 0, 3496, 0, 0, 3438, 0, 0, 0,
	3502, 451, 3478, 0, 0, 0, 130, 0, 0, 0,
	0, 0, 0, 0, 0, 3516, 76, 0, 0, 76,
	0, 468, 3524, 0, 125, 454, 3438, 3521, 942, 3526,
	0, 0, 0, 130, 0, 0, 0, 0, 76, 0,
	76, 0, 3387, 0, 76, 0, 0, 130, 3438, 125,
	3438, 0, 3539, 0, 0, 0, 0, 0, 76, 0,
	0, 76, 0, 1421, 0, 0, 76, 0, 3438, 3546,
	0, 76, 3200, 0, 0, 0, 3438, 0, 0, 0,
	0, 3438, 0, 0, 0, 0, 0, 0, 0, 2865,
	0, 3420, 0, 0, 0, 0, 1872, 0, 0, 0,
	0, 0, 0, 0, 126, 0, 0, 867, 0, 0,
	2855, 2581, 867, 0, 0, 0, 0, 0, 0, 468,
	0, 1872, 1872, 1872, 0, 0, 0, 1872, 1872, 1872,
	1872, 2854, 1872, 1872, 0, 0, 0, 866, 1872, 3235,
	1173, 1172, 1182, 1183, 1175, 1176, 1177, 1178, 1179, 1180,
	1181, 1174, 0, 0, 1184, 0, 0, 0, 1872, 1872,
	1872, 1872, 0, 0, 1872, 1872, 1872, 1872, 1872, 0,
	0, 0, 0, 1872, 1872, 1872, 1872, 1872, 1872, 1872,
	1872, 1872, 1872, 1872, 1872, 125, 125, 125, 0, 0,
	0, 0, 866, 0, 0, 1376, 0, 0, 0, 0,
	0, 0, 2575, 0, 0, 0, 1421, 126, 0, 3527,
	3528, 1173, 1172, 1182, 1183, 1175, 1176, 1177, 1178, 1179,
	1180, 1181, 1174, 0, 0, 1184, 0, 126, 0, 0,
	126, 0, 1173, 1172, 1182, 1183, 1175, 1176, 1177, 1178,
	1179, 1180, 1181, 1174, 0, 0, 1184, 0, 126, 126,
	126, 126, 126, 2341, 2342, 0, 0, 2346, 2347, 2348,
	2349, 2350, 0, 0, 2353, 2354, 2355, 2356, 2357, 2358,
	2359, 2360, 2361, 2362, 2363, 0, 2365, 2366, 2367, 2368,
	0, 2376, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 125, 0, 0, 0,
	0, 0, 125, 125, 0, 0, 0, 0, 0, 125,
	529, 1173, 1172, 1182, 1183, 1175, 1176, 1177, 1178, 1179,
	1180, 1181, 1174, 0, 0, 1184, 0, 0, 0, 0,
	0, 0, 0, 0, 2780, 0, 0, 0, 2853, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 0, 0, 0,
	0, 865, 0, 0, 0, 127, 865, 1302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 469, 0,
	1793, 126, 0, 0, 2826, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 488, 0, 0, 0,
	0, 0, 0, 127, 936, 2021, 126, 0, 0, 0,
	0, 0, 0, 1160, 0, 0, 0, 3477, 0, 0,
	1835, 0, 0, 127, 0, 0, 0, 0, 1996, 0,
	0, 0, 0, 0, 127, 0, 2002, 1868, 2864, 1173,
	1172, 1182, 1183, 1175, 1176, 1177, 1178, 1179, 1180, 1181,
	1174, 0, 0, 1184, 0, 0, 0, 0, 0, 0,
	1379, 3505, 1892, 1893, 1894, 0, 1387, 1390, 1898, 1899,
	1902, 1905, 0, 1910, 1911, 0, 469, 0, 0, 1917,
	0, 1999, 0, 0, 0, 0, 0, 1387, 1390, 0,
	0, 3530, 0, 0, 867, 0, 0, 0, 0, 1922,
	0, 1925, 1926, 0, 0, 0, 1930, 0, 1932, 1933,
	0, 0, 0, 0, 1938, 1939, 1940, 1941, 1942, 1943,
	1944, 1945, 1946, 1947, 1948, 1949, 0, 0, 0, 0,
	0, 0, 0, 0, 1998, 0, 0, 0, 2545, 0,
	0, 0, 126, 126, 126, 0, 0, 0, 0, 867,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1835, 0, 0, 0, 935, 1173, 1172,
	1182, 1183, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1174,
	1762, 0, 1184, 0, 0, 0, 0, 0, 2217, 0,
	0, 0, 2003, 0, 0, 0, 0, 0, 125, 0,
	0, 0, 2009, 2661, 0, 2663, 0, 0, 0, 0,
	0, 2672, 2673, 0, 0, 2133, 2134, 125, 1173, 1172,
	1182, 1183, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1174,
	0, 0, 1184, 0, 1797, 0, 2001, 0, 0, 0,
	0, 0, 125, 0, 468, 0, 0, 0, 0, 0,
	0, 0, 0, 126, 0, 0, 0, 0, 0, 126,
	126, 0, 0, 0, 0, 0, 126, 0, 0, 0,
	0, 0, 0, 0, 1797, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 0, 398, 0,
	0, 0, 0, 0, 0, 2013, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1797, 0, 1797, 0,
	0, 1877, 1421, 0, 0, 0, 0, 0, 1878, 0,
	1797, 1797, 2020, 0, 0, 0, 0, 0, 0, 0,
	127, 1219, 0, 0, 2006, 0, 0, 0, 0, 0,
	0, 3059, 3060, 3061, 3062, 2015, 0, 3063, 865, 0,
	3065, 36, 0, 0, 0, 0, 0, 0, 0, 1219,
	0, 0, 0, 0, 0, 57, 0, 1920, 1921, 0,
	0, 73, 0, 0, 39, 0, 1995, 0, 1872, 0,
	0, 0, 1872, 1872, 1872, 1872, 1872, 0, 0, 0,
	0, 376, 0, 0, 0, 0, 0, 0, 0, 1162,
	0, 0, 0, 865, 1993, 0, 0, 0, 0, 0,
	0, 1872, 0, 77, 0, 0, 0, 1797, 0, 0,
	0, 934, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2005, 0, 0, 0, 0, 379, 3294,
	0, 0, 3498, 3501, 3497, 0, 0, 388, 396, 397,
	125, 0, 0, 0, 0, 0, 0, 0, 125, 0,
	0, 468, 0, 0, 0, 0, 0, 125, 0, 0,
	125, 2327, 1421, 0, 866, 0, 0, 0, 0, 0,
	0, 0, 0, 385, 0, 488, 386, 0, 0, 394,
	395, 1994, 1997, 2000, 0, 2004, 2007, 2008, 2010, 2011,
	2012, 2014, 2016, 2017, 2018, 2019, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2915, 0, 0, 0, 0, 41, 69, 44,
	43, 46, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3295, 0, 0, 0, 391, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 0, 0, 0, 47,
	72, 71, 0, 0, 0, 0, 45, 392, 0, 0,
	0, 0, 0, 0, 126, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 125, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	0, 469, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 55, 56, 0,
	3296, 125, 0, 0, 0, 36, 37, 0, 1992, 1219,
	0, 0, 377, 0, 64, 0, 65, 0, 0, 57,
	0, 0, 0, 0, 0, 73, 0, 0, 39, 61,
	62, 0, 0, 0, 0, 0, 58, 0, 0, 0,
	0, 66, 0, 0, 0, 0, 390, 380, 381, 1835,
	401, 0, 0, 0, 382, 384, 0, 378, 400, 399,
	0, 0, 0, 48, 0, 0, 0, 77, 0, 3297,
	70, 0, 51, 52, 59, 0, 60, 0, 0, 125,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1872, 0, 0, 0, 0, 0, 0, 0, 1872, 0,
	1421, 393, 0, 2223, 2224, 2225, 2226, 2227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3347, 3348, 2252, 0, 0, 0, 0, 0, 0, 127,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3375, 3378, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 866, 125, 125, 125, 125, 125, 0, 0,
	0, 41, 69, 44, 43, 46, 468, 126, 0, 0,
	125, 0, 0, 0, 468, 126, 0, 0, 469, 1872,
	0, 0, 125, 0, 126, 0, 0, 126, 0, 0,
	0, 867, 0, 47, 72, 71, 0, 0, 0, 0,
	45, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3430, 0, 63, 0, 0, 0, 0, 2157,
	0, 0, 127, 68, 2157, 0, 0, 0, 0, 0,
	0, 0, 3378, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 127, 2381, 0, 127, 2157, 0, 0, 2157,
	0, 55, 56, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 127, 127, 127, 127, 127, 64, 0,
	65, 0, 0, 0, 2195, 0, 0, 0, 36, 0,
	0, 0, 0, 1797, 0, 0, 0, 0, 0, 0,
	0, 0, 57, 0, 0, 66, 0, 0, 73, 0,
	125, 39, 0, 0, 126, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3525, 0, 0,
	0, 0, 0, 49, 70, 0, 51, 52, 59, 0,
	60, 0, 125, 0, 0, 0, 0, 0, 126, 0,
	77, 0, 0, 0, 0, 0, 0, 125, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3294, 0, 0, 0,
	0, 3549, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 125, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1793, 0, 0, 1794, 127, 0, 0, 489,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 0, 0, 0,
	0, 127, 0, 0, 0, 0, 0, 0, 1162, 0,
	0, 0, 0, 0, 0, 1834, 0, 1835, 0, 0,
	0, 0, 0, 0, 0, 865, 0, 0, 0, 0,
	0, 0, 0, 0, 41, 69, 44, 43, 46, 0,
	0, 0, 36, 0, 0, 0, 866, 0, 0, 3295,
	0, 0, 0, 0, 0, 0, 57, 0, 0, 0,
	0, 0, 73, 0, 0, 39, 47, 72, 71, 0,
	0, 0, 0, 45, 0, 0, 0, 68, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2615,
	126, 126, 126, 126, 126, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 77, 0, 0, 126, 0, 0,
	0, 469, 0, 0, 0, 0, 0, 0, 0, 126,
	0, 0, 0, 0, 55, 56, 0, 3296, 0, 0,
	3294, 0, 0, 0, 0, 3544, 2442, 127, 127, 127,
	0, 64, 0, 65, 0, 0, 0, 0, 0, 0,
	0, 2456, 2460, 2464, 0, 0, 0, 0, 1834, 0,
	0, 0, 936, 0, 0, 0, 0, 0, 66, 0,
	0, 0, 0, 0, 2704, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 125, 0, 3297, 70, 0, 51,
	52, 59, 0, 60, 0, 0, 0, 0, 2157, 0,
	0, 0, 0, 0, 2497, 0, 0, 0, 41, 69,
	44, 43, 46, 0, 0, 0, 1797, 1797, 0, 0,
	0, 0, 0, 3295, 0, 0, 0, 126, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 127, 0,
	47, 72, 71, 0, 127, 127, 0, 45, 0, 0,
	1797, 127, 36, 0, 0, 0, 0, 0, 0, 126,
	0, 1797, 36, 0, 0, 0, 57, 0, 0, 0,
	0, 0, 73, 0, 126, 39, 57, 0, 0, 0,
	0, 0, 73, 0, 0, 39, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 55, 56,
	2381, 3296, 2809, 2814, 0, 0, 0, 2585, 126, 468,
	0, 0, 0, 866, 77, 64, 0, 65, 0, 0,
	0, 0, 0, 0, 77, 0, 0, 0, 0, 0,
	0, 0, 0, 865, 0, 0, 0, 0, 0, 0,
	3294, 0, 66, 0, 0, 3535, 0, 0, 0, 0,
	3294, 0, 0, 0, 0, 3518, 0, 0, 0, 0,
	68, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3297, 70, 0, 51, 52, 59, 1797, 60, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2615, 0, 1793, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2703, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 41, 69,
	44, 43, 46, 0, 0, 0, 0, 0, 41, 69,
	44, 43, 46, 3295, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3295, 0, 0, 0, 125, 489, 0,
	47, 72, 71, 0, 0, 0, 0, 45, 0, 0,
	47, 72, 71, 0, 0, 0, 0, 45, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 468, 0, 468,
	0, 2759, 2760, 2761, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 55, 56,
	0, 3296, 0, 0, 0, 0, 0, 0, 55, 56,
	0, 3296, 2787, 0, 0, 64, 0, 65, 0, 0,
	127, 126, 0, 0, 68, 64, 0, 65, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2818, 127,
	0, 0, 66, 2823, 0, 0, 0, 0, 0, 0,
	2827, 0, 66, 2828, 2829, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 127, 0, 0, 0, 0, 0,
	3297, 70, 0, 51, 52, 59, 0, 60, 0, 0,
	3297, 70, 0, 51, 52, 59, 0, 60, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 125, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 865, 0, 1797,
	0, 2882, 0, 0, 1834, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 469, 0, 0, 0,
	2615, 0, 0, 0, 0, 0, 0, 0, 0, 866,
	2882, 0, 0, 0, 0, 0, 0, 36, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 57, 0, 0, 0, 0, 0, 73, 2704, 0,
	39, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2704, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 77,
	3503, 0, 0, 2928, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 68, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 68, 3294, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 127, 0, 0, 0, 0, 2460, 0, 0,
	127, 0, 0, 0, 0, 0, 0, 0, 0, 127,
	0, 0, 127, 0, 126, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 468,
	0, 0, 0, 0, 469, 0, 469, 0, 0, 0,
	0, 0, 0, 41, 69, 44, 43, 46, 0, 0,
	0, 0, 0, 0, 0, 1797, 468, 0, 3295, 0,
	36, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 57, 47, 72, 71, 0, 0,
	73, 0, 45, 39, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 865, 0, 0, 0, 0, 127,
	0, 0, 0, 0, 0, 0, 0, 2704, 0, 0,
	2928, 0, 77, 0, 0, 0, 0, 2928, 2928, 2928,
	0, 0, 0, 55, 56, 0, 3296, 0, 0, 0,
	0, 0, 2703, 127, 0, 0, 0, 0, 3294, 0,
	64, 0, 65, 3437, 0, 0, 0, 0, 0, 0,
	0, 126, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2703, 0, 0, 0, 0, 0, 66, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1794, 0, 0,
	2704, 0, 0, 0, 0, 3297, 70, 0, 51, 52,
	59, 0, 60, 0, 0, 0, 2615, 0, 0, 0,
	0, 127, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 41, 69, 44, 43,
	46, 3155, 1834, 0, 0, 0, 0, 0, 0, 0,
	0, 3295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 47, 72,
	71, 0, 0, 0, 0, 45, 3180, 0, 0, 0,
	0, 2704, 0, 0, 2928, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3196, 0,
	0, 0, 0, 0, 0, 127, 127, 127, 127, 127,
	0, 0, 0, 0, 0, 0, 55, 56, 0, 3296,
	0, 0, 127, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 64, 127, 65, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	66, 2703, 0, 0, 0, 0, 0, 0, 0, 68,
	0, 0, 0, 0, 0, 0, 469, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3297, 70,
	0, 51, 52, 59, 0, 60, 0, 0, 0, 0,
	0, 0, 0, 469, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 205, 0,
	0, 0, 0, 0, 2703, 0, 204, 194, 3319, 0,
	0, 0, 127, 0, 0, 0, 0, 0, 0, 248,
	865, 0, 366, 333, 267, 1797, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 77,
	0, 0, 0, 1964, 127, 0, 0, 0, 0, 0,
	0, 0, 137, 0, 0, 0, 0, 0, 0, 127,
	0, 0, 0, 0, 0, 0, 1797, 0, 0, 0,
	208, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 361, 2703, 0, 2811, 2816, 299,
	222, 0, 0, 127, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2928, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 68, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3415, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3419, 0, 1797, 268,
	0, 0, 0, 0, 237, 154, 0, 0, 0, 0,
	0, 0, 1797, 245, 0, 155, 0, 0, 0, 279,
	1794, 0, 142, 158, 247, 0, 0, 0, 195, 0,
	309, 0, 360, 0, 0, 308, 249, 353, 0, 0,
	359, 0, 340, 367, 371, 215, 0, 186, 330, 206,
	203, 0, 3415, 0, 223, 298, 198, 241, 0, 0,
	0, 191, 0, 0, 0, 329, 350, 160, 264, 351,
	370, 177, 345, 265, 272, 188, 190, 189, 172, 323,
	349, 182, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 224, 0, 0, 364, 144, 318, 317,
	0, 231, 0, 145, 136, 305, 146, 238, 163, 0,
	373, 176, 243, 346, 128, 218, 278, 197, 0, 287,
	0, 157, 301, 260, 262, 259, 263, 221, 140, 147,
	0, 303, 320, 348, 178, 336, 138, 139, 141, 149,
	311, 150, 151, 0, 254, 210, 214, 225, 235, 0,
	307, 337, 365, 0, 173, 166, 339, 358, 183, 319,
	322, 372, 0, 168, 0, 0, 127, 0, 0, 0,
	0, 167, 0, 0, 0, 0, 0, 0, 220, 0,
	356, 357, 196, 374, 0, 0, 169, 0, 0, 275,
	282, 274, 0, 352, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 213, 227, 296, 251, 297, 228, 270,
	269, 271, 252, 0, 0, 164, 0, 334, 0, 0,
	338, 180, 0, 0, 347, 143, 302, 181, 219, 211,
	295, 273, 174, 230, 332, 242, 250, 0, 0, 286,
	310, 185, 362, 331, 207, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 152, 153, 0, 0,
	0, 192, 131, 0, 0, 0, 132, 0, 0, 133,
	134, 0, 0, 0, 0, 135, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1965, 292, 165, 175, 184, 202, 200, 212, 239, 261,
	266, 291, 321, 326, 341, 342, 343, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 159, 170, 246, 0,
	304, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 363, 201, 0, 0, 0, 171, 179, 187, 199,
	209, 216, 226, 229, 233, 234, 236, 240, 253, 255,
	256, 257, 258, 276, 277, 280, 281, 284, 285, 288,
	289, 290, 293, 294, 300, 148, 306, 312, 313, 314,
	315, 316, 324, 325, 327, 328, 335, 354, 355, 368,
	369, 0, 0, 156, 0, 0, 162, 0, 0, 127,
	0, 0, 0, 161, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 825, 0,
	344, 587, 829, 672, 695, 838, 701, 703, 766, 648,
	743, 283, 692, 649, 0, 0, 640, 496, 641, 673,
	205, 493, 799, 744, 827, 729, 759, 769, 204, 194,
	736, 735, 816, 684, 683, 764, 812, 826, 0, 0,
	595, 248, 0, 0, 366, 333, 267, 0, 0, 727,
	0, 580, 581, 712, 768, 660, 755, 831, 693, 760,
	832, 77, 0, 0, 0, 494, 519, 518, 521, 522,
	523, 524, 0, 0, 137, 520, 525, 526, 527, 0,
	722, 765, 843, 639, 491, 510, 644, 594, 0, 817,
	680, 681, 208, 0, 0, 0, 0, 0, 0, 0,
	725, 742, 784, 709, 0, 0, 361, 771, 780, 794,
	702, 299, 222, 0, 0, 0, 0, 507, 508, 487,
	0, 0, 0, 610, 0, 509, 127, 654, 505, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 511, 0, 0, 0, 659, 637, 678, 786, 638,
	636, 268, 651, 583, 815, 710, 237, 154, 821, 708,
	608, 774, 655, 803, 696, 245, 653, 155, 650, 656,
	694, 279, 783, 789, 592, 158, 247, 800, 674, 687,
	195, 0, 309, 761, 360, 499, 747, 308, 249, 353,
	775, 823, 359, 697, 340, 367, 371, 215, 730, 186,
	330, 206, 203, 679, 793, 643, 223, 298, 198, 241,
	713, 767, 675, 191, 778, 754, 805, 329, 350, 160,
	264, 351, 370, 177, 345, 265, 272, 188, 190, 189,
	172, 323, 349, 182, 193, 801, 788, 807, 670, 657,
	662, 658, 686, 824, 232, 224, 808, 806, 364, 144,
	318, 317, 700, 231, 791, 145, 136, 305, 146, 238,
	163, 811, 373, 176, 243, 346, 498, 218, 278, 197,
	763, 287, 685, 157, 301, 260, 262, 259, 263, 221,
	140, 147, 787, 303, 320, 348, 178, 336, 138, 139,
	141, 149, 311, 150, 151, 830, 254, 210, 214, 225,
	235, 762, 307, 337, 365, 756, 173, 166, 339, 358,
	183, 319, 322, 372, 785, 168, 819, 802, 749, 715,
	721, 645, 0, 167, 781, 677, 689, 669, 757, 668,
	220, 773, 356, 357, 196, 374, 586, 834, 169, 652,
	833, 275, 282, 274, 836, 352, 820, 750, 739, 737,
	646, 818, 748, 738, 244, 213, 227, 296, 251, 297,
	228, 270, 269, 271, 252, 741, 0, 164, 0, 334,
	828, 845, 338, 180, 663, 795, 347, 143, 302, 181,
	219, 211, 295, 273, 174, 230, 332, 242, 250, 777,
	842, 286, 310, 185, 362, 331, 207, 597, 609, 603,
	605, 604, 601, 602, 600, 599, 598, 611, 584, 585,
	588, 589, 590, 732, 822, 647, 593, 798, 606, 607,
	770, 840, 582, 192, 531, 623, 624, 625, 532, 626,
	627, 533, 534, 628, 629, 630, 631, 535, 632, 633,
	634, 612, 613, 614, 615, 616, 617, 618, 619, 622,
	620, 621, 728, 292, 165, 175, 184, 202, 200, 212,
	239, 261, 266, 291, 321, 326, 341, 342, 343, 0,
	0, 0, 0, 0, 0, 0, 0, 591, 159, 170,
	246, 841, 304, 217, 635, 642, 661, 664, 665, 666,
	667, 671, 676, 0, 682, 688, 690, 691, 699, 704,
	705, 706, 707, 714, 716, 717, 718, 719, 720, 723,
	724, 726, 733, 734, 740, 745, 746, 752, 753, 0,
	776, 779, 596, 790, 792, 796, 797, 804, 809, 810,
	835, 839, 844, 363, 201, 731, 751, 782, 171, 179,
	187, 199, 209, 216, 226, 229, 233, 234, 236, 240,
	253, 255, 256, 257, 258, 276, 277, 280, 281, 284,
	285, 288, 289, 290, 293, 294, 300, 148, 306, 312,
	313, 314, 315, 316, 324, 325, 327, 328, 335, 354,
	355, 368, 369, 814, 711, 156, 0, 0, 162, 0,
	0, 0, 0, 0, 698, 161, 813, 837, 758, 772,
	825, 0, 344, 587, 829, 672, 695, 838, 701, 703,
	766, 648, 743, 283, 692, 649, 0, 0, 640, 496,
	641, 673, 205, 493, 799, 744, 827, 729, 759, 769,
	204, 194, 736, 735, 816, 684, 683, 764, 812, 826,
	0, 0, 595, 248, 0, 0, 366, 333, 267, 0,
	0, 727, 0, 580, 581, 712, 768, 660, 755, 831,
	693, 760, 832, 77, 0, 1133, 0, 494, 519, 518,
	521, 522, 523, 524, 0, 0, 137, 520, 525, 526,
	527, 0, 722, 765, 843, 639, 491, 510, 644, 594,
	0, 817, 680, 681, 208, 0, 0, 0, 0, 0,
	0, 0, 725, 742, 784, 709, 0, 0, 361, 771,
	780, 794, 702, 299, 222, 0, 0, 0, 0, 507,
	508, 0, 0, 0, 0, 610, 0, 509, 0, 654,
	505, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 511, 0, 0, 0, 659, 637, 678,
	786, 638, 636, 268, 651, 583, 815, 710, 237, 154,
	821, 708, 608, 774, 655, 803, 696, 245, 653, 155,
	650, 656, 694, 279, 783, 789, 592, 158, 247, 800,
	674, 687, 195, 0, 309, 761, 360, 499, 747, 308,
	249, 353, 775, 823, 359, 697, 340, 367, 371, 215,
	730, 186, 330, 206, 203, 679, 793, 643, 223, 298,
	198, 241, 713, 767, 675, 191, 778, 754, 805, 329,
	350, 160, 264, 351, 370, 177, 345, 265, 272, 188,
	190, 189, 172, 323, 349, 182, 193, 801, 788, 807,
	670, 657, 662, 658, 686, 824, 232, 224, 808, 806,
	364, 144, 318, 317, 700, 231, 791, 145, 136, 305,
	146, 238, 163, 811, 373, 176, 243, 346, 498, 218,
	278, 197, 763, 287, 685, 157, 301, 260, 262, 259,
	263, 221, 140, 147, 787, 303, 320, 348, 178, 336,
	138, 139, 141, 149, 311, 150, 151, 830, 254, 210,
	214, 225, 235, 762, 307, 337, 365, 756, 173, 166,
	339, 358, 183, 319, 322, 372, 785, 168, 819, 802,
	749, 715, 721, 645, 0, 167, 781, 677, 689, 669,
	757, 668, 220, 773, 356, 357, 196, 374, 586, 834,
	169, 652, 833, 275, 282, 274, 836, 352, 820, 750,
	739, 737, 646, 818, 748, 738, 244, 213, 227, 296,
	251, 297, 228, 270, 269, 271, 252, 741, 0, 164,
	0, 334, 828, 845, 338, 180, 663, 795, 347, 143,
	302, 181, 219, 211, 295, 273, 174, 230, 332, 242,
	250, 777, 842, 286, 310, 185, 362, 331, 207, 597,
	609, 603, 605, 604, 601, 602, 600, 599, 598, 611,
	584, 585, 588, 589, 590, 732, 822, 647, 593, 798,
	606, 607, 770, 840, 582, 192, 531, 623, 624, 625,
	532, 626, 627, 533, 534, 628, 629, 630, 631, 535,
	632, 633, 634, 612, 613, 614, 615, 616, 617, 618,
	619, 622, 620, 621, 728, 292, 165, 175, 184, 202,
	200, 212, 239, 261, 266, 291, 321, 326, 341, 342,
	343, 0, 0, 0, 0, 0, 0, 0, 0, 591,
	159, 170, 246, 841, 304, 217, 635, 642, 661, 664,
	665, 666, 667, 671, 676, 0, 682, 688, 690, 691,
	699, 704, 705, 706, 707, 714, 716, 717, 718, 719,
	720, 723, 724, 726, 733, 734, 740, 745, 746, 752,
	753, 0, 776, 779, 596, 790, 792, 796, 797, 804,
	809, 810, 835, 839, 844, 363, 201, 731, 751, 782,
	171, 179, 187, 199, 209, 216, 226, 229, 233, 234,
	236, 240, 253, 255, 256, 257, 258, 276, 277, 280,
	281, 284, 285, 288, 289, 290, 293, 294, 300, 148,
	306, 312, 313, 314, 315, 316, 324, 325, 327, 328,
	335, 354, 355, 368, 369, 814, 711, 156, 0, 0,
	162, 0, 0, 0, 0, 0, 698, 161, 813, 837,
	758, 772, 825, 0, 344, 587, 829, 672, 695, 838,
	701, 703, 766, 648, 743, 283, 692, 649, 0, 0,
	640, 496, 641, 673, 205, 493, 799, 744, 827, 729,
	759, 769, 204, 194, 736, 735, 816, 684, 683, 764,
	812, 826, 0, 0, 595, 248, 0, 0, 366, 333,
	267, 0, 0, 727, 0, 580, 581, 712, 768, 660,
	755, 831, 693, 760, 832, 77, 0, 0, 0, 494,
	519, 518, 521, 522, 523, 524, 0, 0, 137, 520,
	525, 526, 527, 0, 722, 765, 843, 639, 491, 510,
	644, 594, 0, 817, 680, 681, 208, 0, 0, 0,
	0, 0, 0, 0, 725, 742, 784, 709, 0, 0,
	361, 771, 780, 794, 702, 299, 222, 0, 0, 0,
	0, 507, 508, 1870, 0, 0, 0, 610, 0, 509,
	0, 654, 505, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 511, 0, 0, 0, 659,
	637, 678, 786, 638, 636, 268, 651, 583, 815, 710,
	237, 154, 821, 708, 608, 774, 655, 803, 696, 245,
	653, 155, 650, 656, 694, 279, 783, 789, 592, 158,
	247, 800, 674, 687, 195, 0, 309, 761, 360, 499,
	747, 308, 249, 353, 775, 823, 359, 697, 340, 367,
	371, 215, 730, 186, 330, 206, 203, 679, 793, 643,
	223, 298, 198, 241, 713, 767, 675, 191, 778, 754,
	805, 329, 350, 160, 264, 351, 370, 177, 345, 265,
	272, 188, 190, 189, 172, 323, 349, 182, 193, 801,
	788, 807, 670, 657, 662, 658, 686, 824, 232, 224,
	808, 806, 364, 144, 318, 317, 700, 231, 791, 145,
	136, 305, 146, 238, 163, 811, 373, 176, 243, 346,
	498, 218, 278, 197, 763, 287, 685, 157, 301, 260,
	262, 259, 263, 221, 140, 147, 787, 303, 320, 348,
	178, 336, 138, 139, 141, 149, 311, 150, 151, 830,
	254, 210, 214, 225, 235, 762, 307, 337, 365, 756,
	173, 166, 339, 358, 183, 319, 322, 372, 785, 168,
	819, 802, 749, 715, 721, 645, 0, 167, 781, 677,
	689, 669, 757, 668, 220, 773, 356, 357, 196, 374,
	586, 834, 169, 652, 833, 275, 282, 274, 836, 352,
	820, 750, 739, 737, 646, 818, 748, 738, 244, 213,
	227, 296, 251, 297, 228, 270, 269, 271, 252, 741,
	0, 164, 0, 334, 828, 845, 338, 180, 663, 795,
	347, 143, 302, 181, 219, 211, 295, 273, 174, 230,
	332, 242, 250, 777, 842, 286, 310, 185, 362, 331,
	207, 597, 609, 603, 605, 604, 601, 602, 600, 599,
	598, 611, 584, 585, 588, 589, 590, 732, 822, 647,
	593, 798, 606, 607, 770, 840, 582, 192, 531, 623,
	624, 625, 532, 626, 627, 533, 534, 628, 629, 630,
	631, 535, 632, 633, 634, 612, 613, 614, 615, 616,
	617, 618, 619, 622, 620, 621, 728, 292, 165, 175,
	184, 202, 200, 212, 239, 261, 266, 291, 321, 326,
	341, 342, 343, 0, 0, 0, 0, 0, 0, 0,
	0, 591, 159, 170, 246, 841, 304, 217, 635, 642,
	661, 664, 665, 666, 667, 671, 676, 0, 682, 688,
	690, 691, 699, 704, 705, 706, 707, 714, 716, 717,
	718, 719, 720, 723, 724, 726, 733, 734, 740, 745,
	746, 752, 753, 0, 776, 779, 596, 790, 792, 796,
	797, 804, 809, 810, 835, 839, 844, 363, 201, 731,
	751, 782, 171, 179, 187, 199, 209, 216, 226, 229,
	233, 234, 236, 240, 253, 255, 256, 257, 258, 276,
	277, 280, 281, 284, 285, 288, 289, 290, 293, 294,
	300, 148, 306, 312, 313, 314, 315, 316, 324, 325,
	327, 328, 335, 354, 355, 368, 369, 814, 711, 156,
	0, 0, 162, 0, 0, 0, 0, 0, 698, 161,
	813, 837, 758, 772, 825, 0, 344, 587, 829, 672,
	695, 838, 701, 703, 766, 648, 743, 283, 692, 649,
	0, 0, 640, 496, 641, 673, 205, 493, 799, 744,
	827, 729, 759, 769, 204, 194, 736, 735, 816, 684,
	683, 764, 812, 826, 0, 0, 595, 248, 0, 0,
	366, 333, 267, 0, 0, 727, 0, 580, 581, 712,
	768, 660, 755, 831, 693, 1983, 832, 77, 0, 0,
	0, 494, 519, 518, 521, 522, 523, 524, 0, 0,
	137, 520, 525, 526, 527, 1984, 722, 765, 843, 639,
	491, 510, 644, 594, 0, 817, 680, 681, 208, 0,
	0, 0, 0, 0, 0, 0, 725, 742, 784, 709,
	0, 0, 361, 771, 780, 794, 702, 299, 222, 0,
	0, 0, 0, 507, 508, 0, 0, 0, 0, 610,
	0, 509, 0, 654, 505, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 511, 0, 0,
	0, 659, 637, 678, 786, 638, 636, 268, 651, 583,
	815, 710, 237, 154, 821, 708, 608, 774, 655, 803,
	696, 245, 653, 155, 650, 656, 694, 279, 783, 789,
	592, 158, 247, 800, 674, 687, 195, 0, 309, 761,
	360, 499, 747, 308, 249, 353, 775, 823, 359, 697,
	340, 367, 371, 215, 730, 186, 330, 206, 203, 679,
	793, 643, 223, 298, 198, 241, 713, 767, 675, 191,
	778, 754, 805, 329, 350, 160, 264, 351, 370, 177,
	345, 265, 272, 188, 190, 189, 172, 323, 349, 182,
	193, 801, 788, 807, 670, 657, 662, 658, 686, 824,
	232, 224, 808, 806, 364, 144, 318, 317, 700, 231,
	791, 145, 136, 305, 146, 238, 163, 811, 373, 176,
	243, 346, 498, 218, 278, 197, 763, 287, 685, 157,
	301, 260, 262, 259, 263, 221, 140, 147, 787, 303,
	320, 348, 178, 336, 138, 139, 141, 149, 311, 150,
	151, 830, 254, 210, 214, 225, 235, 762, 307, 337,
	365, 756, 173, 166, 339, 358, 183, 319, 322, 372,
	785, 168, 819, 802, 749, 715, 721, 645, 0, 167,
	781, 677, 689, 669, 757, 668, 220, 773, 356, 357,
	196, 374, 586, 834, 169, 652, 833, 275, 282, 274,
	836, 352, 820, 750, 739, 737, 646, 818, 748, 738,
	244, 213, 227, 296, 251, 297, 228, 270, 269, 271,
	252, 741, 0, 164, 0, 334, 828, 845, 338, 180,
	663, 795, 347, 143, 302, 181, 219, 211, 295, 273,
	174, 230, 332, 242, 250, 777, 842, 286, 310, 185,
	362, 331, 207, 597, 609, 603, 605, 604, 601, 602,
	600, 599, 598, 611, 584, 585, 588, 589, 590, 732,
	822, 647, 593, 798, 606, 607, 770, 840, 582, 192,
	531, 623, 624, 625, 532, 626, 627, 533, 534, 628,
	629, 630, 631, 535, 632, 633, 634, 612, 613, 614,
	615, 616, 617, 618, 619, 622, 620, 621, 728, 292,
	165, 175, 184, 202, 200, 212, 239, 261, 266, 291,
	321, 326, 341, 342, 343, 0, 0, 0, 0, 0,
	0, 0, 0, 591, 159, 170, 246, 841, 304, 217,
	635, 642, 661, 664, 665, 666, 667, 671, 676, 0,
	682, 688, 690, 691, 699, 704, 705, 706, 707, 714,
	716, 717, 718, 719, 720, 723, 724, 726, 733, 734,
	740, 745, 746, 752, 753, 0, 776, 779, 596, 790,
	792, 796, 797, 804, 809, 810, 835, 839, 844, 363,
	201, 731, 751, 782, 171, 179, 187, 199, 209, 216,
	226, 229, 233, 234, 236, 240, 253, 255, 256, 257,
	258, 276, 277, 280, 281, 284, 285, 288, 289, 290,
	293, 294, 300, 148, 306, 312, 313, 314, 315, 316,
	324, 325, 327, 328, 335, 354, 355, 368, 369, 814,
	711, 156, 0, 0, 162, 0, 0, 0, 0, 0,
	698, 161, 813, 837, 758, 772, 825, 0, 344, 587,
	829, 672, 695, 838, 701, 703, 766, 648, 743, 283,
	692, 649, 0, 0, 640, 885, 641, 673, 205, 883,
	799, 744, 827, 729, 759, 769, 204, 194, 736, 735,
	816, 684, 683, 764, 812, 826, 0, 0, 595, 248,
	0, 0, 366, 333, 267, 0, 0, 727, 0, 580,
	581, 712, 768, 660, 755, 831, 693, 760, 832, 77,
	0, 1133, 0, 494, 519, 518, 521, 522, 523, 524,
	0, 0, 137, 520, 525, 526, 527, 0, 722, 765,
	843, 639, 902, 510, 644, 594, 0, 817, 680, 681,
	208, 0, 0, 0, 0, 0, 0, 0, 725, 742,
	784, 709, 0, 0, 361, 771, 780, 794, 702, 299,
	222, 0, 0, 0, 0, 507, 508, 0, 0, 0,
	0, 610, 0, 509, 0, 654, 505, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 511,
	0, 0, 0, 659, 637, 678, 786, 638, 636, 268,
	651, 583, 815, 710, 237, 154, 821, 708, 608, 774,
	655, 803, 696, 245, 653, 155, 650, 656, 694, 279,
	783, 789, 592, 158, 247, 800, 674, 687, 195, 0,
	309, 761, 360, 499, 747, 308, 249, 353, 775, 823,
	359, 697, 340, 367, 371, 215, 730, 186, 330, 206,
	203, 679, 793, 643, 223, 298, 198, 241, 713, 767,
	675, 191, 778, 754, 805, 329, 350, 160, 264, 351,
	370, 177, 345, 265, 272, 188, 190, 189, 172, 323,
	349, 182, 193, 801, 788, 807, 670, 657, 662, 658,
	686, 824, 232, 224, 808, 806, 364, 144, 318, 317,
	700, 231, 791, 145, 136, 305, 146, 238, 163, 811,
	373, 176, 243, 346, 498, 218, 278, 197, 763, 287,
	685, 157, 301, 260, 262, 259, 263, 221, 140, 147,
	787, 303, 320, 348, 178, 336, 138, 139, 141, 149,
	311, 150, 151, 830, 254, 210, 214, 225, 235, 762,
	307, 337, 365, 756, 173, 166, 339, 358, 183, 319,
	322, 372, 785, 168, 819, 802, 749, 715, 721, 645,
	0, 167, 781, 677, 689, 669, 757, 668, 220, 773,
	356, 357, 196, 374, 586, 834, 169, 652, 833, 275,
	282, 274, 836, 352, 820, 750, 739, 737, 646, 818,
	748, 738, 244, 213, 227, 296, 251, 297, 228, 270,
	269, 271, 252, 741, 0, 164, 0, 334, 828, 845,
	338, 180, 663, 795, 347, 143, 302, 181, 219, 211,
	295, 273, 174, 230, 332, 242, 250, 777, 842, 286,
	310, 185, 362, 331, 207, 597, 609, 603, 605, 604,
	601, 602, 600, 599, 598, 611, 584, 585, 588, 589,
	590, 732, 822, 647, 593, 798, 606, 607, 770, 840,
	582, 192, 531, 623, 624, 625, 532, 626, 627, 533,
	534, 628, 629, 630, 631, 535, 632, 633, 634, 612,
	613, 614, 615, 616, 617, 618, 619, 622, 620, 621,
	728, 292, 165, 175, 184, 202, 200, 212, 239, 261,
	266, 291, 321, 326, 341, 342, 343, 0, 0, 0,
	0, 0, 0, 0, 0, 591, 159, 170, 246, 841,
	304, 217, 635, 642, 661, 664, 665, 666, 667, 671,
	676, 0, 682, 688, 690, 691, 699, 704, 705, 706,
	707, 714, 716, 717, 718, 719, 720, 723, 724, 726,
	733, 734, 740, 745, 746, 752, 753, 0, 776, 779,
	596, 790, 792, 796, 797, 804, 809, 810, 835, 839,
	844, 363, 201, 731, 751, 782, 171, 179, 187, 199,
	209, 216, 226, 229, 233, 234, 236, 240, 253, 255,
	256, 257, 258, 276, 277, 280, 281, 284, 285, 288,
	289, 290, 293, 294, 300, 148, 306, 312, 313, 314,
	315, 316, 324, 325, 327, 328, 335, 354, 355, 368,
	369, 814, 711, 156, 0, 0, 162, 0, 0, 0,
	0, 0, 698, 161, 813, 837, 758, 772, 825, 0,
	344, 587, 829, 672, 695, 838, 701, 703, 766, 648,
	743, 283, 692, 649, 0, 0, 640, 496, 641, 673,
	205, 493, 799, 744, 827, 729, 759, 769, 204, 194,
	736, 735, 816, 684, 683, 764, 812, 826, 0, 0,
	595, 248, 0, 0, 366, 333, 267, 0, 0, 727,
	0, 580, 581, 712, 768, 660, 755, 831, 693, 760,
	832, 77, 0, 0, 0, 494, 519, 1904, 521, 522,
	523, 524, 0, 0, 137, 520, 525, 526, 527, 0,
	722, 765, 843, 639, 491, 510, 644, 594, 0, 817,
	680, 681, 208, 0, 0, 0, 0, 0, 0, 0,
	725, 742, 784, 709, 0, 0, 361, 771, 780, 794,
	702, 299, 222, 0, 0, 0, 0, 507, 508, 1870,
	0, 0, 0, 610, 0, 509, 0, 654, 505, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 511, 0, 0, 0, 659, 637, 678, 786, 638,
	636, 268, 651, 583, 815, 710, 237, 154, 821, 708,
	608, 774, 655, 803, 696, 245, 653, 155, 650, 656,
	694, 279, 783, 789, 592, 158, 247, 800, 674, 687,
	195, 0, 309, 761, 360, 499, 747, 308, 249, 353,
	775, 823, 359, 697, 340, 367, 371, 215, 730, 186,
	330, 206, 203, 679, 793, 643, 223, 298, 198, 241,
	713, 767, 675, 191, 778, 754, 805, 329, 350, 160,
	264, 351, 370, 177, 345, 265, 272, 188, 190, 189,
	172, 323, 349, 182, 193, 801, 788, 807, 670, 657,
	662, 658, 686, 824, 232, 224, 808, 806, 364, 144,
	318, 317, 700, 231, 791, 145, 136, 305, 146, 238,
	163, 811, 373, 176, 243, 346, 498, 218, 278, 197,
	763, 287, 685, 157, 301, 260, 262, 259, 263, 221,
	140, 147, 787, 303, 320, 348, 178, 336, 138, 139,
	141, 149, 311, 150, 151, 830, 254, 210, 214, 225,
	235, 762, 307, 337, 365, 756, 173, 166, 339, 358,
	183, 319, 322, 372, 785, 168, 819, 802, 749, 715,
	721, 645, 0, 167, 781, 677, 689, 669, 757, 668,
	220, 773, 356, 357, 196, 374, 586, 834, 169, 652,
	833, 275, 282, 274, 836, 352, 820, 750, 739, 737,
	646, 818, 748, 738, 244, 213, 227, 296, 251, 297,
	228, 270, 269, 271, 252, 741, 0, 164, 0, 334,
	828, 845, 338, 180, 663, 795, 347, 143, 302, 181,
	219, 211, 295, 273, 174, 230, 332, 242, 250, 777,
	842, 286, 310, 185, 362, 331, 207, 597, 609, 603,
	605, 604, 601, 602, 600, 599, 598, 611, 584, 585,
	588, 589, 590, 732, 822, 647, 593, 798, 606, 607,
	770, 840, 582, 192, 531, 623, 624, 625, 532, 626,
	627, 533, 534, 628, 629, 630, 631, 535, 632, 633,
	634, 612, 613, 614, 615, 616, 617, 618, 619, 622,
	620, 621, 728, 292, 165, 175, 184, 202, 200, 212,
	239, 261, 266, 291, 321, 326, 341, 342, 343, 0,
	0, 0, 0, 0, 0, 0, 0, 591, 159, 170,
	246, 841, 304, 217, 635, 642, 661, 664, 665, 666,
	667, 671, 676, 0, 682, 688, 690, 691, 699, 704,
	705, 706, 707, 714, 716, 717, 718, 719, 720, 723,
	724, 726, 733, 734, 740, 745, 746, 752, 753, 0,
	776, 779, 596, 790, 792, 796, 797, 804, 809, 810,
	835, 839, 844, 363, 201, 731, 751, 782, 171, 179,
	187, 199, 209, 216, 226, 229, 233, 234, 236, 240,
	253, 255, 256, 257, 258, 276, 277, 280, 281, 284,
	285, 288, 289, 290, 293, 294, 300, 148, 306, 312,
	313, 314, 315, 316, 324, 325, 327, 328, 335, 354,
	355, 368, 369, 814, 711, 156, 0, 0, 162, 0,
	0, 0, 0, 0, 698, 161, 813, 837, 758, 772,
	825, 0, 344, 587, 829, 672, 695, 838, 701, 703,
	766, 648, 743, 283, 692, 649, 0, 0, 640, 496,
	641, 673, 205, 493, 799, 744, 827, 729, 759, 769,
	204, 194, 736, 735, 816, 684, 683, 764, 812, 826,
	0, 0, 595, 248, 0, 0, 366, 333, 267, 0,
	0, 727, 0, 580, 581, 712, 768, 660, 755, 831,
	693, 760, 832, 77, 0, 0, 0, 494, 519, 1901,
	521, 522, 523, 524, 0, 0, 137, 520, 525, 526,
	527, 0, 722, 765, 843, 639, 491, 510, 644, 594,
	0, 817, 680, 681, 208, 0, 0, 0, 0, 0,
	0, 0, 725, 742, 784, 709, 0, 0, 361, 771,
	780, 794, 702, 299, 222, 0, 0, 0, 0, 507,
	508, 1870, 0, 0, 0, 610, 0, 509, 0, 654,
	505, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 511, 0, 0, 0, 659, 637, 678,
	786, 638, 636, 268, 651, 583, 815, 710, 237, 154,
	821, 708, 608, 774, 655, 803, 696, 245, 653, 155,
	650, 656, 694, 279, 783, 789, 592, 158, 247, 800,
	674, 687, 195, 0, 309, 761, 360, 499, 747, 308,
	249, 353, 775, 823, 359, 697, 340, 367, 371, 215,
	730, 186, 330, 206, 203, 679, 793, 643, 223, 298,
	198, 241, 713, 767, 675, 191, 778, 754, 805, 329,
	350, 160, 264, 351, 370, 177, 345, 265, 272, 188,
	190, 189, 172, 323, 349, 182, 193, 801, 788, 807,
	670, 657, 662, 658, 686, 824, 232, 224, 808, 806,
	364, 144, 318, 317, 700, 231, 791, 145, 136, 305,
	146, 238, 163, 811, 373, 176, 243, 346, 498, 218,
	278, 197, 763, 287, 685, 157, 301, 260, 262, 259,
	263, 221, 140, 147, 787, 303, 320, 348, 178, 336,
	138, 139, 141, 149, 311, 150, 151, 830, 254, 210,
	214, 225, 235, 762, 307, 337, 365, 756, 173, 166,
	339, 358, 183, 319, 322, 372, 785, 168, 819, 802,
	749, 715, 721, 645, 0, 167, 781, 677, 689, 669,
	757, 668, 220, 773, 356, 357, 196, 374, 586, 834,
	169, 652, 833, 275, 282, 274, 836, 352, 820, 750,
	739, 737, 646, 818, 748, 738, 244, 213, 227, 296,
	251, 297, 228, 270, 269, 271, 252, 741, 0, 164,
	0, 334, 828, 845, 338, 180, 663, 795, 347, 143,
	302, 181, 219, 211, 295, 273, 174, 230, 332, 242,
	250, 777, 842, 286, 310, 185, 362, 331, 207, 597,
	609, 603, 605, 604, 601, 602, 600, 599, 598, 611,
	584, 585, 588, 589, 590, 732, 822, 647, 593, 798,
	606, 607, 770, 840, 582, 192, 531, 623, 624, 625,
	532, 626, 627, 533, 534, 628, 629, 630, 631, 535,
	632, 633, 634, 612, 613, 614, 615, 616, 617, 618,
	619, 622, 620, 621, 728, 292, 165, 175, 184, 202,
	200, 212, 239, 261, 266, 291, 321, 326, 341, 342,
	343, 0, 0, 0, 0, 0, 0, 0, 0, 591,
	159, 170, 246, 841, 304, 217, 635, 642, 661, 664,
	665, 666, 667, 671, 676, 0, 682, 688, 690, 691,
	699, 704, 705, 706, 707, 714, 716, 717, 718, 719,
	720, 723, 724, 726, 733, 734, 740, 745, 746, 752,
	753, 0, 776, 779, 596, 790, 792, 796, 797, 804,
	809, 810, 835, 839, 844, 363, 201, 731, 751, 782,
	171, 179, 187, 199, 209, 216, 226, 229, 233, 234,
	236, 240, 253, 255, 256, 257, 258, 276, 277, 280,
	281, 284, 285, 288, 289, 290, 293, 294, 300, 148,
	306, 312, 313, 314, 315, 316, 324, 325, 327, 328,
	335, 354, 355, 368, 369, 814, 711, 156, 0, 0,
	162, 0, 0, 0, 0, 0, 698, 161, 813, 837,
	758, 772, 825, 36, 344, 587, 829, 672, 695, 838,
	701, 703, 766, 648, 743, 283, 692, 649, 0, 0,
	640, 496, 641, 673, 205, 493, 799, 744, 827, 729,
	759, 769, 204, 194, 736, 735, 816, 684, 683, 764,
	812, 826, 0, 0, 595, 248, 0, 0, 366, 333,
	267, 0, 0, 727, 0, 580, 581, 712, 768, 660,
	755, 831, 693, 760, 832, 77, 0, 0, 0, 494,
	519, 518, 521, 522, 523, 524, 0, 0, 137, 520,
	525, 526, 527, 0, 722, 765, 843, 639, 491, 510,
	644, 594, 0, 817, 680, 681, 208, 0, 0, 0,
	0, 0, 0, 0, 725, 742, 784, 709, 0, 0,
	361, 771, 780, 794, 702, 299, 222, 0, 0, 0,
	0, 507, 508, 0, 0, 0, 0, 610, 0, 509,
	0, 654, 505, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 511, 0, 0, 0, 659,
	637, 678, 786, 638, 636, 268, 651, 583, 815, 710,
	237, 154, 821, 708, 608, 774, 655, 803, 696, 245,
	653, 155, 650, 656, 694, 279, 783, 789, 592, 158,
	247, 800, 674, 687, 195, 0, 309, 761, 360, 499,
	747, 308, 249, 353, 775, 823, 359, 697, 340, 367,
	371, 215, 730, 186, 330, 206, 203, 679, 793, 643,
	223, 298, 198, 241, 713, 767, 675, 191, 778, 754,
	805, 329, 350, 160, 264, 351, 370, 177, 345, 265,
	272, 188, 190, 189, 172, 323, 349, 182, 193, 801,
	788, 807, 670, 657, 662, 658, 686, 824, 232, 224,
	808, 806, 364, 144, 318, 317, 700, 231, 791, 145,
	136, 305, 146, 238, 163, 811, 373, 176, 243, 346,
	498, 218, 278, 197, 763, 287, 685, 157, 301, 260,
	262, 259, 263, 221, 140, 147, 787, 303, 320, 348,
	178, 336, 138, 139, 141, 149, 311, 150, 151, 830,
	254, 210, 214, 225, 235, 762, 307, 337, 365, 756,
	173, 166, 339, 358, 183, 319, 322, 372, 785, 168,
	819, 802, 749, 715, 721, 645, 0, 167, 781, 677,
	689, 669, 757, 668, 220, 773, 356, 357, 196, 374,
	586, 834, 169, 652, 833, 275, 282, 274, 836, 352,
	820, 750, 739, 737, 646, 818, 748, 738, 244, 213,
	227, 296, 251, 297, 228, 270, 269, 271, 252, 741,
	0, 164, 0, 334, 828, 845, 338, 180, 663, 795,
	347, 143, 302, 181, 219, 211, 295, 273, 174, 230,
	332, 242, 250, 777, 842, 286, 310, 185, 362, 331,
	207, 597, 609, 603, 605, 604, 601, 602, 600, 599,
	598, 611, 584, 585, 588, 589, 590, 732, 822, 647,
	593, 798, 606, 607, 770, 840, 582, 192, 531, 623,
	624, 625, 532, 626, 627, 533, 534, 628, 629, 630,
	631, 535, 632, 633, 634, 612, 613, 614, 615, 616,
	617, 618, 619, 622, 620, 621, 728, 292, 165, 175,
	184, 202, 200, 212, 239, 261, 266, 291, 321, 326,
	341, 342, 343, 0, 0, 0, 0, 0, 0, 0,
	0, 591, 159, 170, 246, 1220, 304, 217, 635, 642,
	661, 664, 665, 666, 667, 671, 676, 0, 682, 688,
	690, 691, 699, 704, 705, 706, 707, 714, 716, 717,
	718, 719, 720, 723, 724, 726, 733, 734, 740, 745,
	746, 752, 753, 0, 776, 779, 596, 790, 792, 796,
	797, 804, 809, 810, 835, 839, 844, 363, 201, 731,
	751, 782, 171, 179, 187, 199, 209, 216, 226, 229,
	233, 234, 236, 240, 253, 255, 256, 257, 258, 276,
	277, 280, 281, 284, 285, 288, 289, 290, 293, 294,
	300, 148, 306, 312, 313, 314, 315, 316, 324, 325,
	327, 328, 335, 354, 355, 368, 369, 814, 711, 156,
	0, 0, 162, 0, 0, 0, 0, 0, 698, 161,
	813, 837, 758, 772, 825, 0, 344, 587, 829, 672,
	695, 838, 701, 703, 766, 648, 743, 283, 692, 649,
	0, 0, 640, 496, 641, 673, 205, 493, 799, 744,
	827, 729, 759, 769, 204, 194, 736, 735, 816, 684,
	683, 764, 812, 826, 0, 0, 595, 248, 0, 0,
	366, 333, 267, 0, 0, 727, 0, 580, 581, 712,
	768, 660, 755, 831, 693, 760, 832, 77, 0, 1739,
	0, 494, 519, 518, 521, 522, 523, 524, 0, 0,
	137, 520, 525, 526, 527, 0, 722, 765, 843, 639,
	491, 510, 644, 594, 0, 817, 680, 681, 208, 0,
	0, 0, 0, 0, 0, 0, 725, 742, 784, 709,
	0, 0, 361, 771, 780, 794, 702, 299, 222, 0,
	0, 0, 0, 507, 508, 0, 0, 0, 0, 610,
	0, 509, 0, 654, 505, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 511, 0, 0,
	0, 659, 637, 678, 786, 638, 636, 268, 651, 583,
	815, 710, 237, 154, 821, 708, 608, 774, 655, 803,
	696, 245, 653, 155, 650, 656, 694, 279, 783, 789,
	592, 158, 247, 800, 674, 687, 195, 0, 309, 761,
	360, 499, 747, 308, 249, 353, 775, 823, 359, 697,
	340, 367, 371, 215, 730, 186, 330, 206, 203, 679,
	793, 643, 223, 298, 198, 241, 713, 767, 675, 191,
	778, 754, 805, 329, 350, 160, 264, 351, 370, 177,
	345, 265, 272, 188, 190, 189, 172, 323, 349, 182,
	193, 801, 788, 807, 670, 657, 662, 658, 686, 824,
	232, 224, 808, 806, 364, 144, 318, 317, 700, 231,
	791, 145, 136, 305, 146, 238, 163, 811, 373, 176,
	243, 346, 498, 218, 278, 197, 763, 287, 685, 157,
	301, 260, 262, 259, 263, 221, 140, 147, 787, 303,
	320, 348, 178, 336, 138, 139, 141, 149, 311, 150,
	151, 830, 254, 210, 214, 225, 235, 762, 307, 337,
	365, 756, 173, 166, 339, 358, 183, 319, 322, 372,
	785, 168, 819, 802, 749, 715, 721, 645, 0, 167,
	781, 677, 689, 669, 757, 668, 220, 773, 356, 357,
	196, 374, 586, 834, 169, 652, 833, 275, 282, 274,
	836, 352, 820, 750, 739, 737, 646, 818, 748, 738,
	244, 213, 227, 296, 251, 297, 228, 270, 269, 271,
	252, 741, 0, 164, 0, 334, 828, 845, 338, 180,
	663, 795, 347, 143, 302, 181, 219, 211, 295, 273,
	174, 230, 332, 242, 250, 777, 842, 286, 310, 185,
	362, 331, 207, 597, 609, 603, 605, 604, 601, 602,
	600, 599, 598, 611, 584, 585, 588, 589, 590, 732,
	822, 647, 593, 798, 606, 607, 770, 840, 582, 192,
	531, 623, 624, 625, 532, 626, 627, 533, 534, 628,
	629, 630, 631, 535, 632, 633, 634, 612, 613, 614,
	615, 616, 617, 618, 619, 622, 620, 621, 728, 292,
	165, 175, 184, 202, 200, 212, 239, 261, 266, 291,
	321, 326, 341, 342, 343, 0, 0, 0, 0, 0,
	0, 0, 0, 591, 159, 170, 246, 841, 304, 217,
	635, 642, 661, 664, 665, 666, 667, 671, 676, 0,
	682, 688, 690, 691, 699, 704, 705, 706, 707, 714,
	716, 717, 718, 719, 720, 723, 724, 726, 733, 734,
	740, 745, 746, 752, 753, 0, 776, 779, 596, 790,
	792, 796, 797, 804, 809, 810, 835, 839, 844, 363,
	201, 731, 751, 782, 171, 179, 187, 199, 209, 216,
	226, 229, 233, 234, 236, 240, 253, 255, 256, 257,
	258, 276, 277, 280, 281, 284, 285, 288, 289, 290,
	293, 294, 300, 148, 306, 312, 313, 314, 315, 316,
	324, 325, 327, 328, 335, 354, 355, 368, 369, 814,
	711, 156, 0, 0, 162, 0, 0, 0, 0, 0,
	698, 161, 813, 837, 758, 772, 825, 0, 344, 587,
	829, 672, 695, 838, 701, 703, 766, 648, 743, 283,
	692, 649, 0, 0, 640, 885, 641, 673, 205, 883,
	799, 744, 827, 729, 759, 769, 204, 194, 736, 735,
	816, 684, 683, 764, 812, 826, 0, 0, 595, 248,
	0, 0, 366, 333, 267, 0, 0, 727, 0, 580,
	581, 712, 768, 660, 755, 831, 693, 760, 832, 77,
	0, 0, 0, 494, 519, 518, 521, 522, 523, 524,
	0, 0, 137, 520, 525, 526, 527, 0, 722, 765,
	843, 639, 902, 510, 644, 594, 0, 817, 680, 681,
	208, 0, 0, 0, 0, 0, 0, 0, 725, 742,
	784, 709, 0, 0, 361, 771, 780, 794, 702, 299,
	222, 0, 0, 0, 0, 507, 508, 0, 0, 0,
	0, 610, 0, 509, 0, 654, 505, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 511,
	0, 0, 0, 659, 637, 678, 786, 638, 636, 268,
	651, 583, 815, 710, 237, 154, 821, 708, 608, 774,
	655, 803, 696, 245, 653, 155, 650, 656, 694, 279,
	783, 789, 592, 158, 247, 800, 674, 687, 195, 0,
	309, 761, 360, 499, 747, 308, 249, 353, 775, 823,
	359, 697, 340, 367, 371, 215, 730, 186, 330, 206,
	203, 679, 793, 643, 223, 298, 198, 241, 713, 767,
	675, 191, 778, 754, 805, 329, 350, 160, 264, 351,
	370, 177, 345, 265, 272, 188, 190, 189, 172, 323,
	349, 182, 193, 801, 788, 807, 670, 657, 662, 658,
	686, 824, 232, 224, 808, 806, 364, 144, 318, 317,
	700, 231, 791, 145, 136, 305, 146, 238, 163, 811,
	373, 176, 243, 346, 498, 218, 278, 197, 763, 287,
	685, 157, 301, 260, 262, 259, 263, 221, 140, 147,
	787, 303, 320, 348, 178, 336, 138, 139, 141, 149,
	311, 150, 151, 830, 254, 210, 214, 225, 235, 762,
	307, 337, 365, 756, 173, 166, 339, 358, 183, 319,
	322, 372, 785, 168, 819, 802, 749, 715, 721, 645,
	0, 167, 781, 677, 689, 669, 757, 668, 220, 773,
	356, 357, 196, 374, 586, 834, 169, 652, 833, 275,
	282, 274, 836, 352, 820, 750, 739, 737, 646, 818,
	748, 738, 244, 213, 227, 296, 251, 297, 228, 270,
	269, 271, 252, 741, 0, 164, 0, 334, 828, 845,
	338, 180, 663, 795, 347, 143, 302, 181, 219, 211,
	295, 273, 174, 230, 332, 242, 250, 777, 842, 286,
	310, 185, 362, 331, 207, 597, 609, 603, 605, 604,
	601, 602, 600, 599, 598, 611, 584, 585, 588, 589,
	590, 732, 822, 647, 593, 798, 606, 607, 770, 840,
	582, 192, 531, 623, 624, 625, 532, 626, 627, 533,
	534, 628, 629, 630, 631, 535, 632, 633, 634, 612,
	613, 614, 615, 616, 617, 618, 619, 622, 620, 621,
	728, 292, 165, 175, 184, 202, 200, 212, 239, 261,
	266, 291, 321, 326, 341, 342, 343, 0, 0, 0,
	0, 0, 0, 0, 0, 591, 159, 170, 246, 841,
	304, 217, 635, 642, 661, 664, 665, 666, 667, 671,
	676, 0, 682, 688, 690, 691, 699, 704, 705, 706,
	707, 714, 716, 717, 718, 719, 720, 723, 724, 726,
	733, 734, 740, 745, 746, 752, 753, 0, 776, 779,
	596, 790, 792, 796, 797, 804, 809, 810, 835, 839,
	844, 363, 201, 731, 751, 782, 171, 179, 187, 199,
	209, 216, 226, 229, 233, 234, 236, 240, 253, 255,
	256, 257, 258, 276, 277, 280, 281, 284, 285, 288,
	289, 290, 293, 294, 300, 148, 306, 312, 313, 314,
	315, 316, 324, 325, 327, 328, 335, 354, 355, 368,
	369, 814, 711, 156, 0, 0, 162, 0, 0, 0,
	0, 0, 698, 161, 813, 837, 758, 772, 825, 0,
	344, 587, 829, 672, 695, 838, 701, 703, 766, 648,
	743, 283, 692, 649, 0, 0, 640, 496, 641, 673,
	205, 493, 799, 744, 827, 729, 759, 769, 204, 194,
	736, 735, 816, 684, 683, 764, 812, 826, 0, 0,
	595, 248, 0, 0, 366, 333, 267, 0, 0, 727,
	0, 580, 581, 712, 768, 660, 755, 831, 693, 760,
	832, 77, 0, 0, 0, 494, 519, 518, 521, 522,
	523, 524, 0, 0, 137, 520, 525, 526, 527, 0,
	722, 765, 843, 639, 491, 510, 644, 594, 0, 817,
	680, 681, 208, 0, 0, 0, 0, 0, 0, 0,
	725, 742, 784, 709, 0, 0, 361, 771, 780, 794,
	702, 299, 222, 0, 0, 0, 0, 507, 508, 0,
	0, 0, 0, 610, 0, 509, 0, 654, 505, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 511, 0, 0, 0, 659, 637, 678, 786, 638,
	636, 268, 651, 583, 815, 710, 237, 154, 821, 708,
	608, 774, 655, 803, 696, 245, 653, 155, 650, 656,
	694, 279, 783, 789, 592, 158, 247, 800, 674, 687,
	195, 0, 309, 761, 360, 499, 747, 308, 249, 353,
	775, 823, 359, 697, 340, 367, 371, 215, 730, 186,
	330, 206, 203, 679, 793, 643, 223, 298, 198, 241,
	713, 767, 675, 191, 778, 754, 805, 329, 350, 160,
	264, 351, 370, 177, 345, 265, 272, 188, 190, 189,
	172, 323, 349, 182, 193, 801, 788, 807, 670, 657,
	662, 658, 686, 824, 232, 224, 808, 806, 364, 144,
	318, 317, 700, 231, 791, 145, 136, 305, 146, 238,
	163, 811, 373, 176, 243, 346, 498, 218, 278, 197,
	763, 287, 685, 157, 301, 260, 262, 259, 263, 221,
	140, 147, 787, 303, 320, 348, 178, 336, 138, 139,
	141, 149, 311, 150, 151, 830, 254, 210, 214, 225,
	235, 762, 307, 337, 365, 756, 173, 166, 339, 358,
	183, 319, 322, 372, 785, 168, 819, 802, 749, 715,
	721, 645, 0, 167, 781, 677, 689, 669, 757, 668,
	220, 773, 356, 357, 196, 374, 586, 834, 169, 652,
	833, 275, 282, 274, 836, 352, 820, 750, 739, 737,
	646, 818, 748, 738, 244, 213, 227, 296, 251, 297,
	228, 270, 269, 271, 252, 741, 0, 164, 0, 334,
	828, 845, 338, 180, 663, 795, 347, 143, 302, 181,
	219, 211, 295, 273, 174, 230, 332, 242, 250, 777,
	842, 286, 310, 185, 362, 331, 207, 597, 609, 603,
	605, 604, 601, 602, 600, 599, 598, 611, 584, 585,
	588, 589, 590, 732, 822, 647, 593, 798, 606, 607,
	770, 840, 582, 192, 531, 623, 624, 625, 532, 626,
	627, 533, 534, 628, 629, 630, 631, 535, 632, 633,
	634, 612, 613, 614, 615, 616, 617, 618, 619, 622,
	620, 621, 728, 292, 165, 175, 184, 202, 200, 212,
	239, 261, 266, 291, 321, 326, 341, 342, 343, 0,
	0, 0, 0, 0, 0, 0, 0, 591, 159, 170,
	246, 841, 304, 217, 635, 642, 661, 664, 665, 666,
	667, 671, 676, 0, 682, 688, 690, 691, 699, 704,
	705, 706, 707, 714, 716, 717, 718, 719, 720, 723,
	724, 726, 733, 734, 740, 745, 746, 752, 753, 0,
	776, 779, 596, 790, 792, 796, 797, 804, 809, 810,
	835, 839, 844, 363, 201, 731, 751, 782, 171, 179,
	187, 199, 209, 216, 226, 229, 233, 234, 236, 240,
	253, 255, 256, 257, 258, 276, 277, 280, 281, 284,
	285, 288, 289, 290, 293, 294, 300, 148, 306, 312,
	313, 314, 315, 316, 324, 325, 327, 328, 335, 354,
	355, 368, 369, 814, 711, 156, 0, 0, 162, 0,
	0, 0, 0, 0, 698, 161, 813, 837, 758, 772,
	825, 0, 344, 587, 829, 672, 695, 838, 701, 703,
	766, 648, 743, 283, 692, 649, 0, 0, 640, 885,
	641, 673, 205, 883, 799, 744, 827, 729, 759, 769,
	204, 194, 736, 735, 816, 684, 683, 764, 812, 826,
	0, 0, 595, 248, 0, 0, 366, 333, 267, 0,
	0, 727, 0, 580, 581, 712, 768, 660, 755, 831,
	693, 760, 832, 77, 0, 0, 0, 494, 519, 518,
	521, 522, 523, 524, 0, 0, 137, 520, 525, 526,
	527, 0, 722, 765, 843, 639, 902, 510, 644, 594,
	0, 817, 680, 681, 208, 0, 0, 0, 0, 0,
	0, 0, 725, 742, 784, 709, 0, 0, 361, 771,
	780, 794, 702, 299, 222, 0, 0, 0, 0, 507,
	508, 0, 0, 0, 0, 610, 0, 509, 0, 654,
	505, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 511, 0, 0, 0, 659, 637, 678,
	786, 638, 636, 268, 651, 583, 815, 710, 237, 154,
	821, 708, 608, 774, 655, 803, 696, 245, 653, 155,
	650, 656, 694, 279, 783, 789, 592, 158, 247, 800,
	674, 687, 195, 0, 309, 761, 360, 499, 3506, 308,
	249, 353, 775, 823, 359, 697, 340, 367, 371, 215,
	730, 186, 330, 206, 203, 679, 793, 643, 223, 298,
	198, 241, 713, 767, 675, 191, 778, 754, 805, 329,
	350, 160, 264, 351, 370, 177, 345, 265, 272, 188,
	190, 189, 172, 323, 349, 182, 193, 801, 788, 807,
	670, 657, 662, 658, 686, 824, 232, 224, 808, 806,
	364, 144, 318, 317, 700, 231, 791, 145, 136, 305,
	146, 238, 163, 811, 373, 176, 243, 346, 498, 218,
	278, 197, 763, 287, 685, 157, 301, 260, 262, 259,
	263, 221, 140, 147, 787, 303, 320, 348, 178, 336,
	138, 139, 141, 149, 311, 150, 151, 830, 254, 210,
	214, 225, 235, 762, 307, 337, 365, 756, 173, 166,
	339, 358, 183, 319, 322, 372, 785, 168, 819, 802,
	749, 715, 721, 645, 0, 167, 781, 677, 689, 669,
	757, 668, 220, 773, 356, 357, 196, 374, 586, 834,
	169, 652, 833, 275, 282, 274, 836, 352, 820, 750,
	739, 737, 646, 818, 748, 738, 244, 213, 227, 296,
	251, 297, 228, 270, 269, 271, 252, 741, 0, 164,
	0, 334, 828, 845, 338, 180, 663, 795, 347, 143,
	302, 181, 219, 211, 295, 273, 174, 230, 332, 242,
	250, 777, 842, 286, 310, 185, 362, 331, 207, 597,
	609, 603, 605, 604, 601, 602, 600, 599, 598, 611,
	584, 585, 588, 589, 590, 732, 822, 647, 593, 798,
	606, 607, 770, 840, 582, 192, 531, 623, 624, 625,
	532, 626, 627, 533, 534, 628, 629, 630, 631, 535,
	632, 633, 634, 612, 613, 614, 615, 616, 617, 618,
	619, 622, 620, 621, 728, 292, 165, 175, 184, 202,
	200, 212, 239, 261, 266, 291, 321, 326, 341, 342,
	343, 0, 0, 0, 0, 0, 0, 0, 0, 591,
	159, 170, 246, 841, 304, 217, 635, 642, 661, 664,
	665, 666, 667, 671, 676, 0, 682, 688, 690, 691,
	699, 704, 705, 706, 707, 714, 716, 717, 718, 719,
	720, 723, 724, 726, 733, 734, 740, 745, 746, 752,
	753, 0, 776, 779, 596, 790, 792, 796, 797, 804,
	809, 810, 835, 839, 844, 363, 201, 731, 751, 782,
	171, 179, 187, 199, 209, 216, 226, 229, 233, 234,
	236, 240, 253, 255, 256, 257, 258, 276, 277, 280,
	281, 284, 285, 288, 289, 290, 293, 294, 300, 148,
	306, 312, 313, 314, 315, 316, 324, 325, 327, 328,
	335, 354, 355, 368, 369, 814, 711, 156, 0, 0,
	162, 0, 0, 0, 0, 0, 698, 161, 813, 837,
	758, 772, 825, 0, 344, 587, 829, 672, 695, 838,
	701, 703, 766, 648, 743, 283, 692, 649, 0, 0,
	640, 885, 641, 673, 205, 883, 799, 744, 827, 729,
	759, 769, 204, 194, 736, 735, 816, 684, 683, 764,
	812, 826, 0, 0, 595, 248, 0, 0, 366, 333,
	267, 0, 0, 727, 0, 580, 581, 712, 768, 660,
	755, 831, 693, 760, 832, 77, 0, 0, 0, 494,
	519, 518, 521, 522, 523, 524, 0, 0, 137, 520,
	525, 526, 527, 0, 722, 765, 843, 639, 902, 510,
	644, 594, 0, 817, 680, 681, 208, 0, 0, 0,
	0, 0, 0, 0, 725, 742, 784, 709, 0, 0,
	361, 771, 780, 794, 702, 299, 222, 0, 0, 0,
	0, 507, 508, 0, 0, 0, 0, 610, 0, 509,
	0, 654, 505, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 511, 0, 0, 0, 659,
	637, 678, 786, 638, 636, 268, 651, 583, 815, 710,
	237, 154, 821, 708, 608, 774, 655, 803, 696, 245,
	653, 155, 650, 656, 694, 279, 783, 789, 592, 158,
	247, 800, 674, 687, 195, 0, 309, 761, 360, 499,
	747, 308, 249, 353, 775, 823, 359, 697, 340, 367,
	371, 215, 730, 186, 330, 206, 203, 679, 793, 643,
	223, 298, 198, 241, 713, 767, 675, 191, 778, 754,
	805, 329, 350, 160, 264, 351, 370, 177, 345, 265,
	272, 188, 190, 189, 172, 323, 349, 182, 193, 801,
	788, 807, 670, 657, 662, 658, 686, 824, 232, 224,
	808, 806, 364, 144, 318, 317, 700, 231, 791, 145,
	136, 305, 146, 238, 163, 811, 373, 176, 243, 346,
	498, 218, 278, 197, 763, 287, 685, 157, 301, 260,
	262, 259, 263, 221, 140, 147, 787, 303, 320, 348,
	178, 336, 138, 139, 141, 149, 311, 150, 151, 830,
	254, 210, 214, 225, 235, 762, 307, 337, 365, 756,
	173, 166, 339, 358, 183, 319, 322, 372, 785, 168,
	819, 802, 749, 715, 721, 645, 0, 167, 781, 677,
	689, 669, 757, 668, 220, 773, 356, 357, 196, 374,
	586, 834, 169, 652, 833, 275, 282, 274, 836, 352,
	820, 750, 739, 737, 646, 818, 748, 738, 244, 213,
	227, 296, 251, 297, 228, 270, 269, 271, 252, 741,
	0, 164, 0, 334, 828, 845, 338, 180, 663, 795,
	347, 143, 302, 181, 219, 211, 295, 273, 174, 230,
	332, 242, 250, 777, 842, 286, 310, 185, 362, 331,
	207, 597, 609, 603, 605, 604, 601, 602, 600, 599,
	598, 611, 584, 585, 588, 589, 590, 1907, 1908, 1909,
	593, 798, 606, 607, 770, 840, 582, 192, 531, 623,
	624, 625, 532, 626, 627, 533, 534, 628, 629, 630,
	631, 535, 632, 633, 634, 612, 613, 614, 615, 616,
	617, 618, 619, 622, 620, 621, 728, 292, 165, 175,
	184, 202, 200, 212, 239, 261, 266, 291, 321, 326,
	341, 342, 343, 0, 0, 0, 0, 0, 0, 0,
	0, 591, 159, 170, 246, 841, 304, 217, 635, 642,
	661, 664, 665, 666, 667, 671, 676, 0, 682, 688,
	690, 691, 699, 704, 705, 706, 707, 714, 716, 717,
	718, 719, 720, 723, 724, 726, 733, 734, 740, 745,
	746, 752, 753, 0, 776, 779, 596, 790, 792, 796,
	797, 804, 809, 810, 835, 839, 844, 363, 201, 731,
	751, 782, 171, 179, 187, 199, 209, 216, 226, 229,
	233, 234, 236, 240, 253, 255, 256, 257, 258, 276,
	277, 280, 281, 284, 285, 288, 289, 290, 293, 294,
	300, 148, 306, 312, 313, 314, 315, 316, 324, 325,
	327, 328, 335, 354, 355, 368, 369, 814, 711, 156,
	0, 0, 162, 0, 0, 0, 0, 0, 698, 161,
	813, 837, 758, 772, 1670, 2879, 344, 1525, 1674, 1475,
	1504, 1691, 1510, 1513, 1594, 1441, 1563, 283, 1501, 1442,
	1425, 1480, 1429, 1492, 1430, 1477, 205, 1473, 1635, 1566,
	1672, 1545, 1587, 1597, 204, 194, 1555, 1554, 1660, 1490,
	1489, 1592, 1649, 1671, 1544, 0, 1681, 248, 1646, 945,
	366, 333, 267, 948, 947, 1540, 1655, 1561, 1624, 1523,
	1596, 1457, 1579, 1676, 1502, 1588, 1677, 77, 0, 1133,
	0, 941, 0, 0, 0, 0, 0, 0, 0, 0,
	137, 0, 1584, 1668, 1495, 946, 1535, 1593, 1696, 1428,
	1580, 0, 1433, 1444, 1690, 1661, 1486, 1487, 208, 0,
	0, 0, 0, 0, 0, 0, 1538, 1562, 1614, 1520,
	0, 0, 361, 1599, 1609, 1627, 1512, 299, 222, 0,
	0, 0, 0, 0, 0, 0, 0, 1482, 0, 1577,
	0, 0, 0, 1449, 1435, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1534, 0, 0,
	0, 1456, 1426, 1484, 1616, 1427, 1424, 268, 1445, 1629,
	1659, 1521, 237, 154, 1665, 1519, 1518, 1603, 1450, 1639,
	1505, 245, 1448, 155, 1443, 1451, 1503, 279, 1613, 1621,
	142, 158, 247, 1636, 1478, 1494, 195, 1796, 309, 1589,
	360, 944, 1570, 308, 249, 353, 1604, 1667, 359, 1506,
	340, 367, 371, 215, 1546, 186, 330, 206, 203, 1485,
	1626, 1432, 223, 298, 198, 241, 1524, 1595, 1479, 191,
	1607, 1578, 1641, 329, 350, 160, 264, 351, 370, 177,
	345, 265, 272, 188, 190, 189, 172, 323, 349, 182,
	193, 1637, 1620, 1643, 1472, 1452, 1463, 1453, 1493, 1669,
	232, 224, 1644, 1642, 364, 144, 318, 317, 1509, 231,
	1623, 145, 136, 305, 146, 238, 163, 1648, 373, 176,
	243, 346, 943, 218, 278, 197, 1591, 287, 1491, 157,
	301, 260, 262, 259, 263, 221, 140, 147, 1619, 303,
	320, 348, 178, 336, 138, 139, 141, 149, 311, 150,
	151, 1675, 254, 210, 214, 225, 235, 1590, 307, 337,
	365, 1581, 173, 166, 339, 358, 183, 319, 322, 372,
	1615, 168, 1663, 1638, 1572, 1527, 1533, 1434, 0, 167,
	1611, 1483, 1498, 1471, 1585, 1470, 220, 1602, 356, 357,
	196, 374, 1446, 1683, 169, 1447, 1682, 275, 282, 274,
	1686, 352, 1664, 1573, 1558, 1556, 1439, 1662, 1571, 1557,
	244, 213, 227, 296, 251, 297, 228, 270, 269, 271,
	252, 1560, 0, 164, 0, 334, 1673, 1698, 338, 180,
	1465, 1630, 347, 143, 302, 181, 219, 211, 295, 273,
	174, 230, 332, 242, 250, 1606, 1695, 286, 310, 185,
	362, 331, 207, 1461, 1464, 1459, 1462, 1460, 1564, 1565,
	1678, 1679, 1680, 1618, 1454, 0, 1656, 1657, 0, 1551,
	1666, 1440, 0, 1634, 152, 153, 1598, 1693, 1511, 192,
	131, 1436, 1437, 1438, 132, 1541, 1542, 133, 134, 1652,
	1651, 1650, 1653, 135, 1687, 1685, 1688, 1455, 1476, 1497,
	1547, 1548, 1550, 1582, 1583, 1628, 1601, 1610, 1543, 292,
	165, 175, 184, 202, 200, 212, 239, 261, 266, 291,
	321, 326, 341, 342, 343, 0, 0, 0, 0, 0,
	0, 0, 0, 1569, 159, 170, 246, 2880, 304, 217,
	1423, 1431, 1458, 1466, 1467, 1468, 1469, 1474, 1481, 0,
	1488, 1496, 1499, 1500, 1508, 1514, 1515, 1516, 1517, 1526,
	1528, 1529, 1530, 1531, 1532, 1536, 1537, 1539, 1552, 1553,
	1559, 1567, 1568, 1575, 1576, 0, 1605, 1608, 1617, 1622,
	1625, 1631, 1633, 1640, 1645, 1647, 1684, 1692, 1697, 363,
	201, 1549, 1574, 1612, 171, 179, 187, 199, 209, 216,
	226, 229, 233, 234, 236, 240, 253, 255, 256, 257,
	258, 276, 277, 280, 281, 284, 285, 288, 289, 290,
	293, 294, 300, 148, 306, 312, 313, 314, 315, 316,
	324, 325, 327, 328, 335, 354, 355, 368, 369, 1658,
	1522, 156, 0, 0, 162, 0, 0, 0, 0, 0,
	1507, 161, 1654, 1689, 1586, 1600, 1670, 1632, 344, 1525,
	1674, 1475, 1504, 1691, 1510, 1513, 1594, 1441, 1563, 283,
	1501, 1442, 1425, 1480, 1429, 1492, 1430, 1477, 205, 1473,
	1635, 1566, 1672, 1545, 1587, 1597, 204, 194, 1555, 1554,
	1660, 1490, 1489, 1592, 1649, 1671, 1544, 0, 1681, 248,
	1646, 945, 366, 333, 267, 948, 947, 1540, 1655, 1561,
	1624, 1523, 1596, 1457, 1579, 1676, 1502, 1588, 1677, 0,
	0, 0, 0, 941, 0, 0, 0, 0, 0, 0,
	0, 0, 137, 0, 1584, 1668, 1495, 946, 1535, 1593,
	1696, 1428, 1580, 0, 1433, 1444, 1690, 1661, 1486, 1487,
	208, 0, 0, 0, 0, 0, 0, 0, 1538, 1562,
	1614, 1520, 0, 0, 361, 1599, 1609, 1627, 1512, 299,
	222, 0, 0, 0, 0, 0, 0, 0, 0, 1482,
	0, 1577, 0, 0, 0, 1449, 1435, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1534,
	0, 0, 0, 1456, 1426, 1484, 1616, 1427, 1424, 268,
	1445, 1629, 1659, 1521, 237, 154, 1665, 1519, 1518, 1603,
	1450, 1639, 1505, 245, 1448, 155, 1443, 1451, 1503, 279,
	1613, 1621, 142, 158, 247, 1636, 1478, 1494, 195, 1796,
	309, 1589, 360, 944, 1570, 308, 249, 353, 1604, 1667,
	359, 1506, 340, 367, 371, 215, 1546, 186, 330, 206,
	203, 1485, 1626, 1432, 223, 298, 198, 241, 1524, 1595,
	1479, 191, 1607, 1578, 1641, 329, 350, 160, 264, 351,
	370, 177, 345, 265, 272, 188, 190, 189, 172, 323,
	349, 182, 193, 1637, 1620, 1643, 1472, 1452, 1463, 1453,
	1493, 1669, 232, 224, 1644, 1642, 364, 144, 318, 317,
	1509, 231, 1623, 145, 136, 305, 146, 238, 163, 1648,
	373, 176, 243, 346, 943, 218, 278, 197, 1591, 287,
	1491, 157, 301, 260, 262, 259, 263, 221, 140, 147,
	1619, 303, 320, 348, 178, 336, 138, 139, 141, 149,
	311, 150, 151, 1675, 254, 210, 214, 225, 235, 1590,
	307, 337, 365, 1581, 173, 166, 339, 358, 183, 319,
	322, 372, 1615, 168, 1663, 1638, 1572, 1527, 1533, 1434,
	0, 167, 1611, 1483, 1498, 1471, 1585, 1470, 220, 1602,
	356, 357, 196, 374, 1446, 1683, 169, 1447, 1682, 275,
	282, 274, 1686, 352, 1664, 1573, 1558, 1556, 1439, 1662,
	1571, 1557, 244, 213, 227, 296, 251, 297, 228, 270,
	269, 271, 252, 1560, 0, 164, 0, 334, 1673, 1698,
	338, 180, 1465, 1630, 347, 143, 302, 181, 219, 211,
	295, 273, 174, 230, 332, 242, 250, 1606, 1695, 286,
	310, 185, 362, 331, 207, 1461, 1464, 1459, 1462, 1460,
	1564, 1565, 1678, 1679, 1680, 1618, 1454, 0, 1656, 1657,
	0, 1551, 1666, 1440, 0, 1634, 152, 153, 1598, 1693,
	1511, 192, 131, 1436, 1437, 1438, 132, 1541, 1542, 133,
	134, 1652, 1651, 1650, 1653, 135, 1687, 1685, 1688, 1455,
	1476, 1497, 1547, 1548, 1550, 1582, 1583, 1628, 1601, 1610,
	1543, 292, 165, 175, 184, 202, 200, 212, 239, 261,
	266, 291, 321, 326, 341, 342, 343, 0, 0, 0,
	0, 0, 0, 0, 0, 1569, 159, 170, 246, 1694,
	304, 217, 1423, 1431, 1458, 1466, 1467, 1468, 1469, 1474,
	1481, 0, 1488, 1496, 1499, 1500, 1508, 1514, 1515, 1516,
	1517, 1526, 1528, 1529, 1530, 1531, 1532, 1536, 1537, 1539,
	1552, 1553, 1559, 1567, 1568, 1575, 1576, 0, 1605, 1608,
	1617, 1622, 1625, 1631, 1633, 1640, 1645, 1647, 1684, 1692,
	1697, 363, 201, 1549, 1574, 1612, 171, 179, 187, 199,
	209, 216, 226, 229, 233, 234, 236, 240, 253, 255,
	256, 257, 258, 276, 277, 280, 281, 284, 285, 288,
	289, 290, 293, 294, 300, 148, 306, 312, 313, 314,
	315, 316, 324, 325, 327, 328, 335, 354, 355, 368,
	369, 1658, 1522, 156, 0, 0, 162, 0, 0, 0,
	0, 0, 1507, 161, 1654, 1689, 1586, 1600, 1670, 1632,
	344, 1525, 1674, 1475, 1504, 1691, 1510, 1513, 1594, 1441,
	1563, 283, 1501, 1442, 1425, 1480, 1429, 1492, 1430, 1477,
	205, 1473, 1635, 1566, 1672, 1545, 1587, 1597, 204, 194,
	1555, 1554, 1660, 1490, 1489, 1592, 1649, 1671, 1544, 0,
	1681, 248, 1646, 0, 366, 333, 267, 0, 0, 1540,
	1655, 1561, 1624, 1523, 1596, 1457, 1579, 1676, 1502, 1588,
	1677, 0, 0, 0, 0, 494, 0, 0, 0, 0,
	0, 0, 0, 0, 137, 0, 1584, 1668, 1495, 0,
	1535, 1593, 1696, 1428, 1580, 0, 1433, 1444, 1690, 1661,
	1486, 1487, 208, 0, 0, 0, 0, 0, 0, 0,
	1538, 1562, 1614, 1520, 0, 0, 361, 1599, 1609, 1627,
	1512, 299, 222, 0, 0, 0, 0, 0, 0, 2548,
	0, 1482, 0, 1577, 0, 0, 0, 1449, 1435, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1534, 0, 0, 0, 1456, 1426, 1484, 1616, 1427,
	1424, 268, 1445, 1629, 1659, 1521, 237, 154, 1665, 1519,
	1518, 1603, 1450, 1639, 1505, 245, 1448, 155, 1443, 1451,
	1503, 279, 1613, 1621, 142, 158, 247, 1636, 1478, 1494,
	195, 0, 309, 1589, 360, 1837, 1570, 308, 249, 353,
	1604, 1667, 359, 1506, 340, 367, 371, 215, 1546, 186,
	330, 206, 203, 1485, 1626, 1432, 223, 298, 198, 241,
	1524, 1595, 1479, 191, 1607, 1578, 1641, 329, 350, 160,
	264, 351, 370, 177, 345, 265, 272, 188, 190, 189,
	172, 323, 349, 182, 193, 1637, 1620, 1643, 1472, 1452,
	1463, 1453, 1493, 1669, 232, 224, 1644, 1642, 364, 144,
	318, 317, 1509, 231, 1623, 145, 136, 305, 146, 238,
	163, 1648, 373, 176, 243, 346, 1836, 218, 278, 197,
	1591, 287, 1491, 157, 301, 260, 262, 259, 263, 221,
	140, 147, 1619, 303, 320, 348, 178, 336, 138, 139,
	141, 149, 311, 150, 151, 1675, 254, 210, 214, 225,
	235, 1590, 307, 337, 365, 1581, 173, 166, 339, 358,
	183, 319, 322, 372, 1615, 168, 1663, 1638, 1572, 1527,
	1533, 1434, 0, 167, 1611, 1483, 1498, 1471, 1585, 1470,
	220, 1602, 356, 357, 196, 374, 1446, 1683, 169, 1447,
	1682, 275, 282, 274, 1686, 352, 1664, 1573, 1558, 1556,
	1439, 1662, 1571, 1557, 244, 213, 227, 296, 251, 297,
	228, 270, 269, 271, 252, 1560, 0, 164, 0, 334,
	1673, 1698, 338, 180, 1465, 1630, 347, 143, 302, 181,
	219, 211, 295, 273, 174, 230, 332, 242, 250, 1606,
	1695, 286, 310, 185, 362, 331, 207, 1461, 1464, 1459,
	1462, 1460, 1564, 1565, 1678, 1679, 1680, 1618, 1454, 0,
	1656, 1657, 0, 1551, 1666, 1440, 0, 1634, 152, 153,
	1598, 1693, 1511, 192, 131, 1436, 1437, 1438, 132, 1541,
	1542, 133, 134, 1652, 1651, 1650, 1653, 135, 1687, 1685,
	1688, 1455, 1476, 1497, 1547, 1548, 1550, 1582, 1583, 1628,
	1601, 1610, 1543, 292, 165, 175, 184, 202, 200, 212,
	239, 261, 266, 291, 321, 326, 341, 342, 343, 0,
	0, 0, 0, 0, 0, 0, 0, 1569, 159, 170,
	246, 1694, 304, 217, 1423, 1431, 1458, 1466, 1467, 1468,
	1469, 1474, 1481, 0, 1488, 1496, 1499, 1500, 1508, 1514,
	1515, 1516, 1517, 1526, 1528, 1529, 1530, 1531, 1532, 1536,
	1537, 1539, 1552, 1553, 1559, 1567, 1568, 1575, 1576, 0,
	1605, 1608, 1617, 1622, 1625, 1631, 1633, 1640, 1645, 1647,
	1684, 1692, 1697, 363, 201, 1549, 1574, 1612, 171, 179,
	187, 199, 209, 216, 226, 229, 233, 234, 236, 240,
	253, 255, 256, 257, 258, 276, 277, 280, 281, 284,
	285, 288, 289, 290, 293, 294, 300, 148, 306, 312,
	313, 314, 315, 316, 324, 325, 327, 328, 335, 354,
	355, 368, 369, 1658, 1522, 156, 0, 0, 162, 0,
	0, 0, 0, 0, 1507, 161, 1654, 1689, 1586, 1600,
	1670, 1632, 344, 1525, 1674, 1475, 1504, 1691, 1510, 1513,
	1594, 1441, 1563, 283, 1501, 1442, 1425, 1480, 1429, 1492,
	1430, 1477, 205, 1473, 1635, 1566, 1672, 1545, 1587, 1597,
	204, 194, 1555, 1554, 1660, 1490, 1489, 1592, 1649, 1671,
	1544, 0, 1681, 248, 1646, 0, 366, 333, 267, 0,
	0, 1540, 1655, 1561, 1624, 1523, 1596, 1457, 1579, 1676,
	1502, 1588, 1677, 0, 0, 0, 0, 494, 0, 0,
	0, 0, 0, 0, 0, 0, 137, 0, 1584, 1668,
	1495, 0, 1535, 1593, 1696, 1428, 1580, 0, 1433, 1444,
	1690, 1661, 1486, 1487, 208, 0, 0, 0, 0, 0,
	0, 0, 1538, 1562, 1614, 1520, 0, 0, 361, 1599,
	1609, 1627, 1512, 299, 222, 0, 0, 0, 0, 0,
	0, 1831, 0, 1482, 0, 1577, 0, 0, 0, 1449,
	1435, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1534, 0, 0, 0, 1456, 1426, 1484,
	1616, 1427, 1424, 268, 1445, 1629, 1659, 1521, 237, 154,
	1665, 1519, 1518, 1603, 1450, 1639, 1505, 245, 1448, 155,
	1443, 1451, 1503, 279, 1613, 1621, 142, 158, 247, 1636,
	1478, 1494, 195, 0, 309, 1589, 360, 1837, 1570, 308,
	249, 353, 1604, 1667, 359, 1506, 340, 367, 371, 215,
	1546, 186, 330, 206, 203, 1485, 1626, 1432, 223, 298,
	198, 241, 1524, 1595, 1479, 191, 1607, 1578, 1641, 329,
	350, 160, 264, 351, 370, 177, 345, 265, 272, 188,
	190, 189, 172, 323, 349, 182, 193, 1637, 1620, 1643,
	1472, 1452, 1463, 1453, 1493, 1669, 232, 224, 1644, 1642,
	364, 144, 318, 317, 1509, 231, 1623, 145, 136, 305,
	146, 238, 163, 1648, 373, 176, 243, 346, 1836, 218,
	278, 197, 1591, 287, 1491, 157, 301, 260, 262, 259,
	263, 221, 140, 147, 1619, 303, 320, 348, 178, 336,
	138, 139, 141, 149, 311, 150, 151, 1675, 254, 210,
	214, 225, 235, 1590, 307, 337, 365, 1581, 173, 166,
	339, 358, 183, 319, 322, 372, 1615, 168, 1663, 1638,
	1572, 1527, 1533, 1434, 0, 167, 1611, 1483, 1498, 1471,
	1585, 1470, 220, 1602, 356, 357, 196, 374, 1446, 1683,
	169, 1447, 1682, 275, 282, 274, 1686, 352, 1664, 1573,
	1558, 1556, 1439, 1662, 1571, 1557, 244, 213, 227, 296,
	251, 297, 228, 270, 269, 271, 252, 1560, 0, 164,
	0, 334, 1673, 1698, 338, 180, 1465, 1630, 347, 143,
	302, 181, 219, 211, 295, 273, 174, 230, 332, 242,
	250, 1606, 1695, 286, 310, 185, 362, 331, 207, 1461,
	1464, 1459, 1462, 1460, 1564, 1565, 1678, 1679, 1680, 1618,
	1454, 0, 1656, 1657, 0, 1551, 1666, 1440, 0, 1634,
	152, 153, 1598, 1693, 1511, 192, 131, 1436, 1437, 1438,
	132, 1541, 1542, 133, 134, 1652, 1651, 1650, 1653, 135,
	1687, 1685, 1688, 1455, 1476, 1497, 1547, 1548, 1550, 1582,
	1583, 1628, 1601, 1610, 1543, 292, 165, 175, 184, 202,
	200, 212, 239, 261, 266, 291, 321, 326, 341, 342,
	343, 0, 0, 0, 0, 0, 0, 0, 0, 1569,
	159, 170, 246, 1694, 304, 217, 1423, 1431, 1458, 1466,
	1467, 1468, 1469, 1474, 1481, 0, 1488, 1496, 1499, 1500,
	1508, 1514, 1515, 1516, 1517, 1526, 1528, 1529, 1530, 1531,
	1532, 1536, 1537, 1539, 1552, 1553, 1559, 1567, 1568, 1575,
	1576, 0, 1605, 1608, 1617, 1622, 1625, 1631, 1633, 1640,
	1645, 1647, 1684, 1692, 1697, 363, 201, 1549, 1574, 1612,
	171, 179, 187, 199, 209, 216, 226, 229, 233, 234,
	236, 240, 253, 255, 256, 257, 258, 276, 277, 280,
	281, 284, 285, 288, 289, 290, 293, 294, 300, 148,
	306, 312, 313, 314, 315, 316, 324, 325, 327, 328,
	335, 354, 355, 368, 369, 1658, 1522, 156, 0, 0,
	162, 0, 0, 0, 0, 0, 1507, 161, 1654, 1689,
	1586, 1600, 1670, 1632, 344, 1525, 1674, 1475, 1504, 1691,
	1510, 1513, 1594, 1441, 1563, 283, 1501, 1442, 1425, 1480,
	1429, 1492, 1430, 1477, 205, 1473, 1635, 1566, 1672, 1545,
	1587, 1597, 204, 194, 1555, 1554, 1660, 1490, 1489, 1592,
	1649, 1671, 1544, 0, 1681, 248, 1646, 0, 366, 333,
	267, 0, 0, 1540, 1655, 1561, 1624, 1523, 1596, 1457,
	1579, 1676, 1502, 1588, 1677, 0, 0, 0, 0, 494,
	0, 0, 0, 0, 0, 0, 0, 0, 137, 0,
	1584, 1668, 1495, 0, 1535, 1593, 1696, 1428, 1580, 0,
	1433, 1444, 1690, 1661, 1486, 1487, 208, 0, 0, 0,
	0, 0, 0, 0, 1538, 1562, 1614, 1520, 0, 0,
	361, 1599, 1609, 1627, 1512, 299, 222, 0, 0, 0,
	0, 0, 0, 0, 0, 1482, 0, 1577, 0, 0,
	0, 1449, 1435, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1534, 0, 0, 0, 1456,
	1426, 1484, 1616, 1427, 1424, 268, 1445, 1629, 1659, 1521,
	237, 154, 1665, 1519, 1518, 1603, 1450, 1639, 1505, 245,
	1448, 155, 1443, 1451, 1503, 279, 1613, 1621, 142, 158,
	247, 1636, 1478, 1494, 195, 0, 309, 1589, 360, 1837,
	1570, 308, 249, 353, 1604, 1667, 359, 1506, 340, 367,
	371, 215, 1546, 186, 330, 206, 203, 1485, 1626, 1432,
	223, 298, 198, 241, 1524, 1595, 1479, 191, 1607, 1578,
	1641, 329, 350, 160, 264, 351, 370, 177, 345, 265,
	272, 188, 190, 189, 172, 323, 349, 182, 193, 1637,
	1620, 1643, 1472, 1452, 1463, 1453, 1493, 1669, 232, 224,
	1644, 1642, 364, 144, 318, 317, 1509, 231, 1623, 145,
	136, 305, 146, 238, 163, 1648, 373, 176, 243, 346,
	1836, 218, 278, 197, 1591, 287, 1491, 157, 301, 260,
	262, 259, 263, 221, 140, 147, 1619, 303, 320, 348,
	178, 336, 138, 139, 141, 149, 311, 150, 151, 1675,
	254, 210, 214, 225, 235, 1590, 307, 337, 365, 1581,
	173, 166, 339, 358, 183, 319, 322, 372, 1615, 168,
	1663, 1638, 1572, 1527, 1533, 1434, 0, 167, 1611, 1483,
	1498, 1471, 1585, 1470, 220, 1602, 356, 357, 196, 374,
	1446, 1683, 169, 1447, 1682, 275, 282, 274, 1686, 352,
	1664, 1573, 1558, 1556, 1439, 1662, 1571, 1557, 244, 213,
	227, 296, 251, 297, 228, 270, 269, 271, 252, 1560,
	0, 164, 0, 334, 1673, 1698, 338, 180, 1465, 1630,
	347, 143, 302, 181, 219, 211, 295, 273, 174, 230,
	332, 242, 250, 1606, 1695, 286, 310, 185, 362, 331,
	207, 1461, 1464, 1459, 1462, 1460, 1564, 1565, 1678, 1679,
	1680, 1618, 1454, 0, 1656, 1657, 0, 1551, 1666, 1440,
	0, 1634, 152, 153, 1598, 1693, 1511, 192, 131, 1436,
	1437, 1438, 132, 1541, 1542, 133, 134, 1652, 1651, 1650,
	1653, 135, 1687, 1685, 1688, 1455, 1476, 1497, 1547, 1548,
	1550, 1582, 1583, 1628, 1601, 1610, 1543, 292, 165, 175,
	184, 202, 200, 212, 239, 261, 266, 291, 321, 326,
	341, 342, 343, 0, 0, 0, 0, 0, 0, 0,
	0, 1569, 159, 170, 246, 1694, 304, 217, 1423, 1431,
	1458, 1466, 1467, 1468, 1469, 1474, 1481, 0, 1488, 1496,
	1499, 1500, 1508, 1514, 1515, 1516, 1517, 1526, 1528, 1529,
	1530, 1531, 1532, 1536, 1537, 1539, 1552, 1553, 1559, 1567,
	1568, 1575, 1576, 0, 1605, 1608, 1617, 1622, 1625, 1631,
	1633, 1640, 1645, 1647, 1684, 1692, 1697, 363, 201, 1549,
	1574, 1612, 171, 179, 187, 199, 209, 216, 226, 229,
	233, 234, 236, 240, 253, 255, 256, 257, 258, 276,
	277, 280, 281, 284, 285, 288, 289, 290, 293, 294,
	300, 148, 306, 312, 313, 314, 315, 316, 324, 325,
	327, 328, 335, 354, 355, 368, 369, 1658, 1522, 156,
	0, 0, 162, 0, 0, 0, 0, 0, 1507, 161,
	1654, 1689, 1586, 1600, 825, 0, 344, 890, 829, 672,
	695, 838, 701, 703, 766, 648, 743, 283, 692, 649,
	0, 0, 640, 885, 641, 673, 205, 883, 799, 744,
	827, 729, 759, 769, 204, 194, 736, 735, 816, 684,
	683, 764, 812, 826, 0, 0, 923, 248, 0, 945,
	366, 333, 267, 948, 947, 727, 0, 897, 910, 712,
	768, 660, 755, 831, 693, 760, 832, 0, 0, 0,
	0, 494, 0, 0, 0, 0, 0, 0, 0, 0,
	137, 0, 905, 919, 886, 946, 722, 765, 843, 639,
	902, 0, 644, 874, 0, 817, 680, 681, 208, 0,
	0, 0, 0, 0, 0, 0, 725, 742, 784, 709,
	0, 0, 361, 771, 780, 794, 702, 299, 222, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 901,
	0, 0, 0, 654, 870, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 891, 0, 0,
	0, 659, 637, 678, 786, 638, 636, 268, 651, 912,
	815, 710, 237, 154, 821, 708, 889, 774, 655, 803,
	696, 245, 653, 155, 650, 656, 694, 279, 783, 789,
	142, 158, 247, 800, 674, 687, 195, 2617, 309, 761,
	360, 2619, 747, 308, 249, 353, 775, 823, 359, 697,
	340, 367, 371, 215, 730, 186, 330, 206, 203, 679,
	793, 643, 223, 298, 198, 241, 713, 767, 675, 191,
	778, 754, 805, 329, 350, 160, 264, 351, 370, 177,
	345, 265, 272, 188, 190, 189, 172, 323, 349, 182,
	193, 801, 788, 807, 670, 657, 662, 658, 686, 824,
	232, 224, 808, 806, 364, 144, 318, 317, 700, 231,
	791, 145, 136, 305, 146, 238, 163, 811, 373, 176,
	243, 346, 2618, 218, 278, 197, 763, 287, 685, 157,
	301, 260, 262, 259, 263, 221, 140, 147, 787, 303,
	320, 348, 178, 336, 138, 139, 141, 149, 311, 150,
	151, 830, 254, 210, 214, 225, 235, 762, 307, 337,
	365, 756, 173, 166, 339, 358, 183, 319, 322, 372,
	785, 168, 819, 802, 749, 715, 721, 645, 0, 167,
	781, 677, 689, 669, 757, 668, 220, 773, 356, 357,
	196, 374, 875, 834, 169, 652, 833, 275, 282, 274,
	836, 352, 820, 750, 739, 737, 646, 818, 748, 738,
	244, 213, 227, 296, 251, 297, 228, 270, 269, 271,
	252, 741, 0, 164, 0, 334, 828, 845, 338, 180,
	663, 795, 347, 143, 302, 181, 219, 211, 295, 273,
	174, 230, 332, 242, 250, 777, 842, 286, 310, 185,
	362, 331, 207, 880, 882, 878, 881, 879, 898, 899,
	920, 921, 922, 909, 876, 0, 917, 918, 0, 732,
	822, 647, 0, 798, 152, 153, 770, 840, 888, 192,
	131, 871, 872, 873, 132, 892, 893, 133, 134, 915,
	914, 913, 916, 135, 925, 924, 926, 877, 884, 887,
	894, 895, 896, 903, 904, 911, 906, 907, 728, 292,
	165, 175, 184, 202, 200, 212, 239, 261, 266, 291,
	321, 326, 341, 342, 343, 0, 0, 0, 0, 0,
	0, 0, 0, 900, 159, 170, 246, 841, 304, 217,
	635, 642, 661, 664, 665, 666, 667, 671, 676, 0,
	682, 688, 690, 691, 699, 704, 705, 706, 707, 714,
	716, 717, 718, 719, 720, 723, 724, 726, 733, 734,
	740, 745, 746, 752, 753, 0, 776, 779, 908, 790,
	792, 796, 797, 804, 809, 810, 835, 839, 844, 363,
	201, 731, 751, 782, 171, 179, 187, 199, 209, 216,
	226, 229, 233, 234, 236, 240, 253, 255, 256, 257,
	258, 276, 277, 280, 281, 284, 285, 288, 289, 290,
	293, 294, 300, 148, 306, 312, 313, 314, 315, 316,
	324, 325, 327, 328, 335, 354, 355, 368, 369, 814,
	711, 156, 0, 0, 162, 0, 0, 0, 0, 0,
	698, 161, 813, 837, 758, 772, 825, 0, 344, 890,
	829, 672, 695, 838, 701, 703, 766, 648, 743, 283,
	692, 649, 0, 0, 640, 885, 641, 673, 205, 883,
	799, 744, 827, 729, 759, 769, 204, 194, 736, 735,
	816, 684, 683, 764, 812, 826, 0, 0, 923, 248,
	0, 0, 366, 333, 267, 0, 0, 727, 0, 897,
	910, 712, 768, 660, 755, 831, 693, 760, 832, 0,
	0, 0, 0, 494, 0, 0, 0, 0, 0, 0,
	0, 0, 137, 0, 905, 919, 886, 0, 722, 765,
	843, 639, 902, 0, 644, 874, 0, 817, 680, 681,
	208, 0, 0, 0, 0, 0, 0, 0, 725, 742,
	784, 709, 0, 0, 361, 771, 780, 794, 702, 299,
	222, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 901, 0, 0, 0, 654, 870, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 891,
	0, 0, 0, 659, 637, 678, 786, 638, 636, 268,
	651, 912, 815, 710, 237, 154, 821, 708, 889, 774,
	655, 803, 696, 245, 653, 155, 650, 656, 694, 279,
	783, 789, 142, 158, 247, 800, 674, 687, 195, 0,
	309, 761, 360, 869, 747, 308, 249, 353, 775, 823,
	359, 697, 340, 367, 371, 215, 730, 186, 330, 206,
	203, 679, 793, 643, 223, 298, 198, 241, 713, 767,
	675, 191, 778, 754, 805, 329, 350, 160, 264, 351,
	370, 177, 345, 265, 272, 188, 190, 189, 172, 323,
	349, 182, 193, 801, 788, 807, 670, 657, 662, 658,
	686, 824, 232, 224, 808, 806, 364, 144, 318, 317,
	700, 231, 791, 145, 136, 305, 146, 238, 163, 811,
	373, 176, 243, 346, 868, 218, 278, 197, 763, 287,
	685, 157, 301, 260, 262, 259, 263, 221, 140, 147,
	787, 303, 320, 348, 178, 336, 138, 139, 141, 149,
	311, 150, 151, 830, 254, 210, 214, 225, 235, 762,
	307, 337, 365, 756, 173, 166, 339, 358, 183, 319,
	322, 372, 785, 168, 819, 802, 749, 715, 721, 645,
	0, 167, 781, 677, 689, 669, 757, 668, 220, 773,
	356, 357, 196, 374, 875, 834, 169, 652, 833, 275,
	282, 274, 836, 352, 820, 750, 739, 737, 646, 818,
	748, 738, 244, 213, 227, 296, 251, 297, 228, 270,
	269, 271, 252, 741, 0, 164, 0, 334, 828, 845,
	338, 180, 663, 795, 347, 143, 302, 181, 219, 211,
	295, 273, 174, 230, 332, 242, 250, 777, 842, 286,
	310, 185, 362, 331, 207, 880, 882, 878, 881, 879,
	898, 899, 920, 921, 922, 909, 876, 0, 917, 918,
	0, 732, 822, 647, 0, 798, 152, 153, 770, 840,
	888, 192, 131, 871, 872, 873, 132, 892, 893, 133,
	134, 915, 914, 913, 916, 135, 925, 924, 926, 877,
	884, 887, 894, 895, 896, 903, 904, 911, 906, 907,
	728, 292, 165, 175, 184, 202, 200, 212, 239, 261,
	266, 291, 321, 326, 341, 342, 343, 0, 0, 0,
	0, 0, 0, 0, 0, 900, 159, 170, 246, 841,
	304, 217, 635, 642, 661, 664, 665, 666, 667, 671,
	676, 0, 682, 688, 690, 691, 699, 704, 705, 706,
	707, 714, 716, 717, 718, 719, 720, 723, 724, 726,
	733, 734, 740, 745, 746, 752, 753, 0, 776, 779,
	908, 790, 792, 796, 797, 804, 809, 810, 835, 839,
	844, 363, 201, 731, 751, 782, 171, 179, 187, 199,
	209, 216, 226, 229, 233, 234, 236, 240, 253, 255,
	256, 257, 258, 276, 277, 280, 281, 284, 285, 288,
	289, 290, 293, 294, 300, 148, 306, 312, 313, 314,
	315, 316, 324, 325, 327, 328, 335, 354, 355, 368,
	369, 814, 711, 156, 0, 0, 162, 0, 0, 0,
	0, 0, 698, 161, 813, 837, 758, 772, 825, 0,
	344, 890, 829, 672, 695, 838, 701, 703, 766, 648,
	743, 283, 692, 649, 0, 0, 640, 885, 641, 673,
	205, 883, 799, 744, 827, 729, 759, 769, 204, 194,
	736, 735, 816, 684, 683, 764, 812, 826, 0, 0,
	923, 248, 0, 0, 366, 333, 267, 0, 0, 727,
	0, 897, 910, 712, 768, 660, 755, 831, 693, 760,
	832, 0, 0, 0, 0, 494, 0, 0, 0, 0,
	0, 0, 0, 0, 137, 0, 905, 919, 886, 0,
	722, 765, 843, 639, 902, 0, 644, 874, 0, 817,
	680, 681, 208, 0, 0, 0, 0, 0, 0, 0,
	725, 742, 784, 709, 0, 0, 361, 771, 780, 794,
	702, 299, 222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 901, 0, 0, 0, 654, 870, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 891, 0, 0, 0, 659, 637, 678, 786, 638,
	636, 268, 651, 912, 815, 710, 237, 154, 821, 708,
	889, 774, 655, 803, 696, 245, 653, 155, 650, 656,
	694, 279, 783, 789, 142, 158, 247, 800, 674, 687,
	195, 0, 309, 761, 360, 869, 747, 308, 249, 353,
	775, 823, 359, 697, 340, 367, 371, 215, 730, 186,
	330, 206, 203, 679, 793, 643, 223, 298, 198, 241,
	713, 767, 675, 191, 778, 754, 805, 329, 350, 160,
	264, 351, 370, 177, 345, 265, 272, 188, 190, 189,
	172, 323, 349, 182, 193, 801, 788, 807, 670, 657,
	662, 658, 686, 824, 232, 224, 808, 806, 364, 144,
	318, 317, 700, 231, 791, 145, 136, 305, 146, 238,
	163, 811, 373, 176, 243, 346, 868, 218, 278, 197,
	763, 287, 685, 157, 301, 260, 262, 259, 263, 221,
	140, 147, 787, 303, 320, 348, 178, 336, 138, 139,
	141, 149, 311, 150, 151, 830, 254, 210, 214, 225,
	235, 762, 307, 337, 365, 756, 173, 166, 339, 358,
	183, 319, 322, 372, 785, 168, 819, 802, 749, 715,
	721, 645, 0, 167, 781, 677, 689, 669, 757, 668,
	220, 773, 356, 357, 196, 374, 875, 834, 169, 863,
	833, 275, 282, 274, 836, 352, 820, 750, 739, 737,
	646, 818, 748, 738, 244, 213, 227, 296, 251, 297,
	228, 270, 269, 271, 859, 741, 0, 164, 0, 334,
	828, 845, 338, 180, 663, 795, 347, 143, 302, 181,
	219, 211, 295, 864, 862, 853, 854, 242, 250, 777,
	842, 286, 310, 185, 362, 331, 207, 880, 882, 878,
	881, 879, 898, 899, 920, 921, 922, 909, 876, 0,
	917, 918, 0, 732, 822, 647, 0, 798, 152, 153,
	770, 840, 888, 192, 131, 871, 872, 873, 132, 892,
	893, 133, 134, 915, 914, 913, 916, 135, 925, 924,
	926, 877, 884, 887, 894, 895, 896, 903, 904, 911,
	906, 907, 728, 292, 165, 175, 184, 202, 200, 212,
	239, 261, 266, 291, 321, 326, 341, 342, 343, 0,
	0, 0, 0, 0, 0, 0, 0, 900, 159, 170,
	246, 841, 304, 217, 635, 642, 661, 664, 665, 666,
	667, 671, 676, 0, 682, 688, 690, 691, 699, 704,
	705, 706, 707, 714, 716, 717, 718, 719, 720, 723,
	724, 726, 733, 734, 740, 745, 746, 752, 753, 0,
	776, 779, 908, 790, 792, 796, 797, 804, 809, 810,
	835, 839, 844, 363, 201, 731, 751, 782, 171, 179,
	187, 199, 209, 216, 226, 229, 233, 234, 236, 240,
	253, 255, 256, 257, 258, 276, 277, 280, 281, 284,
	285, 288, 289, 290, 860, 861, 300, 148, 306, 312,
	313, 314, 315, 316, 324, 325, 327, 328, 335, 354,
	355, 368, 369, 814, 711, 156, 0, 0, 162, 0,
	0, 0, 0, 0, 698, 161, 813, 837, 758, 772,
	825, 0, 344, 890, 829, 672, 695, 838, 701, 703,
	766, 648, 743, 283, 692, 649, 0, 0, 640, 885,
	641, 673, 205, 883, 799, 744, 827, 729, 759, 769,
	204, 194, 736, 735, 816, 684, 683, 764, 812, 826,
	0, 0, 923, 248, 0, 0, 366, 333, 267, 0,
	0, 727, 0, 897, 910, 712, 768, 660, 755, 831,
	693, 760, 832, 0, 0, 0, 0, 494, 0, 0,
	0, 0, 0, 0, 0, 0, 137, 0, 905, 919,
	886, 0, 722, 765, 843, 639, 902, 0, 644, 874,
	0, 817, 680, 681, 208, 0, 0, 0, 0, 0,
	0, 0, 725, 742, 784, 709, 0, 0, 361, 771,
	780, 794, 702, 299, 222, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 901, 0, 0, 0, 654,
	870, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 891, 0, 0, 0, 659, 637, 678,
	786, 638, 636, 268, 651, 912, 815, 710, 237, 154,
	821, 708, 889, 774, 655, 803, 696, 245, 653, 155,
	650, 656, 694, 279, 783, 789, 142, 158, 247, 800,
	674, 687, 195, 0, 309, 761, 360, 869, 747, 308,
	249, 353, 775, 823, 359, 697, 340, 367, 371, 215,
	730, 186, 330, 206, 203, 679, 793, 643, 223, 298,
	198, 241, 713, 767, 675, 191, 778, 754, 805, 329,
	350, 160, 264, 351, 370, 177, 345, 265, 272, 188,
	190, 189, 172, 323, 349, 182, 193, 801, 788, 807,
	670, 657, 662, 658, 686, 824, 232, 224, 808, 806,
	364, 144, 318, 317, 700, 231, 791, 145, 136, 305,
	146, 238, 163, 811, 373, 176, 243, 346, 868, 218,
	278, 197, 763, 287, 685, 157, 301, 260, 262, 259,
	263, 221, 140, 147, 787, 303, 320, 348, 178, 336,
	138, 139, 141, 149, 311, 150, 151, 830, 254, 210,
	214, 225, 235, 762, 307, 337, 365, 756, 173, 166,
	339, 1298, 183, 319, 322, 372, 785, 168, 819, 802,
	749, 715, 721, 645, 0, 167, 781, 677, 689, 669,
	757, 668, 220, 773, 356, 357, 196, 374, 875, 834,
	169, 652, 833, 275, 282, 274, 836, 352, 820, 750,
	739, 737, 646, 818, 748, 738, 244, 213, 227, 296,
	251, 297, 228, 270, 269, 271, 252, 741, 0, 164,
	0, 334, 828, 845, 338, 180, 663, 795, 347, 143,
	302, 181, 219, 211, 295, 273, 174, 230, 332, 242,
	250, 777, 842, 286, 310, 185, 362, 331, 207, 880,
	882, 878, 881, 879, 898, 899, 920, 921, 922, 909,
	876, 0, 917, 918, 0, 732, 822, 647, 0, 798,
	152, 153, 770, 840, 888, 192, 131, 871, 872, 873,
	132, 892, 893, 133, 134, 915, 914, 913, 916, 135,
	925, 924, 926, 877, 884, 887, 894, 895, 896, 903,
	904, 911, 906, 907, 728, 292, 165, 175, 184, 202,
	200, 212, 239, 261, 266, 291, 321, 326, 341, 342,
	343, 0, 0, 0, 0, 0, 0, 0, 0, 900,
	159, 170, 246, 841, 304, 217, 635, 642, 661, 664,
	665, 666, 667, 671, 676, 0, 682, 688, 690, 691,
	699, 704, 705, 706, 707, 714, 716, 717, 718, 719,
	720, 723, 724, 726, 733, 734, 740, 745, 746, 752,
	753, 0, 776, 779, 908, 790, 792, 796, 797, 804,
	809, 810, 835, 839, 844, 363, 201, 731, 751, 782,
	171, 179, 187, 199, 209, 216, 226, 229, 233, 234,
	236, 240, 253, 255, 256, 257, 258, 276, 277, 280,
	281, 284, 285, 288, 289, 290, 293, 294, 300, 148,
	306, 312, 313, 314, 315, 316, 324, 325, 327, 328,
	335, 354, 355, 368, 369, 814, 711, 156, 0, 0,
	162, 0, 0, 0, 0, 0, 698, 161, 813, 837,
	758, 772, 825, 0, 344, 890, 829, 672, 695, 838,
	701, 703, 766, 648, 743, 283, 692, 649, 0, 0,
	640, 885, 641, 673, 205, 883, 799, 744, 827, 729,
	759, 769, 204, 194, 736, 735, 816, 684, 683, 764,
	812, 826, 0, 0, 923, 248, 0, 0, 366, 333,
	267, 0, 0, 727, 0, 897, 910, 712, 768, 660,
	755, 831, 693, 760, 832, 0, 0, 0, 0, 494,
	0, 0, 0, 0, 0, 0, 0, 0, 137, 0,
	905, 919, 886, 0, 722, 765, 843, 639, 902, 0,
	644, 874, 0, 817, 680, 681, 208, 0, 0, 0,
	0, 0, 0, 0, 725, 742, 784, 709, 0, 0,
	361, 771, 780, 794, 702, 299, 222, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 901, 0, 0,
	0, 654, 870, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 891, 0, 0, 0, 659,
	637, 678, 786, 638, 636, 268, 651, 912, 815, 710,
	237, 154, 821, 708, 889, 774, 655, 803, 696, 245,
	653, 155, 650, 656, 694, 279, 783, 789, 142, 158,
	247, 800, 674, 687, 195, 0, 309, 761, 360, 869,
	747, 308, 249, 353, 775, 823, 359, 697, 340, 367,
	371, 215, 730, 186, 330, 206, 203, 679, 793, 643,
	223, 298, 198, 241, 713, 767, 675, 191, 778, 754,
	805, 329, 350, 160, 264, 351, 370, 177, 345, 265,
	272, 188, 190, 189, 172, 323, 349, 182, 193, 801,
	788, 807, 670, 657, 662, 658, 686, 824, 232, 224,
	808, 806, 364, 144, 318, 317, 700, 231, 791, 145,
	136, 305, 146, 238, 163, 811, 373, 176, 243, 346,
	868, 218, 278, 197, 763, 287, 685, 157, 301, 260,
	262, 259, 263, 221, 140, 147, 787, 303, 320, 348,
	178, 336, 138, 139, 141, 149, 311, 150, 151, 830,
	254, 210, 214, 225, 235, 762, 307, 337, 365, 756,
	173, 166, 339, 850, 183, 319, 322, 372, 785, 168,
	819, 802, 749, 715, 721, 645, 0, 167, 781, 677,
	689, 669, 757, 668, 220, 773, 356, 357, 196, 374,
	875, 834, 169, 863, 833, 275, 282, 274, 836, 352,
	820, 750, 739, 737, 646, 818, 748, 738, 244, 213,
	227, 296, 251, 297, 228, 270, 269, 271, 859, 741,
	0, 164, 0, 334, 828, 845, 338, 180, 663, 795,
	347, 143, 302, 181, 219, 211, 295, 864, 862, 853,
	854, 242, 250, 777, 842, 286, 310, 185, 362, 331,
	207, 880, 882, 878, 881, 879, 898, 899, 920, 921,
	922, 909, 876, 0, 917, 918, 0, 732, 822, 647,
	0, 798, 152, 153, 770, 840, 888, 192, 131, 871,
	872, 873, 132, 892, 893, 133, 134, 915, 914, 913,
	916, 135, 925, 924, 926, 877, 884, 887, 894, 895,
	896, 903, 904, 911, 906, 907, 728, 292, 165, 175,
	184, 202, 200, 212, 239, 261, 266, 291, 321, 326,
	341, 342, 343, 0, 0, 0, 0, 0, 0, 0,
	0, 900, 159, 170, 246, 841, 304, 217, 635, 642,
	661, 664, 665, 666, 667, 671, 676, 0, 682, 688,
	690, 691, 699, 704, 705, 706, 707, 714, 716, 717,
	718, 719, 720, 723, 724, 726, 733, 734, 740, 745,
	746, 752, 753, 0, 776, 779, 908, 790, 792, 796,
	797, 804, 809, 810, 835, 839, 844, 363, 201, 731,
	751, 782, 171, 179, 187, 199, 209, 216, 226, 229,
	233, 234, 236, 240, 253, 255, 256, 257, 258, 276,
	277, 280, 281, 284, 285, 288, 289, 290, 860, 861,
	300, 148, 306, 312, 313, 314, 315, 316, 324, 325,
	327, 328, 335, 354, 355, 368, 369, 814, 711, 156,
	0, 0, 162, 0, 0, 0, 0, 0, 698, 161,
	813, 837, 758, 772, 1670, 1632, 344, 1525, 1674, 1475,
	1504, 1691, 1510, 1513, 1594, 1441, 1563, 283, 1501, 1442,
	1425, 1480, 1429, 1492, 1430, 1477, 205, 1473, 1635, 1566,
	1672, 1545, 1587, 1597, 204, 194, 1555, 1554, 1660, 1490,
	1489, 1592, 1649, 1671, 1544, 0, 1681, 248, 1646, 0,
	366, 333, 267, 0, 0, 1540, 1655, 1561, 1624, 1523,
	1596, 1457, 1579, 1676, 1502, 1588, 1677, 0, 0, 0,
	0, 941, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1584, 1668, 1495, 0, 1535, 1593, 1696, 1428,
	1580, 0, 1433, 1444, 1690, 1661, 1486, 1487, 208, 0,
	0, 0, 0, 0, 0, 0, 1538, 1562, 1614, 1520,
	0, 0, 361, 1599, 1609, 1627, 1512, 299, 222, 0,
	0, 0, 0, 0, 0, 3031, 0, 1482, 0, 1577,
	0, 0, 0, 1449, 1435, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1534, 0, 0,
	0, 1456, 1426, 1484, 1616, 1427, 1424, 268, 1445, 1629,
	1659, 1521, 237, 0, 1665, 1519, 1518, 1603, 1450, 1639,
	1505, 245, 1448, 155, 1443, 1451, 1503, 279, 1613, 1621,
	0, 158, 247, 1636, 1478, 1494, 195, 0, 309, 1589,
	360, 0, 1570, 308, 249, 353, 1604, 1667, 359, 1506,
	340, 367, 371, 215, 1546, 186, 330, 206, 203, 1485,
	1626, 1432, 223, 298, 198, 241, 1524, 1595, 1479, 191,
	1607, 1578, 1641, 329, 350, 160, 264, 351, 370, 177,
	345, 265, 272, 188, 190, 189, 172, 323, 349, 182,
	193, 1637, 1620, 1643, 1472, 1452, 1463, 1453, 1493, 1669,
	232, 224, 1644, 1642, 364, 0, 318, 317, 1509, 231,
	1623, 0, 0, 305, 0, 238, 163, 1648, 373, 176,
	243, 346, 0, 218, 278, 197, 1591, 287, 1491, 157,
	301, 260, 262, 259, 263, 221, 0, 0, 1619, 303,
	320, 348, 178, 336, 0, 0, 0, 0, 311, 0,
	0, 1675, 254, 210, 214, 225, 235, 1590, 307, 337,
	365, 1581, 173, 166, 339, 358, 183, 319, 322, 372,
	1615, 168, 1663, 1638, 1572, 1527, 1533, 1434, 0, 167,
	1611, 1483, 1498, 1471, 1585, 1470, 220, 1602, 356, 357,
	196, 374, 1446, 1683, 169, 1447, 1682, 275, 282, 274,
	1686, 352, 1664, 1573, 1558, 1556, 1439, 1662, 1571, 1557,
	244, 213, 227, 296, 251, 297, 228, 270, 269, 271,
	252, 1560, 0, 164, 0, 334, 1673, 1698, 338, 180,
	1465, 1630, 347, 0, 302, 181, 219, 211, 295, 273,
	174, 230, 332, 242, 250, 1606, 1695, 286, 310, 185,
	362, 331, 207, 1461, 1464, 1459, 1462, 1460, 1564, 1565,
	1678, 1679, 1680, 1618, 1454, 0, 1656, 1657, 0, 1551,
	1666, 1440, 0, 1634, 0, 0, 1598, 1693, 1511, 192,
	0, 1436, 1437, 1438, 0, 1541, 1542, 0, 0, 1652,
	1651, 1650, 1653, 0, 1687, 1685, 1688, 1455, 1476, 1497,
	1547, 1548, 1550, 1582, 1583, 1628, 1601, 1610, 1543, 292,
	165, 175, 184, 202, 200, 212, 239, 261, 266, 291,
	321, 326, 341, 342, 343, 0, 0, 0, 0, 0,
	0, 0, 0, 1569, 159, 170, 246, 1694, 304, 217,
	1423, 1431, 1458, 1466, 1467, 1468, 1469, 1474, 1481, 0,
	1488, 1496, 1499, 1500, 1508, 1514, 1515, 1516, 1517, 1526,
	1528, 1529, 1530, 1531, 1532, 1536, 1537, 1539, 1552, 1553,
	1559, 1567, 1568, 1575, 1576, 0, 1605, 1608, 1617, 1622,
	1625, 1631, 1633, 1640, 1645, 1647, 1684, 1692, 1697, 363,
	201, 1549, 1574, 1612, 171, 179, 187, 199, 209, 216,
	226, 229, 233, 234, 236, 240, 253, 255, 256, 257,
	258, 276, 277, 280, 281, 284, 285, 288, 289, 290,
	293, 294, 300, 0, 306, 312, 313, 314, 315, 316,
	324, 325, 327, 328, 335, 354, 355, 368, 369, 1658,
	1522, 156, 0, 0, 162, 0, 0, 0, 0, 0,
	1507, 161, 1654, 1689, 1586, 1600, 1670, 1632, 344, 1525,
	1674, 1475, 1504, 1691, 1510, 1513, 1594, 1441, 1563, 283,
	1501, 1442, 1425, 1480, 1429, 1492, 1430, 1477, 205, 1473,
	1635, 1566, 1672, 1545, 1587, 1597, 204, 194, 1555, 1554,
	1660, 1490, 1489, 1592, 1649, 1671, 1544, 0, 1681, 248,
	1646, 0, 366, 333, 267, 0, 0, 1540, 1655, 1561,
	1624, 1523, 1596, 1457, 1579, 1676, 1502, 1588, 1677, 0,
	0, 0, 0, 941, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1584, 1668, 1495, 0, 1535, 1593,
	1696, 1428, 1580, 0, 1433, 1444, 1690, 1661, 1486, 1487,
	208, 0, 0, 0, 0, 0, 0, 0, 1538, 1562,
	1614, 1520, 0, 0, 361, 1599, 1609, 1627, 1512, 299,
	222, 0, 0, 0, 0, 0, 0, 2541, 0, 1482,
	0, 1577, 0, 0, 0, 1449, 1435, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1534,
	0, 0, 0, 1456, 1426, 1484, 1616, 1427, 1424, 268,
	1445, 1629, 1659, 1521, 237, 0, 1665, 1519, 1518, 1603,
	1450, 1639, 1505, 245, 1448, 155, 1443, 1451, 1503, 279,
	1613, 1621, 0, 158, 247, 1636, 1478, 1494, 195, 0,
	309, 1589, 360, 0, 1570, 308, 249, 353, 1604, 1667,
	359, 1506, 340, 367, 371, 215, 1546, 186, 330, 206,
	203, 1485, 1626, 1432, 223, 298, 198, 241, 1524, 1595,
	1479, 191, 1607, 1578, 1641, 329, 350, 160, 264, 351,
	370, 177, 345, 265, 272, 188, 190, 189, 172, 323,
	349, 182, 193, 1637, 1620, 1643, 1472, 1452, 1463, 1453,
	1493, 1669, 232, 224, 1644, 1642, 364, 0, 318, 317,
	1509, 231, 1623, 0, 0, 305, 0, 238, 163, 1648,
	373, 176, 243, 346, 0, 218, 278, 197, 1591, 287,
	1491, 157, 301, 260, 262, 259, 263, 221, 0, 0,
	1619, 303, 320, 348, 178, 336, 0, 0, 0, 0,
	311, 0, 0, 1675, 254, 210, 214, 225, 235, 1590,
	307, 337, 365, 1581, 173, 166, 339, 358, 183, 319,
	322, 372, 1615, 168, 1663, 1638, 1572, 1527, 1533, 1434,
	0, 167, 1611, 1483, 1498, 1471, 1585, 1470, 220, 1602,
	356, 357, 196, 374, 1446, 1683, 169, 1447, 1682, 275,
	282, 274, 1686, 352, 1664, 1573, 1558, 1556, 1439, 1662,
	1571, 1557, 244, 213, 227, 296, 251, 297, 228, 270,
	269, 271, 252, 1560, 0, 164, 0, 334, 1673, 1698,
	338, 180, 1465, 1630, 347, 0, 302, 181, 219, 211,
	295, 273, 174, 230, 332, 242, 250, 1606, 1695, 286,
	310, 185, 362, 331, 207, 1461, 1464, 1459, 1462, 1460,
	1564, 1565, 1678, 1679, 1680, 1618, 1454, 0, 1656, 1657,
	0, 1551, 1666, 1440, 0, 1634, 0, 0, 1598, 1693,
	1511, 192, 0, 1436, 1437, 1438, 0, 1541, 1542, 0,
	0, 1652, 1651, 1650, 1653, 0, 1687, 1685, 1688, 1455,
	1476, 1497, 1547, 1548, 1550, 1582, 1583, 1628, 1601, 1610,
	1543, 292, 165, 175, 184, 202, 200, 212, 239, 261,
	266, 291, 321, 326, 341, 342, 343, 0, 0, 0,
	0, 0, 0, 0, 0, 1569, 159, 170, 246, 1694,
	304, 217, 1423, 1431, 1458, 1466, 1467, 1468, 1469, 1474,
	1481, 0, 1488, 1496, 1499, 1500, 1508, 1514, 1515, 1516,
	1517, 1526, 1528, 1529, 1530, 1531, 1532, 1536, 1537, 1539,
	1552, 1553, 1559, 1567, 1568, 1575, 1576, 0, 1605, 1608,
	1617, 1622, 1625, 1631, 1633, 1640, 1645, 1647, 1684, 1692,
	1697, 363, 201, 1549, 1574, 1612, 171, 179, 187, 199,
	209, 216, 226, 229, 233, 234, 236, 240, 253, 255,
	256, 257, 258, 276, 277, 280, 281, 284, 285, 288,
	289, 290, 293, 294, 300, 0, 306, 312, 313, 314,
	315, 316, 324, 325, 327, 328, 335, 354, 355, 368,
	369, 1658, 1522, 156, 0, 0, 162, 0, 0, 0,
	0, 0, 1507, 161, 1654, 1689, 1586, 1600, 1670, 1632,
	344, 1525, 1674, 1475, 1504, 1691, 1510, 1513, 1594, 1441,
	1563, 283, 1501, 1442, 1425, 1480, 1429, 1492, 1430, 1477,
	205, 1473, 1635, 1566, 1672, 1545, 1587, 1597, 204, 194,
	1555, 1554, 1660, 1490, 1489, 1592, 1649, 1671, 1544, 0,
	1681, 248, 1646, 0, 366, 333, 267, 0, 0, 1540,
	1655, 1561, 1624, 1523, 1596, 1457, 1579, 1676, 1502, 1588,
	1677, 0, 0, 0, 0, 129, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1584, 1668, 1495, 0,
	1535, 1593, 1696, 1428, 1580, 0, 1433, 1444, 1690, 1661,
	1486, 1487, 208, 0, 0, 0, 0, 0, 0, 0,
	1538, 1562, 1614, 1520, 0, 0, 361, 1599, 1609, 1627,
	1512, 299, 222, 0, 0, 0, 0, 0, 0, 2328,
	0, 1482, 0, 1577, 0, 0, 0, 1449, 1435, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1534, 0, 0, 0, 1456, 1426, 1484, 1616, 1427,
	1424, 268, 1445, 1629, 1659, 1521, 237, 0, 1665, 1519,
	1518, 1603, 1450, 1639, 1505, 245, 1448, 155, 1443, 1451,
	1503, 279, 1613, 1621, 0, 158, 247, 1636, 1478, 1494,
	195, 0, 309, 1589, 360, 0, 1570, 308, 249, 353,
	1604, 1667, 359, 1506, 340, 367, 371, 215, 1546, 186,
	330, 206, 203, 1485, 1626, 1432, 223, 298, 198, 241,
	1524, 1595, 1479, 191, 1607, 1578, 1641, 329, 350, 160,
	264, 351, 370, 177, 345, 265, 272, 188, 190, 189,
	172, 323, 349, 182, 193, 1637, 1620, 1643, 1472, 1452,
	1463, 1453, 1493, 1669, 232, 224, 1644, 1642, 364, 0,
	318, 317, 1509, 231, 1623, 0, 0, 305, 0, 238,
	163, 1648, 373, 176, 243, 346, 0, 218, 278, 197,
	1591, 287, 1491, 157, 301, 260, 262, 259, 263, 221,
	0, 0, 1619, 303, 320, 348, 178, 336, 0, 0,
	0, 0, 311, 0, 0, 1675, 254, 210, 214, 225,
	235, 1590, 307, 337, 365, 1581, 173, 166, 339, 358,
	183, 319, 322, 372, 1615, 168, 1663, 1638, 1572, 1527,
	1533, 1434, 0, 167, 1611, 1483, 1498, 1471, 1585, 1470,
	220, 1602, 356, 357, 196, 374, 1446, 1683, 169, 1447,
	1682, 275, 282, 274, 1686, 352, 1664, 1573, 1558, 1556,
	1439, 1662, 1571, 1557, 244, 213, 227, 296, 251, 297,
	228, 270, 269, 271, 252, 1560, 0, 164, 0, 334,
	1673, 1698, 338, 180, 1465, 1630, 347, 0, 302, 181,
	219, 211, 295, 273, 174, 230, 332, 242, 250, 1606,
	1695, 286, 310, 185, 362, 331, 207, 1461, 1464, 1459,
	1462, 1460, 1564, 1565, 1678, 1679, 1680, 1618, 1454, 0,
	1656, 1657, 0, 1551, 1666, 1440, 0, 1634, 0, 0,
	1598, 1693, 1511, 192, 0, 1436, 1437, 1438, 0, 1541,
	1542, 0, 0, 1652, 1651, 1650, 1653, 0, 1687, 1685,
	1688, 1455, 1476, 1497, 1547, 1548, 1550, 1582, 1583, 1628,
	1601, 1610, 1543, 292, 165, 175, 184, 202, 200, 212,
	239, 261, 266, 291, 321, 326, 341, 342, 343, 0,
	0, 0, 0, 0, 0, 0, 0, 1569, 159, 170,
	246, 1694, 304, 217, 1423, 1431, 1458, 1466, 1467, 1468,
	1469, 1474, 1481, 0, 1488, 1496, 1499, 1500, 1508, 1514,
	1515, 1516, 1517, 1526, 1528, 1529, 1530, 1531, 1532, 1536,
	1537, 1539, 1552, 1553, 1559, 1567, 1568, 1575, 1576, 0,
	1605, 1608, 1617, 1622, 1625, 1631, 1633, 1640, 1645, 1647,
	1684, 1692, 1697, 363, 201, 1549, 1574, 1612, 171, 179,
	187, 199, 209, 216, 226, 229, 233, 234, 236, 240,
	253, 255, 256, 257, 258, 276, 277, 280, 281, 284,
	285, 288, 289, 290, 293, 294, 300, 0, 306, 312,
	313, 314, 315, 316, 324, 325, 327, 328, 335, 354,
	355, 368, 369, 1658, 1522, 156, 0, 0, 162, 0,
	0, 0, 0, 0, 1507, 161, 1654, 1689, 1586, 1600,
	1670, 1632, 344, 1525, 1674, 1475, 1504, 1691, 1510, 1513,
	1594, 1441, 1563, 283, 1501, 1442, 1425, 1480, 1429, 1492,
	1430, 1477, 205, 1473, 1635, 1566, 1672, 1545, 1587, 1597,
	204, 194, 1555, 1554, 1660, 1490, 1489, 1592, 1649, 1671,
	1544, 0, 1681, 248, 1646, 0, 366, 333, 267, 0,
	0, 1540, 1655, 1561, 1624, 1523, 1596, 1457, 1579, 1676,
	1502, 1588, 1677, 0, 0, 0, 0, 941, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1584, 1668,
	1495, 0, 1535, 1593, 1696, 1428, 1580, 0, 1433, 1444,
	1690, 1661, 1486, 1487, 208, 0, 0, 0, 0, 0,
	0, 0, 1538, 1562, 1614, 1520, 0, 0, 361, 1599,
	1609, 1627, 1512, 299, 222, 0, 0, 0, 0, 0,
	0, 0, 0, 1482, 0, 1577, 0, 0, 0, 1449,
	1435, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1534, 0, 0, 0, 1456, 1426, 1484,
	1616, 1427, 1424, 268, 1445, 1629, 1659, 1521, 237, 0,
	1665, 1519, 1518, 1603, 1450, 1639, 1505, 245, 1448, 155,
	1443, 1451, 1503, 279, 1613, 1621, 0, 158, 247, 1636,
	1478, 1494, 195, 0, 309, 1589, 360, 0, 1570, 308,
	249, 353, 1604, 1667, 359, 1506, 340, 367, 371, 215,
	1546, 186, 330, 206, 203, 1485, 1626, 1432, 223, 298,
	198, 241, 1524, 1595, 1479, 191, 1607, 1578, 1641, 329,
	350, 160, 264, 351, 370, 177, 345, 265, 272, 188,
	190, 189, 172, 323, 349, 182, 193, 1637, 1620, 1643,
	1472, 1452, 1463, 1453, 1493, 1669, 232, 224, 1644, 1642,
	364, 0, 318, 317, 1509, 231, 1623, 0, 0, 305,
	0, 238, 163, 1648, 373, 176, 243, 346, 0, 218,
	278, 197, 1591, 287, 1491, 157, 301, 260, 262, 259,
	263, 221, 0, 0, 1619, 303, 320, 348, 178, 336,
	0, 0, 0, 0, 311, 0, 0, 1675, 254, 210,
	214, 225, 235, 1590, 307, 337, 365, 1581, 173, 166,
	339, 358, 183, 319, 322, 372, 1615, 168, 1663, 1638,
	1572, 1527, 1533, 1434, 0, 167, 1611, 1483, 1498, 1471,
	1585, 1470, 220, 1602, 356, 357, 196, 374, 1446, 1683,
	169, 1447, 1682, 275, 282, 274, 1686, 352, 1664, 1573,
	1558, 1556, 1439, 1662, 1571, 1557, 244, 213, 227, 296,
	251, 297, 228, 270, 269, 271, 252, 1560, 0, 164,
	0, 334, 1673, 1698, 338, 180, 1465, 1630, 347, 1881,
	302, 181, 219, 211, 295, 273, 174, 230, 332, 242,
	250, 1606, 1695, 286, 310, 185, 362, 331, 207, 1461,
	1464, 1459, 1462, 1460, 1564, 1565, 1678, 1679, 1680, 1618,
	1454, 0, 1656, 1657, 0, 1551, 1666, 1440, 0, 1634,
	0, 0, 1598, 1693, 1511, 192, 0, 1436, 1437, 1438,
	0, 1541, 1542, 0, 0, 1652, 1651, 1650, 1653, 0,
	1687, 1685, 1688, 1455, 1476, 1497, 1547, 1548, 1550, 1582,
	1583, 1628, 1601, 1610, 1543, 292, 165, 175, 184, 202,
	200, 212, 239, 261, 266, 291, 321, 326, 341, 342,
	343, 0, 0, 0, 0, 0, 0, 0, 0, 1569,
	159, 170, 246, 1694, 304, 217, 1423, 1431, 1458, 1466,
	1467, 1468, 1469, 1474, 1481, 0, 1488, 1496, 1499, 1500,
	1508, 1514, 1515, 1516, 1517, 1526, 1528, 1529, 1530, 1531,
	1532, 1536, 1537, 1539, 1552, 1553, 1559, 1567, 1568, 1575,
	1576, 0, 1605, 1608, 1617, 1622, 1625, 1631, 1633, 1640,
	1645, 1647, 1684, 1692, 1697, 363, 201, 1549, 1574, 1612,
	171, 179, 187, 199, 209, 216, 226, 229, 233, 234,
	236, 240, 253, 255, 256, 257, 258, 276, 277, 280,
	281, 284, 285, 288, 289, 290, 293, 294, 300, 0,
	306, 312, 313, 314, 315, 316, 324, 325, 327, 328,
	335, 354, 355, 368, 369, 1658, 1522, 156, 0, 0,
	162, 0, 0, 0, 0, 0, 1507, 161, 1654, 1689,
	1586, 1600, 1670, 1632, 344, 1525, 1674, 1475, 1504, 1691,
	1510, 1513, 1594, 1441, 1563, 283, 1501, 1442, 1425, 1480,
	1429, 1492, 1430, 1477, 205, 1473, 1635, 1566, 1672, 1545,
	1587, 1597, 204, 194, 1555, 1554, 1660, 1490, 1489, 1592,
	1649, 1671, 1544, 0, 1681, 248, 1646, 0, 366, 333,
	267, 0, 0, 1540, 1655, 1561, 1624, 1523, 1596, 1457,
	1579, 1676, 1502, 1588, 1677, 0, 0, 0, 0, 941,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1584, 1668, 1495, 0, 1535, 1593, 1696, 1428, 1580, 0,
	1433, 1444, 1690, 1661, 1486, 1487, 208, 0, 0, 0,
	0, 0, 0, 0, 1538, 1562, 1614, 1520, 0, 0,
	361, 1599, 1609, 1627, 1512, 299, 222, 0, 0, 0,
	0, 0, 0, 0, 0, 1482, 0, 1577, 0, 0,
	0, 1449, 1435, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1534, 0, 0, 0, 1456,
	1426, 1484, 1616, 1427, 1424, 268, 1445, 1629, 1659, 1521,
	237, 0, 1665, 1519, 1518, 1603, 1450, 1639, 1505, 245,
	1448, 155, 1443, 1451, 1503, 279, 1613, 1621, 0, 158,
	247, 1636, 1478, 1494, 195, 0, 309, 1589, 360, 0,
	1570, 308, 249, 353, 1604, 1667, 359, 1506, 340, 367,
	371, 215, 1546, 186, 330, 206, 203, 1485, 1626, 1432,
	223, 298, 198, 241, 1524, 1595, 1479, 191, 1607, 1578,
	1641, 329, 350, 160, 264, 351, 370, 177, 345, 265,
	272, 188, 190, 189, 172, 323, 349, 182, 193, 1637,
	1620, 1643, 1472, 1452, 1463, 1453, 1493, 1669, 232, 224,
	1644, 1642, 364, 0, 318, 317, 1509, 231, 1623, 0,
	0, 305, 0, 238, 163, 1648, 373, 176, 243, 346,
	0, 218, 278, 197, 1591, 287, 1491, 157, 301, 260,
	262, 259, 263, 221, 0, 0, 1619, 303, 320, 348,
	178, 336, 0, 0, 0, 0, 311, 0, 0, 1675,
	254, 210, 214, 225, 235, 1590, 307, 337, 365, 1581,
	173, 166, 339, 358, 183, 319, 322, 372, 1615, 168,
	1663, 1638, 1572, 1527, 1533, 1434, 0, 167, 1611, 1483,
	1498, 1471, 1585, 1470, 220, 1602, 356, 357, 196, 374,
	1446, 1683, 169, 1447, 1682, 275, 282, 274, 1686, 352,
	1664, 1573, 1558, 1556, 1439, 1662, 1571, 1557, 244, 213,
	227, 296, 251, 297, 228, 270, 269, 271, 252, 1560,
	0, 164, 0, 334, 1673, 1698, 338, 180, 1465, 1630,
	347, 0, 302, 181, 219, 211, 295, 273, 174, 230,
	332, 242, 250, 1606, 1695, 286, 310, 185, 362, 331,
	207, 1461, 1464, 1459, 1462, 1460, 1564, 1565, 1678, 1679,
	1680, 1618, 1454, 0, 1656, 1657, 0, 1551, 1666, 1440,
	0, 1634, 0, 0, 1598, 1693, 1511, 192, 0, 1436,
	1437, 1438, 0, 1541, 1542, 0, 0, 1652, 1651, 1650,
	1653, 0, 1687, 1685, 1688, 1455, 1476, 1497, 1547, 1548,
	1550, 1582, 1583, 1628, 1601, 1610, 1543, 292, 165, 175,
	184, 202, 200, 212, 239, 261, 266, 291, 321, 326,
	341, 342, 343, 0, 0, 0, 0, 0, 0, 0,
	0, 1569, 159, 170, 246, 1694, 304, 217, 1423, 1431,
	1458, 1466, 1467, 1468, 1469, 1474, 1481, 0, 1488, 1496,
	1499, 1500, 1508, 1514, 1515, 1516, 1517, 1526, 1528, 1529,
	1530, 1531, 1532, 1536, 1537, 1539, 1552, 1553, 1559, 1567,
	1568, 1575, 1576, 0, 1605, 1608, 1617, 1622, 1625, 1631,
	1633, 1640, 1645, 1647, 1684, 1692, 1697, 363, 201, 1549,
	1574, 1612, 171, 179, 187, 199, 209, 216, 226, 229,
	233, 234, 236, 240, 253, 255, 256, 257, 258, 276,
	277, 280, 281, 284, 285, 288, 289, 290, 293, 294,
	300, 0, 306, 312, 313, 314, 315, 316, 324, 325,
	327, 328, 335, 354, 355, 368, 369, 1658, 1522, 156,
	0, 0, 162, 0, 0, 0, 0, 0, 1507, 161,
	1654, 1689, 1586, 1600, 1670, 1632, 344, 1525, 1674, 1475,
	1504, 1691, 1510, 1513, 1594, 1441, 1563, 283, 1501, 1442,
	1425, 1480, 1429, 1492, 1430, 1477, 205, 1473, 1635, 1566,
	1672, 1545, 1587, 1597, 204, 194, 1555, 1554, 1660, 1490,
	1489, 1592, 1649, 1671, 1544, 0, 1681, 248, 1646, 0,
	366, 333, 267, 0, 0, 1540, 1655, 1561, 1624, 1523,
	1596, 1457, 1579, 1676, 1502, 1588, 1677, 0, 0, 0,
	0, 3349, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1584, 1668, 1495, 0, 1535, 1593, 1696, 1428,
	1580, 0, 1433, 1444, 1690, 1661, 1486, 1487, 208, 0,
	0, 0, 0, 0, 0, 0, 1538, 1562, 1614, 1520,
	0, 0, 361, 1599, 1609, 1627, 1512, 299, 222, 0,
	0, 0, 0, 0, 0, 0, 0, 1482, 0, 1577,
	0, 0, 0, 1449, 1435, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1534, 0, 0,
	0, 1456, 1426, 1484, 1616, 1427, 1424, 268, 1445, 1629,
	1659, 1521, 237, 0, 1665, 1519, 1518, 1603, 1450, 1639,
	1505, 245, 1448, 155, 1443, 1451, 1503, 279, 1613, 1621,
	0, 158, 247, 1636, 1478, 1494, 195, 0, 309, 1589,
	360, 0, 1570, 308, 249, 353, 1604, 1667, 359, 1506,
	340, 367, 371, 215, 1546, 186, 330, 206, 203, 1485,
	1626, 1432, 223, 298, 198, 241, 1524, 1595, 1479, 191,
	1607, 1578, 1641, 329, 350, 160, 264, 351, 370, 177,
	345, 265, 272, 188, 190, 189, 172, 323, 349, 182,
	193, 1637, 1620, 1643, 1472, 1452, 1463, 3352, 3353, 3354,
	232, 224, 1644, 1642, 364, 0, 318, 317, 1509, 231,
	1623, 0, 0, 305, 0, 238, 163, 1648, 373, 176,
	243, 346, 0, 218, 278, 197, 1591, 287, 1491, 157,
	301, 260, 262, 259, 263, 221, 0, 0, 1619, 303,
	320, 348, 178, 336, 0, 0, 0, 0, 311, 0,
	0, 1675, 254, 210, 214, 225, 235, 1590, 307, 337,
	365, 1581, 173, 166, 339, 358, 183, 319, 322, 372,
	1615, 168, 1663, 1638, 1572, 1527, 1533, 1434, 0, 167,
	1611, 1483, 1498, 1471, 1585, 1470, 220, 1602, 356, 357,
	196, 374, 1446, 1683, 169, 1447, 1682, 275, 282, 274,
	1686, 352, 1664, 1573, 1558, 1556, 1439, 1662, 1571, 1557,
	244, 213, 227, 296, 251, 297, 228, 270, 269, 271,
	252, 1560, 0, 164, 0, 334, 1673, 1698, 338, 180,
	1465, 1630, 347, 0, 302, 181, 219, 211, 295, 273,
	174, 230, 332, 242, 250, 1606, 1695, 286, 310, 185,
	362, 331, 207, 1461, 1464, 1459, 1462, 1460, 1564, 1565,
	1678, 1679, 1680, 1618, 1454, 0, 1656, 1657, 0, 1551,
	1666, 1440, 0, 1634, 0, 0, 1598, 1693, 1511, 192,
	0, 1436, 1437, 1438, 0, 1541, 1542, 0, 0, 1652,
	1651, 1650, 1653, 0, 1687, 1685, 1688, 1455, 1476, 1497,
	1547, 1548, 1550, 1582, 1583, 1628, 1601, 1610, 1543, 292,
	165, 175, 184, 202, 200, 212, 239, 261, 266, 291,
	321, 326, 341, 342, 343, 0, 0, 0, 0, 0,
	0, 0, 0, 1569, 159, 170, 246, 1694, 304, 217,
	1423, 1431, 1458, 1466, 1467, 1468, 1469, 1474, 1481, 0,
	1488, 1496, 1499, 1500, 1508, 1514, 1515, 1516, 1517, 1526,
	1528, 1529, 1530, 1531, 1532, 1536, 1537, 1539, 1552, 1553,
	1559, 1567, 1568, 1575, 1576, 0, 1605, 1608, 1617, 1622,
	1625, 1631, 1633, 1640, 1645, 1647, 1684, 1692, 1697, 363,
	201, 1549, 1574, 1612, 171, 179, 187, 199, 209, 216,
	226, 229, 233, 234, 236, 240, 253, 255, 256, 257,
	258, 276, 277, 280, 281, 284, 285, 288, 289, 290,
	293, 294, 300, 0, 306, 312, 313, 314, 315, 316,
	324, 325, 327, 328, 335, 354, 355, 368, 369, 1658,
	1522, 156, 0, 0, 162, 0, 0, 0, 0, 0,
	1507, 161, 1654, 1689, 1586, 1600, 1670, 1632, 344, 1525,
	1674, 1475, 1504, 1691, 1510, 1513, 1594, 1441, 1563, 283,
	1501, 1442, 1425, 1480, 1429, 1492, 1430, 1477, 205, 1473,
	1635, 1566, 1672, 1545, 1587, 1597, 204, 194, 1555, 1554,
	1660, 1490, 1489, 1592, 1649, 1671, 1544, 0, 1681, 248,
	1646, 0, 366, 333, 267, 0, 0, 1540, 1655, 1561,
	1624, 1523, 1596, 1457, 1579, 1676, 1502, 1588, 1677, 0,
	0, 0, 0, 2666, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1584, 1668, 1495, 0, 1535, 1593,
	1696, 1428, 1580, 0, 1433, 1444, 1690, 1661, 1486, 1487,
	208, 0, 0, 0, 0, 0, 0, 0, 1538, 1562,
	1614, 1520, 0, 0, 361, 1599, 1609, 1627, 1512, 299,
	222, 0, 0, 0, 0, 0, 0, 0, 0, 1482,
	0, 1577, 0, 0, 0, 1449, 1435, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1534,
	0, 0, 0, 1456, 1426, 1484, 1616, 1427, 1424, 268,
	1445, 1629, 1659, 1521, 237, 0, 1665, 1519, 1518, 1603,
	1450, 1639, 1505, 245, 1448, 155, 1443, 1451, 1503, 279,
	1613, 1621, 0, 158, 247, 1636, 1478, 1494, 195, 0,
	309, 1589, 360, 0, 1570, 308, 249, 353, 1604, 1667,
	359, 1506, 340, 367, 371, 215, 1546, 186, 330, 206,
	203, 1485, 1626, 1432, 223, 298, 198, 241, 1524, 1595,
	1479, 191, 1607, 1578, 1641, 329, 350, 160, 264, 351,
	370, 177, 345, 265, 272, 188, 190, 189, 172, 323,
	349, 182, 193, 1637, 1620, 1643, 1472, 1452, 1463, 1453,
	1493, 1669, 232, 224, 1644, 1642, 364, 0, 318, 317,
	1509, 231, 1623, 0, 0, 305, 0, 238, 163, 1648,
	373, 176, 243, 346, 0, 218, 278, 197, 1591, 287,
	1491, 157, 301, 260, 262, 259, 263, 221, 0, 0,
	1619, 303, 320, 348, 178, 336, 0, 0, 0, 0,
	311, 0, 0, 1675, 254, 210, 214, 225, 235, 1590,
	307, 337, 365, 1581, 173, 166, 339, 358, 183, 319,
	322, 372, 1615, 168, 1663, 1638, 1572, 1527, 1533, 1434,
	0, 167, 1611, 1483, 1498, 1471, 1585, 1470, 220, 1602,
	356, 357, 196, 374, 1446, 1683, 169, 1447, 1682, 275,
	282, 274, 1686, 352, 1664, 1573, 1558, 1556, 1439, 1662,
	1571, 1557, 244, 213, 227, 296, 251, 297, 228, 270,
	269, 271, 252, 1560, 0, 164, 0, 334, 1673, 1698,
	338, 180, 1465, 1630, 347, 0, 302, 181, 219, 211,
	295, 273, 174, 230, 332, 242, 250, 1606, 1695, 286,
	310, 185, 362, 331, 207, 1461, 1464, 1459, 1462, 1460,
	1564, 1565, 1678, 1679, 1680, 1618, 1454, 0, 1656, 1657,
	0, 1551, 1666, 1440, 0, 1634, 0, 0, 1598, 1693,
	1511, 192, 0, 1436, 1437, 1438, 0, 1541, 1542, 0,
	0, 1652, 1651, 1650, 1653, 0, 1687, 1685, 1688, 1455,
	1476, 1497, 1547, 1548, 1550, 1582, 1583, 1628, 1601, 1610,
	1543, 292, 165, 175, 184, 202, 200, 212, 239, 261,
	266, 291, 321, 326, 341, 342, 343, 0, 0, 0,
	0, 0, 0, 0, 0, 1569, 159, 170, 246, 1694,
	304, 217, 1423, 1431, 1458, 1466, 1467, 1468, 1469, 1474,
	1481, 0, 1488, 1496, 1499, 1500, 1508, 1514, 1515, 1516,
	1517, 1526, 1528, 1529, 1530, 1531, 1532, 1536, 1537, 1539,
	1552, 1553, 1559, 1567, 1568, 1575, 1576, 0, 1605, 1608,
	1617, 1622, 1625, 1631, 1633, 1640, 1645, 1647, 1684, 1692,
	1697, 363, 201, 1549, 1574, 1612, 171, 179, 187, 199,
	209, 216, 226, 229, 233, 234, 236, 240, 253, 255,
	256, 257, 258, 276, 277, 280, 281, 284, 285, 288,
	289, 290, 293, 294, 300, 0, 306, 312, 313, 314,
	315, 316, 324, 325, 327, 328, 335, 354, 355, 368,
	369, 1658, 1522, 156, 0, 0, 162, 0, 0, 0,
	0, 0, 1507, 161, 1654, 1689, 1586, 1600, 1670, 1632,
	344, 1525, 1674, 1475, 1504, 1691, 1510, 1513, 1594, 1441,
	1563, 283, 1501, 1442, 1425, 1480, 1429, 1492, 1430, 1477,
	205, 1473, 1635, 1566, 1672, 1545, 1587, 1597, 204, 194,
	1555, 1554, 1660, 1490, 1489, 1592, 1649, 1671, 1544, 0,
	1681, 248, 1646, 0, 366, 333, 267, 0, 0, 1540,
	1655, 1561, 1624, 1523, 1596, 1457, 1579, 1676, 1502, 1588,
	1677, 0, 0, 0, 0, 129, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1584, 1668, 1495, 0,
	1535, 1593, 1696, 1428, 1580, 0, 1433, 1444, 1690, 1661,
	1486, 1487, 208, 0, 0, 0, 0, 0, 0, 0,
	1538, 1562, 1614, 1520, 0, 0, 361, 1599, 1609, 1627,
	1512, 299, 222, 0, 0, 0, 0, 0, 0, 0,
	0, 1482, 0, 1577, 0, 0, 0, 1449, 1435, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1534, 0, 0, 0, 1456, 1426, 1484, 1616, 1427,
	1424, 268, 1445, 1629, 1659, 1521, 237, 0, 1665, 1519,
	1518, 1603, 1450, 1639, 1505, 245, 1448, 155, 1443, 1451,
	1503, 279, 1613, 1621, 0, 158, 247, 1636, 1478, 1494,
	195, 0, 309, 1589, 360, 0, 1570, 308, 249, 353,
	1604, 1667, 359, 1506, 340, 367, 371, 215, 1546, 186,
	330, 206, 203, 1485, 1626, 1432, 223, 298, 198, 241,
	1524, 1595, 1479, 191, 1607, 1578, 1641, 329, 350, 160,
	264, 351, 370, 177, 345, 265, 272, 188, 190, 189,
	172, 323, 349, 182, 193, 1637, 1620, 1643, 1472, 1452,
	1463, 1453, 1493, 1669, 232, 224, 1644, 1642, 364, 0,
	318, 317, 1509, 231, 1623, 0, 0, 305, 0, 238,
	163, 1648, 373, 176, 243, 346, 0, 218, 278, 197,
	1591, 287, 1491, 157, 301, 260, 262, 259, 263, 221,
	0, 0, 1619, 303, 320, 348, 178, 336, 0, 0,
	0, 0, 311, 0, 0, 1675, 254, 210, 214, 225,
	235, 1590, 307, 337, 365, 1581, 173, 166, 339, 358,
	183, 319, 322, 372, 1615, 168, 1663, 1638, 1572, 1527,
	1533, 1434, 0, 167, 1611, 1483, 1498, 1471, 1585, 1470,
	220, 1602, 356, 357, 196, 374, 1446, 1683, 169, 1447,
	1682, 275, 282, 274, 1686, 352, 1664, 1573, 1558, 1556,
	1439, 1662, 1571, 1557, 244, 213, 227, 296, 251, 297,
	228, 270, 269, 271, 252, 1560, 0, 164, 0, 334,
	1673, 1698, 338, 180, 1465, 1630, 347, 0, 302, 181,
	219, 211, 295, 273, 174, 230, 332, 242, 250, 1606,
	1695, 286, 310, 185, 362, 331, 207, 1461, 1464, 1459,
	1462, 1460, 1564, 1565, 1678, 1679, 1680, 1618, 1454, 0,
	1656, 1657, 0, 1551, 1666, 1440, 0, 1634, 0, 0,
	1598, 1693, 1511, 192, 0, 1436, 1437, 1438, 0, 1541,
	1542, 0, 0, 1652, 1651, 1650, 1653, 0, 1687, 1685,
	1688, 1455, 1476, 1497, 1547, 1548, 1550, 1582, 1583, 1628,
	1601, 1610, 1543, 292, 165, 175, 184, 202, 200, 212,
	239, 261, 266, 291, 321, 326, 341, 342, 343, 0,
	0, 0, 0, 0, 0, 0, 0, 1569, 159, 170,
	246, 1694, 304, 217, 1423, 1431, 1458, 1466, 1467, 1468,
	1469, 1474, 1481, 0, 1488, 1496, 1499, 1500, 1508, 1514,
	1515, 1516, 1517, 1526, 1528, 1529, 1530, 1531, 1532, 1536,
	1537, 1539, 1552, 1553, 1559, 1567, 1568, 1575, 1576, 0,
	1605, 1608, 1617, 1622, 1625, 1631, 1633, 1640, 1645, 1647,
	1684, 1692, 1697, 363, 201, 1549, 1574, 1612, 171, 179,
	187, 199, 209, 216, 226, 229, 233, 234, 236, 240,
	253, 255, 256, 257, 258, 276, 277, 280, 281, 284,
	285, 288, 289, 290, 293, 294, 300, 0, 306, 312,
	313, 314, 315, 316, 324, 325, 327, 328, 335, 354,
	355, 368, 369, 1658, 1522, 156, 0, 0, 162, 344,
	0, 0, 0, 0, 1507, 161, 1654, 1689, 1586, 1600,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 205,
	0, 0, 0, 0, 0, 0, 0, 204, 194, 0,
	0, 0, 0, 0, 0, 0, 2032, 2036, 0, 0,
	248, 0, 945, 366, 333, 267, 948, 947, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 941, 0, 0, 0, 0, 0,
	0, 0, 0, 137, 0, 0, 0, 0, 946, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 361, 0, 0, 0, 0,
	299, 222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 0, 0, 2035, 237, 154, 0, 0, 0,
	2029, 0, 2030, 2031, 245, 949, 155, 0, 2027, 2034,
	279, 0, 0, 142, 158, 247, 0, 0, 0, 195,
	938, 309, 0, 360, 944, 0, 308, 249, 353, 0,
	0, 359, 0, 340, 367, 371, 215, 0, 186, 330,
	206, 203, 0, 0, 0, 223, 298, 198, 241, 0,
	0, 0, 191, 0, 0, 0, 329, 350, 160, 264,
	351, 370, 177, 345, 265, 272, 188, 190, 189, 172,
	323, 349, 182, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 224, 0, 0, 364, 144, 318,
	317, 0, 231, 0, 145, 136, 305, 146, 238, 163,
	0, 373, 176, 243, 346, 943, 218, 278, 197, 0,
	287, 0, 157, 301, 260, 262, 259, 263, 221, 140,
	147, 0, 303, 320, 348, 178, 336, 138, 139, 141,
	149, 311, 150, 151, 0, 254, 210, 214, 225, 235,
	0, 307, 337, 365, 0, 173, 166, 339, 358, 183,
	319, 322, 372, 0, 168, 0, 0, 0, 0, 0,
	0, 0, 167, 0, 0, 0, 0, 0, 0, 220,
	0, 356, 357, 196, 374, 0, 0, 169, 0, 0,
	275, 282, 274, 0, 352, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 213, 227, 296, 251, 297, 228,
	270, 269, 271, 252, 0, 0, 164, 0, 334, 0,
	0, 338, 180, 0, 0, 347, 143, 302, 181, 219,
	211, 295, 273, 174, 230, 332, 242, 250, 0, 0,
	286, 310, 185, 362, 331, 207, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 152, 153, 0,
	0, 0, 192, 131, 0, 0, 0, 132, 0, 0,
	133, 134, 0, 0, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 292, 165, 175, 184, 202, 200, 212, 239,
	261, 266, 291, 321, 326, 341, 342, 343, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 159, 170, 246,
	0, 304, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 363, 201, 0, 0, 0, 171, 179, 187,
	199, 209, 216, 226, 229, 233, 234, 236, 240, 253,
	255, 256, 257, 258, 276, 277, 280, 281, 284, 285,
	288, 289, 290, 293, 294, 300, 148, 306, 312, 313,
	314, 315, 316, 324, 325, 327, 328, 335, 354, 355,
	368, 369, 344, 0, 156, 0, 0, 162, 0, 0,
	0, 0, 0, 283, 161, 0, 0, 0, 1157, 0,
	0, 0, 205, 0, 0, 0, 0, 0, 0, 0,
	204, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 0, 945, 366, 333, 267, 948,
	947, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1158, 0, 1161,
	0, 0, 0, 0, 0, 0, 137, 0, 0, 0,
	0, 946, 0, 1153, 1154, 1152, 0, 0, 0, 0,
	0, 0, 0, 0, 208, 0, 0, 0, 0, 0,
	0, 0, 1155, 0, 0, 0, 0, 0, 361, 0,
	0, 0, 0, 299, 222, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 0, 0, 0, 237, 154,
	0, 0, 0, 0, 0, 0, 0, 245, 0, 155,
	0, 0, 0, 279, 0, 0, 142, 158, 247, 0,
	0, 0, 195, 0, 309, 0, 360, 944, 0, 308,
	249, 353, 0, 0, 359, 0, 340, 367, 371, 215,
	0, 186, 330, 206, 203, 0, 0, 0, 223, 298,
	198, 241, 0, 0, 0, 191, 0, 0, 0, 329,
	350, 160, 264, 351, 370, 177, 345, 265, 272, 188,
	190, 189, 172, 323, 349, 182, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 224, 0, 0,
	364, 144, 318, 317, 0, 231, 0, 145, 136, 305,
	146, 238, 163, 0, 373, 176, 243, 346, 943, 218,
	278, 197, 0, 287, 0, 157, 301, 260, 262, 259,
	263, 221, 140, 147, 0, 303, 320, 348, 178, 336,
	138, 139, 141, 149, 311, 150, 151, 0, 254, 210,
	214, 225, 235, 0, 307, 337, 365, 0, 173, 166,
	339, 358, 183, 319, 322, 372, 0, 168, 0, 0,
	0, 0, 0, 0, 0, 167, 0, 0, 0, 0,
	0, 0, 220, 0, 356, 357, 196, 374, 0, 0,
	169, 0, 0, 275, 282, 274, 0, 352, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 213, 227, 296,
	251, 297, 228, 270, 269, 271, 252, 0, 0, 164,
	0, 334, 0, 0, 338, 180, 0, 0, 347, 143,
	302, 181, 219, 211, 295, 273, 174, 230, 332, 242,
	250, 0, 0, 286, 310, 185, 362, 331, 207, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	152, 153, 0, 0, 0, 192, 131, 0, 0, 0,
	132, 0, 0, 133, 134, 0, 0, 0, 0, 135,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 292, 165, 175, 184, 202,
	200, 212, 239, 261, 266, 291, 321, 326, 341, 342,
	343, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	159, 170, 246, 0, 304, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 363, 201, 0, 0, 0,
	171, 179, 187, 199, 209, 216, 226, 229, 233, 234,
	236, 240, 253, 255, 256, 257, 258, 276, 277, 280,
	281, 284, 285, 288, 289, 290, 293, 294, 300, 148,
	306, 312, 313, 314, 315, 316, 324, 325, 327, 328,
	335, 354, 355, 368, 369, 344, 0, 156, 0, 0,
	162, 0, 0, 0, 0, 0, 283, 161, 0, 0,
	0, 0, 0, 0, 0, 205, 0, 0, 0, 0,
	0, 0, 0, 204, 194, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 0, 945, 366,
	333, 267, 948, 947, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	941, 0, 0, 0, 0, 0, 0, 0, 0, 137,
	0, 0, 0, 0, 946, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 208, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 361, 0, 0, 0, 0, 299, 222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 0, 0,
	0, 237, 154, 0, 0, 0, 0, 0, 0, 0,
	245, 949, 155, 0, 939, 0, 279, 0, 0, 142,
	158, 247, 0, 0, 0, 195, 938, 309, 0, 360,
	944, 0, 308, 249, 353, 0, 0, 359, 0, 340,
	367, 371, 215, 0, 186, 330, 206, 203, 0, 0,
	0, 223, 298, 198, 241, 0, 0, 0, 191, 0,
	0, 0, 329, 350, 160, 264, 351, 370, 177, 345,
	265, 272, 188, 190, 189, 172, 323, 349, 182, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	224, 0, 0, 364, 144, 318, 317, 0, 231, 0,
	145, 136, 305, 146, 238, 163, 0, 373, 176, 243,
	346, 943, 218, 278, 197, 0, 287, 0, 157, 301,
	260, 262, 259, 263, 221, 140, 147, 0, 303, 320,
	348, 178, 336, 138, 139, 141, 149, 311, 150, 151,
	0, 254, 210, 214, 225, 235, 0, 307, 337, 365,
	0, 173, 166, 339, 358, 183, 319, 322, 372, 0,
	168, 0, 0, 0, 0, 0, 0, 0, 167, 0,
	0, 0, 0, 0, 0, 220, 0, 356, 357, 196,
	374, 0, 0, 169, 0, 0, 275, 282, 274, 0,
	352, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	213, 227, 296, 251, 297, 228, 270, 269, 271, 252,
	0, 0, 164, 0, 334, 0, 0, 338, 180, 0,
	0, 347, 143, 302, 181, 219, 211, 295, 273, 174,
	230, 332, 242, 250, 0, 0, 286, 310, 185, 362,
	331, 207, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 152, 153, 0, 0, 0, 192, 131,
	0, 0, 0, 132, 0, 0, 133, 134, 0, 0,
	0, 0, 135, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 292, 165,
	175, 184, 202, 200, 212, 239, 261, 266, 291, 321,
	326, 341, 342, 343, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 159, 170, 246, 0, 304, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 363, 201,
	0, 0, 0, 171, 179, 187, 199, 209, 216, 226,
	229, 233, 234, 236, 240, 253, 255, 256, 257, 258,
	276, 277, 280, 281, 284, 285, 288, 289, 290, 293,
	294, 300, 148, 306, 312, 313, 314, 315, 316, 324,
	325, 327, 328, 335, 354, 355, 368, 369, 344, 0,
	156, 0, 0, 162, 0, 0, 0, 0, 0, 283,
	161, 0, 0, 0, 0, 0, 0, 0, 205, 0,
	0, 0, 0, 0, 0, 0, 204, 194, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	0, 945, 366, 333, 267, 948, 947, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1158, 0, 1161, 0, 0, 0, 0,
	0, 0, 137, 0, 0, 0, 0, 946, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	208, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 361, 0, 0, 0, 0, 299,
	222, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 0, 0, 0, 237, 154, 0, 0, 0, 0,
	0, 0, 0, 245, 0, 155, 0, 0, 0, 279,
	0, 0, 142, 158, 247, 0, 0, 0, 195, 1830,
	309, 0, 360, 944, 0, 308, 249, 353, 0, 0,
	359, 0, 340, 367, 371, 215, 0, 186, 330, 206,
	203, 0, 0, 0, 223, 298, 198, 241, 0, 0,
	0, 191, 0, 0, 0, 329, 350, 160, 264, 351,
	370, 177, 345, 265, 272, 188, 190, 189, 172, 323,
	349, 182, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 224, 0, 0, 364, 144, 318, 317,
	0, 231, 0, 145, 136, 305, 146, 238, 163, 0,
	373, 176, 243, 346, 943, 218, 278, 197, 0, 287,
	0, 157, 301, 260, 262, 259, 263, 221, 140, 147,
	0, 303, 320, 348, 178, 336, 138, 139, 141, 149,
	311, 150, 151, 0, 254, 210, 214, 225, 235, 0,
	307, 337, 365, 0, 173, 166, 339, 358, 183, 319,
	322, 372, 0, 168, 0, 0, 0, 0, 0, 0,
	0, 167, 0, 0, 0, 0, 0, 0, 220, 0,
	356, 357, 196, 374, 0, 0, 169, 0, 0, 275,
	282, 274, 0, 352, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 213, 227, 296, 251, 297, 228, 270,
	269, 271, 252, 0, 0, 164, 0, 334, 0, 0,
	338, 180, 0, 0, 347, 143, 302, 181, 219, 211,
	295, 273, 174, 230, 332, 242, 250, 0, 0, 286,
	310, 185, 362, 331, 207, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 152, 153, 0, 0,
	0, 192, 131, 0, 0, 0, 132, 0, 0, 133,
	134, 0, 0, 0, 0, 135, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 292, 165, 175, 184, 202, 200, 212, 239, 261,
	266, 291, 321, 326, 341, 342, 343, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 159, 170, 246, 0,
	304, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 363, 201, 0, 0, 0, 171, 179, 187, 199,
	209, 216, 226, 229, 233, 234, 236, 240, 253, 255,
	256, 257, 258, 276, 277, 280, 281, 284, 285, 288,
	289, 290, 293, 294, 300, 148, 306, 312, 313, 314,
	315, 316, 324, 325, 327, 328, 335, 354, 355, 368,
	369, 344, 0, 156, 0, 0, 162, 0, 0, 0,
	0, 0, 283, 161, 0, 0, 0, 0, 0, 0,
	0, 205, 0, 0, 0, 0, 0, 0, 0, 204,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 0, 945, 366, 333, 267, 948, 947,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2813, 0, 0, 0,
	0, 0, 0, 0, 0, 137, 0, 0, 0, 0,
	946, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 208, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 361, 0, 0,
	0, 0, 299, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 0, 0, 0, 237, 154, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 155, 0,
	0, 0, 279, 0, 0, 142, 158, 247, 0, 0,
	0, 195, 0, 309, 0, 360, 944, 0, 308, 249,
	353, 0, 0, 359, 0, 340, 367, 371, 215, 0,
	186, 330, 206, 203, 0, 0, 0, 223, 298, 198,
	241, 0, 0, 0, 191, 0, 0, 0, 329, 350,
	160, 264, 351, 370, 177, 345, 265, 272, 188, 190,
	189, 172, 323, 349, 182, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 224, 0, 0, 364,
	144, 318, 317, 0, 231, 0, 145, 136, 305, 146,
	238, 163, 0, 373, 176, 243, 346, 943, 218, 278,
	197, 0, 287, 0, 157, 301, 260, 262, 259, 263,
	221, 140, 147, 0, 303, 320, 348, 178, 336, 138,
	139, 141, 149, 311, 150, 151, 0, 254, 210, 214,
	225, 235, 0, 307, 337, 365, 0, 173, 166, 339,
	358, 183, 319, 322, 372, 0, 168, 0, 0, 0,
	0, 0, 0, 0, 167, 0, 0, 0, 0, 0,
	0, 220, 0, 356, 357, 196, 374, 0, 0, 169,
	0, 0, 275, 282, 274, 0, 352, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 213, 227, 296, 251,
	297, 228, 270, 269, 271, 252, 0, 0, 164, 0,
	334, 0, 0, 338, 180, 0, 0, 347, 143, 302,
	181, 219, 211, 295, 273, 174, 230, 332, 242, 250,
	0, 0, 286, 310, 185, 362, 331, 207, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 152,
	153, 0, 0, 0, 192, 131, 0, 0, 0, 132,
	0, 0, 133, 134, 0, 0, 0, 0, 135, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 292, 165, 175, 184, 202, 200,
	212, 239, 261, 266, 291, 321, 326, 341, 342, 343,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 159,
	170, 246, 0, 304, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 363, 201, 0, 0, 0, 171,
	179, 187, 199, 209, 216, 226, 229, 233, 234, 236,
	240, 253, 255, 256, 257, 258, 276, 277, 280, 281,
	284, 285, 288, 289, 290, 293, 294, 300, 148, 306,
	312, 313, 314, 315, 316, 324, 325, 327, 328, 335,
	354, 355, 368, 369, 344, 0, 156, 0, 0, 162,
	0, 0, 0, 0, 0, 283, 161, 0, 0, 0,
	0, 0, 0, 0, 205, 0, 0, 0, 0, 0,
	0, 0, 204, 194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 0, 945, 366, 333,
	267, 948, 947, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2808,
	0, 0, 0, 0, 0, 0, 0, 0, 137, 0,
	0, 0, 0, 946, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	361, 0, 0, 0, 0, 299, 222, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 0, 0, 0,
	237, 154, 0, 0, 0, 0, 0, 0, 0, 245,
	0, 155, 0, 0, 0, 279, 0, 0, 142, 158,
	247, 0, 0, 0, 195, 0, 309, 0, 360, 944,
	0, 308, 249, 353, 0, 0, 359, 0, 340, 367,
	371, 215, 0, 186, 330, 206, 203, 0, 0, 0,
	223, 298, 198, 241, 0, 0, 0, 191, 0, 0,
	0, 329, 350, 160, 264, 351, 370, 177, 345, 265,
	272, 188, 190, 189, 172, 323, 349, 182, 193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 224,
	0, 0, 364, 144, 318, 317, 0, 231, 0, 145,
	136, 305, 146, 238, 163, 0, 373, 176, 243, 346,
	943, 218, 278, 197, 0, 287, 0, 157, 301, 260,
	262, 259, 263, 221, 140, 147, 0, 303, 320, 348,
	178, 336, 138, 139, 141, 149, 311, 150, 151, 0,
	254, 210, 214, 225, 235, 0, 307, 337, 365, 0,
	173, 166, 339, 358, 183, 319, 322, 372, 0, 168,
	0, 0, 0, 0, 0, 0, 0, 167, 0, 0,
	0, 0, 0, 0, 220, 0, 356, 357, 196, 374,
	0, 0, 169, 0, 0, 275, 282, 274, 0, 352,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 213,
	227, 296, 251, 297, 228, 270, 269, 271, 252, 0,
	0, 164, 0, 334, 0, 0, 338, 180, 0, 0,
	347, 143, 302, 181, 219, 211, 295, 273, 174, 230,
	332, 242, 250, 0, 0, 286, 310, 185, 362, 331,
	207, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 152, 153, 0, 0, 0, 192, 131, 0,
	0, 0, 132, 0, 0, 133, 134, 0, 0, 0,
	0, 135, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 292, 165, 175,
	184, 202, 200, 212, 239, 261, 266, 291, 321, 326,
	341, 342, 343, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 159, 170, 246, 0, 304, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 363, 201, 0,
	0, 0, 171, 179, 187, 199, 209, 216, 226, 229,
	233, 234, 236, 240, 253, 255, 256, 257, 258, 276,
	277, 280, 281, 284, 285, 288, 289, 290, 293, 294,
	300, 148, 306, 312, 313, 314, 315, 316, 324, 325,
	327, 328, 335, 354, 355, 368, 369, 0, 0, 156,
	36, 344, 162, 0, 0, 0, 0, 0, 0, 161,
	0, 0, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 205, 0, 0, 0, 0, 0, 0, 0, 204,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2310, 248, 0, 0, 366, 333, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 77, 0, 0, 0, 1964, 0, 0, 0,
	0, 0, 0, 0, 0, 137, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 208, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 361, 0, 0,
	0, 0, 299, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 0, 0, 0, 237, 154, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 155, 0,
	0, 0, 279, 0, 0, 142, 158, 247, 0, 0,
	0, 195, 0, 309, 0, 360, 0, 0, 308, 249,
	353, 0, 0, 359, 0, 340, 367, 371, 215, 0,
	186, 330, 206, 203, 0, 0, 0, 223, 298, 198,
	241, 0, 0, 0, 191, 0, 0, 0, 329, 350,
	160, 264, 351, 370, 177, 345, 265, 272, 188, 190,
	189, 172, 323, 349, 182, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 224, 0, 0, 364,
	144, 318, 317, 0, 231, 0, 145, 136, 305, 146,
	238, 163, 0, 373, 176, 243, 346, 128, 218, 278,
	197, 0, 287, 0, 157, 301, 260, 262, 259, 263,
	221, 140, 147, 0, 303, 320, 348, 178, 336, 138,
	139, 141, 149, 311, 150, 151, 0, 254, 210, 214,
	225, 235, 0, 307, 337, 365, 0, 173, 166, 339,
	358, 183, 319, 322, 372, 0, 168, 0, 0, 0,
	0, 0, 0, 0, 167, 0, 0, 0, 0, 0,
	0, 220, 0, 356, 357, 196, 374, 0, 0, 169,
	0, 0, 275, 282, 274, 0, 352, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 213, 227, 296, 251,
	297, 228, 270, 269, 271, 252, 0, 0, 164, 0,
	334, 0, 0, 338, 180, 0, 0, 347, 143, 302,
	181, 219, 211, 295, 273, 174, 230, 332, 242, 250,
	0, 0, 286, 310, 185, 362, 331, 207, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 152,
	153, 0, 0, 0, 192, 131, 0, 0, 0, 132,
	0, 0, 133, 134, 0, 0, 0, 0, 135, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1965, 292, 165, 175, 184, 202, 200,
	212, 239, 261, 266, 291, 321, 326, 341, 342, 343,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 159,
	170, 246, 478, 304, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 363, 201, 0, 0, 0, 171,
	179, 187, 199, 209, 216, 226, 229, 233, 234, 236,
	240, 253, 255, 256, 257, 258, 276, 277, 280, 281,
	284, 285, 288, 289, 290, 293, 294, 300, 148, 306,
	312, 313, 314, 315, 316, 324, 325, 327, 328, 335,
	354, 355, 368, 369, 344, 0, 156, 0, 0, 162,
	0, 0, 0, 0, 0, 283, 161, 0, 0, 0,
	0, 0, 0, 0, 205, 0, 0, 0, 0, 0,
	0, 0, 204, 194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 0, 0, 366, 333,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 129,
	0, 0, 0, 0, 0, 0, 0, 0, 137, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	361, 0, 0, 0, 0, 299, 222, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 0, 0, 0,
	237, 154, 0, 0, 0, 0, 0, 0, 0, 245,
	0, 155, 0, 0, 0, 279, 0, 0, 142, 158,
	247, 0, 0, 0, 195, 0, 309, 0, 360, 2112,
	0, 308, 249, 353, 0, 0, 359, 0, 340, 367,
	371, 215, 0, 186, 330, 206, 203, 0, 0, 0,
	223, 298, 198, 241, 0, 0, 0, 191, 0, 0,
	0, 329, 350, 160, 264, 351, 370, 177, 345, 265,
	272, 188, 190, 189, 172, 323, 349, 182, 193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 224,
	0, 0, 364, 144, 318, 317, 0, 231, 0, 145,
	136, 305, 146, 238, 163, 0, 373, 176, 243, 346,
	128, 218, 278, 197, 0, 287, 0, 157, 301, 260,
	262, 259, 263, 221, 140, 147, 0, 303, 320, 348,
	178, 336, 138, 139, 141, 149, 311, 150, 151, 0,
	254, 210, 214, 225, 235, 0, 307, 337, 365, 0,
	173, 166, 339, 358, 183, 319, 322, 372, 0, 168,
	0, 0, 0, 0, 0, 0, 0, 167, 0, 0,
	0, 0, 0, 0, 220, 0, 356, 357, 196, 374,
	0, 0, 169, 0, 0, 275, 282, 274, 0, 352,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 213,
	227, 296, 251, 297, 228, 270, 269, 271, 252, 0,
	0, 164, 0, 334, 0, 0, 338, 180, 0, 0,
	347, 143, 302, 181, 219, 211, 295, 273, 174, 230,
	332, 242, 250, 0, 0, 286, 310, 185, 362, 331,
	207, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 152, 153, 0, 0, 0, 192, 131, 0,
	0, 0, 132, 0, 0, 133, 134, 0, 0, 0,
	0, 135, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 292, 165, 175,
	184, 202, 200, 212, 239, 261, 266, 291, 321, 326,
	341, 342, 343, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 159, 170, 246, 0, 304, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 363, 201, 0,
	0, 0, 171, 179, 187, 199, 209, 216, 226, 229,
	233, 234, 236, 240, 253, 255, 256, 257, 258, 276,
	277, 280, 281, 284, 285, 288, 289, 290, 293, 294,
	300, 148, 306, 312, 313, 314, 315, 316, 324, 325,
	327, 328, 335, 354, 355, 368, 369, 344, 0, 156,
	0, 0, 162, 0, 0, 0, 0, 0, 283, 161,
	0, 0, 0, 0, 0, 0, 0, 205, 0, 0,
	0, 0, 0, 0, 0, 204, 194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 0,
	0, 366, 333, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 129, 0, 0, 0, 0, 0, 0, 0,
	0, 137, 0, 0, 0, 0, 0, 1951, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 208,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 361, 0, 0, 0, 0, 299, 222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	0, 0, 0, 237, 154, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 155, 0, 0, 0, 279, 0,
	0, 142, 158, 247, 0, 0, 0, 195, 0, 309,
	0, 360, 0, 0, 308, 249, 353, 0, 0, 359,
	0, 340, 367, 371, 215, 0, 186, 330, 206, 203,
	0, 0, 0, 223, 298, 198, 241, 0, 0, 0,
	191, 0, 0, 0, 329, 350, 160, 264, 351, 370,
	177, 345, 265, 272, 188, 190, 189, 172, 323, 349,
	182, 193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 224, 0, 0, 364, 144, 318, 317, 0,
	231, 0, 145, 136, 305, 146, 238, 163, 0, 373,
	176, 243, 346, 128, 218, 278, 197, 0, 287, 0,
	157, 301, 260, 262, 259, 263, 221, 140, 147, 0,
	303, 320, 348, 178, 336, 138, 139, 141, 149, 311,
	150, 151, 0, 254, 210, 214, 225, 235, 0, 307,
	337, 365, 0, 173, 166, 339, 358, 183, 319, 322,
	372, 0, 168, 0, 0, 0, 0, 0, 0, 0,
	167, 0, 0, 0, 0, 0, 0, 220, 0, 356,
	357, 196, 374, 0, 0, 169, 0, 0, 275, 282,
	274, 0, 352, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 213, 227, 296, 251, 297, 228, 270, 269,
	271, 252, 0, 0, 164, 0, 334, 0, 0, 338,
	180, 0, 0, 347, 143, 302, 181, 219, 211, 295,
	273, 174, 230, 332, 242, 250, 0, 0, 286, 310,
	185, 362, 331, 207, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 152, 153, 0, 0, 0,
	192, 131, 0, 0, 0, 132, 0, 0, 133, 134,
	0, 0, 0, 0, 135, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	292, 165, 175, 184, 202, 200, 212, 239, 261, 266,
	291, 321, 326, 341, 342, 343, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 159, 170, 246, 0, 304,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	363, 201, 0, 0, 0, 171, 179, 187, 199, 209,
	216, 226, 229, 233, 234, 236, 240, 253, 255, 256,
	257, 258, 276, 277, 280, 281, 284, 285, 288, 289,
	290, 293, 294, 300, 148, 306, 312, 313, 314, 315,
	316, 324, 325, 327, 328, 335, 354, 355, 368, 369,
	344, 0, 156, 0, 1288, 162, 0, 0, 0, 0,
	0, 283, 161, 0, 0, 0, 0, 0, 0, 0,
	205, 0, 0, 0, 0, 0, 0, 0, 204, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 0, 0, 366, 333, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 129, 0, 0, 0, 0,
	0, 0, 0, 0, 137, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 208, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 361, 0, 0, 0,
	0, 299, 222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 0, 0, 0, 237, 154, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 155, 0, 0,
	0, 279, 0, 0, 142, 158, 247, 0, 0, 0,
	195, 0, 309, 0, 360, 0, 0, 308, 249, 353,
	0, 0, 359, 0, 340, 367, 371, 215, 0, 186,
	330, 206, 203, 0, 0, 0, 223, 298, 198, 241,
	0, 0, 0, 191, 0, 0, 0, 329, 350, 160,
	264, 351, 370, 177, 345, 265, 272, 188, 190, 189,
	172, 323, 349, 182, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 224, 0, 0, 364, 144,
	318, 317, 0, 231, 0, 145, 136, 305, 146, 238,
	163, 0, 373, 176, 243, 346, 128, 218, 278, 197,
	0, 287, 0, 157, 301, 260, 262, 259, 263, 221,
	140, 147, 0, 303, 320, 348, 178, 336, 138, 139,
	141, 149, 311, 150, 151, 0, 254, 210, 214, 225,
	235, 0, 307, 337, 365, 0, 173, 166, 339, 358,
	183, 319, 322, 372, 0, 168, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 0, 0, 0, 0, 0,
	220, 0, 356, 357, 196, 374, 0, 0, 169, 0,
	0, 275, 282, 274, 0, 352, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 213, 227, 296, 251, 297,
	228, 270, 269, 271, 252, 0, 0, 164, 0, 334,
	0, 0, 338, 180, 0, 0, 347, 143, 302, 181,
	219, 211, 295, 273, 174, 230, 332, 242, 250, 0,
	0, 286, 310, 185, 362, 331, 207, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 152, 153,
	0, 0, 0, 192, 131, 0, 0, 0, 132, 0,
	0, 133, 134, 0, 0, 0, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 292, 165, 175, 184, 202, 200, 212,
	239, 261, 266, 291, 321, 326, 341, 342, 343, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 159, 170,
	246, 0, 304, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 363, 201, 0, 0, 0, 171, 179,
	187, 199, 209, 216, 226, 229, 233, 234, 236, 240,
	253, 255, 256, 257, 258, 276, 277, 280, 281, 284,
	285, 288, 289, 290, 293, 294, 300, 148, 306, 312,
	313, 314, 315, 316, 324, 325, 327, 328, 335, 354,
	355, 368, 369, 344, 0, 156, 0, 0, 162, 0,
	0, 0, 0, 0, 283, 161, 0, 0, 0, 0,
	0, 0, 0, 205, 0, 0, 0, 0, 0, 0,
	0, 204, 194, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 0, 0, 366, 333, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 129, 0,
	0, 0, 0, 0, 0, 0, 0, 137, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 361,
	0, 0, 0, 0, 299, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 0, 123, 0, 237,
	154, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	155, 0, 0, 0, 279, 0, 0, 142, 158, 247,
	0, 0, 0, 195, 0, 309, 0, 360, 0, 0,
	308, 249, 353, 0, 0, 359, 0, 340, 367, 371,
	215, 0, 186, 330, 206, 203, 0, 0, 0, 223,
	298, 198, 241, 0, 0, 0, 191, 0, 0, 0,
	329, 350, 160, 264, 351, 370, 177, 345, 265, 272,
	188, 190, 189, 172, 323, 349, 182, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 224, 0,
	0, 364, 144, 318, 317, 0, 231, 0, 145, 136,
	305, 146, 238, 163, 0, 373, 176, 243, 346, 128,
	218, 278, 197, 0, 287, 0, 157, 301, 260, 262,
	259, 263, 221, 140, 147, 0, 303, 320, 348, 178,
	336, 138, 139, 141, 149, 311, 150, 151, 0, 254,
	210, 214, 225, 235, 0, 307, 337, 365, 0, 173,
	166, 339, 358, 183, 319, 322, 372, 0, 168, 0,
	0, 0, 0, 0, 0, 0, 167, 0, 0, 0,
	0, 0, 0, 220, 0, 356, 357, 196, 374, 0,
	0, 169, 0, 0, 275, 282, 274, 0, 352, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 213, 227,
	296, 251, 297, 228, 270, 269, 271, 252, 0, 0,
	164, 0, 334, 0, 0, 338, 180, 0, 0, 347,
	143, 302, 181, 219, 211, 295, 273, 174, 230, 332,
	242, 250, 0, 0, 286, 310, 185, 362, 331, 207,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 152, 153, 0, 0, 0, 192, 131, 0, 0,
	0, 132, 0, 0, 133, 134, 0, 0, 0, 0,
	135, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 292, 165, 175, 184,
	202, 200, 212, 239, 261, 266, 291, 321, 326, 341,
	342, 343, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 159, 170, 246, 0, 304, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 363, 201, 0, 0,
	0, 171, 179, 187, 199, 209, 216, 226, 229, 233,
	234, 236, 240, 253, 255, 256, 257, 258, 276, 277,
	280, 281, 284, 285, 288, 289, 290, 293, 294, 300,
	148, 306, 312, 313, 314, 315, 316, 324, 325, 327,
	328, 335, 354, 355, 368, 369, 344, 0, 156, 0,
	0, 162, 0, 0, 0, 0, 0, 283, 161, 0,
	0, 0, 0, 0, 0, 0, 205, 0, 0, 0,
	0, 0, 0, 0, 204, 194, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 0, 0,
	366, 333, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 129, 0, 0, 0, 0, 0, 0, 0, 0,
	137, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 361, 0, 0, 0, 0, 299, 222, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 0,
	0, 0, 237, 154, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 155, 0, 0, 0, 279, 0, 0,
	142, 158, 247, 0, 0, 0, 195, 0, 309, 0,
	360, 0, 0, 308, 249, 353, 0, 0, 359, 0,
	340, 367, 371, 215, 0, 186, 330, 206, 203, 0,
	0, 0, 223, 298, 198, 241, 0, 0, 0, 191,
	0, 0, 0, 329, 350, 160, 264, 351, 370, 177,
	345, 265, 272, 188, 190, 189, 172, 323, 349, 182,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 224, 0, 0, 364, 144, 318, 317, 0, 231,
	0, 145, 136, 305, 146, 238, 163, 0, 373, 176,
	243, 346, 128, 218, 278, 197, 0, 287, 0, 157,
	301, 260, 262, 259, 263, 221, 140, 147, 0, 303,
	320, 348, 178, 336, 138, 139, 141, 149, 311, 150,
	151, 0, 254, 210, 214, 225, 235, 0, 307, 337,
	365, 0, 173, 166, 339, 358, 183, 319, 322, 372,
	0, 168, 0, 0, 0, 0, 0, 0, 0, 167,
	0, 0, 0, 0, 0, 0, 220, 0, 356, 357,
	196, 374, 0, 0, 169, 0, 0, 275, 282, 274,
	0, 352, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 213, 227, 296, 251, 297, 228, 270, 269, 271,
	252, 0, 0, 164, 0, 334, 0, 0, 338, 180,
	0, 0, 347, 143, 302, 181, 219, 211, 295, 273,
	174, 230, 332, 242, 250, 0, 0, 286, 310, 185,
	362, 331, 207, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 152, 153, 0, 0, 0, 192,
	131, 0, 0, 0, 132, 0, 0, 133, 134, 0,
	0, 0, 0, 135, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 292,
	165, 175, 184, 202, 200, 212, 239, 261, 266, 291,
	321, 326, 341, 342, 343, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 159, 170, 246, 0, 304, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 363,
	201, 0, 0, 0, 171, 179, 187, 199, 209, 216,
	226, 229, 233, 234, 236, 240, 253, 255, 256, 257,
	258, 276, 277, 280, 281, 284, 285, 288, 289, 290,
	293, 294, 300, 148, 306, 312, 313, 314, 315, 316,
	324, 325, 327, 328, 335, 354, 355, 368, 369, 0,
	0, 156, 0, 0, 162, 444, 344, 438, 449, 432,
	0, 161, 0, 0, 0, 0, 0, 283, 0, 0,
	455, 0, 0, 0, 0, 0, 205, 0, 0, 439,
	0, 0, 0, 0, 204, 194, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 0, 0,
	366, 333, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 453, 0, 452, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 361, 0, 0, 0, 0, 299, 222, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 431, 430, 433, 0, 0, 0, 268, 0, 0,
	0, 437, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 155, 0, 0, 0, 279, 441, 0,
	0, 158, 247, 445, 0, 0, 195, 0, 309, 0,
	360, 0, 0, 308, 249, 353, 0, 448, 359, 0,
	340, 367, 371, 215, 0, 186, 330, 206, 203, 0,
	0, 0, 223, 298, 198, 241, 0, 0, 0, 191,
	0, 0, 0, 329, 350, 160, 264, 351, 370, 177,
	345, 265, 272, 188, 190, 189, 172, 323, 349, 182,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 224, 0, 0, 364, 0, 318, 317, 0, 231,
	0, 0, 0, 305, 0, 238, 163, 0, 373, 176,
	243, 346, 0, 218, 278, 197, 0, 287, 0, 157,
	301, 260, 262, 259, 263, 221, 0, 0, 0, 458,
	320, 348, 178, 336, 434, 435, 436, 442, 443, 446,
	447, 450, 254, 210, 214, 225, 235, 0, 307, 337,
	365, 0, 173, 166, 339, 358, 183, 319, 322, 372,
	0, 168, 0, 0, 0, 0, 0, 0, 0, 167,
	0, 0, 0, 0, 0, 0, 220, 0, 356, 357,
	196, 374, 0, 0, 169, 0, 0, 275, 282, 274,
	0, 352, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 213, 227, 296, 251, 297, 228, 270, 269, 271,
	252, 0, 0, 164, 0, 334, 0, 0, 338, 180,
	0, 0, 347, 0, 302, 181, 219, 211, 295, 273,
	174, 230, 332, 242, 250, 0, 0, 286, 310, 185,
	362, 331, 207, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 292,
	165, 175, 184, 202, 200, 212, 239, 261, 266, 291,
	321, 326, 341, 342, 343, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 159, 170, 246, 0, 304, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 363,
	201, 0, 0, 0, 171, 179, 187, 199, 209, 216,
	226, 229, 233, 234, 236, 240, 253, 255, 256, 257,
	258, 276, 277, 280, 281, 284, 285, 288, 289, 290,
	293, 294, 300, 440, 306, 312, 313, 314, 315, 316,
	324, 325, 327, 328, 335, 354, 355, 368, 369, 0,
	0, 156, 0, 0, 162, 444, 344, 438, 449, 432,
	0, 161, 0, 0, 0, 0, 0, 283, 0, 0,
	424, 0, 0, 0, 0, 0, 205, 0, 0, 439,
	0, 0, 0, 0, 204, 194, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 0, 0,
	366, 333, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 453, 0, 452, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 361, 0, 0, 0, 0, 299, 222, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 431, 430, 433, 0, 0, 0, 268, 0, 0,
	0, 437, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 155, 0, 0, 0, 279, 441, 0,
	0, 158, 247, 445, 0, 0, 195, 0, 309, 0,
	360, 0, 0, 308, 249, 353, 0, 448, 359, 0,
	340, 367, 371, 215, 0, 186, 330, 206, 203, 0,
	0, 0, 223, 298, 198, 241, 0, 0, 0, 191,
	0, 0, 0, 329, 350, 160, 264, 351, 370, 177,
	345, 265, 272, 188, 190, 189, 172, 323, 349, 182,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 224, 0, 0, 364, 0, 318, 317, 0, 231,
	0, 0, 0, 305, 0, 238, 163, 0, 373, 176,
	243, 346, 0, 218, 278, 197, 0, 287, 0, 157,
	301, 260, 262, 259, 263, 221, 0, 0, 0, 427,
	320, 348, 178, 336, 434, 435, 436, 442, 443, 446,
	447, 450, 254, 210, 214, 225, 235, 0, 307, 337,
	365, 0, 173, 166, 339, 358, 183, 319, 322, 372,
	0, 168, 0, 0, 0, 0, 0, 0, 0, 167,
	0, 0, 0, 0, 0, 0, 220, 0, 356, 357,
	196, 374, 0, 0, 169, 0, 0, 275, 282, 274,
	0, 352, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 213, 227, 296, 251, 297, 228, 270, 269, 271,
	252, 0, 0, 164, 0, 334, 0, 0, 338, 180,
	0, 0, 347, 0, 302, 181, 219, 211, 295, 273,
	174, 230, 332, 242, 250, 0, 0, 286, 310, 185,
	362, 331, 207, 0, 0, 0, 0, 0, 0, 0,
	0, 344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 283, 0, 0, 0, 0, 0, 0, 192,
	0, 205, 0, 0, 0, 0, 0, 0, 0, 204,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 0, 0, 366, 333, 267, 0, 292,
	165, 175, 184, 202, 200, 212, 239, 261, 266, 291,
	321, 326, 341, 342, 343, 0, 941, 0, 0, 0,
	0, 0, 0, 0, 159, 170, 246, 0, 304, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 208, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 361, 0, 0,
	0, 0, 299, 222, 1173, 1172, 1182, 1183, 1175, 1176,
	1177, 1178, 1179, 1180, 1181, 1174, 0, 0, 1184, 363,
	201, 0, 0, 0, 171, 179, 187, 199, 209, 216,
	226, 229, 233, 234, 236, 240, 253, 255, 256, 257,
	258, 276, 277, 280, 281, 284, 285, 288, 289, 290,
	293, 294, 300, 440, 306, 312, 313, 314, 315, 316,
	324, 325, 327, 328, 335, 354, 355, 368, 369, 0,
	0, 156, 268, 0, 162, 0, 0, 237, 0, 0,
	0, 161, 0, 0, 0, 0, 245, 0, 155, 0,
	0, 0, 279, 0, 0, 0, 158, 247, 0, 0,
	0, 195, 0, 309, 0, 360, 0, 0, 308, 249,
	353, 0, 0, 359, 0, 340, 367, 371, 215, 0,
	186, 330, 206, 203, 0, 0, 0, 223, 298, 198,
	241, 0, 0, 0, 191, 0, 0, 0, 329, 350,
	160, 264, 351, 370, 177, 345, 265, 272, 188, 190,
	189, 172, 323, 349, 182, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 224, 0, 0, 364,
	0, 318, 317, 0, 231, 0, 0, 0, 305, 0,
	238, 163, 0, 373, 176, 243, 346, 0, 218, 278,
	197, 0, 287, 0, 157, 301, 260, 262, 259, 263,
	221, 0, 0, 0, 303, 320, 348, 178, 336, 0,
	0, 0, 0, 311, 0, 0, 0, 254, 210, 214,
	225, 235, 0, 307, 337, 365, 0, 173, 166, 339,
	358, 183, 319, 322, 372, 0, 168, 0, 0, 0,
	0, 0, 0, 0, 167, 0, 0, 0, 0, 0,
	0, 220, 0, 356, 357, 196, 374, 0, 0, 169,
	0, 0, 275, 282, 274, 0, 352, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 213, 227, 296, 251,
	297, 228, 270, 269, 271, 252, 0, 0, 164, 0,
	334, 0, 0, 338, 180, 0, 0, 347, 0, 302,
	181, 219, 211, 295, 273, 174, 230, 332, 242, 250,
	0, 0, 286, 310, 185, 362, 331, 207, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 292, 165, 175, 184, 202, 200,
	212, 239, 261, 266, 291, 321, 326, 341, 342, 343,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 159,
	170, 246, 0, 304, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 363, 201, 0, 0, 0, 171,
	179, 187, 199, 209, 216, 226, 229, 233, 234, 236,
	240, 253, 255, 256, 257, 258, 276, 277, 280, 281,
	284, 285, 288, 289, 290, 293, 294, 300, 0, 306,
	312, 313, 314, 315, 316, 324, 325, 327, 328, 335,
	354, 355, 368, 369, 344, 0, 156, 0, 0, 162,
	0, 0, 0, 0, 0, 283, 161, 0, 0, 0,
	2315, 0, 0, 0, 205, 0, 0, 0, 0, 0,
	0, 0, 204, 194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 0, 0, 366, 333,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2317, 2319, 0, 0, 0, 0, 0, 0, 129,
	0, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	361, 2313, 0, 0, 0, 299, 222, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 0, 0, 0,
	237, 0, 0, 2318, 0, 0, 0, 0, 0, 245,
	0, 155, 0, 0, 0, 279, 0, 0, 0, 158,
	247, 0, 0, 0, 195, 0, 309, 0, 360, 0,
	0, 308, 249, 353, 0, 0, 359, 0, 340, 367,
	371, 215, 0, 186, 330, 206, 203, 0, 0, 0,
	223, 298, 198, 241, 0, 0, 0, 191, 0, 0,
	0, 329, 350, 160, 264, 351, 370, 177, 345, 265,
	272, 188, 190, 189, 172, 323, 349, 182, 193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 224,
	0, 0, 364, 0, 318, 317, 0, 231, 0, 0,
	0, 305, 0, 238, 163, 0, 373, 176, 243, 346,
	0, 218, 278, 197, 0, 287, 0, 157, 301, 260,
	262, 259, 263, 221, 0, 0, 0, 303, 320, 348,
	178, 336, 0, 0, 0, 0, 311, 0, 0, 0,
	254, 210, 214, 225, 235, 0, 307, 337, 365, 0,
	173, 166, 339, 358, 183, 319, 322, 372, 0, 168,
	0, 0, 0, 0, 0, 0, 0, 167, 0, 0,
	0, 0, 0, 0, 220, 0, 356, 357, 196, 374,
	0, 0, 169, 0, 0, 275, 282, 274, 0, 352,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 213,
	227, 296, 251, 297, 228, 270, 269, 271, 252, 0,
	0, 164, 0, 334, 0, 0, 338, 180, 0, 0,
	347, 0, 302, 181, 219, 211, 295, 273, 174, 230,
	332, 242, 250, 0, 0, 286, 310, 185, 362, 331,
	207, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 131, 0,
	0, 0, 132, 0, 0, 133, 134, 0, 0, 0,
	0, 135, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 292, 165, 175,
	184, 202, 200, 212, 239, 261, 266, 291, 321, 326,
	341, 342, 343, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 159, 170, 246, 0, 304, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 363, 201, 0,
	0, 0, 171, 179, 187, 199, 209, 216, 226, 229,
	233, 234, 236, 240, 253, 255, 256, 257, 258, 276,
	277, 280, 281, 284, 285, 288, 289, 290, 293, 294,
	300, 0, 306, 312, 313, 314, 315, 316, 324, 325,
	327, 328, 335, 354, 355, 368, 369, 344, 0, 156,
	0, 0, 162, 0, 0, 0, 0, 0, 283, 161,
	0, 0, 0, 2315, 0, 0, 0, 205, 0, 0,
	0, 0, 0, 0, 0, 204, 194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 0,
	0, 366, 333, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2317, 2319, 0, 0, 0, 0,
	0, 0, 129, 0, 470, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 208,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 361, 0, 0, 0, 0, 299, 222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	0, 0, 0, 237, 0, 0, 2318, 0, 0, 0,
	0, 0, 245, 0, 155, 0, 0, 0, 279, 0,
	0, 0, 158, 247, 0, 0, 0, 195, 0, 309,
	0, 360, 0, 0, 308, 249, 353, 0, 0, 359,
	0, 340, 367, 371, 215, 0, 186, 330, 206, 203,
	0, 0, 0, 223, 298, 198, 241, 0, 0, 0,
	191, 0, 0, 0, 329, 350, 160, 264, 351, 370,
	177, 345, 265, 272, 188, 190, 189, 172, 323, 349,
	182, 193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 224, 0, 0, 364, 0, 318, 317, 0,
	231, 0, 0, 0, 305, 0, 238, 163, 0, 373,
	176, 243, 346, 0, 218, 278, 197, 0, 287, 0,
	157, 301, 260, 262, 259, 263, 221, 0, 0, 0,
	303, 320, 348, 178, 336, 0, 0, 0, 0, 311,
	0, 0, 0, 254, 210, 214, 225, 235, 0, 307,
	337, 365, 0, 173, 166, 339, 358, 183, 319, 322,
	372, 0, 168, 0, 0, 0, 0, 0, 0, 0,
	167, 0, 0, 0, 0, 0, 0, 220, 0, 356,
	357, 196, 374, 0, 0, 169, 0, 0, 275, 282,
	274, 0, 352, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 213, 227, 296, 251, 297, 228, 270, 269,
	271, 252, 0, 0, 164, 0, 334, 0, 0, 338,
	180, 0, 0, 347, 0, 302, 181, 219, 211, 295,
	273, 174, 230, 332, 242, 250, 0, 0, 286, 310,
	185, 362, 331, 207, 0, 0, 0, 0, 0, 0,
	0, 0, 344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 283, 0, 0, 0, 0, 0, 0,
	192, 131, 205, 0, 0, 132, 0, 0, 133, 134,
	204, 194, 0, 0, 135, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 0, 0, 366, 333, 267, 0,
	292, 165, 175, 184, 202, 200, 212, 239, 261, 266,
	291, 321, 326, 341, 342, 343, 0, 129, 0, 470,
	0, 0, 0, 0, 0, 159, 170, 246, 0, 304,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 208, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 361, 0,
	0, 0, 0, 299, 222, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	363, 201, 0, 0, 0, 171, 179, 187, 199, 209,
	216, 226, 229, 233, 234, 236, 240, 253, 255, 256,
	257, 258, 276, 277, 280, 281, 284, 285, 288, 289,
	290, 293, 294, 300, 0, 306, 312, 313, 314, 315,
	316, 324, 325, 327, 328, 335, 354, 355, 368, 369,
	0, 0, 156, 268, 0, 162, 0, 0, 237, 0,
	0, 0, 161, 0, 0, 0, 0, 245, 0, 155,
	0, 0, 0, 279, 0, 0, 0, 158, 247, 0,
	0, 0, 195, 0, 309, 0, 360, 0, 0, 308,
	249, 353, 0, 0, 359, 0, 340, 367, 371, 215,
	0, 186, 330, 206, 203, 0, 0, 0, 223, 298,
	198, 241, 0, 0, 0, 191, 0, 0, 0, 329,
	350, 160, 264, 351, 370, 177, 345, 265, 272, 188,
	190, 189, 172, 323, 349, 182, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 224, 0, 0,
	364, 0, 318, 317, 0, 231, 0, 0, 0, 305,
	0, 238, 163, 0, 373, 176, 243, 346, 0, 218,
	278, 197, 0, 287, 0, 157, 301, 260, 262, 259,
	263, 221, 0, 0, 0, 303, 320, 348, 178, 336,
	0, 0, 0, 0, 311, 0, 0, 0, 254, 210,
	214, 225, 235, 0, 307, 337, 365, 0, 173, 166,
	339, 358, 183, 319, 322, 372, 0, 168, 0, 0,
	0, 0, 0, 0, 0, 167, 0, 0, 0, 0,
	0, 0, 220, 0, 356, 357, 196, 374, 0, 0,
	169, 0, 0, 275, 282, 274, 0, 352, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 213, 227, 296,
	251, 297, 228, 270, 269, 271, 252, 0, 0, 164,
	0, 334, 0, 0, 338, 180, 0, 0, 347, 0,
	302, 181, 219, 211, 295, 273, 174, 230, 332, 242,
	250, 0, 0, 286, 310, 185, 362, 331, 207, 0,
	0, 0, 0, 0, 0, 0, 0, 344, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 283, 0,
	0, 0, 0, 3447, 0, 192, 131, 205, 0, 0,
	132, 0, 0, 133, 134, 204, 194, 0, 0, 135,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 0,
	0, 366, 333, 267, 0, 292, 165, 175, 184, 202,
	200, 212, 239, 261, 266, 291, 321, 326, 341, 342,
	343, 0, 129, 0, 470, 0, 0, 0, 0, 0,
	159, 170, 246, 0, 304, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 208,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 361, 0, 0, 0, 0, 299, 222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 363, 201, 0, 0, 464,
	171, 179, 187, 199, 209, 216, 226, 229, 233, 234,
	236, 240, 253, 255, 256, 257, 258, 276, 277, 280,
	281, 284, 285, 288, 289, 290, 293, 294, 300, 0,
	306, 312, 313, 314, 315, 316, 324, 325, 327, 328,
	335, 354, 355, 368, 369, 0, 0, 156, 268, 0,
	162, 0, 0, 237, 0, 0, 0, 161, 0, 0,
	0, 0, 245, 0, 155, 0, 0, 0, 279, 0,
	0, 0, 158, 247, 0, 0, 0, 195, 0, 309,
	0, 360, 0, 0, 308, 249, 353, 0, 0, 359,
	0, 340, 367, 371, 215, 0, 186, 330, 206, 203,
	0, 0, 0, 223, 298, 198, 241, 0, 0, 0,
	191, 0, 0, 0, 329, 350, 160, 264, 351, 370,
	177, 345, 265, 272, 188, 190, 189, 172, 323, 349,
	182, 193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 224, 0, 0, 364, 0, 318, 317, 0,
	231, 0, 0, 0, 305, 0, 238, 163, 0, 373,
	176, 243, 346, 0, 218, 278, 197, 0, 287, 0,
	157, 301, 260, 262, 259, 263, 221, 0, 0, 0,
	303, 320, 348, 178, 336, 0, 0, 0, 0, 311,
	0, 0, 0, 254, 210, 214, 225, 235, 0, 307,
	337, 365, 0, 173, 166, 339, 358, 183, 319, 322,
	372, 0, 168, 0, 0, 0, 0, 0, 0, 0,
	167, 0, 0, 0, 0, 0, 0, 220, 0, 356,
	357, 196, 374, 0, 0, 169, 0, 0, 275, 282,
	274, 0, 352, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 213, 227, 296, 251, 297, 228, 270, 269,
	271, 252, 0, 0, 164, 0, 334, 0, 0, 338,
	180, 0, 0, 347, 0, 302, 181, 219, 211, 295,
	273, 174, 230, 332, 242, 250, 0, 0, 286, 310,
	185, 362, 331, 207, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 131, 0, 0, 0, 132, 0, 0, 133, 134,
	0, 0, 0, 0, 135, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	292, 165, 175, 184, 202, 200, 212, 239, 261, 266,
	291, 321, 326, 341, 342, 343, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 159, 170, 246, 0, 304,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	363, 201, 0, 0, 0, 171, 179, 187, 199, 209,
	216, 226, 229, 233, 234, 236, 240, 253, 255, 256,
	257, 258, 276, 277, 280, 281, 284, 285, 288, 289,
	290, 293, 294, 300, 0, 306, 312, 313, 314, 315,
	316, 324, 325, 327, 328, 335, 354, 355, 368, 369,
	344, 0, 156, 0, 0, 162, 0, 0, 0, 0,
	0, 283, 161, 0, 0, 0, 0, 0, 0, 0,
	205, 0, 0, 0, 0, 0, 2641, 0, 204, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 0, 0, 366, 333, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 129, 0, 470, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 208, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 361, 0, 0, 0,
	0, 299, 222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 0, 0, 0, 237, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 155, 0, 0,
	0, 279, 0, 0, 0, 158, 247, 0, 0, 0,
	195, 0, 309, 0, 360, 0, 0, 308, 249, 353,
	0, 0, 359, 0, 340, 367, 371, 215, 0, 186,
	330, 206, 203, 0, 0, 0, 223, 298, 198, 241,
	0, 0, 0, 191, 0, 0, 0, 329, 350, 160,
	264, 351, 370, 177, 345, 265, 272, 188, 190, 189,
	172, 323, 349, 182, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 224, 0, 0, 364, 0,
	318, 317, 0, 231, 0, 0, 0, 305, 0, 238,
	163, 0, 373, 176, 243, 346, 0, 218, 278, 197,
	0, 287, 0, 157, 301, 260, 262, 259, 263, 221,
	0, 0, 0, 303, 320, 348, 178, 336, 0, 0,
	0, 0, 311, 0, 0, 0, 254, 210, 214, 225,
	235, 0, 307, 337, 365, 0, 173, 166, 339, 358,
	183, 319, 322, 372, 0, 168, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 0, 0, 0, 0, 0,
	220, 0, 356, 357, 196, 374, 0, 0, 169, 0,
	0, 275, 282, 274, 0, 352, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 213, 227, 296, 251, 297,
	228, 270, 269, 271, 252, 0, 0, 164, 0, 334,
	0, 0, 338, 180, 0, 0, 347, 0, 302, 181,
	219, 211, 295, 273, 174, 230, 332, 242, 250, 0,
	0, 286, 310, 185, 362, 331, 207, 0, 0, 0,
	0, 0, 0, 0, 0, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 283, 0, 0, 0,
	0, 0, 0, 192, 131, 205, 0, 0, 132, 0,
	0, 133, 134, 204, 194, 0, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 0, 0, 366,
	333, 267, 0, 292, 165, 175, 184, 202, 200, 212,
	239, 261, 266, 291, 321, 326, 341, 342, 343, 0,
	129, 0, 470, 0, 0, 0, 0, 0, 159, 170,
	246, 0, 304, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 208, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 361, 0, 0, 0, 0, 299, 222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 363, 201, 0, 0, 0, 171, 179,
	187, 199, 209, 216, 226, 229, 233, 234, 236, 240,
	253, 255, 256, 257, 258, 276, 277, 280, 281, 284,
	285, 288, 289, 290, 293, 294, 300, 0, 306, 312,
	313, 314, 315, 316, 324, 325, 327, 328, 335, 354,
	355, 368, 369, 0, 0, 156, 268, 0, 162, 0,
	0, 237, 0, 0, 0, 161, 0, 0, 0, 0,
	245, 0, 155, 0, 0, 0, 279, 0, 0, 0,
	158, 247, 0, 0, 0, 195, 0, 309, 0, 360,
	0, 0, 308, 249, 353, 0, 0, 359, 0, 340,
	367, 371, 215, 0, 186, 330, 206, 203, 0, 0,
	0, 223, 298, 198, 241, 0, 0, 0, 191, 0,
	0, 0, 329, 350, 160, 264, 351, 370, 177, 345,
	265, 272, 188, 190, 189, 172, 323, 349, 182, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	224, 0, 0, 364, 0, 318, 317, 0, 231, 0,
	0, 0, 305, 0, 238, 163, 0, 373, 176, 243,
	346, 0, 218, 278, 197, 0, 287, 0, 157, 301,
	260, 262, 259, 263, 221, 0, 0, 0, 303, 320,
	348, 178, 336, 0, 0, 0, 0, 311, 0, 0,
	0, 254, 210, 214, 225, 235, 0, 307, 337, 365,
	0, 173, 166, 339, 358, 183, 319, 322, 372, 0,
	168, 0, 0, 0, 0, 0, 0, 0, 167, 0,
	0, 0, 0, 0, 0, 220, 0, 356, 357, 196,
	374, 0, 0, 169, 0, 0, 275, 282, 274, 0,
	352, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	213, 227, 296, 251, 297, 228, 270, 269, 271, 252,
	0, 0, 164, 0, 334, 0, 0, 338, 180, 0,
	0, 347, 0, 302, 181, 219, 211, 295, 273, 174,
	230, 332, 242, 250, 0, 0, 286, 310, 185, 362,
	331, 207, 0, 0, 0, 0, 0, 0, 0, 0,
	344, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 283, 0, 0, 0, 0, 0, 0, 192, 131,
	205, 0, 0, 132, 0, 0, 133, 134, 204, 194,
	0, 0, 135, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 0, 0, 366, 333, 267, 0, 292, 165,
	175, 184, 202, 200, 212, 239, 261, 266, 291, 321,
	326, 341, 342, 343, 0, 941, 0, 0, 0, 0,
	0, 0, 0, 159, 170, 246, 0, 304, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 208, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 361, 0, 0, 0,
	0, 299, 222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 363, 201,
	0, 0, 0, 171, 179, 187, 199, 209, 216, 226,
	229, 233, 234, 236, 240, 253, 255, 256, 257, 258,
	276, 277, 280, 281, 284, 285, 288, 289, 290, 293,
	294, 300, 0, 306, 312, 313, 314, 315, 316, 324,
	325, 327, 328, 335, 354, 355, 368, 369, 0, 0,
	156, 268, 0, 162, 0, 0, 237, 0, 0, 0,
	161, 0, 0, 0, 0, 245, 0, 155, 0, 0,
	0, 279, 0, 0, 0, 158, 247, 0, 0, 0,
	195, 0, 309, 0, 360, 0, 0, 308, 249, 353,
	0, 0, 359, 0, 340, 367, 371, 215, 0, 186,
	330, 206, 203, 0, 0, 0, 223, 298, 198, 241,
	0, 0, 0, 191, 0, 0, 0, 329, 350, 160,
	264, 351, 370, 177, 345, 265, 272, 188, 190, 189,
	172, 323, 349, 182, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 224, 0, 0, 364, 0,
	318, 317, 0, 231, 0, 0, 0, 305, 0, 238,
	163, 0, 373, 176, 243, 346, 0, 218, 278, 197,
	0, 287, 0, 157, 301, 260, 262, 259, 263, 221,
	0, 0, 0, 303, 320, 348, 178, 336, 0, 0,
	0, 0, 311, 0, 0, 0, 254, 210, 214, 225,
	235, 0, 307, 337, 365, 0, 173, 166, 339, 358,
	183, 319, 322, 372, 0, 168, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 0, 0, 0, 0, 0,
	220, 0, 356, 357, 196, 374, 0, 0, 169, 0,
	0, 275, 282, 274, 0, 352, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 213, 227, 296, 251, 297,
	228, 270, 269, 271, 252, 0, 0, 164, 0, 334,
	0, 0, 338, 180, 0, 0, 347, 0, 302, 181,
	219, 211, 295, 273, 174, 230, 332, 242, 250, 0,
	0, 286, 310, 185, 362, 331, 207, 0, 0, 0,
	0, 0, 0, 0, 0, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 283, 0, 0, 3408,
	0, 0, 0, 192, 131, 205, 3406, 0, 132, 0,
	0, 133, 134, 204, 194, 0, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 0, 0, 366,
	333, 267, 0, 292, 165, 175, 184, 202, 200, 212,
	239, 261, 266, 291, 321, 326, 341, 342, 343, 0,
	453, 0, 452, 0, 0, 0, 0, 0, 159, 170,
	246, 0, 304, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 208, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 361, 0, 0, 0, 0, 299, 222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 363, 201, 0, 0, 0, 171, 179,
	187, 199, 209, 216, 226, 229, 233, 234, 236, 240,
	253, 255, 256, 257, 258, 276, 277, 280, 281, 284,
	285, 288, 289, 290, 293, 294, 300, 0, 306, 312,
	313, 314, 315, 316, 324, 325, 327, 328, 335, 354,
	355, 368, 369, 0, 0, 156, 268, 0, 162, 0,
	0, 237, 0, 0, 0, 161, 0, 0, 0, 0,
	245, 0, 155, 0, 0, 0, 279, 0, 0, 0,
	158, 247, 0, 0, 0, 195, 0, 309, 0, 360,
	0, 0, 308, 249, 353, 0, 0, 359, 0, 340,
	367, 371, 215, 0, 186, 330, 206, 203, 0, 0,
	0, 223, 298, 198, 241, 0, 0, 0, 191, 0,
	0, 0, 329, 350, 160, 264, 351, 370, 177, 345,
	265, 272, 188, 190, 189, 172, 323, 349, 182, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	224, 0, 0, 364, 0, 318, 317, 0, 231, 0,
	3407, 0, 305, 0, 238, 163, 0, 373, 176, 243,
	346, 0, 218, 278, 197, 0, 287, 0, 157, 301,
	260, 262, 259, 263, 221, 0, 0, 0, 303, 320,
	348, 178, 336, 0, 0, 0, 0, 311, 0, 0,
	0, 254, 210, 214, 225, 235, 0, 307, 337, 365,
	0, 173, 166, 339, 358, 183, 319, 322, 372, 0,
	168, 0, 0, 0, 0, 0, 0, 0, 167, 0,
	0, 0, 0, 0, 0, 220, 0, 356, 357, 196,
	374, 0, 0, 169, 0, 0, 275, 282, 274, 0,
	352, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	213, 227, 296, 251, 297, 228, 270, 269, 271, 252,
	0, 0, 164, 0, 334, 0, 0, 338, 180, 0,
	0, 347, 0, 302, 181, 219, 211, 295, 273, 174,
	230, 332, 242, 250, 0, 0, 286, 310, 185, 362,
	331, 207, 0, 0, 0, 0, 0, 0, 0, 0,
	344, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 283, 0, 0, 0, 0, 0, 0, 192, 0,
	205, 0, 0, 0, 0, 0, 0, 0, 204, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 0, 0, 366, 333, 267, 0, 292, 165,
	175, 184, 202, 200, 212, 239, 261, 266, 291, 321,
	326, 341, 342, 343, 0, 941, 0, 0, 0, 0,
	0, 0, 0, 159, 170, 246, 0, 304, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 208, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2461, 0, 0, 361, 0, 0, 0,
	0, 299, 222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 363, 201,
	0, 0, 0, 171, 179, 187, 199, 209, 216, 226,
	229, 233, 234, 236, 240, 253, 255, 256, 257, 258,
	276, 277, 280, 281, 284, 285, 288, 289, 290, 293,
	294, 300, 0, 306, 312, 313, 314, 315, 316, 324,
	325, 327, 328, 335, 354, 355, 368, 369, 0, 0,
	156, 268, 0, 162, 0, 0, 237, 0, 0, 0,
	161, 0, 0, 0, 0, 245, 0, 155, 0, 0,
	0, 279, 0, 0, 0, 158, 247, 0, 0, 0,
	195, 0, 309, 0, 360, 0, 0, 308, 249, 353,
	0, 0, 359, 0, 340, 367, 371, 215, 0, 186,
	330, 206, 203, 0, 0, 0, 223, 298, 198, 241,
	2462, 2463, 0, 191, 0, 0, 0, 329, 350, 160,
	264, 351, 370, 177, 345, 265, 272, 188, 190, 189,
	172, 323, 349, 182, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 224, 0, 0, 364, 0,
	318, 317, 0, 231, 0, 0, 0, 305, 0, 238,
	163, 0, 373, 176, 243, 346, 0, 218, 278, 197,
	0, 287, 0, 157, 301, 260, 262, 259, 263, 221,
	0, 0, 0, 303, 320, 348, 178, 336, 0, 0,
	0, 0, 311, 0, 0, 0, 254, 210, 214, 225,
	235, 0, 307, 337, 365, 0, 173, 166, 339, 358,
	183, 319, 322, 372, 0, 168, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 0, 0, 0, 0, 0,
	220, 0, 356, 357, 196, 374, 0, 0, 169, 0,
	0, 275, 282, 274, 0, 352, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 213, 227, 296, 251, 297,
	228, 270, 269, 271, 252, 0, 0, 164, 0, 334,
	0, 0, 338, 180, 0, 0, 347, 0, 302, 181,
	219, 211, 295, 273, 174, 230, 332, 242, 250, 0,
	0, 286, 310, 185, 362, 331, 207, 0, 0, 0,
	0, 0, 0, 0, 0, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 283, 0, 0, 0,
	0, 0, 0, 192, 0, 205, 0, 0, 0, 0,
	0, 0, 0, 204, 194, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 0, 0, 366,
	333, 267, 0, 292, 165, 175, 184, 202, 200, 212,
	239, 261, 266, 291, 321, 326, 341, 342, 343, 0,
	453, 0, 452, 0, 0, 0, 0, 0, 159, 170,
	246, 0, 304, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 208, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 361, 0, 0, 0, 0, 299, 222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 363, 201, 0, 0, 0, 171, 179,
	187, 199, 209, 216, 226, 229, 233, 234, 236, 240,
	253, 255, 256, 257, 258, 276, 277, 280, 281, 284,
	285, 288, 289, 290, 293, 294, 300, 0, 306, 312,
	313, 314, 315, 316, 324, 325, 327, 328, 335, 354,
	355, 368, 369, 0, 0, 156, 268, 0, 162, 0,
	0, 237, 0, 0, 0, 161, 0, 0, 0, 0,
	245, 0, 155, 0, 0, 0, 279, 0, 0, 0,
	158, 247, 0, 0, 0, 195, 0, 309, 0, 360,
	0, 0, 308, 249, 353, 0, 0, 359, 0, 340,
	367, 371, 215, 0, 186, 330, 206, 203, 0, 0,
	0, 223, 298, 198, 241, 0, 0, 0, 191, 0,
	0, 0, 329, 350, 160, 264, 351, 370, 177, 345,
	265, 272, 188, 190, 189, 172, 323, 349, 182, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	224, 0, 0, 364, 0, 318, 317, 0, 231, 0,
	0, 0, 305, 0, 238, 163, 0, 373, 176, 243,
	346, 0, 218, 278, 197, 0, 287, 0, 157, 301,
	260, 262, 259, 263, 221, 0, 0, 0, 303, 320,
	348, 178, 336, 0, 0, 0, 0, 311, 0, 0,
	0, 254, 210, 214, 225, 235, 0, 307, 337, 365,
	0, 173, 166, 339, 358, 183, 319, 322, 372, 0,
	168, 0, 0, 0, 0, 0, 0, 0, 167, 0,
	0, 0, 0, 0, 0, 220, 0, 356, 357, 196,
	374, 0, 0, 169, 0, 0, 275, 282, 274, 0,
	352, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	213, 227, 296, 251, 297, 228, 270, 269, 271, 252,
	0, 0, 164, 0, 334, 0, 0, 338, 180, 0,
	0, 347, 0, 302, 181, 219, 211, 295, 273, 174,
	230, 332, 242, 250, 0, 0, 286, 310, 185, 362,
	331, 207, 0, 0, 0, 1724, 0, 0, 0, 0,
	344, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 283, 0, 0, 0, 0, 0, 0, 192, 0,
	205, 1304, 0, 0, 0, 0, 0, 0, 204, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 0, 0, 366, 333, 267, 0, 292, 165,
	175, 184, 202, 200, 212, 239, 261, 266, 291, 321,
	326, 341, 342, 343, 0, 941, 0, 1303, 0, 0,
	0, 0, 0, 159, 170, 246, 0, 304, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 208, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 361, 0, 0, 0,
	0, 299, 222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 363, 201,
	0, 0, 0, 171, 179, 187, 199, 209, 216, 226,
	229, 233, 234, 236, 240, 253, 255, 256, 257, 258,
	276, 277, 280, 281, 284, 285, 288, 289, 290, 293,
	294, 300, 0, 306, 312, 313, 314, 315, 316, 324,
	325, 327, 328, 335, 354, 355, 368, 369, 0, 0,
	156, 268, 0, 162, 0, 0, 237, 0, 0, 0,
	161, 0, 0, 0, 0, 245, 0, 155, 0, 0,
	0, 279, 0, 0, 0, 158, 247, 0, 0, 0,
	195, 0, 309, 0, 360, 0, 0, 308, 249, 353,
	0, 0, 359, 0, 340, 367, 371, 215, 0, 186,
	330, 206, 203, 0, 0, 0, 223, 298, 198, 241,
	0, 0, 0, 191, 0, 0, 0, 329, 350, 160,
	264, 351, 370, 177, 345, 265, 272, 188, 190, 189,
	172, 323, 349, 182, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 224, 0, 0, 364, 0,
	318, 317, 0, 231, 0, 0, 0, 305, 0, 238,
	163, 0, 373, 176, 243, 346, 0, 218, 278, 197,
	0, 287, 0, 157, 301, 260, 262, 259, 263, 221,
	0, 0, 0, 303, 320, 348, 178, 336, 0, 0,
	0, 0, 311, 0, 0, 0, 254, 210, 214, 225,
	235, 0, 307, 337, 365, 0, 173, 166, 339, 358,
	183, 319, 322, 372, 0, 168, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 0, 0, 0, 0, 0,
	220, 0, 356, 357, 196, 374, 0, 0, 169, 0,
	0, 275, 282, 274, 0, 352, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 213, 227, 296, 251, 297,
	228, 270, 269, 271, 252, 0, 0, 164, 0, 334,
	0, 0, 338, 180, 0, 0, 347, 0, 302, 181,
	219, 211, 295, 273, 174, 230, 332, 242, 250, 0,
	0, 286, 310, 185, 362, 331, 207, 0, 0, 0,
	0, 0, 0, 0, 0, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 283, 0, 0, 0,
	0, 0, 0, 192, 0, 205, 0, 0, 0, 0,
	0, 0, 0, 204, 194, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 0, 0, 366,
	333, 267, 0, 292, 165, 175, 184, 202, 200, 212,
	239, 261, 266, 291, 321, 326, 341, 342, 343, 0,
	453, 0, 452, 0, 0, 0, 0, 0, 159, 170,
	246, 0, 304, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 208, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 361, 0, 0, 0, 0, 299, 222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 363, 201, 0, 0, 0, 171, 179,
	187, 199, 209, 216, 226, 229, 233, 234, 236, 240,
	253, 255, 256, 257, 258, 276, 277, 280, 281, 284,
	285, 288, 289, 290, 293, 294, 300, 0, 306, 312,
	313, 314, 315, 316, 324, 325, 327, 328, 335, 354,
	355, 368, 369, 0, 0, 156, 268, 0, 162, 0,
	0, 237, 0, 0, 0, 161, 0, 0, 0, 0,
	245, 0, 155, 0, 0, 0, 279, 0, 0, 0,
	158, 247, 0, 0, 0, 195, 0, 309, 0, 360,
	0, 0, 308, 249, 353, 0, 0, 359, 0, 340,
	367, 371, 215, 0, 186, 330, 206, 203, 0, 0,
	0, 223, 298, 198, 241, 0, 0, 0, 191, 0,
	0, 0, 329, 350, 160, 264, 351, 370, 177, 345,
	265, 272, 188, 190, 189, 172, 323, 349, 182, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	224, 0, 0, 364, 0, 318, 317, 0, 231, 0,
	0, 0, 305, 0, 238, 163, 0, 373, 176, 243,
	346, 0, 218, 278, 197, 0, 287, 0, 157, 301,
	260, 262, 259, 263, 221, 0, 0, 0, 303, 320,
	348, 178, 336, 0, 0, 0, 0, 311, 0, 0,
	0, 254, 210, 214, 225, 235, 0, 307, 337, 365,
	0, 173, 166, 339, 358, 183, 319, 322, 372, 0,
	168, 0, 0, 0, 0, 0, 0, 0, 167, 0,
	0, 0, 0, 0, 0, 220, 0, 356, 357, 196,
	374, 0, 0, 169, 0, 0, 275, 282, 274, 0,
	352, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	213, 227, 296, 251, 297, 228, 270, 269, 271, 252,
	0, 0, 164, 0, 334, 0, 0, 338, 180, 0,
	0, 347, 0, 302, 181, 219, 211, 295, 273, 174,
	230, 332, 242, 250, 0, 0, 286, 310, 185, 362,
	331, 207, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 292, 165,
	175, 184, 202, 200, 212, 239, 261, 266, 291, 321,
	326, 341, 342, 343, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 159, 170, 246, 0, 304, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 363, 201,
	0, 0, 0, 171, 179, 187, 199, 209, 216, 226,
	229, 233, 234, 236, 240, 253, 255, 256, 257, 258,
	276, 277, 280, 281, 284, 285, 288, 289, 290, 293,
	294, 300, 0, 306, 312, 313, 314, 315, 316, 324,
	325, 327, 328, 335, 354, 355, 368, 369, 344, 0,
	156, 0, 0, 162, 0, 0, 0, 0, 0, 283,
	161, 0, 0, 0, 0, 0, 0, 0, 205, 0,
	0, 0, 0, 0, 0, 0, 204, 194, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	0, 0, 366, 333, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2799,
	0, 0, 0, 2801, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	208, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 361, 0, 0, 0, 0, 299,
	222, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 0, 0, 0, 237, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 0, 155, 0, 0, 0, 279,
	0, 0, 0, 158, 247, 0, 0, 0, 195, 0,
	309, 0, 360, 0, 0, 308, 249, 353, 0, 0,
	359, 0, 340, 367, 371, 215, 0, 186, 330, 206,
	203, 0, 0, 0, 223, 298, 198, 241, 0, 0,
	0, 191, 0, 0, 0, 329, 350, 160, 264, 351,
	370, 177, 345, 265, 272, 188, 190, 189, 172, 323,
	349, 182, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 224, 0, 0, 364, 0, 318, 317,
	0, 231, 0, 0, 0, 305, 0, 238, 163, 0,
	373, 176, 243, 346, 0, 218, 278, 197, 0, 287,
	0, 157, 301, 260, 262, 259, 263, 221, 0, 0,
	0, 303, 320, 348, 178, 336, 0, 0, 0, 0,
	311, 0, 0, 0, 254, 210, 214, 225, 235, 0,
	307, 337, 365, 0, 173, 166, 339, 358, 183, 319,
	322, 372, 0, 168, 0, 0, 0, 0, 0, 0,
	0, 167, 0, 0, 0, 0, 0, 0, 220, 0,
	356, 357, 196, 374, 0, 0, 169, 0, 0, 275,
	282, 274, 0, 352, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 213, 227, 296, 251, 297, 228, 270,
	269, 271, 252, 0, 0, 164, 0, 334, 0, 0,
	338, 180, 0, 0, 347, 0, 302, 181, 219, 211,
	295, 273, 174, 230, 332, 242, 250, 0, 0, 286,
	310, 185, 362, 331, 207, 0, 0, 0, 0, 0,
	0, 0, 0, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 283, 0, 0, 0, 0, 0,
	0, 192, 0, 205, 0, 0, 0, 0, 0, 0,
	0, 204, 194, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 0, 0, 366, 333, 267,
	0, 292, 165, 175, 184, 202, 200, 212, 239, 261,
	266, 291, 321, 326, 341, 342, 343, 0, 941, 0,
	0, 0, 0, 0, 0, 0, 159, 170, 246, 0,
	304, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 361,
	0, 0, 0, 0, 299, 222, 0, 0, 0, 0,
	0, 0, 2786, 0, 0, 0, 0, 0, 0, 0,
	0, 363, 201, 0, 0, 0, 171, 179, 187, 199,
	209, 216, 226, 229, 233, 234, 236, 240, 253, 255,
	256, 257, 258, 276, 277, 280, 281, 284, 285, 288,
	289, 290, 293, 294, 300, 0, 306, 312, 313, 314,
	315, 316, 324, 325, 327, 328, 335, 354, 355, 368,
	369, 0, 0, 156, 268, 0, 162, 0, 0, 237,
	0, 0, 0, 161, 0, 0, 0, 0, 245, 0,
	155, 0, 0, 0, 279, 0, 0, 0, 158, 247,
	0, 0, 0, 195, 0, 309, 0, 360, 0, 0,
	308, 249, 353, 0, 0, 359, 0, 340, 367, 371,
	215, 0, 186, 330, 206, 203, 0, 0, 0, 223,
	298, 198, 241, 0, 0, 0, 191, 0, 0, 0,
	329, 350, 160, 264, 351, 370, 177, 345, 265, 272,
	188, 190, 189, 172, 323, 349, 182, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 224, 0,
	0, 364, 0, 318, 317, 0, 231, 0, 0, 0,
	305, 0, 238, 163, 0, 373, 176, 243, 346, 0,
	218, 278, 197, 0, 287, 0, 157, 301, 260, 262,
	259, 263, 221, 0, 0, 0, 303, 320, 348, 178,
	336, 0, 0, 0, 0, 311, 0, 0, 0, 254,
	210, 214, 225, 235, 0, 307, 337, 365, 0, 173,
	166, 339, 358, 183, 319, 322, 372, 0, 168, 0,
	0, 0, 0, 0, 0, 0, 167, 0, 0, 0,
	0, 0, 0, 220, 0, 356, 357, 196, 374, 0,
	0, 169, 0, 0, 275, 282, 274, 0, 352, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 213, 227,
	296, 251, 297, 228, 270, 269, 271, 252, 0, 0,
	164, 0, 334, 0, 0, 338, 180, 0, 0, 347,
	0, 302, 181, 219, 211, 295, 273, 174, 230, 332,
	242, 250, 0, 0, 286, 310, 185, 362, 331, 207,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 292, 165, 175, 184,
	202, 200, 212, 239, 261, 266, 291, 321, 326, 341,
	342, 343, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 159, 170, 246, 0, 304, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 363, 201, 0, 0,
	0, 171, 179, 187, 199, 209, 216, 226, 229, 233,
	234, 236, 240, 253, 255, 256, 257, 258, 276, 277,
	280, 281, 284, 285, 288, 289, 290, 293, 294, 300,
	0, 306, 312, 313, 314, 315, 316, 324, 325, 327,
	328, 335, 354, 355, 368, 369, 344, 0, 156, 0,
	0, 162, 0, 0, 0, 0, 0, 283, 161, 0,
	0, 0, 0, 0, 0, 0, 205, 0, 0, 0,
	0, 0, 0, 0, 204, 194, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 0, 0,
	366, 333, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 77, 0, 0,
	0, 941, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 361, 0, 0, 0, 0, 299, 222, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 0,
	0, 0, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 155, 0, 0, 0, 279, 0, 0,
	0, 158, 247, 0, 0, 0, 195, 0, 309, 0,
	360, 0, 0, 308, 249, 353, 0, 0, 359, 0,
	340, 367, 371, 215, 0, 186, 330, 206, 203, 0,
	0, 0, 223, 298, 198, 241, 0, 0, 0, 191,
	0, 0, 0, 329, 350, 160, 264, 351, 370, 177,
	345, 265, 272, 188, 190, 189, 172, 323, 349, 182,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 224, 0, 0, 364, 0, 318, 317, 0, 231,
	0, 0, 0, 305, 0, 238, 163, 0, 373, 176,
	243, 346, 0, 218, 278, 197, 0, 287, 0, 157,
	301, 260, 262, 259, 263, 221, 0, 0, 0, 303,
	320, 348, 178, 336, 0, 0, 0, 0, 311, 0,
	0, 0, 254, 210, 214, 225, 235, 0, 307, 337,
	365, 0, 173, 166, 339, 358, 183, 319, 322, 372,
	0, 168, 0, 0, 0, 0, 0, 0, 0, 167,
	0, 0, 0, 0, 0, 0, 220, 0, 356, 357,
	196, 374, 0, 0, 169, 0, 0, 275, 282, 274,
	0, 352, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 213, 227, 296, 251, 297, 228, 270, 269, 271,
	252, 0, 0, 164, 0, 334, 0, 0, 338, 180,
	0, 0, 347, 0, 302, 181, 219, 211, 295, 273,
	174, 230, 332, 242, 250, 0, 0, 286, 310, 185,
	362, 331, 207, 0, 0, 0, 0, 0, 0, 0,
	0, 344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 283, 0, 0, 0, 0, 0, 0, 192,
	0, 205, 0, 0, 0, 0, 0, 0, 0, 204,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 0, 0, 366, 333, 267, 0, 292,
	165, 175, 184, 202, 200, 212, 239, 261, 266, 291,
	321, 326, 341, 342, 343, 0, 941, 0, 0, 0,
	0, 0, 0, 0, 159, 170, 246, 0, 304, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 208, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 361, 0, 0,
	0, 0, 299, 222, 0, 0, 0, 0, 0, 0,
	2156, 0, 0, 0, 0, 0, 0, 0, 0, 363,
	201, 0, 0, 0, 171, 179, 187, 199, 209, 216,
	226, 229, 233, 234, 236, 240, 253, 255, 256, 257,
	258, 276, 277, 280, 281, 284, 285, 288, 289, 290,
	293, 294, 300, 0, 306, 312, 313, 314, 315, 316,
	324, 325, 327, 328, 335, 354, 355, 368, 369, 0,
	0, 156, 268, 0, 162, 0, 0, 237, 0, 0,
	0, 161, 0, 0, 0, 0, 245, 0, 155, 0,
	0, 0, 279, 0, 0, 0, 158, 247, 0, 0,
	0, 195, 0, 309, 0, 360, 0, 0, 308, 249,
	353, 0, 0, 359, 0, 340, 367, 371, 215, 0,
	186, 330, 206, 203, 0, 0, 0, 223, 298, 198,
	241, 0, 0, 0, 191, 0, 0, 0, 329, 350,
	160, 264, 351, 370, 177, 345, 265, 272, 188, 190,
	189, 172, 323, 349, 182, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 224, 0, 0, 364,
	0, 318, 317, 0, 231, 0, 0, 0, 305, 0,
	238, 163, 0, 373, 176, 243, 346, 0, 218, 278,
	197, 0, 287, 0, 157, 301, 260, 262, 259, 263,
	221, 0, 0, 0, 303, 320, 348, 178, 336, 0,
	0, 0, 0, 311, 0, 0, 0, 254, 210, 214,
	225, 235, 0, 307, 337, 365, 0, 173, 166, 339,
	358, 183, 319, 322, 372, 0, 168, 0, 0, 0,
	0, 0, 0, 0, 167, 0, 0, 0, 0, 0,
	0, 220, 0, 356, 357, 196, 374, 0, 0, 169,
	0, 0, 275, 282, 274, 0, 352, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 213, 227, 296, 251,
	297, 228, 270, 269, 271, 252, 0, 0, 164, 0,
	334, 0, 0, 338, 180, 0, 0, 347, 0, 302,
	181, 219, 211, 295, 273, 174, 230, 332, 242, 250,
	0, 0, 286, 310, 185, 362, 331, 207, 0, 0,
	0, 0, 0, 0, 0, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 283, 0, 0,
	0, 0, 0, 0, 192, 0, 205, 0, 0, 0,
	0, 0, 0, 2193, 2194, 194, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 0, 0,
	366, 333, 267, 0, 292, 165, 175, 184, 202, 200,
	212, 239, 261, 266, 291, 321, 326, 341, 342, 343,
	0, 941, 0, 0, 0, 0, 0, 0, 0, 159,
	170, 246, 0, 304, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 361, 0, 0, 0, 0, 299, 222, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 363, 201, 0, 0, 0, 171,
	179, 187, 199, 209, 216, 226, 229, 233, 234, 236,
	240, 253, 255, 256, 257, 258, 276, 277, 280, 281,
	284, 285, 288, 289, 290, 293, 294, 300, 0, 306,
	312, 313, 314, 315, 316, 324, 325, 327, 328, 335,
	354, 355, 368, 369, 0, 0, 156, 268, 0, 162,
	0, 0, 237, 0, 0, 0, 161, 0, 0, 0,
	0, 245, 0, 155, 0, 0, 0, 279, 0, 0,
	0, 158, 247, 0, 0, 0, 195, 0, 309, 0,
	360, 0, 0, 308, 249, 353, 0, 0, 359, 0,
	340, 367, 371, 215, 0, 186, 330, 206, 203, 0,
	0, 0, 223, 298, 198, 241, 0, 0, 0, 191,
	0, 0, 0, 329, 350, 160, 264, 351, 370, 177,
	345, 265, 272, 188, 190, 189, 172, 323, 349, 182,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 224, 0, 0, 364, 0, 318, 317, 0, 231,
	0, 0, 0, 305, 0, 238, 163, 0, 373, 176,
	243, 346, 0, 218, 278, 197, 0, 287, 0, 157,
	301, 260, 262, 259, 263, 221, 0, 0, 0, 303,
	320, 348, 178, 336, 0, 0, 0, 0, 311, 0,
	0, 0, 254, 210, 214, 225, 235, 0, 307, 337,
	365, 0, 173, 166, 339, 358, 183, 319, 322, 372,
	0, 168, 0, 0, 0, 0, 0, 0, 0, 167,
	0, 0, 0, 0, 0, 0, 220, 0, 356, 357,
	196, 374, 0, 0, 169, 0, 0, 275, 282, 274,
	0, 352, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 213, 227, 296, 251, 297, 228, 270, 269, 271,
	252, 0, 0, 164, 0, 334, 0, 0, 338, 180,
	0, 0, 347, 0, 302, 181, 219, 211, 295, 273,
	174, 230, 332, 242, 250, 0, 0, 286, 310, 185,
	362, 331, 207, 0, 0, 0, 0, 0, 0, 0,
	0, 344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 283, 0, 0, 0, 0, 0, 0, 192,
	0, 205, 0, 0, 0, 0, 0, 0, 0, 204,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 0, 0, 366, 333, 267, 0, 292,
	165, 175, 184, 202, 200, 212, 239, 261, 266, 291,
	321, 326, 341, 342, 343, 0, 941, 0, 0, 0,
	0, 0, 0, 0, 159, 170, 246, 0, 304, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 208, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 361, 0, 0,
	0, 0, 299, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 363,
	201, 0, 0, 0, 171, 179, 187, 199, 209, 216,
	226, 229, 233, 234, 236, 240, 253, 255, 256, 257,
	258, 276, 277, 280, 281, 284, 285, 288, 289, 290,
	293, 294, 300, 0, 306, 312, 313, 314, 315, 316,
	324, 325, 327, 328, 335, 354, 355, 368, 369, 0,
	0, 156, 268, 0, 162, 0, 0, 237, 0, 0,
	0, 161, 0, 0, 0, 0, 245, 0, 155, 0,
	0, 0, 279, 0, 0, 0, 158, 247, 0, 0,
	0, 195, 0, 309, 0, 360, 0, 0, 308, 249,
	353, 0, 0, 359, 0, 340, 367, 371, 215, 0,
	186, 330, 206, 203, 0, 0, 0, 223, 298, 198,
	241, 0, 0, 0, 191, 0, 0, 0, 329, 350,
	160, 264, 351, 370, 177, 345, 265, 272, 188, 190,
	189, 172, 323, 349, 182, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 224, 0, 0, 364,
	0, 318, 317, 0, 231, 0, 0, 0, 305, 0,
	238, 163, 0, 373, 176, 243, 346, 0, 218, 278,
	197, 0, 287, 0, 157, 301, 260, 262, 259, 263,
	221, 0, 0, 0, 303, 320, 348, 178, 336, 0,
	0, 0, 0, 311, 0, 0, 0, 254, 210, 214,
	225, 235, 0, 307, 337, 365, 0, 173, 166, 339,
	358, 183, 319, 322, 372, 0, 168, 0, 0, 0,
	0, 0, 0, 0, 167, 0, 0, 0, 0, 0,
	0, 220, 0, 356, 357, 196, 374, 0, 0, 169,
	0, 0, 275, 282, 274, 0, 352, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 213, 227, 296, 251,
	297, 228, 270, 269, 271, 252, 0, 0, 164, 0,
	334, 0, 0, 338, 180, 0, 0, 347, 0, 302,
	181, 219, 211, 295, 273, 174, 230, 332, 242, 250,
	0, 0, 286, 310, 185, 362, 331, 207, 0, 0,
	0, 0, 0, 0, 0, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 283, 0, 0,
	0, 0, 0, 0, 192, 0, 205, 0, 0, 0,
	0, 0, 0, 0, 204, 194, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 0, 0,
	366, 333, 267, 0, 292, 165, 175, 184, 202, 200,
	212, 239, 261, 266, 291, 321, 326, 341, 342, 343,
	0, 2801, 0, 0, 0, 0, 0, 0, 0, 159,
	170, 246, 0, 304, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 361, 0, 0, 0, 0, 299, 222, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 363, 201, 0, 0, 0, 171,
	179, 187, 199, 209, 216, 226, 229, 233, 234, 236,
	240, 253, 255, 256, 257, 258, 276, 277, 280, 281,
	284, 285, 288, 289, 290, 293, 294, 300, 0, 306,
	312, 313, 314, 315, 316, 324, 325, 327, 328, 335,
	354, 355, 368, 369, 0, 0, 156, 268, 0, 162,
	0, 0, 237, 0, 0, 0, 161, 0, 0, 0,
	0, 245, 0, 155, 0, 0, 0, 279, 0, 0,
	0, 158, 247, 0, 0, 0, 195, 0, 309, 0,
	360, 0, 0, 308, 249, 353, 0, 0, 359, 0,
	340, 367, 371, 215, 0, 186, 330, 206, 203, 0,
	0, 0, 223, 298, 198, 241, 0, 0, 0, 191,
	0, 0, 0, 329, 350, 160, 264, 351, 370, 177,
	345, 265, 272, 188, 190, 189, 172, 323, 349, 182,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 224, 0, 0, 364, 0, 318, 317, 0, 231,
	0, 0, 0, 305, 0, 238, 163, 0, 373, 176,
	243, 346, 0, 218, 278, 197, 0, 287, 0, 157,
	301, 260, 262, 259, 263, 221, 0, 0, 0, 303,
	320, 348, 178, 336, 0, 0, 0, 0, 311, 0,
	0, 0, 254, 210, 214, 225, 235, 0, 307, 337,
	365, 0, 173, 166, 339, 358, 183, 319, 322, 372,
	0, 168, 0, 0, 0, 0, 0, 0, 0, 167,
	0, 0, 0, 0, 0, 0, 220, 0, 356, 357,
	196, 374, 0, 0, 169, 0, 0, 275, 282, 274,
	0, 352, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 213, 227, 296, 251, 297, 228, 270, 269, 271,
	252, 0, 0, 164, 0, 334, 0, 0, 338, 180,
	0, 0, 347, 0, 302, 181, 219, 211, 295, 273,
	174, 230, 332, 242, 250, 0, 0, 286, 310, 185,
	362, 331, 207, 0, 0, 0, 0, 0, 0, 0,
	0, 344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 283, 0, 0, 0, 0, 0, 0, 192,
	0, 205, 0, 0, 0, 0, 0, 0, 0, 204,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 0, 0, 366, 333, 267, 0, 292,
	165, 175, 184, 202, 200, 212, 239, 261, 266, 291,
	321, 326, 341, 342, 343, 0, 129, 0, 0, 0,
	0, 0, 0, 0, 159, 170, 246, 0, 304, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 208, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 361, 0, 0,
	0, 0, 299, 222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 363,
	201, 0, 0, 0, 171, 179, 187, 199, 209, 216,
	226, 229, 233, 234, 236, 240, 253, 255, 256, 257,
	258, 276, 277, 280, 281, 284, 285, 288, 289, 290,
	293, 294, 300, 0, 306, 312, 313, 314, 315, 316,
	324, 325, 327, 328, 335, 354, 355, 368, 369, 0,
	0, 156, 268, 0, 162, 0, 0, 237, 0, 0,
	0, 161, 0, 0, 0, 0, 245, 0, 155, 0,
	0, 0, 279, 0, 0, 0, 158, 247, 0, 0,
	0, 195, 0, 309, 0, 360, 0, 0, 308, 249,
	353, 0, 0, 359, 0, 340, 367, 371, 215, 0,
	186, 330, 206, 203, 0, 0, 0, 223, 298, 198,
	241, 0, 0, 0, 191, 0, 0, 0, 329, 350,
	160, 264, 351, 370, 177, 345, 265, 272, 188, 190,
	189, 172, 323, 349, 182, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 224, 0, 0, 364,
	0, 318, 317, 0, 231, 0, 0, 0, 305, 0,
	238, 163, 0, 373, 176, 243, 346, 0, 218, 278,
	197, 0, 287, 0, 157, 301, 260, 262, 259, 263,
	221, 0, 0, 0, 303, 320, 348, 178, 336, 0,
	0, 0, 0, 311, 0, 0, 0, 254, 210, 214,
	225, 235, 0, 307, 337, 365, 0, 173, 166, 339,
	358, 183, 319, 322, 372, 0, 168, 0, 0, 0,
	0, 0, 0, 0, 167, 0, 0, 0, 0, 0,
	0, 220, 0, 356, 357, 196, 374, 0, 0, 169,
	0, 0, 275, 282, 274, 0, 352, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 213, 227, 296, 251,
	297, 228, 270, 269, 271, 252, 0, 0, 164, 0,
	334, 0, 0, 338, 180, 0, 0, 347, 0, 302,
	181, 219, 211, 295, 273, 174, 230, 332, 242, 250,
	0, 0, 286, 310, 185, 362, 331, 207, 0, 0,
	0, 0, 0, 0, 0, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 283, 0, 0,
	0, 0, 0, 0, 192, 0, 205, 0, 0, 0,
	0, 0, 0, 0, 204, 194, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 0, 0,
	366, 333, 267, 0, 292, 165, 175, 184, 202, 200,
	212, 239, 261, 266, 291, 321, 326, 341, 342, 343,
	0, 494, 0, 0, 0, 0, 0, 0, 0, 159,
	170, 246, 0, 304, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 361, 0, 0, 0, 0, 299, 222, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 363, 201, 0, 0, 0, 171,
	179, 187, 199, 209, 216, 226, 229, 233, 234, 236,
	240, 253, 255, 256, 257, 258, 276, 277, 280, 281,
	284, 285, 288, 289, 290, 293, 294, 300, 0, 306,
	312, 313, 314, 315, 316, 324, 325, 327, 328, 335,
	354, 355, 368, 369, 0, 0, 156, 268, 0, 162,
	0, 0, 237, 0, 0, 0, 161, 0, 0, 0,
	0, 245, 0, 155, 0, 0, 0, 279, 0, 0,
	0, 158, 247, 0, 0, 0, 195, 0, 309, 0,
	360, 0, 0, 308, 249, 353, 0, 0, 359, 0,
	340, 367, 371, 215, 0, 186, 330, 206, 203, 0,
	0, 0, 223, 298, 198, 241, 0, 0, 0, 191,
	0, 0, 0, 329, 350, 160, 264, 351, 370, 177,
	345, 265, 272, 188, 190, 189, 172, 323, 349, 182,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 224, 0, 0, 364, 0, 318, 317, 0, 231,
	0, 0, 0, 305, 0, 238, 163, 0, 373, 176,
	243, 346, 0, 218, 278, 197, 0, 287, 0, 157,
	301, 260, 262, 259, 263, 221, 0, 0, 0, 303,
	320, 348, 178, 336, 0, 0, 0, 0, 311, 0,
	0, 0, 254, 210, 214, 225, 235, 0, 307, 337,
	365, 0, 173, 166, 339, 358, 183, 319, 322, 372,
	0, 168, 0, 0, 0, 0, 0, 0, 0, 167,
	0, 0, 0, 0, 0, 0, 220, 0, 356, 357,
	196, 374, 0, 0, 169, 0, 0, 275, 282, 274,
	0, 352, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 213, 227, 296, 251, 297, 228, 270, 269, 271,
	252, 0, 0, 164, 0, 334, 0, 0, 338, 180,
	0, 0, 347, 0, 302, 181, 219, 211, 295, 273,
	174, 230, 332, 242, 250, 0, 0, 286, 310, 185,
	362, 331, 207, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 36,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	0, 0, 0, 57, 0, 0, 0, 0, 0, 73,
	0, 0, 39, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 292,
	165, 175, 184, 202, 200, 212, 239, 261, 266, 291,
	321, 326, 341, 342, 343, 0, 0, 0, 0, 0,
	0, 77, 0, 0, 159, 170, 246, 0, 304, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 363,
	201, 0, 0, 0, 171, 179, 187, 199, 209, 216,
	226, 229, 233, 234, 236, 240, 253, 255, 256, 257,
	258, 276, 277, 280, 281, 284, 285, 288, 289, 290,
	293, 294, 300, 0, 306, 312, 313, 314, 315, 316,
	324, 325, 327, 328, 335, 354, 355, 368, 369, 0,
	0, 156, 0, 0, 162, 41, 69, 44, 43, 46,
	0, 161, 0, 0, 0, 0, 0, 0, 0, 0,
	3295, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 47, 72, 71,
	0, 0, 0, 0, 45, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 55, 56, 0, 3296, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 64, 0, 65, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 66,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3297, 70, 0,
	51, 52, 59, 0, 60, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 68,
}

var yyPact = [...]int{
	4499, -1000, -435, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2286, -1000, -1000, 308, -1000,
	1242, 1143, -1000, 360, 205, 32566, 774, 4136, 44444, -1000,
	-1000, -1000, 216, 621, 33179, 499, 498, 1689, 2160, 1688,
	64, -53, -56, 144, 34419, 33799, 33, -1000, 36515, 719,
	69, -1000, -1000, -1000, -1000, 2367, 224, -1000, -1000, 2266,
	2278, 2087, -1000, 6853, -1000, -1000, -1000, -1000, -1000, 20757,
	-1000, 2362, 33179, 27658, -1000, 768, 752, -147, 660, 660,
	602, 660, 660, 773, -1000, 393, 1168, -1000, -1000, -1000,
	-1000, 1159, 33179, 40608, 662, 43574, 662, 662, 662, 662,
	662, 662, 662, 33179, -1000, 846, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 33179, 1687, 2202, 1153, 112,
	-1000, -1000, -1000, 1196, -1000, 441, 438, 605, 430, 142,
	1214, 2263, -1000, 1883, 2266, 2266, -1000, -1000, -1000, -1000,
	-1000, -1000, 906, 364, 745, 226, 224, 1152, 2235, 2200,
	2198, 1433, 2197, 1264, 2196, 1972, -24, -1000, 1686, 33179,
	-1000, -1000, 1403, 1400, 372, 1841, 855, 2015, -1000, -1000,
	394, 658, 1963, 484, 1963, 1963, 1963, 1963, 1963, -62,
	1963, 1963, 1963, 107, 1963, 184, 1963, 1963, 1963, 1963,
	1963, 1732, -1000, -1000, -1000, 417, 1835, 1884, 2014, 615,
	-1000, -1000, -1000, 1961, 37998, 1899, -1000, 1883, -1000, -1000,
	-1000, 772, -1000, -100, 1961, 2249, 1649, -1000, 36515, 2182,
	1303, 13173, 2128, -1000, -1000, 1282, 2341, -1000, 27045, 845,
	-1000, 13173, 1587, 1883, -1000, -1000, 1883, -1000, 817, 918,
	-1000, 810, 836, -1000, -1000, 12541, 12541, 12541, 12541, 12541,
	12541, 12541, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1883, 841,
	840, 1883, 1883, 1883, 1883, 1883, -1000, 11277, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883,
	1883, 1883, 1883, 1883, 13173, 1883, 1883, 1883, 1883, 1883,
	1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883,
	1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883,
	1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883,
	1883, 1883, 1883, 1883, 1883, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 719, 719, 31953, 1911,
	-113, 20125, -1000, -1000, -1000, -1000, 18861, 40173, 1135, -1000,
	-1000, -1000, -1000, 2192, -1000, -1000, 839, 836, 817, 803,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2286, -1000,
	-1000, 1812, 655, -1000, 512, 512, 512, 512, 512, 300,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1968,
	43574, 33179, 304, 1685, 1243, 1684, 44879, 44879, -1000, 288,
	40608, 40608, 660, 316, 40608, 318, 1910, 743, 1909, 741,
	1449, 33179, 2226, 2013, 33179, 1682, 1666, 44879, 44879, 40608,
	40608, -1000, 25813, 1908, -1000, -1000, 1153, -1000, 1445, 13173,
	660, 660, 33179, 33179, 33179, 33179, 33179, -1000, -1000, 1153,
	1153, 1153, 1153, 1186, 2337, 1186, -1000, 1186, -1000, -1000,
	13173, -1000, 12541, 39738, 943, -1000, -1000, 44444, -1000, 1652,
	356, -1000, -1000, -1000, -1000, -1000, -1000, 1651, -1000, 2165,
	1264, 1264, -1000, 1580, 1264, 1893, -1000, 1130, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1264, -1000, 11909, -415, -1000, -1000, 1907, -1000, 276, -1000,
	-1000, 702, 2008, 702, 1331, 40608, 40608, 40608, -1000, 1963,
	43574, -1000, 1963, 1963, 1963, -65, 1963, 1963, -1000, -1000,
	1963, -1000, -1000, -1000, -1000, -1000, 1963, -1000, -1000, -1000,
	1963, 1963, -1000, 1963, 1963, -1000, -1000, -1000, -1000, -1000,
	40608, 702, 225, 1902, 702, 40608, 40608, -1000, 92, 91,
	90, 87, -1000, -1000, -1000, -1000, 85, 84, -1000, -1000,
	-1000, 1899, 37998, 2246, 15701, 33179, -103, -1000, -1000, 224,
	-1000, -1000, -1000, -1000, 1961, 1271, 2356, 1088, 1878, -1000,
	-1000, 1895, -1000, 1259, 835, 1443, 2090, -1000, -1000, -1000,
	33179, -1000, 13173, 13173, 13173, 1413, -1000, 28271, -1000, -1000,
	-1000, -1000, -1000, -1000, 16965, 1054, 12541, 1291, 1110, 12541,
	12541, 12541, 12541, 12541, 12541, 12541, 12541, 12541, 12541, 12541,
	12541, 12541, 12541, 12541, 1346, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1650, -1000, 224, 23917, 8117, 23917, 1599,
	1599, 43574, 915, 915, 915, 915, 915, 915, 34854, 2240,
	23285, 23917, 2240, 2240, 2240, 2240, 2240, 1649, 1809, 1150,
	36515, 11277, 8117, 8117, 8117, 1649, 13173, 13173, 8117, 8117,
	10645, 10013, 14437, 8117, 8117, 2240, 1177, 1150, 18861, 8117,
	-1000, -1000, 9381, -1000, -1000, -1000, -1000, -1000, 1649, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 43574, 43574, 8117,
	8117, 8117, 8117, 1649, 1649, 8117, 8117, 8117, 8117, 8117,
	1649, 1649, 1649, 1649, 8117, 8117, 8117, 8117, 8117, 8117,
	8117, 8117, 8117, 8117, 8117, 8117, 31340, 6191, 33179, 1839,
	1830, -1000, 834, 19493, 1888, -1000, -82, -108, -113, -1000,
	-1000, 919, -1000, -1000, -1000, 8749, -1000, 17597, 2266, 2087,
	3880, 26432, -1000, -1000, -33, -1000, -1000, -1000, 1951, -1000,
	1956, 317, 8, 1956, 1956, 1956, 1956, 1956, 7, 7,
	7, 7, 34, -1000, -1000, -1000, -1000, -1000, 1967, 1965,
	-1000, 1951, 1951, 1951, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1959, 336, 1955, 1955, 1955, 1955, 1955,
	-1000, -1000, -1000, -1000, 572, 572, 572, -1000, 13173, 1975,
	2242, 747, 316, 2212, 2223, 2212, 434, -1000, 833, 1964,
	-1000, 832, 420, 1865, -1000, 227, 1842, 30727, -1000, -1000,
	-1000, -1000, -1000, 33179, 33179, 40608, 40608, 40608, 643, -1000,
	33179, 1894, -1000, -1000, -1000, -1000, -1000, 1871, -1000, 1842,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 33179,
	-1000, -1000, 1579, 1150, 1648, 1630, 2235, -1000, -1000, -1000,
	1193, -1000, -1000, -1000, -1000, 1153, 44444, 44444, 33179, 2235,
	1153, 1150, 1446, 1976, 1883, 1649, -1000, -1000, -1000, 1629,
	-1000, 12541, 1893, 1893, -1000, 1893, 1264, 1599, 1893, -1000,
	1807, 1255, 1578, 33179, -1000, 37998, -25, -1000, -112, 42704,
	-1000, -1000, -1000, 702, 42704, -1000, 107, 164, -1000, 740,
	-1000, 1805, -1000, -1000, -1000, -1000, 1963, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 42704, 149, 207, 42704,
	1871, 2336, -1000, -1000, -1000, -1000, 2262, -1000, -1000, 1883,
	1768, -1000, 831, -1000, -1000, -1000, -1000, -1000, -1000, 260,
	-1000, -1000, 1649, -1000, 43139, -1000, 2096, 1303, 1303, 13173,
	-1000, -1000, -1000, 17597, 2261, -1000, 2112, 2110, 2027, -1000,
	-1000, 1054, 1166, 1120, -1000, -1000, 1311, -1000, -1000, -1000,
	-1000, -1000, 830, 1883, -1000, -1000, -1000, -1000, -1000, 1621,
	-1000, -1000, -1000, -1000, 1291, 12541, 12541, 12541, 1446, 1621,
	3978, 1731, 1670, 915, 1116, 1116, 969, 969, 969, 969,
	969, 1055, 1055, -1000, -1000, -1000, 1649, -1000, 1802, -1000,
	-1000, 1150, 829, -1000, -1000, -1000, -1000, -1000, -1000, 8117,
	-1000, -1000, -1000, 8117, 8117, 8117, 8117, 8117, -1000, 13173,
	-1000, 1649, 1802, 1802, 1802, -1000, 1191, 1472, 1636, 1802,
	976, 2333, 1802, 972, 2326, 1802, 1794, 12541, 12541, 12541,
	1802, 1802, 8117, 1174, -1000, 13173, 1649, 1802, -1000, 1882,
	1892, 1890, 1802, 1649, 1889, 1802, 1802, -185, -185, 1649,
	1802, 1649, 1802, 1802, -185, -185, -185, -185, 1802, 1802,
	1802, 1802, 1802, 1802, 1802, 1802, 1802, 1802, 1802, 1802,
	1029, 33179, -1000, 1858, 414, -1000, -1000, -1000, 2241, 30114,
	-1000, -1000, 35467, -1000, 1883, 1883, 1029, 1823, 6191, -1000,
	-1000, 6191, 44444, 22653, -1000, 18861, -113, -88, -1000, -1000,
	1888, -1000, 1434, -1000, -1000, 1150, -1000, 828, 2182, 2240,
	1887, -1000, 1100, 1100, 1100, 2188, 268, 1100, 1100, 1100,
	1100, 1100, -241, -243, 1100, 1100, 1100, 1100, 1100, 1100,
	1100, 1100, 1100, 1100, 1100, 68, 1100, 1100, 1100, 1100,
	248, 1100, 655, -1000, -1000, -1000, 1962, 232, -1000, 2135,
	917, 917, 912, 1596, 2134, -1000, -1000, 163, -43, -1000,
	-1000, -1000, 1389, 7, 190, 7, 1956, 1956, 311, 1956,
	-1000, 7, -1000, -1000, -1000, 1033, 2184, 1025, 993, 991,
	988, 7, 1577, 1577, -1000, -1000, -1000, -1000, 1387, -1000,
	1959, -1000, 1378, -1000, -1000, -1000, -1000, 163, 163, 163,
	163, -1000, -1000, -1000, 1229, 2007, 43574, -1000, 33179, -1000,
	2212, -1000, -1000, -1000, 275, -1000, -1000, -1000, 2332, -1000,
	-1000, 43574, 39303, 43574, -1000, -1000, 118, 40608, 231, 379,
	233, -1000, -1000, 733, -1000, 732, -1000, -1000, -1000, -1000,
	-1000, -1000, 33179, 40608, -1000, -1000, -1000, -1000, -1000, 2305,
	1628, 1627, -1000, -1000, -1000, 1186, 1153, -1000, -1000, 12541,
	40608, -1000, 486, -1000, 1621, -1000, -1000, -1000, 1029, 770,
	-1000, -1000, -60, -1000, -1000, 726, 823, 822, 42704, 725,
	-1000, 130, 40608, -1000, 43574, -1000, 2321, 2318, 147, 2315,
	40608, -1000, 73, -1000, 244, -1000, 15701, 23917, 1886, -1000,
	782, 886, 899, 578, 578, -1000, 1099, 578, 2176, 2175,
	1006, -1000, 1885, 1576, 1575, -1000, 2083, -1000, -1000, -1000,
	33179, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	22021, 8117, -1000, 1446, 1621, 3928, -1000, 12541, -1000, 8117,
	-1000, 16333, 1649, 1802, 1802, 1802, 1802, 1802, 1150, -1000,
	-1000, -1000, -1000, 699, 1346, 699, -1000, 1346, -1000, 12541,
	12541, -1000, 12541, 12541, -1000, -1000, 12541, 3671, 3036, 1933,
	-272, -1000, 1876, 1167, -1000, 13173, 1315, -1000, -1000, -1000,
	12541, 12541, -1000, -1000, -1000, -1000, -1000, 42269, -1000, -185,
	-185, -185, -185, -185, -1000, -1000, -1000, -1000, -185, -185,
	-185, -185, -185, -185, -185, -185, -185, -185, -185, -185,
	246, 1883, -1000, 18229, 6191, 6191, 6191, 6191, 6191, -1000,
	2049, 2048, -1000, 2079, 2041, 2031, 342, 37998, 1799, 1649,
	418, 30114, -1000, 1883, -1000, 37563, 798, 767, 766, 755,
	8117, 12541, 2305, 6191, 1831, 1831, -1000, 820, -1000, -1000,
	-1000, -105, -123, -1000, -1000, -1000, 23917, -1000, 3880, 384,
	-1000, 384, 384, 1100, 2181, 1100, 1366, 25181, 1574, 1573,
	1572, 1100, 1100, 1365, 1556, 25181, 1553, 631, 384, 384,
	384, 1357, 1552, 211, -1000, 1551, 1424, 1418, 384, -1000,
	-262, -1000, -1000, -1000, -1000, -1000, 384, -1000, 38433, 647,
	2137, 653, 1596, 1596, 1596, -1000, 1596, -1000, -1000, -1000,
	1958, -1000, 1268, -1000, -1000, -1000, -1000, -1000, 1883, -427,
	1354, 12541, 2350, -1000, 2132, -1000, 2131, 2129, 1550, -1000,
	-1000, 1815, 983, 1782, 1748, 952, 7, -1000, -1000, 1956,
	-1000, 939, -1000, -1000, 994, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 930, 1797, -1000, 1779, 1879, -1000, 1777,
	120, 33179, -1000, -1000, 2237, -1000, -1000, -1000, 2180, 1099,
	1099, 1099, 2005, -1000, -1000, -1000, -1000, 1746, 1874, -1000,
	512, 43574, 43574, 43574, -1000, -280, 210, -1000, 40608, 169,
	227, 476, 1626, 33179, 40608, -1000, -1000, -1000, 13173, -1000,
	-1000, 2235, -1000, 1621, 1842, -1000, -1000, 7, 33179, -1000,
	40608, 941, 41656, 723, 40608, 146, 162, -1000, 40608, 40608,
	2310, 40608, 1871, 1549, -1000, -1000, 260, 41221, 1596, 805,
	-1000, -1000, 587, -1000, 188, 1614, 29497, 28884, 43574, 2127,
	2126, 1613, 33179, 43574, -1000, -1000, 44009, 1612, 13173, -1000,
	43574, -1000, -1000, 43574, 43574, -1000, -1000, -1000, -1000, 1277,
	6853, -1000, -1000, 1649, -1000, 12541, 1621, -1000, -1000, 819,
	-1000, -185, -185, -185, -185, -185, 1649, 1951, 1951, -1000,
	1951, 1955, -1000, 1951, 48, 1951, 35, 1649, 1649, 1649,
	3799, 3592, 3571, 1647, 1882, 12541, 12541, 12541, 1883, -159,
	-1000, 1150, 13173, 3500, 3154, -1000, -1000, 1611, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2004, 18229, 1883, 15069,
	-1000, 43574, 1872, -1000, 1124, 897, 1115, 1114, 817, 803,
	414, 1954, 2003, 296, -1000, -1000, -1000, -1000, 2042, -1000,
	2035, 2029, -1000, -1000, -1000, 1931, -1000, -1000, 1873, 1883,
	43574, 12541, 798, -1000, 1883, 1883, 1883, 1649, 3119, 2286,
	1831, -1000, -1000, 925, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1346, 1100, 25181, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1491, 1490, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -253,
	-1000, 1770, -1000, 1951, 1951, 2121, -1000, 917, -1000, -1000,
	-1000, -1000, -1000, 43574, -1000, 12541, 2234, -1000, 1621, -106,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 922, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 7,
	1489, 7, 1351, -1000, 1348, -1000, -1000, -367, 1950, 224,
	-1000, 1099, 975, 967, 1484, 33179, 137, 39303, -1000, 512,
	512, 512, 198, 166, -1000, 1226, -1000, -1000, -1000, 1483,
	1482, 1480, 1842, 240, 1204, 196, -1000, 2230, -1000, -1000,
	1150, 1153, -48, -1000, 162, -1000, -1000, -1000, 40608, 162,
	-1000, -1000, 199, 1871, 1871, 40608, 1871, -1000, -1000, 44009,
	629, 512, 512, 1975, 917, 2120, 653, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1607,
	-1000, 857, -1000, 722, 629, 44009, 1150, 937, 1251, -1000,
	2307, -1000, -1000, -1000, 1621, 21389, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 331, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 12541, 12541, 12541, 12541, -1000, 1882, 1882,
	1882, 12541, 1649, 1479, 1150, 12541, 12541, 974, -1000, -1000,
	2214, 1817, 1868, -1000, -1000, 7485, 1649, 2109, 1768, -1000,
	36515, 1766, -1000, 2286, 18229, 13173, 13173, 13173, 13173, -1000,
	-1000, 13173, 1947, -1000, 13173, -1000, -1000, -1000, -1000, -1000,
	43574, 409, -1000, 13173, 1766, 1606, -1000, 43574, 43574, 43574,
	-1000, 1478, 2266, -1000, -1000, 1346, -1000, -1000, -1000, -1000,
	-1000, 852, 38433, 2219, 2219, 1596, 1596, 1762, -1000, 1882,
	1883, -1000, 1883, 1883, 1883, 1883, 1883, 1883, 1883, 1883,
	1883, 1883, 1883, -1000, -1000, 907, -1000, 901, 1744, 1719,
	-1000, 38433, -1000, -1000, 966, -1000, -1000, -1000, -1000, -1000,
	2260, -1000, 137, -1000, 1477, 315, 325, -1000, 312, 310,
	309, 295, 286, -1000, -1000, -1000, -1000, 423, 198, -1000,
	-78, 1337, 1079, 2169, 166, -1000, 1333, 1332, 1325, 1322,
	223, -1000, -1000, -1000, -1000, 220, 227, -1000, 465, 1476,
	-1000, 2154, 2152, 2233, 162, 2233, 139, 1871, 1694, -1000,
	-1000, 1597, -1000, -1000, 1946, 1596, 1596, -1000, 1595, -1000,
	-1000, 43574, -1000, 629, 2211, 2210, 1883, 2305, 6191, 6853,
	-1000, -1000, -1000, -1000, 1882, 1882, 1882, 1882, -1000, -1000,
	-1000, 156, -1000, -1000, 1882, 1882, 2286, 2277, 2119, -1000,
	1883, -1000, -1000, 1883, 242, -1000, 43574, 2266, -1000, 1150,
	1150, 1150, 1150, 1150, 43574, 1150, 1760, 1883, 36080, -1000,
	37998, 1756, 1756, 1756, -70, -1000, -1000, 852, -1000, 1593,
	1099, 1473, -1000, -1000, -1000, -1000, -1000, 505, 43574, -430,
	12541, -1000, -1000, -1000, -1000, -1000, -1000, 1754, -1000, 224,
	-1000, -1000, 415, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2159, 2158, 334, -1000, 1470, 1469, -1000, 461, 1393, 851,
	-191, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 433, 1583, -1000, 187, -1000, -1000, 675, 2141,
	2143, 2273, -1000, 40608, 2233, -1000, -1000, -1000, -1000, 163,
	163, 38433, 1975, 1932, -1000, -1000, -1000, 12541, -1000, 968,
	2298, 1870, -1000, -1000, -1000, -1000, -1000, 1649, 179, -292,
	-1000, -1000, 1061, 13173, 2347, -1000, 1868, 1883, -1000, 224,
	-1000, -1000, 1752, -1000, -1000, -1000, 798, -1000, -1000, -1000,
	1883, -1000, -1000, 1312, -1000, 33179, -1000, -1000, -1000, -1000,
	1882, 852, -1000, 407, 45323, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1308, -1000, -1000, 1363, 459, 172, -1000,
	2229, -1000, 1931, 1305, 2152, 2272, 2147, 2145, -1000, 1467,
	-283, -1000, 1743, 1917, 38433, 1621, 1738, -1000, 43574, 2288,
	2271, -1000, -1000, 2067, -277, -297, 1649, 234, 234, 1869,
	18229, 1868, 1649, -1000, -1000, 23917, -1000, 1914, -430, -1000,
	852, -1000, 474, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 13173, 13173, 24549, 45323, 154, -1000,
	151, -1000, -1000, -1000, 1465, -1000, 1057, -1000, 1464, -1000,
	2270, 2269, -1000, 230, 852, 38433, 1718, -1000, 968, 2104,
	-188, 13173, 13173, -1000, 2065, -1000, -1000, -1000, 192, -1000,
	1056, 400, 1051, -1000, 1599, -1000, 1863, -1000, 1716, -1000,
	512, 43574, -1000, -1000, 1474, 1314, -1000, 1202, 1267, 269,
	247, 426, -1000, -1000, -1000, -1000, -436, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1462, 1448, 38868, -1000, 1710, 852,
	-1000, 456, -1000, 43574, -1000, 1150, 1857, -1000, 1150, -284,
	1197, -1000, -1000, -1000, -1000, -1000, 43574, 1649, 23917, 235,
	1693, -1000, -1000, -1000, 1340, -1000, 13173, 45323, 2258, 2254,
	2244, 2209, 23917, 5824, -1000, -1000, -1000, -1000, 133, 1842,
	852, -1000, 451, 1844, -1000, 2228, 13173, -294, 192, -1000,
	36950, -1000, -1000, 1438, -232, 2002, 193, 1189, 45323, -1000,
	1225, -440, 481, 224, 760, 12541, -1000, -1000, -1000, 40608,
	-1000, 1883, 43574, 1883, -1000, -300, -1000, 37998, -1000, -1000,
	1415, 2000, 1982, 2325, -1000, -1000, -1000, -1000, -1000, -1000,
	45323, 36515, -1000, -441, 45323, 4225, -1000, -1000, -1000, 5631,
	-1000, -1000, -1000, -1000, 237, -1000, -1000, 1621, 1842, 13805,
	-1000, -1000, -1000, -1000, 422, -1000, -1000, 2334, -1000, 2345,
	729, 729, -1000, -442, -1000, 5206, -444, 650, 45323, 1203,
	-1000, 13173, -1000, 760, -1000, 1882, 1649, -1000, 1981, 12541,
	1980, -1000, -1000, -1000, 559, 1341, -1000, 5196, 1181, 45323,
	-1000, -445, 641, 45323, -1000, 1105, -1000, -1000, -1000, -315,
	1867, -317, -1000, -1000, -1000, -1000, -1000, 4976, -1000, -449,
	45323, -1000, -318, -1000, 636, 4792, -452, -1000, -1000, 634,
	45323, -1000,
}

var yyPgo = [...]int{
	0, 2802, 2797, 15, 173, 2796, 301, 2795, 2794, 19,
	2792, 33, 23, 21, 35, 2791, 2474, 2472, 2469, 2466,
	2464, 2789, 10, 2787, 2786, 2457, 2785, 2784, 2455, 2452,
	2442, 2440, 2782, 2780, 2778, 2430, 2428, 2425, 8, 2777,
	17, 2776, 2, 152, 174, 2775, 5, 2774, 2773, 13,
	2772, 2771, 2419, 2770, 2768, 2767, 104, 2766, 2403, 2394,
	2764, 2392, 2390, 2761, 2760, 2382, 2379, 2375, 2759, 177,
	2756, 2749, 2748, 200, 2747, 157, 2745, 2744, 2743, 124,
	2742, 2719, 101, 50, 116, 1335, 2741, 18, 72, 288,
	2739, 9, 2738, 103, 2737, 119, 2736, 2734, 166, 2724,
	146, 139, 94, 2721, 2720, 172, 2717, 2716, 2715, 105,
	2711, 2710, 180, 144, 2709, 2707, 148, 2703, 55, 176,
	49, 61, 2699, 2698, 2697, 2696, 2695, 28, 461, 2694,
	99, 141, 2691, 2690, 89, 2688, 2685, 68, 2684, 2683,
	2676, 138, 58, 2672, 2669, 48, 2668, 53, 46, 2666,
	73, 2664, 137, 2663, 2661, 2660, 2659, 2654, 63, 2653,
	57, 2651, 136, 209, 261, 2650, 2649, 14, 12, 2648,
	38, 26, 4, 47, 25, 74, 56, 145, 123, 90,
	2644, 43, 40, 126, 91, 2643, 95, 82, 44, 2642,
	161, 2637, 76, 164, 143, 135, 156, 2634, 2632, 2631,
	184, 2628, 142, 83, 2627, 112, 1208, 171, 2626, 2624,
	97, 2623, 2622, 2621, 2620, 2619, 86, 169, 2617, 2616,
	194, 182, 198, 98, 2615, 65, 2735, 3790, 153, 2989,
	37, 162, 2613, 51, 2612, 2603, 2602, 2378, 117, 7,
	84, 175, 2598, 113, 39, 71, 2597, 2595, 2594, 2593,
	2590, 2580, 2578, 2577, 155, 167, 2576, 2574, 2572, 2571,
	170, 102, 2570, 132, 129, 128, 2569, 151, 32, 2568,
	2566, 140, 118, 2561, 2559, 2555, 2553, 133, 87, 154,
	29, 2552, 109, 147, 122, 2538, 80, 2537, 2535, 221,
	54, 1739, 2533, 2532, 2530, 2526, 100, 296, 2525, 2523,
	81, 30, 31, 75, 27, 2522, 2521, 79, 115, 2520,
	20, 2519, 3, 11, 6, 2517, 2516, 2514, 2513, 2512,
	2509, 2508, 88, 2503, 2501, 67, 2499, 2498, 2496, 45,
	2494, 2487, 2486, 150, 121, 110, 165, 187, 42, 2485,
	2484, 41, 2478, 127, 2477, 60, 2476, 62, 2460, 2450,
	64, 2448, 2445, 66, 2432, 2423, 168, 2022, 298, 2417,
	149, 125, 52, 59, 2414, 93, 2405, 0, 183, 160,
	85, 2400, 2397, 2385,
}

var yyR1 = [...]int{
	0, 366, 366, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 68, 3, 3, 9,
	10, 4, 4, 5, 5, 91, 91, 6, 90, 90,
	186, 186, 186, 186, 185, 185, 92, 92, 89, 89,
	98, 7, 7, 8, 8, 11, 11, 72, 72, 12,
	13, 13, 13, 13, 369, 369, 107, 107, 105, 105,
	106, 106, 183, 183, 14, 14, 14, 190, 190, 195,
	195, 195, 198, 198, 198, 198, 172, 173, 174, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 339, 339, 348, 348, 348, 349, 349, 347, 347,
	347, 347, 347, 351, 351, 352, 352, 350, 350, 350,
	350, 354, 354, 355, 355, 353, 353, 353, 353, 353,
	353, 353, 353, 353, 353, 353, 353, 353, 353, 342,
	342, 342, 35, 35, 35, 35, 35, 36, 36, 36,
	36, 36, 36, 356, 356, 356, 356, 356, 356, 356,
	356, 356, 356, 356, 356, 356, 356, 356, 356, 356,
	356, 356, 356, 356, 356, 356, 356, 356, 356, 356,
	356, 356, 356, 356, 357, 357, 358, 358, 359, 359,
	360, 360, 360, 360, 361, 361, 361, 361, 361, 362,
	362, 362, 362, 362, 362, 362, 363, 363, 364, 364,
	2, 320, 320, 321, 321, 322, 322, 322, 322, 323,
	323, 324, 324, 325, 325, 325, 325, 325, 325, 325,
	325, 325, 325, 26, 222, 222, 219, 219, 219, 220,
	220, 221, 221, 221, 341, 341, 341, 335, 335, 335,
	337, 337, 336, 336, 336, 338, 338, 343, 343, 343,
	343, 343, 345, 345, 345, 345, 345, 345, 346, 346,
	346, 344, 344, 50, 50, 51, 51, 51, 161, 161,
	161, 15, 15, 15, 15, 15, 21, 23, 23, 39,
	39, 40, 24, 24, 24, 24, 41, 41, 42, 27,
	27, 27, 27, 27, 27, 48, 48, 48, 47, 47,
	46, 46, 46, 46, 46, 46, 25, 25, 25, 25,
	49, 49, 44, 44, 43, 45, 45, 45, 45, 45,
	45, 45, 45, 45, 45, 45, 45, 28, 28, 28,
	28, 28, 28, 20, 319, 319, 319, 38, 38, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 54,
	54, 292, 293, 293, 293, 293, 293, 293, 293, 293,
	278, 278, 279, 279, 279, 279, 279, 268, 268, 268,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 244, 244, 244, 244, 250, 250, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 249, 249, 249,
	249, 249, 249, 249, 249, 251, 251, 251, 251, 251,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 253, 253, 253,
	253, 253, 253, 253, 253, 277, 277, 255, 255, 254,
	254, 254, 271, 271, 272, 272, 272, 269, 269, 269,
	270, 270, 258, 259, 273, 260, 260, 260, 261, 261,
	261, 262, 262, 267, 267, 266, 266, 266, 266, 266,
	266, 263, 263, 263, 263, 264, 264, 265, 276, 276,
	276, 276, 276, 256, 37, 305, 305, 305, 305, 305,
	305, 305, 305, 305, 305, 305, 305, 306, 306, 212,
	212, 213, 213, 281, 281, 304, 304, 303, 303, 302,
	302, 302, 290, 290, 299, 299, 299, 299, 299, 299,
	299, 299, 285, 285, 285, 284, 284, 286, 286, 289,
	289, 301, 301, 300, 300, 282, 282, 282, 307, 307,
	307, 307, 307, 283, 283, 283, 283, 283, 308, 287,
	287, 288, 288, 288, 313, 314, 312, 312, 312, 312,
	312, 124, 124, 124, 295, 295, 295, 291, 291, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 297, 297, 297,
	297, 297, 298, 298, 298, 298, 298, 298, 365, 365,
	365, 317, 317, 316, 316, 52, 53, 57, 57, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 160, 160, 160, 217, 217, 311, 309, 309, 310,
	310, 17, 17, 55, 55, 340, 340, 18, 18, 18,
	18, 18, 18, 18, 18, 18, 315, 315, 315, 19,
	19, 58, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 86, 204, 204,
	203, 203, 202, 202, 202, 205, 205, 205, 205, 242,
	242, 242, 60, 60, 60, 64, 64, 67, 67, 67,
	65, 66, 29, 30, 30, 30, 30, 31, 218, 218,
	62, 62, 63, 63, 63, 63, 78, 78, 371, 371,
	61, 372, 69, 70, 70, 71, 71, 71, 208, 208,
	75, 75, 75, 73, 73, 73, 74, 74, 80, 80,
	84, 84, 84, 84, 83, 83, 83, 83, 163, 163,
	168, 234, 234, 144, 144, 164, 164, 169, 169, 169,
	170, 170, 171, 171, 171, 171, 171, 166, 166, 165,
	165, 167, 132, 132, 232, 232, 232, 232, 231, 231,
	231, 231, 231, 231, 88, 88, 93, 93, 95, 95,
	95, 95, 95, 95, 99, 146, 146, 117, 117, 118,
	118, 118, 118, 118, 130, 130, 182, 182, 181, 181,
	184, 184, 94, 96, 96, 96, 96, 102, 102, 103,
	103, 104, 104, 216, 216, 239, 239, 239, 108, 108,
	108, 110, 109, 109, 109, 109, 109, 109, 111, 111,
	97, 97, 294, 294, 280, 246, 246, 247, 373, 373,
	373, 373, 112, 112, 114, 115, 115, 113, 113, 113,
	113, 113, 119, 119, 116, 120, 120, 120, 120, 121,
	121, 85, 85, 85, 85, 85, 85, 85, 85, 201,
	201, 123, 123, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 140, 140, 140, 140, 140, 140, 125,
	125, 125, 125, 125, 125, 125, 79, 79, 141, 141,
	141, 101, 100, 100, 82, 82, 81, 81, 142, 142,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 135, 135, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 134, 134, 134, 134, 134, 134, 134, 134,
	134, 134, 134, 134, 134, 134, 134, 134, 134, 370,
	370, 137, 136, 136, 136, 136, 136, 136, 76, 76,
	76, 76, 76, 240, 240, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	153, 153, 77, 77, 151, 151, 152, 154, 154, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 127, 127, 127, 127, 127, 127, 127,
	127, 129, 129, 129, 155, 155, 143, 143, 87, 156,
	156, 157, 158, 158, 159, 159, 162, 175, 175, 175,
	176, 176, 176, 176, 131, 131, 177, 177, 177, 126,
	126, 126, 126, 126, 126, 126, 180, 180, 179, 179,
	178, 178, 178, 178, 178, 178, 187, 187, 145, 145,
	148, 148, 147, 149, 188, 188, 192, 192, 192, 192,
	189, 189, 193, 193, 193, 193, 196, 196, 197, 197,
	197, 194, 194, 194, 191, 191, 191, 236, 236, 236,
	199, 199, 209, 209, 206, 206, 207, 207, 200, 200,
	257, 257, 257, 215, 215, 214, 214, 214, 210, 210,
	210, 211, 211, 233, 233, 229, 229, 235, 235, 230,
	230, 237, 237, 238, 238, 318, 318, 274, 274, 328,
	328, 275, 275, 329, 329, 331, 331, 326, 326, 327,
	327, 330, 330, 32, 332, 332, 333, 333, 334, 334,
	334, 334, 33, 34, 34, 34, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 228,
	228, 228, 228, 228, 228, 226, 226, 226, 226, 226,
	367, 368,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 11, 5, 7, 1,
	5, 1, 3, 1, 3, 2, 1, 13, 0, 2,
	0, 2, 3, 3, 1, 3, 0, 2, 1, 3,
	4, 1, 3, 1, 3, 8, 9, 1, 1, 10,
	9, 8, 7, 7, 1, 1, 1, 3, 1, 3,
	1, 3, 0, 4, 3, 4, 5, 1, 3, 3,
	2, 2, 2, 2, 2, 1, 0, 0, 0, 2,
	3, 3, 11, 9, 11, 5, 5, 16, 12, 9,
	4, 0, 3, 0, 2, 2, 1, 3, 1, 1,
	2, 2, 2, 0, 2, 1, 2, 2, 2, 2,
	2, 0, 1, 1, 2, 3, 3, 5, 3, 3,
	4, 5, 4, 4, 2, 2, 2, 2, 2, 0,
	2, 2, 9, 10, 9, 5, 7, 7, 7, 7,
	8, 4, 6, 2, 3, 2, 3, 3, 3, 4,
	3, 3, 2, 2, 3, 2, 2, 2, 2, 2,
	3, 2, 2, 2, 3, 3, 2, 3, 3, 2,
	2, 2, 2, 2, 1, 3, 0, 3, 1, 3,
	0, 1, 1, 1, 1, 3, 1, 3, 3, 0,
	2, 5, 5, 5, 7, 5, 0, 3, 0, 3,
	4, 0, 1, 1, 3, 2, 3, 3, 3, 0,
	1, 1, 2, 2, 2, 2, 1, 2, 2, 3,
	3, 3, 3, 4, 2, 3, 3, 3, 3, 0,
	3, 0, 3, 3, 1, 1, 1, 3, 2, 1,
	1, 3, 3, 2, 1, 1, 3, 1, 2, 5,
	4, 6, 4, 3, 3, 6, 5, 5, 4, 3,
	5, 1, 3, 1, 1, 1, 1, 1, 0, 2,
	2, 1, 1, 1, 1, 1, 4, 5, 8, 1,
	2, 5, 7, 10, 8, 11, 1, 2, 5, 5,
	5, 5, 6, 3, 5, 1, 1, 1, 1, 3,
	1, 1, 1, 2, 1, 1, 2, 4, 2, 4,
	2, 3, 1, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 4,
	3, 2, 4, 3, 0, 2, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 5,
	5, 4, 1, 1, 2, 3, 4, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 0, 1, 1,
	0, 2, 3, 2, 2, 2, 2, 2, 6, 8,
	3, 3, 1, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 3,
	2, 2, 2, 2, 2, 1, 2, 2, 2, 1,
	4, 4, 3, 3, 2, 4, 5, 2, 3, 4,
	2, 2, 3, 3, 3, 3, 3, 4, 1, 1,
	1, 1, 1, 6, 6, 4, 4, 4, 5, 3,
	3, 3, 3, 3, 4, 6, 6, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 3, 0,
	3, 3, 0, 5, 0, 3, 5, 0, 1, 1,
	0, 1, 2, 3, 1, 0, 3, 3, 0, 2,
	2, 0, 1, 0, 1, 1, 1, 1, 2, 2,
	2, 5, 5, 4, 4, 4, 4, 4, 2, 1,
	2, 1, 2, 2, 3, 2, 2, 2, 2, 1,
	1, 1, 1, 3, 2, 1, 1, 0, 3, 1,
	1, 0, 1, 5, 4, 0, 1, 1, 2, 2,
	3, 2, 0, 1, 3, 5, 3, 3, 5, 3,
	2, 2, 1, 1, 1, 1, 1, 0, 1, 0,
	1, 1, 3, 3, 3, 3, 3, 1, 10, 11,
	11, 12, 12, 3, 3, 3, 2, 1, 5, 1,
	1, 0, 2, 2, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 2, 0, 1, 3, 0, 1, 3,
	3, 3, 4, 5, 3, 3, 4, 3, 3, 3,
	4, 4, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 3, 3, 3, 3,
	3, 3, 2, 2, 4, 4, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 2, 0, 2, 1, 5, 1, 3, 5,
	4, 3, 5, 3, 8, 10, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 5, 4, 5,
	1, 2, 2, 4, 3, 6, 5, 3, 9, 2,
	2, 0, 1, 2, 0, 1, 7, 1, 3, 8,
	8, 3, 3, 3, 5, 3, 5, 5, 5, 4,
	4, 4, 4, 4, 4, 4, 0, 1, 1, 3,
	2, 3, 3, 4, 3, 5, 5, 5, 4, 4,
	4, 2, 2, 2, 6, 2, 4, 4, 4, 5,
	8, 6, 3, 5, 4, 2, 4, 3, 2, 4,
	5, 6, 2, 6, 6, 3, 3, 3, 0, 1,
	1, 1, 0, 2, 2, 0, 2, 3, 2, 0,
	1, 1, 2, 4, 1, 1, 1, 2, 4, 4,
	1, 1, 2, 3, 4, 4, 5, 3, 1, 1,
	3, 3, 1, 1, 1, 1, 0, 3, 1, 1,
	3, 0, 2, 0, 2, 1, 2, 2, 0, 1,
	0, 1, 1, 0, 1, 1, 0, 1, 3, 5,
	1, 1, 3, 5, 1, 2, 3, 5, 2, 2,
	6, 0, 1, 0, 3, 0, 1, 0, 2, 2,
	4, 1, 2, 2, 2, 2, 2, 0, 2, 1,
	3, 3, 1, 3, 0, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 1, 1, 4,
	1, 3, 1, 1, 2, 2, 4, 2, 6, 1,
	4, 6, 3, 2, 0, 3, 0, 3, 1, 3,
	1, 3, 4, 4, 4, 4, 3, 2, 4, 0,
	1, 0, 2, 0, 1, 1, 1, 1, 1, 2,
	2, 1, 2, 3, 2, 3, 3, 2, 2, 2,
	12, 11, 1, 3, 3, 4, 3, 0, 0, 3,
	4, 3, 1, 3, 3, 2, 1, 1, 3, 1,
	1, 1, 1, 3, 3, 0, 5, 5, 5, 0,
	2, 1, 3, 3, 3, 2, 3, 1, 2, 0,
	3, 1, 1, 3, 3, 4, 4, 5, 3, 4,
	5, 6, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 0, 2, 1, 1,
	1, 3, 1, 3, 0, 1, 1, 3, 1, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 2, 2, 2, 2, 3,
	1, 1, 1, 1, 1, 1, 5, 6, 6, 6,
	5, 5, 5, 6, 5, 5, 6, 5, 5, 5,
	5, 6, 5, 5, 5, 4, 4, 5, 5, 5,
	5, 5, 4, 4, 4, 4, 4, 4, 4, 4,
	3, 6, 6, 4, 6, 6, 4, 8, 8, 8,
	8, 4, 6, 7, 7, 7, 9, 4, 7, 5,
	4, 4, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 8, 8, 0,
	2, 3, 4, 4, 4, 4, 4, 4, 0, 3,
	4, 7, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 3, 3,
	1, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	0, 1, 0, 2, 1, 2, 4, 0, 2, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 0, 3, 1, 3, 1, 0,
	2, 1, 0, 3, 1, 3, 2, 0, 1, 1,
	0, 2, 4, 4, 1, 1, 0, 2, 4, 2,
	4, 1, 3, 5, 4, 6, 0, 3, 1, 3,
	3, 1, 1, 1, 1, 1, 0, 5, 1, 3,
	1, 2, 3, 1, 1, 3, 3, 3, 3, 3,
	1, 3, 1, 2, 2, 3, 1, 1, 1, 1,
	1, 3, 3, 3, 1, 2, 1, 1, 1, 1,
	1, 1, 0, 1, 0, 2, 0, 3, 0, 1,
	0, 3, 3, 1, 1, 0, 1, 1, 1, 1,
	1, 0, 1, 0, 2, 1, 1, 1, 3, 1,
	1, 1, 1, 1, 1, 0, 2, 0, 1, 0,
	4, 0, 1, 0, 3, 0, 3, 0, 4, 0,
	3, 0, 3, 3, 1, 3, 2, 4, 1, 2,
	1, 2, 2, 2, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1,
}

var yyChk = [...]int{
	-1000, -366, -1, -3, -10, -11, -12, -13, -14, -16,
	-52, -17, -18, -19, -58, -59, -60, -64, -65, -66,
	-62, -61, -25, -28, -20, -68, -29, -30, -31, -32,
	-33, -34, -35, -36, -37, -5, 6, 7, -92, 29,
	-54, 182, -53, 185, 184, 221, 186, 214, 64, 344,
	-67, 347, 348, -371, -218, 272, 273, 20, 37, 349,
	351, 30, 31, 235, 289, 291, 316, -4, 518, 183,
	345, 216, 215, 26, -6, -7, -367, 68, 637, -158,
	15, -69, -372, -69, -72, 9, 10, 8, 444, -69,
	-292, -216, 108, 68, 23, -211, -222, 88, 435, 190,
	-220, 285, 287, -209, -210, -219, 245, 255, 44, 201,
	200, 256, 191, 285, 191, 192, 194, 435, 190, 228,
	227, 285, 287, 191, -113, -237, -226, -227, 303, 72,
	-225, 461, 465, 468, 469, 474, 293, 81, 325, 326,
	317, 327, 211, 414, 286, 292, 295, 318, 604, 328,
	330, 331, 455, 456, 194, 204, 622, 310, 212, 515,
	256, 632, 625, 297, 404, 491, 344, 360, 352, 375,
	516, 575, 267, 343, 421, 492, 300, 260, 323, 576,
	410, 416, 270, 347, 493, 430, 236, 577, 264, 266,
	265, 250, 460, 271, 36, 217, 371, 306, 245, 578,
	495, 571, 494, 239, 35, 27, 238, 433, 99, 579,
	334, 418, 496, 392, 335, 234, 580, 520, 304, 417,
	367, 316, 119, 243, 282, 336, 581, 393, 397, 582,
	422, 290, 281, 583, 584, 337, 585, 193, 296, 497,
	586, 246, 424, 301, 391, 202, 517, 213, 48, 225,
	425, 395, 401, 587, 333, 588, 589, 590, 591, 314,
	312, 498, 313, 315, 257, 262, 499, 53, 188, 399,
	398, 400, 263, 420, 380, 378, 592, 593, 305, 208,
	594, 595, 379, 18, 596, 597, 428, 308, 598, 599,
	600, 500, 490, 601, 602, 419, 394, 396, 244, 118,
	603, 311, 415, 320, 519, 294, 605, 339, 224, 219,
	429, 329, 606, 607, 608, 609, 610, 288, 287, 348,
	321, 501, 349, 268, 611, 612, 502, 613, 614, 254,
	237, 432, 423, 52, 406, 615, 324, 340, 409, 345,
	231, 503, 504, 505, 7, 261, 302, 413, 322, 269,
	255, 258, 382, 226, 616, 617, 369, 370, 346, 229,
	221, 113, 431, 570, 285, 341, 51, 232, 618, 619,
	259, 233, 350, 299, 372, 191, 135, 376, 421, 182,
	411, 412, 418, -285, 419, 227, 230, -242, 191, -204,
	410, 290, 311, 465, 233, 234, 192, 193, 32, 423,
	422, 414, -237, 195, 350, -78, 186, 222, -113, -49,
	72, 274, -49, 29, 72, 72, 36, 72, 349, 413,
	413, 75, 519, 236, 21, -357, -338, 320, -356, -336,
	183, 182, 10, 184, 325, 326, 327, 192, 8, 30,
	604, 209, 328, 329, 6, 214, 330, 331, 228, 9,
	332, -341, 74, 72, -225, 21, -357, -338, 320, -213,
	-212, 342, 401, -91, 574, -89, -98, -239, -237, -226,
	74, -200, 196, 346, -71, 5, -9, -3, 518, -176,
	17, 16, -75, 54, 55, -70, -83, 126, -85, -237,
	-122, 91, -128, 28, 72, -225, 24, -127, 303, 222,
	-123, -150, -226, -149, -101, 135, -241, 124, 125, 132,
	92, 178, -135, -133, -134, -136, -138, -139, 74, 73,
	82, 75, 76, 77, 78, 83, 84, 85, -229, -227,
	-224, 461, 465, 468, 469, 474, -147, -367, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	58, 59, 459, 190, 445, 446, 373, 8, 447, 448,
	449, 514, 211, 453, 94, 47, 559, 434, 443, 442,
	441, 439, 440, 436, 438, 437, 455, 456, 197, 435,
	130, 444, 478, 479, 480, 481, 482, 483, 484, 485,
	487, 488, 486, 462, 463, 464, 466, 467, 470, 471,
	472, 473, 475, 476, 477, 521, 187, 183, 186, 90,
	23, 25, 522, 242, 93, 358, 387, 452, 16, 20,
	205, 189, 376, 203, 134, 199, 206, 276, 278, 182,
	62, 523, 277, 411, 524, 525, 526, 527, 366, 364,
	275, 528, 10, 26, 215, 249, 529, 362, 184, 240,
	97, 98, 531, 41, 40, 309, 279, 216, 532, 363,
	533, 534, 19, 65, 207, 11, 201, 230, 631, 535,
	289, 13, 117, 14, 536, 537, 538, 539, 196, 110,
	192, 621, 60, 247, 540, 356, 541, 542, 543, 544,
	545, 357, 87, 546, 547, 107, 548, 56, 489, 32,
	235, 572, 450, 549, 550, 38, 37, 386, 390, 385,
	551, 402, 108, 17, 30, 552, 553, 223, 389, 355,
	384, 573, 554, 555, 252, 63, 342, 365, 635, 33,
	66, 220, 338, 307, 42, 88, 15, 248, 61, 34,
	457, 114, 636, 368, 198, 227, 557, 426, 251, 558,
	115, 361, 574, 209, 109, 351, 185, 319, 273, 210,
	560, 291, 561, 241, 116, 412, 562, 563, 454, 29,
	214, 272, 354, 200, 564, 253, 284, 274, 283, 565,
	566, 298, 43, 633, 620, 191, 39, 96, 388, 353,
	383, 195, 451, 228, 280, 5, 44, 31, 407, 9,
	332, 64, 67, 377, 374, 567, 381, 634, 12, 568,
	458, 518, 427, 89, 569, 408, -69, -69, -69, -189,
	346, -196, -193, 422, 423, -194, -197, -191, -150, 401,
	601, 602, 421, 376, 420, -229, -237, -226, 303, 222,
	135, 462, 463, 464, 94, 373, 445, 478, 436, 438,
	434, 437, 435, 28, 479, 24, 85, 480, 459, 197,
	8, 178, 466, 467, 481, 482, 483, 58, 439, 440,
	514, 130, 91, 484, 485, 83, 487, 488, 559, 444,
	59, 486, 190, 472, 471, 470, 473, 447, 448, 84,
	441, 442, 443, 47, 476, 475, 477, -2, -6, 6,
	-113, -293, -279, -283, -229, -226, -227, -228, 218, 206,
	-308, 72, -225, 303, 222, 50, 86, 55, 54, 203,
	192, 194, 444, -207, 197, -207, 228, 227, -221, 253,
	-207, -207, 191, -220, 100, 100, -55, -113, -340, -335,
	-341, -206, 197, -229, -206, -206, -206, -206, -206, -206,
	-206, -113, 179, -105, -113, 72, 29, -205, 108, 12,
	435, 190, 191, 227, 228, 194, -287, 11, 110, 231,
	231, 231, 232, 231, -203, 413, 415, 229, 416, 417,
	12, -86, 108, 19, -367, -176, -176, 127, 72, 349,
	195, -63, -3, -13, -11, -12, -9, 100, -130, 23,
	29, 29, 74, 51, 29, -44, -43, -45, 260, 261,
	262, 263, 264, 265, 266, 267, 268, 269, 270, 271,
	29, -319, 68, -274, 401, 72, -332, -333, -113, 75,
	75, 66, 311, 66, 69, 195, 69, 66, -358, 321,
	68, -358, 287, 321, 322, 255, 285, 194, -358, -358,
	287, -358, -358, -358, -358, -358, 413, -358, -358, -358,
	323, 324, -358, 411, 194, -358, -358, -358, -358, -358,
	71, 66, 69, 311, 66, 11, 66, -305, 135, 334,
	335, 336, 337, 333, 311, 338, 339, 340, 231, 341,
	-4, -89, 69, -180, -367, 191, 426, -8, -6, -367,
	21, 22, -368, 70, -91, -177, 19, 30, -131, 75,
	78, -159, -162, -85, -237, 50, -73, 21, 22, 80,
	11, -232, 90, 88, 89, 107, -231, 23, 72, -225,
	-226, 74, -227, -228, 179, -85, -125, 110, 91, 108,
	109, 93, 121, 120, 131, 124, 125, 126, 127, 128,
	129, 130, 122, 123, 134, 100, 101, 102, 103, 104,
	105, 106, -201, -367, -101, -367, 179, -367, 179, 180,
	181, 179, -128, -128, -128, -128, -128, -128, -128, -367,
	179, 179, -367, -367, -367, -367, -367, -9, -142, -85,
	518, -367, -367, -367, -367, -367, -367, -367, -367, -367,
	-367, -367, -367, -367, -367, -367, -153, -85, -367, -367,
	-370, -137, -367, -370, -137, -370, -137, -370, -367, -370,
	-137, -370, -137, -370, -370, -137, -370, -367, -367, -367,
	-367, -367, -367, -367, -367, -367, -367, -367, -367, -367,
	-367, -367, -367, -367, -367, -367, -367, -367, -367, -367,
	-367, -367, -367, -367, -367, -367, -200, -200, 11, -105,
	-106, -116, -237, 69, -190, -195, 424, 426, 346, -194,
	-194, -236, -229, 74, 28, 100, 29, 179, -158, -69,
	70, 69, -283, -244, -250, -252, -251, -253, -248, -249,
	373, 376, 380, 378, 374, 379, 135, 377, 382, 383,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 29,
	217, 369, 370, 371, 372, 393, 394, 395, 396, 397,
	398, 399, 400, 352, 375, 516, 353, 354, 355, 356,
	357, 358, 360, 361, 362, 363, 364, 365, 366, 367,
	-244, -244, -244, -244, 72, 231, -226, -308, 68, -229,
	-113, -222, -220, 72, 91, 72, -112, -229, -237, -119,
	-229, -237, 254, -344, -343, -335, -338, -207, -221, -335,
	259, 257, 258, 69, 195, 69, 195, 71, -105, 24,
	66, -107, -113, 72, 72, -112, -119, -337, -335, -338,
	-238, -237, -223, 521, 187, 21, 183, 186, 90, 23,
	25, 522, 242, 93, 358, 135, 462, 463, 464, 387,
	452, 16, 20, 205, 94, 189, 373, 376, 203, 134,
	199, 206, 276, 278, 445, 478, 182, 62, 523, 436,
	438, 434, 437, 277, 435, 411, 524, 525, 526, 527,
	366, 364, 275, 28, 528, 10, 479, 26, 215, 249,
	22, 529, 128, 362, 184, 240, 97, 98, 531, 41,
	40, 309, 24, 279, 216, 85, 532, 480, 363, 533,
	534, 19, 65, 207, 11, 201, 230, 631, 535, 289,
	13, 459, 117, 14, 536, 537, 538, 539, 197, 196,
	110, 192, 621, 60, 247, 8, 540, 356, 541, 542,
	543, 544, 545, 357, 178, 87, 546, 547, 107, 548,
	56, 466, 467, 489, 45, 32, 235, 481, 482, 572,
	483, 450, 549, 550, 38, 37, 386, 390, 385, 551,
	402, 58, 108, 17, 439, 440, 30, 552, 553, 514,
	223, 389, 355, 384, 573, 554, 555, 130, 252, 63,
	91, 342, 484, 485, 83, 365, 635, 33, 66, 220,
	338, 307, 42, 88, 15, 248, 61, 34, 457, 114,
	636, 487, 368, 198, 227, 557, 426, 251, 558, 115,
	488, 361, 574, 209, 109, 351, 185, 559, 444, 319,
	273, 210, 560, 291, 59, 561, 241, 116, 486, 190,
	412, 562, 6, 563, 454, 29, 214, 272, 354, 200,
	564, 253, 284, 274, 283, 565, 49, 566, 298, 43,
	472, 471, 470, 473, 633, 57, 447, 448, 620, 191,
	39, 96, 388, 353, 383, 195, 451, 228, 84, 280,
	5, 44, 31, 407, 9, 332, 64, 67, 441, 442,
	443, 47, 377, 374, 567, 476, 381, 475, 477, 634,
	95, 12, 568, 458, 518, 427, 89, 569, 408, 69,
	-205, 74, -241, -85, -207, -207, -113, -113, -113, -113,
	-113, -205, -205, -205, -205, -202, 11, 110, 11, -202,
	-202, -85, -128, -335, 437, 126, -237, 72, 72, 349,
	72, 33, -44, -44, 74, -44, 69, 100, -44, 70,
	-142, -318, 621, 69, -334, 23, 426, 427, 402, -360,
	191, 230, 227, 66, -360, -356, 329, -337, -336, -335,
	-358, -359, -229, -358, -358, -358, 413, -358, -358, -358,
	-358, -358, -358, -358, -358, -341, -360, 289, 69, -360,
	-337, -335, 333, 333, 333, 333, 333, 333, -98, 23,
	-179, -178, -230, -226, -227, -228, 218, -229, -223, -113,
	427, 428, -9, -186, 87, 9, 110, 69, 18, 69,
	-175, 25, 26, 179, -129, 51, 75, 78, -208, 49,
	-113, -85, -85, -85, -140, 83, 91, 84, 85, -231,
	218, 126, -238, -230, -227, -226, 303, 222, -223, -128,
	-141, -147, -101, 79, 110, 108, 109, 93, -128, -128,
	-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
	-128, -128, -128, -240, 72, 74, 72, -230, -81, -84,
	126, -85, -237, -230, -127, 83, -127, -229, -229, -73,
	-230, 414, -230, -73, -73, -73, -73, -73, -368, 69,
	-368, -9, -81, -81, -81, -368, -85, -85, -81, -81,
	-150, 74, -81, -150, 74, -81, -128, 450, 451, 452,
	-81, -81, -73, -151, -152, 95, -150, -81, -368, -128,
	-229, -229, -81, -82, -81, -81, -81, -368, -368, -84,
	-81, -84, -81, -81, -368, -368, -368, -368, -81, -81,
	-81, -81, -81, -81, -81, -81, -81, -81, -81, -81,
	-115, 87, -113, -88, -93, -95, -96, -117, -100, -367,
	-94, -97, -113, -101, 72, 489, -113, -105, -369, 11,
	67, -369, 69, 179, -193, -196, 69, 425, 427, 428,
	-190, -261, 134, 66, 86, -85, -230, -238, -176, -75,
	-295, -296, 628, 404, 491, 376, 28, 492, 134, 81,
	493, 236, 36, 192, 495, 433, 334, 496, 497, 202,
	498, 499, 500, 295, 501, 345, 502, 503, 504, 505,
	322, 5, -279, -281, -282, -283, -299, 206, -307, 198,
	200, 201, 44, -284, 207, 192, 45, -245, -269, 406,
	407, -255, 68, -254, 68, -254, 381, 373, 376, 374,
	-254, -254, -254, -254, -254, -260, 376, -260, -260, -260,
	-260, 374, 68, 68, -255, -255, -255, -271, 68, -271,
	368, -272, 68, -272, -272, -272, -272, -245, -245, -245,
	-245, -308, -308, -308, -85, -233, 67, 23, 194, -267,
	-266, -263, -264, -265, -262, 28, 24, -267, -50, 242,
	212, 179, 68, 179, 245, 246, -339, 69, 28, -345,
	286, -113, 222, -113, -113, -335, -335, -341, -315, 210,
	205, -113, 69, 69, -113, 74, 72, 72, -130, -288,
	11, 110, -205, -237, -237, -113, -130, -205, -79, 218,
	67, -370, -368, 72, -128, -43, -127, 70, -114, 87,
	74, -333, -239, 401, 427, -361, 126, -229, -360, -361,
	-364, 518, 195, 70, 69, -358, -361, 307, 289, -361,
	11, -306, 19, -100, -367, -368, 69, 179, -57, -56,
	187, 184, 185, 188, 189, -311, 404, 183, 239, 238,
	224, -368, -185, 34, 35, -229, 52, -131, -131, -162,
	-199, 19, 11, 47, 47, -74, 57, 83, 84, 85,
	179, -367, -141, -128, -128, -128, -79, 90, -368, 69,
	-368, 179, -82, -81, -81, -81, -81, -81, -85, -368,
	-368, -368, -368, 69, 67, 23, -368, 67, -368, 11,
	11, -368, 11, 11, -368, -368, 11, -128, -128, -128,
	-368, -368, -81, -154, -152, 97, -85, -368, -368, -368,
	69, 69, -368, -368, -368, -368, -163, 457, -163, -368,
	-368, -368, -368, -368, -163, -163, -163, -163, -368, -368,
	-368, -368, -368, -368, -368, -368, -368, -368, -368, -368,
	-183, 114, -113, 29, 69, -108, -110, -109, -111, 56,
	60, 62, 57, 58, 59, 414, 63, -216, -88, -99,
	47, -367, -118, 114, -120, 23, -239, 64, 196, 65,
	-367, -367, -183, 67, -88, -88, -116, -237, 126, -195,
	-198, 429, 426, 432, 72, 74, 179, -177, 69, -291,
	100, -291, -291, 29, 376, 134, -291, -291, -291, -291,
	-291, 494, 494, -291, -291, -291, -291, -291, -291, -291,
	-291, -291, -291, -291, 346, -291, -291, -291, -291, -297,
	506, 74, 75, 81, 325, 295, -291, -283, 68, 72,
	-289, -226, 45, -284, -286, -284, -284, -289, 72, -289,
	45, 83, 91, -258, -259, -273, -276, -256, 23, 631,
	409, 28, 66, 404, 198, 45, 44, 201, 81, -270,
	408, 75, -260, 75, 468, -260, -254, -254, -254, 381,
	-254, -260, -261, 135, 29, -261, 135, -261, 135, -261,
	135, -261, 135, -260, -277, 74, -277, 75, -271, 75,
	70, 66, -229, -172, -113, -264, -263, -265, 376, 421,
	134, 433, -51, 8, 9, 10, -229, -320, -321, -322,
	-229, 110, 247, 248, -229, -348, 319, -343, 287, 296,
	90, 16, 518, 195, 195, -113, -335, -121, 12, 72,
	72, -202, -205, -128, -338, 233, 234, -183, 191, -334,
	195, 179, 179, -361, 195, 310, -337, -229, 11, 11,
	307, 11, -337, 343, -178, -230, 69, -217, -284, -317,
	-282, -283, -316, 199, 206, -217, 206, 203, -284, 207,
	198, 199, -214, -284, 195, 23, -217, -217, -290, 100,
	-217, 32, 32, 114, 69, 74, 74, 53, -113, -80,
	-173, 126, -230, -82, -79, 90, -128, -84, 126, -238,
	-368, -368, -368, -368, -368, -368, -243, 135, 373, 217,
	371, 364, 391, 378, 406, 369, 407, -240, -243, -240,
	-128, -128, -128, -128, -128, 11, 11, 11, 515, -158,
	99, -85, 96, -128, -128, -229, -168, -367, -163, -163,
	-163, -163, -163, -164, -163, -164, -164, -164, -164, -164,
	-164, -164, -164, -164, -164, -164, -126, 29, 47, -367,
	-9, -367, -188, -192, -150, -226, -228, 218, 303, 222,
	-93, -95, -95, -93, -95, 56, 56, 56, 61, 56,
	61, 61, 56, 56, -109, -239, -368, -368, -146, 241,
	-367, 33, -239, -120, 192, 192, 192, -82, -128, -121,
	-88, -121, -121, 179, 426, 430, 431, -296, -297, -297,
	-297, -291, 29, -291, 75, -365, 72, -225, -223, 74,
	74, 74, -291, -291, 75, 74, -365, 74, 208, 211,
	213, -297, -297, -297, 75, 74, -298, 28, 510, 367,
	511, 512, 513, 74, 28, 75, 28, 75, -297, 507,
	-297, -301, -300, -229, -226, 198, -307, 44, -307, -289,
	-289, -289, -289, 68, 83, -367, 632, 75, -128, 9,
	45, 45, 45, 74, 70, -261, 135, 70, 70, -261,
	135, -260, -254, -261, 135, 72, 135, -261, 135, 70,
	69, 70, 69, 70, 69, -124, 579, 91, -113, -174,
	23, 29, -290, -290, -290, 66, 70, 69, -244, -229,
	-229, -229, -351, 518, 292, -349, -347, 298, 299, 300,
	301, 302, -338, 297, -345, 294, 74, 72, -113, -335,
	-85, -130, -260, -113, -337, 126, 126, -229, 195, -337,
	307, -363, 518, -337, -337, 11, -337, 74, -56, 68,
	-278, 72, -225, -289, -210, 198, 72, 72, 72, -226,
	-225, -227, -228, 72, -226, -225, -227, -228, -229, 45,
	45, 72, -113, -229, -278, 72, -85, -229, -229, -229,
	-186, 69, -83, -368, -128, 179, -164, -164, -164, -164,
	-164, -368, -255, -255, -255, -272, -255, 357, -255, 357,
	-368, -368, -368, 19, 19, 19, 19, -368, -128, -128,
	-128, -367, -77, 454, -85, 69, 69, -234, 72, -187,
	66, -188, -145, -148, -147, -367, -9, -368, -179, 6,
	518, -184, -229, -121, 69, 100, 100, 100, 100, -103,
	-102, 66, 67, -104, 66, -102, 56, 56, 56, -182,
	68, 69, -147, -367, -184, -128, -120, -367, -367, -367,
	-368, 69, -158, -121, -240, -291, -365, 74, 74, 508,
	509, 70, 69, -255, -255, 45, -286, -181, -229, -128,
	23, -134, 434, 443, 442, 441, 439, 440, 436, 438,
	437, 455, 456, -261, 135, -260, 74, -260, 75, 75,
	579, 68, -9, -172, -290, 72, 135, 72, 135, 74,
	-113, -323, -324, -325, 81, 517, 91, 249, 250, 208,
	251, 252, 253, -322, -244, -244, -244, -354, -355, -353,
	295, 317, 318, 303, -352, -350, 312, 313, 314, 315,
	90, 74, 74, 74, -346, 286, 90, 295, 16, 23,
	-205, -326, -203, -363, -337, -363, 289, -337, -278, -160,
	211, 212, -244, -244, -233, -286, 45, 72, -215, 195,
	23, 195, -160, -278, 29, 184, 87, -90, 11, -173,
	-173, 126, -260, 72, -128, -128, -128, -128, -368, -368,
	-368, -128, -368, 74, -128, -128, -144, 114, 27, -187,
	69, -368, -368, 47, -368, -368, 69, -158, -192, -85,
	-85, -85, -85, -85, 68, -85, -181, 241, -368, -120,
	-216, -181, -181, -181, 74, -176, -240, -303, -302, 67,
	202, 81, -300, -175, -175, -289, -289, 70, 69, -368,
	-367, -261, 135, -261, 135, 70, 70, -301, -172, -174,
	72, 135, 19, -173, -325, 74, 253, 249, 253, 253,
	253, 253, 254, -342, 81, 293, -353, 304, 584, 288,
	319, 75, 75, 113, 30, 31, -350, 75, 75, 75,
	75, -347, 16, 518, -345, 294, 74, 74, -327, 38,
	-329, 39, -362, 23, -363, -362, 307, 70, 72, -245,
	-245, 68, -289, -289, 72, -229, -160, 28, 28, -367,
	-121, -88, -83, -368, -368, -368, -368, -76, 110, 518,
	-368, -368, -158, 16, 45, -148, -145, 47, -9, -367,
	-229, -176, -181, 70, -147, -118, -239, -368, -368, -368,
	416, -302, 72, -290, 74, 209, -229, -268, 634, 633,
	-128, 70, -9, 240, -174, 36, 36, 245, 246, 74,
	74, 28, 305, 178, 28, 75, 178, 460, 294, 74,
	72, 295, -257, 196, -330, 43, -328, -275, 42, 16,
	-335, -362, -301, -233, 68, -128, -309, -310, 114, -155,
	13, -173, -368, 516, 63, 519, -169, 116, 115, -142,
	9, -145, -9, 70, -120, -367, 75, -113, -368, -304,
	-303, -172, 241, -22, -3, -11, -12, -13, -14, -16,
	-52, -17, -18, -23, -24, -19, -58, -59, -67, -65,
	-66, -62, -61, -27, -25, -28, -20, -29, -30, -31,
	-35, -36, -26, -37, 94, 197, 275, 344, 75, 28,
	75, 28, 308, 295, 23, -182, 75, -329, 16, -331,
	40, 41, 74, 518, 70, 68, -301, -368, 69, -229,
	-156, 14, 16, 53, 517, 520, -368, -170, 93, -171,
	113, 460, -132, 75, 178, -170, -188, -368, -294, -280,
	-230, 68, -268, -161, 243, 244, -172, -85, -85, 72,
	-48, -235, 278, 279, 280, -230, -38, -22, 306, 306,
	74, 38, 116, 74, 16, 16, 287, -304, -301, 70,
	-310, 47, -166, 458, -157, -85, -143, -87, -85, 53,
	-171, 118, 119, 241, 118, 119, -127, -368, 69, -244,
	-181, -172, 72, 72, -39, -40, 95, 96, 276, 277,
	281, -244, 69, 637, 74, 74, 28, 292, 21, -338,
	70, -304, 225, -165, -167, -229, 69, 518, 90, -229,
	-368, -280, -246, 490, 24, 70, -174, 99, 97, -40,
	-85, -38, 19, 19, 19, 28, -230, 99, -22, 309,
	-304, 226, 69, 23, -87, 519, -171, 23, -239, 74,
	490, -313, -314, 66, -15, -21, -14, -11, -12, -13,
	344, 518, 94, -38, 96, 637, -49, 75, -9, -47,
	-46, 75, -49, 283, 91, 284, 72, -128, -338, -367,
	-167, -168, 520, -239, -247, 74, -314, 66, -313, 66,
	10, 9, -172, -38, -91, 637, -38, 99, 97, -41,
	-42, 98, -22, 69, 282, -128, 223, -373, 83, 28,
	335, -312, 210, 205, 208, 29, -312, 637, 99, 637,
	197, -38, 99, 97, -42, -85, -46, -368, -368, 66,
	-128, 66, 204, 28, 83, 99, 94, 637, 197, -38,
	96, 531, 66, 531, 99, 637, -38, 531, 197, 99,
	637, 197,
}

var yyDef = [...]int{
	-2, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, 1252, 831, 831, 0, 831,
	933, -2, 685, 0, 0, 0, 0, -2, 804, 805,
	806, 810, 811, 826, 828, 0, 347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 561, -2, 0, 1328,
	0, 829, 818, 819, 41, 0, 0, 2180, 2, 1260,
	0, 840, 833, 0, 831, 831, 831, 67, 68, 0,
	99, 0, 0, 0, 934, 0, 0, 0, 1326, 1326,
	251, 1326, 1326, 0, 1342, 249, 0, 1323, 1338, 1339,
	1340, 0, 0, 0, 1324, 0, 1324, 1324, 1324, 1324,
	1324, 1324, 1324, 0, 750, 967, 969, 970, 971, 1351,
	1352, 2175, 2176, 2177, 2178, 2179, 2150, 2151, 2152, 2153,
	2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163,
	2164, 2165, 2166, 2167, 2168, 1930, 1931, 1932, 1933, 1934,
	1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944,
	1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954,
	1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964,
	1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974,
	1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984,
	1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994,
	1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,
	2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014,
	2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024,
	2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034,
	2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044,
	2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054,
	2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064,
	2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074,
	2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084,
	2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094,
	2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104,
	2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114,
	2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124,
	2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134,
	2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144,
	2145, 2146, 2147, 2148, 2149, 0, 0, 0, 795, 0,
	761, 762, 763, 0, 765, 0, 0, 0, 0, 0,
	775, 778, 782, 0, 1260, 1260, 582, 583, 584, 800,
	801, 789, 802, 0, 0, 56, 0, 0, 914, 326,
	328, 0, 348, 0, 351, 354, 1357, 812, 0, 0,
	1382, 1383, 0, 0, 0, 0, 0, 2078, 194, 265,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 0,
	196, 196, 196, 2086, 196, 0, 196, 196, 196, 196,
	196, 264, 254, 255, 256, 0, 0, 0, 2078, 0,
	562, 559, 560, 57, 0, 46, 58, 1276, 935, 936,
	937, 0, 1329, 807, 0, 835, 0, 39, 0, 1266,
	0, 0, 843, 841, 842, 832, 0, 854, 884, 0,
	981, 1815, 987, -2, -2, -2, 1728, 1030, 1031, 1032,
	1033, 1034, 1035, 1036, 1037, 1673, 0, 0, 0, 0,
	0, 1770, 1060, 1061, 1062, 1063, 1064, 1065, 1233, 1234,
	1235, 1236, 1237, 1238, 1239, -2, -2, -2, 1219, 1220,
	0, 2175, 2176, 2177, 2178, 2179, 1293, 0, 1155, 1156,
	1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166,
	1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176,
	1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186,
	1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196,
	1796, 1859, 1747, 1864, 1692, 0, 1684, 1761, 1888, 1889,
	0, 1804, 2156, 0, -2, 1913, 1852, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 2166, 2167, 1754, 1702,
	1812, 1853, 1693, 1714, 1733, 1782, 1783, 1785, 1817, 1818,
	1836, 1845, 1863, 1674, 1675, 1676, 1777, 1778, 1885, 1884,
	1883, 1886, 1919, 1917, 1920, 1662, 1663, 1664, 1665, 1666,
	1667, 1668, 1669, 1670, 1671, 1672, 1677, 1678, 1679, 1680,
	1681, 1683, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1694,
	1695, 1696, 1701, 1703, 1704, 1705, 1706, 1707, 1708, 1709,
	1710, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721,
	1722, 1723, 1724, 1725, 1726, 1727, 1729, 1730, 1732, 1734,
	1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744,
	1745, 1746, 1748, 1749, 1750, 1751, 1752, 1753, 1755, 1756,
	1757, 1758, 1759, 1760, 1762, 1763, 1764, 1765, 1766, 1767,
	1768, 1769, 1771, 1772, 1773, 1774, 1775, 1776, 1779, 1780,
	1781, 1784, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793,
	1794, 1795, 1797, 1798, 1801, 1802, 1803, 1805, 1806, 1807,
	1808, 1809, 1810, 1811, 1813, 1814, 1816, 1820, 1821, 1822,
	1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832,
	1833, 1834, 1835, 1837, 1838, 1839, 1840, 1841, 1842, 1843,
	1844, 1846, 1847, 1848, 1849, 1850, 1851, 1854, 1855, 1856,
	1857, 1858, 1860, 1861, 1862, 1865, 1866, 1867, 1868, 1869,
	1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879,
	1880, 1881, 1882, 1887, 1890, 1891, 1892, 1893, 1894, 1895,
	1896, 1897, 1898, 1899, 1901, 1902, 1903, 1904, 1905, 1906,
	1907, 1908, 1909, 1914, 1915, 1916, 1918, 1921, 1922, 1923,
	1924, 1925, 1926, 1927, 1928, 1929, 1328, 1328, 0, 84,
	2133, 0, 1300, -2, -2, 1302, 0, 0, 0, -2,
	-2, -2, -2, 1685, -2, 1219, 0, 0, 0, 0,
	1673, 1674, 1675, 1676, 1682, 1684, 1692, 1693, 1697, 1698,
	1699, 1700, 1702, 1711, 1714, 1728, 1731, 1733, 1747, 1754,
	1761, 1770, 1777, 1778, 1782, 1783, 1785, 1796, 1799, 1800,
	1804, 1812, 1815, 1817, 1818, 1819, 1836, 1845, 1852, 1853,
	1859, 1863, 1864, 1883, 1884, 1885, 1886, 1888, 1889, 1900,
	1910, 1911, 1912, 1913, 1917, 1919, 1920, 100, 1252, 831,
	101, 0, 392, 393, 0, 0, 0, 0, 0, 0,
	607, 1345, 1346, 2169, 2170, 2171, 2172, 2173, 2174, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 1326, 251, 0, 0, 731, 0, 732, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 749, 0, 751, 78, 752, 795, 754, 0, 0,
	1326, 1326, 0, 0, 0, 0, 0, 609, 610, 795,
	795, 795, 795, 792, 0, 792, 772, 792, 790, 791,
	0, 777, 0, 0, 0, 785, 786, 0, 813, 0,
	0, 820, 822, 823, 824, 825, 821, 0, 830, 0,
	0, 0, 330, 0, 0, 350, 332, 0, 335, 336,
	337, 338, 339, 340, 341, 342, 343, 344, 345, 346,
	0, 353, 0, 1355, 1358, 817, 1373, 1374, 0, 1384,
	1385, 200, 0, 200, 0, 0, 0, 0, 163, 196,
	0, 165, 196, 196, 196, 0, 196, 196, 172, 173,
	196, 175, 176, 177, 178, 179, 196, 181, 182, 183,
	196, 196, 186, 196, 196, 189, 190, 191, 192, 193,
	263, 200, 0, 0, 200, 0, 0, 544, 0, 0,
	0, 0, 549, 550, 551, 552, 0, 0, 555, 556,
	-2, 45, 0, 0, 0, 0, 0, 42, 63, 0,
	836, 837, 62, 2181, 0, 50, 0, 0, 1261, 1264,
	1265, 1253, 1254, 1257, 0, 0, 838, 844, 845, 834,
	0, 855, 0, 0, 0, 0, 885, 0, 888, 889,
	890, 891, 892, 893, 0, 985, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1009, 1010, 1011, 1012, 1013,
	1014, 1015, 988, 0, 1002, 0, 0, 0, 0, 0,
	0, 0, 1053, 1054, 1055, 1056, 1057, 1058, 0, 843,
	0, 0, 843, 843, 843, 843, 843, 0, 0, 1028,
	1925, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 843, 0, 1211, 0, 0,
	1122, 1131, 0, 1123, 1132, 1124, 1133, 1125, 0, 1126,
	1134, 1127, 1135, 1128, 1129, 1136, 1130, 0, 0, 0,
	1024, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 80, 967, 0, 85, 87, 0, 0, 2133, 1303,
	1304, 518, 1317, 1318, 1319, 0, 1315, 0, 1260, 840,
	624, 0, 394, 410, 507, 422, 423, 424, 497, 426,
	499, 499, 0, 499, 499, 499, 499, 499, 515, 515,
	515, 515, 515, 468, 469, 470, 471, 472, 0, 0,
	445, 497, 497, 497, 449, 487, 488, 489, 490, 491,
	492, 493, 494, 427, 428, 429, 430, 431, 432, 433,
	434, 435, 436, 502, 502, 504, 504, 504, 504, 504,
	410, 410, 410, 410, 0, 0, 0, 606, 0, 1343,
	0, 0, 251, -2, 0, -2, 0, 962, 0, 0,
	972, 0, 0, 111, 281, 267, 110, 0, 245, 250,
	246, 247, 248, 0, 0, 0, 0, 258, 746, 1325,
	0, 739, 76, 740, 741, 742, 743, 744, 260, 745,
	968, 1353, 1354, 1386, 1387, 1388, 1389, 1390, 1391, 1392,
	1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402,
	1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412,
	1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422,
	1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432,
	1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442,
	1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452,
	1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462,
	1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472,
	1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482,
	1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492,
	1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502,
	1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512,
	1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522,
	1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532,
	1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542,
	1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552,
	1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562,
	1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572,
	1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582,
	1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592,
	1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602,
	1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612,
	1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622,
	1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632,
	1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642,
	1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652,
	1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 0,
	753, 796, 0, 798, 0, 0, 914, 758, 759, 760,
	611, 766, 767, 768, 774, 795, 0, 0, 0, 914,
	795, 776, 1016, 779, 1139, 0, 803, 815, 814, 0,
	827, 0, 327, 329, 331, 349, 0, 0, 352, 355,
	0, 0, 0, 0, 1376, 0, 1378, 1380, 0, 0,
	201, 202, 203, 200, 0, 195, 0, 218, 266, 0,
	164, 0, 198, 166, 167, 168, 196, 170, 171, 174,
	180, 184, 185, 187, 188, 262, 0, 0, 0, 0,
	161, 0, 545, 546, 547, 548, 557, 554, 59, 0,
	0, 1278, 1281, 1282, 1283, 1284, 1285, 1349, 1350, 0,
	808, 809, 0, 37, 0, 1267, 0, 0, 0, 0,
	1256, 1258, 1259, 0, 0, 1241, 0, 0, 846, 839,
	40, 982, 983, 984, 986, 1003, 0, 1005, 1007, 886,
	887, 856, 0, 1221, 1222, 1223, 1224, 1225, -2, 993,
	994, 1018, 1019, 1020, 0, 0, 0, 0, 1016, 998,
	0, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046,
	1047, 1048, 1049, 1052, 1153, 1154, 0, 1230, 0, 1026,
	850, 851, 0, 1231, 1050, 1240, 1051, 1226, 1059, 1024,
	1228, 1229, 1227, 0, 0, 0, 0, 0, 1021, 0,
	1292, 0, 0, 0, 0, 1100, 0, 0, 0, 0,
	1034, 1233, 0, 1034, 1233, 0, 0, 1786, 1898, 1678,
	0, 0, 0, 1217, 1214, 0, 0, 0, 1140, 0,
	0, 0, 0, 0, 1025, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	82, 0, 966, 0, 894, 896, 897, 898, -2, 0,
	902, 903, 975, 1022, 1351, 0, -2, 0, 0, 74,
	75, 0, 0, 0, 1301, 0, 0, 0, 90, 91,
	86, 1305, 0, -2, 1312, 1313, 1221, 0, 1266, 843,
	391, 625, 627, 627, 627, 0, 0, 627, 627, 627,
	627, 627, 0, 0, 627, 627, 627, 627, 627, 627,
	627, 627, 627, 627, 627, 0, 627, 627, 627, 627,
	0, 627, 395, 397, 398, 399, 0, 589, 597, 0,
	0, 587, 589, 589, 0, 585, 586, 402, 510, 508,
	509, 425, 0, 515, 0, 515, 499, 499, 499, 499,
	454, 515, 457, 460, 461, 518, 0, 518, 518, 518,
	518, 515, 0, 0, 446, 447, 448, 437, 0, 438,
	502, 440, 0, 441, 442, 443, 444, 403, 404, 405,
	406, 603, 604, 605, 0, 0, 0, 96, 0, 105,
	-2, 525, 526, 527, 0, 522, 1327, 106, 0, 283,
	284, 0, 221, 0, 252, 253, 113, 0, 0, 268,
	0, 389, 390, 0, 733, 0, 735, 257, 737, 747,
	748, 738, 0, 0, 79, 797, 755, 756, 757, 979,
	0, 0, 769, 793, 794, 792, 795, 773, 787, 0,
	0, 780, 0, 816, 915, 333, 334, 356, 82, 0,
	1356, 1375, 0, 1379, 1381, 0, 204, 206, 0, 0,
	155, 0, 0, 197, 0, 169, 0, 0, 0, 0,
	0, 553, 0, 60, 0, 1277, 0, 0, 686, 687,
	-2, 724, 1335, 724, 724, 710, 572, 724, 0, 0,
	0, 64, 51, 0, 1979, 54, 0, 1262, 1263, 1255,
	0, 1320, 1321, 1242, 1243, 97, 847, 1004, 1006, 1008,
	0, 1024, 995, 1016, 999, 0, 996, 0, 990, 0,
	1098, 0, 0, 0, 0, 0, 0, 0, 1029, -2,
	1096, 1097, 1099, 0, 0, 0, 1103, 0, 1106, 0,
	0, 1146, 0, 0, 1147, 1111, 0, 0, 0, 0,
	0, 1117, 1252, 0, 1215, 0, 0, 1120, 1121, 1141,
	0, 0, 1142, 1143, 1144, 1145, 1085, 0, 1086, 0,
	0, 0, 0, 0, 1092, 1093, 1094, 1095, 865, 865,
	865, 865, 865, 865, 865, 865, 865, 865, 865, 865,
	0, 0, 965, 0, 0, 0, 0, 0, 0, 938,
	0, 0, 941, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 907, 0, 909, 0, 975, 0, 0, 0,
	1024, 0, 979, 0, 979, 979, 81, 0, 974, 88,
	89, 0, 0, 95, 519, 520, 0, 220, 0, 0,
	628, 0, 0, 627, 0, 627, 0, 0, 0, 0,
	0, 627, 627, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 655, 0, 0, 0, 0, 662,
	663, 667, 668, 669, 670, 671, 0, 396, 0, 590,
	0, 0, 589, 589, 589, 588, 589, 580, 590, 581,
	0, 411, 0, 413, 414, 415, 416, 417, 0, 0,
	0, 0, 0, 514, 0, 539, 541, 0, 0, 421,
	511, 0, 518, 0, 0, 518, 515, 452, 453, 499,
	458, 518, 462, 479, 0, 463, 480, 464, 481, 465,
	482, 466, 483, 518, 0, 495, 0, 0, 439, 0,
	621, 0, 1344, 98, 0, 528, 529, 530, 0, 572,
	572, 572, 0, 285, 286, 287, 963, 0, 222, 223,
	0, 0, 0, 0, 973, 123, 0, 282, 0, 0,
	0, 0, 0, 0, 0, 77, 261, 764, 0, 612,
	613, 914, 771, 1017, 781, 783, 784, 515, 0, 1377,
	0, 0, 0, 0, 0, 0, 216, 199, 0, 0,
	0, 0, 162, 0, 1279, 1280, 0, 0, 589, 0,
	711, 712, 0, 725, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1336, 1337, 0, 0, 0, 573,
	0, 719, 720, 0, 0, 52, 53, 1268, 38, 50,
	0, 857, 1232, 0, 997, 0, 1000, 1027, 852, 0,
	1066, 865, 865, 865, 865, 865, 0, 497, 497, 1200,
	497, 504, 1203, 497, 1205, 497, 1208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1212,
	1119, 1218, 0, 0, 0, 858, 859, 861, 1087, 1088,
	1089, 1090, 1091, 1070, 866, 1071, 1072, 1074, 1075, 1077,
	1078, 1079, 1080, 1082, 1083, 1084, 1286, 0, 0, 0,
	1271, 0, 979, 1294, 0, 0, 0, 0, 2169, 2170,
	895, 929, 931, 0, 926, 939, 940, 942, 0, 944,
	0, 0, 947, 948, 949, 916, 901, 1023, 904, 0,
	0, 0, 975, 913, 0, 0, 0, 0, 0, 1252,
	979, 72, 73, 0, 92, 93, 94, 626, 629, 630,
	631, 0, 627, 0, 634, 635, 678, 679, 680, 637,
	638, 639, 0, 0, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 672, 673, 674,
	675, 676, 677, 656, 657, 658, 659, 660, 661, 0,
	666, 0, 591, 497, 497, 0, 595, 587, 596, 574,
	576, 577, 579, 0, 412, 0, 0, 420, 512, 0,
	538, 540, 542, 543, 498, 450, 475, 500, 501, 451,
	476, 518, 459, 455, 477, 516, 517, 467, 484, 515,
	0, 515, 0, 505, 0, 608, 622, 0, 0, 0,
	96, 572, 0, 0, 0, 0, 229, 0, 225, 0,
	0, 0, 131, 0, 114, 115, 116, 118, 119, 0,
	0, 0, 112, 0, 270, 0, 273, 274, 734, 736,
	980, 795, 1367, 964, 216, 205, 207, 208, 0, 216,
	219, 156, 0, 157, 159, 0, 158, 558, 688, 0,
	721, 0, 0, 1343, 587, 0, -2, 691, 696, 697,
	698, 699, 700, 701, 702, 703, 704, 705, 706, 0,
	717, 0, 693, 0, 721, 0, 714, 0, 0, 55,
	48, 97, 97, 1067, 1001, 0, 1069, 1073, 1068, 1076,
	1081, 1101, 1197, 515, 1201, 1202, 1204, 1206, 1207, 1209,
	1105, 1102, 1104, 0, 0, 0, 0, 1112, 0, 0,
	0, 0, 0, 0, 1216, 0, 0, 863, 862, 65,
	0, 1286, 1269, 1288, 1290, 0, 0, 0, 0, -2,
	1657, 0, 920, 1252, 0, 0, 0, 0, 0, 923,
	930, 0, 0, 924, 0, 925, 943, 945, 946, 899,
	0, 0, 905, 0, 0, -2, 912, 0, 0, 0,
	922, 0, 1260, 71, 632, 0, 636, 640, 641, 664,
	665, 564, 0, 1257, 1257, 589, 589, 0, 918, 0,
	0, 513, 1139, 1139, 1139, 1139, 1139, 1139, 1139, 1139,
	1139, 0, 0, 456, 478, 518, 496, 518, 0, 0,
	623, 0, 96, 98, 0, 533, 534, 535, 536, 537,
	0, 97, 230, 231, 0, 0, 0, 236, 0, 0,
	0, 0, 0, 224, 226, 227, 228, 149, 132, 133,
	0, 0, 0, 0, 124, 125, 0, 0, 0, 0,
	0, 120, 121, 122, 269, 0, 0, 272, 0, 0,
	770, 1369, 1363, 209, 216, 209, 0, 160, 0, 690,
	722, 0, 410, 410, 0, 589, 589, 713, 0, 1333,
	1334, 0, 708, 721, 0, 0, 0, 979, 0, 0,
	848, 853, 1198, 1199, 0, 0, 0, 0, 1113, 1114,
	1115, 1148, 1118, 1213, 0, 0, 1252, 0, 0, 66,
	0, 1291, -2, 0, 0, 83, 0, 1260, 1295, 1296,
	1297, 1298, 1299, 927, 0, 932, 0, 0, 975, 910,
	0, 0, 0, 0, 0, 70, 633, 563, 567, 0,
	572, 0, 592, 593, 594, 575, 578, 0, 0, 407,
	0, 473, 485, 474, 486, 503, 506, 0, 103, 0,
	531, 532, 0, 98, 232, 233, 234, 235, 237, 238,
	0, 0, 0, 109, 0, 0, 134, 0, 0, 0,
	0, 144, 145, 146, 147, 148, 126, 127, 128, 129,
	130, 117, 0, 0, 271, 0, 276, 277, 1330, 1371,
	-2, 0, 152, 0, 209, 154, 217, 689, 723, 400,
	401, 0, 1343, 0, 692, 707, 709, 0, 716, 0,
	1244, 49, 97, 1107, 1109, 1108, 1110, 0, 0, 0,
	1137, 1138, 867, 0, 0, 1289, 1270, 0, 1274, 0,
	921, 69, 0, 917, 906, 908, 975, 976, 977, 978,
	0, 568, 569, 0, 571, 0, 919, 418, 408, 409,
	0, 565, 96, 0, 56, 239, 240, 241, 242, 150,
	151, 135, 136, 0, 138, 139, 0, 0, 0, 279,
	0, 275, 916, 0, 1363, 0, 1365, 0, 1362, 0,
	210, 153, 0, 0, 0, 715, 0, 727, 0, 1249,
	0, 849, 1116, 0, 0, 0, 0, 0, 0, 864,
	0, 1273, 0, 928, 911, 0, 570, 0, 407, 102,
	566, 104, 288, 96, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 383, 384,
	385, 386, 387, 388, 0, 0, 0, 56, 0, 140,
	0, 142, 143, 278, 0, 36, 0, 1370, 0, 1368,
	0, 0, 1364, 0, 565, 0, 0, 726, 0, 0,
	877, 0, 0, 1149, 0, 1152, 860, 868, 0, 871,
	0, 0, 0, 882, 0, 869, 1287, -2, 0, 952,
	0, 0, 419, 96, 0, 0, 108, 0, 0, 1345,
	0, 0, -2, -2, -2, 1347, 0, 357, 137, 141,
	280, 1331, 1332, 1372, 0, 0, 0, 694, 0, 565,
	728, 0, 47, 0, 1250, 1251, 1245, 1246, 1248, 1150,
	0, 872, 873, 874, 875, 876, 0, 0, 0, 0,
	0, 98, 289, 290, 0, 299, 0, 56, 0, 0,
	0, 313, 0, 56, 1366, 1360, 211, 212, 213, 215,
	565, 718, 0, 878, 879, 0, 0, 0, 0, 883,
	0, 953, 954, 0, 0, 598, 56, 0, 56, 300,
	0, 0, 0, 0, 0, 0, 1348, 243, 358, 0,
	695, 0, 0, 0, 1247, 0, 870, 0, 951, 957,
	0, 599, 600, 0, 96, 291, 292, 293, 294, 295,
	56, 0, 297, 0, 56, 56, 309, 310, 311, 56,
	318, 320, 321, 322, 0, 324, 325, 314, 214, 0,
	880, 881, 1151, 950, 958, 956, 601, 0, 602, 0,
	0, 0, 107, 0, 57, 56, 0, 0, 56, 0,
	306, 0, 312, 0, 323, 0, 1805, 955, 0, 0,
	0, 614, 616, 617, 0, 0, 615, 56, 0, -2,
	302, 0, 0, 56, 307, 0, 319, 729, 730, 0,
	0, 0, 618, 619, 620, 296, 298, 56, 304, 0,
	56, 959, 0, 961, 0, 56, 0, 960, 303, 0,
	-2, 305,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 92, 3, 3, 3, 129, 121, 3,
	68, 70, 126, 124, 69, 125, 179, 127, 111, 112,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 637,
	101, 100, 102, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 131, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 120, 3, 132,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 82, 83, 84, 85,
	86, 87, 88, 89, 90, 91, 93, 94, 95, 96,
	97, 98, 99, 103, 104, 105, 106, 107, 108, 109,
	110, 113, 114, 115, 116, 117, 118, 119, 122, 123,
	128, 130, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 177, 178, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257, 258, 259, 260, 261,
	262, 263, 264, 265, 266, 267, 268, 269, 270, 271,
	272, 273, 274, 275, 276, 277,
}

var yyTok3 = [...]int{
	57600, 278, 57601, 279, 57602, 280, 57603, 281, 57604, 282,
	57605, 283, 57606, 284, 57607, 285, 57608, 286, 57609, 287,
	57610, 288, 57611, 289, 57612, 290, 57613, 291, 57614, 292,
	57615, 293, 57616, 294, 57617, 295, 57618, 296, 57619, 297,
	57620, 298, 57621, 299, 57622, 300, 57623, 301, 57624, 302,
	57625, 303, 57626, 304, 57627, 305, 57628, 306, 57629, 307,
	57630, 308, 57631, 309, 57632, 310, 57633, 311, 57634, 312,
	57635, 313, 57636, 314, 57637, 315, 57638, 316, 57639, 317,
	57640, 318, 57641, 319, 57642, 320, 57643, 321, 57644, 322,
	57645, 323, 57646, 324, 57647, 325, 57648, 326, 57649, 327,
	57650, 328, 57651, 329, 57652, 330, 57653, 331, 57654, 332,
	57655, 333, 57656, 334, 57657, 335, 57658, 336, 57659, 337,
	57660, 338, 57661, 339, 57662, 340, 57663, 341, 57664, 342,
	57665, 343, 57666, 344, 57667, 345, 57668, 346, 57669, 347,
	57670, 348, 57671, 349, 57672, 350, 57673, 351, 57674, 352,
	57675, 353, 57676, 354, 57677, 355, 57678, 356, 57679, 357,
	57680, 358, 57681, 359, 57682, 360, 57683, 361, 57684, 362,
	57685, 363, 57686, 364, 57687, 365, 57688, 366, 57689, 367,
	57690, 368, 57691, 369, 57692, 370, 57693, 371, 57694, 372,
	57695, 373, 57696, 374, 57697, 375, 57698, 376, 57699, 377,
	57700, 378, 57701, 379, 57702, 380, 57703, 381, 57704, 382,
	57705, 383, 57706, 384, 57707, 385, 57708, 386, 57709, 387,
	57710, 388, 57711, 389, 57712, 390, 57713, 391, 57714, 392,
	57715, 393, 57716, 394, 57717, 395, 57718, 396, 57719, 397,
	57720, 398, 57721, 399, 57722, 400, 57723, 401, 57724, 402,
	57725, 403, 57726, 404, 57727, 405, 57728, 406, 57729, 407,
	57730, 408, 57731, 409, 57732, 410, 57733, 411, 57734, 412,
	57735, 413, 57736, 414, 57737, 415, 57738, 416, 57739, 417,
	57740, 418, 57741, 419, 57742, 420, 57743, 421, 57744, 422,
	57745, 423, 57746, 424, 57747, 425, 57748, 426, 57749, 427,
	57750, 428, 57751, 429, 57752, 430, 57753, 431, 57754, 432,
	57755, 433, 57756, 434, 57757, 435, 57758, 436, 57759, 437,
	57760, 438, 57761, 439, 57762, 440, 57763, 441, 57764, 442,
	57765, 443, 57766, 444, 57767, 445, 57768, 446, 57769, 447,
	57770, 448, 57771, 449, 57772, 450, 57773, 451, 57774, 452,
	57775, 453, 57776, 454, 57777, 455, 57778, 456, 57779, 457,
	57780, 458, 57781, 459, 57782, 460, 57783, 461, 57784, 462,
	57785, 463, 57786, 464, 57787, 465, 57788, 466, 57789, 467,
	57790, 468, 57791, 469, 57792, 470, 57793, 471, 57794, 472,
	57795, 473, 57796, 474, 57797, 475, 57798, 476, 57799, 477,
	57800, 478, 57801, 479, 57802, 480, 57803, 481, 57804, 482,
	57805, 483, 57806, 484, 57807, 485, 57808, 486, 57809, 487,
	57810, 488, 57811, 489, 57812, 490, 57813, 491, 57814, 492,
	57815, 493, 57816, 494, 57817, 495, 57818, 496, 57819, 497,
	57820, 498, 57821, 499, 57822, 500, 57823, 501, 57824, 502,
	57825, 503, 57826, 504, 57827, 505, 57828, 506, 57829, 507,
	57830, 508, 57831, 509, 57832, 510, 57833, 511, 57834, 512,
	57835, 513, 57836, 514, 57837, 515, 57838, 516, 57839, 517,
	57840, 518, 57841, 519, 57842, 520, 57843, 521, 57844, 522,
	57845, 523, 57846, 524, 57847, 525, 57848, 526, 57849, 527,
	57850, 528, 57851, 529, 57852, 530, 57853, 531, 57854, 532,
	57855, 533, 57856, 534, 57857, 535, 57858, 536, 57859, 537,
	57860, 538, 57861, 539, 57862, 540, 57863, 541, 57864, 542,
	57865, 543, 57866, 544, 57867, 545, 57868, 546, 57869, 547,
	57870, 548, 57871, 549, 57872, 550, 57873, 551, 57874, 552,
	57875, 553, 57876, 554, 57877, 555, 57878, 556, 57879, 557,
	57880, 558, 57881, 559, 57882, 560, 57883, 561, 57884, 562,
	57885, 563, 57886, 564, 57887, 565, 57888, 566, 57889, 567,
	57890, 568, 57891, 569, 57892, 570, 57893, 571, 57894, 572,
	57895, 573, 57896, 574, 57897, 575, 57898, 576, 57899, 577,
	57900, 578, 57901, 579, 57902, 580, 57903, 581, 57904, 582,
	57905, 583, 57906, 584, 57907, 585, 57908, 586, 57909, 587,
	57910, 588, 57911, 589, 57912, 590, 57913, 591, 57914, 592,
	57915, 593, 57916, 594, 57917, 595, 57918, 596, 57919, 597,
	57920, 598, 57921, 599, 57922, 600, 57923, 601, 57924, 602,
	57925, 603, 57926, 604, 57927, 605, 57928, 606, 57929, 607,
	57930, 608, 57931, 609, 57932, 610, 57933, 611, 57934, 612,
	57935, 613, 57936, 614, 57937, 615, 57938, 616, 57939, 617,
	57940, 618, 57941, 619, 57942, 620, 57943, 621, 57944, 622,
	57945, 623, 57946, 624, 57947, 625, 57948, 626, 57949, 627,
	57950, 628, 57951, 629, 57952, 630, 57953, 631, 57954, 632,
	57955, 633, 57956, 634, 57957, 635, 57958, 636, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:549
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:553
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:560
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:595
		{
			setParseTree(yylex, nil)
		}
	case 36:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:601
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 37:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:607
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			if err := yyDollar[1].selStmt.SetInto(yyDollar[5].into); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 38:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:618
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:624
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 40:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:634
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:641
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 42:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:645
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:651
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:655
		{
			yyDollar[3].selStmt.SetWith(yyDollar[2].with)
			yyVAL.selStmt = yyDollar[3].selStmt
		}
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:662
		{
			yyVAL.with = &With{Ctes: yyDollar[2].tableExprs, Recursive: true}
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:665
		{
			yyVAL.with = &With{Ctes: yyDollar[1].tableExprs, Recursive: false}
		}
	case 47:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:671
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr), Window: yyDollar[13].window, Into: yyDollar[8].into}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 48:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:679
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 49:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:683
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 50:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:692
		{
			yyVAL.into = nil
		}
	case 51:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:696
		{
			yyVAL.into = &Into{Variables: yyDollar[2].variables}
		}
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:700
		{
			yyVAL.into = &Into{Outfile: string(yyDollar[3].bytes)}
		}
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:704
		{
			yyVAL.into = &Into{Dumpfile: string(yyDollar[3].bytes)}
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:710
		{
			yyVAL.variables = Variables{yyDollar[1].colIdent}
		}
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:714
		{
			yyVAL.variables = append(yyVAL.variables, yyDollar[3].colIdent)
		}
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:719
		{
			yyVAL.with = nil
		}
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:723
		{
			yyVAL.with = yyDollar[2].with
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:729
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:733
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:739
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[4].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[2].columns}
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:745
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:753
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:759
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:767
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 65:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:773
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[7].ins
			ins.Action = yyDollar[2].str
			ins.Comments = yyDollar[3].bytes2
			ins.Ignore = yyDollar[4].str
			ins.Table = yyDollar[5].tableName
			ins.Partitions = yyDollar[6].partitions
			ins.OnDup = OnDup(yyDollar[8].assignExprs)
			ins.With = yyDollar[1].with
			yyVAL.statement = ins
		}
	case 66:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:786
		{
			cols := make(Columns, 0, len(yyDollar[8].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[9].assignExprs))
			for _, updateList := range yyDollar[8].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[2].str, Comments: Comments(yyDollar[3].bytes2), Ignore: yyDollar[4].str, Table: yyDollar[5].tableName, Partitions: yyDollar[6].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[9].assignExprs), With: yyDollar[1].with}
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:798
		{
			yyVAL.str = InsertStr
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:802
		{
			yyVAL.str = ReplaceStr
		}
	case 69:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:808
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[3].bytes2), Ignore: yyDollar[4].str, TableExprs: yyDollar[5].tableExprs, Exprs: yyDollar[7].assignExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), OrderBy: yyDollar[9].orderBy, Limit: yyDollar[10].limit, With: yyDollar[1].with}
		}
	case 70:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:814
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitions, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit, With: yyDollar[1].with}
		}
	case 71:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:818
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[5].tableNames, TableExprs: yyDollar[7].tableExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), With: yyDollar[1].with}
		}
	case 72:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:822
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), With: yyDollar[1].with}
		}
	case 73:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:826
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), With: yyDollar[1].with}
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:831
		{
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:832
		{
		}
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:836
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:840
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:846
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:850
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:856
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 81:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:860
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 82:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:865
		{
			yyVAL.partitions = nil
		}
	case 83:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:869
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:875
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 85:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:879
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 86:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:886
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:895
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:899
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:905
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:909
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 91:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:913
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:919
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:923
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:927
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:931
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:936
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 97:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:941
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:946
		{
			yyVAL.boolean = yySpecialCommentMode(yylex)
		}
	case 99:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:952
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:961
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:966
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 102:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:971
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 103:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:975
		{
			yyDollar[2].viewSpec.ViewName = yyDollar[4].tableName.ToViewName()
			yyDollar[2].viewSpec.ViewExpr = yyDollar[8].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[2].viewSpec, SpecialCommentMode: yyDollar[7].boolean, SubStatementPositionStart: yyDollar[6].int, SubStatementPositionEnd: yyDollar[9].int - 1}
		}
	case 104:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:981
		{
			yyDollar[4].viewSpec.ViewName = yyDollar[6].tableName.ToViewName()
			yyDollar[4].viewSpec.ViewExpr = yyDollar[10].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[4].viewSpec, SpecialCommentMode: yyDollar[9].boolean, SubStatementPositionStart: yyDollar[8].int, SubStatementPositionEnd: yyDollar[11].int - 1, OrReplace: true}
		}
	case 105:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:987
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 106:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:995
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 107:
		yyDollar = yyS[yypt-16 : yypt+1]
//line sql.y:1003
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName, Definer: yyDollar[2].str, Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[15].statement}, SpecialCommentMode: yyDollar[14].boolean, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[16].int - 1}
		}
	case 108:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1007
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName, Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[11].statement}, SpecialCommentMode: yyDollar[10].boolean, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[12].int - 1}
		}
	case 109:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1011
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].tlsOptionItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].accountLimitItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].passLockItems)
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames, TLSOptions: tlsOptions, AccountLimits: accountLimits, PasswordOptions: passwordOptions, Locked: locked, Attribute: yyDollar[9].str}
		}
	case 110:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1030
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 111:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1039
		{
			yyVAL.accountNames = nil
		}
	case 112:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1043
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 113:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1048
		{
			yyVAL.tlsOptionItems = nil
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1052
		{
			yyVAL.tlsOptionItems = nil
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1056
		{
			yyVAL.tlsOptionItems = yyDollar[2].tlsOptionItems
		}
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1062
		{
			yyVAL.tlsOptionItems = []TLSOptionItem{yyDollar[1].tlsOptionItem}
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1066
		{
			yyVAL.tlsOptionItems = append(yyDollar[1].tlsOptionItems, yyDollar[3].tlsOptionItem)
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1072
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1076
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1080
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1084
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1088
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 123:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1093
		{
			yyVAL.accountLimitItems = nil
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1097
		{
			yyVAL.accountLimitItems = yyDollar[2].accountLimitItems
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1103
		{
			yyVAL.accountLimitItems = []AccountLimitItem{yyDollar[1].accountLimitItem}
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1107
		{
			yyVAL.accountLimitItems = append(yyDollar[1].accountLimitItems, yyDollar[2].accountLimitItem)
		}
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1113
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1117
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1121
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1125
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 131:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1130
		{
			yyVAL.passLockItems = nil
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1134
		{
			yyVAL.passLockItems = yyDollar[1].passLockItems
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1140
		{
			yyVAL.passLockItems = []PassLockItem{yyDollar[1].passLockItem}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1144
		{
			yyVAL.passLockItems = append(yyDollar[1].passLockItems, yyDollar[2].passLockItem)
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1150
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1154
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 137:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1158
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1162
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1166
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 140:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1170
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 141:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1174
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 142:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1178
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 143:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1182
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1186
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1190
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1194
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1198
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1202
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 149:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1207
		{
			yyVAL.str = ""
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1211
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.str = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1216
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 152:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1222
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 153:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1227
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[5].grantObjectType, PrivilegeLevel: yyDollar[6].privilegeLevel, To: yyDollar[8].accountNames, WithGrantOption: yyDollar[9].boolean, As: yyDollar[10].grantAssumption}
		}
	case 154:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1232
		{
			yyVAL.statement = &GrantPrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 155:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1236
		{
			yyVAL.statement = &GrantRole{Roles: yyDollar[2].accountNames, To: yyDollar[4].accountNames, WithAdminOption: yyDollar[5].boolean}
		}
	case 156:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1240
		{
			yyVAL.statement = &GrantProxy{On: yyDollar[4].accountName, To: yyDollar[6].accountNames, WithGrantOption: yyDollar[7].boolean}
		}
	case 157:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1246
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &RevokePrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 158:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1251
		{
			yyVAL.statement = &RevokePrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 159:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1255
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[7].accountNames}
		}
	case 160:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1259
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[8].accountNames}
		}
	case 161:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1263
		{
			yyVAL.statement = &RevokeRole{Roles: yyDollar[2].accountNames, From: yyDollar[4].accountNames}
		}
	case 162:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1267
		{
			yyVAL.statement = &RevokeProxy{On: yyDollar[4].accountName, From: yyDollar[6].accountNames}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1273
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].strs}
		}
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1277
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].strs}
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1281
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].strs}
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1285
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].strs}
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1289
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].strs}
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1293
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].strs}
		}
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1297
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].strs}
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1301
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].strs}
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1305
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].strs}
		}
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1309
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].strs}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1313
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].strs}
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1317
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].strs}
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1321
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].strs}
		}
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1325
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].strs}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1329
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].strs}
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1333
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].strs}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1337
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].strs}
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1341
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].strs}
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1345
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].strs}
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1349
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].strs}
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1353
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].strs}
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1357
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].strs}
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1361
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].strs}
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1365
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].strs}
		}
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1369
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].strs}
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1373
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].strs}
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1377
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].strs}
		}
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1381
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].strs}
		}
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1385
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].strs}
		}
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1389
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].strs}
		}
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1393
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].strs}
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1399
		{
			yyVAL.grantPrivileges = []Privilege{yyDollar[1].grantPrivilege}
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1403
		{
			yyVAL.grantPrivileges = append(yyDollar[1].grantPrivileges, yyDollar[3].grantPrivilege)
		}
	case 196:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1408
		{
			yyVAL.strs = nil
		}
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1412
		{
			yyVAL.strs = yyDollar[2].strs
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1418
		{
			yyVAL.strs = []string{yyDollar[1].colIdent.String()}
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1422
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].colIdent.String())
		}
	case 200:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1427
		{
			yyVAL.grantObjectType = GrantObjectType_Any
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1431
		{
			yyVAL.grantObjectType = GrantObjectType_Table
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1435
		{
			yyVAL.grantObjectType = GrantObjectType_Function
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1439
		{
			yyVAL.grantObjectType = GrantObjectType_Procedure
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1445
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1449
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1453
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].colIdent.String()}
		}
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1457
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: "*"}
		}
	case 208:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1461
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: yyDollar[3].colIdent.String()}
		}
	case 209:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1466
		{
			yyVAL.grantAssumption = nil
		}
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1470
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 211:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1474
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 212:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1478
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].accountName, Roles: nil}
		}
	case 213:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1482
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].accountName, Roles: nil}
		}
	case 214:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1486
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].accountName, Roles: yyDollar[7].accountNames}
		}
	case 215:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1490
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].accountName, Roles: yyDollar[5].accountNames}
		}
	case 216:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1495
		{
			yyVAL.boolean = false
		}
	case 217:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1499
		{
			yyVAL.boolean = true
		}
	case 218:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1504
		{
			yyVAL.boolean = false
		}
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1508
		{
			yyVAL.boolean = true
		}
	case 220:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1515
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 221:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1527
		{
			yyVAL.procedureParams = nil
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1531
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1537
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1541
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1547
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[1].colIdent.String(), Type: yyDollar[2].columnType}
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1551
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1555
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1559
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 229:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1564
		{
			yyVAL.characteristics = nil
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1568
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1574
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1578
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1584
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1588
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1592
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1596
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1600
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1604
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1608
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1612
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1616
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1620
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1626
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1632
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: "", Definer: yyDollar[1].str, Security: yyDollar[2].str}
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1636
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: yyDollar[1].str, Definer: yyDollar[2].str, Security: yyDollar[3].str}
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1642
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1646
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1650
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 249:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1655
		{
			yyVAL.str = ""
		}
	case 250:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1659
		{
			yyVAL.str = yyDollar[3].accountName.String()
		}
	case 251:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1664
		{
			yyVAL.str = ""
		}
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1668
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1672
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1678
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1682
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1686
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1692
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1700
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1704
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1710
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1714
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1720
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1728
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1736
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1746
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1750
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1756
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1760
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 269:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1764
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1768
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 271:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1772
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 272:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1778
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1782
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1786
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 275:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1790
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 276:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1794
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 277:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1798
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1804
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1808
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 280:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1812
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1818
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1822
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1828
		{
			yyVAL.str = BeforeStr
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1832
		{
			yyVAL.str = AfterStr
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1838
		{
			yyVAL.str = InsertStr
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1842
		{
			yyVAL.str = UpdateStr
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1846
		{
			yyVAL.str = DeleteStr
		}
	case 288:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1851
		{
			yyVAL.triggerOrder = nil
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1855
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1859
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1865
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 296:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1875
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 297:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1881
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 298:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1885
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1891
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1895
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 301:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1901
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 302:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1907
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 303:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1912
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 304:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1917
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 305:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1923
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1931
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1935
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 308:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1941
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 309:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1947
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 310:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1951
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 311:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1955
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 312:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1959
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1963
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 314:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1967
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1974
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1978
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1982
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1988
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1992
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1998
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2002
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2006
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2010
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2014
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2018
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2024
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2028
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2032
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 329:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2036
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2042
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2046
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2052
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2056
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2062
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2068
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2072
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2076
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2080
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2084
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2088
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2092
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2096
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2100
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2104
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2108
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2112
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2118
		{
			yyVAL.statement = &Resignal{}
		}
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2122
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 349:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2126
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2130
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2134
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 352:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2138
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2144
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 354:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2149
		{
			yyVAL.exprs = nil
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2153
		{
			yyVAL.exprs = nil
		}
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2157
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2163
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2167
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2173
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 389:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2208
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
		}
	case 390:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2222
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: TableName{Name: NewTableIdent(string(yyDollar[5].bytes))}, IfNotExists: ne, Temporary: neTemp}
		}
	case 391:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2238
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2245
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2250
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2255
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2261
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 396:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2265
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2270
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2274
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2278
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2284
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2292
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2302
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2310
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2318
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2326
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2334
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 407:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2343
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2347
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2351
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 410:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2356
		{
			yyVAL.columnType = ColumnType{}
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2360
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2369
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2378
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2387
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2396
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2405
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2414
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 418:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2423
		{
			opt := ColumnType{GeneratedExpr: yyDollar[4].expr, Stored: yyDollar[6].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 419:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2432
		{
			opt := ColumnType{GeneratedExpr: yyDollar[6].expr, Stored: yyDollar[8].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2441
		{
			opt := ColumnType{SRID: NewIntVal(yyDollar[3].bytes)}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2452
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2463
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2468
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2474
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2478
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2482
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2486
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2490
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2494
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2498
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2502
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2506
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2510
		{
			yyVAL.columnType = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2516
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2522
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2528
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2534
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 441:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2540
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2546
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2552
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2558
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2566
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2570
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2574
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2578
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2582
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2588
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2592
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2596
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2600
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2604
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 455:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2608
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 456:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2612
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2616
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2620
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 459:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2624
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 460:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2628
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2632
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2636
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2640
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2644
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2648
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2652
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 467:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2656
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2660
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2664
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2668
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2672
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2676
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 473:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2680
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 474:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2685
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2689
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 476:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2693
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 477:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2697
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 478:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2701
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, BinaryCollate: true}
		}
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2705
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2709
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2713
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2717
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2721
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 484:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2725
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 485:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2729
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, BinaryCollate: true}
		}
	case 486:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2733
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, BinaryCollate: true}
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2739
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2743
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2747
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2751
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2755
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2759
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2763
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2767
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2773
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2778
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2783
		{
			yyVAL.sqlVal = nil
		}
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2787
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 499:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2792
		{
			yyVAL.sqlVal = nil
		}
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2796
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2800
		{
			yyVAL.sqlVal = NewValArg(yyDollar[2].bytes)
		}
	case 502:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2806
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 503:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2810
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 504:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2818
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2822
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 506:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2828
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 507:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2836
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2840
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2844
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 510:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2849
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2853
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 512:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2859
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2865
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2871
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2876
		{
			yyVAL.str = ""
		}
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2880
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2884
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2889
		{
			yyVAL.str = ""
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2893
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2897
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2902
		{
			yyVAL.boolean = false
		}
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2906
		{
			yyVAL.boolean = true
		}
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2911
		{
			yyVAL.charsetCollates = nil
		}
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2915
		{
			yyVAL.charsetCollates = yyDollar[1].charsetCollates
		}
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2921
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2925
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2929
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2933
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 529:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2937
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2941
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 531:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2947
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 532:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2951
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2955
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2959
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2965
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2969
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 537:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2975
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2981
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2985
		{
			yyVAL.colKeyOpt = colKey
		}
	case 540:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2989
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2993
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2997
		{
			yyVAL.colKeyOpt = colKeyFulltextKey
		}
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3003
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3009
		{
			yyVAL.statement = &Flush{Type: yyDollar[2].str, Option: yyDollar[3].flushOption}
		}
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3015
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3019
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3023
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3027
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3031
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3035
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3039
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3043
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3047
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].str}
		}
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3051
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3055
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3059
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 557:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3064
		{
			yyVAL.str = ""
		}
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3066
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3070
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3072
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 561:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3075
		{
			yyVAL.str = ""
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3077
		{
			yyVAL.str = yyDollar[1].str
		}
	case 563:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3081
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 564:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3085
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 565:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3090
		{
			yyVAL.indexOptions = nil
		}
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3094
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3100
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3104
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3110
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3114
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3119
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 572:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3125
		{
			yyVAL.str = ""
		}
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3129
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3137
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 575:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3141
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3145
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3149
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true}
		}
	case 578:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3153
		{
			var name string
			name = yyDollar[2].str
			if name == "" {
				name = yyDollar[5].str
			}
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].str), Name: NewColIdent(name), Unique: true}
		}
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3162
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3166
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3170
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3176
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3180
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3184
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3190
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3194
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 587:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3199
		{
			yyVAL.str = ""
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3203
		{
			yyVAL.str = yyDollar[1].str
		}
	case 589:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3208
		{
			yyVAL.str = ""
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3212
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3218
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3222
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3228
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3232
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3238
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3242
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3246
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 598:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3252
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 599:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3256
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 600:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3260
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 601:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3264
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 602:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3268
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3274
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3279
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3283
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3287
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3291
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 608:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3297
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3303
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3307
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3312
		{
			yyVAL.str = ""
		}
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3316
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3320
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3326
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3332
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3338
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3342
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3346
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3350
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3354
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 621:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3359
		{
			yyVAL.boolean = true
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3363
		{
			yyVAL.boolean = true
		}
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3367
		{
			yyVAL.boolean = false
		}
	case 624:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3372
		{
			yyVAL.str = ""
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3376
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3380
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 627:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3385
		{
			yyVAL.str = " "
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3389
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3395
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + yyDollar[3].str
		}
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3399
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + yyDollar[3].str
		}
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3403
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + yyDollar[3].str
		}
	case 632:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3407
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + yyDollar[3].str + yyDollar[4].str
		}
	case 633:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3411
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + yyDollar[4].str + yyDollar[5].str
		}
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3415
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + string(yyDollar[3].bytes)
		}
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3419
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + string(yyDollar[3].bytes)
		}
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3423
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + yyDollar[3].str + string(yyDollar[4].bytes)
		}
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3427
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3431
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3435
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 640:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3439
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + yyDollar[3].str + "'" + string(yyDollar[4].bytes) + "'"
		}
	case 641:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3443
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + yyDollar[3].str + "'" + string(yyDollar[4].bytes) + "'"
		}
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3447
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + string(yyDollar[3].bytes)
		}
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3451
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3455
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + string(yyDollar[3].bytes)
		}
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3459
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3463
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + string(yyDollar[3].bytes)
		}
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3467
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + string(yyDollar[3].bytes)
		}
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3471
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + string(yyDollar[3].bytes)
		}
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3475
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + yyDollar[3].str
		}
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3479
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + yyDollar[3].str
		}
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3483
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + yyDollar[3].str
		}
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3487
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + string(yyDollar[3].bytes)
		}
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3491
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3495
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + yyDollar[3].str
		}
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3499
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3503
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3507
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + string(yyDollar[3].bytes)
		}
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3511
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + string(yyDollar[3].bytes)
		}
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3515
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + string(yyDollar[3].bytes)
		}
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3519
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + string(yyDollar[3].bytes)
		}
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3523
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + yyDollar[3].str
		}
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3527
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str
		}
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3531
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3535
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)
		}
	case 665:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3539
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)
		}
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3543
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + yyDollar[3].str
		}
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3549
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3553
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3558
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3562
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3566
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3572
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3576
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3580
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3584
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3588
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3592
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 681:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3603
		{
			yyVAL.str = ""
		}
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3607
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 683:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3612
		{
			yyVAL.str = string("")
		}
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3616
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 686:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3625
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3638
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3642
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 689:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3648
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 690:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3655
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3662
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 692:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3666
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3670
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 694:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3675
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 695:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3679
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3683
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3688
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3693
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3698
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3703
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3708
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3713
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3718
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3723
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3728
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3733
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 707:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3737
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 708:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3741
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 709:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3748
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3754
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3758
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3764
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 713:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3770
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3775
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 715:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3779
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 716:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3783
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3787
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 718:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3793
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[7].indexColumns, Options: yyDollar[9].indexOptions}
			yyVAL.ddl = ddl
		}
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3799
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3803
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 721:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3808
		{
			yyVAL.columnOrder = nil
		}
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3812
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3816
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 724:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3821
		{
		}
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3823
		{
		}
	case 726:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3827
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3833
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3837
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 729:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3843
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 730:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3847
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3853
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3857
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3863
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 734:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3867
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3875
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 736:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3879
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 737:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3885
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 738:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3893
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3897
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 740:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3905
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 741:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3913
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3921
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName}, IfExists: exists}
		}
	case 743:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3929
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName}, IfExists: exists}
		}
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3937
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 745:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3945
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 746:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3954
		{

		}
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3958
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3962
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3968
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3972
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3978
		{
			yyVAL.statement = &Analyze{Tables: yyDollar[3].tableNames}
		}
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3984
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 753:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3989
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3993
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 755:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3997
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 756:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4001
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 757:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4005
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 758:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4010
		{
			yyVAL.statement = &Show{Type: CreateProcedureStr, Table: yyDollar[4].tableName}
		}
	case 759:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4014
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 760:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4018
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4022
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4026
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4030
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 764:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4034
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4038
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 766:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4042
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4046
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 768:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4050
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 769:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4054
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 770:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4058
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, AsOf: yyDollar[7].expr, Filter: yyDollar[8].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, Table: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 771:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4063
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4068
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 773:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4072
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 774:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4076
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4080
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 776:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4084
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4090
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 778:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4098
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 779:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4102
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 780:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4107
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 781:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4111
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4116
		{
			yyVAL.statement = &ShowPrivileges{}
		}
	case 783:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4120
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 784:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4124
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4128
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4132
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4138
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 788:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4144
		{
			yyVAL.boolean = false
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4148
		{
			yyVAL.boolean = true
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4154
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4158
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 792:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4164
		{
			yyVAL.str = ""
		}
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4168
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4172
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 795:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4178
		{
			yyVAL.showFilter = nil
		}
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4182
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4186
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[3].bytes)}
		}
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4190
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 799:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4196
		{
			yyVAL.str = ""
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4200
		{
			yyVAL.str = SessionStr
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4204
		{
			yyVAL.str = GlobalStr
		}
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4210
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 803:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4214
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: yyDollar[2].tableIdent.v + "/" + yyDollar[4].tableIdent.v}}
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4218
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4224
		{
			yyVAL.statement = &Begin{}
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4228
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4234
		{
			yyVAL.statement = &Begin{}
		}
	case 808:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4238
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 809:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4242
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4248
		{
			yyVAL.statement = &Commit{}
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4254
		{
			yyVAL.statement = &Rollback{}
		}
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4260
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4266
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 814:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4270
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 815:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4274
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 816:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4278
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4284
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4289
		{
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4290
		{
		}
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4294
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4298
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4304
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 826:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4312
		{
			yyVAL.str = ""
		}
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4316
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4327
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[3].expr}
			yyVAL.statement = &Show{Type: "columns", Table: yyDollar[2].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 831:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4333
		{
			setAllowComments(yylex, true)
		}
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4337
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 833:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4343
		{
			yyVAL.bytes2 = nil
		}
	case 834:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4347
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4353
		{
			yyVAL.str = UnionStr
		}
	case 836:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4357
		{
			yyVAL.str = UnionAllStr
		}
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4361
		{
			yyVAL.str = UnionDistinctStr
		}
	case 838:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4366
		{
			yyVAL.byt = 0
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4370
		{
			yyVAL.byt = 1
		}
	case 840:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4375
		{
			yyVAL.str = ""
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4379
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4383
		{
			yyVAL.str = SQLCacheStr
		}
	case 843:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4388
		{
			yyVAL.str = ""
		}
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4392
		{
			yyVAL.str = ""
		}
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4396
		{
			yyVAL.str = DistinctStr
		}
	case 846:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4401
		{
			yyVAL.str = ""
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4405
		{
			yyVAL.str = StraightJoinHint
		}
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4411
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 849:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4419
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4430
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4434
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4438
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 853:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4442
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4448
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 855:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4452
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4456
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 857:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4460
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4466
		{
			yyVAL.over = &Over{NameRef: yyDollar[2].colIdent}
		}
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4470
		{
			yyVAL.over = (*Over)(yyDollar[2].windowDef)
		}
	case 860:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4476
		{
			yyVAL.windowDef = &WindowDef{NameRef: yyDollar[2].colIdent, PartitionBy: yyDollar[3].exprs, OrderBy: yyDollar[4].orderBy, Frame: yyDollar[5].frame}
		}
	case 861:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4481
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4484
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 863:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4489
		{
			yyVAL.exprs = nil
		}
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4493
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 865:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4498
		{
			yyVAL.over = nil
		}
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4502
		{
			yyVAL.over = yyDollar[1].over
		}
	case 867:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4507
		{
			yyVAL.frame = nil
		}
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4511
		{
			yyVAL.frame = &Frame{Unit: RowsUnit, Extent: yyDollar[2].frameExtent}
		}
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4515
		{
			yyVAL.frame = &Frame{Unit: RangeUnit, Extent: yyDollar[2].frameExtent}
		}
	case 870:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4522
		{
			startBound := yyDollar[2].frameBound
			endBound := yyDollar[4].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound, End: endBound}
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4545
		{
			startBound := yyDollar[1].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound}
		}
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4560
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedPreceding}
		}
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4564
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedFollowing}
		}
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4568
		{
			yyVAL.frameBound = &FrameBound{Type: CurrentRow}
		}
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4572
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprPreceding,
			}
		}
	case 876:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4579
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprFollowing,
			}
		}
	case 877:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4587
		{
			yyVAL.window = nil
		}
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4590
		{
			yyVAL.window = yyDollar[2].window
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4596
		{
			yyVAL.window = Window{yyDollar[1].windowDef}
		}
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4599
		{
			yyVAL.window = append(yyDollar[1].window, yyDollar[3].windowDef)
		}
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4605
		{
			def := yyDollar[3].windowDef
			def.Name = yyDollar[1].colIdent
			yyVAL.windowDef = def
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4614
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4618
		{
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 884:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4623
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4627
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 886:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4631
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 887:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4635
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[2].bytes))
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4641
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4645
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4649
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4653
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4657
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4661
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4667
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4671
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4681
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 899:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4685
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4695
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4701
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4709
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 905:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4715
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 906:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4719
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 907:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4725
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 908:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4730
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4741
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 910:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4745
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 911:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4749
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4753
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4757
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 914:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4768
		{
			yyVAL.expr = nil
		}
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4772
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 916:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4777
		{
			yyVAL.columns = nil
		}
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4781
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4787
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4791
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4797
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4801
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 922:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4807
		{
			yyVAL.tableExpr = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].selectExprs}
		}
	case 923:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4821
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 924:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4825
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 925:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4829
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4833
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4839
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 928:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4841
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 929:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4845
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4847
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 931:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4851
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4853
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 933:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4856
		{
			yyVAL.empty = struct{}{}
		}
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4858
		{
			yyVAL.empty = struct{}{}
		}
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4863
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4867
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4873
		{
			yyVAL.str = JoinStr
		}
	case 939:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4877
		{
			yyVAL.str = JoinStr
		}
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4881
		{
			yyVAL.str = JoinStr
		}
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4887
		{
			yyVAL.str = StraightJoinStr
		}
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4893
		{
			yyVAL.str = LeftJoinStr
		}
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4897
		{
			yyVAL.str = LeftJoinStr
		}
	case 944:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4901
		{
			yyVAL.str = RightJoinStr
		}
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4905
		{
			yyVAL.str = RightJoinStr
		}
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4909
		{
			yyVAL.str = FullOuterJoinStr
		}
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4913
		{
			yyVAL.str = FullOuterJoinStr
		}
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4919
		{
			yyVAL.str = NaturalJoinStr
		}
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4923
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 950:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:4933
		{
			yyVAL.tableExpr = &JSONTableExpr{Data: yyDollar[3].expr, Path: string(yyDollar[5].bytes), Spec: yyDollar[8].TableSpec, Alias: yyDollar[12].tableIdent}
		}
	case 951:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:4937
		{
			yyVAL.tableExpr = &JSONTableExpr{Data: yyDollar[3].expr, Path: string(yyDollar[5].bytes), Spec: yyDollar[8].TableSpec, Alias: yyDollar[11].tableIdent}
		}
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4943
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4948
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4956
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 955:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4968
		{
			yyVAL.columnType = ColumnType{Path: string(yyDollar[2].bytes)}
		}
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4972
		{
			yyVAL.columnType = ColumnType{Path: string(yyDollar[3].bytes)}
		}
	case 957:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4978
		{

		}
	case 958:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4996
		{

		}
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5000
		{

		}
	case 960:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5004
		{

		}
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5008
		{

		}
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5014
		{
			yyVAL.triggerName = TriggerName{Name: yyDollar[1].colIdent}
		}
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5018
		{
			yyVAL.triggerName = TriggerName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5024
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5030
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5034
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5040
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5044
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5048
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5052
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5056
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5062
		{
			yyVAL.procedureName = ProcedureName{Name: yyDollar[1].colIdent}
		}
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5066
		{
			yyVAL.procedureName = ProcedureName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5072
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 975:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5077
		{
			yyVAL.indexHints = nil
		}
	case 976:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5081
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 977:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5085
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 978:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5089
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 979:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5094
		{
			yyVAL.expr = nil
		}
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5098
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5104
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5108
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5112
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5116
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 985:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5120
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5124
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5128
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5132
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 989:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5138
		{
			yyVAL.str = ""
		}
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5142
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5148
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5152
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5158
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5162
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 995:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5166
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 996:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5170
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 997:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5174
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5178
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 999:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5182
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 1000:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5186
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 1001:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5190
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5194
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5200
		{
			yyVAL.str = IsNullStr
		}
	case 1004:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5204
		{
			yyVAL.str = IsNotNullStr
		}
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5208
		{
			yyVAL.str = IsTrueStr
		}
	case 1006:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5212
		{
			yyVAL.str = IsNotTrueStr
		}
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5216
		{
			yyVAL.str = IsFalseStr
		}
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5220
		{
			yyVAL.str = IsNotFalseStr
		}
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5226
		{
			yyVAL.str = EqualStr
		}
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5230
		{
			yyVAL.str = LessThanStr
		}
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5234
		{
			yyVAL.str = GreaterThanStr
		}
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5238
		{
			yyVAL.str = LessEqualStr
		}
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5242
		{
			yyVAL.str = GreaterEqualStr
		}
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5246
		{
			yyVAL.str = NotEqualStr
		}
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5250
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 1016:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5255
		{
			yyVAL.expr = nil
		}
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5259
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5265
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5269
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5273
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5279
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5285
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5289
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 1024:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5295
		{
			yyVAL.selectExprs = nil
		}
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5302
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5306
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5312
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5316
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5322
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5326
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5330
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5334
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5338
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5342
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5346
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5350
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5354
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 1039:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5358
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 1040:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5362
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 1041:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5366
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 1042:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5370
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5374
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5378
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5382
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 1046:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5386
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 1047:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5390
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 1048:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5394
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 1049:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5398
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5402
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5406
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5410
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 1053:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5414
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 1054:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5418
		{
			yyVAL.expr = &UnaryExpr{Operator: yyDollar[1].str, Expr: yyDollar[2].expr}
		}
	case 1055:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5422
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5430
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 1057:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5444
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 1058:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5448
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 1059:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5452
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 1066:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5472
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 1067:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5476
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 1068:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5486
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1069:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5490
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1070:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5494
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1071:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5498
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1072:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5502
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1073:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5506
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1074:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5510
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1075:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5514
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1076:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5518
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1077:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5522
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1078:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5526
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1079:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5530
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1080:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5534
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1081:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5538
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1082:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5542
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1083:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5546
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1084:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5550
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1085:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5559
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1086:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5563
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1087:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5567
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 1088:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5571
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1089:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5575
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 1090:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5579
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1091:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5583
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1092:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5587
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1093:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5591
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1094:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5595
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1095:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5599
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1096:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5610
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1097:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5614
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1098:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5618
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1099:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5622
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5626
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1101:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5630
		{
			yyVAL.expr = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 1102:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5634
		{
			yyVAL.expr = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 1103:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5638
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1104:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5642
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1105:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5646
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 1106:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5650
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1107:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5654
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1108:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5658
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1109:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5662
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1110:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5666
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1111:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5670
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 1112:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5674
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 1113:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5678
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 1114:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5682
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 1115:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5686
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 1116:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5690
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 1117:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5694
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1118:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5698
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 1119:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5702
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 1120:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5706
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 1121:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5710
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5720
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5724
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5728
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1125:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5733
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5738
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5743
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1128:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5749
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1129:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5754
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1130:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5758
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1131:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5763
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1132:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5767
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5771
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5776
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5781
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5786
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1137:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5790
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1138:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5794
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5805
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1142:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5815
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1143:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5819
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1144:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5823
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1145:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5827
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1146:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5831
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1147:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5835
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1148:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5841
		{
			yyVAL.str = ""
		}
	case 1149:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5845
		{
			yyVAL.str = BooleanModeStr
		}
	case 1150:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5849
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 1151:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5853
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 1152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5857
		{
			yyVAL.str = QueryExpansionStr
		}
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5863
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5867
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5873
		{
			yyVAL.str = Armscii8Str
		}
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5877
		{
			yyVAL.str = AsciiStr
		}
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5881
		{
			yyVAL.str = Big5Str
		}
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5885
		{
			yyVAL.str = UBinaryStr
		}
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5889
		{
			yyVAL.str = Cp1250Str
		}
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5893
		{
			yyVAL.str = Cp1251Str
		}
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5897
		{
			yyVAL.str = Cp1256Str
		}
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5901
		{
			yyVAL.str = Cp1257Str
		}
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5905
		{
			yyVAL.str = Cp850Str
		}
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5909
		{
			yyVAL.str = Cp852Str
		}
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5913
		{
			yyVAL.str = Cp866Str
		}
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5917
		{
			yyVAL.str = Cp932Str
		}
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5921
		{
			yyVAL.str = Dec8Str
		}
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5925
		{
			yyVAL.str = EucjpmsStr
		}
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5929
		{
			yyVAL.str = EuckrStr
		}
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5933
		{
			yyVAL.str = Gb18030Str
		}
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5937
		{
			yyVAL.str = Gb2312Str
		}
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5941
		{
			yyVAL.str = GbkStr
		}
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5945
		{
			yyVAL.str = Geostd8Str
		}
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5949
		{
			yyVAL.str = GreekStr
		}
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5953
		{
			yyVAL.str = HebrewStr
		}
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5957
		{
			yyVAL.str = Hp8Str
		}
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5961
		{
			yyVAL.str = Keybcs2Str
		}
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5965
		{
			yyVAL.str = Koi8rStr
		}
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5969
		{
			yyVAL.str = Koi8uStr
		}
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5973
		{
			yyVAL.str = Latin1Str
		}
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5977
		{
			yyVAL.str = Latin2Str
		}
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5981
		{
			yyVAL.str = Latin5Str
		}
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5985
		{
			yyVAL.str = Latin7Str
		}
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5989
		{
			yyVAL.str = MacceStr
		}
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5993
		{
			yyVAL.str = MacromanStr
		}
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5997
		{
			yyVAL.str = SjisStr
		}
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6001
		{
			yyVAL.str = Swe7Str
		}
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6005
		{
			yyVAL.str = Tis620Str
		}
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6009
		{
			yyVAL.str = Ucs2Str
		}
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6013
		{
			yyVAL.str = UjisStr
		}
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6017
		{
			yyVAL.str = Utf16Str
		}
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6021
		{
			yyVAL.str = Utf16leStr
		}
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6025
		{
			yyVAL.str = Utf32Str
		}
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6029
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6033
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6037
		{
			yyVAL.str = Utf8mb4Str
		}
	case 1197:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6043
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6047
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 1199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6051
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6055
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1201:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6059
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1202:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6063
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6069
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1204:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6073
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6077
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1206:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6081
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1207:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6085
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6089
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1209:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6093
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1210:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6098
		{
			yyVAL.expr = nil
		}
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6102
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1212:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6107
		{
			yyVAL.str = string("")
		}
	case 1213:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6111
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6117
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 1215:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6121
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 1216:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6127
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 1217:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6132
		{
			yyVAL.expr = nil
		}
	case 1218:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6136
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6142
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6146
		{
			yyVAL.colName = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1221:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6150
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 1222:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6154
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1223:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6158
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6162
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6166
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6170
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6174
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6178
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1229:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6182
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1230:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6186
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1231:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6190
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1232:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6194
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6200
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6204
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6208
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6212
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6216
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6220
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6224
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6228
		{
			yyVAL.expr = &NullVal{}
		}
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6234
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 1242:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6238
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1243:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6242
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1244:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6247
		{
			yyVAL.exprs = nil
		}
	case 1245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6251
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6257
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1247:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6261
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6267
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1249:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6272
		{
			yyVAL.expr = nil
		}
	case 1250:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6276
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6282
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1252:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6287
		{
			yyVAL.orderBy = nil
		}
	case 1253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6291
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6297
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 1255:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6301
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 1256:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6307
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 1257:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6312
		{
			yyVAL.str = AscScr
		}
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6316
		{
			yyVAL.str = AscScr
		}
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6320
		{
			yyVAL.str = DescScr
		}
	case 1260:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6325
		{
			yyVAL.limit = nil
		}
	case 1261:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6329
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 1262:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6333
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 1263:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6337
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6343
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6347
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1266:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6352
		{
			yyVAL.str = ""
		}
	case 1267:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6356
		{
			yyVAL.str = ForUpdateStr
		}
	case 1268:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6360
		{
			yyVAL.str = ShareModeStr
		}
	case 1269:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6373
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 1270:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6377
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6381
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 1272:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6385
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 1273:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6390
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 1274:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6394
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 1275:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6398
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 1276:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6404
		{
			yyVAL.columns = nil
		}
	case 1277:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6408
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6414
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1279:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6418
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1280:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6424
		{
			yyVAL.colIdent = yyDollar[3].colIdent
		}
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6428
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6432
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6436
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6440
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6444
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1286:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6449
		{
			yyVAL.assignExprs = nil
		}
	case 1287:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6453
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 1288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6459
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 1289:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6463
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 1290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6469
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 1291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6473
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 1292:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6479
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 1293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6485
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 1294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6495
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 1295:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6499
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 1296:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6505
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 1297:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6508
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1298:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6512
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1299:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6516
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6522
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 1301:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6526
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 1302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6532
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 1303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6543
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6556
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1305:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6569
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 1306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6575
		{
			yyVAL.setScope = SetScope_Global
		}
	case 1307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6579
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6585
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6589
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 1310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6593
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 1311:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6599
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6603
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6607
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 1315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6614
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6621
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 1318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6625
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6629
		{
			yyVAL.expr = &Default{}
		}
	case 1322:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6638
		{
			yyVAL.byt = 0
		}
	case 1323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6640
		{
			yyVAL.byt = 1
		}
	case 1324:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6643
		{
			yyVAL.byt = 0
		}
	case 1325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6645
		{
			yyVAL.byt = 1
		}
	case 1326:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6648
		{
			yyVAL.byt = 0
		}
	case 1327:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6650
		{
			yyVAL.byt = 1
		}
	case 1328:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6653
		{
			yyVAL.str = ""
		}
	case 1329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6655
		{
			yyVAL.str = IgnoreStr
		}
	case 1330:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6658
		{
			yyVAL.sqlVal = nil
		}
	case 1331:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6660
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6662
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6666
		{
			yyVAL.empty = struct{}{}
		}
	case 1334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6668
		{
			yyVAL.empty = struct{}{}
		}
	case 1335:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6671
		{
			yyVAL.empty = struct{}{}
		}
	case 1336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6673
		{
			yyVAL.empty = struct{}{}
		}
	case 1337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6675
		{
			yyVAL.empty = struct{}{}
		}
	case 1338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6679
		{
			yyVAL.str = UniqueStr
		}
	case 1339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6681
		{
			yyVAL.str = FulltextStr
		}
	case 1340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6683
		{
			yyVAL.str = SpatialStr
		}
	case 1341:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6686
		{
			yyVAL.str = ""
		}
	case 1342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6688
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1343:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6691
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 1344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6693
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 1345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6697
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6701
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6707
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 1348:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6711
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 1350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6718
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6724
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6728
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6735
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1355:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6740
		{
			yyVAL.str = string("")
		}
	case 1356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6742
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1357:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6745
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6747
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1359:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6750
		{
			yyVAL.EnclosedBy = nil
		}
	case 1360:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6754
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1361:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6759
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6763
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1363:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6768
		{
			yyVAL.sqlVal = nil
		}
	case 1364:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6772
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1365:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6777
		{
			yyVAL.sqlVal = nil
		}
	case 1366:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6781
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1367:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6786
		{
			yyVAL.Fields = nil
		}
	case 1368:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6790
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1369:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6795
		{
			yyVAL.Lines = nil
		}
	case 1370:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6799
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1371:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6804
		{
			yyVAL.sqlVal = nil
		}
	case 1372:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6808
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1373:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6814
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1374:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6820
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6824
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1376:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6830
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1377:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6834
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6840
		{
			yyVAL.lockType = LockRead
		}
	case 1379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6844
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6848
		{
			yyVAL.lockType = LockWrite
		}
	case 1381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6852
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6858
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1383:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6864
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[2].bytes)}
		}
	case 1384:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6868
		{
			yyVAL.statement = &Kill{ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1385:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6872
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 2180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7708
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7717
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
