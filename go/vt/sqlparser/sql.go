// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

//import "runtime/debug"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

func yySpecialCommentMode(yylex interface{}) bool {
	tkn := yylex.(*Tokenizer)
	return tkn.specialComment != nil
}

//line sql.y:64
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	variables                Variables
	into                     *Into
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	triggerName              TriggerName
	tableName                TableName
	tableNames               TableNames
	procedureName            ProcedureName
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	flushOption              *FlushOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	viewSpec                 *ViewSpec
	showFilter               *ShowFilter
	frame                    *Frame
	frameExtent              *FrameExtent
	frameBound               *FrameBound
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	charsetCollate           *CharsetAndCollate
	charsetCollates          []*CharsetAndCollate
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptionItem            TLSOptionItem
	tlsOptionItems           []TLSOptionItem
	accountLimitItem         AccountLimitItem
	accountLimitItems        []AccountLimitItem
	passLockItem             PassLockItem
	passLockItems            []PassLockItem
	grantPrivilege           Privilege
	grantPrivileges          []Privilege
	grantObjectType          GrantObjectType
	privilegeLevel           PrivilegeLevel
	grantAssumption          *GrantUserAssumption
	with                     *With
	window                   Window
	over                     *Over
	windowDef                *WindowDef
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const DUPLICATE = 57369
const DEFAULT = 57370
const SET = 57371
const LOCK = 57372
const UNLOCK = 57373
const KEYS = 57374
const OF = 57375
const OUTFILE = 57376
const DUMPFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const INTO = 57425
const OR = 57426
const XOR = 57427
const AND = 57428
const NOT = 57429
const BETWEEN = 57430
const CASE = 57431
const WHEN = 57432
const THEN = 57433
const ELSE = 57434
const ELSEIF = 57435
const END = 57436
const LE = 57437
const GE = 57438
const NE = 57439
const NULL_SAFE_EQUAL = 57440
const IS = 57441
const LIKE = 57442
const REGEXP = 57443
const IN = 57444
const UNBOUNDED = 57445
const PARTITION = 57446
const RANGE = 57447
const ROWS = 57448
const GROUPS = 57449
const PRECEDING = 57450
const FOLLOWING = 57451
const SHIFT_LEFT = 57452
const SHIFT_RIGHT = 57453
const DIV = 57454
const MOD = 57455
const UNARY = 57456
const COLLATE = 57457
const BINARY = 57458
const UNDERSCORE_ARMSCII8 = 57459
const UNDERSCORE_ASCII = 57460
const UNDERSCORE_BIG5 = 57461
const UNDERSCORE_BINARY = 57462
const UNDERSCORE_CP1250 = 57463
const UNDERSCORE_CP1251 = 57464
const UNDERSCORE_CP1256 = 57465
const UNDERSCORE_CP1257 = 57466
const UNDERSCORE_CP850 = 57467
const UNDERSCORE_CP852 = 57468
const UNDERSCORE_CP866 = 57469
const UNDERSCORE_CP932 = 57470
const UNDERSCORE_DEC8 = 57471
const UNDERSCORE_EUCJPMS = 57472
const UNDERSCORE_EUCKR = 57473
const UNDERSCORE_GB18030 = 57474
const UNDERSCORE_GB2312 = 57475
const UNDERSCORE_GBK = 57476
const UNDERSCORE_GEOSTD8 = 57477
const UNDERSCORE_GREEK = 57478
const UNDERSCORE_HEBREW = 57479
const UNDERSCORE_HP8 = 57480
const UNDERSCORE_KEYBCS2 = 57481
const UNDERSCORE_KOI8R = 57482
const UNDERSCORE_KOI8U = 57483
const UNDERSCORE_LATIN1 = 57484
const UNDERSCORE_LATIN2 = 57485
const UNDERSCORE_LATIN5 = 57486
const UNDERSCORE_LATIN7 = 57487
const UNDERSCORE_MACCE = 57488
const UNDERSCORE_MACROMAN = 57489
const UNDERSCORE_SJIS = 57490
const UNDERSCORE_SWE7 = 57491
const UNDERSCORE_TIS620 = 57492
const UNDERSCORE_UCS2 = 57493
const UNDERSCORE_UJIS = 57494
const UNDERSCORE_UTF16 = 57495
const UNDERSCORE_UTF16LE = 57496
const UNDERSCORE_UTF32 = 57497
const UNDERSCORE_UTF8 = 57498
const UNDERSCORE_UTF8MB3 = 57499
const UNDERSCORE_UTF8MB4 = 57500
const INTERVAL = 57501
const JSON_EXTRACT_OP = 57502
const JSON_UNQUOTE_EXTRACT_OP = 57503
const CREATE = 57504
const ALTER = 57505
const DROP = 57506
const RENAME = 57507
const ANALYZE = 57508
const ADD = 57509
const MODIFY = 57510
const CHANGE = 57511
const SCHEMA = 57512
const TABLE = 57513
const INDEX = 57514
const INDEXES = 57515
const VIEW = 57516
const TO = 57517
const IGNORE = 57518
const IF = 57519
const PRIMARY = 57520
const COLUMN = 57521
const SPATIAL = 57522
const FULLTEXT = 57523
const KEY_BLOCK_SIZE = 57524
const CHECK = 57525
const ACTION = 57526
const CASCADE = 57527
const CONSTRAINT = 57528
const FOREIGN = 57529
const NO = 57530
const REFERENCES = 57531
const RESTRICT = 57532
const FIRST = 57533
const AFTER = 57534
const SHOW = 57535
const DESCRIBE = 57536
const EXPLAIN = 57537
const DATE = 57538
const ESCAPE = 57539
const REPAIR = 57540
const OPTIMIZE = 57541
const TRUNCATE = 57542
const FORMAT = 57543
const MAXVALUE = 57544
const REORGANIZE = 57545
const LESS = 57546
const THAN = 57547
const PROCEDURE = 57548
const TRIGGER = 57549
const TRIGGERS = 57550
const FUNCTION = 57551
const STATUS = 57552
const VARIABLES = 57553
const WARNINGS = 57554
const ERRORS = 57555
const KILL = 57556
const CONNECTION = 57557
const SEQUENCE = 57558
const ENABLE = 57559
const DISABLE = 57560
const EACH = 57561
const ROW = 57562
const BEFORE = 57563
const FOLLOWS = 57564
const PRECEDES = 57565
const DEFINER = 57566
const INVOKER = 57567
const INOUT = 57568
const OUT = 57569
const DETERMINISTIC = 57570
const CONTAINS = 57571
const READS = 57572
const MODIFIES = 57573
const SQL = 57574
const SECURITY = 57575
const TEMPORARY = 57576
const ALGORITHM = 57577
const MERGE = 57578
const TEMPTABLE = 57579
const UNDEFINED = 57580
const CLASS_ORIGIN = 57581
const SUBCLASS_ORIGIN = 57582
const MESSAGE_TEXT = 57583
const MYSQL_ERRNO = 57584
const CONSTRAINT_CATALOG = 57585
const CONSTRAINT_SCHEMA = 57586
const CONSTRAINT_NAME = 57587
const CATALOG_NAME = 57588
const SCHEMA_NAME = 57589
const TABLE_NAME = 57590
const COLUMN_NAME = 57591
const CURSOR_NAME = 57592
const SIGNAL = 57593
const RESIGNAL = 57594
const SQLSTATE = 57595
const DECLARE = 57596
const CONDITION = 57597
const CURSOR = 57598
const CONTINUE = 57599
const EXIT = 57600
const UNDO = 57601
const HANDLER = 57602
const FOUND = 57603
const SQLWARNING = 57604
const SQLEXCEPTION = 57605
const USER = 57606
const IDENTIFIED = 57607
const ROLE = 57608
const REUSE = 57609
const GRANT = 57610
const GRANTS = 57611
const REVOKE = 57612
const NONE = 57613
const ATTRIBUTE = 57614
const RANDOM = 57615
const PASSWORD = 57616
const INITIAL = 57617
const AUTHENTICATION = 57618
const SSL = 57619
const X509 = 57620
const CIPHER = 57621
const ISSUER = 57622
const SUBJECT = 57623
const ACCOUNT = 57624
const EXPIRE = 57625
const NEVER = 57626
const DAY = 57627
const OPTION = 57628
const OPTIONAL = 57629
const EXCEPT = 57630
const ADMIN = 57631
const PRIVILEGES = 57632
const MAX_QUERIES_PER_HOUR = 57633
const MAX_UPDATES_PER_HOUR = 57634
const MAX_CONNECTIONS_PER_HOUR = 57635
const MAX_USER_CONNECTIONS = 57636
const FLUSH = 57637
const FAILED_LOGIN_ATTEMPTS = 57638
const PASSWORD_LOCK_TIME = 57639
const REQUIRE = 57640
const PROXY = 57641
const ROUTINE = 57642
const TABLESPACE = 57643
const CLIENT = 57644
const SLAVE = 57645
const EVENT = 57646
const EXECUTE = 57647
const FILE = 57648
const RELOAD = 57649
const REPLICATION = 57650
const SHUTDOWN = 57651
const SUPER = 57652
const USAGE = 57653
const LOGS = 57654
const ENGINE = 57655
const ERROR = 57656
const GENERAL = 57657
const HOSTS = 57658
const OPTIMIZER_COSTS = 57659
const RELAY = 57660
const SLOW = 57661
const USER_RESOURCES = 57662
const NO_WRITE_TO_BINLOG = 57663
const CHANNEL = 57664
const BEGIN = 57665
const START = 57666
const TRANSACTION = 57667
const COMMIT = 57668
const ROLLBACK = 57669
const SAVEPOINT = 57670
const WORK = 57671
const RELEASE = 57672
const BIT = 57673
const TINYINT = 57674
const SMALLINT = 57675
const MEDIUMINT = 57676
const INT = 57677
const INTEGER = 57678
const BIGINT = 57679
const INTNUM = 57680
const SERIAL = 57681
const REAL = 57682
const DOUBLE = 57683
const FLOAT_TYPE = 57684
const DECIMAL = 57685
const NUMERIC = 57686
const DEC = 57687
const FIXED = 57688
const PRECISION = 57689
const TIME = 57690
const TIMESTAMP = 57691
const DATETIME = 57692
const YEAR = 57693
const CHAR = 57694
const VARCHAR = 57695
const BOOL = 57696
const CHARACTER = 57697
const VARBINARY = 57698
const NCHAR = 57699
const NVARCHAR = 57700
const NATIONAL = 57701
const VARYING = 57702
const TEXT = 57703
const TINYTEXT = 57704
const MEDIUMTEXT = 57705
const LONGTEXT = 57706
const LONG = 57707
const BLOB = 57708
const TINYBLOB = 57709
const MEDIUMBLOB = 57710
const LONGBLOB = 57711
const JSON = 57712
const ENUM = 57713
const GEOMETRY = 57714
const POINT = 57715
const LINESTRING = 57716
const POLYGON = 57717
const GEOMETRYCOLLECTION = 57718
const MULTIPOINT = 57719
const MULTILINESTRING = 57720
const MULTIPOLYGON = 57721
const LOCAL = 57722
const LOW_PRIORITY = 57723
const NULLX = 57724
const AUTO_INCREMENT = 57725
const APPROXNUM = 57726
const SIGNED = 57727
const UNSIGNED = 57728
const ZEROFILL = 57729
const SRID = 57730
const COLLATION = 57731
const DATABASES = 57732
const SCHEMAS = 57733
const TABLES = 57734
const FULL = 57735
const PROCESSLIST = 57736
const COLUMNS = 57737
const FIELDS = 57738
const ENGINES = 57739
const PLUGINS = 57740
const NAMES = 57741
const CHARSET = 57742
const GLOBAL = 57743
const SESSION = 57744
const ISOLATION = 57745
const LEVEL = 57746
const READ = 57747
const WRITE = 57748
const ONLY = 57749
const REPEATABLE = 57750
const COMMITTED = 57751
const UNCOMMITTED = 57752
const SERIALIZABLE = 57753
const ENCRYPTION = 57754
const CURRENT_TIMESTAMP = 57755
const DATABASE = 57756
const CURRENT_DATE = 57757
const CURRENT_USER = 57758
const CURRENT_TIME = 57759
const LOCALTIME = 57760
const LOCALTIMESTAMP = 57761
const UTC_DATE = 57762
const UTC_TIME = 57763
const UTC_TIMESTAMP = 57764
const REPLACE = 57765
const CONVERT = 57766
const CAST = 57767
const SUBSTR = 57768
const SUBSTRING = 57769
const TRIM = 57770
const LEADING = 57771
const TRAILING = 57772
const BOTH = 57773
const GROUP_CONCAT = 57774
const SEPARATOR = 57775
const TIMESTAMPADD = 57776
const TIMESTAMPDIFF = 57777
const OVER = 57778
const WINDOW = 57779
const GROUPING = 57780
const CURRENT = 57781
const AVG = 57782
const BIT_AND = 57783
const BIT_OR = 57784
const BIT_XOR = 57785
const COUNT = 57786
const JSON_ARRAYAGG = 57787
const JSON_OBJECTAGG = 57788
const MAX = 57789
const MIN = 57790
const STDDEV_POP = 57791
const STDDEV = 57792
const STD = 57793
const STDDEV_SAMP = 57794
const SUM = 57795
const VAR_POP = 57796
const VARIANCE = 57797
const VAR_SAMP = 57798
const CUME_DIST = 57799
const DENSE_RANK = 57800
const FIRST_VALUE = 57801
const LAG = 57802
const LAST_VALUE = 57803
const LEAD = 57804
const NTH_VALUE = 57805
const NTILE = 57806
const ROW_NUMBER = 57807
const PERCENT_RANK = 57808
const RANK = 57809
const MATCH = 57810
const AGAINST = 57811
const BOOLEAN = 57812
const LANGUAGE = 57813
const WITH = 57814
const QUERY = 57815
const EXPANSION = 57816
const UNUSED = 57817
const ARRAY = 57818
const DESCRIPTION = 57819
const EMPTY = 57820
const JSON_TABLE = 57821
const LATERAL = 57822
const MEMBER = 57823
const RECURSIVE = 57824
const ACTIVE = 57825
const BUCKETS = 57826
const CLONE = 57827
const COMPONENT = 57828
const DEFINITION = 57829
const ENFORCED = 57830
const EXCLUDE = 57831
const GEOMCOLLECTION = 57832
const GET_MASTER_PUBLIC_KEY = 57833
const HISTOGRAM = 57834
const HISTORY = 57835
const INACTIVE = 57836
const INVISIBLE = 57837
const LOCKED = 57838
const MASTER_COMPRESSION_ALGORITHMS = 57839
const MASTER_PUBLIC_KEY_PATH = 57840
const MASTER_TLS_CIPHERSUITES = 57841
const MASTER_ZSTD_COMPRESSION_LEVEL = 57842
const NESTED = 57843
const NETWORK_NAMESPACE = 57844
const NOWAIT = 57845
const NULLS = 57846
const OJ = 57847
const OLD = 57848
const ORDINALITY = 57849
const ORGANIZATION = 57850
const OTHERS = 57851
const PATH = 57852
const PERSIST = 57853
const PERSIST_ONLY = 57854
const PRIVILEGE_CHECKS_USER = 57855
const PROCESS = 57856
const REFERENCE = 57857
const REQUIRE_ROW_FORMAT = 57858
const RESOURCE = 57859
const RESPECT = 57860
const RESTART = 57861
const RETAIN = 57862
const SECONDARY = 57863
const SECONDARY_ENGINE = 57864
const SECONDARY_LOAD = 57865
const SECONDARY_UNLOAD = 57866
const SKIP = 57867
const THREAD_PRIORITY = 57868
const TIES = 57869
const VCPU = 57870
const VISIBLE = 57871
const SYSTEM = 57872
const INFILE = 57873
const GENERATED = 57874
const ALWAYS = 57875
const STORED = 57876
const VIRTUAL = 57877
const NVAR = 57878
const PASSWORD_LOCK = 57879

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DUMPFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"INTO",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB3",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"ENABLE",
	"DISABLE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"ALGORITHM",
	"MERGE",
	"TEMPTABLE",
	"UNDEFINED",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTION",
	"OPTIONAL",
	"EXCEPT",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EVENT",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"SRID",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ENCRYPTION",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"DESCRIPTION",
	"EMPTY",
	"JSON_TABLE",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"ACTIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"GENERATED",
	"ALWAYS",
	"STORED",
	"VIRTUAL",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 35,
	556, 35,
	-2, 55,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 35,
	5, 60,
	-2, 1148,
	-1, 41,
	189, 1212,
	190, 1231,
	-2, 247,
	-1, 47,
	228, 734,
	229, 734,
	-2, 723,
	-1, 558,
	177, 1241,
	-2, 1235,
	-1, 559,
	177, 1242,
	-2, 1236,
	-1, 699,
	100, 1530,
	177, 1530,
	-2, 1196,
	-1, 700,
	100, 1649,
	177, 1649,
	-2, 1197,
	-1, 705,
	100, 1554,
	177, 1554,
	-2, 1198,
	-1, 706,
	100, 1602,
	177, 1602,
	-2, 1199,
	-1, 707,
	100, 1603,
	177, 1603,
	-2, 1200,
	-1, 708,
	100, 1475,
	177, 1475,
	-2, 1204,
	-1, 710,
	100, 1579,
	177, 1579,
	-2, 1206,
	-1, 1321,
	1, 513,
	556, 513,
	-2, 511,
	-1, 1323,
	1, 513,
	556, 513,
	-2, 511,
	-1, 1488,
	177, 1244,
	-2, 1240,
	-1, 1597,
	1, 832,
	5, 832,
	12, 832,
	13, 832,
	14, 832,
	15, 832,
	17, 832,
	19, 832,
	29, 832,
	30, 832,
	56, 832,
	57, 832,
	58, 832,
	59, 832,
	60, 832,
	62, 832,
	63, 832,
	66, 832,
	67, 832,
	69, 832,
	70, 832,
	87, 832,
	455, 832,
	556, 832,
	-2, 864,
	-1, 1603,
	67, 77,
	69, 77,
	-2, 81,
	-1, 1638,
	44, 579,
	-2, 1487,
	-1, 1642,
	68, 577,
	72, 577,
	-2, 1524,
	-1, 1643,
	68, 579,
	-2, 1432,
	-1, 1646,
	68, 575,
	72, 575,
	-2, 1349,
	-1, 1647,
	68, 576,
	72, 576,
	-2, 1359,
	-1, 1695,
	1, 514,
	556, 514,
	-2, 511,
	-1, 1780,
	44, 622,
	196, 624,
	198, 622,
	199, 622,
	-2, 659,
	-1, 1860,
	5, 61,
	-2, 935,
	-1, 2316,
	196, 625,
	-2, 623,
	-1, 2383,
	69, 1406,
	70, 1406,
	177, 1406,
	-2, 766,
	-1, 2406,
	1, 889,
	5, 889,
	12, 889,
	13, 889,
	14, 889,
	15, 889,
	17, 889,
	19, 889,
	29, 889,
	30, 889,
	56, 889,
	57, 889,
	58, 889,
	59, 889,
	60, 889,
	62, 889,
	63, 889,
	66, 889,
	67, 889,
	69, 889,
	70, 889,
	87, 889,
	455, 889,
	556, 889,
	-2, 864,
	-1, 2537,
	5, 61,
	-2, 1168,
	-1, 2621,
	41, 1251,
	-2, 1249,
	-1, 2817,
	5, 61,
	-2, 1171,
	-1, 2979,
	95, 299,
	97, 299,
	99, 299,
	-2, 55,
	-1, 3003,
	97, 306,
	98, 306,
	99, 306,
	-2, 55,
}

const yyPrivate = 57344

const yyLast = 38955

var yyAct = [...]int{
	624, 76, 2938, 2919, 2964, 2971, 2920, 2834, 925, 2119,
	2833, 2940, 1189, 2890, 2806, 2743, 3, 2004, 1630, 2855,
	559, 428, 2738, 2746, 7, 2745, 6, 2850, 2259, 2744,
	5, 2870, 2747, 8, 561, 2800, 2420, 1256, 2717, 2719,
	2559, 2677, 2621, 724, 2173, 564, 2804, 2213, 2400, 623,
	1912, 2038, 2376, 1190, 2102, 1690, 1910, 2493, 2377, 543,
	1600, 1648, 1906, 550, 474, 2623, 127, 411, 414, 127,
	2276, 2447, 2469, 453, 453, 127, 1714, 76, 1465, 2088,
	79, 2463, 2373, 1947, 2174, 456, 456, 459, 2739, 540,
	1639, 2214, 541, 2310, 91, 959, 127, 2020, 2101, 2385,
	2300, 576, 1629, 1456, 2392, 1355, 124, 1458, 1356, 104,
	1779, 1628, 720, 127, 727, 410, 942, 1809, 2141, 1896,
	1594, 1513, 1358, 719, 722, 1593, 983, 1585, 1522, 1742,
	1635, 1473, 1406, 127, 456, 704, 727, 1377, 1698, 1232,
	1332, 1697, 68, 1677, 127, 1995, 1889, 1088, 1696, 1490,
	1095, 701, 1597, 716, 1236, 1579, 1759, 1099, 1681, 1091,
	2066, 1012, 991, 718, 546, 1694, 1235, 1109, 1411, 697,
	698, 473, 430, 922, 431, 1206, 908, 568, 1605, 1327,
	913, 938, 1324, 100, 936, 81, 468, 96, 990, 1961,
	3003, 566, 2999, 2994, 1964, 2979, 2977, 2959, 2933, 2878,
	1207, 78, 2228, 1941, 2679, 2678, 1404, 1948, 2600, 2257,
	1969, 1968, 2434, 36, 423, 1524, 2950, 2815, 2448, 542,
	36, 36, 924, 83, 2598, 89, 36, 446, 2450, 440,
	451, 434, 1965, 2918, 2729, 2613, 2168, 1727, 2032, 2601,
	39, 1727, 2895, 2792, 2273, 2814, 2162, 1971, 471, 1954,
	67, 441, 2697, 2851, 2169, 2810, 2810, 1955, 1831, 2371,
	108, 2658, 1908, 87, 85, 86, 907, 2011, 2728, 1758,
	692, 693, 694, 2805, 1929, 77, 910, 1928, 915, 916,
	1930, 2208, 77, 77, 2209, 2210, 1615, 1616, 77, 918,
	1081, 2807, 2807, 946, 947, 1614, 2112, 950, 2653, 552,
	1452, 1453, 962, 1237, 97, 1238, 1124, 1123, 1133, 1134,
	1126, 1127, 1128, 1129, 1130, 1131, 1132, 1125, 1407, 679,
	1135, 685, 687, 686, 683, 684, 682, 681, 680, 948,
	949, 118, 114, 115, 1410, 116, 1427, 963, 964, 1040,
	2425, 2426, 714, 2453, 422, 1973, 421, 463, 1048, 1650,
	1651, 1757, 1009, 1653, 1653, 2522, 2811, 2811, 1408, 1409,
	1657, 1659, 1967, 1658, 1671, 1970, 1666, 120, 119, 1666,
	2358, 2356, 425, 1390, 420, 405, 973, 470, 2063, 1448,
	1447, 1062, 1446, 2451, 2452, 2454, 2455, 2456, 1445, 1444,
	1443, 1044, 1045, 2027, 1055, 1024, 969, 1056, 127, 2055,
	2910, 433, 432, 435, 99, 1678, 464, 2626, 76, 76,
	2299, 439, 2060, 1770, 110, 109, 2836, 2835, 2464, 2283,
	2782, 981, 2780, 977, 541, 121, 2467, 122, 443, 2031,
	2701, 978, 447, 980, 2599, 2699, 2481, 979, 939, 2691,
	2465, 2466, 127, 2617, 2286, 2595, 450, 1787, 1781, 1782,
	2489, 1780, 1783, 1784, 2843, 1771, 970, 971, 106, 1282,
	2470, 2471, 2472, 2473, 1438, 2968, 1715, 1077, 107, 111,
	1665, 2029, 2479, 112, 2875, 1085, 1072, 2873, 2874, 1339,
	1340, 1338, 1013, 415, 1024, 106, 960, 1790, 961, 963,
	964, 912, 911, 127, 2592, 2142, 111, 2274, 101, 2877,
	102, 1789, 1788, 2277, 2278, 2279, 2280, 2281, 2009, 412,
	2935, 2593, 2277, 2278, 2279, 2280, 2281, 914, 2591, 1024,
	1330, 2590, 2589, 2587, 914, 2588, 416, 2821, 2822, 406,
	2687, 2688, 1709, 1710, 106, 2860, 2741, 945, 2550, 1705,
	2194, 958, 2683, 436, 437, 438, 444, 1417, 448, 449,
	452, 542, 2928, 2010, 2046, 2047, 1068, 2888, 1144, 956,
	957, 1146, 955, 1269, 1047, 2012, 113, 1966, 1704, 954,
	2913, 2072, 1963, 1112, 2675, 117, 2144, 2975, 1067, 1063,
	1064, 1065, 1066, 1069, 1070, 1071, 1073, 2693, 1361, 1156,
	1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166,
	1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176,
	1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186,
	1187, 2989, 408, 1188, 2256, 1192, 2449, 2494, 2495, 1255,
	424, 3004, 2030, 2074, 1255, 2315, 1057, 2808, 2808, 3001,
	541, 2560, 2995, 1031, 1283, 1023, 1255, 1391, 98, 1254,
	974, 1074, 2698, 2980, 2596, 2562, 1666, 409, 2301, 909,
	2616, 2285, 1764, 1980, 1656, 927, 2703, 1786, 1193, 1194,
	1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 2654, 1205,
	1208, 1208, 1208, 1214, 1208, 1208, 1214, 1208, 1214, 1223,
	1224, 1225, 1226, 2727, 1410, 2944, 88, 75, 2939, 2781,
	1034, 75, 1680, 1029, 75, 75, 413, 1412, 413, 2614,
	75, 108, 2033, 2692, 2942, 127, 1962, 1076, 1408, 1409,
	2504, 1083, 1724, 2146, 727, 413, 469, 1723, 2150, 2217,
	2145, 1020, 2143, 1030, 1255, 1026, 2505, 2148, 2074, 1915,
	1917, 1946, 1414, 704, 2054, 1413, 2051, 2035, 704, 2034,
	2147, 2973, 1145, 442, 2974, 939, 2972, 1765, 1344, 1342,
	975, 1096, 1693, 2201, 906, 2149, 2151, 542, 1951, 1027,
	1028, 1116, 1946, 2200, 2561, 1946, 2199, 905, 2049, 1296,
	1299, 1300, 1301, 1302, 1303, 1304, 1080, 1305, 1306, 1307,
	1308, 1309, 1310, 1311, 1312, 1249, 1284, 1285, 1286, 1287,
	1263, 1267, 1297, 1264, 1270, 1266, 1268, 1265, 917, 1271,
	1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281,
	1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 993, 994,
	995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004,
	1191, 377, 1253, 2508, 1147, 1148, 1315, 1946, 2085, 1240,
	2341, 2333, 1869, 2207, 1241, 1019, 1209, 1211, 1213, 1215,
	1217, 1219, 1220, 1222, 1866, 110, 109, 2053, 2052, 1916,
	1946, 1933, 1826, 2581, 2696, 556, 1230, 1814, 1795, 1227,
	1228, 1210, 1212, 1708, 1216, 1218, 1945, 1221, 1706, 1610,
	2503, 1468, 1248, 1204, 413, 1115, 937, 1619, 2575, 1619,
	2573, 1250, 2441, 2941, 2943, 1124, 1123, 1133, 1134, 1126,
	1127, 1128, 1129, 1130, 1131, 1132, 1125, 1945, 1298, 1135,
	1945, 2439, 1135, 2080, 2072, 453, 727, 127, 2077, 1619,
	2428, 2076, 2079, 2245, 2582, 1619, 456, 456, 1334, 1925,
	456, 1619, 2248, 1582, 453, 1619, 2244, 127, 1619, 2240,
	127, 1619, 2238, 1619, 1993, 456, 456, 1357, 127, 1619,
	1991, 1619, 1989, 2442, 1619, 1987, 2295, 1318, 127, 127,
	127, 127, 127, 1126, 1127, 1128, 1129, 1130, 1131, 1132,
	1125, 1360, 2440, 1135, 1619, 1984, 1387, 939, 1125, 456,
	1350, 1135, 1945, 127, 2246, 972, 2509, 2861, 2862, 2072,
	2858, 2859, 1743, 1255, 2724, 2723, 2073, 2074, 1368, 1369,
	1370, 1371, 1372, 2718, 2518, 1945, 2093, 1890, 2084, 1147,
	1148, 2838, 2081, 2603, 1333, 1106, 1107, 1105, 1337, 453,
	1378, 1147, 1148, 2997, 1734, 1461, 952, 1108, 2089, 2390,
	456, 456, 456, 944, 1108, 727, 1618, 1123, 1133, 1134,
	1126, 1127, 1128, 1129, 1130, 1131, 1132, 1125, 1362, 2604,
	1135, 1402, 2389, 1436, 1106, 1107, 1105, 965, 2983, 2965,
	2982, 1373, 1374, 1375, 1376, 456, 2164, 1385, 76, 926,
	456, 456, 1399, 1108, 1128, 1129, 1130, 1131, 1132, 1125,
	1450, 1320, 1135, 541, 1335, 1319, 1246, 2839, 1381, 1336,
	1382, 127, 1497, 127, 1457, 1864, 727, 1863, 1346, 1580,
	2871, 982, 2899, 1354, 2898, 1353, 920, 1495, 1496, 1494,
	1105, 1364, 1366, 1367, 127, 1418, 1106, 1107, 1105, 1379,
	1420, 1112, 94, 1735, 1487, 953, 919, 1108, 1580, 943,
	1881, 1451, 2993, 2930, 1322, 1108, 2893, 76, 1873, 1133,
	1134, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1125, 1488,
	1365, 1135, 541, 967, 1475, 1441, 1107, 1105, 1491, 1442,
	1466, 1467, 2480, 2474, 1394, 1395, 727, 93, 1397, 2510,
	1753, 1383, 1517, 1518, 1108, 1459, 1415, 2226, 2336, 2778,
	1102, 1416, 2990, 1192, 1400, 1419, 929, 930, 931, 932,
	933, 934, 935, 727, 727, 1560, 1459, 1087, 541, 562,
	77, 1106, 1107, 1105, 1480, 1482, 1483, 92, 2785, 2932,
	542, 1493, 1481, 1191, 1437, 1092, 2111, 1440, 1093, 1598,
	1108, 2777, 2880, 1106, 1107, 1105, 2779, 2694, 1486, 1449,
	1811, 1812, 1813, 2735, 1566, 1569, 2611, 2991, 127, 127,
	127, 1581, 1108, 2610, 1454, 1124, 1123, 1133, 1134, 1126,
	1127, 1128, 1129, 1130, 1131, 1132, 1125, 1623, 2609, 1135,
	2608, 720, 727, 727, 1865, 1106, 1107, 1105, 1484, 1470,
	704, 2602, 2433, 2872, 2695, 476, 2432, 2879, 1591, 542,
	1603, 1592, 1488, 1532, 1108, 2229, 2000, 2001, 1537, 1998,
	1106, 1107, 1105, 1471, 1974, 1015, 1472, 2871, 1014, 1625,
	1492, 1514, 2840, 1515, 1520, 1106, 1107, 1105, 1528, 1108,
	2837, 1476, 1477, 1478, 1106, 1107, 1105, 988, 2791, 1539,
	1540, 1931, 2166, 1932, 1108, 542, 2690, 2689, 2674, 1106,
	1107, 1105, 1552, 1108, 2618, 2586, 1556, 2532, 2477, 2476,
	987, 2475, 2443, 2430, 1721, 2306, 127, 2235, 1108, 2098,
	1577, 2097, 127, 127, 456, 456, 456, 1996, 1754, 127,
	1729, 1624, 1396, 2868, 2867, 2700, 1636, 2672, 2635, 1315,
	1951, 2629, 127, 2501, 2344, 2329, 2325, 1214, 581, 580,
	583, 584, 585, 586, 2317, 2287, 1716, 582, 587, 127,
	127, 127, 1717, 1718, 1612, 1611, 1617, 2041, 1191, 1725,
	1608, 1604, 1564, 1565, 2040, 1626, 1633, 1747, 1731, 1730,
	1601, 1516, 1728, 1392, 1389, 1352, 127, 1351, 127, 1323,
	1321, 1010, 727, 940, 1750, 419, 727, 417, 1687, 1688,
	1606, 1739, 1345, 1149, 1150, 1151, 1152, 1153, 1154, 1155,
	1054, 1679, 1719, 1720, 2569, 2896, 1792, 1087, 727, 2628,
	1644, 727, 1622, 2415, 2886, 2577, 1013, 2576, 1683, 1684,
	1685, 1686, 1756, 2415, 2847, 2798, 1087, 2415, 2794, 94,
	727, 2569, 2733, 2266, 1086, 2415, 2681, 1487, 1815, 1702,
	2569, 1087, 2569, 2664, 1736, 1732, 1607, 1087, 1609, 1741,
	1898, 1901, 1902, 1903, 1899, 2627, 1900, 1904, 1740, 2039,
	2393, 2394, 1488, 1606, 2569, 2568, 2541, 1087, 1794, 1087,
	1915, 1917, 2415, 2414, 2254, 2253, 2250, 2251, 2250, 2249,
	1893, 1087, 1689, 2364, 1824, 1087, 1767, 1766, 1558, 1751,
	1558, 1087, 1252, 1251, 1491, 1124, 1123, 1133, 1134, 1126,
	1127, 1128, 1129, 1130, 1131, 1132, 1125, 2374, 2236, 1135,
	2388, 1749, 1745, 2336, 80, 1892, 1893, 1755, 2039, 1607,
	1020, 1361, 1762, 1463, 1124, 1123, 1133, 1134, 1126, 1127,
	1128, 1129, 1130, 1131, 1132, 1125, 1713, 1920, 1135, 1361,
	1059, 1624, 2914, 1058, 1769, 2363, 1018, 1772, 1017, 1909,
	2892, 1018, 2388, 1918, 2535, 1893, 1598, 1776, 1791, 1598,
	1558, 127, 1893, 1727, 541, 1803, 2402, 2267, 1824, 127,
	2252, 127, 1801, 1802, 1462, 2388, 127, 1712, 1820, 127,
	127, 127, 1124, 1123, 1133, 1134, 1126, 1127, 1128, 1129,
	1130, 1131, 1132, 1125, 1816, 715, 1135, 1601, 1020, 727,
	1916, 1891, 2096, 2065, 1360, 1935, 1613, 1824, 704, 1853,
	1898, 1901, 1902, 1903, 1899, 1914, 1900, 1904, 1921, 1852,
	1398, 1922, 1726, 1810, 1464, 1082, 1439, 1405, 1361, 1343,
	1096, 1341, 476, 1234, 1858, 77, 1492, 2818, 2795, 2401,
	2714, 2632, 1905, 2547, 1124, 1123, 1133, 1134, 1126, 1127,
	1128, 1129, 1130, 1131, 1132, 1125, 2435, 77, 1135, 1653,
	2393, 2394, 727, 1682, 127, 2225, 1678, 1939, 1024, 1707,
	1673, 1672, 1316, 1007, 1691, 1744, 2954, 727, 727, 727,
	2952, 1936, 2921, 456, 1880, 2396, 2374, 2265, 2002, 1348,
	1060, 542, 1021, 1667, 1668, 1669, 1670, 127, 456, 1923,
	1919, 1016, 427, 453, 2005, 2186, 2184, 1938, 2399, 2398,
	2187, 2185, 1113, 1315, 1240, 456, 2045, 2188, 1926, 1902,
	1903, 2183, 2182, 1934, 1859, 547, 548, 2864, 2813, 2099,
	1800, 1100, 1101, 1474, 2849, 2538, 456, 2036, 727, 1808,
	1601, 1807, 2655, 76, 456, 2500, 1882, 1601, 2418, 2324,
	1601, 2323, 1953, 2234, 2233, 2708, 2232, 1943, 541, 2219,
	1098, 2705, 2790, 2094, 2095, 727, 727, 2789, 458, 1997,
	2622, 1333, 2620, 2686, 1999, 127, 1830, 1832, 2685, 418,
	1393, 2092, 2120, 2104, 2008, 727, 2037, 2006, 2091, 1844,
	1845, 1846, 1847, 1384, 2007, 1487, 2261, 1950, 1952, 1944,
	1089, 1949, 727, 2028, 2605, 2606, 1985, 2043, 1247, 1005,
	2906, 1090, 989, 986, 985, 2100, 941, 1652, 2639, 2638,
	1488, 2056, 1700, 1466, 1467, 2482, 2533, 2042, 1701, 2062,
	1347, 2915, 2483, 2783, 2624, 2423, 984, 2260, 94, 2050,
	2170, 2172, 1100, 1101, 1598, 1598, 1598, 1598, 1598, 2048,
	1692, 1455, 2171, 2905, 2070, 541, 1078, 1079, 2064, 2904,
	1909, 2069, 2195, 2903, 127, 127, 127, 127, 127, 1806,
	2583, 1598, 1560, 622, 1775, 541, 127, 1805, 968, 544,
	127, 1314, 2842, 2841, 127, 542, 2176, 2802, 2175, 2787,
	2709, 127, 2075, 2105, 2086, 2087, 2645, 2106, 2090, 2114,
	545, 80, 2104, 2110, 727, 2801, 727, 2720, 727, 2163,
	727, 2039, 2227, 2956, 2955, 2198, 2014, 2015, 2016, 2955,
	2190, 2203, 2513, 2205, 2206, 2304, 2061, 2059, 2197, 2058,
	1870, 1867, 1773, 2204, 2153, 1380, 2152, 1103, 2067, 2078,
	2083, 2956, 2730, 1489, 2231, 1460, 1498, 1499, 1500, 1501,
	1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511,
	1512, 465, 715, 711, 467, 2178, 2179, 723, 2181, 2177,
	1586, 82, 2180, 127, 2189, 2757, 50, 2759, 19, 2758,
	18, 2218, 542, 2220, 2760, 20, 2761, 21, 453, 928,
	2212, 2756, 15, 727, 727, 727, 2202, 2211, 2755, 14,
	456, 2282, 542, 2749, 10, 127, 456, 2772, 34, 2268,
	2770, 33, 53, 2258, 1, 1687, 1763, 1688, 2769, 32,
	127, 1422, 456, 2462, 727, 456, 1572, 2768, 28, 456,
	456, 2461, 456, 2468, 1583, 1601, 1601, 1601, 1601, 1601,
	2262, 2263, 2264, 2767, 27, 2288, 2272, 2165, 2275, 727,
	2026, 1601, 2478, 127, 727, 1529, 1530, 1331, 2284, 2594,
	2293, 727, 1601, 923, 727, 2766, 26, 727, 1542, 1543,
	1544, 1545, 2764, 23, 1711, 1975, 1976, 2763, 22, 2765,
	24, 2121, 1982, 1557, 1559, 2124, 2125, 2126, 1011, 1563,
	2129, 2788, 1994, 2326, 2289, 2754, 13, 2221, 2222, 2751,
	12, 2223, 2704, 2224, 2750, 11, 2706, 2294, 2748, 9,
	2298, 2619, 2485, 2369, 2302, 2303, 2337, 2305, 2446, 2291,
	2379, 76, 2445, 2019, 2018, 1006, 2308, 1403, 2314, 2068,
	2328, 2071, 2307, 2380, 1722, 1785, 541, 2716, 1774, 1457,
	1061, 727, 1637, 727, 1627, 2404, 717, 90, 1315, 1733,
	2408, 2409, 2410, 951, 385, 1634, 1959, 2707, 1008, 2335,
	1958, 1972, 2176, 2375, 2175, 1649, 727, 1695, 1699, 2378,
	1957, 1956, 2702, 1960, 1260, 2387, 1258, 1259, 1257, 1262,
	1261, 389, 727, 1242, 2828, 2343, 1104, 105, 54, 2502,
	2082, 461, 462, 95, 2403, 103, 727, 391, 2407, 1143,
	1804, 1927, 702, 703, 695, 2290, 2413, 1796, 1084, 2722,
	76, 2889, 2820, 1094, 2852, 1879, 1203, 1578, 565, 1748,
	2193, 2313, 2436, 2517, 2382, 541, 2854, 1479, 2437, 579,
	578, 577, 574, 575, 2412, 2397, 127, 2809, 727, 1469,
	2167, 1117, 476, 2255, 563, 2405, 554, 1596, 1589, 1752,
	1897, 1895, 1894, 2419, 2330, 2354, 1349, 2458, 2459, 2460,
	1231, 2395, 2391, 542, 1936, 1907, 1595, 1599, 552, 38,
	1113, 2512, 966, 407, 2370, 456, 2444, 2652, 84, 466,
	549, 1746, 25, 2424, 17, 976, 16, 1778, 921, 40,
	42, 2438, 2013, 1703, 2827, 2937, 992, 2963, 2869, 2496,
	2497, 31, 2511, 30, 727, 29, 2762, 2771, 2753, 2752,
	2104, 2923, 727, 2922, 4, 2457, 1075, 69, 35, 2498,
	713, 1817, 1818, 1819, 2, 0, 0, 0, 0, 0,
	0, 0, 2372, 0, 0, 0, 2506, 0, 2486, 0,
	0, 2514, 2515, 0, 1777, 2487, 0, 0, 2499, 2488,
	1793, 0, 542, 2492, 0, 127, 2491, 2218, 2484, 0,
	2490, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 727, 2507, 2571, 0, 1182, 1183, 0, 727,
	727, 727, 2176, 0, 2175, 0, 727, 0, 2549, 0,
	0, 1687, 0, 0, 0, 2554, 2555, 2556, 2241, 1874,
	1875, 1876, 0, 0, 2579, 0, 727, 2552, 2534, 0,
	1822, 0, 0, 0, 1314, 1825, 2580, 0, 2542, 0,
	1827, 1828, 2557, 2543, 0, 1833, 1834, 1835, 1836, 1837,
	1838, 1839, 1840, 2578, 0, 1843, 0, 0, 0, 0,
	1848, 1849, 1850, 1851, 0, 2564, 2565, 1855, 1856, 1857,
	2584, 2553, 0, 2558, 1860, 1861, 1862, 2563, 0, 0,
	0, 2640, 1868, 0, 1598, 1871, 1872, 0, 2585, 2292,
	1877, 0, 0, 0, 0, 1883, 727, 1884, 1885, 1886,
	2362, 1887, 1888, 0, 127, 0, 2379, 0, 0, 2379,
	2660, 2607, 0, 0, 2597, 2612, 0, 0, 0, 0,
	0, 2404, 2659, 0, 2625, 541, 0, 2615, 2630, 2631,
	0, 0, 727, 0, 2641, 2637, 0, 0, 727, 0,
	0, 0, 127, 0, 127, 0, 2642, 0, 2643, 0,
	0, 76, 0, 0, 2663, 2378, 0, 0, 2378, 0,
	727, 2657, 0, 2682, 2656, 1191, 541, 0, 2644, 2671,
	2665, 0, 2662, 0, 0, 2544, 2545, 0, 2666, 2546,
	0, 0, 2548, 2684, 0, 0, 1914, 476, 2667, 2044,
	1191, 711, 2566, 2567, 0, 0, 711, 1243, 1598, 1124,
	1123, 1133, 1134, 1126, 1127, 1128, 1129, 1130, 1131, 1132,
	1125, 2673, 0, 1135, 0, 456, 0, 0, 127, 0,
	0, 0, 0, 727, 0, 0, 0, 0, 0, 2379,
	0, 76, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2732, 0, 0, 541, 0, 0, 0,
	2712, 0, 542, 0, 0, 76, 0, 0, 0, 2713,
	2711, 0, 2742, 0, 0, 0, 127, 2108, 2721, 2725,
	2740, 0, 0, 2633, 2634, 1601, 0, 0, 2378, 0,
	0, 2731, 1983, 0, 1986, 1988, 1990, 1992, 2734, 0,
	2429, 0, 2431, 542, 0, 0, 0, 0, 2134, 2135,
	552, 0, 0, 2710, 0, 727, 2736, 0, 0, 727,
	0, 0, 2154, 2155, 0, 2156, 2157, 2786, 0, 2158,
	0, 2784, 0, 0, 0, 0, 0, 0, 0, 0,
	2823, 0, 2796, 2793, 0, 0, 0, 2109, 0, 0,
	0, 2812, 0, 2117, 2176, 2816, 2175, 76, 0, 2819,
	2671, 0, 0, 0, 0, 2127, 2128, 0, 0, 0,
	0, 0, 0, 0, 2832, 0, 727, 0, 2136, 0,
	0, 0, 2140, 542, 0, 0, 0, 0, 0, 0,
	476, 0, 0, 0, 0, 0, 727, 2845, 0, 1601,
	2857, 0, 0, 2521, 0, 0, 0, 0, 0, 1317,
	0, 0, 0, 2844, 0, 1325, 1328, 2848, 2866, 727,
	2230, 0, 0, 2846, 0, 0, 2863, 0, 1942, 0,
	2191, 2192, 453, 0, 0, 2865, 1325, 1328, 0, 0,
	0, 1191, 0, 0, 456, 2884, 2876, 0, 0, 0,
	2887, 0, 727, 76, 0, 0, 0, 0, 0, 76,
	2885, 0, 0, 2902, 727, 0, 2909, 0, 0, 0,
	0, 0, 0, 0, 0, 2897, 2907, 0, 727, 0,
	76, 2900, 0, 0, 0, 76, 0, 0, 2917, 2912,
	2931, 0, 2916, 2911, 2947, 2934, 2120, 2936, 0, 453,
	541, 2927, 0, 2926, 2953, 2949, 2951, 2925, 2948, 76,
	2924, 456, 2946, 76, 76, 727, 0, 0, 76, 2958,
	2957, 2909, 0, 2960, 0, 2966, 0, 0, 1423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	76, 0, 2976, 76, 0, 0, 0, 2909, 2984, 0,
	2986, 0, 0, 2981, 0, 0, 0, 0, 76, 0,
	76, 0, 0, 2339, 76, 2909, 0, 2909, 0, 2824,
	2825, 0, 0, 0, 2996, 76, 0, 0, 76, 0,
	76, 0, 2909, 0, 76, 0, 0, 2909, 3000, 723,
	0, 2909, 0, 0, 0, 0, 0, 2853, 2856, 0,
	0, 0, 2237, 2239, 0, 0, 0, 0, 0, 2243,
	0, 0, 0, 0, 0, 2366, 2367, 2368, 0, 723,
	2929, 2247, 0, 0, 0, 0, 0, 542, 0, 2338,
	0, 0, 0, 0, 2115, 2116, 0, 0, 0, 0,
	0, 0, 0, 2122, 2123, 0, 0, 0, 0, 0,
	0, 0, 2406, 0, 0, 2130, 2131, 2132, 2133, 1519,
	0, 0, 2137, 2138, 2139, 2350, 0, 2901, 0, 0,
	0, 0, 0, 0, 0, 0, 2359, 2360, 0, 0,
	0, 0, 2365, 2422, 0, 0, 1550, 1551, 2856, 0,
	0, 0, 0, 0, 2381, 476, 0, 0, 0, 0,
	0, 0, 0, 476, 0, 0, 0, 0, 0, 711,
	0, 1654, 1655, 0, 1660, 1661, 1662, 1663, 1664, 0,
	0, 0, 0, 0, 0, 0, 2411, 0, 0, 2216,
	2361, 0, 1674, 1675, 1676, 0, 0, 2161, 711, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1022,
	0, 0, 723, 0, 0, 723, 723, 0, 1521, 1526,
	1527, 2985, 0, 0, 1531, 0, 1533, 1534, 1535, 1536,
	0, 1538, 0, 0, 1541, 0, 0, 0, 0, 1546,
	1547, 1548, 1549, 0, 0, 0, 1553, 1554, 1555, 0,
	0, 0, 0, 0, 1561, 1562, 0, 0, 0, 1568,
	1571, 0, 1576, 2519, 2520, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2523, 2524, 2525,
	2526, 0, 0, 0, 1584, 2530, 1587, 1588, 0, 1124,
	1123, 1133, 1134, 1126, 1127, 1128, 1129, 1130, 1131, 1132,
	1125, 0, 0, 1135, 1124, 1123, 1133, 1134, 1126, 1127,
	1128, 1129, 1130, 1131, 1132, 1125, 2312, 0, 1135, 0,
	0, 0, 0, 1942, 0, 0, 2319, 2321, 2427, 0,
	0, 0, 0, 0, 0, 400, 2312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2527, 2528, 2529, 0, 2531, 0, 0, 0, 2348, 0,
	0, 0, 0, 2536, 2537, 0, 2539, 0, 0, 2540,
	0, 0, 0, 0, 0, 1761, 2340, 0, 0, 1761,
	0, 0, 1097, 0, 2342, 0, 0, 0, 0, 2551,
	2347, 0, 0, 0, 2345, 2346, 0, 0, 0, 0,
	0, 1761, 0, 2349, 1761, 0, 2570, 1124, 1123, 1133,
	1134, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1125, 0,
	0, 1135, 0, 1799, 0, 0, 0, 0, 125, 0,
	0, 404, 723, 0, 2160, 0, 378, 125, 0, 1124,
	1123, 1133, 1134, 1126, 1127, 1128, 1129, 1130, 1131, 1132,
	1125, 0, 0, 1135, 0, 0, 0, 0, 475, 0,
	0, 0, 0, 0, 0, 0, 553, 0, 0, 0,
	0, 0, 712, 0, 0, 125, 0, 0, 0, 0,
	0, 0, 0, 381, 0, 0, 0, 2680, 0, 0,
	0, 0, 390, 398, 399, 125, 0, 0, 0, 0,
	0, 0, 0, 2646, 2647, 0, 125, 2648, 2649, 2650,
	2651, 2159, 0, 0, 0, 0, 2572, 0, 2574, 0,
	0, 0, 0, 0, 0, 0, 0, 387, 0, 0,
	388, 0, 0, 396, 397, 0, 0, 0, 2668, 2669,
	2670, 1124, 1123, 1133, 1134, 1126, 1127, 1128, 1129, 1130,
	1131, 1132, 1125, 0, 2715, 1135, 0, 0, 0, 2312,
	0, 0, 0, 0, 1977, 1978, 1979, 1981, 0, 0,
	0, 0, 0, 0, 0, 0, 711, 0, 0, 2312,
	0, 1823, 0, 0, 1282, 0, 0, 0, 0, 1829,
	393, 0, 723, 0, 0, 0, 0, 0, 0, 0,
	1841, 1842, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 0, 1854, 0, 0, 0, 0, 1124, 1123,
	1133, 1134, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1125,
	0, 0, 1135, 0, 476, 0, 2726, 0, 1878, 0,
	0, 0, 0, 1025, 1032, 1033, 1035, 1036, 1037, 1038,
	1039, 0, 1041, 1042, 1043, 2003, 1046, 0, 1049, 1050,
	1051, 1052, 1053, 0, 2737, 2216, 0, 0, 0, 0,
	2017, 2021, 2025, 0, 0, 0, 379, 0, 0, 0,
	0, 0, 0, 0, 0, 2216, 0, 0, 1269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2797, 0, 0, 0, 0, 0, 2803, 0, 0, 0,
	392, 382, 383, 0, 403, 1119, 2817, 1122, 384, 386,
	0, 380, 402, 401, 1136, 1137, 1138, 1139, 1140, 1141,
	1142, 2057, 1120, 1121, 1118, 0, 0, 0, 0, 0,
	0, 0, 1124, 1123, 1133, 1134, 1126, 1127, 1128, 1129,
	1130, 1131, 1132, 1125, 0, 0, 1135, 0, 723, 723,
	125, 0, 0, 0, 0, 395, 0, 0, 0, 1283,
	0, 0, 0, 0, 0, 0, 0, 0, 723, 0,
	0, 2107, 0, 0, 0, 0, 0, 0, 0, 0,
	723, 0, 0, 0, 0, 2118, 0, 0, 0, 0,
	0, 476, 0, 476, 125, 0, 0, 36, 37, 1124,
	1123, 1133, 1134, 1126, 1127, 1128, 1129, 1130, 1131, 1132,
	1125, 57, 2945, 1135, 0, 0, 0, 74, 0, 0,
	39, 61, 62, 0, 0, 0, 0, 0, 58, 0,
	0, 0, 1821, 1124, 1123, 1133, 1134, 1126, 1127, 1128,
	1129, 1130, 1131, 1132, 1125, 475, 711, 1135, 0, 0,
	0, 0, 0, 2969, 0, 48, 0, 0, 0, 77,
	1124, 1123, 1133, 1134, 1126, 1127, 1128, 1129, 1130, 1131,
	1132, 1125, 2216, 0, 1135, 0, 0, 0, 2242, 0,
	0, 0, 0, 0, 0, 0, 0, 723, 0, 723,
	0, 723, 0, 2215, 1296, 1299, 1300, 1301, 1302, 1303,
	1304, 0, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312,
	0, 1284, 1285, 1286, 1287, 1263, 1267, 1297, 1264, 1270,
	1266, 1268, 1265, 0, 1271, 1272, 1273, 1274, 1275, 1276,
	1277, 1278, 1279, 1280, 1281, 1288, 1289, 1290, 1291, 1292,
	1293, 1294, 1295, 2987, 2988, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 41, 70, 44, 43, 46, 2269, 2270, 2271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 36, 0, 0, 0, 0, 0,
	0, 0, 47, 73, 72, 0, 0, 2297, 57, 45,
	0, 0, 0, 0, 74, 0, 0, 39, 0, 0,
	0, 0, 0, 63, 0, 0, 0, 0, 0, 0,
	0, 0, 2322, 1298, 0, 2216, 0, 2327, 0, 0,
	2351, 2352, 0, 2353, 2331, 0, 2355, 2332, 2357, 0,
	2334, 0, 0, 0, 0, 0, 77, 0, 0, 0,
	55, 56, 0, 0, 0, 0, 0, 1233, 0, 0,
	712, 0, 0, 0, 0, 712, 0, 64, 0, 65,
	0, 0, 2773, 0, 0, 2962, 2965, 2961, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 66, 0, 0, 0, 0, 0,
	0, 0, 0, 2416, 2417, 0, 0, 0, 0, 0,
	0, 0, 711, 0, 723, 0, 2386, 0, 0, 0,
	0, 0, 49, 71, 0, 51, 52, 59, 0, 60,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2386,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 723, 0, 0, 41, 70,
	44, 43, 46, 0, 0, 0, 0, 0, 0, 2421,
	0, 0, 0, 2774, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 47,
	73, 72, 0, 0, 0, 0, 45, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2021, 0, 1421, 0, 0, 1424, 1425, 1426, 0,
	1428, 1429, 0, 0, 1430, 0, 0, 0, 0, 0,
	1431, 0, 0, 0, 1432, 1433, 0, 1434, 1435, 0,
	0, 0, 0, 0, 0, 0, 0, 55, 56, 0,
	2775, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 64, 0, 65, 0, 0, 125,
	0, 75, 0, 0, 1326, 1329, 0, 723, 0, 0,
	0, 0, 0, 0, 0, 723, 0, 0, 0, 125,
	0, 66, 125, 0, 0, 1326, 1329, 0, 0, 0,
	1359, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	125, 125, 125, 125, 125, 0, 0, 0, 0, 2776,
	71, 1363, 51, 52, 59, 0, 60, 0, 0, 0,
	0, 0, 711, 0, 0, 1388, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2421, 0, 0, 0, 0,
	0, 0, 2421, 2421, 2421, 0, 0, 0, 0, 2215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2215,
	0, 625, 626, 627, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 125, 0, 475, 0, 0, 0, 2636,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 125, 0, 75, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1359, 0,
	0, 0, 0, 0, 0, 2661, 0, 0, 0, 0,
	0, 2421, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2676, 0, 0, 0, 0, 0, 0,
	1525, 1525, 1525, 0, 0, 0, 1525, 1525, 1525, 1525,
	1525, 1525, 1525, 1525, 0, 0, 1525, 0, 0, 0,
	0, 1525, 1525, 1525, 1525, 0, 0, 0, 1525, 1525,
	1525, 0, 0, 0, 0, 0, 1525, 1525, 0, 0,
	0, 1525, 1525, 0, 1525, 0, 0, 0, 712, 0,
	0, 0, 0, 0, 0, 0, 2215, 534, 0, 0,
	0, 0, 0, 0, 0, 0, 1525, 1525, 1525, 1525,
	125, 125, 125, 0, 0, 0, 0, 712, 2316, 0,
	0, 0, 0, 0, 0, 0, 0, 539, 0, 0,
	0, 1359, 0, 0, 0, 0, 0, 1768, 0, 0,
	0, 0, 0, 0, 0, 490, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 498, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2215, 0,
	0, 0, 2799, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 711, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 125, 0,
	0, 0, 0, 0, 125, 125, 0, 0, 0, 0,
	0, 125, 0, 0, 0, 0, 0, 0, 538, 723,
	0, 0, 0, 0, 125, 0, 0, 1255, 0, 0,
	0, 0, 0, 0, 0, 496, 479, 0, 0, 2215,
	0, 1737, 1738, 125, 0, 500, 0, 0, 0, 0,
	0, 0, 0, 0, 525, 0, 0, 491, 0, 486,
	0, 0, 2421, 0, 0, 0, 499, 0, 125, 0,
	475, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2891, 0, 0, 0, 0,
	0, 0, 0, 0, 503, 501, 0, 2894, 0, 504,
	0, 0, 0, 0, 0, 512, 480, 0, 516, 0,
	0, 723, 0, 0, 0, 0, 478, 0, 0, 0,
	0, 1359, 0, 0, 0, 0, 0, 0, 0, 0,
	494, 518, 0, 0, 0, 0, 0, 0, 492, 493,
	495, 522, 0, 524, 530, 0, 0, 0, 2891, 36,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 57, 0, 0, 0, 0, 0, 74,
	0, 0, 39, 1525, 0, 0, 0, 0, 0, 0,
	0, 1525, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1525, 1525, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1525, 0, 0, 0, 1525,
	0, 77, 0, 0, 0, 0, 0, 481, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 502, 0, 0,
	1525, 0, 0, 0, 0, 0, 0, 2773, 0, 0,
	0, 0, 3002, 125, 0, 0, 0, 0, 0, 0,
	0, 125, 0, 475, 0, 0, 0, 0, 125, 0,
	0, 125, 1924, 1359, 0, 712, 0, 0, 531, 532,
	0, 0, 0, 0, 482, 483, 484, 485, 487, 505,
	506, 510, 511, 528, 527, 526, 529, 533, 536, 535,
	537, 488, 489, 497, 507, 508, 509, 513, 514, 523,
	519, 521, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 41, 70, 44, 43, 46, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2774, 0,
	0, 0, 0, 0, 0, 0, 125, 0, 520, 0,
	0, 0, 0, 0, 47, 73, 72, 0, 0, 0,
	0, 45, 0, 0, 0, 0, 0, 0, 0, 0,
	515, 517, 0, 0, 0, 0, 0, 0, 0, 125,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 55, 56, 0, 2775, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 64,
	0, 65, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 66, 125, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1525, 0,
	0, 0, 0, 0, 0, 0, 0, 1525, 0, 1359,
	0, 0, 0, 0, 2776, 71, 0, 51, 52, 59,
	0, 60, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 712, 125, 125, 125, 125,
	125, 0, 0, 0, 0, 0, 0, 0, 475, 0,
	0, 0, 125, 0, 0, 0, 475, 0, 0, 0,
	0, 1525, 0, 125, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	338, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 0, 0, 0, 0, 220, 0, 0, 180, 169,
	228, 226, 0, 75, 0, 271, 337, 0, 0, 0,
	0, 223, 0, 0, 0, 325, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 125, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 726, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 125, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 125, 0, 358, 275, 292, 313, 0, 283,
	0, 1124, 1123, 1133, 1134, 1126, 1127, 1128, 1129, 1130,
	1131, 1132, 1125, 0, 0, 1135, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 125, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 553, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	146, 0, 0, 0, 211, 0, 0, 0, 0, 285,
	0, 332, 199, 221, 151, 128, 144, 162, 198, 260,
	0, 307, 0, 0, 0, 0, 0, 170, 0, 299,
	268, 357, 0, 0, 298, 224, 347, 0, 0, 356,
	0, 712, 366, 371, 0, 0, 0, 322, 183, 178,
	182, 0, 135, 0, 282, 175, 216, 0, 0, 0,
	166, 0, 0, 0, 321, 344, 132, 246, 345, 370,
	153, 339, 247, 253, 163, 165, 164, 145, 316, 343,
	158, 168, 326, 303, 333, 174, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 362, 0, 310, 309, 0,
	206, 0, 0, 0, 291, 0, 212, 134, 335, 374,
	152, 218, 340, 0, 193, 259, 172, 269, 270, 190,
	130, 287, 240, 241, 239, 242, 197, 0, 0, 0,
	289, 312, 342, 154, 329, 0, 0, 0, 125, 301,
	0, 0, 0, 231, 186, 189, 200, 207, 0, 296,
	330, 363, 0, 147, 136, 336, 355, 159, 311, 314,
	372, 297, 139, 353, 331, 244, 213, 214, 137, 0,
	138, 294, 179, 196, 173, 263, 0, 195, 284, 350,
	351, 171, 375, 148, 365, 141, 149, 364, 256, 0,
	255, 367, 346, 354, 245, 233, 0, 140, 352, 243,
	232, 219, 188, 202, 280, 227, 281, 203, 251, 250,
	252, 229, 234, 0, 0, 0, 327, 360, 376, 334,
	156, 0, 315, 341, 0, 288, 157, 194, 187, 279,
	254, 150, 205, 324, 217, 225, 293, 373, 267, 300,
	160, 359, 323, 184, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 475, 0, 0,
	0, 712, 0, 0, 0, 0, 0, 0, 0, 0,
	167, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	131, 142, 222, 0, 290, 192, 361, 0, 177, 0,
	0, 0, 0, 0, 129, 143, 155, 161, 176, 185,
	191, 201, 204, 208, 209, 210, 215, 230, 235, 236,
	237, 238, 257, 258, 261, 262, 265, 266, 272, 273,
	274, 276, 277, 278, 286, 0, 295, 302, 304, 305,
	306, 308, 317, 318, 319, 320, 328, 348, 349, 368,
	369, 0, 0, 0, 133, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 125, 553, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 475, 0, 475, 0, 0, 883,
	858, 338, 803, 886, 760, 786, 901, 791, 795, 838,
	744, 816, 264, 782, 745, 0, 764, 734, 774, 735,
	761, 181, 759, 860, 819, 885, 220, 833, 0, 180,
	169, 228, 226, 0, 0, 0, 271, 337, 884, 811,
	0, 893, 223, 0, 828, 894, 325, 248, 0, 0,
	807, 870, 814, 856, 802, 840, 753, 827, 888, 783,
	835, 889, 0, 0, 0, 0, 2826, 0, 0, 0,
	125, 0, 0, 0, 0, 748, 0, 831, 882, 777,
	834, 805, 837, 904, 732, 830, 0, 739, 746, 900,
	877, 767, 768, 769, 0, 0, 0, 0, 0, 0,
	0, 806, 815, 850, 799, 358, 275, 292, 313, 793,
	283, 780, 0, 0, 0, 0, 0, 0, 125, 0,
	765, 0, 825, 0, 0, 0, 747, 740, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	804, 0, 0, 712, 752, 731, 766, 852, 0, 729,
	249, 146, 857, 876, 801, 211, 898, 880, 798, 797,
	285, 0, 332, 199, 221, 151, 128, 144, 162, 198,
	260, 849, 307, 779, 730, 861, 762, 775, 170, 771,
	299, 268, 357, 784, 822, 298, 224, 347, 845, 881,
	356, 788, 864, 366, 371, 770, 812, 750, 322, 183,
	178, 182, 0, 135, 781, 282, 175, 216, 800, 839,
	763, 166, 847, 826, 863, 321, 344, 132, 246, 345,
	370, 153, 339, 247, 253, 163, 165, 164, 145, 316,
	343, 158, 168, 326, 303, 333, 174, 0, 0, 2829,
	2830, 2831, 794, 785, 0, 0, 362, 796, 310, 309,
	790, 206, 855, 829, 736, 291, 842, 212, 134, 335,
	374, 152, 218, 340, 728, 193, 259, 172, 269, 270,
	190, 130, 287, 240, 241, 239, 242, 197, 776, 844,
	854, 289, 312, 342, 154, 329, 772, 773, 778, 851,
	301, 862, 874, 887, 231, 186, 189, 200, 207, 836,
	296, 330, 363, 0, 147, 136, 336, 355, 159, 311,
	314, 372, 297, 139, 353, 331, 244, 213, 214, 137,
	0, 138, 294, 179, 196, 173, 263, 0, 195, 284,
	350, 351, 171, 375, 148, 365, 141, 149, 364, 256,
	0, 255, 367, 346, 354, 245, 233, 0, 140, 352,
	243, 232, 219, 188, 202, 280, 227, 281, 203, 251,
	250, 252, 229, 234, 0, 737, 0, 327, 360, 376,
	334, 156, 758, 315, 341, 787, 288, 157, 194, 187,
	279, 254, 150, 205, 324, 217, 225, 293, 373, 267,
	300, 160, 359, 323, 184, 756, 757, 754, 0, 755,
	817, 818, 890, 891, 892, 853, 749, 0, 871, 872,
	0, 0, 0, 0, 0, 859, 878, 879, 841, 902,
	792, 167, 738, 741, 742, 743, 751, 808, 809, 821,
	824, 867, 866, 865, 868, 873, 896, 895, 897, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	820, 131, 142, 222, 903, 290, 192, 361, 733, 177,
	0, 810, 813, 823, 848, 129, 143, 155, 161, 176,
	185, 191, 201, 204, 208, 209, 210, 215, 230, 235,
	236, 237, 238, 257, 258, 261, 262, 265, 266, 272,
	273, 274, 276, 277, 278, 286, 846, 295, 302, 304,
	305, 306, 308, 317, 318, 319, 320, 328, 348, 349,
	368, 369, 875, 0, 789, 133, 869, 899, 832, 843,
	883, 858, 338, 803, 886, 760, 786, 901, 791, 795,
	838, 744, 816, 264, 782, 745, 0, 764, 734, 774,
	735, 761, 181, 759, 860, 819, 885, 220, 833, 0,
	180, 169, 228, 226, 0, 0, 0, 271, 337, 884,
	811, 0, 893, 223, 0, 828, 894, 325, 248, 0,
	0, 807, 870, 814, 856, 802, 840, 753, 827, 888,
	783, 835, 889, 0, 0, 0, 0, 726, 0, 1631,
	1632, 0, 0, 0, 0, 0, 748, 0, 831, 882,
	777, 834, 805, 837, 904, 732, 830, 0, 739, 746,
	900, 877, 767, 768, 769, 1937, 0, 0, 0, 0,
	0, 0, 806, 815, 850, 799, 358, 275, 292, 313,
	793, 283, 780, 0, 0, 0, 0, 0, 0, 0,
	0, 765, 0, 825, 0, 0, 0, 747, 740, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 804, 0, 0, 0, 752, 731, 766, 852, 0,
	729, 249, 146, 857, 876, 801, 211, 898, 880, 798,
	797, 285, 0, 332, 199, 221, 151, 128, 144, 162,
	198, 260, 849, 307, 779, 730, 861, 762, 775, 170,
	771, 299, 268, 357, 784, 822, 298, 224, 347, 845,
	881, 356, 788, 864, 366, 371, 770, 812, 750, 322,
	183, 178, 182, 0, 135, 781, 282, 175, 216, 800,
	839, 763, 166, 847, 826, 863, 321, 344, 132, 246,
	345, 370, 153, 339, 247, 253, 163, 165, 164, 145,
	316, 343, 158, 168, 326, 303, 333, 174, 0, 0,
	0, 0, 0, 794, 785, 0, 0, 362, 796, 310,
	309, 790, 206, 855, 829, 736, 291, 842, 212, 134,
	335, 374, 152, 218, 340, 728, 193, 259, 172, 269,
	270, 190, 130, 287, 240, 241, 239, 242, 197, 776,
	844, 854, 289, 312, 342, 154, 329, 772, 773, 778,
	851, 301, 862, 874, 887, 231, 186, 189, 200, 207,
	836, 296, 330, 363, 0, 147, 136, 336, 355, 159,
	311, 314, 372, 297, 139, 353, 331, 244, 213, 214,
	137, 0, 138, 294, 179, 196, 173, 263, 0, 195,
	284, 350, 351, 171, 375, 148, 365, 141, 149, 364,
	256, 0, 255, 367, 346, 354, 245, 233, 0, 140,
	352, 243, 232, 219, 188, 202, 280, 227, 281, 203,
	251, 250, 252, 229, 234, 0, 737, 0, 327, 360,
	376, 334, 156, 758, 315, 341, 787, 288, 157, 194,
	187, 279, 254, 150, 205, 324, 217, 225, 293, 373,
	267, 300, 160, 359, 323, 184, 756, 757, 754, 0,
	755, 817, 818, 890, 891, 892, 853, 749, 0, 871,
	872, 0, 0, 0, 0, 0, 859, 878, 879, 841,
	902, 792, 167, 738, 741, 742, 743, 751, 808, 809,
	821, 824, 867, 866, 865, 868, 873, 896, 895, 897,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 820, 131, 142, 222, 903, 290, 192, 361, 733,
	177, 0, 810, 813, 823, 848, 129, 143, 155, 161,
	176, 185, 191, 201, 204, 208, 209, 210, 215, 230,
	235, 236, 237, 238, 257, 258, 261, 262, 265, 266,
	272, 273, 274, 276, 277, 278, 286, 846, 295, 302,
	304, 305, 306, 308, 317, 318, 319, 320, 328, 348,
	349, 368, 369, 875, 0, 789, 133, 869, 899, 832,
	843, 883, 2383, 338, 803, 886, 760, 786, 901, 791,
	795, 838, 744, 816, 264, 782, 745, 0, 764, 734,
	774, 735, 761, 181, 759, 860, 819, 885, 220, 833,
	0, 180, 169, 228, 226, 0, 0, 0, 271, 337,
	884, 811, 0, 893, 223, 0, 828, 894, 325, 248,
	0, 0, 807, 870, 814, 856, 802, 840, 753, 827,
	888, 783, 835, 889, 77, 0, 1087, 0, 726, 0,
	0, 0, 0, 0, 0, 0, 0, 748, 0, 831,
	882, 777, 834, 805, 837, 904, 732, 830, 0, 739,
	746, 900, 877, 767, 768, 769, 0, 0, 0, 0,
	0, 0, 0, 806, 815, 850, 799, 358, 275, 292,
	313, 793, 283, 780, 0, 0, 0, 0, 0, 0,
	0, 0, 765, 0, 825, 0, 0, 0, 747, 740,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 804, 0, 0, 0, 752, 731, 766, 852,
	0, 729, 249, 146, 857, 876, 801, 211, 898, 880,
	798, 797, 285, 0, 332, 199, 221, 151, 128, 144,
	162, 198, 260, 849, 307, 779, 730, 861, 762, 775,
	170, 771, 299, 268, 357, 784, 822, 298, 224, 347,
	845, 881, 356, 788, 864, 366, 371, 770, 812, 750,
	322, 183, 178, 182, 0, 135, 781, 282, 175, 216,
	800, 839, 763, 166, 847, 826, 863, 321, 344, 132,
	246, 345, 370, 153, 339, 247, 253, 163, 165, 164,
	145, 316, 343, 158, 168, 326, 303, 333, 174, 0,
	0, 0, 0, 0, 794, 785, 0, 0, 362, 796,
	310, 309, 790, 206, 855, 829, 736, 291, 842, 212,
	134, 335, 374, 152, 218, 340, 728, 193, 259, 172,
	269, 270, 190, 130, 287, 240, 241, 239, 242, 197,
	776, 844, 854, 289, 312, 342, 154, 329, 772, 773,
	778, 851, 301, 862, 874, 887, 231, 186, 189, 200,
	207, 836, 296, 330, 363, 0, 147, 136, 336, 355,
	159, 311, 314, 372, 297, 139, 353, 331, 244, 213,
	214, 137, 0, 138, 294, 179, 196, 173, 263, 0,
	195, 284, 350, 351, 171, 375, 148, 365, 141, 149,
	364, 256, 0, 255, 367, 346, 354, 245, 233, 0,
	140, 352, 243, 232, 219, 188, 202, 280, 227, 281,
	203, 251, 250, 252, 229, 234, 0, 737, 0, 327,
	360, 376, 334, 156, 758, 315, 341, 787, 288, 157,
	194, 187, 279, 254, 150, 205, 324, 217, 225, 293,
	373, 267, 300, 160, 359, 323, 184, 756, 757, 754,
	0, 755, 817, 818, 890, 891, 892, 853, 749, 0,
	871, 872, 0, 0, 0, 0, 0, 859, 878, 879,
	841, 902, 792, 167, 738, 741, 742, 743, 751, 808,
	809, 821, 824, 867, 866, 865, 868, 873, 896, 895,
	897, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 820, 131, 142, 222, 2384, 290, 192, 361,
	733, 177, 0, 810, 813, 823, 848, 129, 143, 155,
	161, 176, 185, 191, 201, 204, 208, 209, 210, 215,
	230, 235, 236, 237, 238, 257, 258, 261, 262, 265,
	266, 272, 273, 274, 276, 277, 278, 286, 846, 295,
	302, 304, 305, 306, 308, 317, 318, 319, 320, 328,
	348, 349, 368, 369, 875, 0, 789, 133, 869, 899,
	832, 843, 883, 858, 338, 803, 886, 760, 786, 901,
	791, 795, 838, 744, 816, 264, 782, 745, 0, 764,
	734, 774, 735, 761, 181, 759, 860, 819, 885, 220,
	833, 0, 180, 169, 228, 226, 0, 0, 0, 271,
	337, 884, 811, 0, 893, 223, 0, 828, 894, 325,
	248, 0, 0, 807, 870, 814, 856, 802, 840, 753,
	827, 888, 783, 835, 889, 0, 0, 0, 0, 726,
	0, 1631, 1632, 0, 0, 0, 0, 0, 748, 0,
	831, 882, 777, 834, 805, 837, 904, 732, 830, 0,
	739, 746, 900, 877, 767, 768, 769, 0, 0, 0,
	0, 0, 0, 0, 806, 815, 850, 799, 358, 275,
	292, 313, 793, 283, 780, 0, 0, 0, 0, 0,
	0, 0, 0, 765, 0, 825, 0, 0, 0, 747,
	740, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 804, 0, 0, 0, 752, 731, 766,
	852, 0, 729, 249, 146, 857, 876, 801, 211, 898,
	880, 798, 797, 285, 0, 332, 199, 221, 151, 128,
	144, 162, 198, 260, 849, 307, 779, 730, 861, 762,
	775, 170, 771, 299, 268, 357, 784, 822, 298, 224,
	347, 845, 881, 356, 788, 864, 366, 371, 770, 812,
	750, 322, 183, 178, 182, 0, 135, 781, 282, 175,
	216, 800, 839, 763, 166, 847, 826, 863, 321, 344,
	132, 246, 345, 370, 153, 339, 247, 253, 163, 165,
	164, 145, 316, 343, 158, 168, 326, 303, 333, 174,
	0, 0, 0, 0, 0, 794, 785, 0, 0, 362,
	796, 310, 309, 790, 206, 855, 829, 736, 291, 842,
	212, 134, 335, 374, 152, 218, 340, 728, 193, 259,
	172, 269, 270, 190, 130, 287, 240, 241, 239, 242,
	197, 776, 844, 854, 289, 312, 342, 154, 329, 772,
	773, 778, 851, 301, 862, 874, 887, 231, 186, 189,
	200, 207, 836, 296, 330, 363, 0, 147, 136, 336,
	355, 159, 311, 314, 372, 297, 139, 353, 331, 244,
	213, 214, 137, 0, 138, 294, 179, 196, 173, 263,
	0, 195, 284, 350, 351, 171, 375, 148, 365, 141,
	149, 364, 256, 0, 255, 367, 346, 354, 245, 233,
	0, 140, 352, 243, 232, 219, 188, 202, 280, 227,
	281, 203, 251, 250, 252, 229, 234, 0, 737, 0,
	327, 360, 376, 334, 156, 758, 315, 341, 787, 288,
	157, 194, 187, 279, 254, 150, 205, 324, 217, 225,
	293, 373, 267, 300, 160, 359, 323, 184, 756, 757,
	754, 0, 755, 817, 818, 890, 891, 892, 853, 749,
	0, 871, 872, 0, 0, 0, 0, 0, 859, 878,
	879, 841, 902, 792, 167, 738, 741, 742, 743, 751,
	808, 809, 821, 824, 867, 866, 865, 868, 873, 896,
	895, 897, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 820, 131, 142, 222, 903, 290, 192,
	361, 733, 177, 0, 810, 813, 823, 848, 129, 143,
	155, 161, 176, 185, 191, 201, 204, 208, 209, 210,
	215, 230, 235, 236, 237, 238, 257, 258, 261, 262,
	265, 266, 272, 273, 274, 276, 277, 278, 286, 846,
	295, 302, 304, 305, 306, 308, 317, 318, 319, 320,
	328, 348, 349, 368, 369, 875, 0, 789, 133, 869,
	899, 832, 843, 883, 858, 338, 803, 886, 760, 786,
	901, 791, 795, 838, 744, 816, 264, 782, 745, 0,
	764, 734, 774, 735, 761, 181, 759, 860, 819, 885,
	220, 833, 0, 180, 169, 228, 226, 0, 0, 0,
	271, 337, 884, 811, 0, 893, 223, 0, 828, 894,
	325, 248, 0, 0, 807, 870, 814, 856, 802, 840,
	753, 827, 888, 783, 835, 889, 0, 0, 0, 0,
	726, 0, 0, 0, 0, 0, 0, 0, 0, 748,
	0, 831, 882, 777, 834, 805, 837, 904, 732, 830,
	0, 739, 746, 900, 877, 767, 768, 769, 0, 0,
	0, 0, 0, 0, 0, 806, 815, 850, 799, 358,
	275, 292, 313, 793, 283, 780, 0, 0, 0, 0,
	0, 0, 2516, 0, 765, 0, 825, 0, 0, 0,
	747, 740, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 804, 0, 0, 0, 752, 731,
	766, 852, 0, 729, 249, 146, 857, 876, 801, 211,
	898, 880, 798, 797, 285, 0, 332, 199, 221, 151,
	128, 144, 162, 198, 260, 849, 307, 779, 730, 861,
	762, 775, 170, 771, 299, 268, 357, 784, 822, 298,
	224, 347, 845, 881, 356, 788, 864, 366, 371, 770,
	812, 750, 322, 183, 178, 182, 0, 135, 781, 282,
	175, 216, 800, 839, 763, 166, 847, 826, 863, 321,
	344, 132, 246, 345, 370, 153, 339, 247, 253, 163,
	165, 164, 145, 316, 343, 158, 168, 326, 303, 333,
	174, 0, 0, 0, 0, 0, 794, 785, 0, 0,
	362, 796, 310, 309, 790, 206, 855, 829, 736, 291,
	842, 212, 134, 335, 374, 152, 218, 340, 728, 193,
	259, 172, 269, 270, 190, 130, 287, 240, 241, 239,
	242, 197, 776, 844, 854, 289, 312, 342, 154, 329,
	772, 773, 778, 851, 301, 862, 874, 887, 231, 186,
	189, 200, 207, 836, 296, 330, 363, 0, 147, 136,
	336, 355, 159, 311, 314, 372, 297, 139, 353, 331,
	244, 213, 214, 137, 0, 138, 294, 179, 196, 173,
	263, 0, 195, 284, 350, 351, 171, 375, 148, 365,
	141, 149, 364, 256, 0, 255, 367, 346, 354, 245,
	233, 0, 140, 352, 243, 232, 219, 188, 202, 280,
	227, 281, 203, 251, 250, 252, 229, 234, 0, 737,
	0, 327, 360, 376, 334, 156, 758, 315, 341, 787,
	288, 157, 194, 187, 279, 254, 150, 205, 324, 217,
	225, 293, 373, 267, 300, 160, 359, 323, 184, 756,
	757, 754, 0, 755, 817, 818, 890, 891, 892, 853,
	749, 0, 871, 872, 0, 0, 0, 0, 0, 859,
	878, 879, 841, 902, 792, 167, 738, 741, 742, 743,
	751, 808, 809, 821, 824, 867, 866, 865, 868, 873,
	896, 895, 897, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 820, 131, 142, 222, 903, 290,
	192, 361, 733, 177, 0, 810, 813, 823, 848, 129,
	143, 155, 161, 176, 185, 191, 201, 204, 208, 209,
	210, 215, 230, 235, 236, 237, 238, 257, 258, 261,
	262, 265, 266, 272, 273, 274, 276, 277, 278, 286,
	846, 295, 302, 304, 305, 306, 308, 317, 318, 319,
	320, 328, 348, 349, 368, 369, 875, 0, 789, 133,
	869, 899, 832, 843, 883, 858, 338, 803, 886, 760,
	786, 901, 791, 795, 838, 744, 816, 264, 782, 745,
	0, 764, 734, 774, 735, 761, 181, 759, 860, 819,
	885, 220, 833, 0, 180, 169, 228, 226, 0, 0,
	0, 271, 337, 884, 811, 0, 893, 223, 0, 828,
	894, 325, 248, 0, 0, 807, 870, 814, 856, 802,
	840, 753, 827, 888, 783, 835, 889, 0, 0, 0,
	0, 558, 0, 0, 0, 0, 0, 0, 0, 0,
	748, 0, 831, 882, 777, 834, 805, 837, 904, 732,
	830, 0, 739, 746, 900, 877, 767, 768, 769, 0,
	0, 0, 0, 0, 0, 0, 806, 815, 850, 799,
	358, 275, 292, 313, 793, 283, 780, 0, 0, 0,
	0, 0, 0, 2113, 0, 765, 0, 825, 0, 0,
	0, 747, 740, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 804, 0, 0, 0, 752,
	731, 766, 852, 0, 729, 249, 146, 857, 876, 801,
	211, 898, 880, 798, 797, 285, 0, 332, 199, 221,
	151, 128, 144, 162, 198, 260, 849, 307, 779, 730,
	861, 762, 775, 170, 771, 299, 268, 357, 784, 822,
	298, 224, 347, 845, 881, 356, 788, 864, 366, 371,
	770, 812, 750, 322, 183, 178, 182, 0, 135, 781,
	282, 175, 216, 800, 839, 763, 166, 847, 826, 863,
	321, 344, 132, 246, 345, 370, 153, 339, 247, 253,
	163, 165, 164, 145, 316, 343, 158, 168, 326, 303,
	333, 174, 0, 0, 0, 0, 0, 794, 785, 0,
	0, 362, 796, 310, 309, 790, 206, 855, 829, 736,
	291, 842, 212, 134, 335, 374, 152, 218, 340, 728,
	193, 259, 172, 269, 270, 190, 130, 287, 240, 241,
	239, 242, 197, 776, 844, 854, 289, 312, 342, 154,
	329, 772, 773, 778, 851, 301, 862, 874, 887, 231,
	186, 189, 200, 207, 836, 296, 330, 363, 0, 147,
	136, 336, 355, 159, 311, 314, 372, 297, 139, 353,
	331, 244, 213, 214, 137, 0, 138, 294, 179, 196,
	173, 263, 0, 195, 284, 350, 351, 171, 375, 148,
	365, 141, 149, 364, 256, 0, 255, 367, 346, 354,
	245, 233, 0, 140, 352, 243, 232, 219, 188, 202,
	280, 227, 281, 203, 251, 250, 252, 229, 234, 0,
	737, 0, 327, 360, 376, 334, 156, 758, 315, 341,
	787, 288, 157, 194, 187, 279, 254, 150, 205, 324,
	217, 225, 293, 373, 267, 300, 160, 359, 323, 184,
	756, 757, 754, 0, 755, 817, 818, 890, 891, 892,
	853, 749, 0, 871, 872, 0, 0, 0, 0, 0,
	859, 878, 879, 841, 902, 792, 167, 738, 741, 742,
	743, 751, 808, 809, 821, 824, 867, 866, 865, 868,
	873, 896, 895, 897, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 820, 131, 142, 222, 903,
	290, 192, 361, 733, 177, 0, 810, 813, 823, 848,
	129, 143, 155, 161, 176, 185, 191, 201, 204, 208,
	209, 210, 215, 230, 235, 236, 237, 238, 257, 258,
	261, 262, 265, 266, 272, 273, 274, 276, 277, 278,
	286, 846, 295, 302, 304, 305, 306, 308, 317, 318,
	319, 320, 328, 348, 349, 368, 369, 875, 0, 789,
	133, 869, 899, 832, 843, 883, 858, 338, 803, 886,
	760, 786, 901, 791, 795, 838, 744, 816, 264, 782,
	745, 0, 764, 734, 774, 735, 761, 181, 759, 860,
	819, 885, 220, 833, 0, 180, 169, 228, 226, 0,
	0, 0, 271, 337, 884, 811, 0, 893, 223, 0,
	828, 894, 325, 248, 0, 0, 807, 870, 814, 856,
	802, 840, 753, 827, 888, 783, 835, 889, 0, 0,
	0, 0, 726, 0, 0, 0, 0, 0, 0, 0,
	0, 748, 0, 831, 882, 777, 834, 805, 837, 904,
	732, 830, 0, 739, 746, 900, 877, 767, 768, 769,
	0, 0, 0, 0, 0, 0, 0, 806, 815, 850,
	799, 358, 275, 292, 313, 793, 283, 780, 0, 0,
	0, 0, 0, 0, 2103, 0, 765, 0, 825, 0,
	0, 0, 747, 740, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 804, 0, 0, 0,
	752, 731, 766, 852, 0, 729, 249, 146, 857, 876,
	801, 211, 898, 880, 798, 797, 285, 0, 332, 199,
	221, 151, 128, 144, 162, 198, 260, 849, 307, 779,
	730, 861, 762, 775, 170, 771, 299, 268, 357, 784,
	822, 298, 224, 347, 845, 881, 356, 788, 864, 366,
	371, 770, 812, 750, 322, 183, 178, 182, 0, 135,
	781, 282, 175, 216, 800, 839, 763, 166, 847, 826,
	863, 321, 344, 132, 246, 345, 370, 153, 339, 247,
	253, 163, 165, 164, 145, 316, 343, 158, 168, 326,
	303, 333, 174, 0, 0, 0, 0, 0, 794, 785,
	0, 0, 362, 796, 310, 309, 790, 206, 855, 829,
	736, 291, 842, 212, 134, 335, 374, 152, 218, 340,
	728, 193, 259, 172, 269, 270, 190, 130, 287, 240,
	241, 239, 242, 197, 776, 844, 854, 289, 312, 342,
	154, 329, 772, 773, 778, 851, 301, 862, 874, 887,
	231, 186, 189, 200, 207, 836, 296, 330, 363, 0,
	147, 136, 336, 355, 159, 311, 314, 372, 297, 139,
	353, 331, 244, 213, 214, 137, 0, 138, 294, 179,
	196, 173, 263, 0, 195, 284, 350, 351, 171, 375,
	148, 365, 141, 149, 364, 256, 0, 255, 367, 346,
	354, 245, 233, 0, 140, 352, 243, 232, 219, 188,
	202, 280, 227, 281, 203, 251, 250, 252, 229, 234,
	0, 737, 0, 327, 360, 376, 334, 156, 758, 315,
	341, 787, 288, 157, 194, 187, 279, 254, 150, 205,
	324, 217, 225, 293, 373, 267, 300, 160, 359, 323,
	184, 756, 757, 754, 0, 755, 817, 818, 890, 891,
	892, 853, 749, 0, 871, 872, 0, 0, 0, 0,
	0, 859, 878, 879, 841, 902, 792, 167, 738, 741,
	742, 743, 751, 808, 809, 821, 824, 867, 866, 865,
	868, 873, 896, 895, 897, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 820, 131, 142, 222,
	903, 290, 192, 361, 733, 177, 0, 810, 813, 823,
	848, 129, 143, 155, 161, 176, 185, 191, 201, 204,
	208, 209, 210, 215, 230, 235, 236, 237, 238, 257,
	258, 261, 262, 265, 266, 272, 273, 274, 276, 277,
	278, 286, 846, 295, 302, 304, 305, 306, 308, 317,
	318, 319, 320, 328, 348, 349, 368, 369, 875, 0,
	789, 133, 869, 899, 832, 843, 883, 858, 338, 803,
	886, 760, 786, 901, 791, 795, 838, 744, 816, 264,
	782, 745, 0, 764, 734, 774, 735, 761, 181, 759,
	860, 819, 885, 220, 833, 0, 180, 169, 228, 226,
	0, 0, 0, 271, 337, 884, 811, 0, 893, 223,
	0, 828, 894, 325, 248, 0, 0, 807, 870, 814,
	856, 802, 840, 753, 827, 888, 783, 835, 889, 0,
	0, 0, 0, 126, 0, 0, 0, 0, 0, 0,
	0, 0, 748, 0, 831, 882, 777, 834, 805, 837,
	904, 732, 830, 0, 739, 746, 900, 877, 767, 768,
	769, 0, 0, 0, 0, 0, 0, 0, 806, 815,
	850, 799, 358, 275, 292, 313, 793, 283, 780, 0,
	0, 0, 0, 0, 0, 1925, 0, 765, 0, 825,
	0, 0, 0, 747, 740, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 804, 0, 0,
	0, 752, 731, 766, 852, 0, 729, 249, 146, 857,
	876, 801, 211, 898, 880, 798, 797, 285, 0, 332,
	199, 221, 151, 128, 144, 162, 198, 260, 849, 307,
	779, 730, 861, 762, 775, 170, 771, 299, 268, 357,
	784, 822, 298, 224, 347, 845, 881, 356, 788, 864,
	366, 371, 770, 812, 750, 322, 183, 178, 182, 0,
	135, 781, 282, 175, 216, 800, 839, 763, 166, 847,
	826, 863, 321, 344, 132, 246, 345, 370, 153, 339,
	247, 253, 163, 165, 164, 145, 316, 343, 158, 168,
	326, 303, 333, 174, 0, 0, 0, 0, 0, 794,
	785, 0, 0, 362, 796, 310, 309, 790, 206, 855,
	829, 736, 291, 842, 212, 134, 335, 374, 152, 218,
	340, 728, 193, 259, 172, 269, 270, 190, 130, 287,
	240, 241, 239, 242, 197, 776, 844, 854, 289, 312,
	342, 154, 329, 772, 773, 778, 851, 301, 862, 874,
	887, 231, 186, 189, 200, 207, 836, 296, 330, 363,
	0, 147, 136, 336, 355, 159, 311, 314, 372, 297,
	139, 353, 331, 244, 213, 214, 137, 0, 138, 294,
	179, 196, 173, 263, 0, 195, 284, 350, 351, 171,
	375, 148, 365, 141, 149, 364, 256, 0, 255, 367,
	346, 354, 245, 233, 0, 140, 352, 243, 232, 219,
	188, 202, 280, 227, 281, 203, 251, 250, 252, 229,
	234, 0, 737, 0, 327, 360, 376, 334, 156, 758,
	315, 341, 787, 288, 157, 194, 187, 279, 254, 150,
	205, 324, 217, 225, 293, 373, 267, 300, 160, 359,
	323, 184, 756, 757, 754, 0, 755, 817, 818, 890,
	891, 892, 853, 749, 0, 871, 872, 0, 0, 0,
	0, 0, 859, 878, 879, 841, 902, 792, 167, 738,
	741, 742, 743, 751, 808, 809, 821, 824, 867, 866,
	865, 868, 873, 896, 895, 897, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 820, 131, 142,
	222, 903, 290, 192, 361, 733, 177, 0, 810, 813,
	823, 848, 129, 143, 155, 161, 176, 185, 191, 201,
	204, 208, 209, 210, 215, 230, 235, 236, 237, 238,
	257, 258, 261, 262, 265, 266, 272, 273, 274, 276,
	277, 278, 286, 846, 295, 302, 304, 305, 306, 308,
	317, 318, 319, 320, 328, 348, 349, 368, 369, 875,
	0, 789, 133, 869, 899, 832, 843, 883, 858, 338,
	803, 886, 760, 786, 901, 791, 795, 838, 744, 816,
	264, 782, 745, 0, 764, 734, 774, 735, 761, 181,
	759, 860, 819, 885, 220, 833, 0, 180, 169, 228,
	226, 0, 0, 0, 271, 337, 884, 811, 0, 893,
	223, 0, 828, 894, 325, 248, 0, 0, 807, 870,
	814, 856, 802, 840, 753, 827, 888, 783, 835, 889,
	0, 0, 0, 0, 558, 0, 0, 0, 0, 0,
	0, 0, 0, 748, 0, 831, 882, 777, 834, 805,
	837, 904, 732, 830, 0, 739, 746, 900, 877, 767,
	768, 769, 0, 0, 0, 0, 0, 0, 0, 806,
	815, 850, 799, 358, 275, 292, 313, 793, 283, 780,
	0, 0, 0, 0, 0, 0, 1485, 0, 765, 0,
	825, 0, 0, 0, 747, 740, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 804, 0,
	0, 0, 752, 731, 766, 852, 0, 729, 249, 146,
	857, 876, 801, 211, 898, 880, 798, 797, 285, 0,
	332, 199, 221, 151, 128, 144, 162, 198, 260, 849,
	307, 779, 730, 861, 762, 775, 170, 771, 299, 268,
	357, 784, 822, 298, 224, 347, 845, 881, 356, 788,
	864, 366, 371, 770, 812, 750, 322, 183, 178, 182,
	0, 135, 781, 282, 175, 216, 800, 839, 763, 166,
	847, 826, 863, 321, 344, 132, 246, 345, 370, 153,
	339, 247, 253, 163, 165, 164, 145, 316, 343, 158,
	168, 326, 303, 333, 174, 0, 0, 0, 0, 0,
	794, 785, 0, 0, 362, 796, 310, 309, 790, 206,
	855, 829, 736, 291, 842, 212, 134, 335, 374, 152,
	218, 340, 728, 193, 259, 172, 269, 270, 190, 130,
	287, 240, 241, 239, 242, 197, 776, 844, 854, 289,
	312, 342, 154, 329, 772, 773, 778, 851, 301, 862,
	874, 887, 231, 186, 189, 200, 207, 836, 296, 330,
	363, 0, 147, 136, 336, 355, 159, 311, 314, 372,
	297, 139, 353, 331, 244, 213, 214, 137, 0, 138,
	294, 179, 196, 173, 263, 0, 195, 284, 350, 351,
	171, 375, 148, 365, 141, 149, 364, 256, 0, 255,
	367, 346, 354, 245, 233, 0, 140, 352, 243, 232,
	219, 188, 202, 280, 227, 281, 203, 251, 250, 252,
	229, 234, 0, 737, 0, 327, 360, 376, 334, 156,
	758, 315, 341, 787, 288, 157, 194, 187, 279, 254,
	150, 205, 324, 217, 225, 293, 373, 267, 300, 160,
	359, 323, 184, 756, 757, 754, 0, 755, 817, 818,
	890, 891, 892, 853, 749, 0, 871, 872, 0, 0,
	0, 0, 0, 859, 878, 879, 841, 902, 792, 167,
	738, 741, 742, 743, 751, 808, 809, 821, 824, 867,
	866, 865, 868, 873, 896, 895, 897, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 820, 131,
	142, 222, 903, 290, 192, 361, 733, 177, 0, 810,
	813, 823, 848, 129, 143, 155, 161, 176, 185, 191,
	201, 204, 208, 209, 210, 215, 230, 235, 236, 237,
	238, 257, 258, 261, 262, 265, 266, 272, 273, 274,
	276, 277, 278, 286, 846, 295, 302, 304, 305, 306,
	308, 317, 318, 319, 320, 328, 348, 349, 368, 369,
	875, 0, 789, 133, 869, 899, 832, 843, 883, 858,
	338, 803, 886, 760, 786, 901, 791, 795, 838, 744,
	816, 264, 782, 745, 0, 764, 734, 774, 735, 761,
	181, 759, 860, 819, 885, 220, 833, 0, 180, 169,
	228, 226, 0, 0, 0, 271, 337, 884, 811, 0,
	893, 223, 0, 828, 894, 325, 248, 0, 0, 807,
	870, 814, 856, 802, 840, 753, 827, 888, 783, 835,
	889, 0, 0, 0, 0, 726, 0, 0, 0, 0,
	0, 0, 0, 0, 748, 0, 831, 882, 777, 834,
	805, 837, 904, 732, 830, 0, 739, 746, 900, 877,
	767, 768, 769, 0, 0, 0, 0, 0, 0, 0,
	806, 815, 850, 799, 358, 275, 292, 313, 793, 283,
	780, 0, 0, 0, 0, 0, 0, 0, 0, 765,
	0, 825, 0, 0, 0, 747, 740, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 804,
	0, 0, 0, 752, 731, 766, 852, 0, 729, 249,
	146, 857, 876, 801, 211, 898, 880, 798, 797, 285,
	0, 332, 199, 221, 151, 128, 144, 162, 198, 260,
	849, 307, 779, 730, 861, 762, 775, 170, 771, 299,
	268, 357, 784, 822, 298, 224, 347, 845, 881, 356,
	788, 864, 366, 371, 770, 812, 750, 322, 183, 178,
	182, 0, 135, 781, 282, 175, 216, 800, 839, 763,
	166, 847, 826, 863, 321, 344, 132, 246, 345, 370,
	153, 339, 247, 253, 163, 165, 164, 145, 316, 343,
	158, 168, 326, 303, 333, 174, 0, 0, 0, 0,
	0, 794, 785, 0, 0, 362, 796, 310, 309, 790,
	206, 855, 829, 736, 291, 842, 212, 134, 335, 374,
	152, 218, 340, 728, 193, 259, 172, 269, 270, 190,
	130, 287, 240, 241, 239, 242, 197, 776, 844, 854,
	289, 312, 342, 154, 329, 772, 773, 778, 851, 301,
	862, 874, 887, 231, 186, 189, 200, 207, 836, 296,
	330, 363, 0, 147, 136, 336, 355, 159, 311, 314,
	372, 297, 139, 353, 331, 244, 213, 214, 137, 0,
	138, 294, 179, 196, 173, 263, 0, 195, 284, 350,
	351, 171, 375, 148, 365, 141, 149, 364, 256, 0,
	255, 367, 346, 354, 245, 233, 0, 140, 352, 243,
	232, 219, 188, 202, 280, 227, 281, 203, 251, 250,
	252, 229, 234, 0, 737, 0, 327, 360, 376, 334,
	156, 758, 315, 341, 787, 288, 157, 194, 187, 279,
	254, 150, 205, 324, 217, 225, 293, 373, 267, 300,
	160, 359, 323, 184, 756, 757, 754, 0, 755, 817,
	818, 890, 891, 892, 853, 749, 0, 871, 872, 0,
	0, 0, 0, 0, 859, 878, 879, 841, 902, 792,
	167, 738, 741, 742, 743, 751, 808, 809, 821, 824,
	867, 866, 865, 868, 873, 896, 895, 897, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 820,
	131, 142, 222, 903, 290, 192, 361, 733, 177, 0,
	810, 813, 823, 848, 129, 143, 155, 161, 176, 185,
	191, 201, 204, 208, 209, 210, 215, 230, 235, 236,
	237, 238, 257, 258, 261, 262, 265, 266, 272, 273,
	274, 276, 277, 278, 286, 846, 295, 302, 304, 305,
	306, 308, 317, 318, 319, 320, 328, 348, 349, 368,
	369, 875, 0, 789, 133, 869, 899, 832, 843, 883,
	858, 338, 803, 886, 760, 786, 901, 791, 795, 838,
	744, 816, 264, 782, 745, 0, 764, 734, 774, 735,
	761, 181, 759, 860, 819, 885, 220, 833, 0, 180,
	169, 228, 226, 0, 0, 0, 271, 337, 884, 811,
	0, 893, 223, 0, 828, 894, 325, 248, 0, 0,
	807, 870, 814, 856, 802, 840, 753, 827, 888, 783,
	835, 889, 0, 0, 0, 0, 558, 0, 0, 0,
	0, 0, 0, 0, 0, 748, 0, 831, 882, 777,
	834, 805, 837, 904, 732, 830, 0, 739, 746, 900,
	877, 767, 768, 769, 0, 0, 0, 0, 0, 0,
	0, 806, 815, 850, 799, 358, 275, 292, 313, 793,
	283, 780, 0, 0, 0, 0, 0, 0, 0, 0,
	765, 0, 825, 0, 0, 0, 747, 740, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	804, 0, 0, 0, 752, 731, 766, 852, 0, 729,
	249, 146, 857, 876, 801, 211, 898, 880, 798, 797,
	285, 0, 332, 199, 221, 151, 128, 144, 162, 198,
	260, 849, 307, 779, 730, 861, 762, 775, 170, 771,
	299, 268, 357, 784, 822, 298, 224, 347, 845, 881,
	356, 788, 864, 366, 371, 770, 812, 750, 322, 183,
	178, 182, 0, 135, 781, 282, 175, 216, 800, 839,
	763, 166, 847, 826, 863, 321, 344, 132, 246, 345,
	370, 153, 339, 247, 253, 163, 165, 164, 145, 316,
	343, 158, 168, 326, 303, 333, 174, 0, 0, 0,
	0, 0, 794, 785, 0, 0, 362, 796, 310, 309,
	790, 206, 855, 829, 736, 291, 842, 212, 134, 335,
	374, 152, 218, 340, 728, 193, 259, 172, 269, 270,
	190, 130, 287, 240, 241, 239, 242, 197, 776, 844,
	854, 289, 312, 342, 154, 329, 772, 773, 778, 851,
	301, 862, 874, 887, 231, 186, 189, 200, 207, 836,
	296, 330, 363, 0, 147, 136, 336, 355, 159, 311,
	314, 372, 297, 139, 353, 331, 244, 213, 214, 137,
	0, 138, 294, 179, 196, 173, 263, 0, 195, 284,
	350, 351, 171, 375, 148, 365, 141, 149, 364, 256,
	0, 255, 367, 346, 354, 245, 233, 0, 140, 352,
	243, 232, 219, 188, 202, 280, 227, 281, 203, 251,
	250, 252, 229, 234, 0, 737, 0, 327, 360, 376,
	334, 156, 758, 315, 341, 787, 288, 157, 194, 187,
	279, 254, 150, 205, 324, 217, 225, 293, 373, 267,
	300, 160, 359, 323, 184, 756, 757, 754, 0, 755,
	817, 818, 890, 891, 892, 853, 749, 0, 871, 872,
	0, 0, 0, 0, 0, 859, 878, 879, 841, 902,
	792, 167, 738, 741, 742, 743, 751, 808, 809, 821,
	824, 867, 866, 865, 868, 873, 896, 895, 897, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	820, 131, 142, 222, 903, 290, 192, 361, 733, 177,
	0, 810, 813, 823, 848, 129, 143, 155, 161, 176,
	185, 191, 201, 204, 208, 209, 210, 215, 230, 235,
	236, 237, 238, 257, 258, 261, 262, 265, 266, 272,
	273, 274, 276, 277, 278, 286, 846, 295, 302, 304,
	305, 306, 308, 317, 318, 319, 320, 328, 348, 349,
	368, 369, 875, 0, 789, 133, 869, 899, 832, 843,
	883, 858, 338, 803, 886, 760, 786, 901, 791, 795,
	838, 744, 816, 264, 782, 745, 0, 764, 734, 774,
	735, 761, 181, 759, 860, 819, 885, 220, 833, 0,
	180, 169, 228, 226, 0, 0, 0, 271, 337, 1643,
	1647, 0, 893, 223, 0, 828, 894, 325, 248, 0,
	0, 807, 870, 814, 856, 802, 840, 753, 827, 888,
	783, 835, 889, 0, 0, 0, 0, 726, 0, 0,
	0, 0, 0, 0, 0, 0, 748, 0, 831, 882,
	777, 834, 805, 837, 904, 732, 830, 0, 739, 746,
	900, 877, 767, 768, 769, 0, 0, 0, 0, 0,
	0, 0, 806, 815, 850, 799, 358, 275, 292, 313,
	793, 283, 780, 0, 0, 0, 0, 0, 0, 0,
	0, 765, 0, 825, 0, 0, 0, 747, 740, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 804, 0, 0, 0, 752, 731, 766, 852, 0,
	729, 249, 146, 857, 876, 1646, 211, 898, 880, 798,
	797, 1640, 0, 1641, 1642, 221, 725, 128, 144, 1638,
	1645, 260, 849, 307, 779, 730, 861, 762, 775, 170,
	771, 299, 268, 357, 784, 822, 298, 224, 347, 845,
	881, 356, 788, 864, 366, 371, 770, 812, 750, 322,
	183, 178, 182, 0, 135, 781, 282, 175, 216, 800,
	839, 763, 166, 847, 826, 863, 321, 344, 132, 246,
	345, 370, 153, 339, 247, 253, 163, 165, 164, 145,
	316, 343, 158, 168, 326, 303, 333, 174, 0, 0,
	0, 0, 0, 794, 785, 0, 0, 362, 796, 310,
	309, 790, 206, 855, 829, 736, 291, 842, 212, 134,
	335, 374, 152, 218, 340, 728, 193, 259, 172, 269,
	270, 190, 130, 287, 240, 241, 239, 242, 197, 776,
	844, 854, 289, 312, 342, 154, 329, 772, 773, 778,
	851, 301, 862, 874, 887, 231, 186, 189, 200, 207,
	836, 296, 330, 363, 0, 147, 136, 336, 355, 159,
	311, 314, 372, 297, 139, 353, 331, 244, 213, 214,
	137, 0, 138, 294, 179, 196, 173, 263, 0, 195,
	284, 350, 351, 171, 375, 148, 365, 141, 149, 364,
	256, 0, 255, 367, 346, 354, 245, 233, 0, 140,
	352, 243, 232, 219, 188, 202, 280, 227, 281, 203,
	251, 250, 252, 229, 234, 0, 737, 0, 327, 360,
	376, 334, 156, 758, 315, 341, 787, 288, 157, 194,
	187, 279, 254, 150, 205, 324, 217, 225, 293, 373,
	267, 300, 160, 359, 323, 184, 756, 757, 754, 0,
	755, 817, 818, 890, 891, 892, 853, 749, 0, 871,
	872, 0, 0, 0, 0, 0, 859, 878, 879, 841,
	902, 792, 167, 738, 741, 742, 743, 751, 808, 809,
	821, 824, 867, 866, 865, 868, 873, 896, 895, 897,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 820, 131, 142, 222, 903, 290, 192, 361, 733,
	177, 0, 810, 813, 823, 848, 129, 143, 155, 161,
	176, 185, 191, 201, 204, 208, 209, 210, 215, 230,
	235, 236, 237, 238, 257, 258, 261, 262, 265, 266,
	272, 273, 274, 276, 277, 278, 286, 846, 295, 302,
	304, 305, 306, 308, 317, 318, 319, 320, 328, 348,
	349, 368, 369, 875, 0, 789, 133, 869, 899, 832,
	843, 883, 858, 338, 803, 886, 760, 786, 901, 791,
	795, 838, 744, 816, 264, 782, 745, 0, 764, 734,
	774, 735, 761, 181, 759, 860, 819, 885, 220, 833,
	0, 180, 169, 228, 226, 0, 0, 0, 271, 337,
	884, 811, 0, 893, 223, 0, 828, 894, 325, 248,
	0, 0, 807, 870, 814, 856, 802, 840, 753, 827,
	888, 783, 835, 889, 0, 0, 0, 0, 126, 0,
	0, 0, 0, 0, 0, 0, 0, 748, 0, 831,
	882, 777, 834, 805, 837, 904, 732, 830, 0, 739,
	746, 900, 877, 767, 768, 769, 0, 0, 0, 0,
	0, 0, 0, 806, 815, 850, 799, 358, 275, 292,
	313, 793, 283, 780, 0, 0, 0, 0, 0, 0,
	0, 0, 765, 0, 825, 0, 0, 0, 747, 740,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 804, 0, 0, 0, 752, 731, 766, 852,
	0, 729, 249, 146, 857, 876, 801, 211, 898, 880,
	798, 797, 285, 0, 332, 199, 221, 151, 128, 144,
	162, 198, 260, 849, 307, 779, 730, 861, 762, 775,
	170, 771, 299, 268, 357, 784, 822, 298, 224, 347,
	845, 881, 356, 788, 864, 366, 371, 770, 812, 750,
	322, 183, 178, 182, 0, 135, 781, 282, 175, 216,
	800, 839, 763, 166, 847, 826, 863, 321, 344, 132,
	246, 345, 370, 153, 339, 247, 253, 163, 165, 164,
	145, 316, 343, 158, 168, 326, 303, 333, 174, 0,
	0, 0, 0, 0, 794, 785, 0, 0, 362, 796,
	310, 309, 790, 206, 855, 829, 736, 291, 842, 212,
	134, 335, 374, 152, 218, 340, 728, 193, 259, 172,
	269, 270, 190, 130, 287, 240, 241, 239, 242, 197,
	776, 844, 854, 289, 312, 342, 154, 329, 772, 773,
	778, 851, 301, 862, 874, 887, 231, 186, 189, 200,
	207, 836, 296, 330, 363, 0, 147, 136, 336, 355,
	159, 311, 314, 372, 297, 139, 353, 331, 244, 213,
	214, 137, 0, 138, 294, 179, 196, 173, 263, 0,
	195, 284, 350, 351, 171, 375, 148, 365, 141, 149,
	364, 256, 0, 255, 367, 346, 354, 245, 233, 0,
	140, 352, 243, 232, 219, 188, 202, 280, 227, 281,
	203, 251, 250, 252, 229, 234, 0, 737, 0, 327,
	360, 376, 334, 156, 758, 315, 341, 787, 288, 157,
	194, 187, 279, 254, 150, 205, 324, 217, 225, 293,
	373, 267, 300, 160, 359, 323, 184, 756, 757, 754,
	0, 755, 817, 818, 890, 891, 892, 853, 749, 0,
	871, 872, 0, 0, 0, 0, 0, 859, 878, 879,
	841, 902, 792, 167, 738, 741, 742, 743, 751, 808,
	809, 821, 824, 867, 866, 865, 868, 873, 896, 895,
	897, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 820, 131, 142, 222, 903, 290, 192, 361,
	733, 177, 0, 810, 813, 823, 848, 129, 143, 155,
	161, 176, 185, 191, 201, 204, 208, 209, 210, 215,
	230, 235, 236, 237, 238, 257, 258, 261, 262, 265,
	266, 272, 273, 274, 276, 277, 278, 286, 846, 295,
	302, 304, 305, 306, 308, 317, 318, 319, 320, 328,
	348, 349, 368, 369, 875, 0, 789, 133, 869, 899,
	832, 843, 883, 858, 338, 803, 886, 760, 786, 901,
	791, 795, 838, 744, 816, 264, 782, 745, 0, 764,
	734, 774, 735, 761, 181, 759, 860, 819, 885, 220,
	833, 0, 180, 169, 228, 226, 0, 0, 0, 271,
	337, 884, 811, 0, 893, 223, 0, 828, 894, 325,
	248, 0, 0, 807, 870, 814, 856, 802, 840, 753,
	827, 888, 783, 835, 889, 0, 0, 0, 0, 726,
	0, 0, 0, 0, 0, 0, 0, 0, 748, 0,
	831, 882, 777, 834, 805, 837, 904, 732, 830, 0,
	739, 746, 900, 877, 767, 768, 769, 0, 0, 0,
	0, 0, 0, 0, 806, 815, 850, 799, 358, 275,
	292, 313, 793, 283, 780, 0, 0, 0, 0, 0,
	0, 0, 0, 765, 0, 825, 0, 0, 0, 747,
	740, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 804, 0, 0, 0, 752, 731, 766,
	852, 0, 729, 249, 146, 857, 876, 801, 211, 898,
	880, 798, 797, 285, 0, 332, 199, 221, 725, 128,
	144, 721, 198, 260, 849, 307, 779, 730, 861, 762,
	775, 170, 771, 299, 268, 357, 784, 822, 298, 224,
	347, 845, 881, 356, 788, 864, 366, 371, 770, 812,
	750, 322, 183, 178, 182, 0, 135, 781, 282, 175,
	216, 800, 839, 763, 166, 847, 826, 863, 321, 344,
	132, 246, 345, 370, 153, 339, 247, 253, 163, 165,
	164, 145, 316, 343, 158, 168, 326, 303, 333, 174,
	0, 0, 0, 0, 0, 794, 785, 0, 0, 362,
	796, 310, 309, 790, 206, 855, 829, 736, 291, 842,
	212, 134, 335, 374, 152, 218, 340, 728, 193, 259,
	172, 269, 270, 190, 130, 287, 240, 241, 239, 242,
	197, 776, 844, 854, 289, 312, 342, 154, 329, 772,
	773, 778, 851, 301, 862, 874, 887, 231, 186, 189,
	200, 207, 836, 296, 330, 363, 0, 147, 136, 336,
	355, 159, 311, 314, 372, 297, 139, 353, 331, 244,
	213, 214, 137, 0, 138, 294, 179, 196, 173, 263,
	0, 195, 284, 350, 351, 171, 375, 148, 365, 141,
	149, 364, 256, 0, 255, 367, 346, 354, 245, 233,
	0, 140, 352, 243, 232, 219, 188, 202, 280, 227,
	281, 203, 251, 250, 252, 229, 234, 0, 737, 0,
	327, 360, 376, 334, 156, 758, 315, 341, 787, 288,
	157, 194, 187, 279, 254, 150, 205, 324, 217, 225,
	293, 373, 267, 300, 160, 359, 323, 184, 756, 757,
	754, 0, 755, 817, 818, 890, 891, 892, 853, 749,
	0, 871, 872, 0, 0, 0, 0, 0, 859, 878,
	879, 841, 902, 792, 167, 738, 741, 742, 743, 751,
	808, 809, 821, 824, 867, 866, 865, 868, 873, 896,
	895, 897, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 820, 131, 142, 222, 903, 290, 192,
	361, 733, 177, 0, 810, 813, 823, 848, 129, 143,
	155, 161, 176, 185, 191, 201, 204, 208, 209, 210,
	215, 230, 235, 236, 237, 238, 257, 258, 261, 262,
	265, 266, 272, 273, 274, 276, 277, 278, 286, 846,
	295, 302, 304, 305, 306, 308, 317, 318, 319, 320,
	328, 348, 349, 368, 369, 875, 338, 789, 133, 869,
	899, 832, 843, 0, 0, 0, 0, 264, 0, 0,
	0, 0, 0, 560, 0, 0, 181, 557, 0, 0,
	0, 220, 0, 0, 180, 169, 228, 226, 0, 0,
	0, 271, 337, 0, 0, 0, 678, 223, 0, 0,
	534, 325, 248, 0, 0, 0, 0, 667, 668, 0,
	0, 0, 0, 0, 0, 1620, 0, 77, 0, 0,
	0, 558, 581, 580, 583, 584, 585, 586, 0, 0,
	539, 582, 587, 620, 621, 1621, 0, 0, 0, 0,
	555, 572, 0, 677, 0, 0, 0, 0, 490, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	358, 275, 292, 313, 0, 283, 498, 0, 0, 0,
	0, 569, 570, 0, 0, 0, 0, 690, 0, 571,
	0, 0, 567, 625, 626, 627, 628, 629, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 573, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 146, 669, 0, 0,
	211, 538, 0, 0, 688, 285, 0, 332, 199, 221,
	151, 128, 144, 162, 198, 260, 0, 307, 595, 479,
	0, 0, 0, 170, 0, 299, 268, 357, 597, 0,
	298, 224, 347, 0, 0, 356, 0, 525, 366, 371,
	491, 0, 486, 322, 183, 178, 182, 0, 135, 499,
	282, 175, 216, 0, 0, 0, 166, 0, 0, 0,
	321, 344, 132, 246, 345, 370, 153, 339, 247, 253,
	163, 165, 164, 145, 316, 343, 158, 168, 326, 303,
	333, 174, 0, 0, 0, 0, 0, 503, 501, 0,
	0, 362, 504, 310, 309, 0, 206, 0, 512, 480,
	291, 516, 212, 134, 335, 374, 152, 218, 340, 478,
	193, 259, 172, 269, 270, 190, 130, 287, 240, 241,
	239, 242, 197, 494, 518, 0, 289, 312, 342, 154,
	329, 492, 493, 495, 522, 301, 524, 530, 0, 231,
	186, 189, 200, 207, 0, 296, 330, 363, 0, 147,
	136, 336, 355, 159, 311, 314, 372, 297, 139, 353,
	331, 244, 213, 214, 137, 0, 138, 294, 179, 196,
	173, 263, 0, 195, 284, 350, 351, 171, 375, 148,
	365, 141, 149, 364, 256, 0, 255, 367, 346, 354,
	245, 233, 0, 140, 352, 243, 232, 219, 188, 202,
	280, 227, 281, 203, 251, 250, 252, 229, 234, 0,
	481, 0, 327, 360, 376, 334, 156, 0, 315, 341,
	502, 288, 157, 194, 187, 279, 254, 150, 205, 324,
	217, 225, 293, 373, 267, 300, 160, 359, 323, 184,
	679, 689, 685, 687, 686, 683, 684, 682, 681, 680,
	691, 670, 671, 672, 673, 674, 0, 0, 0, 676,
	0, 614, 615, 0, 0, 0, 167, 588, 589, 590,
	591, 592, 598, 599, 603, 604, 612, 611, 610, 613,
	616, 618, 617, 619, 593, 594, 596, 600, 601, 602,
	605, 606, 609, 607, 608, 675, 131, 142, 222, 0,
	290, 192, 361, 0, 177, 0, 0, 0, 0, 0,
	129, 143, 155, 161, 176, 185, 191, 201, 204, 208,
	209, 210, 215, 230, 235, 236, 237, 238, 257, 258,
	261, 262, 265, 266, 272, 273, 274, 276, 277, 278,
	286, 520, 295, 302, 304, 305, 306, 308, 317, 318,
	319, 320, 328, 348, 349, 368, 369, 36, 338, 0,
	133, 0, 0, 515, 517, 0, 0, 0, 0, 264,
	0, 0, 0, 0, 0, 560, 0, 0, 181, 557,
	0, 0, 0, 220, 0, 0, 180, 169, 228, 226,
	0, 0, 0, 271, 337, 0, 0, 0, 678, 223,
	0, 0, 534, 325, 248, 0, 0, 0, 0, 667,
	668, 0, 0, 0, 0, 0, 0, 0, 0, 77,
	0, 0, 0, 558, 581, 580, 583, 584, 585, 586,
	0, 0, 539, 582, 587, 620, 621, 0, 0, 0,
	0, 0, 555, 572, 0, 677, 0, 0, 0, 0,
	490, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 358, 275, 292, 313, 0, 283, 498, 0,
	0, 0, 0, 569, 570, 0, 0, 0, 0, 690,
	0, 571, 0, 0, 567, 625, 626, 627, 628, 629,
	630, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 573, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 146, 669,
	0, 0, 211, 538, 0, 0, 688, 285, 0, 332,
	199, 221, 151, 128, 144, 162, 198, 260, 0, 307,
	595, 479, 0, 0, 0, 170, 0, 299, 268, 357,
	597, 0, 298, 224, 347, 0, 0, 356, 0, 525,
	366, 371, 491, 0, 486, 322, 183, 178, 182, 0,
	135, 499, 282, 175, 216, 0, 0, 0, 166, 0,
	0, 0, 321, 344, 132, 246, 345, 370, 153, 339,
	247, 253, 163, 165, 164, 145, 316, 343, 158, 168,
	326, 303, 333, 174, 0, 0, 0, 0, 0, 503,
	501, 0, 0, 362, 504, 310, 309, 0, 206, 0,
	512, 480, 291, 516, 212, 134, 335, 374, 152, 218,
	340, 478, 193, 259, 172, 269, 270, 190, 130, 287,
	240, 241, 239, 242, 197, 494, 518, 0, 289, 312,
	342, 154, 329, 492, 493, 495, 522, 301, 524, 530,
	0, 231, 186, 189, 200, 207, 0, 296, 330, 363,
	0, 147, 136, 336, 355, 159, 311, 314, 372, 297,
	139, 353, 331, 244, 213, 214, 137, 0, 138, 294,
	179, 196, 173, 263, 0, 195, 284, 350, 351, 171,
	375, 148, 365, 141, 149, 364, 256, 0, 255, 367,
	346, 354, 245, 233, 0, 140, 352, 243, 232, 219,
	188, 202, 280, 227, 281, 203, 251, 250, 252, 229,
	234, 0, 481, 0, 327, 360, 376, 334, 156, 0,
	315, 341, 502, 288, 157, 194, 187, 279, 254, 150,
	205, 324, 217, 225, 293, 373, 267, 300, 160, 359,
	323, 184, 679, 689, 685, 687, 686, 683, 684, 682,
	681, 680, 691, 670, 671, 672, 673, 674, 0, 0,
	0, 676, 0, 614, 615, 0, 0, 0, 167, 588,
	589, 590, 591, 592, 598, 599, 603, 604, 612, 611,
	610, 613, 616, 618, 617, 619, 593, 594, 596, 600,
	601, 602, 605, 606, 609, 607, 608, 675, 131, 142,
	222, 75, 290, 192, 361, 0, 177, 0, 0, 0,
	0, 0, 129, 143, 155, 161, 176, 185, 191, 201,
	204, 208, 209, 210, 215, 230, 235, 236, 237, 238,
	257, 258, 261, 262, 265, 266, 272, 273, 274, 276,
	277, 278, 286, 520, 295, 302, 304, 305, 306, 308,
	317, 318, 319, 320, 328, 348, 349, 368, 369, 338,
	0, 0, 133, 0, 0, 515, 517, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 560, 0, 0, 181,
	557, 0, 0, 0, 220, 0, 0, 180, 169, 228,
	226, 0, 0, 0, 271, 337, 0, 0, 0, 678,
	223, 0, 0, 534, 325, 248, 0, 0, 0, 0,
	667, 668, 0, 0, 0, 0, 0, 0, 0, 0,
	77, 0, 0, 0, 558, 581, 580, 583, 584, 585,
	586, 0, 0, 539, 582, 587, 620, 621, 0, 0,
	0, 0, 0, 555, 572, 0, 677, 0, 0, 0,
	0, 490, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 358, 275, 292, 313, 0, 283, 498,
	0, 0, 0, 0, 569, 570, 551, 0, 0, 0,
	690, 0, 571, 0, 0, 567, 625, 626, 627, 628,
	629, 630, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 573, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 146,
	669, 0, 0, 211, 538, 0, 0, 688, 285, 0,
	332, 199, 221, 151, 128, 144, 162, 198, 260, 0,
	307, 595, 479, 0, 0, 0, 170, 0, 299, 268,
	357, 597, 0, 298, 224, 347, 0, 0, 356, 0,
	525, 366, 371, 491, 0, 486, 322, 183, 178, 182,
	0, 135, 499, 282, 175, 216, 0, 0, 0, 166,
	0, 0, 0, 321, 344, 132, 246, 345, 370, 153,
	339, 247, 253, 163, 165, 164, 145, 316, 343, 158,
	168, 326, 303, 333, 174, 0, 0, 0, 0, 0,
	503, 501, 0, 0, 362, 504, 310, 309, 0, 206,
	0, 512, 480, 291, 516, 212, 134, 335, 374, 152,
	218, 340, 478, 193, 259, 172, 269, 270, 190, 130,
	287, 240, 241, 239, 242, 197, 494, 518, 0, 289,
	312, 342, 154, 329, 492, 493, 495, 522, 301, 524,
	530, 0, 231, 186, 189, 200, 207, 0, 296, 330,
	363, 0, 147, 136, 336, 355, 159, 311, 314, 372,
	297, 139, 353, 331, 244, 213, 214, 137, 0, 138,
	294, 179, 196, 173, 263, 0, 195, 284, 350, 351,
	171, 375, 148, 365, 141, 149, 364, 256, 0, 255,
	367, 346, 354, 245, 233, 0, 140, 352, 243, 232,
	219, 188, 202, 280, 227, 281, 203, 251, 250, 252,
	229, 234, 0, 481, 0, 327, 360, 376, 334, 156,
	0, 315, 341, 502, 288, 157, 194, 187, 279, 254,
	150, 205, 324, 217, 225, 293, 373, 267, 300, 160,
	359, 323, 184, 679, 689, 685, 687, 686, 683, 684,
	682, 681, 680, 691, 670, 671, 672, 673, 674, 0,
	0, 0, 676, 0, 614, 615, 0, 0, 0, 167,
	588, 589, 590, 591, 592, 598, 599, 603, 604, 612,
	611, 610, 613, 616, 618, 617, 619, 593, 594, 596,
	600, 601, 602, 605, 606, 609, 607, 608, 675, 131,
	142, 222, 0, 290, 192, 361, 0, 177, 0, 0,
	0, 0, 0, 129, 143, 155, 161, 176, 185, 191,
	201, 204, 208, 209, 210, 215, 230, 235, 236, 237,
	238, 257, 258, 261, 262, 265, 266, 272, 273, 274,
	276, 277, 278, 286, 520, 295, 302, 304, 305, 306,
	308, 317, 318, 319, 320, 328, 348, 349, 368, 369,
	338, 0, 0, 133, 0, 0, 515, 517, 0, 0,
	0, 264, 0, 0, 0, 0, 0, 560, 0, 0,
	181, 557, 0, 0, 0, 220, 0, 0, 180, 169,
	228, 226, 0, 0, 0, 271, 337, 0, 0, 0,
	678, 223, 0, 0, 534, 325, 248, 0, 0, 0,
	0, 667, 668, 0, 0, 0, 0, 0, 0, 0,
	0, 77, 0, 1087, 0, 558, 581, 580, 583, 584,
	585, 586, 0, 0, 539, 582, 587, 620, 621, 0,
	0, 0, 0, 0, 555, 572, 0, 677, 0, 0,
	0, 0, 490, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 358, 275, 292, 313, 0, 283,
	498, 0, 0, 0, 0, 569, 570, 0, 0, 0,
	0, 690, 0, 571, 0, 0, 567, 625, 626, 627,
	628, 629, 630, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 573,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	146, 669, 0, 0, 211, 538, 0, 0, 688, 285,
	0, 332, 199, 221, 151, 128, 144, 162, 198, 260,
	0, 307, 595, 479, 0, 0, 0, 170, 0, 299,
	268, 357, 597, 0, 298, 224, 347, 0, 0, 356,
	0, 525, 366, 371, 491, 0, 486, 322, 183, 178,
	182, 0, 135, 499, 282, 175, 216, 0, 0, 0,
	166, 0, 0, 0, 321, 344, 132, 246, 345, 370,
	153, 339, 247, 253, 163, 165, 164, 145, 316, 343,
	158, 168, 326, 303, 333, 174, 0, 0, 0, 0,
	0, 503, 501, 0, 0, 362, 504, 310, 309, 0,
	206, 0, 512, 480, 291, 516, 212, 134, 335, 374,
	152, 218, 340, 478, 193, 259, 172, 269, 270, 190,
	130, 287, 240, 241, 239, 242, 197, 494, 518, 0,
	289, 312, 342, 154, 329, 492, 493, 495, 522, 301,
	524, 530, 0, 231, 186, 189, 200, 207, 0, 296,
	330, 363, 0, 147, 136, 336, 355, 159, 311, 314,
	372, 297, 139, 353, 331, 244, 213, 214, 137, 0,
	138, 294, 179, 196, 173, 263, 0, 195, 284, 350,
	351, 171, 375, 148, 365, 141, 149, 364, 256, 0,
	255, 367, 346, 354, 245, 233, 0, 140, 352, 243,
	232, 219, 188, 202, 280, 227, 281, 203, 251, 250,
	252, 229, 234, 0, 481, 0, 327, 360, 376, 334,
	156, 0, 315, 341, 502, 288, 157, 194, 187, 279,
	254, 150, 205, 324, 217, 225, 293, 373, 267, 300,
	160, 359, 323, 184, 679, 689, 685, 687, 686, 683,
	684, 682, 681, 680, 691, 670, 671, 672, 673, 674,
	0, 0, 0, 676, 0, 614, 615, 0, 0, 0,
	167, 588, 589, 590, 591, 592, 598, 599, 603, 604,
	612, 611, 610, 613, 616, 618, 617, 619, 593, 594,
	596, 600, 601, 602, 605, 606, 609, 607, 608, 675,
	131, 142, 222, 0, 290, 192, 361, 0, 177, 0,
	0, 0, 0, 0, 129, 143, 155, 161, 176, 185,
	191, 201, 204, 208, 209, 210, 215, 230, 235, 236,
	237, 238, 257, 258, 261, 262, 265, 266, 272, 273,
	274, 276, 277, 278, 286, 520, 295, 302, 304, 305,
	306, 308, 317, 318, 319, 320, 328, 348, 349, 368,
	369, 338, 0, 0, 133, 0, 0, 515, 517, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 560, 0,
	0, 181, 557, 0, 0, 0, 220, 0, 0, 180,
	169, 228, 226, 0, 0, 0, 271, 337, 0, 0,
	0, 678, 223, 0, 0, 534, 325, 248, 0, 0,
	0, 0, 667, 668, 0, 0, 0, 0, 0, 0,
	0, 0, 77, 0, 0, 0, 558, 581, 580, 583,
	584, 585, 586, 0, 0, 539, 582, 587, 620, 621,
	0, 0, 0, 0, 0, 555, 572, 0, 677, 0,
	0, 0, 0, 490, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 358, 275, 292, 313, 0,
	283, 498, 0, 0, 0, 0, 569, 570, 1523, 0,
	0, 0, 690, 0, 571, 0, 0, 567, 625, 626,
	627, 628, 629, 630, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	573, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 146, 669, 0, 0, 211, 538, 0, 0, 688,
	285, 0, 332, 199, 221, 151, 128, 144, 162, 198,
	260, 0, 307, 595, 479, 0, 0, 0, 170, 0,
	299, 268, 357, 597, 0, 298, 224, 347, 0, 0,
	356, 0, 525, 366, 371, 491, 0, 486, 322, 183,
	178, 182, 0, 135, 499, 282, 175, 216, 0, 0,
	0, 166, 0, 0, 0, 321, 344, 132, 246, 345,
	370, 153, 339, 247, 253, 163, 165, 164, 145, 316,
	343, 158, 168, 326, 303, 333, 174, 0, 0, 0,
	0, 0, 503, 501, 0, 0, 362, 504, 310, 309,
	0, 206, 0, 512, 480, 291, 516, 212, 134, 335,
	374, 152, 218, 340, 478, 193, 259, 172, 269, 270,
	190, 130, 287, 240, 241, 239, 242, 197, 494, 518,
	0, 289, 312, 342, 154, 329, 492, 493, 495, 522,
	301, 524, 530, 0, 231, 186, 189, 200, 207, 0,
	296, 330, 363, 0, 147, 136, 336, 355, 159, 311,
	314, 372, 297, 139, 353, 331, 244, 213, 214, 137,
	0, 138, 294, 179, 196, 173, 263, 0, 195, 284,
	350, 351, 171, 375, 148, 365, 141, 149, 364, 256,
	0, 255, 367, 346, 354, 245, 233, 0, 140, 352,
	243, 232, 219, 188, 202, 280, 227, 281, 203, 251,
	250, 252, 229, 234, 0, 481, 0, 327, 360, 376,
	334, 156, 0, 315, 341, 502, 288, 157, 194, 187,
	279, 254, 150, 205, 324, 217, 225, 293, 373, 267,
	300, 160, 359, 323, 184, 679, 689, 685, 687, 686,
	683, 684, 682, 681, 680, 691, 670, 671, 672, 673,
	674, 0, 0, 0, 676, 0, 614, 615, 0, 0,
	0, 167, 588, 589, 590, 591, 592, 598, 599, 603,
	604, 612, 611, 610, 613, 616, 618, 617, 619, 593,
	594, 596, 600, 601, 602, 605, 606, 609, 607, 608,
	675, 131, 142, 222, 0, 290, 192, 361, 0, 177,
	0, 0, 0, 0, 0, 129, 143, 155, 161, 176,
	185, 191, 201, 204, 208, 209, 210, 215, 230, 235,
	236, 237, 238, 257, 258, 261, 262, 265, 266, 272,
	273, 274, 276, 277, 278, 286, 520, 295, 302, 304,
	305, 306, 308, 317, 318, 319, 320, 328, 348, 349,
	368, 369, 338, 0, 0, 133, 0, 0, 515, 517,
	0, 0, 0, 264, 0, 0, 0, 0, 0, 560,
	0, 0, 181, 557, 0, 0, 0, 220, 0, 0,
	180, 169, 228, 226, 0, 0, 0, 271, 337, 0,
	0, 0, 678, 223, 0, 0, 534, 325, 248, 0,
	0, 0, 0, 667, 668, 0, 0, 0, 0, 0,
	0, 0, 0, 77, 0, 0, 0, 558, 581, 1570,
	583, 584, 585, 586, 0, 0, 539, 582, 587, 620,
	621, 0, 0, 0, 0, 0, 555, 572, 0, 677,
	0, 0, 0, 0, 490, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 358, 275, 292, 313,
	0, 283, 498, 0, 0, 0, 0, 569, 570, 1523,
	0, 0, 0, 690, 0, 571, 0, 0, 567, 625,
	626, 627, 628, 629, 630, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 573, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 146, 669, 0, 0, 211, 538, 0, 0,
	688, 285, 0, 332, 199, 221, 151, 128, 144, 162,
	198, 260, 0, 307, 595, 479, 0, 0, 0, 170,
	0, 299, 268, 357, 597, 0, 298, 224, 347, 0,
	0, 356, 0, 525, 366, 371, 491, 0, 486, 322,
	183, 178, 182, 0, 135, 499, 282, 175, 216, 0,
	0, 0, 166, 0, 0, 0, 321, 344, 132, 246,
	345, 370, 153, 339, 247, 253, 163, 165, 164, 145,
	316, 343, 158, 168, 326, 303, 333, 174, 0, 0,
	0, 0, 0, 503, 501, 0, 0, 362, 504, 310,
	309, 0, 206, 0, 512, 480, 291, 516, 212, 134,
	335, 374, 152, 218, 340, 478, 193, 259, 172, 269,
	270, 190, 130, 287, 240, 241, 239, 242, 197, 494,
	518, 0, 289, 312, 342, 154, 329, 492, 493, 495,
	522, 301, 524, 530, 0, 231, 186, 189, 200, 207,
	0, 296, 330, 363, 0, 147, 136, 336, 355, 159,
	311, 314, 372, 297, 139, 353, 331, 244, 213, 214,
	137, 0, 138, 294, 179, 196, 173, 263, 0, 195,
	284, 350, 351, 171, 375, 148, 365, 141, 149, 364,
	256, 0, 255, 367, 346, 354, 245, 233, 0, 140,
	352, 243, 232, 219, 188, 202, 280, 227, 281, 203,
	251, 250, 252, 229, 234, 0, 481, 0, 327, 360,
	376, 334, 156, 0, 315, 341, 502, 288, 157, 194,
	187, 279, 254, 150, 205, 324, 217, 225, 293, 373,
	267, 300, 160, 359, 323, 184, 679, 689, 685, 687,
	686, 683, 684, 682, 681, 680, 691, 670, 671, 672,
	673, 674, 0, 0, 0, 676, 0, 614, 615, 0,
	0, 0, 167, 588, 589, 590, 591, 592, 598, 599,
	603, 604, 612, 611, 610, 613, 616, 618, 617, 619,
	593, 594, 596, 600, 601, 602, 605, 606, 609, 607,
	608, 675, 131, 142, 222, 0, 290, 192, 361, 0,
	177, 0, 0, 0, 0, 0, 129, 143, 155, 161,
	176, 185, 191, 201, 204, 208, 209, 210, 215, 230,
	235, 236, 237, 238, 257, 258, 261, 262, 265, 266,
	272, 273, 274, 276, 277, 278, 286, 520, 295, 302,
	304, 305, 306, 308, 317, 318, 319, 320, 328, 348,
	349, 368, 369, 338, 0, 0, 133, 0, 0, 515,
	517, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	560, 0, 0, 181, 557, 0, 0, 0, 220, 0,
	0, 180, 169, 228, 226, 0, 0, 0, 271, 337,
	0, 0, 0, 678, 223, 0, 0, 534, 325, 248,
	0, 0, 0, 0, 667, 668, 0, 0, 0, 0,
	0, 0, 0, 0, 77, 0, 0, 0, 558, 581,
	1567, 583, 584, 585, 586, 0, 0, 539, 582, 587,
	620, 621, 0, 0, 0, 0, 0, 555, 572, 0,
	677, 0, 0, 0, 0, 490, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 358, 275, 292,
	313, 0, 283, 498, 0, 0, 0, 0, 569, 570,
	1523, 0, 0, 0, 690, 0, 571, 0, 0, 567,
	625, 626, 627, 628, 629, 630, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 573, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 146, 669, 0, 0, 211, 538, 0,
	0, 688, 285, 0, 332, 199, 221, 151, 128, 144,
	162, 198, 260, 0, 307, 595, 479, 0, 0, 0,
	170, 0, 299, 268, 357, 597, 0, 298, 224, 347,
	0, 0, 356, 0, 525, 366, 371, 491, 0, 486,
	322, 183, 178, 182, 0, 135, 499, 282, 175, 216,
	0, 0, 0, 166, 0, 0, 0, 321, 344, 132,
	246, 345, 370, 153, 339, 247, 253, 163, 165, 164,
	145, 316, 343, 158, 168, 326, 303, 333, 174, 0,
	0, 0, 0, 0, 503, 501, 0, 0, 362, 504,
	310, 309, 0, 206, 0, 512, 480, 291, 516, 212,
	134, 335, 374, 152, 218, 340, 478, 193, 259, 172,
	269, 270, 190, 130, 287, 240, 241, 239, 242, 197,
	494, 518, 0, 289, 312, 342, 154, 329, 492, 493,
	495, 522, 301, 524, 530, 0, 231, 186, 189, 200,
	207, 0, 296, 330, 363, 0, 147, 136, 336, 355,
	159, 311, 314, 372, 297, 139, 353, 331, 244, 213,
	214, 137, 0, 138, 294, 179, 196, 173, 263, 0,
	195, 284, 350, 351, 171, 375, 148, 365, 141, 149,
	364, 256, 0, 255, 367, 346, 354, 245, 233, 0,
	140, 352, 243, 232, 219, 188, 202, 280, 227, 281,
	203, 251, 250, 252, 229, 234, 0, 481, 0, 327,
	360, 376, 334, 156, 0, 315, 341, 502, 288, 157,
	194, 187, 279, 254, 150, 205, 324, 217, 225, 293,
	373, 267, 300, 160, 359, 323, 184, 679, 689, 685,
	687, 686, 683, 684, 682, 681, 680, 691, 670, 671,
	672, 673, 674, 0, 0, 0, 676, 0, 614, 615,
	0, 0, 0, 167, 588, 589, 590, 591, 592, 598,
	599, 603, 604, 612, 611, 610, 613, 616, 618, 617,
	619, 593, 594, 596, 600, 601, 602, 605, 606, 609,
	607, 608, 675, 131, 142, 222, 0, 290, 192, 361,
	0, 177, 0, 0, 0, 0, 0, 129, 143, 155,
	161, 176, 185, 191, 201, 204, 208, 209, 210, 215,
	230, 235, 236, 237, 238, 257, 258, 261, 262, 265,
	266, 272, 273, 274, 276, 277, 278, 286, 520, 295,
	302, 304, 305, 306, 308, 317, 318, 319, 320, 328,
	348, 349, 368, 369, 338, 0, 0, 133, 0, 0,
	515, 517, 0, 0, 0, 264, 0, 0, 0, 0,
	0, 560, 0, 0, 181, 557, 0, 0, 0, 220,
	0, 0, 180, 169, 228, 226, 0, 0, 0, 271,
	337, 0, 0, 0, 678, 223, 0, 0, 534, 325,
	248, 0, 0, 0, 0, 667, 668, 0, 0, 0,
	0, 0, 0, 0, 0, 77, 0, 1401, 0, 558,
	581, 580, 583, 584, 585, 586, 0, 0, 539, 582,
	587, 620, 621, 0, 0, 0, 0, 0, 555, 572,
	0, 677, 0, 0, 0, 0, 490, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 358, 275,
	292, 313, 0, 283, 498, 0, 0, 0, 0, 569,
	570, 0, 0, 0, 0, 690, 0, 571, 0, 0,
	567, 625, 626, 627, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 573, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 146, 669, 0, 0, 211, 538,
	0, 0, 688, 285, 0, 332, 199, 221, 151, 128,
	144, 162, 198, 260, 0, 307, 595, 479, 0, 0,
	0, 170, 0, 299, 268, 357, 597, 0, 298, 224,
	347, 0, 0, 356, 0, 525, 366, 371, 491, 0,
	486, 322, 183, 178, 182, 0, 135, 499, 282, 175,
	216, 0, 0, 0, 166, 0, 0, 0, 321, 344,
	132, 246, 345, 370, 153, 339, 247, 253, 163, 165,
	164, 145, 316, 343, 158, 168, 326, 303, 333, 174,
	0, 0, 0, 0, 0, 503, 501, 0, 0, 362,
	504, 310, 309, 0, 206, 0, 512, 480, 291, 516,
	212, 134, 335, 374, 152, 218, 340, 478, 193, 259,
	172, 269, 270, 190, 130, 287, 240, 241, 239, 242,
	197, 494, 518, 0, 289, 312, 342, 154, 329, 492,
	493, 495, 522, 301, 524, 530, 0, 231, 186, 189,
	200, 207, 0, 296, 330, 363, 0, 147, 136, 336,
	355, 159, 311, 314, 372, 297, 139, 353, 331, 244,
	213, 214, 137, 0, 138, 294, 179, 196, 173, 263,
	0, 195, 284, 350, 351, 171, 375, 148, 365, 141,
	149, 364, 256, 0, 255, 367, 346, 354, 245, 233,
	0, 140, 352, 243, 232, 219, 188, 202, 280, 227,
	281, 203, 251, 250, 252, 229, 234, 0, 481, 0,
	327, 360, 376, 334, 156, 0, 315, 341, 502, 288,
	157, 194, 187, 279, 254, 150, 205, 324, 217, 225,
	293, 373, 267, 300, 160, 359, 323, 184, 679, 689,
	685, 687, 686, 683, 684, 682, 681, 680, 691, 670,
	671, 672, 673, 674, 0, 0, 0, 676, 0, 614,
	615, 0, 0, 0, 167, 588, 589, 590, 591, 592,
	598, 599, 603, 604, 612, 611, 610, 613, 616, 618,
	617, 619, 593, 594, 596, 600, 601, 602, 605, 606,
	609, 607, 608, 675, 131, 142, 222, 0, 290, 192,
	361, 0, 177, 0, 0, 0, 0, 0, 129, 143,
	155, 161, 176, 185, 191, 201, 204, 208, 209, 210,
	215, 230, 235, 236, 237, 238, 257, 258, 261, 262,
	265, 266, 272, 273, 274, 276, 277, 278, 286, 520,
	295, 302, 304, 305, 306, 308, 317, 318, 319, 320,
	328, 348, 349, 368, 369, 338, 0, 0, 133, 0,
	0, 515, 517, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 560, 0, 0, 181, 557, 0, 0, 0,
	220, 0, 0, 180, 169, 228, 226, 0, 0, 0,
	271, 337, 0, 0, 0, 678, 223, 0, 0, 534,
	325, 248, 0, 0, 0, 0, 667, 668, 0, 0,
	0, 0, 0, 0, 0, 0, 77, 0, 0, 0,
	558, 581, 580, 583, 584, 585, 586, 0, 0, 539,
	582, 587, 620, 621, 0, 0, 0, 0, 0, 555,
	572, 0, 677, 0, 0, 0, 0, 490, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 358,
	275, 292, 313, 0, 283, 498, 0, 0, 0, 0,
	569, 570, 0, 0, 0, 0, 690, 0, 571, 0,
	0, 567, 625, 626, 627, 628, 629, 630, 631, 632,
	633, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 573, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 146, 669, 0, 0, 211,
	538, 0, 0, 688, 285, 0, 332, 199, 221, 151,
	128, 144, 162, 198, 260, 0, 307, 595, 479, 0,
	0, 0, 170, 0, 299, 268, 357, 597, 0, 298,
	224, 347, 0, 0, 356, 0, 525, 366, 371, 491,
	0, 486, 322, 183, 178, 182, 0, 135, 499, 282,
	175, 216, 0, 0, 0, 166, 0, 0, 0, 321,
	344, 132, 246, 345, 370, 153, 339, 247, 253, 163,
	165, 164, 145, 316, 343, 158, 168, 326, 303, 333,
	174, 0, 0, 0, 0, 0, 503, 501, 0, 0,
	362, 504, 310, 309, 0, 206, 0, 512, 480, 291,
	516, 212, 134, 335, 374, 152, 218, 340, 478, 193,
	259, 172, 269, 270, 190, 130, 287, 240, 241, 239,
	242, 197, 494, 518, 0, 289, 312, 342, 154, 329,
	492, 493, 495, 522, 301, 524, 530, 0, 231, 186,
	189, 200, 207, 0, 296, 330, 363, 0, 147, 136,
	336, 355, 159, 311, 314, 372, 297, 139, 353, 331,
	244, 213, 214, 137, 0, 138, 294, 179, 196, 173,
	263, 0, 195, 284, 350, 351, 171, 375, 148, 365,
	141, 149, 364, 256, 0, 255, 367, 346, 354, 245,
	233, 0, 140, 352, 243, 232, 219, 188, 202, 280,
	227, 281, 203, 251, 250, 252, 229, 234, 0, 481,
	0, 327, 360, 376, 334, 156, 0, 315, 341, 502,
	288, 157, 194, 187, 279, 254, 150, 205, 324, 217,
	225, 293, 373, 267, 300, 160, 359, 323, 184, 679,
	689, 685, 687, 686, 683, 684, 682, 681, 680, 691,
	670, 671, 672, 673, 674, 0, 0, 0, 676, 0,
	614, 615, 0, 0, 0, 167, 588, 589, 590, 591,
	592, 598, 599, 603, 604, 612, 611, 610, 613, 616,
	618, 617, 619, 593, 594, 596, 600, 601, 602, 605,
	606, 609, 607, 608, 675, 131, 142, 222, 0, 290,
	192, 361, 0, 177, 0, 0, 0, 0, 0, 129,
	143, 155, 161, 176, 185, 191, 201, 204, 208, 209,
	210, 215, 230, 235, 236, 237, 238, 257, 258, 261,
	262, 265, 266, 272, 273, 274, 276, 277, 278, 286,
	520, 295, 302, 304, 305, 306, 308, 317, 318, 319,
	320, 328, 348, 349, 368, 369, 338, 0, 0, 133,
	0, 0, 515, 517, 0, 0, 0, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 0, 0, 0,
	0, 220, 0, 0, 180, 169, 228, 226, 0, 0,
	0, 271, 337, 0, 0, 0, 678, 223, 0, 0,
	534, 325, 248, 0, 0, 0, 0, 667, 668, 0,
	0, 0, 0, 0, 0, 0, 0, 77, 0, 0,
	0, 558, 581, 580, 583, 584, 585, 586, 0, 0,
	539, 582, 587, 620, 621, 0, 0, 0, 0, 0,
	0, 572, 0, 677, 0, 0, 0, 0, 490, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	358, 275, 292, 313, 0, 283, 498, 0, 0, 0,
	0, 569, 570, 0, 0, 0, 0, 690, 0, 571,
	0, 0, 567, 625, 626, 627, 628, 629, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 573, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 146, 669, 0, 0,
	211, 538, 0, 0, 688, 285, 0, 332, 199, 221,
	151, 128, 144, 162, 198, 260, 0, 307, 595, 479,
	0, 0, 0, 170, 0, 299, 268, 357, 597, 0,
	298, 224, 347, 0, 0, 356, 0, 525, 366, 371,
	491, 0, 486, 322, 183, 178, 182, 0, 135, 499,
	282, 175, 216, 0, 0, 0, 166, 0, 0, 0,
	321, 344, 132, 246, 345, 370, 153, 339, 247, 253,
	163, 165, 164, 145, 316, 343, 158, 168, 326, 303,
	333, 174, 0, 0, 0, 0, 0, 503, 501, 0,
	0, 362, 504, 310, 309, 0, 206, 0, 512, 480,
	291, 516, 212, 134, 335, 374, 152, 218, 340, 478,
	193, 259, 172, 269, 270, 190, 130, 287, 240, 241,
	239, 242, 197, 494, 518, 0, 289, 312, 342, 154,
	329, 492, 493, 495, 522, 301, 524, 530, 0, 231,
	186, 189, 200, 207, 0, 296, 330, 363, 0, 147,
	136, 336, 355, 159, 311, 314, 372, 297, 139, 353,
	331, 244, 213, 214, 137, 0, 138, 294, 179, 196,
	173, 263, 0, 195, 284, 350, 351, 171, 375, 148,
	365, 141, 149, 364, 256, 0, 255, 367, 346, 354,
	245, 233, 0, 140, 352, 243, 232, 219, 188, 202,
	280, 227, 281, 203, 251, 250, 252, 229, 234, 0,
	481, 0, 327, 360, 376, 334, 156, 0, 315, 341,
	502, 288, 157, 194, 187, 279, 254, 150, 205, 324,
	217, 225, 293, 373, 267, 300, 160, 359, 323, 184,
	679, 689, 685, 687, 686, 683, 684, 682, 681, 680,
	691, 670, 671, 672, 673, 674, 1573, 1574, 1575, 676,
	0, 614, 615, 0, 0, 0, 167, 588, 589, 590,
	591, 592, 598, 599, 603, 604, 612, 611, 610, 613,
	616, 618, 617, 619, 593, 594, 596, 600, 601, 602,
	605, 606, 609, 607, 608, 675, 131, 142, 222, 0,
	290, 192, 361, 0, 177, 0, 0, 0, 0, 0,
	129, 143, 155, 161, 176, 185, 191, 201, 204, 208,
	209, 210, 215, 230, 235, 236, 237, 238, 257, 258,
	261, 262, 265, 266, 272, 273, 274, 276, 277, 278,
	286, 520, 295, 302, 304, 305, 306, 308, 317, 318,
	319, 320, 328, 348, 349, 368, 369, 338, 0, 0,
	133, 0, 0, 515, 517, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 0, 0,
	0, 0, 220, 0, 0, 180, 169, 228, 226, 0,
	0, 0, 271, 337, 0, 0, 0, 678, 223, 0,
	0, 534, 325, 248, 0, 0, 0, 0, 667, 668,
	0, 0, 0, 0, 0, 0, 0, 0, 77, 0,
	0, 0, 558, 581, 580, 583, 584, 585, 586, 0,
	0, 539, 582, 587, 620, 621, 0, 0, 0, 0,
	0, 0, 572, 0, 677, 0, 0, 0, 0, 490,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 358, 275, 292, 313, 0, 283, 498, 0, 0,
	0, 0, 569, 570, 0, 0, 0, 0, 690, 0,
	571, 0, 0, 567, 625, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 573, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 146, 669, 0,
	0, 211, 538, 0, 0, 688, 285, 0, 332, 199,
	221, 151, 128, 144, 162, 198, 260, 0, 307, 595,
	479, 0, 0, 0, 170, 0, 299, 268, 357, 597,
	2970, 298, 224, 347, 0, 0, 356, 0, 525, 366,
	371, 491, 0, 486, 322, 183, 178, 182, 0, 135,
	499, 282, 175, 216, 0, 0, 0, 166, 0, 0,
	0, 321, 344, 132, 246, 345, 370, 153, 339, 247,
	253, 163, 165, 164, 145, 316, 343, 158, 168, 326,
	303, 333, 174, 0, 0, 0, 0, 0, 503, 501,
	0, 0, 362, 504, 310, 309, 0, 206, 0, 512,
	480, 291, 516, 212, 134, 335, 374, 152, 218, 340,
	478, 193, 259, 172, 269, 270, 190, 130, 287, 240,
	241, 239, 242, 197, 494, 518, 0, 289, 312, 342,
	154, 329, 492, 493, 495, 522, 301, 524, 530, 0,
	231, 186, 189, 200, 207, 0, 296, 330, 363, 0,
	147, 136, 336, 355, 159, 311, 314, 372, 297, 139,
	353, 331, 244, 213, 214, 137, 0, 138, 294, 179,
	196, 173, 263, 0, 195, 284, 350, 351, 171, 375,
	148, 365, 141, 149, 364, 256, 0, 255, 367, 346,
	354, 245, 233, 0, 140, 352, 243, 232, 219, 188,
	202, 280, 227, 281, 203, 251, 250, 252, 229, 234,
	0, 481, 0, 327, 360, 376, 334, 156, 0, 315,
	341, 502, 288, 157, 194, 187, 279, 254, 150, 205,
	324, 217, 225, 293, 373, 267, 300, 160, 359, 323,
	184, 679, 689, 685, 687, 686, 683, 684, 682, 681,
	680, 691, 670, 671, 672, 673, 674, 0, 0, 0,
	676, 0, 614, 615, 0, 0, 0, 167, 588, 589,
	590, 591, 592, 598, 599, 603, 604, 612, 611, 610,
	613, 616, 618, 617, 619, 593, 594, 596, 600, 601,
	602, 605, 606, 609, 607, 608, 675, 131, 142, 222,
	0, 290, 192, 361, 0, 177, 0, 0, 0, 0,
	0, 129, 143, 155, 161, 176, 185, 191, 201, 204,
	208, 209, 210, 215, 230, 235, 236, 237, 238, 257,
	258, 261, 262, 265, 266, 272, 273, 274, 276, 277,
	278, 286, 520, 295, 302, 304, 305, 306, 308, 317,
	318, 319, 320, 328, 348, 349, 368, 369, 338, 0,
	0, 133, 0, 0, 515, 517, 0, 0, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 0,
	0, 0, 0, 220, 0, 0, 180, 169, 228, 226,
	0, 0, 0, 271, 337, 0, 0, 0, 678, 223,
	0, 0, 534, 325, 248, 0, 0, 0, 0, 667,
	668, 0, 0, 0, 0, 0, 0, 0, 0, 77,
	0, 1087, 0, 558, 581, 580, 583, 584, 585, 586,
	0, 0, 539, 582, 587, 620, 621, 0, 0, 0,
	0, 0, 0, 572, 0, 677, 0, 0, 0, 0,
	490, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 358, 275, 292, 313, 0, 283, 498, 0,
	0, 0, 0, 569, 570, 0, 0, 0, 0, 690,
	0, 571, 0, 0, 567, 625, 626, 627, 628, 629,
	630, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 573, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 146, 669,
	0, 0, 211, 538, 0, 0, 688, 285, 0, 332,
	199, 221, 151, 128, 144, 162, 198, 260, 0, 307,
	595, 479, 0, 0, 0, 170, 0, 299, 268, 357,
	597, 0, 298, 224, 347, 0, 0, 356, 0, 525,
	366, 371, 491, 0, 486, 322, 183, 178, 182, 0,
	135, 499, 282, 175, 216, 0, 0, 0, 166, 0,
	0, 0, 321, 344, 132, 246, 345, 370, 153, 339,
	247, 253, 163, 165, 164, 145, 316, 343, 158, 168,
	326, 303, 333, 174, 0, 0, 0, 0, 0, 503,
	501, 0, 0, 362, 504, 310, 309, 0, 206, 0,
	512, 480, 291, 516, 212, 134, 335, 374, 152, 218,
	340, 478, 193, 259, 172, 269, 270, 190, 130, 287,
	240, 241, 239, 242, 197, 494, 518, 0, 289, 312,
	342, 154, 329, 492, 493, 495, 522, 301, 524, 530,
	0, 231, 186, 189, 200, 207, 0, 296, 330, 363,
	0, 147, 136, 336, 355, 159, 311, 314, 372, 297,
	139, 353, 331, 244, 213, 214, 137, 0, 138, 294,
	179, 196, 173, 263, 0, 195, 284, 350, 351, 171,
	375, 148, 365, 141, 149, 364, 256, 0, 255, 367,
	346, 354, 245, 233, 0, 140, 352, 243, 232, 219,
	188, 202, 280, 227, 281, 203, 251, 250, 252, 229,
	234, 0, 481, 0, 327, 360, 376, 334, 156, 0,
	315, 341, 502, 288, 157, 194, 187, 279, 254, 150,
	205, 324, 217, 225, 293, 373, 267, 300, 160, 359,
	323, 184, 679, 689, 685, 687, 686, 683, 684, 682,
	681, 680, 691, 670, 671, 672, 673, 674, 0, 0,
	0, 676, 0, 614, 615, 0, 0, 0, 167, 588,
	589, 590, 591, 592, 598, 599, 603, 604, 612, 611,
	610, 613, 616, 618, 617, 619, 593, 594, 596, 600,
	601, 602, 605, 606, 609, 607, 608, 675, 131, 142,
	222, 0, 290, 192, 361, 0, 177, 0, 0, 0,
	0, 0, 129, 143, 155, 161, 176, 185, 191, 201,
	204, 208, 209, 210, 215, 230, 235, 236, 237, 238,
	257, 258, 261, 262, 265, 266, 272, 273, 274, 276,
	277, 278, 286, 520, 295, 302, 304, 305, 306, 308,
	317, 318, 319, 320, 328, 348, 349, 368, 369, 338,
	0, 0, 133, 0, 0, 515, 517, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	0, 0, 0, 0, 220, 0, 0, 180, 169, 228,
	226, 0, 0, 0, 271, 337, 0, 0, 0, 678,
	223, 0, 0, 534, 325, 248, 0, 0, 0, 0,
	667, 668, 0, 0, 0, 0, 0, 0, 0, 0,
	77, 0, 0, 0, 558, 581, 580, 583, 584, 585,
	586, 0, 0, 539, 582, 587, 620, 621, 0, 0,
	0, 0, 0, 0, 572, 0, 677, 0, 0, 0,
	0, 490, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 358, 275, 292, 313, 0, 283, 498,
	0, 0, 0, 0, 569, 570, 0, 0, 0, 0,
	690, 0, 571, 0, 0, 567, 625, 626, 627, 628,
	629, 630, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 573, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 146,
	669, 0, 0, 211, 538, 0, 0, 688, 285, 0,
	332, 199, 221, 151, 128, 144, 162, 198, 260, 0,
	307, 595, 479, 0, 0, 0, 170, 0, 299, 268,
	357, 597, 0, 298, 224, 347, 0, 0, 356, 0,
	525, 366, 371, 491, 0, 486, 322, 183, 178, 182,
	0, 135, 499, 282, 175, 216, 0, 0, 0, 166,
	0, 0, 0, 321, 344, 132, 246, 345, 370, 153,
	339, 247, 253, 163, 165, 164, 145, 316, 343, 158,
	168, 326, 303, 333, 174, 0, 0, 0, 0, 0,
	503, 501, 0, 0, 362, 504, 310, 309, 0, 206,
	0, 512, 480, 291, 516, 212, 134, 335, 374, 152,
	218, 340, 478, 193, 259, 172, 269, 270, 190, 130,
	287, 240, 241, 239, 242, 197, 494, 518, 0, 289,
	312, 342, 154, 329, 492, 493, 495, 522, 301, 524,
	530, 0, 231, 186, 189, 200, 207, 0, 296, 330,
	363, 0, 147, 136, 336, 355, 159, 311, 314, 372,
	297, 139, 353, 331, 244, 213, 214, 137, 0, 138,
	294, 179, 196, 173, 263, 0, 195, 284, 350, 351,
	171, 375, 148, 365, 141, 149, 364, 256, 0, 255,
	367, 346, 354, 245, 233, 0, 140, 352, 243, 232,
	219, 188, 202, 280, 227, 281, 203, 251, 250, 252,
	229, 234, 0, 481, 0, 327, 360, 376, 334, 156,
	0, 315, 341, 502, 288, 157, 194, 187, 279, 254,
	150, 205, 324, 217, 225, 293, 373, 267, 300, 160,
	359, 323, 184, 679, 689, 685, 687, 686, 683, 684,
	682, 681, 680, 691, 670, 671, 672, 673, 674, 0,
	0, 0, 676, 0, 614, 615, 0, 0, 0, 167,
	588, 589, 590, 591, 592, 598, 599, 603, 604, 612,
	611, 610, 613, 616, 618, 617, 619, 593, 594, 596,
	600, 601, 602, 605, 606, 609, 607, 608, 675, 131,
	142, 222, 0, 290, 192, 361, 0, 177, 0, 0,
	0, 0, 0, 129, 143, 155, 161, 176, 185, 191,
	201, 204, 208, 209, 210, 215, 230, 235, 236, 237,
	238, 257, 258, 261, 262, 265, 266, 272, 273, 274,
	276, 277, 278, 286, 520, 295, 302, 304, 305, 306,
	308, 317, 318, 319, 320, 328, 348, 349, 368, 369,
	338, 0, 0, 133, 0, 0, 515, 517, 0, 0,
	0, 264, 0, 0, 0, 0, 1110, 0, 0, 0,
	181, 0, 0, 0, 0, 220, 0, 0, 180, 169,
	228, 226, 0, 0, 0, 271, 337, 0, 0, 0,
	0, 223, 0, 0, 534, 325, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1111, 0, 1114, 0, 0,
	0, 0, 0, 0, 539, 0, 0, 0, 0, 0,
	0, 1106, 1107, 1105, 0, 0, 0, 0, 0, 0,
	0, 0, 490, 0, 0, 0, 0, 0, 0, 0,
	1108, 0, 0, 0, 358, 275, 292, 313, 0, 283,
	498, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	146, 0, 0, 0, 211, 538, 0, 0, 0, 285,
	0, 332, 199, 221, 151, 128, 144, 162, 198, 260,
	0, 307, 496, 479, 0, 0, 0, 170, 0, 299,
	268, 357, 500, 0, 298, 224, 347, 0, 0, 356,
	0, 525, 366, 371, 491, 0, 486, 322, 183, 178,
	182, 0, 135, 499, 282, 175, 216, 0, 0, 0,
	166, 0, 0, 0, 321, 344, 132, 246, 345, 370,
	153, 339, 247, 253, 163, 165, 164, 145, 316, 343,
	158, 168, 326, 303, 333, 174, 0, 0, 0, 0,
	0, 503, 501, 0, 0, 362, 504, 310, 309, 0,
	206, 0, 512, 480, 291, 516, 212, 134, 335, 374,
	152, 218, 340, 478, 193, 259, 172, 269, 270, 190,
	130, 287, 240, 241, 239, 242, 197, 494, 518, 0,
	289, 312, 342, 154, 329, 492, 493, 495, 522, 301,
	524, 530, 0, 231, 186, 189, 200, 207, 0, 296,
	330, 363, 0, 147, 136, 336, 355, 159, 311, 314,
	372, 297, 139, 353, 331, 244, 213, 214, 137, 0,
	138, 294, 179, 196, 173, 263, 0, 195, 284, 350,
	351, 171, 375, 148, 365, 141, 149, 364, 256, 0,
	255, 367, 346, 354, 245, 233, 0, 140, 352, 243,
	232, 219, 188, 202, 280, 227, 281, 203, 251, 250,
	252, 229, 234, 0, 481, 0, 327, 360, 376, 334,
	156, 0, 315, 341, 502, 288, 157, 194, 187, 279,
	254, 150, 205, 324, 217, 225, 293, 373, 267, 300,
	160, 359, 323, 184, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 531, 532, 0, 0, 0,
	167, 482, 483, 484, 485, 487, 505, 506, 510, 511,
	528, 527, 526, 529, 533, 536, 535, 537, 488, 489,
	497, 507, 508, 509, 513, 514, 523, 519, 521, 0,
	131, 142, 222, 0, 290, 192, 361, 0, 177, 0,
	0, 0, 0, 0, 129, 143, 155, 161, 176, 185,
	191, 201, 204, 208, 209, 210, 215, 230, 235, 236,
	237, 238, 257, 258, 261, 262, 265, 266, 272, 273,
	274, 276, 277, 278, 286, 520, 295, 302, 304, 305,
	306, 308, 317, 318, 319, 320, 328, 348, 349, 368,
	369, 338, 0, 0, 133, 0, 0, 515, 517, 0,
	0, 0, 264, 0, 0, 0, 0, 1913, 0, 0,
	0, 181, 0, 0, 0, 0, 220, 0, 0, 180,
	169, 228, 226, 0, 0, 0, 271, 337, 0, 0,
	0, 0, 223, 0, 0, 534, 325, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1915, 1917,
	0, 0, 0, 0, 0, 0, 126, 0, 477, 0,
	0, 0, 0, 0, 0, 539, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 490, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 358, 275, 292, 313, 0,
	283, 498, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 146, 0, 0, 0, 211, 538, 0, 1916, 0,
	285, 0, 332, 199, 221, 151, 128, 144, 162, 198,
	260, 0, 307, 496, 479, 0, 0, 0, 170, 0,
	299, 268, 357, 500, 0, 298, 224, 347, 0, 0,
	356, 0, 525, 366, 371, 491, 0, 486, 322, 183,
	178, 182, 0, 135, 499, 282, 175, 216, 0, 0,
	0, 166, 0, 0, 0, 321, 344, 132, 246, 345,
	370, 153, 339, 247, 253, 163, 165, 164, 145, 316,
	343, 158, 168, 326, 303, 333, 174, 0, 0, 0,
	0, 0, 503, 501, 0, 0, 362, 504, 310, 309,
	0, 206, 0, 512, 480, 291, 516, 212, 134, 335,
	374, 152, 218, 340, 478, 193, 259, 172, 269, 270,
	190, 130, 287, 240, 241, 239, 242, 197, 494, 518,
	0, 289, 312, 342, 154, 329, 492, 493, 495, 522,
	301, 524, 530, 0, 231, 186, 189, 200, 207, 0,
	296, 330, 363, 0, 147, 136, 336, 355, 159, 311,
	314, 372, 297, 139, 353, 331, 244, 213, 214, 137,
	0, 138, 294, 179, 196, 173, 263, 0, 195, 284,
	350, 351, 171, 375, 148, 365, 141, 149, 364, 256,
	0, 255, 367, 346, 354, 245, 233, 0, 140, 352,
	243, 232, 219, 188, 202, 280, 227, 281, 203, 251,
	250, 252, 229, 234, 0, 481, 0, 327, 360, 376,
	334, 156, 0, 315, 341, 502, 288, 157, 194, 187,
	279, 254, 150, 205, 324, 217, 225, 293, 373, 267,
	300, 160, 359, 323, 184, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 531, 532, 0, 0,
	0, 167, 482, 483, 484, 485, 487, 505, 506, 510,
	511, 528, 527, 526, 529, 533, 536, 535, 537, 488,
	489, 497, 507, 508, 509, 513, 514, 523, 519, 521,
	0, 131, 142, 222, 0, 290, 192, 361, 0, 177,
	0, 0, 0, 0, 0, 129, 143, 155, 161, 176,
	185, 191, 201, 204, 208, 209, 210, 215, 230, 235,
	236, 237, 238, 257, 258, 261, 262, 265, 266, 272,
	273, 274, 276, 277, 278, 286, 520, 295, 302, 304,
	305, 306, 308, 317, 318, 319, 320, 328, 348, 349,
	368, 369, 338, 0, 0, 133, 0, 0, 515, 517,
	0, 0, 0, 264, 0, 0, 0, 0, 1913, 0,
	0, 0, 181, 0, 0, 0, 0, 220, 0, 0,
	180, 169, 228, 226, 0, 0, 0, 271, 337, 0,
	0, 0, 0, 223, 0, 0, 534, 325, 248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1915,
	1917, 0, 0, 0, 0, 0, 0, 126, 0, 477,
	0, 0, 0, 0, 0, 0, 539, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 490, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 358, 1911, 292, 313,
	0, 283, 498, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 146, 0, 0, 0, 211, 538, 0, 1916,
	0, 285, 0, 332, 199, 221, 151, 128, 144, 162,
	198, 260, 0, 307, 496, 479, 0, 0, 0, 170,
	0, 299, 268, 357, 500, 0, 298, 224, 347, 0,
	0, 356, 0, 525, 366, 371, 491, 0, 486, 322,
	183, 178, 182, 0, 135, 499, 282, 175, 216, 0,
	0, 0, 166, 0, 0, 0, 321, 344, 132, 246,
	345, 370, 153, 339, 247, 253, 163, 165, 164, 145,
	316, 343, 158, 168, 326, 303, 333, 174, 0, 0,
	0, 0, 0, 503, 501, 0, 0, 362, 504, 310,
	309, 0, 206, 0, 512, 480, 291, 516, 212, 134,
	335, 374, 152, 218, 340, 478, 193, 259, 172, 269,
	270, 190, 130, 287, 240, 241, 239, 242, 197, 494,
	518, 0, 289, 312, 342, 154, 329, 492, 493, 495,
	522, 301, 524, 530, 0, 231, 186, 189, 200, 207,
	0, 296, 330, 363, 0, 147, 136, 336, 355, 159,
	311, 314, 372, 297, 139, 353, 331, 244, 213, 214,
	137, 0, 138, 294, 179, 196, 173, 263, 0, 195,
	284, 350, 351, 171, 375, 148, 365, 141, 149, 364,
	256, 0, 255, 367, 346, 354, 245, 233, 0, 140,
	352, 243, 232, 219, 188, 202, 280, 227, 281, 203,
	251, 250, 252, 229, 234, 0, 481, 0, 327, 360,
	376, 334, 156, 0, 315, 341, 502, 288, 157, 194,
	187, 279, 254, 150, 205, 324, 217, 225, 293, 373,
	267, 300, 160, 359, 323, 184, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 531, 532, 0,
	0, 0, 167, 482, 483, 484, 485, 487, 505, 506,
	510, 511, 528, 527, 526, 529, 533, 536, 535, 537,
	488, 489, 497, 507, 508, 509, 513, 514, 523, 519,
	521, 0, 131, 142, 222, 0, 290, 192, 361, 0,
	177, 0, 0, 0, 0, 0, 129, 143, 155, 161,
	176, 185, 191, 201, 204, 208, 209, 210, 215, 230,
	235, 236, 237, 238, 257, 258, 261, 262, 265, 266,
	272, 273, 274, 276, 277, 278, 286, 520, 295, 302,
	304, 305, 306, 308, 317, 318, 319, 320, 328, 348,
	349, 368, 369, 338, 0, 0, 133, 0, 0, 515,
	517, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 0, 0, 0, 0, 220, 0,
	0, 180, 169, 228, 226, 0, 0, 0, 271, 337,
	0, 0, 0, 0, 223, 0, 0, 534, 325, 248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 126, 0,
	477, 0, 0, 0, 0, 0, 0, 539, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 490, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 358, 275, 292,
	313, 0, 283, 498, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 146, 0, 0, 0, 211, 538, 0,
	0, 0, 285, 0, 332, 199, 221, 151, 128, 144,
	162, 198, 260, 0, 307, 496, 479, 0, 0, 0,
	170, 0, 299, 268, 357, 500, 0, 298, 224, 347,
	0, 0, 356, 0, 525, 366, 371, 491, 0, 486,
	322, 183, 178, 182, 0, 135, 499, 282, 175, 216,
	0, 0, 0, 166, 0, 0, 0, 321, 344, 132,
	246, 345, 370, 153, 339, 247, 253, 163, 165, 164,
	145, 316, 343, 158, 168, 326, 303, 333, 174, 0,
	0, 0, 0, 0, 503, 501, 0, 0, 362, 504,
	310, 309, 0, 206, 0, 512, 480, 291, 516, 212,
	134, 335, 374, 152, 218, 340, 478, 193, 259, 172,
	269, 270, 190, 130, 287, 240, 241, 239, 242, 197,
	494, 518, 0, 289, 312, 342, 154, 329, 492, 493,
	495, 522, 301, 524, 530, 0, 231, 186, 189, 200,
	207, 0, 296, 330, 363, 0, 147, 136, 336, 355,
	159, 311, 314, 372, 297, 139, 353, 331, 244, 213,
	214, 137, 0, 138, 294, 179, 196, 173, 263, 0,
	195, 284, 350, 351, 171, 375, 148, 365, 141, 149,
	364, 256, 0, 255, 367, 346, 354, 245, 233, 0,
	140, 352, 243, 232, 219, 188, 202, 280, 227, 281,
	203, 251, 250, 252, 229, 234, 0, 481, 0, 327,
	360, 376, 334, 156, 0, 315, 341, 502, 288, 157,
	194, 187, 279, 254, 150, 205, 324, 217, 225, 293,
	373, 267, 300, 160, 359, 323, 184, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 531, 532,
	0, 0, 0, 167, 482, 483, 484, 485, 487, 505,
	506, 510, 511, 528, 527, 526, 529, 533, 536, 535,
	537, 488, 489, 497, 507, 508, 509, 513, 514, 523,
	519, 521, 0, 131, 142, 222, 0, 290, 192, 361,
	0, 177, 0, 0, 0, 0, 472, 129, 143, 155,
	161, 176, 185, 191, 201, 204, 208, 209, 210, 215,
	230, 235, 236, 237, 238, 257, 258, 261, 262, 265,
	266, 272, 273, 274, 276, 277, 278, 286, 520, 295,
	302, 304, 305, 306, 308, 317, 318, 319, 320, 328,
	348, 349, 368, 369, 338, 0, 0, 133, 0, 0,
	515, 517, 0, 0, 0, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 0, 0, 0, 0, 220,
	2196, 0, 180, 169, 228, 226, 0, 0, 0, 271,
	337, 0, 0, 0, 0, 223, 0, 0, 534, 325,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	0, 477, 0, 0, 0, 0, 0, 0, 539, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 490, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 358, 275,
	292, 313, 0, 283, 498, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 146, 0, 0, 0, 211, 538,
	0, 0, 0, 285, 0, 332, 199, 221, 151, 128,
	144, 162, 198, 260, 0, 307, 496, 479, 0, 0,
	0, 170, 0, 299, 268, 357, 500, 0, 298, 224,
	347, 0, 0, 356, 0, 525, 366, 371, 491, 0,
	486, 322, 183, 178, 182, 0, 135, 499, 282, 175,
	216, 0, 0, 0, 166, 0, 0, 0, 321, 344,
	132, 246, 345, 370, 153, 339, 247, 253, 163, 165,
	164, 145, 316, 343, 158, 168, 326, 303, 333, 174,
	0, 0, 0, 0, 0, 503, 501, 0, 0, 362,
	504, 310, 309, 0, 206, 0, 512, 480, 291, 516,
	212, 134, 335, 374, 152, 218, 340, 478, 193, 259,
	172, 269, 270, 190, 130, 287, 240, 241, 239, 242,
	197, 494, 518, 0, 289, 312, 342, 154, 329, 492,
	493, 495, 522, 301, 524, 530, 0, 231, 186, 189,
	200, 207, 0, 296, 330, 363, 0, 147, 136, 336,
	355, 159, 311, 314, 372, 297, 139, 353, 331, 244,
	213, 214, 137, 0, 138, 294, 179, 196, 173, 263,
	0, 195, 284, 350, 351, 171, 375, 148, 365, 141,
	149, 364, 256, 0, 255, 367, 346, 354, 245, 233,
	0, 140, 352, 243, 232, 219, 188, 202, 280, 227,
	281, 203, 251, 250, 252, 229, 234, 0, 481, 0,
	327, 360, 376, 334, 156, 0, 315, 341, 502, 288,
	157, 194, 187, 279, 254, 150, 205, 324, 217, 225,
	293, 373, 267, 300, 160, 359, 323, 184, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 531,
	532, 0, 0, 0, 167, 482, 483, 484, 485, 487,
	505, 506, 510, 511, 528, 527, 526, 529, 533, 536,
	535, 537, 488, 489, 497, 507, 508, 509, 513, 514,
	523, 519, 521, 0, 131, 142, 222, 0, 290, 192,
	361, 0, 177, 0, 0, 0, 0, 0, 129, 143,
	155, 161, 176, 185, 191, 201, 204, 208, 209, 210,
	215, 230, 235, 236, 237, 238, 257, 258, 261, 262,
	265, 266, 272, 273, 274, 276, 277, 278, 286, 520,
	295, 302, 304, 305, 306, 308, 317, 318, 319, 320,
	328, 348, 349, 368, 369, 338, 0, 0, 133, 0,
	0, 515, 517, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 0, 0, 0, 0,
	220, 0, 0, 180, 169, 228, 226, 0, 0, 0,
	271, 337, 0, 0, 0, 0, 223, 0, 0, 534,
	325, 248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 0, 477, 0, 0, 0, 0, 0, 0, 539,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 490, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 358,
	275, 292, 313, 0, 283, 498, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 146, 0, 0, 0, 211,
	538, 0, 0, 0, 285, 0, 332, 199, 221, 151,
	128, 144, 162, 198, 260, 0, 307, 496, 479, 0,
	0, 0, 170, 0, 299, 268, 357, 500, 0, 298,
	224, 347, 0, 0, 356, 0, 525, 366, 371, 491,
	0, 486, 322, 183, 178, 182, 0, 135, 499, 282,
	175, 216, 0, 0, 0, 166, 0, 0, 0, 321,
	344, 132, 246, 345, 370, 153, 339, 247, 253, 163,
	165, 164, 145, 316, 343, 158, 168, 326, 303, 333,
	174, 0, 0, 0, 0, 0, 503, 501, 0, 0,
	362, 504, 310, 309, 0, 206, 0, 512, 480, 291,
	516, 212, 134, 335, 374, 152, 218, 340, 478, 193,
	259, 172, 269, 270, 190, 130, 287, 240, 241, 239,
	242, 197, 494, 518, 0, 289, 312, 342, 154, 329,
	492, 493, 495, 522, 301, 524, 530, 0, 231, 186,
	189, 200, 207, 0, 296, 330, 363, 0, 147, 136,
	336, 355, 159, 311, 314, 372, 297, 139, 353, 331,
	244, 213, 214, 137, 0, 138, 294, 179, 196, 173,
	263, 0, 195, 284, 350, 351, 171, 375, 148, 365,
	141, 149, 364, 256, 0, 255, 367, 346, 354, 245,
	233, 0, 140, 352, 243, 232, 219, 188, 202, 280,
	227, 281, 203, 251, 250, 252, 229, 234, 0, 481,
	0, 327, 360, 376, 334, 156, 0, 315, 341, 502,
	288, 157, 194, 187, 279, 254, 150, 205, 324, 217,
	225, 293, 373, 267, 300, 160, 359, 323, 184, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	531, 532, 0, 0, 0, 167, 482, 483, 484, 485,
	487, 505, 506, 510, 511, 528, 527, 526, 529, 533,
	536, 535, 537, 488, 489, 497, 507, 508, 509, 513,
	514, 523, 519, 521, 0, 131, 142, 222, 0, 290,
	192, 361, 0, 177, 0, 0, 0, 0, 0, 129,
	143, 155, 161, 176, 185, 191, 201, 204, 208, 209,
	210, 215, 230, 235, 236, 237, 238, 257, 258, 261,
	262, 265, 266, 272, 273, 274, 276, 277, 278, 286,
	520, 295, 302, 304, 305, 306, 308, 317, 318, 319,
	320, 328, 348, 349, 368, 369, 338, 0, 0, 133,
	0, 0, 515, 517, 0, 0, 0, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 0, 0, 0,
	0, 220, 0, 0, 180, 169, 228, 226, 0, 0,
	0, 271, 337, 0, 0, 0, 0, 223, 0, 0,
	534, 325, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1111, 0, 1114, 0, 0, 0, 0, 0, 0,
	539, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 490, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	358, 275, 292, 313, 0, 283, 498, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 146, 0, 0, 0,
	211, 538, 0, 0, 0, 285, 0, 332, 199, 221,
	151, 128, 144, 162, 198, 260, 0, 307, 496, 479,
	0, 0, 0, 170, 0, 299, 268, 357, 500, 0,
	298, 224, 347, 0, 0, 356, 0, 525, 366, 371,
	491, 0, 486, 322, 183, 178, 182, 0, 135, 499,
	282, 175, 216, 0, 0, 0, 166, 0, 0, 0,
	321, 344, 132, 246, 345, 370, 153, 339, 247, 253,
	163, 165, 164, 145, 316, 343, 158, 168, 326, 303,
	333, 174, 0, 0, 0, 0, 0, 503, 501, 0,
	0, 362, 504, 310, 309, 0, 206, 0, 512, 480,
	291, 516, 212, 134, 335, 374, 152, 218, 340, 478,
	193, 259, 172, 269, 270, 190, 130, 287, 240, 241,
	239, 242, 197, 494, 518, 0, 289, 312, 342, 154,
	329, 492, 493, 495, 522, 301, 524, 530, 0, 231,
	186, 189, 200, 207, 0, 296, 330, 363, 0, 147,
	136, 336, 355, 159, 311, 314, 372, 297, 139, 353,
	331, 244, 213, 214, 137, 0, 138, 294, 179, 196,
	173, 263, 0, 195, 284, 350, 351, 171, 375, 148,
	365, 141, 149, 364, 256, 0, 255, 367, 346, 354,
	245, 233, 0, 140, 352, 243, 232, 219, 188, 202,
	280, 227, 281, 203, 251, 250, 252, 229, 234, 0,
	481, 0, 327, 360, 376, 334, 156, 0, 315, 341,
	502, 288, 157, 194, 187, 279, 254, 150, 205, 324,
	217, 225, 293, 373, 267, 300, 160, 359, 323, 184,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 531, 532, 0, 0, 0, 167, 482, 483, 484,
	485, 487, 505, 506, 510, 511, 528, 527, 526, 529,
	533, 536, 535, 537, 488, 489, 497, 507, 508, 509,
	513, 514, 523, 519, 521, 0, 131, 142, 222, 0,
	290, 192, 361, 0, 177, 0, 0, 0, 0, 0,
	129, 143, 155, 161, 176, 185, 191, 201, 204, 208,
	209, 210, 215, 230, 235, 236, 237, 238, 257, 258,
	261, 262, 265, 266, 272, 273, 274, 276, 277, 278,
	286, 520, 295, 302, 304, 305, 306, 308, 317, 318,
	319, 320, 328, 348, 349, 368, 369, 338, 0, 0,
	133, 0, 0, 515, 517, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 0, 0,
	0, 0, 220, 0, 0, 180, 169, 228, 226, 0,
	0, 0, 271, 337, 0, 0, 0, 0, 223, 0,
	0, 534, 325, 248, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 726, 0, 0, 0, 0, 0, 0, 0,
	0, 539, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 490,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 358, 275, 292, 313, 0, 283, 498, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 146, 0, 0,
	0, 211, 538, 0, 0, 0, 285, 0, 332, 199,
	221, 151, 128, 144, 162, 198, 260, 0, 307, 496,
	479, 0, 0, 0, 170, 0, 299, 268, 357, 500,
	0, 298, 224, 347, 0, 0, 356, 0, 525, 366,
	371, 491, 0, 486, 322, 183, 178, 182, 0, 135,
	499, 282, 175, 216, 0, 0, 0, 166, 0, 0,
	0, 321, 344, 132, 246, 345, 370, 153, 339, 247,
	253, 163, 165, 164, 145, 316, 343, 158, 168, 326,
	303, 333, 174, 0, 0, 0, 0, 0, 503, 501,
	0, 0, 362, 504, 310, 309, 0, 206, 0, 512,
	480, 291, 516, 212, 134, 335, 374, 152, 218, 340,
	478, 193, 259, 172, 269, 270, 190, 130, 287, 240,
	241, 239, 242, 197, 494, 518, 0, 289, 312, 342,
	154, 329, 492, 493, 495, 522, 301, 524, 530, 0,
	231, 186, 189, 200, 207, 0, 296, 330, 363, 0,
	147, 136, 336, 355, 159, 311, 314, 372, 297, 139,
	353, 331, 244, 213, 214, 137, 0, 138, 294, 179,
	196, 173, 263, 0, 195, 284, 350, 351, 171, 375,
	148, 365, 141, 149, 364, 256, 0, 255, 367, 346,
	354, 245, 233, 0, 140, 352, 243, 232, 219, 188,
	202, 280, 227, 281, 203, 251, 250, 252, 229, 234,
	0, 481, 0, 327, 360, 376, 334, 156, 0, 315,
	341, 502, 288, 157, 194, 187, 279, 254, 150, 205,
	324, 217, 225, 293, 373, 267, 300, 160, 359, 323,
	184, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 531, 532, 0, 0, 0, 167, 482, 483,
	484, 485, 487, 505, 506, 510, 511, 528, 527, 526,
	529, 533, 536, 535, 537, 488, 489, 497, 507, 508,
	509, 513, 514, 523, 519, 521, 0, 131, 142, 222,
	0, 290, 192, 361, 0, 177, 0, 0, 0, 0,
	0, 129, 143, 155, 161, 176, 185, 191, 201, 204,
	208, 209, 210, 215, 230, 235, 236, 237, 238, 257,
	258, 261, 262, 265, 266, 272, 273, 274, 276, 277,
	278, 286, 520, 295, 302, 304, 305, 306, 308, 317,
	318, 319, 320, 328, 348, 349, 368, 369, 0, 0,
	0, 133, 0, 0, 515, 517, 446, 338, 440, 451,
	434, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 457, 0, 0, 0, 0, 0, 181, 0, 0,
	441, 0, 220, 0, 0, 180, 169, 228, 226, 0,
	0, 0, 271, 337, 0, 0, 0, 0, 223, 0,
	0, 0, 325, 248, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 455, 0, 454, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 358, 275, 292, 313, 0, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	433, 432, 435, 0, 0, 0, 249, 146, 0, 0,
	439, 211, 0, 0, 0, 0, 285, 0, 332, 199,
	221, 151, 128, 144, 162, 198, 260, 443, 307, 0,
	0, 447, 0, 0, 170, 0, 299, 268, 357, 0,
	0, 298, 224, 347, 0, 450, 356, 0, 0, 366,
	371, 0, 0, 0, 322, 183, 178, 182, 0, 135,
	0, 282, 175, 216, 0, 0, 0, 166, 0, 0,
	0, 321, 344, 132, 246, 345, 370, 153, 339, 247,
	253, 163, 165, 164, 145, 316, 343, 158, 168, 326,
	303, 333, 174, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 362, 0, 310, 309, 0, 206, 0, 0,
	0, 291, 0, 212, 134, 335, 374, 152, 218, 340,
	0, 193, 259, 172, 269, 270, 190, 130, 287, 240,
	241, 239, 242, 197, 0, 0, 0, 460, 312, 342,
	154, 329, 436, 437, 438, 444, 445, 448, 449, 452,
	231, 186, 189, 200, 207, 0, 296, 330, 363, 0,
	147, 136, 336, 355, 159, 311, 314, 372, 297, 139,
	353, 331, 244, 213, 214, 137, 0, 138, 294, 179,
	196, 173, 263, 0, 195, 284, 350, 351, 171, 375,
	148, 365, 141, 149, 364, 256, 0, 255, 367, 346,
	354, 245, 233, 0, 140, 352, 243, 232, 219, 188,
	202, 280, 227, 281, 203, 251, 250, 252, 229, 234,
	0, 0, 0, 327, 360, 376, 334, 156, 0, 315,
	341, 0, 288, 157, 194, 187, 279, 254, 150, 205,
	324, 217, 225, 293, 373, 267, 300, 160, 359, 323,
	184, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 167, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 131, 142, 222,
	0, 290, 192, 361, 0, 177, 0, 0, 0, 0,
	0, 129, 143, 155, 161, 176, 185, 191, 201, 204,
	208, 209, 210, 215, 230, 235, 236, 237, 238, 257,
	258, 261, 262, 265, 266, 272, 273, 274, 276, 277,
	278, 286, 442, 295, 302, 304, 305, 306, 308, 317,
	318, 319, 320, 328, 348, 349, 368, 369, 0, 0,
	0, 133, 446, 338, 440, 451, 434, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 426, 0, 0,
	0, 0, 0, 181, 0, 0, 441, 0, 220, 0,
	0, 180, 169, 228, 226, 0, 0, 0, 271, 337,
	0, 0, 0, 0, 223, 0, 0, 0, 325, 248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 455, 0,
	454, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 358, 275, 292,
	313, 0, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 433, 432, 435, 0,
	0, 0, 249, 146, 0, 0, 439, 211, 0, 0,
	0, 0, 285, 0, 332, 199, 221, 151, 128, 144,
	162, 198, 260, 443, 307, 0, 0, 447, 0, 0,
	170, 0, 299, 268, 357, 0, 0, 298, 224, 347,
	0, 450, 356, 0, 0, 366, 371, 0, 0, 0,
	322, 183, 178, 182, 0, 135, 0, 282, 175, 216,
	0, 0, 0, 166, 0, 0, 0, 321, 344, 132,
	246, 345, 370, 153, 339, 247, 253, 163, 165, 164,
	145, 316, 343, 158, 168, 326, 303, 333, 174, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 362, 0,
	310, 309, 0, 206, 0, 0, 0, 291, 0, 212,
	134, 335, 374, 152, 218, 340, 0, 193, 259, 172,
	269, 270, 190, 130, 287, 240, 241, 239, 242, 197,
	0, 0, 0, 429, 312, 342, 154, 329, 436, 437,
	438, 444, 445, 448, 449, 452, 231, 186, 189, 200,
	207, 0, 296, 330, 363, 0, 147, 136, 336, 355,
	159, 311, 314, 372, 297, 139, 353, 331, 244, 213,
	214, 137, 0, 138, 294, 179, 196, 173, 263, 0,
	195, 284, 350, 351, 171, 375, 148, 365, 141, 149,
	364, 256, 0, 255, 367, 346, 354, 245, 233, 0,
	140, 352, 243, 232, 219, 188, 202, 280, 227, 281,
	203, 251, 250, 252, 229, 234, 0, 0, 0, 327,
	360, 376, 334, 156, 0, 315, 341, 0, 288, 157,
	194, 187, 279, 254, 150, 205, 324, 217, 225, 293,
	373, 267, 300, 160, 359, 323, 184, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 131, 142, 222, 0, 290, 192, 361,
	0, 177, 0, 0, 0, 0, 0, 129, 143, 155,
	161, 176, 185, 191, 201, 204, 208, 209, 210, 215,
	230, 235, 236, 237, 238, 257, 258, 261, 262, 265,
	266, 272, 273, 274, 276, 277, 278, 286, 442, 295,
	302, 304, 305, 306, 308, 317, 318, 319, 320, 328,
	348, 349, 368, 369, 338, 0, 0, 133, 0, 0,
	0, 0, 0, 0, 0, 264, 0, 0, 2883, 0,
	0, 0, 0, 0, 181, 2881, 0, 0, 0, 220,
	0, 0, 180, 169, 228, 226, 0, 0, 0, 271,
	337, 0, 0, 0, 0, 223, 0, 0, 0, 325,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 455,
	0, 454, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 358, 275,
	292, 313, 0, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 146, 0, 0, 0, 211, 0,
	0, 0, 0, 285, 0, 332, 199, 221, 151, 128,
	144, 162, 198, 260, 0, 307, 0, 0, 0, 0,
	0, 170, 0, 299, 268, 357, 0, 0, 298, 224,
	347, 0, 0, 356, 0, 0, 366, 371, 0, 0,
	0, 322, 183, 178, 182, 0, 135, 0, 282, 175,
	216, 0, 0, 0, 166, 0, 0, 0, 321, 344,
	132, 246, 345, 370, 153, 339, 247, 253, 163, 165,
	164, 145, 316, 343, 158, 168, 326, 303, 333, 174,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 362,
	0, 310, 309, 0, 206, 0, 2882, 0, 291, 0,
	212, 134, 335, 374, 152, 218, 340, 0, 193, 259,
	172, 269, 270, 190, 130, 287, 240, 241, 239, 242,
	197, 0, 0, 0, 289, 312, 342, 154, 329, 0,
	0, 0, 0, 301, 0, 0, 0, 231, 186, 189,
	200, 207, 0, 296, 330, 363, 0, 147, 136, 336,
	355, 159, 311, 314, 372, 297, 139, 353, 331, 244,
	213, 214, 137, 0, 138, 294, 179, 196, 173, 263,
	0, 195, 284, 350, 351, 171, 375, 148, 365, 141,
	149, 364, 256, 0, 255, 367, 346, 354, 245, 233,
	0, 140, 352, 243, 232, 219, 188, 202, 280, 227,
	281, 203, 251, 250, 252, 229, 234, 0, 0, 0,
	327, 360, 376, 334, 156, 0, 315, 341, 0, 288,
	157, 194, 187, 279, 254, 150, 205, 324, 217, 225,
	293, 373, 267, 300, 160, 359, 323, 184, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 167, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 131, 142, 222, 0, 290, 192,
	361, 0, 177, 0, 0, 0, 0, 0, 129, 143,
	155, 161, 176, 185, 191, 201, 204, 208, 209, 210,
	215, 230, 235, 236, 237, 238, 257, 258, 261, 262,
	265, 266, 272, 273, 274, 276, 277, 278, 286, 0,
	295, 302, 304, 305, 306, 308, 317, 318, 319, 320,
	328, 348, 349, 368, 369, 36, 338, 0, 133, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 0, 0, 0,
	0, 220, 0, 0, 180, 169, 228, 226, 0, 0,
	0, 271, 337, 0, 0, 0, 1908, 223, 0, 0,
	0, 325, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 77, 0, 0,
	0, 1602, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	358, 275, 292, 313, 0, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 146, 0, 0, 0,
	211, 0, 0, 0, 0, 285, 0, 332, 199, 221,
	151, 128, 144, 162, 198, 260, 0, 307, 0, 0,
	0, 0, 0, 170, 0, 299, 268, 357, 0, 0,
	298, 224, 347, 0, 0, 356, 0, 0, 366, 371,
	0, 0, 0, 322, 183, 178, 182, 0, 135, 0,
	282, 175, 216, 0, 0, 0, 166, 0, 0, 0,
	321, 344, 132, 246, 345, 370, 153, 339, 247, 253,
	163, 165, 164, 145, 316, 343, 158, 168, 326, 303,
	333, 174, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 362, 0, 310, 309, 0, 206, 0, 0, 0,
	291, 0, 212, 134, 335, 374, 152, 218, 340, 0,
	193, 259, 172, 269, 270, 190, 130, 287, 240, 241,
	239, 242, 197, 0, 0, 0, 289, 312, 342, 154,
	329, 0, 0, 0, 0, 301, 0, 0, 0, 231,
	186, 189, 200, 207, 0, 296, 330, 363, 0, 147,
	136, 336, 355, 159, 311, 314, 372, 297, 139, 353,
	331, 244, 213, 214, 137, 0, 138, 294, 179, 196,
	173, 263, 0, 195, 284, 350, 351, 171, 375, 148,
	365, 141, 149, 364, 256, 0, 255, 367, 346, 354,
	245, 233, 0, 140, 352, 243, 232, 219, 188, 202,
	280, 227, 281, 203, 251, 250, 252, 229, 234, 0,
	0, 0, 327, 360, 376, 334, 156, 0, 315, 341,
	0, 288, 157, 194, 187, 279, 254, 150, 205, 324,
	217, 225, 293, 373, 267, 300, 160, 359, 323, 184,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 167, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 131, 142, 222, 75,
	290, 192, 361, 0, 177, 0, 0, 0, 0, 0,
	129, 143, 155, 161, 176, 185, 191, 201, 204, 208,
	209, 210, 215, 230, 235, 236, 237, 238, 257, 258,
	261, 262, 265, 266, 272, 273, 274, 276, 277, 278,
	286, 0, 295, 302, 304, 305, 306, 308, 317, 318,
	319, 320, 328, 348, 349, 368, 369, 338, 0, 0,
	133, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 0, 0,
	0, 0, 220, 0, 0, 180, 169, 228, 226, 0,
	0, 0, 271, 337, 0, 0, 0, 0, 223, 0,
	0, 0, 325, 248, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 726, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2022, 358, 275, 292, 313, 0, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 146, 0, 0,
	0, 211, 0, 0, 0, 0, 285, 0, 332, 199,
	221, 151, 128, 144, 162, 198, 260, 0, 307, 0,
	0, 0, 0, 0, 170, 0, 299, 268, 357, 0,
	0, 298, 224, 347, 0, 0, 356, 0, 0, 366,
	371, 0, 0, 0, 322, 183, 178, 182, 0, 135,
	0, 282, 175, 216, 2023, 2024, 0, 166, 0, 0,
	0, 321, 344, 132, 246, 345, 370, 153, 339, 247,
	253, 163, 165, 164, 145, 316, 343, 158, 168, 326,
	303, 333, 174, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 362, 0, 310, 309, 0, 206, 0, 0,
	0, 291, 0, 212, 134, 335, 374, 152, 218, 340,
	0, 193, 259, 172, 269, 270, 190, 130, 287, 240,
	241, 239, 242, 197, 0, 0, 0, 289, 312, 342,
	154, 329, 0, 0, 0, 0, 301, 0, 0, 0,
	231, 186, 189, 200, 207, 0, 296, 330, 363, 0,
	147, 136, 336, 355, 159, 311, 314, 372, 297, 139,
	353, 331, 244, 213, 214, 137, 0, 138, 294, 179,
	196, 173, 263, 0, 195, 284, 350, 351, 171, 375,
	148, 365, 141, 149, 364, 256, 0, 255, 367, 346,
	354, 245, 233, 0, 140, 352, 243, 232, 219, 188,
	202, 280, 227, 281, 203, 251, 250, 252, 229, 234,
	0, 0, 0, 327, 360, 376, 334, 156, 0, 315,
	341, 0, 288, 157, 194, 187, 279, 254, 150, 205,
	324, 217, 225, 293, 373, 267, 300, 160, 359, 323,
	184, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 167, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 131, 142, 222,
	0, 290, 192, 361, 0, 177, 0, 0, 0, 0,
	0, 129, 143, 155, 161, 176, 185, 191, 201, 204,
	208, 209, 210, 215, 230, 235, 236, 237, 238, 257,
	258, 261, 262, 265, 266, 272, 273, 274, 276, 277,
	278, 286, 0, 295, 302, 304, 305, 306, 308, 317,
	318, 319, 320, 328, 348, 349, 368, 369, 338, 0,
	0, 133, 0, 0, 0, 0, 0, 0, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 0,
	0, 0, 0, 220, 0, 0, 180, 169, 228, 226,
	0, 0, 0, 271, 337, 0, 0, 0, 0, 223,
	0, 0, 0, 325, 248, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 455, 0, 454, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 358, 275, 292, 313, 0, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 146, 0,
	0, 0, 211, 0, 0, 0, 0, 285, 0, 332,
	199, 221, 151, 128, 144, 162, 198, 260, 0, 307,
	0, 0, 0, 0, 0, 170, 0, 299, 268, 357,
	0, 0, 298, 224, 347, 0, 0, 356, 0, 0,
	366, 371, 0, 0, 0, 322, 183, 178, 182, 0,
	135, 0, 282, 175, 216, 0, 0, 0, 166, 0,
	0, 0, 321, 344, 132, 246, 345, 370, 153, 339,
	247, 253, 163, 165, 164, 145, 316, 343, 158, 168,
	326, 303, 333, 174, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 362, 0, 310, 309, 0, 206, 0,
	0, 0, 291, 0, 212, 134, 335, 374, 152, 218,
	340, 0, 193, 259, 172, 269, 270, 190, 130, 287,
	240, 241, 239, 242, 197, 0, 0, 0, 289, 312,
	342, 154, 329, 0, 0, 0, 0, 301, 0, 0,
	0, 231, 186, 189, 200, 207, 0, 296, 330, 363,
	0, 147, 136, 336, 355, 159, 311, 314, 372, 297,
	139, 353, 331, 244, 213, 214, 137, 0, 138, 294,
	179, 196, 173, 263, 0, 195, 284, 350, 351, 171,
	375, 148, 365, 141, 149, 364, 256, 0, 255, 367,
	346, 354, 245, 233, 0, 140, 352, 243, 232, 219,
	188, 202, 280, 227, 281, 203, 251, 250, 252, 229,
	234, 0, 0, 0, 327, 360, 376, 334, 156, 0,
	315, 341, 0, 288, 157, 194, 187, 279, 254, 150,
	205, 324, 217, 225, 293, 373, 267, 300, 160, 359,
	323, 184, 0, 0, 0, 1386, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 167, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 131, 142,
	222, 0, 290, 192, 361, 0, 177, 0, 0, 0,
	0, 0, 129, 143, 155, 161, 176, 185, 191, 201,
	204, 208, 209, 210, 215, 230, 235, 236, 237, 238,
	257, 258, 261, 262, 265, 266, 272, 273, 274, 276,
	277, 278, 286, 0, 295, 302, 304, 305, 306, 308,
	317, 318, 319, 320, 328, 348, 349, 368, 369, 338,
	0, 0, 133, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	1245, 0, 0, 0, 220, 0, 0, 180, 169, 228,
	226, 0, 0, 0, 271, 337, 0, 0, 0, 0,
	223, 0, 0, 0, 325, 248, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 726, 0, 1244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 358, 275, 292, 313, 0, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 146,
	0, 0, 0, 211, 0, 0, 0, 0, 285, 0,
	332, 199, 221, 151, 128, 144, 162, 198, 260, 0,
	307, 0, 0, 0, 0, 0, 170, 0, 299, 268,
	357, 0, 0, 298, 224, 347, 0, 0, 356, 0,
	0, 366, 371, 0, 0, 0, 322, 183, 178, 182,
	0, 135, 0, 282, 175, 216, 0, 0, 0, 166,
	0, 0, 0, 321, 344, 132, 246, 345, 370, 153,
	339, 247, 253, 163, 165, 164, 145, 316, 343, 158,
	168, 326, 303, 333, 174, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 362, 0, 310, 309, 0, 206,
	0, 0, 0, 291, 0, 212, 134, 335, 374, 152,
	218, 340, 0, 193, 259, 172, 269, 270, 190, 130,
	287, 240, 241, 239, 242, 197, 0, 0, 0, 289,
	312, 342, 154, 329, 0, 0, 0, 0, 301, 0,
	0, 0, 231, 186, 189, 200, 207, 0, 296, 330,
	363, 0, 147, 136, 336, 355, 159, 311, 314, 372,
	297, 139, 353, 331, 244, 213, 214, 137, 0, 138,
	294, 179, 196, 173, 263, 0, 195, 284, 350, 351,
	171, 375, 148, 365, 141, 149, 364, 256, 0, 255,
	367, 346, 354, 245, 233, 0, 140, 352, 243, 232,
	219, 188, 202, 280, 227, 281, 203, 251, 250, 252,
	229, 234, 0, 0, 0, 327, 360, 376, 334, 156,
	0, 315, 341, 0, 288, 157, 194, 187, 279, 254,
	150, 205, 324, 217, 225, 293, 373, 267, 300, 160,
	359, 323, 184, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 167,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 131,
	142, 222, 0, 290, 192, 361, 0, 177, 0, 0,
	0, 0, 0, 129, 143, 155, 161, 176, 185, 191,
	201, 204, 208, 209, 210, 215, 230, 235, 236, 237,
	238, 257, 258, 261, 262, 265, 266, 272, 273, 274,
	276, 277, 278, 286, 0, 295, 302, 304, 305, 306,
	308, 317, 318, 319, 320, 328, 348, 349, 368, 369,
	338, 0, 0, 133, 0, 0, 0, 0, 0, 0,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 0, 0, 0, 0, 220, 0, 0, 180, 169,
	228, 226, 0, 0, 0, 271, 337, 0, 0, 0,
	0, 223, 0, 0, 0, 325, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 455, 0, 454, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 358, 275, 292, 313, 0, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	146, 0, 0, 0, 211, 0, 0, 0, 0, 285,
	0, 332, 199, 221, 151, 128, 144, 162, 198, 260,
	0, 307, 0, 0, 0, 0, 0, 170, 0, 299,
	268, 357, 0, 0, 298, 224, 347, 0, 0, 356,
	0, 0, 366, 371, 0, 0, 0, 322, 183, 178,
	182, 0, 135, 0, 282, 175, 216, 0, 0, 0,
	166, 0, 0, 0, 321, 344, 132, 246, 345, 370,
	153, 339, 247, 253, 163, 165, 164, 145, 316, 343,
	158, 168, 326, 303, 333, 174, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 362, 0, 310, 309, 0,
	206, 0, 0, 0, 291, 0, 212, 134, 335, 374,
	152, 218, 340, 0, 193, 259, 172, 269, 270, 190,
	130, 287, 240, 241, 239, 242, 197, 0, 0, 0,
	289, 312, 342, 154, 329, 0, 0, 0, 0, 301,
	0, 0, 0, 231, 186, 189, 200, 207, 0, 296,
	330, 363, 0, 147, 136, 336, 355, 159, 311, 314,
	372, 297, 139, 353, 331, 244, 213, 214, 137, 0,
	138, 294, 179, 196, 173, 263, 0, 195, 284, 350,
	351, 171, 375, 148, 365, 141, 149, 364, 256, 0,
	255, 367, 346, 354, 245, 233, 0, 140, 352, 243,
	232, 219, 188, 202, 280, 227, 281, 203, 251, 250,
	252, 229, 234, 0, 0, 0, 327, 360, 376, 334,
	156, 0, 315, 341, 0, 288, 157, 194, 187, 279,
	254, 150, 205, 324, 217, 225, 293, 373, 267, 300,
	160, 359, 323, 184, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	167, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	131, 142, 222, 0, 290, 192, 361, 0, 177, 0,
	0, 0, 0, 0, 129, 143, 155, 161, 176, 185,
	191, 201, 204, 208, 209, 210, 215, 230, 235, 236,
	237, 238, 257, 258, 261, 262, 265, 266, 272, 273,
	274, 276, 277, 278, 286, 0, 295, 302, 304, 305,
	306, 308, 317, 318, 319, 320, 328, 348, 349, 368,
	369, 338, 0, 0, 133, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 0, 0, 0, 0, 220, 0, 0, 180,
	169, 228, 226, 0, 0, 0, 271, 337, 0, 0,
	0, 0, 223, 0, 0, 0, 325, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 77, 0, 0, 0, 1602, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 358, 275, 292, 313, 0,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 146, 0, 0, 0, 211, 0, 0, 0, 0,
	285, 0, 332, 199, 221, 151, 128, 144, 162, 198,
	260, 0, 307, 0, 0, 0, 0, 0, 170, 0,
	299, 268, 357, 0, 0, 298, 224, 347, 0, 0,
	356, 0, 0, 366, 371, 0, 0, 0, 322, 183,
	178, 182, 0, 135, 0, 282, 175, 216, 0, 0,
	0, 166, 0, 0, 0, 321, 344, 132, 246, 345,
	370, 153, 339, 247, 253, 163, 165, 164, 145, 316,
	343, 158, 168, 326, 303, 333, 174, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 362, 0, 310, 309,
	0, 206, 0, 0, 0, 291, 0, 212, 134, 335,
	374, 152, 218, 340, 0, 193, 259, 172, 269, 270,
	190, 130, 287, 240, 241, 239, 242, 197, 0, 0,
	0, 289, 312, 342, 154, 329, 0, 0, 0, 0,
	301, 0, 0, 0, 231, 186, 189, 200, 207, 0,
	296, 330, 363, 0, 147, 136, 336, 355, 159, 311,
	314, 372, 297, 139, 353, 331, 244, 213, 214, 137,
	0, 138, 294, 179, 196, 173, 263, 0, 195, 284,
	350, 351, 171, 375, 148, 365, 141, 149, 364, 256,
	0, 255, 367, 346, 354, 245, 233, 0, 140, 352,
	243, 232, 219, 188, 202, 280, 227, 281, 203, 251,
	250, 252, 229, 234, 0, 0, 0, 327, 360, 376,
	334, 156, 0, 315, 341, 0, 288, 157, 194, 187,
	279, 254, 150, 205, 324, 217, 225, 293, 373, 267,
	300, 160, 359, 323, 184, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 167, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 131, 142, 222, 0, 290, 192, 361, 0, 177,
	0, 0, 0, 0, 0, 129, 143, 155, 161, 176,
	185, 191, 201, 204, 208, 209, 210, 215, 230, 235,
	236, 237, 238, 257, 258, 261, 262, 265, 266, 272,
	273, 274, 276, 277, 278, 286, 0, 295, 302, 304,
	305, 306, 308, 317, 318, 319, 320, 328, 348, 349,
	368, 369, 338, 0, 0, 133, 0, 0, 0, 0,
	0, 0, 0, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 0, 0, 0, 0, 220, 0, 0,
	180, 169, 228, 226, 0, 0, 0, 271, 337, 0,
	0, 0, 0, 223, 0, 0, 0, 325, 248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 726, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 358, 275, 292, 313,
	0, 283, 0, 0, 0, 0, 0, 0, 0, 2296,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 146, 0, 0, 0, 211, 0, 0, 0,
	0, 285, 0, 332, 199, 221, 151, 128, 144, 162,
	198, 260, 0, 307, 0, 0, 0, 0, 0, 170,
	0, 299, 268, 357, 0, 0, 298, 224, 347, 0,
	0, 356, 0, 0, 366, 371, 0, 0, 0, 322,
	183, 178, 182, 0, 135, 0, 282, 175, 216, 0,
	0, 0, 166, 0, 0, 0, 321, 344, 132, 246,
	345, 370, 153, 339, 247, 253, 163, 165, 164, 145,
	316, 343, 158, 168, 326, 303, 333, 174, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 362, 0, 310,
	309, 0, 206, 0, 0, 0, 291, 0, 212, 134,
	335, 374, 152, 218, 340, 0, 193, 259, 172, 269,
	270, 190, 130, 287, 240, 241, 239, 242, 197, 0,
	0, 0, 289, 312, 342, 154, 329, 0, 0, 0,
	0, 301, 0, 0, 0, 231, 186, 189, 200, 207,
	0, 296, 330, 363, 0, 147, 136, 336, 355, 159,
	311, 314, 372, 297, 139, 353, 331, 244, 213, 214,
	137, 0, 138, 294, 179, 196, 173, 263, 0, 195,
	284, 350, 351, 171, 375, 148, 365, 141, 149, 364,
	256, 0, 255, 367, 346, 354, 245, 233, 0, 140,
	352, 243, 232, 219, 188, 202, 280, 227, 281, 203,
	251, 250, 252, 229, 234, 0, 0, 0, 327, 360,
	376, 334, 156, 0, 315, 341, 0, 288, 157, 194,
	187, 279, 254, 150, 205, 324, 217, 225, 293, 373,
	267, 300, 160, 359, 323, 184, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 167, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 131, 142, 222, 0, 290, 192, 361, 0,
	177, 0, 0, 0, 0, 0, 129, 143, 155, 161,
	176, 185, 191, 201, 204, 208, 209, 210, 215, 230,
	235, 236, 237, 238, 257, 258, 261, 262, 265, 266,
	272, 273, 274, 276, 277, 278, 286, 0, 295, 302,
	304, 305, 306, 308, 317, 318, 319, 320, 328, 348,
	349, 368, 369, 338, 0, 0, 133, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 0, 0, 0, 0, 220, 0,
	0, 180, 169, 228, 226, 0, 0, 0, 271, 337,
	0, 0, 0, 0, 223, 0, 0, 0, 325, 248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 77, 0, 0, 0, 726, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 358, 275, 292,
	313, 0, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 146, 0, 0, 0, 211, 0, 0,
	0, 0, 285, 0, 332, 199, 221, 151, 128, 144,
	162, 198, 260, 0, 307, 0, 0, 0, 0, 0,
	170, 0, 299, 268, 357, 0, 0, 298, 224, 347,
	0, 0, 356, 0, 0, 366, 371, 0, 0, 0,
	322, 183, 178, 182, 0, 135, 0, 282, 175, 216,
	0, 0, 0, 166, 0, 0, 0, 321, 344, 132,
	246, 345, 370, 153, 339, 247, 253, 163, 165, 164,
	145, 316, 343, 158, 168, 326, 303, 333, 174, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 362, 0,
	310, 309, 0, 206, 0, 0, 0, 291, 0, 212,
	134, 335, 374, 152, 218, 340, 0, 193, 259, 172,
	269, 270, 190, 130, 287, 240, 241, 239, 242, 197,
	0, 0, 0, 289, 312, 342, 154, 329, 0, 0,
	0, 0, 301, 0, 0, 0, 231, 186, 189, 200,
	207, 0, 296, 330, 363, 0, 147, 136, 336, 355,
	159, 311, 314, 372, 297, 139, 353, 331, 244, 213,
	214, 137, 0, 138, 294, 179, 196, 173, 263, 0,
	195, 284, 350, 351, 171, 375, 148, 365, 141, 149,
	364, 256, 0, 255, 367, 346, 354, 245, 233, 0,
	140, 352, 243, 232, 219, 188, 202, 280, 227, 281,
	203, 251, 250, 252, 229, 234, 0, 0, 0, 327,
	360, 376, 334, 156, 0, 315, 341, 0, 288, 157,
	194, 187, 279, 254, 150, 205, 324, 217, 225, 293,
	373, 267, 300, 160, 359, 323, 184, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 131, 142, 222, 0, 290, 192, 361,
	0, 177, 0, 0, 0, 0, 0, 129, 143, 155,
	161, 176, 185, 191, 201, 204, 208, 209, 210, 215,
	230, 235, 236, 237, 238, 257, 258, 261, 262, 265,
	266, 272, 273, 274, 276, 277, 278, 286, 0, 295,
	302, 304, 305, 306, 308, 317, 318, 319, 320, 328,
	348, 349, 368, 369, 338, 0, 0, 133, 0, 0,
	0, 0, 0, 0, 0, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 0, 0, 0, 0, 220,
	0, 1797, 1798, 169, 228, 226, 0, 0, 0, 271,
	337, 0, 0, 0, 0, 223, 0, 0, 0, 325,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 726,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 358, 275,
	292, 313, 0, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 146, 0, 0, 0, 211, 0,
	0, 0, 0, 285, 0, 332, 199, 221, 151, 128,
	144, 162, 198, 260, 0, 307, 0, 0, 0, 0,
	0, 170, 0, 299, 268, 357, 0, 0, 298, 224,
	347, 0, 0, 356, 0, 0, 366, 371, 0, 0,
	0, 322, 183, 178, 182, 0, 135, 0, 282, 175,
	216, 0, 0, 0, 166, 0, 0, 0, 321, 344,
	132, 246, 345, 370, 153, 339, 247, 253, 163, 165,
	164, 145, 316, 343, 158, 168, 326, 303, 333, 174,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 362,
	0, 310, 309, 0, 206, 0, 0, 0, 291, 0,
	212, 134, 335, 374, 152, 218, 340, 0, 193, 259,
	172, 269, 270, 190, 130, 287, 240, 241, 239, 242,
	197, 0, 0, 0, 289, 312, 342, 154, 329, 0,
	0, 0, 0, 301, 0, 0, 0, 231, 186, 189,
	200, 207, 0, 296, 330, 363, 0, 147, 136, 336,
	355, 159, 311, 314, 372, 297, 139, 353, 331, 244,
	213, 214, 137, 0, 138, 294, 179, 196, 173, 263,
	0, 195, 284, 350, 351, 171, 375, 148, 365, 141,
	149, 364, 256, 0, 255, 367, 346, 354, 245, 233,
	0, 140, 352, 243, 232, 219, 188, 202, 280, 227,
	281, 203, 251, 250, 252, 229, 234, 0, 0, 0,
	327, 360, 376, 334, 156, 0, 315, 341, 0, 288,
	157, 194, 187, 279, 254, 150, 205, 324, 217, 225,
	293, 373, 267, 300, 160, 359, 323, 184, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 167, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 131, 142, 222, 0, 290, 192,
	361, 0, 177, 0, 0, 0, 0, 0, 129, 143,
	155, 161, 176, 185, 191, 201, 204, 208, 209, 210,
	215, 230, 235, 236, 237, 238, 257, 258, 261, 262,
	265, 266, 272, 273, 274, 276, 277, 278, 286, 0,
	295, 302, 304, 305, 306, 308, 317, 318, 319, 320,
	328, 348, 349, 368, 369, 338, 0, 0, 133, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 0, 0, 0, 0,
	220, 0, 0, 180, 169, 228, 226, 0, 0, 0,
	271, 337, 0, 0, 0, 0, 223, 0, 0, 0,
	325, 248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	726, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 358,
	275, 292, 313, 0, 283, 0, 0, 0, 0, 0,
	0, 0, 1760, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 146, 0, 0, 0, 211,
	0, 0, 0, 0, 285, 0, 332, 199, 221, 151,
	128, 144, 162, 198, 260, 0, 307, 0, 0, 0,
	0, 0, 170, 0, 299, 268, 357, 0, 0, 298,
	224, 347, 0, 0, 356, 0, 0, 366, 371, 0,
	0, 0, 322, 183, 178, 182, 0, 135, 0, 282,
	175, 216, 0, 0, 0, 166, 0, 0, 0, 321,
	344, 132, 246, 345, 370, 153, 339, 247, 253, 163,
	165, 164, 145, 316, 343, 158, 168, 326, 303, 333,
	174, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	362, 0, 310, 309, 0, 206, 0, 0, 0, 291,
	0, 212, 134, 335, 374, 152, 218, 340, 0, 193,
	259, 172, 269, 270, 190, 130, 287, 240, 241, 239,
	242, 197, 0, 0, 0, 289, 312, 342, 154, 329,
	0, 0, 0, 0, 301, 0, 0, 0, 231, 186,
	189, 200, 207, 0, 296, 330, 363, 0, 147, 136,
	336, 355, 159, 311, 314, 372, 297, 139, 353, 331,
	244, 213, 214, 137, 0, 138, 294, 179, 196, 173,
	263, 0, 195, 284, 350, 351, 171, 375, 148, 365,
	141, 149, 364, 256, 0, 255, 367, 346, 354, 245,
	233, 0, 140, 352, 243, 232, 219, 188, 202, 280,
	227, 281, 203, 251, 250, 252, 229, 234, 0, 0,
	0, 327, 360, 376, 334, 156, 0, 315, 341, 0,
	288, 157, 194, 187, 279, 254, 150, 205, 324, 217,
	225, 293, 373, 267, 300, 160, 359, 323, 184, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 167, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 131, 142, 222, 0, 290,
	192, 361, 0, 177, 0, 0, 0, 0, 0, 129,
	143, 155, 161, 176, 185, 191, 201, 204, 208, 209,
	210, 215, 230, 235, 236, 237, 238, 257, 258, 261,
	262, 265, 266, 272, 273, 274, 276, 277, 278, 286,
	0, 295, 302, 304, 305, 306, 308, 317, 318, 319,
	320, 328, 348, 349, 368, 369, 338, 0, 0, 133,
	0, 0, 0, 0, 0, 0, 0, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 0, 0, 0,
	0, 220, 0, 0, 180, 169, 228, 226, 0, 0,
	0, 271, 337, 0, 0, 0, 0, 223, 0, 0,
	0, 325, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1590, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	358, 275, 292, 313, 0, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 146, 0, 0, 0,
	211, 0, 0, 0, 0, 285, 0, 332, 199, 221,
	151, 128, 144, 162, 198, 260, 0, 307, 0, 0,
	0, 0, 0, 170, 0, 299, 268, 357, 0, 0,
	298, 224, 347, 0, 0, 356, 0, 0, 366, 371,
	0, 0, 0, 322, 183, 178, 182, 0, 135, 0,
	282, 175, 216, 0, 0, 0, 166, 0, 0, 0,
	321, 344, 132, 246, 345, 370, 153, 339, 247, 253,
	163, 165, 164, 145, 316, 343, 158, 168, 326, 303,
	333, 174, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 362, 0, 310, 309, 0, 206, 0, 0, 0,
	291, 0, 212, 134, 335, 374, 152, 218, 340, 0,
	193, 259, 172, 269, 270, 190, 130, 287, 240, 241,
	239, 242, 197, 0, 0, 0, 289, 312, 342, 154,
	329, 0, 0, 0, 0, 301, 0, 0, 0, 231,
	186, 189, 200, 207, 0, 296, 330, 363, 0, 147,
	136, 336, 355, 159, 311, 314, 372, 297, 139, 353,
	331, 244, 213, 214, 137, 0, 138, 294, 179, 196,
	173, 263, 0, 195, 284, 350, 351, 171, 375, 148,
	365, 141, 149, 364, 256, 0, 255, 367, 346, 354,
	245, 233, 0, 140, 352, 243, 232, 219, 188, 202,
	280, 227, 281, 203, 251, 250, 252, 229, 234, 0,
	0, 0, 327, 360, 376, 334, 156, 0, 315, 341,
	0, 288, 157, 194, 187, 279, 254, 150, 205, 324,
	217, 225, 293, 373, 267, 300, 160, 359, 323, 184,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 167, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 131, 142, 222, 0,
	290, 192, 361, 0, 177, 0, 0, 0, 0, 0,
	129, 143, 155, 161, 176, 185, 191, 201, 204, 208,
	209, 210, 215, 230, 235, 236, 237, 238, 257, 258,
	261, 262, 265, 266, 272, 273, 274, 276, 277, 278,
	286, 0, 295, 302, 304, 305, 306, 308, 317, 318,
	319, 320, 328, 348, 349, 368, 369, 338, 0, 0,
	133, 1229, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 0, 0,
	0, 0, 220, 0, 0, 180, 169, 228, 226, 0,
	0, 0, 271, 337, 0, 0, 0, 0, 223, 0,
	0, 0, 325, 248, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 358, 275, 292, 313, 0, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 146, 0, 0,
	0, 211, 0, 0, 0, 0, 285, 0, 332, 199,
	221, 151, 128, 144, 162, 198, 260, 0, 307, 0,
	0, 0, 0, 0, 170, 0, 299, 268, 357, 0,
	0, 298, 224, 347, 0, 0, 356, 0, 0, 366,
	371, 0, 0, 0, 322, 183, 178, 182, 0, 135,
	0, 282, 175, 216, 0, 0, 0, 166, 0, 0,
	0, 321, 344, 132, 246, 345, 370, 153, 339, 247,
	253, 163, 165, 164, 145, 316, 343, 158, 168, 326,
	303, 333, 174, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 362, 0, 310, 309, 0, 206, 0, 0,
	0, 291, 0, 212, 134, 335, 374, 152, 218, 340,
	0, 193, 259, 172, 269, 270, 190, 130, 287, 240,
	241, 239, 242, 197, 0, 0, 0, 289, 312, 342,
	154, 329, 0, 0, 0, 0, 301, 0, 0, 0,
	231, 186, 189, 200, 207, 0, 296, 330, 363, 0,
	147, 136, 336, 355, 159, 311, 314, 372, 297, 139,
	353, 331, 244, 213, 214, 137, 0, 138, 294, 179,
	196, 173, 263, 0, 195, 284, 350, 351, 171, 375,
	148, 365, 141, 149, 364, 256, 0, 255, 367, 346,
	354, 245, 233, 0, 140, 352, 243, 232, 219, 188,
	202, 280, 227, 281, 203, 251, 250, 252, 229, 234,
	0, 0, 0, 327, 360, 376, 334, 156, 0, 315,
	341, 0, 288, 157, 194, 187, 279, 254, 150, 205,
	324, 217, 225, 293, 373, 267, 300, 160, 359, 323,
	184, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 167, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 131, 142, 222,
	0, 290, 192, 361, 0, 177, 0, 0, 0, 0,
	0, 129, 143, 155, 161, 176, 185, 191, 201, 204,
	208, 209, 210, 215, 230, 235, 236, 237, 238, 257,
	258, 261, 262, 265, 266, 272, 273, 274, 276, 277,
	278, 286, 0, 295, 302, 304, 305, 306, 308, 317,
	318, 319, 320, 328, 348, 349, 368, 369, 338, 0,
	0, 133, 0, 0, 0, 0, 0, 0, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 0,
	0, 0, 0, 220, 0, 0, 180, 169, 228, 226,
	0, 0, 0, 271, 337, 0, 0, 0, 0, 223,
	0, 0, 0, 325, 248, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 126, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 358, 275, 292, 313, 0, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 146, 0,
	123, 0, 211, 0, 0, 0, 0, 285, 0, 332,
	199, 221, 151, 128, 144, 162, 198, 260, 0, 307,
	0, 0, 0, 0, 0, 170, 0, 299, 268, 357,
	0, 0, 298, 224, 347, 0, 0, 356, 0, 0,
	366, 371, 0, 0, 0, 322, 183, 178, 182, 0,
	135, 0, 282, 175, 216, 0, 0, 0, 166, 0,
	0, 0, 321, 344, 132, 246, 345, 370, 153, 339,
	247, 253, 163, 165, 164, 145, 316, 343, 158, 168,
	326, 303, 333, 174, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 362, 0, 310, 309, 0, 206, 0,
	0, 0, 291, 0, 212, 134, 335, 374, 152, 218,
	340, 0, 193, 259, 172, 269, 270, 190, 130, 287,
	240, 241, 239, 242, 197, 0, 0, 0, 289, 312,
	342, 154, 329, 0, 0, 0, 0, 301, 0, 0,
	0, 231, 186, 189, 200, 207, 0, 296, 330, 363,
	0, 147, 136, 336, 355, 159, 311, 314, 372, 297,
	139, 353, 331, 244, 213, 214, 137, 0, 138, 294,
	179, 196, 173, 263, 0, 195, 284, 350, 351, 171,
	375, 148, 365, 141, 149, 364, 256, 0, 255, 367,
	346, 354, 245, 233, 0, 140, 352, 243, 232, 219,
	188, 202, 280, 227, 281, 203, 251, 250, 252, 229,
	234, 0, 0, 0, 327, 360, 376, 334, 156, 0,
	315, 341, 0, 288, 157, 194, 187, 279, 254, 150,
	205, 324, 217, 225, 293, 373, 267, 300, 160, 359,
	323, 184, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 167, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 131, 142,
	222, 0, 290, 192, 361, 0, 177, 0, 0, 0,
	0, 0, 129, 143, 155, 161, 176, 185, 191, 201,
	204, 208, 209, 210, 215, 230, 235, 236, 237, 238,
	257, 258, 261, 262, 265, 266, 272, 273, 274, 276,
	277, 278, 286, 0, 295, 302, 304, 305, 306, 308,
	317, 318, 319, 320, 328, 348, 349, 368, 369, 338,
	0, 0, 133, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	0, 0, 0, 0, 220, 0, 0, 180, 169, 228,
	226, 0, 0, 0, 271, 337, 0, 0, 0, 0,
	223, 0, 0, 0, 325, 248, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 726, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 358, 275, 292, 313, 0, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 146,
	0, 0, 0, 211, 0, 0, 0, 0, 285, 0,
	332, 199, 221, 151, 128, 144, 162, 198, 260, 0,
	307, 0, 0, 0, 0, 0, 170, 0, 299, 268,
	357, 0, 0, 298, 224, 347, 0, 0, 356, 0,
	0, 366, 371, 0, 0, 0, 322, 183, 178, 182,
	0, 135, 0, 282, 175, 216, 0, 0, 0, 166,
	0, 0, 0, 321, 344, 132, 246, 345, 370, 153,
	339, 247, 253, 163, 165, 164, 145, 316, 343, 158,
	168, 326, 303, 333, 174, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 362, 0, 310, 309, 0, 206,
	0, 0, 0, 291, 0, 212, 134, 335, 374, 152,
	218, 340, 0, 193, 259, 172, 269, 270, 190, 130,
	287, 240, 241, 239, 242, 197, 0, 0, 0, 289,
	312, 342, 154, 329, 0, 0, 0, 0, 301, 0,
	0, 0, 231, 186, 189, 200, 207, 0, 296, 330,
	363, 0, 147, 136, 336, 355, 159, 311, 314, 372,
	297, 139, 353, 331, 244, 213, 214, 137, 0, 138,
	294, 179, 196, 173, 263, 0, 195, 284, 350, 351,
	171, 375, 148, 365, 141, 149, 364, 256, 0, 255,
	367, 346, 354, 245, 233, 0, 140, 352, 243, 232,
	219, 188, 202, 280, 227, 281, 203, 251, 250, 252,
	229, 234, 0, 0, 0, 327, 360, 376, 334, 156,
	0, 315, 341, 0, 288, 157, 194, 187, 279, 254,
	150, 205, 324, 217, 225, 293, 373, 267, 300, 160,
	359, 323, 184, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 167,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 131,
	142, 222, 0, 290, 192, 361, 0, 177, 0, 0,
	0, 0, 0, 129, 143, 155, 161, 176, 185, 191,
	201, 204, 208, 209, 210, 215, 230, 235, 236, 237,
	238, 257, 258, 261, 262, 265, 266, 272, 273, 274,
	276, 277, 278, 286, 0, 295, 302, 304, 305, 306,
	308, 317, 318, 319, 320, 328, 348, 349, 368, 369,
	338, 0, 0, 133, 0, 0, 0, 0, 0, 0,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 0, 0, 0, 0, 220, 0, 0, 180, 169,
	228, 226, 0, 0, 0, 271, 337, 0, 0, 0,
	0, 223, 0, 0, 0, 325, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 358, 275, 292, 313, 0, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	146, 0, 0, 0, 211, 0, 0, 0, 0, 285,
	0, 332, 199, 221, 151, 128, 144, 162, 198, 260,
	0, 307, 0, 0, 0, 0, 0, 170, 0, 299,
	268, 357, 0, 0, 298, 224, 347, 0, 0, 356,
	0, 0, 366, 371, 0, 0, 0, 322, 183, 178,
	182, 0, 135, 0, 282, 175, 216, 0, 0, 0,
	166, 0, 0, 0, 321, 344, 132, 246, 345, 370,
	153, 339, 247, 253, 163, 165, 164, 145, 316, 343,
	158, 168, 326, 303, 333, 174, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 362, 0, 310, 309, 0,
	206, 0, 0, 0, 291, 0, 212, 134, 335, 374,
	152, 218, 340, 0, 193, 259, 172, 269, 270, 190,
	130, 287, 240, 241, 239, 242, 197, 0, 0, 0,
	289, 312, 342, 154, 329, 0, 0, 0, 0, 301,
	0, 0, 0, 231, 186, 189, 200, 207, 0, 296,
	330, 363, 0, 147, 136, 336, 355, 159, 311, 314,
	372, 297, 139, 353, 331, 244, 213, 214, 137, 0,
	138, 294, 179, 196, 173, 263, 0, 195, 284, 350,
	351, 171, 375, 148, 365, 141, 149, 364, 256, 0,
	255, 367, 346, 354, 245, 233, 0, 140, 352, 243,
	232, 219, 188, 202, 280, 227, 281, 203, 251, 250,
	252, 229, 234, 0, 0, 0, 327, 360, 376, 334,
	156, 0, 315, 341, 0, 288, 157, 194, 187, 279,
	254, 150, 205, 324, 217, 225, 293, 373, 267, 300,
	160, 359, 323, 184, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	167, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	131, 142, 222, 0, 290, 192, 361, 0, 177, 0,
	0, 0, 0, 0, 129, 143, 155, 161, 176, 185,
	191, 201, 204, 208, 209, 210, 215, 230, 235, 236,
	237, 238, 257, 258, 261, 262, 265, 266, 272, 273,
	274, 276, 277, 278, 286, 0, 295, 302, 304, 305,
	306, 308, 317, 318, 319, 320, 328, 348, 349, 368,
	369, 338, 0, 0, 133, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 0, 0, 0, 0, 220, 0, 0, 180,
	169, 228, 226, 0, 0, 0, 271, 337, 0, 0,
	0, 0, 223, 0, 0, 0, 325, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 558, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 358, 275, 292, 313, 0,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 146, 0, 0, 0, 211, 0, 0, 0, 0,
	285, 0, 332, 199, 221, 151, 128, 144, 162, 198,
	260, 0, 307, 0, 0, 0, 0, 0, 170, 0,
	299, 268, 357, 0, 0, 298, 224, 347, 0, 0,
	356, 0, 0, 366, 371, 0, 0, 0, 322, 183,
	178, 182, 0, 135, 0, 282, 175, 216, 0, 0,
	0, 166, 0, 0, 0, 321, 344, 132, 246, 345,
	370, 153, 339, 247, 253, 163, 165, 164, 145, 316,
	343, 158, 168, 326, 303, 333, 174, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 362, 0, 310, 309,
	0, 206, 0, 0, 0, 291, 0, 212, 134, 335,
	374, 152, 218, 340, 0, 193, 259, 172, 269, 270,
	190, 130, 287, 240, 241, 239, 242, 197, 0, 0,
	0, 289, 312, 342, 154, 329, 0, 0, 0, 0,
	301, 0, 0, 0, 231, 186, 189, 200, 207, 0,
	296, 330, 363, 0, 147, 136, 336, 355, 159, 311,
	314, 372, 297, 139, 353, 331, 244, 213, 214, 137,
	0, 138, 294, 179, 196, 173, 263, 0, 195, 284,
	350, 351, 171, 375, 148, 365, 141, 149, 364, 256,
	0, 255, 367, 346, 354, 245, 233, 0, 140, 352,
	243, 232, 219, 188, 202, 280, 227, 281, 203, 251,
	250, 252, 229, 234, 0, 0, 0, 327, 360, 376,
	334, 156, 0, 315, 341, 0, 288, 157, 194, 187,
	279, 254, 150, 205, 324, 217, 225, 293, 373, 267,
	300, 160, 359, 323, 184, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 167, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 131, 142, 222, 0, 290, 192, 361, 0, 177,
	0, 0, 0, 0, 0, 129, 143, 155, 161, 176,
	185, 191, 201, 204, 208, 209, 210, 215, 230, 235,
	236, 237, 238, 257, 258, 261, 262, 265, 266, 272,
	273, 274, 276, 277, 278, 286, 0, 295, 302, 304,
	305, 306, 308, 317, 318, 319, 320, 328, 348, 349,
	368, 369, 338, 0, 0, 133, 0, 0, 0, 0,
	0, 0, 0, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 0, 0, 0, 0, 220, 0, 0,
	180, 169, 228, 226, 0, 0, 0, 271, 337, 0,
	0, 0, 0, 223, 0, 0, 0, 325, 248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 558, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 358, 275, 292, 313,
	0, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 146, 0, 0, 0, 211, 0, 0, 0,
	0, 285, 0, 332, 199, 221, 151, 128, 144, 162,
	198, 260, 0, 307, 0, 0, 0, 0, 0, 170,
	0, 299, 268, 357, 0, 0, 298, 224, 347, 0,
	0, 356, 0, 0, 366, 371, 0, 0, 0, 322,
	183, 178, 182, 0, 135, 0, 282, 175, 216, 0,
	0, 0, 166, 0, 0, 0, 321, 344, 132, 246,
	345, 370, 153, 339, 247, 253, 163, 165, 164, 145,
	316, 343, 158, 168, 326, 303, 333, 174, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 362, 0, 310,
	309, 0, 206, 0, 0, 0, 291, 0, 212, 134,
	335, 374, 152, 218, 340, 0, 193, 259, 172, 269,
	270, 190, 130, 287, 240, 241, 239, 242, 197, 0,
	0, 0, 289, 312, 342, 154, 329, 0, 0, 0,
	0, 301, 0, 0, 0, 231, 186, 189, 200, 207,
	0, 296, 330, 363, 0, 147, 136, 336, 355, 159,
	311, 314, 372, 297, 139, 353, 331, 244, 213, 214,
	137, 0, 138, 294, 179, 196, 173, 263, 0, 195,
	284, 350, 351, 171, 375, 148, 365, 141, 709, 364,
	256, 0, 255, 367, 346, 354, 245, 233, 0, 140,
	352, 243, 232, 219, 188, 202, 280, 227, 281, 203,
	251, 250, 252, 705, 234, 0, 0, 0, 327, 360,
	376, 334, 156, 0, 315, 341, 0, 288, 157, 194,
	187, 279, 710, 708, 699, 700, 217, 225, 293, 373,
	267, 300, 160, 359, 323, 184, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 167, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 131, 142, 222, 0, 290, 192, 361, 0,
	177, 0, 0, 0, 0, 0, 129, 143, 155, 161,
	176, 185, 191, 201, 204, 208, 209, 210, 215, 230,
	235, 236, 237, 238, 257, 258, 261, 262, 265, 266,
	272, 273, 274, 276, 706, 707, 286, 0, 295, 302,
	304, 305, 306, 308, 317, 318, 319, 320, 328, 348,
	349, 368, 369, 338, 0, 0, 133, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 0, 0, 0, 0, 220, 0,
	0, 180, 169, 228, 226, 0, 0, 0, 271, 337,
	0, 0, 0, 0, 223, 0, 0, 0, 325, 248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 558, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 358, 275, 292,
	313, 0, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 146, 0, 0, 0, 211, 0, 0,
	0, 0, 285, 0, 332, 199, 221, 151, 128, 144,
	162, 198, 260, 0, 307, 0, 0, 0, 0, 0,
	170, 0, 299, 268, 357, 0, 0, 298, 224, 347,
	0, 0, 356, 0, 0, 366, 371, 0, 0, 0,
	322, 183, 178, 182, 0, 135, 0, 282, 175, 216,
	0, 0, 0, 166, 0, 0, 0, 321, 344, 132,
	246, 345, 370, 153, 339, 247, 253, 163, 165, 164,
	145, 316, 343, 158, 168, 326, 303, 333, 174, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 362, 0,
	310, 309, 0, 206, 0, 0, 0, 291, 0, 212,
	134, 335, 374, 152, 218, 340, 0, 193, 259, 172,
	269, 270, 190, 130, 287, 240, 241, 239, 242, 197,
	0, 0, 0, 289, 312, 342, 154, 329, 0, 0,
	0, 0, 301, 0, 0, 0, 231, 186, 189, 200,
	207, 0, 296, 330, 363, 0, 147, 136, 336, 1239,
	159, 311, 314, 372, 297, 139, 353, 331, 244, 213,
	214, 137, 0, 138, 294, 179, 196, 173, 263, 0,
	195, 284, 350, 351, 171, 375, 148, 365, 141, 149,
	364, 256, 0, 255, 367, 346, 354, 245, 233, 0,
	140, 352, 243, 232, 219, 188, 202, 280, 227, 281,
	203, 251, 250, 252, 229, 234, 0, 0, 0, 327,
	360, 376, 334, 156, 0, 315, 341, 0, 288, 157,
	194, 187, 279, 254, 150, 205, 324, 217, 225, 293,
	373, 267, 300, 160, 359, 323, 184, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 131, 142, 222, 0, 290, 192, 361,
	0, 177, 0, 0, 0, 0, 0, 129, 143, 155,
	161, 176, 185, 191, 201, 204, 208, 209, 210, 215,
	230, 235, 236, 237, 238, 257, 258, 261, 262, 265,
	266, 272, 273, 274, 276, 277, 278, 286, 0, 295,
	302, 304, 305, 306, 308, 317, 318, 319, 320, 328,
	348, 349, 368, 369, 338, 0, 0, 133, 0, 0,
	0, 0, 0, 0, 0, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 0, 0, 0, 0, 220,
	0, 0, 180, 169, 228, 226, 0, 0, 0, 271,
	337, 0, 0, 0, 0, 223, 0, 0, 0, 325,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 558,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 358, 275,
	292, 313, 0, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 146, 0, 0, 0, 211, 0,
	0, 0, 0, 285, 0, 332, 199, 221, 151, 128,
	144, 162, 198, 260, 0, 307, 0, 0, 0, 0,
	0, 170, 0, 299, 268, 357, 0, 0, 298, 224,
	347, 0, 0, 356, 0, 0, 366, 371, 0, 0,
	0, 322, 183, 178, 182, 0, 135, 0, 282, 175,
	216, 0, 0, 0, 166, 0, 0, 0, 321, 344,
	132, 246, 345, 370, 153, 339, 247, 253, 163, 165,
	164, 145, 316, 343, 158, 168, 326, 303, 333, 174,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 362,
	0, 310, 309, 0, 206, 0, 0, 0, 291, 0,
	212, 134, 335, 374, 152, 218, 340, 0, 193, 259,
	172, 269, 270, 190, 130, 287, 240, 241, 239, 242,
	197, 0, 0, 0, 289, 312, 342, 154, 329, 0,
	0, 0, 0, 301, 0, 0, 0, 231, 186, 189,
	200, 207, 0, 296, 330, 363, 0, 147, 136, 336,
	696, 159, 311, 314, 372, 297, 139, 353, 331, 244,
	213, 214, 137, 0, 138, 294, 179, 196, 173, 263,
	0, 195, 284, 350, 351, 171, 375, 148, 365, 141,
	709, 364, 256, 0, 255, 367, 346, 354, 245, 233,
	0, 140, 352, 243, 232, 219, 188, 202, 280, 227,
	281, 203, 251, 250, 252, 705, 234, 0, 0, 0,
	327, 360, 376, 334, 156, 0, 315, 341, 0, 288,
	157, 194, 187, 279, 710, 708, 699, 700, 217, 225,
	293, 373, 267, 300, 160, 359, 323, 184, 534, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2309, 0, 0, 0, 2311,
	0, 0, 0, 0, 167, 0, 0, 0, 539, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 490, 0, 0, 0,
	0, 0, 0, 0, 131, 142, 222, 0, 290, 192,
	361, 0, 177, 0, 498, 0, 0, 0, 129, 143,
	155, 161, 176, 185, 191, 201, 204, 208, 209, 210,
	215, 230, 235, 236, 237, 238, 257, 258, 261, 262,
	265, 266, 272, 273, 274, 276, 706, 707, 286, 0,
	295, 302, 304, 305, 306, 308, 317, 318, 319, 320,
	328, 348, 349, 368, 369, 0, 0, 0, 133, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 538,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 496, 479, 0, 0,
	0, 0, 0, 0, 0, 0, 500, 0, 0, 0,
	0, 0, 0, 0, 0, 525, 0, 0, 491, 0,
	486, 0, 0, 0, 0, 0, 0, 499, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 503, 501, 0, 0, 0,
	504, 0, 0, 1940, 0, 0, 512, 480, 0, 516,
	0, 0, 539, 0, 0, 0, 0, 478, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 36,
	490, 494, 518, 0, 0, 0, 0, 0, 0, 492,
	493, 495, 522, 57, 524, 530, 0, 0, 498, 74,
	0, 0, 39, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 77, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2773, 481, 0,
	0, 0, 2998, 538, 0, 0, 0, 0, 502, 0,
	0, 0, 1255, 0, 0, 0, 0, 0, 0, 0,
	496, 479, 0, 0, 0, 0, 0, 0, 0, 0,
	500, 0, 0, 0, 0, 0, 0, 0, 0, 525,
	0, 0, 491, 0, 486, 0, 0, 0, 0, 531,
	532, 499, 0, 0, 0, 482, 483, 484, 485, 487,
	505, 506, 510, 511, 528, 527, 526, 529, 533, 536,
	535, 537, 488, 489, 497, 507, 508, 509, 513, 514,
	523, 519, 521, 41, 70, 44, 43, 46, 0, 503,
	501, 0, 0, 0, 504, 0, 0, 0, 2774, 0,
	512, 480, 0, 516, 0, 0, 0, 0, 0, 0,
	0, 478, 0, 0, 47, 73, 72, 0, 0, 0,
	0, 45, 0, 0, 0, 494, 518, 0, 0, 520,
	0, 0, 0, 492, 493, 495, 522, 0, 524, 530,
	0, 0, 0, 0, 36, 0, 0, 0, 0, 0,
	0, 515, 517, 0, 0, 0, 0, 534, 57, 0,
	0, 0, 0, 0, 74, 0, 0, 39, 0, 0,
	0, 0, 55, 56, 0, 2775, 0, 0, 1313, 0,
	0, 0, 0, 0, 0, 0, 0, 539, 0, 64,
	0, 65, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 490, 77, 0, 0, 0,
	0, 0, 481, 0, 0, 0, 66, 0, 0, 0,
	0, 0, 502, 498, 0, 0, 0, 0, 0, 0,
	0, 0, 2773, 0, 0, 0, 0, 2992, 0, 0,
	0, 0, 0, 0, 2776, 71, 0, 51, 52, 59,
	0, 60, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 531, 532, 0, 0, 0, 0, 482,
	483, 484, 485, 487, 505, 506, 510, 511, 528, 527,
	526, 529, 533, 536, 535, 537, 488, 489, 497, 507,
	508, 509, 513, 514, 523, 519, 521, 0, 538, 0,
	0, 0, 0, 0, 0, 0, 0, 1255, 0, 0,
	0, 0, 0, 0, 0, 496, 479, 0, 41, 70,
	44, 43, 46, 0, 0, 500, 0, 0, 0, 0,
	0, 0, 0, 2774, 525, 0, 0, 491, 0, 486,
	0, 0, 0, 520, 0, 0, 499, 0, 0, 47,
	73, 72, 0, 0, 0, 0, 45, 0, 0, 0,
	0, 0, 0, 0, 0, 515, 517, 0, 0, 0,
	0, 534, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 503, 501, 0, 0, 0, 504,
	0, 0, 2311, 75, 0, 512, 480, 0, 516, 0,
	0, 539, 0, 0, 0, 0, 478, 55, 56, 0,
	2775, 0, 0, 0, 0, 0, 0, 0, 0, 490,
	494, 518, 0, 0, 64, 0, 65, 0, 492, 493,
	495, 522, 0, 524, 530, 0, 0, 498, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 66, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2776,
	71, 0, 51, 52, 59, 0, 60, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 481, 0, 0,
	0, 0, 538, 0, 0, 0, 0, 502, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 496,
	479, 0, 0, 0, 0, 0, 0, 0, 0, 500,
	0, 0, 0, 0, 0, 0, 0, 0, 525, 0,
	0, 491, 0, 486, 0, 0, 0, 0, 531, 532,
	499, 0, 0, 0, 482, 483, 484, 485, 487, 505,
	506, 510, 511, 528, 527, 526, 529, 533, 536, 535,
	537, 488, 489, 497, 507, 508, 509, 513, 514, 523,
	519, 521, 0, 0, 0, 0, 0, 0, 503, 501,
	0, 0, 0, 504, 0, 0, 0, 0, 0, 512,
	480, 0, 516, 0, 0, 0, 0, 0, 0, 0,
	478, 0, 0, 0, 0, 0, 0, 0, 75, 0,
	0, 0, 0, 0, 494, 518, 0, 0, 520, 0,
	0, 0, 492, 493, 495, 522, 0, 524, 530, 0,
	0, 0, 0, 36, 0, 0, 0, 0, 0, 0,
	515, 517, 0, 0, 0, 0, 534, 57, 0, 0,
	0, 0, 0, 74, 0, 0, 39, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2320, 0, 0,
	0, 0, 0, 0, 0, 0, 539, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 490, 77, 0, 0, 0, 0,
	0, 481, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 502, 498, 0, 0, 0, 0, 0, 0, 0,
	0, 2773, 0, 0, 0, 0, 2978, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 531, 532, 0, 0, 0, 0, 482, 483,
	484, 485, 487, 505, 506, 510, 511, 528, 527, 526,
	529, 533, 536, 535, 537, 488, 489, 497, 507, 508,
	509, 513, 514, 523, 519, 521, 0, 538, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 496, 479, 0, 41, 70, 44,
	43, 46, 0, 0, 500, 0, 0, 0, 0, 0,
	0, 0, 2774, 525, 0, 0, 491, 0, 486, 0,
	0, 0, 520, 0, 0, 499, 0, 0, 47, 73,
	72, 0, 0, 0, 0, 45, 0, 0, 0, 0,
	0, 0, 0, 0, 515, 517, 0, 0, 0, 0,
	534, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 503, 501, 0, 0, 0, 504, 0,
	0, 2318, 0, 0, 512, 480, 0, 516, 0, 0,
	539, 0, 0, 0, 0, 478, 55, 56, 0, 2775,
	0, 0, 0, 0, 0, 0, 0, 0, 490, 494,
	518, 0, 0, 64, 0, 65, 0, 492, 493, 495,
	522, 0, 524, 530, 0, 0, 498, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	66, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2776, 71,
	0, 51, 52, 59, 0, 60, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 481, 0, 0, 0,
	0, 538, 0, 0, 0, 0, 502, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 496, 479,
	0, 0, 0, 0, 0, 0, 0, 0, 500, 0,
	0, 0, 0, 0, 0, 0, 0, 525, 0, 0,
	491, 0, 486, 0, 0, 0, 0, 531, 532, 499,
	0, 0, 0, 482, 483, 484, 485, 487, 505, 506,
	510, 511, 528, 527, 526, 529, 533, 536, 535, 537,
	488, 489, 497, 507, 508, 509, 513, 514, 523, 519,
	521, 0, 0, 0, 0, 0, 0, 503, 501, 0,
	0, 0, 504, 0, 0, 0, 0, 0, 512, 480,
	0, 516, 0, 0, 0, 0, 0, 0, 0, 478,
	0, 0, 0, 0, 0, 0, 0, 75, 0, 0,
	0, 36, 0, 494, 518, 0, 0, 520, 0, 0,
	0, 492, 493, 495, 522, 57, 524, 530, 0, 0,
	0, 74, 36, 0, 39, 0, 0, 0, 0, 515,
	517, 0, 0, 0, 0, 0, 57, 0, 0, 0,
	0, 0, 74, 0, 0, 39, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 77, 2967, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 77, 0, 0, 0, 0, 2773,
	481, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	502, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2773, 0, 0, 0, 0, 2908, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 531, 532, 0, 0, 0, 0, 482, 483, 484,
	485, 487, 505, 506, 510, 511, 528, 527, 526, 529,
	533, 536, 535, 537, 488, 489, 497, 507, 508, 509,
	513, 514, 523, 519, 521, 41, 70, 44, 43, 46,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2774, 0, 0, 0, 0, 0, 41, 70, 44, 43,
	46, 0, 0, 0, 0, 0, 47, 73, 72, 0,
	36, 2774, 0, 45, 0, 0, 0, 0, 0, 0,
	0, 520, 0, 0, 57, 0, 0, 47, 73, 72,
	74, 0, 0, 39, 45, 0, 0, 0, 0, 0,
	0, 0, 0, 515, 517, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 55, 56, 0, 2775, 0, 0,
	0, 0, 77, 0, 0, 0, 0, 0, 0, 0,
	0, 64, 0, 65, 0, 55, 56, 0, 2775, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2773, 0,
	0, 0, 64, 0, 65, 0, 0, 0, 66, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 66,
	0, 0, 0, 0, 0, 0, 2776, 71, 0, 51,
	52, 59, 0, 60, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2776, 71, 0,
	51, 52, 59, 0, 60, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 41, 70, 44, 43, 46, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2774,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 47, 73, 72, 0, 0,
	0, 0, 45, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 55, 56, 0, 2775, 0, 0, 0,
	0, 0, 0, 0, 0, 75, 0, 0, 0, 0,
	64, 0, 65, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 75, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 66, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2776, 71, 0, 51, 52,
	59, 0, 60, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 75,
}

var yyPact = [...]int{
	3761, -1000, -355, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1936, -1000, -1000, 255, -1000,
	1109, 216, -1000, 284, 143, 33091, 652, 3263, 34173, -1000,
	-1000, -1000, 182, 438, 34173, 437, 454, 1365, 1793, 1363,
	28, -64, -66, 139, 25516, 24970, 8, -1000, 2005, 2009,
	532, 34, -1000, -1000, -1000, 22256, 220, -1000, -1000, 1912,
	1934, 1721, -1000, 14682, -1000, -1000, -1000, -1000, -1000, 36337,
	-1000, 2006, 34173, 13057, -1000, 587, 572, -175, 464, 464,
	267, 464, 464, 619, -1000, 292, 1036, -1000, -1000, -1000,
	-1000, 1016, 34173, 28763, 470, 33632, 470, 470, 470, 470,
	470, 470, 470, 34173, -1000, 719, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 34173, 1361, 1837,
	1031, 105, -1000, -1000, -1000, 1025, -1000, 341, 334, 331,
	313, 76, 1055, 1909, -1000, 1617, 1912, 1912, -1000, -1000,
	-1000, -1000, -1000, -1000, 870, 304, 567, 220, 220, 1011,
	1863, 1835, 1834, 1276, 1833, 571, 1830, 1655, -46, -1000,
	1359, 34173, -1000, -1000, 1233, 1230, 1685, 1532, 662, 1676,
	-1000, -1000, 327, 451, 1650, 416, 1650, 1650, 1650, 1650,
	1650, -71, 1650, 1650, 1650, 71, 1650, 156, 1650, 1650,
	1650, 1650, 1650, 1379, -1000, -1000, -1000, 328, 1527, 1579,
	1674, 248, -1000, -1000, -1000, -1000, 1639, 1885, 597, -1000,
	-133, 1606, 23338, -1000, 1617, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1387, -1000, 2005, 1831, 1150, 17928, 1760, -1000, -1000, 1110,
	1976, -1000, 20633, 718, -1000, 17928, 3584, 1617, -1000, -1000,
	1617, -1000, -1000, -1000, 666, -1000, -1000, 20092, 20092, 20092,
	20092, 20092, 20092, 20092, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1617, 1617,
	1617, 1617, 1617, 1617, 1617, 1617, 1617, 1617, 1617, 1617,
	1617, 1617, 1617, 1617, 1617, 1617, 1617, 1617, 1617, 1617,
	1617, 1617, 1617, 1617, 1617, 1617, 1617, 1617, 1617, 1617,
	-1000, -1000, 1617, -1000, 14141, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1617, 1617, 1617,
	1617, 1617, 1617, 1617, 1617, 1617, 1617, 17928, 1617, 1617,
	1617, 1617, 1617, 1617, 1617, 1617, 1617, 1617, 1617, 1617,
	1617, 1617, 532, 532, 32550, 1614, -118, 35796, -1000, -1000,
	-1000, -1000, 34714, 28222, 996, -1000, -1000, -1000, -1000, 1829,
	-1000, -1000, 715, -1000, 1936, -1000, -1000, 1473, 445, -1000,
	3515, 37226, -1000, -1000, -1000, 1654, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 33632, 34173, 243, 1358, 1053,
	1357, 34714, 34714, -1000, 269, 28763, 28763, 464, 274, 28763,
	225, 1612, 566, 1610, 565, 1371, 34173, 1856, 1673, 34173,
	1355, 1353, 34714, 34714, 28763, 28763, -1000, 12506, 1609, -1000,
	-1000, 1031, -1000, 4227, 17928, 464, 464, 34173, 34173, 34173,
	34173, 34173, -1000, -1000, 1031, 1031, 1031, 1031, 1019, 1974,
	1019, -1000, 1019, -1000, -1000, 17928, -1000, 20092, 27681, 862,
	-1000, -1000, 34173, -1000, 1352, 301, -1000, -1000, -1000, -1000,
	-1000, -1000, 1351, -1000, 1797, 571, 571, -1000, 1298, 571,
	1601, -1000, 982, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 571, -1000, 17387, -343, -1000,
	-1000, 1608, -1000, 295, -1000, -1000, 518, 518, 221, 28763,
	28763, 28763, -1000, 1650, 33632, -1000, 1650, 1650, 1650, -74,
	1650, 1650, -1000, -1000, 1650, -1000, -1000, -1000, -1000, -1000,
	1650, -1000, -1000, -1000, 1650, 1650, -1000, 1650, 1650, -1000,
	-1000, -1000, -1000, -1000, 28763, 518, 178, 1607, 518, 28763,
	28763, -1000, 60, 59, 58, 52, -1000, -1000, -1000, -1000,
	50, 49, -1000, -1000, 1721, -1000, -1000, 220, -1000, -1000,
	34173, -124, 23338, 1606, 1878, 10853, -1000, -1000, 1098, 1986,
	925, 1555, -1000, -1000, 1605, -1000, 1145, 714, 1228, 1734,
	-1000, -1000, -1000, 34173, -1000, 17928, 17928, 17928, 1131, -1000,
	23879, -1000, -1000, -1000, -1000, 10302, 930, 20092, 1142, 1009,
	20092, 20092, 20092, 20092, 20092, 20092, 20092, 20092, 20092, 20092,
	20092, 20092, 20092, 20092, 20092, 1239, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1349, -1000, 220, 1315, 1315, 790,
	790, 790, 790, 790, 790, 5283, 1871, 15764, 15764, 15764,
	1871, 1387, 1387, 15764, 15764, 15764, 15764, 15764, 15764, 15764,
	15764, 1871, 1871, 15764, 1387, 1387, 1387, 1387, 15764, 15764,
	15764, 15764, 33632, 33632, 1871, 15764, 15764, 15764, 1871, 1387,
	1471, 976, 14141, 15764, 15764, 1387, 17928, 17928, 16846, 16305,
	18469, 15764, 1871, 1014, 976, 34714, -1000, -1000, 19551, -1000,
	-1000, -1000, -1000, -1000, 1387, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 15764, 15764, 15764, 15764, 32009, 29304, 34173,
	1502, 1429, -1000, 712, 35255, 1587, -1000, -127, -138, -118,
	-1000, -1000, 803, -1000, -1000, -1000, 13599, -1000, 11404, 1912,
	1721, 7547, 11955, -1000, 37226, 1654, -1000, -54, -1000, -1000,
	-1000, 1641, -1000, 1641, 286, -10, 1641, 1641, 1641, 1641,
	1641, -4, -4, -4, -4, -7, -1000, -1000, -1000, -1000,
	-1000, 1653, 1652, -1000, 1641, 1641, 1641, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1648, 337, 1645, 1645,
	1645, 1645, 1645, 433, 433, -1000, 17928, 1657, 1877, 570,
	274, 1844, 1854, 1844, 329, -1000, 711, 1651, -1000, 706,
	290, 1558, -1000, 183, 1501, 34173, -1000, -1000, -1000, -1000,
	-1000, 34173, 34173, 28763, 28763, 28763, 519, -1000, 34173, 1603,
	-1000, -1000, -1000, -1000, -1000, 1544, -1000, 1501, -1000, -1000,
	-1000, 34173, -1000, -1000, 1296, 976, 1347, 1346, 1863, -1000,
	-1000, -1000, 1023, -1000, -1000, -1000, -1000, 1031, 34173, 34173,
	34173, 1863, 1031, 976, 787, 1658, 1617, 1387, -1000, -1000,
	-1000, 1345, -1000, 20092, 1601, 1601, -1000, 1601, 571, 1315,
	1601, -1000, 1469, 1093, 1294, 34173, -1000, 23338, -47, -1000,
	-155, 31468, -1000, -1000, -1000, 31468, -1000, 71, 172, -1000,
	564, -1000, 1467, -1000, -1000, -1000, -1000, 1650, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 31468, 109, 169,
	31468, 1544, 1971, -1000, -1000, -1000, -1000, 1905, -1000, 1871,
	1387, 266, -1000, -1000, -1000, 1617, 1449, 701, -1000, 30927,
	-1000, 1728, 1150, 1150, 17928, -1000, -1000, -1000, 11404, 1908,
	-1000, 1744, 1742, 1616, -1000, -1000, 930, 1077, 1030, -1000,
	-1000, 1157, -1000, -1000, -1000, -1000, 700, 1617, -1000, 3685,
	-1000, -1000, -1000, -1000, 1142, 20092, 20092, 20092, 787, 3685,
	3712, 1029, 928, 790, 960, 960, 859, 859, 859, 859,
	859, 851, 851, -1000, -1000, -1000, 1387, -1000, -1000, -1000,
	15764, 1465, -1000, -1000, 976, 695, 1465, 1465, 15764, -196,
	-196, 1465, 1387, 1465, 1465, 1465, 1465, 1387, 1465, 15764,
	15764, 1465, -196, -196, -196, -196, 1465, 1465, 1465, 1465,
	1600, 1590, 15764, 1465, 1465, 1465, 15764, -1000, 17928, -1000,
	1387, 1465, 1465, -1000, 1038, 1251, 853, 1970, 1465, 841,
	1969, 1465, 1137, 20092, 20092, 20092, 1465, 15764, 1043, -1000,
	17928, 1387, -1000, 1427, 1465, 1387, 1588, 1465, 1465, 905,
	34173, -1000, 1536, 1604, -1000, -1000, -1000, 1865, 26599, -1000,
	21715, -1000, 1617, 905, 1520, 29304, -1000, -1000, 29304, 34173,
	9751, -1000, 34714, -118, -149, -1000, -1000, 1587, -1000, 1259,
	-1000, -1000, 976, -1000, 694, 1831, 1871, 1586, 6445, -1000,
	-1000, -1000, -1000, 445, -1000, -1000, -1000, 1649, 36931, -1000,
	1762, 730, 730, 696, 1308, 1757, -1000, -1000, 166, -60,
	-1000, -1000, -1000, 1229, -4, -4, 1641, 1641, 285, 1641,
	-1000, -4, -1000, -1000, -1000, 852, 1827, 832, 829, 827,
	821, -4, 1293, 1293, -1000, -1000, -1000, -1000, 1224, -1000,
	1648, -1000, 1221, -1000, -1000, -1000, -1000, -1000, -1000, 1227,
	1672, 33632, -1000, 34173, -1000, 1844, -1000, -1000, -1000, 135,
	-1000, -1000, -1000, 1958, -1000, -1000, 33632, 27140, 33632, -1000,
	-1000, 77, 28763, 187, 339, 222, -1000, 556, -1000, 554,
	-1000, -1000, -1000, -1000, -1000, -1000, 34173, 28763, -1000, -1000,
	-1000, -1000, -1000, 1949, 1342, 1335, -1000, -1000, -1000, 1019,
	1031, -1000, -1000, 20092, 28763, -1000, 324, -1000, 3685, -1000,
	-1000, -1000, 905, 589, -1000, -1000, -65, -1000, -1000, 553,
	691, 690, 551, -1000, 92, 28763, -1000, 33632, -1000, 1968,
	1966, 108, 1965, 28763, -1000, 38, 1734, -1000, 1584, -1000,
	802, 727, 825, 374, 374, -1000, 938, 374, 1806, 1799,
	904, -1000, 215, -1000, 10853, 10853, 1583, 1287, 1285, -1000,
	1726, -1000, -1000, -1000, 34173, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 9200, 15764, -1000, 787, 3685, 3651,
	-1000, 20092, -1000, 1465, 15764, -196, 8649, -196, -196, 1465,
	-1000, 30386, -1000, -1000, -196, -1000, -196, -196, -196, -196,
	-196, 1465, 1465, -196, -1000, -1000, -1000, -1000, -196, -196,
	-196, -196, 20092, 20092, 1465, -196, -196, -196, 1387, 976,
	-1000, -1000, -1000, 362, 1239, 362, 20092, 20092, -1000, 20092,
	20092, -1000, -1000, 20092, 3460, 3383, 3146, -241, 1549, 977,
	-1000, 17928, 1236, -1000, -1000, -1000, -1000, -1000, -1000, 207,
	1617, -1000, 11404, 29304, 29304, 29304, 29304, 29304, -1000, 1716,
	1715, -1000, 1700, 1699, 1711, 23338, 1461, 1387, 302, 26599,
	-1000, 1617, -1000, 22797, 675, 586, 583, 573, 15764, 1949,
	29304, 1497, 1497, -1000, 676, -1000, -1000, -1000, -142, -143,
	-1000, -1000, -1000, 10853, -1000, 7547, -1000, 7547, -1000, 24420,
	533, 1765, 428, 1308, 1308, -1000, -1000, 1308, -1000, 1308,
	-1000, -1000, -1000, 1647, -1000, 1104, -1000, -1000, -1000, -1000,
	-1000, 1617, -349, 1220, 20092, 1985, -1000, 1761, -1000, 1759,
	1758, 1283, -1000, -1000, 1488, 819, 816, -4, -1000, -1000,
	1641, -1000, 813, -1000, -1000, 861, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 809, 1459, -1000, 1457, 1551, -1000,
	1455, 118, 34173, -1000, -1000, 1864, -1000, -1000, -1000, 1817,
	938, 938, 938, 1671, -1000, -1000, -1000, -1000, 1413, 1548,
	-1000, 3515, 33632, 33632, 33632, -1000, -246, 208, -1000, 28763,
	125, 183, 370, 1323, 34173, 28763, -1000, -1000, -1000, 17928,
	-1000, -1000, 1863, -1000, 3685, 1501, -1000, -1000, -4, 34173,
	-1000, 28763, 842, 29845, 28763, 106, 168, -1000, 28763, 28763,
	1964, 28763, 1544, 1281, 1616, 266, 36717, 1308, 667, -1000,
	-1000, 439, -1000, 4506, 1757, 1322, 37949, 37735, 33632, 1756,
	1754, 1314, 34173, 33632, -1000, -1000, 37440, 1313, 17928, -1000,
	33632, -1000, -1000, 33632, 674, -1000, 33632, -1000, -1000, -1000,
	-1000, 1119, 14682, -1000, -1000, 1387, -1000, 20092, 3685, -196,
	-1000, -1000, -1000, -1000, 673, -1000, -1000, -196, -1000, -1000,
	1312, -1000, -1000, -1000, -1000, -1000, -1000, -196, -196, -1000,
	-1000, -1000, -1000, -1000, 3281, 3249, -196, -1000, -1000, -1000,
	-1000, 1387, 1641, 1641, -1000, 1641, 1645, -1000, 1641, 17,
	1641, 16, 1387, 1387, 3131, 2511, 1576, 1514, 1427, 20092,
	20092, 20092, 1617, -192, -1000, 976, 17928, 1670, 11404, 1617,
	6996, -1000, 33632, 1556, -1000, 962, 939, 1604, 1644, 1669,
	1444, -1000, -1000, -1000, -1000, 1703, -1000, 1702, -1000, -1000,
	1621, -1000, -1000, 1547, 1617, 33632, 20092, 675, -1000, 1617,
	1617, 1617, 1387, 1936, 1497, -1000, -1000, 815, -1000, -1000,
	-1000, 6445, -1000, 1453, -1000, 1641, 1641, 1753, -1000, 730,
	-1000, -1000, -1000, -1000, -1000, 33632, -1000, 20092, 1862, -1000,
	3685, -112, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 797, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -4,
	1279, -4, 1211, -1000, 1207, -1000, -1000, -294, 1638, 220,
	-1000, 938, 849, 830, 1278, 34173, 137, 27140, -1000, 3515,
	3515, 3515, 126, 151, -1000, 1083, -1000, -1000, -1000, 1277,
	1275, 1274, 1501, 189, 1082, 144, -1000, 1859, -1000, -1000,
	976, 1031, -76, -1000, 168, -1000, -1000, -1000, 168, -1000,
	-1000, 164, 1544, 1544, 28763, 1544, -1000, -1000, -1000, 37440,
	418, 3515, 3515, 1657, 730, 1750, 428, -1000, -1000, -1000,
	-1000, -1000, -1000, 1311, -1000, 697, -1000, 543, 418, 37440,
	976, 814, 1092, 10853, -1000, 1961, -1000, -1000, -1000, 3685,
	-1000, 8098, -1000, 902, -1000, -1000, -1000, 20092, 20092, -1000,
	-1000, -1000, 283, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 20092, 20092, 20092, 20092, -1000, 1427, 1427, 1427, 20092,
	1387, 1273, 976, -1000, 1849, 1491, 1535, -1000, -1000, 15223,
	1387, 1738, 1449, -1000, 22256, 1447, -1000, 1936, 11404, 17928,
	17928, -1000, -1000, 17928, 1625, -1000, 17928, -1000, -1000, -1000,
	-1000, 33632, 300, -1000, 17928, 1447, 1456, -1000, 33632, 33632,
	33632, -1000, 1912, -1000, 574, 24420, 1848, 1848, 1308, 1308,
	1445, -1000, 1427, 1617, -1000, 1617, 1617, -1000, -1000, 767,
	-1000, 765, 1397, 1395, -1000, 24420, -1000, -1000, 801, -1000,
	-1000, -1000, -1000, -1000, 1901, -1000, 137, -1000, 1271, 273,
	279, -1000, 272, 271, 268, 244, 260, -1000, -1000, -1000,
	-1000, 364, 126, -1000, -77, 1206, 948, 1824, 151, -1000,
	1195, 1193, 1178, 1171, 217, -1000, -1000, -1000, -1000, 219,
	183, -1000, 369, 1270, -1000, 1784, 1781, 1861, 1861, 103,
	1544, 1494, 1389, -1000, -1000, 1309, -1000, -1000, 1623, 1308,
	1308, -1000, 1306, -1000, -1000, 33632, -1000, 418, 1841, 1840,
	1617, -1000, 1949, 29304, 14682, -1000, -1000, 1936, 1930, 1427,
	1427, -1000, -1000, 1427, 1427, 1427, 1427, -1000, -1000, -1000,
	188, -1000, -1000, 1747, -1000, 1617, -1000, -1000, 1617, 214,
	-1000, 33632, 1912, -1000, 976, 976, 976, 33632, 976, 1423,
	1617, 21174, -1000, 23338, 1421, 1421, 1421, -1000, 574, -1000,
	1305, 938, 1264, -1000, -1000, -1000, -1000, -1000, 367, 33632,
	-348, 20092, -1000, -1000, -1000, -1000, -1000, -1000, 1416, -1000,
	220, -1000, -1000, 305, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1792, 1787, 288, -1000, 1263, 1262, -1000, 411, 1209,
	698, -205, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 361, 1303, -1000, 138, -1000, -1000, 472,
	1768, 1763, 1924, -1000, 28763, -1000, -1000, 29304, -1000, -1000,
	166, 166, 24420, 1657, 1622, -1000, -1000, -1000, 20092, -1000,
	901, 1944, 1543, -1000, 891, 17928, -1000, -1000, -1000, -1000,
	-1000, -1000, 1387, 205, -257, 1983, -1000, 1535, 1617, -1000,
	220, -1000, -1000, 1412, -1000, -1000, -1000, 675, -1000, -1000,
	-1000, -1000, -1000, 1168, -1000, 34173, -1000, -1000, -1000, -1000,
	1427, 574, -1000, 298, 38464, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1156, -1000, -1000, 1161, 394, 128, -1000,
	1860, -1000, 1621, 1143, 1781, 1923, 1777, 1771, -1000, 1254,
	-247, 1497, 1408, 1620, 24420, 3685, 1406, -1000, 33632, 1941,
	1921, -1000, 1387, 180, 180, 1541, -1000, 1725, -244, -275,
	11404, 1535, 1387, -1000, -1000, -1000, 1619, -348, -1000, 574,
	-1000, 287, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 17928, 17928, 5894, 38464, 114, -1000, 113,
	-1000, -1000, -1000, 1246, -1000, 983, -1000, 1238, -1000, 1917,
	1916, -1000, 170, 1944, 574, 24420, 1404, -1000, 901, 1737,
	-202, 17928, 17928, -1000, -1000, 181, -1000, 884, 297, 881,
	-1000, 1315, -1000, -1000, 1724, -1000, 1533, -1000, 33632, -1000,
	-1000, 1302, 1301, -1000, 1212, 1187, 204, 196, 430, -1000,
	-1000, -1000, -1000, -357, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1213, 1158, 26057, 1941, -1000, 1394, 574, -1000, 335,
	-1000, 33632, -1000, 976, 1531, -1000, 976, 1056, -1000, -1000,
	-1000, -1000, -1000, 33632, -248, 1385, -1000, -1000, -1000, 1015,
	-1000, 17928, 38464, 1894, 1890, 1884, 1832, 10853, 38276, -1000,
	-1000, -1000, -1000, 94, 1501, -202, 574, -1000, 347, 1523,
	-1000, 1858, 17928, 181, -1000, -258, 1666, 211, 1049, 38464,
	-1000, 1123, -358, 435, 220, 623, 20092, -1000, -1000, -1000,
	28763, -1000, -1000, 1617, 33632, 1617, -1000, -1000, -276, 1664,
	1660, 1954, -1000, -1000, -1000, -1000, -1000, -1000, 38464, -1000,
	-1000, -359, 38464, 3958, -1000, -1000, -1000, 38255, -1000, -1000,
	-1000, -1000, 186, -1000, -1000, 3685, 1501, 19010, -1000, -1000,
	-1000, -1000, 1982, -1000, 1959, 548, 548, -1000, -360, 37767,
	-361, 458, 38464, 971, -1000, 17928, -1000, 623, -1000, 1427,
	1387, -1000, -1000, -1000, 419, 1164, -1000, 37258, 1048, 38464,
	-1000, -363, 447, 38464, -1000, 937, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 37023, -1000, -364, 38464, 444, 4833,
	-366, -1000, 436, 38464, -1000,
}

var yyPgo = [...]int{
	0, 2374, 2370, 15, 2368, 250, 2367, 2366, 12, 2364,
	29, 25, 23, 32, 2363, 2158, 2154, 2149, 2145, 2129,
	2361, 7, 2359, 2358, 2127, 2357, 2356, 2122, 2115, 2093,
	2077, 2355, 2353, 2351, 2068, 2060, 2057, 10, 2348, 31,
	2347, 4, 162, 188, 2346, 2, 2345, 2344, 11, 2343,
	2342, 2053, 2340, 2339, 2338, 110, 2337, 2048, 2041, 2336,
	2036, 2034, 2335, 2334, 2029, 2027, 2025, 2332, 185, 2330,
	2329, 2328, 157, 117, 164, 2327, 2324, 2323, 129, 98,
	2020, 127, 63, 128, 215, 2322, 19, 62, 248, 2321,
	142, 2319, 125, 2317, 120, 2316, 171, 2315, 152, 191,
	104, 2312, 2311, 181, 2310, 2306, 2302, 119, 2301, 2300,
	182, 60, 2299, 2298, 139, 2297, 56, 179, 50, 51,
	2296, 2294, 2293, 2291, 2290, 34, 875, 2289, 126, 159,
	2287, 2283, 101, 2282, 2281, 200, 2280, 2279, 2277, 149,
	53, 2276, 2273, 52, 2270, 49, 58, 2268, 45, 2267,
	155, 2266, 2265, 39, 35, 2264, 80, 2263, 57, 2262,
	150, 296, 1226, 2261, 27, 13, 9, 2259, 46, 14,
	17, 54, 28, 78, 59, 147, 103, 2258, 36, 48,
	146, 99, 2257, 107, 82, 44, 2254, 166, 2253, 84,
	170, 151, 154, 169, 2252, 2251, 2250, 186, 2249, 137,
	95, 2247, 116, 1079, 176, 131, 2245, 109, 2243, 2242,
	2241, 2240, 2239, 94, 160, 2238, 2237, 183, 180, 187,
	43, 20, 1209, 1923, 18, 167, 2236, 55, 2235, 2234,
	2233, 3342, 122, 64, 121, 177, 2231, 118, 37, 61,
	2230, 2229, 2228, 2227, 2226, 2224, 1867, 2223, 2222, 2221,
	2220, 470, 1046, 2218, 148, 141, 138, 2217, 165, 41,
	2215, 2211, 143, 158, 2210, 2208, 2207, 2206, 145, 93,
	163, 2205, 130, 123, 207, 2204, 83, 2203, 2199, 203,
	79, 2197, 2196, 2194, 111, 102, 2192, 91, 47, 40,
	88, 22, 2190, 2188, 90, 124, 2187, 38, 2185, 5,
	3, 6, 2184, 2181, 2179, 2177, 2175, 2174, 2173, 97,
	2172, 2168, 71, 2162, 2161, 2156, 42, 2152, 2141, 2138,
	161, 132, 108, 174, 105, 21, 2124, 2113, 8, 2109,
	140, 2107, 76, 2102, 70, 2100, 2098, 72, 2096, 2083,
	81, 2081, 2073, 172, 1752, 3169, 2071, 168, 156, 65,
	100, 2066, 2064, 0, 943, 178, 175, 2062, 2021,
}

var yyR1 = [...]int{
	0, 352, 352, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 67, 3, 3, 8,
	9, 4, 4, 4, 5, 89, 89, 183, 183, 183,
	183, 182, 182, 90, 90, 91, 91, 88, 88, 96,
	6, 6, 7, 7, 10, 10, 71, 71, 11, 12,
	12, 12, 12, 355, 355, 105, 105, 103, 103, 104,
	104, 180, 180, 13, 13, 13, 187, 187, 192, 192,
	192, 195, 195, 195, 195, 170, 171, 172, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	326, 326, 335, 335, 335, 336, 336, 334, 334, 334,
	334, 334, 338, 338, 339, 339, 337, 337, 337, 337,
	341, 341, 342, 342, 340, 340, 340, 340, 340, 340,
	340, 340, 340, 340, 340, 340, 340, 340, 329, 329,
	329, 34, 34, 34, 34, 35, 35, 35, 35, 35,
	35, 343, 343, 343, 343, 343, 343, 343, 343, 343,
	343, 343, 343, 343, 343, 343, 343, 343, 343, 343,
	343, 343, 343, 343, 343, 343, 343, 343, 343, 343,
	343, 343, 344, 344, 345, 345, 346, 346, 347, 347,
	347, 347, 348, 348, 348, 348, 348, 349, 349, 349,
	349, 349, 349, 349, 350, 350, 351, 351, 2, 307,
	307, 308, 308, 309, 309, 309, 309, 310, 310, 311,
	311, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	312, 25, 219, 219, 216, 216, 216, 217, 217, 218,
	218, 218, 328, 328, 328, 322, 322, 322, 324, 324,
	323, 323, 323, 325, 325, 330, 330, 330, 330, 330,
	332, 332, 332, 332, 332, 332, 333, 333, 333, 331,
	331, 49, 49, 50, 50, 50, 159, 159, 159, 14,
	14, 14, 14, 14, 20, 22, 22, 38, 38, 39,
	23, 23, 23, 23, 40, 40, 41, 26, 26, 26,
	26, 26, 26, 47, 47, 47, 46, 46, 45, 45,
	45, 45, 45, 45, 24, 24, 24, 24, 48, 48,
	43, 43, 42, 44, 44, 44, 44, 44, 44, 44,
	44, 44, 44, 44, 44, 27, 27, 27, 27, 27,
	27, 19, 306, 306, 306, 37, 37, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 53, 281, 282,
	282, 282, 282, 282, 282, 282, 282, 269, 269, 270,
	259, 259, 259, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 238, 238, 238, 238, 242, 242,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	241, 241, 241, 241, 241, 241, 241, 241, 243, 243,
	243, 243, 243, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	245, 245, 245, 245, 245, 245, 245, 245, 268, 268,
	246, 246, 262, 262, 263, 263, 263, 260, 260, 260,
	261, 261, 249, 250, 264, 251, 251, 251, 252, 252,
	252, 253, 253, 258, 258, 257, 257, 257, 257, 257,
	257, 254, 254, 254, 254, 255, 255, 256, 267, 267,
	267, 267, 267, 247, 36, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 293, 293, 209,
	209, 210, 210, 271, 271, 291, 291, 290, 290, 289,
	289, 289, 280, 280, 286, 286, 286, 286, 286, 286,
	286, 286, 275, 275, 275, 274, 274, 276, 276, 279,
	279, 288, 288, 287, 287, 272, 272, 272, 294, 294,
	294, 294, 294, 273, 273, 273, 273, 295, 277, 277,
	278, 278, 278, 300, 301, 299, 299, 299, 299, 299,
	122, 122, 122, 283, 283, 283, 284, 284, 284, 285,
	285, 285, 304, 304, 303, 303, 51, 52, 56, 56,
	55, 55, 55, 55, 55, 55, 55, 55, 55, 55,
	55, 55, 55, 55, 55, 55, 55, 55, 55, 55,
	55, 55, 55, 55, 55, 55, 158, 158, 158, 214,
	214, 298, 296, 296, 297, 297, 16, 16, 54, 54,
	327, 327, 17, 17, 17, 17, 17, 17, 17, 17,
	17, 302, 302, 302, 18, 18, 57, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 85, 201, 201, 200, 200, 199, 199, 199,
	202, 202, 202, 202, 236, 236, 236, 59, 59, 59,
	63, 63, 66, 66, 66, 64, 65, 28, 29, 29,
	29, 29, 30, 215, 215, 61, 61, 62, 62, 62,
	62, 77, 77, 357, 357, 60, 358, 68, 69, 69,
	70, 70, 70, 205, 205, 74, 74, 74, 72, 72,
	72, 73, 73, 79, 79, 83, 83, 83, 83, 82,
	82, 82, 82, 161, 161, 166, 228, 228, 142, 142,
	162, 162, 167, 167, 167, 168, 168, 169, 169, 169,
	169, 169, 164, 164, 163, 163, 165, 130, 130, 226,
	226, 226, 225, 225, 225, 225, 87, 87, 92, 92,
	94, 94, 94, 94, 94, 97, 144, 144, 115, 115,
	116, 116, 116, 116, 116, 128, 128, 179, 179, 178,
	178, 181, 181, 93, 95, 95, 95, 95, 100, 100,
	101, 101, 102, 102, 213, 213, 233, 233, 233, 106,
	106, 106, 108, 107, 107, 107, 107, 109, 109, 110,
	110, 112, 113, 113, 111, 111, 117, 117, 114, 118,
	118, 118, 118, 119, 119, 84, 84, 84, 84, 84,
	84, 84, 84, 198, 198, 121, 121, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 138, 138, 138,
	138, 138, 138, 123, 123, 123, 123, 123, 123, 123,
	78, 78, 139, 139, 139, 99, 98, 98, 81, 81,
	80, 80, 140, 140, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 133, 133,
	137, 137, 137, 137, 137, 137, 137, 137, 137, 137,
	137, 137, 137, 137, 137, 137, 137, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 131, 131,
	131, 131, 131, 131, 131, 131, 131, 131, 131, 131,
	131, 131, 131, 131, 131, 131, 131, 131, 131, 132,
	132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
	132, 132, 132, 132, 132, 132, 356, 356, 135, 134,
	134, 134, 134, 134, 134, 75, 75, 75, 75, 75,
	234, 234, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 151, 151, 76,
	76, 149, 149, 150, 152, 152, 148, 148, 148, 125,
	125, 125, 125, 125, 125, 125, 125, 127, 127, 127,
	153, 153, 141, 141, 86, 154, 154, 155, 156, 156,
	157, 157, 160, 173, 173, 173, 174, 174, 174, 174,
	129, 129, 175, 175, 175, 124, 124, 124, 124, 124,
	124, 124, 177, 177, 176, 176, 176, 176, 184, 184,
	143, 143, 146, 146, 145, 147, 185, 185, 189, 189,
	186, 186, 190, 190, 190, 190, 193, 193, 194, 194,
	194, 191, 191, 191, 188, 188, 188, 230, 230, 230,
	196, 196, 206, 206, 203, 203, 204, 204, 197, 197,
	248, 248, 248, 212, 212, 211, 211, 211, 207, 207,
	207, 208, 208, 227, 227, 223, 223, 229, 229, 224,
	224, 231, 231, 232, 232, 305, 305, 265, 265, 315,
	315, 266, 266, 316, 316, 318, 318, 313, 313, 314,
	314, 317, 317, 31, 319, 319, 320, 320, 321, 321,
	321, 321, 32, 33, 33, 33, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 353, 354,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 11, 5, 7, 1,
	5, 1, 14, 3, 13, 0, 2, 0, 2, 3,
	3, 1, 3, 2, 3, 0, 1, 1, 3, 4,
	1, 3, 1, 3, 8, 9, 1, 1, 10, 9,
	8, 7, 7, 1, 1, 1, 3, 1, 3, 1,
	3, 0, 4, 3, 4, 5, 1, 3, 3, 2,
	2, 2, 2, 2, 1, 0, 0, 0, 2, 3,
	3, 11, 9, 11, 5, 5, 16, 12, 9, 4,
	0, 3, 0, 2, 2, 1, 3, 1, 1, 2,
	2, 2, 0, 2, 1, 2, 2, 2, 2, 2,
	0, 1, 1, 2, 3, 3, 5, 3, 3, 4,
	5, 4, 4, 2, 2, 2, 2, 2, 0, 2,
	2, 9, 9, 5, 7, 7, 7, 7, 8, 4,
	6, 2, 3, 2, 3, 3, 3, 4, 3, 3,
	2, 2, 3, 2, 2, 2, 2, 2, 3, 2,
	2, 2, 3, 3, 2, 3, 3, 2, 2, 2,
	2, 2, 1, 3, 0, 3, 1, 3, 0, 1,
	1, 1, 1, 3, 1, 3, 3, 0, 2, 5,
	5, 5, 7, 5, 0, 3, 0, 3, 4, 0,
	1, 1, 3, 2, 3, 3, 3, 0, 1, 1,
	2, 2, 2, 2, 1, 2, 2, 3, 3, 3,
	3, 4, 2, 3, 3, 3, 3, 0, 3, 0,
	3, 3, 1, 1, 1, 3, 2, 1, 1, 3,
	3, 2, 1, 1, 3, 1, 2, 5, 4, 6,
	4, 3, 3, 6, 5, 5, 4, 3, 5, 1,
	3, 1, 1, 1, 1, 1, 0, 2, 2, 1,
	1, 1, 1, 1, 4, 5, 8, 1, 2, 5,
	7, 10, 8, 11, 1, 2, 5, 5, 5, 5,
	6, 3, 5, 1, 1, 1, 1, 3, 1, 1,
	1, 2, 1, 1, 2, 4, 2, 4, 2, 3,
	1, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 4, 3, 2,
	4, 3, 0, 2, 3, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 5, 4, 1,
	1, 2, 3, 4, 3, 3, 3, 3, 3, 3,
	0, 1, 1, 0, 2, 3, 2, 2, 2, 2,
	2, 6, 8, 3, 3, 1, 1, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 3, 2, 2, 2, 2, 2, 1, 2,
	2, 2, 1, 4, 4, 3, 3, 2, 4, 5,
	2, 3, 4, 2, 2, 3, 3, 3, 3, 3,
	4, 1, 1, 1, 1, 1, 6, 6, 4, 4,
	4, 5, 3, 3, 3, 3, 3, 4, 6, 6,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 3, 0, 5, 0, 3, 5, 0, 1, 1,
	0, 1, 2, 3, 1, 0, 3, 3, 0, 2,
	2, 0, 1, 0, 1, 1, 1, 1, 2, 2,
	2, 5, 5, 4, 4, 4, 4, 4, 2, 1,
	2, 1, 2, 2, 3, 2, 2, 2, 2, 1,
	1, 1, 1, 3, 2, 1, 1, 0, 3, 1,
	1, 0, 1, 5, 4, 0, 1, 1, 2, 2,
	3, 2, 0, 1, 3, 5, 3, 3, 5, 3,
	2, 2, 1, 1, 1, 1, 1, 0, 1, 0,
	1, 1, 3, 3, 3, 3, 3, 1, 10, 11,
	11, 12, 12, 3, 3, 2, 1, 5, 1, 1,
	0, 2, 2, 3, 3, 1, 1, 2, 2, 2,
	0, 1, 2, 0, 1, 3, 1, 2, 3, 1,
	1, 1, 0, 2, 0, 2, 1, 5, 1, 3,
	5, 4, 3, 5, 3, 8, 10, 3, 3, 3,
	3, 3, 5, 4, 5, 1, 2, 2, 4, 3,
	6, 5, 3, 9, 2, 2, 0, 1, 2, 0,
	1, 7, 1, 3, 8, 8, 3, 3, 3, 5,
	3, 5, 5, 5, 4, 4, 4, 4, 4, 4,
	4, 0, 1, 1, 3, 2, 3, 3, 4, 3,
	5, 5, 5, 4, 4, 4, 2, 2, 2, 6,
	2, 4, 4, 4, 5, 8, 6, 3, 5, 4,
	2, 4, 3, 2, 4, 5, 6, 2, 6, 6,
	3, 3, 3, 0, 1, 1, 1, 0, 2, 2,
	0, 2, 3, 2, 0, 1, 1, 2, 4, 1,
	1, 1, 2, 4, 4, 1, 1, 2, 3, 4,
	4, 5, 3, 1, 1, 3, 3, 1, 1, 1,
	1, 0, 3, 1, 1, 3, 0, 2, 0, 2,
	1, 2, 2, 0, 1, 0, 1, 1, 0, 1,
	1, 0, 1, 3, 5, 1, 1, 3, 5, 1,
	2, 3, 5, 2, 2, 6, 0, 1, 0, 3,
	0, 1, 0, 2, 2, 4, 1, 2, 2, 2,
	2, 2, 0, 2, 1, 3, 3, 1, 3, 0,
	1, 2, 1, 1, 1, 1, 1, 3, 1, 1,
	1, 4, 1, 3, 1, 2, 2, 4, 2, 6,
	1, 4, 6, 3, 2, 0, 3, 0, 3, 1,
	3, 1, 3, 4, 4, 4, 4, 3, 2, 4,
	0, 1, 0, 2, 0, 1, 1, 1, 1, 1,
	2, 2, 1, 2, 3, 2, 3, 2, 2, 1,
	3, 3, 2, 1, 1, 3, 1, 3, 3, 0,
	5, 5, 5, 0, 2, 1, 3, 3, 3, 2,
	3, 1, 2, 0, 3, 1, 1, 3, 3, 4,
	4, 5, 3, 4, 5, 6, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	0, 2, 1, 1, 1, 3, 1, 3, 0, 1,
	1, 3, 1, 3, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 2, 2, 2,
	2, 3, 1, 1, 1, 1, 1, 1, 5, 6,
	6, 6, 5, 5, 5, 6, 5, 5, 6, 5,
	5, 5, 5, 6, 5, 5, 5, 4, 4, 5,
	5, 5, 5, 5, 4, 4, 4, 4, 4, 4,
	4, 3, 6, 6, 6, 8, 8, 8, 8, 4,
	6, 7, 7, 7, 9, 4, 7, 5, 4, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 8, 8, 0, 2, 3, 4,
	4, 4, 4, 4, 4, 0, 3, 4, 7, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 3, 3, 1, 2, 2,
	1, 2, 1, 2, 2, 1, 2, 0, 1, 0,
	2, 1, 2, 4, 0, 2, 1, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	0, 3, 1, 3, 1, 0, 2, 1, 0, 3,
	1, 3, 2, 0, 1, 1, 0, 2, 4, 4,
	1, 1, 0, 2, 4, 2, 4, 1, 3, 5,
	4, 6, 0, 3, 1, 3, 3, 5, 0, 5,
	1, 3, 1, 2, 3, 1, 1, 3, 3, 3,
	1, 3, 1, 2, 2, 3, 1, 1, 1, 1,
	1, 3, 3, 3, 1, 2, 1, 1, 1, 1,
	1, 1, 0, 1, 0, 2, 0, 3, 0, 1,
	0, 3, 3, 1, 1, 0, 1, 1, 1, 1,
	1, 0, 1, 0, 2, 1, 1, 1, 3, 1,
	1, 1, 1, 1, 1, 0, 2, 0, 1, 0,
	4, 0, 1, 0, 3, 0, 3, 0, 4, 0,
	3, 0, 3, 3, 1, 3, 2, 4, 1, 2,
	1, 2, 2, 2, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -352, -1, -3, -9, -10, -11, -12, -13, -15,
	-51, -16, -17, -18, -57, -58, -59, -63, -64, -65,
	-61, -60, -24, -27, -19, -67, -28, -29, -30, -31,
	-32, -33, -34, -35, -36, -4, 6, 7, -91, 29,
	-53, 180, -52, 183, 182, 218, 184, 211, 64, 341,
	-66, 344, 345, -357, -215, 269, 270, 20, 37, 346,
	348, 30, 31, 232, 286, 288, 313, -5, -90, -6,
	181, 342, 213, 212, 26, 490, -353, 68, 556, -156,
	15, -68, -358, -68, -71, 9, 10, 8, 441, -68,
	-281, -213, 108, 68, 23, -208, -219, 88, 432, 188,
	-217, 282, 284, -206, -207, -216, 242, 252, 44, 199,
	198, 253, 189, 282, 189, 190, 192, 432, 188, 225,
	224, 282, 284, 189, -111, -231, 72, -221, 202, 501,
	307, 487, 253, 551, 294, 239, 341, 355, 357, 349,
	384, 372, 488, 502, 203, 264, 187, 340, 370, 373,
	418, 201, 297, 257, 320, 503, 407, 413, 267, 344,
	427, 504, 204, 261, 263, 262, 247, 457, 268, 36,
	214, 368, 303, 361, 272, 242, 505, 495, 236, 359,
	35, 27, 237, 235, 430, 506, 331, 415, 389, 332,
	306, 507, 492, 301, 414, 364, 360, 313, 205, 199,
	333, 508, 390, 394, 509, 419, 287, 334, 510, 511,
	512, 191, 293, 353, 354, 513, 243, 421, 298, 388,
	32, 200, 489, 48, 222, 422, 38, 392, 37, 398,
	514, 330, 387, 382, 399, 515, 516, 517, 518, 311,
	309, 310, 312, 386, 352, 381, 254, 259, 53, 186,
	396, 395, 397, 260, 417, 377, 375, 519, 520, 302,
	206, 521, 522, 362, 18, 523, 524, 425, 217, 304,
	305, 42, 525, 526, 527, 112, 528, 529, 530, 416,
	391, 393, 241, 116, 365, 196, 531, 308, 412, 317,
	491, 291, 113, 423, 358, 533, 336, 348, 221, 216,
	426, 326, 534, 270, 535, 536, 537, 208, 538, 285,
	284, 345, 318, 114, 346, 409, 265, 539, 540, 541,
	542, 251, 234, 429, 420, 52, 269, 403, 543, 321,
	337, 351, 198, 271, 406, 295, 342, 43, 7, 258,
	299, 410, 319, 266, 252, 255, 379, 223, 544, 545,
	366, 367, 385, 350, 380, 343, 226, 218, 111, 428,
	404, 493, 282, 338, 374, 371, 229, 378, 546, 547,
	256, 230, 347, 424, 296, 369, 405, 189, 133, 373,
	418, 180, 408, 409, 415, -275, 416, 224, 227, -236,
	189, -201, 407, 287, 308, 462, 230, 231, 190, 191,
	32, 420, 419, 411, -231, 193, 347, -77, 184, 219,
	-111, -48, 72, 271, -48, 29, 72, 72, 36, 72,
	346, 410, 410, 75, 491, 233, 21, -344, -325, 317,
	-343, -323, 181, 180, 10, 182, 322, 323, 324, 190,
	8, 30, 532, 207, 325, 326, 6, 211, 327, 328,
	225, 9, 329, -328, 74, 72, -221, 21, -344, -325,
	317, -210, -209, 339, 398, 6, -70, 5, -197, 194,
	343, -88, 500, -96, -233, -231, -222, 74, 300, 210,
	290, 401, 458, 459, 460, 461, 233, 462, 475, 476,
	99, 231, 322, 323, 314, 324, 209, 477, 117, 240,
	219, 279, 411, 278, 283, 463, 464, 478, 479, 480,
	465, 466, 289, 481, 482, 554, 292, 555, 315, 484,
	532, 485, 325, 483, 327, 228, 469, 468, 467, 470,
	328, 452, 453, 471, 51, 473, 472, 474, 192, 81,
	-8, -3, -90, -174, 17, 16, -74, 54, 55, -69,
	-82, 124, -84, -231, -120, 91, -126, 28, 72, -221,
	24, -125, -222, -121, -148, -147, -99, 133, -235, 122,
	123, 130, 92, 176, -133, -131, -132, -134, -136, -137,
	74, 73, 82, 75, 76, 77, 78, 83, 458, 459,
	460, 461, 462, 475, 476, 209, 477, 219, 463, 464,
	478, 479, 480, 465, 466, 481, 482, 484, 485, 483,
	469, 468, 467, 470, 452, 453, 471, 473, 472, 474,
	84, 85, -223, -145, -353, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 58, 59, 188,
	442, 443, 444, 445, 446, 486, 450, 94, 47, 431,
	440, 439, 438, 436, 437, 433, 435, 434, 195, 432,
	128, 441, -68, -68, -68, -186, 343, -193, -190, 419,
	420, -191, -194, -188, -148, 398, 529, 530, 418, 373,
	417, -223, -231, -2, -5, 6, -111, -282, -270, -273,
	-224, 204, -295, -223, -220, 201, 72, -221, 300, 185,
	210, 181, 90, 494, 23, 25, 290, 401, 458, 93,
	133, 459, 460, 461, 16, 20, 94, 132, 81, 442,
	233, 462, 180, 62, 433, 435, 431, 432, 408, 28,
	10, 26, 212, 246, 22, 126, 182, 97, 98, 99,
	231, 215, 322, 323, 24, 213, 314, 85, 324, 209,
	117, 240, 19, 65, 219, 279, 11, 411, 227, 550,
	286, 13, 456, 115, 278, 14, 283, 195, 194, 110,
	244, 190, 60, 8, 176, 87, 107, 56, 463, 464,
	497, 45, 232, 498, 58, 108, 17, 436, 437, 30,
	486, 465, 220, 499, 466, 128, 249, 63, 50, 289,
	91, 83, 554, 33, 86, 66, 335, 88, 15, 245,
	61, 454, 292, 555, 315, 224, 532, 248, 500, 207,
	109, 325, 183, 441, 316, 288, 59, 188, 6, 451,
	29, 211, 327, 250, 228, 469, 468, 467, 470, 552,
	57, 444, 445, 471, 328, 548, 189, 96, 452, 453,
	193, 225, 84, 5, 44, 31, 9, 329, 64, 67,
	438, 439, 440, 47, 51, 473, 472, 474, 192, 553,
	95, 12, 455, 490, 89, 190, 192, 441, -204, 195,
	-204, 225, 224, -218, 250, -204, -204, 189, -217, 100,
	100, -54, -111, -327, -322, -328, -203, 195, -223, -203,
	-203, -203, -203, -203, -203, -203, -111, 177, -103, -111,
	72, 29, -202, 108, 12, 432, 188, 189, 224, 225,
	192, -277, 11, 110, 228, 228, 228, 229, 228, -200,
	410, 412, 226, 413, 414, 12, -85, 108, 19, -353,
	-174, -174, 125, 72, 346, 193, -62, -3, -12, -10,
	-11, -8, 100, -128, 23, 29, 29, 74, 51, 29,
	-43, -42, -44, 257, 258, 259, 260, 261, 262, 263,
	264, 265, 266, 267, 268, 29, -306, 68, -265, 398,
	72, -319, -320, -111, 75, 75, 66, 66, 69, 193,
	69, 66, -345, 318, 68, -345, 284, 318, 319, 252,
	282, 192, -345, -345, 284, -345, -345, -345, -345, -345,
	410, -345, -345, -345, 320, 321, -345, 408, 192, -345,
	-345, -345, -345, -345, 71, 66, 69, 308, 66, 11,
	66, -292, 133, 331, 332, 333, 334, 330, 308, 335,
	336, 337, 228, 338, -68, -7, -5, -353, 21, 22,
	189, 423, 69, -88, -177, -353, -354, 70, -175, 19,
	30, -129, 75, 78, -157, -160, -84, -231, 50, -72,
	21, 22, 80, 11, -226, 90, 88, 89, 107, -225,
	23, 72, -221, -222, 74, 177, -84, -123, 110, 91,
	108, 109, 93, 119, 118, 129, 122, 123, 124, 125,
	126, 127, 128, 120, 121, 132, 100, 101, 102, 103,
	104, 105, 106, -198, -353, -99, -353, 178, 179, -126,
	-126, -126, -126, -126, -126, -126, -353, -353, -353, -353,
	-353, -353, -353, -353, -353, -353, -353, -353, -353, -353,
	-353, -353, -353, -353, -353, -353, -353, -353, -353, -353,
	-353, -353, -353, -353, -353, -353, -353, -353, -353, -8,
	-140, -84, -353, -353, -353, -353, -353, -353, -353, -353,
	-353, -353, -353, -151, -84, -353, -356, -135, -353, -356,
	-135, -356, -135, -356, -353, -356, -135, -356, -135, -356,
	-356, -135, -356, -353, -353, -353, -353, -197, -197, 11,
	-103, -104, -114, -231, 69, -187, -192, 421, 423, 343,
	-191, -191, -230, -223, 74, 28, 100, 29, 177, -156,
	-68, 70, 69, -273, 204, 201, -238, -242, -244, -243,
	-245, -240, -241, 370, 373, 377, 375, 371, 376, 133,
	374, 379, 380, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 29, 214, 366, 367, 368, 369, 390, 391,
	392, 393, 394, 395, 396, 397, 349, 372, 488, 350,
	351, 352, 353, 354, 355, 357, 358, 359, 360, 361,
	362, 363, 364, 72, -222, -295, 68, -223, -111, -219,
	-217, 72, 91, 72, -110, -223, -231, -117, -223, -231,
	251, -331, -330, -322, -325, -204, -218, -322, 256, 254,
	255, 69, 193, 69, 193, 71, -103, 24, 66, -105,
	-111, 72, 72, -110, -117, -324, -322, -325, -232, -231,
	-220, 69, -202, 74, -235, -84, -204, -204, -111, -111,
	-111, -111, -111, -202, -202, -202, -202, -199, 11, 110,
	11, -199, -199, -84, -126, -322, 434, 124, -231, 72,
	72, 346, 72, 33, -43, -43, 74, -43, 69, 100,
	-43, 70, -140, -305, 549, 69, -321, 23, 423, 424,
	399, -347, 189, 227, 224, -347, -343, 326, -324, -323,
	-322, -345, -346, -223, -345, -345, -345, 410, -345, -345,
	-345, -345, -345, -345, -345, -345, -328, -347, 286, 69,
	-347, -324, -322, 330, 330, 330, 330, 330, 330, -74,
	-8, -111, 424, 425, -96, 23, -176, -224, -183, 87,
	9, 110, 69, 18, 69, -173, 25, 26, 177, -127,
	51, 75, 78, -205, 49, -111, -84, -84, -84, -138,
	83, 91, 84, 85, -225, 124, -232, -224, -220, -126,
	-139, -145, -99, 79, 110, 108, 109, 93, -126, -126,
	-126, -126, -126, -126, -126, -126, -126, -126, -126, -126,
	-126, -126, -126, -234, 72, 74, 72, -125, -125, -223,
	-72, -80, -83, 124, -84, -231, -80, -80, -72, -354,
	-354, -80, -83, -80, -80, -80, -80, -83, -80, -72,
	-72, -80, -354, -354, -354, -354, -80, -80, -80, -80,
	-223, -223, -72, -80, -80, -80, -72, -354, 69, -354,
	-8, -80, -80, -354, -84, -84, -148, 74, -80, -148,
	74, -80, -126, 447, 448, 449, -80, -72, -149, -150,
	95, -148, -354, -126, -80, -81, -80, -80, -80, -113,
	87, -111, -87, -92, -94, -95, -115, -98, -353, -93,
	-111, -99, 72, -111, -103, -355, 11, 67, -355, 69,
	177, -190, -193, 69, 422, 424, 425, -187, -252, 132,
	66, 86, -84, -224, -232, -174, -74, -283, -284, -285,
	-224, 74, 75, -270, -271, -272, -273, -286, 204, -294,
	196, 198, 199, 44, -274, 205, 190, 45, -239, -260,
	403, 404, -246, 68, -246, -246, 378, 370, 373, 371,
	-246, -246, -246, -246, -246, -251, 373, -251, -251, -251,
	-251, 371, 68, 68, -246, -246, -246, -262, 68, -262,
	365, -263, 68, -263, -263, -263, -263, -295, -295, -84,
	-227, 67, 23, 192, -258, -257, -254, -255, -256, -253,
	28, 24, -258, -49, 239, 210, 177, 68, 177, 242,
	243, -326, 69, 28, -332, 283, -111, -111, -111, -322,
	-322, -328, -302, 208, 203, -111, 69, 69, -111, 74,
	72, 72, -128, -278, 11, 110, -202, -231, -231, -111,
	-128, -202, -78, 215, 67, -356, -354, 72, -126, -42,
	-125, 70, -112, 87, 74, -320, -233, 398, 424, -348,
	124, -223, -348, -351, 490, 193, 70, 69, -345, -348,
	304, 286, -348, 11, -293, 19, -72, -354, -56, -55,
	185, 182, 183, 186, 187, -298, 401, 181, 236, 235,
	221, -98, -353, -354, 69, 177, -182, 34, 35, -223,
	52, -129, -129, -160, -196, 19, 11, 47, 47, -73,
	57, 83, 84, 85, 177, -353, -139, -126, -126, -126,
	-78, 90, -354, -80, 69, -354, 177, -354, -354, -80,
	-161, 454, -161, -354, -354, -354, -354, -354, -354, -354,
	-354, -80, -80, -354, -161, -161, -161, -161, -354, -354,
	-354, -354, 69, 69, -80, -354, -354, -354, -81, -84,
	-354, -354, -354, 69, 67, 23, 11, 11, -354, 11,
	11, -354, -354, 11, -126, -126, -126, -354, -80, -152,
	-150, 97, -84, -354, -354, -354, -354, -354, -354, -180,
	112, -111, 29, 69, -106, -108, -107, -109, 56, 60,
	62, 57, 58, 59, 63, -213, -87, -97, 47, -353,
	-116, 112, -118, 23, -233, 64, 194, 65, -353, -180,
	67, -87, -87, -114, -231, 124, -192, -195, 426, 423,
	429, 72, 74, 177, -175, 69, -285, 100, -273, 68,
	72, -279, -222, 45, -274, 190, 45, -276, -274, -274,
	-279, 72, -279, 45, 83, 91, -249, -250, -264, -267,
	-247, 23, 550, 406, 28, 66, 401, 196, 45, 44,
	199, 81, -261, 405, 75, -251, -251, -246, -246, -246,
	378, -246, -251, -252, 133, 29, -252, 133, -252, 133,
	-252, 133, -252, 133, -251, -268, 74, -268, 75, -262,
	75, 70, 66, -223, -170, -111, -255, -254, -256, 373,
	418, 132, 430, -50, 8, 9, 10, -223, -307, -308,
	-309, -223, 110, 244, 245, -223, -335, 316, -330, 284,
	293, 90, 16, 490, 193, 193, -111, -322, -119, 12,
	72, 72, -199, -202, -126, -325, 230, 231, -180, 189,
	-321, 193, 177, 177, 193, 307, -324, -223, 11, 11,
	304, 11, -324, 340, -205, 69, -214, -274, -304, -272,
	-273, -303, 197, 204, 205, -214, 204, 201, -274, 205,
	196, 197, -211, -274, 193, 23, -214, -214, -280, 100,
	-214, 32, 32, 112, -224, -224, 69, 74, 74, 53,
	-111, -79, -171, 124, -224, -81, -78, 90, -126, -354,
	-83, -162, -161, 124, -232, -162, -162, -354, -223, -166,
	-353, -161, -162, -162, -161, -161, -161, -354, -354, -161,
	-162, -162, -162, -162, -126, -126, -354, -162, -162, -162,
	-354, -237, 133, 370, 214, 368, 361, 388, 375, 403,
	366, 404, -234, -237, -126, -126, -126, -126, -126, 11,
	11, 11, 487, -156, 99, -84, 96, -124, 29, 47,
	-353, -8, -353, -185, -189, -148, -220, -92, -94, -94,
	-92, -94, 56, 56, 56, 61, 56, 61, 56, -107,
	-233, -354, -354, -144, 238, -353, 33, -233, -118, 190,
	190, 190, -81, -119, -87, -119, -119, 177, 423, 427,
	428, -284, -285, -288, -287, -223, -222, 196, -294, 44,
	-294, -279, -279, -279, -279, 68, 83, -353, 551, 75,
	-126, 9, 45, 45, 45, 74, 70, -252, 133, -252,
	133, -251, -246, -252, 133, 72, 133, -252, 133, 70,
	69, 70, 69, 70, 69, -122, 506, 91, -111, -172,
	23, 29, -280, -280, -280, 66, 70, 69, -238, -223,
	-223, -223, -338, 490, 289, -336, -334, 295, 296, 297,
	298, 299, -325, 294, -332, 291, 74, 72, -111, -322,
	-84, -128, -251, -111, -324, 124, 124, -223, -324, 304,
	-350, 490, -324, -324, 11, -324, 74, -73, -55, 68,
	-269, 72, -222, -279, -207, 196, 72, 72, 72, -222,
	72, -222, -223, 45, 45, 72, -111, -223, -269, 72,
	-84, -223, -223, 177, -223, -183, 69, -82, -354, -126,
	-162, 177, -162, -228, 72, -162, -162, 69, 69, -162,
	-354, -246, -246, -246, -263, -246, 354, -246, 354, -354,
	-354, 19, 19, 19, 19, -354, -126, -126, -126, -353,
	-76, 451, -84, -184, 66, -185, -143, -146, -145, -353,
	-8, -354, -176, 6, 490, -181, -223, -119, 69, 100,
	100, -101, -100, 66, 67, -102, 66, -100, 56, 56,
	-179, 68, 69, -145, -353, -181, -126, -118, -353, -353,
	-353, -354, -156, -119, 70, 69, -246, -246, 45, -276,
	-178, -223, -126, 23, -132, 452, 453, -252, 133, -251,
	74, -251, 75, 75, 506, 68, -8, -170, -280, 72,
	133, 72, 133, 74, -111, -310, -311, -312, 81, 489,
	91, 246, 247, 206, 248, 249, 250, -309, -238, -238,
	-238, -341, -342, -340, 292, 314, 315, 300, -339, -337,
	309, 310, 311, 312, 90, 74, 74, 74, -333, 283,
	90, 292, 16, 23, -202, -313, -200, -350, -350, 286,
	-324, -79, -269, -158, 209, 210, -238, -238, -227, -276,
	45, 72, -212, 193, 23, 193, -158, -269, 29, 182,
	87, -224, -89, 11, -171, -171, 124, -142, 112, -126,
	-126, -251, 72, -126, -126, -126, -126, -354, -354, -354,
	-126, -354, 74, 27, -184, 69, -354, -354, 47, -354,
	-354, 69, -156, -189, -84, -84, -84, 68, -84, -178,
	238, -354, -118, -213, -178, -178, -178, -174, -290, -289,
	67, 200, 81, -287, -173, -173, -279, -279, 70, 69,
	-354, -353, -252, 133, -252, 133, 70, 70, -288, -170,
	-172, 72, 133, 19, -171, -312, 74, 250, 246, 250,
	250, 250, 250, 251, -329, 81, 290, -340, 301, 511,
	285, 316, 75, 75, 111, 30, 31, -337, 75, 75,
	75, 75, -334, 16, 490, -332, 291, 74, 74, -314,
	38, -316, 39, -349, 23, -349, 304, 11, 70, 72,
	-239, -239, 68, -279, -279, 72, -223, -158, 28, 28,
	-353, -119, -87, -82, -156, 16, -354, -354, -354, -354,
	-354, -354, -75, 110, 490, 45, -146, -143, 47, -8,
	-353, -223, -174, -178, 70, -145, -116, -233, -354, -354,
	-354, -289, 72, -280, 74, 207, -223, -259, 553, 552,
	-126, 70, -8, 237, -172, 36, 36, 242, 243, 74,
	74, 28, 302, 176, 28, 75, 176, 457, 291, 74,
	72, 292, -248, 194, -317, 43, -315, -266, 42, 16,
	-322, -87, -288, -227, 68, -126, -296, -297, 112, -153,
	13, -171, -167, 114, 113, -140, -354, 488, 63, 491,
	9, -143, -8, 70, -118, 75, -111, -354, -291, -290,
	-170, 238, -21, -3, -10, -11, -12, -13, -15, -51,
	-16, -17, -22, -23, -18, -57, -58, -66, -64, -65,
	-61, -60, -26, -24, -27, -19, -28, -29, -30, -34,
	-35, -25, -36, 94, 195, 272, 341, 75, 28, 75,
	28, 305, 292, 23, -179, 75, -316, 16, -318, 40,
	41, 74, 490, -119, 70, 68, -288, -354, 69, -223,
	-154, 14, 16, -354, -168, 93, -169, 111, 457, -130,
	75, 176, -168, 53, 489, 492, -185, -354, 68, -259,
	-159, 240, 241, -170, -84, -84, 72, -47, -229, 275,
	276, 277, -224, -37, -21, 303, 303, 74, 38, 114,
	74, 16, 16, 284, -153, -291, -288, 70, -297, 47,
	-164, 455, -155, -84, -141, -86, -84, -169, 116, 117,
	238, 116, 117, -125, 53, -178, -170, 72, 72, -38,
	-39, 95, 96, 273, 274, 278, -238, 69, 556, 74,
	74, 28, 289, 21, -325, -154, 70, -291, 222, -163,
	-165, -223, 69, 90, -223, 490, 70, -172, 99, 97,
	-39, -84, -37, 19, 19, 19, 28, -224, 99, -21,
	306, -164, -291, 223, 69, 23, -86, -169, 491, -300,
	-301, 66, -14, -20, -13, -10, -11, -12, 341, -90,
	94, -37, 96, 556, -48, 75, -8, -46, -45, 75,
	-48, 280, 91, 281, 72, -126, -325, -353, -165, -166,
	492, -301, 66, -300, 66, 10, 9, -170, -37, 556,
	-37, 99, 97, -40, -41, 98, -21, 69, 279, -126,
	220, -299, 208, 203, 206, 29, -299, 556, 99, 556,
	195, -37, 99, 97, -41, -84, -45, -354, -354, 202,
	28, 83, 99, 94, 556, 195, -37, 96, 99, 556,
	-37, 195, 99, 556, 195,
}

var yyDef = [...]int{
	-2, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, -2, 766, 766, 0, 766,
	864, -2, 626, 0, 0, 0, 0, -2, 739, 740,
	741, 745, 746, 761, 763, 0, 345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 551, 41, 56, 0,
	1218, 0, 764, 753, 754, 0, 0, 1764, 2, 1156,
	0, 775, 768, 0, 766, 766, 766, 66, 67, 0,
	98, 0, 0, 0, 865, 0, 0, 0, 1216, 1216,
	249, 1216, 1216, 0, 1232, 247, 0, 1213, 1228, 1229,
	1230, 0, 0, 0, 1214, 0, 1214, 1214, 1214, 1214,
	1214, 1214, 1214, 0, 685, 884, 1241, 1242, 1453, 1454,
	1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464,
	1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474,
	1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484,
	1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494,
	1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504,
	1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514,
	1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524,
	1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534,
	1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544,
	1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554,
	1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564,
	1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574,
	1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584,
	1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594,
	1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604,
	1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614,
	1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624,
	1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634,
	1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644,
	1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654,
	1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664,
	1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674,
	1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684,
	1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694,
	1695, 1696, 1697, 1698, 1699, 1700, 1701, 0, 0, 0,
	730, 0, 696, 697, 698, 0, 700, 0, 0, 0,
	0, 0, 710, 713, 717, 0, 1156, 1156, 572, 573,
	574, 735, 736, 724, 737, 0, 0, 55, 0, 0,
	845, 324, 326, 0, 346, 0, 349, 352, 1247, 747,
	0, 0, 1272, 1273, 0, 0, 0, 0, 0, 1614,
	192, 263, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 0, 194, 194, 194, 1626, 194, 0, 194, 194,
	194, 194, 194, 262, 252, 253, 254, 0, 0, 0,
	1614, 0, 552, 549, 550, 766, 0, 770, 0, 1219,
	742, 53, 0, 57, 1172, 866, 867, 868, 1702, 1703,
	1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713,
	1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723,
	1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733,
	1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743,
	1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753,
	1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763,
	0, 39, 0, 1162, 0, 0, 778, 776, 777, 767,
	0, 789, 819, 0, 895, 0, 901, 903, -2, -2,
	0, 944, 945, 946, 947, 948, 949, 0, 0, 0,
	0, 0, 0, 0, 972, 973, 974, 975, 976, 977,
	1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1706, 1707,
	1708, 1709, 1711, 1712, 1713, 1720, 1721, 1724, 1729, 1730,
	1731, 1732, 1733, 1734, 1735, 1737, 1738, 1743, 1745, 1747,
	1750, 1751, 1752, 1753, 1755, 1756, 1757, 1759, 1760, 1761,
	905, 906, 1126, 1185, 0, 1062, 1063, 1064, 1065, 1066,
	1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076,
	1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086,
	1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096,
	1097, 1098, 1099, 1100, 1101, 1102, 1103, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1117, 0, 1046,
	1046, 1046, 1046, 1046, 1046, 1046, 1046, 1046, 0, 0,
	0, 0, 1218, 1218, 0, 83, 1680, 0, 1190, -2,
	-2, 1192, 0, 0, 0, -2, -2, -2, -2, 1474,
	-2, 1126, 0, 99, 1148, 766, 100, 0, 389, 390,
	0, 1487, 596, 1239, 1240, 1476, 1235, 1236, 1276, 1277,
	1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287,
	1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297,
	1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307,
	1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317,
	1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327,
	1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337,
	1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347,
	1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357,
	1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367,
	1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377,
	1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387,
	1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397,
	1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407,
	1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417,
	1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427,
	1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437,
	1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447,
	1448, 1449, 1450, 1451, 1452, 0, 0, 247, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 1216, 249, 0,
	0, 666, 0, 667, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 684, 0, 686, 77,
	687, 730, 689, 0, 0, 1216, 1216, 0, 0, 0,
	0, 0, 598, 599, 730, 730, 730, 730, 727, 0,
	727, 707, 727, 725, 726, 0, 712, 0, 0, 0,
	720, 721, 0, 748, 0, 0, 755, 757, 758, 759,
	760, 756, 0, 765, 0, 0, 0, 328, 0, 0,
	348, 330, 0, 333, 334, 335, 336, 337, 338, 339,
	340, 341, 342, 343, 344, 0, 351, 0, 1245, 1248,
	752, 1263, 1264, 0, 1274, 1275, 198, 198, 0, 0,
	0, 0, 161, 194, 0, 163, 194, 194, 194, 0,
	194, 194, 170, 171, 194, 173, 174, 175, 176, 177,
	194, 179, 180, 181, 194, 194, 184, 194, 194, 187,
	188, 189, 190, 191, 261, 198, 0, 0, 198, 0,
	0, 534, 0, 0, 0, 0, 539, 540, 541, 542,
	0, 0, 545, 546, 775, 43, 62, 0, 771, 772,
	0, 0, 0, 54, 0, 0, 61, 1765, 47, 0,
	0, 1157, 1160, 1161, 1149, 1150, 1153, 0, 0, 773,
	779, 780, 769, 0, 790, 0, 0, 0, 0, 820,
	0, 822, 823, 824, 825, 0, 899, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 923, 924, 925, 926,
	927, 928, 929, 902, 0, 916, 0, 0, 0, 965,
	966, 967, 968, 969, 970, 0, 778, 0, 0, 0,
	778, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 778, 778, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 778, 0, 0, 0, 778, 0,
	0, 942, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 778, 0, 1118, 0, 1029, 1038, 0, 1030,
	1039, 1031, 1040, 1032, 0, 1033, 1041, 1034, 1042, 1035,
	1036, 1043, 1037, 0, 938, 0, 0, 0, 0, 0,
	0, 0, 79, 884, 0, 84, 86, 0, 0, 1680,
	1193, 1194, 508, 1207, 1208, 1209, 0, 1205, 0, 1156,
	775, 613, 0, 391, 0, 0, 403, 497, 415, 416,
	417, 490, 419, 490, 490, 0, 490, 490, 490, 490,
	490, 505, 505, 505, 505, 505, 461, 462, 463, 464,
	465, 0, 0, 438, 490, 490, 490, 442, 480, 481,
	482, 483, 484, 485, 486, 487, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 492, 492, 494, 494,
	494, 494, 494, 0, 0, 595, 0, 1233, 0, 0,
	249, -2, 0, -2, 0, 879, 0, 0, 886, 0,
	0, 110, 279, 265, 109, 0, 243, 248, 244, 245,
	246, 0, 0, 0, 0, 256, 681, 1215, 0, 674,
	75, 675, 676, 677, 678, 679, 258, 680, 885, 1243,
	1244, 0, 688, 731, 0, 733, 0, 0, 845, 693,
	694, 695, 600, 701, 702, 703, 709, 730, 0, 0,
	0, 845, 730, 711, 930, 714, 1046, 0, 738, 750,
	749, 0, 762, 0, 325, 327, 329, 347, 0, 0,
	350, 353, 0, 0, 0, 0, 1266, 0, 1268, 1270,
	0, 0, 199, 200, 201, 0, 193, 0, 216, 264,
	0, 162, 0, 196, 164, 165, 166, 194, 168, 169,
	172, 178, 182, 183, 185, 186, 260, 0, 0, 0,
	0, 159, 0, 535, 536, 537, 538, 547, 544, 778,
	0, 0, 743, 744, 58, 0, 0, 1174, 37, 0,
	1163, 0, 0, 0, 0, 1152, 1154, 1155, 0, 0,
	1137, 0, 0, 781, 774, 40, 896, 897, 898, 900,
	917, 0, 919, 921, 821, 791, 0, 1127, -2, 907,
	908, 932, 933, 934, 0, 0, 0, 0, 930, 912,
	0, 950, 951, 952, 953, 954, 955, 956, 957, 958,
	959, 960, 961, 964, 1060, 1061, 0, 962, 963, 971,
	0, 0, 940, 785, 786, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 938, 935, 0, 1184,
	0, 0, 0, 1011, 0, 0, 947, 1129, 0, 947,
	1129, 0, 0, 0, 0, 0, 0, 0, 1124, 1121,
	0, 0, 1047, 0, 0, 0, 939, 0, 0, 81,
	0, 883, 0, 826, 828, 829, 830, -2, 0, 834,
	889, 936, 1241, -2, 0, 0, 73, 74, 0, 0,
	0, 1191, 0, 0, 0, 89, 90, 85, 1195, 0,
	1201, 1202, 1203, 1127, 0, 1162, 778, 388, 614, 616,
	619, 620, 621, 392, 394, 395, 396, 0, -2, 587,
	1610, 1657, -2, -2, 579, 1523, -2, -2, 399, 500,
	498, 499, 418, 0, 505, 505, 490, 490, 490, 490,
	447, 505, 450, 453, 454, 508, 0, 508, 508, 508,
	508, 505, 0, 0, 439, 440, 441, 430, 0, 431,
	492, 433, 0, 434, 435, 436, 437, 593, 594, 0,
	0, 0, 95, 0, 104, -2, 515, 516, 517, 0,
	512, 1217, 105, 0, 281, 282, 0, 219, 0, 250,
	251, 112, 0, 0, 266, 0, 387, 0, 668, 0,
	670, 255, 672, 682, 683, 673, 0, 0, 78, 732,
	690, 691, 692, 893, 0, 0, 704, 728, 729, 727,
	730, 708, 722, 0, 0, 715, 0, 751, 846, 331,
	332, 354, 81, 0, 1246, 1265, 0, 1269, 1271, 0,
	202, 204, 0, 153, 0, 0, 195, 0, 167, 0,
	0, 0, 0, 0, 543, 0, 773, 63, 627, 628,
	-2, 659, 1225, 659, 659, 645, 562, 659, 0, 0,
	0, 59, 0, 1173, 0, 0, 48, 0, 1505, 51,
	0, 1158, 1159, 1151, 0, 1210, 1211, 1138, 1139, 96,
	782, 918, 920, 922, 0, 938, 909, 930, 913, 0,
	910, 0, 904, 0, 0, 800, 0, 800, 800, 0,
	997, 0, 998, 1025, 0, 1010, 800, 800, 0, 0,
	0, 0, 0, 0, 1004, 1005, 1006, 1007, 800, 800,
	800, 800, 0, 0, 0, 800, 800, 800, 0, 943,
	-2, 1008, 1009, 0, 0, 0, 0, 0, 1053, 0,
	0, 1054, 1019, 0, 0, 0, 0, 0, 1148, 0,
	1122, 0, 0, 1028, 1048, 1049, 1050, 1051, 1052, 0,
	0, 882, 0, 0, 0, 0, 0, 0, 869, 0,
	0, 872, 0, 0, 0, 0, 0, 0, 0, 0,
	838, 1600, 840, 0, 889, 0, 0, 0, 938, 893,
	0, 893, 893, 80, 0, 888, 87, 88, 0, 0,
	94, 509, 510, 0, 218, 0, 617, 0, 393, 0,
	580, 0, 0, 579, 579, 575, 576, 579, 578, 579,
	570, 580, 571, 0, 404, 0, 406, 407, 408, 409,
	410, 0, 0, 0, 0, 0, 504, 0, 529, 531,
	0, 0, 414, 501, 0, 508, 508, 505, 445, 446,
	490, 451, 508, 455, 472, 0, 456, 473, 457, 474,
	458, 475, 459, 476, 508, 0, 488, 0, 0, 432,
	0, 610, 0, 1234, 97, 0, 518, 519, 520, 0,
	562, 562, 562, 0, 283, 284, 285, 880, 0, 220,
	221, 0, 0, 0, 0, 887, 122, 0, 280, 0,
	0, 0, 0, 0, 0, 0, 76, 259, 699, 0,
	601, 602, 845, 706, 931, 716, 718, 719, 505, 0,
	1267, 0, 0, 0, 0, 0, 214, 197, 0, 0,
	0, 0, 160, 0, 781, 0, 0, 579, 0, 646,
	647, 0, 660, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1226, 1227, 0, 0, 0, 563,
	0, 654, 655, 0, 1176, 1175, 0, 49, 50, 1164,
	38, 47, 0, 792, 1128, 0, 911, 0, 914, 800,
	941, 982, 801, 787, 0, 983, 984, 800, 793, 794,
	796, 999, 986, 987, 1000, 1001, 1002, 800, 800, 1003,
	991, 990, 989, 992, 0, 0, 800, 995, 994, 996,
	978, 0, 490, 490, 1107, 490, 494, 1110, 490, 1112,
	490, 1115, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1119, 1027, 1125, 0, 1178, 0, 0,
	0, 1167, 0, 893, 1186, 0, 0, 827, 860, 862,
	0, 857, 870, 871, 873, 0, 875, 0, 877, 878,
	847, 833, 937, 835, 0, 0, 0, 889, 844, 0,
	0, 0, 0, 1148, 893, 71, 72, 0, 91, 92,
	93, 615, 618, 0, 581, 490, 490, 0, 585, 577,
	586, 564, 566, 567, 569, 0, 405, 0, 0, 413,
	502, 0, 528, 530, 532, 533, 491, 443, 468, 444,
	469, 508, 452, 448, 470, 506, 507, 460, 477, 505,
	0, 505, 0, 495, 0, 597, 611, 0, 0, 0,
	95, 562, 0, 0, 0, 0, 227, 0, 223, 0,
	0, 0, 130, 0, 113, 114, 115, 117, 118, 0,
	0, 0, 111, 0, 268, 0, 271, 272, 669, 671,
	894, 730, 1257, 881, 214, 203, 205, 206, 214, 217,
	154, 0, 155, 157, 0, 156, 548, 96, 629, 0,
	656, 0, 0, 1233, 577, 0, -2, 632, 637, 638,
	639, 640, 641, 0, 652, 0, 634, 0, 656, 0,
	649, 0, 0, 0, 52, 45, 96, 96, 979, 915,
	981, 0, 985, 798, 797, 980, 988, 0, 0, 993,
	1012, 1104, 505, 1108, 1109, 1111, 1113, 1114, 1116, 1014,
	1013, 0, 0, 0, 0, 1020, 0, 0, 0, 0,
	0, 0, 1123, 64, 0, 1178, 1165, 1180, 1182, 0,
	0, 0, 0, -2, 1451, 0, 851, 1148, 0, 0,
	0, 854, 861, 0, 0, 855, 0, 856, 874, 876,
	831, 0, 0, 836, 0, 0, -2, 843, 0, 0,
	0, 853, 1156, 70, 554, 0, 1153, 1153, 579, 579,
	0, 849, 0, 0, 503, 0, 0, 449, 471, 508,
	489, 508, 0, 0, 612, 0, 95, 97, 0, 523,
	524, 525, 526, 527, 0, 96, 228, 229, 0, 0,
	0, 234, 0, 0, 0, 0, 0, 222, 224, 225,
	226, 148, 131, 132, 0, 0, 0, 0, 123, 124,
	0, 0, 0, 0, 0, 119, 120, 121, 267, 0,
	0, 270, 0, 0, 705, 1259, 1253, 207, 207, 0,
	158, 0, 0, 631, 657, 0, 403, 403, 0, 579,
	579, 648, 0, 1223, 1224, 0, 643, 656, 0, 0,
	0, 1177, 893, 0, 0, 783, 788, 1148, 0, 0,
	0, 1105, 1106, 0, 0, 0, 0, 1021, 1022, 1023,
	1055, 1026, 1120, 0, 65, 0, 1183, -2, 0, 0,
	82, 0, 1156, 1187, 1188, 1189, 858, 0, 863, 0,
	0, 889, 841, 0, 0, 0, 0, 69, 553, 557,
	0, 562, 0, 582, 583, 584, 565, 568, 0, 0,
	400, 0, 466, 478, 467, 479, 493, 496, 0, 102,
	0, 521, 522, 0, 97, 230, 231, 232, 233, 235,
	236, 0, 0, 0, 108, 0, 0, 133, 0, 0,
	0, 0, 143, 144, 145, 146, 147, 125, 126, 127,
	128, 129, 116, 0, 0, 269, 0, 274, 275, 1220,
	1261, -2, 0, 151, 0, 152, 215, 0, 630, 658,
	397, 398, 0, 1233, 0, 633, 642, 644, 0, 651,
	0, 1140, 46, 96, 802, 0, 1044, 1045, 1015, 1017,
	1016, 1018, 0, 0, 0, 0, 1181, 1166, 0, 1170,
	0, 852, 68, 0, 848, 837, 839, 889, 890, 891,
	892, 558, 559, 0, 561, 0, 850, 411, 401, 402,
	0, 555, 95, 0, 55, 237, 238, 239, 240, 149,
	150, 134, 135, 0, 137, 138, 0, 0, 0, 277,
	0, 273, 847, 0, 1253, 0, 1255, 0, 1252, 0,
	208, 893, 0, 0, 0, 650, 0, 662, 0, 1145,
	0, 784, 0, 0, 0, 799, 1024, 0, 0, 0,
	0, 1169, 0, 859, 842, 560, 0, 400, 101, 556,
	103, 286, 95, 357, 358, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 383,
	384, 385, 386, 0, 0, 0, 55, 0, 139, 0,
	141, 142, 276, 0, 36, 0, 1260, 0, 1258, 0,
	0, 1254, 0, 1140, 555, 0, 0, 661, 0, 0,
	812, 0, 0, 795, 803, 0, 806, 0, 0, 0,
	817, 0, 804, 1056, 0, 1059, 1179, -2, 0, 412,
	95, 0, 0, 107, 0, 0, 1235, 0, 0, 313,
	314, 315, 1237, 0, 355, 136, 140, 278, 1221, 1222,
	1262, 0, 0, 0, 1145, 635, 0, 555, 663, 0,
	44, 0, 1146, 1147, 1141, 1142, 1144, 0, 807, 808,
	809, 810, 811, 0, 1057, 0, 97, 287, 288, 0,
	297, 0, 55, 0, 0, 0, 311, 0, 55, 1256,
	1250, 209, 210, 211, 213, 812, 555, 653, 0, 813,
	814, 0, 0, 0, 818, 0, 588, 55, 0, 55,
	298, 0, 0, 0, 0, 0, 0, 1238, 241, 356,
	0, 42, 636, 0, 0, 0, 1143, 805, 0, 589,
	590, 0, 95, 289, 290, 291, 292, 293, 55, 56,
	295, 0, 55, 55, 307, 308, 309, 55, 316, 318,
	319, 320, 0, 322, 323, 312, 212, 0, 815, 816,
	1058, 591, 0, 592, 0, 0, 0, 106, 0, 55,
	0, 0, 55, 0, 304, 0, 310, 0, 321, 0,
	0, 603, 605, 606, 0, 0, 604, 55, 0, -2,
	300, 0, 0, 55, 305, 0, 317, 664, 665, 607,
	608, 609, 294, 296, 55, 302, 0, 55, 0, 55,
	0, 301, 0, -2, 303,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 92, 3, 3, 3, 127, 119, 3,
	68, 70, 124, 122, 69, 123, 177, 125, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 556,
	101, 100, 102, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 129, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 118, 3, 130,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 82, 83, 84, 85,
	86, 87, 88, 89, 90, 91, 93, 94, 95, 96,
	97, 98, 99, 103, 104, 105, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 116, 117, 120, 121,
	126, 128, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 274, 275,
}

var yyTok3 = [...]int{
	57600, 276, 57601, 277, 57602, 278, 57603, 279, 57604, 280,
	57605, 281, 57606, 282, 57607, 283, 57608, 284, 57609, 285,
	57610, 286, 57611, 287, 57612, 288, 57613, 289, 57614, 290,
	57615, 291, 57616, 292, 57617, 293, 57618, 294, 57619, 295,
	57620, 296, 57621, 297, 57622, 298, 57623, 299, 57624, 300,
	57625, 301, 57626, 302, 57627, 303, 57628, 304, 57629, 305,
	57630, 306, 57631, 307, 57632, 308, 57633, 309, 57634, 310,
	57635, 311, 57636, 312, 57637, 313, 57638, 314, 57639, 315,
	57640, 316, 57641, 317, 57642, 318, 57643, 319, 57644, 320,
	57645, 321, 57646, 322, 57647, 323, 57648, 324, 57649, 325,
	57650, 326, 57651, 327, 57652, 328, 57653, 329, 57654, 330,
	57655, 331, 57656, 332, 57657, 333, 57658, 334, 57659, 335,
	57660, 336, 57661, 337, 57662, 338, 57663, 339, 57664, 340,
	57665, 341, 57666, 342, 57667, 343, 57668, 344, 57669, 345,
	57670, 346, 57671, 347, 57672, 348, 57673, 349, 57674, 350,
	57675, 351, 57676, 352, 57677, 353, 57678, 354, 57679, 355,
	57680, 356, 57681, 357, 57682, 358, 57683, 359, 57684, 360,
	57685, 361, 57686, 362, 57687, 363, 57688, 364, 57689, 365,
	57690, 366, 57691, 367, 57692, 368, 57693, 369, 57694, 370,
	57695, 371, 57696, 372, 57697, 373, 57698, 374, 57699, 375,
	57700, 376, 57701, 377, 57702, 378, 57703, 379, 57704, 380,
	57705, 381, 57706, 382, 57707, 383, 57708, 384, 57709, 385,
	57710, 386, 57711, 387, 57712, 388, 57713, 389, 57714, 390,
	57715, 391, 57716, 392, 57717, 393, 57718, 394, 57719, 395,
	57720, 396, 57721, 397, 57722, 398, 57723, 399, 57724, 400,
	57725, 401, 57726, 402, 57727, 403, 57728, 404, 57729, 405,
	57730, 406, 57731, 407, 57732, 408, 57733, 409, 57734, 410,
	57735, 411, 57736, 412, 57737, 413, 57738, 414, 57739, 415,
	57740, 416, 57741, 417, 57742, 418, 57743, 419, 57744, 420,
	57745, 421, 57746, 422, 57747, 423, 57748, 424, 57749, 425,
	57750, 426, 57751, 427, 57752, 428, 57753, 429, 57754, 430,
	57755, 431, 57756, 432, 57757, 433, 57758, 434, 57759, 435,
	57760, 436, 57761, 437, 57762, 438, 57763, 439, 57764, 440,
	57765, 441, 57766, 442, 57767, 443, 57768, 444, 57769, 445,
	57770, 446, 57771, 447, 57772, 448, 57773, 449, 57774, 450,
	57775, 451, 57776, 452, 57777, 453, 57778, 454, 57779, 455,
	57780, 456, 57781, 457, 57782, 458, 57783, 459, 57784, 460,
	57785, 461, 57786, 462, 57787, 463, 57788, 464, 57789, 465,
	57790, 466, 57791, 467, 57792, 468, 57793, 469, 57794, 470,
	57795, 471, 57796, 472, 57797, 473, 57798, 474, 57799, 475,
	57800, 476, 57801, 477, 57802, 478, 57803, 479, 57804, 480,
	57805, 481, 57806, 482, 57807, 483, 57808, 484, 57809, 485,
	57810, 486, 57811, 487, 57812, 488, 57813, 489, 57814, 490,
	57815, 491, 57816, 492, 57817, 493, 57818, 494, 57819, 495,
	57820, 496, 57821, 497, 57822, 498, 57823, 499, 57824, 500,
	57825, 501, 57826, 502, 57827, 503, 57828, 504, 57829, 505,
	57830, 506, 57831, 507, 57832, 508, 57833, 509, 57834, 510,
	57835, 511, 57836, 512, 57837, 513, 57838, 514, 57839, 515,
	57840, 516, 57841, 517, 57842, 518, 57843, 519, 57844, 520,
	57845, 521, 57846, 522, 57847, 523, 57848, 524, 57849, 525,
	57850, 526, 57851, 527, 57852, 528, 57853, 529, 57854, 530,
	57855, 531, 57856, 532, 57857, 533, 57858, 534, 57859, 535,
	57860, 536, 57861, 537, 57862, 538, 57863, 539, 57864, 540,
	57865, 541, 57866, 542, 57867, 543, 57868, 544, 57869, 545,
	57870, 546, 57871, 547, 57872, 548, 57873, 549, 57874, 550,
	57875, 551, 57876, 552, 57877, 553, 57878, 554, 57879, 555,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:517
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:521
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:528
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:563
		{
			setParseTree(yylex, nil)
		}
	case 36:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:569
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 37:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:575
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			if err := yyDollar[1].selStmt.SetInto(yyDollar[5].into); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 38:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:586
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:592
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 40:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:602
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:609
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 42:
		yyDollar = yyS[yypt-14 : yypt+1]
//line sql.y:613
		{
			yyVAL.selStmt = &Select{With: yyDollar[1].with, Comments: Comments(yyDollar[3].bytes2), Cache: yyDollar[4].str, Distinct: yyDollar[5].str, Hints: yyDollar[7].str, SelectExprs: yyDollar[8].selectExprs, From: yyDollar[10].tableExprs, Where: NewWhere(WhereStr, yyDollar[11].expr), GroupBy: GroupBy(yyDollar[12].exprs), Having: NewWhere(HavingStr, yyDollar[13].expr), Window: yyDollar[14].window}
			if yyDollar[6].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 43:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:620
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 44:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:626
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr), Window: yyDollar[13].window, Into: yyDollar[8].into}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 45:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:634
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:638
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:647
		{
			yyVAL.into = nil
		}
	case 48:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:651
		{
			yyVAL.into = &Into{Variables: yyDollar[2].variables}
		}
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:655
		{
			yyVAL.into = &Into{Outfile: string(yyDollar[3].bytes)}
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:659
		{
			yyVAL.into = &Into{Dumpfile: string(yyDollar[3].bytes)}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:665
		{
			yyVAL.variables = Variables{yyDollar[1].colIdent}
		}
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:669
		{
			yyVAL.variables = append(yyVAL.variables, yyDollar[3].colIdent)
		}
	case 53:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:675
		{
			yyVAL.with = &With{Ctes: yyDollar[2].tableExprs, Recursive: false}
		}
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:679
		{
			yyVAL.with = &With{Ctes: yyDollar[3].tableExprs, Recursive: true}
		}
	case 55:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:684
		{
			yyVAL.with = nil
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:688
		{
			yyVAL.with = yyDollar[1].with
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:694
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:698
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 59:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:704
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[4].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[2].columns}
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:710
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:718
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:724
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:732
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 64:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:738
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[7].ins
			ins.Action = yyDollar[2].str
			ins.Comments = yyDollar[3].bytes2
			ins.Ignore = yyDollar[4].str
			ins.Table = yyDollar[5].tableName
			ins.Partitions = yyDollar[6].partitions
			ins.OnDup = OnDup(yyDollar[8].assignExprs)
			ins.With = yyDollar[1].with
			yyVAL.statement = ins
		}
	case 65:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:751
		{
			cols := make(Columns, 0, len(yyDollar[8].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[9].assignExprs))
			for _, updateList := range yyDollar[8].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[2].str, Comments: Comments(yyDollar[3].bytes2), Ignore: yyDollar[4].str, Table: yyDollar[5].tableName, Partitions: yyDollar[6].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[9].assignExprs), With: yyDollar[1].with}
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:763
		{
			yyVAL.str = InsertStr
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:767
		{
			yyVAL.str = ReplaceStr
		}
	case 68:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:773
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[3].bytes2), Ignore: yyDollar[4].str, TableExprs: yyDollar[5].tableExprs, Exprs: yyDollar[7].assignExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), OrderBy: yyDollar[9].orderBy, Limit: yyDollar[10].limit, With: yyDollar[1].with}
		}
	case 69:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:779
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].bytes}}, Partitions: yyDollar[5].tableName, Where: NewWhere(WhereStr, yyDollar[6].partitions), OrderBy: yyDollar[7].expr, Limit: yyDollar[8].orderBy, With: yyDollar[1].with}
		}
	case 70:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:783
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[5].tableNames, TableExprs: yyDollar[7].tableExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), With: yyDollar[1].with}
		}
	case 71:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:787
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), With: yyDollar[1].with}
		}
	case 72:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:791
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), With: yyDollar[1].with}
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:796
		{
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:797
		{
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:801
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:805
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:811
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:815
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:821
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:825
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 81:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:830
		{
			yyVAL.partitions = nil
		}
	case 82:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:834
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 83:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:840
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 84:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:844
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 85:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:851
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:860
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:864
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:870
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 89:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:874
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:878
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 91:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:884
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:888
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:892
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:896
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 95:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:901
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:906
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 97:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:911
		{
			yyVAL.boolean = yySpecialCommentMode(yylex)
		}
	case 98:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:917
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:926
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:931
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 101:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:936
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 102:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:940
		{
			yyDollar[2].viewSpec.ViewName = yyDollar[4].tableName.ToViewName()
			yyDollar[2].viewSpec.ViewExpr = yyDollar[8].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[2].viewSpec, SpecialCommentMode: yyDollar[7].boolean, SubStatementPositionStart: yyDollar[6].int, SubStatementPositionEnd: yyDollar[9].int - 1}
		}
	case 103:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:946
		{
			yyDollar[4].viewSpec.ViewName = yyDollar[6].tableName.ToViewName()
			yyDollar[4].viewSpec.ViewExpr = yyDollar[10].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[4].viewSpec, SpecialCommentMode: yyDollar[9].boolean, SubStatementPositionStart: yyDollar[8].int, SubStatementPositionEnd: yyDollar[11].int - 1, OrReplace: true}
		}
	case 104:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:952
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 105:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:960
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 106:
		yyDollar = yyS[yypt-16 : yypt+1]
//line sql.y:968
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName, Definer: yyDollar[2].str, Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[15].statement}, SpecialCommentMode: yyDollar[14].boolean, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[16].int - 1}
		}
	case 107:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:972
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName, Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[11].statement}, SpecialCommentMode: yyDollar[10].boolean, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[12].int - 1}
		}
	case 108:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:976
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].tlsOptionItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].accountLimitItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].passLockItems)
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames, TLSOptions: tlsOptions, AccountLimits: accountLimits, PasswordOptions: passwordOptions, Locked: locked, Attribute: yyDollar[9].str}
		}
	case 109:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:995
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 110:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1004
		{
			yyVAL.accountNames = nil
		}
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1008
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1013
		{
			yyVAL.tlsOptionItems = nil
		}
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1017
		{
			yyVAL.tlsOptionItems = nil
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1021
		{
			yyVAL.tlsOptionItems = yyDollar[2].tlsOptionItems
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1027
		{
			yyVAL.tlsOptionItems = []TLSOptionItem{yyDollar[1].tlsOptionItem}
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1031
		{
			yyVAL.tlsOptionItems = append(yyDollar[1].tlsOptionItems, yyDollar[3].tlsOptionItem)
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1037
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1041
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1045
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1049
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1053
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 122:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1058
		{
			yyVAL.accountLimitItems = nil
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1062
		{
			yyVAL.accountLimitItems = yyDollar[2].accountLimitItems
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1068
		{
			yyVAL.accountLimitItems = []AccountLimitItem{yyDollar[1].accountLimitItem}
		}
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1072
		{
			yyVAL.accountLimitItems = append(yyDollar[1].accountLimitItems, yyDollar[2].accountLimitItem)
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1078
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1082
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1086
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1090
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1095
		{
			yyVAL.passLockItems = nil
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1099
		{
			yyVAL.passLockItems = yyDollar[1].passLockItems
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1105
		{
			yyVAL.passLockItems = []PassLockItem{yyDollar[1].passLockItem}
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1109
		{
			yyVAL.passLockItems = append(yyDollar[1].passLockItems, yyDollar[2].passLockItem)
		}
	case 134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1115
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1119
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 136:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1123
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 137:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1127
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1131
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 139:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1135
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 140:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1139
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 141:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1143
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 142:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1147
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1151
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1155
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1159
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1163
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1167
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 148:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1172
		{
			yyVAL.str = ""
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1176
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.str = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1181
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 151:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1187
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 152:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1192
		{
			yyVAL.statement = &GrantPrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 153:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1196
		{
			yyVAL.statement = &GrantRole{Roles: yyDollar[2].accountNames, To: yyDollar[4].accountNames, WithAdminOption: yyDollar[5].boolean}
		}
	case 154:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1200
		{
			yyVAL.statement = &GrantProxy{On: yyDollar[4].accountName, To: yyDollar[6].accountNames, WithGrantOption: yyDollar[7].boolean}
		}
	case 155:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1206
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &RevokePrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 156:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1211
		{
			yyVAL.statement = &RevokePrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 157:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1215
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[7].accountNames}
		}
	case 158:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1219
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[8].accountNames}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1223
		{
			yyVAL.statement = &RevokeRole{Roles: yyDollar[2].accountNames, From: yyDollar[4].accountNames}
		}
	case 160:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1227
		{
			yyVAL.statement = &RevokeProxy{On: yyDollar[4].accountName, From: yyDollar[6].accountNames}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1233
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].strs}
		}
	case 162:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1237
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].strs}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1241
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].strs}
		}
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1245
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].strs}
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1249
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].strs}
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1253
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].strs}
		}
	case 167:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1257
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].strs}
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1261
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].strs}
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1265
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].strs}
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1269
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].strs}
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1273
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].strs}
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1277
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].strs}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1281
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].strs}
		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1285
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].strs}
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1289
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].strs}
		}
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1293
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].strs}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1297
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].strs}
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1301
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].strs}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1305
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].strs}
		}
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1309
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].strs}
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1313
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].strs}
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1317
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].strs}
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1321
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].strs}
		}
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1325
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].strs}
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1329
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].strs}
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1333
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].strs}
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1337
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].strs}
		}
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1341
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].strs}
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1345
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].strs}
		}
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1349
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].strs}
		}
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1353
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].strs}
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1359
		{
			yyVAL.grantPrivileges = []Privilege{yyDollar[1].grantPrivilege}
		}
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1363
		{
			yyVAL.grantPrivileges = append(yyDollar[1].grantPrivileges, yyDollar[3].grantPrivilege)
		}
	case 194:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1368
		{
			yyVAL.strs = nil
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1372
		{
			yyVAL.strs = yyDollar[2].strs
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1378
		{
			yyVAL.strs = []string{yyDollar[1].colIdent.String()}
		}
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1382
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].colIdent.String())
		}
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1387
		{
			yyVAL.grantObjectType = GrantObjectType_Any
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1391
		{
			yyVAL.grantObjectType = GrantObjectType_Table
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1395
		{
			yyVAL.grantObjectType = GrantObjectType_Function
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1399
		{
			yyVAL.grantObjectType = GrantObjectType_Procedure
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1405
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1409
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1413
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].colIdent.String()}
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1417
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: "*"}
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1421
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: yyDollar[3].colIdent.String()}
		}
	case 207:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1426
		{
			yyVAL.grantAssumption = nil
		}
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1430
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 209:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1434
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 210:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1438
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].accountName, Roles: nil}
		}
	case 211:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1442
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].accountName, Roles: nil}
		}
	case 212:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1446
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].accountName, Roles: yyDollar[7].accountNames}
		}
	case 213:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1450
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].accountName, Roles: yyDollar[5].accountNames}
		}
	case 214:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1455
		{
			yyVAL.boolean = false
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1459
		{
			yyVAL.boolean = true
		}
	case 216:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1464
		{
			yyVAL.boolean = false
		}
	case 217:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1468
		{
			yyVAL.boolean = true
		}
	case 218:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1475
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 219:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1487
		{
			yyVAL.procedureParams = nil
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1491
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1497
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1501
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1507
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[1].colIdent.String(), Type: yyDollar[2].columnType}
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1511
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1515
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1519
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 227:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1524
		{
			yyVAL.characteristics = nil
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1528
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1534
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1538
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1544
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1548
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1552
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1556
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1560
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1564
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1568
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1572
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1576
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1580
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 241:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1586
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1592
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: "", Definer: yyDollar[1].str, Security: yyDollar[2].str}
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1596
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: yyDollar[1].str, Definer: yyDollar[2].str, Security: yyDollar[3].str}
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1602
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1606
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1610
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 247:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1615
		{
			yyVAL.str = ""
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1619
		{
			yyVAL.str = yyDollar[3].accountName.String()
		}
	case 249:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1624
		{
			yyVAL.str = ""
		}
	case 250:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1628
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 251:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1632
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1638
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1642
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1646
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1652
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 256:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1660
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1664
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1670
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1674
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1680
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1688
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1696
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1706
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 264:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1710
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1716
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1720
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 267:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1724
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 268:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1728
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 269:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1732
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1738
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1742
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1746
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 273:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1750
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 274:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1754
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 275:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1758
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 276:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1764
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1768
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 278:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1772
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1778
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1782
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1788
		{
			yyVAL.str = BeforeStr
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1792
		{
			yyVAL.str = AfterStr
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1798
		{
			yyVAL.str = InsertStr
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1802
		{
			yyVAL.str = UpdateStr
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1806
		{
			yyVAL.str = DeleteStr
		}
	case 286:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1811
		{
			yyVAL.triggerOrder = nil
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1815
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1819
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1825
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 294:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1835
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 295:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1841
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 296:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1845
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1851
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1855
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 299:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1861
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 300:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1867
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 301:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1872
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 302:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1877
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 303:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1883
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1891
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1895
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 306:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1901
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 307:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1907
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 308:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1911
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 309:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1915
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 310:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1919
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1923
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 312:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1927
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1934
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1938
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1942
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1948
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1952
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1958
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1962
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1966
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1970
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1974
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1978
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1984
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 325:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1988
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1992
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1996
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2002
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2006
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2012
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2016
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2022
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2028
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2032
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2036
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2040
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2044
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2048
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2052
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2056
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2060
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2064
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2068
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2072
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2078
		{
			yyVAL.statement = &Resignal{}
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2082
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 347:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2086
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2090
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2094
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 350:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2098
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2104
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 352:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2109
		{
			yyVAL.exprs = nil
		}
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2113
		{
			yyVAL.exprs = nil
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2117
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2123
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2127
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2133
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 387:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2168
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
		}
	case 388:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2184
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2191
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2196
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2201
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2207
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 393:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2211
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2216
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2220
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2224
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2230
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2238
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2248
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 400:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2257
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2261
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2265
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 403:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2270
		{
			yyVAL.columnType = ColumnType{}
		}
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2274
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2283
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2292
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2301
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2310
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2319
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2328
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 411:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2337
		{
			opt := ColumnType{GeneratedExpr: yyDollar[4].expr, Stored: yyDollar[6].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 412:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2346
		{
			opt := ColumnType{GeneratedExpr: yyDollar[6].expr, Stored: yyDollar[8].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2355
		{
			opt := ColumnType{SRID: NewIntVal(yyDollar[3].bytes)}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2366
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2377
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2382
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2388
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2392
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2396
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2400
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2404
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2408
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2412
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2416
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2420
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2424
		{
			yyVAL.columnType = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 430:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2430
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2436
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2442
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 433:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2448
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2454
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 435:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2460
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2466
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2472
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2480
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2484
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2488
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 441:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2492
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2496
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 443:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2502
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2506
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2510
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2514
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2518
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 448:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2522
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 449:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2526
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2530
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2534
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2538
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2542
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2546
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2550
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2554
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2558
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2562
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2566
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 460:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2570
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2574
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2578
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2582
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2586
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2590
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 466:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2594
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 467:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2599
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 468:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2603
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2607
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2611
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 471:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2615
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, BinaryCollate: true}
		}
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2619
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2623
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2627
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2631
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2635
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 477:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2639
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 478:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2643
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, BinaryCollate: true}
		}
	case 479:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2647
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, BinaryCollate: true}
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2653
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2657
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2661
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2665
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2669
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2673
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2677
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2681
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2687
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2692
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 490:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2697
		{
			yyVAL.sqlVal = nil
		}
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2701
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 492:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2706
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 493:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2710
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 494:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2718
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2722
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 496:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2728
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2736
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2740
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2744
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 500:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2749
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2753
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2759
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2765
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2771
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 505:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2776
		{
			yyVAL.str = ""
		}
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2780
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2784
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 508:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2789
		{
			yyVAL.str = ""
		}
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2793
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2797
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 511:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2802
		{
			yyVAL.boolean = false
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2806
		{
			yyVAL.boolean = true
		}
	case 513:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2811
		{
			yyVAL.charsetCollates = nil
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2815
		{
			yyVAL.charsetCollates = yyDollar[1].charsetCollates
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2821
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2825
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2829
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2833
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2837
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2841
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 521:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2847
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 522:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2851
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 523:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2855
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 524:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2859
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 525:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2865
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 526:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2869
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 527:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2875
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2881
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2885
		{
			yyVAL.colKeyOpt = colKey
		}
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2889
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2893
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2897
		{
			yyVAL.colKeyOpt = colKeyFulltextKey
		}
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2903
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2909
		{
			yyVAL.statement = &Flush{Type: yyDollar[2].str, Option: yyDollar[3].flushOption}
		}
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2915
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2919
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2923
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2927
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2931
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2935
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2939
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2943
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2947
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].str}
		}
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2951
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2955
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2959
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 547:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2964
		{
			yyVAL.str = ""
		}
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2966
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2970
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2972
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 551:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2975
		{
			yyVAL.str = ""
		}
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2977
		{
			yyVAL.str = yyDollar[1].str
		}
	case 553:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2981
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 554:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2985
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 555:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2990
		{
			yyVAL.indexOptions = nil
		}
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2994
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3000
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3004
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3010
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3014
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3019
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 562:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3025
		{
			yyVAL.str = ""
		}
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3029
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3037
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 565:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3041
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3045
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3049
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true}
		}
	case 568:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3053
		{
			var name string
			name = yyDollar[2].str
			if name == "" {
				name = yyDollar[5].str
			}
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].str), Name: NewColIdent(name), Unique: true}
		}
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3062
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3066
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3070
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3076
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3080
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3084
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 575:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3090
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3094
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 577:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3099
		{
			yyVAL.str = ""
		}
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3103
		{
			yyVAL.str = yyDollar[1].str
		}
	case 579:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3108
		{
			yyVAL.str = ""
		}
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3112
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3118
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3122
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3128
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3132
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3138
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3142
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3146
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 588:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3152
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 589:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3156
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 590:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3160
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 591:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3164
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 592:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3168
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3174
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3178
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3182
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3186
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 597:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3192
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3198
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3202
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3207
		{
			yyVAL.str = ""
		}
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3211
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3215
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3221
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3227
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3233
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3237
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3241
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3245
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3249
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 610:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3254
		{
			yyVAL.boolean = true
		}
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3258
		{
			yyVAL.boolean = true
		}
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3262
		{
			yyVAL.boolean = false
		}
	case 613:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3267
		{
			yyVAL.str = ""
		}
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3271
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3275
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3283
		{
			yyVAL.str = yyDollar[1].str
		}
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3287
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3291
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3297
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3301
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3305
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 622:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3310
		{
			yyVAL.str = ""
		}
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3314
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 624:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3319
		{
			yyVAL.str = string("")
		}
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3323
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 627:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3332
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3345
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3349
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 630:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3355
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 631:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3362
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3369
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 633:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3373
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3377
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 635:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3382
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 636:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3386
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3390
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3395
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3400
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3405
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3410
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 642:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3414
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 643:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3418
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 644:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3425
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3431
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3435
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3441
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 648:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3447
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3452
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 650:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3456
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 651:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3460
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3464
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 653:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3470
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[7].indexColumns, Options: yyDollar[9].indexOptions}
			yyVAL.ddl = ddl
		}
	case 654:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3476
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3480
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 656:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3485
		{
			yyVAL.columnOrder = nil
		}
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3489
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3493
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 659:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3498
		{
		}
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3500
		{
		}
	case 661:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3504
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3510
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3514
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 664:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3520
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 665:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3524
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3530
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3534
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3540
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 669:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3544
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3552
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 671:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3556
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 672:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3562
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 673:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3570
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 674:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3574
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 675:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3582
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 676:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3590
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 677:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3598
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName}, IfExists: exists}
		}
	case 678:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3606
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName}, IfExists: exists}
		}
	case 679:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3614
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 680:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3622
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 681:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3631
		{

		}
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3635
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3639
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3645
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3649
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3655
		{
			yyVAL.statement = &Analyze{Tables: yyDollar[3].tableNames}
		}
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3661
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 688:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3666
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3670
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 690:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3674
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 691:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3678
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 692:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3682
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 693:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3687
		{
			yyVAL.statement = &Show{Type: CreateProcedureStr, Table: yyDollar[4].tableName}
		}
	case 694:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3691
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3695
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3699
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3703
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3707
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 699:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3711
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3715
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3719
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3723
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 703:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3727
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 704:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3731
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 705:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3735
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, AsOf: yyDollar[7].expr, Filter: yyDollar[8].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, Table: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 706:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3740
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3745
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 708:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3749
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3753
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3757
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 711:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3761
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3767
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3775
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 714:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3779
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 715:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3784
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 716:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3788
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3793
		{
			yyVAL.statement = &ShowPrivileges{}
		}
	case 718:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3797
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 719:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3801
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3805
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3809
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3815
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 723:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3821
		{
			yyVAL.boolean = false
		}
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3825
		{
			yyVAL.boolean = true
		}
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3831
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3835
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 727:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3841
		{
			yyVAL.str = ""
		}
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3845
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3849
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 730:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3855
		{
			yyVAL.showFilter = nil
		}
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3859
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3863
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[3].bytes)}
		}
	case 733:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3867
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 734:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3873
		{
			yyVAL.str = ""
		}
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3877
		{
			yyVAL.str = SessionStr
		}
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3881
		{
			yyVAL.str = GlobalStr
		}
	case 737:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3887
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3891
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: yyDollar[2].tableIdent.v + "/" + yyDollar[4].tableIdent.v}}
		}
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3895
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3901
		{
			yyVAL.statement = &Begin{}
		}
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3905
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3911
		{
			yyVAL.statement = &Begin{}
		}
	case 743:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3915
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3919
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3925
		{
			yyVAL.statement = &Commit{}
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3931
		{
			yyVAL.statement = &Rollback{}
		}
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3937
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3943
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3947
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 750:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3951
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 751:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3955
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3961
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3966
		{
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3967
		{
		}
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3971
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3975
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3981
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 761:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3989
		{
			yyVAL.str = ""
		}
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3993
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4004
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[3].expr}
			yyVAL.statement = &Show{Type: "columns", Table: yyDollar[2].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 766:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4010
		{
			setAllowComments(yylex, true)
		}
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4014
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 768:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4020
		{
			yyVAL.bytes2 = nil
		}
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4024
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4030
		{
			yyVAL.str = UnionStr
		}
	case 771:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4034
		{
			yyVAL.str = UnionAllStr
		}
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4038
		{
			yyVAL.str = UnionDistinctStr
		}
	case 773:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4043
		{
			yyVAL.byt = 0
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4047
		{
			yyVAL.byt = 1
		}
	case 775:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4052
		{
			yyVAL.str = ""
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4056
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4060
		{
			yyVAL.str = SQLCacheStr
		}
	case 778:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4065
		{
			yyVAL.str = ""
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4069
		{
			yyVAL.str = ""
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4073
		{
			yyVAL.str = DistinctStr
		}
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4078
		{
			yyVAL.str = ""
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4082
		{
			yyVAL.str = StraightJoinHint
		}
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4088
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 784:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4096
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4107
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4111
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4115
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 788:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4119
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4125
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4129
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4133
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 792:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4137
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4143
		{
			yyVAL.over = &Over{NameRef: yyDollar[2].colIdent}
		}
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4147
		{
			yyVAL.over = (*Over)(yyDollar[2].windowDef)
		}
	case 795:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4153
		{
			yyVAL.windowDef = &WindowDef{NameRef: yyDollar[2].colIdent, PartitionBy: yyDollar[3].exprs, OrderBy: yyDollar[4].orderBy, Frame: yyDollar[5].frame}
		}
	case 796:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4158
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4161
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 798:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4166
		{
			yyVAL.exprs = nil
		}
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4170
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 800:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4175
		{
			yyVAL.over = nil
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4179
		{
			yyVAL.over = yyDollar[1].over
		}
	case 802:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4184
		{
			yyVAL.frame = nil
		}
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4188
		{
			yyVAL.frame = &Frame{Unit: RowsUnit, Extent: yyDollar[2].frameExtent}
		}
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4192
		{
			yyVAL.frame = &Frame{Unit: RangeUnit, Extent: yyDollar[2].frameExtent}
		}
	case 805:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4199
		{
			startBound := yyDollar[2].frameBound
			endBound := yyDollar[4].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound, End: endBound}
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4222
		{
			startBound := yyDollar[1].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound}
		}
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4237
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedPreceding}
		}
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4241
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedFollowing}
		}
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4245
		{
			yyVAL.frameBound = &FrameBound{Type: CurrentRow}
		}
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4249
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprPreceding,
			}
		}
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4256
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprFollowing,
			}
		}
	case 812:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4264
		{
			yyVAL.window = nil
		}
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4267
		{
			yyVAL.window = yyDollar[2].window
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4273
		{
			yyVAL.window = Window{yyDollar[1].windowDef}
		}
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4276
		{
			yyVAL.window = append(yyDollar[1].window, yyDollar[3].windowDef)
		}
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4282
		{
			def := yyDollar[3].windowDef
			def.Name = yyDollar[1].colIdent
			yyVAL.windowDef = def
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4291
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4295
		{
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 819:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4300
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4304
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4308
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4314
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4318
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4322
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4326
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4332
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4336
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4346
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 831:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4350
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4360
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4366
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4373
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 836:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4379
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 837:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4383
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 838:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4389
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 839:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4394
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4405
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 841:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4409
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 842:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4413
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4417
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4421
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 845:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4432
		{
			yyVAL.expr = nil
		}
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4436
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 847:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4441
		{
			yyVAL.columns = nil
		}
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4445
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4451
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4455
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4461
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4465
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 853:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4471
		{
			yyVAL.tableExpr = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].selectExprs}
		}
	case 854:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4484
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 855:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4488
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 856:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4492
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4496
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4502
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 859:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4504
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 860:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4508
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4510
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 862:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4514
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4516
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 864:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4519
		{
			yyVAL.empty = struct{}{}
		}
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4521
		{
			yyVAL.empty = struct{}{}
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4526
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4530
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4536
		{
			yyVAL.str = JoinStr
		}
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4540
		{
			yyVAL.str = JoinStr
		}
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4544
		{
			yyVAL.str = JoinStr
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4550
		{
			yyVAL.str = StraightJoinStr
		}
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4556
		{
			yyVAL.str = LeftJoinStr
		}
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4560
		{
			yyVAL.str = LeftJoinStr
		}
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4564
		{
			yyVAL.str = RightJoinStr
		}
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4568
		{
			yyVAL.str = RightJoinStr
		}
	case 877:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4574
		{
			yyVAL.str = NaturalJoinStr
		}
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4578
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4588
		{
			yyVAL.triggerName = TriggerName{Name: yyDollar[1].colIdent}
		}
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4592
		{
			yyVAL.triggerName = TriggerName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4598
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 882:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4604
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4608
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4614
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4618
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4624
		{
			yyVAL.procedureName = ProcedureName{Name: yyDollar[1].colIdent}
		}
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4628
		{
			yyVAL.procedureName = ProcedureName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4634
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 889:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4639
		{
			yyVAL.indexHints = nil
		}
	case 890:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4643
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 891:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4647
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 892:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4651
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 893:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4656
		{
			yyVAL.expr = nil
		}
	case 894:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4660
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4666
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4670
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4674
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4678
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4682
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4686
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4690
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 902:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4694
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 903:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4700
		{
			yyVAL.str = ""
		}
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4704
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4710
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4714
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4720
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4724
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 909:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4728
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 910:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4732
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 911:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4736
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4740
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 913:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4744
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 914:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4748
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 915:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4752
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 916:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4756
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4762
		{
			yyVAL.str = IsNullStr
		}
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4766
		{
			yyVAL.str = IsNotNullStr
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4770
		{
			yyVAL.str = IsTrueStr
		}
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4774
		{
			yyVAL.str = IsNotTrueStr
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4778
		{
			yyVAL.str = IsFalseStr
		}
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4782
		{
			yyVAL.str = IsNotFalseStr
		}
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4788
		{
			yyVAL.str = EqualStr
		}
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4792
		{
			yyVAL.str = LessThanStr
		}
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4796
		{
			yyVAL.str = GreaterThanStr
		}
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4800
		{
			yyVAL.str = LessEqualStr
		}
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4804
		{
			yyVAL.str = GreaterEqualStr
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4808
		{
			yyVAL.str = NotEqualStr
		}
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4812
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 930:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4817
		{
			yyVAL.expr = nil
		}
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4821
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4827
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4831
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4835
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4841
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4847
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4851
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 938:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4857
		{
			yyVAL.selectExprs = nil
		}
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4864
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4868
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4874
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4878
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4884
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4888
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4892
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4896
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4900
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4904
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4908
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4912
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4916
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4920
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4924
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4928
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4932
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4936
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4940
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4944
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4948
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4952
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4956
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4960
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4964
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4968
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4972
		{
			yyVAL.expr = &UnaryExpr{Operator: yyDollar[1].str, Expr: yyDollar[2].expr}
		}
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4976
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4984
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4998
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5002
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5006
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 978:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5026
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 979:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5030
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 980:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5040
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 981:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5044
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 982:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5048
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 983:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5052
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 984:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5056
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 985:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5060
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 986:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5064
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 987:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5068
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 988:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5072
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 989:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5076
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 990:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5080
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 991:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5084
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 992:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5088
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 993:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5092
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 994:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5096
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 995:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5100
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 996:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5104
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 997:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5113
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 998:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5117
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 999:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5121
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 1000:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5125
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1001:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5129
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 1002:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5133
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1003:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5137
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1004:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5141
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1005:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5145
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1006:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5149
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1007:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5153
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1008:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5164
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1009:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5168
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1010:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5172
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5176
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1012:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5180
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 1013:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5184
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 1014:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5188
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 1015:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5192
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1016:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5196
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1017:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5200
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1018:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5204
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1019:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5208
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 1020:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5212
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 1021:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5216
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 1022:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5220
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 1023:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5224
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 1024:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5228
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 1025:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5232
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1026:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5236
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 1027:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5240
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 1028:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5244
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5254
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1030:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5258
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1031:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5262
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1032:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5267
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1033:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5272
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1034:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5277
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1035:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5283
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1036:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5288
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1037:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5292
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1038:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5297
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1039:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5301
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1040:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5305
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1041:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5310
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5315
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1043:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5320
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1044:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5324
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1045:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5328
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1048:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5339
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1049:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5349
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1050:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5353
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1051:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5357
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1052:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5361
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1053:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5365
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1054:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5369
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1055:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5375
		{
			yyVAL.str = ""
		}
	case 1056:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5379
		{
			yyVAL.str = BooleanModeStr
		}
	case 1057:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5383
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 1058:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5387
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 1059:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5391
		{
			yyVAL.str = QueryExpansionStr
		}
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5397
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5401
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5407
		{
			yyVAL.str = Armscii8Str
		}
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5411
		{
			yyVAL.str = AsciiStr
		}
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5415
		{
			yyVAL.str = Big5Str
		}
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5419
		{
			yyVAL.str = UBinaryStr
		}
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5423
		{
			yyVAL.str = Cp1250Str
		}
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5427
		{
			yyVAL.str = Cp1251Str
		}
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5431
		{
			yyVAL.str = Cp1256Str
		}
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5435
		{
			yyVAL.str = Cp1257Str
		}
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5439
		{
			yyVAL.str = Cp850Str
		}
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5443
		{
			yyVAL.str = Cp852Str
		}
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5447
		{
			yyVAL.str = Cp866Str
		}
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5451
		{
			yyVAL.str = Cp932Str
		}
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5455
		{
			yyVAL.str = Dec8Str
		}
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5459
		{
			yyVAL.str = EucjpmsStr
		}
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5463
		{
			yyVAL.str = EuckrStr
		}
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5467
		{
			yyVAL.str = Gb18030Str
		}
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5471
		{
			yyVAL.str = Gb2312Str
		}
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5475
		{
			yyVAL.str = GbkStr
		}
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5479
		{
			yyVAL.str = Geostd8Str
		}
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5483
		{
			yyVAL.str = GreekStr
		}
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5487
		{
			yyVAL.str = HebrewStr
		}
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5491
		{
			yyVAL.str = Hp8Str
		}
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5495
		{
			yyVAL.str = Keybcs2Str
		}
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5499
		{
			yyVAL.str = Koi8rStr
		}
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5503
		{
			yyVAL.str = Koi8uStr
		}
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5507
		{
			yyVAL.str = Latin1Str
		}
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5511
		{
			yyVAL.str = Latin2Str
		}
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5515
		{
			yyVAL.str = Latin5Str
		}
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5519
		{
			yyVAL.str = Latin7Str
		}
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5523
		{
			yyVAL.str = MacceStr
		}
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5527
		{
			yyVAL.str = MacromanStr
		}
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5531
		{
			yyVAL.str = SjisStr
		}
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5535
		{
			yyVAL.str = Swe7Str
		}
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5539
		{
			yyVAL.str = Tis620Str
		}
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5543
		{
			yyVAL.str = Ucs2Str
		}
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5547
		{
			yyVAL.str = UjisStr
		}
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5551
		{
			yyVAL.str = Utf16Str
		}
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5555
		{
			yyVAL.str = Utf16leStr
		}
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5559
		{
			yyVAL.str = Utf32Str
		}
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5563
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5567
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5571
		{
			yyVAL.str = Utf8mb4Str
		}
	case 1104:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5577
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5581
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 1106:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5585
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5589
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5593
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5597
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5603
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1111:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5607
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5611
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5615
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5619
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5623
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5627
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1117:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5632
		{
			yyVAL.expr = nil
		}
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5636
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1119:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5641
		{
			yyVAL.str = string("")
		}
	case 1120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5645
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5651
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 1122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5655
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 1123:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5661
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 1124:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5666
		{
			yyVAL.expr = nil
		}
	case 1125:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5670
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5676
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5680
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 1128:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5684
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5690
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5694
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5698
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5702
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5706
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5710
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5714
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5718
		{
			yyVAL.expr = &NullVal{}
		}
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5724
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 1138:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5728
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5732
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1140:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5737
		{
			yyVAL.exprs = nil
		}
	case 1141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5741
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5747
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5751
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5757
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1145:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5762
		{
			yyVAL.expr = nil
		}
	case 1146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5766
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5772
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1148:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5777
		{
			yyVAL.orderBy = nil
		}
	case 1149:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5781
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5787
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 1151:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5791
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 1152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5797
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 1153:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5802
		{
			yyVAL.str = AscScr
		}
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5806
		{
			yyVAL.str = AscScr
		}
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5810
		{
			yyVAL.str = DescScr
		}
	case 1156:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5815
		{
			yyVAL.limit = nil
		}
	case 1157:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5819
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 1158:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5823
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 1159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5827
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5833
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5837
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1162:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5842
		{
			yyVAL.str = ""
		}
	case 1163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5846
		{
			yyVAL.str = ForUpdateStr
		}
	case 1164:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5850
		{
			yyVAL.str = ShareModeStr
		}
	case 1165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5863
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 1166:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5867
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5871
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 1168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5875
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 1169:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5880
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 1170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5884
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 1171:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5888
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 1172:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5894
		{
			yyVAL.columns = nil
		}
	case 1173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5898
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5904
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5908
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 1176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5912
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1177:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5916
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 1178:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5921
		{
			yyVAL.assignExprs = nil
		}
	case 1179:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5925
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5931
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 1181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5935
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5941
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 1183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5945
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 1184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5951
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5957
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5967
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 1187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5971
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 1188:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5977
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 1189:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5980
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5986
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 1191:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5990
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5996
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 1193:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6007
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1194:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6020
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6033
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6039
		{
			yyVAL.setScope = SetScope_Global
		}
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6043
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6049
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6053
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6057
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 1201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6063
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1202:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6067
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6071
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 1205:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6078
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6085
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6089
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6093
		{
			yyVAL.expr = &Default{}
		}
	case 1212:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6102
		{
			yyVAL.byt = 0
		}
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6104
		{
			yyVAL.byt = 1
		}
	case 1214:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6107
		{
			yyVAL.byt = 0
		}
	case 1215:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6109
		{
			yyVAL.byt = 1
		}
	case 1216:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6112
		{
			yyVAL.byt = 0
		}
	case 1217:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6114
		{
			yyVAL.byt = 1
		}
	case 1218:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6117
		{
			yyVAL.str = ""
		}
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6119
		{
			yyVAL.str = IgnoreStr
		}
	case 1220:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6122
		{
			yyVAL.sqlVal = nil
		}
	case 1221:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6124
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1222:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6126
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6130
		{
			yyVAL.empty = struct{}{}
		}
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6132
		{
			yyVAL.empty = struct{}{}
		}
	case 1225:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6135
		{
			yyVAL.empty = struct{}{}
		}
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6137
		{
			yyVAL.empty = struct{}{}
		}
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6139
		{
			yyVAL.empty = struct{}{}
		}
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6143
		{
			yyVAL.str = UniqueStr
		}
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6145
		{
			yyVAL.str = FulltextStr
		}
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6147
		{
			yyVAL.str = SpatialStr
		}
	case 1231:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6150
		{
			yyVAL.str = ""
		}
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6152
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1233:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6155
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 1234:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6157
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6161
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6165
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6171
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 1238:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6175
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6182
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6188
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6192
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6199
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1245:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6204
		{
			yyVAL.str = string("")
		}
	case 1246:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6206
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1247:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6209
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6211
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1249:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6214
		{
			yyVAL.EnclosedBy = nil
		}
	case 1250:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6218
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1251:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6223
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6227
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1253:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6232
		{
			yyVAL.sqlVal = nil
		}
	case 1254:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6236
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1255:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6241
		{
			yyVAL.sqlVal = nil
		}
	case 1256:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6245
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1257:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6250
		{
			yyVAL.Fields = nil
		}
	case 1258:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6254
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1259:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6259
		{
			yyVAL.Lines = nil
		}
	case 1260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6263
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1261:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6268
		{
			yyVAL.sqlVal = nil
		}
	case 1262:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6272
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1263:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6278
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6284
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1265:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6288
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1266:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6294
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1267:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6298
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6304
		{
			yyVAL.lockType = LockRead
		}
	case 1269:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6308
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6312
		{
			yyVAL.lockType = LockWrite
		}
	case 1271:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6316
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1272:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6322
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1273:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6328
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[2].bytes)}
		}
	case 1274:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6332
		{
			yyVAL.statement = &Kill{ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6336
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6861
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6870
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
