// Code generated by goyacc -o sql.go -v y.output sql.y. DO NOT EDIT.

//line sql.y:17

package sqlparser

import __yyfmt__ "fmt"

//line sql.y:19

import "fmt"

//import "runtime/debug"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

func yySpecialCommentMode(yylex interface{}) bool {
	tkn := yylex.(*Tokenizer)
	return tkn.specialComment != nil
}

//line sql.y:64
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	variables                Variables
	into                     *Into
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	triggerName              TriggerName
	tableName                TableName
	tableNames               TableNames
	procedureName            ProcedureName
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	flushOption              *FlushOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	viewSpec                 *ViewSpec
	showFilter               *ShowFilter
	frame                    *Frame
	frameExtent              *FrameExtent
	frameBound               *FrameBound
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	charsetCollate           *CharsetAndCollate
	charsetCollates          []*CharsetAndCollate
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptionItem            TLSOptionItem
	tlsOptionItems           []TLSOptionItem
	accountLimitItem         AccountLimitItem
	accountLimitItems        []AccountLimitItem
	passLockItem             PassLockItem
	passLockItems            []PassLockItem
	grantPrivilege           Privilege
	grantPrivileges          []Privilege
	grantObjectType          GrantObjectType
	privilegeLevel           PrivilegeLevel
	grantAssumption          *GrantUserAssumption
	with                     *With
	window                   Window
	over                     *Over
	windowDef                *WindowDef
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const DUPLICATE = 57369
const DEFAULT = 57370
const SET = 57371
const LOCK = 57372
const UNLOCK = 57373
const KEYS = 57374
const OF = 57375
const OUTFILE = 57376
const DUMPFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const INTO = 57425
const OR = 57426
const XOR = 57427
const AND = 57428
const NOT = 57429
const BETWEEN = 57430
const CASE = 57431
const WHEN = 57432
const THEN = 57433
const ELSE = 57434
const ELSEIF = 57435
const END = 57436
const LE = 57437
const GE = 57438
const NE = 57439
const NULL_SAFE_EQUAL = 57440
const IS = 57441
const LIKE = 57442
const REGEXP = 57443
const IN = 57444
const UNBOUNDED = 57445
const PARTITION = 57446
const RANGE = 57447
const ROWS = 57448
const GROUPS = 57449
const PRECEDING = 57450
const FOLLOWING = 57451
const SHIFT_LEFT = 57452
const SHIFT_RIGHT = 57453
const DIV = 57454
const MOD = 57455
const UNARY = 57456
const COLLATE = 57457
const BINARY = 57458
const UNDERSCORE_ARMSCII8 = 57459
const UNDERSCORE_ASCII = 57460
const UNDERSCORE_BIG5 = 57461
const UNDERSCORE_BINARY = 57462
const UNDERSCORE_CP1250 = 57463
const UNDERSCORE_CP1251 = 57464
const UNDERSCORE_CP1256 = 57465
const UNDERSCORE_CP1257 = 57466
const UNDERSCORE_CP850 = 57467
const UNDERSCORE_CP852 = 57468
const UNDERSCORE_CP866 = 57469
const UNDERSCORE_CP932 = 57470
const UNDERSCORE_DEC8 = 57471
const UNDERSCORE_EUCJPMS = 57472
const UNDERSCORE_EUCKR = 57473
const UNDERSCORE_GB18030 = 57474
const UNDERSCORE_GB2312 = 57475
const UNDERSCORE_GBK = 57476
const UNDERSCORE_GEOSTD8 = 57477
const UNDERSCORE_GREEK = 57478
const UNDERSCORE_HEBREW = 57479
const UNDERSCORE_HP8 = 57480
const UNDERSCORE_KEYBCS2 = 57481
const UNDERSCORE_KOI8R = 57482
const UNDERSCORE_KOI8U = 57483
const UNDERSCORE_LATIN1 = 57484
const UNDERSCORE_LATIN2 = 57485
const UNDERSCORE_LATIN5 = 57486
const UNDERSCORE_LATIN7 = 57487
const UNDERSCORE_MACCE = 57488
const UNDERSCORE_MACROMAN = 57489
const UNDERSCORE_SJIS = 57490
const UNDERSCORE_SWE7 = 57491
const UNDERSCORE_TIS620 = 57492
const UNDERSCORE_UCS2 = 57493
const UNDERSCORE_UJIS = 57494
const UNDERSCORE_UTF16 = 57495
const UNDERSCORE_UTF16LE = 57496
const UNDERSCORE_UTF32 = 57497
const UNDERSCORE_UTF8 = 57498
const UNDERSCORE_UTF8MB3 = 57499
const UNDERSCORE_UTF8MB4 = 57500
const INTERVAL = 57501
const JSON_EXTRACT_OP = 57502
const JSON_UNQUOTE_EXTRACT_OP = 57503
const CREATE = 57504
const ALTER = 57505
const DROP = 57506
const RENAME = 57507
const ANALYZE = 57508
const ADD = 57509
const MODIFY = 57510
const CHANGE = 57511
const SCHEMA = 57512
const TABLE = 57513
const INDEX = 57514
const INDEXES = 57515
const VIEW = 57516
const TO = 57517
const IGNORE = 57518
const IF = 57519
const PRIMARY = 57520
const COLUMN = 57521
const SPATIAL = 57522
const FULLTEXT = 57523
const KEY_BLOCK_SIZE = 57524
const CHECK = 57525
const ACTION = 57526
const CASCADE = 57527
const CONSTRAINT = 57528
const FOREIGN = 57529
const NO = 57530
const REFERENCES = 57531
const RESTRICT = 57532
const FIRST = 57533
const AFTER = 57534
const SHOW = 57535
const DESCRIBE = 57536
const EXPLAIN = 57537
const DATE = 57538
const ESCAPE = 57539
const REPAIR = 57540
const OPTIMIZE = 57541
const TRUNCATE = 57542
const FORMAT = 57543
const MAXVALUE = 57544
const REORGANIZE = 57545
const LESS = 57546
const THAN = 57547
const PROCEDURE = 57548
const TRIGGER = 57549
const TRIGGERS = 57550
const FUNCTION = 57551
const STATUS = 57552
const VARIABLES = 57553
const WARNINGS = 57554
const ERRORS = 57555
const KILL = 57556
const CONNECTION = 57557
const SEQUENCE = 57558
const ENABLE = 57559
const DISABLE = 57560
const EACH = 57561
const ROW = 57562
const BEFORE = 57563
const FOLLOWS = 57564
const PRECEDES = 57565
const DEFINER = 57566
const INVOKER = 57567
const INOUT = 57568
const OUT = 57569
const DETERMINISTIC = 57570
const CONTAINS = 57571
const READS = 57572
const MODIFIES = 57573
const SQL = 57574
const SECURITY = 57575
const TEMPORARY = 57576
const ALGORITHM = 57577
const MERGE = 57578
const TEMPTABLE = 57579
const UNDEFINED = 57580
const CLASS_ORIGIN = 57581
const SUBCLASS_ORIGIN = 57582
const MESSAGE_TEXT = 57583
const MYSQL_ERRNO = 57584
const CONSTRAINT_CATALOG = 57585
const CONSTRAINT_SCHEMA = 57586
const CONSTRAINT_NAME = 57587
const CATALOG_NAME = 57588
const SCHEMA_NAME = 57589
const TABLE_NAME = 57590
const COLUMN_NAME = 57591
const CURSOR_NAME = 57592
const SIGNAL = 57593
const RESIGNAL = 57594
const SQLSTATE = 57595
const DECLARE = 57596
const CONDITION = 57597
const CURSOR = 57598
const CONTINUE = 57599
const EXIT = 57600
const UNDO = 57601
const HANDLER = 57602
const FOUND = 57603
const SQLWARNING = 57604
const SQLEXCEPTION = 57605
const USER = 57606
const IDENTIFIED = 57607
const ROLE = 57608
const REUSE = 57609
const GRANT = 57610
const GRANTS = 57611
const REVOKE = 57612
const NONE = 57613
const ATTRIBUTE = 57614
const RANDOM = 57615
const PASSWORD = 57616
const INITIAL = 57617
const AUTHENTICATION = 57618
const SSL = 57619
const X509 = 57620
const CIPHER = 57621
const ISSUER = 57622
const SUBJECT = 57623
const ACCOUNT = 57624
const EXPIRE = 57625
const NEVER = 57626
const DAY = 57627
const OPTION = 57628
const OPTIONAL = 57629
const EXCEPT = 57630
const ADMIN = 57631
const PRIVILEGES = 57632
const MAX_QUERIES_PER_HOUR = 57633
const MAX_UPDATES_PER_HOUR = 57634
const MAX_CONNECTIONS_PER_HOUR = 57635
const MAX_USER_CONNECTIONS = 57636
const FLUSH = 57637
const FAILED_LOGIN_ATTEMPTS = 57638
const PASSWORD_LOCK_TIME = 57639
const REQUIRE = 57640
const PROXY = 57641
const ROUTINE = 57642
const TABLESPACE = 57643
const CLIENT = 57644
const SLAVE = 57645
const EVENT = 57646
const EXECUTE = 57647
const FILE = 57648
const RELOAD = 57649
const REPLICATION = 57650
const SHUTDOWN = 57651
const SUPER = 57652
const USAGE = 57653
const LOGS = 57654
const ENGINE = 57655
const ERROR = 57656
const GENERAL = 57657
const HOSTS = 57658
const OPTIMIZER_COSTS = 57659
const RELAY = 57660
const SLOW = 57661
const USER_RESOURCES = 57662
const NO_WRITE_TO_BINLOG = 57663
const CHANNEL = 57664
const BEGIN = 57665
const START = 57666
const TRANSACTION = 57667
const COMMIT = 57668
const ROLLBACK = 57669
const SAVEPOINT = 57670
const WORK = 57671
const RELEASE = 57672
const BIT = 57673
const TINYINT = 57674
const SMALLINT = 57675
const MEDIUMINT = 57676
const INT = 57677
const INTEGER = 57678
const BIGINT = 57679
const INTNUM = 57680
const SERIAL = 57681
const REAL = 57682
const DOUBLE = 57683
const FLOAT_TYPE = 57684
const DECIMAL = 57685
const NUMERIC = 57686
const DEC = 57687
const FIXED = 57688
const PRECISION = 57689
const TIME = 57690
const TIMESTAMP = 57691
const DATETIME = 57692
const YEAR = 57693
const CHAR = 57694
const VARCHAR = 57695
const BOOL = 57696
const CHARACTER = 57697
const VARBINARY = 57698
const NCHAR = 57699
const NVARCHAR = 57700
const NATIONAL = 57701
const VARYING = 57702
const TEXT = 57703
const TINYTEXT = 57704
const MEDIUMTEXT = 57705
const LONGTEXT = 57706
const LONG = 57707
const BLOB = 57708
const TINYBLOB = 57709
const MEDIUMBLOB = 57710
const LONGBLOB = 57711
const JSON = 57712
const ENUM = 57713
const GEOMETRY = 57714
const POINT = 57715
const LINESTRING = 57716
const POLYGON = 57717
const GEOMETRYCOLLECTION = 57718
const MULTIPOINT = 57719
const MULTILINESTRING = 57720
const MULTIPOLYGON = 57721
const LOCAL = 57722
const LOW_PRIORITY = 57723
const NULLX = 57724
const AUTO_INCREMENT = 57725
const APPROXNUM = 57726
const SIGNED = 57727
const UNSIGNED = 57728
const ZEROFILL = 57729
const SRID = 57730
const COLLATION = 57731
const DATABASES = 57732
const SCHEMAS = 57733
const TABLES = 57734
const FULL = 57735
const PROCESSLIST = 57736
const COLUMNS = 57737
const FIELDS = 57738
const ENGINES = 57739
const PLUGINS = 57740
const NAMES = 57741
const CHARSET = 57742
const GLOBAL = 57743
const SESSION = 57744
const ISOLATION = 57745
const LEVEL = 57746
const READ = 57747
const WRITE = 57748
const ONLY = 57749
const REPEATABLE = 57750
const COMMITTED = 57751
const UNCOMMITTED = 57752
const SERIALIZABLE = 57753
const ENCRYPTION = 57754
const CURRENT_TIMESTAMP = 57755
const DATABASE = 57756
const CURRENT_DATE = 57757
const CURRENT_USER = 57758
const CURRENT_TIME = 57759
const LOCALTIME = 57760
const LOCALTIMESTAMP = 57761
const UTC_DATE = 57762
const UTC_TIME = 57763
const UTC_TIMESTAMP = 57764
const REPLACE = 57765
const CONVERT = 57766
const CAST = 57767
const SUBSTR = 57768
const SUBSTRING = 57769
const TRIM = 57770
const LEADING = 57771
const TRAILING = 57772
const BOTH = 57773
const GROUP_CONCAT = 57774
const SEPARATOR = 57775
const TIMESTAMPADD = 57776
const TIMESTAMPDIFF = 57777
const OVER = 57778
const WINDOW = 57779
const GROUPING = 57780
const CURRENT = 57781
const AVG = 57782
const BIT_AND = 57783
const BIT_OR = 57784
const BIT_XOR = 57785
const COUNT = 57786
const JSON_ARRAYAGG = 57787
const JSON_OBJECTAGG = 57788
const MAX = 57789
const MIN = 57790
const STDDEV_POP = 57791
const STDDEV = 57792
const STD = 57793
const STDDEV_SAMP = 57794
const SUM = 57795
const VAR_POP = 57796
const VARIANCE = 57797
const VAR_SAMP = 57798
const CUME_DIST = 57799
const DENSE_RANK = 57800
const FIRST_VALUE = 57801
const LAG = 57802
const LAST_VALUE = 57803
const LEAD = 57804
const NTH_VALUE = 57805
const NTILE = 57806
const ROW_NUMBER = 57807
const PERCENT_RANK = 57808
const RANK = 57809
const JSON_TABLE = 57810
const PATH = 57811
const AVG_ROW_LENGTH = 57812
const CHECKSUM = 57813
const COMPRESSION = 57814
const DIRECTORY = 57815
const DELAY_KEY_WRITE = 57816
const ENGINE_ATTRIBUTE = 57817
const INSERT_METHOD = 57818
const MAX_ROWS = 57819
const MIN_ROWS = 57820
const PACK_KEYS = 57821
const ROW_FORMAT = 57822
const SECONDARY_ENGINE_ATTRIBUTE = 57823
const STATS_AUTO_RECALC = 57824
const STATS_PERSISTENT = 57825
const STATS_SAMPLE_PAGES = 57826
const INNODB = 57827
const ASCII_BIN = 57828
const TABLESPACE_NAME = 57829
const STORAGE = 57830
const DISK = 57831
const MATCH = 57832
const AGAINST = 57833
const BOOLEAN = 57834
const LANGUAGE = 57835
const WITH = 57836
const QUERY = 57837
const EXPANSION = 57838
const ACCESSIBLE = 57839
const ASENSITIVE = 57840
const CUBE = 57841
const DAY_HOUR = 57842
const DAY_MICROSECOND = 57843
const DAY_MINUTE = 57844
const DAY_SECOND = 57845
const DELAYED = 57846
const DISTINCTROW = 57847
const DUAL = 57848
const EMPTY = 57849
const FETCH = 57850
const FLOAT4 = 57851
const FLOAT8 = 57852
const GET = 57853
const HIGH_PRIORITY = 57854
const HOUR_MICROSECOND = 57855
const HOUR_MINUTE = 57856
const HOUR_SECOND = 57857
const INSENSITIVE = 57858
const INT1 = 57859
const INT2 = 57860
const INT3 = 57861
const INT4 = 57862
const INT8 = 57863
const IO_AFTER_GTIDS = 57864
const IO_BEFORE_GTIDS = 57865
const ITERATE = 57866
const LEAVE = 57867
const LINEAR = 57868
const LOOP = 57869
const MASTER_BIND = 57870
const MASTER_SSL_VERIFY_SERVER_CERT = 57871
const MIDDLEINT = 57872
const MINUTE_MICROSECOND = 57873
const MINUTE_SECOND = 57874
const PURGE = 57875
const READ_WRITE = 57876
const REPEAT = 57877
const RETURN = 57878
const RLIKE = 57879
const SECOND_MICROSECOND = 57880
const SENSITIVE = 57881
const SPECIFIC = 57882
const SQL_BIG_RESULT = 57883
const SQL_SMALL_RESULT = 57884
const VARCHARACTER = 57885
const WHILE = 57886
const YEAR_MONTH = 57887
const UNUSED = 57888
const DESCRIPTION = 57889
const LATERAL = 57890
const MEMBER = 57891
const RECURSIVE = 57892
const BUCKETS = 57893
const CLONE = 57894
const COMPONENT = 57895
const DEFINITION = 57896
const ENFORCED = 57897
const EXCLUDE = 57898
const GEOMCOLLECTION = 57899
const GET_MASTER_PUBLIC_KEY = 57900
const HISTOGRAM = 57901
const HISTORY = 57902
const INACTIVE = 57903
const INVISIBLE = 57904
const LOCKED = 57905
const MASTER_COMPRESSION_ALGORITHMS = 57906
const MASTER_PUBLIC_KEY_PATH = 57907
const MASTER_TLS_CIPHERSUITES = 57908
const MASTER_ZSTD_COMPRESSION_LEVEL = 57909
const NESTED = 57910
const NETWORK_NAMESPACE = 57911
const NOWAIT = 57912
const NULLS = 57913
const OJ = 57914
const OLD = 57915
const ORDINALITY = 57916
const ORGANIZATION = 57917
const OTHERS = 57918
const PERSIST = 57919
const PERSIST_ONLY = 57920
const PRIVILEGE_CHECKS_USER = 57921
const PROCESS = 57922
const REFERENCE = 57923
const REQUIRE_ROW_FORMAT = 57924
const RESOURCE = 57925
const RESPECT = 57926
const RESTART = 57927
const RETAIN = 57928
const SECONDARY = 57929
const SECONDARY_ENGINE = 57930
const SECONDARY_LOAD = 57931
const SECONDARY_UNLOAD = 57932
const SKIP = 57933
const THREAD_PRIORITY = 57934
const TIES = 57935
const VCPU = 57936
const VISIBLE = 57937
const SYSTEM = 57938
const INFILE = 57939
const ACTIVE = 57940
const AGGREGATE = 57941
const ANY = 57942
const ARRAY = 57943
const ASCII = 57944
const AT = 57945
const AUTOEXTEND_SIZE = 57946
const ENDS = 57947
const EVENTS = 57948
const GENERATED = 57949
const ALWAYS = 57950
const STORED = 57951
const VIRTUAL = 57952
const NVAR = 57953
const PASSWORD_LOCK = 57954

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DUMPFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"INTO",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB3",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"ENABLE",
	"DISABLE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"ALGORITHM",
	"MERGE",
	"TEMPTABLE",
	"UNDEFINED",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTION",
	"OPTIONAL",
	"EXCEPT",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EVENT",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"SRID",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ENCRYPTION",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"JSON_TABLE",
	"PATH",
	"AVG_ROW_LENGTH",
	"CHECKSUM",
	"COMPRESSION",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"INNODB",
	"ASCII_BIN",
	"TABLESPACE_NAME",
	"STORAGE",
	"DISK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ACCESSIBLE",
	"ASENSITIVE",
	"CUBE",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"DELAYED",
	"DISTINCTROW",
	"DUAL",
	"EMPTY",
	"FETCH",
	"FLOAT4",
	"FLOAT8",
	"GET",
	"HIGH_PRIORITY",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"INSENSITIVE",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"IO_AFTER_GTIDS",
	"IO_BEFORE_GTIDS",
	"ITERATE",
	"LEAVE",
	"LINEAR",
	"LOOP",
	"MASTER_BIND",
	"MASTER_SSL_VERIFY_SERVER_CERT",
	"MIDDLEINT",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"PURGE",
	"READ_WRITE",
	"REPEAT",
	"RETURN",
	"RLIKE",
	"SECOND_MICROSECOND",
	"SENSITIVE",
	"SPECIFIC",
	"SQL_BIG_RESULT",
	"SQL_SMALL_RESULT",
	"VARCHARACTER",
	"WHILE",
	"YEAR_MONTH",
	"UNUSED",
	"DESCRIPTION",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"ACTIVE",
	"AGGREGATE",
	"ANY",
	"ARRAY",
	"ASCII",
	"AT",
	"AUTOEXTEND_SIZE",
	"ENDS",
	"EVENTS",
	"GENERATED",
	"ALWAYS",
	"STORED",
	"VIRTUAL",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 35,
	631, 35,
	-2, 56,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 41,
	189, 1310,
	190, 1329,
	-2, 249,
	-1, 47,
	228, 790,
	229, 790,
	-2, 779,
	-1, 67,
	5, 61,
	-2, 43,
	-1, 492,
	177, 1699,
	-2, 978,
	-1, 493,
	177, 1339,
	-2, 1333,
	-1, 494,
	177, 1340,
	-2, 1334,
	-1, 524,
	177, 1807,
	-2, 1228,
	-1, 525,
	177, 1888,
	-2, 980,
	-1, 526,
	177, 1719,
	-2, 981,
	-1, 593,
	177, 1670,
	-2, 1199,
	-1, 596,
	177, 1687,
	-2, 1128,
	-1, 597,
	177, 1900,
	-2, 1128,
	-1, 598,
	177, 1899,
	-2, 1128,
	-1, 599,
	177, 1898,
	-2, 1128,
	-1, 600,
	177, 1787,
	-2, 1128,
	-1, 601,
	177, 1788,
	-2, 1128,
	-1, 602,
	177, 1685,
	-2, 1128,
	-1, 603,
	177, 1686,
	-2, 1128,
	-1, 604,
	177, 1688,
	-2, 1128,
	-1, 852,
	100, 1994,
	177, 1994,
	-2, 1294,
	-1, 853,
	100, 2095,
	177, 2095,
	-2, 1295,
	-1, 858,
	100, 2015,
	177, 2015,
	-2, 1296,
	-1, 859,
	100, 2056,
	177, 2056,
	-2, 1297,
	-1, 860,
	100, 2057,
	177, 2057,
	-2, 1298,
	-1, 861,
	100, 1937,
	177, 1937,
	-2, 1302,
	-1, 863,
	100, 2036,
	177, 2036,
	-2, 1304,
	-1, 1119,
	5, 61,
	-2, 44,
	-1, 1382,
	1, 523,
	631, 523,
	-2, 521,
	-1, 1384,
	1, 523,
	631, 523,
	-2, 521,
	-1, 1837,
	177, 1342,
	-2, 1338,
	-1, 1956,
	1, 891,
	5, 891,
	12, 891,
	13, 891,
	14, 891,
	15, 891,
	17, 891,
	19, 891,
	29, 891,
	30, 891,
	56, 891,
	57, 891,
	58, 891,
	59, 891,
	60, 891,
	62, 891,
	63, 891,
	66, 891,
	67, 891,
	69, 891,
	70, 891,
	87, 891,
	455, 891,
	631, 891,
	-2, 924,
	-1, 1964,
	67, 78,
	69, 78,
	-2, 82,
	-1, 1981,
	177, 1811,
	-2, 1299,
	-1, 2088,
	1, 524,
	631, 524,
	-2, 521,
	-1, 2178,
	44, 672,
	196, 674,
	198, 672,
	199, 672,
	-2, 715,
	-1, 2227,
	5, 62,
	-2, 1010,
	-1, 2793,
	196, 675,
	-2, 673,
	-1, 2866,
	69, 1583,
	70, 1583,
	177, 1583,
	-2, 822,
	-1, 2891,
	1, 964,
	5, 964,
	12, 964,
	13, 964,
	14, 964,
	15, 964,
	17, 964,
	19, 964,
	29, 964,
	30, 964,
	56, 964,
	57, 964,
	58, 964,
	59, 964,
	60, 964,
	62, 964,
	63, 964,
	66, 964,
	67, 964,
	69, 964,
	70, 964,
	87, 964,
	455, 964,
	631, 964,
	-2, 924,
	-1, 3037,
	5, 62,
	-2, 1260,
	-1, 3125,
	41, 1349,
	-2, 1347,
	-1, 3322,
	5, 62,
	-2, 1263,
	-1, 3337,
	278, 315,
	-2, 1404,
	-1, 3338,
	278, 316,
	-2, 1444,
	-1, 3339,
	278, 317,
	-2, 1620,
	-1, 3504,
	95, 301,
	97, 301,
	99, 301,
	-2, 56,
	-1, 3535,
	97, 308,
	98, 308,
	99, 308,
	-2, 56,
}

const yyPrivate = 57344

const yyLast = 44114

var yyAct = [...]int{
	536, 76, 3485, 3496, 3436, 3455, 3437, 466, 3341, 1133,
	3342, 496, 3457, 3252, 7, 1216, 425, 3399, 2588, 3249,
	3, 3253, 8, 969, 3251, 6, 3362, 3380, 3324, 2736,
	3244, 3314, 2688, 2445, 3182, 1791, 3222, 3250, 5, 3312,
	3063, 2614, 2885, 2912, 3125, 1312, 2530, 2859, 1217, 2542,
	2305, 3127, 2311, 2083, 2309, 2860, 485, 2479, 1417, 478,
	2994, 2778, 2753, 79, 500, 494, 1239, 2970, 408, 411,
	535, 2964, 2107, 2948, 1809, 3245, 2615, 76, 462, 2035,
	2787, 2856, 456, 91, 2386, 2689, 2382, 1979, 450, 450,
	1003, 2461, 475, 513, 2868, 1789, 476, 2026, 2877, 1802,
	1989, 104, 1952, 1240, 1868, 1862, 2177, 2295, 986, 939,
	2558, 130, 2069, 2022, 130, 1419, 1027, 1921, 2136, 2596,
	130, 1953, 1797, 1790, 2153, 1743, 1393, 2091, 2090, 2089,
	453, 453, 2288, 2509, 130, 1714, 2436, 2065, 1290, 1839,
	1141, 1294, 2595, 1137, 1912, 1134, 1748, 932, 1956, 1056,
	2618, 1035, 2087, 1966, 857, 2039, 931, 481, 130, 941,
	1155, 1293, 465, 2053, 428, 427, 2387, 850, 854, 1388,
	1034, 952, 968, 1385, 67, 505, 957, 81, 130, 453,
	851, 941, 2400, 1916, 100, 96, 982, 2403, 3535, 130,
	3530, 470, 3522, 3504, 3502, 3480, 3450, 1145, 3388, 78,
	2041, 3184, 3183, 2408, 2407, 2703, 1741, 2734, 3104, 2935,
	3532, 3528, 3526, 3467, 36, 83, 2949, 89, 3310, 2377,
	3430, 3230, 420, 503, 3102, 2404, 2951, 3117, 3402, 36,
	39, 2121, 2473, 2121, 3298, 2750, 3309, 2609, 36, 3105,
	2410, 3229, 2393, 2580, 936, 2905, 2686, 2349, 2348, 3409,
	2394, 3435, 36, 36, 2415, 2610, 2377, 464, 3202, 74,
	3358, 2265, 845, 846, 847, 2368, 2369, 2850, 3318, 951,
	3153, 954, 2370, 959, 960, 2152, 77, 2452, 1172, 1171,
	1181, 1182, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1173,
	962, 77, 1183, 3162, 2307, 1747, 87, 85, 86, 1295,
	77, 1296, 2368, 2369, 3315, 1067, 2654, 2329, 1125, 2370,
	2328, 1976, 1977, 2330, 77, 77, 2655, 2656, 3318, 1745,
	1746, 1799, 1800, 2917, 2374, 2923, 2925, 2924, 2921, 2922,
	2920, 2919, 2918, 1975, 3175, 443, 3313, 437, 448, 431,
	1765, 2954, 1007, 1008, 2926, 2927, 1085, 419, 418, 2412,
	1093, 927, 1416, 460, 3315, 2406, 2037, 2038, 2409, 438,
	1006, 2374, 2151, 1053, 2059, 2042, 2054, 2054, 2042, 3319,
	2836, 2793, 1744, 2045, 2047, 2834, 2046, 417, 3018, 2361,
	422, 2952, 2953, 2955, 2956, 2957, 2066, 402, 1727, 1017,
	472, 990, 991, 1013, 2505, 994, 1786, 2376, 2342, 1785,
	1784, 1783, 1782, 1781, 3494, 76, 76, 1089, 1090, 2965,
	2468, 1069, 461, 2971, 2972, 2973, 2974, 2968, 1022, 3319,
	2497, 1025, 3286, 3196, 1021, 476, 491, 992, 993, 1024,
	3424, 2966, 2967, 3131, 2376, 1100, 2777, 2751, 1101, 1060,
	130, 2502, 1023, 2754, 2755, 2756, 2757, 2758, 2165, 3344,
	2760, 2991, 3343, 1014, 1015, 3288, 3204, 1338, 3206, 3493,
	2982, 2166, 1776, 76, 3351, 3121, 2470, 1123, 2754, 2755,
	2756, 2757, 2758, 2763, 1128, 1069, 3489, 2472, 118, 114,
	115, 2108, 116, 2373, 130, 2980, 409, 3385, 3383, 3384,
	3452, 956, 955, 1192, 3099, 106, 1194, 3387, 3092, 1196,
	948, 3103, 1400, 1401, 1399, 3097, 111, 1391, 412, 430,
	429, 432, 3096, 2372, 120, 119, 3368, 958, 2450, 436,
	2373, 3095, 3094, 3093, 3091, 958, 106, 1374, 1208, 130,
	2098, 1211, 1212, 1213, 1214, 1215, 440, 1220, 3188, 1338,
	444, 403, 3445, 130, 1004, 3247, 1005, 1007, 1008, 3052,
	2372, 413, 112, 1158, 447, 2381, 476, 3192, 3193, 2097,
	2405, 1325, 2639, 2451, 3426, 2402, 1092, 2102, 2103, 1373,
	1002, 3198, 121, 999, 122, 2453, 3329, 3330, 2487, 2488,
	1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230,
	1231, 1232, 1233, 1234, 998, 1237, 1238, 1241, 1241, 1241,
	1247, 1241, 1241, 1247, 1241, 1247, 1256, 1257, 1258, 1259,
	1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269,
	1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279,
	1280, 1281, 1282, 1283, 1284, 989, 3180, 1119, 1162, 2341,
	1000, 1001, 1339, 1325, 2416, 113, 2950, 3397, 2995, 2996,
	3316, 433, 434, 435, 441, 1755, 445, 446, 449, 1131,
	421, 1068, 1728, 1018, 1242, 1244, 1246, 1248, 1250, 1252,
	1253, 1255, 3154, 3203, 2779, 2421, 2159, 1102, 2044, 2054,
	2471, 1061, 3120, 2068, 948, 410, 410, 3517, 3228, 2733,
	2762, 1079, 1749, 108, 2371, 2375, 2367, 3197, 948, 3287,
	3316, 1243, 1245, 3100, 1249, 1251, 1698, 1254, 3495, 948,
	948, 1374, 3408, 3446, 2032, 3461, 2515, 2792, 3456, 1193,
	477, 1120, 117, 3118, 1339, 1374, 3536, 1751, 2474, 88,
	1750, 2371, 2375, 1127, 3459, 477, 1070, 1077, 1078, 1080,
	1081, 1082, 1083, 1084, 68, 1086, 1087, 1088, 1747, 1091,
	410, 1094, 1095, 1096, 1097, 1098, 3533, 131, 477, 477,
	948, 132, 2559, 938, 133, 134, 3523, 3505, 953, 971,
	135, 405, 1745, 1746, 3208, 471, 3005, 1352, 1355, 1356,
	1357, 1358, 1359, 1360, 2401, 1361, 1362, 1363, 1364, 1365,
	1366, 1367, 1368, 3500, 1340, 1341, 1342, 1343, 1319, 1323,
	1353, 1320, 1326, 1322, 1324, 1321, 406, 1327, 1328, 1329,
	1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1344, 1345,
	1346, 1347, 1348, 1349, 1350, 1351, 1069, 1037, 1038, 1039,
	1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 3006,
	2118, 2692, 3064, 2561, 2775, 2117, 948, 110, 109, 2034,
	2032, 2496, 1065, 2492, 2476, 2475, 3066, 2160, 1405, 1352,
	1355, 1356, 1357, 1358, 1359, 1360, 1403, 1361, 1362, 1363,
	1364, 1365, 1366, 1367, 1368, 1019, 1340, 1341, 1342, 1343,
	1319, 1323, 1353, 1320, 1326, 1322, 1324, 1321, 2086, 1327,
	1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337,
	1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 950, 2034,
	2646, 2314, 2316, 130, 410, 857, 2645, 2644, 2527, 949,
	857, 2490, 941, 3458, 3460, 2034, 1124, 439, 961, 374,
	3009, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1354, 1197,
	2034, 131, 77, 108, 2240, 132, 3004, 2237, 133, 134,
	1076, 2873, 2390, 1195, 135, 131, 1198, 1199, 2822, 132,
	3085, 2653, 133, 134, 2494, 2493, 2333, 3498, 135, 2219,
	3499, 2208, 3497, 2175, 2101, 3065, 1064, 1395, 2099, 1971,
	1369, 1370, 1371, 1372, 450, 1812, 1200, 97, 1306, 1210,
	2563, 1307, 1209, 1163, 2033, 2567, 1418, 2562, 981, 2560,
	2522, 2515, 3201, 450, 2565, 2519, 2325, 1183, 2518, 2521,
	1074, 1980, 3079, 2942, 2940, 941, 130, 2564, 1394, 1298,
	1354, 3086, 1398, 2722, 1299, 453, 453, 1016, 1200, 453,
	1980, 3077, 2566, 2568, 1288, 1980, 130, 1285, 1286, 130,
	1075, 2315, 1071, 2772, 453, 453, 2034, 130, 1376, 1980,
	2929, 1197, 1980, 2725, 2033, 1980, 2721, 130, 130, 130,
	130, 130, 2185, 2179, 2180, 3223, 2178, 2181, 2182, 1724,
	2033, 1722, 1980, 2717, 2943, 2941, 1072, 1073, 453, 1311,
	1980, 2713, 130, 3010, 2723, 2033, 3107, 99, 2526, 450,
	1980, 2434, 2523, 3346, 1699, 1980, 2432, 110, 109, 3032,
	1739, 2535, 2188, 2289, 1421, 1805, 1308, 1710, 1711, 1712,
	1713, 1198, 1199, 1715, 1198, 1199, 2187, 2186, 1980, 2430,
	1980, 2428, 3108, 1774, 1154, 1758, 1980, 2425, 2128, 76,
	453, 453, 453, 1396, 76, 941, 1381, 1380, 2531, 1397,
	1718, 106, 1719, 1173, 1801, 996, 1183, 1415, 476, 2337,
	1414, 107, 111, 3369, 3370, 3366, 3367, 1407, 3233, 3232,
	2875, 1703, 1704, 1701, 1780, 453, 988, 2874, 1009, 3347,
	453, 453, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1173,
	1151, 101, 1183, 102, 1152, 1153, 1151, 130, 2872, 941,
	130, 2033, 3525, 94, 1736, 76, 2582, 1154, 2515, 1832,
	1731, 1732, 948, 1154, 1734, 2516, 2032, 970, 1846, 1753,
	1873, 1875, 1716, 1304, 476, 130, 3508, 3486, 3507, 1913,
	1737, 1220, 1158, 1844, 1845, 1843, 1026, 2129, 964, 1754,
	1757, 1866, 963, 1872, 1810, 1811, 1889, 1840, 93, 3521,
	476, 1152, 1153, 1151, 997, 1879, 1880, 1775, 1383, 3449,
	1778, 1176, 1177, 1178, 1179, 1180, 1173, 3447, 3403, 1183,
	1154, 941, 987, 941, 1011, 2981, 941, 2975, 3381, 2232,
	3413, 2231, 3412, 941, 1794, 941, 941, 3011, 92, 1831,
	2147, 1913, 2184, 2253, 1787, 130, 1837, 1957, 2818, 2233,
	1152, 1153, 1151, 1803, 1898, 1901, 2701, 1152, 1153, 1151,
	3470, 2442, 1914, 1824, 1826, 1827, 1803, 1162, 1119, 1154,
	1148, 1825, 3291, 1870, 1153, 1151, 1154, 1828, 3283, 1152,
	1153, 1151, 941, 941, 973, 974, 975, 976, 977, 978,
	979, 98, 1154, 2205, 2206, 2207, 3241, 1951, 1154, 1152,
	1153, 1151, 1984, 1152, 1153, 1151, 1138, 3382, 3115, 1139,
	3381, 130, 130, 130, 1152, 1153, 1151, 857, 1154, 2366,
	3518, 3114, 1154, 3113, 1152, 1153, 1151, 1986, 3112, 1927,
	3106, 1929, 2584, 1154, 1759, 2934, 941, 1762, 1763, 1764,
	3284, 1766, 1767, 1154, 3199, 1768, 397, 1863, 2933, 1864,
	1841, 1769, 1814, 2704, 77, 1770, 1771, 487, 1772, 1773,
	1886, 1888, 1152, 1153, 1151, 1842, 1878, 3434, 1893, 1881,
	1882, 1883, 1884, 1885, 1107, 3519, 1815, 1756, 2441, 1816,
	2439, 1154, 1985, 2413, 1059, 1058, 1406, 3285, 1099, 1837,
	2115, 3200, 1910, 2331, 3390, 2332, 3389, 3348, 1721, 3345,
	3297, 3195, 1032, 1969, 3194, 3179, 1925, 1926, 3122, 2075,
	2076, 2077, 2078, 1932, 1933, 1934, 1935, 1779, 2023, 1978,
	1973, 936, 130, 2113, 2114, 1031, 1987, 2020, 130, 130,
	453, 453, 453, 1972, 1965, 130, 3090, 2031, 2071, 2072,
	2073, 2074, 3059, 2079, 2080, 2081, 3028, 375, 2978, 2977,
	2976, 2944, 2055, 2056, 2057, 2058, 2062, 2063, 2064, 2931,
	2784, 2067, 518, 517, 520, 521, 522, 523, 2710, 1117,
	1961, 519, 1874, 2244, 2538, 2537, 1065, 2437, 2148, 2123,
	1733, 2043, 3378, 2048, 2049, 2050, 2051, 2052, 3377, 2297,
	2300, 2301, 2302, 2298, 378, 2299, 2303, 2095, 3205, 2878,
	2879, 3177, 3139, 387, 395, 396, 1172, 1171, 1181, 1182,
	1174, 1175, 1176, 1177, 1178, 1179, 1180, 1173, 2390, 3133,
	1183, 1171, 1181, 1182, 1174, 1175, 1176, 1177, 1178, 1179,
	1180, 1173, 1132, 3002, 1183, 2855, 2812, 2808, 384, 2794,
	2764, 385, 2482, 2481, 393, 394, 2141, 2125, 2235, 1113,
	2217, 1132, 1838, 3527, 2124, 1847, 1848, 1849, 1850, 1851,
	1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861,
	1700, 1112, 1108, 1109, 1110, 1111, 1114, 1115, 1116, 1118,
	1172, 1171, 1181, 1182, 1174, 1175, 1176, 1177, 1178, 1179,
	1180, 1173, 2843, 1865, 1183, 1729, 1726, 1413, 1412, 1384,
	1382, 390, 1054, 2137, 984, 1172, 1171, 1181, 1182, 1174,
	1175, 1176, 1177, 1178, 1179, 1180, 1173, 416, 1904, 1183,
	414, 1132, 391, 3132, 1132, 3073, 3410, 3081, 1917, 3080,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 1172, 1171, 1181, 1182, 1174, 1175, 1176, 1177,
	1178, 1179, 1180, 1173, 1247, 2743, 1183, 376, 2907, 3395,
	2715, 1172, 1171, 1181, 1182, 1174, 1175, 1176, 1177, 1178,
	1179, 1180, 1173, 3373, 1132, 1183, 2907, 3354, 2144, 3303,
	1132, 1967, 2150, 2907, 3299, 2714, 94, 3073, 3238, 2907,
	3186, 389, 379, 380, 130, 400, 3073, 1132, 1967, 381,
	383, 2711, 377, 399, 398, 3073, 3168, 3073, 3072, 2480,
	2336, 130, 130, 130, 3041, 1132, 2174, 1132, 2480, 2172,
	2139, 2907, 2906, 80, 1142, 2731, 2730, 2314, 2316, 2727,
	2728, 2727, 2726, 2291, 1164, 2292, 1132, 1968, 130, 1970,
	130, 2217, 1132, 2320, 941, 1698, 392, 2162, 2161, 941,
	1887, 2145, 2126, 2130, 1968, 1807, 1698, 2106, 2135, 1887,
	1132, 1310, 1309, 2209, 2857, 2134, 2292, 2871, 1104, 1103,
	3427, 941, 1063, 2292, 941, 2871, 1062, 2217, 1832, 1063,
	1218, 1172, 1171, 1181, 1182, 1174, 1175, 1176, 1177, 1178,
	1179, 1180, 1173, 3401, 2871, 1183, 2897, 3035, 2105, 941,
	1887, 2292, 2121, 2887, 2744, 2729, 1806, 2536, 2157, 2297,
	2300, 2301, 2302, 2298, 2508, 2299, 2303, 2143, 2335, 1974,
	2217, 2259, 2149, 2258, 1735, 2120, 1065, 1808, 928, 2156,
	2164, 1121, 1777, 2167, 1742, 1698, 1404, 1236, 2140, 1402,
	1292, 77, 3326, 3300, 1840, 1172, 1171, 1181, 1182, 1174,
	1175, 1176, 1177, 1178, 1179, 1180, 1173, 2315, 1985, 1183,
	2886, 3219, 3136, 3049, 2936, 1837, 2040, 2171, 2878, 2879,
	2204, 2070, 2042, 2700, 2066, 2380, 1069, 2084, 2853, 2197,
	2195, 2196, 2100, 2061, 2060, 1377, 1051, 2138, 2308, 3516,
	77, 3514, 3474, 2317, 2318, 3472, 2214, 1957, 2313, 3438,
	1957, 2881, 2857, 2173, 2742, 2443, 1752, 476, 1409, 1105,
	1066, 424, 2631, 2210, 2629, 2189, 2884, 2632, 2633, 2630,
	2301, 2302, 2883, 3364, 2628, 2627, 2220, 1172, 1171, 1181,
	1182, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1173, 482,
	483, 1183, 1961, 3308, 2539, 130, 2194, 2321, 1818, 3356,
	2322, 1146, 1147, 130, 3038, 2202, 130, 2201, 3159, 3001,
	2910, 2807, 130, 2806, 2709, 130, 130, 130, 857, 2708,
	2304, 2707, 2392, 2384, 3210, 2264, 2266, 455, 2694, 2216,
	1144, 2218, 2272, 2273, 2274, 2275, 2252, 1181, 1182, 1174,
	1175, 1176, 1177, 1178, 1179, 1180, 1173, 1841, 3213, 1183,
	3296, 2163, 3295, 2227, 2228, 2229, 2230, 3126, 3124, 3191,
	2234, 2236, 3190, 415, 2239, 1730, 2534, 2242, 2243, 3109,
	3110, 1135, 2248, 2249, 1421, 2533, 2738, 2319, 2255, 2256,
	2662, 2257, 1136, 2426, 2260, 2261, 2340, 2262, 2263, 2323,
	1305, 2267, 2268, 2269, 2270, 2271, 2326, 2389, 2391, 1049,
	2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285,
	2286, 2287, 2334, 1033, 1030, 1376, 1029, 985, 3420, 3143,
	3142, 2424, 1298, 2427, 2429, 2431, 2433, 2093, 1810, 1811,
	941, 3033, 130, 2983, 2094, 2486, 1408, 2142, 3428, 3289,
	2984, 3128, 450, 2915, 1394, 941, 941, 941, 2379, 1028,
	2737, 453, 94, 76, 1146, 1147, 2200, 2085, 1788, 3419,
	2478, 1961, 1129, 1130, 2199, 3418, 130, 453, 3417, 3087,
	1961, 2170, 476, 1961, 1012, 2385, 479, 2388, 2438, 3350,
	3349, 3307, 3293, 3214, 453, 2414, 2440, 2417, 3158, 480,
	80, 2507, 3306, 2423, 3225, 2480, 2449, 2447, 2448, 2455,
	2456, 2457, 941, 2435, 3476, 3475, 453, 3013, 941, 2782,
	2503, 2501, 2469, 2500, 453, 2241, 2238, 2168, 1717, 1149,
	941, 941, 3475, 2484, 2544, 2418, 2419, 2420, 2422, 3476,
	3235, 2706, 1804, 928, 474, 1832, 3263, 50, 3265, 19,
	3264, 18, 3266, 20, 130, 3492, 2589, 3267, 21, 2483,
	82, 2211, 2212, 2213, 941, 53, 2491, 3262, 15, 2489,
	1, 2495, 3261, 14, 3255, 10, 3278, 34, 2158, 2611,
	2613, 1760, 2512, 1957, 1957, 1957, 1957, 1957, 2506, 3276,
	33, 2963, 1702, 2962, 2612, 3275, 32, 2969, 476, 2308,
	2749, 2640, 2635, 2517, 2581, 2528, 2529, 3274, 28, 2532,
	2642, 1957, 2549, 1720, 1889, 1794, 2513, 2545, 476, 2752,
	2546, 941, 2245, 2246, 2247, 2551, 3273, 27, 2569, 3272,
	26, 2571, 1837, 2467, 2570, 2510, 2520, 2525, 3270, 23,
	3269, 22, 3271, 24, 3260, 13, 2616, 2979, 130, 130,
	130, 130, 130, 1392, 1143, 1218, 2643, 3257, 12, 2544,
	130, 2650, 3256, 11, 130, 3254, 9, 2649, 130, 2651,
	2652, 3098, 967, 2104, 1055, 3294, 130, 2590, 2591, 2592,
	2593, 2594, 3209, 3211, 3123, 2622, 2986, 2947, 2625, 941,
	2946, 2702, 2460, 2459, 2552, 2553, 2554, 2555, 2556, 2557,
	125, 2634, 1050, 401, 1740, 2623, 2624, 2511, 2626, 125,
	2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606,
	2607, 2514, 2116, 467, 2183, 2647, 2657, 3221, 2169, 1106,
	2024, 1988, 3323, 930, 90, 2127, 941, 995, 488, 382,
	2021, 2398, 3212, 1052, 865, 2397, 2411, 125, 2036, 2088,
	2092, 2396, 2395, 3207, 2399, 1820, 1821, 1822, 1316, 1314,
	1315, 2696, 2697, 2698, 1313, 2699, 1318, 125, 1317, 2693,
	3469, 2695, 3407, 386, 1300, 3336, 2854, 2759, 125, 2636,
	2637, 2079, 1150, 2081, 450, 529, 105, 54, 2739, 2740,
	2741, 3003, 2712, 2524, 458, 2716, 459, 95, 2745, 130,
	103, 2720, 1817, 2498, 388, 1191, 1961, 1961, 1961, 1961,
	1961, 2504, 2198, 2724, 2327, 855, 856, 848, 2190, 941,
	941, 941, 1961, 1122, 1218, 2766, 453, 3231, 3357, 1894,
	1895, 130, 453, 3398, 1961, 2761, 3328, 1140, 3359, 3305,
	3224, 2251, 1235, 1911, 502, 2638, 130, 3031, 453, 3361,
	941, 1823, 453, 516, 2485, 515, 453, 453, 514, 453,
	511, 512, 3317, 1813, 2608, 2789, 1165, 2732, 499, 489,
	1955, 2848, 2718, 1948, 2797, 2802, 941, 2146, 2296, 2294,
	130, 941, 2293, 1410, 2789, 1289, 2880, 2790, 941, 2819,
	2768, 941, 941, 2876, 2306, 1959, 1954, 1958, 38, 2811,
	3012, 2862, 76, 2791, 1010, 2785, 2541, 404, 1983, 2849,
	3152, 2203, 2719, 84, 473, 484, 1376, 2863, 25, 17,
	1020, 476, 16, 2176, 965, 40, 42, 2454, 2096, 3335,
	2889, 2817, 2548, 3454, 1036, 2893, 2894, 2895, 3484, 3379,
	31, 2858, 30, 2769, 29, 3268, 3277, 3259, 3258, 3440,
	3439, 4, 1126, 75, 2572, 2573, 1922, 2574, 2575, 2799,
	2804, 2576, 2870, 35, 2616, 926, 2832, 941, 2, 941,
	0, 2861, 0, 0, 0, 2585, 2586, 0, 0, 0,
	0, 2082, 0, 0, 0, 2892, 2823, 2824, 2825, 2826,
	2827, 0, 0, 0, 0, 0, 941, 2865, 2899, 0,
	2888, 0, 0, 2898, 0, 2829, 2830, 0, 2831, 0,
	0, 2833, 0, 2835, 2882, 0, 0, 0, 0, 2820,
	0, 0, 0, 0, 0, 2890, 0, 76, 0, 125,
	0, 0, 2828, 0, 0, 2648, 0, 0, 0, 0,
	0, 0, 2937, 2837, 2838, 2839, 476, 0, 1960, 0,
	2844, 0, 1794, 0, 0, 0, 941, 2900, 0, 0,
	0, 2938, 0, 0, 0, 0, 0, 0, 0, 2911,
	0, 0, 0, 125, 0, 2939, 0, 2547, 0, 0,
	0, 0, 2959, 2960, 2961, 2864, 0, 0, 0, 0,
	2916, 0, 0, 0, 124, 0, 2928, 0, 130, 0,
	941, 0, 0, 407, 0, 1172, 1171, 1181, 1182, 1174,
	1175, 1176, 1177, 1178, 1179, 1180, 1173, 0, 467, 1183,
	2705, 2896, 0, 2988, 2997, 2998, 2958, 0, 2990, 0,
	0, 453, 467, 0, 2999, 2771, 2908, 2909, 453, 2776,
	0, 929, 2789, 2780, 2781, 0, 2783, 0, 2544, 0,
	2987, 0, 0, 0, 0, 0, 0, 2993, 3014, 3015,
	0, 966, 3007, 0, 0, 0, 3000, 2985, 2789, 0,
	0, 0, 980, 0, 0, 0, 501, 0, 941, 0,
	2930, 2693, 2932, 3008, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2079, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3075, 0, 1241, 1241,
	1241, 1247, 1241, 1241, 1247, 1241, 1247, 1256, 1257, 0,
	3051, 0, 126, 130, 3042, 0, 2616, 3056, 3057, 3058,
	3034, 126, 0, 0, 3054, 0, 0, 0, 3043, 0,
	0, 0, 941, 0, 0, 468, 0, 0, 3060, 941,
	941, 941, 0, 0, 0, 0, 0, 0, 3084, 3082,
	0, 3083, 0, 941, 2821, 3055, 866, 0, 0, 126,
	934, 0, 3062, 3068, 3069, 1242, 1244, 1246, 1248, 1250,
	1252, 1253, 1255, 3067, 3017, 0, 3088, 3070, 3071, 126,
	0, 0, 941, 0, 2845, 2846, 2847, 3061, 0, 0,
	126, 0, 3144, 0, 1957, 0, 0, 0, 3076, 0,
	3078, 3089, 1243, 1245, 0, 1249, 1251, 0, 1254, 3023,
	3024, 3025, 0, 3027, 0, 3101, 2862, 3111, 3116, 2862,
	3164, 0, 3130, 0, 0, 0, 3036, 3037, 0, 3039,
	0, 3129, 3040, 2889, 3119, 3163, 0, 0, 0, 476,
	0, 2313, 0, 3171, 3146, 0, 0, 0, 2891, 3141,
	3145, 3147, 941, 0, 3053, 0, 0, 3134, 3135, 130,
	0, 0, 0, 0, 0, 76, 3161, 3137, 3138, 0,
	0, 3160, 0, 3167, 2852, 3157, 0, 0, 3074, 0,
	3187, 0, 3166, 3176, 476, 0, 2861, 941, 3170, 2861,
	0, 0, 3178, 0, 0, 941, 0, 0, 3189, 130,
	0, 130, 1142, 3169, 0, 0, 0, 0, 2989, 2914,
	0, 0, 0, 983, 0, 2992, 0, 0, 0, 941,
	0, 527, 0, 1172, 1171, 1181, 1182, 1174, 1175, 1176,
	1177, 1178, 1179, 1180, 1173, 0, 0, 1183, 0, 0,
	0, 0, 0, 2862, 0, 76, 0, 0, 0, 3217,
	0, 0, 0, 0, 0, 0, 3240, 1057, 0, 0,
	3237, 3216, 0, 0, 476, 0, 0, 3215, 0, 0,
	76, 3218, 0, 0, 453, 0, 0, 3226, 0, 0,
	3248, 2226, 941, 3148, 3149, 3150, 3151, 3234, 0, 0,
	3236, 0, 1291, 3155, 3156, 865, 0, 0, 0, 0,
	865, 3246, 0, 0, 3239, 0, 0, 2254, 0, 0,
	0, 864, 0, 2861, 0, 933, 0, 1961, 0, 0,
	3172, 3173, 3174, 0, 0, 0, 130, 0, 0, 0,
	3290, 0, 3301, 0, 3292, 0, 0, 972, 0, 0,
	0, 126, 0, 0, 0, 0, 0, 3019, 3020, 3021,
	3022, 0, 0, 3320, 0, 3026, 3325, 3321, 3327, 3029,
	3030, 0, 3331, 76, 0, 941, 3176, 0, 0, 941,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2616, 0, 0, 0, 0, 126, 941, 0, 0, 0,
	0, 0, 0, 0, 0, 125, 0, 3340, 0, 0,
	1387, 1390, 0, 0, 0, 0, 0, 0, 0, 0,
	3352, 3371, 0, 3353, 0, 125, 3227, 0, 125, 0,
	3355, 1387, 1390, 0, 0, 3365, 1420, 941, 0, 0,
	468, 0, 0, 0, 0, 0, 125, 125, 125, 125,
	125, 0, 3376, 0, 468, 0, 941, 0, 3394, 3243,
	3375, 3374, 0, 0, 1159, 450, 0, 0, 0, 0,
	0, 1725, 3386, 76, 0, 3396, 0, 0, 0, 76,
	0, 3416, 941, 0, 0, 0, 0, 0, 0, 3423,
	0, 0, 3406, 0, 0, 3302, 3411, 3414, 0, 3325,
	0, 0, 0, 3433, 76, 3311, 0, 453, 0, 76,
	0, 3322, 3448, 3421, 941, 3444, 3425, 3464, 3429, 2589,
	3451, 0, 0, 3441, 3453, 3431, 3443, 941, 476, 941,
	3468, 3463, 3473, 3471, 0, 3465, 76, 3466, 450, 3442,
	76, 76, 0, 941, 3478, 76, 3479, 0, 3481, 0,
	0, 3423, 0, 0, 0, 3487, 0, 0, 0, 0,
	0, 130, 2842, 3477, 0, 0, 0, 0, 0, 0,
	3501, 76, 0, 0, 76, 0, 467, 3509, 0, 125,
	453, 3423, 3506, 941, 3511, 0, 0, 0, 130, 0,
	0, 0, 3185, 76, 0, 76, 0, 3372, 2841, 76,
	0, 0, 130, 3423, 125, 3423, 0, 3524, 0, 0,
	0, 0, 0, 76, 0, 0, 76, 0, 1420, 0,
	0, 76, 0, 3423, 3531, 0, 76, 0, 0, 0,
	0, 3423, 0, 0, 0, 0, 3423, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3405, 0, 0, 2840,
	0, 1871, 0, 0, 0, 0, 0, 2583, 0, 3220,
	2579, 1172, 1171, 1181, 1182, 1174, 1175, 1176, 1177, 1178,
	1179, 1180, 1173, 0, 467, 1183, 1871, 1871, 1871, 0,
	0, 0, 1871, 1871, 1871, 1871, 0, 1871, 1871, 0,
	0, 0, 865, 1871, 0, 0, 983, 1172, 1171, 1181,
	1182, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1173, 0,
	0, 1183, 0, 1871, 1871, 1871, 1871, 0, 0, 1871,
	1871, 1871, 1871, 1871, 0, 0, 0, 0, 1871, 1871,
	1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871, 1871,
	125, 125, 125, 0, 0, 0, 0, 865, 1172, 1171,
	1181, 1182, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1173,
	0, 1420, 1183, 0, 3512, 3513, 0, 1172, 1171, 1181,
	1182, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1173, 0,
	0, 1183, 0, 0, 2578, 0, 2658, 0, 2659, 2660,
	0, 0, 0, 2664, 2665, 2666, 2667, 2668, 0, 1379,
	2671, 2672, 2673, 2674, 2675, 2676, 2677, 2678, 2679, 2680,
	2681, 0, 2682, 2683, 2684, 2685, 0, 0, 0, 983,
	0, 0, 1411, 0, 126, 0, 0, 866, 2687, 0,
	0, 0, 866, 0, 0, 0, 0, 0, 0, 0,
	1705, 1706, 1707, 1708, 1709, 0, 0, 0, 0, 0,
	0, 125, 0, 0, 0, 0, 0, 125, 125, 0,
	0, 0, 2338, 2339, 125, 0, 2343, 2344, 2345, 2346,
	2347, 0, 0, 2350, 2351, 2352, 2353, 2354, 2355, 2356,
	2357, 2358, 2359, 2360, 2767, 2362, 2363, 2364, 2365, 0,
	2378, 1172, 1171, 1181, 1182, 1174, 1175, 1176, 1177, 1178,
	1179, 1180, 1173, 0, 0, 1183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1375, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 0, 0,
	0, 0, 0, 0, 2813, 0, 0, 3462, 0, 0,
	0, 0, 0, 0, 0, 2577, 487, 126, 0, 0,
	126, 0, 0, 1867, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 126, 126,
	126, 126, 126, 1798, 0, 0, 0, 0, 1890, 1891,
	1892, 3490, 0, 0, 1896, 1897, 1900, 1903, 2851, 1908,
	1909, 0, 0, 0, 0, 1915, 0, 0, 1819, 1172,
	1171, 1181, 1182, 1174, 1175, 1176, 1177, 1178, 1179, 1180,
	1173, 3515, 0, 1183, 0, 1920, 0, 1923, 1924, 0,
	2019, 0, 1928, 0, 1930, 1931, 0, 0, 0, 0,
	1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945,
	1946, 1947, 2215, 1994, 0, 0, 0, 0, 0, 0,
	0, 2000, 1172, 1171, 1181, 1182, 1174, 1175, 1176, 1177,
	1178, 1179, 1180, 1173, 0, 0, 1183, 0, 0, 0,
	1172, 1171, 1181, 1182, 1174, 1175, 1176, 1177, 1178, 1179,
	1180, 1173, 864, 0, 1183, 0, 0, 864, 1301, 0,
	0, 0, 0, 0, 0, 0, 1997, 0, 468, 0,
	1792, 126, 0, 0, 0, 0, 0, 0, 0, 0,
	528, 0, 0, 2902, 0, 0, 0, 0, 0, 2903,
	2904, 0, 0, 0, 0, 0, 126, 0, 0, 0,
	0, 0, 0, 1159, 1950, 0, 1964, 0, 0, 0,
	1834, 0, 0, 0, 0, 0, 0, 1996, 0, 0,
	0, 0, 0, 125, 0, 0, 127, 0, 0, 0,
	0, 0, 0, 0, 0, 127, 0, 0, 0, 0,
	2131, 2132, 125, 0, 0, 0, 0, 0, 0, 0,
	0, 1378, 0, 0, 0, 0, 0, 1386, 1389, 0,
	0, 0, 0, 0, 0, 0, 468, 125, 0, 467,
	0, 0, 0, 127, 935, 2001, 0, 0, 1386, 1389,
	0, 2661, 0, 2663, 866, 2007, 0, 0, 0, 2669,
	2670, 0, 0, 127, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 127, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2109, 0, 0, 1999, 0,
	0, 2111, 2112, 0, 0, 0, 0, 0, 2119, 0,
	0, 0, 126, 126, 126, 0, 1218, 1420, 0, 866,
	0, 0, 0, 0, 0, 0, 3044, 3045, 3046, 3047,
	0, 0, 3048, 1834, 0, 3050, 0, 934, 0, 0,
	36, 0, 0, 1218, 0, 0, 0, 0, 0, 0,
	0, 1761, 0, 0, 57, 0, 0, 2011, 0, 0,
	73, 0, 0, 39, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1871, 2018, 0, 1871, 1871, 1871, 1871,
	1871, 0, 0, 0, 0, 0, 2004, 0, 0, 0,
	0, 0, 77, 0, 0, 1796, 0, 2013, 0, 0,
	0, 0, 0, 0, 0, 1871, 0, 0, 0, 0,
	0, 0, 0, 126, 0, 0, 0, 0, 3279, 126,
	126, 3483, 3486, 3482, 0, 0, 126, 0, 1993, 0,
	0, 0, 0, 0, 0, 1796, 0, 0, 0, 0,
	0, 0, 0, 0, 125, 0, 0, 0, 0, 0,
	0, 0, 125, 0, 0, 467, 1991, 0, 487, 0,
	0, 125, 0, 0, 125, 2324, 1420, 1796, 865, 1796,
	0, 0, 1876, 0, 0, 0, 0, 0, 0, 1877,
	0, 1796, 1796, 0, 0, 2003, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 41, 69, 44, 43, 46, 864,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3280,
	0, 0, 0, 0, 0, 127, 0, 0, 1918, 1919,
	0, 0, 0, 0, 0, 47, 72, 71, 0, 0,
	0, 0, 45, 1992, 1995, 1998, 0, 2002, 2005, 2006,
	2008, 2009, 2010, 2012, 2014, 2015, 2016, 2017, 0, 0,
	0, 0, 0, 0, 864, 0, 0, 0, 0, 127,
	0, 0, 0, 2901, 0, 0, 0, 0, 1796, 0,
	0, 125, 933, 0, 0, 0, 0, 2122, 0, 0,
	0, 0, 0, 55, 56, 0, 3281, 0, 0, 0,
	0, 0, 1218, 0, 0, 0, 2133, 0, 0, 0,
	64, 0, 65, 0, 0, 125, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1057, 0, 0, 0, 0, 0, 66, 1161, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3282, 70, 0, 51, 52,
	59, 0, 60, 0, 0, 0, 0, 1990, 2221, 2222,
	2223, 2224, 2225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 125, 0, 0, 36, 37, 0, 0,
	0, 0, 0, 0, 1871, 0, 0, 2250, 0, 0,
	57, 0, 1871, 0, 1420, 126, 73, 0, 0, 39,
	61, 62, 0, 3332, 3333, 0, 0, 58, 0, 0,
	0, 0, 0, 0, 126, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3360, 3363, 0, 0, 48, 0, 0, 0, 77, 126,
	0, 468, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 865, 125, 125, 125,
	125, 125, 0, 0, 0, 0, 0, 0, 0, 467,
	0, 0, 0, 125, 0, 0, 0, 467, 0, 0,
	0, 0, 1871, 0, 0, 125, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3415, 0, 0, 0, 1834,
	0, 0, 0, 0, 0, 0, 68, 0, 2290, 0,
	0, 0, 0, 0, 0, 3363, 0, 0, 1167, 0,
	1170, 0, 0, 0, 0, 0, 0, 1184, 1185, 1186,
	1187, 1188, 1189, 1190, 0, 1168, 1169, 1166, 0, 0,
	41, 69, 44, 43, 46, 1172, 1171, 1181, 1182, 1174,
	1175, 1176, 1177, 1178, 1179, 1180, 1173, 0, 0, 1183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 47, 72, 71, 0, 0, 0, 0, 45, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 63, 0, 0, 0, 0, 0, 0, 0,
	3510, 0, 0, 0, 0, 0, 0, 0, 125, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 55,
	56, 0, 0, 0, 0, 0, 126, 0, 0, 0,
	125, 0, 0, 0, 126, 2446, 64, 468, 65, 0,
	0, 0, 0, 126, 0, 125, 126, 0, 0, 0,
	866, 0, 0, 0, 0, 0, 0, 0, 127, 0,
	0, 0, 0, 66, 0, 0, 0, 0, 0, 2477,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 125,
	2155, 0, 0, 0, 0, 2155, 0, 0, 0, 0,
	0, 49, 70, 0, 51, 52, 59, 488, 60, 0,
	0, 0, 2383, 0, 0, 0, 0, 2155, 0, 0,
	2155, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2193, 0, 0, 0, 36,
	0, 0, 0, 0, 1796, 0, 0, 2540, 0, 0,
	0, 0, 0, 57, 0, 0, 0, 0, 0, 73,
	0, 127, 39, 126, 865, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 127, 0, 0, 127, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 0, 0,
	0, 77, 127, 127, 127, 127, 127, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3279, 0, 0,
	0, 0, 3534, 0, 0, 0, 36, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	57, 1792, 0, 0, 0, 0, 73, 0, 0, 39,
	0, 0, 68, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1834, 125, 77, 0,
	0, 0, 0, 0, 0, 864, 0, 0, 0, 0,
	0, 0, 0, 41, 69, 44, 43, 46, 0, 0,
	0, 0, 0, 0, 3279, 0, 0, 0, 3280, 3529,
	0, 0, 0, 0, 1793, 127, 0, 0, 0, 0,
	0, 0, 0, 0, 47, 72, 71, 0, 0, 0,
	0, 45, 0, 0, 0, 0, 0, 0, 0, 0,
	127, 0, 0, 0, 0, 0, 0, 1161, 2617, 126,
	126, 126, 126, 126, 1833, 0, 0, 0, 0, 0,
	0, 468, 0, 0, 0, 126, 0, 0, 0, 468,
	0, 0, 2735, 0, 0, 0, 0, 126, 0, 0,
	0, 0, 55, 56, 0, 3281, 0, 0, 0, 0,
	41, 69, 44, 43, 46, 0, 2444, 0, 0, 64,
	0, 65, 467, 0, 2765, 3280, 865, 0, 0, 0,
	0, 2458, 2462, 2466, 0, 0, 0, 0, 0, 2770,
	0, 47, 72, 71, 0, 0, 66, 0, 45, 0,
	0, 0, 0, 0, 0, 0, 0, 2691, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2809, 3282, 70, 0, 51, 52, 59,
	0, 60, 0, 0, 0, 0, 0, 0, 2155, 0,
	0, 0, 0, 0, 2499, 0, 127, 127, 127, 55,
	56, 0, 3281, 0, 0, 0, 1796, 1796, 0, 0,
	0, 0, 0, 0, 0, 0, 64, 1833, 65, 0,
	126, 935, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1796, 36, 0, 66, 0, 0, 0, 0, 0, 0,
	0, 1796, 126, 0, 0, 57, 0, 0, 0, 0,
	0, 73, 0, 0, 39, 0, 0, 126, 125, 488,
	0, 3282, 70, 0, 51, 52, 59, 0, 60, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2383, 0, 2796, 2801, 2587, 0, 0,
	0, 126, 0, 77, 0, 0, 0, 127, 467, 0,
	467, 0, 0, 127, 127, 0, 0, 0, 0, 0,
	127, 0, 0, 864, 0, 0, 0, 0, 0, 3279,
	0, 0, 0, 0, 3520, 36, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 68, 0, 0, 0, 57,
	0, 0, 0, 0, 0, 73, 0, 0, 39, 0,
	0, 0, 0, 0, 0, 1796, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2617, 0, 1792, 0,
	0, 2945, 0, 0, 0, 0, 0, 77, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2690, 0, 0, 41, 69, 44, 43, 46,
	0, 0, 0, 3279, 0, 0, 0, 0, 3503, 0,
	3280, 0, 0, 0, 0, 125, 0, 0, 0, 0,
	0, 0, 68, 0, 0, 0, 47, 72, 71, 0,
	0, 0, 0, 45, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	865, 0, 0, 0, 0, 2746, 2747, 2748, 0, 0,
	0, 0, 0, 0, 55, 56, 0, 3281, 0, 41,
	69, 44, 43, 46, 0, 0, 0, 0, 0, 126,
	0, 64, 0, 65, 3280, 0, 2774, 0, 0, 0,
	0, 36, 0, 0, 0, 0, 0, 0, 0, 0,
	47, 72, 71, 0, 0, 57, 0, 45, 66, 0,
	0, 73, 2805, 0, 39, 0, 0, 2810, 0, 0,
	0, 0, 0, 0, 2814, 0, 0, 2815, 2816, 0,
	0, 0, 0, 0, 0, 0, 3282, 70, 0, 51,
	52, 59, 0, 60, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 77, 3488, 0, 0, 0, 55, 56,
	0, 3281, 0, 0, 0, 0, 0, 0, 0, 127,
	0, 0, 0, 0, 0, 64, 0, 65, 0, 3279,
	0, 0, 0, 0, 0, 0, 0, 0, 127, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 864, 66, 1796, 468, 2869, 0, 0, 2617, 0,
	0, 0, 0, 127, 0, 0, 0, 0, 0, 0,
	467, 0, 0, 0, 0, 0, 0, 0, 0, 36,
	3282, 70, 2869, 51, 52, 59, 0, 60, 0, 0,
	0, 0, 0, 57, 2691, 0, 0, 467, 0, 73,
	0, 0, 39, 0, 0, 0, 0, 0, 0, 0,
	0, 467, 0, 0, 0, 41, 69, 44, 43, 46,
	0, 0, 0, 2691, 0, 0, 0, 0, 0, 0,
	3280, 0, 0, 1833, 0, 0, 0, 0, 0, 0,
	0, 77, 2913, 0, 0, 0, 47, 72, 71, 0,
	0, 0, 0, 45, 0, 0, 0, 68, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3279, 0, 0,
	0, 0, 3422, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2462, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 0, 0, 0, 55, 56, 0, 3281, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 64, 0, 65, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3242,
	468, 0, 468, 0, 0, 0, 0, 0, 66, 0,
	0, 68, 0, 41, 69, 44, 43, 46, 0, 0,
	0, 0, 0, 0, 1796, 0, 0, 0, 3280, 0,
	127, 0, 0, 0, 0, 0, 3282, 70, 127, 51,
	52, 59, 0, 60, 47, 72, 71, 127, 0, 0,
	127, 45, 36, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 57, 0, 0, 0,
	0, 0, 73, 864, 0, 39, 0, 0, 0, 0,
	0, 0, 0, 2691, 0, 0, 0, 0, 2913, 0,
	0, 0, 0, 0, 0, 2913, 2913, 2913, 0, 0,
	0, 0, 55, 56, 0, 3281, 0, 0, 0, 2690,
	0, 0, 0, 0, 77, 0, 0, 0, 0, 64,
	0, 65, 0, 0, 0, 0, 0, 126, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2690, 0,
	3279, 0, 0, 0, 0, 0, 66, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2691, 127, 0, 0,
	0, 0, 0, 0, 3282, 70, 0, 51, 52, 59,
	0, 60, 2617, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 127, 0, 0, 0, 0, 0, 68, 3140, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 41, 69, 44, 43,
	46, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3280, 0, 3165, 0, 0, 0, 2691, 0, 0,
	0, 2913, 0, 0, 0, 1793, 0, 47, 72, 71,
	0, 0, 0, 0, 45, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3181, 0, 0, 0, 127,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1833, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 55, 56, 0, 3281, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 64, 0, 65, 0, 0, 0, 2690, 0,
	0, 0, 0, 0, 0, 68, 0, 0, 0, 0,
	0, 0, 468, 0, 0, 0, 0, 0, 0, 66,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 127, 127, 127, 127, 127, 0, 468,
	0, 0, 0, 0, 0, 0, 0, 3282, 70, 127,
	51, 52, 59, 468, 60, 0, 0, 0, 0, 0,
	0, 127, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2690, 0, 0, 0, 3304, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 864, 0, 0,
	0, 0, 1796, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	343, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 0, 0, 1796, 0, 0, 0, 0, 203, 193,
	0, 0, 0, 0, 0, 0, 0, 2030, 2034, 0,
	0, 247, 2690, 944, 365, 332, 266, 947, 946, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 127, 940, 0, 0, 2913, 0,
	0, 0, 0, 0, 137, 0, 0, 0, 0, 945,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 207, 0, 0, 0, 127, 0, 68, 0,
	3400, 0, 0, 0, 360, 0, 0, 0, 0, 298,
	221, 127, 0, 3404, 0, 1796, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1796,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2798,
	2803, 0, 0, 0, 0, 127, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3400,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 2033, 237, 153, 0, 0, 0, 2027,
	0, 2028, 2029, 245, 948, 154, 0, 2025, 2032, 278,
	0, 0, 142, 157, 0, 0, 0, 194, 937, 308,
	0, 359, 943, 0, 307, 248, 352, 0, 0, 358,
	0, 339, 366, 370, 214, 0, 185, 329, 205, 202,
	0, 0, 1793, 222, 297, 197, 241, 0, 0, 0,
	190, 0, 0, 0, 328, 349, 159, 263, 350, 369,
	176, 344, 264, 271, 187, 189, 188, 171, 322, 348,
	181, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 223, 0, 0, 363, 143, 317, 316, 0,
	231, 0, 144, 136, 304, 145, 238, 162, 0, 372,
	175, 243, 345, 942, 217, 277, 196, 0, 286, 0,
	156, 300, 259, 261, 258, 262, 220, 140, 146, 0,
	302, 319, 347, 177, 335, 138, 139, 141, 148, 310,
	149, 150, 0, 253, 209, 213, 225, 235, 0, 306,
	336, 364, 0, 172, 165, 338, 357, 182, 318, 321,
	371, 0, 167, 0, 0, 0, 0, 0, 0, 0,
	166, 0, 0, 0, 0, 0, 0, 219, 0, 355,
	356, 195, 373, 127, 0, 168, 0, 0, 274, 281,
	273, 0, 351, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 212, 227, 295, 250, 296, 228, 269, 268,
	270, 251, 0, 0, 163, 0, 333, 0, 0, 337,
	179, 0, 0, 346, 224, 301, 180, 218, 210, 294,
	272, 173, 230, 331, 242, 249, 0, 0, 285, 309,
	184, 361, 330, 206, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 151, 152, 0, 0, 0,
	191, 131, 0, 0, 0, 132, 0, 0, 133, 134,
	0, 0, 0, 0, 135, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 164, 174, 183, 201, 199, 211, 239, 260, 265,
	290, 320, 325, 340, 341, 342, 0, 0, 0, 0,
	0, 0, 158, 169, 246, 0, 303, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 362, 200, 0,
	0, 0, 170, 178, 186, 198, 208, 215, 226, 229,
	233, 234, 236, 240, 252, 254, 255, 256, 257, 275,
	276, 279, 280, 283, 284, 287, 288, 289, 292, 293,
	299, 147, 305, 311, 312, 313, 314, 315, 323, 324,
	326, 327, 334, 353, 354, 367, 368, 0, 0, 155,
	0, 0, 161, 0, 0, 0, 0, 0, 0, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 127, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 824, 0, 343, 586, 828,
	671, 694, 837, 700, 702, 765, 647, 742, 282, 691,
	648, 0, 0, 639, 495, 640, 672, 204, 492, 798,
	743, 826, 728, 758, 768, 203, 193, 735, 734, 815,
	683, 682, 763, 811, 825, 0, 0, 594, 247, 0,
	0, 365, 332, 266, 0, 0, 726, 0, 579, 580,
	711, 767, 659, 754, 830, 692, 759, 831, 77, 0,
	0, 0, 493, 518, 517, 520, 521, 522, 523, 0,
	0, 137, 519, 524, 525, 526, 0, 721, 764, 842,
	638, 490, 509, 643, 593, 0, 816, 679, 680, 207,
	0, 0, 0, 0, 0, 0, 0, 724, 741, 783,
	708, 360, 770, 779, 793, 701, 298, 221, 0, 0,
	0, 0, 506, 507, 486, 0, 0, 0, 609, 0,
	508, 127, 653, 504, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 510, 0, 0, 0,
	658, 636, 677, 785, 637, 635, 267, 650, 582, 814,
	709, 237, 153, 820, 707, 607, 773, 654, 802, 695,
	245, 652, 154, 649, 655, 693, 278, 782, 788, 591,
	157, 799, 673, 686, 194, 0, 308, 760, 359, 498,
	746, 307, 248, 352, 774, 822, 358, 696, 339, 366,
	370, 214, 729, 185, 329, 205, 202, 678, 792, 642,
	222, 297, 197, 241, 712, 766, 674, 190, 777, 753,
	804, 328, 349, 159, 263, 350, 369, 176, 344, 264,
	271, 187, 189, 188, 171, 322, 348, 181, 192, 800,
	787, 806, 669, 656, 661, 657, 685, 823, 232, 223,
	807, 805, 363, 143, 317, 316, 699, 231, 790, 144,
	136, 304, 145, 238, 162, 810, 372, 175, 243, 345,
	497, 217, 277, 196, 762, 286, 684, 156, 300, 259,
	261, 258, 262, 220, 140, 146, 786, 302, 319, 347,
	177, 335, 138, 139, 141, 148, 310, 149, 150, 829,
	253, 209, 213, 225, 235, 761, 306, 336, 364, 755,
	172, 165, 338, 357, 182, 318, 321, 371, 784, 167,
	818, 801, 748, 714, 720, 644, 0, 166, 780, 676,
	688, 668, 756, 667, 219, 772, 355, 356, 195, 373,
	585, 833, 168, 651, 832, 274, 281, 273, 835, 351,
	819, 749, 738, 736, 645, 817, 747, 737, 244, 212,
	227, 295, 250, 296, 228, 269, 268, 270, 251, 740,
	0, 163, 0, 333, 827, 844, 337, 179, 662, 794,
	346, 224, 301, 180, 218, 210, 294, 272, 173, 230,
	331, 242, 249, 776, 841, 285, 309, 184, 361, 330,
	206, 596, 608, 602, 604, 603, 600, 601, 599, 598,
	597, 610, 583, 584, 587, 588, 589, 731, 821, 646,
	592, 797, 605, 606, 769, 839, 581, 191, 530, 622,
	623, 624, 531, 625, 626, 532, 533, 627, 628, 629,
	630, 534, 631, 632, 633, 611, 612, 613, 614, 615,
	616, 617, 618, 621, 619, 620, 727, 291, 164, 174,
	183, 201, 199, 211, 239, 260, 265, 290, 320, 325,
	340, 341, 342, 0, 0, 0, 0, 0, 590, 158,
	169, 246, 840, 303, 216, 634, 641, 660, 663, 664,
	665, 666, 670, 675, 0, 681, 687, 689, 690, 698,
	703, 704, 705, 706, 713, 715, 716, 717, 718, 719,
	722, 723, 725, 732, 733, 739, 744, 745, 751, 752,
	0, 775, 778, 595, 789, 791, 795, 796, 803, 808,
	809, 834, 838, 843, 362, 200, 730, 750, 781, 170,
	178, 186, 198, 208, 215, 226, 229, 233, 234, 236,
	240, 252, 254, 255, 256, 257, 275, 276, 279, 280,
	283, 284, 287, 288, 289, 292, 293, 299, 147, 305,
	311, 312, 313, 314, 315, 323, 324, 326, 327, 334,
	353, 354, 367, 368, 813, 710, 155, 0, 0, 161,
	0, 0, 0, 0, 0, 697, 160, 812, 836, 757,
	771, 824, 0, 343, 586, 828, 671, 694, 837, 700,
	702, 765, 647, 742, 282, 691, 648, 0, 0, 639,
	495, 640, 672, 204, 492, 798, 743, 826, 728, 758,
	768, 203, 193, 735, 734, 815, 683, 682, 763, 811,
	825, 0, 0, 594, 247, 0, 0, 365, 332, 266,
	0, 0, 726, 0, 579, 580, 711, 767, 659, 754,
	830, 692, 759, 831, 77, 0, 1132, 0, 493, 518,
	517, 520, 521, 522, 523, 0, 0, 137, 519, 524,
	525, 526, 0, 721, 764, 842, 638, 490, 509, 643,
	593, 0, 816, 679, 680, 207, 0, 0, 0, 0,
	0, 0, 0, 724, 741, 783, 708, 360, 770, 779,
	793, 701, 298, 221, 0, 0, 0, 0, 506, 507,
	0, 0, 0, 0, 609, 0, 508, 0, 653, 504,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 510, 0, 0, 0, 658, 636, 677, 785,
	637, 635, 267, 650, 582, 814, 709, 237, 153, 820,
	707, 607, 773, 654, 802, 695, 245, 652, 154, 649,
	655, 693, 278, 782, 788, 591, 157, 799, 673, 686,
	194, 0, 308, 760, 359, 498, 746, 307, 248, 352,
	774, 822, 358, 696, 339, 366, 370, 214, 729, 185,
	329, 205, 202, 678, 792, 642, 222, 297, 197, 241,
	712, 766, 674, 190, 777, 753, 804, 328, 349, 159,
	263, 350, 369, 176, 344, 264, 271, 187, 189, 188,
	171, 322, 348, 181, 192, 800, 787, 806, 669, 656,
	661, 657, 685, 823, 232, 223, 807, 805, 363, 143,
	317, 316, 699, 231, 790, 144, 136, 304, 145, 238,
	162, 810, 372, 175, 243, 345, 497, 217, 277, 196,
	762, 286, 684, 156, 300, 259, 261, 258, 262, 220,
	140, 146, 786, 302, 319, 347, 177, 335, 138, 139,
	141, 148, 310, 149, 150, 829, 253, 209, 213, 225,
	235, 761, 306, 336, 364, 755, 172, 165, 338, 357,
	182, 318, 321, 371, 784, 167, 818, 801, 748, 714,
	720, 644, 0, 166, 780, 676, 688, 668, 756, 667,
	219, 772, 355, 356, 195, 373, 585, 833, 168, 651,
	832, 274, 281, 273, 835, 351, 819, 749, 738, 736,
	645, 817, 747, 737, 244, 212, 227, 295, 250, 296,
	228, 269, 268, 270, 251, 740, 0, 163, 0, 333,
	827, 844, 337, 179, 662, 794, 346, 224, 301, 180,
	218, 210, 294, 272, 173, 230, 331, 242, 249, 776,
	841, 285, 309, 184, 361, 330, 206, 596, 608, 602,
	604, 603, 600, 601, 599, 598, 597, 610, 583, 584,
	587, 588, 589, 731, 821, 646, 592, 797, 605, 606,
	769, 839, 581, 191, 530, 622, 623, 624, 531, 625,
	626, 532, 533, 627, 628, 629, 630, 534, 631, 632,
	633, 611, 612, 613, 614, 615, 616, 617, 618, 621,
	619, 620, 727, 291, 164, 174, 183, 201, 199, 211,
	239, 260, 265, 290, 320, 325, 340, 341, 342, 0,
	0, 0, 0, 0, 590, 158, 169, 246, 840, 303,
	216, 634, 641, 660, 663, 664, 665, 666, 670, 675,
	0, 681, 687, 689, 690, 698, 703, 704, 705, 706,
	713, 715, 716, 717, 718, 719, 722, 723, 725, 732,
	733, 739, 744, 745, 751, 752, 0, 775, 778, 595,
	789, 791, 795, 796, 803, 808, 809, 834, 838, 843,
	362, 200, 730, 750, 781, 170, 178, 186, 198, 208,
	215, 226, 229, 233, 234, 236, 240, 252, 254, 255,
	256, 257, 275, 276, 279, 280, 283, 284, 287, 288,
	289, 292, 293, 299, 147, 305, 311, 312, 313, 314,
	315, 323, 324, 326, 327, 334, 353, 354, 367, 368,
	813, 710, 155, 0, 0, 161, 0, 0, 0, 0,
	0, 697, 160, 812, 836, 757, 771, 824, 0, 343,
	586, 828, 671, 694, 837, 700, 702, 765, 647, 742,
	282, 691, 648, 0, 0, 639, 495, 640, 672, 204,
	492, 798, 743, 826, 728, 758, 768, 203, 193, 735,
	734, 815, 683, 682, 763, 811, 825, 0, 0, 594,
	247, 0, 0, 365, 332, 266, 0, 0, 726, 0,
	579, 580, 711, 767, 659, 754, 830, 692, 759, 831,
	77, 0, 0, 0, 493, 518, 517, 520, 521, 522,
	523, 0, 0, 137, 519, 524, 525, 526, 0, 721,
	764, 842, 638, 490, 509, 643, 593, 0, 816, 679,
	680, 207, 0, 0, 0, 0, 0, 0, 0, 724,
	741, 783, 708, 360, 770, 779, 793, 701, 298, 221,
	0, 0, 0, 0, 506, 507, 1869, 0, 0, 0,
	609, 0, 508, 0, 653, 504, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 510, 0,
	0, 0, 658, 636, 677, 785, 637, 635, 267, 650,
	582, 814, 709, 237, 153, 820, 707, 607, 773, 654,
	802, 695, 245, 652, 154, 649, 655, 693, 278, 782,
	788, 591, 157, 799, 673, 686, 194, 0, 308, 760,
	359, 498, 746, 307, 248, 352, 774, 822, 358, 696,
	339, 366, 370, 214, 729, 185, 329, 205, 202, 678,
	792, 642, 222, 297, 197, 241, 712, 766, 674, 190,
	777, 753, 804, 328, 349, 159, 263, 350, 369, 176,
	344, 264, 271, 187, 189, 188, 171, 322, 348, 181,
	192, 800, 787, 806, 669, 656, 661, 657, 685, 823,
	232, 223, 807, 805, 363, 143, 317, 316, 699, 231,
	790, 144, 136, 304, 145, 238, 162, 810, 372, 175,
	243, 345, 497, 217, 277, 196, 762, 286, 684, 156,
	300, 259, 261, 258, 262, 220, 140, 146, 786, 302,
	319, 347, 177, 335, 138, 139, 141, 148, 310, 149,
	150, 829, 253, 209, 213, 225, 235, 761, 306, 336,
	364, 755, 172, 165, 338, 357, 182, 318, 321, 371,
	784, 167, 818, 801, 748, 714, 720, 644, 0, 166,
	780, 676, 688, 668, 756, 667, 219, 772, 355, 356,
	195, 373, 585, 833, 168, 651, 832, 274, 281, 273,
	835, 351, 819, 749, 738, 736, 645, 817, 747, 737,
	244, 212, 227, 295, 250, 296, 228, 269, 268, 270,
	251, 740, 0, 163, 0, 333, 827, 844, 337, 179,
	662, 794, 346, 224, 301, 180, 218, 210, 294, 272,
	173, 230, 331, 242, 249, 776, 841, 285, 309, 184,
	361, 330, 206, 596, 608, 602, 604, 603, 600, 601,
	599, 598, 597, 610, 583, 584, 587, 588, 589, 731,
	821, 646, 592, 797, 605, 606, 769, 839, 581, 191,
	530, 622, 623, 624, 531, 625, 626, 532, 533, 627,
	628, 629, 630, 534, 631, 632, 633, 611, 612, 613,
	614, 615, 616, 617, 618, 621, 619, 620, 727, 291,
	164, 174, 183, 201, 199, 211, 239, 260, 265, 290,
	320, 325, 340, 341, 342, 0, 0, 0, 0, 0,
	590, 158, 169, 246, 840, 303, 216, 634, 641, 660,
	663, 664, 665, 666, 670, 675, 0, 681, 687, 689,
	690, 698, 703, 704, 705, 706, 713, 715, 716, 717,
	718, 719, 722, 723, 725, 732, 733, 739, 744, 745,
	751, 752, 0, 775, 778, 595, 789, 791, 795, 796,
	803, 808, 809, 834, 838, 843, 362, 200, 730, 750,
	781, 170, 178, 186, 198, 208, 215, 226, 229, 233,
	234, 236, 240, 252, 254, 255, 256, 257, 275, 276,
	279, 280, 283, 284, 287, 288, 289, 292, 293, 299,
	147, 305, 311, 312, 313, 314, 315, 323, 324, 326,
	327, 334, 353, 354, 367, 368, 813, 710, 155, 0,
	0, 161, 0, 0, 0, 0, 0, 697, 160, 812,
	836, 757, 771, 824, 0, 343, 586, 828, 671, 694,
	837, 700, 702, 765, 647, 742, 282, 691, 648, 0,
	0, 639, 495, 640, 672, 204, 492, 798, 743, 826,
	728, 758, 768, 203, 193, 735, 734, 815, 683, 682,
	763, 811, 825, 0, 0, 594, 247, 0, 0, 365,
	332, 266, 0, 0, 726, 0, 579, 580, 711, 767,
	659, 754, 830, 692, 1981, 831, 77, 0, 0, 0,
	493, 518, 517, 520, 521, 522, 523, 0, 0, 137,
	519, 524, 525, 526, 1982, 721, 764, 842, 638, 490,
	509, 643, 593, 0, 816, 679, 680, 207, 0, 0,
	0, 0, 0, 0, 0, 724, 741, 783, 708, 360,
	770, 779, 793, 701, 298, 221, 0, 0, 0, 0,
	506, 507, 0, 0, 0, 0, 609, 0, 508, 0,
	653, 504, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 510, 0, 0, 0, 658, 636,
	677, 785, 637, 635, 267, 650, 582, 814, 709, 237,
	153, 820, 707, 607, 773, 654, 802, 695, 245, 652,
	154, 649, 655, 693, 278, 782, 788, 591, 157, 799,
	673, 686, 194, 0, 308, 760, 359, 498, 746, 307,
	248, 352, 774, 822, 358, 696, 339, 366, 370, 214,
	729, 185, 329, 205, 202, 678, 792, 642, 222, 297,
	197, 241, 712, 766, 674, 190, 777, 753, 804, 328,
	349, 159, 263, 350, 369, 176, 344, 264, 271, 187,
	189, 188, 171, 322, 348, 181, 192, 800, 787, 806,
	669, 656, 661, 657, 685, 823, 232, 223, 807, 805,
	363, 143, 317, 316, 699, 231, 790, 144, 136, 304,
	145, 238, 162, 810, 372, 175, 243, 345, 497, 217,
	277, 196, 762, 286, 684, 156, 300, 259, 261, 258,
	262, 220, 140, 146, 786, 302, 319, 347, 177, 335,
	138, 139, 141, 148, 310, 149, 150, 829, 253, 209,
	213, 225, 235, 761, 306, 336, 364, 755, 172, 165,
	338, 357, 182, 318, 321, 371, 784, 167, 818, 801,
	748, 714, 720, 644, 0, 166, 780, 676, 688, 668,
	756, 667, 219, 772, 355, 356, 195, 373, 585, 833,
	168, 651, 832, 274, 281, 273, 835, 351, 819, 749,
	738, 736, 645, 817, 747, 737, 244, 212, 227, 295,
	250, 296, 228, 269, 268, 270, 251, 740, 0, 163,
	0, 333, 827, 844, 337, 179, 662, 794, 346, 224,
	301, 180, 218, 210, 294, 272, 173, 230, 331, 242,
	249, 776, 841, 285, 309, 184, 361, 330, 206, 596,
	608, 602, 604, 603, 600, 601, 599, 598, 597, 610,
	583, 584, 587, 588, 589, 731, 821, 646, 592, 797,
	605, 606, 769, 839, 581, 191, 530, 622, 623, 624,
	531, 625, 626, 532, 533, 627, 628, 629, 630, 534,
	631, 632, 633, 611, 612, 613, 614, 615, 616, 617,
	618, 621, 619, 620, 727, 291, 164, 174, 183, 201,
	199, 211, 239, 260, 265, 290, 320, 325, 340, 341,
	342, 0, 0, 0, 0, 0, 590, 158, 169, 246,
	840, 303, 216, 634, 641, 660, 663, 664, 665, 666,
	670, 675, 0, 681, 687, 689, 690, 698, 703, 704,
	705, 706, 713, 715, 716, 717, 718, 719, 722, 723,
	725, 732, 733, 739, 744, 745, 751, 752, 0, 775,
	778, 595, 789, 791, 795, 796, 803, 808, 809, 834,
	838, 843, 362, 200, 730, 750, 781, 170, 178, 186,
	198, 208, 215, 226, 229, 233, 234, 236, 240, 252,
	254, 255, 256, 257, 275, 276, 279, 280, 283, 284,
	287, 288, 289, 292, 293, 299, 147, 305, 311, 312,
	313, 314, 315, 323, 324, 326, 327, 334, 353, 354,
	367, 368, 813, 710, 155, 0, 0, 161, 0, 0,
	0, 0, 0, 697, 160, 812, 836, 757, 771, 824,
	0, 343, 586, 828, 671, 694, 837, 700, 702, 765,
	647, 742, 282, 691, 648, 0, 0, 639, 884, 640,
	672, 204, 882, 798, 743, 826, 728, 758, 768, 203,
	193, 735, 734, 815, 683, 682, 763, 811, 825, 0,
	0, 594, 247, 0, 0, 365, 332, 266, 0, 0,
	726, 0, 579, 580, 711, 767, 659, 754, 830, 692,
	759, 831, 77, 0, 1132, 0, 493, 518, 517, 520,
	521, 522, 523, 0, 0, 137, 519, 524, 525, 526,
	0, 721, 764, 842, 638, 901, 509, 643, 593, 0,
	816, 679, 680, 207, 0, 0, 0, 0, 0, 0,
	0, 724, 741, 783, 708, 360, 770, 779, 793, 701,
	298, 221, 0, 0, 0, 0, 506, 507, 0, 0,
	0, 0, 609, 0, 508, 0, 653, 504, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	510, 0, 0, 0, 658, 636, 677, 785, 637, 635,
	267, 650, 582, 814, 709, 237, 153, 820, 707, 607,
	773, 654, 802, 695, 245, 652, 154, 649, 655, 693,
	278, 782, 788, 591, 157, 799, 673, 686, 194, 0,
	308, 760, 359, 498, 746, 307, 248, 352, 774, 822,
	358, 696, 339, 366, 370, 214, 729, 185, 329, 205,
	202, 678, 792, 642, 222, 297, 197, 241, 712, 766,
	674, 190, 777, 753, 804, 328, 349, 159, 263, 350,
	369, 176, 344, 264, 271, 187, 189, 188, 171, 322,
	348, 181, 192, 800, 787, 806, 669, 656, 661, 657,
	685, 823, 232, 223, 807, 805, 363, 143, 317, 316,
	699, 231, 790, 144, 136, 304, 145, 238, 162, 810,
	372, 175, 243, 345, 497, 217, 277, 196, 762, 286,
	684, 156, 300, 259, 261, 258, 262, 220, 140, 146,
	786, 302, 319, 347, 177, 335, 138, 139, 141, 148,
	310, 149, 150, 829, 253, 209, 213, 225, 235, 761,
	306, 336, 364, 755, 172, 165, 338, 357, 182, 318,
	321, 371, 784, 167, 818, 801, 748, 714, 720, 644,
	0, 166, 780, 676, 688, 668, 756, 667, 219, 772,
	355, 356, 195, 373, 585, 833, 168, 651, 832, 274,
	281, 273, 835, 351, 819, 749, 738, 736, 645, 817,
	747, 737, 244, 212, 227, 295, 250, 296, 228, 269,
	268, 270, 251, 740, 0, 163, 0, 333, 827, 844,
	337, 179, 662, 794, 346, 224, 301, 180, 218, 210,
	294, 272, 173, 230, 331, 242, 249, 776, 841, 285,
	309, 184, 361, 330, 206, 596, 608, 602, 604, 603,
	600, 601, 599, 598, 597, 610, 583, 584, 587, 588,
	589, 731, 821, 646, 592, 797, 605, 606, 769, 839,
	581, 191, 530, 622, 623, 624, 531, 625, 626, 532,
	533, 627, 628, 629, 630, 534, 631, 632, 633, 611,
	612, 613, 614, 615, 616, 617, 618, 621, 619, 620,
	727, 291, 164, 174, 183, 201, 199, 211, 239, 260,
	265, 290, 320, 325, 340, 341, 342, 0, 0, 0,
	0, 0, 590, 158, 169, 246, 840, 303, 216, 634,
	641, 660, 663, 664, 665, 666, 670, 675, 0, 681,
	687, 689, 690, 698, 703, 704, 705, 706, 713, 715,
	716, 717, 718, 719, 722, 723, 725, 732, 733, 739,
	744, 745, 751, 752, 0, 775, 778, 595, 789, 791,
	795, 796, 803, 808, 809, 834, 838, 843, 362, 200,
	730, 750, 781, 170, 178, 186, 198, 208, 215, 226,
	229, 233, 234, 236, 240, 252, 254, 255, 256, 257,
	275, 276, 279, 280, 283, 284, 287, 288, 289, 292,
	293, 299, 147, 305, 311, 312, 313, 314, 315, 323,
	324, 326, 327, 334, 353, 354, 367, 368, 813, 710,
	155, 0, 0, 161, 0, 0, 0, 0, 0, 697,
	160, 812, 836, 757, 771, 824, 0, 343, 586, 828,
	671, 694, 837, 700, 702, 765, 647, 742, 282, 691,
	648, 0, 0, 639, 495, 640, 672, 204, 492, 798,
	743, 826, 728, 758, 768, 203, 193, 735, 734, 815,
	683, 682, 763, 811, 825, 0, 0, 594, 247, 0,
	0, 365, 332, 266, 0, 0, 726, 0, 579, 580,
	711, 767, 659, 754, 830, 692, 759, 831, 77, 0,
	0, 0, 493, 518, 1902, 520, 521, 522, 523, 0,
	0, 137, 519, 524, 525, 526, 0, 721, 764, 842,
	638, 490, 509, 643, 593, 0, 816, 679, 680, 207,
	0, 0, 0, 0, 0, 0, 0, 724, 741, 783,
	708, 360, 770, 779, 793, 701, 298, 221, 0, 0,
	0, 0, 506, 507, 1869, 0, 0, 0, 609, 0,
	508, 0, 653, 504, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 510, 0, 0, 0,
	658, 636, 677, 785, 637, 635, 267, 650, 582, 814,
	709, 237, 153, 820, 707, 607, 773, 654, 802, 695,
	245, 652, 154, 649, 655, 693, 278, 782, 788, 591,
	157, 799, 673, 686, 194, 0, 308, 760, 359, 498,
	746, 307, 248, 352, 774, 822, 358, 696, 339, 366,
	370, 214, 729, 185, 329, 205, 202, 678, 792, 642,
	222, 297, 197, 241, 712, 766, 674, 190, 777, 753,
	804, 328, 349, 159, 263, 350, 369, 176, 344, 264,
	271, 187, 189, 188, 171, 322, 348, 181, 192, 800,
	787, 806, 669, 656, 661, 657, 685, 823, 232, 223,
	807, 805, 363, 143, 317, 316, 699, 231, 790, 144,
	136, 304, 145, 238, 162, 810, 372, 175, 243, 345,
	497, 217, 277, 196, 762, 286, 684, 156, 300, 259,
	261, 258, 262, 220, 140, 146, 786, 302, 319, 347,
	177, 335, 138, 139, 141, 148, 310, 149, 150, 829,
	253, 209, 213, 225, 235, 761, 306, 336, 364, 755,
	172, 165, 338, 357, 182, 318, 321, 371, 784, 167,
	818, 801, 748, 714, 720, 644, 0, 166, 780, 676,
	688, 668, 756, 667, 219, 772, 355, 356, 195, 373,
	585, 833, 168, 651, 832, 274, 281, 273, 835, 351,
	819, 749, 738, 736, 645, 817, 747, 737, 244, 212,
	227, 295, 250, 296, 228, 269, 268, 270, 251, 740,
	0, 163, 0, 333, 827, 844, 337, 179, 662, 794,
	346, 224, 301, 180, 218, 210, 294, 272, 173, 230,
	331, 242, 249, 776, 841, 285, 309, 184, 361, 330,
	206, 596, 608, 602, 604, 603, 600, 601, 599, 598,
	597, 610, 583, 584, 587, 588, 589, 731, 821, 646,
	592, 797, 605, 606, 769, 839, 581, 191, 530, 622,
	623, 624, 531, 625, 626, 532, 533, 627, 628, 629,
	630, 534, 631, 632, 633, 611, 612, 613, 614, 615,
	616, 617, 618, 621, 619, 620, 727, 291, 164, 174,
	183, 201, 199, 211, 239, 260, 265, 290, 320, 325,
	340, 341, 342, 0, 0, 0, 0, 0, 590, 158,
	169, 246, 840, 303, 216, 634, 641, 660, 663, 664,
	665, 666, 670, 675, 0, 681, 687, 689, 690, 698,
	703, 704, 705, 706, 713, 715, 716, 717, 718, 719,
	722, 723, 725, 732, 733, 739, 744, 745, 751, 752,
	0, 775, 778, 595, 789, 791, 795, 796, 803, 808,
	809, 834, 838, 843, 362, 200, 730, 750, 781, 170,
	178, 186, 198, 208, 215, 226, 229, 233, 234, 236,
	240, 252, 254, 255, 256, 257, 275, 276, 279, 280,
	283, 284, 287, 288, 289, 292, 293, 299, 147, 305,
	311, 312, 313, 314, 315, 323, 324, 326, 327, 334,
	353, 354, 367, 368, 813, 710, 155, 0, 0, 161,
	0, 0, 0, 0, 0, 697, 160, 812, 836, 757,
	771, 824, 0, 343, 586, 828, 671, 694, 837, 700,
	702, 765, 647, 742, 282, 691, 648, 0, 0, 639,
	495, 640, 672, 204, 492, 798, 743, 826, 728, 758,
	768, 203, 193, 735, 734, 815, 683, 682, 763, 811,
	825, 0, 0, 594, 247, 0, 0, 365, 332, 266,
	0, 0, 726, 0, 579, 580, 711, 767, 659, 754,
	830, 692, 759, 831, 77, 0, 0, 0, 493, 518,
	1899, 520, 521, 522, 523, 0, 0, 137, 519, 524,
	525, 526, 0, 721, 764, 842, 638, 490, 509, 643,
	593, 0, 816, 679, 680, 207, 0, 0, 0, 0,
	0, 0, 0, 724, 741, 783, 708, 360, 770, 779,
	793, 701, 298, 221, 0, 0, 0, 0, 506, 507,
	1869, 0, 0, 0, 609, 0, 508, 0, 653, 504,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 510, 0, 0, 0, 658, 636, 677, 785,
	637, 635, 267, 650, 582, 814, 709, 237, 153, 820,
	707, 607, 773, 654, 802, 695, 245, 652, 154, 649,
	655, 693, 278, 782, 788, 591, 157, 799, 673, 686,
	194, 0, 308, 760, 359, 498, 746, 307, 248, 352,
	774, 822, 358, 696, 339, 366, 370, 214, 729, 185,
	329, 205, 202, 678, 792, 642, 222, 297, 197, 241,
	712, 766, 674, 190, 777, 753, 804, 328, 349, 159,
	263, 350, 369, 176, 344, 264, 271, 187, 189, 188,
	171, 322, 348, 181, 192, 800, 787, 806, 669, 656,
	661, 657, 685, 823, 232, 223, 807, 805, 363, 143,
	317, 316, 699, 231, 790, 144, 136, 304, 145, 238,
	162, 810, 372, 175, 243, 345, 497, 217, 277, 196,
	762, 286, 684, 156, 300, 259, 261, 258, 262, 220,
	140, 146, 786, 302, 319, 347, 177, 335, 138, 139,
	141, 148, 310, 149, 150, 829, 253, 209, 213, 225,
	235, 761, 306, 336, 364, 755, 172, 165, 338, 357,
	182, 318, 321, 371, 784, 167, 818, 801, 748, 714,
	720, 644, 0, 166, 780, 676, 688, 668, 756, 667,
	219, 772, 355, 356, 195, 373, 585, 833, 168, 651,
	832, 274, 281, 273, 835, 351, 819, 749, 738, 736,
	645, 817, 747, 737, 244, 212, 227, 295, 250, 296,
	228, 269, 268, 270, 251, 740, 0, 163, 0, 333,
	827, 844, 337, 179, 662, 794, 346, 224, 301, 180,
	218, 210, 294, 272, 173, 230, 331, 242, 249, 776,
	841, 285, 309, 184, 361, 330, 206, 596, 608, 602,
	604, 603, 600, 601, 599, 598, 597, 610, 583, 584,
	587, 588, 589, 731, 821, 646, 592, 797, 605, 606,
	769, 839, 581, 191, 530, 622, 623, 624, 531, 625,
	626, 532, 533, 627, 628, 629, 630, 534, 631, 632,
	633, 611, 612, 613, 614, 615, 616, 617, 618, 621,
	619, 620, 727, 291, 164, 174, 183, 201, 199, 211,
	239, 260, 265, 290, 320, 325, 340, 341, 342, 0,
	0, 0, 0, 0, 590, 158, 169, 246, 840, 303,
	216, 634, 641, 660, 663, 664, 665, 666, 670, 675,
	0, 681, 687, 689, 690, 698, 703, 704, 705, 706,
	713, 715, 716, 717, 718, 719, 722, 723, 725, 732,
	733, 739, 744, 745, 751, 752, 0, 775, 778, 595,
	789, 791, 795, 796, 803, 808, 809, 834, 838, 843,
	362, 200, 730, 750, 781, 170, 178, 186, 198, 208,
	215, 226, 229, 233, 234, 236, 240, 252, 254, 255,
	256, 257, 275, 276, 279, 280, 283, 284, 287, 288,
	289, 292, 293, 299, 147, 305, 311, 312, 313, 314,
	315, 323, 324, 326, 327, 334, 353, 354, 367, 368,
	813, 710, 155, 0, 0, 161, 0, 0, 0, 0,
	0, 697, 160, 812, 836, 757, 771, 824, 36, 343,
	586, 828, 671, 694, 837, 700, 702, 765, 647, 742,
	282, 691, 648, 0, 0, 639, 495, 640, 672, 204,
	492, 798, 743, 826, 728, 758, 768, 203, 193, 735,
	734, 815, 683, 682, 763, 811, 825, 0, 0, 594,
	247, 0, 0, 365, 332, 266, 0, 0, 726, 0,
	579, 580, 711, 767, 659, 754, 830, 692, 759, 831,
	77, 0, 0, 0, 493, 518, 517, 520, 521, 522,
	523, 0, 0, 137, 519, 524, 525, 526, 0, 721,
	764, 842, 638, 490, 509, 643, 593, 0, 816, 679,
	680, 207, 0, 0, 0, 0, 0, 0, 0, 724,
	741, 783, 708, 360, 770, 779, 793, 701, 298, 221,
	0, 0, 0, 0, 506, 507, 0, 0, 0, 0,
	609, 0, 508, 0, 653, 504, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 510, 0,
	0, 0, 658, 636, 677, 785, 637, 635, 267, 650,
	582, 814, 709, 237, 153, 820, 707, 607, 773, 654,
	802, 695, 245, 652, 154, 649, 655, 693, 278, 782,
	788, 591, 157, 799, 673, 686, 194, 0, 308, 760,
	359, 498, 746, 307, 248, 352, 774, 822, 358, 696,
	339, 366, 370, 214, 729, 185, 329, 205, 202, 678,
	792, 642, 222, 297, 197, 241, 712, 766, 674, 190,
	777, 753, 804, 328, 349, 159, 263, 350, 369, 176,
	344, 264, 271, 187, 189, 188, 171, 322, 348, 181,
	192, 800, 787, 806, 669, 656, 661, 657, 685, 823,
	232, 223, 807, 805, 363, 143, 317, 316, 699, 231,
	790, 144, 136, 304, 145, 238, 162, 810, 372, 175,
	243, 345, 497, 217, 277, 196, 762, 286, 684, 156,
	300, 259, 261, 258, 262, 220, 140, 146, 786, 302,
	319, 347, 177, 335, 138, 139, 141, 148, 310, 149,
	150, 829, 253, 209, 213, 225, 235, 761, 306, 336,
	364, 755, 172, 165, 338, 357, 182, 318, 321, 371,
	784, 167, 818, 801, 748, 714, 720, 644, 0, 166,
	780, 676, 688, 668, 756, 667, 219, 772, 355, 356,
	195, 373, 585, 833, 168, 651, 832, 274, 281, 273,
	835, 351, 819, 749, 738, 736, 645, 817, 747, 737,
	244, 212, 227, 295, 250, 296, 228, 269, 268, 270,
	251, 740, 0, 163, 0, 333, 827, 844, 337, 179,
	662, 794, 346, 224, 301, 180, 218, 210, 294, 272,
	173, 230, 331, 242, 249, 776, 841, 285, 309, 184,
	361, 330, 206, 596, 608, 602, 604, 603, 600, 601,
	599, 598, 597, 610, 583, 584, 587, 588, 589, 731,
	821, 646, 592, 797, 605, 606, 769, 839, 581, 191,
	530, 622, 623, 624, 531, 625, 626, 532, 533, 627,
	628, 629, 630, 534, 631, 632, 633, 611, 612, 613,
	614, 615, 616, 617, 618, 621, 619, 620, 727, 291,
	164, 174, 183, 201, 199, 211, 239, 260, 265, 290,
	320, 325, 340, 341, 342, 0, 0, 0, 0, 0,
	590, 158, 169, 246, 1219, 303, 216, 634, 641, 660,
	663, 664, 665, 666, 670, 675, 0, 681, 687, 689,
	690, 698, 703, 704, 705, 706, 713, 715, 716, 717,
	718, 719, 722, 723, 725, 732, 733, 739, 744, 745,
	751, 752, 0, 775, 778, 595, 789, 791, 795, 796,
	803, 808, 809, 834, 838, 843, 362, 200, 730, 750,
	781, 170, 178, 186, 198, 208, 215, 226, 229, 233,
	234, 236, 240, 252, 254, 255, 256, 257, 275, 276,
	279, 280, 283, 284, 287, 288, 289, 292, 293, 299,
	147, 305, 311, 312, 313, 314, 315, 323, 324, 326,
	327, 334, 353, 354, 367, 368, 813, 710, 155, 0,
	0, 161, 0, 0, 0, 0, 0, 697, 160, 812,
	836, 757, 771, 824, 0, 343, 586, 828, 671, 694,
	837, 700, 702, 765, 647, 742, 282, 691, 648, 0,
	0, 639, 495, 640, 672, 204, 492, 798, 743, 826,
	728, 758, 768, 203, 193, 735, 734, 815, 683, 682,
	763, 811, 825, 0, 0, 594, 247, 0, 0, 365,
	332, 266, 0, 0, 726, 0, 579, 580, 711, 767,
	659, 754, 830, 692, 759, 831, 77, 0, 1738, 0,
	493, 518, 517, 520, 521, 522, 523, 0, 0, 137,
	519, 524, 525, 526, 0, 721, 764, 842, 638, 490,
	509, 643, 593, 0, 816, 679, 680, 207, 0, 0,
	0, 0, 0, 0, 0, 724, 741, 783, 708, 360,
	770, 779, 793, 701, 298, 221, 0, 0, 0, 0,
	506, 507, 0, 0, 0, 0, 609, 0, 508, 0,
	653, 504, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 510, 0, 0, 0, 658, 636,
	677, 785, 637, 635, 267, 650, 582, 814, 709, 237,
	153, 820, 707, 607, 773, 654, 802, 695, 245, 652,
	154, 649, 655, 693, 278, 782, 788, 591, 157, 799,
	673, 686, 194, 0, 308, 760, 359, 498, 746, 307,
	248, 352, 774, 822, 358, 696, 339, 366, 370, 214,
	729, 185, 329, 205, 202, 678, 792, 642, 222, 297,
	197, 241, 712, 766, 674, 190, 777, 753, 804, 328,
	349, 159, 263, 350, 369, 176, 344, 264, 271, 187,
	189, 188, 171, 322, 348, 181, 192, 800, 787, 806,
	669, 656, 661, 657, 685, 823, 232, 223, 807, 805,
	363, 143, 317, 316, 699, 231, 790, 144, 136, 304,
	145, 238, 162, 810, 372, 175, 243, 345, 497, 217,
	277, 196, 762, 286, 684, 156, 300, 259, 261, 258,
	262, 220, 140, 146, 786, 302, 319, 347, 177, 335,
	138, 139, 141, 148, 310, 149, 150, 829, 253, 209,
	213, 225, 235, 761, 306, 336, 364, 755, 172, 165,
	338, 357, 182, 318, 321, 371, 784, 167, 818, 801,
	748, 714, 720, 644, 0, 166, 780, 676, 688, 668,
	756, 667, 219, 772, 355, 356, 195, 373, 585, 833,
	168, 651, 832, 274, 281, 273, 835, 351, 819, 749,
	738, 736, 645, 817, 747, 737, 244, 212, 227, 295,
	250, 296, 228, 269, 268, 270, 251, 740, 0, 163,
	0, 333, 827, 844, 337, 179, 662, 794, 346, 224,
	301, 180, 218, 210, 294, 272, 173, 230, 331, 242,
	249, 776, 841, 285, 309, 184, 361, 330, 206, 596,
	608, 602, 604, 603, 600, 601, 599, 598, 597, 610,
	583, 584, 587, 588, 589, 731, 821, 646, 592, 797,
	605, 606, 769, 839, 581, 191, 530, 622, 623, 624,
	531, 625, 626, 532, 533, 627, 628, 629, 630, 534,
	631, 632, 633, 611, 612, 613, 614, 615, 616, 617,
	618, 621, 619, 620, 727, 291, 164, 174, 183, 201,
	199, 211, 239, 260, 265, 290, 320, 325, 340, 341,
	342, 0, 0, 0, 0, 0, 590, 158, 169, 246,
	840, 303, 216, 634, 641, 660, 663, 664, 665, 666,
	670, 675, 0, 681, 687, 689, 690, 698, 703, 704,
	705, 706, 713, 715, 716, 717, 718, 719, 722, 723,
	725, 732, 733, 739, 744, 745, 751, 752, 0, 775,
	778, 595, 789, 791, 795, 796, 803, 808, 809, 834,
	838, 843, 362, 200, 730, 750, 781, 170, 178, 186,
	198, 208, 215, 226, 229, 233, 234, 236, 240, 252,
	254, 255, 256, 257, 275, 276, 279, 280, 283, 284,
	287, 288, 289, 292, 293, 299, 147, 305, 311, 312,
	313, 314, 315, 323, 324, 326, 327, 334, 353, 354,
	367, 368, 813, 710, 155, 0, 0, 161, 0, 0,
	0, 0, 0, 697, 160, 812, 836, 757, 771, 824,
	0, 343, 586, 828, 671, 694, 837, 700, 702, 765,
	647, 742, 282, 691, 648, 0, 0, 639, 884, 640,
	672, 204, 882, 798, 743, 826, 728, 758, 768, 203,
	193, 735, 734, 815, 683, 682, 763, 811, 825, 0,
	0, 594, 247, 0, 0, 365, 332, 266, 0, 0,
	726, 0, 579, 580, 711, 767, 659, 754, 830, 692,
	759, 831, 77, 0, 0, 0, 493, 518, 517, 520,
	521, 522, 523, 0, 0, 137, 519, 524, 525, 526,
	0, 721, 764, 842, 638, 901, 509, 643, 593, 0,
	816, 679, 680, 207, 0, 0, 0, 0, 0, 0,
	0, 724, 741, 783, 708, 360, 770, 779, 793, 701,
	298, 221, 0, 0, 0, 0, 506, 507, 0, 0,
	0, 0, 609, 0, 508, 0, 653, 504, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	510, 0, 0, 0, 658, 636, 677, 785, 637, 635,
	267, 650, 582, 814, 709, 237, 153, 820, 707, 607,
	773, 654, 802, 695, 245, 652, 154, 649, 655, 693,
	278, 782, 788, 591, 157, 799, 673, 686, 194, 0,
	308, 760, 359, 498, 746, 307, 248, 352, 774, 822,
	358, 696, 339, 366, 370, 214, 729, 185, 329, 205,
	202, 678, 792, 642, 222, 297, 197, 241, 712, 766,
	674, 190, 777, 753, 804, 328, 349, 159, 263, 350,
	369, 176, 344, 264, 271, 187, 189, 188, 171, 322,
	348, 181, 192, 800, 787, 806, 669, 656, 661, 657,
	685, 823, 232, 223, 807, 805, 363, 143, 317, 316,
	699, 231, 790, 144, 136, 304, 145, 238, 162, 810,
	372, 175, 243, 345, 497, 217, 277, 196, 762, 286,
	684, 156, 300, 259, 261, 258, 262, 220, 140, 146,
	786, 302, 319, 347, 177, 335, 138, 139, 141, 148,
	310, 149, 150, 829, 253, 209, 213, 225, 235, 761,
	306, 336, 364, 755, 172, 165, 338, 357, 182, 318,
	321, 371, 784, 167, 818, 801, 748, 714, 720, 644,
	0, 166, 780, 676, 688, 668, 756, 667, 219, 772,
	355, 356, 195, 373, 585, 833, 168, 651, 832, 274,
	281, 273, 835, 351, 819, 749, 738, 736, 645, 817,
	747, 737, 244, 212, 227, 295, 250, 296, 228, 269,
	268, 270, 251, 740, 0, 163, 0, 333, 827, 844,
	337, 179, 662, 794, 346, 224, 301, 180, 218, 210,
	294, 272, 173, 230, 331, 242, 249, 776, 841, 285,
	309, 184, 361, 330, 206, 596, 608, 602, 604, 603,
	600, 601, 599, 598, 597, 610, 583, 584, 587, 588,
	589, 731, 821, 646, 592, 797, 605, 606, 769, 839,
	581, 191, 530, 622, 623, 624, 531, 625, 626, 532,
	533, 627, 628, 629, 630, 534, 631, 632, 633, 611,
	612, 613, 614, 615, 616, 617, 618, 621, 619, 620,
	727, 291, 164, 174, 183, 201, 199, 211, 239, 260,
	265, 290, 320, 325, 340, 341, 342, 0, 0, 0,
	0, 0, 590, 158, 169, 246, 840, 303, 216, 634,
	641, 660, 663, 664, 665, 666, 670, 675, 0, 681,
	687, 689, 690, 698, 703, 704, 705, 706, 713, 715,
	716, 717, 718, 719, 722, 723, 725, 732, 733, 739,
	744, 745, 751, 752, 0, 775, 778, 595, 789, 791,
	795, 796, 803, 808, 809, 834, 838, 843, 362, 200,
	730, 750, 781, 170, 178, 186, 198, 208, 215, 226,
	229, 233, 234, 236, 240, 252, 254, 255, 256, 257,
	275, 276, 279, 280, 283, 284, 287, 288, 289, 292,
	293, 299, 147, 305, 311, 312, 313, 314, 315, 323,
	324, 326, 327, 334, 353, 354, 367, 368, 813, 710,
	155, 0, 0, 161, 0, 0, 0, 0, 0, 697,
	160, 812, 836, 757, 771, 824, 0, 343, 586, 828,
	671, 694, 837, 700, 702, 765, 647, 742, 282, 691,
	648, 0, 0, 639, 495, 640, 672, 204, 492, 798,
	743, 826, 728, 758, 768, 203, 193, 735, 734, 815,
	683, 682, 763, 811, 825, 0, 0, 594, 247, 0,
	0, 365, 332, 266, 0, 0, 726, 0, 579, 580,
	711, 767, 659, 754, 830, 692, 759, 831, 77, 0,
	0, 0, 493, 518, 517, 520, 521, 522, 523, 0,
	0, 137, 519, 524, 525, 526, 0, 721, 764, 842,
	638, 490, 509, 643, 593, 0, 816, 679, 680, 207,
	0, 0, 0, 0, 0, 0, 0, 724, 741, 783,
	708, 360, 770, 779, 793, 701, 298, 221, 0, 0,
	0, 0, 506, 507, 0, 0, 0, 0, 609, 0,
	508, 0, 653, 504, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 510, 0, 0, 0,
	658, 636, 677, 785, 637, 635, 267, 650, 582, 814,
	709, 237, 153, 820, 707, 607, 773, 654, 802, 695,
	245, 652, 154, 649, 655, 693, 278, 782, 788, 591,
	157, 799, 673, 686, 194, 0, 308, 760, 359, 498,
	746, 307, 248, 352, 774, 822, 358, 696, 339, 366,
	370, 214, 729, 185, 329, 205, 202, 678, 792, 642,
	222, 297, 197, 241, 712, 766, 674, 190, 777, 753,
	804, 328, 349, 159, 263, 350, 369, 176, 344, 264,
	271, 187, 189, 188, 171, 322, 348, 181, 192, 800,
	787, 806, 669, 656, 661, 657, 685, 823, 232, 223,
	807, 805, 363, 143, 317, 316, 699, 231, 790, 144,
	136, 304, 145, 238, 162, 810, 372, 175, 243, 345,
	497, 217, 277, 196, 762, 286, 684, 156, 300, 259,
	261, 258, 262, 220, 140, 146, 786, 302, 319, 347,
	177, 335, 138, 139, 141, 148, 310, 149, 150, 829,
	253, 209, 213, 225, 235, 761, 306, 336, 364, 755,
	172, 165, 338, 357, 182, 318, 321, 371, 784, 167,
	818, 801, 748, 714, 720, 644, 0, 166, 780, 676,
	688, 668, 756, 667, 219, 772, 355, 356, 195, 373,
	585, 833, 168, 651, 832, 274, 281, 273, 835, 351,
	819, 749, 738, 736, 645, 817, 747, 737, 244, 212,
	227, 295, 250, 296, 228, 269, 268, 270, 251, 740,
	0, 163, 0, 333, 827, 844, 337, 179, 662, 794,
	346, 224, 301, 180, 218, 210, 294, 272, 173, 230,
	331, 242, 249, 776, 841, 285, 309, 184, 361, 330,
	206, 596, 608, 602, 604, 603, 600, 601, 599, 598,
	597, 610, 583, 584, 587, 588, 589, 731, 821, 646,
	592, 797, 605, 606, 769, 839, 581, 191, 530, 622,
	623, 624, 531, 625, 626, 532, 533, 627, 628, 629,
	630, 534, 631, 632, 633, 611, 612, 613, 614, 615,
	616, 617, 618, 621, 619, 620, 727, 291, 164, 174,
	183, 201, 199, 211, 239, 260, 265, 290, 320, 325,
	340, 341, 342, 0, 0, 0, 0, 0, 590, 158,
	169, 246, 840, 303, 216, 634, 641, 660, 663, 664,
	665, 666, 670, 675, 0, 681, 687, 689, 690, 698,
	703, 704, 705, 706, 713, 715, 716, 717, 718, 719,
	722, 723, 725, 732, 733, 739, 744, 745, 751, 752,
	0, 775, 778, 595, 789, 791, 795, 796, 803, 808,
	809, 834, 838, 843, 362, 200, 730, 750, 781, 170,
	178, 186, 198, 208, 215, 226, 229, 233, 234, 236,
	240, 252, 254, 255, 256, 257, 275, 276, 279, 280,
	283, 284, 287, 288, 289, 292, 293, 299, 147, 305,
	311, 312, 313, 314, 315, 323, 324, 326, 327, 334,
	353, 354, 367, 368, 813, 710, 155, 0, 0, 161,
	0, 0, 0, 0, 0, 697, 160, 812, 836, 757,
	771, 824, 0, 343, 586, 828, 671, 694, 837, 700,
	702, 765, 647, 742, 282, 691, 648, 0, 0, 639,
	884, 640, 672, 204, 882, 798, 743, 826, 728, 758,
	768, 203, 193, 735, 734, 815, 683, 682, 763, 811,
	825, 0, 0, 594, 247, 0, 0, 365, 332, 266,
	0, 0, 726, 0, 579, 580, 711, 767, 659, 754,
	830, 692, 759, 831, 77, 0, 0, 0, 493, 518,
	517, 520, 521, 522, 523, 0, 0, 137, 519, 524,
	525, 526, 0, 721, 764, 842, 638, 901, 509, 643,
	593, 0, 816, 679, 680, 207, 0, 0, 0, 0,
	0, 0, 0, 724, 741, 783, 708, 360, 770, 779,
	793, 701, 298, 221, 0, 0, 0, 0, 506, 507,
	0, 0, 0, 0, 609, 0, 508, 0, 653, 504,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 510, 0, 0, 0, 658, 636, 677, 785,
	637, 635, 267, 650, 582, 814, 709, 237, 153, 820,
	707, 607, 773, 654, 802, 695, 245, 652, 154, 649,
	655, 693, 278, 782, 788, 591, 157, 799, 673, 686,
	194, 0, 308, 760, 359, 498, 3491, 307, 248, 352,
	774, 822, 358, 696, 339, 366, 370, 214, 729, 185,
	329, 205, 202, 678, 792, 642, 222, 297, 197, 241,
	712, 766, 674, 190, 777, 753, 804, 328, 349, 159,
	263, 350, 369, 176, 344, 264, 271, 187, 189, 188,
	171, 322, 348, 181, 192, 800, 787, 806, 669, 656,
	661, 657, 685, 823, 232, 223, 807, 805, 363, 143,
	317, 316, 699, 231, 790, 144, 136, 304, 145, 238,
	162, 810, 372, 175, 243, 345, 497, 217, 277, 196,
	762, 286, 684, 156, 300, 259, 261, 258, 262, 220,
	140, 146, 786, 302, 319, 347, 177, 335, 138, 139,
	141, 148, 310, 149, 150, 829, 253, 209, 213, 225,
	235, 761, 306, 336, 364, 755, 172, 165, 338, 357,
	182, 318, 321, 371, 784, 167, 818, 801, 748, 714,
	720, 644, 0, 166, 780, 676, 688, 668, 756, 667,
	219, 772, 355, 356, 195, 373, 585, 833, 168, 651,
	832, 274, 281, 273, 835, 351, 819, 749, 738, 736,
	645, 817, 747, 737, 244, 212, 227, 295, 250, 296,
	228, 269, 268, 270, 251, 740, 0, 163, 0, 333,
	827, 844, 337, 179, 662, 794, 346, 224, 301, 180,
	218, 210, 294, 272, 173, 230, 331, 242, 249, 776,
	841, 285, 309, 184, 361, 330, 206, 596, 608, 602,
	604, 603, 600, 601, 599, 598, 597, 610, 583, 584,
	587, 588, 589, 731, 821, 646, 592, 797, 605, 606,
	769, 839, 581, 191, 530, 622, 623, 624, 531, 625,
	626, 532, 533, 627, 628, 629, 630, 534, 631, 632,
	633, 611, 612, 613, 614, 615, 616, 617, 618, 621,
	619, 620, 727, 291, 164, 174, 183, 201, 199, 211,
	239, 260, 265, 290, 320, 325, 340, 341, 342, 0,
	0, 0, 0, 0, 590, 158, 169, 246, 840, 303,
	216, 634, 641, 660, 663, 664, 665, 666, 670, 675,
	0, 681, 687, 689, 690, 698, 703, 704, 705, 706,
	713, 715, 716, 717, 718, 719, 722, 723, 725, 732,
	733, 739, 744, 745, 751, 752, 0, 775, 778, 595,
	789, 791, 795, 796, 803, 808, 809, 834, 838, 843,
	362, 200, 730, 750, 781, 170, 178, 186, 198, 208,
	215, 226, 229, 233, 234, 236, 240, 252, 254, 255,
	256, 257, 275, 276, 279, 280, 283, 284, 287, 288,
	289, 292, 293, 299, 147, 305, 311, 312, 313, 314,
	315, 323, 324, 326, 327, 334, 353, 354, 367, 368,
	813, 710, 155, 0, 0, 161, 0, 0, 0, 0,
	0, 697, 160, 812, 836, 757, 771, 824, 0, 343,
	586, 828, 671, 694, 837, 700, 702, 765, 647, 742,
	282, 691, 648, 0, 0, 639, 884, 640, 672, 204,
	882, 798, 743, 826, 728, 758, 768, 203, 193, 735,
	734, 815, 683, 682, 763, 811, 825, 0, 0, 594,
	247, 0, 0, 365, 332, 266, 0, 0, 726, 0,
	579, 580, 711, 767, 659, 754, 830, 692, 759, 831,
	77, 0, 0, 0, 493, 518, 517, 520, 521, 522,
	523, 0, 0, 137, 519, 524, 525, 526, 0, 721,
	764, 842, 638, 901, 509, 643, 593, 0, 816, 679,
	680, 207, 0, 0, 0, 0, 0, 0, 0, 724,
	741, 783, 708, 360, 770, 779, 793, 701, 298, 221,
	0, 0, 0, 0, 506, 507, 0, 0, 0, 0,
	609, 0, 508, 0, 653, 504, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 510, 0,
	0, 0, 658, 636, 677, 785, 637, 635, 267, 650,
	582, 814, 709, 237, 153, 820, 707, 607, 773, 654,
	802, 695, 245, 652, 154, 649, 655, 693, 278, 782,
	788, 591, 157, 799, 673, 686, 194, 0, 308, 760,
	359, 498, 746, 307, 248, 352, 774, 822, 358, 696,
	339, 366, 370, 214, 729, 185, 329, 205, 202, 678,
	792, 642, 222, 297, 197, 241, 712, 766, 674, 190,
	777, 753, 804, 328, 349, 159, 263, 350, 369, 176,
	344, 264, 271, 187, 189, 188, 171, 322, 348, 181,
	192, 800, 787, 806, 669, 656, 661, 657, 685, 823,
	232, 223, 807, 805, 363, 143, 317, 316, 699, 231,
	790, 144, 136, 304, 145, 238, 162, 810, 372, 175,
	243, 345, 497, 217, 277, 196, 762, 286, 684, 156,
	300, 259, 261, 258, 262, 220, 140, 146, 786, 302,
	319, 347, 177, 335, 138, 139, 141, 148, 310, 149,
	150, 829, 253, 209, 213, 225, 235, 761, 306, 336,
	364, 755, 172, 165, 338, 357, 182, 318, 321, 371,
	784, 167, 818, 801, 748, 714, 720, 644, 0, 166,
	780, 676, 688, 668, 756, 667, 219, 772, 355, 356,
	195, 373, 585, 833, 168, 651, 832, 274, 281, 273,
	835, 351, 819, 749, 738, 736, 645, 817, 747, 737,
	244, 212, 227, 295, 250, 296, 228, 269, 268, 270,
	251, 740, 0, 163, 0, 333, 827, 844, 337, 179,
	662, 794, 346, 224, 301, 180, 218, 210, 294, 272,
	173, 230, 331, 242, 249, 776, 841, 285, 309, 184,
	361, 330, 206, 596, 608, 602, 604, 603, 600, 601,
	599, 598, 597, 610, 583, 584, 587, 588, 589, 1905,
	1906, 1907, 592, 797, 605, 606, 769, 839, 581, 191,
	530, 622, 623, 624, 531, 625, 626, 532, 533, 627,
	628, 629, 630, 534, 631, 632, 633, 611, 612, 613,
	614, 615, 616, 617, 618, 621, 619, 620, 727, 291,
	164, 174, 183, 201, 199, 211, 239, 260, 265, 290,
	320, 325, 340, 341, 342, 0, 0, 0, 0, 0,
	590, 158, 169, 246, 840, 303, 216, 634, 641, 660,
	663, 664, 665, 666, 670, 675, 0, 681, 687, 689,
	690, 698, 703, 704, 705, 706, 713, 715, 716, 717,
	718, 719, 722, 723, 725, 732, 733, 739, 744, 745,
	751, 752, 0, 775, 778, 595, 789, 791, 795, 796,
	803, 808, 809, 834, 838, 843, 362, 200, 730, 750,
	781, 170, 178, 186, 198, 208, 215, 226, 229, 233,
	234, 236, 240, 252, 254, 255, 256, 257, 275, 276,
	279, 280, 283, 284, 287, 288, 289, 292, 293, 299,
	147, 305, 311, 312, 313, 314, 315, 323, 324, 326,
	327, 334, 353, 354, 367, 368, 813, 710, 155, 0,
	0, 161, 0, 0, 0, 0, 0, 697, 160, 812,
	836, 757, 771, 1669, 2866, 343, 1524, 1673, 1474, 1503,
	1690, 1509, 1512, 1593, 1440, 1562, 282, 1500, 1441, 1424,
	1479, 1428, 1491, 1429, 1476, 204, 1472, 1634, 1565, 1671,
	1544, 1586, 1596, 203, 193, 1554, 1553, 1659, 1489, 1488,
	1591, 1648, 1670, 1543, 0, 1680, 247, 1645, 944, 365,
	332, 266, 947, 946, 1539, 1654, 1560, 1623, 1522, 1595,
	1456, 1578, 1675, 1501, 1587, 1676, 77, 0, 1132, 0,
	940, 0, 0, 0, 0, 0, 0, 0, 0, 137,
	0, 1583, 1667, 1494, 945, 1534, 1592, 1695, 1427, 1579,
	0, 1432, 1443, 1689, 1660, 1485, 1486, 207, 0, 0,
	0, 0, 0, 0, 0, 1537, 1561, 1613, 1519, 360,
	1598, 1608, 1626, 1511, 298, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 1481, 0, 1576, 0, 0, 0,
	1448, 1434, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1533, 0, 0, 0, 1455, 1425,
	1483, 1615, 1426, 1423, 267, 1444, 1628, 1658, 1520, 237,
	153, 1664, 1518, 1517, 1602, 1449, 1638, 1504, 245, 1447,
	154, 1442, 1450, 1502, 278, 1612, 1620, 142, 157, 1635,
	1477, 1493, 194, 1795, 308, 1588, 359, 943, 1569, 307,
	248, 352, 1603, 1666, 358, 1505, 339, 366, 370, 214,
	1545, 185, 329, 205, 202, 1484, 1625, 1431, 222, 297,
	197, 241, 1523, 1594, 1478, 190, 1606, 1577, 1640, 328,
	349, 159, 263, 350, 369, 176, 344, 264, 271, 187,
	189, 188, 171, 322, 348, 181, 192, 1636, 1619, 1642,
	1471, 1451, 1462, 1452, 1492, 1668, 232, 223, 1643, 1641,
	363, 143, 317, 316, 1508, 231, 1622, 144, 136, 304,
	145, 238, 162, 1647, 372, 175, 243, 345, 942, 217,
	277, 196, 1590, 286, 1490, 156, 300, 259, 261, 258,
	262, 220, 140, 146, 1618, 302, 319, 347, 177, 335,
	138, 139, 141, 148, 310, 149, 150, 1674, 253, 209,
	213, 225, 235, 1589, 306, 336, 364, 1580, 172, 165,
	338, 357, 182, 318, 321, 371, 1614, 167, 1662, 1637,
	1571, 1526, 1532, 1433, 0, 166, 1610, 1482, 1497, 1470,
	1584, 1469, 219, 1601, 355, 356, 195, 373, 1445, 1682,
	168, 1446, 1681, 274, 281, 273, 1685, 351, 1663, 1572,
	1557, 1555, 1438, 1661, 1570, 1556, 244, 212, 227, 295,
	250, 296, 228, 269, 268, 270, 251, 1559, 0, 163,
	0, 333, 1672, 1697, 337, 179, 1464, 1629, 346, 224,
	301, 180, 218, 210, 294, 272, 173, 230, 331, 242,
	249, 1605, 1694, 285, 309, 184, 361, 330, 206, 1460,
	1463, 1458, 1461, 1459, 1563, 1564, 1677, 1678, 1679, 1617,
	1453, 0, 1655, 1656, 0, 1550, 1665, 1439, 0, 1633,
	151, 152, 1597, 1692, 1510, 191, 131, 1435, 1436, 1437,
	132, 1540, 1541, 133, 134, 1651, 1650, 1649, 1652, 135,
	1686, 1684, 1687, 1454, 1475, 1496, 1546, 1547, 1549, 1581,
	1582, 1627, 1600, 1609, 1542, 291, 164, 174, 183, 201,
	199, 211, 239, 260, 265, 290, 320, 325, 340, 341,
	342, 0, 0, 0, 0, 0, 1568, 158, 169, 246,
	2867, 303, 216, 1422, 1430, 1457, 1465, 1466, 1467, 1468,
	1473, 1480, 0, 1487, 1495, 1498, 1499, 1507, 1513, 1514,
	1515, 1516, 1525, 1527, 1528, 1529, 1530, 1531, 1535, 1536,
	1538, 1551, 1552, 1558, 1566, 1567, 1574, 1575, 0, 1604,
	1607, 1616, 1621, 1624, 1630, 1632, 1639, 1644, 1646, 1683,
	1691, 1696, 362, 200, 1548, 1573, 1611, 170, 178, 186,
	198, 208, 215, 226, 229, 233, 234, 236, 240, 252,
	254, 255, 256, 257, 275, 276, 279, 280, 283, 284,
	287, 288, 289, 292, 293, 299, 147, 305, 311, 312,
	313, 314, 315, 323, 324, 326, 327, 334, 353, 354,
	367, 368, 1657, 1521, 155, 0, 0, 161, 0, 0,
	0, 0, 0, 1506, 160, 1653, 1688, 1585, 1599, 1669,
	1631, 343, 1524, 1673, 1474, 1503, 1690, 1509, 1512, 1593,
	1440, 1562, 282, 1500, 1441, 1424, 1479, 1428, 1491, 1429,
	1476, 204, 1472, 1634, 1565, 1671, 1544, 1586, 1596, 203,
	193, 1554, 1553, 1659, 1489, 1488, 1591, 1648, 1670, 1543,
	0, 1680, 247, 1645, 944, 365, 332, 266, 947, 946,
	1539, 1654, 1560, 1623, 1522, 1595, 1456, 1578, 1675, 1501,
	1587, 1676, 0, 0, 0, 0, 940, 0, 0, 0,
	0, 0, 0, 0, 0, 137, 0, 1583, 1667, 1494,
	945, 1534, 1592, 1695, 1427, 1579, 0, 1432, 1443, 1689,
	1660, 1485, 1486, 207, 0, 0, 0, 0, 0, 0,
	0, 1537, 1561, 1613, 1519, 360, 1598, 1608, 1626, 1511,
	298, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	1481, 0, 1576, 0, 0, 0, 1448, 1434, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1533, 0, 0, 0, 1455, 1425, 1483, 1615, 1426, 1423,
	267, 1444, 1628, 1658, 1520, 237, 153, 1664, 1518, 1517,
	1602, 1449, 1638, 1504, 245, 1447, 154, 1442, 1450, 1502,
	278, 1612, 1620, 142, 157, 1635, 1477, 1493, 194, 1795,
	308, 1588, 359, 943, 1569, 307, 248, 352, 1603, 1666,
	358, 1505, 339, 366, 370, 214, 1545, 185, 329, 205,
	202, 1484, 1625, 1431, 222, 297, 197, 241, 1523, 1594,
	1478, 190, 1606, 1577, 1640, 328, 349, 159, 263, 350,
	369, 176, 344, 264, 271, 187, 189, 188, 171, 322,
	348, 181, 192, 1636, 1619, 1642, 1471, 1451, 1462, 1452,
	1492, 1668, 232, 223, 1643, 1641, 363, 143, 317, 316,
	1508, 231, 1622, 144, 136, 304, 145, 238, 162, 1647,
	372, 175, 243, 345, 942, 217, 277, 196, 1590, 286,
	1490, 156, 300, 259, 261, 258, 262, 220, 140, 146,
	1618, 302, 319, 347, 177, 335, 138, 139, 141, 148,
	310, 149, 150, 1674, 253, 209, 213, 225, 235, 1589,
	306, 336, 364, 1580, 172, 165, 338, 357, 182, 318,
	321, 371, 1614, 167, 1662, 1637, 1571, 1526, 1532, 1433,
	0, 166, 1610, 1482, 1497, 1470, 1584, 1469, 219, 1601,
	355, 356, 195, 373, 1445, 1682, 168, 1446, 1681, 274,
	281, 273, 1685, 351, 1663, 1572, 1557, 1555, 1438, 1661,
	1570, 1556, 244, 212, 227, 295, 250, 296, 228, 269,
	268, 270, 251, 1559, 0, 163, 0, 333, 1672, 1697,
	337, 179, 1464, 1629, 346, 224, 301, 180, 218, 210,
	294, 272, 173, 230, 331, 242, 249, 1605, 1694, 285,
	309, 184, 361, 330, 206, 1460, 1463, 1458, 1461, 1459,
	1563, 1564, 1677, 1678, 1679, 1617, 1453, 0, 1655, 1656,
	0, 1550, 1665, 1439, 0, 1633, 151, 152, 1597, 1692,
	1510, 191, 131, 1435, 1436, 1437, 132, 1540, 1541, 133,
	134, 1651, 1650, 1649, 1652, 135, 1686, 1684, 1687, 1454,
	1475, 1496, 1546, 1547, 1549, 1581, 1582, 1627, 1600, 1609,
	1542, 291, 164, 174, 183, 201, 199, 211, 239, 260,
	265, 290, 320, 325, 340, 341, 342, 0, 0, 0,
	0, 0, 1568, 158, 169, 246, 1693, 303, 216, 1422,
	1430, 1457, 1465, 1466, 1467, 1468, 1473, 1480, 0, 1487,
	1495, 1498, 1499, 1507, 1513, 1514, 1515, 1516, 1525, 1527,
	1528, 1529, 1530, 1531, 1535, 1536, 1538, 1551, 1552, 1558,
	1566, 1567, 1574, 1575, 0, 1604, 1607, 1616, 1621, 1624,
	1630, 1632, 1639, 1644, 1646, 1683, 1691, 1696, 362, 200,
	1548, 1573, 1611, 170, 178, 186, 198, 208, 215, 226,
	229, 233, 234, 236, 240, 252, 254, 255, 256, 257,
	275, 276, 279, 280, 283, 284, 287, 288, 289, 292,
	293, 299, 147, 305, 311, 312, 313, 314, 315, 323,
	324, 326, 327, 334, 353, 354, 367, 368, 1657, 1521,
	155, 0, 0, 161, 0, 0, 0, 0, 0, 1506,
	160, 1653, 1688, 1585, 1599, 1669, 1631, 343, 1524, 1673,
	1474, 1503, 1690, 1509, 1512, 1593, 1440, 1562, 282, 1500,
	1441, 1424, 1479, 1428, 1491, 1429, 1476, 204, 1472, 1634,
	1565, 1671, 1544, 1586, 1596, 203, 193, 1554, 1553, 1659,
	1489, 1488, 1591, 1648, 1670, 1543, 0, 1680, 247, 1645,
	0, 365, 332, 266, 0, 0, 1539, 1654, 1560, 1623,
	1522, 1595, 1456, 1578, 1675, 1501, 1587, 1676, 0, 0,
	0, 0, 493, 0, 0, 0, 0, 0, 0, 0,
	0, 137, 0, 1583, 1667, 1494, 0, 1534, 1592, 1695,
	1427, 1579, 0, 1432, 1443, 1689, 1660, 1485, 1486, 207,
	0, 0, 0, 0, 0, 0, 0, 1537, 1561, 1613,
	1519, 360, 1598, 1608, 1626, 1511, 298, 221, 0, 0,
	0, 0, 0, 0, 2550, 0, 1481, 0, 1576, 0,
	0, 0, 1448, 1434, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1533, 0, 0, 0,
	1455, 1425, 1483, 1615, 1426, 1423, 267, 1444, 1628, 1658,
	1520, 237, 153, 1664, 1518, 1517, 1602, 1449, 1638, 1504,
	245, 1447, 154, 1442, 1450, 1502, 278, 1612, 1620, 142,
	157, 1635, 1477, 1493, 194, 0, 308, 1588, 359, 1836,
	1569, 307, 248, 352, 1603, 1666, 358, 1505, 339, 366,
	370, 214, 1545, 185, 329, 205, 202, 1484, 1625, 1431,
	222, 297, 197, 241, 1523, 1594, 1478, 190, 1606, 1577,
	1640, 328, 349, 159, 263, 350, 369, 176, 344, 264,
	271, 187, 189, 188, 171, 322, 348, 181, 192, 1636,
	1619, 1642, 1471, 1451, 1462, 1452, 1492, 1668, 232, 223,
	1643, 1641, 363, 143, 317, 316, 1508, 231, 1622, 144,
	136, 304, 145, 238, 162, 1647, 372, 175, 243, 345,
	1835, 217, 277, 196, 1590, 286, 1490, 156, 300, 259,
	261, 258, 262, 220, 140, 146, 1618, 302, 319, 347,
	177, 335, 138, 139, 141, 148, 310, 149, 150, 1674,
	253, 209, 213, 225, 235, 1589, 306, 336, 364, 1580,
	172, 165, 338, 357, 182, 318, 321, 371, 1614, 167,
	1662, 1637, 1571, 1526, 1532, 1433, 0, 166, 1610, 1482,
	1497, 1470, 1584, 1469, 219, 1601, 355, 356, 195, 373,
	1445, 1682, 168, 1446, 1681, 274, 281, 273, 1685, 351,
	1663, 1572, 1557, 1555, 1438, 1661, 1570, 1556, 244, 212,
	227, 295, 250, 296, 228, 269, 268, 270, 251, 1559,
	0, 163, 0, 333, 1672, 1697, 337, 179, 1464, 1629,
	346, 224, 301, 180, 218, 210, 294, 272, 173, 230,
	331, 242, 249, 1605, 1694, 285, 309, 184, 361, 330,
	206, 1460, 1463, 1458, 1461, 1459, 1563, 1564, 1677, 1678,
	1679, 1617, 1453, 0, 1655, 1656, 0, 1550, 1665, 1439,
	0, 1633, 151, 152, 1597, 1692, 1510, 191, 131, 1435,
	1436, 1437, 132, 1540, 1541, 133, 134, 1651, 1650, 1649,
	1652, 135, 1686, 1684, 1687, 1454, 1475, 1496, 1546, 1547,
	1549, 1581, 1582, 1627, 1600, 1609, 1542, 291, 164, 174,
	183, 201, 199, 211, 239, 260, 265, 290, 320, 325,
	340, 341, 342, 0, 0, 0, 0, 0, 1568, 158,
	169, 246, 1693, 303, 216, 1422, 1430, 1457, 1465, 1466,
	1467, 1468, 1473, 1480, 0, 1487, 1495, 1498, 1499, 1507,
	1513, 1514, 1515, 1516, 1525, 1527, 1528, 1529, 1530, 1531,
	1535, 1536, 1538, 1551, 1552, 1558, 1566, 1567, 1574, 1575,
	0, 1604, 1607, 1616, 1621, 1624, 1630, 1632, 1639, 1644,
	1646, 1683, 1691, 1696, 362, 200, 1548, 1573, 1611, 170,
	178, 186, 198, 208, 215, 226, 229, 233, 234, 236,
	240, 252, 254, 255, 256, 257, 275, 276, 279, 280,
	283, 284, 287, 288, 289, 292, 293, 299, 147, 305,
	311, 312, 313, 314, 315, 323, 324, 326, 327, 334,
	353, 354, 367, 368, 1657, 1521, 155, 0, 0, 161,
	0, 0, 0, 0, 0, 1506, 160, 1653, 1688, 1585,
	1599, 1669, 1631, 343, 1524, 1673, 1474, 1503, 1690, 1509,
	1512, 1593, 1440, 1562, 282, 1500, 1441, 1424, 1479, 1428,
	1491, 1429, 1476, 204, 1472, 1634, 1565, 1671, 1544, 1586,
	1596, 203, 193, 1554, 1553, 1659, 1489, 1488, 1591, 1648,
	1670, 1543, 0, 1680, 247, 1645, 0, 365, 332, 266,
	0, 0, 1539, 1654, 1560, 1623, 1522, 1595, 1456, 1578,
	1675, 1501, 1587, 1676, 0, 0, 0, 0, 493, 0,
	0, 0, 0, 0, 0, 0, 0, 137, 0, 1583,
	1667, 1494, 0, 1534, 1592, 1695, 1427, 1579, 0, 1432,
	1443, 1689, 1660, 1485, 1486, 207, 0, 0, 0, 0,
	0, 0, 0, 1537, 1561, 1613, 1519, 360, 1598, 1608,
	1626, 1511, 298, 221, 0, 0, 0, 0, 0, 0,
	1830, 0, 1481, 0, 1576, 0, 0, 0, 1448, 1434,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1533, 0, 0, 0, 1455, 1425, 1483, 1615,
	1426, 1423, 267, 1444, 1628, 1658, 1520, 237, 153, 1664,
	1518, 1517, 1602, 1449, 1638, 1504, 245, 1447, 154, 1442,
	1450, 1502, 278, 1612, 1620, 142, 157, 1635, 1477, 1493,
	194, 0, 308, 1588, 359, 1836, 1569, 307, 248, 352,
	1603, 1666, 358, 1505, 339, 366, 370, 214, 1545, 185,
	329, 205, 202, 1484, 1625, 1431, 222, 297, 197, 241,
	1523, 1594, 1478, 190, 1606, 1577, 1640, 328, 349, 159,
	263, 350, 369, 176, 344, 264, 271, 187, 189, 188,
	171, 322, 348, 181, 192, 1636, 1619, 1642, 1471, 1451,
	1462, 1452, 1492, 1668, 232, 223, 1643, 1641, 363, 143,
	317, 316, 1508, 231, 1622, 144, 136, 304, 145, 238,
	162, 1647, 372, 175, 243, 345, 1835, 217, 277, 196,
	1590, 286, 1490, 156, 300, 259, 261, 258, 262, 220,
	140, 146, 1618, 302, 319, 347, 177, 335, 138, 139,
	141, 148, 310, 149, 150, 1674, 253, 209, 213, 225,
	235, 1589, 306, 336, 364, 1580, 172, 165, 338, 357,
	182, 318, 321, 371, 1614, 167, 1662, 1637, 1571, 1526,
	1532, 1433, 0, 166, 1610, 1482, 1497, 1470, 1584, 1469,
	219, 1601, 355, 356, 195, 373, 1445, 1682, 168, 1446,
	1681, 274, 281, 273, 1685, 351, 1663, 1572, 1557, 1555,
	1438, 1661, 1570, 1556, 244, 212, 227, 295, 250, 296,
	228, 269, 268, 270, 251, 1559, 0, 163, 0, 333,
	1672, 1697, 337, 179, 1464, 1629, 346, 224, 301, 180,
	218, 210, 294, 272, 173, 230, 331, 242, 249, 1605,
	1694, 285, 309, 184, 361, 330, 206, 1460, 1463, 1458,
	1461, 1459, 1563, 1564, 1677, 1678, 1679, 1617, 1453, 0,
	1655, 1656, 0, 1550, 1665, 1439, 0, 1633, 151, 152,
	1597, 1692, 1510, 191, 131, 1435, 1436, 1437, 132, 1540,
	1541, 133, 134, 1651, 1650, 1649, 1652, 135, 1686, 1684,
	1687, 1454, 1475, 1496, 1546, 1547, 1549, 1581, 1582, 1627,
	1600, 1609, 1542, 291, 164, 174, 183, 201, 199, 211,
	239, 260, 265, 290, 320, 325, 340, 341, 342, 0,
	0, 0, 0, 0, 1568, 158, 169, 246, 1693, 303,
	216, 1422, 1430, 1457, 1465, 1466, 1467, 1468, 1473, 1480,
	0, 1487, 1495, 1498, 1499, 1507, 1513, 1514, 1515, 1516,
	1525, 1527, 1528, 1529, 1530, 1531, 1535, 1536, 1538, 1551,
	1552, 1558, 1566, 1567, 1574, 1575, 0, 1604, 1607, 1616,
	1621, 1624, 1630, 1632, 1639, 1644, 1646, 1683, 1691, 1696,
	362, 200, 1548, 1573, 1611, 170, 178, 186, 198, 208,
	215, 226, 229, 233, 234, 236, 240, 252, 254, 255,
	256, 257, 275, 276, 279, 280, 283, 284, 287, 288,
	289, 292, 293, 299, 147, 305, 311, 312, 313, 314,
	315, 323, 324, 326, 327, 334, 353, 354, 367, 368,
	1657, 1521, 155, 0, 0, 161, 0, 0, 0, 0,
	0, 1506, 160, 1653, 1688, 1585, 1599, 1669, 1631, 343,
	1524, 1673, 1474, 1503, 1690, 1509, 1512, 1593, 1440, 1562,
	282, 1500, 1441, 1424, 1479, 1428, 1491, 1429, 1476, 204,
	1472, 1634, 1565, 1671, 1544, 1586, 1596, 203, 193, 1554,
	1553, 1659, 1489, 1488, 1591, 1648, 1670, 1543, 0, 1680,
	247, 1645, 0, 365, 332, 266, 0, 0, 1539, 1654,
	1560, 1623, 1522, 1595, 1456, 1578, 1675, 1501, 1587, 1676,
	0, 0, 0, 0, 493, 0, 0, 0, 0, 0,
	0, 0, 0, 137, 0, 1583, 1667, 1494, 0, 1534,
	1592, 1695, 1427, 1579, 0, 1432, 1443, 1689, 1660, 1485,
	1486, 207, 0, 0, 0, 0, 0, 0, 0, 1537,
	1561, 1613, 1519, 360, 1598, 1608, 1626, 1511, 298, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 1481, 0,
	1576, 0, 0, 0, 1448, 1434, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1533, 0,
	0, 0, 1455, 1425, 1483, 1615, 1426, 1423, 267, 1444,
	1628, 1658, 1520, 237, 153, 1664, 1518, 1517, 1602, 1449,
	1638, 1504, 245, 1447, 154, 1442, 1450, 1502, 278, 1612,
	1620, 142, 157, 1635, 1477, 1493, 194, 0, 308, 1588,
	359, 1836, 1569, 307, 248, 352, 1603, 1666, 358, 1505,
	339, 366, 370, 214, 1545, 185, 329, 205, 202, 1484,
	1625, 1431, 222, 297, 197, 241, 1523, 1594, 1478, 190,
	1606, 1577, 1640, 328, 349, 159, 263, 350, 369, 176,
	344, 264, 271, 187, 189, 188, 171, 322, 348, 181,
	192, 1636, 1619, 1642, 1471, 1451, 1462, 1452, 1492, 1668,
	232, 223, 1643, 1641, 363, 143, 317, 316, 1508, 231,
	1622, 144, 136, 304, 145, 238, 162, 1647, 372, 175,
	243, 345, 1835, 217, 277, 196, 1590, 286, 1490, 156,
	300, 259, 261, 258, 262, 220, 140, 146, 1618, 302,
	319, 347, 177, 335, 138, 139, 141, 148, 310, 149,
	150, 1674, 253, 209, 213, 225, 235, 1589, 306, 336,
	364, 1580, 172, 165, 338, 357, 182, 318, 321, 371,
	1614, 167, 1662, 1637, 1571, 1526, 1532, 1433, 0, 166,
	1610, 1482, 1497, 1470, 1584, 1469, 219, 1601, 355, 356,
	195, 373, 1445, 1682, 168, 1446, 1681, 274, 281, 273,
	1685, 351, 1663, 1572, 1557, 1555, 1438, 1661, 1570, 1556,
	244, 212, 227, 295, 250, 296, 228, 269, 268, 270,
	251, 1559, 0, 163, 0, 333, 1672, 1697, 337, 179,
	1464, 1629, 346, 224, 301, 180, 218, 210, 294, 272,
	173, 230, 331, 242, 249, 1605, 1694, 285, 309, 184,
	361, 330, 206, 1460, 1463, 1458, 1461, 1459, 1563, 1564,
	1677, 1678, 1679, 1617, 1453, 0, 1655, 1656, 0, 1550,
	1665, 1439, 0, 1633, 151, 152, 1597, 1692, 1510, 191,
	131, 1435, 1436, 1437, 132, 1540, 1541, 133, 134, 1651,
	1650, 1649, 1652, 135, 1686, 1684, 1687, 1454, 1475, 1496,
	1546, 1547, 1549, 1581, 1582, 1627, 1600, 1609, 1542, 291,
	164, 174, 183, 201, 199, 211, 239, 260, 265, 290,
	320, 325, 340, 341, 342, 0, 0, 0, 0, 0,
	1568, 158, 169, 246, 1693, 303, 216, 1422, 1430, 1457,
	1465, 1466, 1467, 1468, 1473, 1480, 0, 1487, 1495, 1498,
	1499, 1507, 1513, 1514, 1515, 1516, 1525, 1527, 1528, 1529,
	1530, 1531, 1535, 1536, 1538, 1551, 1552, 1558, 1566, 1567,
	1574, 1575, 0, 1604, 1607, 1616, 1621, 1624, 1630, 1632,
	1639, 1644, 1646, 1683, 1691, 1696, 362, 200, 1548, 1573,
	1611, 170, 178, 186, 198, 208, 215, 226, 229, 233,
	234, 236, 240, 252, 254, 255, 256, 257, 275, 276,
	279, 280, 283, 284, 287, 288, 289, 292, 293, 299,
	147, 305, 311, 312, 313, 314, 315, 323, 324, 326,
	327, 334, 353, 354, 367, 368, 1657, 1521, 155, 0,
	0, 161, 0, 0, 0, 0, 0, 1506, 160, 1653,
	1688, 1585, 1599, 824, 0, 343, 889, 828, 671, 694,
	837, 700, 702, 765, 647, 742, 282, 691, 648, 0,
	0, 639, 884, 640, 672, 204, 882, 798, 743, 826,
	728, 758, 768, 203, 193, 735, 734, 815, 683, 682,
	763, 811, 825, 0, 0, 922, 247, 0, 944, 365,
	332, 266, 947, 946, 726, 0, 896, 909, 711, 767,
	659, 754, 830, 692, 759, 831, 0, 0, 0, 0,
	493, 0, 0, 0, 0, 0, 0, 0, 0, 137,
	0, 904, 918, 885, 945, 721, 764, 842, 638, 901,
	0, 643, 873, 0, 816, 679, 680, 207, 0, 0,
	0, 0, 0, 0, 0, 724, 741, 783, 708, 360,
	770, 779, 793, 701, 298, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 900, 0, 0, 0,
	653, 869, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 890, 0, 0, 0, 658, 636,
	677, 785, 637, 635, 267, 650, 911, 814, 709, 237,
	153, 820, 707, 888, 773, 654, 802, 695, 245, 652,
	154, 649, 655, 693, 278, 782, 788, 142, 157, 799,
	673, 686, 194, 2619, 308, 760, 359, 2621, 746, 307,
	248, 352, 774, 822, 358, 696, 339, 366, 370, 214,
	729, 185, 329, 205, 202, 678, 792, 642, 222, 297,
	197, 241, 712, 766, 674, 190, 777, 753, 804, 328,
	349, 159, 263, 350, 369, 176, 344, 264, 271, 187,
	189, 188, 171, 322, 348, 181, 192, 800, 787, 806,
	669, 656, 661, 657, 685, 823, 232, 223, 807, 805,
	363, 143, 317, 316, 699, 231, 790, 144, 136, 304,
	145, 238, 162, 810, 372, 175, 243, 345, 2620, 217,
	277, 196, 762, 286, 684, 156, 300, 259, 261, 258,
	262, 220, 140, 146, 786, 302, 319, 347, 177, 335,
	138, 139, 141, 148, 310, 149, 150, 829, 253, 209,
	213, 225, 235, 761, 306, 336, 364, 755, 172, 165,
	338, 357, 182, 318, 321, 371, 784, 167, 818, 801,
	748, 714, 720, 644, 0, 166, 780, 676, 688, 668,
	756, 667, 219, 772, 355, 356, 195, 373, 874, 833,
	168, 651, 832, 274, 281, 273, 835, 351, 819, 749,
	738, 736, 645, 817, 747, 737, 244, 212, 227, 295,
	250, 296, 228, 269, 268, 270, 251, 740, 0, 163,
	0, 333, 827, 844, 337, 179, 662, 794, 346, 224,
	301, 180, 218, 210, 294, 272, 173, 230, 331, 242,
	249, 776, 841, 285, 309, 184, 361, 330, 206, 879,
	881, 877, 880, 878, 897, 898, 919, 920, 921, 908,
	875, 0, 916, 917, 0, 731, 821, 646, 0, 797,
	151, 152, 769, 839, 887, 191, 131, 870, 871, 872,
	132, 891, 892, 133, 134, 914, 913, 912, 915, 135,
	924, 923, 925, 876, 883, 886, 893, 894, 895, 902,
	903, 910, 905, 906, 727, 291, 164, 174, 183, 201,
	199, 211, 239, 260, 265, 290, 320, 325, 340, 341,
	342, 0, 0, 0, 0, 0, 899, 158, 169, 246,
	840, 303, 216, 634, 641, 660, 663, 664, 665, 666,
	670, 675, 0, 681, 687, 689, 690, 698, 703, 704,
	705, 706, 713, 715, 716, 717, 718, 719, 722, 723,
	725, 732, 733, 739, 744, 745, 751, 752, 0, 775,
	778, 907, 789, 791, 795, 796, 803, 808, 809, 834,
	838, 843, 362, 200, 730, 750, 781, 170, 178, 186,
	198, 208, 215, 226, 229, 233, 234, 236, 240, 252,
	254, 255, 256, 257, 275, 276, 279, 280, 283, 284,
	287, 288, 289, 292, 293, 299, 147, 305, 311, 312,
	313, 314, 315, 323, 324, 326, 327, 334, 353, 354,
	367, 368, 813, 710, 155, 0, 0, 161, 0, 0,
	0, 0, 0, 697, 160, 812, 836, 757, 771, 824,
	0, 343, 889, 828, 671, 694, 837, 700, 702, 765,
	647, 742, 282, 691, 648, 0, 0, 639, 884, 640,
	672, 204, 882, 798, 743, 826, 728, 758, 768, 203,
	193, 735, 734, 815, 683, 682, 763, 811, 825, 0,
	0, 922, 247, 0, 0, 365, 332, 266, 0, 0,
	726, 0, 896, 909, 711, 767, 659, 754, 830, 692,
	759, 831, 0, 0, 0, 0, 493, 0, 0, 0,
	0, 0, 0, 0, 0, 137, 0, 904, 918, 885,
	0, 721, 764, 842, 638, 901, 0, 643, 873, 0,
	816, 679, 680, 207, 0, 0, 0, 0, 0, 0,
	0, 724, 741, 783, 708, 360, 770, 779, 793, 701,
	298, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 900, 0, 0, 0, 653, 869, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	890, 0, 0, 0, 658, 636, 677, 785, 637, 635,
	267, 650, 911, 814, 709, 237, 153, 820, 707, 888,
	773, 654, 802, 695, 245, 652, 154, 649, 655, 693,
	278, 782, 788, 142, 157, 799, 673, 686, 194, 0,
	308, 760, 359, 868, 746, 307, 248, 352, 774, 822,
	358, 696, 339, 366, 370, 214, 729, 185, 329, 205,
	202, 678, 792, 642, 222, 297, 197, 241, 712, 766,
	674, 190, 777, 753, 804, 328, 349, 159, 263, 350,
	369, 176, 344, 264, 271, 187, 189, 188, 171, 322,
	348, 181, 192, 800, 787, 806, 669, 656, 661, 657,
	685, 823, 232, 223, 807, 805, 363, 143, 317, 316,
	699, 231, 790, 144, 136, 304, 145, 238, 162, 810,
	372, 175, 243, 345, 867, 217, 277, 196, 762, 286,
	684, 156, 300, 259, 261, 258, 262, 220, 140, 146,
	786, 302, 319, 347, 177, 335, 138, 139, 141, 148,
	310, 149, 150, 829, 253, 209, 213, 225, 235, 761,
	306, 336, 364, 755, 172, 165, 338, 357, 182, 318,
	321, 371, 784, 167, 818, 801, 748, 714, 720, 644,
	0, 166, 780, 676, 688, 668, 756, 667, 219, 772,
	355, 356, 195, 373, 874, 833, 168, 651, 832, 274,
	281, 273, 835, 351, 819, 749, 738, 736, 645, 817,
	747, 737, 244, 212, 227, 295, 250, 296, 228, 269,
	268, 270, 251, 740, 0, 163, 0, 333, 827, 844,
	337, 179, 662, 794, 346, 224, 301, 180, 218, 210,
	294, 272, 173, 230, 331, 242, 249, 776, 841, 285,
	309, 184, 361, 330, 206, 879, 881, 877, 880, 878,
	897, 898, 919, 920, 921, 908, 875, 0, 916, 917,
	0, 731, 821, 646, 0, 797, 151, 152, 769, 839,
	887, 191, 131, 870, 871, 872, 132, 891, 892, 133,
	134, 914, 913, 912, 915, 135, 924, 923, 925, 876,
	883, 886, 893, 894, 895, 902, 903, 910, 905, 906,
	727, 291, 164, 174, 183, 201, 199, 211, 239, 260,
	265, 290, 320, 325, 340, 341, 342, 0, 0, 0,
	0, 0, 899, 158, 169, 246, 840, 303, 216, 634,
	641, 660, 663, 664, 665, 666, 670, 675, 0, 681,
	687, 689, 690, 698, 703, 704, 705, 706, 713, 715,
	716, 717, 718, 719, 722, 723, 725, 732, 733, 739,
	744, 745, 751, 752, 0, 775, 778, 907, 789, 791,
	795, 796, 803, 808, 809, 834, 838, 843, 362, 200,
	730, 750, 781, 170, 178, 186, 198, 208, 215, 226,
	229, 233, 234, 236, 240, 252, 254, 255, 256, 257,
	275, 276, 279, 280, 283, 284, 287, 288, 289, 292,
	293, 299, 147, 305, 311, 312, 313, 314, 315, 323,
	324, 326, 327, 334, 353, 354, 367, 368, 813, 710,
	155, 0, 0, 161, 0, 0, 0, 0, 0, 697,
	160, 812, 836, 757, 771, 824, 0, 343, 889, 828,
	671, 694, 837, 700, 702, 765, 647, 742, 282, 691,
	648, 0, 0, 639, 884, 640, 672, 204, 882, 798,
	743, 826, 728, 758, 768, 203, 193, 735, 734, 815,
	683, 682, 763, 811, 825, 0, 0, 922, 247, 0,
	0, 365, 332, 266, 0, 0, 726, 0, 896, 909,
	711, 767, 659, 754, 830, 692, 759, 831, 0, 0,
	0, 0, 493, 0, 0, 0, 0, 0, 0, 0,
	0, 137, 0, 904, 918, 885, 0, 721, 764, 842,
	638, 901, 0, 643, 873, 0, 816, 679, 680, 207,
	0, 0, 0, 0, 0, 0, 0, 724, 741, 783,
	708, 360, 770, 779, 793, 701, 298, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 900, 0,
	0, 0, 653, 869, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 890, 0, 0, 0,
	658, 636, 677, 785, 637, 635, 267, 650, 911, 814,
	709, 237, 153, 820, 707, 888, 773, 654, 802, 695,
	245, 652, 154, 649, 655, 693, 278, 782, 788, 142,
	157, 799, 673, 686, 194, 0, 308, 760, 359, 868,
	746, 307, 248, 352, 774, 822, 358, 696, 339, 366,
	370, 214, 729, 185, 329, 205, 202, 678, 792, 642,
	222, 297, 197, 241, 712, 766, 674, 190, 777, 753,
	804, 328, 349, 159, 263, 350, 369, 176, 344, 264,
	271, 187, 189, 188, 171, 322, 348, 181, 192, 800,
	787, 806, 669, 656, 661, 657, 685, 823, 232, 223,
	807, 805, 363, 143, 317, 316, 699, 231, 790, 144,
	136, 304, 145, 238, 162, 810, 372, 175, 243, 345,
	867, 217, 277, 196, 762, 286, 684, 156, 300, 259,
	261, 258, 262, 220, 140, 146, 786, 302, 319, 347,
	177, 335, 138, 139, 141, 148, 310, 149, 150, 829,
	253, 209, 213, 225, 235, 761, 306, 336, 364, 755,
	172, 165, 338, 357, 182, 318, 321, 371, 784, 167,
	818, 801, 748, 714, 720, 644, 0, 166, 780, 676,
	688, 668, 756, 667, 219, 772, 355, 356, 195, 373,
	874, 833, 168, 862, 832, 274, 281, 273, 835, 351,
	819, 749, 738, 736, 645, 817, 747, 737, 244, 212,
	227, 295, 250, 296, 228, 269, 268, 270, 858, 740,
	0, 163, 0, 333, 827, 844, 337, 179, 662, 794,
	346, 224, 301, 180, 218, 210, 294, 863, 861, 852,
	853, 242, 249, 776, 841, 285, 309, 184, 361, 330,
	206, 879, 881, 877, 880, 878, 897, 898, 919, 920,
	921, 908, 875, 0, 916, 917, 0, 731, 821, 646,
	0, 797, 151, 152, 769, 839, 887, 191, 131, 870,
	871, 872, 132, 891, 892, 133, 134, 914, 913, 912,
	915, 135, 924, 923, 925, 876, 883, 886, 893, 894,
	895, 902, 903, 910, 905, 906, 727, 291, 164, 174,
	183, 201, 199, 211, 239, 260, 265, 290, 320, 325,
	340, 341, 342, 0, 0, 0, 0, 0, 899, 158,
	169, 246, 840, 303, 216, 634, 641, 660, 663, 664,
	665, 666, 670, 675, 0, 681, 687, 689, 690, 698,
	703, 704, 705, 706, 713, 715, 716, 717, 718, 719,
	722, 723, 725, 732, 733, 739, 744, 745, 751, 752,
	0, 775, 778, 907, 789, 791, 795, 796, 803, 808,
	809, 834, 838, 843, 362, 200, 730, 750, 781, 170,
	178, 186, 198, 208, 215, 226, 229, 233, 234, 236,
	240, 252, 254, 255, 256, 257, 275, 276, 279, 280,
	283, 284, 287, 288, 289, 859, 860, 299, 147, 305,
	311, 312, 313, 314, 315, 323, 324, 326, 327, 334,
	353, 354, 367, 368, 813, 710, 155, 0, 0, 161,
	0, 0, 0, 0, 0, 697, 160, 812, 836, 757,
	771, 824, 0, 343, 889, 828, 671, 694, 837, 700,
	702, 765, 647, 742, 282, 691, 648, 0, 0, 639,
	884, 640, 672, 204, 882, 798, 743, 826, 728, 758,
	768, 203, 193, 735, 734, 815, 683, 682, 763, 811,
	825, 0, 0, 922, 247, 0, 0, 365, 332, 266,
	0, 0, 726, 0, 896, 909, 711, 767, 659, 754,
	830, 692, 759, 831, 0, 0, 0, 0, 493, 0,
	0, 0, 0, 0, 0, 0, 0, 137, 0, 904,
	918, 885, 0, 721, 764, 842, 638, 901, 0, 643,
	873, 0, 816, 679, 680, 207, 0, 0, 0, 0,
	0, 0, 0, 724, 741, 783, 708, 360, 770, 779,
	793, 701, 298, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 900, 0, 0, 0, 653, 869,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 890, 0, 0, 0, 658, 636, 677, 785,
	637, 635, 267, 650, 911, 814, 709, 237, 153, 820,
	707, 888, 773, 654, 802, 695, 245, 652, 154, 649,
	655, 693, 278, 782, 788, 142, 157, 799, 673, 686,
	194, 0, 308, 760, 359, 868, 746, 307, 248, 352,
	774, 822, 358, 696, 339, 366, 370, 214, 729, 185,
	329, 205, 202, 678, 792, 642, 222, 297, 197, 241,
	712, 766, 674, 190, 777, 753, 804, 328, 349, 159,
	263, 350, 369, 176, 344, 264, 271, 187, 189, 188,
	171, 322, 348, 181, 192, 800, 787, 806, 669, 656,
	661, 657, 685, 823, 232, 223, 807, 805, 363, 143,
	317, 316, 699, 231, 790, 144, 136, 304, 145, 238,
	162, 810, 372, 175, 243, 345, 867, 217, 277, 196,
	762, 286, 684, 156, 300, 259, 261, 258, 262, 220,
	140, 146, 786, 302, 319, 347, 177, 335, 138, 139,
	141, 148, 310, 149, 150, 829, 253, 209, 213, 225,
	235, 761, 306, 336, 364, 755, 172, 165, 338, 1297,
	182, 318, 321, 371, 784, 167, 818, 801, 748, 714,
	720, 644, 0, 166, 780, 676, 688, 668, 756, 667,
	219, 772, 355, 356, 195, 373, 874, 833, 168, 651,
	832, 274, 281, 273, 835, 351, 819, 749, 738, 736,
	645, 817, 747, 737, 244, 212, 227, 295, 250, 296,
	228, 269, 268, 270, 251, 740, 0, 163, 0, 333,
	827, 844, 337, 179, 662, 794, 346, 224, 301, 180,
	218, 210, 294, 272, 173, 230, 331, 242, 249, 776,
	841, 285, 309, 184, 361, 330, 206, 879, 881, 877,
	880, 878, 897, 898, 919, 920, 921, 908, 875, 0,
	916, 917, 0, 731, 821, 646, 0, 797, 151, 152,
	769, 839, 887, 191, 131, 870, 871, 872, 132, 891,
	892, 133, 134, 914, 913, 912, 915, 135, 924, 923,
	925, 876, 883, 886, 893, 894, 895, 902, 903, 910,
	905, 906, 727, 291, 164, 174, 183, 201, 199, 211,
	239, 260, 265, 290, 320, 325, 340, 341, 342, 0,
	0, 0, 0, 0, 899, 158, 169, 246, 840, 303,
	216, 634, 641, 660, 663, 664, 665, 666, 670, 675,
	0, 681, 687, 689, 690, 698, 703, 704, 705, 706,
	713, 715, 716, 717, 718, 719, 722, 723, 725, 732,
	733, 739, 744, 745, 751, 752, 0, 775, 778, 907,
	789, 791, 795, 796, 803, 808, 809, 834, 838, 843,
	362, 200, 730, 750, 781, 170, 178, 186, 198, 208,
	215, 226, 229, 233, 234, 236, 240, 252, 254, 255,
	256, 257, 275, 276, 279, 280, 283, 284, 287, 288,
	289, 292, 293, 299, 147, 305, 311, 312, 313, 314,
	315, 323, 324, 326, 327, 334, 353, 354, 367, 368,
	813, 710, 155, 0, 0, 161, 0, 0, 0, 0,
	0, 697, 160, 812, 836, 757, 771, 824, 0, 343,
	889, 828, 671, 694, 837, 700, 702, 765, 647, 742,
	282, 691, 648, 0, 0, 639, 884, 640, 672, 204,
	882, 798, 743, 826, 728, 758, 768, 203, 193, 735,
	734, 815, 683, 682, 763, 811, 825, 0, 0, 922,
	247, 0, 0, 365, 332, 266, 0, 0, 726, 0,
	896, 909, 711, 767, 659, 754, 830, 692, 759, 831,
	0, 0, 0, 0, 493, 0, 0, 0, 0, 0,
	0, 0, 0, 137, 0, 904, 918, 885, 0, 721,
	764, 842, 638, 901, 0, 643, 873, 0, 816, 679,
	680, 207, 0, 0, 0, 0, 0, 0, 0, 724,
	741, 783, 708, 360, 770, 779, 793, 701, 298, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	900, 0, 0, 0, 653, 869, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 890, 0,
	0, 0, 658, 636, 677, 785, 637, 635, 267, 650,
	911, 814, 709, 237, 153, 820, 707, 888, 773, 654,
	802, 695, 245, 652, 154, 649, 655, 693, 278, 782,
	788, 142, 157, 799, 673, 686, 194, 0, 308, 760,
	359, 868, 746, 307, 248, 352, 774, 822, 358, 696,
	339, 366, 370, 214, 729, 185, 329, 205, 202, 678,
	792, 642, 222, 297, 197, 241, 712, 766, 674, 190,
	777, 753, 804, 328, 349, 159, 263, 350, 369, 176,
	344, 264, 271, 187, 189, 188, 171, 322, 348, 181,
	192, 800, 787, 806, 669, 656, 661, 657, 685, 823,
	232, 223, 807, 805, 363, 143, 317, 316, 699, 231,
	790, 144, 136, 304, 145, 238, 162, 810, 372, 175,
	243, 345, 867, 217, 277, 196, 762, 286, 684, 156,
	300, 259, 261, 258, 262, 220, 140, 146, 786, 302,
	319, 347, 177, 335, 138, 139, 141, 148, 310, 149,
	150, 829, 253, 209, 213, 225, 235, 761, 306, 336,
	364, 755, 172, 165, 338, 849, 182, 318, 321, 371,
	784, 167, 818, 801, 748, 714, 720, 644, 0, 166,
	780, 676, 688, 668, 756, 667, 219, 772, 355, 356,
	195, 373, 874, 833, 168, 862, 832, 274, 281, 273,
	835, 351, 819, 749, 738, 736, 645, 817, 747, 737,
	244, 212, 227, 295, 250, 296, 228, 269, 268, 270,
	858, 740, 0, 163, 0, 333, 827, 844, 337, 179,
	662, 794, 346, 224, 301, 180, 218, 210, 294, 863,
	861, 852, 853, 242, 249, 776, 841, 285, 309, 184,
	361, 330, 206, 879, 881, 877, 880, 878, 897, 898,
	919, 920, 921, 908, 875, 0, 916, 917, 0, 731,
	821, 646, 0, 797, 151, 152, 769, 839, 887, 191,
	131, 870, 871, 872, 132, 891, 892, 133, 134, 914,
	913, 912, 915, 135, 924, 923, 925, 876, 883, 886,
	893, 894, 895, 902, 903, 910, 905, 906, 727, 291,
	164, 174, 183, 201, 199, 211, 239, 260, 265, 290,
	320, 325, 340, 341, 342, 0, 0, 0, 0, 0,
	899, 158, 169, 246, 840, 303, 216, 634, 641, 660,
	663, 664, 665, 666, 670, 675, 0, 681, 687, 689,
	690, 698, 703, 704, 705, 706, 713, 715, 716, 717,
	718, 719, 722, 723, 725, 732, 733, 739, 744, 745,
	751, 752, 0, 775, 778, 907, 789, 791, 795, 796,
	803, 808, 809, 834, 838, 843, 362, 200, 730, 750,
	781, 170, 178, 186, 198, 208, 215, 226, 229, 233,
	234, 236, 240, 252, 254, 255, 256, 257, 275, 276,
	279, 280, 283, 284, 287, 288, 289, 859, 860, 299,
	147, 305, 311, 312, 313, 314, 315, 323, 324, 326,
	327, 334, 353, 354, 367, 368, 813, 710, 155, 0,
	0, 161, 0, 0, 0, 0, 0, 697, 160, 812,
	836, 757, 771, 1669, 1631, 343, 1524, 1673, 1474, 1503,
	1690, 1509, 1512, 1593, 1440, 1562, 282, 1500, 1441, 1424,
	1479, 1428, 1491, 1429, 1476, 204, 1472, 1634, 1565, 1671,
	1544, 1586, 1596, 203, 193, 1554, 1553, 1659, 1489, 1488,
	1591, 1648, 1670, 1543, 0, 1680, 247, 1645, 0, 365,
	332, 266, 0, 0, 1539, 1654, 1560, 1623, 1522, 1595,
	1456, 1578, 1675, 1501, 1587, 1676, 0, 0, 0, 0,
	940, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1583, 1667, 1494, 0, 1534, 1592, 1695, 1427, 1579,
	0, 1432, 1443, 1689, 1660, 1485, 1486, 207, 0, 0,
	0, 0, 0, 0, 0, 1537, 1561, 1613, 1519, 360,
	1598, 1608, 1626, 1511, 298, 221, 0, 0, 0, 0,
	0, 0, 3016, 0, 1481, 0, 1576, 0, 0, 0,
	1448, 1434, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1533, 0, 0, 0, 1455, 1425,
	1483, 1615, 1426, 1423, 267, 1444, 1628, 1658, 1520, 237,
	0, 1664, 1518, 1517, 1602, 1449, 1638, 1504, 245, 1447,
	154, 1442, 1450, 1502, 278, 1612, 1620, 0, 157, 1635,
	1477, 1493, 194, 0, 308, 1588, 359, 0, 1569, 307,
	248, 352, 1603, 1666, 358, 1505, 339, 366, 370, 214,
	1545, 185, 329, 205, 202, 1484, 1625, 1431, 222, 297,
	197, 241, 1523, 1594, 1478, 190, 1606, 1577, 1640, 328,
	349, 159, 263, 350, 369, 176, 344, 264, 271, 187,
	189, 188, 171, 322, 348, 181, 192, 1636, 1619, 1642,
	1471, 1451, 1462, 1452, 1492, 1668, 232, 223, 1643, 1641,
	363, 0, 317, 316, 1508, 231, 1622, 0, 0, 304,
	0, 238, 162, 1647, 372, 175, 243, 345, 0, 217,
	277, 196, 1590, 286, 1490, 156, 300, 259, 261, 258,
	262, 220, 0, 0, 1618, 302, 319, 347, 177, 335,
	0, 0, 0, 0, 310, 0, 0, 1674, 253, 209,
	213, 225, 235, 1589, 306, 336, 364, 1580, 172, 165,
	338, 357, 182, 318, 321, 371, 1614, 167, 1662, 1637,
	1571, 1526, 1532, 1433, 0, 166, 1610, 1482, 1497, 1470,
	1584, 1469, 219, 1601, 355, 356, 195, 373, 1445, 1682,
	168, 1446, 1681, 274, 281, 273, 1685, 351, 1663, 1572,
	1557, 1555, 1438, 1661, 1570, 1556, 244, 212, 227, 295,
	250, 296, 228, 269, 268, 270, 251, 1559, 0, 163,
	0, 333, 1672, 1697, 337, 179, 1464, 1629, 346, 224,
	301, 180, 218, 210, 294, 272, 173, 230, 331, 242,
	249, 1605, 1694, 285, 309, 184, 361, 330, 206, 1460,
	1463, 1458, 1461, 1459, 1563, 1564, 1677, 1678, 1679, 1617,
	1453, 0, 1655, 1656, 0, 1550, 1665, 1439, 0, 1633,
	0, 0, 1597, 1692, 1510, 191, 0, 1435, 1436, 1437,
	0, 1540, 1541, 0, 0, 1651, 1650, 1649, 1652, 0,
	1686, 1684, 1687, 1454, 1475, 1496, 1546, 1547, 1549, 1581,
	1582, 1627, 1600, 1609, 1542, 291, 164, 174, 183, 201,
	199, 211, 239, 260, 265, 290, 320, 325, 340, 341,
	342, 0, 0, 0, 0, 0, 1568, 158, 169, 246,
	1693, 303, 216, 1422, 1430, 1457, 1465, 1466, 1467, 1468,
	1473, 1480, 0, 1487, 1495, 1498, 1499, 1507, 1513, 1514,
	1515, 1516, 1525, 1527, 1528, 1529, 1530, 1531, 1535, 1536,
	1538, 1551, 1552, 1558, 1566, 1567, 1574, 1575, 0, 1604,
	1607, 1616, 1621, 1624, 1630, 1632, 1639, 1644, 1646, 1683,
	1691, 1696, 362, 200, 1548, 1573, 1611, 170, 178, 186,
	198, 208, 215, 226, 229, 233, 234, 236, 240, 252,
	254, 255, 256, 257, 275, 276, 279, 280, 283, 284,
	287, 288, 289, 292, 293, 299, 0, 305, 311, 312,
	313, 314, 315, 323, 324, 326, 327, 334, 353, 354,
	367, 368, 1657, 1521, 155, 0, 0, 161, 0, 0,
	0, 0, 0, 1506, 160, 1653, 1688, 1585, 1599, 1669,
	1631, 343, 1524, 1673, 1474, 1503, 1690, 1509, 1512, 1593,
	1440, 1562, 282, 1500, 1441, 1424, 1479, 1428, 1491, 1429,
	1476, 204, 1472, 1634, 1565, 1671, 1544, 1586, 1596, 203,
	193, 1554, 1553, 1659, 1489, 1488, 1591, 1648, 1670, 1543,
	0, 1680, 247, 1645, 0, 365, 332, 266, 0, 0,
	1539, 1654, 1560, 1623, 1522, 1595, 1456, 1578, 1675, 1501,
	1587, 1676, 0, 0, 0, 0, 940, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1583, 1667, 1494,
	0, 1534, 1592, 1695, 1427, 1579, 0, 1432, 1443, 1689,
	1660, 1485, 1486, 207, 0, 0, 0, 0, 0, 0,
	0, 1537, 1561, 1613, 1519, 360, 1598, 1608, 1626, 1511,
	298, 221, 0, 0, 0, 0, 0, 0, 2543, 0,
	1481, 0, 1576, 0, 0, 0, 1448, 1434, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1533, 0, 0, 0, 1455, 1425, 1483, 1615, 1426, 1423,
	267, 1444, 1628, 1658, 1520, 237, 0, 1664, 1518, 1517,
	1602, 1449, 1638, 1504, 245, 1447, 154, 1442, 1450, 1502,
	278, 1612, 1620, 0, 157, 1635, 1477, 1493, 194, 0,
	308, 1588, 359, 0, 1569, 307, 248, 352, 1603, 1666,
	358, 1505, 339, 366, 370, 214, 1545, 185, 329, 205,
	202, 1484, 1625, 1431, 222, 297, 197, 241, 1523, 1594,
	1478, 190, 1606, 1577, 1640, 328, 349, 159, 263, 350,
	369, 176, 344, 264, 271, 187, 189, 188, 171, 322,
	348, 181, 192, 1636, 1619, 1642, 1471, 1451, 1462, 1452,
	1492, 1668, 232, 223, 1643, 1641, 363, 0, 317, 316,
	1508, 231, 1622, 0, 0, 304, 0, 238, 162, 1647,
	372, 175, 243, 345, 0, 217, 277, 196, 1590, 286,
	1490, 156, 300, 259, 261, 258, 262, 220, 0, 0,
	1618, 302, 319, 347, 177, 335, 0, 0, 0, 0,
	310, 0, 0, 1674, 253, 209, 213, 225, 235, 1589,
	306, 336, 364, 1580, 172, 165, 338, 357, 182, 318,
	321, 371, 1614, 167, 1662, 1637, 1571, 1526, 1532, 1433,
	0, 166, 1610, 1482, 1497, 1470, 1584, 1469, 219, 1601,
	355, 356, 195, 373, 1445, 1682, 168, 1446, 1681, 274,
	281, 273, 1685, 351, 1663, 1572, 1557, 1555, 1438, 1661,
	1570, 1556, 244, 212, 227, 295, 250, 296, 228, 269,
	268, 270, 251, 1559, 0, 163, 0, 333, 1672, 1697,
	337, 179, 1464, 1629, 346, 224, 301, 180, 218, 210,
	294, 272, 173, 230, 331, 242, 249, 1605, 1694, 285,
	309, 184, 361, 330, 206, 1460, 1463, 1458, 1461, 1459,
	1563, 1564, 1677, 1678, 1679, 1617, 1453, 0, 1655, 1656,
	0, 1550, 1665, 1439, 0, 1633, 0, 0, 1597, 1692,
	1510, 191, 0, 1435, 1436, 1437, 0, 1540, 1541, 0,
	0, 1651, 1650, 1649, 1652, 0, 1686, 1684, 1687, 1454,
	1475, 1496, 1546, 1547, 1549, 1581, 1582, 1627, 1600, 1609,
	1542, 291, 164, 174, 183, 201, 199, 211, 239, 260,
	265, 290, 320, 325, 340, 341, 342, 0, 0, 0,
	0, 0, 1568, 158, 169, 246, 1693, 303, 216, 1422,
	1430, 1457, 1465, 1466, 1467, 1468, 1473, 1480, 0, 1487,
	1495, 1498, 1499, 1507, 1513, 1514, 1515, 1516, 1525, 1527,
	1528, 1529, 1530, 1531, 1535, 1536, 1538, 1551, 1552, 1558,
	1566, 1567, 1574, 1575, 0, 1604, 1607, 1616, 1621, 1624,
	1630, 1632, 1639, 1644, 1646, 1683, 1691, 1696, 362, 200,
	1548, 1573, 1611, 170, 178, 186, 198, 208, 215, 226,
	229, 233, 234, 236, 240, 252, 254, 255, 256, 257,
	275, 276, 279, 280, 283, 284, 287, 288, 289, 292,
	293, 299, 0, 305, 311, 312, 313, 314, 315, 323,
	324, 326, 327, 334, 353, 354, 367, 368, 1657, 1521,
	155, 0, 0, 161, 0, 0, 0, 0, 0, 1506,
	160, 1653, 1688, 1585, 1599, 1669, 1631, 343, 1524, 1673,
	1474, 1503, 1690, 1509, 1512, 1593, 1440, 1562, 282, 1500,
	1441, 1424, 1479, 1428, 1491, 1429, 1476, 204, 1472, 1634,
	1565, 1671, 1544, 1586, 1596, 203, 193, 1554, 1553, 1659,
	1489, 1488, 1591, 1648, 1670, 1543, 0, 1680, 247, 1645,
	0, 365, 332, 266, 0, 0, 1539, 1654, 1560, 1623,
	1522, 1595, 1456, 1578, 1675, 1501, 1587, 1676, 0, 0,
	0, 0, 129, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1583, 1667, 1494, 0, 1534, 1592, 1695,
	1427, 1579, 0, 1432, 1443, 1689, 1660, 1485, 1486, 207,
	0, 0, 0, 0, 0, 0, 0, 1537, 1561, 1613,
	1519, 360, 1598, 1608, 1626, 1511, 298, 221, 0, 0,
	0, 0, 0, 0, 2325, 0, 1481, 0, 1576, 0,
	0, 0, 1448, 1434, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1533, 0, 0, 0,
	1455, 1425, 1483, 1615, 1426, 1423, 267, 1444, 1628, 1658,
	1520, 237, 0, 1664, 1518, 1517, 1602, 1449, 1638, 1504,
	245, 1447, 154, 1442, 1450, 1502, 278, 1612, 1620, 0,
	157, 1635, 1477, 1493, 194, 0, 308, 1588, 359, 0,
	1569, 307, 248, 352, 1603, 1666, 358, 1505, 339, 366,
	370, 214, 1545, 185, 329, 205, 202, 1484, 1625, 1431,
	222, 297, 197, 241, 1523, 1594, 1478, 190, 1606, 1577,
	1640, 328, 349, 159, 263, 350, 369, 176, 344, 264,
	271, 187, 189, 188, 171, 322, 348, 181, 192, 1636,
	1619, 1642, 1471, 1451, 1462, 1452, 1492, 1668, 232, 223,
	1643, 1641, 363, 0, 317, 316, 1508, 231, 1622, 0,
	0, 304, 0, 238, 162, 1647, 372, 175, 243, 345,
	0, 217, 277, 196, 1590, 286, 1490, 156, 300, 259,
	261, 258, 262, 220, 0, 0, 1618, 302, 319, 347,
	177, 335, 0, 0, 0, 0, 310, 0, 0, 1674,
	253, 209, 213, 225, 235, 1589, 306, 336, 364, 1580,
	172, 165, 338, 357, 182, 318, 321, 371, 1614, 167,
	1662, 1637, 1571, 1526, 1532, 1433, 0, 166, 1610, 1482,
	1497, 1470, 1584, 1469, 219, 1601, 355, 356, 195, 373,
	1445, 1682, 168, 1446, 1681, 274, 281, 273, 1685, 351,
	1663, 1572, 1557, 1555, 1438, 1661, 1570, 1556, 244, 212,
	227, 295, 250, 296, 228, 269, 268, 270, 251, 1559,
	0, 163, 0, 333, 1672, 1697, 337, 179, 1464, 1629,
	346, 224, 301, 180, 218, 210, 294, 272, 173, 230,
	331, 242, 249, 1605, 1694, 285, 309, 184, 361, 330,
	206, 1460, 1463, 1458, 1461, 1459, 1563, 1564, 1677, 1678,
	1679, 1617, 1453, 0, 1655, 1656, 0, 1550, 1665, 1439,
	0, 1633, 0, 0, 1597, 1692, 1510, 191, 0, 1435,
	1436, 1437, 0, 1540, 1541, 0, 0, 1651, 1650, 1649,
	1652, 0, 1686, 1684, 1687, 1454, 1475, 1496, 1546, 1547,
	1549, 1581, 1582, 1627, 1600, 1609, 1542, 291, 164, 174,
	183, 201, 199, 211, 239, 260, 265, 290, 320, 325,
	340, 341, 342, 0, 0, 0, 0, 0, 1568, 158,
	169, 246, 1693, 303, 216, 1422, 1430, 1457, 1465, 1466,
	1467, 1468, 1473, 1480, 0, 1487, 1495, 1498, 1499, 1507,
	1513, 1514, 1515, 1516, 1525, 1527, 1528, 1529, 1530, 1531,
	1535, 1536, 1538, 1551, 1552, 1558, 1566, 1567, 1574, 1575,
	0, 1604, 1607, 1616, 1621, 1624, 1630, 1632, 1639, 1644,
	1646, 1683, 1691, 1696, 362, 200, 1548, 1573, 1611, 170,
	178, 186, 198, 208, 215, 226, 229, 233, 234, 236,
	240, 252, 254, 255, 256, 257, 275, 276, 279, 280,
	283, 284, 287, 288, 289, 292, 293, 299, 0, 305,
	311, 312, 313, 314, 315, 323, 324, 326, 327, 334,
	353, 354, 367, 368, 1657, 1521, 155, 0, 0, 161,
	0, 0, 0, 0, 0, 1506, 160, 1653, 1688, 1585,
	1599, 1669, 1631, 343, 1524, 1673, 1474, 1503, 1690, 1509,
	1512, 1593, 1440, 1562, 282, 1500, 1441, 1424, 1479, 1428,
	1491, 1429, 1476, 204, 1472, 1634, 1565, 1671, 1544, 1586,
	1596, 203, 193, 1554, 1553, 1659, 1489, 1488, 1591, 1648,
	1670, 1543, 0, 1680, 247, 1645, 0, 365, 332, 266,
	0, 0, 1539, 1654, 1560, 1623, 1522, 1595, 1456, 1578,
	1675, 1501, 1587, 1676, 0, 0, 0, 0, 940, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1583,
	1667, 1494, 0, 1534, 1592, 1695, 1427, 1579, 0, 1432,
	1443, 1689, 1660, 1485, 1486, 207, 0, 0, 0, 0,
	0, 0, 0, 1537, 1561, 1613, 1519, 360, 1598, 1608,
	1626, 1511, 298, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 1481, 0, 1576, 0, 0, 0, 1448, 1434,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1533, 0, 0, 0, 1455, 1425, 1483, 1615,
	1426, 1423, 267, 1444, 1628, 1658, 1520, 237, 0, 1664,
	1518, 1517, 1602, 1449, 1638, 1504, 245, 1447, 154, 1442,
	1450, 1502, 278, 1612, 1620, 0, 157, 1635, 1477, 1493,
	194, 0, 308, 1588, 359, 0, 1569, 307, 248, 352,
	1603, 1666, 358, 1505, 339, 366, 370, 214, 1545, 185,
	329, 205, 202, 1484, 1625, 1431, 222, 297, 197, 241,
	1523, 1594, 1478, 190, 1606, 1577, 1640, 328, 349, 159,
	263, 350, 369, 176, 344, 264, 271, 187, 189, 188,
	171, 322, 348, 181, 192, 1636, 1619, 1642, 1471, 1451,
	1462, 1452, 1492, 1668, 232, 223, 1643, 1641, 363, 0,
	317, 316, 1508, 231, 1622, 0, 0, 304, 0, 238,
	162, 1647, 372, 175, 243, 345, 0, 217, 277, 196,
	1590, 286, 1490, 156, 300, 259, 261, 258, 262, 220,
	0, 0, 1618, 302, 319, 347, 177, 335, 0, 0,
	0, 0, 310, 0, 0, 1674, 253, 209, 213, 225,
	235, 1589, 306, 336, 364, 1580, 172, 165, 338, 357,
	182, 318, 321, 371, 1614, 167, 1662, 1637, 1571, 1526,
	1532, 1433, 0, 166, 1610, 1482, 1497, 1470, 1584, 1469,
	219, 1601, 355, 356, 195, 373, 1445, 1682, 168, 1446,
	1681, 274, 281, 273, 1685, 351, 1663, 1572, 1557, 1555,
	1438, 1661, 1570, 1556, 244, 212, 227, 295, 250, 296,
	228, 269, 268, 270, 251, 1559, 0, 163, 0, 333,
	1672, 1697, 337, 179, 1464, 1629, 346, 224, 301, 180,
	218, 210, 294, 272, 173, 230, 331, 242, 249, 1605,
	1694, 285, 309, 184, 361, 330, 206, 1460, 1463, 1458,
	1461, 1459, 1563, 1564, 1677, 1678, 1679, 1617, 1453, 0,
	1655, 1656, 0, 1550, 1665, 1439, 0, 1633, 0, 0,
	1597, 1692, 1510, 191, 0, 1435, 1436, 1437, 0, 1540,
	1541, 0, 0, 1651, 1650, 1649, 1652, 0, 1686, 1684,
	1687, 1454, 1475, 1496, 1546, 1547, 1549, 1581, 1582, 1627,
	1600, 1609, 1542, 291, 164, 174, 183, 201, 199, 211,
	239, 260, 265, 290, 320, 325, 340, 341, 342, 0,
	0, 0, 0, 0, 1568, 158, 169, 246, 1693, 303,
	216, 1422, 1430, 1457, 1465, 1466, 1467, 1468, 1473, 1480,
	0, 1487, 1495, 1498, 1499, 1507, 1513, 1514, 1515, 1516,
	1525, 1527, 1528, 1529, 1530, 1531, 1535, 1536, 1538, 1551,
	1552, 1558, 1566, 1567, 1574, 1575, 0, 1604, 1607, 1616,
	1621, 1624, 1630, 1632, 1639, 1644, 1646, 1683, 1691, 1696,
	362, 200, 1548, 1573, 1611, 170, 178, 186, 198, 208,
	215, 226, 229, 233, 234, 236, 240, 252, 254, 255,
	256, 257, 275, 276, 279, 280, 283, 284, 287, 288,
	289, 292, 293, 299, 0, 305, 311, 312, 313, 314,
	315, 323, 324, 326, 327, 334, 353, 354, 367, 368,
	1657, 1521, 155, 0, 0, 161, 0, 0, 0, 0,
	0, 1506, 160, 1653, 1688, 1585, 1599, 1669, 1631, 343,
	1524, 1673, 1474, 1503, 1690, 1509, 1512, 1593, 1440, 1562,
	282, 1500, 1441, 1424, 1479, 1428, 1491, 1429, 1476, 204,
	1472, 1634, 1565, 1671, 1544, 1586, 1596, 203, 193, 1554,
	1553, 1659, 1489, 1488, 1591, 1648, 1670, 1543, 0, 1680,
	247, 1645, 0, 365, 332, 266, 0, 0, 1539, 1654,
	1560, 1623, 1522, 1595, 1456, 1578, 1675, 1501, 1587, 1676,
	0, 0, 0, 0, 3334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1583, 1667, 1494, 0, 1534,
	1592, 1695, 1427, 1579, 0, 1432, 1443, 1689, 1660, 1485,
	1486, 207, 0, 0, 0, 0, 0, 0, 0, 1537,
	1561, 1613, 1519, 360, 1598, 1608, 1626, 1511, 298, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 1481, 0,
	1576, 0, 0, 0, 1448, 1434, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1533, 0,
	0, 0, 1455, 1425, 1483, 1615, 1426, 1423, 267, 1444,
	1628, 1658, 1520, 237, 0, 1664, 1518, 1517, 1602, 1449,
	1638, 1504, 245, 1447, 154, 1442, 1450, 1502, 278, 1612,
	1620, 0, 157, 1635, 1477, 1493, 194, 0, 308, 1588,
	359, 0, 1569, 307, 248, 352, 1603, 1666, 358, 1505,
	339, 366, 370, 214, 1545, 185, 329, 205, 202, 1484,
	1625, 1431, 222, 297, 197, 241, 1523, 1594, 1478, 190,
	1606, 1577, 1640, 328, 349, 159, 263, 350, 369, 176,
	344, 264, 271, 187, 189, 188, 171, 322, 348, 181,
	192, 1636, 1619, 1642, 1471, 1451, 1462, 3337, 3338, 3339,
	232, 223, 1643, 1641, 363, 0, 317, 316, 1508, 231,
	1622, 0, 0, 304, 0, 238, 162, 1647, 372, 175,
	243, 345, 0, 217, 277, 196, 1590, 286, 1490, 156,
	300, 259, 261, 258, 262, 220, 0, 0, 1618, 302,
	319, 347, 177, 335, 0, 0, 0, 0, 310, 0,
	0, 1674, 253, 209, 213, 225, 235, 1589, 306, 336,
	364, 1580, 172, 165, 338, 357, 182, 318, 321, 371,
	1614, 167, 1662, 1637, 1571, 1526, 1532, 1433, 0, 166,
	1610, 1482, 1497, 1470, 1584, 1469, 219, 1601, 355, 356,
	195, 373, 1445, 1682, 168, 1446, 1681, 274, 281, 273,
	1685, 351, 1663, 1572, 1557, 1555, 1438, 1661, 1570, 1556,
	244, 212, 227, 295, 250, 296, 228, 269, 268, 270,
	251, 1559, 0, 163, 0, 333, 1672, 1697, 337, 179,
	1464, 1629, 346, 224, 301, 180, 218, 210, 294, 272,
	173, 230, 331, 242, 249, 1605, 1694, 285, 309, 184,
	361, 330, 206, 1460, 1463, 1458, 1461, 1459, 1563, 1564,
	1677, 1678, 1679, 1617, 1453, 0, 1655, 1656, 0, 1550,
	1665, 1439, 0, 1633, 0, 0, 1597, 1692, 1510, 191,
	0, 1435, 1436, 1437, 0, 1540, 1541, 0, 0, 1651,
	1650, 1649, 1652, 0, 1686, 1684, 1687, 1454, 1475, 1496,
	1546, 1547, 1549, 1581, 1582, 1627, 1600, 1609, 1542, 291,
	164, 174, 183, 201, 199, 211, 239, 260, 265, 290,
	320, 325, 340, 341, 342, 0, 0, 0, 0, 0,
	1568, 158, 169, 246, 1693, 303, 216, 1422, 1430, 1457,
	1465, 1466, 1467, 1468, 1473, 1480, 0, 1487, 1495, 1498,
	1499, 1507, 1513, 1514, 1515, 1516, 1525, 1527, 1528, 1529,
	1530, 1531, 1535, 1536, 1538, 1551, 1552, 1558, 1566, 1567,
	1574, 1575, 0, 1604, 1607, 1616, 1621, 1624, 1630, 1632,
	1639, 1644, 1646, 1683, 1691, 1696, 362, 200, 1548, 1573,
	1611, 170, 178, 186, 198, 208, 215, 226, 229, 233,
	234, 236, 240, 252, 254, 255, 256, 257, 275, 276,
	279, 280, 283, 284, 287, 288, 289, 292, 293, 299,
	0, 305, 311, 312, 313, 314, 315, 323, 324, 326,
	327, 334, 353, 354, 367, 368, 1657, 1521, 155, 0,
	0, 161, 0, 0, 0, 0, 0, 1506, 160, 1653,
	1688, 1585, 1599, 1669, 1631, 343, 1524, 1673, 1474, 1503,
	1690, 1509, 1512, 1593, 1440, 1562, 282, 1500, 1441, 1424,
	1479, 1428, 1491, 1429, 1476, 204, 1472, 1634, 1565, 1671,
	1544, 1586, 1596, 203, 193, 1554, 1553, 1659, 1489, 1488,
	1591, 1648, 1670, 1543, 0, 1680, 247, 1645, 0, 365,
	332, 266, 0, 0, 1539, 1654, 1560, 1623, 1522, 1595,
	1456, 1578, 1675, 1501, 1587, 1676, 0, 0, 0, 0,
	129, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1583, 1667, 1494, 0, 1534, 1592, 1695, 1427, 1579,
	0, 1432, 1443, 1689, 1660, 1485, 1486, 207, 0, 0,
	0, 0, 0, 0, 0, 1537, 1561, 1613, 1519, 360,
	1598, 1608, 1626, 1511, 298, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 1481, 0, 1576, 0, 0, 0,
	1448, 1434, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1533, 0, 0, 0, 1455, 1425,
	1483, 1615, 1426, 1423, 267, 1444, 1628, 1658, 1520, 237,
	0, 1664, 1518, 1517, 1602, 1449, 1638, 1504, 245, 1447,
	154, 1442, 1450, 1502, 278, 1612, 1620, 0, 157, 1635,
	1477, 1493, 194, 0, 308, 1588, 359, 0, 1569, 307,
	248, 352, 1603, 1666, 358, 1505, 339, 366, 370, 214,
	1545, 185, 329, 205, 202, 1484, 1625, 1431, 222, 297,
	197, 241, 1523, 1594, 1478, 190, 1606, 1577, 1640, 328,
	349, 159, 263, 350, 369, 176, 344, 264, 271, 187,
	189, 188, 171, 322, 348, 181, 192, 1636, 1619, 1642,
	1471, 1451, 1462, 1452, 1492, 1668, 232, 223, 1643, 1641,
	363, 0, 317, 316, 1508, 231, 1622, 0, 0, 304,
	0, 238, 162, 1647, 372, 175, 243, 345, 0, 217,
	277, 196, 1590, 286, 1490, 156, 300, 259, 261, 258,
	262, 220, 0, 0, 1618, 302, 319, 347, 177, 335,
	0, 0, 0, 0, 310, 0, 0, 1674, 253, 209,
	213, 225, 235, 1589, 306, 336, 364, 1580, 172, 165,
	338, 357, 182, 318, 321, 371, 1614, 167, 1662, 1637,
	1571, 1526, 1532, 1433, 0, 166, 1610, 1482, 1497, 1470,
	1584, 1469, 219, 1601, 355, 356, 195, 373, 1445, 1682,
	168, 1446, 1681, 274, 281, 273, 1685, 351, 1663, 1572,
	1557, 1555, 1438, 1661, 1570, 1556, 244, 212, 227, 295,
	250, 296, 228, 269, 268, 270, 251, 1559, 0, 163,
	0, 333, 1672, 1697, 337, 179, 1464, 1629, 346, 224,
	301, 180, 218, 210, 294, 272, 173, 230, 331, 242,
	249, 1605, 1694, 285, 309, 184, 361, 330, 206, 1460,
	1463, 1458, 1461, 1459, 1563, 1564, 1677, 1678, 1679, 1617,
	1453, 0, 1655, 1656, 0, 1550, 1665, 1439, 0, 1633,
	0, 0, 1597, 1692, 1510, 191, 0, 1435, 1436, 1437,
	0, 1540, 1541, 0, 0, 1651, 1650, 1649, 1652, 0,
	1686, 1684, 1687, 1454, 1475, 1496, 1546, 1547, 1549, 1581,
	1582, 1627, 1600, 1609, 1542, 291, 164, 174, 183, 201,
	199, 211, 239, 260, 265, 290, 320, 325, 340, 341,
	342, 0, 0, 0, 0, 0, 1568, 158, 169, 246,
	1693, 303, 216, 1422, 1430, 1457, 1465, 1466, 1467, 1468,
	1473, 1480, 0, 1487, 1495, 1498, 1499, 1507, 1513, 1514,
	1515, 1516, 1525, 1527, 1528, 1529, 1530, 1531, 1535, 1536,
	1538, 1551, 1552, 1558, 1566, 1567, 1574, 1575, 0, 1604,
	1607, 1616, 1621, 1624, 1630, 1632, 1639, 1644, 1646, 1683,
	1691, 1696, 362, 200, 1548, 1573, 1611, 170, 178, 186,
	198, 208, 215, 226, 229, 233, 234, 236, 240, 252,
	254, 255, 256, 257, 275, 276, 279, 280, 283, 284,
	287, 288, 289, 292, 293, 299, 0, 305, 311, 312,
	313, 314, 315, 323, 324, 326, 327, 334, 353, 354,
	367, 368, 1657, 1521, 155, 0, 0, 161, 343, 0,
	0, 0, 0, 1506, 160, 1653, 1688, 1585, 1599, 282,
	0, 0, 0, 0, 1156, 0, 0, 0, 204, 0,
	0, 0, 0, 0, 0, 0, 203, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 944, 365, 332, 266, 947, 946, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1157, 0, 1160, 0, 0, 0, 0,
	0, 0, 137, 0, 0, 0, 0, 945, 0, 1152,
	1153, 1151, 0, 0, 0, 0, 0, 0, 0, 0,
	207, 0, 0, 0, 0, 0, 0, 0, 1154, 0,
	0, 0, 360, 0, 0, 0, 0, 298, 221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 267, 0, 0,
	0, 0, 237, 153, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 154, 0, 0, 0, 278, 0, 0,
	142, 157, 0, 0, 0, 194, 0, 308, 0, 359,
	943, 0, 307, 248, 352, 0, 0, 358, 0, 339,
	366, 370, 214, 0, 185, 329, 205, 202, 0, 0,
	0, 222, 297, 197, 241, 0, 0, 0, 190, 0,
	0, 0, 328, 349, 159, 263, 350, 369, 176, 344,
	264, 271, 187, 189, 188, 171, 322, 348, 181, 192,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	223, 0, 0, 363, 143, 317, 316, 0, 231, 0,
	144, 136, 304, 145, 238, 162, 0, 372, 175, 243,
	345, 942, 217, 277, 196, 0, 286, 0, 156, 300,
	259, 261, 258, 262, 220, 140, 146, 0, 302, 319,
	347, 177, 335, 138, 139, 141, 148, 310, 149, 150,
	0, 253, 209, 213, 225, 235, 0, 306, 336, 364,
	0, 172, 165, 338, 357, 182, 318, 321, 371, 0,
	167, 0, 0, 0, 0, 0, 0, 0, 166, 0,
	0, 0, 0, 0, 0, 219, 0, 355, 356, 195,
	373, 0, 0, 168, 0, 0, 274, 281, 273, 0,
	351, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	212, 227, 295, 250, 296, 228, 269, 268, 270, 251,
	0, 0, 163, 0, 333, 0, 0, 337, 179, 0,
	0, 346, 224, 301, 180, 218, 210, 294, 272, 173,
	230, 331, 242, 249, 0, 0, 285, 309, 184, 361,
	330, 206, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 151, 152, 0, 0, 0, 191, 131,
	0, 0, 0, 132, 0, 0, 133, 134, 0, 0,
	0, 0, 135, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 291, 164,
	174, 183, 201, 199, 211, 239, 260, 265, 290, 320,
	325, 340, 341, 342, 0, 0, 0, 0, 0, 0,
	158, 169, 246, 0, 303, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 362, 200, 0, 0, 0,
	170, 178, 186, 198, 208, 215, 226, 229, 233, 234,
	236, 240, 252, 254, 255, 256, 257, 275, 276, 279,
	280, 283, 284, 287, 288, 289, 292, 293, 299, 147,
	305, 311, 312, 313, 314, 315, 323, 324, 326, 327,
	334, 353, 354, 367, 368, 343, 0, 155, 0, 0,
	161, 0, 0, 0, 0, 0, 282, 160, 0, 0,
	0, 0, 0, 0, 0, 204, 0, 0, 0, 0,
	0, 0, 0, 203, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 0, 944, 365,
	332, 266, 947, 946, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	940, 0, 0, 0, 0, 0, 0, 0, 0, 137,
	0, 0, 0, 0, 945, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 207, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 360,
	0, 0, 0, 0, 298, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 237,
	153, 0, 0, 0, 0, 0, 0, 0, 245, 948,
	154, 0, 938, 0, 278, 0, 0, 142, 157, 0,
	0, 0, 194, 937, 308, 0, 359, 943, 0, 307,
	248, 352, 0, 0, 358, 0, 339, 366, 370, 214,
	0, 185, 329, 205, 202, 0, 0, 0, 222, 297,
	197, 241, 0, 0, 0, 190, 0, 0, 0, 328,
	349, 159, 263, 350, 369, 176, 344, 264, 271, 187,
	189, 188, 171, 322, 348, 181, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 223, 0, 0,
	363, 143, 317, 316, 0, 231, 0, 144, 136, 304,
	145, 238, 162, 0, 372, 175, 243, 345, 942, 217,
	277, 196, 0, 286, 0, 156, 300, 259, 261, 258,
	262, 220, 140, 146, 0, 302, 319, 347, 177, 335,
	138, 139, 141, 148, 310, 149, 150, 0, 253, 209,
	213, 225, 235, 0, 306, 336, 364, 0, 172, 165,
	338, 357, 182, 318, 321, 371, 0, 167, 0, 0,
	0, 0, 0, 0, 0, 166, 0, 0, 0, 0,
	0, 0, 219, 0, 355, 356, 195, 373, 0, 0,
	168, 0, 0, 274, 281, 273, 0, 351, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 212, 227, 295,
	250, 296, 228, 269, 268, 270, 251, 0, 0, 163,
	0, 333, 0, 0, 337, 179, 0, 0, 346, 224,
	301, 180, 218, 210, 294, 272, 173, 230, 331, 242,
	249, 0, 0, 285, 309, 184, 361, 330, 206, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	151, 152, 0, 0, 0, 191, 131, 0, 0, 0,
	132, 0, 0, 133, 134, 0, 0, 0, 0, 135,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 291, 164, 174, 183, 201,
	199, 211, 239, 260, 265, 290, 320, 325, 340, 341,
	342, 0, 0, 0, 0, 0, 0, 158, 169, 246,
	0, 303, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 362, 200, 0, 0, 0, 170, 178, 186,
	198, 208, 215, 226, 229, 233, 234, 236, 240, 252,
	254, 255, 256, 257, 275, 276, 279, 280, 283, 284,
	287, 288, 289, 292, 293, 299, 147, 305, 311, 312,
	313, 314, 315, 323, 324, 326, 327, 334, 353, 354,
	367, 368, 343, 0, 155, 0, 0, 161, 0, 0,
	0, 0, 0, 282, 160, 0, 0, 0, 0, 0,
	0, 0, 204, 0, 0, 0, 0, 0, 0, 0,
	203, 193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 944, 365, 332, 266, 947,
	946, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1157, 0, 1160,
	0, 0, 0, 0, 0, 0, 137, 0, 0, 0,
	0, 945, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 207, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 360, 0, 0, 0,
	0, 298, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 0, 237, 153, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 154, 0, 0,
	0, 278, 0, 0, 142, 157, 0, 0, 0, 194,
	1829, 308, 0, 359, 943, 0, 307, 248, 352, 0,
	0, 358, 0, 339, 366, 370, 214, 0, 185, 329,
	205, 202, 0, 0, 0, 222, 297, 197, 241, 0,
	0, 0, 190, 0, 0, 0, 328, 349, 159, 263,
	350, 369, 176, 344, 264, 271, 187, 189, 188, 171,
	322, 348, 181, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 223, 0, 0, 363, 143, 317,
	316, 0, 231, 0, 144, 136, 304, 145, 238, 162,
	0, 372, 175, 243, 345, 942, 217, 277, 196, 0,
	286, 0, 156, 300, 259, 261, 258, 262, 220, 140,
	146, 0, 302, 319, 347, 177, 335, 138, 139, 141,
	148, 310, 149, 150, 0, 253, 209, 213, 225, 235,
	0, 306, 336, 364, 0, 172, 165, 338, 357, 182,
	318, 321, 371, 0, 167, 0, 0, 0, 0, 0,
	0, 0, 166, 0, 0, 0, 0, 0, 0, 219,
	0, 355, 356, 195, 373, 0, 0, 168, 0, 0,
	274, 281, 273, 0, 351, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 212, 227, 295, 250, 296, 228,
	269, 268, 270, 251, 0, 0, 163, 0, 333, 0,
	0, 337, 179, 0, 0, 346, 224, 301, 180, 218,
	210, 294, 272, 173, 230, 331, 242, 249, 0, 0,
	285, 309, 184, 361, 330, 206, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 151, 152, 0,
	0, 0, 191, 131, 0, 0, 0, 132, 0, 0,
	133, 134, 0, 0, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 164, 174, 183, 201, 199, 211, 239,
	260, 265, 290, 320, 325, 340, 341, 342, 0, 0,
	0, 0, 0, 0, 158, 169, 246, 0, 303, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 362,
	200, 0, 0, 0, 170, 178, 186, 198, 208, 215,
	226, 229, 233, 234, 236, 240, 252, 254, 255, 256,
	257, 275, 276, 279, 280, 283, 284, 287, 288, 289,
	292, 293, 299, 147, 305, 311, 312, 313, 314, 315,
	323, 324, 326, 327, 334, 353, 354, 367, 368, 343,
	0, 155, 0, 0, 161, 0, 0, 0, 0, 0,
	282, 160, 0, 0, 0, 0, 0, 0, 0, 204,
	0, 0, 0, 0, 0, 0, 0, 203, 193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 0, 944, 365, 332, 266, 947, 946, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2800, 0, 0, 0, 0, 0,
	0, 0, 0, 137, 0, 0, 0, 0, 945, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 207, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 360, 0, 0, 0, 0, 298, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 237, 153, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 154, 0, 0, 0, 278, 0,
	0, 142, 157, 0, 0, 0, 194, 0, 308, 0,
	359, 943, 0, 307, 248, 352, 0, 0, 358, 0,
	339, 366, 370, 214, 0, 185, 329, 205, 202, 0,
	0, 0, 222, 297, 197, 241, 0, 0, 0, 190,
	0, 0, 0, 328, 349, 159, 263, 350, 369, 176,
	344, 264, 271, 187, 189, 188, 171, 322, 348, 181,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 223, 0, 0, 363, 143, 317, 316, 0, 231,
	0, 144, 136, 304, 145, 238, 162, 0, 372, 175,
	243, 345, 942, 217, 277, 196, 0, 286, 0, 156,
	300, 259, 261, 258, 262, 220, 140, 146, 0, 302,
	319, 347, 177, 335, 138, 139, 141, 148, 310, 149,
	150, 0, 253, 209, 213, 225, 235, 0, 306, 336,
	364, 0, 172, 165, 338, 357, 182, 318, 321, 371,
	0, 167, 0, 0, 0, 0, 0, 0, 0, 166,
	0, 0, 0, 0, 0, 0, 219, 0, 355, 356,
	195, 373, 0, 0, 168, 0, 0, 274, 281, 273,
	0, 351, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 212, 227, 295, 250, 296, 228, 269, 268, 270,
	251, 0, 0, 163, 0, 333, 0, 0, 337, 179,
	0, 0, 346, 224, 301, 180, 218, 210, 294, 272,
	173, 230, 331, 242, 249, 0, 0, 285, 309, 184,
	361, 330, 206, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 151, 152, 0, 0, 0, 191,
	131, 0, 0, 0, 132, 0, 0, 133, 134, 0,
	0, 0, 0, 135, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 291,
	164, 174, 183, 201, 199, 211, 239, 260, 265, 290,
	320, 325, 340, 341, 342, 0, 0, 0, 0, 0,
	0, 158, 169, 246, 0, 303, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 362, 200, 0, 0,
	0, 170, 178, 186, 198, 208, 215, 226, 229, 233,
	234, 236, 240, 252, 254, 255, 256, 257, 275, 276,
	279, 280, 283, 284, 287, 288, 289, 292, 293, 299,
	147, 305, 311, 312, 313, 314, 315, 323, 324, 326,
	327, 334, 353, 354, 367, 368, 343, 0, 155, 0,
	0, 161, 0, 0, 0, 0, 0, 282, 160, 0,
	0, 0, 0, 0, 0, 0, 204, 0, 0, 0,
	0, 0, 0, 0, 203, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 944,
	365, 332, 266, 947, 946, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2795, 0, 0, 0, 0, 0, 0, 0, 0,
	137, 0, 0, 0, 0, 945, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 207, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	360, 0, 0, 0, 0, 298, 221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 0, 0, 0,
	237, 153, 0, 0, 0, 0, 0, 0, 0, 245,
	0, 154, 0, 0, 0, 278, 0, 0, 142, 157,
	0, 0, 0, 194, 0, 308, 0, 359, 943, 0,
	307, 248, 352, 0, 0, 358, 0, 339, 366, 370,
	214, 0, 185, 329, 205, 202, 0, 0, 0, 222,
	297, 197, 241, 0, 0, 0, 190, 0, 0, 0,
	328, 349, 159, 263, 350, 369, 176, 344, 264, 271,
	187, 189, 188, 171, 322, 348, 181, 192, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 223, 0,
	0, 363, 143, 317, 316, 0, 231, 0, 144, 136,
	304, 145, 238, 162, 0, 372, 175, 243, 345, 942,
	217, 277, 196, 0, 286, 0, 156, 300, 259, 261,
	258, 262, 220, 140, 146, 0, 302, 319, 347, 177,
	335, 138, 139, 141, 148, 310, 149, 150, 0, 253,
	209, 213, 225, 235, 0, 306, 336, 364, 0, 172,
	165, 338, 357, 182, 318, 321, 371, 0, 167, 0,
	0, 0, 0, 0, 0, 0, 166, 0, 0, 0,
	0, 0, 0, 219, 0, 355, 356, 195, 373, 0,
	0, 168, 0, 0, 274, 281, 273, 0, 351, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 212, 227,
	295, 250, 296, 228, 269, 268, 270, 251, 0, 0,
	163, 0, 333, 0, 0, 337, 179, 0, 0, 346,
	224, 301, 180, 218, 210, 294, 272, 173, 230, 331,
	242, 249, 0, 0, 285, 309, 184, 361, 330, 206,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 151, 152, 0, 0, 0, 191, 131, 0, 0,
	0, 132, 0, 0, 133, 134, 0, 0, 0, 0,
	135, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 164, 174, 183,
	201, 199, 211, 239, 260, 265, 290, 320, 325, 340,
	341, 342, 0, 0, 0, 0, 0, 0, 158, 169,
	246, 0, 303, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 362, 200, 0, 0, 0, 170, 178,
	186, 198, 208, 215, 226, 229, 233, 234, 236, 240,
	252, 254, 255, 256, 257, 275, 276, 279, 280, 283,
	284, 287, 288, 289, 292, 293, 299, 147, 305, 311,
	312, 313, 314, 315, 323, 324, 326, 327, 334, 353,
	354, 367, 368, 0, 0, 155, 36, 343, 161, 0,
	0, 0, 0, 0, 0, 160, 0, 0, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 204, 0, 0,
	0, 0, 0, 0, 0, 203, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2307, 247, 0,
	0, 365, 332, 266, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 77, 0,
	0, 0, 1962, 0, 0, 0, 0, 0, 0, 0,
	0, 137, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 207,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 360, 0, 0, 0, 0, 298, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 237, 153, 0, 0, 0, 0, 0, 0, 0,
	245, 0, 154, 0, 0, 0, 278, 0, 0, 142,
	157, 0, 0, 0, 194, 0, 308, 0, 359, 0,
	0, 307, 248, 352, 0, 0, 358, 0, 339, 366,
	370, 214, 0, 185, 329, 205, 202, 0, 0, 0,
	222, 297, 197, 241, 0, 0, 0, 190, 0, 0,
	0, 328, 349, 159, 263, 350, 369, 176, 344, 264,
	271, 187, 189, 188, 171, 322, 348, 181, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 223,
	0, 0, 363, 143, 317, 316, 0, 231, 0, 144,
	136, 304, 145, 238, 162, 0, 372, 175, 243, 345,
	128, 217, 277, 196, 0, 286, 0, 156, 300, 259,
	261, 258, 262, 220, 140, 146, 0, 302, 319, 347,
	177, 335, 138, 139, 141, 148, 310, 149, 150, 0,
	253, 209, 213, 225, 235, 0, 306, 336, 364, 0,
	172, 165, 338, 357, 182, 318, 321, 371, 0, 167,
	0, 0, 0, 0, 0, 0, 0, 166, 0, 0,
	0, 0, 0, 0, 219, 0, 355, 356, 195, 373,
	0, 0, 168, 0, 0, 274, 281, 273, 0, 351,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 212,
	227, 295, 250, 296, 228, 269, 268, 270, 251, 0,
	0, 163, 0, 333, 0, 0, 337, 179, 0, 0,
	346, 224, 301, 180, 218, 210, 294, 272, 173, 230,
	331, 242, 249, 0, 0, 285, 309, 184, 361, 330,
	206, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 151, 152, 0, 0, 0, 191, 131, 0,
	0, 0, 132, 0, 0, 133, 134, 0, 0, 0,
	0, 135, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1963, 291, 164, 174,
	183, 201, 199, 211, 239, 260, 265, 290, 320, 325,
	340, 341, 342, 0, 0, 0, 0, 0, 0, 158,
	169, 246, 477, 303, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 362, 200, 0, 0, 0, 170,
	178, 186, 198, 208, 215, 226, 229, 233, 234, 236,
	240, 252, 254, 255, 256, 257, 275, 276, 279, 280,
	283, 284, 287, 288, 289, 292, 293, 299, 147, 305,
	311, 312, 313, 314, 315, 323, 324, 326, 327, 334,
	353, 354, 367, 368, 343, 0, 155, 0, 0, 161,
	0, 0, 0, 0, 0, 282, 160, 0, 0, 0,
	0, 0, 0, 0, 204, 0, 0, 0, 0, 0,
	0, 0, 203, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 365, 332,
	266, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 77, 0, 0, 0, 1962,
	0, 0, 0, 0, 0, 0, 0, 0, 137, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 360, 0,
	0, 0, 0, 298, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 0, 237, 153,
	0, 0, 0, 0, 0, 0, 0, 245, 0, 154,
	0, 0, 0, 278, 0, 0, 142, 157, 0, 0,
	0, 194, 0, 308, 0, 359, 0, 0, 307, 248,
	352, 0, 0, 358, 0, 339, 366, 370, 214, 0,
	185, 329, 205, 202, 0, 0, 0, 222, 297, 197,
	241, 0, 0, 0, 190, 0, 0, 0, 328, 349,
	159, 263, 350, 369, 176, 344, 264, 271, 187, 189,
	188, 171, 322, 348, 181, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 223, 0, 0, 363,
	143, 317, 316, 0, 231, 0, 144, 136, 304, 145,
	238, 162, 0, 372, 175, 243, 345, 128, 217, 277,
	196, 0, 286, 0, 156, 300, 259, 261, 258, 262,
	220, 140, 146, 0, 302, 319, 347, 177, 335, 138,
	139, 141, 148, 310, 149, 150, 0, 253, 209, 213,
	225, 235, 0, 306, 336, 364, 0, 172, 165, 338,
	357, 182, 318, 321, 371, 0, 167, 0, 0, 0,
	0, 0, 0, 0, 166, 0, 0, 0, 0, 0,
	0, 219, 0, 355, 356, 195, 373, 0, 0, 168,
	0, 0, 274, 281, 273, 0, 351, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 212, 227, 295, 250,
	296, 228, 269, 268, 270, 251, 0, 0, 163, 0,
	333, 0, 0, 337, 179, 0, 0, 346, 224, 301,
	180, 218, 210, 294, 272, 173, 230, 331, 242, 249,
	0, 0, 285, 309, 184, 361, 330, 206, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 151,
	152, 0, 0, 0, 191, 131, 0, 0, 0, 132,
	0, 0, 133, 134, 0, 0, 0, 0, 135, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1963, 291, 164, 174, 183, 201, 199,
	211, 239, 260, 265, 290, 320, 325, 340, 341, 342,
	0, 0, 0, 0, 0, 0, 158, 169, 246, 0,
	303, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 362, 200, 0, 0, 0, 170, 178, 186, 198,
	208, 215, 226, 229, 233, 234, 236, 240, 252, 254,
	255, 256, 257, 275, 276, 279, 280, 283, 284, 287,
	288, 289, 292, 293, 299, 147, 305, 311, 312, 313,
	314, 315, 323, 324, 326, 327, 334, 353, 354, 367,
	368, 343, 0, 155, 0, 0, 161, 0, 0, 0,
	0, 0, 282, 160, 0, 0, 0, 0, 0, 0,
	0, 204, 0, 0, 0, 0, 0, 0, 0, 203,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 0, 0, 365, 332, 266, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 129, 0, 0, 0,
	0, 0, 0, 0, 0, 137, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 207, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 360, 0, 0, 0, 0,
	298, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	267, 0, 0, 0, 0, 237, 153, 0, 0, 0,
	0, 0, 0, 0, 245, 0, 154, 0, 0, 0,
	278, 0, 0, 142, 157, 0, 0, 0, 194, 0,
	308, 0, 359, 2110, 0, 307, 248, 352, 0, 0,
	358, 0, 339, 366, 370, 214, 0, 185, 329, 205,
	202, 0, 0, 0, 222, 297, 197, 241, 0, 0,
	0, 190, 0, 0, 0, 328, 349, 159, 263, 350,
	369, 176, 344, 264, 271, 187, 189, 188, 171, 322,
	348, 181, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 223, 0, 0, 363, 143, 317, 316,
	0, 231, 0, 144, 136, 304, 145, 238, 162, 0,
	372, 175, 243, 345, 128, 217, 277, 196, 0, 286,
	0, 156, 300, 259, 261, 258, 262, 220, 140, 146,
	0, 302, 319, 347, 177, 335, 138, 139, 141, 148,
	310, 149, 150, 0, 253, 209, 213, 225, 235, 0,
	306, 336, 364, 0, 172, 165, 338, 357, 182, 318,
	321, 371, 0, 167, 0, 0, 0, 0, 0, 0,
	0, 166, 0, 0, 0, 0, 0, 0, 219, 0,
	355, 356, 195, 373, 0, 0, 168, 0, 0, 274,
	281, 273, 0, 351, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 212, 227, 295, 250, 296, 228, 269,
	268, 270, 251, 0, 0, 163, 0, 333, 0, 0,
	337, 179, 0, 0, 346, 224, 301, 180, 218, 210,
	294, 272, 173, 230, 331, 242, 249, 0, 0, 285,
	309, 184, 361, 330, 206, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 151, 152, 0, 0,
	0, 191, 131, 0, 0, 0, 132, 0, 0, 133,
	134, 0, 0, 0, 0, 135, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 291, 164, 174, 183, 201, 199, 211, 239, 260,
	265, 290, 320, 325, 340, 341, 342, 0, 0, 0,
	0, 0, 0, 158, 169, 246, 0, 303, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 362, 200,
	0, 0, 0, 170, 178, 186, 198, 208, 215, 226,
	229, 233, 234, 236, 240, 252, 254, 255, 256, 257,
	275, 276, 279, 280, 283, 284, 287, 288, 289, 292,
	293, 299, 147, 305, 311, 312, 313, 314, 315, 323,
	324, 326, 327, 334, 353, 354, 367, 368, 343, 0,
	155, 0, 0, 161, 0, 0, 0, 0, 0, 282,
	160, 0, 0, 0, 0, 0, 0, 0, 204, 0,
	0, 0, 0, 0, 0, 0, 203, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 0, 365, 332, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 129, 0, 0, 0, 0, 0, 0,
	0, 0, 137, 0, 0, 0, 0, 0, 1949, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	207, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 0, 0, 0, 0, 298, 221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 267, 0, 0,
	0, 0, 237, 153, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 154, 0, 0, 0, 278, 0, 0,
	142, 157, 0, 0, 0, 194, 0, 308, 0, 359,
	0, 0, 307, 248, 352, 0, 0, 358, 0, 339,
	366, 370, 214, 0, 185, 329, 205, 202, 0, 0,
	0, 222, 297, 197, 241, 0, 0, 0, 190, 0,
	0, 0, 328, 349, 159, 263, 350, 369, 176, 344,
	264, 271, 187, 189, 188, 171, 322, 348, 181, 192,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	223, 0, 0, 363, 143, 317, 316, 0, 231, 0,
	144, 136, 304, 145, 238, 162, 0, 372, 175, 243,
	345, 128, 217, 277, 196, 0, 286, 0, 156, 300,
	259, 261, 258, 262, 220, 140, 146, 0, 302, 319,
	347, 177, 335, 138, 139, 141, 148, 310, 149, 150,
	0, 253, 209, 213, 225, 235, 0, 306, 336, 364,
	0, 172, 165, 338, 357, 182, 318, 321, 371, 0,
	167, 0, 0, 0, 0, 0, 0, 0, 166, 0,
	0, 0, 0, 0, 0, 219, 0, 355, 356, 195,
	373, 0, 0, 168, 0, 0, 274, 281, 273, 0,
	351, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	212, 227, 295, 250, 296, 228, 269, 268, 270, 251,
	0, 0, 163, 0, 333, 0, 0, 337, 179, 0,
	0, 346, 224, 301, 180, 218, 210, 294, 272, 173,
	230, 331, 242, 249, 0, 0, 285, 309, 184, 361,
	330, 206, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 151, 152, 0, 0, 0, 191, 131,
	0, 0, 0, 132, 0, 0, 133, 134, 0, 0,
	0, 0, 135, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 291, 164,
	174, 183, 201, 199, 211, 239, 260, 265, 290, 320,
	325, 340, 341, 342, 0, 0, 0, 0, 0, 0,
	158, 169, 246, 0, 303, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 362, 200, 0, 0, 0,
	170, 178, 186, 198, 208, 215, 226, 229, 233, 234,
	236, 240, 252, 254, 255, 256, 257, 275, 276, 279,
	280, 283, 284, 287, 288, 289, 292, 293, 299, 147,
	305, 311, 312, 313, 314, 315, 323, 324, 326, 327,
	334, 353, 354, 367, 368, 343, 0, 155, 0, 1287,
	161, 0, 0, 0, 0, 0, 282, 160, 0, 0,
	0, 0, 0, 0, 0, 204, 0, 0, 0, 0,
	0, 0, 0, 203, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 0, 0, 365,
	332, 266, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	129, 0, 0, 0, 0, 0, 0, 0, 0, 137,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 207, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 360,
	0, 0, 0, 0, 298, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 237,
	153, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	154, 0, 0, 0, 278, 0, 0, 142, 157, 0,
	0, 0, 194, 0, 308, 0, 359, 0, 0, 307,
	248, 352, 0, 0, 358, 0, 339, 366, 370, 214,
	0, 185, 329, 205, 202, 0, 0, 0, 222, 297,
	197, 241, 0, 0, 0, 190, 0, 0, 0, 328,
	349, 159, 263, 350, 369, 176, 344, 264, 271, 187,
	189, 188, 171, 322, 348, 181, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 223, 0, 0,
	363, 143, 317, 316, 0, 231, 0, 144, 136, 304,
	145, 238, 162, 0, 372, 175, 243, 345, 128, 217,
	277, 196, 0, 286, 0, 156, 300, 259, 261, 258,
	262, 220, 140, 146, 0, 302, 319, 347, 177, 335,
	138, 139, 141, 148, 310, 149, 150, 0, 253, 209,
	213, 225, 235, 0, 306, 336, 364, 0, 172, 165,
	338, 357, 182, 318, 321, 371, 0, 167, 0, 0,
	0, 0, 0, 0, 0, 166, 0, 0, 0, 0,
	0, 0, 219, 0, 355, 356, 195, 373, 0, 0,
	168, 0, 0, 274, 281, 273, 0, 351, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 212, 227, 295,
	250, 296, 228, 269, 268, 270, 251, 0, 0, 163,
	0, 333, 0, 0, 337, 179, 0, 0, 346, 224,
	301, 180, 218, 210, 294, 272, 173, 230, 331, 242,
	249, 0, 0, 285, 309, 184, 361, 330, 206, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	151, 152, 0, 0, 0, 191, 131, 0, 0, 0,
	132, 0, 0, 133, 134, 0, 0, 0, 0, 135,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 291, 164, 174, 183, 201,
	199, 211, 239, 260, 265, 290, 320, 325, 340, 341,
	342, 0, 0, 0, 0, 0, 0, 158, 169, 246,
	0, 303, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 362, 200, 0, 0, 0, 170, 178, 186,
	198, 208, 215, 226, 229, 233, 234, 236, 240, 252,
	254, 255, 256, 257, 275, 276, 279, 280, 283, 284,
	287, 288, 289, 292, 293, 299, 147, 305, 311, 312,
	313, 314, 315, 323, 324, 326, 327, 334, 353, 354,
	367, 368, 343, 0, 155, 0, 0, 161, 0, 0,
	0, 0, 0, 282, 160, 0, 0, 0, 0, 0,
	0, 0, 204, 0, 0, 0, 0, 0, 0, 0,
	203, 193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 365, 332, 266, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 129, 0, 0,
	0, 0, 0, 0, 0, 0, 137, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 207, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 360, 0, 0, 0,
	0, 298, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 123, 0, 237, 153, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 154, 0, 0,
	0, 278, 0, 0, 142, 157, 0, 0, 0, 194,
	0, 308, 0, 359, 0, 0, 307, 248, 352, 0,
	0, 358, 0, 339, 366, 370, 214, 0, 185, 329,
	205, 202, 0, 0, 0, 222, 297, 197, 241, 0,
	0, 0, 190, 0, 0, 0, 328, 349, 159, 263,
	350, 369, 176, 344, 264, 271, 187, 189, 188, 171,
	322, 348, 181, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 223, 0, 0, 363, 143, 317,
	316, 0, 231, 0, 144, 136, 304, 145, 238, 162,
	0, 372, 175, 243, 345, 128, 217, 277, 196, 0,
	286, 0, 156, 300, 259, 261, 258, 262, 220, 140,
	146, 0, 302, 319, 347, 177, 335, 138, 139, 141,
	148, 310, 149, 150, 0, 253, 209, 213, 225, 235,
	0, 306, 336, 364, 0, 172, 165, 338, 357, 182,
	318, 321, 371, 0, 167, 0, 0, 0, 0, 0,
	0, 0, 166, 0, 0, 0, 0, 0, 0, 219,
	0, 355, 356, 195, 373, 0, 0, 168, 0, 0,
	274, 281, 273, 0, 351, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 212, 227, 295, 250, 296, 228,
	269, 268, 270, 251, 0, 0, 163, 0, 333, 0,
	0, 337, 179, 0, 0, 346, 224, 301, 180, 218,
	210, 294, 272, 173, 230, 331, 242, 249, 0, 0,
	285, 309, 184, 361, 330, 206, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 151, 152, 0,
	0, 0, 191, 131, 0, 0, 0, 132, 0, 0,
	133, 134, 0, 0, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 164, 174, 183, 201, 199, 211, 239,
	260, 265, 290, 320, 325, 340, 341, 342, 0, 0,
	0, 0, 0, 0, 158, 169, 246, 0, 303, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 362,
	200, 0, 0, 0, 170, 178, 186, 198, 208, 215,
	226, 229, 233, 234, 236, 240, 252, 254, 255, 256,
	257, 275, 276, 279, 280, 283, 284, 287, 288, 289,
	292, 293, 299, 147, 305, 311, 312, 313, 314, 315,
	323, 324, 326, 327, 334, 353, 354, 367, 368, 343,
	0, 155, 0, 0, 161, 0, 0, 0, 0, 0,
	282, 160, 0, 0, 0, 0, 0, 0, 0, 204,
	0, 0, 0, 0, 0, 0, 0, 203, 193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 0, 0, 365, 332, 266, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 129, 0, 0, 0, 0, 0,
	0, 0, 0, 137, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 207, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 360, 0, 0, 0, 0, 298, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 237, 153, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 154, 0, 0, 0, 278, 0,
	0, 142, 157, 0, 0, 0, 194, 0, 308, 0,
	359, 0, 0, 307, 248, 352, 0, 0, 358, 0,
	339, 366, 370, 214, 0, 185, 329, 205, 202, 0,
	0, 0, 222, 297, 197, 241, 0, 0, 0, 190,
	0, 0, 0, 328, 349, 159, 263, 350, 369, 176,
	344, 264, 271, 187, 189, 188, 171, 322, 348, 181,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 223, 0, 0, 363, 143, 317, 316, 0, 231,
	0, 144, 136, 304, 145, 238, 162, 0, 372, 175,
	243, 345, 128, 217, 277, 196, 0, 286, 0, 156,
	300, 259, 261, 258, 262, 220, 140, 146, 0, 302,
	319, 347, 177, 335, 138, 139, 141, 148, 310, 149,
	150, 0, 253, 209, 213, 225, 235, 0, 306, 336,
	364, 0, 172, 165, 338, 357, 182, 318, 321, 371,
	0, 167, 0, 0, 0, 0, 0, 0, 0, 166,
	0, 0, 0, 0, 0, 0, 219, 0, 355, 356,
	195, 373, 0, 0, 168, 0, 0, 274, 281, 273,
	0, 351, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 212, 227, 295, 250, 296, 228, 269, 268, 270,
	251, 0, 0, 163, 0, 333, 0, 0, 337, 179,
	0, 0, 346, 224, 301, 180, 218, 210, 294, 272,
	173, 230, 331, 242, 249, 0, 0, 285, 309, 184,
	361, 330, 206, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 151, 152, 0, 0, 0, 191,
	131, 0, 0, 0, 132, 0, 0, 133, 134, 0,
	0, 0, 0, 135, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 291,
	164, 174, 183, 201, 199, 211, 239, 260, 265, 290,
	320, 325, 340, 341, 342, 0, 0, 0, 0, 0,
	0, 158, 169, 246, 0, 303, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 362, 200, 0, 0,
	0, 170, 178, 186, 198, 208, 215, 226, 229, 233,
	234, 236, 240, 252, 254, 255, 256, 257, 275, 276,
	279, 280, 283, 284, 287, 288, 289, 292, 293, 299,
	147, 305, 311, 312, 313, 314, 315, 323, 324, 326,
	327, 334, 353, 354, 367, 368, 0, 0, 155, 0,
	0, 161, 443, 343, 437, 448, 431, 0, 160, 0,
	0, 0, 0, 0, 282, 0, 0, 454, 0, 0,
	0, 0, 0, 204, 0, 0, 438, 0, 0, 0,
	0, 203, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 0, 0, 365, 332, 266,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 452, 0,
	451, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 207, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 0, 0,
	0, 0, 298, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 430, 429, 432, 0,
	0, 0, 267, 0, 0, 0, 436, 237, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 154, 0,
	0, 0, 278, 440, 0, 0, 157, 444, 0, 0,
	194, 0, 308, 0, 359, 0, 0, 307, 248, 352,
	0, 447, 358, 0, 339, 366, 370, 214, 0, 185,
	329, 205, 202, 0, 0, 0, 222, 297, 197, 241,
	0, 0, 0, 190, 0, 0, 0, 328, 349, 159,
	263, 350, 369, 176, 344, 264, 271, 187, 189, 188,
	171, 322, 348, 181, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 223, 0, 0, 363, 0,
	317, 316, 0, 231, 0, 0, 0, 304, 0, 238,
	162, 0, 372, 175, 243, 345, 0, 217, 277, 196,
	0, 286, 0, 156, 300, 259, 261, 258, 262, 220,
	0, 0, 0, 457, 319, 347, 177, 335, 433, 434,
	435, 441, 442, 445, 446, 449, 253, 209, 213, 225,
	235, 0, 306, 336, 364, 0, 172, 165, 338, 357,
	182, 318, 321, 371, 0, 167, 0, 0, 0, 0,
	0, 0, 0, 166, 0, 0, 0, 0, 0, 0,
	219, 0, 355, 356, 195, 373, 0, 0, 168, 0,
	0, 274, 281, 273, 0, 351, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 212, 227, 295, 250, 296,
	228, 269, 268, 270, 251, 0, 0, 163, 0, 333,
	0, 0, 337, 179, 0, 0, 346, 224, 301, 180,
	218, 210, 294, 272, 173, 230, 331, 242, 249, 0,
	0, 285, 309, 184, 361, 330, 206, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 291, 164, 174, 183, 201, 199, 211,
	239, 260, 265, 290, 320, 325, 340, 341, 342, 0,
	0, 0, 0, 0, 0, 158, 169, 246, 0, 303,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	362, 200, 0, 0, 0, 170, 178, 186, 198, 208,
	215, 226, 229, 233, 234, 236, 240, 252, 254, 255,
	256, 257, 275, 276, 279, 280, 283, 284, 287, 288,
	289, 292, 293, 299, 439, 305, 311, 312, 313, 314,
	315, 323, 324, 326, 327, 334, 353, 354, 367, 368,
	0, 0, 155, 0, 0, 161, 443, 343, 437, 448,
	431, 0, 160, 0, 0, 0, 0, 0, 282, 0,
	0, 423, 0, 0, 0, 0, 0, 204, 0, 0,
	438, 0, 0, 0, 0, 203, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 0,
	0, 365, 332, 266, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 452, 0, 451, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 207,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 360, 0, 0, 0, 0, 298, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	430, 429, 432, 0, 0, 0, 267, 0, 0, 0,
	436, 237, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 0, 154, 0, 0, 0, 278, 440, 0, 0,
	157, 444, 0, 0, 194, 0, 308, 0, 359, 0,
	0, 307, 248, 352, 0, 447, 358, 0, 339, 366,
	370, 214, 0, 185, 329, 205, 202, 0, 0, 0,
	222, 297, 197, 241, 0, 0, 0, 190, 0, 0,
	0, 328, 349, 159, 263, 350, 369, 176, 344, 264,
	271, 187, 189, 188, 171, 322, 348, 181, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 223,
	0, 0, 363, 0, 317, 316, 0, 231, 0, 0,
	0, 304, 0, 238, 162, 0, 372, 175, 243, 345,
	0, 217, 277, 196, 0, 286, 0, 156, 300, 259,
	261, 258, 262, 220, 0, 0, 0, 426, 319, 347,
	177, 335, 433, 434, 435, 441, 442, 445, 446, 449,
	253, 209, 213, 225, 235, 0, 306, 336, 364, 0,
	172, 165, 338, 357, 182, 318, 321, 371, 0, 167,
	0, 0, 0, 0, 0, 0, 0, 166, 0, 0,
	0, 0, 0, 0, 219, 0, 355, 356, 195, 373,
	0, 0, 168, 0, 0, 274, 281, 273, 0, 351,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 212,
	227, 295, 250, 296, 228, 269, 268, 270, 251, 0,
	0, 163, 0, 333, 0, 0, 337, 179, 0, 0,
	346, 224, 301, 180, 218, 210, 294, 272, 173, 230,
	331, 242, 249, 0, 0, 285, 309, 184, 361, 330,
	206, 0, 0, 0, 0, 0, 0, 0, 343, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 0, 0, 0, 0, 0, 0, 191, 204, 0,
	0, 0, 0, 0, 0, 0, 203, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 0, 365, 332, 266, 0, 0, 291, 164, 174,
	183, 201, 199, 211, 239, 260, 265, 290, 320, 325,
	340, 341, 342, 940, 0, 0, 0, 0, 0, 158,
	169, 246, 0, 303, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	207, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 0, 0, 0, 0, 298, 221, 1172,
	1171, 1181, 1182, 1174, 1175, 1176, 1177, 1178, 1179, 1180,
	1173, 0, 0, 1183, 362, 200, 0, 0, 0, 170,
	178, 186, 198, 208, 215, 226, 229, 233, 234, 236,
	240, 252, 254, 255, 256, 257, 275, 276, 279, 280,
	283, 284, 287, 288, 289, 292, 293, 299, 439, 305,
	311, 312, 313, 314, 315, 323, 324, 326, 327, 334,
	353, 354, 367, 368, 0, 0, 155, 267, 0, 161,
	0, 0, 237, 0, 0, 0, 160, 0, 0, 0,
	0, 245, 0, 154, 0, 0, 0, 278, 0, 0,
	0, 157, 0, 0, 0, 194, 0, 308, 0, 359,
	0, 0, 307, 248, 352, 0, 0, 358, 0, 339,
	366, 370, 214, 0, 185, 329, 205, 202, 0, 0,
	0, 222, 297, 197, 241, 0, 0, 0, 190, 0,
	0, 0, 328, 349, 159, 263, 350, 369, 176, 344,
	264, 271, 187, 189, 188, 171, 322, 348, 181, 192,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	223, 0, 0, 363, 0, 317, 316, 0, 231, 0,
	0, 0, 304, 0, 238, 162, 0, 372, 175, 243,
	345, 0, 217, 277, 196, 0, 286, 0, 156, 300,
	259, 261, 258, 262, 220, 0, 0, 0, 302, 319,
	347, 177, 335, 0, 0, 0, 0, 310, 0, 0,
	0, 253, 209, 213, 225, 235, 0, 306, 336, 364,
	0, 172, 165, 338, 357, 182, 318, 321, 371, 0,
	167, 0, 0, 0, 0, 0, 0, 0, 166, 0,
	0, 0, 0, 0, 0, 219, 0, 355, 356, 195,
	373, 0, 0, 168, 0, 0, 274, 281, 273, 0,
	351, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	212, 227, 295, 250, 296, 228, 269, 268, 270, 251,
	0, 0, 163, 0, 333, 0, 0, 337, 179, 0,
	0, 346, 224, 301, 180, 218, 210, 294, 272, 173,
	230, 331, 242, 249, 0, 0, 285, 309, 184, 361,
	330, 206, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 291, 164,
	174, 183, 201, 199, 211, 239, 260, 265, 290, 320,
	325, 340, 341, 342, 0, 0, 0, 0, 0, 0,
	158, 169, 246, 0, 303, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 362, 200, 0, 0, 0,
	170, 178, 186, 198, 208, 215, 226, 229, 233, 234,
	236, 240, 252, 254, 255, 256, 257, 275, 276, 279,
	280, 283, 284, 287, 288, 289, 292, 293, 299, 0,
	305, 311, 312, 313, 314, 315, 323, 324, 326, 327,
	334, 353, 354, 367, 368, 343, 0, 155, 0, 0,
	161, 0, 0, 0, 0, 0, 282, 160, 0, 0,
	0, 2312, 0, 0, 0, 204, 0, 0, 0, 0,
	0, 0, 0, 203, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 0, 0, 365,
	332, 266, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2314, 2316, 0, 0, 0, 0, 0, 0,
	129, 0, 469, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 207, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 360,
	2310, 0, 0, 0, 298, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 237,
	0, 0, 2315, 0, 0, 0, 0, 0, 245, 0,
	154, 0, 0, 0, 278, 0, 0, 0, 157, 0,
	0, 0, 194, 0, 308, 0, 359, 0, 0, 307,
	248, 352, 0, 0, 358, 0, 339, 366, 370, 214,
	0, 185, 329, 205, 202, 0, 0, 0, 222, 297,
	197, 241, 0, 0, 0, 190, 0, 0, 0, 328,
	349, 159, 263, 350, 369, 176, 344, 264, 271, 187,
	189, 188, 171, 322, 348, 181, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 223, 0, 0,
	363, 0, 317, 316, 0, 231, 0, 0, 0, 304,
	0, 238, 162, 0, 372, 175, 243, 345, 0, 217,
	277, 196, 0, 286, 0, 156, 300, 259, 261, 258,
	262, 220, 0, 0, 0, 302, 319, 347, 177, 335,
	0, 0, 0, 0, 310, 0, 0, 0, 253, 209,
	213, 225, 235, 0, 306, 336, 364, 0, 172, 165,
	338, 357, 182, 318, 321, 371, 0, 167, 0, 0,
	0, 0, 0, 0, 0, 166, 0, 0, 0, 0,
	0, 0, 219, 0, 355, 356, 195, 373, 0, 0,
	168, 0, 0, 274, 281, 273, 0, 351, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 212, 227, 295,
	250, 296, 228, 269, 268, 270, 251, 0, 0, 163,
	0, 333, 0, 0, 337, 179, 0, 0, 346, 224,
	301, 180, 218, 210, 294, 272, 173, 230, 331, 242,
	249, 0, 0, 285, 309, 184, 361, 330, 206, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 191, 131, 0, 0, 0,
	132, 0, 0, 133, 134, 0, 0, 0, 0, 135,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 291, 164, 174, 183, 201,
	199, 211, 239, 260, 265, 290, 320, 325, 340, 341,
	342, 0, 0, 0, 0, 0, 0, 158, 169, 246,
	0, 303, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 362, 200, 0, 0, 0, 170, 178, 186,
	198, 208, 215, 226, 229, 233, 234, 236, 240, 252,
	254, 255, 256, 257, 275, 276, 279, 280, 283, 284,
	287, 288, 289, 292, 293, 299, 0, 305, 311, 312,
	313, 314, 315, 323, 324, 326, 327, 334, 353, 354,
	367, 368, 343, 0, 155, 0, 0, 161, 0, 0,
	0, 0, 0, 282, 160, 0, 0, 0, 2312, 0,
	0, 0, 204, 0, 0, 0, 0, 0, 0, 0,
	203, 193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 365, 332, 266, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2314,
	2316, 0, 0, 0, 0, 0, 0, 129, 0, 469,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 207, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 360, 0, 0, 0,
	0, 298, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 0, 237, 0, 0, 2315,
	0, 0, 0, 0, 0, 245, 0, 154, 0, 0,
	0, 278, 0, 0, 0, 157, 0, 0, 0, 194,
	0, 308, 0, 359, 0, 0, 307, 248, 352, 0,
	0, 358, 0, 339, 366, 370, 214, 0, 185, 329,
	205, 202, 0, 0, 0, 222, 297, 197, 241, 0,
	0, 0, 190, 0, 0, 0, 328, 349, 159, 263,
	350, 369, 176, 344, 264, 271, 187, 189, 188, 171,
	322, 348, 181, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 223, 0, 0, 363, 0, 317,
	316, 0, 231, 0, 0, 0, 304, 0, 238, 162,
	0, 372, 175, 243, 345, 0, 217, 277, 196, 0,
	286, 0, 156, 300, 259, 261, 258, 262, 220, 0,
	0, 0, 302, 319, 347, 177, 335, 0, 0, 0,
	0, 310, 0, 0, 0, 253, 209, 213, 225, 235,
	0, 306, 336, 364, 0, 172, 165, 338, 357, 182,
	318, 321, 371, 0, 167, 0, 0, 0, 0, 0,
	0, 0, 166, 0, 0, 0, 0, 0, 0, 219,
	0, 355, 356, 195, 373, 0, 0, 168, 0, 0,
	274, 281, 273, 0, 351, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 212, 227, 295, 250, 296, 228,
	269, 268, 270, 251, 0, 0, 163, 0, 333, 0,
	0, 337, 179, 0, 0, 346, 224, 301, 180, 218,
	210, 294, 272, 173, 230, 331, 242, 249, 0, 0,
	285, 309, 184, 361, 330, 206, 0, 0, 0, 0,
	0, 0, 0, 0, 343, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 0, 0, 0,
	0, 0, 191, 131, 204, 0, 0, 132, 0, 0,
	133, 134, 203, 193, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 365, 332,
	266, 0, 291, 164, 174, 183, 201, 199, 211, 239,
	260, 265, 290, 320, 325, 340, 341, 342, 0, 129,
	0, 469, 0, 0, 158, 169, 246, 0, 303, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 360, 0,
	0, 0, 0, 298, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 362,
	200, 0, 0, 0, 170, 178, 186, 198, 208, 215,
	226, 229, 233, 234, 236, 240, 252, 254, 255, 256,
	257, 275, 276, 279, 280, 283, 284, 287, 288, 289,
	292, 293, 299, 0, 305, 311, 312, 313, 314, 315,
	323, 324, 326, 327, 334, 353, 354, 367, 368, 0,
	0, 155, 0, 267, 161, 0, 0, 0, 237, 0,
	0, 160, 0, 0, 0, 0, 0, 245, 0, 154,
	0, 0, 0, 278, 0, 0, 0, 157, 0, 0,
	0, 194, 0, 308, 0, 359, 0, 0, 307, 248,
	352, 0, 0, 358, 0, 339, 366, 370, 214, 0,
	185, 329, 205, 202, 0, 0, 0, 222, 297, 197,
	241, 0, 0, 0, 190, 0, 0, 0, 328, 349,
	159, 263, 350, 369, 176, 344, 264, 271, 187, 189,
	188, 171, 322, 348, 181, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 223, 0, 0, 363,
	0, 317, 316, 0, 231, 0, 0, 0, 304, 0,
	238, 162, 0, 372, 175, 243, 345, 0, 217, 277,
	196, 0, 286, 0, 156, 300, 259, 261, 258, 262,
	220, 0, 0, 0, 302, 319, 347, 177, 335, 0,
	0, 0, 0, 310, 0, 0, 0, 253, 209, 213,
	225, 235, 0, 306, 336, 364, 0, 172, 165, 338,
	357, 182, 318, 321, 371, 0, 167, 0, 0, 0,
	0, 0, 0, 0, 166, 0, 0, 0, 0, 0,
	0, 219, 0, 355, 356, 195, 373, 0, 0, 168,
	0, 0, 274, 281, 273, 0, 351, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 212, 227, 295, 250,
	296, 228, 269, 268, 270, 251, 0, 0, 163, 0,
	333, 0, 0, 337, 179, 0, 0, 346, 224, 301,
	180, 218, 210, 294, 272, 173, 230, 331, 242, 249,
	0, 0, 285, 309, 184, 361, 330, 206, 0, 0,
	0, 0, 0, 0, 0, 0, 343, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 0,
	0, 0, 3432, 0, 191, 131, 204, 0, 0, 132,
	0, 0, 133, 134, 203, 193, 0, 0, 135, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 0,
	365, 332, 266, 0, 291, 164, 174, 183, 201, 199,
	211, 239, 260, 265, 290, 320, 325, 340, 341, 342,
	0, 129, 0, 469, 0, 0, 158, 169, 246, 0,
	303, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 207, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	360, 0, 0, 0, 0, 298, 221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 362, 200, 0, 0, 463, 170, 178, 186, 198,
	208, 215, 226, 229, 233, 234, 236, 240, 252, 254,
	255, 256, 257, 275, 276, 279, 280, 283, 284, 287,
	288, 289, 292, 293, 299, 0, 305, 311, 312, 313,
	314, 315, 323, 324, 326, 327, 334, 353, 354, 367,
	368, 0, 0, 155, 0, 267, 161, 0, 0, 0,
	237, 0, 0, 160, 0, 0, 0, 0, 0, 245,
	0, 154, 0, 0, 0, 278, 0, 0, 0, 157,
	0, 0, 0, 194, 0, 308, 0, 359, 0, 0,
	307, 248, 352, 0, 0, 358, 0, 339, 366, 370,
	214, 0, 185, 329, 205, 202, 0, 0, 0, 222,
	297, 197, 241, 0, 0, 0, 190, 0, 0, 0,
	328, 349, 159, 263, 350, 369, 176, 344, 264, 271,
	187, 189, 188, 171, 322, 348, 181, 192, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 223, 0,
	0, 363, 0, 317, 316, 0, 231, 0, 0, 0,
	304, 0, 238, 162, 0, 372, 175, 243, 345, 0,
	217, 277, 196, 0, 286, 0, 156, 300, 259, 261,
	258, 262, 220, 0, 0, 0, 302, 319, 347, 177,
	335, 0, 0, 0, 0, 310, 0, 0, 0, 253,
	209, 213, 225, 235, 0, 306, 336, 364, 0, 172,
	165, 338, 357, 182, 318, 321, 371, 0, 167, 0,
	0, 0, 0, 0, 0, 0, 166, 0, 0, 0,
	0, 0, 0, 219, 0, 355, 356, 195, 373, 0,
	0, 168, 0, 0, 274, 281, 273, 0, 351, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 212, 227,
	295, 250, 296, 228, 269, 268, 270, 251, 0, 0,
	163, 0, 333, 0, 0, 337, 179, 0, 0, 346,
	224, 301, 180, 218, 210, 294, 272, 173, 230, 331,
	242, 249, 0, 0, 285, 309, 184, 361, 330, 206,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 191, 131, 0, 0,
	0, 132, 0, 0, 133, 134, 0, 0, 0, 0,
	135, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 164, 174, 183,
	201, 199, 211, 239, 260, 265, 290, 320, 325, 340,
	341, 342, 0, 0, 0, 0, 0, 0, 158, 169,
	246, 0, 303, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 362, 200, 0, 0, 0, 170, 178,
	186, 198, 208, 215, 226, 229, 233, 234, 236, 240,
	252, 254, 255, 256, 257, 275, 276, 279, 280, 283,
	284, 287, 288, 289, 292, 293, 299, 0, 305, 311,
	312, 313, 314, 315, 323, 324, 326, 327, 334, 353,
	354, 367, 368, 343, 0, 155, 0, 0, 161, 0,
	0, 0, 0, 0, 282, 160, 0, 0, 0, 0,
	0, 0, 0, 204, 0, 0, 0, 0, 0, 2641,
	0, 203, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 0, 0, 365, 332, 266,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 129, 0,
	469, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 207, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 0, 0,
	0, 0, 298, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 267, 0, 0, 0, 0, 237, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 154, 0,
	0, 0, 278, 0, 0, 0, 157, 0, 0, 0,
	194, 0, 308, 0, 359, 0, 0, 307, 248, 352,
	0, 0, 358, 0, 339, 366, 370, 214, 0, 185,
	329, 205, 202, 0, 0, 0, 222, 297, 197, 241,
	0, 0, 0, 190, 0, 0, 0, 328, 349, 159,
	263, 350, 369, 176, 344, 264, 271, 187, 189, 188,
	171, 322, 348, 181, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 223, 0, 0, 363, 0,
	317, 316, 0, 231, 0, 0, 0, 304, 0, 238,
	162, 0, 372, 175, 243, 345, 0, 217, 277, 196,
	0, 286, 0, 156, 300, 259, 261, 258, 262, 220,
	0, 0, 0, 302, 319, 347, 177, 335, 0, 0,
	0, 0, 310, 0, 0, 0, 253, 209, 213, 225,
	235, 0, 306, 336, 364, 0, 172, 165, 338, 357,
	182, 318, 321, 371, 0, 167, 0, 0, 0, 0,
	0, 0, 0, 166, 0, 0, 0, 0, 0, 0,
	219, 0, 355, 356, 195, 373, 0, 0, 168, 0,
	0, 274, 281, 273, 0, 351, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 212, 227, 295, 250, 296,
	228, 269, 268, 270, 251, 0, 0, 163, 0, 333,
	0, 0, 337, 179, 0, 0, 346, 224, 301, 180,
	218, 210, 294, 272, 173, 230, 331, 242, 249, 0,
	0, 285, 309, 184, 361, 330, 206, 0, 0, 0,
	0, 0, 0, 0, 0, 343, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 191, 131, 204, 0, 0, 132, 0,
	0, 133, 134, 203, 193, 0, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 0, 0, 365,
	332, 266, 0, 291, 164, 174, 183, 201, 199, 211,
	239, 260, 265, 290, 320, 325, 340, 341, 342, 0,
	129, 0, 469, 0, 0, 158, 169, 246, 0, 303,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 207, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 360,
	0, 0, 0, 0, 298, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	362, 200, 0, 0, 0, 170, 178, 186, 198, 208,
	215, 226, 229, 233, 234, 236, 240, 252, 254, 255,
	256, 257, 275, 276, 279, 280, 283, 284, 287, 288,
	289, 292, 293, 299, 0, 305, 311, 312, 313, 314,
	315, 323, 324, 326, 327, 334, 353, 354, 367, 368,
	0, 0, 155, 0, 267, 161, 0, 0, 0, 237,
	0, 0, 160, 0, 0, 0, 0, 0, 245, 0,
	154, 0, 0, 0, 278, 0, 0, 0, 157, 0,
	0, 0, 194, 0, 308, 0, 359, 0, 0, 307,
	248, 352, 0, 0, 358, 0, 339, 366, 370, 214,
	0, 185, 329, 205, 202, 0, 0, 0, 222, 297,
	197, 241, 0, 0, 0, 190, 0, 0, 0, 328,
	349, 159, 263, 350, 369, 176, 344, 264, 271, 187,
	189, 188, 171, 322, 348, 181, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 223, 0, 0,
	363, 0, 317, 316, 0, 231, 0, 0, 0, 304,
	0, 238, 162, 0, 372, 175, 243, 345, 0, 217,
	277, 196, 0, 286, 0, 156, 300, 259, 261, 258,
	262, 220, 0, 0, 0, 302, 319, 347, 177, 335,
	0, 0, 0, 0, 310, 0, 0, 0, 253, 209,
	213, 225, 235, 0, 306, 336, 364, 0, 172, 165,
	338, 357, 182, 318, 321, 371, 0, 167, 0, 0,
	0, 0, 0, 0, 0, 166, 0, 0, 0, 0,
	0, 0, 219, 0, 355, 356, 195, 373, 0, 0,
	168, 0, 0, 274, 281, 273, 0, 351, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 212, 227, 295,
	250, 296, 228, 269, 268, 270, 251, 0, 0, 163,
	0, 333, 0, 0, 337, 179, 0, 0, 346, 224,
	301, 180, 218, 210, 294, 272, 173, 230, 331, 242,
	249, 0, 0, 285, 309, 184, 361, 330, 206, 0,
	0, 0, 0, 0, 0, 0, 0, 343, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 0,
	0, 0, 0, 0, 0, 191, 131, 204, 0, 0,
	132, 0, 0, 133, 134, 203, 193, 0, 0, 135,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 0,
	0, 365, 332, 266, 0, 291, 164, 174, 183, 201,
	199, 211, 239, 260, 265, 290, 320, 325, 340, 341,
	342, 0, 940, 0, 0, 0, 0, 158, 169, 246,
	0, 303, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 207,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 360, 0, 0, 0, 0, 298, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 362, 200, 0, 0, 0, 170, 178, 186,
	198, 208, 215, 226, 229, 233, 234, 236, 240, 252,
	254, 255, 256, 257, 275, 276, 279, 280, 283, 284,
	287, 288, 289, 292, 293, 299, 0, 305, 311, 312,
	313, 314, 315, 323, 324, 326, 327, 334, 353, 354,
	367, 368, 0, 0, 155, 0, 267, 161, 0, 0,
	0, 237, 0, 0, 160, 0, 0, 0, 0, 0,
	245, 0, 154, 0, 0, 0, 278, 0, 0, 0,
	157, 0, 0, 0, 194, 0, 308, 0, 359, 0,
	0, 307, 248, 352, 0, 0, 358, 0, 339, 366,
	370, 214, 0, 185, 329, 205, 202, 0, 0, 0,
	222, 297, 197, 241, 0, 0, 0, 190, 0, 0,
	0, 328, 349, 159, 263, 350, 369, 176, 344, 264,
	271, 187, 189, 188, 171, 322, 348, 181, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 223,
	0, 0, 363, 0, 317, 316, 0, 231, 0, 0,
	0, 304, 0, 238, 162, 0, 372, 175, 243, 345,
	0, 217, 277, 196, 0, 286, 0, 156, 300, 259,
	261, 258, 262, 220, 0, 0, 0, 302, 319, 347,
	177, 335, 0, 0, 0, 0, 310, 0, 0, 0,
	253, 209, 213, 225, 235, 0, 306, 336, 364, 0,
	172, 165, 338, 357, 182, 318, 321, 371, 0, 167,
	0, 0, 0, 0, 0, 0, 0, 166, 0, 0,
	0, 0, 0, 0, 219, 0, 355, 356, 195, 373,
	0, 0, 168, 0, 0, 274, 281, 273, 0, 351,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 212,
	227, 295, 250, 296, 228, 269, 268, 270, 251, 0,
	0, 163, 0, 333, 0, 0, 337, 179, 0, 0,
	346, 224, 301, 180, 218, 210, 294, 272, 173, 230,
	331, 242, 249, 0, 0, 285, 309, 184, 361, 330,
	206, 0, 0, 0, 0, 0, 0, 0, 0, 343,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 0, 3393, 0, 0, 0, 191, 131, 204,
	3391, 0, 132, 0, 0, 133, 134, 203, 193, 0,
	0, 135, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 0, 0, 365, 332, 266, 0, 291, 164, 174,
	183, 201, 199, 211, 239, 260, 265, 290, 320, 325,
	340, 341, 342, 0, 452, 0, 451, 0, 0, 158,
	169, 246, 0, 303, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 207, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 360, 0, 0, 0, 0, 298, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 362, 200, 0, 0, 0, 170,
	178, 186, 198, 208, 215, 226, 229, 233, 234, 236,
	240, 252, 254, 255, 256, 257, 275, 276, 279, 280,
	283, 284, 287, 288, 289, 292, 293, 299, 0, 305,
	311, 312, 313, 314, 315, 323, 324, 326, 327, 334,
	353, 354, 367, 368, 0, 0, 155, 0, 267, 161,
	0, 0, 0, 237, 0, 0, 160, 0, 0, 0,
	0, 0, 245, 0, 154, 0, 0, 0, 278, 0,
	0, 0, 157, 0, 0, 0, 194, 0, 308, 0,
	359, 0, 0, 307, 248, 352, 0, 0, 358, 0,
	339, 366, 370, 214, 0, 185, 329, 205, 202, 0,
	0, 0, 222, 297, 197, 241, 0, 0, 0, 190,
	0, 0, 0, 328, 349, 159, 263, 350, 369, 176,
	344, 264, 271, 187, 189, 188, 171, 322, 348, 181,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 223, 0, 0, 363, 0, 317, 316, 0, 231,
	0, 3392, 0, 304, 0, 238, 162, 0, 372, 175,
	243, 345, 0, 217, 277, 196, 0, 286, 0, 156,
	300, 259, 261, 258, 262, 220, 0, 0, 0, 302,
	319, 347, 177, 335, 0, 0, 0, 0, 310, 0,
	0, 0, 253, 209, 213, 225, 235, 0, 306, 336,
	364, 0, 172, 165, 338, 357, 182, 318, 321, 371,
	0, 167, 0, 0, 0, 0, 0, 0, 0, 166,
	0, 0, 0, 0, 0, 0, 219, 0, 355, 356,
	195, 373, 0, 0, 168, 0, 0, 274, 281, 273,
	0, 351, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 212, 227, 295, 250, 296, 228, 269, 268, 270,
	251, 0, 0, 163, 0, 333, 0, 0, 337, 179,
	0, 0, 346, 224, 301, 180, 218, 210, 294, 272,
	173, 230, 331, 242, 249, 0, 0, 285, 309, 184,
	361, 330, 206, 0, 0, 0, 0, 0, 0, 0,
	343, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 0, 0, 0, 0, 0, 0, 191,
	204, 0, 0, 0, 0, 0, 0, 0, 203, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 0, 365, 332, 266, 0, 0, 291,
	164, 174, 183, 201, 199, 211, 239, 260, 265, 290,
	320, 325, 340, 341, 342, 940, 0, 0, 0, 0,
	0, 158, 169, 246, 0, 303, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 207, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2463, 360, 0, 0, 0, 0, 298,
	221, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 362, 200, 0, 0,
	0, 170, 178, 186, 198, 208, 215, 226, 229, 233,
	234, 236, 240, 252, 254, 255, 256, 257, 275, 276,
	279, 280, 283, 284, 287, 288, 289, 292, 293, 299,
	0, 305, 311, 312, 313, 314, 315, 323, 324, 326,
	327, 334, 353, 354, 367, 368, 0, 0, 155, 267,
	0, 161, 0, 0, 237, 0, 0, 0, 160, 0,
	0, 0, 0, 245, 0, 154, 0, 0, 0, 278,
	0, 0, 0, 157, 0, 0, 0, 194, 0, 308,
	0, 359, 0, 0, 307, 248, 352, 0, 0, 358,
	0, 339, 366, 370, 214, 0, 185, 329, 205, 202,
	0, 0, 0, 222, 297, 197, 241, 2464, 2465, 0,
	190, 0, 0, 0, 328, 349, 159, 263, 350, 369,
	176, 344, 264, 271, 187, 189, 188, 171, 322, 348,
	181, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 223, 0, 0, 363, 0, 317, 316, 0,
	231, 0, 0, 0, 304, 0, 238, 162, 0, 372,
	175, 243, 345, 0, 217, 277, 196, 0, 286, 0,
	156, 300, 259, 261, 258, 262, 220, 0, 0, 0,
	302, 319, 347, 177, 335, 0, 0, 0, 0, 310,
	0, 0, 0, 253, 209, 213, 225, 235, 0, 306,
	336, 364, 0, 172, 165, 338, 357, 182, 318, 321,
	371, 0, 167, 0, 0, 0, 0, 0, 0, 0,
	166, 0, 0, 0, 0, 0, 0, 219, 0, 355,
	356, 195, 373, 0, 0, 168, 0, 0, 274, 281,
	273, 0, 351, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 212, 227, 295, 250, 296, 228, 269, 268,
	270, 251, 0, 0, 163, 0, 333, 0, 0, 337,
	179, 0, 0, 346, 224, 301, 180, 218, 210, 294,
	272, 173, 230, 331, 242, 249, 0, 0, 285, 309,
	184, 361, 330, 206, 0, 0, 0, 0, 0, 0,
	0, 343, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 0, 0, 0, 0, 0, 0,
	191, 204, 0, 0, 0, 0, 0, 0, 0, 203,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 0, 0, 365, 332, 266, 0, 0,
	291, 164, 174, 183, 201, 199, 211, 239, 260, 265,
	290, 320, 325, 340, 341, 342, 452, 0, 451, 0,
	0, 0, 158, 169, 246, 0, 303, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 207, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 360, 0, 0, 0, 0,
	298, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 362, 200, 0,
	0, 0, 170, 178, 186, 198, 208, 215, 226, 229,
	233, 234, 236, 240, 252, 254, 255, 256, 257, 275,
	276, 279, 280, 283, 284, 287, 288, 289, 292, 293,
	299, 0, 305, 311, 312, 313, 314, 315, 323, 324,
	326, 327, 334, 353, 354, 367, 368, 0, 0, 155,
	267, 0, 161, 0, 0, 237, 0, 0, 0, 160,
	0, 0, 0, 0, 245, 0, 154, 0, 0, 0,
	278, 0, 0, 0, 157, 0, 0, 0, 194, 0,
	308, 0, 359, 0, 0, 307, 248, 352, 0, 0,
	358, 0, 339, 366, 370, 214, 0, 185, 329, 205,
	202, 0, 0, 0, 222, 297, 197, 241, 0, 0,
	0, 190, 0, 0, 0, 328, 349, 159, 263, 350,
	369, 176, 344, 264, 271, 187, 189, 188, 171, 322,
	348, 181, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 223, 0, 0, 363, 0, 317, 316,
	0, 231, 0, 0, 0, 304, 0, 238, 162, 0,
	372, 175, 243, 345, 0, 217, 277, 196, 0, 286,
	0, 156, 300, 259, 261, 258, 262, 220, 0, 0,
	0, 302, 319, 347, 177, 335, 0, 0, 0, 0,
	310, 0, 0, 0, 253, 209, 213, 225, 235, 0,
	306, 336, 364, 0, 172, 165, 338, 357, 182, 318,
	321, 371, 0, 167, 0, 0, 0, 0, 0, 0,
	0, 166, 0, 0, 0, 0, 0, 0, 219, 0,
	355, 356, 195, 373, 0, 0, 168, 0, 0, 274,
	281, 273, 0, 351, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 212, 227, 295, 250, 296, 228, 269,
	268, 270, 251, 0, 0, 163, 0, 333, 0, 0,
	337, 179, 0, 0, 346, 224, 301, 180, 218, 210,
	294, 272, 173, 230, 331, 242, 249, 0, 0, 285,
	309, 184, 361, 330, 206, 0, 0, 0, 1723, 0,
	0, 0, 343, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 0, 0, 0, 0, 0,
	0, 191, 204, 1303, 0, 0, 0, 0, 0, 0,
	203, 193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 365, 332, 266, 0,
	0, 291, 164, 174, 183, 201, 199, 211, 239, 260,
	265, 290, 320, 325, 340, 341, 342, 940, 0, 1302,
	0, 0, 0, 158, 169, 246, 0, 303, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 207, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 360, 0, 0, 0,
	0, 298, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 362, 200,
	0, 0, 0, 170, 178, 186, 198, 208, 215, 226,
	229, 233, 234, 236, 240, 252, 254, 255, 256, 257,
	275, 276, 279, 280, 283, 284, 287, 288, 289, 292,
	293, 299, 0, 305, 311, 312, 313, 314, 315, 323,
	324, 326, 327, 334, 353, 354, 367, 368, 0, 0,
	155, 267, 0, 161, 0, 0, 237, 0, 0, 0,
	160, 0, 0, 0, 0, 245, 0, 154, 0, 0,
	0, 278, 0, 0, 0, 157, 0, 0, 0, 194,
	0, 308, 0, 359, 0, 0, 307, 248, 352, 0,
	0, 358, 0, 339, 366, 370, 214, 0, 185, 329,
	205, 202, 0, 0, 0, 222, 297, 197, 241, 0,
	0, 0, 190, 0, 0, 0, 328, 349, 159, 263,
	350, 369, 176, 344, 264, 271, 187, 189, 188, 171,
	322, 348, 181, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 223, 0, 0, 363, 0, 317,
	316, 0, 231, 0, 0, 0, 304, 0, 238, 162,
	0, 372, 175, 243, 345, 0, 217, 277, 196, 0,
	286, 0, 156, 300, 259, 261, 258, 262, 220, 0,
	0, 0, 302, 319, 347, 177, 335, 0, 0, 0,
	0, 310, 0, 0, 0, 253, 209, 213, 225, 235,
	0, 306, 336, 364, 0, 172, 165, 338, 357, 182,
	318, 321, 371, 0, 167, 0, 0, 0, 0, 0,
	0, 0, 166, 0, 0, 0, 0, 0, 0, 219,
	0, 355, 356, 195, 373, 0, 0, 168, 0, 0,
	274, 281, 273, 0, 351, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 212, 227, 295, 250, 296, 228,
	269, 268, 270, 251, 0, 0, 163, 0, 333, 0,
	0, 337, 179, 0, 0, 346, 224, 301, 180, 218,
	210, 294, 272, 173, 230, 331, 242, 249, 0, 0,
	285, 309, 184, 361, 330, 206, 0, 0, 0, 0,
	0, 0, 0, 343, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 0, 0, 0, 0, 0,
	0, 0, 191, 204, 0, 0, 0, 0, 0, 0,
	0, 203, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 0, 0, 365, 332, 266,
	0, 0, 291, 164, 174, 183, 201, 199, 211, 239,
	260, 265, 290, 320, 325, 340, 341, 342, 452, 0,
	451, 0, 0, 0, 158, 169, 246, 0, 303, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 207, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 0, 0,
	0, 0, 298, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 362,
	200, 0, 0, 0, 170, 178, 186, 198, 208, 215,
	226, 229, 233, 234, 236, 240, 252, 254, 255, 256,
	257, 275, 276, 279, 280, 283, 284, 287, 288, 289,
	292, 293, 299, 0, 305, 311, 312, 313, 314, 315,
	323, 324, 326, 327, 334, 353, 354, 367, 368, 0,
	0, 155, 267, 0, 161, 0, 0, 237, 0, 0,
	0, 160, 0, 0, 0, 0, 245, 0, 154, 0,
	0, 0, 278, 0, 0, 0, 157, 0, 0, 0,
	194, 0, 308, 0, 359, 0, 0, 307, 248, 352,
	0, 0, 358, 0, 339, 366, 370, 214, 0, 185,
	329, 205, 202, 0, 0, 0, 222, 297, 197, 241,
	0, 0, 0, 190, 0, 0, 0, 328, 349, 159,
	263, 350, 369, 176, 344, 264, 271, 187, 189, 188,
	171, 322, 348, 181, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 223, 0, 0, 363, 0,
	317, 316, 0, 231, 0, 0, 0, 304, 0, 238,
	162, 0, 372, 175, 243, 345, 0, 217, 277, 196,
	0, 286, 0, 156, 300, 259, 261, 258, 262, 220,
	0, 0, 0, 302, 319, 347, 177, 335, 0, 0,
	0, 0, 310, 0, 0, 0, 253, 209, 213, 225,
	235, 0, 306, 336, 364, 0, 172, 165, 338, 357,
	182, 318, 321, 371, 0, 167, 0, 0, 0, 0,
	0, 0, 0, 166, 0, 0, 0, 0, 0, 0,
	219, 0, 355, 356, 195, 373, 0, 0, 168, 0,
	0, 274, 281, 273, 0, 351, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 212, 227, 295, 250, 296,
	228, 269, 268, 270, 251, 0, 0, 163, 0, 333,
	0, 0, 337, 179, 0, 0, 346, 224, 301, 180,
	218, 210, 294, 272, 173, 230, 331, 242, 249, 0,
	0, 285, 309, 184, 361, 330, 206, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 291, 164, 174, 183, 201, 199, 211,
	239, 260, 265, 290, 320, 325, 340, 341, 342, 0,
	0, 0, 0, 0, 0, 158, 169, 246, 0, 303,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	362, 200, 0, 0, 0, 170, 178, 186, 198, 208,
	215, 226, 229, 233, 234, 236, 240, 252, 254, 255,
	256, 257, 275, 276, 279, 280, 283, 284, 287, 288,
	289, 292, 293, 299, 0, 305, 311, 312, 313, 314,
	315, 323, 324, 326, 327, 334, 353, 354, 367, 368,
	343, 0, 155, 0, 0, 161, 0, 0, 0, 0,
	0, 282, 160, 0, 0, 0, 0, 0, 0, 0,
	204, 0, 0, 0, 0, 0, 0, 0, 203, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 0, 365, 332, 266, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2786, 0, 0, 0, 2788, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 207, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 360, 0, 0, 0, 0, 298,
	221, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 237, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 0, 154, 0, 0, 0, 278,
	0, 0, 0, 157, 0, 0, 0, 194, 0, 308,
	0, 359, 0, 0, 307, 248, 352, 0, 0, 358,
	0, 339, 366, 370, 214, 0, 185, 329, 205, 202,
	0, 0, 0, 222, 297, 197, 241, 0, 0, 0,
	190, 0, 0, 0, 328, 349, 159, 263, 350, 369,
	176, 344, 264, 271, 187, 189, 188, 171, 322, 348,
	181, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 223, 0, 0, 363, 0, 317, 316, 0,
	231, 0, 0, 0, 304, 0, 238, 162, 0, 372,
	175, 243, 345, 0, 217, 277, 196, 0, 286, 0,
	156, 300, 259, 261, 258, 262, 220, 0, 0, 0,
	302, 319, 347, 177, 335, 0, 0, 0, 0, 310,
	0, 0, 0, 253, 209, 213, 225, 235, 0, 306,
	336, 364, 0, 172, 165, 338, 357, 182, 318, 321,
	371, 0, 167, 0, 0, 0, 0, 0, 0, 0,
	166, 0, 0, 0, 0, 0, 0, 219, 0, 355,
	356, 195, 373, 0, 0, 168, 0, 0, 274, 281,
	273, 0, 351, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 212, 227, 295, 250, 296, 228, 269, 268,
	270, 251, 0, 0, 163, 0, 333, 0, 0, 337,
	179, 0, 0, 346, 224, 301, 180, 218, 210, 294,
	272, 173, 230, 331, 242, 249, 0, 0, 285, 309,
	184, 361, 330, 206, 0, 0, 0, 0, 0, 0,
	0, 343, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 0, 0, 0, 0, 0, 0,
	191, 204, 0, 0, 0, 0, 0, 0, 0, 203,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 0, 0, 365, 332, 266, 0, 0,
	291, 164, 174, 183, 201, 199, 211, 239, 260, 265,
	290, 320, 325, 340, 341, 342, 940, 0, 0, 0,
	0, 0, 158, 169, 246, 0, 303, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 207, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 360, 0, 0, 0, 0,
	298, 221, 0, 0, 0, 0, 0, 0, 2773, 0,
	0, 0, 0, 0, 0, 0, 0, 362, 200, 0,
	0, 0, 170, 178, 186, 198, 208, 215, 226, 229,
	233, 234, 236, 240, 252, 254, 255, 256, 257, 275,
	276, 279, 280, 283, 284, 287, 288, 289, 292, 293,
	299, 0, 305, 311, 312, 313, 314, 315, 323, 324,
	326, 327, 334, 353, 354, 367, 368, 0, 0, 155,
	267, 0, 161, 0, 0, 237, 0, 0, 0, 160,
	0, 0, 0, 0, 245, 0, 154, 0, 0, 0,
	278, 0, 0, 0, 157, 0, 0, 0, 194, 0,
	308, 0, 359, 0, 0, 307, 248, 352, 0, 0,
	358, 0, 339, 366, 370, 214, 0, 185, 329, 205,
	202, 0, 0, 0, 222, 297, 197, 241, 0, 0,
	0, 190, 0, 0, 0, 328, 349, 159, 263, 350,
	369, 176, 344, 264, 271, 187, 189, 188, 171, 322,
	348, 181, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 223, 0, 0, 363, 0, 317, 316,
	0, 231, 0, 0, 0, 304, 0, 238, 162, 0,
	372, 175, 243, 345, 0, 217, 277, 196, 0, 286,
	0, 156, 300, 259, 261, 258, 262, 220, 0, 0,
	0, 302, 319, 347, 177, 335, 0, 0, 0, 0,
	310, 0, 0, 0, 253, 209, 213, 225, 235, 0,
	306, 336, 364, 0, 172, 165, 338, 357, 182, 318,
	321, 371, 0, 167, 0, 0, 0, 0, 0, 0,
	0, 166, 0, 0, 0, 0, 0, 0, 219, 0,
	355, 356, 195, 373, 0, 0, 168, 0, 0, 274,
	281, 273, 0, 351, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 212, 227, 295, 250, 296, 228, 269,
	268, 270, 251, 0, 0, 163, 0, 333, 0, 0,
	337, 179, 0, 0, 346, 224, 301, 180, 218, 210,
	294, 272, 173, 230, 331, 242, 249, 0, 0, 285,
	309, 184, 361, 330, 206, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 291, 164, 174, 183, 201, 199, 211, 239, 260,
	265, 290, 320, 325, 340, 341, 342, 0, 0, 0,
	0, 0, 0, 158, 169, 246, 0, 303, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 362, 200,
	0, 0, 0, 170, 178, 186, 198, 208, 215, 226,
	229, 233, 234, 236, 240, 252, 254, 255, 256, 257,
	275, 276, 279, 280, 283, 284, 287, 288, 289, 292,
	293, 299, 0, 305, 311, 312, 313, 314, 315, 323,
	324, 326, 327, 334, 353, 354, 367, 368, 343, 0,
	155, 0, 0, 161, 0, 0, 0, 0, 0, 282,
	160, 0, 0, 0, 0, 0, 0, 0, 204, 0,
	0, 0, 0, 0, 0, 0, 203, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 0, 365, 332, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 77,
	0, 0, 0, 940, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	207, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 0, 0, 0, 0, 298, 221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 267, 0, 0,
	0, 0, 237, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 154, 0, 0, 0, 278, 0, 0,
	0, 157, 0, 0, 0, 194, 0, 308, 0, 359,
	0, 0, 307, 248, 352, 0, 0, 358, 0, 339,
	366, 370, 214, 0, 185, 329, 205, 202, 0, 0,
	0, 222, 297, 197, 241, 0, 0, 0, 190, 0,
	0, 0, 328, 349, 159, 263, 350, 369, 176, 344,
	264, 271, 187, 189, 188, 171, 322, 348, 181, 192,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 232,
	223, 0, 0, 363, 0, 317, 316, 0, 231, 0,
	0, 0, 304, 0, 238, 162, 0, 372, 175, 243,
	345, 0, 217, 277, 196, 0, 286, 0, 156, 300,
	259, 261, 258, 262, 220, 0, 0, 0, 302, 319,
	347, 177, 335, 0, 0, 0, 0, 310, 0, 0,
	0, 253, 209, 213, 225, 235, 0, 306, 336, 364,
	0, 172, 165, 338, 357, 182, 318, 321, 371, 0,
	167, 0, 0, 0, 0, 0, 0, 0, 166, 0,
	0, 0, 0, 0, 0, 219, 0, 355, 356, 195,
	373, 0, 0, 168, 0, 0, 274, 281, 273, 0,
	351, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	212, 227, 295, 250, 296, 228, 269, 268, 270, 251,
	0, 0, 163, 0, 333, 0, 0, 337, 179, 0,
	0, 346, 224, 301, 180, 218, 210, 294, 272, 173,
	230, 331, 242, 249, 0, 0, 285, 309, 184, 361,
	330, 206, 0, 0, 0, 0, 0, 0, 0, 343,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 0, 0, 0, 0, 0, 0, 191, 204,
	0, 0, 0, 0, 0, 0, 0, 203, 193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 0, 0, 365, 332, 266, 0, 0, 291, 164,
	174, 183, 201, 199, 211, 239, 260, 265, 290, 320,
	325, 340, 341, 342, 940, 0, 0, 0, 0, 0,
	158, 169, 246, 0, 303, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 207, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 360, 0, 0, 0, 0, 298, 221,
	0, 0, 0, 0, 0, 0, 2154, 0, 0, 0,
	0, 0, 0, 0, 0, 362, 200, 0, 0, 0,
	170, 178, 186, 198, 208, 215, 226, 229, 233, 234,
	236, 240, 252, 254, 255, 256, 257, 275, 276, 279,
	280, 283, 284, 287, 288, 289, 292, 293, 299, 0,
	305, 311, 312, 313, 314, 315, 323, 324, 326, 327,
	334, 353, 354, 367, 368, 0, 0, 155, 267, 0,
	161, 0, 0, 237, 0, 0, 0, 160, 0, 0,
	0, 0, 245, 0, 154, 0, 0, 0, 278, 0,
	0, 0, 157, 0, 0, 0, 194, 0, 308, 0,
	359, 0, 0, 307, 248, 352, 0, 0, 358, 0,
	339, 366, 370, 214, 0, 185, 329, 205, 202, 0,
	0, 0, 222, 297, 197, 241, 0, 0, 0, 190,
	0, 0, 0, 328, 349, 159, 263, 350, 369, 176,
	344, 264, 271, 187, 189, 188, 171, 322, 348, 181,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	232, 223, 0, 0, 363, 0, 317, 316, 0, 231,
	0, 0, 0, 304, 0, 238, 162, 0, 372, 175,
	243, 345, 0, 217, 277, 196, 0, 286, 0, 156,
	300, 259, 261, 258, 262, 220, 0, 0, 0, 302,
	319, 347, 177, 335, 0, 0, 0, 0, 310, 0,
	0, 0, 253, 209, 213, 225, 235, 0, 306, 336,
	364, 0, 172, 165, 338, 357, 182, 318, 321, 371,
	0, 167, 0, 0, 0, 0, 0, 0, 0, 166,
	0, 0, 0, 0, 0, 0, 219, 0, 355, 356,
	195, 373, 0, 0, 168, 0, 0, 274, 281, 273,
	0, 351, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 212, 227, 295, 250, 296, 228, 269, 268, 270,
	251, 0, 0, 163, 0, 333, 0, 0, 337, 179,
	0, 0, 346, 224, 301, 180, 218, 210, 294, 272,
	173, 230, 331, 242, 249, 0, 0, 285, 309, 184,
	361, 330, 206, 0, 0, 0, 0, 0, 0, 0,
	343, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 0, 0, 0, 0, 0, 0, 191,
	204, 0, 0, 0, 0, 0, 0, 2191, 2192, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 0, 365, 332, 266, 0, 0, 291,
	164, 174, 183, 201, 199, 211, 239, 260, 265, 290,
	320, 325, 340, 341, 342, 940, 0, 0, 0, 0,
	0, 158, 169, 246, 0, 303, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 207, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 360, 0, 0, 0, 0, 298,
	221, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 362, 200, 0, 0,
	0, 170, 178, 186, 198, 208, 215, 226, 229, 233,
	234, 236, 240, 252, 254, 255, 256, 257, 275, 276,
	279, 280, 283, 284, 287, 288, 289, 292, 293, 299,
	0, 305, 311, 312, 313, 314, 315, 323, 324, 326,
	327, 334, 353, 354, 367, 368, 0, 0, 155, 267,
	0, 161, 0, 0, 237, 0, 0, 0, 160, 0,
	0, 0, 0, 245, 0, 154, 0, 0, 0, 278,
	0, 0, 0, 157, 0, 0, 0, 194, 0, 308,
	0, 359, 0, 0, 307, 248, 352, 0, 0, 358,
	0, 339, 366, 370, 214, 0, 185, 329, 205, 202,
	0, 0, 0, 222, 297, 197, 241, 0, 0, 0,
	190, 0, 0, 0, 328, 349, 159, 263, 350, 369,
	176, 344, 264, 271, 187, 189, 188, 171, 322, 348,
	181, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 232, 223, 0, 0, 363, 0, 317, 316, 0,
	231, 0, 0, 0, 304, 0, 238, 162, 0, 372,
	175, 243, 345, 0, 217, 277, 196, 0, 286, 0,
	156, 300, 259, 261, 258, 262, 220, 0, 0, 0,
	302, 319, 347, 177, 335, 0, 0, 0, 0, 310,
	0, 0, 0, 253, 209, 213, 225, 235, 0, 306,
	336, 364, 0, 172, 165, 338, 357, 182, 318, 321,
	371, 0, 167, 0, 0, 0, 0, 0, 0, 0,
	166, 0, 0, 0, 0, 0, 0, 219, 0, 355,
	356, 195, 373, 0, 0, 168, 0, 0, 274, 281,
	273, 0, 351, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 212, 227, 295, 250, 296, 228, 269, 268,
	270, 251, 0, 0, 163, 0, 333, 0, 0, 337,
	179, 0, 0, 346, 224, 301, 180, 218, 210, 294,
	272, 173, 230, 331, 242, 249, 0, 0, 285, 309,
	184, 361, 330, 206, 0, 0, 0, 0, 0, 0,
	0, 343, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 0, 0, 0, 0, 0, 0,
	191, 204, 0, 0, 0, 0, 0, 0, 0, 203,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 0, 0, 365, 332, 266, 0, 0,
	291, 164, 174, 183, 201, 199, 211, 239, 260, 265,
	290, 320, 325, 340, 341, 342, 940, 0, 0, 0,
	0, 0, 158, 169, 246, 0, 303, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 207, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 360, 0, 0, 0, 0,
	298, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 362, 200, 0,
	0, 0, 170, 178, 186, 198, 208, 215, 226, 229,
	233, 234, 236, 240, 252, 254, 255, 256, 257, 275,
	276, 279, 280, 283, 284, 287, 288, 289, 292, 293,
	299, 0, 305, 311, 312, 313, 314, 315, 323, 324,
	326, 327, 334, 353, 354, 367, 368, 0, 0, 155,
	267, 0, 161, 0, 0, 237, 0, 0, 0, 160,
	0, 0, 0, 0, 245, 0, 154, 0, 0, 0,
	278, 0, 0, 0, 157, 0, 0, 0, 194, 0,
	308, 0, 359, 0, 0, 307, 248, 352, 0, 0,
	358, 0, 339, 366, 370, 214, 0, 185, 329, 205,
	202, 0, 0, 0, 222, 297, 197, 241, 0, 0,
	0, 190, 0, 0, 0, 328, 349, 159, 263, 350,
	369, 176, 344, 264, 271, 187, 189, 188, 171, 322,
	348, 181, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 223, 0, 0, 363, 0, 317, 316,
	0, 231, 0, 0, 0, 304, 0, 238, 162, 0,
	372, 175, 243, 345, 0, 217, 277, 196, 0, 286,
	0, 156, 300, 259, 261, 258, 262, 220, 0, 0,
	0, 302, 319, 347, 177, 335, 0, 0, 0, 0,
	310, 0, 0, 0, 253, 209, 213, 225, 235, 0,
	306, 336, 364, 0, 172, 165, 338, 357, 182, 318,
	321, 371, 0, 167, 0, 0, 0, 0, 0, 0,
	0, 166, 0, 0, 0, 0, 0, 0, 219, 0,
	355, 356, 195, 373, 0, 0, 168, 0, 0, 274,
	281, 273, 0, 351, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 212, 227, 295, 250, 296, 228, 269,
	268, 270, 251, 0, 0, 163, 0, 333, 0, 0,
	337, 179, 0, 0, 346, 224, 301, 180, 218, 210,
	294, 272, 173, 230, 331, 242, 249, 0, 0, 285,
	309, 184, 361, 330, 206, 0, 0, 0, 0, 0,
	0, 0, 343, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 0, 0, 0, 0, 0,
	0, 191, 204, 0, 0, 0, 0, 0, 0, 0,
	203, 193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 365, 332, 266, 0,
	0, 291, 164, 174, 183, 201, 199, 211, 239, 260,
	265, 290, 320, 325, 340, 341, 342, 2788, 0, 0,
	0, 0, 0, 158, 169, 246, 0, 303, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 207, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 360, 0, 0, 0,
	0, 298, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 362, 200,
	0, 0, 0, 170, 178, 186, 198, 208, 215, 226,
	229, 233, 234, 236, 240, 252, 254, 255, 256, 257,
	275, 276, 279, 280, 283, 284, 287, 288, 289, 292,
	293, 299, 0, 305, 311, 312, 313, 314, 315, 323,
	324, 326, 327, 334, 353, 354, 367, 368, 0, 0,
	155, 267, 0, 161, 0, 0, 237, 0, 0, 0,
	160, 0, 0, 0, 0, 245, 0, 154, 0, 0,
	0, 278, 0, 0, 0, 157, 0, 0, 0, 194,
	0, 308, 0, 359, 0, 0, 307, 248, 352, 0,
	0, 358, 0, 339, 366, 370, 214, 0, 185, 329,
	205, 202, 0, 0, 0, 222, 297, 197, 241, 0,
	0, 0, 190, 0, 0, 0, 328, 349, 159, 263,
	350, 369, 176, 344, 264, 271, 187, 189, 188, 171,
	322, 348, 181, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 232, 223, 0, 0, 363, 0, 317,
	316, 0, 231, 0, 0, 0, 304, 0, 238, 162,
	0, 372, 175, 243, 345, 0, 217, 277, 196, 0,
	286, 0, 156, 300, 259, 261, 258, 262, 220, 0,
	0, 0, 302, 319, 347, 177, 335, 0, 0, 0,
	0, 310, 0, 0, 0, 253, 209, 213, 225, 235,
	0, 306, 336, 364, 0, 172, 165, 338, 357, 182,
	318, 321, 371, 0, 167, 0, 0, 0, 0, 0,
	0, 0, 166, 0, 0, 0, 0, 0, 0, 219,
	0, 355, 356, 195, 373, 0, 0, 168, 0, 0,
	274, 281, 273, 0, 351, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 212, 227, 295, 250, 296, 228,
	269, 268, 270, 251, 0, 0, 163, 0, 333, 0,
	0, 337, 179, 0, 0, 346, 224, 301, 180, 218,
	210, 294, 272, 173, 230, 331, 242, 249, 0, 0,
	285, 309, 184, 361, 330, 206, 0, 0, 0, 0,
	0, 0, 0, 343, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 0, 0, 0, 0, 0,
	0, 0, 191, 204, 0, 0, 0, 0, 0, 0,
	0, 203, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 0, 0, 365, 332, 266,
	0, 0, 291, 164, 174, 183, 201, 199, 211, 239,
	260, 265, 290, 320, 325, 340, 341, 342, 129, 0,
	0, 0, 0, 0, 158, 169, 246, 0, 303, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 207, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 0, 0,
	0, 0, 298, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 362,
	200, 0, 0, 0, 170, 178, 186, 198, 208, 215,
	226, 229, 233, 234, 236, 240, 252, 254, 255, 256,
	257, 275, 276, 279, 280, 283, 284, 287, 288, 289,
	292, 293, 299, 0, 305, 311, 312, 313, 314, 315,
	323, 324, 326, 327, 334, 353, 354, 367, 368, 0,
	0, 155, 267, 0, 161, 0, 0, 237, 0, 0,
	0, 160, 0, 0, 0, 0, 245, 0, 154, 0,
	0, 0, 278, 0, 0, 0, 157, 0, 0, 0,
	194, 0, 308, 0, 359, 0, 0, 307, 248, 352,
	0, 0, 358, 0, 339, 366, 370, 214, 0, 185,
	329, 205, 202, 0, 0, 0, 222, 297, 197, 241,
	0, 0, 0, 190, 0, 0, 0, 328, 349, 159,
	263, 350, 369, 176, 344, 264, 271, 187, 189, 188,
	171, 322, 348, 181, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 223, 0, 0, 363, 0,
	317, 316, 0, 231, 0, 0, 0, 304, 0, 238,
	162, 0, 372, 175, 243, 345, 0, 217, 277, 196,
	0, 286, 0, 156, 300, 259, 261, 258, 262, 220,
	0, 0, 0, 302, 319, 347, 177, 335, 0, 0,
	0, 0, 310, 0, 0, 0, 253, 209, 213, 225,
	235, 0, 306, 336, 364, 0, 172, 165, 338, 357,
	182, 318, 321, 371, 0, 167, 0, 0, 0, 0,
	0, 0, 0, 166, 0, 0, 0, 0, 0, 0,
	219, 0, 355, 356, 195, 373, 0, 0, 168, 0,
	0, 274, 281, 273, 0, 351, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 212, 227, 295, 250, 296,
	228, 269, 268, 270, 251, 0, 0, 163, 0, 333,
	0, 0, 337, 179, 0, 0, 346, 224, 301, 180,
	218, 210, 294, 272, 173, 230, 331, 242, 249, 0,
	0, 285, 309, 184, 361, 330, 206, 0, 0, 0,
	0, 0, 0, 0, 343, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 0, 0, 0,
	0, 0, 0, 191, 204, 0, 0, 0, 0, 0,
	0, 0, 203, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 365, 332,
	266, 0, 0, 291, 164, 174, 183, 201, 199, 211,
	239, 260, 265, 290, 320, 325, 340, 341, 342, 493,
	0, 0, 0, 0, 0, 158, 169, 246, 0, 303,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 360, 0,
	0, 0, 0, 298, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	362, 200, 0, 0, 0, 170, 178, 186, 198, 208,
	215, 226, 229, 233, 234, 236, 240, 252, 254, 255,
	256, 257, 275, 276, 279, 280, 283, 284, 287, 288,
	289, 292, 293, 299, 0, 305, 311, 312, 313, 314,
	315, 323, 324, 326, 327, 334, 353, 354, 367, 368,
	0, 0, 155, 267, 0, 161, 0, 0, 237, 0,
	0, 0, 160, 0, 0, 0, 0, 245, 0, 154,
	0, 0, 0, 278, 0, 0, 0, 157, 0, 0,
	0, 194, 0, 308, 0, 359, 0, 0, 307, 248,
	352, 0, 0, 358, 0, 339, 366, 370, 214, 0,
	185, 329, 205, 202, 0, 0, 0, 222, 297, 197,
	241, 0, 0, 0, 190, 0, 0, 0, 328, 349,
	159, 263, 350, 369, 176, 344, 264, 271, 187, 189,
	188, 171, 322, 348, 181, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 232, 223, 0, 0, 363,
	0, 317, 316, 0, 231, 0, 0, 0, 304, 0,
	238, 162, 0, 372, 175, 243, 345, 0, 217, 277,
	196, 0, 286, 0, 156, 300, 259, 261, 258, 262,
	220, 0, 0, 0, 302, 319, 347, 177, 335, 0,
	0, 0, 0, 310, 0, 0, 0, 253, 209, 213,
	225, 235, 0, 306, 336, 364, 0, 172, 165, 338,
	357, 182, 318, 321, 371, 0, 167, 0, 0, 0,
	0, 0, 0, 0, 166, 0, 0, 0, 0, 0,
	0, 219, 0, 355, 356, 195, 373, 0, 0, 168,
	0, 0, 274, 281, 273, 0, 351, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 212, 227, 295, 250,
	296, 228, 269, 268, 270, 251, 0, 0, 163, 0,
	333, 0, 0, 337, 179, 0, 0, 346, 224, 301,
	180, 218, 210, 294, 272, 173, 230, 331, 242, 249,
	0, 0, 285, 309, 184, 361, 330, 206, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 164, 174, 183, 201, 199,
	211, 239, 260, 265, 290, 320, 325, 340, 341, 342,
	0, 0, 0, 0, 0, 0, 158, 169, 246, 0,
	303, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 362, 200, 0, 0, 0, 170, 178, 186, 198,
	208, 215, 226, 229, 233, 234, 236, 240, 252, 254,
	255, 256, 257, 275, 276, 279, 280, 283, 284, 287,
	288, 289, 292, 293, 299, 0, 305, 311, 312, 313,
	314, 315, 323, 324, 326, 327, 334, 353, 354, 367,
	368, 0, 0, 155, 0, 0, 161, 0, 0, 0,
	0, 0, 0, 160,
}

var yyPact = [...]int{
	4560, -1000, -432, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2195, -1000, -1000, 288, -1000,
	1170, 899, -1000, 363, 290, 31285, 740, 1354, 43056, -1000,
	-1000, -1000, 194, 587, 31892, 414, 479, 1588, 2047, 1585,
	31, -62, -63, 147, 33120, 32506, 14, -1000, 35197, 581,
	47, -1000, -1000, -1000, -1000, 2249, 223, -1000, -1000, 2179,
	2193, 1955, -1000, 7070, -1000, -1000, -1000, -1000, -1000, 20842,
	-1000, 2247, 31892, 25818, -1000, 729, 716, -172, 573, 573,
	267, 573, 573, 739, -1000, 284, 1132, -1000, -1000, -1000,
	-1000, 1128, 31892, 39256, 574, 42194, 574, 574, 574, 574,
	574, 574, 574, 31892, -1000, 821, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 31892, 1572, 2108, 1154, 203, -1000,
	-1000, -1000, 1134, -1000, 366, 345, 412, 342, 134, 1156,
	2175, -1000, 1843, 2179, 2179, -1000, -1000, -1000, -1000, -1000,
	-1000, 902, 317, 682, 232, 223, 1126, 2146, 2107, 2105,
	1391, 2104, 570, 2090, 1888, -35, -1000, 1570, 31892, -1000,
	-1000, 1350, 1349, 373, 1780, 783, 1914, -1000, -1000, 343,
	758, 1878, 407, 1878, 1878, 1878, 1878, 1878, -64, 1878,
	1878, 1878, 87, 1878, 158, 1878, 1878, 1878, 1878, 1878,
	1357, -1000, -1000, -1000, 369, 1773, 1827, 1913, 1281, -1000,
	-1000, -1000, 1892, 36668, 1832, -1000, 1843, -1000, -1000, -1000,
	737, -1000, -115, 1892, 2161, 1591, -1000, 35197, 2072, 1271,
	13330, 2000, -1000, -1000, 1230, 2228, -1000, 25211, 816, -1000,
	13330, 4627, 1843, -1000, -1000, 1843, -1000, 776, 874, -1000,
	778, 809, -1000, -1000, 12704, 12704, 12704, 12704, 12704, 12704,
	12704, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1843, 815, 812,
	1843, 1843, 1843, 1843, 1843, -1000, 11452, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1843,
	1843, 1843, 1843, 1843, 1843, 1843, 1843, 1843, 1843, 1843,
	1843, 1843, 1843, 13330, 1843, 1843, 1843, 1843, 1843, 1843,
	1843, 1843, 1843, 1843, 1843, 1843, 1843, 1843, 1843, 1843,
	1843, 1843, 1843, 1843, 1843, 1843, 1843, 1843, 1843, 1843,
	1843, 1843, 1843, 1843, 1843, 1843, 1843, 1843, 1843, 1843,
	1843, 1843, 1843, 1843, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 581, 581, 30678, 1841, -122,
	20216, -1000, -1000, -1000, -1000, 18964, 38825, 1113, -1000, -1000,
	-1000, -1000, 2081, -1000, -1000, 811, 809, 776, 762, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2195, -1000, -1000,
	1762, 559, -1000, 510, 510, 510, 510, 510, 497, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1887, 42194,
	31892, 253, 1568, 1157, 1567, 43487, 43487, -1000, 256, 39256,
	39256, 573, 275, 39256, 248, 1840, 673, 1837, 665, 1355,
	31892, 2132, 1912, 31892, 1566, 1565, 43487, 43487, 39256, 39256,
	-1000, 24598, 1836, -1000, -1000, 1154, -1000, 1536, 13330, 573,
	573, 31892, 31892, 31892, 31892, 31892, -1000, -1000, 1154, 1154,
	1154, 1154, 1102, 2227, 1102, -1000, 1102, -1000, -1000, 13330,
	-1000, 12704, 38394, 945, -1000, -1000, 43056, -1000, 1564, 316,
	-1000, -1000, -1000, -1000, -1000, -1000, 1563, -1000, 2052, 570,
	570, -1000, 1446, 570, 1825, -1000, 1094, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 570,
	-1000, 12078, -409, -1000, -1000, 1835, -1000, 349, -1000, -1000,
	503, 1910, 503, 329, 39256, 39256, 39256, -1000, 1878, 42194,
	-1000, 1878, 1878, 1878, -70, 1878, 1878, -1000, -1000, 1878,
	-1000, -1000, -1000, -1000, -1000, 1878, -1000, -1000, -1000, 1878,
	1878, -1000, 1878, 1878, -1000, -1000, -1000, -1000, -1000, 39256,
	503, 176, 1833, 503, 39256, 39256, -1000, 73, 72, 71,
	70, -1000, -1000, -1000, -1000, 69, 66, -1000, -1000, -1000,
	1832, 36668, 2155, 15834, 31892, -103, -1000, -1000, 223, -1000,
	-1000, -1000, -1000, 1892, 1206, 2243, 995, 1807, -1000, -1000,
	1828, -1000, 1209, 808, 1341, 1969, -1000, -1000, -1000, 31892,
	-1000, 13330, 13330, 13330, 1220, -1000, 26425, -1000, -1000, -1000,
	-1000, -1000, -1000, 17086, 1017, 12704, 1326, 1115, 12704, 12704,
	12704, 12704, 12704, 12704, 12704, 12704, 12704, 12704, 12704, 12704,
	12704, 12704, 12704, 1315, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1561, -1000, 223, 23346, 8322, 23346, 1429, 1429,
	42194, 875, 875, 875, 875, 875, 875, 33551, 2153, 23346,
	23346, 2153, 2153, 2153, 2153, 2153, 1591, 1760, 1314, 35197,
	11452, 8322, 8322, 8322, 1591, 13330, 13330, 8322, 8322, 10826,
	10200, 14582, 8322, 8322, 2153, 1124, 1314, 18964, 8322, -1000,
	-1000, 9574, -1000, -1000, -1000, -1000, -1000, 1591, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 42194, 42194, 8322, 8322,
	8322, 8322, 1591, 1591, 8322, 8322, 8322, 8322, 8322, 1591,
	1591, 1591, 1591, 8322, 8322, 8322, 8322, 8322, 8322, 8322,
	8322, 8322, 8322, 8322, 8322, 30071, 28857, 31892, 1757, 1740,
	-1000, 802, 19590, 1820, -1000, -89, -113, -122, -1000, -1000,
	903, -1000, -1000, -1000, 8948, -1000, 17712, 2179, 1955, 3925,
	6393, -1000, -1000, -47, -1000, -1000, -1000, 1868, -1000, 1874,
	300, 3, 1874, 1874, 1874, 1874, 1874, -6, -6, -6,
	-6, -7, -1000, -1000, -1000, -1000, -1000, 1886, 1885, -1000,
	1868, 1868, 1868, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1876, 318, 1873, 1873, 1873, 1873, 1873, -1000,
	-1000, -1000, -1000, 508, 508, 508, -1000, 13330, 1880, 2154,
	696, 275, 2119, 2130, 2119, 320, -1000, 801, 1884, -1000,
	797, 325, 1799, -1000, 198, 1447, 29464, -1000, -1000, -1000,
	-1000, -1000, 31892, 31892, 39256, 39256, 39256, 637, -1000, 31892,
	1826, -1000, -1000, -1000, -1000, -1000, 1803, -1000, 1447, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 31892, -1000,
	-1000, 1445, 1314, 1522, 1515, 2146, -1000, -1000, -1000, 1117,
	-1000, -1000, -1000, -1000, 1154, 43056, 43056, 31892, 2146, 1154,
	1314, 1428, 1890, 1843, 1591, -1000, -1000, -1000, 1514, -1000,
	12704, 1825, 1825, -1000, 1825, 570, 1429, 1825, -1000, 1751,
	1193, 1444, 31892, -1000, 36668, -36, -1000, -149, 41332, -1000,
	-1000, -1000, 503, 41332, -1000, 87, 164, -1000, 664, -1000,
	1748, -1000, -1000, -1000, -1000, 1878, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 41332, 144, 175, 41332, 1803,
	2226, -1000, -1000, -1000, -1000, 2172, -1000, -1000, 1843, 1717,
	-1000, 796, -1000, -1000, -1000, -1000, -1000, -1000, 881, -1000,
	-1000, 1591, -1000, 41763, -1000, 1964, 1271, 1271, 13330, -1000,
	-1000, -1000, 17712, 2165, -1000, 1980, 1978, 1883, -1000, -1000,
	1017, 1225, 1090, -1000, -1000, 1250, -1000, -1000, -1000, -1000,
	-1000, 794, 1843, -1000, -1000, -1000, -1000, -1000, 3791, -1000,
	-1000, -1000, -1000, 1326, 12704, 12704, 12704, 1428, 3791, 3862,
	1937, 1442, 875, 1127, 1127, 1014, 1014, 1014, 1014, 1014,
	1050, 1050, -1000, -1000, -1000, 1591, -1000, 1742, -1000, -1000,
	1314, 792, -1000, -1000, -1000, -1000, -1000, -1000, 8322, -1000,
	-1000, 8322, 8322, 8322, 8322, 8322, -1000, 13330, -1000, 1591,
	1742, 1742, 1742, -1000, 1202, 1266, 1521, 1742, 936, 2225,
	1742, 933, 2224, 1742, 1502, 12704, 12704, 12704, 1742, 1742,
	8322, 1186, -1000, 13330, 1591, 1742, -1000, 1594, 1824, 1822,
	1742, 1591, 1821, 1742, 1742, -193, -193, 1591, 1742, 1591,
	1742, 1742, -193, -193, -193, -193, 1742, 1742, 1742, 1742,
	1742, 1742, 1742, 1742, 1742, 1742, 1742, 1742, 991, 31892,
	-1000, 1774, 1823, -1000, -1000, -1000, 2149, 28250, -1000, -1000,
	34158, -1000, 1843, 1843, 991, 1746, 28857, -1000, -1000, 28857,
	43056, 22720, -1000, 18964, -122, -116, -1000, -1000, 1820, -1000,
	1361, -1000, -1000, 1314, -1000, 789, 2072, 2153, 1819, -1000,
	1049, 1049, 1049, 2077, 266, 1049, 1049, 1049, 1049, 1049,
	-243, -244, 1049, 1049, 1049, 1049, 1049, 1049, 1049, 1049,
	1049, 1049, 1049, 36, 1049, 1049, 1049, 1049, 191, 1049,
	559, -1000, -1000, -1000, 1877, 483, -1000, 1998, 864, 864,
	880, 1486, 1997, -1000, -1000, 159, -56, -1000, -1000, -1000,
	1348, -6, 179, -6, 1874, 1874, 297, 1874, -1000, -6,
	-1000, -1000, -1000, 994, 2074, 988, 986, 963, 958, -6,
	1443, 1443, -1000, -1000, -1000, -1000, 1345, -1000, 1876, -1000,
	1343, -1000, -1000, -1000, -1000, 159, 159, 159, 159, -1000,
	-1000, -1000, 1231, 1909, 42194, -1000, 31892, -1000, 2119, -1000,
	-1000, -1000, 145, -1000, -1000, -1000, 2211, -1000, -1000, 42194,
	37963, 42194, -1000, -1000, 94, 39256, 182, 387, 216, -1000,
	-1000, 662, -1000, 661, -1000, -1000, -1000, -1000, -1000, -1000,
	31892, 39256, -1000, -1000, -1000, -1000, -1000, 2203, 1511, 1510,
	-1000, -1000, -1000, 1102, 1154, -1000, -1000, 12704, 39256, -1000,
	348, -1000, 3791, -1000, -1000, -1000, 991, 732, -1000, -1000,
	-104, -1000, -1000, 660, 788, 787, 41332, 658, -1000, 113,
	39256, -1000, 42194, -1000, 2222, 2220, 137, 2219, 39256, -1000,
	54, -1000, 247, -1000, 15834, 23346, 1815, -1000, 1001, 804,
	895, 519, 519, -1000, 1038, 519, 2063, 2054, 989, -1000,
	1808, 1441, 1440, -1000, 1961, -1000, -1000, -1000, 31892, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 22094, 8322,
	-1000, 1428, 3791, 2697, -1000, 12704, -1000, 8322, -1000, 16460,
	1591, 1742, 1742, 1742, 1742, 1742, 1314, -1000, -1000, -1000,
	-1000, 629, 1315, 629, -1000, 1315, -1000, 12704, 12704, -1000,
	12704, 12704, -1000, -1000, 12704, 3844, 3683, 3559, -266, -1000,
	1778, 1097, -1000, 13330, 1276, -1000, -1000, -1000, 12704, 12704,
	-1000, -1000, -1000, -1000, -1000, 40901, -1000, -193, -193, -193,
	-193, -193, -1000, -1000, -1000, -1000, -193, -193, -193, -193,
	-193, -193, -193, -193, -193, -193, -193, -193, 208, 1843,
	-1000, 18338, 28857, 28857, 28857, 28857, 28857, -1000, 1939, 1938,
	-1000, 1928, 1926, 1932, 36668, 1736, 1591, 324, 28250, -1000,
	1843, -1000, 36236, 847, 727, 726, 720, 8322, 12704, 2203,
	28857, 1767, 1767, -1000, 784, -1000, -1000, -1000, -117, -111,
	-1000, -1000, -1000, 23346, -1000, 3925, 228, -1000, 228, 228,
	1049, 2071, 1049, 228, 228, 228, 228, 228, 1049, 1049,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, -1000, 228, 228, 228, 228, -1000, -260, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 228, -1000,
	37100, 645, 2004, 509, 1486, 1486, 1486, -1000, 1486, -1000,
	-1000, -1000, 1875, -1000, 1213, -1000, -1000, -1000, -1000, -1000,
	1843, -421, 1318, 12704, 2242, -1000, 1996, -1000, 1994, 1989,
	1434, -1000, -1000, 1701, 948, 1685, 1660, 940, -6, -1000,
	-1000, 1874, -1000, 923, -1000, -1000, 951, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 920, 1732, -1000, 1730, 1806,
	-1000, 1726, 116, 31892, -1000, -1000, 2147, -1000, -1000, -1000,
	2067, 1038, 1038, 1038, 1908, -1000, -1000, -1000, -1000, 1655,
	1805, -1000, 510, 42194, 42194, 42194, -1000, -277, 148, -1000,
	39256, 156, 198, 399, 1508, 31892, 39256, -1000, -1000, -1000,
	13330, -1000, -1000, 2146, -1000, 3791, 1447, -1000, -1000, -6,
	31892, -1000, 39256, 919, 40294, 651, 39256, 132, 162, -1000,
	39256, 39256, 2218, 39256, 1803, 1426, -1000, -1000, 881, 39863,
	1486, 649, -1000, -1000, 521, -1000, 299, 1507, 27639, 27032,
	42194, 1988, 1986, 1505, 31892, 42194, -1000, -1000, 42625, 1504,
	13330, -1000, 42194, -1000, -1000, 42194, 42194, -1000, -1000, -1000,
	-1000, 1219, 7070, -1000, -1000, 1591, -1000, 12704, 3791, -1000,
	-1000, 781, -1000, -193, -193, -193, -193, -193, 1591, 1868,
	1868, -1000, 1868, 1873, -1000, 1868, 21, 1868, 16, 1591,
	1591, 1591, 3540, 3489, 3453, 1613, 1594, 12704, 12704, 12704,
	1843, -184, -1000, 1314, 13330, 3025, 1879, -1000, -1000, 1503,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1906, 18338,
	1843, 15208, -1000, 42194, 1776, -1000, 1088, 851, 1067, 1060,
	776, 762, 1823, 1872, 1905, 1473, -1000, -1000, -1000, -1000,
	1936, -1000, 1930, -1000, -1000, 1862, -1000, -1000, 1804, 1843,
	42194, 12704, 847, -1000, 1843, 1843, 1843, 1591, 1797, 2195,
	1767, -1000, -1000, 882, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1315, 1049, 228, -1000, -1000, -1000, -1000, -1000, 228,
	228, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -262, -1000, 1722, -1000,
	1868, 1868, 1985, -1000, 864, -1000, -1000, -1000, -1000, -1000,
	42194, -1000, 12704, 2140, -1000, 3791, -108, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 917, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -6, 1425, -6, 1313,
	-1000, 1300, -1000, -1000, -364, 1866, 223, -1000, 1038, 942,
	941, 1417, 31892, 135, 37963, -1000, 510, 510, 510, 117,
	104, -1000, 1177, -1000, -1000, -1000, 1416, 1415, 1414, 1447,
	202, 1175, 168, -1000, 2137, -1000, -1000, 1314, 1154, -71,
	-1000, 162, -1000, -1000, -1000, 39256, 162, -1000, -1000, 165,
	1803, 1803, 39256, 1803, -1000, -1000, 42625, 439, 510, 510,
	1880, 864, 1984, 509, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1501, -1000, 753, -1000,
	646, 439, 42625, 1314, 901, 1190, -1000, 2216, -1000, -1000,
	-1000, 3791, 21468, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	306, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	12704, 12704, 12704, 12704, -1000, 1594, 1594, 1594, 12704, 1591,
	1412, 1314, 12704, 12704, 987, -1000, -1000, 2124, 1768, 1798,
	-1000, -1000, 7696, 1591, 1977, 1717, -1000, 35197, 1715, -1000,
	2195, 18338, 13330, 13330, 13330, 13330, -1000, -1000, 13330, 1865,
	-1000, 13330, -1000, -1000, -1000, -1000, 42194, 311, -1000, 13330,
	1715, 1733, -1000, 42194, 42194, 42194, -1000, 1408, 2179, -1000,
	-1000, 1315, -1000, -1000, -1000, -1000, 775, 37100, 2123, 2123,
	1486, 1486, 1708, -1000, 1594, 1843, -1000, 1843, 1843, 1843,
	1843, 1843, 1843, 1843, 1843, 1843, 1843, 1843, -1000, -1000,
	898, -1000, 879, 1599, 1597, -1000, 37100, -1000, -1000, 888,
	-1000, -1000, -1000, -1000, -1000, 2170, -1000, 135, -1000, 1402,
	274, 252, -1000, 273, 272, 271, 262, 254, -1000, -1000,
	-1000, -1000, 413, 117, -1000, -77, 1295, 1011, 2059, 104,
	-1000, 1293, 1288, 1286, 1273, 173, -1000, -1000, -1000, -1000,
	211, 198, -1000, 391, 1374, -1000, 2040, 2038, 2138, 162,
	2138, 129, 1803, 1593, -1000, -1000, 1487, -1000, -1000, 1864,
	1486, 1486, -1000, 1470, -1000, -1000, 42194, -1000, 439, 2112,
	2111, 1843, 2203, 28857, 7070, -1000, -1000, -1000, -1000, 1594,
	1594, 1594, 1594, -1000, -1000, -1000, 160, -1000, -1000, 1594,
	1594, 2195, 2192, 1983, -1000, 1843, -1000, -1000, 1843, 246,
	-1000, 42194, 2179, -1000, 1314, 1314, 1314, 1314, 1314, 42194,
	1314, 1706, 1843, 34765, -1000, 36668, 1697, 1697, 1697, -79,
	-1000, -1000, 775, -1000, 1469, 1038, 1371, -1000, -1000, -1000,
	-1000, -1000, 429, 42194, -426, 12704, -1000, -1000, -1000, -1000,
	-1000, -1000, 1690, -1000, 223, -1000, -1000, 301, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2046, 2043, 315, -1000, 1370,
	1367, -1000, 395, 1356, 826, -199, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 382, 1466, -1000,
	166, -1000, -1000, 580, 2001, 2026, 2187, -1000, 39256, 2138,
	-1000, -1000, -1000, -1000, 159, 159, 37100, 1880, 1863, -1000,
	-1000, -1000, 12704, -1000, 953, 2201, 1802, -1000, -1000, -1000,
	-1000, -1000, 1591, 178, -292, -1000, -1000, 1045, 13330, 2241,
	-1000, 1798, 1843, -1000, 223, -1000, -1000, 1688, -1000, -1000,
	-1000, 847, -1000, -1000, -1000, 1843, -1000, -1000, 1261, -1000,
	31892, -1000, -1000, -1000, -1000, 1594, 775, -1000, 307, 5986,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1243, -1000,
	-1000, 1352, 394, 163, -1000, 2136, -1000, 1862, 1237, 2038,
	2186, 2032, 2029, -1000, 1366, -278, -1000, 1684, 1845, 37100,
	3791, 1680, -1000, 42194, 2198, 2185, -1000, -1000, 1960, -275,
	-296, 1591, 243, 243, 1801, 18338, 1798, 1591, -1000, -1000,
	23346, -1000, 1844, -426, -1000, 775, -1000, 336, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 13330,
	13330, 23972, 5986, 149, -1000, 146, -1000, -1000, -1000, 1365,
	-1000, 1055, -1000, 1363, -1000, 2184, 2183, -1000, 180, 775,
	37100, 1677, -1000, 953, 1972, -195, 13330, 13330, -1000, 1940,
	-1000, -1000, -1000, 193, -1000, 1039, 278, 1037, -1000, 1429,
	-1000, 1795, -1000, 1674, -1000, 510, 42194, -1000, -1000, 1456,
	1450, -1000, 1255, 1251, 215, 209, 428, -1000, -1000, -1000,
	-1000, -433, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1362,
	1360, 37532, -1000, 1659, 775, -1000, 425, -1000, 42194, -1000,
	1314, 1794, -1000, 1314, -284, 1168, -1000, -1000, -1000, -1000,
	-1000, 42194, 1591, 23346, 225, 1596, -1000, -1000, -1000, 1173,
	-1000, 13330, 5986, 2169, 2166, 2160, 2110, 23346, 5773, -1000,
	-1000, -1000, -1000, 124, 1447, 775, -1000, 341, 1771, -1000,
	2135, 13330, -293, 193, -1000, 35629, -1000, -1000, 1333, -236,
	1903, 201, 1163, 5986, -1000, 1153, -435, 415, 223, 643,
	12704, -1000, -1000, -1000, 39256, -1000, 1843, 42194, 1843, -1000,
	-301, -1000, 36668, -1000, -1000, 1226, 1899, 1896, 2215, -1000,
	-1000, -1000, -1000, -1000, -1000, 5986, 35197, -1000, -436, 5986,
	4194, -1000, -1000, -1000, 5635, -1000, -1000, -1000, -1000, 197,
	-1000, -1000, 3791, 1447, 13956, -1000, -1000, -1000, -1000, 376,
	-1000, -1000, 2240, -1000, 2232, 764, 764, -1000, -437, -1000,
	5439, -438, 572, 5986, 1119, -1000, 13330, -1000, 643, -1000,
	1594, 1591, -1000, 1895, 12704, 1893, -1000, -1000, -1000, 485,
	1332, -1000, 5345, 1145, 5986, -1000, -439, 571, 5986, -1000,
	1096, -1000, -1000, -1000, -313, 1527, -314, -1000, -1000, -1000,
	-1000, -1000, 5040, -1000, -441, 5986, -1000, -315, -1000, 561,
	4943, -443, -1000, -1000, 531, 5986, -1000,
}

var yyPgo = [...]int{
	0, 2678, 2675, 19, 174, 2673, 259, 2663, 2662, 15,
	2661, 37, 24, 13, 21, 2660, 2375, 2372, 2367, 2354,
	2352, 2659, 10, 2658, 2657, 2350, 2656, 2655, 2348, 2339,
	2336, 2317, 2654, 2652, 2650, 2305, 2299, 2286, 8, 2649,
	27, 2648, 2, 151, 170, 2644, 5, 2643, 2639, 12,
	2638, 2637, 2284, 2636, 2635, 2634, 106, 2633, 2282, 2277,
	2632, 2267, 2262, 2630, 2629, 2260, 2258, 2256, 2628, 177,
	2625, 2624, 2623, 197, 2621, 157, 2620, 2619, 2617, 118,
	2616, 2666, 117, 56, 104, 1313, 2614, 26, 50, 257,
	2610, 9, 2608, 102, 2607, 121, 2606, 2605, 162, 2604,
	148, 223, 98, 2603, 2596, 186, 2595, 2593, 2592, 107,
	2589, 2588, 173, 2758, 2587, 2583, 138, 2580, 54, 169,
	52, 57, 2579, 2578, 2577, 2576, 2574, 11, 426, 2573,
	116, 143, 2572, 2571, 93, 2570, 2568, 103, 2565, 2563,
	2561, 139, 48, 2559, 2557, 47, 2555, 70, 55, 2554,
	64, 2553, 144, 2552, 2551, 2550, 2549, 2548, 63, 2547,
	60, 2546, 140, 119, 142, 2543, 2538, 17, 18, 2537,
	39, 31, 33, 49, 29, 74, 59, 145, 123, 95,
	2533, 43, 42, 132, 94, 2528, 99, 81, 41, 2527,
	161, 2526, 76, 180, 168, 141, 167, 2525, 2524, 2522,
	191, 2515, 135, 90, 2514, 108, 1207, 171, 2512, 2510,
	101, 2507, 2506, 2504, 2503, 2501, 83, 133, 2497, 2496,
	184, 176, 185, 122, 2495, 65, 2886, 4020, 150, 3141,
	35, 160, 2492, 53, 2486, 2485, 2484, 2364, 115, 7,
	105, 175, 2483, 110, 45, 79, 2482, 2480, 2478, 2476,
	2474, 2470, 2469, 2468, 200, 155, 2464, 2463, 2462, 2461,
	163, 87, 2460, 129, 128, 127, 2459, 152, 34, 2458,
	2456, 137, 112, 2455, 2453, 2452, 2451, 136, 80, 156,
	28, 2450, 113, 147, 166, 2449, 84, 2447, 2445, 86,
	46, 1780, 2444, 2443, 2442, 2441, 100, 1359, 2440, 85,
	32, 40, 75, 30, 2439, 2438, 97, 109, 2437, 36,
	2434, 3, 4, 6, 2432, 2431, 2417, 2414, 2412, 2403,
	2402, 91, 2400, 2397, 73, 2396, 2394, 2393, 44, 2392,
	2385, 2384, 149, 125, 58, 164, 352, 16, 2383, 2382,
	23, 2381, 126, 2363, 72, 2357, 62, 2343, 2329, 67,
	2310, 2307, 71, 2303, 2301, 165, 1981, 305, 2291, 146,
	124, 51, 61, 2288, 2280, 0, 183, 153, 66, 2275,
	2270, 2265,
}

var yyR1 = [...]int{
	0, 364, 364, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 68, 3, 3, 9,
	10, 4, 4, 5, 5, 91, 91, 6, 90, 90,
	186, 186, 186, 186, 185, 185, 92, 92, 89, 89,
	98, 7, 7, 8, 8, 11, 11, 72, 72, 12,
	13, 13, 13, 13, 367, 367, 107, 107, 105, 105,
	106, 106, 183, 183, 14, 14, 14, 190, 190, 195,
	195, 195, 198, 198, 198, 198, 172, 173, 174, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 338, 338, 347, 347, 347, 348, 348, 346, 346,
	346, 346, 346, 350, 350, 351, 351, 349, 349, 349,
	349, 353, 353, 354, 354, 352, 352, 352, 352, 352,
	352, 352, 352, 352, 352, 352, 352, 352, 352, 341,
	341, 341, 35, 35, 35, 35, 35, 36, 36, 36,
	36, 36, 36, 355, 355, 355, 355, 355, 355, 355,
	355, 355, 355, 355, 355, 355, 355, 355, 355, 355,
	355, 355, 355, 355, 355, 355, 355, 355, 355, 355,
	355, 355, 355, 355, 356, 356, 357, 357, 358, 358,
	359, 359, 359, 359, 360, 360, 360, 360, 360, 361,
	361, 361, 361, 361, 361, 361, 362, 362, 363, 363,
	2, 319, 319, 320, 320, 321, 321, 321, 321, 322,
	322, 323, 323, 324, 324, 324, 324, 324, 324, 324,
	324, 324, 324, 26, 222, 222, 219, 219, 219, 220,
	220, 221, 221, 221, 340, 340, 340, 334, 334, 334,
	336, 336, 335, 335, 335, 337, 337, 342, 342, 342,
	342, 342, 344, 344, 344, 344, 344, 344, 345, 345,
	345, 343, 343, 50, 50, 51, 51, 51, 161, 161,
	161, 15, 15, 15, 15, 15, 21, 23, 23, 39,
	39, 40, 24, 24, 24, 24, 41, 41, 42, 27,
	27, 27, 27, 27, 27, 48, 48, 48, 47, 47,
	46, 46, 46, 46, 46, 46, 25, 25, 25, 25,
	49, 49, 44, 44, 43, 45, 45, 45, 45, 45,
	45, 45, 45, 45, 45, 45, 45, 28, 28, 28,
	28, 28, 28, 20, 318, 318, 318, 38, 38, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 54,
	54, 292, 293, 293, 293, 293, 293, 293, 293, 293,
	278, 278, 279, 279, 279, 279, 279, 268, 268, 268,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 244, 244, 244, 244, 250, 250, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 249, 249, 249,
	249, 249, 249, 249, 249, 251, 251, 251, 251, 251,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 253, 253, 253,
	253, 253, 253, 253, 253, 277, 277, 255, 255, 254,
	254, 254, 271, 271, 272, 272, 272, 269, 269, 269,
	270, 270, 258, 259, 273, 260, 260, 260, 261, 261,
	261, 262, 262, 267, 267, 266, 266, 266, 266, 266,
	266, 263, 263, 263, 263, 264, 264, 265, 276, 276,
	276, 276, 276, 256, 37, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 305, 305, 212,
	212, 213, 213, 281, 281, 303, 303, 302, 302, 301,
	301, 301, 290, 290, 298, 298, 298, 298, 298, 298,
	298, 298, 285, 285, 285, 284, 284, 286, 286, 289,
	289, 300, 300, 299, 299, 282, 282, 282, 306, 306,
	306, 306, 306, 283, 283, 283, 283, 283, 307, 287,
	287, 288, 288, 288, 312, 313, 311, 311, 311, 311,
	311, 124, 124, 124, 295, 295, 295, 291, 291, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 316, 316, 315, 315, 52, 53, 57, 57,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 160, 160, 160, 217, 217, 310, 308, 308,
	309, 309, 17, 17, 55, 55, 339, 339, 18, 18,
	18, 18, 18, 18, 18, 18, 18, 314, 314, 314,
	19, 19, 58, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 86, 204,
	204, 203, 203, 202, 202, 202, 205, 205, 205, 205,
	242, 242, 242, 60, 60, 60, 64, 64, 67, 67,
	67, 65, 66, 29, 30, 30, 30, 30, 31, 218,
	218, 62, 62, 63, 63, 63, 63, 78, 78, 369,
	369, 61, 370, 69, 70, 70, 71, 71, 71, 208,
	208, 75, 75, 75, 73, 73, 73, 74, 74, 80,
	80, 84, 84, 84, 84, 83, 83, 83, 83, 163,
	163, 168, 234, 234, 144, 144, 164, 164, 169, 169,
	169, 170, 170, 171, 171, 171, 171, 171, 166, 166,
	165, 165, 167, 132, 132, 232, 232, 232, 232, 231,
	231, 231, 231, 231, 231, 88, 88, 93, 93, 95,
	95, 95, 95, 95, 95, 99, 146, 146, 117, 117,
	118, 118, 118, 118, 118, 130, 130, 182, 182, 181,
	181, 184, 184, 94, 96, 96, 96, 96, 102, 102,
	103, 103, 104, 104, 216, 216, 239, 239, 239, 108,
	108, 108, 110, 109, 109, 109, 109, 111, 111, 97,
	97, 294, 294, 280, 246, 246, 247, 371, 371, 371,
	371, 112, 112, 114, 115, 115, 113, 113, 113, 113,
	113, 119, 119, 116, 120, 120, 120, 120, 121, 121,
	85, 85, 85, 85, 85, 85, 85, 85, 201, 201,
	123, 123, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 140, 140, 140, 140, 140, 140, 125, 125,
	125, 125, 125, 125, 125, 79, 79, 141, 141, 141,
	101, 100, 100, 82, 82, 81, 81, 142, 142, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 135, 135, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 134, 134, 134, 134, 134, 134, 134, 134, 134,
	134, 134, 134, 134, 134, 134, 134, 134, 368, 368,
	137, 136, 136, 136, 136, 136, 136, 76, 76, 76,
	76, 76, 240, 240, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 153,
	153, 77, 77, 151, 151, 152, 154, 154, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 127, 127, 127, 127, 127, 127, 127, 127, 129,
	129, 129, 155, 155, 143, 143, 87, 156, 156, 157,
	158, 158, 159, 159, 162, 175, 175, 175, 176, 176,
	176, 176, 131, 131, 177, 177, 177, 126, 126, 126,
	126, 126, 126, 126, 180, 180, 179, 179, 178, 178,
	178, 178, 178, 178, 187, 187, 145, 145, 148, 148,
	147, 149, 188, 188, 192, 192, 192, 192, 189, 189,
	193, 193, 193, 193, 196, 196, 197, 197, 197, 194,
	194, 194, 191, 191, 191, 236, 236, 236, 199, 199,
	209, 209, 206, 206, 207, 207, 200, 200, 257, 257,
	257, 215, 215, 214, 214, 214, 210, 210, 210, 211,
	211, 233, 233, 229, 229, 235, 235, 230, 230, 237,
	237, 238, 238, 317, 317, 274, 274, 327, 327, 275,
	275, 328, 328, 330, 330, 325, 325, 326, 326, 329,
	329, 32, 331, 331, 332, 332, 333, 333, 333, 333,
	33, 34, 34, 34, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 228, 228, 228, 228,
	228, 228, 226, 226, 226, 226, 226, 365, 366,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 11, 5, 7, 1,
	5, 1, 3, 1, 3, 2, 1, 13, 0, 2,
	0, 2, 3, 3, 1, 3, 0, 2, 1, 3,
	4, 1, 3, 1, 3, 8, 9, 1, 1, 10,
	9, 8, 7, 7, 1, 1, 1, 3, 1, 3,
	1, 3, 0, 4, 3, 4, 5, 1, 3, 3,
	2, 2, 2, 2, 2, 1, 0, 0, 0, 2,
	3, 3, 11, 9, 11, 5, 5, 16, 12, 9,
	4, 0, 3, 0, 2, 2, 1, 3, 1, 1,
	2, 2, 2, 0, 2, 1, 2, 2, 2, 2,
	2, 0, 1, 1, 2, 3, 3, 5, 3, 3,
	4, 5, 4, 4, 2, 2, 2, 2, 2, 0,
	2, 2, 9, 10, 9, 5, 7, 7, 7, 7,
	8, 4, 6, 2, 3, 2, 3, 3, 3, 4,
	3, 3, 2, 2, 3, 2, 2, 2, 2, 2,
	3, 2, 2, 2, 3, 3, 2, 3, 3, 2,
	2, 2, 2, 2, 1, 3, 0, 3, 1, 3,
	0, 1, 1, 1, 1, 3, 1, 3, 3, 0,
	2, 5, 5, 5, 7, 5, 0, 3, 0, 3,
	4, 0, 1, 1, 3, 2, 3, 3, 3, 0,
	1, 1, 2, 2, 2, 2, 1, 2, 2, 3,
	3, 3, 3, 4, 2, 3, 3, 3, 3, 0,
	3, 0, 3, 3, 1, 1, 1, 3, 2, 1,
	1, 3, 3, 2, 1, 1, 3, 1, 2, 5,
	4, 6, 4, 3, 3, 6, 5, 5, 4, 3,
	5, 1, 3, 1, 1, 1, 1, 1, 0, 2,
	2, 1, 1, 1, 1, 1, 4, 5, 8, 1,
	2, 5, 7, 10, 8, 11, 1, 2, 5, 5,
	5, 5, 6, 3, 5, 1, 1, 1, 1, 3,
	1, 1, 1, 2, 1, 1, 2, 4, 2, 4,
	2, 3, 1, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 4,
	3, 2, 4, 3, 0, 2, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 5,
	5, 4, 1, 1, 2, 3, 4, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 0, 1, 1,
	0, 2, 3, 2, 2, 2, 2, 2, 6, 8,
	3, 3, 1, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 3,
	2, 2, 2, 2, 2, 1, 2, 2, 2, 1,
	4, 4, 3, 3, 2, 4, 5, 2, 3, 4,
	2, 2, 3, 3, 3, 3, 3, 4, 1, 1,
	1, 1, 1, 6, 6, 4, 4, 4, 5, 3,
	3, 3, 3, 3, 4, 6, 6, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 3, 0,
	3, 3, 0, 5, 0, 3, 5, 0, 1, 1,
	0, 1, 2, 3, 1, 0, 3, 3, 0, 2,
	2, 0, 1, 0, 1, 1, 1, 1, 2, 2,
	2, 5, 5, 4, 4, 4, 4, 4, 2, 1,
	2, 1, 2, 2, 3, 2, 2, 2, 2, 1,
	1, 1, 1, 3, 2, 1, 1, 0, 3, 1,
	1, 0, 1, 5, 4, 0, 1, 1, 2, 2,
	3, 2, 0, 1, 3, 5, 3, 3, 5, 3,
	2, 2, 1, 1, 1, 1, 1, 0, 1, 0,
	1, 1, 3, 3, 3, 3, 3, 1, 10, 11,
	11, 12, 12, 3, 3, 3, 2, 1, 5, 1,
	1, 0, 2, 2, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 2, 0, 1, 3, 0, 1, 3,
	3, 3, 4, 5, 3, 3, 4, 3, 3, 3,
	4, 4, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 3, 3, 3, 3, 2, 2,
	4, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 2, 0, 2, 1, 5, 1, 3,
	5, 4, 3, 5, 3, 8, 10, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 5, 4,
	5, 1, 2, 2, 4, 3, 6, 5, 3, 9,
	2, 2, 0, 1, 2, 0, 1, 7, 1, 3,
	8, 8, 3, 3, 3, 5, 3, 5, 5, 5,
	4, 4, 4, 4, 4, 4, 4, 0, 1, 1,
	3, 2, 3, 3, 4, 3, 5, 5, 5, 4,
	4, 4, 2, 2, 2, 6, 2, 4, 4, 4,
	5, 8, 6, 3, 5, 4, 2, 4, 3, 2,
	4, 5, 6, 2, 6, 6, 3, 3, 3, 0,
	1, 1, 1, 0, 2, 2, 0, 2, 3, 2,
	0, 1, 1, 2, 4, 1, 1, 1, 2, 4,
	4, 1, 1, 2, 3, 4, 4, 5, 3, 1,
	1, 3, 3, 1, 1, 1, 1, 0, 3, 1,
	1, 3, 0, 2, 0, 2, 1, 2, 2, 0,
	1, 0, 1, 1, 0, 1, 1, 0, 1, 3,
	5, 1, 1, 3, 5, 1, 2, 3, 5, 2,
	2, 6, 0, 1, 0, 3, 0, 1, 0, 2,
	2, 4, 1, 2, 2, 2, 2, 2, 0, 2,
	1, 3, 3, 1, 3, 0, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 1, 1,
	4, 1, 3, 1, 1, 2, 2, 4, 2, 6,
	1, 4, 6, 3, 2, 0, 3, 0, 3, 1,
	3, 1, 3, 4, 4, 4, 4, 3, 2, 4,
	0, 1, 0, 2, 0, 1, 1, 1, 1, 1,
	2, 2, 1, 2, 3, 2, 3, 2, 2, 12,
	11, 1, 3, 3, 4, 3, 0, 0, 3, 4,
	3, 1, 3, 3, 2, 1, 1, 3, 1, 1,
	1, 1, 3, 3, 0, 5, 5, 5, 0, 2,
	1, 3, 3, 3, 2, 3, 1, 2, 0, 3,
	1, 1, 3, 3, 4, 4, 5, 3, 4, 5,
	6, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 0, 2, 1, 1, 1,
	3, 1, 3, 0, 1, 1, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 2, 2, 2, 2, 3, 1,
	1, 1, 1, 1, 1, 5, 6, 6, 6, 5,
	5, 5, 6, 5, 5, 6, 5, 5, 5, 5,
	6, 5, 5, 5, 4, 4, 5, 5, 5, 5,
	5, 4, 4, 4, 4, 4, 4, 4, 4, 3,
	6, 6, 4, 6, 6, 4, 8, 8, 8, 8,
	4, 6, 7, 7, 7, 9, 4, 7, 5, 4,
	4, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 8, 8, 0, 2,
	3, 4, 4, 4, 4, 4, 4, 0, 3, 4,
	7, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 3, 3, 1,
	2, 2, 1, 2, 1, 2, 2, 1, 2, 0,
	1, 0, 2, 1, 2, 4, 0, 2, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 0, 3, 1, 3, 1, 0, 2, 1,
	0, 3, 1, 3, 2, 0, 1, 1, 0, 2,
	4, 4, 1, 1, 0, 2, 4, 2, 4, 1,
	3, 5, 4, 6, 0, 3, 1, 3, 3, 1,
	1, 1, 1, 1, 0, 5, 1, 3, 1, 2,
	3, 1, 1, 3, 3, 3, 3, 3, 1, 3,
	1, 2, 2, 3, 1, 1, 1, 1, 1, 3,
	3, 3, 1, 2, 1, 1, 1, 1, 1, 1,
	0, 1, 0, 2, 0, 3, 0, 1, 0, 3,
	3, 1, 1, 0, 1, 1, 1, 1, 1, 0,
	1, 0, 2, 1, 1, 1, 3, 1, 1, 1,
	1, 1, 1, 0, 2, 0, 1, 0, 4, 0,
	1, 0, 3, 0, 3, 0, 4, 0, 3, 0,
	3, 3, 1, 3, 2, 4, 1, 2, 1, 2,
	2, 2, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -364, -1, -3, -10, -11, -12, -13, -14, -16,
	-52, -17, -18, -19, -58, -59, -60, -64, -65, -66,
	-62, -61, -25, -28, -20, -68, -29, -30, -31, -32,
	-33, -34, -35, -36, -37, -5, 6, 7, -92, 29,
	-54, 180, -53, 183, 182, 218, 184, 211, 64, 341,
	-67, 344, 345, -369, -218, 269, 270, 20, 37, 346,
	348, 30, 31, 232, 286, 288, 313, -4, 512, 181,
	342, 213, 212, 26, -6, -7, -365, 68, 631, -158,
	15, -69, -370, -69, -72, 9, 10, 8, 441, -69,
	-292, -216, 108, 68, 23, -211, -222, 88, 432, 188,
	-220, 282, 284, -209, -210, -219, 242, 252, 44, 199,
	198, 253, 189, 282, 189, 190, 192, 432, 188, 225,
	224, 282, 284, 189, -113, -237, -226, -227, 300, 72,
	-225, 458, 462, 465, 466, 471, 290, 81, 322, 323,
	314, 324, 209, 283, 289, 292, 315, 598, 325, 327,
	328, 452, 453, 192, 202, 616, 307, 210, 509, 253,
	626, 619, 294, 401, 488, 341, 357, 349, 372, 510,
	569, 264, 340, 418, 489, 297, 257, 320, 570, 407,
	413, 267, 344, 490, 427, 233, 571, 261, 263, 262,
	247, 457, 268, 36, 214, 368, 303, 242, 572, 492,
	565, 491, 236, 35, 27, 235, 430, 99, 573, 331,
	415, 493, 389, 332, 231, 574, 514, 301, 414, 364,
	313, 117, 240, 279, 411, 333, 575, 390, 394, 576,
	419, 287, 278, 577, 578, 334, 579, 191, 293, 494,
	580, 243, 421, 298, 388, 200, 511, 48, 222, 422,
	392, 398, 581, 330, 582, 583, 584, 585, 311, 309,
	495, 310, 312, 254, 259, 496, 53, 186, 396, 395,
	397, 260, 417, 377, 375, 586, 587, 302, 206, 588,
	589, 376, 18, 590, 591, 425, 305, 592, 593, 594,
	497, 487, 595, 596, 416, 391, 393, 241, 116, 597,
	308, 412, 317, 513, 291, 599, 336, 221, 216, 426,
	326, 600, 601, 602, 603, 604, 285, 284, 345, 318,
	498, 346, 265, 605, 606, 499, 607, 608, 251, 234,
	429, 420, 52, 403, 609, 321, 337, 406, 342, 228,
	500, 501, 502, 7, 258, 299, 410, 319, 266, 252,
	255, 379, 223, 610, 611, 366, 367, 343, 226, 218,
	111, 428, 564, 282, 338, 51, 229, 612, 613, 256,
	230, 347, 296, 369, 189, 133, 373, 418, 180, 408,
	409, 415, -285, 416, 224, 227, -242, 189, -204, 407,
	287, 308, 462, 230, 231, 190, 191, 32, 420, 419,
	411, -237, 193, 347, -78, 184, 219, -113, -49, 72,
	271, -49, 29, 72, 72, 36, 72, 346, 410, 410,
	75, 513, 233, 21, -356, -337, 317, -355, -335, 181,
	180, 10, 182, 322, 323, 324, 190, 8, 30, 598,
	207, 325, 326, 6, 211, 327, 328, 225, 9, 329,
	-340, 74, 72, -225, 21, -356, -337, 317, -213, -212,
	339, 398, -91, 568, -89, -98, -239, -237, -226, 74,
	-200, 194, 343, -71, 5, -9, -3, 512, -176, 17,
	16, -75, 54, 55, -70, -83, 124, -85, -237, -122,
	91, -128, 28, 72, -225, 24, -127, 300, 219, -123,
	-150, -226, -149, -101, 133, -241, 122, 123, 130, 92,
	176, -135, -133, -134, -136, -138, -139, 74, 73, 82,
	75, 76, 77, 78, 83, 84, 85, -229, -227, -224,
	458, 462, 465, 466, 471, -147, -365, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 58,
	59, 456, 188, 442, 443, 370, 8, 444, 445, 446,
	508, 209, 450, 94, 47, 553, 431, 440, 439, 438,
	436, 437, 433, 435, 434, 452, 453, 195, 432, 128,
	441, 475, 476, 477, 478, 479, 480, 481, 482, 484,
	485, 483, 459, 460, 461, 463, 464, 467, 468, 469,
	470, 472, 473, 474, 515, 185, 181, 184, 90, 23,
	25, 516, 239, 93, 355, 384, 449, 16, 20, 203,
	187, 373, 201, 132, 197, 204, 273, 275, 180, 62,
	517, 274, 408, 518, 519, 520, 521, 363, 361, 272,
	522, 10, 26, 212, 246, 523, 359, 182, 237, 97,
	98, 525, 41, 40, 306, 276, 213, 526, 360, 527,
	528, 19, 65, 205, 11, 199, 227, 625, 529, 286,
	13, 115, 14, 530, 531, 532, 533, 194, 110, 190,
	615, 60, 244, 534, 353, 535, 536, 537, 538, 539,
	354, 87, 540, 541, 107, 542, 56, 486, 32, 232,
	566, 447, 543, 544, 38, 37, 383, 387, 382, 545,
	399, 108, 17, 30, 546, 547, 220, 386, 352, 381,
	567, 548, 549, 249, 63, 339, 362, 629, 33, 66,
	217, 335, 304, 42, 88, 15, 245, 61, 34, 454,
	112, 630, 365, 196, 224, 551, 423, 248, 552, 113,
	358, 568, 207, 109, 348, 183, 316, 270, 208, 554,
	288, 555, 238, 114, 409, 556, 557, 451, 29, 211,
	269, 351, 198, 558, 250, 281, 271, 280, 559, 560,
	295, 43, 627, 614, 189, 39, 96, 385, 350, 380,
	193, 448, 225, 277, 5, 44, 31, 404, 9, 329,
	64, 67, 374, 371, 561, 378, 628, 12, 562, 455,
	512, 424, 89, 563, 405, -69, -69, -69, -189, 343,
	-196, -193, 419, 420, -194, -197, -191, -150, 398, 595,
	596, 418, 373, 417, -229, -237, -226, 300, 219, 133,
	459, 460, 461, 94, 370, 442, 475, 433, 435, 431,
	434, 432, 28, 476, 24, 85, 477, 456, 195, 8,
	176, 463, 464, 478, 479, 480, 58, 436, 437, 508,
	128, 91, 481, 482, 83, 484, 485, 553, 441, 59,
	483, 188, 469, 468, 467, 470, 444, 445, 84, 438,
	439, 440, 47, 473, 472, 474, -2, -6, 6, -113,
	-293, -279, -283, -229, -226, -227, -228, 215, 204, -307,
	72, -225, 300, 219, 50, 86, 55, 54, 201, 190,
	192, 441, -207, 195, -207, 225, 224, -221, 250, -207,
	-207, 189, -220, 100, 100, -55, -113, -339, -334, -340,
	-206, 195, -229, -206, -206, -206, -206, -206, -206, -206,
	-113, 177, -105, -113, 72, 29, -205, 108, 12, 432,
	188, 189, 224, 225, 192, -287, 11, 110, 228, 228,
	228, 229, 228, -203, 410, 412, 226, 413, 414, 12,
	-86, 108, 19, -365, -176, -176, 125, 72, 346, 193,
	-63, -3, -13, -11, -12, -9, 100, -130, 23, 29,
	29, 74, 51, 29, -44, -43, -45, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 29,
	-318, 68, -274, 398, 72, -331, -332, -113, 75, 75,
	66, 308, 66, 69, 193, 69, 66, -357, 318, 68,
	-357, 284, 318, 319, 252, 282, 192, -357, -357, 284,
	-357, -357, -357, -357, -357, 410, -357, -357, -357, 320,
	321, -357, 408, 192, -357, -357, -357, -357, -357, 71,
	66, 69, 308, 66, 11, 66, -304, 133, 331, 332,
	333, 334, 330, 308, 335, 336, 337, 228, 338, -4,
	-89, 69, -180, -365, 189, 423, -8, -6, -365, 21,
	22, -366, 70, -91, -177, 19, 30, -131, 75, 78,
	-159, -162, -85, -237, 50, -73, 21, 22, 80, 11,
	-232, 90, 88, 89, 107, -231, 23, 72, -225, -226,
	74, -227, -228, 177, -85, -125, 110, 91, 108, 109,
	93, 119, 118, 129, 122, 123, 124, 125, 126, 127,
	128, 120, 121, 132, 100, 101, 102, 103, 104, 105,
	106, -201, -365, -101, -365, 177, -365, 177, 178, 179,
	177, -128, -128, -128, -128, -128, -128, -128, -365, 177,
	177, -365, -365, -365, -365, -365, -9, -142, -85, 512,
	-365, -365, -365, -365, -365, -365, -365, -365, -365, -365,
	-365, -365, -365, -365, -365, -153, -85, -365, -365, -368,
	-137, -365, -368, -137, -368, -137, -368, -365, -368, -137,
	-368, -137, -368, -368, -137, -368, -365, -365, -365, -365,
	-365, -365, -365, -365, -365, -365, -365, -365, -365, -365,
	-365, -365, -365, -365, -365, -365, -365, -365, -365, -365,
	-365, -365, -365, -365, -365, -200, -200, 11, -105, -106,
	-116, -237, 69, -190, -195, 421, 423, 343, -194, -194,
	-236, -229, 74, 28, 100, 29, 177, -158, -69, 70,
	69, -283, -244, -250, -252, -251, -253, -248, -249, 370,
	373, 377, 375, 371, 376, 133, 374, 379, 380, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 29, 214,
	366, 367, 368, 369, 390, 391, 392, 393, 394, 395,
	396, 397, 349, 372, 510, 350, 351, 352, 353, 354,
	355, 357, 358, 359, 360, 361, 362, 363, 364, -244,
	-244, -244, -244, 72, 228, -226, -307, 68, -229, -113,
	-222, -220, 72, 91, 72, -112, -229, -237, -119, -229,
	-237, 251, -343, -342, -334, -337, -207, -221, -334, 256,
	254, 255, 69, 193, 69, 193, 71, -105, 24, 66,
	-107, -113, 72, 72, -112, -119, -336, -334, -337, -238,
	-237, -223, 515, 185, 21, 181, 184, 90, 23, 25,
	516, 239, 93, 355, 133, 459, 460, 461, 384, 449,
	16, 20, 203, 94, 187, 370, 373, 201, 132, 197,
	204, 273, 275, 442, 475, 180, 62, 517, 433, 435,
	431, 434, 274, 432, 408, 518, 519, 520, 521, 363,
	361, 272, 28, 522, 10, 476, 26, 212, 246, 22,
	523, 126, 359, 182, 237, 97, 98, 525, 41, 40,
	306, 24, 276, 213, 85, 526, 477, 360, 527, 528,
	19, 65, 205, 11, 199, 227, 625, 529, 286, 13,
	456, 115, 14, 530, 531, 532, 533, 195, 194, 110,
	190, 615, 60, 244, 8, 534, 353, 535, 536, 537,
	538, 539, 354, 176, 87, 540, 541, 107, 542, 56,
	463, 464, 486, 45, 32, 232, 478, 479, 566, 480,
	447, 543, 544, 38, 37, 383, 387, 382, 545, 399,
	58, 108, 17, 436, 437, 30, 546, 547, 508, 220,
	386, 352, 381, 567, 548, 549, 128, 249, 63, 91,
	339, 481, 482, 83, 362, 629, 33, 66, 217, 335,
	304, 42, 88, 15, 245, 61, 34, 454, 112, 630,
	484, 365, 196, 224, 551, 423, 248, 552, 113, 485,
	358, 568, 207, 109, 348, 183, 553, 441, 316, 270,
	208, 554, 288, 59, 555, 238, 114, 483, 188, 409,
	556, 6, 557, 451, 29, 211, 269, 351, 198, 558,
	250, 281, 271, 280, 559, 49, 560, 295, 43, 469,
	468, 467, 470, 627, 57, 444, 445, 614, 189, 39,
	96, 385, 350, 380, 193, 448, 225, 84, 277, 5,
	44, 31, 404, 9, 329, 64, 67, 438, 439, 440,
	47, 374, 371, 561, 473, 378, 472, 474, 628, 95,
	12, 562, 455, 512, 424, 89, 563, 405, 69, -205,
	74, -241, -85, -207, -207, -113, -113, -113, -113, -113,
	-205, -205, -205, -205, -202, 11, 110, 11, -202, -202,
	-85, -128, -334, 434, 124, -237, 72, 72, 346, 72,
	33, -44, -44, 74, -44, 69, 100, -44, 70, -142,
	-317, 615, 69, -333, 23, 423, 424, 399, -359, 189,
	227, 224, 66, -359, -355, 326, -336, -335, -334, -357,
	-358, -229, -357, -357, -357, 410, -357, -357, -357, -357,
	-357, -357, -357, -357, -340, -359, 286, 69, -359, -336,
	-334, 330, 330, 330, 330, 330, 330, -98, 23, -179,
	-178, -230, -226, -227, -228, 215, -229, -223, -113, 424,
	425, -9, -186, 87, 9, 110, 69, 18, 69, -175,
	25, 26, 177, -129, 51, 75, 78, -208, 49, -113,
	-85, -85, -85, -140, 83, 91, 84, 85, -231, 215,
	124, -238, -230, -227, -226, 300, 219, -223, -128, -141,
	-147, -101, 79, 110, 108, 109, 93, -128, -128, -128,
	-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
	-128, -128, -240, 72, 74, 72, -230, -81, -84, 124,
	-85, -237, -230, -127, 83, -127, -229, -229, -73, -230,
	-230, -73, -73, -73, -73, -73, -366, 69, -366, -9,
	-81, -81, -81, -366, -85, -85, -81, -81, -150, 74,
	-81, -150, 74, -81, -128, 447, 448, 449, -81, -81,
	-73, -151, -152, 95, -150, -81, -366, -128, -229, -229,
	-81, -82, -81, -81, -81, -366, -366, -84, -81, -84,
	-81, -81, -366, -366, -366, -366, -81, -81, -81, -81,
	-81, -81, -81, -81, -81, -81, -81, -81, -115, 87,
	-113, -88, -93, -95, -96, -117, -100, -365, -94, -97,
	-113, -101, 72, 486, -113, -105, -367, 11, 67, -367,
	69, 177, -193, -196, 69, 422, 424, 425, -190, -261,
	132, 66, 86, -85, -230, -238, -176, -75, -295, -296,
	622, 401, 488, 373, 28, 489, 132, 81, 490, 233,
	36, 190, 492, 430, 331, 493, 494, 200, 495, 496,
	497, 292, 498, 342, 499, 500, 501, 502, 319, 5,
	-279, -281, -282, -283, -298, 204, -306, 196, 198, 199,
	44, -284, 205, 190, 45, -245, -269, 403, 404, -255,
	68, -254, 68, -254, 378, 370, 373, 371, -254, -254,
	-254, -254, -254, -260, 373, -260, -260, -260, -260, 371,
	68, 68, -255, -255, -255, -271, 68, -271, 365, -272,
	68, -272, -272, -272, -272, -245, -245, -245, -245, -307,
	-307, -307, -85, -233, 67, 23, 192, -267, -266, -263,
	-264, -265, -262, 28, 24, -267, -50, 239, 210, 177,
	68, 177, 242, 243, -338, 69, 28, -344, 283, -113,
	219, -113, -113, -334, -334, -340, -314, 208, 203, -113,
	69, 69, -113, 74, 72, 72, -130, -288, 11, 110,
	-205, -237, -237, -113, -130, -205, -79, 215, 67, -368,
	-366, 72, -128, -43, -127, 70, -114, 87, 74, -332,
	-239, 398, 424, -360, 124, -229, -359, -360, -363, 512,
	193, 70, 69, -357, -360, 304, 286, -360, 11, -305,
	19, -100, -365, -366, 69, 177, -57, -56, 185, 182,
	183, 186, 187, -310, 401, 181, 236, 235, 221, -366,
	-185, 34, 35, -229, 52, -131, -131, -162, -199, 19,
	11, 47, 47, -74, 57, 83, 84, 85, 177, -365,
	-141, -128, -128, -128, -79, 90, -366, 69, -366, 177,
	-82, -81, -81, -81, -81, -81, -85, -366, -366, -366,
	-366, 69, 67, 23, -366, 67, -366, 11, 11, -366,
	11, 11, -366, -366, 11, -128, -128, -128, -366, -366,
	-81, -154, -152, 97, -85, -366, -366, -366, 69, 69,
	-366, -366, -366, -366, -163, 454, -163, -366, -366, -366,
	-366, -366, -163, -163, -163, -163, -366, -366, -366, -366,
	-366, -366, -366, -366, -366, -366, -366, -366, -183, 112,
	-113, 29, 69, -108, -110, -109, -111, 56, 60, 62,
	57, 58, 59, 63, -216, -88, -99, 47, -365, -118,
	112, -120, 23, -239, 64, 194, 65, -365, -365, -183,
	67, -88, -88, -116, -237, 124, -195, -198, 426, 423,
	429, 72, 74, 177, -177, 69, -291, 100, -291, -291,
	29, 373, 132, -291, -291, -291, -291, -291, 491, 491,
	-291, -291, -291, -291, -291, -291, -291, -291, -291, -291,
	-291, 343, -291, -291, -291, -291, -297, 505, 74, 75,
	81, 503, 322, 292, 133, 504, 206, 28, -291, -283,
	68, 72, -289, -226, 45, -284, -286, -284, -284, -289,
	72, -289, 45, 83, 91, -258, -259, -273, -276, -256,
	23, 625, 406, 28, 66, 401, 196, 45, 44, 199,
	81, -270, 405, 75, -260, 75, 465, -260, -254, -254,
	-254, 378, -254, -260, -261, 133, 29, -261, 133, -261,
	133, -261, 133, -261, 133, -260, -277, 74, -277, 75,
	-271, 75, 70, 66, -229, -172, -113, -264, -263, -265,
	373, 418, 132, 430, -51, 8, 9, 10, -229, -319,
	-320, -321, -229, 110, 244, 245, -229, -347, 316, -342,
	284, 293, 90, 16, 512, 193, 193, -113, -334, -121,
	12, 72, 72, -202, -205, -128, -337, 230, 231, -183,
	189, -333, 193, 177, 177, -360, 193, 307, -336, -229,
	11, 11, 304, 11, -336, 340, -178, -230, 69, -217,
	-284, -316, -282, -283, -315, 197, 204, -217, 204, 201,
	-284, 205, 196, 197, -214, -284, 193, 23, -217, -217,
	-290, 100, -217, 32, 32, 112, 69, 74, 74, 53,
	-113, -80, -173, 124, -230, -82, -79, 90, -128, -84,
	124, -238, -366, -366, -366, -366, -366, -366, -243, 133,
	370, 214, 368, 361, 388, 375, 403, 366, 404, -240,
	-243, -240, -128, -128, -128, -128, -128, 11, 11, 11,
	509, -158, 99, -85, 96, -128, -128, -229, -168, -365,
	-163, -163, -163, -163, -163, -164, -163, -164, -164, -164,
	-164, -164, -164, -164, -164, -164, -164, -164, -126, 29,
	47, -365, -9, -365, -188, -192, -150, -226, -228, 215,
	300, 219, -93, -95, -95, -93, -95, 56, 56, 56,
	61, 56, 61, 56, -109, -239, -366, -366, -146, 238,
	-365, 33, -239, -120, 190, 190, 190, -82, -128, -121,
	-88, -121, -121, 177, 423, 427, 428, -296, -297, -297,
	-297, -291, 29, -291, -297, -297, -297, -297, -297, -291,
	-291, -297, -297, -297, -297, -297, -297, -297, -297, -297,
	-297, -297, -297, -297, -297, -297, 506, -297, -300, -299,
	-229, -226, 196, -306, 44, -306, -289, -289, -289, -289,
	68, 83, -365, 626, 75, -128, 9, 45, 45, 45,
	74, 70, -261, 133, 70, 70, -261, 133, -260, -254,
	-261, 133, 72, 133, -261, 133, 70, 69, 70, 69,
	70, 69, -124, 573, 91, -113, -174, 23, 29, -290,
	-290, -290, 66, 70, 69, -244, -229, -229, -229, -350,
	512, 289, -348, -346, 295, 296, 297, 298, 299, -337,
	294, -344, 291, 74, 72, -113, -334, -85, -130, -260,
	-113, -336, 124, 124, -229, 193, -336, 304, -362, 512,
	-336, -336, 11, -336, 74, -56, 68, -278, 72, -225,
	-289, -210, 196, 72, 72, 72, -226, -225, -227, -228,
	72, -226, -225, -227, -228, -229, 45, 45, 72, -113,
	-229, -278, 72, -85, -229, -229, -229, -186, 69, -83,
	-366, -128, 177, -164, -164, -164, -164, -164, -366, -255,
	-255, -255, -272, -255, 354, -255, 354, -366, -366, -366,
	19, 19, 19, 19, -366, -128, -128, -128, -365, -77,
	451, -85, 69, 69, -234, 72, -187, 66, -188, -145,
	-148, -147, -365, -9, -366, -179, 6, 512, -184, -229,
	-121, 69, 100, 100, 100, 100, -103, -102, 66, 67,
	-104, 66, -102, 56, 56, -182, 68, 69, -147, -365,
	-184, -128, -120, -365, -365, -365, -366, 69, -158, -121,
	-240, -291, -297, -297, -297, 507, 70, 69, -255, -255,
	45, -286, -181, -229, -128, 23, -134, 431, 440, 439,
	438, 436, 437, 433, 435, 434, 452, 453, -261, 133,
	-260, 74, -260, 75, 75, 573, 68, -9, -172, -290,
	72, 133, 72, 133, 74, -113, -322, -323, -324, 81,
	511, 91, 246, 247, 206, 248, 249, 250, -321, -244,
	-244, -244, -353, -354, -352, 292, 314, 315, 300, -351,
	-349, 309, 310, 311, 312, 90, 74, 74, 74, -345,
	283, 90, 292, 16, 23, -205, -325, -203, -362, -336,
	-362, 286, -336, -278, -160, 209, 210, -244, -244, -233,
	-286, 45, 72, -215, 193, 23, 193, -160, -278, 29,
	182, 87, -90, 11, -173, -173, 124, -260, 72, -128,
	-128, -128, -128, -366, -366, -366, -128, -366, 74, -128,
	-128, -144, 112, 27, -187, 69, -366, -366, 47, -366,
	-366, 69, -158, -192, -85, -85, -85, -85, -85, 68,
	-85, -181, 238, -366, -120, -216, -181, -181, -181, 74,
	-176, -240, -302, -301, 67, 200, 81, -299, -175, -175,
	-289, -289, 70, 69, -366, -365, -261, 133, -261, 133,
	70, 70, -300, -172, -174, 72, 133, 19, -173, -324,
	74, 250, 246, 250, 250, 250, 250, 251, -341, 81,
	290, -352, 301, 578, 285, 316, 75, 75, 111, 30,
	31, -349, 75, 75, 75, 75, -346, 16, 512, -344,
	291, 74, 74, -326, 38, -328, 39, -361, 23, -362,
	-361, 304, 70, 72, -245, -245, 68, -289, -289, 72,
	-229, -160, 28, 28, -365, -121, -88, -83, -366, -366,
	-366, -366, -76, 110, 512, -366, -366, -158, 16, 45,
	-148, -145, 47, -9, -365, -229, -176, -181, 70, -147,
	-118, -239, -366, -366, -366, 413, -301, 72, -290, 74,
	207, -229, -268, 628, 627, -128, 70, -9, 237, -174,
	36, 36, 242, 243, 74, 74, 28, 302, 176, 28,
	75, 176, 457, 291, 74, 72, 292, -257, 194, -329,
	43, -327, -275, 42, 16, -334, -361, -300, -233, 68,
	-128, -308, -309, 112, -155, 13, -173, -366, 510, 63,
	513, -169, 114, 113, -142, 9, -145, -9, 70, -120,
	-365, 75, -113, -366, -303, -302, -172, 238, -22, -3,
	-11, -12, -13, -14, -16, -52, -17, -18, -23, -24,
	-19, -58, -59, -67, -65, -66, -62, -61, -27, -25,
	-28, -20, -29, -30, -31, -35, -36, -26, -37, 94,
	195, 272, 341, 75, 28, 75, 28, 305, 292, 23,
	-182, 75, -328, 16, -330, 40, 41, 74, 512, 70,
	68, -300, -366, 69, -229, -156, 14, 16, 53, 511,
	514, -366, -170, 93, -171, 111, 457, -132, 75, 176,
	-170, -188, -366, -294, -280, -230, 68, -268, -161, 240,
	241, -172, -85, -85, 72, -48, -235, 275, 276, 277,
	-230, -38, -22, 303, 303, 74, 38, 114, 74, 16,
	16, 284, -303, -300, 70, -309, 47, -166, 455, -157,
	-85, -143, -87, -85, 53, -171, 116, 117, 238, 116,
	117, -127, -366, 69, -244, -181, -172, 72, 72, -39,
	-40, 95, 96, 273, 274, 278, -244, 69, 631, 74,
	74, 28, 289, 21, -337, 70, -303, 222, -165, -167,
	-229, 69, 512, 90, -229, -366, -280, -246, 487, 24,
	70, -174, 99, 97, -40, -85, -38, 19, 19, 19,
	28, -230, 99, -22, 306, -303, 223, 69, 23, -87,
	513, -171, 23, -239, 74, 487, -312, -313, 66, -15,
	-21, -14, -11, -12, -13, 341, 512, 94, -38, 96,
	631, -49, 75, -9, -47, -46, 75, -49, 280, 91,
	281, 72, -128, -337, -365, -167, -168, 514, -239, -247,
	74, -313, 66, -312, 66, 10, 9, -172, -38, -91,
	631, -38, 99, 97, -41, -42, 98, -22, 69, 279,
	-128, 220, -371, 83, 28, 332, -311, 208, 203, 206,
	29, -311, 631, 99, 631, 195, -38, 99, 97, -42,
	-85, -46, -366, -366, 66, -128, 66, 202, 28, 83,
	99, 94, 631, 195, -38, 96, 525, 66, 525, 99,
	631, -38, 525, 195, 99, 631, 195,
}

var yyDef = [...]int{
	-2, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, 1240, 822, 822, 0, 822,
	924, -2, 676, 0, 0, 0, 0, -2, 795, 796,
	797, 801, 802, 817, 819, 0, 347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 561, -2, 0, 1316,
	0, 820, 809, 810, 41, 0, 0, 2167, 2, 1248,
	0, 831, 824, 0, 822, 822, 822, 67, 68, 0,
	99, 0, 0, 0, 925, 0, 0, 0, 1314, 1314,
	251, 1314, 1314, 0, 1330, 249, 0, 1311, 1326, 1327,
	1328, 0, 0, 0, 1312, 0, 1312, 1312, 1312, 1312,
	1312, 1312, 1312, 0, 741, 956, 958, 959, 960, 1339,
	1340, 2162, 2163, 2164, 2165, 2166, 2138, 2139, 2140, 2141,
	2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151,
	2152, 2153, 2154, 2155, 1918, 1919, 1920, 1921, 1922, 1923,
	1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933,
	1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943,
	1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953,
	1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963,
	1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973,
	1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983,
	1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993,
	1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003,
	2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013,
	2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023,
	2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033,
	2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043,
	2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053,
	2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063,
	2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073,
	2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083,
	2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093,
	2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103,
	2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113,
	2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123,
	2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133,
	2134, 2135, 2136, 2137, 0, 0, 0, 786, 0, 752,
	753, 754, 0, 756, 0, 0, 0, 0, 0, 766,
	769, 773, 0, 1248, 1248, 582, 583, 584, 791, 792,
	780, 793, 0, 0, 56, 0, 0, 905, 326, 328,
	0, 348, 0, 351, 354, 1345, 803, 0, 0, 1370,
	1371, 0, 0, 0, 0, 0, 2066, 194, 265, 196,
	196, 196, 196, 196, 196, 196, 196, 196, 0, 196,
	196, 196, 2074, 196, 0, 196, 196, 196, 196, 196,
	264, 254, 255, 256, 0, 0, 0, 2066, 0, 562,
	559, 560, 57, 0, 46, 58, 1264, 926, 927, 928,
	0, 1317, 798, 0, 826, 0, 39, 0, 1254, 0,
	0, 834, 832, 833, 823, 0, 845, 875, 0, 970,
	1803, 976, -2, -2, -2, 1716, 1019, 1020, 1021, 1022,
	1023, 1024, 1025, 1026, 1661, 0, 0, 0, 0, 0,
	1758, 1049, 1050, 1051, 1052, 1053, 1054, 1221, 1222, 1223,
	1224, 1225, 1226, 1227, -2, -2, -2, 1208, 1209, 0,
	2162, 2163, 2164, 2165, 2166, 1281, 0, 1144, 1145, 1146,
	1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156,
	1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166,
	1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176,
	1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1784,
	1847, 1735, 1852, 1680, 0, 1672, 1749, 1876, 1877, 0,
	1792, 2144, 0, -2, 1901, 1840, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, 2153, 2154, 1742, 1690, 1800,
	1841, 1681, 1702, 1721, 1770, 1771, 1773, 1805, 1806, 1824,
	1833, 1851, 1662, 1663, 1664, 1765, 1766, 1873, 1872, 1871,
	1874, 1907, 1905, 1908, 1650, 1651, 1652, 1653, 1654, 1655,
	1656, 1657, 1658, 1659, 1660, 1665, 1666, 1667, 1668, 1669,
	1671, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1682, 1683,
	1684, 1689, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698,
	1700, 1701, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710,
	1711, 1712, 1713, 1714, 1715, 1717, 1718, 1720, 1722, 1723,
	1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733,
	1734, 1736, 1737, 1738, 1739, 1740, 1741, 1743, 1744, 1745,
	1746, 1747, 1748, 1750, 1751, 1752, 1753, 1754, 1755, 1756,
	1757, 1759, 1760, 1761, 1762, 1763, 1764, 1767, 1768, 1769,
	1772, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782,
	1783, 1785, 1786, 1789, 1790, 1791, 1793, 1794, 1795, 1796,
	1797, 1798, 1799, 1801, 1802, 1804, 1808, 1809, 1810, 1811,
	1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821,
	1822, 1823, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832,
	1834, 1835, 1836, 1837, 1838, 1839, 1842, 1843, 1844, 1845,
	1846, 1848, 1849, 1850, 1853, 1854, 1855, 1856, 1857, 1858,
	1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868,
	1869, 1870, 1875, 1878, 1879, 1880, 1881, 1882, 1883, 1884,
	1885, 1886, 1887, 1889, 1890, 1891, 1892, 1893, 1894, 1895,
	1896, 1897, 1902, 1903, 1904, 1906, 1909, 1910, 1911, 1912,
	1913, 1914, 1915, 1916, 1917, 1316, 1316, 0, 84, 2121,
	0, 1288, -2, -2, 1290, 0, 0, 0, -2, -2,
	-2, -2, 1673, -2, 1208, 0, 0, 0, 0, 1661,
	1662, 1663, 1664, 1670, 1672, 1680, 1681, 1685, 1686, 1687,
	1688, 1690, 1699, 1702, 1716, 1719, 1721, 1735, 1742, 1749,
	1758, 1765, 1766, 1770, 1771, 1773, 1784, 1787, 1788, 1792,
	1800, 1803, 1805, 1806, 1807, 1824, 1833, 1840, 1841, 1847,
	1851, 1852, 1871, 1872, 1873, 1874, 1876, 1877, 1888, 1898,
	1899, 1900, 1901, 1905, 1907, 1908, 100, 1240, 822, 101,
	0, 392, 393, 0, 0, 0, 0, 0, 0, 607,
	1333, 1334, 2156, 2157, 2158, 2159, 2160, 2161, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 1314, 251, 0, 0, 722, 0, 723, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	740, 0, 742, 78, 743, 786, 745, 0, 0, 1314,
	1314, 0, 0, 0, 0, 0, 609, 610, 786, 786,
	786, 786, 783, 0, 783, 763, 783, 781, 782, 0,
	768, 0, 0, 0, 776, 777, 0, 804, 0, 0,
	811, 813, 814, 815, 816, 812, 0, 821, 0, 0,
	0, 330, 0, 0, 350, 332, 0, 335, 336, 337,
	338, 339, 340, 341, 342, 343, 344, 345, 346, 0,
	353, 0, 1343, 1346, 808, 1361, 1362, 0, 1372, 1373,
	200, 0, 200, 0, 0, 0, 0, 163, 196, 0,
	165, 196, 196, 196, 0, 196, 196, 172, 173, 196,
	175, 176, 177, 178, 179, 196, 181, 182, 183, 196,
	196, 186, 196, 196, 189, 190, 191, 192, 193, 263,
	200, 0, 0, 200, 0, 0, 544, 0, 0, 0,
	0, 549, 550, 551, 552, 0, 0, 555, 556, -2,
	45, 0, 0, 0, 0, 0, 42, 63, 0, 827,
	828, 62, 2168, 0, 50, 0, 0, 1249, 1252, 1253,
	1241, 1242, 1245, 0, 0, 829, 835, 836, 825, 0,
	846, 0, 0, 0, 0, 876, 0, 879, 880, 881,
	882, 883, 884, 0, 974, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 998, 999, 1000, 1001, 1002, 1003,
	1004, 977, 0, 991, 0, 0, 0, 0, 0, 0,
	0, 1042, 1043, 1044, 1045, 1046, 1047, 0, 834, 0,
	0, 834, 834, 834, 834, 834, 0, 0, 1017, 1913,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 834, 0, 1200, 0, 0, 1111,
	1120, 0, 1112, 1121, 1113, 1122, 1114, 0, 1115, 1123,
	1116, 1124, 1117, 1118, 1125, 1119, 0, 0, 0, 1013,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	80, 956, 0, 85, 87, 0, 0, 2121, 1291, 1292,
	518, 1305, 1306, 1307, 0, 1303, 0, 1248, 831, 624,
	0, 394, 410, 507, 422, 423, 424, 497, 426, 499,
	499, 0, 499, 499, 499, 499, 499, 515, 515, 515,
	515, 515, 468, 469, 470, 471, 472, 0, 0, 445,
	497, 497, 497, 449, 487, 488, 489, 490, 491, 492,
	493, 494, 427, 428, 429, 430, 431, 432, 433, 434,
	435, 436, 502, 502, 504, 504, 504, 504, 504, 410,
	410, 410, 410, 0, 0, 0, 606, 0, 1331, 0,
	0, 251, -2, 0, -2, 0, 951, 0, 0, 961,
	0, 0, 111, 281, 267, 110, 0, 245, 250, 246,
	247, 248, 0, 0, 0, 0, 258, 737, 1313, 0,
	730, 76, 731, 732, 733, 734, 735, 260, 736, 957,
	1341, 1342, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381,
	1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391,
	1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401,
	1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411,
	1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421,
	1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431,
	1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441,
	1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451,
	1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461,
	1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471,
	1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481,
	1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491,
	1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501,
	1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511,
	1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521,
	1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531,
	1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541,
	1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551,
	1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561,
	1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571,
	1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581,
	1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591,
	1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601,
	1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611,
	1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621,
	1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631,
	1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641,
	1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 0, 744,
	787, 0, 789, 0, 0, 905, 749, 750, 751, 611,
	757, 758, 759, 765, 786, 0, 0, 0, 905, 786,
	767, 1005, 770, 1128, 0, 794, 806, 805, 0, 818,
	0, 327, 329, 331, 349, 0, 0, 352, 355, 0,
	0, 0, 0, 1364, 0, 1366, 1368, 0, 0, 201,
	202, 203, 200, 0, 195, 0, 218, 266, 0, 164,
	0, 198, 166, 167, 168, 196, 170, 171, 174, 180,
	184, 185, 187, 188, 262, 0, 0, 0, 0, 161,
	0, 545, 546, 547, 548, 557, 554, 59, 0, 0,
	1266, 1269, 1270, 1271, 1272, 1273, 1337, 1338, 0, 799,
	800, 0, 37, 0, 1255, 0, 0, 0, 0, 1244,
	1246, 1247, 0, 0, 1229, 0, 0, 837, 830, 40,
	971, 972, 973, 975, 992, 0, 994, 996, 877, 878,
	847, 0, 1210, 1211, 1212, 1213, 1214, -2, 982, 983,
	1007, 1008, 1009, 0, 0, 0, 0, 1005, 987, 0,
	1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036,
	1037, 1038, 1041, 1142, 1143, 0, 1218, 0, 1015, 841,
	842, 0, 1219, 1039, 1228, 1040, 1215, 1048, 1013, 1217,
	1216, 0, 0, 0, 0, 0, 1010, 0, 1280, 0,
	0, 0, 0, 1089, 0, 0, 0, 0, 1023, 1221,
	0, 1023, 1221, 0, 0, 1774, 1886, 1666, 0, 0,
	0, 1206, 1203, 0, 0, 0, 1129, 0, 0, 0,
	0, 0, 1014, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 82, 0,
	955, 0, 885, 887, 888, 889, -2, 0, 893, 894,
	964, 1011, 1339, 0, -2, 0, 0, 74, 75, 0,
	0, 0, 1289, 0, 0, 0, 90, 91, 86, 1293,
	0, -2, 1300, 1301, 1210, 0, 1254, 834, 391, 625,
	627, 627, 627, 0, 0, 627, 627, 627, 627, 627,
	0, 0, 627, 627, 627, 627, 627, 627, 627, 627,
	627, 627, 627, 0, 627, 627, 627, 627, 0, 627,
	395, 397, 398, 399, 0, 589, 597, 0, 0, 587,
	589, 589, 0, 585, 586, 402, 510, 508, 509, 425,
	0, 515, 0, 515, 499, 499, 499, 499, 454, 515,
	457, 460, 461, 518, 0, 518, 518, 518, 518, 515,
	0, 0, 446, 447, 448, 437, 0, 438, 502, 440,
	0, 441, 442, 443, 444, 403, 404, 405, 406, 603,
	604, 605, 0, 0, 0, 96, 0, 105, -2, 525,
	526, 527, 0, 522, 1315, 106, 0, 283, 284, 0,
	221, 0, 252, 253, 113, 0, 0, 268, 0, 389,
	390, 0, 724, 0, 726, 257, 728, 738, 739, 729,
	0, 0, 79, 788, 746, 747, 748, 968, 0, 0,
	760, 784, 785, 783, 786, 764, 778, 0, 0, 771,
	0, 807, 906, 333, 334, 356, 82, 0, 1344, 1363,
	0, 1367, 1369, 0, 204, 206, 0, 0, 155, 0,
	0, 197, 0, 169, 0, 0, 0, 0, 0, 553,
	0, 60, 0, 1265, 0, 0, 677, 678, -2, 715,
	1323, 715, 715, 701, 572, 715, 0, 0, 0, 64,
	51, 0, 1967, 54, 0, 1250, 1251, 1243, 0, 1308,
	1309, 1230, 1231, 97, 838, 993, 995, 997, 0, 1013,
	984, 1005, 988, 0, 985, 0, 979, 0, 1087, 0,
	0, 0, 0, 0, 0, 0, 1018, -2, 1085, 1086,
	1088, 0, 0, 0, 1092, 0, 1095, 0, 0, 1135,
	0, 0, 1136, 1100, 0, 0, 0, 0, 0, 1106,
	1240, 0, 1204, 0, 0, 1109, 1110, 1130, 0, 0,
	1131, 1132, 1133, 1134, 1074, 0, 1075, 0, 0, 0,
	0, 0, 1081, 1082, 1083, 1084, 856, 856, 856, 856,
	856, 856, 856, 856, 856, 856, 856, 856, 0, 0,
	954, 0, 0, 0, 0, 0, 0, 929, 0, 0,
	932, 0, 0, 0, 0, 0, 0, 0, 0, 898,
	0, 900, 0, 964, 0, 0, 0, 1013, 0, 968,
	0, 968, 968, 81, 0, 963, 88, 89, 0, 0,
	95, 519, 520, 0, 220, 0, 0, 628, 0, 0,
	627, 0, 627, 0, 0, 0, 0, 0, 627, 627,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 653, 0, 0, 0, 0, 658, 659, 662, 663,
	664, 665, 666, 667, 668, 669, 670, 671, 0, 396,
	0, 590, 0, 0, 589, 589, 589, 588, 589, 580,
	590, 581, 0, 411, 0, 413, 414, 415, 416, 417,
	0, 0, 0, 0, 0, 514, 0, 539, 541, 0,
	0, 421, 511, 0, 518, 0, 0, 518, 515, 452,
	453, 499, 458, 518, 462, 479, 0, 463, 480, 464,
	481, 465, 482, 466, 483, 518, 0, 495, 0, 0,
	439, 0, 621, 0, 1332, 98, 0, 528, 529, 530,
	0, 572, 572, 572, 0, 285, 286, 287, 952, 0,
	222, 223, 0, 0, 0, 0, 962, 123, 0, 282,
	0, 0, 0, 0, 0, 0, 0, 77, 261, 755,
	0, 612, 613, 905, 762, 1006, 772, 774, 775, 515,
	0, 1365, 0, 0, 0, 0, 0, 0, 216, 199,
	0, 0, 0, 0, 162, 0, 1267, 1268, 0, 0,
	589, 0, 702, 703, 0, 716, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1324, 1325, 0, 0,
	0, 573, 0, 710, 711, 0, 0, 52, 53, 1256,
	38, 50, 0, 848, 1220, 0, 986, 0, 989, 1016,
	843, 0, 1055, 856, 856, 856, 856, 856, 0, 497,
	497, 1189, 497, 504, 1192, 497, 1194, 497, 1197, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1201, 1108, 1207, 0, 0, 0, 849, 850, 852,
	1076, 1077, 1078, 1079, 1080, 1059, 857, 1060, 1061, 1063,
	1064, 1066, 1067, 1068, 1069, 1071, 1072, 1073, 1274, 0,
	0, 0, 1259, 0, 968, 1282, 0, 0, 0, 0,
	2156, 2157, 886, 920, 922, 0, 917, 930, 931, 933,
	0, 935, 0, 937, 938, 907, 892, 1012, 895, 0,
	0, 0, 964, 904, 0, 0, 0, 0, 0, 1240,
	968, 72, 73, 0, 92, 93, 94, 626, 629, 630,
	631, 0, 627, 0, 634, 635, 637, 638, 639, 0,
	0, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 654, 655, 656, 657, 0, 661, 0, 591,
	497, 497, 0, 595, 587, 596, 574, 576, 577, 579,
	0, 412, 0, 0, 420, 512, 0, 538, 540, 542,
	543, 498, 450, 475, 500, 501, 451, 476, 518, 459,
	455, 477, 516, 517, 467, 484, 515, 0, 515, 0,
	505, 0, 608, 622, 0, 0, 0, 96, 572, 0,
	0, 0, 0, 229, 0, 225, 0, 0, 0, 131,
	0, 114, 115, 116, 118, 119, 0, 0, 0, 112,
	0, 270, 0, 273, 274, 725, 727, 969, 786, 1355,
	953, 216, 205, 207, 208, 0, 216, 219, 156, 0,
	157, 159, 0, 158, 558, 679, 0, 712, 0, 0,
	1331, 587, 0, -2, 682, 687, 688, 689, 690, 691,
	692, 693, 694, 695, 696, 697, 0, 708, 0, 684,
	0, 712, 0, 705, 0, 0, 55, 48, 97, 97,
	1056, 990, 0, 1058, 1062, 1057, 1065, 1070, 1090, 1186,
	515, 1190, 1191, 1193, 1195, 1196, 1198, 1094, 1091, 1093,
	0, 0, 0, 0, 1101, 0, 0, 0, 0, 0,
	0, 1205, 0, 0, 854, 853, 65, 0, 1274, 1257,
	1276, 1278, 0, 0, 0, 0, -2, 1645, 0, 911,
	1240, 0, 0, 0, 0, 0, 914, 921, 0, 0,
	915, 0, 916, 934, 936, 890, 0, 0, 896, 0,
	0, -2, 903, 0, 0, 0, 913, 0, 1248, 71,
	632, 0, 636, 640, 641, 660, 564, 0, 1245, 1245,
	589, 589, 0, 909, 0, 0, 513, 1128, 1128, 1128,
	1128, 1128, 1128, 1128, 1128, 1128, 0, 0, 456, 478,
	518, 496, 518, 0, 0, 623, 0, 96, 98, 0,
	533, 534, 535, 536, 537, 0, 97, 230, 231, 0,
	0, 0, 236, 0, 0, 0, 0, 0, 224, 226,
	227, 228, 149, 132, 133, 0, 0, 0, 0, 124,
	125, 0, 0, 0, 0, 0, 120, 121, 122, 269,
	0, 0, 272, 0, 0, 761, 1357, 1351, 209, 216,
	209, 0, 160, 0, 681, 713, 0, 410, 410, 0,
	589, 589, 704, 0, 1321, 1322, 0, 699, 712, 0,
	0, 0, 968, 0, 0, 839, 844, 1187, 1188, 0,
	0, 0, 0, 1102, 1103, 1104, 1137, 1107, 1202, 0,
	0, 1240, 0, 0, 66, 0, 1279, -2, 0, 0,
	83, 0, 1248, 1283, 1284, 1285, 1286, 1287, 918, 0,
	923, 0, 0, 964, 901, 0, 0, 0, 0, 0,
	70, 633, 563, 567, 0, 572, 0, 592, 593, 594,
	575, 578, 0, 0, 407, 0, 473, 485, 474, 486,
	503, 506, 0, 103, 0, 531, 532, 0, 98, 232,
	233, 234, 235, 237, 238, 0, 0, 0, 109, 0,
	0, 134, 0, 0, 0, 0, 144, 145, 146, 147,
	148, 126, 127, 128, 129, 130, 117, 0, 0, 271,
	0, 276, 277, 1318, 1359, -2, 0, 152, 0, 209,
	154, 217, 680, 714, 400, 401, 0, 1331, 0, 683,
	698, 700, 0, 707, 0, 1232, 49, 97, 1096, 1098,
	1097, 1099, 0, 0, 0, 1126, 1127, 858, 0, 0,
	1277, 1258, 0, 1262, 0, 912, 69, 0, 908, 897,
	899, 964, 965, 966, 967, 0, 568, 569, 0, 571,
	0, 910, 418, 408, 409, 0, 565, 96, 0, 56,
	239, 240, 241, 242, 150, 151, 135, 136, 0, 138,
	139, 0, 0, 0, 279, 0, 275, 907, 0, 1351,
	0, 1353, 0, 1350, 0, 210, 153, 0, 0, 0,
	706, 0, 718, 0, 1237, 0, 840, 1105, 0, 0,
	0, 0, 0, 0, 855, 0, 1261, 0, 919, 902,
	0, 570, 0, 407, 102, 566, 104, 288, 96, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 387, 388, 0,
	0, 0, 56, 0, 140, 0, 142, 143, 278, 0,
	36, 0, 1358, 0, 1356, 0, 0, 1352, 0, 565,
	0, 0, 717, 0, 0, 868, 0, 0, 1138, 0,
	1141, 851, 859, 0, 862, 0, 0, 0, 873, 0,
	860, 1275, -2, 0, 941, 0, 0, 419, 96, 0,
	0, 108, 0, 0, 1333, 0, 0, -2, -2, -2,
	1335, 0, 357, 137, 141, 280, 1319, 1320, 1360, 0,
	0, 0, 685, 0, 565, 719, 0, 47, 0, 1238,
	1239, 1233, 1234, 1236, 1139, 0, 863, 864, 865, 866,
	867, 0, 0, 0, 0, 0, 98, 289, 290, 0,
	299, 0, 56, 0, 0, 0, 313, 0, 56, 1354,
	1348, 211, 212, 213, 215, 565, 709, 0, 869, 870,
	0, 0, 0, 0, 874, 0, 942, 943, 0, 0,
	598, 56, 0, 56, 300, 0, 0, 0, 0, 0,
	0, 1336, 243, 358, 0, 686, 0, 0, 0, 1235,
	0, 861, 0, 940, 946, 0, 599, 600, 0, 96,
	291, 292, 293, 294, 295, 56, 0, 297, 0, 56,
	56, 309, 310, 311, 56, 318, 320, 321, 322, 0,
	324, 325, 314, 214, 0, 871, 872, 1140, 939, 947,
	945, 601, 0, 602, 0, 0, 0, 107, 0, 57,
	56, 0, 0, 56, 0, 306, 0, 312, 0, 323,
	0, 1793, 944, 0, 0, 0, 614, 616, 617, 0,
	0, 615, 56, 0, -2, 302, 0, 0, 56, 307,
	0, 319, 720, 721, 0, 0, 0, 618, 619, 620,
	296, 298, 56, 304, 0, 56, 948, 0, 950, 0,
	56, 0, 949, 303, 0, -2, 305,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 92, 3, 3, 3, 127, 119, 3,
	68, 70, 124, 122, 69, 123, 177, 125, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 631,
	101, 100, 102, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 129, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 118, 3, 130,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 82, 83, 84, 85,
	86, 87, 88, 89, 90, 91, 93, 94, 95, 96,
	97, 98, 99, 103, 104, 105, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 116, 117, 120, 121,
	126, 128, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 274, 275,
}

var yyTok3 = [...]int{
	57600, 276, 57601, 277, 57602, 278, 57603, 279, 57604, 280,
	57605, 281, 57606, 282, 57607, 283, 57608, 284, 57609, 285,
	57610, 286, 57611, 287, 57612, 288, 57613, 289, 57614, 290,
	57615, 291, 57616, 292, 57617, 293, 57618, 294, 57619, 295,
	57620, 296, 57621, 297, 57622, 298, 57623, 299, 57624, 300,
	57625, 301, 57626, 302, 57627, 303, 57628, 304, 57629, 305,
	57630, 306, 57631, 307, 57632, 308, 57633, 309, 57634, 310,
	57635, 311, 57636, 312, 57637, 313, 57638, 314, 57639, 315,
	57640, 316, 57641, 317, 57642, 318, 57643, 319, 57644, 320,
	57645, 321, 57646, 322, 57647, 323, 57648, 324, 57649, 325,
	57650, 326, 57651, 327, 57652, 328, 57653, 329, 57654, 330,
	57655, 331, 57656, 332, 57657, 333, 57658, 334, 57659, 335,
	57660, 336, 57661, 337, 57662, 338, 57663, 339, 57664, 340,
	57665, 341, 57666, 342, 57667, 343, 57668, 344, 57669, 345,
	57670, 346, 57671, 347, 57672, 348, 57673, 349, 57674, 350,
	57675, 351, 57676, 352, 57677, 353, 57678, 354, 57679, 355,
	57680, 356, 57681, 357, 57682, 358, 57683, 359, 57684, 360,
	57685, 361, 57686, 362, 57687, 363, 57688, 364, 57689, 365,
	57690, 366, 57691, 367, 57692, 368, 57693, 369, 57694, 370,
	57695, 371, 57696, 372, 57697, 373, 57698, 374, 57699, 375,
	57700, 376, 57701, 377, 57702, 378, 57703, 379, 57704, 380,
	57705, 381, 57706, 382, 57707, 383, 57708, 384, 57709, 385,
	57710, 386, 57711, 387, 57712, 388, 57713, 389, 57714, 390,
	57715, 391, 57716, 392, 57717, 393, 57718, 394, 57719, 395,
	57720, 396, 57721, 397, 57722, 398, 57723, 399, 57724, 400,
	57725, 401, 57726, 402, 57727, 403, 57728, 404, 57729, 405,
	57730, 406, 57731, 407, 57732, 408, 57733, 409, 57734, 410,
	57735, 411, 57736, 412, 57737, 413, 57738, 414, 57739, 415,
	57740, 416, 57741, 417, 57742, 418, 57743, 419, 57744, 420,
	57745, 421, 57746, 422, 57747, 423, 57748, 424, 57749, 425,
	57750, 426, 57751, 427, 57752, 428, 57753, 429, 57754, 430,
	57755, 431, 57756, 432, 57757, 433, 57758, 434, 57759, 435,
	57760, 436, 57761, 437, 57762, 438, 57763, 439, 57764, 440,
	57765, 441, 57766, 442, 57767, 443, 57768, 444, 57769, 445,
	57770, 446, 57771, 447, 57772, 448, 57773, 449, 57774, 450,
	57775, 451, 57776, 452, 57777, 453, 57778, 454, 57779, 455,
	57780, 456, 57781, 457, 57782, 458, 57783, 459, 57784, 460,
	57785, 461, 57786, 462, 57787, 463, 57788, 464, 57789, 465,
	57790, 466, 57791, 467, 57792, 468, 57793, 469, 57794, 470,
	57795, 471, 57796, 472, 57797, 473, 57798, 474, 57799, 475,
	57800, 476, 57801, 477, 57802, 478, 57803, 479, 57804, 480,
	57805, 481, 57806, 482, 57807, 483, 57808, 484, 57809, 485,
	57810, 486, 57811, 487, 57812, 488, 57813, 489, 57814, 490,
	57815, 491, 57816, 492, 57817, 493, 57818, 494, 57819, 495,
	57820, 496, 57821, 497, 57822, 498, 57823, 499, 57824, 500,
	57825, 501, 57826, 502, 57827, 503, 57828, 504, 57829, 505,
	57830, 506, 57831, 507, 57832, 508, 57833, 509, 57834, 510,
	57835, 511, 57836, 512, 57837, 513, 57838, 514, 57839, 515,
	57840, 516, 57841, 517, 57842, 518, 57843, 519, 57844, 520,
	57845, 521, 57846, 522, 57847, 523, 57848, 524, 57849, 525,
	57850, 526, 57851, 527, 57852, 528, 57853, 529, 57854, 530,
	57855, 531, 57856, 532, 57857, 533, 57858, 534, 57859, 535,
	57860, 536, 57861, 537, 57862, 538, 57863, 539, 57864, 540,
	57865, 541, 57866, 542, 57867, 543, 57868, 544, 57869, 545,
	57870, 546, 57871, 547, 57872, 548, 57873, 549, 57874, 550,
	57875, 551, 57876, 552, 57877, 553, 57878, 554, 57879, 555,
	57880, 556, 57881, 557, 57882, 558, 57883, 559, 57884, 560,
	57885, 561, 57886, 562, 57887, 563, 57888, 564, 57889, 565,
	57890, 566, 57891, 567, 57892, 568, 57893, 569, 57894, 570,
	57895, 571, 57896, 572, 57897, 573, 57898, 574, 57899, 575,
	57900, 576, 57901, 577, 57902, 578, 57903, 579, 57904, 580,
	57905, 581, 57906, 582, 57907, 583, 57908, 584, 57909, 585,
	57910, 586, 57911, 587, 57912, 588, 57913, 589, 57914, 590,
	57915, 591, 57916, 592, 57917, 593, 57918, 594, 57919, 595,
	57920, 596, 57921, 597, 57922, 598, 57923, 599, 57924, 600,
	57925, 601, 57926, 602, 57927, 603, 57928, 604, 57929, 605,
	57930, 606, 57931, 607, 57932, 608, 57933, 609, 57934, 610,
	57935, 611, 57936, 612, 57937, 613, 57938, 614, 57939, 615,
	57940, 616, 57941, 617, 57942, 618, 57943, 619, 57944, 620,
	57945, 621, 57946, 622, 57947, 623, 57948, 624, 57949, 625,
	57950, 626, 57951, 627, 57952, 628, 57953, 629, 57954, 630,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:547
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:551
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:558
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:593
		{
			setParseTree(yylex, nil)
		}
	case 36:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:599
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 37:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:605
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			if err := yyDollar[1].selStmt.SetInto(yyDollar[5].into); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 38:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:616
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:622
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 40:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:632
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:639
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 42:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:643
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:649
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:653
		{
			yyDollar[3].selStmt.SetWith(yyDollar[2].with)
			yyVAL.selStmt = yyDollar[3].selStmt
		}
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:660
		{
			yyVAL.with = &With{Ctes: yyDollar[2].tableExprs, Recursive: true}
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:663
		{
			yyVAL.with = &With{Ctes: yyDollar[1].tableExprs, Recursive: false}
		}
	case 47:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:669
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr), Window: yyDollar[13].window, Into: yyDollar[8].into}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 48:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:677
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 49:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:681
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 50:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:690
		{
			yyVAL.into = nil
		}
	case 51:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:694
		{
			yyVAL.into = &Into{Variables: yyDollar[2].variables}
		}
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:698
		{
			yyVAL.into = &Into{Outfile: string(yyDollar[3].bytes)}
		}
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:702
		{
			yyVAL.into = &Into{Dumpfile: string(yyDollar[3].bytes)}
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:708
		{
			yyVAL.variables = Variables{yyDollar[1].colIdent}
		}
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:712
		{
			yyVAL.variables = append(yyVAL.variables, yyDollar[3].colIdent)
		}
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:717
		{
			yyVAL.with = nil
		}
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:721
		{
			yyVAL.with = yyDollar[2].with
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:727
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:731
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:737
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[4].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[2].columns}
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:743
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:751
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:757
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:765
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 65:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:771
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[7].ins
			ins.Action = yyDollar[2].str
			ins.Comments = yyDollar[3].bytes2
			ins.Ignore = yyDollar[4].str
			ins.Table = yyDollar[5].tableName
			ins.Partitions = yyDollar[6].partitions
			ins.OnDup = OnDup(yyDollar[8].assignExprs)
			ins.With = yyDollar[1].with
			yyVAL.statement = ins
		}
	case 66:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:784
		{
			cols := make(Columns, 0, len(yyDollar[8].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[9].assignExprs))
			for _, updateList := range yyDollar[8].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[2].str, Comments: Comments(yyDollar[3].bytes2), Ignore: yyDollar[4].str, Table: yyDollar[5].tableName, Partitions: yyDollar[6].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[9].assignExprs), With: yyDollar[1].with}
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:796
		{
			yyVAL.str = InsertStr
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:800
		{
			yyVAL.str = ReplaceStr
		}
	case 69:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:806
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[3].bytes2), Ignore: yyDollar[4].str, TableExprs: yyDollar[5].tableExprs, Exprs: yyDollar[7].assignExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), OrderBy: yyDollar[9].orderBy, Limit: yyDollar[10].limit, With: yyDollar[1].with}
		}
	case 70:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:812
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitions, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit, With: yyDollar[1].with}
		}
	case 71:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:816
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[5].tableNames, TableExprs: yyDollar[7].tableExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), With: yyDollar[1].with}
		}
	case 72:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:820
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), With: yyDollar[1].with}
		}
	case 73:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:824
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), With: yyDollar[1].with}
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:829
		{
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:830
		{
		}
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:834
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:838
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:844
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:848
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:854
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 81:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:858
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 82:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:863
		{
			yyVAL.partitions = nil
		}
	case 83:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:867
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:873
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 85:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:877
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 86:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:884
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:893
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:897
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:903
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:907
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 91:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:911
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:917
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:921
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:925
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:929
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:934
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 97:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:939
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:944
		{
			yyVAL.boolean = yySpecialCommentMode(yylex)
		}
	case 99:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:950
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:959
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:964
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 102:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:969
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 103:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:973
		{
			yyDollar[2].viewSpec.ViewName = yyDollar[4].tableName.ToViewName()
			yyDollar[2].viewSpec.ViewExpr = yyDollar[8].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[2].viewSpec, SpecialCommentMode: yyDollar[7].boolean, SubStatementPositionStart: yyDollar[6].int, SubStatementPositionEnd: yyDollar[9].int - 1}
		}
	case 104:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:979
		{
			yyDollar[4].viewSpec.ViewName = yyDollar[6].tableName.ToViewName()
			yyDollar[4].viewSpec.ViewExpr = yyDollar[10].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[4].viewSpec, SpecialCommentMode: yyDollar[9].boolean, SubStatementPositionStart: yyDollar[8].int, SubStatementPositionEnd: yyDollar[11].int - 1, OrReplace: true}
		}
	case 105:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:985
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 106:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:993
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 107:
		yyDollar = yyS[yypt-16 : yypt+1]
//line sql.y:1001
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName, Definer: yyDollar[2].str, Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[15].statement}, SpecialCommentMode: yyDollar[14].boolean, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[16].int - 1}
		}
	case 108:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1005
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName, Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[11].statement}, SpecialCommentMode: yyDollar[10].boolean, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[12].int - 1}
		}
	case 109:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1009
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].tlsOptionItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].accountLimitItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].passLockItems)
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames, TLSOptions: tlsOptions, AccountLimits: accountLimits, PasswordOptions: passwordOptions, Locked: locked, Attribute: yyDollar[9].str}
		}
	case 110:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1028
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 111:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1037
		{
			yyVAL.accountNames = nil
		}
	case 112:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1041
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 113:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1046
		{
			yyVAL.tlsOptionItems = nil
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1050
		{
			yyVAL.tlsOptionItems = nil
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1054
		{
			yyVAL.tlsOptionItems = yyDollar[2].tlsOptionItems
		}
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1060
		{
			yyVAL.tlsOptionItems = []TLSOptionItem{yyDollar[1].tlsOptionItem}
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1064
		{
			yyVAL.tlsOptionItems = append(yyDollar[1].tlsOptionItems, yyDollar[3].tlsOptionItem)
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1070
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1074
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1078
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1082
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1086
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 123:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1091
		{
			yyVAL.accountLimitItems = nil
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1095
		{
			yyVAL.accountLimitItems = yyDollar[2].accountLimitItems
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1101
		{
			yyVAL.accountLimitItems = []AccountLimitItem{yyDollar[1].accountLimitItem}
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1105
		{
			yyVAL.accountLimitItems = append(yyDollar[1].accountLimitItems, yyDollar[2].accountLimitItem)
		}
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1111
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1115
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1119
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1123
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 131:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1128
		{
			yyVAL.passLockItems = nil
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1132
		{
			yyVAL.passLockItems = yyDollar[1].passLockItems
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1138
		{
			yyVAL.passLockItems = []PassLockItem{yyDollar[1].passLockItem}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1142
		{
			yyVAL.passLockItems = append(yyDollar[1].passLockItems, yyDollar[2].passLockItem)
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1148
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1152
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 137:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1156
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1160
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1164
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 140:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1168
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 141:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1172
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 142:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1176
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 143:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1180
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1184
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1188
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1192
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1196
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1200
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 149:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1205
		{
			yyVAL.str = ""
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1209
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.str = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1214
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 152:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1220
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 153:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1225
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[5].grantObjectType, PrivilegeLevel: yyDollar[6].privilegeLevel, To: yyDollar[8].accountNames, WithGrantOption: yyDollar[9].boolean, As: yyDollar[10].grantAssumption}
		}
	case 154:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1230
		{
			yyVAL.statement = &GrantPrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 155:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1234
		{
			yyVAL.statement = &GrantRole{Roles: yyDollar[2].accountNames, To: yyDollar[4].accountNames, WithAdminOption: yyDollar[5].boolean}
		}
	case 156:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1238
		{
			yyVAL.statement = &GrantProxy{On: yyDollar[4].accountName, To: yyDollar[6].accountNames, WithGrantOption: yyDollar[7].boolean}
		}
	case 157:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1244
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &RevokePrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 158:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1249
		{
			yyVAL.statement = &RevokePrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 159:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1253
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[7].accountNames}
		}
	case 160:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1257
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[8].accountNames}
		}
	case 161:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1261
		{
			yyVAL.statement = &RevokeRole{Roles: yyDollar[2].accountNames, From: yyDollar[4].accountNames}
		}
	case 162:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1265
		{
			yyVAL.statement = &RevokeProxy{On: yyDollar[4].accountName, From: yyDollar[6].accountNames}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1271
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].strs}
		}
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1275
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].strs}
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1279
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].strs}
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1283
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].strs}
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1287
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].strs}
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1291
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].strs}
		}
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1295
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].strs}
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1299
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].strs}
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1303
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].strs}
		}
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1307
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].strs}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1311
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].strs}
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1315
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].strs}
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1319
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].strs}
		}
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1323
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].strs}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1327
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].strs}
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1331
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].strs}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1335
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].strs}
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1339
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].strs}
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1343
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].strs}
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1347
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].strs}
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1351
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].strs}
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1355
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].strs}
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1359
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].strs}
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1363
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].strs}
		}
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1367
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].strs}
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1371
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].strs}
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1375
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].strs}
		}
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1379
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].strs}
		}
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1383
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].strs}
		}
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1387
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].strs}
		}
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1391
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].strs}
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1397
		{
			yyVAL.grantPrivileges = []Privilege{yyDollar[1].grantPrivilege}
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1401
		{
			yyVAL.grantPrivileges = append(yyDollar[1].grantPrivileges, yyDollar[3].grantPrivilege)
		}
	case 196:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1406
		{
			yyVAL.strs = nil
		}
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1410
		{
			yyVAL.strs = yyDollar[2].strs
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1416
		{
			yyVAL.strs = []string{yyDollar[1].colIdent.String()}
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1420
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].colIdent.String())
		}
	case 200:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1425
		{
			yyVAL.grantObjectType = GrantObjectType_Any
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1429
		{
			yyVAL.grantObjectType = GrantObjectType_Table
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1433
		{
			yyVAL.grantObjectType = GrantObjectType_Function
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1437
		{
			yyVAL.grantObjectType = GrantObjectType_Procedure
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1443
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1447
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1451
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].colIdent.String()}
		}
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1455
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: "*"}
		}
	case 208:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1459
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: yyDollar[3].colIdent.String()}
		}
	case 209:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1464
		{
			yyVAL.grantAssumption = nil
		}
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1468
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 211:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1472
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 212:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1476
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].accountName, Roles: nil}
		}
	case 213:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1480
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].accountName, Roles: nil}
		}
	case 214:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1484
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].accountName, Roles: yyDollar[7].accountNames}
		}
	case 215:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1488
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].accountName, Roles: yyDollar[5].accountNames}
		}
	case 216:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1493
		{
			yyVAL.boolean = false
		}
	case 217:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1497
		{
			yyVAL.boolean = true
		}
	case 218:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1502
		{
			yyVAL.boolean = false
		}
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1506
		{
			yyVAL.boolean = true
		}
	case 220:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1513
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 221:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1525
		{
			yyVAL.procedureParams = nil
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1529
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1535
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1539
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1545
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[1].colIdent.String(), Type: yyDollar[2].columnType}
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1549
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1553
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1557
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 229:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1562
		{
			yyVAL.characteristics = nil
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1566
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1572
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1576
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1582
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1586
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1590
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1594
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1598
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1602
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1606
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1610
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1614
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1618
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1624
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1630
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: "", Definer: yyDollar[1].str, Security: yyDollar[2].str}
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1634
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: yyDollar[1].str, Definer: yyDollar[2].str, Security: yyDollar[3].str}
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1640
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1644
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1648
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 249:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1653
		{
			yyVAL.str = ""
		}
	case 250:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1657
		{
			yyVAL.str = yyDollar[3].accountName.String()
		}
	case 251:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1662
		{
			yyVAL.str = ""
		}
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1666
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1670
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1676
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1680
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1684
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1690
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1698
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1702
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1708
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1712
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1718
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1726
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1734
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1744
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1748
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1754
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1758
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 269:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1762
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1766
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 271:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1770
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 272:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1776
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1780
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1784
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 275:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1788
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 276:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1792
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 277:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1796
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1802
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1806
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 280:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1810
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1816
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1820
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1826
		{
			yyVAL.str = BeforeStr
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1830
		{
			yyVAL.str = AfterStr
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1836
		{
			yyVAL.str = InsertStr
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1840
		{
			yyVAL.str = UpdateStr
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1844
		{
			yyVAL.str = DeleteStr
		}
	case 288:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1849
		{
			yyVAL.triggerOrder = nil
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1853
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1857
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1863
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 296:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1873
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 297:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1879
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 298:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1883
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1889
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1893
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 301:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1899
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 302:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1905
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 303:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1910
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 304:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1915
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 305:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1921
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1929
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1933
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 308:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1939
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 309:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1945
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 310:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1949
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 311:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1953
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 312:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1957
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1961
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 314:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1965
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1972
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1976
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1980
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1986
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1990
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1996
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2000
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2004
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2008
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2012
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2016
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2022
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2026
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2030
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 329:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2034
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2040
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2044
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2050
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2054
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2060
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2066
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2070
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2074
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2078
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2082
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2086
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2090
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2094
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2098
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2102
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2106
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2110
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2116
		{
			yyVAL.statement = &Resignal{}
		}
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2120
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 349:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2124
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2128
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2132
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 352:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2136
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2142
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 354:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2147
		{
			yyVAL.exprs = nil
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2151
		{
			yyVAL.exprs = nil
		}
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2155
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2161
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2165
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2171
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 389:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2206
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
		}
	case 390:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2220
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: TableName{Name: NewTableIdent(string(yyDollar[5].bytes))}, IfNotExists: ne, Temporary: neTemp}
		}
	case 391:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2236
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2243
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2248
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2253
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2259
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 396:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2263
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2268
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2272
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2276
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2282
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2290
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2300
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2308
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2316
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2324
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2332
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 407:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2341
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2345
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2349
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 410:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2354
		{
			yyVAL.columnType = ColumnType{}
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2358
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2367
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2376
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2385
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2394
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2403
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2412
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 418:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2421
		{
			opt := ColumnType{GeneratedExpr: yyDollar[4].expr, Stored: yyDollar[6].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 419:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2430
		{
			opt := ColumnType{GeneratedExpr: yyDollar[6].expr, Stored: yyDollar[8].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2439
		{
			opt := ColumnType{SRID: NewIntVal(yyDollar[3].bytes)}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2450
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2461
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2466
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2472
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2476
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2480
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2484
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2488
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2492
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2496
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2500
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2504
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2508
		{
			yyVAL.columnType = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2514
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2520
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2526
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2532
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 441:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2538
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2544
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2550
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2556
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2564
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2568
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2572
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2576
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2580
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2586
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2590
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2594
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2598
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2602
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 455:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2606
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 456:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2610
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2614
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2618
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 459:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2622
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 460:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2626
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2630
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2634
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2638
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2642
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2646
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2650
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 467:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2654
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2658
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2662
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2666
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2670
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2674
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 473:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2678
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 474:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2683
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2687
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 476:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2691
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 477:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2695
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 478:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2699
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, BinaryCollate: true}
		}
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2703
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2707
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2711
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2715
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2719
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 484:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2723
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 485:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2727
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, BinaryCollate: true}
		}
	case 486:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2731
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, BinaryCollate: true}
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2737
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2741
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2745
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2749
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2753
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2757
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2761
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2765
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2771
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2776
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2781
		{
			yyVAL.sqlVal = nil
		}
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2785
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 499:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2790
		{
			yyVAL.sqlVal = nil
		}
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2794
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2798
		{
			yyVAL.sqlVal = NewValArg(yyDollar[2].bytes)
		}
	case 502:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2804
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 503:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2808
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 504:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2816
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2820
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 506:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2826
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 507:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2834
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2838
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2842
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 510:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2847
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2851
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 512:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2857
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2863
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2869
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2874
		{
			yyVAL.str = ""
		}
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2878
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2882
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2887
		{
			yyVAL.str = ""
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2891
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2895
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2900
		{
			yyVAL.boolean = false
		}
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2904
		{
			yyVAL.boolean = true
		}
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2909
		{
			yyVAL.charsetCollates = nil
		}
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2913
		{
			yyVAL.charsetCollates = yyDollar[1].charsetCollates
		}
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2919
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2923
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2927
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2931
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 529:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2935
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2939
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 531:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2945
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 532:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2949
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2953
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2957
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2963
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2967
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 537:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2973
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2979
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2983
		{
			yyVAL.colKeyOpt = colKey
		}
	case 540:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2987
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2991
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2995
		{
			yyVAL.colKeyOpt = colKeyFulltextKey
		}
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3001
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3007
		{
			yyVAL.statement = &Flush{Type: yyDollar[2].str, Option: yyDollar[3].flushOption}
		}
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3013
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3017
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3021
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3025
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3029
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3033
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3037
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3041
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3045
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].str}
		}
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3049
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3053
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3057
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 557:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3062
		{
			yyVAL.str = ""
		}
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3064
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3068
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3070
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 561:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3073
		{
			yyVAL.str = ""
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3075
		{
			yyVAL.str = yyDollar[1].str
		}
	case 563:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3079
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 564:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3083
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 565:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3088
		{
			yyVAL.indexOptions = nil
		}
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3092
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3098
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3102
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3108
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3112
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3117
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 572:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3123
		{
			yyVAL.str = ""
		}
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3127
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3135
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 575:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3139
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3143
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3147
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true}
		}
	case 578:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3151
		{
			var name string
			name = yyDollar[2].str
			if name == "" {
				name = yyDollar[5].str
			}
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].str), Name: NewColIdent(name), Unique: true}
		}
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3160
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3164
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3168
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3174
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3178
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3182
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3188
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3192
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 587:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3197
		{
			yyVAL.str = ""
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3201
		{
			yyVAL.str = yyDollar[1].str
		}
	case 589:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3206
		{
			yyVAL.str = ""
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3210
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3216
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3220
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3226
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3230
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3236
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3240
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3244
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 598:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3250
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 599:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3254
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 600:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3258
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 601:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3262
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 602:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3266
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3272
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3277
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3281
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3285
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3289
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 608:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3295
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3301
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3305
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3310
		{
			yyVAL.str = ""
		}
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3314
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3318
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3324
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3330
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3336
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3340
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3344
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3348
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3352
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 621:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3357
		{
			yyVAL.boolean = true
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3361
		{
			yyVAL.boolean = true
		}
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3365
		{
			yyVAL.boolean = false
		}
	case 624:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3370
		{
			yyVAL.str = ""
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3374
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3378
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 627:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3383
		{
			yyVAL.str = " "
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3387
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3393
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + yyDollar[3].str
		}
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3397
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + yyDollar[3].str
		}
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3401
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + yyDollar[3].str
		}
	case 632:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3405
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + yyDollar[3].str + yyDollar[4].str
		}
	case 633:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3409
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + yyDollar[4].str + yyDollar[5].str
		}
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3413
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + yyDollar[3].str
		}
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3417
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + yyDollar[3].str
		}
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3421
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + yyDollar[3].str + yyDollar[4].str
		}
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3425
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + yyDollar[3].str
		}
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3429
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + yyDollar[3].str
		}
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3433
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + yyDollar[3].str
		}
	case 640:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3437
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + yyDollar[3].str + yyDollar[4].str
		}
	case 641:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3441
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + yyDollar[3].str + yyDollar[4].str
		}
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3445
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + yyDollar[3].str
		}
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3449
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + yyDollar[3].str
		}
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3453
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + yyDollar[3].str
		}
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3457
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + yyDollar[3].str
		}
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3461
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + yyDollar[3].str
		}
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3465
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + yyDollar[3].str
		}
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3469
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + yyDollar[3].str
		}
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3473
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + yyDollar[3].str
		}
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3477
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + yyDollar[3].str
		}
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3481
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + yyDollar[3].str
		}
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3485
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + yyDollar[3].str
		}
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3489
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3493
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + yyDollar[3].str
		}
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3497
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + yyDollar[3].str
		}
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3501
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + yyDollar[3].str
		}
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3505
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + yyDollar[3].str
		}
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3509
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str
		}
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3513
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 660:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3517
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)
		}
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3521
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str + yyDollar[3].str
		}
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3527
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3531
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3536
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3540
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3544
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3548
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3552
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3556
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3560
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3564
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 672:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3570
		{
			yyVAL.str = ""
		}
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3574
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 674:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3579
		{
			yyVAL.str = string("")
		}
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3583
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 677:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3592
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3605
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3609
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 680:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3615
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 681:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3622
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3629
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 683:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3633
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3637
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 685:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3642
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 686:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3646
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3650
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3655
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3660
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3665
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3670
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3675
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3680
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3685
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3690
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3695
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3700
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 698:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3704
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3708
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 700:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3715
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3721
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3725
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3731
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 704:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3737
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3742
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 706:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3746
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 707:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3750
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3754
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 709:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3760
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[7].indexColumns, Options: yyDollar[9].indexOptions}
			yyVAL.ddl = ddl
		}
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3766
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3770
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 712:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3775
		{
			yyVAL.columnOrder = nil
		}
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3779
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3783
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 715:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3788
		{
		}
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3790
		{
		}
	case 717:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3794
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3800
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3804
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 720:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3810
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 721:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3814
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3820
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3824
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3830
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 725:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3834
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3842
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 727:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3846
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 728:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3852
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 729:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3860
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 730:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3864
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3872
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3880
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3888
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName}, IfExists: exists}
		}
	case 734:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3896
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName}, IfExists: exists}
		}
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3904
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3912
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 737:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3921
		{

		}
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3925
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3929
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3935
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3939
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3945
		{
			yyVAL.statement = &Analyze{Tables: yyDollar[3].tableNames}
		}
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3951
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3956
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3960
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 746:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3964
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 747:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3968
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 748:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3972
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3977
		{
			yyVAL.statement = &Show{Type: CreateProcedureStr, Table: yyDollar[4].tableName}
		}
	case 750:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3981
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 751:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3985
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3989
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3993
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3997
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 755:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4001
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4005
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 757:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4009
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 758:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4013
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 759:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4017
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 760:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4021
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 761:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4025
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, AsOf: yyDollar[7].expr, Filter: yyDollar[8].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, Table: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 762:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4030
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4035
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 764:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4039
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 765:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4043
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4047
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4051
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4057
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4065
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4069
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 771:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4074
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 772:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4078
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4083
		{
			yyVAL.statement = &ShowPrivileges{}
		}
	case 774:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4087
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 775:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4091
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4095
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4099
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4105
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 779:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4111
		{
			yyVAL.boolean = false
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4115
		{
			yyVAL.boolean = true
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4121
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4125
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4131
		{
			yyVAL.str = ""
		}
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4135
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4139
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 786:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4145
		{
			yyVAL.showFilter = nil
		}
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4149
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4153
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[3].bytes)}
		}
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4157
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 790:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4163
		{
			yyVAL.str = ""
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4167
		{
			yyVAL.str = SessionStr
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4171
		{
			yyVAL.str = GlobalStr
		}
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4177
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 794:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4181
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: yyDollar[2].tableIdent.v + "/" + yyDollar[4].tableIdent.v}}
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4185
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4191
		{
			yyVAL.statement = &Begin{}
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4195
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4201
		{
			yyVAL.statement = &Begin{}
		}
	case 799:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4205
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 800:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4209
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4215
		{
			yyVAL.statement = &Commit{}
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4221
		{
			yyVAL.statement = &Rollback{}
		}
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4227
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4233
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 805:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4237
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 806:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4241
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 807:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4245
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4251
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4256
		{
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4257
		{
		}
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4261
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4265
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4271
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4279
		{
			yyVAL.str = ""
		}
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4283
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4294
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[3].expr}
			yyVAL.statement = &Show{Type: "columns", Table: yyDollar[2].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4300
		{
			setAllowComments(yylex, true)
		}
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4304
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 824:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4310
		{
			yyVAL.bytes2 = nil
		}
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4314
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4320
		{
			yyVAL.str = UnionStr
		}
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4324
		{
			yyVAL.str = UnionAllStr
		}
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4328
		{
			yyVAL.str = UnionDistinctStr
		}
	case 829:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4333
		{
			yyVAL.byt = 0
		}
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4337
		{
			yyVAL.byt = 1
		}
	case 831:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4342
		{
			yyVAL.str = ""
		}
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4346
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4350
		{
			yyVAL.str = SQLCacheStr
		}
	case 834:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4355
		{
			yyVAL.str = ""
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4359
		{
			yyVAL.str = ""
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4363
		{
			yyVAL.str = DistinctStr
		}
	case 837:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4368
		{
			yyVAL.str = ""
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4372
		{
			yyVAL.str = StraightJoinHint
		}
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4378
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 840:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4386
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4397
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4401
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4405
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 844:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4409
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4415
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 846:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4419
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4423
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 848:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4427
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 849:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4433
		{
			yyVAL.over = &Over{NameRef: yyDollar[2].colIdent}
		}
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4437
		{
			yyVAL.over = (*Over)(yyDollar[2].windowDef)
		}
	case 851:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4443
		{
			yyVAL.windowDef = &WindowDef{NameRef: yyDollar[2].colIdent, PartitionBy: yyDollar[3].exprs, OrderBy: yyDollar[4].orderBy, Frame: yyDollar[5].frame}
		}
	case 852:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4448
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4451
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 854:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4456
		{
			yyVAL.exprs = nil
		}
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4460
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 856:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4465
		{
			yyVAL.over = nil
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4469
		{
			yyVAL.over = yyDollar[1].over
		}
	case 858:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4474
		{
			yyVAL.frame = nil
		}
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4478
		{
			yyVAL.frame = &Frame{Unit: RowsUnit, Extent: yyDollar[2].frameExtent}
		}
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4482
		{
			yyVAL.frame = &Frame{Unit: RangeUnit, Extent: yyDollar[2].frameExtent}
		}
	case 861:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4489
		{
			startBound := yyDollar[2].frameBound
			endBound := yyDollar[4].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound, End: endBound}
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4512
		{
			startBound := yyDollar[1].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound}
		}
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4527
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedPreceding}
		}
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4531
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedFollowing}
		}
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4535
		{
			yyVAL.frameBound = &FrameBound{Type: CurrentRow}
		}
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4539
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprPreceding,
			}
		}
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4546
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprFollowing,
			}
		}
	case 868:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4554
		{
			yyVAL.window = nil
		}
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4557
		{
			yyVAL.window = yyDollar[2].window
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4563
		{
			yyVAL.window = Window{yyDollar[1].windowDef}
		}
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4566
		{
			yyVAL.window = append(yyDollar[1].window, yyDollar[3].windowDef)
		}
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4572
		{
			def := yyDollar[3].windowDef
			def.Name = yyDollar[1].colIdent
			yyVAL.windowDef = def
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4581
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4585
		{
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 875:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4590
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4594
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 877:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4598
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4602
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[2].bytes))
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4608
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4612
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4616
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4620
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4624
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4628
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4634
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4638
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4648
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 890:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4652
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4662
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4668
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 895:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4676
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 896:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4682
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 897:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4686
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 898:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4692
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 899:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4697
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4708
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 901:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4712
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 902:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4716
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4720
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4724
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 905:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4735
		{
			yyVAL.expr = nil
		}
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4739
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 907:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4744
		{
			yyVAL.columns = nil
		}
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4748
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4754
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4758
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4764
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4768
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 913:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4774
		{
			yyVAL.tableExpr = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].selectExprs}
		}
	case 914:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4788
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 915:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4792
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 916:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4796
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4800
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4806
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 919:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4808
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 920:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4812
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4814
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 922:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4818
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4820
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 924:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4823
		{
			yyVAL.empty = struct{}{}
		}
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4825
		{
			yyVAL.empty = struct{}{}
		}
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4830
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4834
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4840
		{
			yyVAL.str = JoinStr
		}
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4844
		{
			yyVAL.str = JoinStr
		}
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4848
		{
			yyVAL.str = JoinStr
		}
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4854
		{
			yyVAL.str = StraightJoinStr
		}
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4860
		{
			yyVAL.str = LeftJoinStr
		}
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4864
		{
			yyVAL.str = LeftJoinStr
		}
	case 935:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4868
		{
			yyVAL.str = RightJoinStr
		}
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4872
		{
			yyVAL.str = RightJoinStr
		}
	case 937:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4878
		{
			yyVAL.str = NaturalJoinStr
		}
	case 938:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4882
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 939:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:4892
		{
			yyVAL.tableExpr = &JSONTableExpr{Data: yyDollar[3].expr, Path: string(yyDollar[5].bytes), Spec: yyDollar[8].TableSpec, Alias: yyDollar[12].tableIdent}
		}
	case 940:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:4896
		{
			yyVAL.tableExpr = &JSONTableExpr{Data: yyDollar[3].expr, Path: string(yyDollar[5].bytes), Spec: yyDollar[8].TableSpec, Alias: yyDollar[11].tableIdent}
		}
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4902
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4907
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4915
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 944:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4927
		{
			yyVAL.columnType = ColumnType{Path: string(yyDollar[2].bytes)}
		}
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4931
		{
			yyVAL.columnType = ColumnType{Path: string(yyDollar[3].bytes)}
		}
	case 946:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4937
		{

		}
	case 947:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4955
		{

		}
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4959
		{

		}
	case 949:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4963
		{

		}
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4967
		{

		}
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4973
		{
			yyVAL.triggerName = TriggerName{Name: yyDollar[1].colIdent}
		}
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4977
		{
			yyVAL.triggerName = TriggerName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4983
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4989
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4993
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4999
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5003
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5007
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5011
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5015
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5021
		{
			yyVAL.procedureName = ProcedureName{Name: yyDollar[1].colIdent}
		}
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5025
		{
			yyVAL.procedureName = ProcedureName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5031
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 964:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5036
		{
			yyVAL.indexHints = nil
		}
	case 965:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5040
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 966:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5044
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 967:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5048
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 968:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5053
		{
			yyVAL.expr = nil
		}
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5057
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5063
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5067
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5071
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5075
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5079
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5083
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5087
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5091
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 978:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5097
		{
			yyVAL.str = ""
		}
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5101
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5107
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5111
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5117
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5121
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 984:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5125
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 985:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5129
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 986:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5133
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5137
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 988:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5141
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 989:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5145
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 990:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5149
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5153
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5159
		{
			yyVAL.str = IsNullStr
		}
	case 993:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5163
		{
			yyVAL.str = IsNotNullStr
		}
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5167
		{
			yyVAL.str = IsTrueStr
		}
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5171
		{
			yyVAL.str = IsNotTrueStr
		}
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5175
		{
			yyVAL.str = IsFalseStr
		}
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5179
		{
			yyVAL.str = IsNotFalseStr
		}
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5185
		{
			yyVAL.str = EqualStr
		}
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5189
		{
			yyVAL.str = LessThanStr
		}
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5193
		{
			yyVAL.str = GreaterThanStr
		}
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5197
		{
			yyVAL.str = LessEqualStr
		}
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5201
		{
			yyVAL.str = GreaterEqualStr
		}
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5205
		{
			yyVAL.str = NotEqualStr
		}
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5209
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 1005:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5214
		{
			yyVAL.expr = nil
		}
	case 1006:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5218
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5224
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5228
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5232
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5238
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5244
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5248
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 1013:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5254
		{
			yyVAL.selectExprs = nil
		}
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5261
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5265
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5271
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5275
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5281
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5285
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5289
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5293
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5297
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5301
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5305
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5309
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5313
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5317
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5321
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5325
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5329
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5333
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5337
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5341
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5345
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5349
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5353
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5357
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 1039:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5361
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 1040:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5365
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 1041:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5369
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5373
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 1043:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5377
		{
			yyVAL.expr = &UnaryExpr{Operator: yyDollar[1].str, Expr: yyDollar[2].expr}
		}
	case 1044:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5381
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 1045:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5389
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 1046:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5403
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 1047:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5407
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 1048:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5411
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 1055:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5431
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 1056:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5435
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 1057:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5445
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1058:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5449
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1059:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5453
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1060:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5457
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1061:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5461
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1062:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5465
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1063:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5469
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1064:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5473
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1065:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5477
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1066:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5481
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1067:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5485
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1068:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5489
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1069:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5493
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1070:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5497
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1071:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5501
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1072:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5505
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1073:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5509
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1074:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5518
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1075:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5522
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1076:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5526
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 1077:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5530
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1078:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5534
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 1079:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5538
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1080:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5542
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1081:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5546
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1082:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5550
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1083:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5554
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1084:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5558
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1085:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5569
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1086:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5573
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1087:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5577
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1088:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5581
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1089:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5585
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1090:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5589
		{
			yyVAL.expr = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 1091:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5593
		{
			yyVAL.expr = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 1092:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5597
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1093:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5601
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1094:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5605
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 1095:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5609
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1096:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5613
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1097:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5617
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1098:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5621
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1099:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5625
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1100:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5629
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 1101:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5633
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 1102:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5637
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 1103:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5641
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 1104:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5645
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 1105:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5649
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 1106:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5653
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1107:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5657
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 1108:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5661
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 1109:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5665
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 1110:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5669
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1111:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5679
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1112:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5683
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5687
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5692
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5697
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5702
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5708
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1118:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5713
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5717
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5722
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5726
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5730
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5735
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5740
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1125:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5745
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1126:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5749
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1127:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5753
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5764
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1131:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5774
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1132:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5778
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1133:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5782
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1134:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5786
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1135:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5790
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1136:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5794
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1137:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5800
		{
			yyVAL.str = ""
		}
	case 1138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5804
		{
			yyVAL.str = BooleanModeStr
		}
	case 1139:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5808
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 1140:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5812
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 1141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5816
		{
			yyVAL.str = QueryExpansionStr
		}
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5822
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5826
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5832
		{
			yyVAL.str = Armscii8Str
		}
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5836
		{
			yyVAL.str = AsciiStr
		}
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5840
		{
			yyVAL.str = Big5Str
		}
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5844
		{
			yyVAL.str = UBinaryStr
		}
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5848
		{
			yyVAL.str = Cp1250Str
		}
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5852
		{
			yyVAL.str = Cp1251Str
		}
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5856
		{
			yyVAL.str = Cp1256Str
		}
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5860
		{
			yyVAL.str = Cp1257Str
		}
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5864
		{
			yyVAL.str = Cp850Str
		}
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5868
		{
			yyVAL.str = Cp852Str
		}
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5872
		{
			yyVAL.str = Cp866Str
		}
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5876
		{
			yyVAL.str = Cp932Str
		}
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5880
		{
			yyVAL.str = Dec8Str
		}
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5884
		{
			yyVAL.str = EucjpmsStr
		}
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5888
		{
			yyVAL.str = EuckrStr
		}
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5892
		{
			yyVAL.str = Gb18030Str
		}
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5896
		{
			yyVAL.str = Gb2312Str
		}
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5900
		{
			yyVAL.str = GbkStr
		}
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5904
		{
			yyVAL.str = Geostd8Str
		}
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5908
		{
			yyVAL.str = GreekStr
		}
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5912
		{
			yyVAL.str = HebrewStr
		}
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5916
		{
			yyVAL.str = Hp8Str
		}
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5920
		{
			yyVAL.str = Keybcs2Str
		}
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5924
		{
			yyVAL.str = Koi8rStr
		}
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5928
		{
			yyVAL.str = Koi8uStr
		}
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5932
		{
			yyVAL.str = Latin1Str
		}
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5936
		{
			yyVAL.str = Latin2Str
		}
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5940
		{
			yyVAL.str = Latin5Str
		}
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5944
		{
			yyVAL.str = Latin7Str
		}
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5948
		{
			yyVAL.str = MacceStr
		}
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5952
		{
			yyVAL.str = MacromanStr
		}
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5956
		{
			yyVAL.str = SjisStr
		}
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5960
		{
			yyVAL.str = Swe7Str
		}
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5964
		{
			yyVAL.str = Tis620Str
		}
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5968
		{
			yyVAL.str = Ucs2Str
		}
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5972
		{
			yyVAL.str = UjisStr
		}
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5976
		{
			yyVAL.str = Utf16Str
		}
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5980
		{
			yyVAL.str = Utf16leStr
		}
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5984
		{
			yyVAL.str = Utf32Str
		}
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5988
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5992
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5996
		{
			yyVAL.str = Utf8mb4Str
		}
	case 1186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6002
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6006
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 1188:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6010
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6014
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6018
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1191:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6022
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6028
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1193:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6032
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6036
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1195:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6040
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1196:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6044
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6048
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1198:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6052
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1199:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6057
		{
			yyVAL.expr = nil
		}
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6061
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1201:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6066
		{
			yyVAL.str = string("")
		}
	case 1202:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6070
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6076
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 1204:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6080
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 1205:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6086
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 1206:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6091
		{
			yyVAL.expr = nil
		}
	case 1207:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6095
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6101
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6105
		{
			yyVAL.colName = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1210:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6109
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 1211:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6113
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1212:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6117
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6121
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1214:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6125
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6129
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1216:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6133
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1217:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6137
		{
			yyVAL.colName = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1218:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6141
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1219:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6145
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1220:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6149
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6155
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6159
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6163
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6167
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6171
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6175
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6179
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6183
		{
			yyVAL.expr = &NullVal{}
		}
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6189
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 1230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6193
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1231:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6197
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1232:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6202
		{
			yyVAL.exprs = nil
		}
	case 1233:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6206
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6212
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1235:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6216
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6222
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1237:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6227
		{
			yyVAL.expr = nil
		}
	case 1238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6231
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6237
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1240:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6242
		{
			yyVAL.orderBy = nil
		}
	case 1241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6246
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6252
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 1243:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6256
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 1244:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6262
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 1245:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6267
		{
			yyVAL.str = AscScr
		}
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6271
		{
			yyVAL.str = AscScr
		}
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6275
		{
			yyVAL.str = DescScr
		}
	case 1248:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6280
		{
			yyVAL.limit = nil
		}
	case 1249:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6284
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 1250:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6288
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 1251:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6292
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6298
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6302
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1254:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6307
		{
			yyVAL.str = ""
		}
	case 1255:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6311
		{
			yyVAL.str = ForUpdateStr
		}
	case 1256:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6315
		{
			yyVAL.str = ShareModeStr
		}
	case 1257:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6328
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 1258:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6332
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6336
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 1260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6340
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 1261:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6345
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 1262:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6349
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 1263:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6353
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 1264:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6359
		{
			yyVAL.columns = nil
		}
	case 1265:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6363
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6369
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1267:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6373
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1268:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6379
		{
			yyVAL.colIdent = yyDollar[3].colIdent
		}
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6383
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6387
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6391
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6395
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6399
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1274:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6404
		{
			yyVAL.assignExprs = nil
		}
	case 1275:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6408
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6414
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 1277:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6418
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6424
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 1279:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6428
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 1280:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6434
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6440
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 1282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6450
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 1283:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6454
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 1284:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6460
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 1285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6463
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1286:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6467
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6471
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6477
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 1289:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6481
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 1290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6487
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 1291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6498
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6511
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1293:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6524
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 1294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6530
		{
			yyVAL.setScope = SetScope_Global
		}
	case 1295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6534
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6540
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6544
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 1298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6548
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 1299:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6554
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1300:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6558
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1301:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6562
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 1303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6569
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6576
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 1306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6580
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6584
		{
			yyVAL.expr = &Default{}
		}
	case 1310:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6593
		{
			yyVAL.byt = 0
		}
	case 1311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6595
		{
			yyVAL.byt = 1
		}
	case 1312:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6598
		{
			yyVAL.byt = 0
		}
	case 1313:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6600
		{
			yyVAL.byt = 1
		}
	case 1314:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6603
		{
			yyVAL.byt = 0
		}
	case 1315:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6605
		{
			yyVAL.byt = 1
		}
	case 1316:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6608
		{
			yyVAL.str = ""
		}
	case 1317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6610
		{
			yyVAL.str = IgnoreStr
		}
	case 1318:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6613
		{
			yyVAL.sqlVal = nil
		}
	case 1319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6615
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1320:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6617
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6621
		{
			yyVAL.empty = struct{}{}
		}
	case 1322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6623
		{
			yyVAL.empty = struct{}{}
		}
	case 1323:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6626
		{
			yyVAL.empty = struct{}{}
		}
	case 1324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6628
		{
			yyVAL.empty = struct{}{}
		}
	case 1325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6630
		{
			yyVAL.empty = struct{}{}
		}
	case 1326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6634
		{
			yyVAL.str = UniqueStr
		}
	case 1327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6636
		{
			yyVAL.str = FulltextStr
		}
	case 1328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6638
		{
			yyVAL.str = SpatialStr
		}
	case 1329:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6641
		{
			yyVAL.str = ""
		}
	case 1330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6643
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1331:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6646
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 1332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6648
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 1333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6652
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6656
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6662
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 1336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6666
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 1338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6673
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6679
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6683
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6690
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1343:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6695
		{
			yyVAL.str = string("")
		}
	case 1344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6697
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1345:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6700
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6702
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1347:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6705
		{
			yyVAL.EnclosedBy = nil
		}
	case 1348:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6709
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1349:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6714
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6718
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1351:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6723
		{
			yyVAL.sqlVal = nil
		}
	case 1352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6727
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1353:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6732
		{
			yyVAL.sqlVal = nil
		}
	case 1354:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6736
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1355:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6741
		{
			yyVAL.Fields = nil
		}
	case 1356:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6745
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1357:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6750
		{
			yyVAL.Lines = nil
		}
	case 1358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6754
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1359:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6759
		{
			yyVAL.sqlVal = nil
		}
	case 1360:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6763
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1361:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6769
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6775
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1363:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6779
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1364:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6785
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1365:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6789
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6795
		{
			yyVAL.lockType = LockRead
		}
	case 1367:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6799
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6803
		{
			yyVAL.lockType = LockWrite
		}
	case 1369:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6807
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1370:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6813
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1371:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6819
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[2].bytes)}
		}
	case 1372:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6823
		{
			yyVAL.statement = &Kill{ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1373:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6827
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 2167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7662
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2168:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7671
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
