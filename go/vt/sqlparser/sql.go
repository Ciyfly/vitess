// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

//import "runtime/debug"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

func yySpecialCommentMode(yylex interface{}) bool {
	tkn := yylex.(*Tokenizer)
	return tkn.specialComment != nil
}

//line sql.y:64
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	variables                Variables
	into                     *Into
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	triggerName              TriggerName
	tableName                TableName
	tableNames               TableNames
	procedureName            ProcedureName
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	flushOption              *FlushOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	viewSpec                 *ViewSpec
	showFilter               *ShowFilter
	frame                    *Frame
	frameExtent              *FrameExtent
	frameBound               *FrameBound
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	charsetCollate           *CharsetAndCollate
	charsetCollates          []*CharsetAndCollate
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptionItem            TLSOptionItem
	tlsOptionItems           []TLSOptionItem
	accountLimitItem         AccountLimitItem
	accountLimitItems        []AccountLimitItem
	passLockItem             PassLockItem
	passLockItems            []PassLockItem
	grantPrivilege           Privilege
	grantPrivileges          []Privilege
	grantObjectType          GrantObjectType
	privilegeLevel           PrivilegeLevel
	grantAssumption          *GrantUserAssumption
	with                     *With
	window                   Window
	over                     *Over
	windowDef                *WindowDef
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const DUPLICATE = 57369
const DEFAULT = 57370
const SET = 57371
const LOCK = 57372
const UNLOCK = 57373
const KEYS = 57374
const OF = 57375
const OUTFILE = 57376
const DUMPFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const INTO = 57425
const OR = 57426
const XOR = 57427
const AND = 57428
const NOT = 57429
const BETWEEN = 57430
const CASE = 57431
const WHEN = 57432
const THEN = 57433
const ELSE = 57434
const ELSEIF = 57435
const END = 57436
const LE = 57437
const GE = 57438
const NE = 57439
const NULL_SAFE_EQUAL = 57440
const IS = 57441
const LIKE = 57442
const REGEXP = 57443
const IN = 57444
const UNBOUNDED = 57445
const PARTITION = 57446
const RANGE = 57447
const ROWS = 57448
const GROUPS = 57449
const PRECEDING = 57450
const FOLLOWING = 57451
const SHIFT_LEFT = 57452
const SHIFT_RIGHT = 57453
const DIV = 57454
const MOD = 57455
const UNARY = 57456
const COLLATE = 57457
const BINARY = 57458
const UNDERSCORE_ARMSCII8 = 57459
const UNDERSCORE_ASCII = 57460
const UNDERSCORE_BIG5 = 57461
const UNDERSCORE_BINARY = 57462
const UNDERSCORE_CP1250 = 57463
const UNDERSCORE_CP1251 = 57464
const UNDERSCORE_CP1256 = 57465
const UNDERSCORE_CP1257 = 57466
const UNDERSCORE_CP850 = 57467
const UNDERSCORE_CP852 = 57468
const UNDERSCORE_CP866 = 57469
const UNDERSCORE_CP932 = 57470
const UNDERSCORE_DEC8 = 57471
const UNDERSCORE_EUCJPMS = 57472
const UNDERSCORE_EUCKR = 57473
const UNDERSCORE_GB18030 = 57474
const UNDERSCORE_GB2312 = 57475
const UNDERSCORE_GBK = 57476
const UNDERSCORE_GEOSTD8 = 57477
const UNDERSCORE_GREEK = 57478
const UNDERSCORE_HEBREW = 57479
const UNDERSCORE_HP8 = 57480
const UNDERSCORE_KEYBCS2 = 57481
const UNDERSCORE_KOI8R = 57482
const UNDERSCORE_KOI8U = 57483
const UNDERSCORE_LATIN1 = 57484
const UNDERSCORE_LATIN2 = 57485
const UNDERSCORE_LATIN5 = 57486
const UNDERSCORE_LATIN7 = 57487
const UNDERSCORE_MACCE = 57488
const UNDERSCORE_MACROMAN = 57489
const UNDERSCORE_SJIS = 57490
const UNDERSCORE_SWE7 = 57491
const UNDERSCORE_TIS620 = 57492
const UNDERSCORE_UCS2 = 57493
const UNDERSCORE_UJIS = 57494
const UNDERSCORE_UTF16 = 57495
const UNDERSCORE_UTF16LE = 57496
const UNDERSCORE_UTF32 = 57497
const UNDERSCORE_UTF8 = 57498
const UNDERSCORE_UTF8MB3 = 57499
const UNDERSCORE_UTF8MB4 = 57500
const INTERVAL = 57501
const JSON_EXTRACT_OP = 57502
const JSON_UNQUOTE_EXTRACT_OP = 57503
const CREATE = 57504
const ALTER = 57505
const DROP = 57506
const RENAME = 57507
const ANALYZE = 57508
const ADD = 57509
const MODIFY = 57510
const CHANGE = 57511
const SCHEMA = 57512
const TABLE = 57513
const INDEX = 57514
const INDEXES = 57515
const VIEW = 57516
const TO = 57517
const IGNORE = 57518
const IF = 57519
const PRIMARY = 57520
const COLUMN = 57521
const SPATIAL = 57522
const FULLTEXT = 57523
const KEY_BLOCK_SIZE = 57524
const CHECK = 57525
const ACTION = 57526
const CASCADE = 57527
const CONSTRAINT = 57528
const FOREIGN = 57529
const NO = 57530
const REFERENCES = 57531
const RESTRICT = 57532
const FIRST = 57533
const AFTER = 57534
const SHOW = 57535
const DESCRIBE = 57536
const EXPLAIN = 57537
const DATE = 57538
const ESCAPE = 57539
const REPAIR = 57540
const OPTIMIZE = 57541
const TRUNCATE = 57542
const FORMAT = 57543
const MAXVALUE = 57544
const REORGANIZE = 57545
const LESS = 57546
const THAN = 57547
const PROCEDURE = 57548
const TRIGGER = 57549
const TRIGGERS = 57550
const FUNCTION = 57551
const STATUS = 57552
const VARIABLES = 57553
const WARNINGS = 57554
const ERRORS = 57555
const KILL = 57556
const CONNECTION = 57557
const SEQUENCE = 57558
const ENABLE = 57559
const DISABLE = 57560
const EACH = 57561
const ROW = 57562
const BEFORE = 57563
const FOLLOWS = 57564
const PRECEDES = 57565
const DEFINER = 57566
const INVOKER = 57567
const INOUT = 57568
const OUT = 57569
const DETERMINISTIC = 57570
const CONTAINS = 57571
const READS = 57572
const MODIFIES = 57573
const SQL = 57574
const SECURITY = 57575
const TEMPORARY = 57576
const ALGORITHM = 57577
const MERGE = 57578
const TEMPTABLE = 57579
const UNDEFINED = 57580
const CLASS_ORIGIN = 57581
const SUBCLASS_ORIGIN = 57582
const MESSAGE_TEXT = 57583
const MYSQL_ERRNO = 57584
const CONSTRAINT_CATALOG = 57585
const CONSTRAINT_SCHEMA = 57586
const CONSTRAINT_NAME = 57587
const CATALOG_NAME = 57588
const SCHEMA_NAME = 57589
const TABLE_NAME = 57590
const COLUMN_NAME = 57591
const CURSOR_NAME = 57592
const SIGNAL = 57593
const RESIGNAL = 57594
const SQLSTATE = 57595
const DECLARE = 57596
const CONDITION = 57597
const CURSOR = 57598
const CONTINUE = 57599
const EXIT = 57600
const UNDO = 57601
const HANDLER = 57602
const FOUND = 57603
const SQLWARNING = 57604
const SQLEXCEPTION = 57605
const USER = 57606
const IDENTIFIED = 57607
const ROLE = 57608
const REUSE = 57609
const GRANT = 57610
const GRANTS = 57611
const REVOKE = 57612
const NONE = 57613
const ATTRIBUTE = 57614
const RANDOM = 57615
const PASSWORD = 57616
const INITIAL = 57617
const AUTHENTICATION = 57618
const SSL = 57619
const X509 = 57620
const CIPHER = 57621
const ISSUER = 57622
const SUBJECT = 57623
const ACCOUNT = 57624
const EXPIRE = 57625
const NEVER = 57626
const DAY = 57627
const OPTION = 57628
const OPTIONAL = 57629
const EXCEPT = 57630
const ADMIN = 57631
const PRIVILEGES = 57632
const MAX_QUERIES_PER_HOUR = 57633
const MAX_UPDATES_PER_HOUR = 57634
const MAX_CONNECTIONS_PER_HOUR = 57635
const MAX_USER_CONNECTIONS = 57636
const FLUSH = 57637
const FAILED_LOGIN_ATTEMPTS = 57638
const PASSWORD_LOCK_TIME = 57639
const REQUIRE = 57640
const PROXY = 57641
const ROUTINE = 57642
const TABLESPACE = 57643
const CLIENT = 57644
const SLAVE = 57645
const EVENT = 57646
const EXECUTE = 57647
const FILE = 57648
const RELOAD = 57649
const REPLICATION = 57650
const SHUTDOWN = 57651
const SUPER = 57652
const USAGE = 57653
const LOGS = 57654
const ENGINE = 57655
const ERROR = 57656
const GENERAL = 57657
const HOSTS = 57658
const OPTIMIZER_COSTS = 57659
const RELAY = 57660
const SLOW = 57661
const USER_RESOURCES = 57662
const NO_WRITE_TO_BINLOG = 57663
const CHANNEL = 57664
const BEGIN = 57665
const START = 57666
const TRANSACTION = 57667
const COMMIT = 57668
const ROLLBACK = 57669
const SAVEPOINT = 57670
const WORK = 57671
const RELEASE = 57672
const BIT = 57673
const TINYINT = 57674
const SMALLINT = 57675
const MEDIUMINT = 57676
const INT = 57677
const INTEGER = 57678
const BIGINT = 57679
const INTNUM = 57680
const SERIAL = 57681
const REAL = 57682
const DOUBLE = 57683
const FLOAT_TYPE = 57684
const DECIMAL = 57685
const NUMERIC = 57686
const DEC = 57687
const FIXED = 57688
const PRECISION = 57689
const TIME = 57690
const TIMESTAMP = 57691
const DATETIME = 57692
const YEAR = 57693
const CHAR = 57694
const VARCHAR = 57695
const BOOL = 57696
const CHARACTER = 57697
const VARBINARY = 57698
const NCHAR = 57699
const NVARCHAR = 57700
const NATIONAL = 57701
const VARYING = 57702
const TEXT = 57703
const TINYTEXT = 57704
const MEDIUMTEXT = 57705
const LONGTEXT = 57706
const LONG = 57707
const BLOB = 57708
const TINYBLOB = 57709
const MEDIUMBLOB = 57710
const LONGBLOB = 57711
const JSON = 57712
const ENUM = 57713
const GEOMETRY = 57714
const POINT = 57715
const LINESTRING = 57716
const POLYGON = 57717
const GEOMETRYCOLLECTION = 57718
const MULTIPOINT = 57719
const MULTILINESTRING = 57720
const MULTIPOLYGON = 57721
const LOCAL = 57722
const LOW_PRIORITY = 57723
const NULLX = 57724
const AUTO_INCREMENT = 57725
const APPROXNUM = 57726
const SIGNED = 57727
const UNSIGNED = 57728
const ZEROFILL = 57729
const SRID = 57730
const COLLATION = 57731
const DATABASES = 57732
const SCHEMAS = 57733
const TABLES = 57734
const FULL = 57735
const PROCESSLIST = 57736
const COLUMNS = 57737
const FIELDS = 57738
const ENGINES = 57739
const PLUGINS = 57740
const NAMES = 57741
const CHARSET = 57742
const GLOBAL = 57743
const SESSION = 57744
const ISOLATION = 57745
const LEVEL = 57746
const READ = 57747
const WRITE = 57748
const ONLY = 57749
const REPEATABLE = 57750
const COMMITTED = 57751
const UNCOMMITTED = 57752
const SERIALIZABLE = 57753
const ENCRYPTION = 57754
const CURRENT_TIMESTAMP = 57755
const DATABASE = 57756
const CURRENT_DATE = 57757
const CURRENT_USER = 57758
const CURRENT_TIME = 57759
const LOCALTIME = 57760
const LOCALTIMESTAMP = 57761
const UTC_DATE = 57762
const UTC_TIME = 57763
const UTC_TIMESTAMP = 57764
const REPLACE = 57765
const CONVERT = 57766
const CAST = 57767
const SUBSTR = 57768
const SUBSTRING = 57769
const TRIM = 57770
const LEADING = 57771
const TRAILING = 57772
const BOTH = 57773
const GROUP_CONCAT = 57774
const SEPARATOR = 57775
const TIMESTAMPADD = 57776
const TIMESTAMPDIFF = 57777
const OVER = 57778
const WINDOW = 57779
const GROUPING = 57780
const CURRENT = 57781
const AVG = 57782
const BIT_AND = 57783
const BIT_OR = 57784
const BIT_XOR = 57785
const COUNT = 57786
const JSON_ARRAYAGG = 57787
const JSON_OBJECTAGG = 57788
const MAX = 57789
const MIN = 57790
const STDDEV_POP = 57791
const STDDEV = 57792
const STD = 57793
const STDDEV_SAMP = 57794
const SUM = 57795
const VAR_POP = 57796
const VARIANCE = 57797
const VAR_SAMP = 57798
const CUME_DIST = 57799
const DENSE_RANK = 57800
const FIRST_VALUE = 57801
const LAG = 57802
const LAST_VALUE = 57803
const LEAD = 57804
const NTH_VALUE = 57805
const NTILE = 57806
const ROW_NUMBER = 57807
const PERCENT_RANK = 57808
const RANK = 57809
const MATCH = 57810
const AGAINST = 57811
const BOOLEAN = 57812
const LANGUAGE = 57813
const WITH = 57814
const QUERY = 57815
const EXPANSION = 57816
const UNUSED = 57817
const ARRAY = 57818
const DESCRIPTION = 57819
const EMPTY = 57820
const JSON_TABLE = 57821
const LATERAL = 57822
const MEMBER = 57823
const RECURSIVE = 57824
const ACTIVE = 57825
const BUCKETS = 57826
const CLONE = 57827
const COMPONENT = 57828
const DEFINITION = 57829
const ENFORCED = 57830
const EXCLUDE = 57831
const GEOMCOLLECTION = 57832
const GET_MASTER_PUBLIC_KEY = 57833
const HISTOGRAM = 57834
const HISTORY = 57835
const INACTIVE = 57836
const INVISIBLE = 57837
const LOCKED = 57838
const MASTER_COMPRESSION_ALGORITHMS = 57839
const MASTER_PUBLIC_KEY_PATH = 57840
const MASTER_TLS_CIPHERSUITES = 57841
const MASTER_ZSTD_COMPRESSION_LEVEL = 57842
const NESTED = 57843
const NETWORK_NAMESPACE = 57844
const NOWAIT = 57845
const NULLS = 57846
const OJ = 57847
const OLD = 57848
const ORDINALITY = 57849
const ORGANIZATION = 57850
const OTHERS = 57851
const PATH = 57852
const PERSIST = 57853
const PERSIST_ONLY = 57854
const PRIVILEGE_CHECKS_USER = 57855
const PROCESS = 57856
const REFERENCE = 57857
const REQUIRE_ROW_FORMAT = 57858
const RESOURCE = 57859
const RESPECT = 57860
const RESTART = 57861
const RETAIN = 57862
const SECONDARY = 57863
const SECONDARY_ENGINE = 57864
const SECONDARY_LOAD = 57865
const SECONDARY_UNLOAD = 57866
const SKIP = 57867
const THREAD_PRIORITY = 57868
const TIES = 57869
const VCPU = 57870
const VISIBLE = 57871
const SYSTEM = 57872
const INFILE = 57873
const GENERATED = 57874
const ALWAYS = 57875
const STORED = 57876
const VIRTUAL = 57877
const NVAR = 57878
const PASSWORD_LOCK = 57879

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DUMPFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"INTO",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB3",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"ENABLE",
	"DISABLE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"ALGORITHM",
	"MERGE",
	"TEMPTABLE",
	"UNDEFINED",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTION",
	"OPTIONAL",
	"EXCEPT",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EVENT",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"SRID",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ENCRYPTION",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"DESCRIPTION",
	"EMPTY",
	"JSON_TABLE",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"ACTIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"GENERATED",
	"ALWAYS",
	"STORED",
	"VIRTUAL",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int16{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 43,
	189, 1199,
	190, 1218,
	-2, 246,
	-1, 49,
	228, 721,
	229, 721,
	-2, 710,
	-1, 70,
	5, 59,
	-2, 53,
	-1, 468,
	5, 59,
	-2, 52,
	-1, 561,
	177, 1228,
	-2, 1222,
	-1, 562,
	177, 1229,
	-2, 1223,
	-1, 707,
	100, 1517,
	177, 1517,
	-2, 1183,
	-1, 708,
	100, 1636,
	177, 1636,
	-2, 1184,
	-1, 713,
	100, 1541,
	177, 1541,
	-2, 1185,
	-1, 714,
	100, 1589,
	177, 1589,
	-2, 1186,
	-1, 715,
	100, 1590,
	177, 1590,
	-2, 1187,
	-1, 716,
	100, 1462,
	177, 1462,
	-2, 1191,
	-1, 718,
	100, 1566,
	177, 1566,
	-2, 1193,
	-1, 1241,
	1, 819,
	5, 819,
	12, 819,
	13, 819,
	14, 819,
	15, 819,
	17, 819,
	19, 819,
	29, 819,
	30, 819,
	56, 819,
	57, 819,
	58, 819,
	59, 819,
	60, 819,
	62, 819,
	63, 819,
	66, 819,
	67, 819,
	69, 819,
	70, 819,
	87, 819,
	455, 819,
	556, 819,
	-2, 851,
	-1, 1247,
	67, 76,
	69, 76,
	-2, 80,
	-1, 1342,
	1, 500,
	556, 500,
	-2, 498,
	-1, 1344,
	1, 500,
	556, 500,
	-2, 498,
	-1, 1508,
	177, 1231,
	-2, 1227,
	-1, 1673,
	44, 566,
	-2, 1474,
	-1, 1677,
	68, 564,
	72, 564,
	-2, 1511,
	-1, 1678,
	68, 566,
	-2, 1419,
	-1, 1681,
	68, 562,
	72, 562,
	-2, 1336,
	-1, 1682,
	68, 563,
	72, 563,
	-2, 1346,
	-1, 1730,
	1, 501,
	556, 501,
	-2, 498,
	-1, 1812,
	44, 609,
	196, 611,
	198, 609,
	199, 609,
	-2, 646,
	-1, 1893,
	5, 60,
	-2, 922,
	-1, 2208,
	69, 1393,
	70, 1393,
	177, 1393,
	-2, 753,
	-1, 2231,
	1, 876,
	5, 876,
	12, 876,
	13, 876,
	14, 876,
	15, 876,
	17, 876,
	19, 876,
	29, 876,
	30, 876,
	56, 876,
	57, 876,
	58, 876,
	59, 876,
	60, 876,
	62, 876,
	63, 876,
	66, 876,
	67, 876,
	69, 876,
	70, 876,
	87, 876,
	455, 876,
	556, 876,
	-2, 851,
	-1, 2342,
	196, 612,
	-2, 610,
	-1, 2403,
	5, 60,
	-2, 1155,
	-1, 2618,
	41, 1238,
	-2, 1236,
	-1, 2715,
	5, 60,
	-2, 1158,
}

const yyPrivate = 57344

const yyLast = 39273

var yyAct = [...]int16{
	627, 81, 2912, 2938, 2945, 2894, 2914, 2895, 2812, 932,
	431, 2832, 2150, 2786, 1277, 2037, 2866, 564, 2847, 2719,
	2727, 7, 2701, 2662, 2287, 2726, 6, 2415, 2784, 2811,
	2245, 2618, 562, 1196, 2225, 2725, 5, 1725, 731, 2559,
	2728, 8, 1626, 1928, 2133, 1683, 567, 1749, 1958, 1979,
	2201, 553, 2119, 2478, 2620, 2501, 2304, 2472, 1377, 84,
	2456, 1485, 2720, 1630, 414, 417, 2246, 626, 1632, 729,
	81, 965, 1195, 565, 2202, 2336, 456, 456, 462, 1674,
	130, 1376, 81, 130, 2053, 476, 546, 1985, 1929, 130,
	579, 94, 2198, 2327, 1664, 1716, 1478, 107, 1811, 459,
	459, 1663, 989, 2210, 948, 2217, 2172, 1475, 2724, 3,
	1776, 130, 1379, 1533, 2143, 2097, 1426, 1700, 1609, 1353,
	1397, 1670, 1542, 1733, 130, 1732, 1986, 1605, 130, 734,
	1731, 1094, 1712, 2028, 709, 726, 1258, 1616, 569, 712,
	1599, 1510, 1101, 1237, 1241, 1793, 1018, 1729, 130, 459,
	1097, 734, 478, 1257, 544, 1238, 997, 1115, 475, 130,
	725, 701, 705, 706, 1212, 1105, 434, 571, 1665, 915,
	1348, 1431, 549, 996, 698, 931, 433, 920, 1345, 1213,
	103, 99, 1249, 2977, 1999, 2973, 2968, 2953, 2951, 2002,
	545, 2933, 2907, 2855, 1028, 83, 2664, 2663, 2260, 1424,
	79, 2443, 2924, 2795, 2597, 2007, 2006, 2893, 2713, 2285,
	2871, 426, 1654, 2773, 449, 36, 443, 454, 437, 36,
	2595, 71, 39, 40, 2301, 36, 2610, 2003, 36, 36,
	2065, 1762, 1762, 2794, 2712, 2598, 2193, 2457, 444, 473,
	2682, 2828, 2009, 1864, 1992, 2649, 2397, 2459, 1923, 914,
	1792, 1544, 1993, 1130, 1129, 1139, 1140, 1132, 1133, 1134,
	1135, 1136, 1137, 1138, 1131, 727, 1924, 1141, 86, 2544,
	1628, 2240, 917, 111, 922, 923, 2790, 82, 2241, 2242,
	1082, 82, 2044, 1651, 1652, 1447, 2790, 82, 1650, 925,
	82, 82, 1471, 1472, 682, 722, 688, 690, 689, 686,
	687, 685, 684, 683, 2785, 1427, 88, 89, 90, 91,
	92, 1259, 2787, 1260, 968, 2435, 2436, 100, 71, 39,
	40, 1430, 2787, 969, 970, 1046, 425, 121, 117, 118,
	1967, 119, 466, 1966, 952, 953, 1968, 424, 956, 41,
	555, 1054, 2011, 1685, 1686, 1428, 1429, 1791, 1015, 1706,
	1701, 1701, 1688, 1688, 2384, 1692, 1694, 2005, 1693, 2530,
	2008, 2382, 2462, 123, 122, 1410, 423, 1713, 408, 428,
	954, 955, 472, 2095, 1468, 1467, 1466, 2791, 1465, 1464,
	1463, 979, 1050, 1051, 2060, 2087, 2473, 2791, 436, 435,
	438, 467, 2886, 1030, 2476, 2623, 2676, 2326, 442, 975,
	2092, 1804, 2460, 2461, 2463, 2464, 2465, 2814, 2474, 2475,
	2813, 81, 81, 130, 2311, 446, 2763, 102, 2686, 450,
	2498, 124, 2490, 125, 2761, 2821, 1805, 113, 112, 559,
	2596, 984, 115, 453, 1458, 2062, 986, 2479, 2480, 2481,
	2482, 1750, 2488, 2942, 2852, 2590, 985, 2592, 1351, 1819,
	1813, 1814, 2589, 1812, 1815, 1816, 1061, 130, 2302, 1062,
	2850, 2851, 919, 918, 2305, 2306, 2307, 2308, 2309, 109,
	2588, 109, 2305, 2306, 2307, 2308, 2309, 1086, 418, 109,
	114, 110, 114, 2587, 987, 2586, 976, 977, 921, 1822,
	2684, 2614, 2584, 2064, 1030, 1360, 1361, 1359, 966, 2314,
	967, 969, 970, 1821, 1820, 921, 2585, 130, 2672, 2673,
	1740, 104, 2837, 105, 1744, 1745, 415, 2799, 2800, 983,
	545, 419, 409, 2042, 2722, 116, 2918, 2909, 2417, 2913,
	439, 440, 441, 447, 1437, 451, 452, 455, 2668, 1739,
	1949, 964, 1030, 1089, 2678, 2916, 2078, 2079, 478, 962,
	963, 1432, 961, 2888, 960, 945, 2864, 1053, 2502, 2503,
	2661, 1150, 2004, 1303, 1152, 1276, 1276, 2001, 2043, 2105,
	1068, 120, 2249, 2963, 2103, 2341, 2173, 1276, 951, 1276,
	2045, 2105, 1275, 1250, 2978, 2949, 1434, 2975, 1118, 1433,
	2969, 2688, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169,
	1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179,
	1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189,
	1190, 1191, 1192, 1193, 2284, 2650, 1194, 427, 1198, 1119,
	111, 1031, 1038, 1039, 1041, 1042, 1043, 1044, 1045, 1411,
	1047, 1048, 1049, 1029, 1052, 2458, 1055, 1056, 1057, 1058,
	1059, 2903, 2328, 1798, 72, 980, 2593, 2175, 2788, 2711,
	1701, 101, 2018, 1691, 1715, 1078, 1037, 1290, 2788, 1818,
	2677, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207,
	1208, 1430, 1211, 1214, 1214, 1214, 1220, 1214, 1214, 1220,
	1214, 1220, 1229, 1230, 1231, 1232, 2063, 1242, 1063, 78,
	2611, 2762, 1151, 78, 2066, 1428, 1429, 2683, 2613, 78,
	1040, 2000, 78, 78, 1084, 416, 2313, 1759, 2954, 411,
	416, 916, 1758, 416, 934, 416, 1035, 2560, 130, 130,
	130, 471, 1635, 1637, 2915, 2917, 545, 2513, 1080, 1236,
	445, 2562, 2512, 1088, 734, 1074, 1026, 2086, 1304, 1956,
	2083, 72, 712, 2068, 412, 1728, 1036, 712, 1032, 2947,
	2067, 1799, 2948, 1365, 2946, 1363, 981, 1073, 1069, 1070,
	1071, 1072, 1075, 1076, 1077, 1079, 913, 1955, 1954, 912,
	2081, 1081, 1271, 924, 113, 112, 380, 2516, 1153, 1154,
	1984, 1984, 1033, 1034, 1984, 1902, 2367, 2359, 1336, 2085,
	1102, 2084, 1335, 1971, 2177, 1963, 1859, 1847, 1827, 2181,
	1122, 2176, 1984, 2174, 1743, 1741, 1488, 1989, 2179, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009,
	1010, 2178, 1270, 1255, 1121, 1245, 944, 2681, 2578, 1131,
	1262, 1899, 1141, 2116, 1655, 1263, 2180, 2182, 1215, 1217,
	1219, 1221, 1223, 1225, 1226, 1228, 1141, 978, 2322, 1646,
	2561, 1274, 1636, 1216, 1218, 1984, 1222, 1224, 1407, 1227,
	1025, 2702, 1248, 2838, 2839, 2526, 2450, 2448, 2816, 1197,
	2274, 2124, 1253, 1317, 1320, 1321, 1322, 1323, 1324, 1325,
	1610, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 2579,
	1305, 1306, 1307, 1308, 1284, 1288, 1318, 1285, 1291, 1287,
	1289, 1286, 2511, 1292, 1293, 1294, 1295, 1296, 1297, 1298,
	1299, 1300, 1301, 1302, 1309, 1310, 1311, 1312, 1313, 1314,
	1315, 1316, 1210, 456, 1355, 1983, 1983, 2451, 2449, 1983,
	2517, 2275, 2111, 2103, 2600, 734, 130, 2108, 2835, 2836,
	2107, 2110, 456, 1378, 2817, 459, 459, 1983, 1398, 459,
	2708, 2707, 1153, 1154, 2103, 1768, 130, 1481, 1276, 130,
	958, 2104, 2105, 1114, 459, 459, 2120, 130, 2215, 2214,
	2601, 1354, 1419, 1381, 1268, 1358, 130, 130, 130, 130,
	130, 1134, 1135, 1136, 1137, 1138, 1131, 1113, 1111, 1141,
	1155, 1156, 1157, 1158, 1159, 1160, 1161, 459, 1153, 1154,
	1983, 130, 988, 2115, 1517, 1114, 97, 2112, 927, 950,
	926, 2848, 1319, 2875, 971, 2874, 2195, 2390, 1600, 1515,
	1516, 1514, 2967, 1405, 1111, 1602, 456, 1139, 1140, 1132,
	1133, 1134, 1135, 1136, 1137, 1138, 1131, 1422, 470, 1141,
	2869, 1114, 1382, 2957, 2939, 2956, 2904, 1399, 459, 459,
	459, 96, 1343, 734, 1769, 1393, 1394, 1395, 1396, 959,
	1456, 1130, 1129, 1139, 1140, 1132, 1133, 1134, 1135, 1136,
	1137, 1138, 1131, 2518, 2489, 1141, 1440, 1401, 2483, 1402,
	81, 1787, 2362, 459, 1356, 1341, 1340, 1479, 459, 459,
	1600, 95, 1914, 1357, 1112, 1113, 1111, 1438, 1367, 97,
	1479, 1375, 2971, 2258, 130, 949, 130, 1384, 1374, 734,
	973, 1386, 1387, 1114, 2374, 1462, 1130, 1129, 1139, 1140,
	1132, 1133, 1134, 1135, 1136, 1137, 1138, 1131, 695, 696,
	1141, 2964, 130, 1490, 1112, 1113, 1111, 1461, 82, 1118,
	1635, 1637, 2906, 81, 2142, 1108, 2759, 478, 1098, 1513,
	1508, 1099, 1477, 1114, 2766, 1414, 1415, 1491, 1777, 1417,
	1492, 1537, 1538, 1130, 1129, 1139, 1140, 1132, 1133, 1134,
	1135, 1136, 1137, 1138, 1131, 1420, 2758, 1141, 1366, 2716,
	1119, 2608, 1511, 1439, 734, 1435, 2965, 2679, 545, 1198,
	2607, 1436, 1385, 2760, 1130, 1129, 1139, 1140, 1132, 1133,
	1134, 1135, 1136, 1137, 1138, 1131, 933, 1897, 1141, 1896,
	2606, 734, 734, 1403, 1441, 2845, 2605, 1444, 1445, 1446,
	2599, 1448, 1449, 1457, 1506, 1450, 1460, 2442, 1112, 1113,
	1111, 1451, 1473, 1629, 2680, 1452, 1453, 1638, 1454, 1455,
	1242, 1586, 1589, 1469, 1242, 1476, 2441, 1114, 1601, 2261,
	2857, 545, 1534, 1512, 1535, 1197, 2033, 130, 1500, 1502,
	1503, 1580, 2031, 2012, 1504, 130, 1501, 130, 1021, 1969,
	1636, 1970, 130, 130, 1020, 2856, 130, 130, 130, 2818,
	1507, 2815, 1641, 1552, 1381, 2772, 1643, 2675, 1557, 2674,
	1112, 1113, 1111, 712, 994, 734, 734, 545, 2849, 1508,
	1132, 1133, 1134, 1135, 1136, 1137, 1138, 1131, 478, 1114,
	1141, 1844, 1845, 1846, 2660, 2615, 2583, 993, 1540, 2540,
	1634, 2486, 1548, 1625, 2485, 2484, 936, 937, 938, 939,
	940, 941, 942, 1559, 1560, 1336, 2452, 2439, 2333, 1335,
	2267, 545, 1112, 1113, 1111, 2129, 1572, 2128, 1661, 2848,
	1576, 2029, 1788, 1496, 1497, 1498, 1639, 1112, 1113, 1111,
	1763, 1114, 1416, 2844, 1597, 2197, 1756, 2685, 2658, 2631,
	1989, 1245, 2625, 1660, 1486, 1487, 1114, 2509, 1245, 130,
	2370, 2355, 1245, 2351, 2343, 130, 130, 459, 459, 459,
	1679, 2315, 130, 1404, 1722, 1723, 2073, 1220, 2072, 1671,
	1781, 1702, 1703, 1704, 1705, 1653, 1644, 1765, 1687, 1648,
	1647, 1906, 1898, 1754, 1755, 2034, 1718, 1719, 1720, 1721,
	1764, 130, 130, 130, 1668, 1093, 1536, 1784, 1412, 1659,
	1409, 1373, 727, 1112, 1113, 1111, 1372, 1112, 1113, 1111,
	1197, 1112, 1113, 1111, 1584, 1585, 1344, 1342, 130, 1016,
	130, 1714, 1114, 946, 734, 422, 1114, 420, 734, 1060,
	1114, 2551, 2872, 2426, 2862, 1824, 2426, 2824, 2778, 1093,
	1093, 2426, 2774, 2426, 2666, 2551, 2654, 1112, 1113, 1111,
	734, 1766, 1737, 734, 2551, 2568, 2551, 1093, 2551, 2550,
	2624, 478, 1770, 2574, 1774, 2573, 1114, 1775, 1848, 2426,
	2425, 1026, 734, 1790, 584, 583, 586, 587, 588, 589,
	1658, 2407, 1093, 585, 590, 1826, 1093, 1508, 1130, 1129,
	1139, 1140, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1131,
	2282, 2281, 1141, 2294, 1618, 1621, 1622, 1623, 1619, 1251,
	1620, 1624, 2268, 1509, 2218, 2219, 1518, 1519, 1520, 1521,
	1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531,
	1532, 1779, 1789, 2278, 2279, 1783, 2278, 2277, 1857, 1093,
	1092, 1796, 1511, 1613, 1093, 1801, 1800, 1578, 1785, 1724,
	1578, 1093, 1273, 1272, 2199, 1612, 1251, 2213, 1959, 1748,
	1640, 1660, 1250, 1803, 1959, 1252, 1806, 1254, 2889, 85,
	1925, 1927, 1065, 1245, 1242, 1242, 1242, 1242, 1242, 1823,
	1483, 1064, 1023, 70, 1024, 1024, 2868, 1836, 2213, 1853,
	1629, 1578, 1950, 1834, 1835, 1613, 1592, 2401, 1613, 1762,
	1747, 1242, 1802, 2295, 1603, 2280, 130, 130, 130, 130,
	130, 1931, 1252, 1512, 1250, 1613, 1849, 1507, 130, 1930,
	2227, 2213, 130, 1857, 1863, 1865, 130, 2127, 2096, 1973,
	1026, 1482, 1649, 130, 1857, 1886, 1885, 1877, 1878, 1879,
	1880, 1418, 1926, 1960, 1761, 1484, 1083, 1459, 1425, 1250,
	1961, 1364, 1962, 468, 1362, 712, 734, 1256, 82, 478,
	2796, 469, 1580, 1953, 1891, 2775, 2226, 478, 2698, 2628,
	2444, 1945, 1688, 2413, 1717, 2257, 2218, 2219, 545, 1952,
	1618, 1621, 1622, 1623, 1619, 1713, 1620, 1624, 1988, 1990,
	1977, 1030, 430, 1742, 1708, 1707, 1102, 1337, 545, 1913,
	1013, 1726, 1778, 1336, 2928, 2926, 2896, 1980, 2293, 2221,
	2199, 2035, 1245, 1245, 1245, 1245, 1245, 1932, 1974, 734,
	1935, 130, 1944, 82, 1369, 1066, 1957, 1027, 1245, 1022,
	1933, 1934, 1941, 1936, 734, 734, 734, 1942, 1843, 1245,
	459, 2224, 1939, 1262, 2223, 1938, 1964, 1940, 456, 2077,
	1937, 550, 551, 1972, 130, 459, 1943, 2841, 1622, 1623,
	461, 2793, 2130, 1982, 1976, 1987, 1354, 2013, 2014, 1833,
	1494, 459, 1106, 1107, 2020, 2826, 2071, 2404, 1841, 1840,
	2541, 2070, 2508, 2429, 2027, 81, 2350, 2349, 1991, 2266,
	1892, 2265, 459, 2264, 734, 1981, 2251, 2690, 2693, 2771,
	459, 1104, 2030, 1782, 2770, 2619, 2617, 2671, 2032, 2670,
	421, 1413, 1915, 2123, 2041, 2122, 2039, 2602, 2603, 734,
	734, 2040, 1095, 2289, 2022, 2151, 1269, 2061, 1011, 995,
	130, 992, 2882, 1096, 991, 947, 2635, 2634, 1735, 2075,
	734, 2088, 1486, 1487, 2491, 2399, 1736, 1368, 2890, 2094,
	2764, 2492, 2621, 1606, 2074, 2433, 990, 734, 1508, 2288,
	1106, 1107, 1839, 1727, 97, 2080, 1474, 2082, 1090, 1091,
	1838, 2881, 2880, 2021, 2879, 2023, 2024, 2025, 2026, 2580,
	1809, 974, 547, 2820, 2819, 2204, 81, 2782, 2768, 2106,
	2694, 2117, 2118, 545, 2100, 2121, 2641, 548, 85, 2098,
	2109, 2114, 2781, 2704, 1959, 1850, 1851, 1852, 2101, 2521,
	2229, 2047, 2048, 2049, 2929, 2233, 2234, 2235, 734, 2331,
	734, 2137, 1931, 2930, 2929, 2930, 2093, 2200, 2091, 2090,
	1930, 2194, 2145, 1903, 1900, 1807, 2136, 2212, 1400, 1109,
	2141, 2651, 2152, 734, 2263, 1480, 2155, 2156, 2157, 469,
	543, 2160, 2203, 2738, 52, 2125, 2126, 87, 2205, 55,
	2259, 2740, 19, 1, 734, 2184, 734, 1797, 734, 2239,
	734, 2183, 2739, 18, 2741, 20, 2135, 2228, 2237, 2742,
	21, 2232, 1442, 1907, 1908, 1909, 2737, 15, 1507, 2736,
	14, 2253, 2254, 2207, 545, 2255, 2471, 2256, 2730, 10,
	2470, 2222, 2753, 34, 625, 2751, 33, 2477, 1722, 2300,
	1723, 2248, 2750, 32, 2230, 2749, 28, 2303, 2250, 2059,
	2252, 2748, 27, 2747, 26, 2745, 23, 2487, 130, 2296,
	2244, 1352, 456, 2310, 2591, 2243, 2744, 22, 2746, 24,
	2735, 13, 2732, 12, 2731, 11, 2729, 9, 734, 734,
	734, 930, 1746, 1017, 1476, 459, 2290, 2291, 2292, 2769,
	130, 459, 2689, 2691, 2616, 2494, 2455, 2454, 2052, 2051,
	1012, 1423, 2312, 2099, 130, 2102, 459, 1757, 734, 459,
	1817, 2700, 1808, 459, 459, 1067, 459, 2317, 1672, 1662,
	724, 93, 1767, 2271, 957, 388, 1669, 719, 1997, 2692,
	2135, 730, 734, 1014, 1996, 2010, 130, 734, 2339, 1684,
	1730, 1734, 1995, 1994, 734, 2687, 1998, 734, 1281, 1279,
	734, 1280, 1278, 935, 1283, 2321, 2196, 1282, 2325, 392,
	1264, 2338, 2329, 2330, 1336, 2332, 2806, 2318, 1980, 2369,
	1110, 2345, 2347, 108, 56, 2363, 2510, 2113, 464, 465,
	98, 2338, 106, 2354, 2395, 2334, 1493, 2340, 2319, 394,
	1149, 1837, 1965, 1549, 1550, 710, 711, 2076, 703, 1829,
	1085, 2238, 2706, 2827, 2865, 2798, 1562, 1563, 1564, 1565,
	1100, 2829, 2780, 2703, 1912, 1209, 2269, 2270, 1598, 2361,
	568, 1577, 1579, 2273, 1948, 2525, 2831, 1583, 1499, 582,
	2276, 581, 130, 580, 577, 578, 2789, 1489, 1922, 1123,
	2283, 566, 1931, 557, 1240, 1233, 1786, 1617, 1615, 734,
	1930, 2421, 2422, 2423, 1614, 1370, 734, 734, 734, 699,
	2220, 2216, 2408, 2380, 1627, 1239, 734, 1243, 69, 2520,
	972, 2132, 410, 478, 2139, 2431, 2396, 2648, 81, 1842,
	734, 38, 542, 2400, 552, 25, 17, 982, 16, 1810,
	2419, 928, 2409, 42, 2446, 44, 2046, 1738, 2805, 2911,
	998, 2937, 2467, 2468, 2469, 2165, 2166, 2846, 31, 30,
	29, 2743, 2752, 2420, 2424, 2734, 130, 2733, 734, 2185,
	2186, 2898, 2187, 2188, 2897, 4, 2189, 1087, 1974, 2430,
	80, 35, 2447, 721, 2, 0, 0, 0, 0, 0,
	0, 0, 2504, 2505, 2434, 0, 0, 0, 0, 0,
	2445, 0, 0, 0, 459, 0, 0, 0, 0, 0,
	0, 2356, 0, 0, 0, 0, 0, 2506, 0, 0,
	2466, 2231, 0, 0, 0, 555, 0, 0, 0, 0,
	0, 2495, 734, 0, 0, 2438, 545, 2440, 0, 0,
	734, 0, 2204, 0, 0, 2204, 2546, 2522, 2523, 2338,
	2514, 2500, 1722, 2499, 0, 2496, 0, 0, 2229, 2497,
	0, 0, 2250, 2493, 0, 0, 0, 0, 2507, 2338,
	0, 2515, 2262, 0, 2570, 0, 1188, 1189, 0, 0,
	734, 2549, 0, 1780, 0, 0, 734, 0, 0, 2398,
	0, 130, 0, 130, 0, 2543, 1197, 0, 0, 734,
	0, 2576, 0, 0, 0, 0, 2410, 2411, 0, 2203,
	2412, 2577, 2203, 2414, 0, 2575, 2542, 734, 2545, 2566,
	2567, 1197, 2553, 0, 2437, 2552, 0, 0, 2558, 2564,
	2565, 0, 478, 2563, 478, 2548, 2529, 0, 0, 2581,
	2248, 0, 0, 0, 1634, 0, 2554, 0, 0, 0,
	0, 1825, 0, 1828, 545, 0, 2582, 0, 2248, 2636,
	0, 0, 1242, 0, 0, 0, 0, 0, 2519, 2594,
	0, 2604, 0, 0, 0, 0, 2135, 2612, 0, 0,
	2609, 0, 0, 0, 0, 2204, 734, 81, 0, 0,
	2626, 2627, 2622, 0, 130, 0, 0, 2629, 2630, 0,
	0, 0, 0, 0, 2638, 0, 0, 0, 2365, 2637,
	0, 2633, 1855, 0, 2639, 0, 0, 1858, 81, 0,
	0, 0, 1860, 1861, 734, 2640, 0, 1866, 1867, 1868,
	1869, 1870, 1871, 1872, 1873, 2652, 0, 1876, 2657, 0,
	0, 0, 1881, 1882, 1883, 1884, 2669, 0, 0, 1888,
	1889, 1890, 2203, 0, 2659, 0, 1893, 1894, 1895, 2653,
	2392, 2393, 2394, 2656, 1901, 0, 0, 1904, 1905, 0,
	0, 0, 1910, 0, 0, 0, 0, 1916, 0, 1917,
	1918, 1919, 0, 1920, 1921, 0, 0, 0, 0, 0,
	2667, 2571, 0, 2572, 459, 545, 0, 0, 0, 2696,
	1245, 734, 1946, 1947, 0, 0, 0, 2697, 0, 0,
	81, 0, 0, 0, 0, 2709, 0, 0, 2723, 0,
	2695, 0, 0, 2721, 2705, 0, 545, 0, 0, 2432,
	1931, 0, 0, 0, 130, 2714, 0, 0, 1930, 0,
	0, 0, 2248, 1689, 1690, 0, 1695, 1696, 1697, 1698,
	1699, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2767, 2765, 0, 1709, 1710, 1711, 0, 1093, 2776,
	0, 734, 0, 0, 0, 734, 0, 2792, 0, 2801,
	0, 0, 2797, 0, 0, 0, 0, 0, 0, 0,
	719, 0, 0, 0, 0, 719, 1265, 0, 81, 0,
	2657, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2248, 0, 555, 0, 1130, 1129, 1139, 1140,
	1132, 1133, 1134, 1135, 1136, 1137, 1138, 1131, 0, 734,
	1141, 0, 0, 0, 2822, 0, 0, 0, 0, 2834,
	0, 2825, 0, 2527, 2528, 0, 2823, 0, 734, 2840,
	0, 0, 0, 0, 2843, 0, 0, 2531, 2532, 2533,
	2534, 2853, 0, 0, 2842, 2538, 0, 0, 0, 734,
	0, 456, 2861, 1129, 1139, 1140, 1132, 1133, 1134, 1135,
	1136, 1137, 1138, 1131, 2863, 0, 1141, 0, 0, 2248,
	81, 0, 0, 0, 459, 0, 81, 0, 0, 0,
	0, 734, 0, 0, 2885, 2876, 0, 0, 2873, 0,
	0, 0, 0, 734, 0, 0, 81, 0, 0, 2878,
	2891, 81, 2887, 2892, 0, 0, 2908, 734, 0, 2921,
	0, 2151, 2140, 1197, 2902, 0, 456, 2920, 2148, 2901,
	0, 2927, 2925, 2923, 81, 2905, 2922, 81, 81, 2900,
	2158, 2159, 81, 2931, 2899, 0, 2885, 0, 0, 459,
	2940, 0, 734, 2167, 0, 2810, 0, 2171, 0, 0,
	0, 0, 0, 2932, 81, 2950, 2934, 81, 0, 0,
	0, 2958, 2885, 0, 2960, 0, 0, 0, 403, 0,
	0, 0, 81, 2910, 81, 0, 1244, 1338, 81, 0,
	2885, 2206, 2885, 1346, 1349, 0, 2955, 0, 0, 81,
	0, 0, 81, 0, 81, 0, 0, 2885, 81, 0,
	0, 0, 2885, 0, 1346, 1349, 2885, 2970, 0, 545,
	0, 0, 0, 2236, 0, 0, 0, 0, 0, 0,
	2665, 2974, 0, 0, 127, 0, 2802, 2803, 0, 0,
	0, 0, 0, 413, 0, 2146, 2147, 0, 0, 0,
	0, 0, 0, 2883, 2153, 2154, 0, 0, 0, 0,
	0, 0, 0, 2830, 2833, 0, 2161, 2162, 2163, 2164,
	0, 0, 0, 2168, 2169, 2170, 0, 0, 700, 381,
	2389, 0, 723, 0, 0, 0, 0, 1541, 1546, 1547,
	0, 0, 0, 1551, 2699, 1553, 1554, 1555, 1556, 0,
	1558, 0, 929, 1561, 2388, 1443, 0, 0, 1566, 1567,
	1568, 1569, 0, 943, 0, 1573, 1574, 1575, 0, 0,
	0, 0, 0, 1581, 1582, 0, 384, 0, 1588, 1591,
	2877, 1596, 0, 0, 0, 393, 401, 402, 0, 0,
	2015, 2016, 2017, 2019, 0, 0, 0, 0, 0, 0,
	2833, 0, 0, 1604, 0, 1607, 1608, 0, 0, 0,
	0, 730, 0, 0, 0, 0, 0, 0, 0, 0,
	390, 0, 0, 391, 0, 0, 399, 400, 0, 1130,
	1129, 1139, 1140, 1132, 1133, 1134, 1135, 1136, 1137, 1138,
	1131, 0, 0, 1141, 0, 0, 730, 0, 0, 0,
	0, 0, 2364, 1130, 1129, 1139, 1140, 1132, 1133, 1134,
	1135, 1136, 1137, 1138, 1131, 0, 0, 1141, 0, 0,
	0, 2959, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 396, 0, 0, 1539, 0, 2376, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2385,
	2386, 0, 0, 0, 397, 2391, 0, 0, 0, 0,
	0, 0, 0, 1570, 1571, 0, 0, 0, 0, 2387,
	2402, 2403, 0, 2405, 0, 0, 2406, 0, 0, 0,
	1125, 0, 1128, 0, 0, 0, 719, 0, 0, 1142,
	1143, 1144, 1145, 1146, 1147, 1148, 2418, 1126, 1127, 1124,
	0, 0, 0, 0, 0, 0, 0, 1130, 1129, 1139,
	1140, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1131, 382,
	0, 1141, 0, 0, 0, 2366, 0, 0, 0, 0,
	0, 719, 0, 2368, 2373, 0, 0, 0, 0, 0,
	0, 0, 2919, 2371, 2372, 730, 0, 730, 730, 0,
	0, 0, 2375, 395, 385, 386, 0, 406, 0, 1103,
	0, 387, 389, 0, 383, 405, 404, 700, 1130, 1129,
	1139, 1140, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1131,
	0, 2943, 1141, 1130, 1129, 1139, 1140, 1132, 1133, 1134,
	1135, 1136, 1137, 1138, 1131, 2138, 0, 1141, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 128, 398, 0,
	407, 1019, 0, 0, 0, 0, 128, 0, 0, 0,
	0, 0, 0, 1130, 1129, 1139, 1140, 1132, 1133, 1134,
	1135, 1136, 1137, 1138, 1131, 0, 0, 1141, 477, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 556, 0,
	0, 702, 720, 0, 0, 128, 0, 0, 2535, 2536,
	2537, 0, 2539, 0, 1856, 2192, 0, 2272, 0, 0,
	0, 0, 1862, 0, 0, 128, 0, 0, 0, 0,
	0, 0, 0, 1874, 1875, 0, 128, 2555, 2556, 2557,
	0, 0, 0, 0, 0, 0, 1887, 0, 2569, 0,
	0, 0, 0, 0, 0, 0, 1795, 1303, 0, 0,
	1795, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1911, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1795, 0, 0, 1795, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2854, 0, 0,
	0, 0, 0, 0, 1832, 0, 0, 0, 0, 0,
	0, 0, 0, 730, 0, 0, 0, 0, 0, 0,
	0, 1383, 1130, 1129, 1139, 1140, 1132, 1133, 1134, 1135,
	1136, 1137, 1138, 1131, 0, 0, 1141, 0, 0, 0,
	0, 2191, 0, 2642, 2643, 0, 0, 2644, 2645, 2646,
	2647, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1290, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2377, 2378, 0, 2379, 0, 0, 2381, 0,
	2383, 628, 629, 630, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 0, 0, 0, 0, 0, 2190, 0,
	0, 0, 1235, 0, 1247, 0, 0, 719, 0, 0,
	0, 0, 1304, 0, 0, 0, 2427, 2428, 1130, 1129,
	1139, 1140, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1131,
	0, 0, 1141, 1854, 2710, 0, 0, 0, 0, 2715,
	0, 0, 0, 719, 0, 0, 0, 0, 0, 0,
	0, 2718, 0, 0, 0, 0, 0, 0, 730, 0,
	128, 1130, 1129, 1139, 1140, 1132, 1133, 1134, 1135, 1136,
	1137, 1138, 1131, 0, 0, 1141, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2777, 0, 0, 0,
	0, 0, 2783, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 128, 1130, 1129, 1139, 1140, 1132,
	1133, 1134, 1135, 1136, 1137, 1138, 1131, 0, 0, 1141,
	0, 2036, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2050, 2054, 2058, 0,
	0, 0, 0, 0, 0, 0, 0, 1317, 1320, 1321,
	1322, 1323, 1324, 1325, 477, 1326, 1327, 1328, 1329, 1330,
	1331, 1332, 1333, 0, 1305, 1306, 1307, 1308, 1284, 1288,
	1318, 1285, 1291, 1287, 1289, 1286, 0, 1292, 1293, 1294,
	1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1309, 1310,
	1311, 1312, 1313, 1314, 1315, 1316, 2089, 1130, 1129, 1139,
	1140, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1131, 0,
	0, 1141, 0, 0, 0, 0, 0, 0, 0, 0,
	1339, 730, 730, 0, 0, 36, 0, 71, 39, 40,
	0, 0, 0, 36, 0, 71, 39, 40, 0, 59,
	700, 0, 730, 1371, 0, 77, 0, 59, 41, 0,
	0, 0, 0, 77, 730, 0, 41, 0, 0, 2149,
	1388, 1389, 1390, 1391, 1392, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1319, 82, 2941, 0,
	0, 0, 0, 0, 0, 82, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2754, 0, 0, 0, 0, 719, 0,
	730, 2754, 2211, 0, 2936, 2939, 2935, 0, 0, 2961,
	2962, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2211, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 730, 0, 730, 0,
	730, 0, 2247, 0, 0, 128, 128, 128, 0, 0,
	0, 0, 0, 0, 0, 720, 0, 0, 1470, 0,
	720, 0, 0, 0, 0, 0, 0, 0, 0, 43,
	73, 46, 45, 48, 0, 0, 0, 43, 73, 46,
	45, 48, 0, 0, 2755, 0, 1495, 0, 0, 0,
	0, 0, 2755, 0, 0, 0, 0, 0, 0, 0,
	49, 76, 75, 0, 0, 0, 0, 47, 49, 76,
	75, 0, 0, 0, 0, 47, 0, 0, 0, 0,
	2297, 2298, 2299, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2324, 0, 0, 0, 0, 0, 0, 0, 57, 58,
	0, 2756, 0, 0, 0, 0, 57, 58, 0, 2756,
	0, 0, 0, 0, 2348, 66, 0, 67, 0, 2353,
	0, 0, 0, 66, 0, 67, 2357, 0, 0, 2358,
	0, 0, 2360, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 68, 0, 0, 0, 0, 0, 0, 0,
	68, 1611, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 536, 1642, 0, 0,
	2757, 74, 0, 53, 54, 61, 0, 62, 2757, 74,
	0, 53, 54, 61, 0, 62, 0, 2342, 0, 0,
	0, 0, 0, 0, 0, 0, 541, 0, 0, 0,
	0, 0, 0, 128, 0, 0, 0, 0, 1347, 1350,
	0, 0, 0, 0, 492, 0, 0, 0, 719, 0,
	0, 0, 0, 128, 0, 0, 128, 0, 0, 1347,
	1350, 2416, 500, 0, 1380, 0, 0, 0, 2416, 2416,
	2416, 0, 0, 128, 128, 128, 128, 128, 730, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2416, 0, 0, 0, 0, 0, 1408, 0,
	72, 0, 0, 1751, 0, 0, 0, 0, 72, 1752,
	1753, 0, 0, 0, 0, 0, 1760, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2054, 0, 0, 0, 0, 0, 0, 540, 0, 0,
	0, 0, 0, 0, 0, 0, 1276, 1773, 0, 78,
	0, 0, 0, 0, 498, 481, 0, 78, 0, 0,
	0, 0, 0, 0, 502, 0, 0, 0, 0, 0,
	0, 0, 1019, 527, 0, 0, 493, 0, 488, 0,
	0, 0, 0, 0, 0, 501, 0, 0, 0, 0,
	0, 0, 0, 0, 730, 0, 0, 0, 0, 0,
	0, 128, 730, 477, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 505, 503, 0, 0, 0, 506, 128,
	0, 0, 0, 0, 514, 482, 0, 518, 0, 0,
	0, 1380, 2547, 0, 0, 480, 0, 0, 2416, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 496,
	520, 2247, 0, 0, 0, 0, 0, 494, 495, 497,
	524, 0, 526, 532, 0, 0, 0, 0, 0, 2247,
	0, 0, 0, 1545, 1545, 1545, 0, 0, 0, 1545,
	1545, 1545, 1545, 1545, 1545, 1545, 1545, 0, 0, 1545,
	0, 0, 0, 0, 1545, 1545, 1545, 1545, 0, 0,
	0, 1545, 1545, 1545, 0, 0, 0, 0, 0, 1545,
	1545, 0, 0, 0, 1545, 1545, 0, 1545, 0, 0,
	0, 720, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 483, 0, 2632, 1545,
	1545, 1545, 1545, 0, 128, 0, 504, 0, 0, 0,
	0, 0, 128, 0, 477, 0, 0, 0, 0, 128,
	128, 0, 0, 128, 1645, 1380, 720, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2655, 0, 0, 0,
	1380, 0, 0, 0, 0, 0, 0, 533, 534, 0,
	0, 0, 0, 484, 485, 486, 487, 489, 507, 508,
	512, 513, 530, 529, 528, 531, 535, 538, 537, 539,
	490, 491, 499, 509, 510, 511, 515, 516, 525, 521,
	523, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2038, 128, 522, 0, 0,
	0, 0, 128, 128, 0, 0, 719, 0, 0, 128,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 517,
	519, 0, 0, 0, 0, 0, 0, 0, 2069, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1771, 1772,
	128, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2247, 0, 0, 0, 2779, 0, 0,
	0, 0, 0, 0, 0, 128, 0, 477, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2131, 0, 0, 0, 0, 0,
	0, 730, 0, 0, 0, 0, 0, 0, 536, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1380, 0,
	2247, 0, 0, 0, 0, 2335, 0, 0, 0, 2337,
	0, 0, 0, 0, 0, 0, 0, 0, 541, 0,
	0, 2416, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 492, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1545, 0, 0, 2867, 500, 0, 0, 0, 1545, 0,
	0, 0, 0, 0, 0, 2870, 0, 0, 0, 1545,
	1545, 0, 0, 0, 0, 0, 0, 0, 0, 730,
	0, 0, 1545, 0, 0, 0, 1545, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1545, 0, 0,
	0, 0, 0, 0, 2867, 0, 0, 0, 0, 0,
	0, 0, 720, 128, 128, 128, 128, 128, 0, 540,
	0, 0, 0, 0, 0, 477, 0, 0, 0, 128,
	0, 0, 0, 477, 0, 0, 498, 481, 1545, 0,
	128, 0, 0, 0, 0, 0, 502, 0, 720, 0,
	0, 0, 0, 0, 0, 527, 0, 0, 493, 0,
	488, 0, 2286, 0, 0, 0, 0, 501, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2316, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 505, 503, 0, 2320, 0,
	506, 0, 0, 0, 0, 0, 514, 482, 0, 518,
	0, 0, 0, 0, 0, 0, 0, 480, 128, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2352, 496, 520, 0, 0, 0, 0, 0, 0, 494,
	495, 497, 524, 0, 526, 532, 0, 0, 0, 0,
	0, 128, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 536, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1978, 0, 0, 0, 0,
	0, 0, 0, 0, 541, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 492, 0, 0, 0, 0, 0, 483, 0,
	0, 0, 0, 0, 0, 0, 0, 128, 504, 0,
	500, 0, 0, 0, 0, 0, 0, 0, 1545, 0,
	0, 0, 0, 0, 0, 0, 0, 1545, 0, 1380,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 533,
	534, 0, 0, 0, 0, 484, 485, 486, 487, 489,
	507, 508, 512, 513, 530, 529, 528, 531, 535, 538,
	537, 539, 490, 491, 499, 509, 510, 511, 515, 516,
	525, 521, 523, 0, 0, 540, 0, 0, 0, 0,
	2453, 0, 0, 720, 1276, 0, 0, 0, 0, 0,
	0, 0, 498, 481, 0, 0, 0, 0, 0, 0,
	0, 0, 502, 0, 0, 0, 0, 0, 0, 0,
	0, 527, 0, 0, 493, 0, 488, 0, 0, 522,
	0, 0, 0, 501, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 517, 519, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 505, 503, 0, 0, 0, 506, 0, 0, 0,
	0, 0, 514, 482, 0, 518, 0, 0, 0, 0,
	0, 0, 0, 480, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 128, 0, 496, 520, 0,
	0, 0, 0, 0, 0, 494, 495, 497, 524, 0,
	526, 532, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 128, 36, 37,
	71, 39, 40, 0, 0, 0, 0, 0, 0, 0,
	0, 128, 59, 0, 0, 0, 0, 0, 77, 0,
	0, 41, 63, 64, 0, 0, 0, 0, 0, 60,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 128, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 483, 0, 50, 0, 0, 0,
	82, 0, 0, 556, 504, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 533, 534, 0, 0, 0,
	0, 484, 485, 486, 487, 489, 507, 508, 512, 513,
	530, 529, 528, 531, 535, 538, 537, 539, 490, 491,
	499, 509, 510, 511, 515, 516, 525, 521, 523, 477,
	0, 0, 0, 720, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 43, 73, 46, 45, 48, 0, 0, 0,
	0, 0, 0, 0, 0, 522, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 49, 76, 75, 0, 517, 519, 0,
	47, 0, 0, 0, 0, 0, 0, 0, 2717, 0,
	0, 0, 0, 128, 65, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 57, 58, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 66, 0,
	67, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 68, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 51, 74, 0, 53, 54, 61, 0,
	62, 0, 0, 0, 0, 0, 0, 0, 477, 0,
	477, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 890, 865, 341,
	810, 893, 767, 793, 908, 798, 802, 845, 751, 823,
	267, 789, 752, 72, 771, 741, 781, 742, 768, 184,
	766, 867, 826, 892, 223, 840, 0, 183, 172, 231,
	229, 128, 556, 0, 274, 340, 891, 818, 0, 900,
	226, 0, 835, 901, 328, 251, 0, 0, 814, 877,
	821, 863, 809, 847, 760, 834, 895, 790, 842, 896,
	0, 0, 78, 0, 2804, 0, 0, 0, 0, 0,
	0, 0, 0, 755, 0, 838, 889, 784, 841, 812,
	844, 911, 739, 837, 0, 746, 753, 907, 884, 774,
	775, 776, 0, 0, 0, 0, 0, 0, 0, 813,
	822, 857, 806, 361, 278, 295, 316, 800, 286, 787,
	0, 0, 0, 0, 0, 0, 0, 0, 772, 0,
	832, 0, 0, 0, 754, 747, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 720, 0, 0, 0, 0, 0, 0, 811, 0,
	0, 128, 759, 738, 773, 859, 0, 736, 252, 149,
	864, 883, 808, 214, 905, 887, 805, 804, 288, 0,
	335, 202, 224, 154, 131, 147, 165, 201, 263, 856,
	310, 786, 737, 868, 769, 782, 173, 778, 302, 271,
	360, 791, 829, 301, 227, 350, 852, 888, 359, 795,
	871, 369, 374, 777, 819, 757, 325, 186, 181, 185,
	0, 138, 788, 285, 178, 219, 807, 846, 770, 169,
	854, 833, 870, 324, 347, 135, 249, 348, 373, 156,
	342, 250, 256, 166, 168, 167, 148, 319, 346, 161,
	171, 329, 306, 336, 177, 0, 0, 2807, 2808, 2809,
	801, 792, 0, 0, 365, 803, 313, 312, 797, 209,
	862, 836, 743, 294, 849, 215, 137, 338, 377, 155,
	221, 343, 735, 196, 262, 175, 272, 273, 193, 133,
	290, 243, 244, 242, 245, 200, 783, 851, 861, 292,
	315, 345, 157, 332, 779, 780, 785, 858, 304, 869,
	881, 894, 234, 189, 192, 203, 210, 843, 299, 333,
	366, 0, 150, 139, 339, 358, 162, 314, 317, 375,
	300, 142, 356, 334, 247, 216, 217, 140, 0, 141,
	297, 182, 199, 176, 266, 0, 198, 287, 353, 354,
	174, 378, 151, 368, 144, 152, 367, 259, 0, 258,
	370, 349, 357, 248, 236, 0, 143, 355, 246, 235,
	222, 191, 205, 283, 230, 284, 206, 254, 253, 255,
	232, 237, 0, 744, 0, 330, 363, 379, 337, 159,
	765, 318, 344, 794, 291, 160, 197, 190, 282, 257,
	153, 208, 327, 220, 228, 296, 376, 270, 303, 163,
	362, 326, 187, 763, 764, 761, 0, 762, 824, 825,
	897, 898, 899, 860, 756, 0, 878, 879, 0, 0,
	0, 0, 0, 866, 885, 886, 848, 909, 799, 170,
	745, 748, 749, 750, 758, 815, 816, 828, 831, 874,
	873, 872, 875, 880, 903, 902, 904, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 827, 134,
	145, 225, 910, 293, 195, 364, 740, 180, 0, 817,
	820, 830, 855, 132, 146, 158, 164, 179, 188, 194,
	204, 207, 211, 212, 213, 218, 233, 238, 239, 240,
	241, 260, 261, 264, 265, 268, 269, 275, 276, 277,
	279, 280, 281, 289, 853, 298, 305, 307, 308, 309,
	311, 320, 321, 322, 323, 331, 351, 352, 371, 372,
	882, 0, 796, 136, 876, 906, 839, 850, 890, 865,
	341, 810, 893, 767, 793, 908, 798, 802, 845, 751,
	823, 267, 789, 752, 0, 771, 741, 781, 742, 768,
	184, 766, 867, 826, 892, 223, 840, 0, 183, 172,
	231, 229, 0, 0, 0, 274, 340, 891, 818, 0,
	900, 226, 0, 835, 901, 328, 251, 0, 0, 814,
	877, 821, 863, 809, 847, 760, 834, 895, 790, 842,
	896, 0, 0, 0, 0, 733, 0, 1666, 1667, 0,
	0, 0, 0, 0, 755, 0, 838, 889, 784, 841,
	812, 844, 911, 739, 837, 0, 746, 753, 907, 884,
	774, 775, 776, 1975, 0, 0, 0, 0, 0, 0,
	813, 822, 857, 806, 361, 278, 295, 316, 800, 286,
	787, 0, 0, 0, 0, 0, 0, 0, 0, 772,
	0, 832, 0, 0, 0, 754, 747, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 811,
	0, 0, 0, 759, 738, 773, 859, 0, 736, 252,
	149, 864, 883, 808, 214, 905, 887, 805, 804, 288,
	0, 335, 202, 224, 154, 131, 147, 165, 201, 263,
	856, 310, 786, 737, 868, 769, 782, 173, 778, 302,
	271, 360, 791, 829, 301, 227, 350, 852, 888, 359,
	795, 871, 369, 374, 777, 819, 757, 325, 186, 181,
	185, 0, 138, 788, 285, 178, 219, 807, 846, 770,
	169, 854, 833, 870, 324, 347, 135, 249, 348, 373,
	156, 342, 250, 256, 166, 168, 167, 148, 319, 346,
	161, 171, 329, 306, 336, 177, 0, 0, 0, 0,
	0, 801, 792, 0, 0, 365, 803, 313, 312, 797,
	209, 862, 836, 743, 294, 849, 215, 137, 338, 377,
	155, 221, 343, 735, 196, 262, 175, 272, 273, 193,
	133, 290, 243, 244, 242, 245, 200, 783, 851, 861,
	292, 315, 345, 157, 332, 779, 780, 785, 858, 304,
	869, 881, 894, 234, 189, 192, 203, 210, 843, 299,
	333, 366, 0, 150, 139, 339, 358, 162, 314, 317,
	375, 300, 142, 356, 334, 247, 216, 217, 140, 0,
	141, 297, 182, 199, 176, 266, 0, 198, 287, 353,
	354, 174, 378, 151, 368, 144, 152, 367, 259, 0,
	258, 370, 349, 357, 248, 236, 0, 143, 355, 246,
	235, 222, 191, 205, 283, 230, 284, 206, 254, 253,
	255, 232, 237, 0, 744, 0, 330, 363, 379, 337,
	159, 765, 318, 344, 794, 291, 160, 197, 190, 282,
	257, 153, 208, 327, 220, 228, 296, 376, 270, 303,
	163, 362, 326, 187, 763, 764, 761, 0, 762, 824,
	825, 897, 898, 899, 860, 756, 0, 878, 879, 0,
	0, 0, 0, 0, 866, 885, 886, 848, 909, 799,
	170, 745, 748, 749, 750, 758, 815, 816, 828, 831,
	874, 873, 872, 875, 880, 903, 902, 904, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 827,
	134, 145, 225, 910, 293, 195, 364, 740, 180, 0,
	817, 820, 830, 855, 132, 146, 158, 164, 179, 188,
	194, 204, 207, 211, 212, 213, 218, 233, 238, 239,
	240, 241, 260, 261, 264, 265, 268, 269, 275, 276,
	277, 279, 280, 281, 289, 853, 298, 305, 307, 308,
	309, 311, 320, 321, 322, 323, 331, 351, 352, 371,
	372, 882, 0, 796, 136, 876, 906, 839, 850, 890,
	865, 341, 810, 893, 767, 793, 908, 798, 802, 845,
	751, 823, 267, 789, 752, 0, 771, 741, 781, 742,
	768, 184, 766, 867, 826, 892, 223, 840, 0, 183,
	172, 231, 229, 0, 0, 0, 274, 340, 891, 818,
	0, 900, 226, 0, 835, 901, 328, 251, 0, 0,
	814, 877, 821, 863, 809, 847, 760, 834, 895, 790,
	842, 896, 0, 0, 0, 0, 733, 0, 1666, 1667,
	0, 0, 0, 0, 0, 755, 0, 838, 889, 784,
	841, 812, 844, 911, 739, 837, 0, 746, 753, 907,
	884, 774, 775, 776, 0, 0, 0, 0, 0, 0,
	0, 813, 822, 857, 806, 361, 278, 295, 316, 800,
	286, 787, 0, 0, 0, 0, 0, 0, 0, 0,
	772, 0, 832, 0, 0, 0, 754, 747, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	811, 0, 0, 0, 759, 738, 773, 859, 0, 736,
	252, 149, 864, 883, 808, 214, 905, 887, 805, 804,
	288, 0, 335, 202, 224, 154, 131, 147, 165, 201,
	263, 856, 310, 786, 737, 868, 769, 782, 173, 778,
	302, 271, 360, 791, 829, 301, 227, 350, 852, 888,
	359, 795, 871, 369, 374, 777, 819, 757, 325, 186,
	181, 185, 0, 138, 788, 285, 178, 219, 807, 846,
	770, 169, 854, 833, 870, 324, 347, 135, 249, 348,
	373, 156, 342, 250, 256, 166, 168, 167, 148, 319,
	346, 161, 171, 329, 306, 336, 177, 0, 0, 0,
	0, 0, 801, 792, 0, 0, 365, 803, 313, 312,
	797, 209, 862, 836, 743, 294, 849, 215, 137, 338,
	377, 155, 221, 343, 735, 196, 262, 175, 272, 273,
	193, 133, 290, 243, 244, 242, 245, 200, 783, 851,
	861, 292, 315, 345, 157, 332, 779, 780, 785, 858,
	304, 869, 881, 894, 234, 189, 192, 203, 210, 843,
	299, 333, 366, 0, 150, 139, 339, 358, 162, 314,
	317, 375, 300, 142, 356, 334, 247, 216, 217, 140,
	0, 141, 297, 182, 199, 176, 266, 0, 198, 287,
	353, 354, 174, 378, 151, 368, 144, 152, 367, 259,
	0, 258, 370, 349, 357, 248, 236, 0, 143, 355,
	246, 235, 222, 191, 205, 283, 230, 284, 206, 254,
	253, 255, 232, 237, 0, 744, 0, 330, 363, 379,
	337, 159, 765, 318, 344, 794, 291, 160, 197, 190,
	282, 257, 153, 208, 327, 220, 228, 296, 376, 270,
	303, 163, 362, 326, 187, 763, 764, 761, 0, 762,
	824, 825, 897, 898, 899, 860, 756, 0, 878, 879,
	0, 0, 0, 0, 0, 866, 885, 886, 848, 909,
	799, 170, 745, 748, 749, 750, 758, 815, 816, 828,
	831, 874, 873, 872, 875, 880, 903, 902, 904, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	827, 134, 145, 225, 910, 293, 195, 364, 740, 180,
	0, 817, 820, 830, 855, 132, 146, 158, 164, 179,
	188, 194, 204, 207, 211, 212, 213, 218, 233, 238,
	239, 240, 241, 260, 261, 264, 265, 268, 269, 275,
	276, 277, 279, 280, 281, 289, 853, 298, 305, 307,
	308, 309, 311, 320, 321, 322, 323, 331, 351, 352,
	371, 372, 882, 0, 796, 136, 876, 906, 839, 850,
	890, 2208, 341, 810, 893, 767, 793, 908, 798, 802,
	845, 751, 823, 267, 789, 752, 0, 771, 741, 781,
	742, 768, 184, 766, 867, 826, 892, 223, 840, 0,
	183, 172, 231, 229, 0, 0, 0, 274, 340, 891,
	818, 0, 900, 226, 0, 835, 901, 328, 251, 0,
	0, 814, 877, 821, 863, 809, 847, 760, 834, 895,
	790, 842, 896, 82, 0, 1093, 0, 733, 0, 0,
	0, 0, 0, 0, 0, 0, 755, 0, 838, 889,
	784, 841, 812, 844, 911, 739, 837, 0, 746, 753,
	907, 884, 774, 775, 776, 0, 0, 0, 0, 0,
	0, 0, 813, 822, 857, 806, 361, 278, 295, 316,
	800, 286, 787, 0, 0, 0, 0, 0, 0, 0,
	0, 772, 0, 832, 0, 0, 0, 754, 747, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 811, 0, 0, 0, 759, 738, 773, 859, 0,
	736, 252, 149, 864, 883, 808, 214, 905, 887, 805,
	804, 288, 0, 335, 202, 224, 154, 131, 147, 165,
	201, 263, 856, 310, 786, 737, 868, 769, 782, 173,
	778, 302, 271, 360, 791, 829, 301, 227, 350, 852,
	888, 359, 795, 871, 369, 374, 777, 819, 757, 325,
	186, 181, 185, 0, 138, 788, 285, 178, 219, 807,
	846, 770, 169, 854, 833, 870, 324, 347, 135, 249,
	348, 373, 156, 342, 250, 256, 166, 168, 167, 148,
	319, 346, 161, 171, 329, 306, 336, 177, 0, 0,
	0, 0, 0, 801, 792, 0, 0, 365, 803, 313,
	312, 797, 209, 862, 836, 743, 294, 849, 215, 137,
	338, 377, 155, 221, 343, 735, 196, 262, 175, 272,
	273, 193, 133, 290, 243, 244, 242, 245, 200, 783,
	851, 861, 292, 315, 345, 157, 332, 779, 780, 785,
	858, 304, 869, 881, 894, 234, 189, 192, 203, 210,
	843, 299, 333, 366, 0, 150, 139, 339, 358, 162,
	314, 317, 375, 300, 142, 356, 334, 247, 216, 217,
	140, 0, 141, 297, 182, 199, 176, 266, 0, 198,
	287, 353, 354, 174, 378, 151, 368, 144, 152, 367,
	259, 0, 258, 370, 349, 357, 248, 236, 0, 143,
	355, 246, 235, 222, 191, 205, 283, 230, 284, 206,
	254, 253, 255, 232, 237, 0, 744, 0, 330, 363,
	379, 337, 159, 765, 318, 344, 794, 291, 160, 197,
	190, 282, 257, 153, 208, 327, 220, 228, 296, 376,
	270, 303, 163, 362, 326, 187, 763, 764, 761, 0,
	762, 824, 825, 897, 898, 899, 860, 756, 0, 878,
	879, 0, 0, 0, 0, 0, 866, 885, 886, 848,
	909, 799, 170, 745, 748, 749, 750, 758, 815, 816,
	828, 831, 874, 873, 872, 875, 880, 903, 902, 904,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 827, 134, 145, 225, 2209, 293, 195, 364, 740,
	180, 0, 817, 820, 830, 855, 132, 146, 158, 164,
	179, 188, 194, 204, 207, 211, 212, 213, 218, 233,
	238, 239, 240, 241, 260, 261, 264, 265, 268, 269,
	275, 276, 277, 279, 280, 281, 289, 853, 298, 305,
	307, 308, 309, 311, 320, 321, 322, 323, 331, 351,
	352, 371, 372, 882, 0, 796, 136, 876, 906, 839,
	850, 890, 865, 341, 810, 893, 767, 793, 908, 798,
	802, 845, 751, 823, 267, 789, 752, 0, 771, 741,
	781, 742, 768, 184, 766, 867, 826, 892, 223, 840,
	0, 183, 172, 231, 229, 0, 0, 0, 274, 340,
	891, 818, 0, 900, 226, 0, 835, 901, 328, 251,
	0, 0, 814, 877, 821, 863, 809, 847, 760, 834,
	895, 790, 842, 896, 0, 0, 0, 0, 733, 0,
	0, 0, 0, 0, 0, 0, 0, 755, 0, 838,
	889, 784, 841, 812, 844, 911, 739, 837, 0, 746,
	753, 907, 884, 774, 775, 776, 0, 0, 0, 0,
	0, 0, 0, 813, 822, 857, 806, 361, 278, 295,
	316, 800, 286, 787, 0, 0, 0, 0, 0, 0,
	2524, 0, 772, 0, 832, 0, 0, 0, 754, 747,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 811, 0, 0, 0, 759, 738, 773, 859,
	0, 736, 252, 149, 864, 883, 808, 214, 905, 887,
	805, 804, 288, 0, 335, 202, 224, 154, 131, 147,
	165, 201, 263, 856, 310, 786, 737, 868, 769, 782,
	173, 778, 302, 271, 360, 791, 829, 301, 227, 350,
	852, 888, 359, 795, 871, 369, 374, 777, 819, 757,
	325, 186, 181, 185, 0, 138, 788, 285, 178, 219,
	807, 846, 770, 169, 854, 833, 870, 324, 347, 135,
	249, 348, 373, 156, 342, 250, 256, 166, 168, 167,
	148, 319, 346, 161, 171, 329, 306, 336, 177, 0,
	0, 0, 0, 0, 801, 792, 0, 0, 365, 803,
	313, 312, 797, 209, 862, 836, 743, 294, 849, 215,
	137, 338, 377, 155, 221, 343, 735, 196, 262, 175,
	272, 273, 193, 133, 290, 243, 244, 242, 245, 200,
	783, 851, 861, 292, 315, 345, 157, 332, 779, 780,
	785, 858, 304, 869, 881, 894, 234, 189, 192, 203,
	210, 843, 299, 333, 366, 0, 150, 139, 339, 358,
	162, 314, 317, 375, 300, 142, 356, 334, 247, 216,
	217, 140, 0, 141, 297, 182, 199, 176, 266, 0,
	198, 287, 353, 354, 174, 378, 151, 368, 144, 152,
	367, 259, 0, 258, 370, 349, 357, 248, 236, 0,
	143, 355, 246, 235, 222, 191, 205, 283, 230, 284,
	206, 254, 253, 255, 232, 237, 0, 744, 0, 330,
	363, 379, 337, 159, 765, 318, 344, 794, 291, 160,
	197, 190, 282, 257, 153, 208, 327, 220, 228, 296,
	376, 270, 303, 163, 362, 326, 187, 763, 764, 761,
	0, 762, 824, 825, 897, 898, 899, 860, 756, 0,
	878, 879, 0, 0, 0, 0, 0, 866, 885, 886,
	848, 909, 799, 170, 745, 748, 749, 750, 758, 815,
	816, 828, 831, 874, 873, 872, 875, 880, 903, 902,
	904, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 827, 134, 145, 225, 910, 293, 195, 364,
	740, 180, 0, 817, 820, 830, 855, 132, 146, 158,
	164, 179, 188, 194, 204, 207, 211, 212, 213, 218,
	233, 238, 239, 240, 241, 260, 261, 264, 265, 268,
	269, 275, 276, 277, 279, 280, 281, 289, 853, 298,
	305, 307, 308, 309, 311, 320, 321, 322, 323, 331,
	351, 352, 371, 372, 882, 0, 796, 136, 876, 906,
	839, 850, 890, 865, 341, 810, 893, 767, 793, 908,
	798, 802, 845, 751, 823, 267, 789, 752, 0, 771,
	741, 781, 742, 768, 184, 766, 867, 826, 892, 223,
	840, 0, 183, 172, 231, 229, 0, 0, 0, 274,
	340, 891, 818, 0, 900, 226, 0, 835, 901, 328,
	251, 0, 0, 814, 877, 821, 863, 809, 847, 760,
	834, 895, 790, 842, 896, 0, 0, 0, 0, 561,
	0, 0, 0, 0, 0, 0, 0, 0, 755, 0,
	838, 889, 784, 841, 812, 844, 911, 739, 837, 0,
	746, 753, 907, 884, 774, 775, 776, 0, 0, 0,
	0, 0, 0, 0, 813, 822, 857, 806, 361, 278,
	295, 316, 800, 286, 787, 0, 0, 0, 0, 0,
	0, 2144, 0, 772, 0, 832, 0, 0, 0, 754,
	747, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 811, 0, 0, 0, 759, 738, 773,
	859, 0, 736, 252, 149, 864, 883, 808, 214, 905,
	887, 805, 804, 288, 0, 335, 202, 224, 154, 131,
	147, 165, 201, 263, 856, 310, 786, 737, 868, 769,
	782, 173, 778, 302, 271, 360, 791, 829, 301, 227,
	350, 852, 888, 359, 795, 871, 369, 374, 777, 819,
	757, 325, 186, 181, 185, 0, 138, 788, 285, 178,
	219, 807, 846, 770, 169, 854, 833, 870, 324, 347,
	135, 249, 348, 373, 156, 342, 250, 256, 166, 168,
	167, 148, 319, 346, 161, 171, 329, 306, 336, 177,
	0, 0, 0, 0, 0, 801, 792, 0, 0, 365,
	803, 313, 312, 797, 209, 862, 836, 743, 294, 849,
	215, 137, 338, 377, 155, 221, 343, 735, 196, 262,
	175, 272, 273, 193, 133, 290, 243, 244, 242, 245,
	200, 783, 851, 861, 292, 315, 345, 157, 332, 779,
	780, 785, 858, 304, 869, 881, 894, 234, 189, 192,
	203, 210, 843, 299, 333, 366, 0, 150, 139, 339,
	358, 162, 314, 317, 375, 300, 142, 356, 334, 247,
	216, 217, 140, 0, 141, 297, 182, 199, 176, 266,
	0, 198, 287, 353, 354, 174, 378, 151, 368, 144,
	152, 367, 259, 0, 258, 370, 349, 357, 248, 236,
	0, 143, 355, 246, 235, 222, 191, 205, 283, 230,
	284, 206, 254, 253, 255, 232, 237, 0, 744, 0,
	330, 363, 379, 337, 159, 765, 318, 344, 794, 291,
	160, 197, 190, 282, 257, 153, 208, 327, 220, 228,
	296, 376, 270, 303, 163, 362, 326, 187, 763, 764,
	761, 0, 762, 824, 825, 897, 898, 899, 860, 756,
	0, 878, 879, 0, 0, 0, 0, 0, 866, 885,
	886, 848, 909, 799, 170, 745, 748, 749, 750, 758,
	815, 816, 828, 831, 874, 873, 872, 875, 880, 903,
	902, 904, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 827, 134, 145, 225, 910, 293, 195,
	364, 740, 180, 0, 817, 820, 830, 855, 132, 146,
	158, 164, 179, 188, 194, 204, 207, 211, 212, 213,
	218, 233, 238, 239, 240, 241, 260, 261, 264, 265,
	268, 269, 275, 276, 277, 279, 280, 281, 289, 853,
	298, 305, 307, 308, 309, 311, 320, 321, 322, 323,
	331, 351, 352, 371, 372, 882, 0, 796, 136, 876,
	906, 839, 850, 890, 865, 341, 810, 893, 767, 793,
	908, 798, 802, 845, 751, 823, 267, 789, 752, 0,
	771, 741, 781, 742, 768, 184, 766, 867, 826, 892,
	223, 840, 0, 183, 172, 231, 229, 0, 0, 0,
	274, 340, 891, 818, 0, 900, 226, 0, 835, 901,
	328, 251, 0, 0, 814, 877, 821, 863, 809, 847,
	760, 834, 895, 790, 842, 896, 0, 0, 0, 0,
	733, 0, 0, 0, 0, 0, 0, 0, 0, 755,
	0, 838, 889, 784, 841, 812, 844, 911, 739, 837,
	0, 746, 753, 907, 884, 774, 775, 776, 0, 0,
	0, 0, 0, 0, 0, 813, 822, 857, 806, 361,
	278, 295, 316, 800, 286, 787, 0, 0, 0, 0,
	0, 0, 2134, 0, 772, 0, 832, 0, 0, 0,
	754, 747, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 811, 0, 0, 0, 759, 738,
	773, 859, 0, 736, 252, 149, 864, 883, 808, 214,
	905, 887, 805, 804, 288, 0, 335, 202, 224, 154,
	131, 147, 165, 201, 263, 856, 310, 786, 737, 868,
	769, 782, 173, 778, 302, 271, 360, 791, 829, 301,
	227, 350, 852, 888, 359, 795, 871, 369, 374, 777,
	819, 757, 325, 186, 181, 185, 0, 138, 788, 285,
	178, 219, 807, 846, 770, 169, 854, 833, 870, 324,
	347, 135, 249, 348, 373, 156, 342, 250, 256, 166,
	168, 167, 148, 319, 346, 161, 171, 329, 306, 336,
	177, 0, 0, 0, 0, 0, 801, 792, 0, 0,
	365, 803, 313, 312, 797, 209, 862, 836, 743, 294,
	849, 215, 137, 338, 377, 155, 221, 343, 735, 196,
	262, 175, 272, 273, 193, 133, 290, 243, 244, 242,
	245, 200, 783, 851, 861, 292, 315, 345, 157, 332,
	779, 780, 785, 858, 304, 869, 881, 894, 234, 189,
	192, 203, 210, 843, 299, 333, 366, 0, 150, 139,
	339, 358, 162, 314, 317, 375, 300, 142, 356, 334,
	247, 216, 217, 140, 0, 141, 297, 182, 199, 176,
	266, 0, 198, 287, 353, 354, 174, 378, 151, 368,
	144, 152, 367, 259, 0, 258, 370, 349, 357, 248,
	236, 0, 143, 355, 246, 235, 222, 191, 205, 283,
	230, 284, 206, 254, 253, 255, 232, 237, 0, 744,
	0, 330, 363, 379, 337, 159, 765, 318, 344, 794,
	291, 160, 197, 190, 282, 257, 153, 208, 327, 220,
	228, 296, 376, 270, 303, 163, 362, 326, 187, 763,
	764, 761, 0, 762, 824, 825, 897, 898, 899, 860,
	756, 0, 878, 879, 0, 0, 0, 0, 0, 866,
	885, 886, 848, 909, 799, 170, 745, 748, 749, 750,
	758, 815, 816, 828, 831, 874, 873, 872, 875, 880,
	903, 902, 904, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 827, 134, 145, 225, 910, 293,
	195, 364, 740, 180, 0, 817, 820, 830, 855, 132,
	146, 158, 164, 179, 188, 194, 204, 207, 211, 212,
	213, 218, 233, 238, 239, 240, 241, 260, 261, 264,
	265, 268, 269, 275, 276, 277, 279, 280, 281, 289,
	853, 298, 305, 307, 308, 309, 311, 320, 321, 322,
	323, 331, 351, 352, 371, 372, 882, 0, 796, 136,
	876, 906, 839, 850, 890, 865, 341, 810, 893, 767,
	793, 908, 798, 802, 845, 751, 823, 267, 789, 752,
	0, 771, 741, 781, 742, 768, 184, 766, 867, 826,
	892, 223, 840, 0, 183, 172, 231, 229, 0, 0,
	0, 274, 340, 891, 818, 0, 900, 226, 0, 835,
	901, 328, 251, 0, 0, 814, 877, 821, 863, 809,
	847, 760, 834, 895, 790, 842, 896, 0, 0, 0,
	0, 129, 0, 0, 0, 0, 0, 0, 0, 0,
	755, 0, 838, 889, 784, 841, 812, 844, 911, 739,
	837, 0, 746, 753, 907, 884, 774, 775, 776, 0,
	0, 0, 0, 0, 0, 0, 813, 822, 857, 806,
	361, 278, 295, 316, 800, 286, 787, 0, 0, 0,
	0, 0, 0, 1646, 0, 772, 0, 832, 0, 0,
	0, 754, 747, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 811, 0, 0, 0, 759,
	738, 773, 859, 0, 736, 252, 149, 864, 883, 808,
	214, 905, 887, 805, 804, 288, 0, 335, 202, 224,
	154, 131, 147, 165, 201, 263, 856, 310, 786, 737,
	868, 769, 782, 173, 778, 302, 271, 360, 791, 829,
	301, 227, 350, 852, 888, 359, 795, 871, 369, 374,
	777, 819, 757, 325, 186, 181, 185, 0, 138, 788,
	285, 178, 219, 807, 846, 770, 169, 854, 833, 870,
	324, 347, 135, 249, 348, 373, 156, 342, 250, 256,
	166, 168, 167, 148, 319, 346, 161, 171, 329, 306,
	336, 177, 0, 0, 0, 0, 0, 801, 792, 0,
	0, 365, 803, 313, 312, 797, 209, 862, 836, 743,
	294, 849, 215, 137, 338, 377, 155, 221, 343, 735,
	196, 262, 175, 272, 273, 193, 133, 290, 243, 244,
	242, 245, 200, 783, 851, 861, 292, 315, 345, 157,
	332, 779, 780, 785, 858, 304, 869, 881, 894, 234,
	189, 192, 203, 210, 843, 299, 333, 366, 0, 150,
	139, 339, 358, 162, 314, 317, 375, 300, 142, 356,
	334, 247, 216, 217, 140, 0, 141, 297, 182, 199,
	176, 266, 0, 198, 287, 353, 354, 174, 378, 151,
	368, 144, 152, 367, 259, 0, 258, 370, 349, 357,
	248, 236, 0, 143, 355, 246, 235, 222, 191, 205,
	283, 230, 284, 206, 254, 253, 255, 232, 237, 0,
	744, 0, 330, 363, 379, 337, 159, 765, 318, 344,
	794, 291, 160, 197, 190, 282, 257, 153, 208, 327,
	220, 228, 296, 376, 270, 303, 163, 362, 326, 187,
	763, 764, 761, 0, 762, 824, 825, 897, 898, 899,
	860, 756, 0, 878, 879, 0, 0, 0, 0, 0,
	866, 885, 886, 848, 909, 799, 170, 745, 748, 749,
	750, 758, 815, 816, 828, 831, 874, 873, 872, 875,
	880, 903, 902, 904, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 827, 134, 145, 225, 910,
	293, 195, 364, 740, 180, 0, 817, 820, 830, 855,
	132, 146, 158, 164, 179, 188, 194, 204, 207, 211,
	212, 213, 218, 233, 238, 239, 240, 241, 260, 261,
	264, 265, 268, 269, 275, 276, 277, 279, 280, 281,
	289, 853, 298, 305, 307, 308, 309, 311, 320, 321,
	322, 323, 331, 351, 352, 371, 372, 882, 0, 796,
	136, 876, 906, 839, 850, 890, 865, 341, 810, 893,
	767, 793, 908, 798, 802, 845, 751, 823, 267, 789,
	752, 0, 771, 741, 781, 742, 768, 184, 766, 867,
	826, 892, 223, 840, 0, 183, 172, 231, 229, 0,
	0, 0, 274, 340, 891, 818, 0, 900, 226, 0,
	835, 901, 328, 251, 0, 0, 814, 877, 821, 863,
	809, 847, 760, 834, 895, 790, 842, 896, 0, 0,
	0, 0, 561, 0, 0, 0, 0, 0, 0, 0,
	0, 755, 0, 838, 889, 784, 841, 812, 844, 911,
	739, 837, 0, 746, 753, 907, 884, 774, 775, 776,
	0, 0, 0, 0, 0, 0, 0, 813, 822, 857,
	806, 361, 278, 295, 316, 800, 286, 787, 0, 0,
	0, 0, 0, 0, 1505, 0, 772, 0, 832, 0,
	0, 0, 754, 747, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 811, 0, 0, 0,
	759, 738, 773, 859, 0, 736, 252, 149, 864, 883,
	808, 214, 905, 887, 805, 804, 288, 0, 335, 202,
	224, 154, 131, 147, 165, 201, 263, 856, 310, 786,
	737, 868, 769, 782, 173, 778, 302, 271, 360, 791,
	829, 301, 227, 350, 852, 888, 359, 795, 871, 369,
	374, 777, 819, 757, 325, 186, 181, 185, 0, 138,
	788, 285, 178, 219, 807, 846, 770, 169, 854, 833,
	870, 324, 347, 135, 249, 348, 373, 156, 342, 250,
	256, 166, 168, 167, 148, 319, 346, 161, 171, 329,
	306, 336, 177, 0, 0, 0, 0, 0, 801, 792,
	0, 0, 365, 803, 313, 312, 797, 209, 862, 836,
	743, 294, 849, 215, 137, 338, 377, 155, 221, 343,
	735, 196, 262, 175, 272, 273, 193, 133, 290, 243,
	244, 242, 245, 200, 783, 851, 861, 292, 315, 345,
	157, 332, 779, 780, 785, 858, 304, 869, 881, 894,
	234, 189, 192, 203, 210, 843, 299, 333, 366, 0,
	150, 139, 339, 358, 162, 314, 317, 375, 300, 142,
	356, 334, 247, 216, 217, 140, 0, 141, 297, 182,
	199, 176, 266, 0, 198, 287, 353, 354, 174, 378,
	151, 368, 144, 152, 367, 259, 0, 258, 370, 349,
	357, 248, 236, 0, 143, 355, 246, 235, 222, 191,
	205, 283, 230, 284, 206, 254, 253, 255, 232, 237,
	0, 744, 0, 330, 363, 379, 337, 159, 765, 318,
	344, 794, 291, 160, 197, 190, 282, 257, 153, 208,
	327, 220, 228, 296, 376, 270, 303, 163, 362, 326,
	187, 763, 764, 761, 0, 762, 824, 825, 897, 898,
	899, 860, 756, 0, 878, 879, 0, 0, 0, 0,
	0, 866, 885, 886, 848, 909, 799, 170, 745, 748,
	749, 750, 758, 815, 816, 828, 831, 874, 873, 872,
	875, 880, 903, 902, 904, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 827, 134, 145, 225,
	910, 293, 195, 364, 740, 180, 0, 817, 820, 830,
	855, 132, 146, 158, 164, 179, 188, 194, 204, 207,
	211, 212, 213, 218, 233, 238, 239, 240, 241, 260,
	261, 264, 265, 268, 269, 275, 276, 277, 279, 280,
	281, 289, 853, 298, 305, 307, 308, 309, 311, 320,
	321, 322, 323, 331, 351, 352, 371, 372, 882, 0,
	796, 136, 876, 906, 839, 850, 890, 865, 341, 810,
	893, 767, 793, 908, 798, 802, 845, 751, 823, 267,
	789, 752, 0, 771, 741, 781, 742, 768, 184, 766,
	867, 826, 892, 223, 840, 0, 183, 172, 231, 229,
	0, 0, 0, 274, 340, 891, 818, 0, 900, 226,
	0, 835, 901, 328, 251, 0, 0, 814, 877, 821,
	863, 809, 847, 760, 834, 895, 790, 842, 896, 0,
	0, 0, 0, 733, 0, 0, 0, 0, 0, 0,
	0, 0, 755, 0, 838, 889, 784, 841, 812, 844,
	911, 739, 837, 0, 746, 753, 907, 884, 774, 775,
	776, 0, 0, 0, 0, 0, 0, 0, 813, 822,
	857, 806, 361, 278, 295, 316, 800, 286, 787, 0,
	0, 0, 0, 0, 0, 0, 0, 772, 0, 832,
	0, 0, 0, 754, 747, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 811, 0, 0,
	0, 759, 738, 773, 859, 0, 736, 252, 149, 864,
	883, 808, 214, 905, 887, 805, 804, 288, 0, 335,
	202, 224, 154, 131, 147, 165, 201, 263, 856, 310,
	786, 737, 868, 769, 782, 173, 778, 302, 271, 360,
	791, 829, 301, 227, 350, 852, 888, 359, 795, 871,
	369, 374, 777, 819, 757, 325, 186, 181, 185, 0,
	138, 788, 285, 178, 219, 807, 846, 770, 169, 854,
	833, 870, 324, 347, 135, 249, 348, 373, 156, 342,
	250, 256, 166, 168, 167, 148, 319, 346, 161, 171,
	329, 306, 336, 177, 0, 0, 0, 0, 0, 801,
	792, 0, 0, 365, 803, 313, 312, 797, 209, 862,
	836, 743, 294, 849, 215, 137, 338, 377, 155, 221,
	343, 735, 196, 262, 175, 272, 273, 193, 133, 290,
	243, 244, 242, 245, 200, 783, 851, 861, 292, 315,
	345, 157, 332, 779, 780, 785, 858, 304, 869, 881,
	894, 234, 189, 192, 203, 210, 843, 299, 333, 366,
	0, 150, 139, 339, 358, 162, 314, 317, 375, 300,
	142, 356, 334, 247, 216, 217, 140, 0, 141, 297,
	182, 199, 176, 266, 0, 198, 287, 353, 354, 174,
	378, 151, 368, 144, 152, 367, 259, 0, 258, 370,
	349, 357, 248, 236, 0, 143, 355, 246, 235, 222,
	191, 205, 283, 230, 284, 206, 254, 253, 255, 232,
	237, 0, 744, 0, 330, 363, 379, 337, 159, 765,
	318, 344, 794, 291, 160, 197, 190, 282, 257, 153,
	208, 327, 220, 228, 296, 376, 270, 303, 163, 362,
	326, 187, 763, 764, 761, 0, 762, 824, 825, 897,
	898, 899, 860, 756, 0, 878, 879, 0, 0, 0,
	0, 0, 866, 885, 886, 848, 909, 799, 170, 745,
	748, 749, 750, 758, 815, 816, 828, 831, 874, 873,
	872, 875, 880, 903, 902, 904, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 827, 134, 145,
	225, 910, 293, 195, 364, 740, 180, 0, 817, 820,
	830, 855, 132, 146, 158, 164, 179, 188, 194, 204,
	207, 211, 212, 213, 218, 233, 238, 239, 240, 241,
	260, 261, 264, 265, 268, 269, 275, 276, 277, 279,
	280, 281, 289, 853, 298, 305, 307, 308, 309, 311,
	320, 321, 322, 323, 331, 351, 352, 371, 372, 882,
	0, 796, 136, 876, 906, 839, 850, 890, 865, 341,
	810, 893, 767, 793, 908, 798, 802, 845, 751, 823,
	267, 789, 752, 0, 771, 741, 781, 742, 768, 184,
	766, 867, 826, 892, 223, 840, 0, 183, 172, 231,
	229, 0, 0, 0, 274, 340, 891, 818, 0, 900,
	226, 0, 835, 901, 328, 251, 0, 0, 814, 877,
	821, 863, 809, 847, 760, 834, 895, 790, 842, 896,
	0, 0, 0, 0, 561, 0, 0, 0, 0, 0,
	0, 0, 0, 755, 0, 838, 889, 784, 841, 812,
	844, 911, 739, 837, 0, 746, 753, 907, 884, 774,
	775, 776, 0, 0, 0, 0, 0, 0, 0, 813,
	822, 857, 806, 361, 278, 295, 316, 800, 286, 787,
	0, 0, 0, 0, 0, 0, 0, 0, 772, 0,
	832, 0, 0, 0, 754, 747, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 811, 0,
	0, 0, 759, 738, 773, 859, 0, 736, 252, 149,
	864, 883, 808, 214, 905, 887, 805, 804, 288, 0,
	335, 202, 224, 154, 131, 147, 165, 201, 263, 856,
	310, 786, 737, 868, 769, 782, 173, 778, 302, 271,
	360, 791, 829, 301, 227, 350, 852, 888, 359, 795,
	871, 369, 374, 777, 819, 757, 325, 186, 181, 185,
	0, 138, 788, 285, 178, 219, 807, 846, 770, 169,
	854, 833, 870, 324, 347, 135, 249, 348, 373, 156,
	342, 250, 256, 166, 168, 167, 148, 319, 346, 161,
	171, 329, 306, 336, 177, 0, 0, 0, 0, 0,
	801, 792, 0, 0, 365, 803, 313, 312, 797, 209,
	862, 836, 743, 294, 849, 215, 137, 338, 377, 155,
	221, 343, 735, 196, 262, 175, 272, 273, 193, 133,
	290, 243, 244, 242, 245, 200, 783, 851, 861, 292,
	315, 345, 157, 332, 779, 780, 785, 858, 304, 869,
	881, 894, 234, 189, 192, 203, 210, 843, 299, 333,
	366, 0, 150, 139, 339, 358, 162, 314, 317, 375,
	300, 142, 356, 334, 247, 216, 217, 140, 0, 141,
	297, 182, 199, 176, 266, 0, 198, 287, 353, 354,
	174, 378, 151, 368, 144, 152, 367, 259, 0, 258,
	370, 349, 357, 248, 236, 0, 143, 355, 246, 235,
	222, 191, 205, 283, 230, 284, 206, 254, 253, 255,
	232, 237, 0, 744, 0, 330, 363, 379, 337, 159,
	765, 318, 344, 794, 291, 160, 197, 190, 282, 257,
	153, 208, 327, 220, 228, 296, 376, 270, 303, 163,
	362, 326, 187, 763, 764, 761, 0, 762, 824, 825,
	897, 898, 899, 860, 756, 0, 878, 879, 0, 0,
	0, 0, 0, 866, 885, 886, 848, 909, 799, 170,
	745, 748, 749, 750, 758, 815, 816, 828, 831, 874,
	873, 872, 875, 880, 903, 902, 904, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 827, 134,
	145, 225, 910, 293, 195, 364, 740, 180, 0, 817,
	820, 830, 855, 132, 146, 158, 164, 179, 188, 194,
	204, 207, 211, 212, 213, 218, 233, 238, 239, 240,
	241, 260, 261, 264, 265, 268, 269, 275, 276, 277,
	279, 280, 281, 289, 853, 298, 305, 307, 308, 309,
	311, 320, 321, 322, 323, 331, 351, 352, 371, 372,
	882, 0, 796, 136, 876, 906, 839, 850, 890, 865,
	341, 810, 893, 767, 793, 908, 798, 802, 845, 751,
	823, 267, 789, 752, 0, 771, 741, 781, 742, 768,
	184, 766, 867, 826, 892, 223, 840, 0, 183, 172,
	231, 229, 0, 0, 0, 274, 340, 1678, 1682, 0,
	900, 226, 0, 835, 901, 328, 251, 0, 0, 814,
	877, 821, 863, 809, 847, 760, 834, 895, 790, 842,
	896, 0, 0, 0, 0, 733, 0, 0, 0, 0,
	0, 0, 0, 0, 755, 0, 838, 889, 784, 841,
	812, 844, 911, 739, 837, 0, 746, 753, 907, 884,
	774, 775, 776, 0, 0, 0, 0, 0, 0, 0,
	813, 822, 857, 806, 361, 278, 295, 316, 800, 286,
	787, 0, 0, 0, 0, 0, 0, 0, 0, 772,
	0, 832, 0, 0, 0, 754, 747, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 811,
	0, 0, 0, 759, 738, 773, 859, 0, 736, 252,
	149, 864, 883, 1681, 214, 905, 887, 805, 804, 1675,
	0, 1676, 1677, 224, 732, 131, 147, 1673, 1680, 263,
	856, 310, 786, 737, 868, 769, 782, 173, 778, 302,
	271, 360, 791, 829, 301, 227, 350, 852, 888, 359,
	795, 871, 369, 374, 777, 819, 757, 325, 186, 181,
	185, 0, 138, 788, 285, 178, 219, 807, 846, 770,
	169, 854, 833, 870, 324, 347, 135, 249, 348, 373,
	156, 342, 250, 256, 166, 168, 167, 148, 319, 346,
	161, 171, 329, 306, 336, 177, 0, 0, 0, 0,
	0, 801, 792, 0, 0, 365, 803, 313, 312, 797,
	209, 862, 836, 743, 294, 849, 215, 137, 338, 377,
	155, 221, 343, 735, 196, 262, 175, 272, 273, 193,
	133, 290, 243, 244, 242, 245, 200, 783, 851, 861,
	292, 315, 345, 157, 332, 779, 780, 785, 858, 304,
	869, 881, 894, 234, 189, 192, 203, 210, 843, 299,
	333, 366, 0, 150, 139, 339, 358, 162, 314, 317,
	375, 300, 142, 356, 334, 247, 216, 217, 140, 0,
	141, 297, 182, 199, 176, 266, 0, 198, 287, 353,
	354, 174, 378, 151, 368, 144, 152, 367, 259, 0,
	258, 370, 349, 357, 248, 236, 0, 143, 355, 246,
	235, 222, 191, 205, 283, 230, 284, 206, 254, 253,
	255, 232, 237, 0, 744, 0, 330, 363, 379, 337,
	159, 765, 318, 344, 794, 291, 160, 197, 190, 282,
	257, 153, 208, 327, 220, 228, 296, 376, 270, 303,
	163, 362, 326, 187, 763, 764, 761, 0, 762, 824,
	825, 897, 898, 899, 860, 756, 0, 878, 879, 0,
	0, 0, 0, 0, 866, 885, 886, 848, 909, 799,
	170, 745, 748, 749, 750, 758, 815, 816, 828, 831,
	874, 873, 872, 875, 880, 903, 902, 904, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 827,
	134, 145, 225, 910, 293, 195, 364, 740, 180, 0,
	817, 820, 830, 855, 132, 146, 158, 164, 179, 188,
	194, 204, 207, 211, 212, 213, 218, 233, 238, 239,
	240, 241, 260, 261, 264, 265, 268, 269, 275, 276,
	277, 279, 280, 281, 289, 853, 298, 305, 307, 308,
	309, 311, 320, 321, 322, 323, 331, 351, 352, 371,
	372, 882, 0, 796, 136, 876, 906, 839, 850, 890,
	865, 341, 810, 893, 767, 793, 908, 798, 802, 845,
	751, 823, 267, 789, 752, 0, 771, 741, 781, 742,
	768, 184, 766, 867, 826, 892, 223, 840, 0, 183,
	172, 231, 229, 0, 0, 0, 274, 340, 891, 818,
	0, 900, 226, 0, 835, 901, 328, 251, 0, 0,
	814, 877, 821, 863, 809, 847, 760, 834, 895, 790,
	842, 896, 0, 0, 0, 0, 129, 0, 0, 0,
	0, 0, 0, 0, 0, 755, 0, 838, 889, 784,
	841, 812, 844, 911, 739, 837, 0, 746, 753, 907,
	884, 774, 775, 776, 0, 0, 0, 0, 0, 0,
	0, 813, 822, 857, 806, 361, 278, 295, 316, 800,
	286, 787, 0, 0, 0, 0, 0, 0, 0, 0,
	772, 0, 832, 0, 0, 0, 754, 747, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	811, 0, 0, 0, 759, 738, 773, 859, 0, 736,
	252, 149, 864, 883, 808, 214, 905, 887, 805, 804,
	288, 0, 335, 202, 224, 154, 131, 147, 165, 201,
	263, 856, 310, 786, 737, 868, 769, 782, 173, 778,
	302, 271, 360, 791, 829, 301, 227, 350, 852, 888,
	359, 795, 871, 369, 374, 777, 819, 757, 325, 186,
	181, 185, 0, 138, 788, 285, 178, 219, 807, 846,
	770, 169, 854, 833, 870, 324, 347, 135, 249, 348,
	373, 156, 342, 250, 256, 166, 168, 167, 148, 319,
	346, 161, 171, 329, 306, 336, 177, 0, 0, 0,
	0, 0, 801, 792, 0, 0, 365, 803, 313, 312,
	797, 209, 862, 836, 743, 294, 849, 215, 137, 338,
	377, 155, 221, 343, 735, 196, 262, 175, 272, 273,
	193, 133, 290, 243, 244, 242, 245, 200, 783, 851,
	861, 292, 315, 345, 157, 332, 779, 780, 785, 858,
	304, 869, 881, 894, 234, 189, 192, 203, 210, 843,
	299, 333, 366, 0, 150, 139, 339, 358, 162, 314,
	317, 375, 300, 142, 356, 334, 247, 216, 217, 140,
	0, 141, 297, 182, 199, 176, 266, 0, 198, 287,
	353, 354, 174, 378, 151, 368, 144, 152, 367, 259,
	0, 258, 370, 349, 357, 248, 236, 0, 143, 355,
	246, 235, 222, 191, 205, 283, 230, 284, 206, 254,
	253, 255, 232, 237, 0, 744, 0, 330, 363, 379,
	337, 159, 765, 318, 344, 794, 291, 160, 197, 190,
	282, 257, 153, 208, 327, 220, 228, 296, 376, 270,
	303, 163, 362, 326, 187, 763, 764, 761, 0, 762,
	824, 825, 897, 898, 899, 860, 756, 0, 878, 879,
	0, 0, 0, 0, 0, 866, 885, 886, 848, 909,
	799, 170, 745, 748, 749, 750, 758, 815, 816, 828,
	831, 874, 873, 872, 875, 880, 903, 902, 904, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	827, 134, 145, 225, 910, 293, 195, 364, 740, 180,
	0, 817, 820, 830, 855, 132, 146, 158, 164, 179,
	188, 194, 204, 207, 211, 212, 213, 218, 233, 238,
	239, 240, 241, 260, 261, 264, 265, 268, 269, 275,
	276, 277, 279, 280, 281, 289, 853, 298, 305, 307,
	308, 309, 311, 320, 321, 322, 323, 331, 351, 352,
	371, 372, 882, 0, 796, 136, 876, 906, 839, 850,
	890, 865, 341, 810, 893, 767, 793, 908, 798, 802,
	845, 751, 823, 267, 789, 752, 0, 771, 741, 781,
	742, 768, 184, 766, 867, 826, 892, 223, 840, 0,
	183, 172, 231, 229, 0, 0, 0, 274, 340, 891,
	818, 0, 900, 226, 0, 835, 901, 328, 251, 0,
	0, 814, 877, 821, 863, 809, 847, 760, 834, 895,
	790, 842, 896, 0, 0, 0, 0, 733, 0, 0,
	0, 0, 0, 0, 0, 0, 755, 0, 838, 889,
	784, 841, 812, 844, 911, 739, 837, 0, 746, 753,
	907, 884, 774, 775, 776, 0, 0, 0, 0, 0,
	0, 0, 813, 822, 857, 806, 361, 278, 295, 316,
	800, 286, 787, 0, 0, 0, 0, 0, 0, 0,
	0, 772, 0, 832, 0, 0, 0, 754, 747, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 811, 0, 0, 0, 759, 738, 773, 859, 0,
	736, 252, 149, 864, 883, 808, 214, 905, 887, 805,
	804, 288, 0, 335, 202, 224, 732, 131, 147, 728,
	201, 263, 856, 310, 786, 737, 868, 769, 782, 173,
	778, 302, 271, 360, 791, 829, 301, 227, 350, 852,
	888, 359, 795, 871, 369, 374, 777, 819, 757, 325,
	186, 181, 185, 0, 138, 788, 285, 178, 219, 807,
	846, 770, 169, 854, 833, 870, 324, 347, 135, 249,
	348, 373, 156, 342, 250, 256, 166, 168, 167, 148,
	319, 346, 161, 171, 329, 306, 336, 177, 0, 0,
	0, 0, 0, 801, 792, 0, 0, 365, 803, 313,
	312, 797, 209, 862, 836, 743, 294, 849, 215, 137,
	338, 377, 155, 221, 343, 735, 196, 262, 175, 272,
	273, 193, 133, 290, 243, 244, 242, 245, 200, 783,
	851, 861, 292, 315, 345, 157, 332, 779, 780, 785,
	858, 304, 869, 881, 894, 234, 189, 192, 203, 210,
	843, 299, 333, 366, 0, 150, 139, 339, 358, 162,
	314, 317, 375, 300, 142, 356, 334, 247, 216, 217,
	140, 0, 141, 297, 182, 199, 176, 266, 0, 198,
	287, 353, 354, 174, 378, 151, 368, 144, 152, 367,
	259, 0, 258, 370, 349, 357, 248, 236, 0, 143,
	355, 246, 235, 222, 191, 205, 283, 230, 284, 206,
	254, 253, 255, 232, 237, 0, 744, 0, 330, 363,
	379, 337, 159, 765, 318, 344, 794, 291, 160, 197,
	190, 282, 257, 153, 208, 327, 220, 228, 296, 376,
	270, 303, 163, 362, 326, 187, 763, 764, 761, 0,
	762, 824, 825, 897, 898, 899, 860, 756, 0, 878,
	879, 0, 0, 0, 0, 0, 866, 885, 886, 848,
	909, 799, 170, 745, 748, 749, 750, 758, 815, 816,
	828, 831, 874, 873, 872, 875, 880, 903, 902, 904,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 827, 134, 145, 225, 910, 293, 195, 364, 740,
	180, 0, 817, 820, 830, 855, 132, 146, 158, 164,
	179, 188, 194, 204, 207, 211, 212, 213, 218, 233,
	238, 239, 240, 241, 260, 261, 264, 265, 268, 269,
	275, 276, 277, 279, 280, 281, 289, 853, 298, 305,
	307, 308, 309, 311, 320, 321, 322, 323, 331, 351,
	352, 371, 372, 882, 341, 796, 136, 876, 906, 839,
	850, 0, 0, 0, 0, 267, 0, 0, 0, 0,
	0, 563, 0, 0, 184, 560, 0, 0, 0, 223,
	0, 0, 183, 172, 231, 229, 0, 0, 0, 274,
	340, 0, 0, 0, 681, 226, 0, 0, 536, 328,
	251, 0, 0, 0, 0, 670, 671, 0, 0, 0,
	0, 0, 0, 1656, 0, 82, 0, 0, 0, 561,
	584, 583, 586, 587, 588, 589, 0, 0, 541, 585,
	590, 623, 624, 1657, 0, 0, 0, 0, 558, 575,
	0, 680, 0, 0, 0, 0, 492, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 361, 278,
	295, 316, 0, 286, 500, 0, 0, 0, 0, 572,
	573, 0, 0, 0, 0, 693, 0, 574, 0, 0,
	570, 628, 629, 630, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 576, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 149, 672, 0, 0, 214, 540,
	0, 0, 691, 288, 0, 335, 202, 224, 154, 131,
	147, 165, 201, 263, 0, 310, 598, 481, 0, 0,
	0, 173, 0, 302, 271, 360, 600, 0, 301, 227,
	350, 0, 0, 359, 0, 527, 369, 374, 493, 0,
	488, 325, 186, 181, 185, 0, 138, 501, 285, 178,
	219, 0, 0, 0, 169, 0, 0, 0, 324, 347,
	135, 249, 348, 373, 156, 342, 250, 256, 166, 168,
	167, 148, 319, 346, 161, 171, 329, 306, 336, 177,
	0, 0, 0, 0, 0, 505, 503, 0, 0, 365,
	506, 313, 312, 0, 209, 0, 514, 482, 294, 518,
	215, 137, 338, 377, 155, 221, 343, 480, 196, 262,
	175, 272, 273, 193, 133, 290, 243, 244, 242, 245,
	200, 496, 520, 0, 292, 315, 345, 157, 332, 494,
	495, 497, 524, 304, 526, 532, 0, 234, 189, 192,
	203, 210, 0, 299, 333, 366, 0, 150, 139, 339,
	358, 162, 314, 317, 375, 300, 142, 356, 334, 247,
	216, 217, 140, 0, 141, 297, 182, 199, 176, 266,
	0, 198, 287, 353, 354, 174, 378, 151, 368, 144,
	152, 367, 259, 0, 258, 370, 349, 357, 248, 236,
	0, 143, 355, 246, 235, 222, 191, 205, 283, 230,
	284, 206, 254, 253, 255, 232, 237, 0, 483, 0,
	330, 363, 379, 337, 159, 0, 318, 344, 504, 291,
	160, 197, 190, 282, 257, 153, 208, 327, 220, 228,
	296, 376, 270, 303, 163, 362, 326, 187, 682, 692,
	688, 690, 689, 686, 687, 685, 684, 683, 694, 673,
	674, 675, 676, 677, 0, 0, 0, 679, 0, 617,
	618, 0, 0, 0, 170, 591, 592, 593, 594, 595,
	601, 602, 606, 607, 615, 614, 613, 616, 619, 621,
	620, 622, 596, 597, 599, 603, 604, 605, 608, 609,
	612, 610, 611, 678, 134, 145, 225, 0, 293, 195,
	364, 0, 180, 0, 0, 0, 0, 0, 132, 146,
	158, 164, 179, 188, 194, 204, 207, 211, 212, 213,
	218, 233, 238, 239, 240, 241, 260, 261, 264, 265,
	268, 269, 275, 276, 277, 279, 280, 281, 289, 522,
	298, 305, 307, 308, 309, 311, 320, 321, 322, 323,
	331, 351, 352, 371, 372, 36, 341, 0, 136, 0,
	0, 517, 519, 0, 0, 0, 0, 267, 0, 0,
	0, 0, 0, 563, 0, 0, 184, 560, 0, 0,
	0, 223, 0, 0, 183, 172, 231, 229, 0, 0,
	0, 274, 340, 0, 0, 0, 681, 226, 0, 0,
	536, 328, 251, 0, 0, 0, 0, 670, 671, 0,
	0, 0, 0, 0, 0, 0, 0, 82, 0, 0,
	0, 561, 584, 583, 586, 587, 588, 589, 0, 0,
	541, 585, 590, 623, 624, 0, 0, 0, 0, 0,
	558, 575, 0, 680, 0, 0, 0, 0, 492, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	361, 278, 295, 316, 0, 286, 500, 0, 0, 0,
	0, 572, 573, 0, 0, 0, 0, 693, 0, 574,
	0, 0, 570, 628, 629, 630, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 668, 669, 576, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 252, 149, 672, 0, 0,
	214, 540, 0, 0, 691, 288, 0, 335, 202, 224,
	154, 131, 147, 165, 201, 263, 0, 310, 598, 481,
	0, 0, 0, 173, 0, 302, 271, 360, 600, 0,
	301, 227, 350, 0, 0, 359, 0, 527, 369, 374,
	493, 0, 488, 325, 186, 181, 185, 0, 138, 501,
	285, 178, 219, 0, 0, 0, 169, 0, 0, 0,
	324, 347, 135, 249, 348, 373, 156, 342, 250, 256,
	166, 168, 167, 148, 319, 346, 161, 171, 329, 306,
	336, 177, 0, 0, 0, 0, 0, 505, 503, 0,
	0, 365, 506, 313, 312, 0, 209, 0, 514, 482,
	294, 518, 215, 137, 338, 377, 155, 221, 343, 480,
	196, 262, 175, 272, 273, 193, 133, 290, 243, 244,
	242, 245, 200, 496, 520, 0, 292, 315, 345, 157,
	332, 494, 495, 497, 524, 304, 526, 532, 0, 234,
	189, 192, 203, 210, 0, 299, 333, 366, 0, 150,
	139, 339, 358, 162, 314, 317, 375, 300, 142, 356,
	334, 247, 216, 217, 140, 0, 141, 297, 182, 199,
	176, 266, 0, 198, 287, 353, 354, 174, 378, 151,
	368, 144, 152, 367, 259, 0, 258, 370, 349, 357,
	248, 236, 0, 143, 355, 246, 235, 222, 191, 205,
	283, 230, 284, 206, 254, 253, 255, 232, 237, 0,
	483, 0, 330, 363, 379, 337, 159, 0, 318, 344,
	504, 291, 160, 197, 190, 282, 257, 153, 208, 327,
	220, 228, 296, 376, 270, 303, 163, 362, 326, 187,
	682, 692, 688, 690, 689, 686, 687, 685, 684, 683,
	694, 673, 674, 675, 676, 677, 0, 0, 0, 679,
	0, 617, 618, 0, 0, 0, 170, 591, 592, 593,
	594, 595, 601, 602, 606, 607, 615, 614, 613, 616,
	619, 621, 620, 622, 596, 597, 599, 603, 604, 605,
	608, 609, 612, 610, 611, 678, 134, 145, 225, 78,
	293, 195, 364, 0, 180, 0, 0, 0, 0, 0,
	132, 146, 158, 164, 179, 188, 194, 204, 207, 211,
	212, 213, 218, 233, 238, 239, 240, 241, 260, 261,
	264, 265, 268, 269, 275, 276, 277, 279, 280, 281,
	289, 522, 298, 305, 307, 308, 309, 311, 320, 321,
	322, 323, 331, 351, 352, 371, 372, 341, 0, 0,
	136, 0, 0, 517, 519, 0, 0, 0, 267, 0,
	0, 0, 0, 0, 563, 0, 0, 184, 560, 0,
	0, 0, 223, 0, 0, 183, 172, 231, 229, 0,
	0, 0, 274, 340, 0, 0, 0, 681, 226, 0,
	0, 536, 328, 251, 0, 0, 0, 0, 670, 671,
	0, 0, 0, 0, 0, 0, 0, 0, 82, 0,
	0, 0, 561, 584, 583, 586, 587, 588, 589, 0,
	0, 541, 585, 590, 623, 624, 0, 0, 0, 0,
	0, 558, 575, 0, 680, 0, 0, 0, 0, 492,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 361, 278, 295, 316, 0, 286, 500, 0, 0,
	0, 0, 572, 573, 554, 0, 0, 0, 693, 0,
	574, 0, 0, 570, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 668, 669, 576, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 252, 149, 672, 0,
	0, 214, 540, 0, 0, 691, 288, 0, 335, 202,
	224, 154, 131, 147, 165, 201, 263, 0, 310, 598,
	481, 0, 0, 0, 173, 0, 302, 271, 360, 600,
	0, 301, 227, 350, 0, 0, 359, 0, 527, 369,
	374, 493, 0, 488, 325, 186, 181, 185, 0, 138,
	501, 285, 178, 219, 0, 0, 0, 169, 0, 0,
	0, 324, 347, 135, 249, 348, 373, 156, 342, 250,
	256, 166, 168, 167, 148, 319, 346, 161, 171, 329,
	306, 336, 177, 0, 0, 0, 0, 0, 505, 503,
	0, 0, 365, 506, 313, 312, 0, 209, 0, 514,
	482, 294, 518, 215, 137, 338, 377, 155, 221, 343,
	480, 196, 262, 175, 272, 273, 193, 133, 290, 243,
	244, 242, 245, 200, 496, 520, 0, 292, 315, 345,
	157, 332, 494, 495, 497, 524, 304, 526, 532, 0,
	234, 189, 192, 203, 210, 0, 299, 333, 366, 0,
	150, 139, 339, 358, 162, 314, 317, 375, 300, 142,
	356, 334, 247, 216, 217, 140, 0, 141, 297, 182,
	199, 176, 266, 0, 198, 287, 353, 354, 174, 378,
	151, 368, 144, 152, 367, 259, 0, 258, 370, 349,
	357, 248, 236, 0, 143, 355, 246, 235, 222, 191,
	205, 283, 230, 284, 206, 254, 253, 255, 232, 237,
	0, 483, 0, 330, 363, 379, 337, 159, 0, 318,
	344, 504, 291, 160, 197, 190, 282, 257, 153, 208,
	327, 220, 228, 296, 376, 270, 303, 163, 362, 326,
	187, 682, 692, 688, 690, 689, 686, 687, 685, 684,
	683, 694, 673, 674, 675, 676, 677, 0, 0, 0,
	679, 0, 617, 618, 0, 0, 0, 170, 591, 592,
	593, 594, 595, 601, 602, 606, 607, 615, 614, 613,
	616, 619, 621, 620, 622, 596, 597, 599, 603, 604,
	605, 608, 609, 612, 610, 611, 678, 134, 145, 225,
	0, 293, 195, 364, 0, 180, 0, 0, 0, 0,
	0, 132, 146, 158, 164, 179, 188, 194, 204, 207,
	211, 212, 213, 218, 233, 238, 239, 240, 241, 260,
	261, 264, 265, 268, 269, 275, 276, 277, 279, 280,
	281, 289, 522, 298, 305, 307, 308, 309, 311, 320,
	321, 322, 323, 331, 351, 352, 371, 372, 341, 0,
	0, 136, 0, 0, 517, 519, 0, 0, 0, 267,
	0, 0, 0, 0, 0, 563, 0, 0, 184, 560,
	0, 0, 0, 223, 0, 0, 183, 172, 231, 229,
	0, 0, 0, 274, 340, 0, 0, 0, 681, 226,
	0, 0, 536, 328, 251, 0, 0, 0, 0, 670,
	671, 0, 0, 0, 0, 0, 0, 0, 0, 82,
	0, 1093, 0, 561, 584, 583, 586, 587, 588, 589,
	0, 0, 541, 585, 590, 623, 624, 0, 0, 0,
	0, 0, 558, 575, 0, 680, 0, 0, 0, 0,
	492, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 361, 278, 295, 316, 0, 286, 500, 0,
	0, 0, 0, 572, 573, 0, 0, 0, 0, 693,
	0, 574, 0, 0, 570, 628, 629, 630, 631, 632,
	633, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 669, 576, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 252, 149, 672,
	0, 0, 214, 540, 0, 0, 691, 288, 0, 335,
	202, 224, 154, 131, 147, 165, 201, 263, 0, 310,
	598, 481, 0, 0, 0, 173, 0, 302, 271, 360,
	600, 0, 301, 227, 350, 0, 0, 359, 0, 527,
	369, 374, 493, 0, 488, 325, 186, 181, 185, 0,
	138, 501, 285, 178, 219, 0, 0, 0, 169, 0,
	0, 0, 324, 347, 135, 249, 348, 373, 156, 342,
	250, 256, 166, 168, 167, 148, 319, 346, 161, 171,
	329, 306, 336, 177, 0, 0, 0, 0, 0, 505,
	503, 0, 0, 365, 506, 313, 312, 0, 209, 0,
	514, 482, 294, 518, 215, 137, 338, 377, 155, 221,
	343, 480, 196, 262, 175, 272, 273, 193, 133, 290,
	243, 244, 242, 245, 200, 496, 520, 0, 292, 315,
	345, 157, 332, 494, 495, 497, 524, 304, 526, 532,
	0, 234, 189, 192, 203, 210, 0, 299, 333, 366,
	0, 150, 139, 339, 358, 162, 314, 317, 375, 300,
	142, 356, 334, 247, 216, 217, 140, 0, 141, 297,
	182, 199, 176, 266, 0, 198, 287, 353, 354, 174,
	378, 151, 368, 144, 152, 367, 259, 0, 258, 370,
	349, 357, 248, 236, 0, 143, 355, 246, 235, 222,
	191, 205, 283, 230, 284, 206, 254, 253, 255, 232,
	237, 0, 483, 0, 330, 363, 379, 337, 159, 0,
	318, 344, 504, 291, 160, 197, 190, 282, 257, 153,
	208, 327, 220, 228, 296, 376, 270, 303, 163, 362,
	326, 187, 682, 692, 688, 690, 689, 686, 687, 685,
	684, 683, 694, 673, 674, 675, 676, 677, 0, 0,
	0, 679, 0, 617, 618, 0, 0, 0, 170, 591,
	592, 593, 594, 595, 601, 602, 606, 607, 615, 614,
	613, 616, 619, 621, 620, 622, 596, 597, 599, 603,
	604, 605, 608, 609, 612, 610, 611, 678, 134, 145,
	225, 0, 293, 195, 364, 0, 180, 0, 0, 0,
	0, 0, 132, 146, 158, 164, 179, 188, 194, 204,
	207, 211, 212, 213, 218, 233, 238, 239, 240, 241,
	260, 261, 264, 265, 268, 269, 275, 276, 277, 279,
	280, 281, 289, 522, 298, 305, 307, 308, 309, 311,
	320, 321, 322, 323, 331, 351, 352, 371, 372, 341,
	0, 0, 136, 0, 0, 517, 519, 0, 0, 0,
	267, 0, 0, 0, 0, 0, 563, 0, 0, 184,
	560, 0, 0, 0, 223, 0, 0, 183, 172, 231,
	229, 0, 0, 0, 274, 340, 0, 0, 0, 681,
	226, 0, 0, 536, 328, 251, 0, 0, 0, 0,
	670, 671, 0, 0, 0, 0, 0, 0, 0, 0,
	82, 0, 0, 0, 561, 584, 583, 586, 587, 588,
	589, 0, 0, 541, 585, 590, 623, 624, 0, 0,
	0, 0, 0, 558, 575, 0, 680, 0, 0, 0,
	0, 492, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 361, 278, 295, 316, 0, 286, 500,
	0, 0, 0, 0, 572, 573, 1543, 0, 0, 0,
	693, 0, 574, 0, 0, 570, 628, 629, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 576, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 252, 149,
	672, 0, 0, 214, 540, 0, 0, 691, 288, 0,
	335, 202, 224, 154, 131, 147, 165, 201, 263, 0,
	310, 598, 481, 0, 0, 0, 173, 0, 302, 271,
	360, 600, 0, 301, 227, 350, 0, 0, 359, 0,
	527, 369, 374, 493, 0, 488, 325, 186, 181, 185,
	0, 138, 501, 285, 178, 219, 0, 0, 0, 169,
	0, 0, 0, 324, 347, 135, 249, 348, 373, 156,
	342, 250, 256, 166, 168, 167, 148, 319, 346, 161,
	171, 329, 306, 336, 177, 0, 0, 0, 0, 0,
	505, 503, 0, 0, 365, 506, 313, 312, 0, 209,
	0, 514, 482, 294, 518, 215, 137, 338, 377, 155,
	221, 343, 480, 196, 262, 175, 272, 273, 193, 133,
	290, 243, 244, 242, 245, 200, 496, 520, 0, 292,
	315, 345, 157, 332, 494, 495, 497, 524, 304, 526,
	532, 0, 234, 189, 192, 203, 210, 0, 299, 333,
	366, 0, 150, 139, 339, 358, 162, 314, 317, 375,
	300, 142, 356, 334, 247, 216, 217, 140, 0, 141,
	297, 182, 199, 176, 266, 0, 198, 287, 353, 354,
	174, 378, 151, 368, 144, 152, 367, 259, 0, 258,
	370, 349, 357, 248, 236, 0, 143, 355, 246, 235,
	222, 191, 205, 283, 230, 284, 206, 254, 253, 255,
	232, 237, 0, 483, 0, 330, 363, 379, 337, 159,
	0, 318, 344, 504, 291, 160, 197, 190, 282, 257,
	153, 208, 327, 220, 228, 296, 376, 270, 303, 163,
	362, 326, 187, 682, 692, 688, 690, 689, 686, 687,
	685, 684, 683, 694, 673, 674, 675, 676, 677, 0,
	0, 0, 679, 0, 617, 618, 0, 0, 0, 170,
	591, 592, 593, 594, 595, 601, 602, 606, 607, 615,
	614, 613, 616, 619, 621, 620, 622, 596, 597, 599,
	603, 604, 605, 608, 609, 612, 610, 611, 678, 134,
	145, 225, 0, 293, 195, 364, 0, 180, 0, 0,
	0, 0, 0, 132, 146, 158, 164, 179, 188, 194,
	204, 207, 211, 212, 213, 218, 233, 238, 239, 240,
	241, 260, 261, 264, 265, 268, 269, 275, 276, 277,
	279, 280, 281, 289, 522, 298, 305, 307, 308, 309,
	311, 320, 321, 322, 323, 331, 351, 352, 371, 372,
	341, 0, 0, 136, 0, 0, 517, 519, 0, 0,
	0, 267, 0, 0, 0, 0, 0, 563, 0, 0,
	184, 560, 0, 0, 0, 223, 0, 0, 183, 172,
	231, 229, 0, 0, 0, 274, 340, 0, 0, 0,
	681, 226, 0, 0, 536, 328, 251, 0, 0, 0,
	0, 670, 671, 0, 0, 0, 0, 0, 0, 0,
	0, 82, 0, 0, 0, 561, 584, 1590, 586, 587,
	588, 589, 0, 0, 541, 585, 590, 623, 624, 0,
	0, 0, 0, 0, 558, 575, 0, 680, 0, 0,
	0, 0, 492, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 361, 278, 295, 316, 0, 286,
	500, 0, 0, 0, 0, 572, 573, 1543, 0, 0,
	0, 693, 0, 574, 0, 0, 570, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 668, 669, 576,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 252,
	149, 672, 0, 0, 214, 540, 0, 0, 691, 288,
	0, 335, 202, 224, 154, 131, 147, 165, 201, 263,
	0, 310, 598, 481, 0, 0, 0, 173, 0, 302,
	271, 360, 600, 0, 301, 227, 350, 0, 0, 359,
	0, 527, 369, 374, 493, 0, 488, 325, 186, 181,
	185, 0, 138, 501, 285, 178, 219, 0, 0, 0,
	169, 0, 0, 0, 324, 347, 135, 249, 348, 373,
	156, 342, 250, 256, 166, 168, 167, 148, 319, 346,
	161, 171, 329, 306, 336, 177, 0, 0, 0, 0,
	0, 505, 503, 0, 0, 365, 506, 313, 312, 0,
	209, 0, 514, 482, 294, 518, 215, 137, 338, 377,
	155, 221, 343, 480, 196, 262, 175, 272, 273, 193,
	133, 290, 243, 244, 242, 245, 200, 496, 520, 0,
	292, 315, 345, 157, 332, 494, 495, 497, 524, 304,
	526, 532, 0, 234, 189, 192, 203, 210, 0, 299,
	333, 366, 0, 150, 139, 339, 358, 162, 314, 317,
	375, 300, 142, 356, 334, 247, 216, 217, 140, 0,
	141, 297, 182, 199, 176, 266, 0, 198, 287, 353,
	354, 174, 378, 151, 368, 144, 152, 367, 259, 0,
	258, 370, 349, 357, 248, 236, 0, 143, 355, 246,
	235, 222, 191, 205, 283, 230, 284, 206, 254, 253,
	255, 232, 237, 0, 483, 0, 330, 363, 379, 337,
	159, 0, 318, 344, 504, 291, 160, 197, 190, 282,
	257, 153, 208, 327, 220, 228, 296, 376, 270, 303,
	163, 362, 326, 187, 682, 692, 688, 690, 689, 686,
	687, 685, 684, 683, 694, 673, 674, 675, 676, 677,
	0, 0, 0, 679, 0, 617, 618, 0, 0, 0,
	170, 591, 592, 593, 594, 595, 601, 602, 606, 607,
	615, 614, 613, 616, 619, 621, 620, 622, 596, 597,
	599, 603, 604, 605, 608, 609, 612, 610, 611, 678,
	134, 145, 225, 0, 293, 195, 364, 0, 180, 0,
	0, 0, 0, 0, 132, 146, 158, 164, 179, 188,
	194, 204, 207, 211, 212, 213, 218, 233, 238, 239,
	240, 241, 260, 261, 264, 265, 268, 269, 275, 276,
	277, 279, 280, 281, 289, 522, 298, 305, 307, 308,
	309, 311, 320, 321, 322, 323, 331, 351, 352, 371,
	372, 341, 0, 0, 136, 0, 0, 517, 519, 0,
	0, 0, 267, 0, 0, 0, 0, 0, 563, 0,
	0, 184, 560, 0, 0, 0, 223, 0, 0, 183,
	172, 231, 229, 0, 0, 0, 274, 340, 0, 0,
	0, 681, 226, 0, 0, 536, 328, 251, 0, 0,
	0, 0, 670, 671, 0, 0, 0, 0, 0, 0,
	0, 0, 82, 0, 0, 0, 561, 584, 1587, 586,
	587, 588, 589, 0, 0, 541, 585, 590, 623, 624,
	0, 0, 0, 0, 0, 558, 575, 0, 680, 0,
	0, 0, 0, 492, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 361, 278, 295, 316, 0,
	286, 500, 0, 0, 0, 0, 572, 573, 1543, 0,
	0, 0, 693, 0, 574, 0, 0, 570, 628, 629,
	630, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 668, 669,
	576, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	252, 149, 672, 0, 0, 214, 540, 0, 0, 691,
	288, 0, 335, 202, 224, 154, 131, 147, 165, 201,
	263, 0, 310, 598, 481, 0, 0, 0, 173, 0,
	302, 271, 360, 600, 0, 301, 227, 350, 0, 0,
	359, 0, 527, 369, 374, 493, 0, 488, 325, 186,
	181, 185, 0, 138, 501, 285, 178, 219, 0, 0,
	0, 169, 0, 0, 0, 324, 347, 135, 249, 348,
	373, 156, 342, 250, 256, 166, 168, 167, 148, 319,
	346, 161, 171, 329, 306, 336, 177, 0, 0, 0,
	0, 0, 505, 503, 0, 0, 365, 506, 313, 312,
	0, 209, 0, 514, 482, 294, 518, 215, 137, 338,
	377, 155, 221, 343, 480, 196, 262, 175, 272, 273,
	193, 133, 290, 243, 244, 242, 245, 200, 496, 520,
	0, 292, 315, 345, 157, 332, 494, 495, 497, 524,
	304, 526, 532, 0, 234, 189, 192, 203, 210, 0,
	299, 333, 366, 0, 150, 139, 339, 358, 162, 314,
	317, 375, 300, 142, 356, 334, 247, 216, 217, 140,
	0, 141, 297, 182, 199, 176, 266, 0, 198, 287,
	353, 354, 174, 378, 151, 368, 144, 152, 367, 259,
	0, 258, 370, 349, 357, 248, 236, 0, 143, 355,
	246, 235, 222, 191, 205, 283, 230, 284, 206, 254,
	253, 255, 232, 237, 0, 483, 0, 330, 363, 379,
	337, 159, 0, 318, 344, 504, 291, 160, 197, 190,
	282, 257, 153, 208, 327, 220, 228, 296, 376, 270,
	303, 163, 362, 326, 187, 682, 692, 688, 690, 689,
	686, 687, 685, 684, 683, 694, 673, 674, 675, 676,
	677, 0, 0, 0, 679, 0, 617, 618, 0, 0,
	0, 170, 591, 592, 593, 594, 595, 601, 602, 606,
	607, 615, 614, 613, 616, 619, 621, 620, 622, 596,
	597, 599, 603, 604, 605, 608, 609, 612, 610, 611,
	678, 134, 145, 225, 0, 293, 195, 364, 0, 180,
	0, 0, 0, 0, 0, 132, 146, 158, 164, 179,
	188, 194, 204, 207, 211, 212, 213, 218, 233, 238,
	239, 240, 241, 260, 261, 264, 265, 268, 269, 275,
	276, 277, 279, 280, 281, 289, 522, 298, 305, 307,
	308, 309, 311, 320, 321, 322, 323, 331, 351, 352,
	371, 372, 341, 0, 0, 136, 0, 0, 517, 519,
	0, 0, 0, 267, 0, 0, 0, 0, 0, 563,
	0, 0, 184, 560, 0, 0, 0, 223, 0, 0,
	183, 172, 231, 229, 0, 0, 0, 274, 340, 0,
	0, 0, 681, 226, 0, 0, 536, 328, 251, 0,
	0, 0, 0, 670, 671, 0, 0, 0, 0, 0,
	0, 0, 0, 82, 0, 1421, 0, 561, 584, 583,
	586, 587, 588, 589, 0, 0, 541, 585, 590, 623,
	624, 0, 0, 0, 0, 0, 558, 575, 0, 680,
	0, 0, 0, 0, 492, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 361, 278, 295, 316,
	0, 286, 500, 0, 0, 0, 0, 572, 573, 0,
	0, 0, 0, 693, 0, 574, 0, 0, 570, 628,
	629, 630, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 668,
	669, 576, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 252, 149, 672, 0, 0, 214, 540, 0, 0,
	691, 288, 0, 335, 202, 224, 154, 131, 147, 165,
	201, 263, 0, 310, 598, 481, 0, 0, 0, 173,
	0, 302, 271, 360, 600, 0, 301, 227, 350, 0,
	0, 359, 0, 527, 369, 374, 493, 0, 488, 325,
	186, 181, 185, 0, 138, 501, 285, 178, 219, 0,
	0, 0, 169, 0, 0, 0, 324, 347, 135, 249,
	348, 373, 156, 342, 250, 256, 166, 168, 167, 148,
	319, 346, 161, 171, 329, 306, 336, 177, 0, 0,
	0, 0, 0, 505, 503, 0, 0, 365, 506, 313,
	312, 0, 209, 0, 514, 482, 294, 518, 215, 137,
	338, 377, 155, 221, 343, 480, 196, 262, 175, 272,
	273, 193, 133, 290, 243, 244, 242, 245, 200, 496,
	520, 0, 292, 315, 345, 157, 332, 494, 495, 497,
	524, 304, 526, 532, 0, 234, 189, 192, 203, 210,
	0, 299, 333, 366, 0, 150, 139, 339, 358, 162,
	314, 317, 375, 300, 142, 356, 334, 247, 216, 217,
	140, 0, 141, 297, 182, 199, 176, 266, 0, 198,
	287, 353, 354, 174, 378, 151, 368, 144, 152, 367,
	259, 0, 258, 370, 349, 357, 248, 236, 0, 143,
	355, 246, 235, 222, 191, 205, 283, 230, 284, 206,
	254, 253, 255, 232, 237, 0, 483, 0, 330, 363,
	379, 337, 159, 0, 318, 344, 504, 291, 160, 197,
	190, 282, 257, 153, 208, 327, 220, 228, 296, 376,
	270, 303, 163, 362, 326, 187, 682, 692, 688, 690,
	689, 686, 687, 685, 684, 683, 694, 673, 674, 675,
	676, 677, 0, 0, 0, 679, 0, 617, 618, 0,
	0, 0, 170, 591, 592, 593, 594, 595, 601, 602,
	606, 607, 615, 614, 613, 616, 619, 621, 620, 622,
	596, 597, 599, 603, 604, 605, 608, 609, 612, 610,
	611, 678, 134, 145, 225, 0, 293, 195, 364, 0,
	180, 0, 0, 0, 0, 0, 132, 146, 158, 164,
	179, 188, 194, 204, 207, 211, 212, 213, 218, 233,
	238, 239, 240, 241, 260, 261, 264, 265, 268, 269,
	275, 276, 277, 279, 280, 281, 289, 522, 298, 305,
	307, 308, 309, 311, 320, 321, 322, 323, 331, 351,
	352, 371, 372, 341, 0, 0, 136, 0, 0, 517,
	519, 0, 0, 0, 267, 0, 0, 0, 0, 0,
	563, 0, 0, 184, 560, 0, 0, 0, 223, 0,
	0, 183, 172, 231, 229, 0, 0, 0, 274, 340,
	0, 0, 0, 681, 226, 0, 0, 536, 328, 251,
	0, 0, 0, 0, 670, 671, 0, 0, 0, 0,
	0, 0, 0, 0, 82, 0, 0, 0, 561, 584,
	583, 586, 587, 588, 589, 0, 0, 541, 585, 590,
	623, 624, 0, 0, 0, 0, 0, 558, 575, 0,
	680, 0, 0, 0, 0, 492, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 361, 278, 295,
	316, 0, 286, 500, 0, 0, 0, 0, 572, 573,
	0, 0, 0, 0, 693, 0, 574, 0, 0, 570,
	628, 629, 630, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	668, 669, 576, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 149, 672, 0, 0, 214, 540, 0,
	0, 691, 288, 0, 335, 202, 224, 154, 131, 147,
	165, 201, 263, 0, 310, 598, 481, 0, 0, 0,
	173, 0, 302, 271, 360, 600, 0, 301, 227, 350,
	0, 0, 359, 0, 527, 369, 374, 493, 0, 488,
	325, 186, 181, 185, 0, 138, 501, 285, 178, 219,
	0, 0, 0, 169, 0, 0, 0, 324, 347, 135,
	249, 348, 373, 156, 342, 250, 256, 166, 168, 167,
	148, 319, 346, 161, 171, 329, 306, 336, 177, 0,
	0, 0, 0, 0, 505, 503, 0, 0, 365, 506,
	313, 312, 0, 209, 0, 514, 482, 294, 518, 215,
	137, 338, 377, 155, 221, 343, 480, 196, 262, 175,
	272, 273, 193, 133, 290, 243, 244, 242, 245, 200,
	496, 520, 0, 292, 315, 345, 157, 332, 494, 495,
	497, 524, 304, 526, 532, 0, 234, 189, 192, 203,
	210, 0, 299, 333, 366, 0, 150, 139, 339, 358,
	162, 314, 317, 375, 300, 142, 356, 334, 247, 216,
	217, 140, 0, 141, 297, 182, 199, 176, 266, 0,
	198, 287, 353, 354, 174, 378, 151, 368, 144, 152,
	367, 259, 0, 258, 370, 349, 357, 248, 236, 0,
	143, 355, 246, 235, 222, 191, 205, 283, 230, 284,
	206, 254, 253, 255, 232, 237, 0, 483, 0, 330,
	363, 379, 337, 159, 0, 318, 344, 504, 291, 160,
	197, 190, 282, 257, 153, 208, 327, 220, 228, 296,
	376, 270, 303, 163, 362, 326, 187, 682, 692, 688,
	690, 689, 686, 687, 685, 684, 683, 694, 673, 674,
	675, 676, 677, 0, 0, 0, 679, 0, 617, 618,
	0, 0, 0, 170, 591, 592, 593, 594, 595, 601,
	602, 606, 607, 615, 614, 613, 616, 619, 621, 620,
	622, 596, 597, 599, 603, 604, 605, 608, 609, 612,
	610, 611, 678, 134, 145, 225, 0, 293, 195, 364,
	0, 180, 0, 0, 0, 0, 0, 132, 146, 158,
	164, 179, 188, 194, 204, 207, 211, 212, 213, 218,
	233, 238, 239, 240, 241, 260, 261, 264, 265, 268,
	269, 275, 276, 277, 279, 280, 281, 289, 522, 298,
	305, 307, 308, 309, 311, 320, 321, 322, 323, 331,
	351, 352, 371, 372, 341, 0, 0, 136, 0, 0,
	517, 519, 0, 0, 0, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 184, 0, 0, 0, 0, 223,
	0, 0, 183, 172, 231, 229, 0, 0, 0, 274,
	340, 0, 0, 0, 681, 226, 0, 0, 536, 328,
	251, 0, 0, 0, 0, 670, 671, 0, 0, 0,
	0, 0, 0, 0, 0, 82, 0, 0, 0, 561,
	584, 583, 586, 587, 588, 589, 0, 0, 541, 585,
	590, 623, 624, 0, 0, 0, 0, 0, 0, 575,
	0, 680, 0, 0, 0, 0, 492, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 361, 278,
	295, 316, 0, 286, 500, 0, 0, 0, 0, 572,
	573, 0, 0, 0, 0, 693, 0, 574, 0, 0,
	570, 628, 629, 630, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 576, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 149, 672, 0, 0, 214, 540,
	0, 0, 691, 288, 0, 335, 202, 224, 154, 131,
	147, 165, 201, 263, 0, 310, 598, 481, 0, 0,
	0, 173, 0, 302, 271, 360, 600, 0, 301, 227,
	350, 0, 0, 359, 0, 527, 369, 374, 493, 0,
	488, 325, 186, 181, 185, 0, 138, 501, 285, 178,
	219, 0, 0, 0, 169, 0, 0, 0, 324, 347,
	135, 249, 348, 373, 156, 342, 250, 256, 166, 168,
	167, 148, 319, 346, 161, 171, 329, 306, 336, 177,
	0, 0, 0, 0, 0, 505, 503, 0, 0, 365,
	506, 313, 312, 0, 209, 0, 514, 482, 294, 518,
	215, 137, 338, 377, 155, 221, 343, 480, 196, 262,
	175, 272, 273, 193, 133, 290, 243, 244, 242, 245,
	200, 496, 520, 0, 292, 315, 345, 157, 332, 494,
	495, 497, 524, 304, 526, 532, 0, 234, 189, 192,
	203, 210, 0, 299, 333, 366, 0, 150, 139, 339,
	358, 162, 314, 317, 375, 300, 142, 356, 334, 247,
	216, 217, 140, 0, 141, 297, 182, 199, 176, 266,
	0, 198, 287, 353, 354, 174, 378, 151, 368, 144,
	152, 367, 259, 0, 258, 370, 349, 357, 248, 236,
	0, 143, 355, 246, 235, 222, 191, 205, 283, 230,
	284, 206, 254, 253, 255, 232, 237, 0, 483, 0,
	330, 363, 379, 337, 159, 0, 318, 344, 504, 291,
	160, 197, 190, 282, 257, 153, 208, 327, 220, 228,
	296, 376, 270, 303, 163, 362, 326, 187, 682, 692,
	688, 690, 689, 686, 687, 685, 684, 683, 694, 673,
	674, 675, 676, 677, 1593, 1594, 1595, 679, 0, 617,
	618, 0, 0, 0, 170, 591, 592, 593, 594, 595,
	601, 602, 606, 607, 615, 614, 613, 616, 619, 621,
	620, 622, 596, 597, 599, 603, 604, 605, 608, 609,
	612, 610, 611, 678, 134, 145, 225, 0, 293, 195,
	364, 0, 180, 0, 0, 0, 0, 0, 132, 146,
	158, 164, 179, 188, 194, 204, 207, 211, 212, 213,
	218, 233, 238, 239, 240, 241, 260, 261, 264, 265,
	268, 269, 275, 276, 277, 279, 280, 281, 289, 522,
	298, 305, 307, 308, 309, 311, 320, 321, 322, 323,
	331, 351, 352, 371, 372, 341, 0, 0, 136, 0,
	0, 517, 519, 0, 0, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 184, 0, 0, 0, 0,
	223, 0, 0, 183, 172, 231, 229, 0, 0, 0,
	274, 340, 0, 0, 0, 681, 226, 0, 0, 536,
	328, 251, 0, 0, 0, 0, 670, 671, 0, 0,
	0, 0, 0, 0, 0, 0, 82, 0, 0, 0,
	561, 584, 583, 586, 587, 588, 589, 0, 0, 541,
	585, 590, 623, 624, 0, 0, 0, 0, 0, 0,
	575, 0, 680, 0, 0, 0, 0, 492, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 361,
	278, 295, 316, 0, 286, 500, 0, 0, 0, 0,
	572, 573, 0, 0, 0, 0, 693, 0, 574, 0,
	0, 570, 628, 629, 630, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 576, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 252, 149, 672, 0, 0, 214,
	540, 0, 0, 691, 288, 0, 335, 202, 224, 154,
	131, 147, 165, 201, 263, 0, 310, 598, 481, 0,
	0, 0, 173, 0, 302, 271, 360, 600, 2944, 301,
	227, 350, 0, 0, 359, 0, 527, 369, 374, 493,
	0, 488, 325, 186, 181, 185, 0, 138, 501, 285,
	178, 219, 0, 0, 0, 169, 0, 0, 0, 324,
	347, 135, 249, 348, 373, 156, 342, 250, 256, 166,
	168, 167, 148, 319, 346, 161, 171, 329, 306, 336,
	177, 0, 0, 0, 0, 0, 505, 503, 0, 0,
	365, 506, 313, 312, 0, 209, 0, 514, 482, 294,
	518, 215, 137, 338, 377, 155, 221, 343, 480, 196,
	262, 175, 272, 273, 193, 133, 290, 243, 244, 242,
	245, 200, 496, 520, 0, 292, 315, 345, 157, 332,
	494, 495, 497, 524, 304, 526, 532, 0, 234, 189,
	192, 203, 210, 0, 299, 333, 366, 0, 150, 139,
	339, 358, 162, 314, 317, 375, 300, 142, 356, 334,
	247, 216, 217, 140, 0, 141, 297, 182, 199, 176,
	266, 0, 198, 287, 353, 354, 174, 378, 151, 368,
	144, 152, 367, 259, 0, 258, 370, 349, 357, 248,
	236, 0, 143, 355, 246, 235, 222, 191, 205, 283,
	230, 284, 206, 254, 253, 255, 232, 237, 0, 483,
	0, 330, 363, 379, 337, 159, 0, 318, 344, 504,
	291, 160, 197, 190, 282, 257, 153, 208, 327, 220,
	228, 296, 376, 270, 303, 163, 362, 326, 187, 682,
	692, 688, 690, 689, 686, 687, 685, 684, 683, 694,
	673, 674, 675, 676, 677, 0, 0, 0, 679, 0,
	617, 618, 0, 0, 0, 170, 591, 592, 593, 594,
	595, 601, 602, 606, 607, 615, 614, 613, 616, 619,
	621, 620, 622, 596, 597, 599, 603, 604, 605, 608,
	609, 612, 610, 611, 678, 134, 145, 225, 0, 293,
	195, 364, 0, 180, 0, 0, 0, 0, 0, 132,
	146, 158, 164, 179, 188, 194, 204, 207, 211, 212,
	213, 218, 233, 238, 239, 240, 241, 260, 261, 264,
	265, 268, 269, 275, 276, 277, 279, 280, 281, 289,
	522, 298, 305, 307, 308, 309, 311, 320, 321, 322,
	323, 331, 351, 352, 371, 372, 341, 0, 0, 136,
	0, 0, 517, 519, 0, 0, 0, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 184, 0, 0, 0,
	0, 223, 0, 0, 183, 172, 231, 229, 0, 0,
	0, 274, 340, 0, 0, 0, 681, 226, 0, 0,
	536, 328, 251, 0, 0, 0, 0, 670, 671, 0,
	0, 0, 0, 0, 0, 0, 0, 82, 0, 1093,
	0, 561, 584, 583, 586, 587, 588, 589, 0, 0,
	541, 585, 590, 623, 624, 0, 0, 0, 0, 0,
	0, 575, 0, 680, 0, 0, 0, 0, 492, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	361, 278, 295, 316, 0, 286, 500, 0, 0, 0,
	0, 572, 573, 0, 0, 0, 0, 693, 0, 574,
	0, 0, 570, 628, 629, 630, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 668, 669, 576, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 252, 149, 672, 0, 0,
	214, 540, 0, 0, 691, 288, 0, 335, 202, 224,
	154, 131, 147, 165, 201, 263, 0, 310, 598, 481,
	0, 0, 0, 173, 0, 302, 271, 360, 600, 0,
	301, 227, 350, 0, 0, 359, 0, 527, 369, 374,
	493, 0, 488, 325, 186, 181, 185, 0, 138, 501,
	285, 178, 219, 0, 0, 0, 169, 0, 0, 0,
	324, 347, 135, 249, 348, 373, 156, 342, 250, 256,
	166, 168, 167, 148, 319, 346, 161, 171, 329, 306,
	336, 177, 0, 0, 0, 0, 0, 505, 503, 0,
	0, 365, 506, 313, 312, 0, 209, 0, 514, 482,
	294, 518, 215, 137, 338, 377, 155, 221, 343, 480,
	196, 262, 175, 272, 273, 193, 133, 290, 243, 244,
	242, 245, 200, 496, 520, 0, 292, 315, 345, 157,
	332, 494, 495, 497, 524, 304, 526, 532, 0, 234,
	189, 192, 203, 210, 0, 299, 333, 366, 0, 150,
	139, 339, 358, 162, 314, 317, 375, 300, 142, 356,
	334, 247, 216, 217, 140, 0, 141, 297, 182, 199,
	176, 266, 0, 198, 287, 353, 354, 174, 378, 151,
	368, 144, 152, 367, 259, 0, 258, 370, 349, 357,
	248, 236, 0, 143, 355, 246, 235, 222, 191, 205,
	283, 230, 284, 206, 254, 253, 255, 232, 237, 0,
	483, 0, 330, 363, 379, 337, 159, 0, 318, 344,
	504, 291, 160, 197, 190, 282, 257, 153, 208, 327,
	220, 228, 296, 376, 270, 303, 163, 362, 326, 187,
	682, 692, 688, 690, 689, 686, 687, 685, 684, 683,
	694, 673, 674, 675, 676, 677, 0, 0, 0, 679,
	0, 617, 618, 0, 0, 0, 170, 591, 592, 593,
	594, 595, 601, 602, 606, 607, 615, 614, 613, 616,
	619, 621, 620, 622, 596, 597, 599, 603, 604, 605,
	608, 609, 612, 610, 611, 678, 134, 145, 225, 0,
	293, 195, 364, 0, 180, 0, 0, 0, 0, 0,
	132, 146, 158, 164, 179, 188, 194, 204, 207, 211,
	212, 213, 218, 233, 238, 239, 240, 241, 260, 261,
	264, 265, 268, 269, 275, 276, 277, 279, 280, 281,
	289, 522, 298, 305, 307, 308, 309, 311, 320, 321,
	322, 323, 331, 351, 352, 371, 372, 341, 0, 0,
	136, 0, 0, 517, 519, 0, 0, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 184, 0, 0,
	0, 0, 223, 0, 0, 183, 172, 231, 229, 0,
	0, 0, 274, 340, 0, 0, 0, 681, 226, 0,
	0, 536, 328, 251, 0, 0, 0, 0, 670, 671,
	0, 0, 0, 0, 0, 0, 0, 0, 82, 0,
	0, 0, 561, 584, 583, 586, 587, 588, 589, 0,
	0, 541, 585, 590, 623, 624, 0, 0, 0, 0,
	0, 0, 575, 0, 680, 0, 0, 0, 0, 492,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 361, 278, 295, 316, 0, 286, 500, 0, 0,
	0, 0, 572, 573, 0, 0, 0, 0, 693, 0,
	574, 0, 0, 570, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 668, 669, 576, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 252, 149, 672, 0,
	0, 214, 540, 0, 0, 691, 288, 0, 335, 202,
	224, 154, 131, 147, 165, 201, 263, 0, 310, 598,
	481, 0, 0, 0, 173, 0, 302, 271, 360, 600,
	0, 301, 227, 350, 0, 0, 359, 0, 527, 369,
	374, 493, 0, 488, 325, 186, 181, 185, 0, 138,
	501, 285, 178, 219, 0, 0, 0, 169, 0, 0,
	0, 324, 347, 135, 249, 348, 373, 156, 342, 250,
	256, 166, 168, 167, 148, 319, 346, 161, 171, 329,
	306, 336, 177, 0, 0, 0, 0, 0, 505, 503,
	0, 0, 365, 506, 313, 312, 0, 209, 0, 514,
	482, 294, 518, 215, 137, 338, 377, 155, 221, 343,
	480, 196, 262, 175, 272, 273, 193, 133, 290, 243,
	244, 242, 245, 200, 496, 520, 0, 292, 315, 345,
	157, 332, 494, 495, 497, 524, 304, 526, 532, 0,
	234, 189, 192, 203, 210, 0, 299, 333, 366, 0,
	150, 139, 339, 358, 162, 314, 317, 375, 300, 142,
	356, 334, 247, 216, 217, 140, 0, 141, 297, 182,
	199, 176, 266, 0, 198, 287, 353, 354, 174, 378,
	151, 368, 144, 152, 367, 259, 0, 258, 370, 349,
	357, 248, 236, 0, 143, 355, 246, 235, 222, 191,
	205, 283, 230, 284, 206, 254, 253, 255, 232, 237,
	0, 483, 0, 330, 363, 379, 337, 159, 0, 318,
	344, 504, 291, 160, 197, 190, 282, 257, 153, 208,
	327, 220, 228, 296, 376, 270, 303, 163, 362, 326,
	187, 682, 692, 688, 690, 689, 686, 687, 685, 684,
	683, 694, 673, 674, 675, 676, 677, 0, 0, 0,
	679, 0, 617, 618, 0, 0, 0, 170, 591, 592,
	593, 594, 595, 601, 602, 606, 607, 615, 614, 613,
	616, 619, 621, 620, 622, 596, 597, 599, 603, 604,
	605, 608, 609, 612, 610, 611, 678, 134, 145, 225,
	0, 293, 195, 364, 0, 180, 0, 0, 0, 0,
	0, 132, 146, 158, 164, 179, 188, 194, 204, 207,
	211, 212, 213, 218, 233, 238, 239, 240, 241, 260,
	261, 264, 265, 268, 269, 275, 276, 277, 279, 280,
	281, 289, 522, 298, 305, 307, 308, 309, 311, 320,
	321, 322, 323, 331, 351, 352, 371, 372, 341, 0,
	0, 136, 0, 0, 517, 519, 0, 0, 0, 267,
	0, 0, 0, 0, 1116, 0, 0, 0, 184, 0,
	0, 0, 0, 223, 0, 0, 183, 172, 231, 229,
	0, 0, 0, 274, 340, 0, 0, 0, 0, 226,
	0, 0, 536, 328, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1117, 0, 1120, 0, 0, 0, 0,
	0, 0, 541, 0, 0, 0, 0, 0, 0, 1112,
	1113, 1111, 0, 0, 0, 0, 0, 0, 0, 0,
	492, 0, 0, 0, 0, 0, 0, 0, 1114, 0,
	0, 0, 361, 278, 295, 316, 0, 286, 500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 252, 149, 0,
	0, 0, 214, 540, 0, 0, 0, 288, 0, 335,
	202, 224, 154, 131, 147, 165, 201, 263, 0, 310,
	498, 481, 0, 0, 0, 173, 0, 302, 271, 360,
	502, 0, 301, 227, 350, 0, 0, 359, 0, 527,
	369, 374, 493, 0, 488, 325, 186, 181, 185, 0,
	138, 501, 285, 178, 219, 0, 0, 0, 169, 0,
	0, 0, 324, 347, 135, 249, 348, 373, 156, 342,
	250, 256, 166, 168, 167, 148, 319, 346, 161, 171,
	329, 306, 336, 177, 0, 0, 0, 0, 0, 505,
	503, 0, 0, 365, 506, 313, 312, 0, 209, 0,
	514, 482, 294, 518, 215, 137, 338, 377, 155, 221,
	343, 480, 196, 262, 175, 272, 273, 193, 133, 290,
	243, 244, 242, 245, 200, 496, 520, 0, 292, 315,
	345, 157, 332, 494, 495, 497, 524, 304, 526, 532,
	0, 234, 189, 192, 203, 210, 0, 299, 333, 366,
	0, 150, 139, 339, 358, 162, 314, 317, 375, 300,
	142, 356, 334, 247, 216, 217, 140, 0, 141, 297,
	182, 199, 176, 266, 0, 198, 287, 353, 354, 174,
	378, 151, 368, 144, 152, 367, 259, 0, 258, 370,
	349, 357, 248, 236, 0, 143, 355, 246, 235, 222,
	191, 205, 283, 230, 284, 206, 254, 253, 255, 232,
	237, 0, 483, 0, 330, 363, 379, 337, 159, 0,
	318, 344, 504, 291, 160, 197, 190, 282, 257, 153,
	208, 327, 220, 228, 296, 376, 270, 303, 163, 362,
	326, 187, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 533, 534, 0, 0, 0, 170, 484,
	485, 486, 487, 489, 507, 508, 512, 513, 530, 529,
	528, 531, 535, 538, 537, 539, 490, 491, 499, 509,
	510, 511, 515, 516, 525, 521, 523, 0, 134, 145,
	225, 0, 293, 195, 364, 0, 180, 0, 0, 0,
	0, 0, 132, 146, 158, 164, 179, 188, 194, 204,
	207, 211, 212, 213, 218, 233, 238, 239, 240, 241,
	260, 261, 264, 265, 268, 269, 275, 276, 277, 279,
	280, 281, 289, 522, 298, 305, 307, 308, 309, 311,
	320, 321, 322, 323, 331, 351, 352, 371, 372, 341,
	0, 0, 136, 0, 0, 517, 519, 0, 0, 0,
	267, 0, 0, 0, 0, 1633, 0, 0, 0, 184,
	0, 0, 0, 0, 223, 0, 0, 183, 172, 231,
	229, 0, 0, 0, 274, 340, 0, 0, 0, 0,
	226, 0, 0, 536, 328, 251, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1635, 1637, 0, 0,
	0, 0, 0, 0, 129, 0, 479, 0, 0, 0,
	0, 0, 0, 541, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 492, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 361, 278, 295, 316, 0, 286, 500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 252, 149,
	0, 0, 0, 214, 540, 0, 1636, 0, 288, 0,
	335, 202, 224, 154, 131, 147, 165, 201, 263, 0,
	310, 498, 481, 0, 0, 0, 173, 0, 302, 271,
	360, 502, 0, 301, 227, 350, 0, 0, 359, 0,
	527, 369, 374, 493, 0, 488, 325, 186, 181, 185,
	0, 138, 501, 285, 178, 219, 0, 0, 0, 169,
	0, 0, 0, 324, 347, 135, 249, 348, 373, 156,
	342, 250, 256, 166, 168, 167, 148, 319, 346, 161,
	171, 329, 306, 336, 177, 0, 0, 0, 0, 0,
	505, 503, 0, 0, 365, 506, 313, 312, 0, 209,
	0, 514, 482, 294, 518, 215, 137, 338, 377, 155,
	221, 343, 480, 196, 262, 175, 272, 273, 193, 133,
	290, 243, 244, 242, 245, 200, 496, 520, 0, 292,
	315, 345, 157, 332, 494, 495, 497, 524, 304, 526,
	532, 0, 234, 189, 192, 203, 210, 0, 299, 333,
	366, 0, 150, 139, 339, 358, 162, 314, 317, 375,
	300, 142, 356, 334, 247, 216, 217, 140, 0, 141,
	297, 182, 199, 176, 266, 0, 198, 287, 353, 354,
	174, 378, 151, 368, 144, 152, 367, 259, 0, 258,
	370, 349, 357, 248, 236, 0, 143, 355, 246, 235,
	222, 191, 205, 283, 230, 284, 206, 254, 253, 255,
	232, 237, 0, 483, 0, 330, 363, 379, 337, 159,
	0, 318, 344, 504, 291, 160, 197, 190, 282, 257,
	153, 208, 327, 220, 228, 296, 376, 270, 303, 163,
	362, 326, 187, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 533, 534, 0, 0, 0, 170,
	484, 485, 486, 487, 489, 507, 508, 512, 513, 530,
	529, 528, 531, 535, 538, 537, 539, 490, 491, 499,
	509, 510, 511, 515, 516, 525, 521, 523, 0, 134,
	145, 225, 0, 293, 195, 364, 0, 180, 0, 0,
	0, 0, 0, 132, 146, 158, 164, 179, 188, 194,
	204, 207, 211, 212, 213, 218, 233, 238, 239, 240,
	241, 260, 261, 264, 265, 268, 269, 275, 276, 277,
	279, 280, 281, 289, 522, 298, 305, 307, 308, 309,
	311, 320, 321, 322, 323, 331, 351, 352, 371, 372,
	341, 0, 0, 136, 0, 0, 517, 519, 0, 0,
	0, 267, 0, 0, 0, 0, 1633, 0, 0, 0,
	184, 0, 0, 0, 0, 223, 0, 0, 183, 172,
	231, 229, 0, 0, 0, 274, 340, 0, 0, 0,
	0, 226, 0, 0, 536, 328, 251, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1635, 1637, 0,
	0, 0, 0, 0, 0, 129, 0, 479, 0, 0,
	0, 0, 0, 0, 541, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 492, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 361, 1631, 295, 316, 0, 286,
	500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 252,
	149, 0, 0, 0, 214, 540, 0, 1636, 0, 288,
	0, 335, 202, 224, 154, 131, 147, 165, 201, 263,
	0, 310, 498, 481, 0, 0, 0, 173, 0, 302,
	271, 360, 502, 0, 301, 227, 350, 0, 0, 359,
	0, 527, 369, 374, 493, 0, 488, 325, 186, 181,
	185, 0, 138, 501, 285, 178, 219, 0, 0, 0,
	169, 0, 0, 0, 324, 347, 135, 249, 348, 373,
	156, 342, 250, 256, 166, 168, 167, 148, 319, 346,
	161, 171, 329, 306, 336, 177, 0, 0, 0, 0,
	0, 505, 503, 0, 0, 365, 506, 313, 312, 0,
	209, 0, 514, 482, 294, 518, 215, 137, 338, 377,
	155, 221, 343, 480, 196, 262, 175, 272, 273, 193,
	133, 290, 243, 244, 242, 245, 200, 496, 520, 0,
	292, 315, 345, 157, 332, 494, 495, 497, 524, 304,
	526, 532, 0, 234, 189, 192, 203, 210, 0, 299,
	333, 366, 0, 150, 139, 339, 358, 162, 314, 317,
	375, 300, 142, 356, 334, 247, 216, 217, 140, 0,
	141, 297, 182, 199, 176, 266, 0, 198, 287, 353,
	354, 174, 378, 151, 368, 144, 152, 367, 259, 0,
	258, 370, 349, 357, 248, 236, 0, 143, 355, 246,
	235, 222, 191, 205, 283, 230, 284, 206, 254, 253,
	255, 232, 237, 0, 483, 0, 330, 363, 379, 337,
	159, 0, 318, 344, 504, 291, 160, 197, 190, 282,
	257, 153, 208, 327, 220, 228, 296, 376, 270, 303,
	163, 362, 326, 187, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 533, 534, 0, 0, 0,
	170, 484, 485, 486, 487, 489, 507, 508, 512, 513,
	530, 529, 528, 531, 535, 538, 537, 539, 490, 491,
	499, 509, 510, 511, 515, 516, 525, 521, 523, 0,
	134, 145, 225, 0, 293, 195, 364, 0, 180, 0,
	0, 0, 0, 0, 132, 146, 158, 164, 179, 188,
	194, 204, 207, 211, 212, 213, 218, 233, 238, 239,
	240, 241, 260, 261, 264, 265, 268, 269, 275, 276,
	277, 279, 280, 281, 289, 522, 298, 305, 307, 308,
	309, 311, 320, 321, 322, 323, 331, 351, 352, 371,
	372, 341, 0, 0, 136, 0, 0, 517, 519, 0,
	0, 0, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 184, 0, 0, 0, 0, 223, 0, 0, 183,
	172, 231, 229, 0, 0, 0, 274, 340, 0, 0,
	0, 0, 226, 0, 0, 536, 328, 251, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 129, 0, 479, 0,
	0, 0, 0, 0, 0, 541, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 492, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 361, 278, 295, 316, 0,
	286, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	252, 149, 0, 0, 0, 214, 540, 0, 0, 0,
	288, 0, 335, 202, 224, 154, 131, 147, 165, 201,
	263, 0, 310, 498, 481, 0, 0, 0, 173, 0,
	302, 271, 360, 502, 0, 301, 227, 350, 0, 0,
	359, 0, 527, 369, 374, 493, 0, 488, 325, 186,
	181, 185, 0, 138, 501, 285, 178, 219, 0, 0,
	0, 169, 0, 0, 0, 324, 347, 135, 249, 348,
	373, 156, 342, 250, 256, 166, 168, 167, 148, 319,
	346, 161, 171, 329, 306, 336, 177, 0, 0, 0,
	0, 0, 505, 503, 0, 0, 365, 506, 313, 312,
	0, 209, 0, 514, 482, 294, 518, 215, 137, 338,
	377, 155, 221, 343, 480, 196, 262, 175, 272, 273,
	193, 133, 290, 243, 244, 242, 245, 200, 496, 520,
	0, 292, 315, 345, 157, 332, 494, 495, 497, 524,
	304, 526, 532, 0, 234, 189, 192, 203, 210, 0,
	299, 333, 366, 0, 150, 139, 339, 358, 162, 314,
	317, 375, 300, 142, 356, 334, 247, 216, 217, 140,
	0, 141, 297, 182, 199, 176, 266, 0, 198, 287,
	353, 354, 174, 378, 151, 368, 144, 152, 367, 259,
	0, 258, 370, 349, 357, 248, 236, 0, 143, 355,
	246, 235, 222, 191, 205, 283, 230, 284, 206, 254,
	253, 255, 232, 237, 0, 483, 0, 330, 363, 379,
	337, 159, 0, 318, 344, 504, 291, 160, 197, 190,
	282, 257, 153, 208, 327, 220, 228, 296, 376, 270,
	303, 163, 362, 326, 187, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 533, 534, 0, 0,
	0, 170, 484, 485, 486, 487, 489, 507, 508, 512,
	513, 530, 529, 528, 531, 535, 538, 537, 539, 490,
	491, 499, 509, 510, 511, 515, 516, 525, 521, 523,
	0, 134, 145, 225, 0, 293, 195, 364, 0, 180,
	0, 0, 0, 0, 474, 132, 146, 158, 164, 179,
	188, 194, 204, 207, 211, 212, 213, 218, 233, 238,
	239, 240, 241, 260, 261, 264, 265, 268, 269, 275,
	276, 277, 279, 280, 281, 289, 522, 298, 305, 307,
	308, 309, 311, 320, 321, 322, 323, 331, 351, 352,
	371, 372, 341, 0, 0, 136, 0, 0, 517, 519,
	0, 0, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 184, 0, 0, 0, 0, 223, 1951, 0,
	183, 172, 231, 229, 0, 0, 0, 274, 340, 0,
	0, 0, 0, 226, 0, 0, 536, 328, 251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 129, 0, 479,
	0, 0, 0, 0, 0, 0, 541, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 492, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 361, 278, 295, 316,
	0, 286, 500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 252, 149, 0, 0, 0, 214, 540, 0, 0,
	0, 288, 0, 335, 202, 224, 154, 131, 147, 165,
	201, 263, 0, 310, 498, 481, 0, 0, 0, 173,
	0, 302, 271, 360, 502, 0, 301, 227, 350, 0,
	0, 359, 0, 527, 369, 374, 493, 0, 488, 325,
	186, 181, 185, 0, 138, 501, 285, 178, 219, 0,
	0, 0, 169, 0, 0, 0, 324, 347, 135, 249,
	348, 373, 156, 342, 250, 256, 166, 168, 167, 148,
	319, 346, 161, 171, 329, 306, 336, 177, 0, 0,
	0, 0, 0, 505, 503, 0, 0, 365, 506, 313,
	312, 0, 209, 0, 514, 482, 294, 518, 215, 137,
	338, 377, 155, 221, 343, 480, 196, 262, 175, 272,
	273, 193, 133, 290, 243, 244, 242, 245, 200, 496,
	520, 0, 292, 315, 345, 157, 332, 494, 495, 497,
	524, 304, 526, 532, 0, 234, 189, 192, 203, 210,
	0, 299, 333, 366, 0, 150, 139, 339, 358, 162,
	314, 317, 375, 300, 142, 356, 334, 247, 216, 217,
	140, 0, 141, 297, 182, 199, 176, 266, 0, 198,
	287, 353, 354, 174, 378, 151, 368, 144, 152, 367,
	259, 0, 258, 370, 349, 357, 248, 236, 0, 143,
	355, 246, 235, 222, 191, 205, 283, 230, 284, 206,
	254, 253, 255, 232, 237, 0, 483, 0, 330, 363,
	379, 337, 159, 0, 318, 344, 504, 291, 160, 197,
	190, 282, 257, 153, 208, 327, 220, 228, 296, 376,
	270, 303, 163, 362, 326, 187, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 533, 534, 0,
	0, 0, 170, 484, 485, 486, 487, 489, 507, 508,
	512, 513, 530, 529, 528, 531, 535, 538, 537, 539,
	490, 491, 499, 509, 510, 511, 515, 516, 525, 521,
	523, 0, 134, 145, 225, 0, 293, 195, 364, 0,
	180, 0, 0, 0, 0, 0, 132, 146, 158, 164,
	179, 188, 194, 204, 207, 211, 212, 213, 218, 233,
	238, 239, 240, 241, 260, 261, 264, 265, 268, 269,
	275, 276, 277, 279, 280, 281, 289, 522, 298, 305,
	307, 308, 309, 311, 320, 321, 322, 323, 331, 351,
	352, 371, 372, 341, 0, 0, 136, 0, 0, 517,
	519, 0, 0, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 184, 0, 0, 0, 0, 223, 0,
	0, 183, 172, 231, 229, 0, 0, 0, 274, 340,
	0, 0, 0, 0, 226, 0, 0, 536, 328, 251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 129, 0,
	479, 0, 0, 0, 0, 0, 0, 541, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 492, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 361, 278, 295,
	316, 0, 286, 500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 149, 0, 0, 0, 214, 540, 0,
	0, 0, 288, 0, 335, 202, 224, 154, 131, 147,
	165, 201, 263, 0, 310, 498, 481, 0, 0, 0,
	173, 0, 302, 271, 360, 502, 0, 301, 227, 350,
	0, 0, 359, 0, 527, 369, 374, 493, 0, 488,
	325, 186, 181, 185, 0, 138, 501, 285, 178, 219,
	0, 0, 0, 169, 0, 0, 0, 324, 347, 135,
	249, 348, 373, 156, 342, 250, 256, 166, 168, 167,
	148, 319, 346, 161, 171, 329, 306, 336, 177, 0,
	0, 0, 0, 0, 505, 503, 0, 0, 365, 506,
	313, 312, 0, 209, 0, 514, 482, 294, 518, 215,
	137, 338, 377, 155, 221, 343, 480, 196, 262, 175,
	272, 273, 193, 133, 290, 243, 244, 242, 245, 200,
	496, 520, 0, 292, 315, 345, 157, 332, 494, 495,
	497, 524, 304, 526, 532, 0, 234, 189, 192, 203,
	210, 0, 299, 333, 366, 0, 150, 139, 339, 358,
	162, 314, 317, 375, 300, 142, 356, 334, 247, 216,
	217, 140, 0, 141, 297, 182, 199, 176, 266, 0,
	198, 287, 353, 354, 174, 378, 151, 368, 144, 152,
	367, 259, 0, 258, 370, 349, 357, 248, 236, 0,
	143, 355, 246, 235, 222, 191, 205, 283, 230, 284,
	206, 254, 253, 255, 232, 237, 0, 483, 0, 330,
	363, 379, 337, 159, 0, 318, 344, 504, 291, 160,
	197, 190, 282, 257, 153, 208, 327, 220, 228, 296,
	376, 270, 303, 163, 362, 326, 187, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 533, 534,
	0, 0, 0, 170, 484, 485, 486, 487, 489, 507,
	508, 512, 513, 530, 529, 528, 531, 535, 538, 537,
	539, 490, 491, 499, 509, 510, 511, 515, 516, 525,
	521, 523, 0, 134, 145, 225, 0, 293, 195, 364,
	0, 180, 0, 0, 0, 0, 0, 132, 146, 158,
	164, 179, 188, 194, 204, 207, 211, 212, 213, 218,
	233, 238, 239, 240, 241, 260, 261, 264, 265, 268,
	269, 275, 276, 277, 279, 280, 281, 289, 522, 298,
	305, 307, 308, 309, 311, 320, 321, 322, 323, 331,
	351, 352, 371, 372, 341, 0, 0, 136, 0, 0,
	517, 519, 0, 0, 0, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 184, 0, 0, 0, 0, 223,
	0, 0, 183, 172, 231, 229, 0, 0, 0, 274,
	340, 0, 0, 0, 0, 226, 0, 0, 536, 328,
	251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1117,
	0, 1120, 0, 0, 0, 0, 0, 0, 541, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 492, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 361, 278,
	295, 316, 0, 286, 500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 149, 0, 0, 0, 214, 540,
	0, 0, 0, 288, 0, 335, 202, 224, 154, 131,
	147, 165, 201, 263, 0, 310, 498, 481, 0, 0,
	0, 173, 0, 302, 271, 360, 502, 0, 301, 227,
	350, 0, 0, 359, 0, 527, 369, 374, 493, 0,
	488, 325, 186, 181, 185, 0, 138, 501, 285, 178,
	219, 0, 0, 0, 169, 0, 0, 0, 324, 347,
	135, 249, 348, 373, 156, 342, 250, 256, 166, 168,
	167, 148, 319, 346, 161, 171, 329, 306, 336, 177,
	0, 0, 0, 0, 0, 505, 503, 0, 0, 365,
	506, 313, 312, 0, 209, 0, 514, 482, 294, 518,
	215, 137, 338, 377, 155, 221, 343, 480, 196, 262,
	175, 272, 273, 193, 133, 290, 243, 244, 242, 245,
	200, 496, 520, 0, 292, 315, 345, 157, 332, 494,
	495, 497, 524, 304, 526, 532, 0, 234, 189, 192,
	203, 210, 0, 299, 333, 366, 0, 150, 139, 339,
	358, 162, 314, 317, 375, 300, 142, 356, 334, 247,
	216, 217, 140, 0, 141, 297, 182, 199, 176, 266,
	0, 198, 287, 353, 354, 174, 378, 151, 368, 144,
	152, 367, 259, 0, 258, 370, 349, 357, 248, 236,
	0, 143, 355, 246, 235, 222, 191, 205, 283, 230,
	284, 206, 254, 253, 255, 232, 237, 0, 483, 0,
	330, 363, 379, 337, 159, 0, 318, 344, 504, 291,
	160, 197, 190, 282, 257, 153, 208, 327, 220, 228,
	296, 376, 270, 303, 163, 362, 326, 187, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 533,
	534, 0, 0, 0, 170, 484, 485, 486, 487, 489,
	507, 508, 512, 513, 530, 529, 528, 531, 535, 538,
	537, 539, 490, 491, 499, 509, 510, 511, 515, 516,
	525, 521, 523, 0, 134, 145, 225, 0, 293, 195,
	364, 0, 180, 0, 0, 0, 0, 0, 132, 146,
	158, 164, 179, 188, 194, 204, 207, 211, 212, 213,
	218, 233, 238, 239, 240, 241, 260, 261, 264, 265,
	268, 269, 275, 276, 277, 279, 280, 281, 289, 522,
	298, 305, 307, 308, 309, 311, 320, 321, 322, 323,
	331, 351, 352, 371, 372, 341, 0, 0, 136, 0,
	0, 517, 519, 0, 0, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 184, 0, 0, 0, 0,
	223, 0, 0, 183, 172, 231, 229, 0, 0, 0,
	274, 340, 0, 0, 0, 0, 226, 0, 0, 536,
	328, 251, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	733, 0, 0, 0, 0, 0, 0, 0, 0, 541,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 492, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 361,
	278, 295, 316, 0, 286, 500, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 252, 149, 0, 0, 0, 214,
	540, 0, 0, 0, 288, 0, 335, 202, 224, 154,
	131, 147, 165, 201, 263, 0, 310, 498, 481, 0,
	0, 0, 173, 0, 302, 271, 360, 502, 0, 301,
	227, 350, 0, 0, 359, 0, 527, 369, 374, 493,
	0, 488, 325, 186, 181, 185, 0, 138, 501, 285,
	178, 219, 0, 0, 0, 169, 0, 0, 0, 324,
	347, 135, 249, 348, 373, 156, 342, 250, 256, 166,
	168, 167, 148, 319, 346, 161, 171, 329, 306, 336,
	177, 0, 0, 0, 0, 0, 505, 503, 0, 0,
	365, 506, 313, 312, 0, 209, 0, 514, 482, 294,
	518, 215, 137, 338, 377, 155, 221, 343, 480, 196,
	262, 175, 272, 273, 193, 133, 290, 243, 244, 242,
	245, 200, 496, 520, 0, 292, 315, 345, 157, 332,
	494, 495, 497, 524, 304, 526, 532, 0, 234, 189,
	192, 203, 210, 0, 299, 333, 366, 0, 150, 139,
	339, 358, 162, 314, 317, 375, 300, 142, 356, 334,
	247, 216, 217, 140, 0, 141, 297, 182, 199, 176,
	266, 0, 198, 287, 353, 354, 174, 378, 151, 368,
	144, 152, 367, 259, 0, 258, 370, 349, 357, 248,
	236, 0, 143, 355, 246, 235, 222, 191, 205, 283,
	230, 284, 206, 254, 253, 255, 232, 237, 0, 483,
	0, 330, 363, 379, 337, 159, 0, 318, 344, 504,
	291, 160, 197, 190, 282, 257, 153, 208, 327, 220,
	228, 296, 376, 270, 303, 163, 362, 326, 187, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	533, 534, 0, 0, 0, 170, 484, 485, 486, 487,
	489, 507, 508, 512, 513, 530, 529, 528, 531, 535,
	538, 537, 539, 490, 491, 499, 509, 510, 511, 515,
	516, 525, 521, 523, 0, 134, 145, 225, 0, 293,
	195, 364, 0, 180, 0, 0, 0, 0, 0, 132,
	146, 158, 164, 179, 188, 194, 204, 207, 211, 212,
	213, 218, 233, 238, 239, 240, 241, 260, 261, 264,
	265, 268, 269, 275, 276, 277, 279, 280, 281, 289,
	522, 298, 305, 307, 308, 309, 311, 320, 321, 322,
	323, 331, 351, 352, 371, 372, 0, 0, 0, 136,
	0, 0, 517, 519, 449, 341, 443, 454, 437, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 460,
	0, 0, 0, 0, 0, 184, 0, 0, 444, 0,
	223, 0, 0, 183, 172, 231, 229, 0, 0, 0,
	274, 340, 0, 0, 0, 0, 226, 0, 0, 0,
	328, 251, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	458, 0, 457, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 361,
	278, 295, 316, 0, 286, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 436, 435,
	438, 0, 0, 0, 252, 149, 0, 0, 442, 214,
	0, 0, 0, 0, 288, 0, 335, 202, 224, 154,
	131, 147, 165, 201, 263, 446, 310, 0, 0, 450,
	0, 0, 173, 0, 302, 271, 360, 0, 0, 301,
	227, 350, 0, 453, 359, 0, 0, 369, 374, 0,
	0, 0, 325, 186, 181, 185, 0, 138, 0, 285,
	178, 219, 0, 0, 0, 169, 0, 0, 0, 324,
	347, 135, 249, 348, 373, 156, 342, 250, 256, 166,
	168, 167, 148, 319, 346, 161, 171, 329, 306, 336,
	177, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	365, 0, 313, 312, 0, 209, 0, 0, 0, 294,
	0, 215, 137, 338, 377, 155, 221, 343, 0, 196,
	262, 175, 272, 273, 193, 133, 290, 243, 244, 242,
	245, 200, 0, 0, 0, 463, 315, 345, 157, 332,
	439, 440, 441, 447, 448, 451, 452, 455, 234, 189,
	192, 203, 210, 0, 299, 333, 366, 0, 150, 139,
	339, 358, 162, 314, 317, 375, 300, 142, 356, 334,
	247, 216, 217, 140, 0, 141, 297, 182, 199, 176,
	266, 0, 198, 287, 353, 354, 174, 378, 151, 368,
	144, 152, 367, 259, 0, 258, 370, 349, 357, 248,
	236, 0, 143, 355, 246, 235, 222, 191, 205, 283,
	230, 284, 206, 254, 253, 255, 232, 237, 0, 0,
	0, 330, 363, 379, 337, 159, 0, 318, 344, 0,
	291, 160, 197, 190, 282, 257, 153, 208, 327, 220,
	228, 296, 376, 270, 303, 163, 362, 326, 187, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 170, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 134, 145, 225, 0, 293,
	195, 364, 0, 180, 0, 0, 0, 0, 0, 132,
	146, 158, 164, 179, 188, 194, 204, 207, 211, 212,
	213, 218, 233, 238, 239, 240, 241, 260, 261, 264,
	265, 268, 269, 275, 276, 277, 279, 280, 281, 289,
	445, 298, 305, 307, 308, 309, 311, 320, 321, 322,
	323, 331, 351, 352, 371, 372, 0, 0, 0, 136,
	449, 341, 443, 454, 437, 0, 0, 0, 0, 0,
	0, 0, 267, 0, 0, 429, 0, 0, 0, 0,
	0, 184, 0, 0, 444, 0, 223, 0, 0, 183,
	172, 231, 229, 0, 0, 0, 274, 340, 0, 0,
	0, 0, 226, 0, 0, 0, 328, 251, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 458, 0, 457, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 361, 278, 295, 316, 0,
	286, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 436, 435, 438, 0, 0, 0,
	252, 149, 0, 0, 442, 214, 0, 0, 0, 0,
	288, 0, 335, 202, 224, 154, 131, 147, 165, 201,
	263, 446, 310, 0, 0, 450, 0, 0, 173, 0,
	302, 271, 360, 0, 0, 301, 227, 350, 0, 453,
	359, 0, 0, 369, 374, 0, 0, 0, 325, 186,
	181, 185, 0, 138, 0, 285, 178, 219, 0, 0,
	0, 169, 0, 0, 0, 324, 347, 135, 249, 348,
	373, 156, 342, 250, 256, 166, 168, 167, 148, 319,
	346, 161, 171, 329, 306, 336, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 365, 0, 313, 312,
	0, 209, 0, 0, 0, 294, 0, 215, 137, 338,
	377, 155, 221, 343, 0, 196, 262, 175, 272, 273,
	193, 133, 290, 243, 244, 242, 245, 200, 0, 0,
	0, 432, 315, 345, 157, 332, 439, 440, 441, 447,
	448, 451, 452, 455, 234, 189, 192, 203, 210, 0,
	299, 333, 366, 0, 150, 139, 339, 358, 162, 314,
	317, 375, 300, 142, 356, 334, 247, 216, 217, 140,
	0, 141, 297, 182, 199, 176, 266, 0, 198, 287,
	353, 354, 174, 378, 151, 368, 144, 152, 367, 259,
	0, 258, 370, 349, 357, 248, 236, 0, 143, 355,
	246, 235, 222, 191, 205, 283, 230, 284, 206, 254,
	253, 255, 232, 237, 0, 0, 0, 330, 363, 379,
	337, 159, 0, 318, 344, 0, 291, 160, 197, 190,
	282, 257, 153, 208, 327, 220, 228, 296, 376, 270,
	303, 163, 362, 326, 187, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 134, 145, 225, 0, 293, 195, 364, 0, 180,
	0, 0, 0, 0, 0, 132, 146, 158, 164, 179,
	188, 194, 204, 207, 211, 212, 213, 218, 233, 238,
	239, 240, 241, 260, 261, 264, 265, 268, 269, 275,
	276, 277, 279, 280, 281, 289, 445, 298, 305, 307,
	308, 309, 311, 320, 321, 322, 323, 331, 351, 352,
	371, 372, 341, 0, 0, 136, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 184, 0, 0, 0, 0, 223, 0, 0,
	183, 172, 231, 229, 0, 0, 0, 274, 340, 0,
	0, 0, 0, 226, 0, 0, 0, 328, 251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 733, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 361, 278, 295, 316,
	0, 286, 0, 1130, 1129, 1139, 1140, 1132, 1133, 1134,
	1135, 1136, 1137, 1138, 1131, 0, 0, 1141, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 252, 149, 0, 0, 0, 214, 0, 0, 0,
	0, 288, 0, 335, 202, 224, 154, 131, 147, 165,
	201, 263, 0, 310, 0, 0, 0, 0, 0, 173,
	0, 302, 271, 360, 0, 0, 301, 227, 350, 0,
	0, 359, 0, 0, 369, 374, 0, 0, 0, 325,
	186, 181, 185, 0, 138, 0, 285, 178, 219, 0,
	0, 0, 169, 0, 0, 0, 324, 347, 135, 249,
	348, 373, 156, 342, 250, 256, 166, 168, 167, 148,
	319, 346, 161, 171, 329, 306, 336, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 365, 0, 313,
	312, 0, 209, 0, 0, 0, 294, 0, 215, 137,
	338, 377, 155, 221, 343, 0, 196, 262, 175, 272,
	273, 193, 133, 290, 243, 244, 242, 245, 200, 0,
	0, 0, 292, 315, 345, 157, 332, 0, 0, 0,
	0, 304, 0, 0, 0, 234, 189, 192, 203, 210,
	0, 299, 333, 366, 0, 150, 139, 339, 358, 162,
	314, 317, 375, 300, 142, 356, 334, 247, 216, 217,
	140, 0, 141, 297, 182, 199, 176, 266, 0, 198,
	287, 353, 354, 174, 378, 151, 368, 144, 152, 367,
	259, 0, 258, 370, 349, 357, 248, 236, 0, 143,
	355, 246, 235, 222, 191, 205, 283, 230, 284, 206,
	254, 253, 255, 232, 237, 0, 0, 0, 330, 363,
	379, 337, 159, 0, 318, 344, 0, 291, 160, 197,
	190, 282, 257, 153, 208, 327, 220, 228, 296, 376,
	270, 303, 163, 362, 326, 187, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 134, 145, 225, 0, 293, 195, 364, 0,
	180, 0, 0, 0, 0, 0, 132, 146, 158, 164,
	179, 188, 194, 204, 207, 211, 212, 213, 218, 233,
	238, 239, 240, 241, 260, 261, 264, 265, 268, 269,
	275, 276, 277, 279, 280, 281, 289, 0, 298, 305,
	307, 308, 309, 311, 320, 321, 322, 323, 331, 351,
	352, 371, 372, 341, 0, 0, 136, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 2860, 0, 0,
	0, 0, 0, 184, 2858, 0, 0, 0, 223, 0,
	0, 183, 172, 231, 229, 0, 0, 0, 274, 340,
	0, 0, 0, 0, 226, 0, 0, 0, 328, 251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 458, 0,
	457, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 361, 278, 295,
	316, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 149, 0, 0, 0, 214, 0, 0,
	0, 0, 288, 0, 335, 202, 224, 154, 131, 147,
	165, 201, 263, 0, 310, 0, 0, 0, 0, 0,
	173, 0, 302, 271, 360, 0, 0, 301, 227, 350,
	0, 0, 359, 0, 0, 369, 374, 0, 0, 0,
	325, 186, 181, 185, 0, 138, 0, 285, 178, 219,
	0, 0, 0, 169, 0, 0, 0, 324, 347, 135,
	249, 348, 373, 156, 342, 250, 256, 166, 168, 167,
	148, 319, 346, 161, 171, 329, 306, 336, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 365, 0,
	313, 312, 0, 209, 0, 2859, 0, 294, 0, 215,
	137, 338, 377, 155, 221, 343, 0, 196, 262, 175,
	272, 273, 193, 133, 290, 243, 244, 242, 245, 200,
	0, 0, 0, 292, 315, 345, 157, 332, 0, 0,
	0, 0, 304, 0, 0, 0, 234, 189, 192, 203,
	210, 0, 299, 333, 366, 0, 150, 139, 339, 358,
	162, 314, 317, 375, 300, 142, 356, 334, 247, 216,
	217, 140, 0, 141, 297, 182, 199, 176, 266, 0,
	198, 287, 353, 354, 174, 378, 151, 368, 144, 152,
	367, 259, 0, 258, 370, 349, 357, 248, 236, 0,
	143, 355, 246, 235, 222, 191, 205, 283, 230, 284,
	206, 254, 253, 255, 232, 237, 0, 0, 0, 330,
	363, 379, 337, 159, 0, 318, 344, 0, 291, 160,
	197, 190, 282, 257, 153, 208, 327, 220, 228, 296,
	376, 270, 303, 163, 362, 326, 187, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 170, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 134, 145, 225, 0, 293, 195, 364,
	0, 180, 0, 0, 0, 0, 0, 132, 146, 158,
	164, 179, 188, 194, 204, 207, 211, 212, 213, 218,
	233, 238, 239, 240, 241, 260, 261, 264, 265, 268,
	269, 275, 276, 277, 279, 280, 281, 289, 0, 298,
	305, 307, 308, 309, 311, 320, 321, 322, 323, 331,
	351, 352, 371, 372, 36, 341, 0, 136, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 184, 0, 0, 0, 0,
	223, 0, 0, 183, 172, 231, 229, 0, 0, 0,
	274, 340, 0, 0, 0, 1628, 226, 0, 0, 0,
	328, 251, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 82, 0, 0, 0,
	1246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 361,
	278, 295, 316, 0, 286, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 252, 149, 0, 0, 0, 214,
	0, 0, 0, 0, 288, 0, 335, 202, 224, 154,
	131, 147, 165, 201, 263, 0, 310, 0, 0, 0,
	0, 0, 173, 0, 302, 271, 360, 0, 0, 301,
	227, 350, 0, 0, 359, 0, 0, 369, 374, 0,
	0, 0, 325, 186, 181, 185, 0, 138, 0, 285,
	178, 219, 0, 0, 0, 169, 0, 0, 0, 324,
	347, 135, 249, 348, 373, 156, 342, 250, 256, 166,
	168, 167, 148, 319, 346, 161, 171, 329, 306, 336,
	177, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	365, 0, 313, 312, 0, 209, 0, 0, 0, 294,
	0, 215, 137, 338, 377, 155, 221, 343, 0, 196,
	262, 175, 272, 273, 193, 133, 290, 243, 244, 242,
	245, 200, 0, 0, 0, 292, 315, 345, 157, 332,
	0, 0, 0, 0, 304, 0, 0, 0, 234, 189,
	192, 203, 210, 0, 299, 333, 366, 0, 150, 139,
	339, 358, 162, 314, 317, 375, 300, 142, 356, 334,
	247, 216, 217, 140, 0, 141, 297, 182, 199, 176,
	266, 0, 198, 287, 353, 354, 174, 378, 151, 368,
	144, 152, 367, 259, 0, 258, 370, 349, 357, 248,
	236, 0, 143, 355, 246, 235, 222, 191, 205, 283,
	230, 284, 206, 254, 253, 255, 232, 237, 0, 0,
	0, 330, 363, 379, 337, 159, 0, 318, 344, 0,
	291, 160, 197, 190, 282, 257, 153, 208, 327, 220,
	228, 296, 376, 270, 303, 163, 362, 326, 187, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 170, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 134, 145, 225, 78, 293,
	195, 364, 0, 180, 0, 0, 0, 0, 0, 132,
	146, 158, 164, 179, 188, 194, 204, 207, 211, 212,
	213, 218, 233, 238, 239, 240, 241, 260, 261, 264,
	265, 268, 269, 275, 276, 277, 279, 280, 281, 289,
	0, 298, 305, 307, 308, 309, 311, 320, 321, 322,
	323, 331, 351, 352, 371, 372, 341, 0, 0, 136,
	0, 0, 0, 0, 0, 0, 0, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 184, 0, 0, 0,
	0, 223, 0, 0, 183, 172, 231, 229, 0, 0,
	0, 274, 340, 0, 0, 0, 0, 226, 0, 0,
	0, 328, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 733, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2055,
	361, 278, 295, 316, 0, 286, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 252, 149, 0, 0, 0,
	214, 0, 0, 0, 0, 288, 0, 335, 202, 224,
	154, 131, 147, 165, 201, 263, 0, 310, 0, 0,
	0, 0, 0, 173, 0, 302, 271, 360, 0, 0,
	301, 227, 350, 0, 0, 359, 0, 0, 369, 374,
	0, 0, 0, 325, 186, 181, 185, 0, 138, 0,
	285, 178, 219, 2056, 2057, 0, 169, 0, 0, 0,
	324, 347, 135, 249, 348, 373, 156, 342, 250, 256,
	166, 168, 167, 148, 319, 346, 161, 171, 329, 306,
	336, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 365, 0, 313, 312, 0, 209, 0, 0, 0,
	294, 0, 215, 137, 338, 377, 155, 221, 343, 0,
	196, 262, 175, 272, 273, 193, 133, 290, 243, 244,
	242, 245, 200, 0, 0, 0, 292, 315, 345, 157,
	332, 0, 0, 0, 0, 304, 0, 0, 0, 234,
	189, 192, 203, 210, 0, 299, 333, 366, 0, 150,
	139, 339, 358, 162, 314, 317, 375, 300, 142, 356,
	334, 247, 216, 217, 140, 0, 141, 297, 182, 199,
	176, 266, 0, 198, 287, 353, 354, 174, 378, 151,
	368, 144, 152, 367, 259, 0, 258, 370, 349, 357,
	248, 236, 0, 143, 355, 246, 235, 222, 191, 205,
	283, 230, 284, 206, 254, 253, 255, 232, 237, 0,
	0, 0, 330, 363, 379, 337, 159, 0, 318, 344,
	0, 291, 160, 197, 190, 282, 257, 153, 208, 327,
	220, 228, 296, 376, 270, 303, 163, 362, 326, 187,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 134, 145, 225, 0,
	293, 195, 364, 0, 180, 0, 0, 0, 0, 0,
	132, 146, 158, 164, 179, 188, 194, 204, 207, 211,
	212, 213, 218, 233, 238, 239, 240, 241, 260, 261,
	264, 265, 268, 269, 275, 276, 277, 279, 280, 281,
	289, 0, 298, 305, 307, 308, 309, 311, 320, 321,
	322, 323, 331, 351, 352, 371, 372, 341, 0, 0,
	136, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 184, 0, 0,
	0, 0, 223, 0, 0, 183, 172, 231, 229, 0,
	0, 0, 274, 340, 0, 0, 0, 0, 226, 0,
	0, 0, 328, 251, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 458, 0, 457, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 361, 278, 295, 316, 0, 286, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 252, 149, 0, 0,
	0, 214, 0, 0, 0, 0, 288, 0, 335, 202,
	224, 154, 131, 147, 165, 201, 263, 0, 310, 0,
	0, 0, 0, 0, 173, 0, 302, 271, 360, 0,
	0, 301, 227, 350, 0, 0, 359, 0, 0, 369,
	374, 0, 0, 0, 325, 186, 181, 185, 0, 138,
	0, 285, 178, 219, 0, 0, 0, 169, 0, 0,
	0, 324, 347, 135, 249, 348, 373, 156, 342, 250,
	256, 166, 168, 167, 148, 319, 346, 161, 171, 329,
	306, 336, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 313, 312, 0, 209, 0, 0,
	0, 294, 0, 215, 137, 338, 377, 155, 221, 343,
	0, 196, 262, 175, 272, 273, 193, 133, 290, 243,
	244, 242, 245, 200, 0, 0, 0, 292, 315, 345,
	157, 332, 0, 0, 0, 0, 304, 0, 0, 0,
	234, 189, 192, 203, 210, 0, 299, 333, 366, 0,
	150, 139, 339, 358, 162, 314, 317, 375, 300, 142,
	356, 334, 247, 216, 217, 140, 0, 141, 297, 182,
	199, 176, 266, 0, 198, 287, 353, 354, 174, 378,
	151, 368, 144, 152, 367, 259, 0, 258, 370, 349,
	357, 248, 236, 0, 143, 355, 246, 235, 222, 191,
	205, 283, 230, 284, 206, 254, 253, 255, 232, 237,
	0, 0, 0, 330, 363, 379, 337, 159, 0, 318,
	344, 0, 291, 160, 197, 190, 282, 257, 153, 208,
	327, 220, 228, 296, 376, 270, 303, 163, 362, 326,
	187, 0, 0, 0, 1406, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 170, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 134, 145, 225,
	0, 293, 195, 364, 0, 180, 0, 0, 0, 0,
	0, 132, 146, 158, 164, 179, 188, 194, 204, 207,
	211, 212, 213, 218, 233, 238, 239, 240, 241, 260,
	261, 264, 265, 268, 269, 275, 276, 277, 279, 280,
	281, 289, 0, 298, 305, 307, 308, 309, 311, 320,
	321, 322, 323, 331, 351, 352, 371, 372, 341, 0,
	0, 136, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 184, 1267,
	0, 0, 0, 223, 0, 0, 183, 172, 231, 229,
	0, 0, 0, 274, 340, 0, 0, 0, 0, 226,
	0, 0, 0, 328, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 733, 0, 1266, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 361, 278, 295, 316, 0, 286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 252, 149, 0,
	0, 0, 214, 0, 0, 0, 0, 288, 0, 335,
	202, 224, 154, 131, 147, 165, 201, 263, 0, 310,
	0, 0, 0, 0, 0, 173, 0, 302, 271, 360,
	0, 0, 301, 227, 350, 0, 0, 359, 0, 0,
	369, 374, 0, 0, 0, 325, 186, 181, 185, 0,
	138, 0, 285, 178, 219, 0, 0, 0, 169, 0,
	0, 0, 324, 347, 135, 249, 348, 373, 156, 342,
	250, 256, 166, 168, 167, 148, 319, 346, 161, 171,
	329, 306, 336, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 365, 0, 313, 312, 0, 209, 0,
	0, 0, 294, 0, 215, 137, 338, 377, 155, 221,
	343, 0, 196, 262, 175, 272, 273, 193, 133, 290,
	243, 244, 242, 245, 200, 0, 0, 0, 292, 315,
	345, 157, 332, 0, 0, 0, 0, 304, 0, 0,
	0, 234, 189, 192, 203, 210, 0, 299, 333, 366,
	0, 150, 139, 339, 358, 162, 314, 317, 375, 300,
	142, 356, 334, 247, 216, 217, 140, 0, 141, 297,
	182, 199, 176, 266, 0, 198, 287, 353, 354, 174,
	378, 151, 368, 144, 152, 367, 259, 0, 258, 370,
	349, 357, 248, 236, 0, 143, 355, 246, 235, 222,
	191, 205, 283, 230, 284, 206, 254, 253, 255, 232,
	237, 0, 0, 0, 330, 363, 379, 337, 159, 0,
	318, 344, 0, 291, 160, 197, 190, 282, 257, 153,
	208, 327, 220, 228, 296, 376, 270, 303, 163, 362,
	326, 187, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 134, 145,
	225, 0, 293, 195, 364, 0, 180, 0, 0, 0,
	0, 0, 132, 146, 158, 164, 179, 188, 194, 204,
	207, 211, 212, 213, 218, 233, 238, 239, 240, 241,
	260, 261, 264, 265, 268, 269, 275, 276, 277, 279,
	280, 281, 289, 0, 298, 305, 307, 308, 309, 311,
	320, 321, 322, 323, 331, 351, 352, 371, 372, 341,
	0, 0, 136, 0, 0, 0, 0, 0, 0, 0,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 184,
	0, 0, 0, 0, 223, 0, 0, 183, 172, 231,
	229, 0, 0, 0, 274, 340, 0, 0, 0, 0,
	226, 0, 0, 0, 328, 251, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 458, 0, 457, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 361, 278, 295, 316, 0, 286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 252, 149,
	0, 0, 0, 214, 0, 0, 0, 0, 288, 0,
	335, 202, 224, 154, 131, 147, 165, 201, 263, 0,
	310, 0, 0, 0, 0, 0, 173, 0, 302, 271,
	360, 0, 0, 301, 227, 350, 0, 0, 359, 0,
	0, 369, 374, 0, 0, 0, 325, 186, 181, 185,
	0, 138, 0, 285, 178, 219, 0, 0, 0, 169,
	0, 0, 0, 324, 347, 135, 249, 348, 373, 156,
	342, 250, 256, 166, 168, 167, 148, 319, 346, 161,
	171, 329, 306, 336, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 365, 0, 313, 312, 0, 209,
	0, 0, 0, 294, 0, 215, 137, 338, 377, 155,
	221, 343, 0, 196, 262, 175, 272, 273, 193, 133,
	290, 243, 244, 242, 245, 200, 0, 0, 0, 292,
	315, 345, 157, 332, 0, 0, 0, 0, 304, 0,
	0, 0, 234, 189, 192, 203, 210, 0, 299, 333,
	366, 0, 150, 139, 339, 358, 162, 314, 317, 375,
	300, 142, 356, 334, 247, 216, 217, 140, 0, 141,
	297, 182, 199, 176, 266, 0, 198, 287, 353, 354,
	174, 378, 151, 368, 144, 152, 367, 259, 0, 258,
	370, 349, 357, 248, 236, 0, 143, 355, 246, 235,
	222, 191, 205, 283, 230, 284, 206, 254, 253, 255,
	232, 237, 0, 0, 0, 330, 363, 379, 337, 159,
	0, 318, 344, 0, 291, 160, 197, 190, 282, 257,
	153, 208, 327, 220, 228, 296, 376, 270, 303, 163,
	362, 326, 187, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 170,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 134,
	145, 225, 0, 293, 195, 364, 0, 180, 0, 0,
	0, 0, 0, 132, 146, 158, 164, 179, 188, 194,
	204, 207, 211, 212, 213, 218, 233, 238, 239, 240,
	241, 260, 261, 264, 265, 268, 269, 275, 276, 277,
	279, 280, 281, 289, 0, 298, 305, 307, 308, 309,
	311, 320, 321, 322, 323, 331, 351, 352, 371, 372,
	341, 0, 0, 136, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	184, 0, 0, 0, 0, 223, 0, 0, 183, 172,
	231, 229, 0, 0, 0, 274, 340, 0, 0, 0,
	0, 226, 0, 0, 0, 328, 251, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 82, 0, 0, 0, 1246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 361, 278, 295, 316, 0, 286,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 252,
	149, 0, 0, 0, 214, 0, 0, 0, 0, 288,
	0, 335, 202, 224, 154, 131, 147, 165, 201, 263,
	0, 310, 0, 0, 0, 0, 0, 173, 0, 302,
	271, 360, 0, 0, 301, 227, 350, 0, 0, 359,
	0, 0, 369, 374, 0, 0, 0, 325, 186, 181,
	185, 0, 138, 0, 285, 178, 219, 0, 0, 0,
	169, 0, 0, 0, 324, 347, 135, 249, 348, 373,
	156, 342, 250, 256, 166, 168, 167, 148, 319, 346,
	161, 171, 329, 306, 336, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 365, 0, 313, 312, 0,
	209, 0, 0, 0, 294, 0, 215, 137, 338, 377,
	155, 221, 343, 0, 196, 262, 175, 272, 273, 193,
	133, 290, 243, 244, 242, 245, 200, 0, 0, 0,
	292, 315, 345, 157, 332, 0, 0, 0, 0, 304,
	0, 0, 0, 234, 189, 192, 203, 210, 0, 299,
	333, 366, 0, 150, 139, 339, 358, 162, 314, 317,
	375, 300, 142, 356, 334, 247, 216, 217, 140, 0,
	141, 297, 182, 199, 176, 266, 0, 198, 287, 353,
	354, 174, 378, 151, 368, 144, 152, 367, 259, 0,
	258, 370, 349, 357, 248, 236, 0, 143, 355, 246,
	235, 222, 191, 205, 283, 230, 284, 206, 254, 253,
	255, 232, 237, 0, 0, 0, 330, 363, 379, 337,
	159, 0, 318, 344, 0, 291, 160, 197, 190, 282,
	257, 153, 208, 327, 220, 228, 296, 376, 270, 303,
	163, 362, 326, 187, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	134, 145, 225, 0, 293, 195, 364, 0, 180, 0,
	0, 0, 0, 0, 132, 146, 158, 164, 179, 188,
	194, 204, 207, 211, 212, 213, 218, 233, 238, 239,
	240, 241, 260, 261, 264, 265, 268, 269, 275, 276,
	277, 279, 280, 281, 289, 0, 298, 305, 307, 308,
	309, 311, 320, 321, 322, 323, 331, 351, 352, 371,
	372, 341, 0, 0, 136, 0, 0, 0, 0, 0,
	0, 0, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 184, 0, 0, 0, 0, 223, 0, 0, 183,
	172, 231, 229, 0, 0, 0, 274, 340, 0, 0,
	0, 0, 226, 0, 0, 0, 328, 251, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 733, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 361, 278, 295, 316, 0,
	286, 0, 0, 0, 0, 0, 0, 0, 2323, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	252, 149, 0, 0, 0, 214, 0, 0, 0, 0,
	288, 0, 335, 202, 224, 154, 131, 147, 165, 201,
	263, 0, 310, 0, 0, 0, 0, 0, 173, 0,
	302, 271, 360, 0, 0, 301, 227, 350, 0, 0,
	359, 0, 0, 369, 374, 0, 0, 0, 325, 186,
	181, 185, 0, 138, 0, 285, 178, 219, 0, 0,
	0, 169, 0, 0, 0, 324, 347, 135, 249, 348,
	373, 156, 342, 250, 256, 166, 168, 167, 148, 319,
	346, 161, 171, 329, 306, 336, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 365, 0, 313, 312,
	0, 209, 0, 0, 0, 294, 0, 215, 137, 338,
	377, 155, 221, 343, 0, 196, 262, 175, 272, 273,
	193, 133, 290, 243, 244, 242, 245, 200, 0, 0,
	0, 292, 315, 345, 157, 332, 0, 0, 0, 0,
	304, 0, 0, 0, 234, 189, 192, 203, 210, 0,
	299, 333, 366, 0, 150, 139, 339, 358, 162, 314,
	317, 375, 300, 142, 356, 334, 247, 216, 217, 140,
	0, 141, 297, 182, 199, 176, 266, 0, 198, 287,
	353, 354, 174, 378, 151, 368, 144, 152, 367, 259,
	0, 258, 370, 349, 357, 248, 236, 0, 143, 355,
	246, 235, 222, 191, 205, 283, 230, 284, 206, 254,
	253, 255, 232, 237, 0, 0, 0, 330, 363, 379,
	337, 159, 0, 318, 344, 0, 291, 160, 197, 190,
	282, 257, 153, 208, 327, 220, 228, 296, 376, 270,
	303, 163, 362, 326, 187, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 134, 145, 225, 0, 293, 195, 364, 0, 180,
	0, 0, 0, 0, 0, 132, 146, 158, 164, 179,
	188, 194, 204, 207, 211, 212, 213, 218, 233, 238,
	239, 240, 241, 260, 261, 264, 265, 268, 269, 275,
	276, 277, 279, 280, 281, 289, 0, 298, 305, 307,
	308, 309, 311, 320, 321, 322, 323, 331, 351, 352,
	371, 372, 341, 0, 0, 136, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 184, 0, 0, 0, 0, 223, 0, 0,
	183, 172, 231, 229, 0, 0, 0, 274, 340, 0,
	0, 0, 0, 226, 0, 0, 0, 328, 251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 82, 0, 0, 0, 733, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 361, 278, 295, 316,
	0, 286, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 252, 149, 0, 0, 0, 214, 0, 0, 0,
	0, 288, 0, 335, 202, 224, 154, 131, 147, 165,
	201, 263, 0, 310, 0, 0, 0, 0, 0, 173,
	0, 302, 271, 360, 0, 0, 301, 227, 350, 0,
	0, 359, 0, 0, 369, 374, 0, 0, 0, 325,
	186, 181, 185, 0, 138, 0, 285, 178, 219, 0,
	0, 0, 169, 0, 0, 0, 324, 347, 135, 249,
	348, 373, 156, 342, 250, 256, 166, 168, 167, 148,
	319, 346, 161, 171, 329, 306, 336, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 365, 0, 313,
	312, 0, 209, 0, 0, 0, 294, 0, 215, 137,
	338, 377, 155, 221, 343, 0, 196, 262, 175, 272,
	273, 193, 133, 290, 243, 244, 242, 245, 200, 0,
	0, 0, 292, 315, 345, 157, 332, 0, 0, 0,
	0, 304, 0, 0, 0, 234, 189, 192, 203, 210,
	0, 299, 333, 366, 0, 150, 139, 339, 358, 162,
	314, 317, 375, 300, 142, 356, 334, 247, 216, 217,
	140, 0, 141, 297, 182, 199, 176, 266, 0, 198,
	287, 353, 354, 174, 378, 151, 368, 144, 152, 367,
	259, 0, 258, 370, 349, 357, 248, 236, 0, 143,
	355, 246, 235, 222, 191, 205, 283, 230, 284, 206,
	254, 253, 255, 232, 237, 0, 0, 0, 330, 363,
	379, 337, 159, 0, 318, 344, 0, 291, 160, 197,
	190, 282, 257, 153, 208, 327, 220, 228, 296, 376,
	270, 303, 163, 362, 326, 187, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 134, 145, 225, 0, 293, 195, 364, 0,
	180, 0, 0, 0, 0, 0, 132, 146, 158, 164,
	179, 188, 194, 204, 207, 211, 212, 213, 218, 233,
	238, 239, 240, 241, 260, 261, 264, 265, 268, 269,
	275, 276, 277, 279, 280, 281, 289, 0, 298, 305,
	307, 308, 309, 311, 320, 321, 322, 323, 331, 351,
	352, 371, 372, 341, 0, 0, 136, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 184, 0, 0, 0, 0, 223, 0,
	1830, 1831, 172, 231, 229, 0, 0, 0, 274, 340,
	0, 0, 0, 0, 226, 0, 0, 0, 328, 251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 733, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 361, 278, 295,
	316, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 149, 0, 0, 0, 214, 0, 0,
	0, 0, 288, 0, 335, 202, 224, 154, 131, 147,
	165, 201, 263, 0, 310, 0, 0, 0, 0, 0,
	173, 0, 302, 271, 360, 0, 0, 301, 227, 350,
	0, 0, 359, 0, 0, 369, 374, 0, 0, 0,
	325, 186, 181, 185, 0, 138, 0, 285, 178, 219,
	0, 0, 0, 169, 0, 0, 0, 324, 347, 135,
	249, 348, 373, 156, 342, 250, 256, 166, 168, 167,
	148, 319, 346, 161, 171, 329, 306, 336, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 365, 0,
	313, 312, 0, 209, 0, 0, 0, 294, 0, 215,
	137, 338, 377, 155, 221, 343, 0, 196, 262, 175,
	272, 273, 193, 133, 290, 243, 244, 242, 245, 200,
	0, 0, 0, 292, 315, 345, 157, 332, 0, 0,
	0, 0, 304, 0, 0, 0, 234, 189, 192, 203,
	210, 0, 299, 333, 366, 0, 150, 139, 339, 358,
	162, 314, 317, 375, 300, 142, 356, 334, 247, 216,
	217, 140, 0, 141, 297, 182, 199, 176, 266, 0,
	198, 287, 353, 354, 174, 378, 151, 368, 144, 152,
	367, 259, 0, 258, 370, 349, 357, 248, 236, 0,
	143, 355, 246, 235, 222, 191, 205, 283, 230, 284,
	206, 254, 253, 255, 232, 237, 0, 0, 0, 330,
	363, 379, 337, 159, 0, 318, 344, 0, 291, 160,
	197, 190, 282, 257, 153, 208, 327, 220, 228, 296,
	376, 270, 303, 163, 362, 326, 187, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 170, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 134, 145, 225, 0, 293, 195, 364,
	0, 180, 0, 0, 0, 0, 0, 132, 146, 158,
	164, 179, 188, 194, 204, 207, 211, 212, 213, 218,
	233, 238, 239, 240, 241, 260, 261, 264, 265, 268,
	269, 275, 276, 277, 279, 280, 281, 289, 0, 298,
	305, 307, 308, 309, 311, 320, 321, 322, 323, 331,
	351, 352, 371, 372, 341, 0, 0, 136, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 184, 0, 0, 0, 0, 223,
	0, 0, 183, 172, 231, 229, 0, 0, 0, 274,
	340, 0, 0, 0, 0, 226, 0, 0, 0, 328,
	251, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 733,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 361, 278,
	295, 316, 0, 286, 0, 0, 0, 0, 0, 0,
	0, 1794, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 149, 0, 0, 0, 214, 0,
	0, 0, 0, 288, 0, 335, 202, 224, 154, 131,
	147, 165, 201, 263, 0, 310, 0, 0, 0, 0,
	0, 173, 0, 302, 271, 360, 0, 0, 301, 227,
	350, 0, 0, 359, 0, 0, 369, 374, 0, 0,
	0, 325, 186, 181, 185, 0, 138, 0, 285, 178,
	219, 0, 0, 0, 169, 0, 0, 0, 324, 347,
	135, 249, 348, 373, 156, 342, 250, 256, 166, 168,
	167, 148, 319, 346, 161, 171, 329, 306, 336, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 365,
	0, 313, 312, 0, 209, 0, 0, 0, 294, 0,
	215, 137, 338, 377, 155, 221, 343, 0, 196, 262,
	175, 272, 273, 193, 133, 290, 243, 244, 242, 245,
	200, 0, 0, 0, 292, 315, 345, 157, 332, 0,
	0, 0, 0, 304, 0, 0, 0, 234, 189, 192,
	203, 210, 0, 299, 333, 366, 0, 150, 139, 339,
	358, 162, 314, 317, 375, 300, 142, 356, 334, 247,
	216, 217, 140, 0, 141, 297, 182, 199, 176, 266,
	0, 198, 287, 353, 354, 174, 378, 151, 368, 144,
	152, 367, 259, 0, 258, 370, 349, 357, 248, 236,
	0, 143, 355, 246, 235, 222, 191, 205, 283, 230,
	284, 206, 254, 253, 255, 232, 237, 0, 0, 0,
	330, 363, 379, 337, 159, 0, 318, 344, 0, 291,
	160, 197, 190, 282, 257, 153, 208, 327, 220, 228,
	296, 376, 270, 303, 163, 362, 326, 187, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 134, 145, 225, 0, 293, 195,
	364, 0, 180, 0, 0, 0, 0, 0, 132, 146,
	158, 164, 179, 188, 194, 204, 207, 211, 212, 213,
	218, 233, 238, 239, 240, 241, 260, 261, 264, 265,
	268, 269, 275, 276, 277, 279, 280, 281, 289, 0,
	298, 305, 307, 308, 309, 311, 320, 321, 322, 323,
	331, 351, 352, 371, 372, 341, 0, 0, 136, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 184, 0, 0, 0, 0,
	223, 0, 0, 183, 172, 231, 229, 0, 0, 0,
	274, 340, 0, 0, 0, 0, 226, 0, 0, 0,
	328, 251, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	129, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 361,
	278, 295, 316, 0, 286, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 252, 149, 0, 0, 0, 214,
	0, 0, 0, 0, 288, 0, 335, 202, 224, 154,
	131, 147, 165, 201, 263, 0, 310, 0, 0, 0,
	0, 0, 173, 0, 302, 271, 360, 0, 0, 301,
	227, 350, 0, 0, 359, 0, 0, 369, 374, 0,
	0, 0, 325, 186, 181, 185, 0, 138, 0, 285,
	178, 219, 0, 0, 0, 169, 0, 0, 0, 324,
	347, 135, 249, 348, 373, 156, 342, 250, 256, 166,
	168, 167, 148, 319, 346, 161, 171, 329, 306, 336,
	177, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	365, 0, 313, 312, 0, 209, 0, 0, 0, 294,
	0, 215, 137, 338, 377, 155, 221, 343, 0, 196,
	262, 175, 272, 273, 193, 133, 290, 243, 244, 242,
	245, 200, 0, 0, 0, 292, 315, 345, 157, 332,
	0, 0, 0, 0, 304, 0, 0, 0, 234, 189,
	192, 203, 210, 0, 299, 333, 366, 0, 150, 139,
	339, 358, 162, 314, 317, 375, 300, 142, 356, 334,
	247, 216, 217, 140, 0, 141, 297, 182, 199, 176,
	266, 0, 198, 287, 353, 354, 174, 378, 151, 368,
	144, 152, 367, 259, 0, 258, 370, 349, 357, 248,
	236, 0, 143, 355, 246, 235, 222, 191, 205, 283,
	230, 284, 206, 254, 253, 255, 232, 237, 0, 0,
	0, 330, 363, 379, 337, 159, 0, 318, 344, 0,
	291, 160, 197, 190, 282, 257, 153, 208, 327, 220,
	228, 296, 376, 270, 303, 163, 362, 326, 187, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 170, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 134, 145, 225, 0, 293,
	195, 364, 0, 180, 0, 0, 0, 0, 0, 132,
	146, 158, 164, 179, 188, 194, 204, 207, 211, 212,
	213, 218, 233, 238, 239, 240, 241, 260, 261, 264,
	265, 268, 269, 275, 276, 277, 279, 280, 281, 289,
	0, 298, 305, 307, 308, 309, 311, 320, 321, 322,
	323, 331, 351, 352, 371, 372, 341, 0, 0, 136,
	697, 0, 0, 0, 0, 0, 0, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 184, 0, 0, 0,
	0, 223, 0, 0, 183, 172, 231, 229, 0, 0,
	0, 274, 340, 0, 0, 0, 0, 226, 0, 0,
	0, 328, 251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 129, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	361, 278, 295, 316, 0, 286, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 252, 149, 0, 0, 0,
	214, 0, 0, 0, 0, 288, 0, 335, 202, 224,
	154, 131, 147, 165, 201, 263, 0, 310, 0, 0,
	0, 0, 0, 173, 0, 302, 271, 360, 0, 0,
	301, 227, 350, 0, 0, 359, 0, 0, 369, 374,
	0, 0, 0, 325, 186, 181, 185, 0, 138, 0,
	285, 178, 219, 0, 0, 0, 169, 0, 0, 0,
	324, 347, 135, 249, 348, 373, 156, 342, 250, 256,
	166, 168, 167, 148, 319, 346, 161, 171, 329, 306,
	336, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 365, 0, 313, 312, 0, 209, 0, 0, 0,
	294, 0, 215, 137, 338, 377, 155, 221, 343, 0,
	196, 262, 175, 272, 273, 193, 133, 290, 243, 244,
	242, 245, 200, 0, 0, 0, 292, 315, 345, 157,
	332, 0, 0, 0, 0, 304, 0, 0, 0, 234,
	189, 192, 203, 210, 0, 299, 333, 366, 0, 150,
	139, 339, 358, 162, 314, 317, 375, 300, 142, 356,
	334, 247, 216, 217, 140, 0, 141, 297, 182, 199,
	176, 266, 0, 198, 287, 353, 354, 174, 378, 151,
	368, 144, 152, 367, 259, 0, 258, 370, 349, 357,
	248, 236, 0, 143, 355, 246, 235, 222, 191, 205,
	283, 230, 284, 206, 254, 253, 255, 232, 237, 0,
	0, 0, 330, 363, 379, 337, 159, 0, 318, 344,
	0, 291, 160, 197, 190, 282, 257, 153, 208, 327,
	220, 228, 296, 376, 270, 303, 163, 362, 326, 187,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 134, 145, 225, 0,
	293, 195, 364, 0, 180, 0, 0, 0, 0, 0,
	132, 146, 158, 164, 179, 188, 194, 204, 207, 211,
	212, 213, 218, 233, 238, 239, 240, 241, 260, 261,
	264, 265, 268, 269, 275, 276, 277, 279, 280, 281,
	289, 0, 298, 305, 307, 308, 309, 311, 320, 321,
	322, 323, 331, 351, 352, 371, 372, 341, 0, 0,
	136, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 184, 0, 0,
	0, 0, 223, 0, 0, 183, 172, 231, 229, 0,
	0, 0, 274, 340, 0, 0, 0, 0, 226, 0,
	0, 0, 328, 251, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 129, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 361, 278, 295, 316, 0, 286, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 252, 149, 0, 126,
	0, 214, 0, 0, 0, 0, 288, 0, 335, 202,
	224, 154, 131, 147, 165, 201, 263, 0, 310, 0,
	0, 0, 0, 0, 173, 0, 302, 271, 360, 0,
	0, 301, 227, 350, 0, 0, 359, 0, 0, 369,
	374, 0, 0, 0, 325, 186, 181, 185, 0, 138,
	0, 285, 178, 219, 0, 0, 0, 169, 0, 0,
	0, 324, 347, 135, 249, 348, 373, 156, 342, 250,
	256, 166, 168, 167, 148, 319, 346, 161, 171, 329,
	306, 336, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 365, 0, 313, 312, 0, 209, 0, 0,
	0, 294, 0, 215, 137, 338, 377, 155, 221, 343,
	0, 196, 262, 175, 272, 273, 193, 133, 290, 243,
	244, 242, 245, 200, 0, 0, 0, 292, 315, 345,
	157, 332, 0, 0, 0, 0, 304, 0, 0, 0,
	234, 189, 192, 203, 210, 0, 299, 333, 366, 0,
	150, 139, 339, 358, 162, 314, 317, 375, 300, 142,
	356, 334, 247, 216, 217, 140, 0, 141, 297, 182,
	199, 176, 266, 0, 198, 287, 353, 354, 174, 378,
	151, 368, 144, 152, 367, 259, 0, 258, 370, 349,
	357, 248, 236, 0, 143, 355, 246, 235, 222, 191,
	205, 283, 230, 284, 206, 254, 253, 255, 232, 237,
	0, 0, 0, 330, 363, 379, 337, 159, 0, 318,
	344, 0, 291, 160, 197, 190, 282, 257, 153, 208,
	327, 220, 228, 296, 376, 270, 303, 163, 362, 326,
	187, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 170, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 134, 145, 225,
	0, 293, 195, 364, 0, 180, 0, 0, 0, 0,
	0, 132, 146, 158, 164, 179, 188, 194, 204, 207,
	211, 212, 213, 218, 233, 238, 239, 240, 241, 260,
	261, 264, 265, 268, 269, 275, 276, 277, 279, 280,
	281, 289, 0, 298, 305, 307, 308, 309, 311, 320,
	321, 322, 323, 331, 351, 352, 371, 372, 341, 0,
	0, 136, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 184, 0,
	0, 0, 0, 223, 0, 0, 183, 172, 231, 229,
	0, 0, 0, 274, 340, 0, 0, 0, 0, 226,
	0, 0, 0, 328, 251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 733, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 361, 278, 295, 316, 0, 286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 252, 149, 0,
	0, 0, 214, 0, 0, 0, 0, 288, 0, 335,
	202, 224, 154, 131, 147, 165, 201, 263, 0, 310,
	0, 0, 0, 0, 0, 173, 0, 302, 271, 360,
	0, 0, 301, 227, 350, 0, 0, 359, 0, 0,
	369, 374, 0, 0, 0, 325, 186, 181, 185, 0,
	138, 0, 285, 178, 219, 0, 0, 0, 169, 0,
	0, 0, 324, 347, 135, 249, 348, 373, 156, 342,
	250, 256, 166, 168, 167, 148, 319, 346, 161, 171,
	329, 306, 336, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 365, 0, 313, 312, 0, 209, 0,
	0, 0, 294, 0, 215, 137, 338, 377, 155, 221,
	343, 0, 196, 262, 175, 272, 273, 193, 133, 290,
	243, 244, 242, 245, 200, 0, 0, 0, 292, 315,
	345, 157, 332, 0, 0, 0, 0, 304, 0, 0,
	0, 234, 189, 192, 203, 210, 0, 299, 333, 366,
	0, 150, 139, 339, 358, 162, 314, 317, 375, 300,
	142, 356, 334, 247, 216, 217, 140, 0, 141, 297,
	182, 199, 176, 266, 0, 198, 287, 353, 354, 174,
	378, 151, 368, 144, 152, 367, 259, 0, 258, 370,
	349, 357, 248, 236, 0, 143, 355, 246, 235, 222,
	191, 205, 283, 230, 284, 206, 254, 253, 255, 232,
	237, 0, 0, 0, 330, 363, 379, 337, 159, 0,
	318, 344, 0, 291, 160, 197, 190, 282, 257, 153,
	208, 327, 220, 228, 296, 376, 270, 303, 163, 362,
	326, 187, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 134, 145,
	225, 0, 293, 195, 364, 0, 180, 0, 0, 0,
	0, 0, 132, 146, 158, 164, 179, 188, 194, 204,
	207, 211, 212, 213, 218, 233, 238, 239, 240, 241,
	260, 261, 264, 265, 268, 269, 275, 276, 277, 279,
	280, 281, 289, 0, 298, 305, 307, 308, 309, 311,
	320, 321, 322, 323, 331, 351, 352, 371, 372, 341,
	0, 0, 136, 0, 0, 0, 0, 0, 0, 0,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 184,
	0, 0, 0, 0, 223, 0, 0, 183, 172, 231,
	229, 0, 0, 0, 274, 340, 0, 0, 0, 0,
	226, 0, 0, 0, 328, 251, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 129, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 361, 278, 295, 316, 0, 286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 252, 149,
	0, 0, 0, 214, 0, 0, 0, 0, 288, 0,
	335, 202, 224, 154, 131, 147, 165, 201, 263, 0,
	310, 0, 0, 0, 0, 0, 173, 0, 302, 271,
	360, 0, 0, 301, 227, 350, 0, 0, 359, 0,
	0, 369, 374, 0, 0, 0, 325, 186, 181, 185,
	0, 138, 0, 285, 178, 219, 0, 0, 0, 169,
	0, 0, 0, 324, 347, 135, 249, 348, 373, 156,
	342, 250, 256, 166, 168, 167, 148, 319, 346, 161,
	171, 329, 306, 336, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 365, 0, 313, 312, 0, 209,
	0, 0, 0, 294, 0, 215, 137, 338, 377, 155,
	221, 343, 0, 196, 262, 175, 272, 273, 193, 133,
	290, 243, 244, 242, 245, 200, 0, 0, 0, 292,
	315, 345, 157, 332, 0, 0, 0, 0, 304, 0,
	0, 0, 234, 189, 192, 203, 210, 0, 299, 333,
	366, 0, 150, 139, 339, 358, 162, 314, 317, 375,
	300, 142, 356, 334, 247, 216, 217, 140, 0, 141,
	297, 182, 199, 176, 266, 0, 198, 287, 353, 354,
	174, 378, 151, 368, 144, 152, 367, 259, 0, 258,
	370, 349, 357, 248, 236, 0, 143, 355, 246, 235,
	222, 191, 205, 283, 230, 284, 206, 254, 253, 255,
	232, 237, 0, 0, 0, 330, 363, 379, 337, 159,
	0, 318, 344, 0, 291, 160, 197, 190, 282, 257,
	153, 208, 327, 220, 228, 296, 376, 270, 303, 163,
	362, 326, 187, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 170,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 134,
	145, 225, 0, 293, 195, 364, 0, 180, 0, 0,
	0, 0, 0, 132, 146, 158, 164, 179, 188, 194,
	204, 207, 211, 212, 213, 218, 233, 238, 239, 240,
	241, 260, 261, 264, 265, 268, 269, 275, 276, 277,
	279, 280, 281, 289, 0, 298, 305, 307, 308, 309,
	311, 320, 321, 322, 323, 331, 351, 352, 371, 372,
	341, 0, 0, 136, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	184, 0, 0, 0, 0, 223, 0, 0, 183, 172,
	231, 229, 0, 0, 0, 274, 340, 0, 0, 0,
	0, 226, 0, 0, 0, 328, 251, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 561, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 361, 278, 295, 316, 0, 286,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 252,
	149, 0, 0, 0, 214, 0, 0, 0, 0, 288,
	0, 335, 202, 224, 154, 131, 147, 165, 201, 263,
	0, 310, 0, 0, 0, 0, 0, 173, 0, 302,
	271, 360, 0, 0, 301, 227, 350, 0, 0, 359,
	0, 0, 369, 374, 0, 0, 0, 325, 186, 181,
	185, 0, 138, 0, 285, 178, 219, 0, 0, 0,
	169, 0, 0, 0, 324, 347, 135, 249, 348, 373,
	156, 342, 250, 256, 166, 168, 167, 148, 319, 346,
	161, 171, 329, 306, 336, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 365, 0, 313, 312, 0,
	209, 0, 0, 0, 294, 0, 215, 137, 338, 377,
	155, 221, 343, 0, 196, 262, 175, 272, 273, 193,
	133, 290, 243, 244, 242, 245, 200, 0, 0, 0,
	292, 315, 345, 157, 332, 0, 0, 0, 0, 304,
	0, 0, 0, 234, 189, 192, 203, 210, 0, 299,
	333, 366, 0, 150, 139, 339, 358, 162, 314, 317,
	375, 300, 142, 356, 334, 247, 216, 217, 140, 0,
	141, 297, 182, 199, 176, 266, 0, 198, 287, 353,
	354, 174, 378, 151, 368, 144, 152, 367, 259, 0,
	258, 370, 349, 357, 248, 236, 0, 143, 355, 246,
	235, 222, 191, 205, 283, 230, 284, 206, 254, 253,
	255, 232, 237, 0, 0, 0, 330, 363, 379, 337,
	159, 0, 318, 344, 0, 291, 160, 197, 190, 282,
	257, 153, 208, 327, 220, 228, 296, 376, 270, 303,
	163, 362, 326, 187, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	134, 145, 225, 0, 293, 195, 364, 0, 180, 0,
	0, 0, 0, 0, 132, 146, 158, 164, 179, 188,
	194, 204, 207, 211, 212, 213, 218, 233, 238, 239,
	240, 241, 260, 261, 264, 265, 268, 269, 275, 276,
	277, 279, 280, 281, 289, 0, 298, 305, 307, 308,
	309, 311, 320, 321, 322, 323, 331, 351, 352, 371,
	372, 341, 0, 0, 136, 0, 0, 0, 0, 0,
	0, 0, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 184, 0, 0, 0, 0, 223, 0, 0, 183,
	172, 231, 229, 0, 0, 0, 274, 340, 0, 0,
	0, 0, 226, 0, 0, 0, 328, 251, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 561, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 361, 278, 295, 316, 0,
	286, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	252, 149, 0, 0, 0, 214, 0, 0, 0, 0,
	288, 0, 335, 202, 224, 154, 131, 147, 165, 201,
	263, 0, 310, 0, 0, 0, 0, 0, 173, 0,
	302, 271, 360, 0, 0, 301, 227, 350, 0, 0,
	359, 0, 0, 369, 374, 0, 0, 0, 325, 186,
	181, 185, 0, 138, 0, 285, 178, 219, 0, 0,
	0, 169, 0, 0, 0, 324, 347, 135, 249, 348,
	373, 156, 342, 250, 256, 166, 168, 167, 148, 319,
	346, 161, 171, 329, 306, 336, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 365, 0, 313, 312,
	0, 209, 0, 0, 0, 294, 0, 215, 137, 338,
	377, 155, 221, 343, 0, 196, 262, 175, 272, 273,
	193, 133, 290, 243, 244, 242, 245, 200, 0, 0,
	0, 292, 315, 345, 157, 332, 0, 0, 0, 0,
	304, 0, 0, 0, 234, 189, 192, 203, 210, 0,
	299, 333, 366, 0, 150, 139, 339, 358, 162, 314,
	317, 375, 300, 142, 356, 334, 247, 216, 217, 140,
	0, 141, 297, 182, 199, 176, 266, 0, 198, 287,
	353, 354, 174, 378, 151, 368, 144, 717, 367, 259,
	0, 258, 370, 349, 357, 248, 236, 0, 143, 355,
	246, 235, 222, 191, 205, 283, 230, 284, 206, 254,
	253, 255, 713, 237, 0, 0, 0, 330, 363, 379,
	337, 159, 0, 318, 344, 0, 291, 160, 197, 190,
	282, 718, 716, 707, 708, 220, 228, 296, 376, 270,
	303, 163, 362, 326, 187, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 134, 145, 225, 0, 293, 195, 364, 0, 180,
	0, 0, 0, 0, 0, 132, 146, 158, 164, 179,
	188, 194, 204, 207, 211, 212, 213, 218, 233, 238,
	239, 240, 241, 260, 261, 264, 265, 268, 269, 275,
	276, 277, 279, 714, 715, 289, 0, 298, 305, 307,
	308, 309, 311, 320, 321, 322, 323, 331, 351, 352,
	371, 372, 341, 0, 0, 136, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 184, 0, 0, 0, 0, 223, 0, 0,
	183, 172, 231, 229, 0, 0, 0, 274, 340, 0,
	0, 0, 0, 226, 0, 0, 0, 328, 251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 561, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 361, 278, 295, 316,
	0, 286, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 252, 149, 0, 0, 0, 214, 0, 0, 0,
	0, 288, 0, 335, 202, 224, 154, 131, 147, 165,
	201, 263, 0, 310, 0, 0, 0, 0, 0, 173,
	0, 302, 271, 360, 0, 0, 301, 227, 350, 0,
	0, 359, 0, 0, 369, 374, 0, 0, 0, 325,
	186, 181, 185, 0, 138, 0, 285, 178, 219, 0,
	0, 0, 169, 0, 0, 0, 324, 347, 135, 249,
	348, 373, 156, 342, 250, 256, 166, 168, 167, 148,
	319, 346, 161, 171, 329, 306, 336, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 365, 0, 313,
	312, 0, 209, 0, 0, 0, 294, 0, 215, 137,
	338, 377, 155, 221, 343, 0, 196, 262, 175, 272,
	273, 193, 133, 290, 243, 244, 242, 245, 200, 0,
	0, 0, 292, 315, 345, 157, 332, 0, 0, 0,
	0, 304, 0, 0, 0, 234, 189, 192, 203, 210,
	0, 299, 333, 366, 0, 150, 139, 339, 1261, 162,
	314, 317, 375, 300, 142, 356, 334, 247, 216, 217,
	140, 0, 141, 297, 182, 199, 176, 266, 0, 198,
	287, 353, 354, 174, 378, 151, 368, 144, 152, 367,
	259, 0, 258, 370, 349, 357, 248, 236, 0, 143,
	355, 246, 235, 222, 191, 205, 283, 230, 284, 206,
	254, 253, 255, 232, 237, 0, 0, 0, 330, 363,
	379, 337, 159, 0, 318, 344, 0, 291, 160, 197,
	190, 282, 257, 153, 208, 327, 220, 228, 296, 376,
	270, 303, 163, 362, 326, 187, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 134, 145, 225, 0, 293, 195, 364, 0,
	180, 0, 0, 0, 0, 0, 132, 146, 158, 164,
	179, 188, 194, 204, 207, 211, 212, 213, 218, 233,
	238, 239, 240, 241, 260, 261, 264, 265, 268, 269,
	275, 276, 277, 279, 280, 281, 289, 0, 298, 305,
	307, 308, 309, 311, 320, 321, 322, 323, 331, 351,
	352, 371, 372, 341, 0, 0, 136, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 184, 0, 0, 0, 0, 223, 0,
	0, 183, 172, 231, 229, 0, 0, 0, 274, 340,
	0, 0, 0, 0, 226, 0, 0, 0, 328, 251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 561, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 361, 278, 295,
	316, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 149, 0, 0, 0, 214, 0, 0,
	0, 0, 288, 0, 335, 202, 224, 154, 131, 147,
	165, 201, 263, 0, 310, 0, 0, 0, 0, 0,
	173, 0, 302, 271, 360, 0, 0, 301, 227, 350,
	0, 0, 359, 0, 0, 369, 374, 0, 0, 0,
	325, 186, 181, 185, 0, 138, 0, 285, 178, 219,
	0, 0, 0, 169, 0, 0, 0, 324, 347, 135,
	249, 348, 373, 156, 342, 250, 256, 166, 168, 167,
	148, 319, 346, 161, 171, 329, 306, 336, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 365, 0,
	313, 312, 0, 209, 0, 0, 0, 294, 0, 215,
	137, 338, 377, 155, 221, 343, 0, 196, 262, 175,
	272, 273, 193, 133, 290, 243, 244, 242, 245, 200,
	0, 0, 0, 292, 315, 345, 157, 332, 0, 0,
	0, 0, 304, 0, 0, 0, 234, 189, 192, 203,
	210, 0, 299, 333, 366, 0, 150, 139, 339, 704,
	162, 314, 317, 375, 300, 142, 356, 334, 247, 216,
	217, 140, 0, 141, 297, 182, 199, 176, 266, 0,
	198, 287, 353, 354, 174, 378, 151, 368, 144, 717,
	367, 259, 0, 258, 370, 349, 357, 248, 236, 0,
	143, 355, 246, 235, 222, 191, 205, 283, 230, 284,
	206, 254, 253, 255, 713, 237, 0, 0, 0, 330,
	363, 379, 337, 159, 0, 318, 344, 536, 291, 160,
	197, 190, 282, 718, 716, 707, 708, 220, 228, 296,
	376, 270, 303, 163, 362, 326, 187, 0, 1334, 0,
	0, 0, 0, 0, 0, 0, 0, 541, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 170, 0, 492, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 134, 145, 225, 0, 293, 195, 364,
	0, 180, 0, 0, 0, 0, 0, 132, 146, 158,
	164, 179, 188, 194, 204, 207, 211, 212, 213, 218,
	233, 238, 239, 240, 241, 260, 261, 264, 265, 268,
	269, 275, 276, 277, 279, 714, 715, 289, 0, 298,
	305, 307, 308, 309, 311, 320, 321, 322, 323, 331,
	351, 352, 371, 372, 0, 0, 0, 136, 540, 0,
	0, 0, 0, 0, 0, 0, 0, 1276, 0, 0,
	0, 0, 0, 0, 0, 498, 481, 0, 0, 0,
	0, 0, 0, 0, 0, 502, 0, 0, 0, 0,
	0, 0, 0, 0, 527, 0, 0, 493, 0, 488,
	0, 0, 0, 0, 0, 0, 501, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 536, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 505, 503, 0, 0, 0, 506,
	0, 0, 2337, 0, 0, 514, 482, 0, 518, 0,
	0, 541, 0, 0, 0, 0, 480, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 492,
	496, 520, 0, 0, 0, 0, 0, 0, 494, 495,
	497, 524, 0, 526, 532, 0, 0, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 483, 0, 0,
	0, 0, 540, 0, 0, 0, 0, 504, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 498,
	481, 0, 0, 0, 0, 0, 0, 0, 0, 502,
	0, 0, 0, 0, 0, 0, 0, 0, 527, 0,
	0, 493, 0, 488, 0, 0, 0, 0, 533, 534,
	501, 0, 0, 0, 484, 485, 486, 487, 489, 507,
	508, 512, 513, 530, 529, 528, 531, 535, 538, 537,
	539, 490, 491, 499, 509, 510, 511, 515, 516, 525,
	521, 523, 0, 0, 0, 0, 0, 0, 505, 503,
	0, 0, 0, 506, 0, 0, 0, 0, 0, 514,
	482, 0, 518, 0, 0, 0, 0, 0, 0, 0,
	480, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 496, 520, 0, 0, 522, 0,
	0, 0, 494, 495, 497, 524, 0, 526, 532, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	517, 519, 0, 0, 0, 0, 536, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2346, 0, 0,
	0, 0, 0, 0, 0, 0, 541, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 492, 0, 0, 0, 0, 0,
	0, 483, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 504, 500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 533, 534, 0, 0, 0, 0, 484, 485,
	486, 487, 489, 507, 508, 512, 513, 530, 529, 528,
	531, 535, 538, 537, 539, 490, 491, 499, 509, 510,
	511, 515, 516, 525, 521, 523, 0, 540, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 498, 481, 0, 0, 0, 0,
	0, 0, 0, 0, 502, 0, 0, 0, 0, 0,
	0, 0, 0, 527, 0, 0, 493, 0, 488, 0,
	0, 0, 522, 0, 0, 501, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 517, 519, 0, 0, 0, 0,
	536, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 505, 503, 0, 0, 0, 506, 0,
	0, 2344, 0, 0, 514, 482, 0, 518, 0, 0,
	541, 0, 0, 0, 0, 480, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 492, 496,
	520, 0, 0, 0, 0, 0, 0, 494, 495, 497,
	524, 0, 526, 532, 0, 0, 500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 483, 0, 0, 0,
	0, 540, 0, 0, 0, 0, 504, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 498, 481,
	0, 0, 0, 0, 0, 0, 0, 0, 502, 0,
	0, 0, 0, 0, 0, 0, 0, 527, 0, 0,
	493, 0, 488, 0, 0, 0, 0, 533, 534, 501,
	0, 0, 0, 484, 485, 486, 487, 489, 507, 508,
	512, 513, 530, 529, 528, 531, 535, 538, 537, 539,
	490, 491, 499, 509, 510, 511, 515, 516, 525, 521,
	523, 0, 0, 0, 0, 0, 0, 505, 503, 0,
	0, 0, 506, 0, 0, 0, 0, 0, 514, 482,
	0, 518, 0, 0, 0, 0, 0, 0, 0, 480,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 496, 520, 0, 0, 522, 0, 0,
	0, 494, 495, 497, 524, 0, 526, 532, 36, 0,
	71, 39, 40, 0, 0, 0, 0, 0, 0, 517,
	519, 0, 59, 0, 0, 0, 0, 0, 77, 0,
	36, 41, 71, 39, 40, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 59, 0, 0, 0, 0, 0,
	77, 0, 0, 41, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	82, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	483, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	504, 0, 82, 0, 0, 0, 2754, 0, 0, 0,
	0, 2976, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2754, 0,
	0, 0, 0, 2972, 0, 0, 0, 0, 0, 0,
	0, 533, 534, 0, 0, 0, 0, 484, 485, 486,
	487, 489, 507, 508, 512, 513, 530, 529, 528, 531,
	535, 538, 537, 539, 490, 491, 499, 509, 510, 511,
	515, 516, 525, 521, 523, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 43, 73, 46, 45, 48, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2755, 0, 0,
	0, 0, 0, 0, 43, 73, 46, 45, 48, 0,
	0, 522, 0, 49, 76, 75, 0, 0, 0, 2755,
	47, 0, 0, 0, 0, 36, 0, 71, 39, 40,
	0, 0, 0, 517, 519, 49, 76, 75, 0, 59,
	0, 0, 47, 0, 0, 77, 0, 36, 41, 71,
	39, 40, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 59, 0, 0, 0, 0, 0, 77, 0, 0,
	41, 57, 58, 0, 2756, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 82, 66, 0,
	67, 0, 0, 57, 58, 0, 2756, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 82,
	66, 0, 67, 2754, 0, 68, 0, 0, 2966, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2754, 0, 68, 0, 0,
	2952, 0, 0, 2757, 74, 0, 53, 54, 61, 0,
	62, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2757, 74, 0, 53, 54,
	61, 0, 62, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 43,
	73, 46, 45, 48, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2755, 0, 0, 0, 0, 0,
	0, 43, 73, 46, 45, 48, 0, 0, 0, 0,
	49, 76, 75, 0, 0, 0, 2755, 47, 0, 0,
	0, 0, 0, 72, 0, 0, 0, 36, 0, 71,
	39, 40, 49, 76, 75, 0, 0, 0, 0, 47,
	0, 59, 0, 0, 0, 72, 0, 77, 0, 0,
	41, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 57, 58,
	0, 2756, 78, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 66, 0, 67, 0, 82,
	57, 58, 0, 2756, 78, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 66, 0, 67,
	0, 0, 68, 0, 0, 2754, 0, 0, 0, 0,
	2884, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 68, 0, 0, 0, 0, 0,
	2757, 74, 0, 53, 54, 61, 0, 62, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2757, 74, 0, 53, 54, 61, 36, 62,
	71, 39, 40, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 59, 0, 0, 0, 0, 0, 77, 0,
	0, 41, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 43, 73, 46, 45, 48, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2755, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	82, 0, 49, 76, 75, 0, 0, 0, 0, 47,
	72, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2754, 0, 0, 0,
	0, 0, 72, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 78,
	57, 58, 0, 2756, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 66, 0, 67,
	0, 78, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 68, 0, 0, 0, 0, 0,
	0, 0, 43, 73, 46, 45, 48, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2755, 0, 0,
	0, 0, 2757, 74, 0, 53, 54, 61, 0, 62,
	0, 0, 0, 49, 76, 75, 0, 0, 0, 0,
	47, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 57, 58, 0, 2756, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 66, 0,
	67, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 72, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 68, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2757, 74, 0, 53, 54, 61, 0,
	62, 78, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 72, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 78,
}

var yyPact = [...]int32{
	5392, -1000, -361, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1923, -1000, -1000, -1000, -1000,
	-1000, -1000, 993, 229, -1000, 243, 139, 33550, 597, 2916,
	34632, -1000, -1000, -1000, 175, 535, 34632, 444, 449, 1395,
	1814, 1393, 20, -73, -84, 136, 25434, 24888, -7, 1695,
	-1000, -1000, -1000, 537, 29, -1000, -1000, -1000, 22174, -1000,
	1985, 209, -1000, -1000, 1905, 1921, 1737, -1000, 14600, 537,
	537, 33009, 36796, -1000, 1983, 34632, 12975, -1000, 589, 584,
	-192, 526, 526, 238, 526, 526, 594, -1000, 237, 920,
	-1000, -1000, -1000, -1000, 918, 34632, 29222, 529, 34091, 529,
	529, 529, 529, 529, 529, 529, 34632, -1000, 659, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	34632, 1391, 1846, 1007, 146, -1000, -1000, -1000, 959, -1000,
	326, 324, 321, 313, 88, 1012, 1902, -1000, 1630, 1905,
	1905, -1000, -1000, -1000, -1000, -1000, -1000, 732, 309, 573,
	213, 209, 912, 1873, 1845, 1842, 1253, 1840, 562, 1839,
	1672, -50, -1000, 1387, 34632, -1000, -1000, 1209, 1203, 1703,
	1556, 677, 1701, -1000, -1000, 325, 474, 1663, 426, 1663,
	1663, 1663, 1663, 1663, -85, 1663, 1663, 1663, 62, 1663,
	149, 1663, 1663, 1663, 1663, 1663, 1398, -1000, -1000, -1000,
	390, 1555, 1601, 1699, 437, -1000, -1000, -1000, -1000, -1000,
	592, -1000, -143, 1617, 23256, -1000, 1630, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1695, 1887, 1365, -1000, 1843, 1083, 17846, 1791,
	-1000, -1000, 1075, 1968, -1000, 20551, 657, -1000, 17846, 3159,
	1630, -1000, -1000, 1630, -1000, -1000, -1000, 610, -1000, -1000,
	20010, 20010, 20010, 20010, 20010, 20010, 20010, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1630, 1630, 1630, 1630, 1630, 1630, 1630, 1630, 1630,
	1630, 1630, 1630, 1630, 1630, 1630, 1630, 1630, 1630, 1630,
	1630, 1630, 1630, 1630, 1630, 1630, 1630, 1630, 1630, 1630,
	1630, 1630, 1630, -1000, -1000, 1630, -1000, 14059, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1630, 1630, 1630, 1630, 1630, 1630, 1630, 1630, 1630, 1630,
	17846, 1630, 1630, 1630, 1630, 1630, 1630, 1630, 1630, 1630,
	1630, 1630, 1630, 1630, 1630, 32468, 29763, 34632, 1585, 1538,
	-1000, -1000, 656, 1628, -110, 36255, -1000, -1000, -1000, -1000,
	35173, 28681, 884, -1000, -1000, -1000, -1000, 1837, -1000, -1000,
	655, -1000, 1923, -1000, 1523, 378, -1000, 534, 37156, -1000,
	-1000, -1000, 1669, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 34091, 34632, 227, 1385, 971, 1384, 35173, 35173,
	-1000, 197, 29222, 29222, 526, 255, 29222, 241, 1625, 572,
	1622, 570, 1117, 34632, 1863, 1698, 34632, 1374, 1369, 35173,
	35173, 29222, 29222, -1000, 12424, 1620, -1000, 1007, -1000, 3467,
	17846, 526, 526, 34632, 34632, 34632, 34632, 34632, -1000, -1000,
	1007, 1007, 1007, 1007, 947, 1967, 947, -1000, 947, -1000,
	-1000, 17846, -1000, 20010, 28140, 744, -1000, -1000, 34632, -1000,
	1368, 293, -1000, -1000, -1000, -1000, -1000, -1000, 1366, -1000,
	1818, 562, 562, -1000, 1298, 562, 1612, -1000, 882, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 562, -1000, 17305, -350, -1000, -1000, 1619, -1000, 282,
	-1000, -1000, 362, 362, 208, 29222, 29222, 29222, -1000, 1663,
	34091, -1000, 1663, 1663, 1663, -125, 1663, 1663, -1000, -1000,
	1663, -1000, -1000, -1000, -1000, -1000, 1663, -1000, -1000, -1000,
	1663, 1663, -1000, 1663, 1663, -1000, -1000, -1000, -1000, -1000,
	29222, 362, 148, 1618, 362, 29222, 29222, -1000, 50, 49,
	48, 46, -1000, -1000, -1000, -1000, 45, 44, -1000, -1000,
	1737, 34632, -132, 23256, 1617, 1883, 10771, -1000, -1000, 209,
	-1000, -1000, -1000, -1000, 1010, 1976, 857, 1602, -1000, -1000,
	1616, -1000, 1359, 639, 1092, 1761, -1000, -1000, -1000, 34632,
	-1000, 17846, 17846, 17846, 1185, -1000, 23797, -1000, -1000, -1000,
	-1000, 10220, 866, 20010, 1080, 921, 20010, 20010, 20010, 20010,
	20010, 20010, 20010, 20010, 20010, 20010, 20010, 20010, 20010, 20010,
	20010, 1190, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1364, -1000, 209, 1441, 1441, 724, 724, 724, 724, 724,
	724, 25975, 1879, 15682, 15682, 15682, 1879, 1365, 1365, 15682,
	15682, 15682, 15682, 15682, 15682, 15682, 15682, 1879, 1879, 15682,
	1365, 1365, 1365, 1365, 15682, 15682, 15682, 15682, 34091, 34091,
	1879, 15682, 15682, 15682, 1879, 1365, 1521, 1363, 14059, 15682,
	15682, 1365, 17846, 17846, 16764, 16223, 18387, 15682, 1879, 933,
	1363, 35173, -1000, -1000, 19469, -1000, -1000, -1000, -1000, -1000,
	1365, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 15682,
	15682, 15682, 15682, 778, 34632, -1000, 1566, 1664, -1000, -1000,
	-1000, 1881, 27058, -1000, 21633, -1000, 1630, 778, 1533, 29763,
	34632, -1000, -1000, 29763, 34632, 9669, 35714, 1603, -1000, -134,
	-141, -110, -1000, -1000, 712, -1000, -1000, -1000, 13517, -1000,
	11322, 1905, 6914, 11873, -1000, 37156, 1669, -1000, -60, -1000,
	-1000, -1000, 1644, -1000, 1644, 285, -15, 1644, 1644, 1644,
	1644, 1644, -23, -23, -23, -23, -22, -1000, -1000, -1000,
	-1000, -1000, 1667, 1666, -1000, 1644, 1644, 1644, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1657, 299, 1646,
	1646, 1646, 1646, 1646, 365, 365, -1000, 17846, 1674, 1880,
	563, 255, 1850, 1862, 1850, 300, -1000, 638, 1665, -1000,
	637, 272, 1571, -1000, 158, 1442, 34632, -1000, -1000, -1000,
	-1000, -1000, 34632, 34632, 29222, 29222, 29222, 514, -1000, 34632,
	1615, -1000, -1000, -1000, -1000, -1000, 1570, -1000, 1442, -1000,
	-1000, -1000, -1000, -1000, 1296, 1363, 1358, 1345, 1873, -1000,
	-1000, -1000, 954, -1000, -1000, -1000, -1000, 1007, 34632, 34632,
	34632, 1873, 1007, 1363, 953, 1675, 1630, 1365, -1000, -1000,
	-1000, 1338, -1000, 20010, 1612, 1612, -1000, 1612, 562, 1441,
	1612, -1000, 1518, 1004, 1288, 34632, -1000, 23256, -51, -1000,
	-174, 31927, -1000, -1000, -1000, 31927, -1000, 62, 163, -1000,
	568, -1000, 1516, -1000, -1000, -1000, -1000, 1663, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 31927, 97, 140,
	31927, 1570, 1964, -1000, -1000, -1000, -1000, 1901, -1000, 1879,
	268, -1000, -1000, -1000, 1630, 1456, 631, 1365, -1000, 31386,
	-1000, 1757, 1083, 1083, 17846, -1000, -1000, -1000, 11322, 1891,
	-1000, 1772, 1771, 1721, -1000, -1000, 866, 908, 944, -1000,
	-1000, 1238, -1000, -1000, -1000, -1000, 630, 1630, -1000, 3729,
	-1000, -1000, -1000, -1000, 1080, 20010, 20010, 20010, 953, 3729,
	3593, 917, 2714, 724, 867, 867, 710, 710, 710, 710,
	710, 1188, 1188, -1000, -1000, -1000, 1365, -1000, -1000, -1000,
	15682, 1509, -1000, -1000, 1363, 629, 1509, 1509, 15682, -211,
	-211, 1509, 1365, 1509, 1509, 1509, 1509, 1365, 1509, 15682,
	15682, 1509, -211, -211, -211, -211, 1509, 1509, 1509, 1509,
	1607, 1606, 15682, 1509, 1509, 1509, 15682, -1000, 17846, -1000,
	1365, 1509, 1509, -1000, 1150, 1399, 830, 1963, 1509, 784,
	1962, 1509, 1410, 20010, 20010, 20010, 1509, 15682, 1005, -1000,
	17846, 1365, -1000, 2658, 1509, 1365, 1605, 1509, 1509, 219,
	1630, -1000, 11322, 29763, 29763, 29763, 29763, 29763, -1000, 1734,
	1729, -1000, 1726, 1716, 1740, 23256, 1514, 1365, 302, 27058,
	-1000, 1630, -1000, 22715, 668, 588, 587, 559, 15682, 1932,
	29763, 1586, -1000, 1586, -1000, 628, -1000, -1000, 35173, -110,
	-93, -1000, -1000, 1603, -1000, 1207, -1000, -1000, 1363, -1000,
	626, 1843, 1600, 6363, -1000, -1000, -1000, -1000, 378, -1000,
	-1000, -1000, 1662, 5053, -1000, 1790, 749, 749, 745, 1308,
	1783, -1000, -1000, 161, -63, -1000, -1000, -1000, 1198, -23,
	-23, 1644, 1644, 284, 1644, -1000, -23, -1000, -1000, -1000,
	712, 1835, 712, 712, 712, 712, -23, 1287, 1287, -1000,
	-1000, -1000, -1000, 1197, -1000, 1657, -1000, 1191, -1000, -1000,
	-1000, -1000, -1000, -1000, 1355, 1685, 34091, -1000, 34632, -1000,
	1850, -1000, -1000, -1000, 150, -1000, -1000, -1000, 1943, -1000,
	-1000, 34091, 27599, 34091, -1000, -1000, 68, 29222, 151, 403,
	214, -1000, 567, -1000, 560, -1000, -1000, -1000, -1000, -1000,
	-1000, 34632, 29222, -1000, -1000, -1000, -1000, 1932, 1336, 1334,
	-1000, -1000, -1000, 947, 1007, -1000, -1000, 20010, 29222, -1000,
	316, -1000, 3729, -1000, -1000, -1000, 778, 591, -1000, -1000,
	-78, -1000, -1000, 557, 624, 622, 554, -1000, 78, 29222,
	-1000, 34091, -1000, 1958, 1957, 96, 1955, 29222, -1000, 33,
	1599, -1000, 767, 746, 820, 377, 377, -1000, 876, 377,
	1823, 1821, 769, -1000, 223, -1000, 10771, 10771, -1000, 1598,
	1283, 1281, -1000, 1749, -1000, -1000, -1000, 34632, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 9118, 15682, -1000,
	953, 3729, 3275, -1000, 20010, -1000, 1509, 15682, -211, 8567,
	-211, -211, 1509, -1000, 30845, -1000, -1000, -211, -1000, -211,
	-211, -211, -211, -211, 1509, 1509, -211, -1000, -1000, -1000,
	-1000, -211, -211, -211, -211, 20010, 20010, 1509, -211, -211,
	-211, 1365, 1363, -1000, -1000, -1000, 443, 1190, 443, 20010,
	20010, -1000, 20010, 20010, -1000, -1000, 20010, 3637, 3550, 3424,
	-251, 1594, 927, -1000, 17846, 1279, -1000, -1000, -1000, -1000,
	-1000, -1000, 1684, 11322, 1630, 7465, -1000, 34091, 1592, -1000,
	879, 878, 1664, 1650, 1683, 1488, -1000, -1000, -1000, -1000,
	1728, -1000, 1725, -1000, -1000, 1638, -1000, -1000, 1591, 1630,
	34091, 20010, 668, -1000, 1630, 1630, 1630, 1365, 1923, 17846,
	1586, -1000, -1000, 735, -1000, -1000, -152, -149, -1000, -1000,
	-1000, 10771, -1000, 6914, -1000, 6914, -1000, 24338, 376, 1792,
	364, 1308, 1308, -1000, -1000, 1308, -1000, 1308, -1000, -1000,
	-1000, 1647, -1000, 1030, -1000, -1000, -1000, -1000, -1000, 1630,
	-353, 1184, 20010, 1975, -1000, 1788, -1000, 1786, 1784, 1276,
	-1000, -1000, 1482, 712, 712, -23, -1000, -1000, 1644, -1000,
	712, -1000, 808, -1000, -1000, -1000, -1000, 712, 1507, -1000,
	1504, 1576, -1000, 1471, 118, 34632, -1000, -1000, 1876, -1000,
	-1000, -1000, 1834, 876, 876, 876, 1682, -1000, -1000, -1000,
	-1000, 1473, 1574, -1000, 534, 34091, 34091, 34091, -1000, -266,
	169, -1000, 29222, 120, 158, 425, 1329, 34632, 29222, -1000,
	-1000, -1000, -1000, -1000, 1873, -1000, 3729, 1442, -1000, -1000,
	-23, 34632, -1000, 29222, 734, 30304, 29222, 93, 162, -1000,
	29222, 29222, 1948, 29222, 1570, 1274, 268, 4757, 1308, 586,
	-1000, -1000, 379, -1000, 4155, 1783, 1322, 37879, 37665, 34091,
	1782, 1781, 1321, 34632, 34091, -1000, -1000, 37370, 1319, 17846,
	-1000, 34091, -1000, -1000, 34091, 620, -1000, 34091, -1000, -1000,
	-1000, -1000, 1023, 14600, -1000, -1000, 1365, -1000, 20010, 3729,
	-211, -1000, -1000, -1000, -1000, 619, -1000, -1000, -211, -1000,
	-1000, 1318, -1000, -1000, -1000, -1000, -1000, -1000, -211, -211,
	-1000, -1000, -1000, -1000, -1000, 3235, 1055, -211, -1000, -1000,
	-1000, -1000, 1365, 1644, 1644, -1000, 1644, 1646, -1000, 1644,
	7, 1644, 0, 1365, 1365, 3220, 3055, 3031, 1008, 2658,
	20010, 20010, 20010, 1630, -205, -1000, 1363, 17846, -1000, 1858,
	1528, 1568, -1000, -1000, 15141, 1365, 1770, 1456, -1000, 22174,
	1452, -1000, 1923, 11322, 17846, 17846, -1000, -1000, 17846, 1645,
	-1000, 17846, -1000, -1000, -1000, -1000, 34091, 290, -1000, 17846,
	1452, 1086, -1000, 34091, 34091, 34091, -1000, 1905, 1363, -1000,
	-1000, -1000, -1000, 6363, -1000, 1440, -1000, 1644, 1644, 1778,
	-1000, 749, -1000, -1000, -1000, -1000, -1000, 34091, -1000, 20010,
	1872, -1000, 3729, -137, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 712, -1000, -1000, -1000, -1000, -1000, -23, 1273, -23,
	1181, -1000, 1162, -1000, -1000, -305, 1642, 209, -1000, 876,
	805, 804, 1272, 34632, 156, 27599, -1000, 534, 534, 534,
	94, 128, -1000, 998, -1000, -1000, -1000, 1261, 1260, 1257,
	1442, 159, 994, 130, -1000, 1868, -1000, -1000, 1007, -90,
	-1000, 162, -1000, -1000, -1000, 162, -1000, -1000, 134, 1570,
	1570, 29222, 1570, -1000, -1000, 37370, 349, 534, 534, 1674,
	749, 1777, 364, -1000, -1000, -1000, -1000, -1000, -1000, 1315,
	-1000, 719, -1000, 544, 349, 37370, 1363, 758, 996, 10771,
	-1000, 1938, -1000, -1000, -1000, 3729, -1000, 8016, -1000, 763,
	-1000, -1000, -1000, 20010, 20010, -1000, -1000, -1000, 287, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 20010, 20010, 20010,
	20010, -1000, 2658, 2658, 2658, 20010, 1365, 1255, 1363, 1775,
	-1000, 1630, -1000, -1000, 1630, 222, -1000, 34091, 1905, -1000,
	1363, 1363, 1363, 34091, 1363, 1429, -1000, 1630, 21092, -1000,
	23256, 1427, 1427, 1427, -1000, 660, 24338, 1857, 1857, 1308,
	1308, 1425, 2658, 1630, -1000, 1630, 1630, -1000, 712, -1000,
	712, 1435, 1433, -1000, 24338, -1000, -1000, 766, -1000, -1000,
	-1000, -1000, -1000, 1900, -1000, 156, -1000, 1252, 242, 260,
	-1000, 235, 233, 220, 202, 194, -1000, -1000, -1000, -1000,
	366, 94, -1000, -81, 1155, 869, 1827, 128, -1000, 1151,
	1145, 1125, 1116, 177, -1000, -1000, -1000, -1000, 210, 158,
	-1000, 417, 1251, -1000, 1808, 1806, 1869, 1869, 91, 1570,
	1430, -1000, -1000, 1310, -1000, -1000, 1641, 1308, 1308, -1000,
	1307, -1000, -1000, 34091, -1000, 349, 1849, 1848, 1630, -1000,
	1932, 29763, 14600, -1000, -1000, 1923, 1920, 2658, 2658, -1000,
	-1000, 2658, 2658, 2658, 2658, -1000, -1000, -1000, 135, -1000,
	-1000, 1972, -1000, 1568, 1630, -1000, 209, -1000, -1000, 1416,
	-1000, 34091, -1000, -1000, 668, -1000, -1000, -1000, 660, -1000,
	1306, 876, 1250, -1000, -1000, -1000, -1000, -1000, 353, -356,
	20010, -1000, -1000, -1000, -1000, 1414, -1000, 209, -1000, -1000,
	301, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1813, 1811,
	266, -1000, 1225, 1223, -1000, 368, 1169, 661, -217, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	416, 1305, -1000, 126, -1000, -1000, 397, 1794, 1796, 1914,
	-1000, 29222, -1000, -1000, -1000, -1000, 161, 161, 24338, 1674,
	1640, -1000, -1000, -1000, 20010, -1000, 759, 1930, 1569, -1000,
	847, 17846, -1000, -1000, -1000, -1000, -1000, -1000, 1365, 171,
	-283, 11322, 1568, 1365, -1000, -1000, -1000, -1000, -1000, 1114,
	-1000, 34632, -1000, -1000, -1000, 2658, 660, -1000, 286, 38782,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1111, -1000,
	-1000, 1128, 396, 124, -1000, 1867, -1000, 1638, 1089, 1806,
	1912, 1804, 1798, -1000, 1221, -277, 1412, 1637, 24338, 3729,
	1409, -1000, 34091, 1928, 1911, -1000, 1365, 211, 211, 1562,
	-1000, 1748, -256, -289, 1559, -1000, -1000, 1632, -356, -1000,
	660, -1000, 277, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 17846, 17846, 5812, 38782, 107, -1000,
	104, -1000, -1000, -1000, 1217, -1000, 840, -1000, 1215, -1000,
	1908, 1907, -1000, 141, 660, 24338, 1407, -1000, 759, 1768,
	-214, 17846, 17846, -1000, -1000, 201, -1000, 832, 274, 757,
	-1000, 1441, -1000, -1000, 1744, -1000, 34091, -1000, -1000, 1301,
	1153, -1000, 1264, 1212, 187, 166, 3448, -1000, -1000, -1000,
	-1000, -363, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1211,
	1186, 26516, -1000, 1404, 660, -1000, 334, -1000, 34091, -1000,
	1363, 1557, -1000, 1363, 960, -1000, -1000, -1000, -1000, -1000,
	34091, -280, 1402, -1000, -1000, -1000, 926, -1000, 17846, 38782,
	1895, 1893, 1892, 1844, 10771, 38641, -1000, -1000, -1000, -1000,
	86, 1442, 660, -1000, 330, 1539, -1000, 1865, 17846, 201,
	-1000, -284, 1680, 310, 962, 38782, -1000, 1056, -364, 452,
	209, 454, 20010, -1000, -1000, -1000, 29222, -1000, 1630, 34091,
	1630, -1000, -1000, -290, 1679, 1678, 1954, -1000, -1000, -1000,
	-1000, -1000, -1000, 38782, -1000, -365, 38782, 3877, -1000, -1000,
	-1000, 3869, -1000, -1000, -1000, -1000, 164, -1000, -1000, 3729,
	1442, 18928, -1000, -1000, -1000, -1000, 1956, -1000, 1944, 556,
	556, -1000, -368, 38441, -369, 523, 38782, 956, -1000, 17846,
	-1000, 454, -1000, 2658, 1365, -1000, -1000, -1000, 371, 1113,
	-1000, 38419, 938, 38782, -1000, -370, 395, 38782, -1000, 1016,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 38224, -1000,
	-371, 38782, 392, 38202, -373, -1000, 389, 38782, -1000,
}

var yyPgo = [...]int16{
	0, 2344, 2343, 108, 1623, 2341, 200, 2340, 2337, 72,
	2335, 35, 25, 20, 40, 2334, 2086, 2084, 2082, 2080,
	2078, 2331, 8, 2327, 2325, 2076, 2322, 2321, 2065, 2063,
	2061, 2055, 2320, 2319, 2318, 2052, 2045, 2042, 29, 2317,
	18, 2311, 3, 156, 173, 2310, 2, 2309, 2308, 6,
	2307, 2306, 2038, 2305, 2303, 2301, 98, 2299, 2029, 2026,
	2298, 2019, 2014, 2297, 2296, 2012, 2001, 1993, 2295, 268,
	2294, 2292, 2291, 165, 2289, 172, 2287, 2286, 2282, 110,
	2281, 1893, 127, 51, 122, 251, 2280, 11, 42, 239,
	2279, 2278, 143, 2277, 155, 2275, 158, 2274, 144, 138,
	105, 2271, 2270, 174, 2269, 2265, 2264, 137, 2258, 2257,
	178, 2956, 2256, 2255, 161, 2254, 63, 170, 68, 48,
	2253, 2251, 2250, 2249, 2248, 17, 429, 2247, 102, 150,
	2246, 2245, 90, 2244, 2243, 179, 2241, 2239, 2238, 141,
	33, 2236, 2235, 50, 2234, 67, 74, 2230, 46, 2228,
	140, 2225, 2224, 2223, 2222, 2221, 59, 2220, 55, 2215,
	142, 114, 1154, 2214, 2213, 16, 12, 2212, 28, 13,
	15, 44, 24, 61, 86, 131, 107, 2210, 27, 34,
	118, 103, 2209, 96, 92, 43, 2208, 153, 2206, 88,
	163, 134, 136, 162, 2205, 2202, 2201, 1048, 2200, 120,
	71, 2199, 104, 1216, 169, 2196, 2192, 97, 2190, 2189,
	2188, 2187, 2186, 91, 115, 2184, 2183, 180, 177, 181,
	38, 32, 73, 2044, 168, 157, 2180, 37, 2179, 2176,
	2170, 3329, 112, 85, 113, 167, 2169, 106, 14, 45,
	2167, 2164, 2162, 2161, 2159, 2158, 1418, 2156, 2155, 2153,
	2152, 117, 212, 2151, 130, 125, 123, 2150, 147, 23,
	2149, 2145, 132, 95, 2144, 2143, 2139, 2138, 133, 75,
	160, 2136, 121, 135, 126, 2135, 87, 2134, 2132, 49,
	52, 2131, 2130, 2129, 101, 94, 2128, 66, 30, 39,
	62, 19, 2125, 2122, 79, 69, 2121, 22, 2120, 4,
	5, 7, 2117, 2115, 2113, 2111, 2110, 2109, 2108, 84,
	2107, 2106, 60, 2105, 2104, 2103, 31, 2102, 2099, 2093,
	146, 116, 58, 166, 81, 10, 2092, 2091, 9, 2074,
	119, 2071, 47, 2067, 56, 2059, 2057, 53, 2049, 2047,
	57, 2040, 2036, 176, 1732, 194, 2022, 171, 145, 54,
	93, 2007, 2003, 0, 1035, 182, 164, 1999, 1997,
}

var yyR1 = [...]int16{
	0, 352, 352, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 68, 3, 3, 9,
	10, 4, 4, 6, 90, 90, 183, 183, 183, 183,
	182, 182, 5, 5, 91, 91, 89, 89, 96, 7,
	7, 8, 8, 11, 11, 72, 72, 12, 13, 13,
	13, 13, 355, 355, 105, 105, 103, 103, 104, 104,
	180, 180, 14, 14, 14, 187, 187, 192, 192, 192,
	195, 195, 195, 195, 170, 171, 172, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 326,
	326, 335, 335, 335, 336, 336, 334, 334, 334, 334,
	334, 338, 338, 339, 339, 337, 337, 337, 337, 341,
	341, 342, 342, 340, 340, 340, 340, 340, 340, 340,
	340, 340, 340, 340, 340, 340, 340, 329, 329, 329,
	35, 35, 35, 35, 36, 36, 36, 36, 36, 36,
	343, 343, 343, 343, 343, 343, 343, 343, 343, 343,
	343, 343, 343, 343, 343, 343, 343, 343, 343, 343,
	343, 343, 343, 343, 343, 343, 343, 343, 343, 343,
	343, 344, 344, 345, 345, 346, 346, 347, 347, 347,
	347, 348, 348, 348, 348, 348, 349, 349, 349, 349,
	349, 349, 349, 350, 350, 351, 351, 2, 307, 307,
	308, 308, 309, 309, 309, 309, 310, 310, 311, 311,
	312, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	26, 219, 219, 216, 216, 216, 217, 217, 218, 218,
	218, 328, 328, 328, 322, 322, 322, 324, 324, 323,
	323, 323, 325, 325, 330, 330, 330, 330, 330, 332,
	332, 332, 332, 332, 332, 333, 333, 333, 331, 331,
	50, 50, 51, 51, 51, 159, 159, 159, 15, 15,
	15, 15, 15, 21, 23, 23, 39, 39, 40, 24,
	24, 24, 24, 41, 41, 42, 27, 27, 27, 27,
	27, 27, 48, 48, 48, 47, 47, 46, 46, 46,
	46, 46, 46, 25, 25, 25, 25, 49, 49, 44,
	44, 43, 45, 45, 45, 45, 45, 45, 45, 45,
	45, 45, 45, 45, 28, 28, 28, 28, 28, 28,
	20, 306, 306, 306, 38, 38, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 54, 281, 282, 282,
	282, 282, 282, 282, 282, 282, 269, 269, 270, 259,
	259, 259, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 238, 238, 238, 238, 242, 242, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 241,
	241, 241, 241, 241, 241, 241, 241, 243, 243, 243,
	243, 243, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 245, 245, 245,
	245, 245, 245, 245, 245, 268, 268, 246, 246, 262,
	262, 263, 263, 263, 260, 260, 260, 261, 261, 249,
	250, 264, 251, 251, 251, 252, 252, 252, 253, 253,
	258, 258, 257, 257, 257, 257, 257, 257, 254, 254,
	254, 254, 255, 255, 256, 267, 267, 267, 267, 267,
	247, 37, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 293, 293, 209, 209, 210, 210,
	271, 271, 291, 291, 290, 290, 289, 289, 289, 280,
	280, 286, 286, 286, 286, 286, 286, 286, 286, 275,
	275, 275, 274, 274, 276, 276, 279, 279, 288, 288,
	287, 287, 272, 272, 272, 294, 294, 294, 294, 294,
	273, 273, 273, 273, 295, 277, 277, 278, 278, 278,
	300, 301, 299, 299, 299, 299, 299, 122, 122, 122,
	283, 283, 283, 284, 284, 284, 285, 285, 285, 304,
	304, 303, 303, 52, 53, 57, 57, 56, 56, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 56, 158, 158, 158, 214, 214, 298, 296,
	296, 297, 297, 17, 17, 55, 55, 327, 327, 18,
	18, 18, 18, 18, 18, 18, 18, 18, 302, 302,
	302, 19, 19, 58, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 86,
	201, 201, 200, 200, 199, 199, 199, 202, 202, 202,
	202, 236, 236, 236, 60, 60, 60, 64, 64, 67,
	67, 67, 65, 66, 29, 30, 30, 30, 30, 31,
	215, 215, 62, 62, 63, 63, 63, 63, 78, 78,
	357, 357, 61, 358, 69, 70, 70, 71, 71, 71,
	205, 205, 75, 75, 75, 73, 73, 73, 74, 74,
	80, 80, 84, 84, 84, 84, 83, 83, 83, 83,
	161, 161, 166, 228, 228, 142, 142, 162, 162, 167,
	167, 167, 168, 168, 169, 169, 169, 169, 169, 164,
	164, 163, 163, 165, 130, 130, 226, 226, 226, 225,
	225, 225, 225, 88, 88, 92, 92, 94, 94, 94,
	94, 94, 97, 144, 144, 115, 115, 116, 116, 116,
	116, 116, 128, 128, 179, 179, 178, 178, 181, 181,
	93, 95, 95, 95, 95, 100, 100, 101, 101, 102,
	102, 213, 213, 233, 233, 233, 106, 106, 106, 108,
	107, 107, 107, 107, 109, 109, 110, 110, 112, 113,
	113, 111, 111, 117, 117, 114, 118, 118, 118, 118,
	119, 119, 85, 85, 85, 85, 85, 85, 85, 85,
	198, 198, 121, 121, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 138, 138, 138, 138, 138, 138,
	123, 123, 123, 123, 123, 123, 123, 79, 79, 139,
	139, 139, 99, 98, 98, 82, 82, 81, 81, 140,
	140, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 133, 133, 137, 137, 137,
	137, 137, 137, 137, 137, 137, 137, 137, 137, 137,
	137, 137, 137, 137, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 131, 131, 131, 131, 131,
	131, 131, 131, 131, 131, 131, 131, 131, 131, 131,
	131, 131, 131, 131, 131, 131, 132, 132, 132, 132,
	132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
	132, 132, 132, 356, 356, 135, 134, 134, 134, 134,
	134, 134, 76, 76, 76, 76, 76, 234, 234, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 151, 151, 77, 77, 149, 149,
	150, 152, 152, 148, 148, 148, 125, 125, 125, 125,
	125, 125, 125, 125, 127, 127, 127, 153, 153, 141,
	141, 87, 154, 154, 155, 156, 156, 157, 157, 160,
	173, 173, 173, 174, 174, 174, 174, 129, 129, 175,
	175, 175, 124, 124, 124, 124, 124, 124, 124, 177,
	177, 176, 176, 176, 176, 184, 184, 143, 143, 146,
	146, 145, 147, 185, 185, 189, 189, 186, 186, 190,
	190, 190, 190, 193, 193, 194, 194, 194, 191, 191,
	191, 188, 188, 188, 230, 230, 230, 196, 196, 206,
	206, 203, 203, 204, 204, 197, 197, 248, 248, 248,
	212, 212, 211, 211, 211, 207, 207, 207, 208, 208,
	227, 227, 223, 223, 229, 229, 224, 224, 231, 231,
	232, 232, 305, 305, 265, 265, 315, 315, 266, 266,
	316, 316, 318, 318, 313, 313, 314, 314, 317, 317,
	32, 319, 319, 320, 320, 321, 321, 321, 321, 33,
	34, 34, 34, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 353, 354,
}

var yyR2 = [...]int8{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 11, 5, 7, 1,
	5, 1, 3, 13, 0, 2, 0, 2, 3, 3,
	1, 3, 2, 1, 2, 3, 1, 3, 4, 1,
	3, 1, 3, 7, 8, 1, 1, 9, 8, 7,
	6, 6, 1, 1, 1, 3, 1, 3, 1, 3,
	0, 4, 3, 4, 5, 1, 3, 3, 2, 2,
	2, 2, 2, 1, 0, 0, 0, 2, 3, 3,
	11, 9, 11, 5, 5, 16, 12, 9, 4, 0,
	3, 0, 2, 2, 1, 3, 1, 1, 2, 2,
	2, 0, 2, 1, 2, 2, 2, 2, 2, 0,
	1, 1, 2, 3, 3, 5, 3, 3, 4, 5,
	4, 4, 2, 2, 2, 2, 2, 0, 2, 2,
	9, 9, 5, 7, 7, 7, 7, 8, 4, 6,
	2, 3, 2, 3, 3, 3, 4, 3, 3, 2,
	2, 3, 2, 2, 2, 2, 2, 3, 2, 2,
	2, 3, 3, 2, 3, 3, 2, 2, 2, 2,
	2, 1, 3, 0, 3, 1, 3, 0, 1, 1,
	1, 1, 3, 1, 3, 3, 0, 2, 5, 5,
	5, 7, 5, 0, 3, 0, 3, 4, 0, 1,
	1, 3, 2, 3, 3, 3, 0, 1, 1, 2,
	2, 2, 2, 1, 2, 2, 3, 3, 3, 3,
	4, 2, 3, 3, 3, 3, 0, 3, 0, 3,
	3, 1, 1, 1, 3, 2, 1, 1, 3, 3,
	2, 1, 1, 3, 1, 2, 5, 4, 6, 4,
	3, 3, 6, 5, 5, 4, 3, 5, 1, 3,
	1, 1, 1, 1, 1, 0, 2, 2, 1, 1,
	1, 1, 1, 4, 5, 8, 1, 2, 5, 7,
	10, 8, 11, 1, 2, 5, 5, 5, 5, 6,
	3, 5, 1, 1, 1, 1, 3, 1, 1, 1,
	2, 1, 1, 2, 4, 2, 4, 2, 3, 1,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 4, 3, 2, 4,
	3, 0, 2, 3, 1, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 5, 4, 1, 1,
	2, 3, 4, 3, 3, 3, 3, 3, 3, 0,
	1, 1, 0, 2, 3, 2, 2, 2, 2, 2,
	6, 8, 3, 3, 1, 1, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 3, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 1, 4, 4, 3, 3, 2, 4, 5, 2,
	3, 4, 2, 2, 3, 3, 3, 3, 3, 4,
	1, 1, 1, 1, 1, 6, 6, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 3, 0,
	5, 0, 3, 5, 0, 1, 1, 0, 1, 2,
	3, 1, 0, 3, 3, 0, 2, 2, 0, 1,
	0, 1, 1, 1, 1, 2, 2, 2, 5, 5,
	4, 4, 4, 4, 4, 2, 1, 2, 1, 2,
	2, 3, 2, 2, 2, 2, 1, 1, 1, 1,
	3, 2, 1, 1, 0, 3, 1, 1, 0, 1,
	5, 4, 0, 1, 1, 2, 2, 3, 2, 0,
	1, 3, 5, 3, 3, 5, 3, 2, 2, 1,
	1, 1, 1, 1, 0, 1, 0, 1, 1, 3,
	3, 3, 3, 3, 1, 10, 11, 11, 12, 12,
	3, 3, 2, 1, 5, 1, 1, 0, 2, 2,
	3, 3, 1, 1, 2, 2, 2, 0, 1, 2,
	0, 1, 3, 1, 2, 3, 1, 1, 1, 0,
	2, 0, 2, 1, 5, 1, 3, 5, 4, 3,
	5, 3, 8, 10, 3, 3, 3, 3, 3, 5,
	4, 5, 1, 2, 2, 4, 3, 6, 5, 3,
	9, 2, 2, 0, 1, 2, 0, 1, 7, 1,
	3, 8, 8, 3, 3, 3, 5, 3, 5, 5,
	5, 4, 4, 4, 4, 4, 4, 4, 0, 1,
	1, 3, 2, 3, 3, 4, 3, 5, 5, 5,
	4, 4, 4, 2, 2, 2, 6, 2, 4, 4,
	4, 5, 8, 6, 3, 5, 4, 2, 4, 3,
	2, 4, 5, 6, 2, 6, 6, 3, 3, 3,
	0, 1, 1, 1, 0, 2, 2, 0, 2, 3,
	2, 0, 1, 1, 2, 4, 1, 1, 1, 2,
	4, 4, 1, 1, 2, 3, 4, 4, 5, 3,
	1, 1, 3, 3, 1, 1, 1, 1, 0, 3,
	1, 1, 3, 0, 2, 0, 2, 1, 2, 2,
	0, 1, 0, 1, 1, 0, 1, 1, 0, 1,
	3, 5, 1, 1, 3, 5, 1, 2, 3, 5,
	2, 2, 6, 0, 1, 0, 3, 0, 1, 0,
	2, 2, 4, 1, 2, 2, 2, 2, 2, 0,
	2, 1, 3, 3, 1, 3, 0, 1, 2, 1,
	1, 1, 1, 1, 3, 1, 1, 1, 4, 1,
	3, 1, 2, 2, 4, 2, 6, 1, 4, 6,
	3, 2, 0, 3, 0, 3, 1, 3, 1, 3,
	4, 4, 4, 4, 3, 2, 4, 0, 1, 0,
	2, 0, 1, 1, 1, 1, 1, 2, 2, 1,
	2, 3, 2, 3, 2, 2, 1, 3, 3, 2,
	1, 1, 3, 1, 3, 3, 0, 5, 5, 5,
	0, 2, 1, 3, 3, 3, 2, 3, 1, 2,
	0, 3, 1, 1, 3, 3, 4, 4, 5, 3,
	4, 5, 6, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 0, 2, 1,
	1, 1, 3, 1, 3, 0, 1, 1, 3, 1,
	3, 1, 1, 1, 1, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 2, 2, 2, 2, 3, 1,
	1, 1, 1, 1, 1, 5, 6, 6, 6, 5,
	5, 5, 6, 5, 5, 6, 5, 5, 5, 5,
	6, 5, 5, 5, 4, 4, 5, 5, 5, 5,
	5, 4, 4, 4, 4, 4, 4, 4, 3, 6,
	6, 6, 8, 8, 8, 8, 4, 6, 7, 7,
	7, 9, 4, 7, 5, 4, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 8, 8, 0, 2, 3, 4, 4, 4, 4,
	4, 4, 0, 3, 4, 7, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 3, 3, 1, 2, 2, 1, 2, 1,
	2, 2, 1, 2, 0, 1, 0, 2, 1, 2,
	4, 0, 2, 1, 3, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 0, 3, 1,
	3, 1, 0, 2, 1, 0, 3, 1, 3, 2,
	0, 1, 1, 0, 2, 4, 4, 1, 1, 0,
	2, 4, 2, 4, 1, 3, 5, 4, 6, 0,
	3, 1, 3, 3, 5, 0, 5, 1, 3, 1,
	2, 3, 1, 1, 3, 3, 3, 1, 3, 1,
	2, 2, 3, 1, 1, 1, 1, 1, 3, 3,
	3, 1, 2, 1, 1, 1, 1, 1, 1, 0,
	1, 0, 2, 0, 3, 0, 1, 0, 3, 3,
	1, 1, 0, 1, 1, 1, 1, 1, 0, 1,
	0, 2, 1, 1, 1, 3, 1, 1, 1, 1,
	1, 1, 0, 2, 0, 1, 0, 4, 0, 1,
	0, 3, 0, 3, 0, 4, 0, 3, 0, 3,
	3, 1, 3, 2, 4, 1, 2, 1, 2, 2,
	2, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1,
}

var yyChk = [...]int16{
	-1000, -352, -1, -3, -10, -11, -12, -13, -14, -16,
	-52, -17, -18, -19, -58, -59, -60, -64, -65, -66,
	-62, -61, -25, -28, -20, -68, -29, -30, -31, -32,
	-33, -34, -35, -36, -37, -5, 6, 7, -72, 9,
	10, 29, -54, 180, -53, 183, 182, 218, 184, 211,
	64, 341, -67, 344, 345, -357, -215, 269, 270, 20,
	37, 346, 348, 30, 31, 232, 286, 288, 313, -91,
	-4, 8, 441, 181, 342, 213, 212, 26, 490, -6,
	-7, -353, 68, 556, -156, 15, -69, -358, -69, -69,
	-69, -69, -69, -281, -213, 108, 68, 23, -208, -219,
	88, 432, 188, -217, 282, 284, -206, -207, -216, 242,
	252, 44, 199, 198, 253, 189, 282, 189, 190, 192,
	432, 188, 225, 224, 282, 284, 189, -111, -231, 72,
	-221, 202, 501, 307, 487, 253, 551, 294, 239, 341,
	355, 357, 349, 384, 372, 488, 502, 203, 264, 187,
	340, 370, 373, 418, 201, 297, 257, 320, 503, 407,
	413, 267, 344, 427, 504, 204, 261, 263, 262, 247,
	457, 268, 36, 214, 368, 303, 361, 272, 242, 505,
	495, 236, 359, 35, 27, 237, 235, 430, 506, 331,
	415, 389, 332, 306, 507, 492, 301, 414, 364, 360,
	313, 205, 199, 333, 508, 390, 394, 509, 419, 287,
	334, 510, 511, 512, 191, 293, 353, 354, 513, 243,
	421, 298, 388, 32, 200, 489, 48, 222, 422, 38,
	392, 37, 398, 514, 330, 387, 382, 399, 515, 516,
	517, 518, 311, 309, 310, 312, 386, 352, 381, 254,
	259, 53, 186, 396, 395, 397, 260, 417, 377, 375,
	519, 520, 302, 206, 521, 522, 362, 18, 523, 524,
	425, 217, 304, 305, 42, 525, 526, 527, 112, 528,
	529, 530, 416, 391, 393, 241, 116, 365, 196, 531,
	308, 412, 317, 491, 291, 113, 423, 358, 533, 336,
	348, 221, 216, 426, 326, 534, 270, 535, 536, 537,
	208, 538, 285, 284, 345, 318, 114, 346, 409, 265,
	539, 540, 541, 542, 251, 234, 429, 420, 52, 269,
	403, 543, 321, 337, 351, 198, 271, 406, 295, 342,
	43, 7, 258, 299, 410, 319, 266, 252, 255, 379,
	223, 544, 545, 366, 367, 385, 350, 380, 343, 226,
	218, 111, 428, 404, 493, 282, 338, 374, 371, 229,
	378, 546, 547, 256, 230, 347, 424, 296, 369, 405,
	189, 133, 373, 418, 180, 408, 409, 415, -275, 416,
	224, 227, -236, 189, -201, 407, 287, 308, 462, 230,
	231, 190, 191, 32, 420, 419, 411, -231, 193, 347,
	-78, 184, 219, -111, -49, 72, 271, -49, 29, 72,
	72, 36, 72, 346, 410, 410, 75, 491, 233, 21,
	-344, -325, 317, -343, -323, 181, 180, 10, 182, 322,
	323, 324, 190, 8, 30, 532, 207, 325, 326, 6,
	211, 327, 328, 225, 9, 329, -328, 74, 72, -221,
	21, -344, -325, 317, -210, -209, 339, 398, -4, 6,
	-197, 194, 343, -89, 500, -96, -233, -231, -222, 74,
	300, 210, 290, 401, 458, 459, 460, 461, 233, 462,
	475, 476, 99, 231, 322, 323, 314, 324, 209, 477,
	117, 240, 219, 279, 411, 278, 283, 463, 464, 478,
	479, 480, 465, 466, 289, 481, 482, 554, 292, 555,
	315, 484, 532, 485, 325, 483, 327, 228, 469, 468,
	467, 470, 328, 452, 453, 471, 51, 473, 472, 474,
	192, 81, -71, 5, -9, -3, -174, 17, 16, -75,
	54, 55, -70, -83, 124, -85, -231, -120, 91, -126,
	28, 72, -221, 24, -125, -222, -121, -148, -147, -99,
	133, -235, 122, 123, 130, 92, 176, -133, -131, -132,
	-134, -136, -137, 74, 73, 82, 75, 76, 77, 78,
	83, 458, 459, 460, 461, 462, 475, 476, 209, 477,
	219, 463, 464, 478, 479, 480, 465, 466, 481, 482,
	484, 485, 483, 469, 468, 467, 470, 452, 453, 471,
	473, 472, 474, 84, 85, -223, -145, -353, 134, 135,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	58, 59, 188, 442, 443, 444, 445, 446, 486, 450,
	94, 47, 431, 440, 439, 438, 436, 437, 433, 435,
	434, 195, 432, 128, 441, -197, -197, 11, -103, -104,
	-111, -114, -231, -186, 343, -193, -190, 419, 420, -191,
	-194, -188, -148, 398, 529, 530, 418, 373, 417, -223,
	-231, -2, -6, -111, -282, -270, -273, -224, 204, -295,
	-223, -220, 201, 72, -221, 300, 185, 210, 181, 90,
	494, 23, 25, 290, 401, 458, 93, 133, 459, 460,
	461, 16, 20, 94, 132, 81, 442, 233, 462, 180,
	62, 433, 435, 431, 432, 408, 28, 10, 26, 212,
	246, 22, 126, 182, 97, 98, 99, 231, 215, 322,
	323, 24, 213, 314, 85, 324, 209, 117, 240, 19,
	65, 219, 279, 11, 411, 227, 550, 286, 13, 456,
	115, 278, 14, 283, 195, 194, 110, 244, 190, 60,
	8, 176, 87, 107, 56, 463, 464, 497, 45, 232,
	498, 58, 108, 17, 436, 437, 30, 486, 465, 220,
	499, 466, 128, 249, 63, 50, 289, 91, 83, 554,
	33, 86, 66, 335, 88, 15, 245, 61, 454, 292,
	555, 315, 224, 532, 248, 500, 207, 109, 325, 183,
	441, 316, 288, 59, 188, 6, 451, 29, 211, 327,
	250, 228, 469, 468, 467, 470, 552, 57, 444, 445,
	471, 328, 548, 189, 96, 452, 453, 193, 225, 84,
	5, 44, 31, 9, 329, 64, 67, 438, 439, 440,
	47, 51, 473, 472, 474, 192, 553, 95, 12, 455,
	490, 89, 190, 192, 441, -204, 195, -204, 225, 224,
	-218, 250, -204, -204, 189, -217, 100, 100, -55, -111,
	-327, -322, -328, -203, 195, -223, -203, -203, -203, -203,
	-203, -203, -203, -111, 177, -103, 72, 29, -202, 108,
	12, 432, 188, 189, 224, 225, 192, -277, 11, 110,
	228, 228, 228, 229, 228, -200, 410, 412, 226, 413,
	414, 12, -86, 108, 19, -353, -174, -174, 125, 72,
	346, 193, -63, -3, -13, -11, -12, -9, 100, -128,
	23, 29, 29, 74, 51, 29, -44, -43, -45, 257,
	258, 259, 260, 261, 262, 263, 264, 265, 266, 267,
	268, 29, -306, 68, -265, 398, 72, -319, -320, -111,
	75, 75, 66, 66, 69, 193, 69, 66, -345, 318,
	68, -345, 284, 318, 319, 252, 282, 192, -345, -345,
	284, -345, -345, -345, -345, -345, 410, -345, -345, -345,
	320, 321, -345, 408, 192, -345, -345, -345, -345, -345,
	71, 66, 69, 308, 66, 11, 66, -292, 133, 331,
	332, 333, 334, 330, 308, 335, 336, 337, 228, 338,
	-69, 189, 423, 69, -89, -177, -353, -8, -6, -353,
	21, 22, -354, 70, -175, 19, 30, -129, 75, 78,
	-157, -160, -85, -231, 50, -73, 21, 22, 80, 11,
	-226, 90, 88, 89, 107, -225, 23, 72, -221, -222,
	74, 177, -85, -123, 110, 91, 108, 109, 93, 119,
	118, 129, 122, 123, 124, 125, 126, 127, 128, 120,
	121, 132, 100, 101, 102, 103, 104, 105, 106, -198,
	-353, -99, -353, 178, 179, -126, -126, -126, -126, -126,
	-126, -126, -353, -353, -353, -353, -353, -353, -353, -353,
	-353, -353, -353, -353, -353, -353, -353, -353, -353, -353,
	-353, -353, -353, -353, -353, -353, -353, -353, -353, -353,
	-353, -353, -353, -353, -353, -9, -140, -85, -353, -353,
	-353, -353, -353, -353, -353, -353, -353, -353, -353, -151,
	-85, -353, -356, -135, -353, -356, -135, -356, -135, -356,
	-353, -356, -135, -356, -135, -356, -356, -135, -356, -353,
	-353, -353, -353, -113, 87, -111, -88, -92, -94, -95,
	-115, -98, -353, -93, -111, -99, 72, -111, -103, -355,
	69, 11, 67, -355, 69, 177, 69, -187, -192, 421,
	423, 343, -191, -191, -230, -223, 74, 28, 100, 29,
	177, -156, 70, 69, -273, 204, 201, -238, -242, -244,
	-243, -245, -240, -241, 370, 373, 377, 375, 371, 376,
	133, 374, 379, 380, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 29, 214, 366, 367, 368, 369, 390,
	391, 392, 393, 394, 395, 396, 397, 349, 372, 488,
	350, 351, 352, 353, 354, 355, 357, 358, 359, 360,
	361, 362, 363, 364, 72, -222, -295, 68, -223, -111,
	-219, -217, 72, 91, 72, -110, -223, -231, -117, -223,
	-231, 251, -331, -330, -322, -325, -204, -218, -322, 256,
	254, 255, 69, 193, 69, 193, 71, -103, 24, 66,
	-105, -111, 72, 72, -110, -117, -324, -322, -325, -232,
	-231, -220, -202, 74, -235, -85, -204, -204, -111, -111,
	-111, -111, -111, -202, -202, -202, -202, -199, 11, 110,
	11, -199, -199, -85, -126, -322, 434, 124, -231, 72,
	72, 346, 72, 33, -44, -44, 74, -44, 69, 100,
	-44, 70, -140, -305, 549, 69, -321, 23, 423, 424,
	399, -347, 189, 227, 224, -347, -343, 326, -324, -323,
	-322, -345, -346, -223, -345, -345, -345, 410, -345, -345,
	-345, -345, -345, -345, -345, -345, -328, -347, 286, 69,
	-347, -324, -322, 330, 330, 330, 330, 330, 330, -75,
	-111, 424, 425, -96, 23, -176, -224, -9, -183, 87,
	9, 110, 69, 18, 69, -173, 25, 26, 177, -127,
	51, 75, 78, -205, 49, -111, -85, -85, -85, -138,
	83, 91, 84, 85, -225, 124, -232, -224, -220, -126,
	-139, -145, -99, 79, 110, 108, 109, 93, -126, -126,
	-126, -126, -126, -126, -126, -126, -126, -126, -126, -126,
	-126, -126, -126, -234, 72, 74, 72, -125, -125, -223,
	-73, -81, -84, 124, -85, -231, -81, -81, -73, -354,
	-354, -81, -84, -81, -81, -81, -81, -84, -81, -73,
	-73, -81, -354, -354, -354, -354, -81, -81, -81, -81,
	-223, -223, -73, -81, -81, -81, -73, -354, 69, -354,
	-9, -81, -81, -354, -85, -85, -148, 74, -81, -148,
	74, -81, -126, 447, 448, 449, -81, -73, -149, -150,
	95, -148, -354, -126, -81, -82, -81, -81, -81, -180,
	112, -111, 29, 69, -106, -108, -107, -109, 56, 60,
	62, 57, 58, 59, 63, -213, -88, -97, 47, -353,
	-116, 112, -118, 23, -233, 64, 194, 65, -353, -180,
	67, -88, -111, -88, -114, -231, 124, -190, -193, 69,
	422, 424, 425, -187, -252, 132, 66, 86, -85, -224,
	-232, -174, -283, -284, -285, -224, 74, 75, -270, -271,
	-272, -273, -286, 204, -294, 196, 198, 199, 44, -274,
	205, 190, 45, -239, -260, 403, 404, -246, 68, -246,
	-246, 378, 370, 373, 371, -246, -246, -246, -246, -246,
	-251, 373, -251, -251, -251, -251, 371, 68, 68, -246,
	-246, -246, -262, 68, -262, 365, -263, 68, -263, -263,
	-263, -263, -295, -295, -85, -227, 67, 23, 192, -258,
	-257, -254, -255, -256, -253, 28, 24, -258, -50, 239,
	210, 177, 68, 177, 242, 243, -326, 69, 28, -332,
	283, -111, -111, -111, -322, -322, -328, -302, 208, 203,
	-111, 69, 69, 74, 72, 72, -128, -278, 11, 110,
	-202, -231, -231, -111, -128, -202, -79, 215, 67, -356,
	-354, 72, -126, -43, -125, 70, -112, 87, 74, -320,
	-233, 398, 424, -348, 124, -223, -348, -351, 490, 193,
	70, 69, -345, -348, 304, 286, -348, 11, -293, 19,
	-57, -56, 185, 182, 183, 186, 187, -298, 401, 181,
	236, 235, 221, -98, -353, -354, 69, 177, -354, -182,
	34, 35, -223, 52, -129, -129, -160, -196, 19, 11,
	47, 47, -74, 57, 83, 84, 85, 177, -353, -139,
	-126, -126, -126, -79, 90, -354, -81, 69, -354, 177,
	-354, -354, -81, -161, 454, -161, -354, -354, -354, -354,
	-354, -354, -354, -354, -81, -81, -354, -161, -161, -161,
	-161, -354, -354, -354, -354, 69, 69, -81, -354, -354,
	-354, -82, -85, -354, -354, -354, 69, 67, 23, 11,
	11, -354, 11, 11, -354, -354, 11, -126, -126, -126,
	-354, -81, -152, -150, 97, -85, -354, -354, -354, -354,
	-354, -354, -124, 29, 47, -353, -9, -353, -185, -189,
	-148, -220, -92, -94, -94, -92, -94, 56, 56, 56,
	61, 56, 61, 56, -107, -233, -354, -354, -144, 238,
	-353, 33, -233, -118, 190, 190, 190, -82, -119, 12,
	-88, -119, -119, 177, -192, -195, 426, 423, 429, 72,
	74, 177, -175, 69, -285, 100, -273, 68, 72, -279,
	-222, 45, -274, 190, 45, -276, -274, -274, -279, 72,
	-279, 45, 83, 91, -249, -250, -264, -267, -247, 23,
	550, 406, 28, 66, 401, 196, 45, 44, 199, 81,
	-261, 405, 75, -251, -251, -246, -246, -246, 378, -246,
	-251, -252, 29, -252, -252, -252, -252, -251, -268, 74,
	-268, 75, -262, 75, 70, 66, -223, -170, -111, -255,
	-254, -256, 373, 418, 132, 430, -51, 8, 9, 10,
	-223, -307, -308, -309, -223, 110, 244, 245, -223, -335,
	316, -330, 284, 293, 90, 16, 490, 193, 193, -111,
	-322, -119, 72, 72, -199, -202, -126, -325, 230, 231,
	-180, 189, -321, 193, 177, 177, 193, 307, -324, -223,
	11, 11, 304, 11, -324, 340, 69, -214, -274, -304,
	-272, -273, -303, 197, 204, 205, -214, 204, 201, -274,
	205, 196, 197, -211, -274, 193, 23, -214, -214, -280,
	100, -214, 32, 32, 112, -224, -224, 69, 74, 74,
	53, -111, -80, -171, 124, -224, -82, -79, 90, -126,
	-354, -84, -162, -161, 124, -232, -162, -162, -354, -223,
	-166, -353, -161, -162, -162, -161, -161, -161, -354, -354,
	-161, -162, -162, -162, -162, -126, -126, -354, -162, -162,
	-162, -354, -237, 133, 370, 214, 368, 361, 388, 375,
	403, 366, 404, -234, -237, -126, -126, -126, -126, -126,
	11, 11, 11, 487, -156, 99, -85, 96, -184, 66,
	-185, -143, -146, -145, -353, -9, -354, -176, 6, 490,
	-181, -223, -119, 69, 100, 100, -101, -100, 66, 67,
	-102, 66, -100, 56, 56, -179, 68, 69, -145, -353,
	-181, -126, -118, -353, -353, -353, -354, -156, -85, -119,
	423, 427, 428, -284, -285, -288, -287, -223, -222, 196,
	-294, 44, -294, -279, -279, -279, -279, 68, 83, -353,
	551, 75, -126, 9, 45, 45, 45, 74, 70, -252,
	-252, -251, -246, -252, 72, 133, -252, 70, 69, 70,
	69, 70, 69, -122, 506, 91, -111, -172, 23, 29,
	-280, -280, -280, 66, 70, 69, -238, -223, -223, -223,
	-338, 490, 289, -336, -334, 295, 296, 297, 298, 299,
	-325, 294, -332, 291, 74, 72, -111, -322, -128, -251,
	-111, -324, 124, 124, -223, -324, 304, -350, 490, -324,
	-324, 11, -324, 74, -56, 68, -269, 72, -222, -279,
	-207, 196, 72, 72, 72, -222, 72, -222, -223, 45,
	45, 72, -111, -223, -269, 72, -85, -223, -223, 177,
	-223, -183, 69, -83, -354, -126, -162, 177, -162, -228,
	72, -162, -162, 69, 69, -162, -354, -246, -246, -246,
	-263, -246, 354, -246, 354, -354, -354, 19, 19, 19,
	19, -354, -126, -126, -126, -353, -77, 451, -85, 27,
	-184, 69, -354, -354, 47, -354, -354, 69, -156, -189,
	-85, -85, -85, 68, -85, -178, -223, 238, -354, -118,
	-213, -178, -178, -178, -174, 70, 69, -246, -246, 45,
	-276, -178, -126, 23, -132, 452, 453, -252, -251, 74,
	-251, 75, 75, 506, 68, -9, -170, -280, 72, 133,
	72, 133, 74, -111, -310, -311, -312, 81, 489, 91,
	246, 247, 206, 248, 249, 250, -309, -238, -238, -238,
	-341, -342, -340, 292, 314, 315, 300, -339, -337, 309,
	310, 311, 312, 90, 74, 74, 74, -333, 283, 90,
	292, 16, 23, -202, -313, -200, -350, -350, 286, -324,
	-269, -158, 209, 210, -238, -238, -227, -276, 45, 72,
	-212, 193, 23, 193, -158, -269, 29, 182, 87, -224,
	-90, 11, -171, -171, 124, -142, 112, -126, -126, -251,
	72, -126, -126, -126, -126, -354, -354, -354, -126, -354,
	74, 45, -146, -143, 47, -9, -353, -223, -174, -178,
	70, 69, -145, -116, -233, -354, -354, -354, -290, -289,
	67, 200, 81, -287, -173, -173, -279, -279, 70, -354,
	-353, -252, -252, 70, 70, -288, -170, -172, 72, 133,
	19, -171, -312, 74, 250, 246, 250, 250, 250, 250,
	251, -329, 81, 290, -340, 301, 511, 285, 316, 75,
	75, 111, 30, 31, -337, 75, 75, 75, 75, -334,
	16, 490, -332, 291, 74, 74, -314, 38, -316, 39,
	-349, 23, -349, 304, 70, 72, -239, -239, 68, -279,
	-279, 72, -223, -158, 28, 28, -353, -119, -88, -83,
	-156, 16, -354, -354, -354, -354, -354, -354, -76, 110,
	490, 9, -143, -9, 70, -223, -118, -289, 72, -280,
	74, 207, -259, 553, 552, -126, 70, -9, 237, -172,
	36, 36, 242, 243, 74, 74, 28, 302, 176, 28,
	75, 176, 457, 291, 74, 72, 292, -248, 194, -317,
	43, -315, -266, 42, 16, -322, -288, -227, 68, -126,
	-296, -297, 112, -153, 13, -171, -167, 114, 113, -140,
	-354, 488, 63, 491, -185, -354, 75, -111, -354, -291,
	-290, -170, 238, -22, -3, -11, -12, -13, -14, -16,
	-52, -17, -18, -23, -24, -19, -58, -59, -67, -65,
	-66, -62, -61, -27, -25, -28, -20, -29, -30, -31,
	-35, -36, -26, -37, 94, 195, 272, 341, 75, 28,
	75, 28, 305, 292, 23, -179, 75, -316, 16, -318,
	40, 41, 74, 490, 70, 68, -288, -354, 69, -223,
	-154, 14, 16, -354, -168, 93, -169, 111, 457, -130,
	75, 176, -168, 53, 489, 492, 68, -259, -159, 240,
	241, -170, -85, -85, 72, -48, -229, 275, 276, 277,
	-224, -38, -22, 303, 303, 74, 38, 114, 74, 16,
	16, 284, -291, -288, 70, -297, 47, -164, 455, -155,
	-85, -141, -87, -85, -169, 116, 117, 238, 116, 117,
	-125, 53, -178, -170, 72, 72, -39, -40, 95, 96,
	273, 274, 278, -238, 69, 556, 74, 74, 28, 289,
	21, -325, 70, -291, 222, -163, -165, -223, 69, 90,
	-223, 490, 70, -172, 99, 97, -40, -85, -38, 19,
	19, 19, 28, -224, 99, -22, 306, -291, 223, 69,
	23, -87, -169, 491, -300, -301, 66, -15, -21, -14,
	-11, -12, -13, 341, 94, -38, 96, 556, -49, 75,
	-9, -47, -46, 75, -49, 280, 91, 281, 72, -126,
	-325, -353, -165, -166, 492, -301, 66, -300, 66, 10,
	9, -170, -38, 556, -38, 99, 97, -41, -42, 98,
	-22, 69, 279, -126, 220, -299, 208, 203, 206, 29,
	-299, 556, 99, 556, 195, -38, 99, 97, -42, -85,
	-46, -354, -354, 202, 28, 83, 99, 94, 556, 195,
	-38, 96, 99, 556, -38, 195, 99, 556, 195,
}

var yyDef = [...]int16{
	35, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, 1135, 753, 753, 753, 753,
	753, 753, 851, -2, 613, 0, 0, 0, 0, -2,
	726, 727, 728, 732, 733, 748, 750, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 538, 0,
	-2, 65, 66, 1205, 0, 751, 740, 741, 0, 41,
	0, 0, 1751, 2, 1143, 0, 762, 755, 0, 1205,
	1205, 0, 0, 97, 0, 0, 0, 852, 0, 0,
	0, 1203, 1203, 248, 1203, 1203, 0, 1219, 246, 0,
	1200, 1215, 1216, 1217, 0, 0, 0, 1201, 0, 1201,
	1201, 1201, 1201, 1201, 1201, 1201, 0, 672, 871, 1228,
	1229, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448,
	1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458,
	1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468,
	1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478,
	1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488,
	1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498,
	1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508,
	1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518,
	1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528,
	1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538,
	1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548,
	1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558,
	1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568,
	1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578,
	1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588,
	1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598,
	1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608,
	1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618,
	1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628,
	1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638,
	1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648,
	1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658,
	1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668,
	1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678,
	1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688,
	0, 0, 0, 717, 0, 683, 684, 685, 0, 687,
	0, 0, 0, 0, 0, 697, 700, 704, 0, 1143,
	1143, 559, 560, 561, 722, 723, 711, 724, 0, 0,
	0, 0, 0, 832, 323, 325, 0, 345, 0, 348,
	351, 1234, 734, 0, 0, 1259, 1260, 0, 0, 0,
	0, 0, 1601, 191, 262, 193, 193, 193, 193, 193,
	193, 193, 193, 193, 0, 193, 193, 193, 1613, 193,
	0, 193, 193, 193, 193, 193, 261, 251, 252, 253,
	0, 0, 0, 1601, 0, 539, 536, 537, -2, 753,
	0, 1206, 729, 54, 0, 56, 1159, 853, 854, 855,
	1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698,
	1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708,
	1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718,
	1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728,
	1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738,
	1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748,
	1749, 1750, 0, 757, 0, 39, 1149, 0, 0, 765,
	763, 764, 754, 0, 776, 806, 0, 882, 0, 888,
	890, -2, -2, 0, 931, 932, 933, 934, 935, 936,
	0, 0, 0, 0, 0, 0, 0, 959, 960, 961,
	962, 963, 964, 1116, 1117, 1118, 1119, 1120, 1121, 1122,
	1123, 1693, 1694, 1695, 1696, 1698, 1699, 1700, 1707, 1708,
	1711, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1724, 1725,
	1730, 1732, 1734, 1737, 1738, 1739, 1740, 1742, 1743, 1744,
	1746, 1747, 1748, 892, 893, 1113, 1172, 0, 1049, 1050,
	1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060,
	1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070,
	1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080,
	1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1104, 0, 1033, 1033, 1033, 1033, 1033, 1033, 1033, 1033,
	1033, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	76, 78, 871, 82, 1667, 0, 1177, -2, -2, 1179,
	0, 0, 0, -2, -2, -2, -2, 1461, -2, 1113,
	0, 98, 1135, 99, 0, 388, 389, 0, 1474, 583,
	1226, 1227, 1463, 1222, 1223, 1263, 1264, 1265, 1266, 1267,
	1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277,
	1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287,
	1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297,
	1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307,
	1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317,
	1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327,
	1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337,
	1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347,
	1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357,
	1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367,
	1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377,
	1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387,
	1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397,
	1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407,
	1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417,
	1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427,
	1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437,
	1438, 1439, 0, 0, 246, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 1203, 248, 0, 0, 653, 0,
	654, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 671, 0, 673, 674, 717, 676, 0,
	0, 1203, 1203, 0, 0, 0, 0, 0, 585, 586,
	717, 717, 717, 717, 714, 0, 714, 694, 714, 712,
	713, 0, 699, 0, 0, 0, 707, 708, 0, 735,
	0, 0, 742, 744, 745, 746, 747, 743, 0, 752,
	0, 0, 0, 327, 0, 0, 347, 329, 0, 332,
	333, 334, 335, 336, 337, 338, 339, 340, 341, 342,
	343, 0, 350, 0, 1232, 1235, 739, 1250, 1251, 0,
	1261, 1262, 197, 197, 0, 0, 0, 0, 160, 193,
	0, 162, 193, 193, 193, 0, 193, 193, 169, 170,
	193, 172, 173, 174, 175, 176, 193, 178, 179, 180,
	193, 193, 183, 193, 193, 186, 187, 188, 189, 190,
	260, 197, 0, 0, 197, 0, 0, 521, 0, 0,
	0, 0, 526, 527, 528, 529, 0, 0, 532, 533,
	762, 0, 0, 0, 55, 0, 0, 42, 61, 0,
	758, 759, 60, 1752, 46, 0, 0, 1144, 1147, 1148,
	1136, 1137, 1140, 0, 0, 760, 766, 767, 756, 0,
	777, 0, 0, 0, 0, 807, 0, 809, 810, 811,
	812, 0, 886, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 910, 911, 912, 913, 914, 915, 916, 889,
	0, 903, 0, 0, 0, 952, 953, 954, 955, 956,
	957, 0, 765, 0, 0, 0, 765, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 765, 765, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	765, 0, 0, 0, 765, 0, 0, 929, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 765, 0,
	1105, 0, 1016, 1025, 0, 1017, 1026, 1018, 1027, 1019,
	0, 1020, 1028, 1021, 1029, 1022, 1023, 1030, 1024, 0,
	925, 0, 0, 80, 0, 870, 0, 813, 815, 816,
	817, -2, 0, 821, 876, 923, 1228, -2, 0, 0,
	0, 72, 73, 0, 0, 0, 0, 83, 85, 0,
	0, 1667, 1180, 1181, 495, 1194, 1195, 1196, 0, 1192,
	0, 1143, 600, 0, 390, 0, 0, 402, 484, 414,
	415, 416, 477, 418, 477, 477, 0, 477, 477, 477,
	477, 477, 492, 492, 492, 492, 492, 460, 461, 462,
	463, 464, 0, 0, 437, 477, 477, 477, 441, 467,
	468, 469, 470, 471, 472, 473, 474, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 479, 479, 481,
	481, 481, 481, 481, 0, 0, 582, 0, 1220, 0,
	0, 248, -2, 0, -2, 0, 866, 0, 0, 873,
	0, 0, 109, 278, 264, 108, 0, 242, 247, 243,
	244, 245, 0, 0, 0, 0, 255, 668, 1202, 0,
	661, 74, 662, 663, 664, 665, 666, 257, 667, 872,
	1230, 1231, 675, 718, 0, 720, 0, 0, 832, 680,
	681, 682, 587, 688, 689, 690, 696, 717, 0, 0,
	0, 832, 717, 698, 917, 701, 1033, 0, 725, 737,
	736, 0, 749, 0, 324, 326, 328, 346, 0, 0,
	349, 352, 0, 0, 0, 0, 1253, 0, 1255, 1257,
	0, 0, 198, 199, 200, 0, 192, 0, 215, 263,
	0, 161, 0, 195, 163, 164, 165, 193, 167, 168,
	171, 177, 181, 182, 184, 185, 259, 0, 0, 0,
	0, 158, 0, 522, 523, 524, 525, 534, 531, 765,
	0, 730, 731, 57, 0, 0, 1161, 0, 37, 0,
	1150, 0, 0, 0, 0, 1139, 1141, 1142, 0, 0,
	1124, 0, 0, 768, 761, 40, 883, 884, 885, 887,
	904, 0, 906, 908, 808, 778, 0, 1114, -2, 894,
	895, 919, 920, 921, 0, 0, 0, 0, 917, 899,
	0, 937, 938, 939, 940, 941, 942, 943, 944, 945,
	946, 947, 948, 951, 1047, 1048, 0, 949, 950, 958,
	0, 0, 927, 772, 773, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 925, 922, 0, 1171,
	0, 0, 0, 998, 0, 0, 934, 1116, 0, 934,
	1116, 0, 0, 0, 0, 0, 0, 0, 1111, 1108,
	0, 0, 1034, 0, 0, 0, 926, 0, 0, 0,
	0, 869, 0, 0, 0, 0, 0, 0, 856, 0,
	0, 859, 0, 0, 0, 0, 0, 0, 0, 0,
	825, 1587, 827, 0, 876, 0, 0, 0, 925, 880,
	0, 880, 77, 880, 79, 0, 875, 1178, 0, 0,
	0, 88, 89, 84, 1182, 0, 1188, 1189, 1190, 1114,
	0, 1149, 387, 601, 603, 606, 607, 608, 391, 393,
	394, 395, 0, -2, 574, 1597, 1644, -2, -2, 566,
	1510, -2, -2, 398, 487, 485, 486, 417, 0, 492,
	492, 477, 477, 477, 477, 446, 492, 449, 452, 453,
	495, 0, 495, 495, 495, 495, 492, 0, 0, 438,
	439, 440, 429, 0, 430, 479, 432, 0, 433, 434,
	435, 436, 580, 581, 0, 0, 0, 94, 0, 103,
	-2, 502, 503, 504, 0, 499, 1204, 104, 0, 280,
	281, 0, 218, 0, 249, 250, 111, 0, 0, 265,
	0, 386, 0, 655, 0, 657, 254, 659, 669, 670,
	660, 0, 0, 719, 677, 678, 679, 880, 0, 0,
	691, 715, 716, 714, 717, 695, 709, 0, 0, 702,
	0, 738, 833, 330, 331, 353, 80, 0, 1233, 1252,
	0, 1256, 1258, 0, 201, 203, 0, 152, 0, 0,
	194, 0, 166, 0, 0, 0, 0, 0, 530, 0,
	614, 615, -2, 646, 1212, 646, 646, 632, 549, 646,
	0, 0, 0, 58, 0, 1160, 0, 0, 62, 47,
	0, 1492, 50, 0, 1145, 1146, 1138, 0, 1197, 1198,
	1125, 1126, 95, 769, 905, 907, 909, 0, 925, 896,
	917, 900, 0, 897, 0, 891, 0, 0, 787, 0,
	787, 787, 0, 984, 0, 985, 1012, 0, 997, 787,
	787, 0, 0, 0, 0, 0, 0, 991, 992, 993,
	994, 787, 787, 787, 787, 0, 0, 0, 787, 787,
	787, 0, 930, -2, 995, 996, 0, 0, 0, 0,
	0, 1040, 0, 0, 1041, 1006, 0, 0, 0, 0,
	0, 1135, 0, 1109, 0, 0, 1015, 1035, 1036, 1037,
	1038, 1039, 1165, 0, 0, 0, 1154, 0, 880, 1173,
	0, 0, 814, 847, 849, 0, 844, 857, 858, 860,
	0, 862, 0, 864, 865, 834, 820, 924, 822, 0,
	0, 0, 876, 831, 0, 0, 0, 0, 1135, 0,
	880, 70, 71, 0, 86, 87, 0, 0, 93, 496,
	497, 0, 217, 0, 604, 0, 392, 0, 567, 0,
	0, 566, 566, 562, 563, 566, 565, 566, 557, 567,
	558, 0, 403, 0, 405, 406, 407, 408, 409, 0,
	0, 0, 0, 0, 491, 0, 516, 518, 0, 0,
	413, 488, 0, 495, 495, 492, 444, 445, 477, 450,
	495, 454, 0, 455, 456, 457, 458, 495, 0, 475,
	0, 0, 431, 0, 597, 0, 1221, 96, 0, 505,
	506, 507, 0, 549, 549, 549, 0, 282, 283, 284,
	867, 0, 219, 220, 0, 0, 0, 0, 874, 121,
	0, 279, 0, 0, 0, 0, 0, 0, 0, 75,
	258, 686, 588, 589, 832, 693, 918, 703, 705, 706,
	492, 0, 1254, 0, 0, 0, 0, 0, 213, 196,
	0, 0, 0, 0, 159, 0, 0, 0, 566, 0,
	633, 634, 0, 647, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1213, 1214, 0, 0, 0,
	550, 0, 641, 642, 0, 1163, 1162, 0, 48, 49,
	1151, 38, 46, 0, 779, 1115, 0, 898, 0, 901,
	787, 928, 969, 788, 774, 0, 970, 971, 787, 780,
	781, 783, 986, 973, 974, 987, 988, 989, 787, 787,
	990, 978, 977, 976, 979, 0, 0, 787, 982, 981,
	983, 965, 0, 477, 477, 1094, 477, 481, 1097, 477,
	1099, 477, 1102, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1106, 1014, 1112, 0, 63, 0,
	1165, 1152, 1167, 1169, 0, 0, 0, 0, -2, 1438,
	0, 838, 1135, 0, 0, 0, 841, 848, 0, 0,
	842, 0, 843, 861, 863, 818, 0, 0, 823, 0,
	0, -2, 830, 0, 0, 0, 840, 1143, 881, 69,
	90, 91, 92, 602, 605, 0, 568, 477, 477, 0,
	572, 564, 573, 551, 553, 554, 556, 0, 404, 0,
	0, 412, 489, 0, 515, 517, 519, 520, 478, 442,
	443, 495, 451, 447, 493, 494, 459, 492, 0, 492,
	0, 482, 0, 584, 598, 0, 0, 0, 94, 549,
	0, 0, 0, 0, 226, 0, 222, 0, 0, 0,
	129, 0, 112, 113, 114, 116, 117, 0, 0, 0,
	110, 0, 267, 0, 270, 271, 656, 658, 717, 1244,
	868, 213, 202, 204, 205, 213, 216, 153, 0, 154,
	156, 0, 155, 535, 616, 0, 643, 0, 0, 1220,
	564, 0, -2, 619, 624, 625, 626, 627, 628, 0,
	639, 0, 621, 0, 643, 0, 636, 0, 0, 0,
	51, 44, 95, 95, 966, 902, 968, 0, 972, 785,
	784, 967, 975, 0, 0, 980, 999, 1091, 492, 1095,
	1096, 1098, 1100, 1101, 1103, 1001, 1000, 0, 0, 0,
	0, 1007, 0, 0, 0, 0, 0, 0, 1110, 0,
	64, 0, 1170, -2, 0, 0, 81, 0, 1143, 1174,
	1175, 1176, 845, 0, 850, 0, 836, 0, 876, 828,
	0, 0, 0, 0, 68, 541, 0, 1140, 1140, 566,
	566, 0, 0, 0, 490, 0, 0, 448, 495, 476,
	495, 0, 0, 599, 0, 94, 96, 0, 510, 511,
	512, 513, 514, 0, 95, 227, 228, 0, 0, 0,
	233, 0, 0, 0, 0, 0, 221, 223, 224, 225,
	147, 130, 131, 0, 0, 0, 0, 122, 123, 0,
	0, 0, 0, 0, 118, 119, 120, 266, 0, 0,
	269, 0, 0, 692, 1246, 1240, 206, 206, 0, 157,
	0, 618, 644, 0, 402, 402, 0, 566, 566, 635,
	0, 1210, 1211, 0, 630, 643, 0, 0, 0, 1164,
	880, 0, 0, 770, 775, 1135, 0, 0, 0, 1092,
	1093, 0, 0, 0, 0, 1008, 1009, 1010, 1042, 1013,
	1107, 0, 1168, 1153, 0, 1157, 0, 839, 67, 0,
	835, 0, 824, 826, 876, 877, 878, 879, 540, 544,
	0, 549, 0, 569, 570, 571, 552, 555, 0, 399,
	0, 465, 466, 480, 483, 0, 101, 0, 508, 509,
	0, 96, 229, 230, 231, 232, 234, 235, 0, 0,
	0, 107, 0, 0, 132, 0, 0, 0, 0, 142,
	143, 144, 145, 146, 124, 125, 126, 127, 128, 115,
	0, 0, 268, 0, 273, 274, 1207, 1248, -2, 0,
	150, 0, 151, 214, 617, 645, 396, 397, 0, 1220,
	0, 620, 629, 631, 0, 638, 0, 1127, 45, 95,
	789, 0, 1031, 1032, 1002, 1004, 1003, 1005, 0, 0,
	0, 0, 1156, 0, 846, 837, 829, 545, 546, 0,
	548, 0, 410, 400, 401, 0, 542, 94, 0, 0,
	236, 237, 238, 239, 148, 149, 133, 134, 0, 136,
	137, 0, 0, 0, 276, 0, 272, 834, 0, 1240,
	0, 1242, 0, 1239, 0, 207, 0, 0, 0, 637,
	0, 649, 0, 1132, 0, 771, 0, 0, 0, 786,
	1011, 0, 0, 0, 1166, -2, 547, 0, 399, 100,
	543, 102, 285, 94, 356, 357, 358, 359, 360, 361,
	362, 363, 364, 365, 366, 367, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 383, 384, 385, 0, 0, 0, 0, 0, 138,
	0, 140, 141, 275, 0, 36, 0, 1247, 0, 1245,
	0, 0, 1241, 0, 542, 0, 0, 648, 0, 0,
	799, 0, 0, 782, 790, 0, 793, 0, 0, 0,
	804, 0, 791, 1043, 0, 1046, 0, 411, 94, 0,
	0, 106, 0, 0, 1222, 0, 0, 312, 313, 314,
	1224, 0, 354, 135, 139, 277, 1208, 1209, 1249, 0,
	0, 0, 622, 0, 542, 650, 0, 43, 0, 1133,
	1134, 1128, 1129, 1131, 0, 794, 795, 796, 797, 798,
	0, 1044, 0, 96, 286, 287, 0, 296, 0, 0,
	0, 0, 0, 310, 0, 0, 1243, 1237, 208, 209,
	210, 212, 542, 640, 0, 800, 801, 0, 0, 0,
	805, 0, 575, 0, 0, 0, 297, 0, 0, 0,
	0, 0, 0, 1225, 240, 355, 0, 623, 0, 0,
	0, 1130, 792, 0, 576, 577, 0, 94, 288, 289,
	290, 291, 292, 0, 294, 0, 0, 0, 306, 307,
	308, 0, 315, 317, 318, 319, 0, 321, 322, 311,
	211, 0, 802, 803, 1045, 578, 0, 579, 0, 0,
	0, 105, 0, 0, 0, 0, 0, 0, 303, 0,
	309, 0, 320, 0, 0, 590, 592, 593, 0, 0,
	591, 0, 0, 298, 299, 0, 0, 0, 304, 0,
	316, 651, 652, 594, 595, 596, 293, 295, 0, 301,
	0, 0, 0, 0, 0, 300, 0, 305, 302,
}

var yyTok1 = [...]int16{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 92, 3, 3, 3, 127, 119, 3,
	68, 70, 124, 122, 69, 123, 177, 125, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 556,
	101, 100, 102, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 129, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 118, 3, 130,
}

var yyTok2 = [...]int16{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 82, 83, 84, 85,
	86, 87, 88, 89, 90, 91, 93, 94, 95, 96,
	97, 98, 99, 103, 104, 105, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 116, 117, 120, 121,
	126, 128, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 274, 275,
}

var yyTok3 = [...]uint16{
	57600, 276, 57601, 277, 57602, 278, 57603, 279, 57604, 280,
	57605, 281, 57606, 282, 57607, 283, 57608, 284, 57609, 285,
	57610, 286, 57611, 287, 57612, 288, 57613, 289, 57614, 290,
	57615, 291, 57616, 292, 57617, 293, 57618, 294, 57619, 295,
	57620, 296, 57621, 297, 57622, 298, 57623, 299, 57624, 300,
	57625, 301, 57626, 302, 57627, 303, 57628, 304, 57629, 305,
	57630, 306, 57631, 307, 57632, 308, 57633, 309, 57634, 310,
	57635, 311, 57636, 312, 57637, 313, 57638, 314, 57639, 315,
	57640, 316, 57641, 317, 57642, 318, 57643, 319, 57644, 320,
	57645, 321, 57646, 322, 57647, 323, 57648, 324, 57649, 325,
	57650, 326, 57651, 327, 57652, 328, 57653, 329, 57654, 330,
	57655, 331, 57656, 332, 57657, 333, 57658, 334, 57659, 335,
	57660, 336, 57661, 337, 57662, 338, 57663, 339, 57664, 340,
	57665, 341, 57666, 342, 57667, 343, 57668, 344, 57669, 345,
	57670, 346, 57671, 347, 57672, 348, 57673, 349, 57674, 350,
	57675, 351, 57676, 352, 57677, 353, 57678, 354, 57679, 355,
	57680, 356, 57681, 357, 57682, 358, 57683, 359, 57684, 360,
	57685, 361, 57686, 362, 57687, 363, 57688, 364, 57689, 365,
	57690, 366, 57691, 367, 57692, 368, 57693, 369, 57694, 370,
	57695, 371, 57696, 372, 57697, 373, 57698, 374, 57699, 375,
	57700, 376, 57701, 377, 57702, 378, 57703, 379, 57704, 380,
	57705, 381, 57706, 382, 57707, 383, 57708, 384, 57709, 385,
	57710, 386, 57711, 387, 57712, 388, 57713, 389, 57714, 390,
	57715, 391, 57716, 392, 57717, 393, 57718, 394, 57719, 395,
	57720, 396, 57721, 397, 57722, 398, 57723, 399, 57724, 400,
	57725, 401, 57726, 402, 57727, 403, 57728, 404, 57729, 405,
	57730, 406, 57731, 407, 57732, 408, 57733, 409, 57734, 410,
	57735, 411, 57736, 412, 57737, 413, 57738, 414, 57739, 415,
	57740, 416, 57741, 417, 57742, 418, 57743, 419, 57744, 420,
	57745, 421, 57746, 422, 57747, 423, 57748, 424, 57749, 425,
	57750, 426, 57751, 427, 57752, 428, 57753, 429, 57754, 430,
	57755, 431, 57756, 432, 57757, 433, 57758, 434, 57759, 435,
	57760, 436, 57761, 437, 57762, 438, 57763, 439, 57764, 440,
	57765, 441, 57766, 442, 57767, 443, 57768, 444, 57769, 445,
	57770, 446, 57771, 447, 57772, 448, 57773, 449, 57774, 450,
	57775, 451, 57776, 452, 57777, 453, 57778, 454, 57779, 455,
	57780, 456, 57781, 457, 57782, 458, 57783, 459, 57784, 460,
	57785, 461, 57786, 462, 57787, 463, 57788, 464, 57789, 465,
	57790, 466, 57791, 467, 57792, 468, 57793, 469, 57794, 470,
	57795, 471, 57796, 472, 57797, 473, 57798, 474, 57799, 475,
	57800, 476, 57801, 477, 57802, 478, 57803, 479, 57804, 480,
	57805, 481, 57806, 482, 57807, 483, 57808, 484, 57809, 485,
	57810, 486, 57811, 487, 57812, 488, 57813, 489, 57814, 490,
	57815, 491, 57816, 492, 57817, 493, 57818, 494, 57819, 495,
	57820, 496, 57821, 497, 57822, 498, 57823, 499, 57824, 500,
	57825, 501, 57826, 502, 57827, 503, 57828, 504, 57829, 505,
	57830, 506, 57831, 507, 57832, 508, 57833, 509, 57834, 510,
	57835, 511, 57836, 512, 57837, 513, 57838, 514, 57839, 515,
	57840, 516, 57841, 517, 57842, 518, 57843, 519, 57844, 520,
	57845, 521, 57846, 522, 57847, 523, 57848, 524, 57849, 525,
	57850, 526, 57851, 527, 57852, 528, 57853, 529, 57854, 530,
	57855, 531, 57856, 532, 57857, 533, 57858, 534, 57859, 535,
	57860, 536, 57861, 537, 57862, 538, 57863, 539, 57864, 540,
	57865, 541, 57866, 542, 57867, 543, 57868, 544, 57869, 545,
	57870, 546, 57871, 547, 57872, 548, 57873, 549, 57874, 550,
	57875, 551, 57876, 552, 57877, 553, 57878, 554, 57879, 555,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := int(yyPact[state])
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && int(yyChk[int(yyAct[n])]) == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || int(yyExca[i+1]) != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := int(yyExca[i])
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = int(yyTok1[0])
		goto out
	}
	if char < len(yyTok1) {
		token = int(yyTok1[char])
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = int(yyTok2[char-yyPrivate])
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = int(yyTok3[i+0])
		if token == char {
			token = int(yyTok3[i+1])
			goto out
		}
	}

out:
	if token == 0 {
		token = int(yyTok2[1]) /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = int(yyPact[yystate])
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = int(yyAct[yyn])
	if int(yyChk[yyn]) == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = int(yyDef[yystate])
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && int(yyExca[xi+1]) == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = int(yyExca[xi+0])
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = int(yyExca[xi+1])
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = int(yyPact[yyS[yyp].yys]) + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = int(yyAct[yyn]) /* simulate a shift of "error" */
					if int(yyChk[yystate]) == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= int(yyR2[yyn])
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = int(yyR1[yyn])
	yyg := int(yyPgo[yyn])
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = int(yyAct[yyg])
	} else {
		yystate = int(yyAct[yyj])
		if int(yyChk[yystate]) != -yyn {
			yystate = int(yyAct[yyg])
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:517
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:521
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:528
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:563
		{
			setParseTree(yylex, nil)
		}
	case 36:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:569
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 37:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:575
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			if err := yyDollar[1].selStmt.SetInto(yyDollar[5].into); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 38:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:586
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:592
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 40:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:602
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:609
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 42:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:613
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 43:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:619
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr), Window: yyDollar[13].window, Into: yyDollar[8].into}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 44:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:627
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:631
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 46:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:640
		{
			yyVAL.into = nil
		}
	case 47:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:644
		{
			yyVAL.into = &Into{Variables: yyDollar[2].variables}
		}
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:648
		{
			yyVAL.into = &Into{Outfile: string(yyDollar[3].bytes)}
		}
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:652
		{
			yyVAL.into = &Into{Dumpfile: string(yyDollar[3].bytes)}
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:658
		{
			yyVAL.variables = Variables{yyDollar[1].colIdent}
		}
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:662
		{
			yyVAL.variables = append(yyVAL.variables, yyDollar[3].colIdent)
		}
	case 52:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:668
		{
			yyDollar[2].selStmt.SetWith(yyDollar[1].with)
			yyVAL.selStmt = yyDollar[2].selStmt
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:673
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 54:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:679
		{
			yyVAL.with = &With{Ctes: yyDollar[2].tableExprs, Recursive: false}
		}
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:683
		{
			yyVAL.with = &With{Ctes: yyDollar[3].tableExprs, Recursive: true}
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:689
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:693
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:699
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[4].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[2].columns}
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:705
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:713
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:719
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:727
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 63:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:733
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].assignExprs)
			yyVAL.statement = ins
		}
	case 64:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:745
		{
			cols := make(Columns, 0, len(yyDollar[7].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].assignExprs))
			for _, updateList := range yyDollar[7].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].assignExprs)}
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:757
		{
			yyVAL.str = InsertStr
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:761
		{
			yyVAL.str = ReplaceStr
		}
	case 67:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:767
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].assignExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 68:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:773
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 69:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:777
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 70:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:781
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 71:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:785
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:790
		{
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:791
		{
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:795
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:799
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:805
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:809
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:815
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:819
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 80:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:824
		{
			yyVAL.partitions = nil
		}
	case 81:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:828
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 82:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:834
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 83:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:838
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 84:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:845
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:854
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:858
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:864
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 88:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:868
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 89:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:872
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:878
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 91:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:882
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:886
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:890
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 94:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:895
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 95:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:900
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:905
		{
			yyVAL.boolean = yySpecialCommentMode(yylex)
		}
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:911
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:920
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:925
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 100:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:930
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 101:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:934
		{
			yyDollar[2].viewSpec.ViewName = yyDollar[4].tableName.ToViewName()
			yyDollar[2].viewSpec.ViewExpr = yyDollar[8].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[2].viewSpec, SpecialCommentMode: yyDollar[7].boolean, SubStatementPositionStart: yyDollar[6].int, SubStatementPositionEnd: yyDollar[9].int - 1}
		}
	case 102:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:940
		{
			yyDollar[4].viewSpec.ViewName = yyDollar[6].tableName.ToViewName()
			yyDollar[4].viewSpec.ViewExpr = yyDollar[10].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[4].viewSpec, SpecialCommentMode: yyDollar[9].boolean, SubStatementPositionStart: yyDollar[8].int, SubStatementPositionEnd: yyDollar[11].int - 1, OrReplace: true}
		}
	case 103:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:946
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 104:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:954
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 105:
		yyDollar = yyS[yypt-16 : yypt+1]
//line sql.y:962
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName, Definer: yyDollar[2].str, Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[15].statement}, SpecialCommentMode: yyDollar[14].boolean, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[16].int - 1}
		}
	case 106:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:966
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName, Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[11].statement}, SpecialCommentMode: yyDollar[10].boolean, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[12].int - 1}
		}
	case 107:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:970
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].tlsOptionItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].accountLimitItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].passLockItems)
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames, TLSOptions: tlsOptions, AccountLimits: accountLimits, PasswordOptions: passwordOptions, Locked: locked, Attribute: yyDollar[9].str}
		}
	case 108:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:989
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:998
		{
			yyVAL.accountNames = nil
		}
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1002
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 111:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1007
		{
			yyVAL.tlsOptionItems = nil
		}
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1011
		{
			yyVAL.tlsOptionItems = nil
		}
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1015
		{
			yyVAL.tlsOptionItems = yyDollar[2].tlsOptionItems
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1021
		{
			yyVAL.tlsOptionItems = []TLSOptionItem{yyDollar[1].tlsOptionItem}
		}
	case 115:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1025
		{
			yyVAL.tlsOptionItems = append(yyDollar[1].tlsOptionItems, yyDollar[3].tlsOptionItem)
		}
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1031
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1035
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1039
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1043
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1047
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1052
		{
			yyVAL.accountLimitItems = nil
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1056
		{
			yyVAL.accountLimitItems = yyDollar[2].accountLimitItems
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1062
		{
			yyVAL.accountLimitItems = []AccountLimitItem{yyDollar[1].accountLimitItem}
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1066
		{
			yyVAL.accountLimitItems = append(yyDollar[1].accountLimitItems, yyDollar[2].accountLimitItem)
		}
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1072
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1076
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1080
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1084
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1089
		{
			yyVAL.passLockItems = nil
		}
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1093
		{
			yyVAL.passLockItems = yyDollar[1].passLockItems
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1099
		{
			yyVAL.passLockItems = []PassLockItem{yyDollar[1].passLockItem}
		}
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1103
		{
			yyVAL.passLockItems = append(yyDollar[1].passLockItems, yyDollar[2].passLockItem)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1109
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1113
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 135:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1117
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1121
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 137:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1125
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 138:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1129
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 139:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1133
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 140:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1137
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 141:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1141
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1145
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1149
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1153
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1157
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1161
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 147:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1166
		{
			yyVAL.str = ""
		}
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1170
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.str = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1175
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 150:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1181
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 151:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1186
		{
			yyVAL.statement = &GrantPrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 152:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1190
		{
			yyVAL.statement = &GrantRole{Roles: yyDollar[2].accountNames, To: yyDollar[4].accountNames, WithAdminOption: yyDollar[5].boolean}
		}
	case 153:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1194
		{
			yyVAL.statement = &GrantProxy{On: yyDollar[4].accountName, To: yyDollar[6].accountNames, WithGrantOption: yyDollar[7].boolean}
		}
	case 154:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1200
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &RevokePrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 155:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1205
		{
			yyVAL.statement = &RevokePrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 156:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1209
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[7].accountNames}
		}
	case 157:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1213
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[8].accountNames}
		}
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1217
		{
			yyVAL.statement = &RevokeRole{Roles: yyDollar[2].accountNames, From: yyDollar[4].accountNames}
		}
	case 159:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1221
		{
			yyVAL.statement = &RevokeProxy{On: yyDollar[4].accountName, From: yyDollar[6].accountNames}
		}
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1227
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].strs}
		}
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1231
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].strs}
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1235
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].strs}
		}
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1239
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].strs}
		}
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1243
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].strs}
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1247
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].strs}
		}
	case 166:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1251
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].strs}
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1255
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].strs}
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1259
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].strs}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1263
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].strs}
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1267
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].strs}
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1271
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].strs}
		}
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1275
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].strs}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1279
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].strs}
		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1283
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].strs}
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1287
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].strs}
		}
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1291
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].strs}
		}
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1295
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].strs}
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1299
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].strs}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1303
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].strs}
		}
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1307
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].strs}
		}
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1311
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].strs}
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1315
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].strs}
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1319
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].strs}
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1323
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].strs}
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1327
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].strs}
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1331
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].strs}
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1335
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].strs}
		}
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1339
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].strs}
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1343
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].strs}
		}
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1347
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].strs}
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1353
		{
			yyVAL.grantPrivileges = []Privilege{yyDollar[1].grantPrivilege}
		}
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1357
		{
			yyVAL.grantPrivileges = append(yyDollar[1].grantPrivileges, yyDollar[3].grantPrivilege)
		}
	case 193:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1362
		{
			yyVAL.strs = nil
		}
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1366
		{
			yyVAL.strs = yyDollar[2].strs
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1372
		{
			yyVAL.strs = []string{yyDollar[1].colIdent.String()}
		}
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1376
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].colIdent.String())
		}
	case 197:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1381
		{
			yyVAL.grantObjectType = GrantObjectType_Any
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1385
		{
			yyVAL.grantObjectType = GrantObjectType_Table
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1389
		{
			yyVAL.grantObjectType = GrantObjectType_Function
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1393
		{
			yyVAL.grantObjectType = GrantObjectType_Procedure
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1399
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1403
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1407
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].colIdent.String()}
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1411
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: "*"}
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1415
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: yyDollar[3].colIdent.String()}
		}
	case 206:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1420
		{
			yyVAL.grantAssumption = nil
		}
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1424
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 208:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1428
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 209:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1432
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].accountName, Roles: nil}
		}
	case 210:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1436
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].accountName, Roles: nil}
		}
	case 211:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1440
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].accountName, Roles: yyDollar[7].accountNames}
		}
	case 212:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1444
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].accountName, Roles: yyDollar[5].accountNames}
		}
	case 213:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1449
		{
			yyVAL.boolean = false
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1453
		{
			yyVAL.boolean = true
		}
	case 215:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1458
		{
			yyVAL.boolean = false
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1462
		{
			yyVAL.boolean = true
		}
	case 217:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1469
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 218:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1481
		{
			yyVAL.procedureParams = nil
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1485
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1491
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1495
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1501
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[1].colIdent.String(), Type: yyDollar[2].columnType}
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1505
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1509
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1513
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 226:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1518
		{
			yyVAL.characteristics = nil
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1522
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1528
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1532
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1538
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1542
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1546
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1550
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1554
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1558
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1562
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1566
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1570
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1574
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 240:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1580
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1586
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: "", Definer: yyDollar[1].str, Security: yyDollar[2].str}
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1590
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: yyDollar[1].str, Definer: yyDollar[2].str, Security: yyDollar[3].str}
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1596
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1600
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1604
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 246:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1609
		{
			yyVAL.str = ""
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1613
		{
			yyVAL.str = yyDollar[3].accountName.String()
		}
	case 248:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1618
		{
			yyVAL.str = ""
		}
	case 249:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1622
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 250:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1626
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1632
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1636
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1640
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1646
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 255:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1654
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1658
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1664
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1668
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1674
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1682
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1690
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1700
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1704
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1710
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 265:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1714
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 266:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1718
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 267:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1722
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 268:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1726
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 269:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1732
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1736
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1740
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 272:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1744
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 273:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1748
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 274:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1752
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 275:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1758
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1762
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 277:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1766
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1772
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1776
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1782
		{
			yyVAL.str = BeforeStr
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1786
		{
			yyVAL.str = AfterStr
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1792
		{
			yyVAL.str = InsertStr
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1796
		{
			yyVAL.str = UpdateStr
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1800
		{
			yyVAL.str = DeleteStr
		}
	case 285:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1805
		{
			yyVAL.triggerOrder = nil
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1809
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1813
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1819
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 293:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1829
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 294:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1835
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 295:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1839
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1845
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1849
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 298:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1855
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 299:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1861
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 300:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1866
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 301:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1871
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 302:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1877
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1885
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1889
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 305:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1895
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 306:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1901
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 307:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1905
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 308:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1909
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 309:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1913
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1917
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 311:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1921
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1928
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1932
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1936
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1942
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1946
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1952
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1956
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1960
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1964
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1968
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1972
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1978
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 324:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1982
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1986
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 326:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1990
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1996
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2000
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2006
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2010
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2016
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2022
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2026
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2030
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2034
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2038
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2042
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2046
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2050
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2054
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2058
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2062
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2066
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2072
		{
			yyVAL.statement = &Resignal{}
		}
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2076
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 346:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2080
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2084
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2088
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 349:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2092
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2098
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 351:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2103
		{
			yyVAL.exprs = nil
		}
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2107
		{
			yyVAL.exprs = nil
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2111
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2117
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2121
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2127
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 386:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2162
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
		}
	case 387:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2178
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2185
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2190
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2195
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2201
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 392:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2205
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2210
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2214
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2218
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2224
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2232
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2242
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 399:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2251
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2255
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2259
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 402:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2264
		{
			yyVAL.columnType = ColumnType{}
		}
	case 403:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2268
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2277
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2286
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2295
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2304
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2313
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2322
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 410:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2331
		{
			opt := ColumnType{GeneratedExpr: yyDollar[4].expr, Stored: yyDollar[6].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 411:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2340
		{
			opt := ColumnType{GeneratedExpr: yyDollar[6].expr, Stored: yyDollar[8].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2349
		{
			opt := ColumnType{SRID: NewIntVal(yyDollar[3].bytes)}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2360
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2371
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2376
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2382
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2386
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2390
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2394
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2398
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2402
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2406
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2410
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2414
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2418
		{
			yyVAL.columnType = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 429:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2424
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 430:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2430
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2436
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2442
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 433:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2448
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2454
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 435:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2460
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2466
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2474
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2478
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2482
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2486
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2490
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2496
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 443:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2500
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2504
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2508
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2512
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2516
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 448:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2520
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2524
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2528
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2532
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2536
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2540
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2544
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2548
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2552
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2556
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2560
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 459:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2564
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2568
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2572
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2576
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2580
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2584
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 465:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2588
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 466:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2593
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2599
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2603
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2607
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2611
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2615
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2619
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2623
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2627
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2633
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2638
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 477:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2643
		{
			yyVAL.sqlVal = nil
		}
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2647
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 479:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2652
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 480:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2656
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 481:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2664
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2668
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 483:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2674
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 484:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2682
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2686
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2690
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2695
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2699
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2705
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2711
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2717
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 492:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2722
		{
			yyVAL.str = ""
		}
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2726
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2730
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2735
		{
			yyVAL.str = ""
		}
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2739
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2743
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2748
		{
			yyVAL.boolean = false
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2752
		{
			yyVAL.boolean = true
		}
	case 500:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2757
		{
			yyVAL.charsetCollates = nil
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2761
		{
			yyVAL.charsetCollates = yyDollar[1].charsetCollates
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2767
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2771
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2775
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2779
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 506:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2783
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 507:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2787
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 508:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2793
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 509:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2797
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 510:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2801
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 511:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2805
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 512:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2811
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 513:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2815
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 514:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2821
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 515:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2827
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2831
		{
			yyVAL.colKeyOpt = colKey
		}
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2835
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2839
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2843
		{
			yyVAL.colKeyOpt = colKeyFulltextKey
		}
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2849
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 521:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2855
		{
			yyVAL.statement = &Flush{Type: yyDollar[2].str, Option: yyDollar[3].flushOption}
		}
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2861
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2865
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2869
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2873
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2877
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2881
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2885
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2889
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2893
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].str}
		}
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2897
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2901
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2905
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 534:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2910
		{
			yyVAL.str = ""
		}
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2912
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2916
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2918
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 538:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2921
		{
			yyVAL.str = ""
		}
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2923
		{
			yyVAL.str = yyDollar[1].str
		}
	case 540:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2927
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 541:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2931
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 542:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2936
		{
			yyVAL.indexOptions = nil
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2940
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2946
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2950
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2956
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2960
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2965
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 549:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2971
		{
			yyVAL.str = ""
		}
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2975
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2983
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 552:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2987
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2991
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2995
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true}
		}
	case 555:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2999
		{
			var name string
			name = yyDollar[2].str
			if name == "" {
				name = yyDollar[5].str
			}
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].str), Name: NewColIdent(name), Unique: true}
		}
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3008
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3012
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3016
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3022
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3026
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3030
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3036
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3040
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 564:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3045
		{
			yyVAL.str = ""
		}
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3049
		{
			yyVAL.str = yyDollar[1].str
		}
	case 566:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3054
		{
			yyVAL.str = ""
		}
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3058
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3064
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3068
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3074
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3078
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3084
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3088
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3092
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 575:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3098
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 576:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3102
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 577:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3106
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 578:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3110
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 579:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3114
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3120
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3124
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 582:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3128
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3132
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 584:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3138
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3144
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3148
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 587:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3153
		{
			yyVAL.str = ""
		}
	case 588:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3157
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3161
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3167
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3173
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3179
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3183
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3187
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3191
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3195
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 597:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3200
		{
			yyVAL.boolean = true
		}
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3204
		{
			yyVAL.boolean = true
		}
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3208
		{
			yyVAL.boolean = false
		}
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3213
		{
			yyVAL.str = ""
		}
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3217
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3221
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 603:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3229
		{
			yyVAL.str = yyDollar[1].str
		}
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3233
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3237
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3243
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3247
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3251
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 609:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3256
		{
			yyVAL.str = ""
		}
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3260
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3265
		{
			yyVAL.str = string("")
		}
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3269
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 614:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3278
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3291
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3295
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 617:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3301
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3308
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3315
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 620:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3319
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3323
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 622:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3328
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 623:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3332
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3336
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3341
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3346
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3351
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3356
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 629:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3360
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 630:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3364
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 631:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3371
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3377
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3381
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3387
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3393
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3398
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 637:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3402
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 638:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3406
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3410
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 640:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3416
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[7].indexColumns, Options: yyDollar[9].indexOptions}
			yyVAL.ddl = ddl
		}
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3422
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3426
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 643:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3431
		{
			yyVAL.columnOrder = nil
		}
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3435
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3439
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 646:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3444
		{
		}
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3446
		{
		}
	case 648:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3450
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3456
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3460
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 651:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3466
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 652:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3470
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3476
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3480
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3486
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 656:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3490
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3498
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 658:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3502
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 659:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3508
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 660:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3516
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 661:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3520
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3528
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3536
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3544
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName}, IfExists: exists}
		}
	case 665:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3552
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName}, IfExists: exists}
		}
	case 666:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3560
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 667:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3568
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 668:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3577
		{

		}
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3581
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3585
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3591
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3595
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3601
		{
			yyVAL.statement = &Analyze{Tables: yyDollar[3].tableNames}
		}
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3607
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 675:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3612
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3616
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 677:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3620
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 678:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3624
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 679:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3628
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 680:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3633
		{
			yyVAL.statement = &Show{Type: CreateProcedureStr, Table: yyDollar[4].tableName}
		}
	case 681:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3637
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 682:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3641
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3645
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3649
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3653
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 686:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3657
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3661
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 688:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3665
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 689:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3669
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 690:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3673
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 691:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3677
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 692:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3681
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, AsOf: yyDollar[7].expr, Filter: yyDollar[8].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, Table: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 693:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3686
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3691
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 695:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3695
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 696:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3699
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3703
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3707
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3713
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3721
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3725
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 702:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3730
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 703:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3734
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3739
		{
			yyVAL.statement = &ShowPrivileges{}
		}
	case 705:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3743
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 706:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3747
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3751
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3755
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3761
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 710:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3767
		{
			yyVAL.boolean = false
		}
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3771
		{
			yyVAL.boolean = true
		}
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3777
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3781
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 714:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3787
		{
			yyVAL.str = ""
		}
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3791
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3795
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 717:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3801
		{
			yyVAL.showFilter = nil
		}
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3805
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3809
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[3].bytes)}
		}
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3813
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 721:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3819
		{
			yyVAL.str = ""
		}
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3823
		{
			yyVAL.str = SessionStr
		}
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3827
		{
			yyVAL.str = GlobalStr
		}
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3833
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 725:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3837
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: yyDollar[2].tableIdent.v + "/" + yyDollar[4].tableIdent.v}}
		}
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3841
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3847
		{
			yyVAL.statement = &Begin{}
		}
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3851
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3857
		{
			yyVAL.statement = &Begin{}
		}
	case 730:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3861
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3865
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3871
		{
			yyVAL.statement = &Commit{}
		}
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3877
		{
			yyVAL.statement = &Rollback{}
		}
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3883
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3889
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3893
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3897
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 738:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3901
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3907
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3912
		{
		}
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3913
		{
		}
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3917
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3921
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3927
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 748:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3935
		{
			yyVAL.str = ""
		}
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3939
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3950
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[3].expr}
			yyVAL.statement = &Show{Type: "columns", Table: yyDollar[2].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 753:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3956
		{
			setAllowComments(yylex, true)
		}
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3960
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 755:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3966
		{
			yyVAL.bytes2 = nil
		}
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3970
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3976
		{
			yyVAL.str = UnionStr
		}
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3980
		{
			yyVAL.str = UnionAllStr
		}
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3984
		{
			yyVAL.str = UnionDistinctStr
		}
	case 760:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3989
		{
			yyVAL.byt = 0
		}
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3993
		{
			yyVAL.byt = 1
		}
	case 762:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3998
		{
			yyVAL.str = ""
		}
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4002
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4006
		{
			yyVAL.str = SQLCacheStr
		}
	case 765:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4011
		{
			yyVAL.str = ""
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4015
		{
			yyVAL.str = ""
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4019
		{
			yyVAL.str = DistinctStr
		}
	case 768:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4024
		{
			yyVAL.str = ""
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4028
		{
			yyVAL.str = StraightJoinHint
		}
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4034
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 771:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4042
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4053
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4057
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4061
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 775:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4065
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4071
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4075
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4079
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 779:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4083
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4089
		{
			yyVAL.over = &Over{NameRef: yyDollar[2].colIdent}
		}
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4093
		{
			yyVAL.over = (*Over)(yyDollar[2].windowDef)
		}
	case 782:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4099
		{
			yyVAL.windowDef = &WindowDef{NameRef: yyDollar[2].colIdent, PartitionBy: yyDollar[3].exprs, OrderBy: yyDollar[4].orderBy, Frame: yyDollar[5].frame}
		}
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4104
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4107
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4112
		{
			yyVAL.exprs = nil
		}
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4116
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 787:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4121
		{
			yyVAL.over = nil
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4125
		{
			yyVAL.over = yyDollar[1].over
		}
	case 789:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4130
		{
			yyVAL.frame = nil
		}
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4134
		{
			yyVAL.frame = &Frame{Unit: RowsUnit, Extent: yyDollar[2].frameExtent}
		}
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4138
		{
			yyVAL.frame = &Frame{Unit: RangeUnit, Extent: yyDollar[2].frameExtent}
		}
	case 792:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4145
		{
			startBound := yyDollar[2].frameBound
			endBound := yyDollar[4].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound, End: endBound}
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4168
		{
			startBound := yyDollar[1].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound}
		}
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4183
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedPreceding}
		}
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4187
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedFollowing}
		}
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4191
		{
			yyVAL.frameBound = &FrameBound{Type: CurrentRow}
		}
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4195
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprPreceding,
			}
		}
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4202
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprFollowing,
			}
		}
	case 799:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4210
		{
			yyVAL.window = nil
		}
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4213
		{
			yyVAL.window = yyDollar[2].window
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4219
		{
			yyVAL.window = Window{yyDollar[1].windowDef}
		}
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4222
		{
			yyVAL.window = append(yyDollar[1].window, yyDollar[3].windowDef)
		}
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4228
		{
			def := yyDollar[3].windowDef
			def.Name = yyDollar[1].colIdent
			yyVAL.windowDef = def
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4237
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4241
		{
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 806:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4246
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4250
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4254
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4260
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4264
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4268
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4272
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4278
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4282
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4292
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 818:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4296
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4306
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4312
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4319
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4325
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 824:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4329
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4335
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 826:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4340
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4351
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 828:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4355
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 829:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4359
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4363
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4367
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 832:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4378
		{
			yyVAL.expr = nil
		}
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4382
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 834:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4387
		{
			yyVAL.columns = nil
		}
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4391
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4397
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4401
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4407
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4411
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 840:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4417
		{
			yyVAL.tableExpr = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].selectExprs}
		}
	case 841:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4430
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 842:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4434
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 843:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4438
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4442
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 845:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4448
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 846:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4450
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 847:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4454
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4456
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 849:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4460
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4462
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 851:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4465
		{
			yyVAL.empty = struct{}{}
		}
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4467
		{
			yyVAL.empty = struct{}{}
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4472
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4476
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4482
		{
			yyVAL.str = JoinStr
		}
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4486
		{
			yyVAL.str = JoinStr
		}
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4490
		{
			yyVAL.str = JoinStr
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4496
		{
			yyVAL.str = StraightJoinStr
		}
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4502
		{
			yyVAL.str = LeftJoinStr
		}
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4506
		{
			yyVAL.str = LeftJoinStr
		}
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4510
		{
			yyVAL.str = RightJoinStr
		}
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4514
		{
			yyVAL.str = RightJoinStr
		}
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4520
		{
			yyVAL.str = NaturalJoinStr
		}
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4524
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4534
		{
			yyVAL.triggerName = TriggerName{Name: yyDollar[1].colIdent}
		}
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4538
		{
			yyVAL.triggerName = TriggerName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4544
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4550
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4554
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4560
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4564
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4570
		{
			yyVAL.procedureName = ProcedureName{Name: yyDollar[1].colIdent}
		}
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4574
		{
			yyVAL.procedureName = ProcedureName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4580
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 876:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4585
		{
			yyVAL.indexHints = nil
		}
	case 877:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4589
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 878:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4593
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 879:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4597
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 880:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4602
		{
			yyVAL.expr = nil
		}
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4606
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4612
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4616
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4620
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4624
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 886:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4628
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4632
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4636
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 889:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4640
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 890:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4646
		{
			yyVAL.str = ""
		}
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4650
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4656
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4660
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 894:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4666
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4670
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 896:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4674
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 897:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4678
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 898:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4682
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4686
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 900:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4690
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 901:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4694
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 902:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4698
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4702
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4708
		{
			yyVAL.str = IsNullStr
		}
	case 905:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4712
		{
			yyVAL.str = IsNotNullStr
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4716
		{
			yyVAL.str = IsTrueStr
		}
	case 907:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4720
		{
			yyVAL.str = IsNotTrueStr
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4724
		{
			yyVAL.str = IsFalseStr
		}
	case 909:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4728
		{
			yyVAL.str = IsNotFalseStr
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4734
		{
			yyVAL.str = EqualStr
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4738
		{
			yyVAL.str = LessThanStr
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4742
		{
			yyVAL.str = GreaterThanStr
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4746
		{
			yyVAL.str = LessEqualStr
		}
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4750
		{
			yyVAL.str = GreaterEqualStr
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4754
		{
			yyVAL.str = NotEqualStr
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4758
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 917:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4763
		{
			yyVAL.expr = nil
		}
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4767
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4773
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4777
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4781
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4787
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4793
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4797
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 925:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4803
		{
			yyVAL.selectExprs = nil
		}
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4810
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4814
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4820
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4824
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4830
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4834
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4838
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4842
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4846
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4850
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4854
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4858
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4862
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4866
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4870
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4874
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4878
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4882
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4886
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4890
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4894
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4898
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4902
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4906
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4910
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4914
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 953:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4918
		{
			yyVAL.expr = &UnaryExpr{Operator: yyDollar[1].str, Expr: yyDollar[2].expr}
		}
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4922
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4930
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4944
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 957:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4948
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4952
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 965:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4972
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 966:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4976
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 967:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4986
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 968:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4990
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 969:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4994
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 970:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4998
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 971:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5002
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 972:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5006
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 973:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5010
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 974:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5014
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 975:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5018
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 976:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5022
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 977:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5026
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 978:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5030
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 979:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5034
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 980:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5038
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 981:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5042
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 982:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5046
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 983:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5050
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 984:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5059
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 985:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5063
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 986:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5067
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 987:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5071
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 988:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5075
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 989:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5079
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 990:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5083
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 991:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5087
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 992:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5091
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 993:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5095
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 994:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5099
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 995:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5110
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 996:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5114
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 997:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5118
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5122
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 999:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5126
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 1000:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5130
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 1001:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5134
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 1002:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5138
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1003:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5142
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1004:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5146
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1005:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5150
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1006:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5154
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 1007:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5158
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 1008:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5162
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 1009:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5166
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 1010:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5170
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 1011:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5174
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 1012:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5178
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1013:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5182
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 1014:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5186
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 1015:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5190
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5200
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5204
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5208
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1019:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5213
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1020:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5218
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1021:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5223
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1022:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5229
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1023:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5234
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1024:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5238
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5243
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1026:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5247
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1027:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5251
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1028:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5256
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5261
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1030:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5266
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1031:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5270
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1032:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5274
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5285
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1036:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5295
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1037:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5299
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1038:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5303
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1039:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5307
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1040:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5311
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1041:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5315
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1042:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5321
		{
			yyVAL.str = ""
		}
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5325
		{
			yyVAL.str = BooleanModeStr
		}
	case 1044:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5329
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 1045:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5333
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 1046:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5337
		{
			yyVAL.str = QueryExpansionStr
		}
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5343
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5347
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5353
		{
			yyVAL.str = Armscii8Str
		}
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5357
		{
			yyVAL.str = AsciiStr
		}
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5361
		{
			yyVAL.str = Big5Str
		}
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5365
		{
			yyVAL.str = UBinaryStr
		}
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5369
		{
			yyVAL.str = Cp1250Str
		}
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5373
		{
			yyVAL.str = Cp1251Str
		}
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5377
		{
			yyVAL.str = Cp1256Str
		}
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5381
		{
			yyVAL.str = Cp1257Str
		}
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5385
		{
			yyVAL.str = Cp850Str
		}
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5389
		{
			yyVAL.str = Cp852Str
		}
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5393
		{
			yyVAL.str = Cp866Str
		}
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5397
		{
			yyVAL.str = Cp932Str
		}
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5401
		{
			yyVAL.str = Dec8Str
		}
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5405
		{
			yyVAL.str = EucjpmsStr
		}
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5409
		{
			yyVAL.str = EuckrStr
		}
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5413
		{
			yyVAL.str = Gb18030Str
		}
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5417
		{
			yyVAL.str = Gb2312Str
		}
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5421
		{
			yyVAL.str = GbkStr
		}
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5425
		{
			yyVAL.str = Geostd8Str
		}
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5429
		{
			yyVAL.str = GreekStr
		}
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5433
		{
			yyVAL.str = HebrewStr
		}
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5437
		{
			yyVAL.str = Hp8Str
		}
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5441
		{
			yyVAL.str = Keybcs2Str
		}
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5445
		{
			yyVAL.str = Koi8rStr
		}
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5449
		{
			yyVAL.str = Koi8uStr
		}
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5453
		{
			yyVAL.str = Latin1Str
		}
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5457
		{
			yyVAL.str = Latin2Str
		}
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5461
		{
			yyVAL.str = Latin5Str
		}
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5465
		{
			yyVAL.str = Latin7Str
		}
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5469
		{
			yyVAL.str = MacceStr
		}
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5473
		{
			yyVAL.str = MacromanStr
		}
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5477
		{
			yyVAL.str = SjisStr
		}
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5481
		{
			yyVAL.str = Swe7Str
		}
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5485
		{
			yyVAL.str = Tis620Str
		}
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5489
		{
			yyVAL.str = Ucs2Str
		}
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5493
		{
			yyVAL.str = UjisStr
		}
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5497
		{
			yyVAL.str = Utf16Str
		}
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5501
		{
			yyVAL.str = Utf16leStr
		}
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5505
		{
			yyVAL.str = Utf32Str
		}
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5509
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5513
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5517
		{
			yyVAL.str = Utf8mb4Str
		}
	case 1091:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5523
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5527
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 1093:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5531
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5535
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1095:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5539
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1096:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5543
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5549
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1098:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5553
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5557
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1100:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5561
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1101:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5565
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5569
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1103:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5573
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1104:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5578
		{
			yyVAL.expr = nil
		}
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5582
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1106:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5587
		{
			yyVAL.str = string("")
		}
	case 1107:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5591
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5597
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 1109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5601
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 1110:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5607
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 1111:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5612
		{
			yyVAL.expr = nil
		}
	case 1112:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5616
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5622
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5626
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 1115:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5630
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5636
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5640
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5644
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5648
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5652
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5656
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5660
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5664
		{
			yyVAL.expr = &NullVal{}
		}
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5670
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 1125:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5674
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5678
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1127:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5683
		{
			yyVAL.exprs = nil
		}
	case 1128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5687
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5693
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5697
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5703
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1132:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5708
		{
			yyVAL.expr = nil
		}
	case 1133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5712
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5718
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1135:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5723
		{
			yyVAL.orderBy = nil
		}
	case 1136:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5727
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5733
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 1138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5737
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 1139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5743
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 1140:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5748
		{
			yyVAL.str = AscScr
		}
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5752
		{
			yyVAL.str = AscScr
		}
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5756
		{
			yyVAL.str = DescScr
		}
	case 1143:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5761
		{
			yyVAL.limit = nil
		}
	case 1144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5765
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 1145:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5769
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 1146:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5773
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5779
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5783
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1149:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5788
		{
			yyVAL.str = ""
		}
	case 1150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5792
		{
			yyVAL.str = ForUpdateStr
		}
	case 1151:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5796
		{
			yyVAL.str = ShareModeStr
		}
	case 1152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5809
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 1153:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5813
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5817
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 1155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5821
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 1156:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5826
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 1157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5830
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 1158:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5834
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 1159:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5840
		{
			yyVAL.columns = nil
		}
	case 1160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5844
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5850
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1162:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5854
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 1163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5858
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1164:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5862
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 1165:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5867
		{
			yyVAL.assignExprs = nil
		}
	case 1166:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5871
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5877
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 1168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5881
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5887
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 1170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5891
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 1171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5897
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5903
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5913
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 1174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5917
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 1175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5923
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 1176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5926
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5932
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 1178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5936
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5942
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 1180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5953
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5966
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5979
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5985
		{
			yyVAL.setScope = SetScope_Global
		}
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5989
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5995
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5999
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6003
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 1188:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6009
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1189:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6013
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1190:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6017
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 1192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6024
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6031
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6035
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6039
		{
			yyVAL.expr = &Default{}
		}
	case 1199:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6048
		{
			yyVAL.byt = 0
		}
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6050
		{
			yyVAL.byt = 1
		}
	case 1201:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6053
		{
			yyVAL.byt = 0
		}
	case 1202:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6055
		{
			yyVAL.byt = 1
		}
	case 1203:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6058
		{
			yyVAL.byt = 0
		}
	case 1204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6060
		{
			yyVAL.byt = 1
		}
	case 1205:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6063
		{
			yyVAL.str = ""
		}
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6065
		{
			yyVAL.str = IgnoreStr
		}
	case 1207:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6068
		{
			yyVAL.sqlVal = nil
		}
	case 1208:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6070
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1209:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6072
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6076
		{
			yyVAL.empty = struct{}{}
		}
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6078
		{
			yyVAL.empty = struct{}{}
		}
	case 1212:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6081
		{
			yyVAL.empty = struct{}{}
		}
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6083
		{
			yyVAL.empty = struct{}{}
		}
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6085
		{
			yyVAL.empty = struct{}{}
		}
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6089
		{
			yyVAL.str = UniqueStr
		}
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6091
		{
			yyVAL.str = FulltextStr
		}
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6093
		{
			yyVAL.str = SpatialStr
		}
	case 1218:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6096
		{
			yyVAL.str = ""
		}
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6098
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1220:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6101
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 1221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6103
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6107
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6111
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6117
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 1225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6121
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6128
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6134
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6138
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6145
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1232:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6150
		{
			yyVAL.str = string("")
		}
	case 1233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6152
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1234:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6155
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6157
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1236:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6160
		{
			yyVAL.EnclosedBy = nil
		}
	case 1237:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6164
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1238:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6169
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6173
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1240:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6178
		{
			yyVAL.sqlVal = nil
		}
	case 1241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6182
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1242:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6187
		{
			yyVAL.sqlVal = nil
		}
	case 1243:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6191
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1244:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6196
		{
			yyVAL.Fields = nil
		}
	case 1245:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6200
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1246:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6205
		{
			yyVAL.Lines = nil
		}
	case 1247:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6209
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1248:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6214
		{
			yyVAL.sqlVal = nil
		}
	case 1249:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6218
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1250:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6224
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6230
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1252:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6234
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1253:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6240
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1254:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6244
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6250
		{
			yyVAL.lockType = LockRead
		}
	case 1256:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6254
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6258
		{
			yyVAL.lockType = LockWrite
		}
	case 1258:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6262
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1259:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6268
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1260:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6274
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[2].bytes)}
		}
	case 1261:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6278
		{
			yyVAL.statement = &Kill{ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1262:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6282
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1751:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6807
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6816
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
