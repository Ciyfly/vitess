// Code generated by goyacc -v y.output -o sql.go sql.y. DO NOT EDIT.

//line sql.y:17

package sqlparser

import __yyfmt__ "fmt"

//line sql.y:19

import "fmt"

//import "runtime/debug"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

func yySpecialCommentMode(yylex interface{}) bool {
	tkn := yylex.(*Tokenizer)
	return tkn.specialComment != nil
}

//line sql.y:64
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	variables                Variables
	into                     *Into
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	triggerName              TriggerName
	tableName                TableName
	tableNames               TableNames
	procedureName            ProcedureName
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	flushOption              *FlushOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	viewSpec                 *ViewSpec
	showFilter               *ShowFilter
	frame                    *Frame
	frameExtent              *FrameExtent
	frameBound               *FrameBound
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	charsetCollate           *CharsetAndCollate
	charsetCollates          []*CharsetAndCollate
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptionItem            TLSOptionItem
	tlsOptionItems           []TLSOptionItem
	accountLimitItem         AccountLimitItem
	accountLimitItems        []AccountLimitItem
	passLockItem             PassLockItem
	passLockItems            []PassLockItem
	grantPrivilege           Privilege
	grantPrivileges          []Privilege
	grantObjectType          GrantObjectType
	privilegeLevel           PrivilegeLevel
	grantAssumption          *GrantUserAssumption
	with                     *With
	window                   Window
	over                     *Over
	windowDef                *WindowDef
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const DUPLICATE = 57369
const DEFAULT = 57370
const SET = 57371
const LOCK = 57372
const UNLOCK = 57373
const KEYS = 57374
const OF = 57375
const OUTFILE = 57376
const DUMPFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const INTO = 57425
const OR = 57426
const XOR = 57427
const AND = 57428
const NOT = 57429
const BETWEEN = 57430
const CASE = 57431
const WHEN = 57432
const THEN = 57433
const ELSE = 57434
const ELSEIF = 57435
const END = 57436
const LE = 57437
const GE = 57438
const NE = 57439
const NULL_SAFE_EQUAL = 57440
const IS = 57441
const LIKE = 57442
const REGEXP = 57443
const IN = 57444
const UNBOUNDED = 57445
const PARTITION = 57446
const RANGE = 57447
const ROWS = 57448
const GROUPS = 57449
const PRECEDING = 57450
const FOLLOWING = 57451
const SHIFT_LEFT = 57452
const SHIFT_RIGHT = 57453
const DIV = 57454
const MOD = 57455
const UNARY = 57456
const COLLATE = 57457
const BINARY = 57458
const UNDERSCORE_ARMSCII8 = 57459
const UNDERSCORE_ASCII = 57460
const UNDERSCORE_BIG5 = 57461
const UNDERSCORE_BINARY = 57462
const UNDERSCORE_CP1250 = 57463
const UNDERSCORE_CP1251 = 57464
const UNDERSCORE_CP1256 = 57465
const UNDERSCORE_CP1257 = 57466
const UNDERSCORE_CP850 = 57467
const UNDERSCORE_CP852 = 57468
const UNDERSCORE_CP866 = 57469
const UNDERSCORE_CP932 = 57470
const UNDERSCORE_DEC8 = 57471
const UNDERSCORE_EUCJPMS = 57472
const UNDERSCORE_EUCKR = 57473
const UNDERSCORE_GB18030 = 57474
const UNDERSCORE_GB2312 = 57475
const UNDERSCORE_GBK = 57476
const UNDERSCORE_GEOSTD8 = 57477
const UNDERSCORE_GREEK = 57478
const UNDERSCORE_HEBREW = 57479
const UNDERSCORE_HP8 = 57480
const UNDERSCORE_KEYBCS2 = 57481
const UNDERSCORE_KOI8R = 57482
const UNDERSCORE_KOI8U = 57483
const UNDERSCORE_LATIN1 = 57484
const UNDERSCORE_LATIN2 = 57485
const UNDERSCORE_LATIN5 = 57486
const UNDERSCORE_LATIN7 = 57487
const UNDERSCORE_MACCE = 57488
const UNDERSCORE_MACROMAN = 57489
const UNDERSCORE_SJIS = 57490
const UNDERSCORE_SWE7 = 57491
const UNDERSCORE_TIS620 = 57492
const UNDERSCORE_UCS2 = 57493
const UNDERSCORE_UJIS = 57494
const UNDERSCORE_UTF16 = 57495
const UNDERSCORE_UTF16LE = 57496
const UNDERSCORE_UTF32 = 57497
const UNDERSCORE_UTF8 = 57498
const UNDERSCORE_UTF8MB3 = 57499
const UNDERSCORE_UTF8MB4 = 57500
const INTERVAL = 57501
const JSON_EXTRACT_OP = 57502
const JSON_UNQUOTE_EXTRACT_OP = 57503
const CREATE = 57504
const ALTER = 57505
const DROP = 57506
const RENAME = 57507
const ANALYZE = 57508
const ADD = 57509
const MODIFY = 57510
const CHANGE = 57511
const SCHEMA = 57512
const TABLE = 57513
const INDEX = 57514
const INDEXES = 57515
const VIEW = 57516
const TO = 57517
const IGNORE = 57518
const IF = 57519
const PRIMARY = 57520
const COLUMN = 57521
const SPATIAL = 57522
const FULLTEXT = 57523
const KEY_BLOCK_SIZE = 57524
const CHECK = 57525
const ACTION = 57526
const CASCADE = 57527
const CONSTRAINT = 57528
const FOREIGN = 57529
const NO = 57530
const REFERENCES = 57531
const RESTRICT = 57532
const FIRST = 57533
const AFTER = 57534
const SHOW = 57535
const DESCRIBE = 57536
const EXPLAIN = 57537
const DATE = 57538
const ESCAPE = 57539
const REPAIR = 57540
const OPTIMIZE = 57541
const TRUNCATE = 57542
const FORMAT = 57543
const MAXVALUE = 57544
const REORGANIZE = 57545
const LESS = 57546
const THAN = 57547
const PROCEDURE = 57548
const TRIGGER = 57549
const TRIGGERS = 57550
const FUNCTION = 57551
const STATUS = 57552
const VARIABLES = 57553
const WARNINGS = 57554
const ERRORS = 57555
const KILL = 57556
const CONNECTION = 57557
const SEQUENCE = 57558
const ENABLE = 57559
const DISABLE = 57560
const EACH = 57561
const ROW = 57562
const BEFORE = 57563
const FOLLOWS = 57564
const PRECEDES = 57565
const DEFINER = 57566
const INVOKER = 57567
const INOUT = 57568
const OUT = 57569
const DETERMINISTIC = 57570
const CONTAINS = 57571
const READS = 57572
const MODIFIES = 57573
const SQL = 57574
const SECURITY = 57575
const TEMPORARY = 57576
const ALGORITHM = 57577
const MERGE = 57578
const TEMPTABLE = 57579
const UNDEFINED = 57580
const CLASS_ORIGIN = 57581
const SUBCLASS_ORIGIN = 57582
const MESSAGE_TEXT = 57583
const MYSQL_ERRNO = 57584
const CONSTRAINT_CATALOG = 57585
const CONSTRAINT_SCHEMA = 57586
const CONSTRAINT_NAME = 57587
const CATALOG_NAME = 57588
const SCHEMA_NAME = 57589
const TABLE_NAME = 57590
const COLUMN_NAME = 57591
const CURSOR_NAME = 57592
const SIGNAL = 57593
const RESIGNAL = 57594
const SQLSTATE = 57595
const DECLARE = 57596
const CONDITION = 57597
const CURSOR = 57598
const CONTINUE = 57599
const EXIT = 57600
const UNDO = 57601
const HANDLER = 57602
const FOUND = 57603
const SQLWARNING = 57604
const SQLEXCEPTION = 57605
const USER = 57606
const IDENTIFIED = 57607
const ROLE = 57608
const REUSE = 57609
const GRANT = 57610
const GRANTS = 57611
const REVOKE = 57612
const NONE = 57613
const ATTRIBUTE = 57614
const RANDOM = 57615
const PASSWORD = 57616
const INITIAL = 57617
const AUTHENTICATION = 57618
const SSL = 57619
const X509 = 57620
const CIPHER = 57621
const ISSUER = 57622
const SUBJECT = 57623
const ACCOUNT = 57624
const EXPIRE = 57625
const NEVER = 57626
const DAY = 57627
const OPTION = 57628
const OPTIONAL = 57629
const EXCEPT = 57630
const ADMIN = 57631
const PRIVILEGES = 57632
const MAX_QUERIES_PER_HOUR = 57633
const MAX_UPDATES_PER_HOUR = 57634
const MAX_CONNECTIONS_PER_HOUR = 57635
const MAX_USER_CONNECTIONS = 57636
const FLUSH = 57637
const FAILED_LOGIN_ATTEMPTS = 57638
const PASSWORD_LOCK_TIME = 57639
const REQUIRE = 57640
const PROXY = 57641
const ROUTINE = 57642
const TABLESPACE = 57643
const CLIENT = 57644
const SLAVE = 57645
const EVENT = 57646
const EXECUTE = 57647
const FILE = 57648
const RELOAD = 57649
const REPLICATION = 57650
const SHUTDOWN = 57651
const SUPER = 57652
const USAGE = 57653
const LOGS = 57654
const ENGINE = 57655
const ERROR = 57656
const GENERAL = 57657
const HOSTS = 57658
const OPTIMIZER_COSTS = 57659
const RELAY = 57660
const SLOW = 57661
const USER_RESOURCES = 57662
const NO_WRITE_TO_BINLOG = 57663
const CHANNEL = 57664
const BEGIN = 57665
const START = 57666
const TRANSACTION = 57667
const COMMIT = 57668
const ROLLBACK = 57669
const SAVEPOINT = 57670
const WORK = 57671
const RELEASE = 57672
const BIT = 57673
const TINYINT = 57674
const SMALLINT = 57675
const MEDIUMINT = 57676
const INT = 57677
const INTEGER = 57678
const BIGINT = 57679
const INTNUM = 57680
const SERIAL = 57681
const REAL = 57682
const DOUBLE = 57683
const FLOAT_TYPE = 57684
const DECIMAL = 57685
const NUMERIC = 57686
const DEC = 57687
const FIXED = 57688
const PRECISION = 57689
const TIME = 57690
const TIMESTAMP = 57691
const DATETIME = 57692
const YEAR = 57693
const CHAR = 57694
const VARCHAR = 57695
const BOOL = 57696
const CHARACTER = 57697
const VARBINARY = 57698
const NCHAR = 57699
const NVARCHAR = 57700
const NATIONAL = 57701
const VARYING = 57702
const TEXT = 57703
const TINYTEXT = 57704
const MEDIUMTEXT = 57705
const LONGTEXT = 57706
const LONG = 57707
const BLOB = 57708
const TINYBLOB = 57709
const MEDIUMBLOB = 57710
const LONGBLOB = 57711
const JSON = 57712
const ENUM = 57713
const GEOMETRY = 57714
const POINT = 57715
const LINESTRING = 57716
const POLYGON = 57717
const GEOMETRYCOLLECTION = 57718
const MULTIPOINT = 57719
const MULTILINESTRING = 57720
const MULTIPOLYGON = 57721
const LOCAL = 57722
const LOW_PRIORITY = 57723
const NULLX = 57724
const AUTO_INCREMENT = 57725
const APPROXNUM = 57726
const SIGNED = 57727
const UNSIGNED = 57728
const ZEROFILL = 57729
const SRID = 57730
const COLLATION = 57731
const DATABASES = 57732
const SCHEMAS = 57733
const TABLES = 57734
const FULL = 57735
const PROCESSLIST = 57736
const COLUMNS = 57737
const FIELDS = 57738
const ENGINES = 57739
const PLUGINS = 57740
const NAMES = 57741
const CHARSET = 57742
const GLOBAL = 57743
const SESSION = 57744
const ISOLATION = 57745
const LEVEL = 57746
const READ = 57747
const WRITE = 57748
const ONLY = 57749
const REPEATABLE = 57750
const COMMITTED = 57751
const UNCOMMITTED = 57752
const SERIALIZABLE = 57753
const ENCRYPTION = 57754
const CURRENT_TIMESTAMP = 57755
const DATABASE = 57756
const CURRENT_DATE = 57757
const CURRENT_USER = 57758
const CURRENT_TIME = 57759
const LOCALTIME = 57760
const LOCALTIMESTAMP = 57761
const UTC_DATE = 57762
const UTC_TIME = 57763
const UTC_TIMESTAMP = 57764
const REPLACE = 57765
const CONVERT = 57766
const CAST = 57767
const SUBSTR = 57768
const SUBSTRING = 57769
const TRIM = 57770
const LEADING = 57771
const TRAILING = 57772
const BOTH = 57773
const GROUP_CONCAT = 57774
const SEPARATOR = 57775
const TIMESTAMPADD = 57776
const TIMESTAMPDIFF = 57777
const OVER = 57778
const WINDOW = 57779
const GROUPING = 57780
const CURRENT = 57781
const AVG = 57782
const BIT_AND = 57783
const BIT_OR = 57784
const BIT_XOR = 57785
const COUNT = 57786
const JSON_ARRAYAGG = 57787
const JSON_OBJECTAGG = 57788
const MAX = 57789
const MIN = 57790
const STDDEV_POP = 57791
const STDDEV = 57792
const STD = 57793
const STDDEV_SAMP = 57794
const SUM = 57795
const VAR_POP = 57796
const VARIANCE = 57797
const VAR_SAMP = 57798
const CUME_DIST = 57799
const DENSE_RANK = 57800
const FIRST_VALUE = 57801
const LAG = 57802
const LAST_VALUE = 57803
const LEAD = 57804
const NTH_VALUE = 57805
const NTILE = 57806
const ROW_NUMBER = 57807
const PERCENT_RANK = 57808
const RANK = 57809
const MATCH = 57810
const AGAINST = 57811
const BOOLEAN = 57812
const LANGUAGE = 57813
const WITH = 57814
const QUERY = 57815
const EXPANSION = 57816
const ACCESSIBLE = 57817
const ASENSITIVE = 57818
const CUBE = 57819
const DAY_HOUR = 57820
const DAY_MICROSECOND = 57821
const DAY_MINUTE = 57822
const DAY_SECOND = 57823
const DISTINCTROW = 57824
const DUAL = 57825
const FETCH = 57826
const FLOAT4 = 57827
const FLOAT8 = 57828
const GET = 57829
const HIGH_PRIORITY = 57830
const HOUR_MICROSECOND = 57831
const HOUR_MINUTE = 57832
const HOUR_SECOND = 57833
const INSENSITIVE = 57834
const INT1 = 57835
const INT2 = 57836
const INT3 = 57837
const INT4 = 57838
const INT8 = 57839
const IO_AFTER_GTIDS = 57840
const IO_BEFORE_GTIDS = 57841
const ITERATE = 57842
const LEAVE = 57843
const LINEAR = 57844
const LOOP = 57845
const MASTER_BIND = 57846
const MASTER_SSL_VERIFY_SERVER_CERT = 57847
const PURGE = 57848
const READ_WRITE = 57849
const RETURN = 57850
const RLIKE = 57851
const SECOND_MICROSECOND = 57852
const SENSITIVE = 57853
const SPECIFIC = 57854
const SQL_BIG_RESULT = 57855
const SQL_SMALL_RESULT = 57856
const VARCHARACTER = 57857
const WHILE = 57858
const YEAR_MONTH = 57859
const UNUSED = 57860
const DESCRIPTION = 57861
const EMPTY = 57862
const JSON_TABLE = 57863
const LATERAL = 57864
const MEMBER = 57865
const RECURSIVE = 57866
const BUCKETS = 57867
const CLONE = 57868
const COMPONENT = 57869
const DEFINITION = 57870
const ENFORCED = 57871
const EXCLUDE = 57872
const GEOMCOLLECTION = 57873
const GET_MASTER_PUBLIC_KEY = 57874
const HISTOGRAM = 57875
const HISTORY = 57876
const INACTIVE = 57877
const INVISIBLE = 57878
const LOCKED = 57879
const MASTER_COMPRESSION_ALGORITHMS = 57880
const MASTER_PUBLIC_KEY_PATH = 57881
const MASTER_TLS_CIPHERSUITES = 57882
const MASTER_ZSTD_COMPRESSION_LEVEL = 57883
const NESTED = 57884
const NETWORK_NAMESPACE = 57885
const NOWAIT = 57886
const NULLS = 57887
const OJ = 57888
const OLD = 57889
const ORDINALITY = 57890
const ORGANIZATION = 57891
const OTHERS = 57892
const PATH = 57893
const PERSIST = 57894
const PERSIST_ONLY = 57895
const PRIVILEGE_CHECKS_USER = 57896
const PROCESS = 57897
const REFERENCE = 57898
const REQUIRE_ROW_FORMAT = 57899
const RESOURCE = 57900
const RESPECT = 57901
const RESTART = 57902
const RETAIN = 57903
const SECONDARY = 57904
const SECONDARY_ENGINE = 57905
const SECONDARY_LOAD = 57906
const SECONDARY_UNLOAD = 57907
const SKIP = 57908
const THREAD_PRIORITY = 57909
const TIES = 57910
const VCPU = 57911
const VISIBLE = 57912
const SYSTEM = 57913
const INFILE = 57914
const ACTIVE = 57915
const AGGREGATE = 57916
const ANY = 57917
const ARRAY = 57918
const ASCII = 57919
const AT = 57920
const AUTOEXTEND_SIZE = 57921
const ENDS = 57922
const EVENTS = 57923
const GENERATED = 57924
const ALWAYS = 57925
const STORED = 57926
const VIRTUAL = 57927
const NVAR = 57928
const PASSWORD_LOCK = 57929

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DUMPFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"INTO",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB3",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"ENABLE",
	"DISABLE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"ALGORITHM",
	"MERGE",
	"TEMPTABLE",
	"UNDEFINED",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTION",
	"OPTIONAL",
	"EXCEPT",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EVENT",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"SRID",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ENCRYPTION",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ACCESSIBLE",
	"ASENSITIVE",
	"CUBE",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"DISTINCTROW",
	"DUAL",
	"FETCH",
	"FLOAT4",
	"FLOAT8",
	"GET",
	"HIGH_PRIORITY",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"INSENSITIVE",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"IO_AFTER_GTIDS",
	"IO_BEFORE_GTIDS",
	"ITERATE",
	"LEAVE",
	"LINEAR",
	"LOOP",
	"MASTER_BIND",
	"MASTER_SSL_VERIFY_SERVER_CERT",
	"PURGE",
	"READ_WRITE",
	"RETURN",
	"RLIKE",
	"SECOND_MICROSECOND",
	"SENSITIVE",
	"SPECIFIC",
	"SQL_BIG_RESULT",
	"SQL_SMALL_RESULT",
	"VARCHARACTER",
	"WHILE",
	"YEAR_MONTH",
	"UNUSED",
	"DESCRIPTION",
	"EMPTY",
	"JSON_TABLE",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"ACTIVE",
	"AGGREGATE",
	"ANY",
	"ARRAY",
	"ASCII",
	"AT",
	"AUTOEXTEND_SIZE",
	"ENDS",
	"EVENTS",
	"GENERATED",
	"ALWAYS",
	"STORED",
	"VIRTUAL",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 35,
	5, 58,
	-2, 1134,
	-1, 43,
	189, 1198,
	190, 1217,
	-2, 245,
	-1, 49,
	228, 720,
	229, 720,
	-2, 709,
	-1, 439,
	66, 192,
	69, 192,
	-2, 1744,
	-1, 440,
	66, 192,
	69, 192,
	-2, 1745,
	-1, 441,
	66, 192,
	69, 192,
	-2, 1747,
	-1, 445,
	66, 192,
	69, 192,
	-2, 1758,
	-1, 447,
	66, 192,
	69, 192,
	-2, 1759,
	-1, 451,
	66, 192,
	69, 192,
	-2, 1760,
	-1, 452,
	66, 192,
	69, 192,
	-2, 1761,
	-1, 500,
	177, 1227,
	-2, 1221,
	-1, 501,
	177, 1228,
	-2, 1222,
	-1, 646,
	100, 1593,
	177, 1593,
	-2, 1182,
	-1, 647,
	100, 1692,
	177, 1692,
	-2, 1183,
	-1, 652,
	100, 1613,
	177, 1613,
	-2, 1184,
	-1, 653,
	100, 1655,
	177, 1655,
	-2, 1185,
	-1, 654,
	100, 1656,
	177, 1656,
	-2, 1186,
	-1, 655,
	100, 1537,
	177, 1537,
	-2, 1190,
	-1, 657,
	100, 1636,
	177, 1636,
	-2, 1192,
	-1, 1002,
	1, 818,
	5, 818,
	12, 818,
	13, 818,
	14, 818,
	15, 818,
	17, 818,
	19, 818,
	29, 818,
	30, 818,
	56, 818,
	57, 818,
	58, 818,
	59, 818,
	60, 818,
	62, 818,
	63, 818,
	66, 818,
	67, 818,
	69, 818,
	70, 818,
	87, 818,
	455, 818,
	606, 818,
	-2, 850,
	-1, 1008,
	67, 75,
	69, 75,
	-2, 79,
	-1, 1103,
	1, 499,
	606, 499,
	-2, 497,
	-1, 1105,
	1, 499,
	606, 499,
	-2, 497,
	-1, 1530,
	177, 1230,
	-2, 1226,
	-1, 1679,
	1, 1188,
	69, 1188,
	606, 1188,
	-2, 1755,
	-1, 1696,
	44, 565,
	-2, 1549,
	-1, 1753,
	1, 500,
	606, 500,
	-2, 497,
	-1, 1837,
	44, 608,
	196, 610,
	198, 608,
	199, 608,
	-2, 645,
	-1, 1883,
	5, 59,
	-2, 921,
	-1, 2230,
	69, 1458,
	70, 1458,
	177, 1458,
	-2, 752,
	-1, 2253,
	1, 875,
	5, 875,
	12, 875,
	13, 875,
	14, 875,
	15, 875,
	17, 875,
	19, 875,
	29, 875,
	30, 875,
	56, 875,
	57, 875,
	58, 875,
	59, 875,
	60, 875,
	62, 875,
	63, 875,
	66, 875,
	67, 875,
	69, 875,
	70, 875,
	87, 875,
	455, 875,
	606, 875,
	-2, 850,
	-1, 2365,
	196, 611,
	-2, 609,
	-1, 2426,
	5, 59,
	-2, 1154,
	-1, 2642,
	41, 1237,
	-2, 1235,
	-1, 2741,
	5, 59,
	-2, 1157,
	-1, 2834,
	278, 311,
	-2, 1288,
	-1, 2835,
	278, 312,
	-2, 1328,
	-1, 2836,
	278, 313,
	-2, 1489,
	-1, 2887,
	69, 1754,
	71, 1754,
	-2, 208,
}

const yyPrivate = 57344

const yyLast = 39202

var yyAct = [...]int{
	535, 80, 2942, 2059, 2968, 2975, 2924, 2839, 2196, 2944,
	2895, 2925, 2855, 925, 2754, 8, 2816, 693, 1688, 2838,
	2875, 503, 2753, 7, 2860, 2750, 3, 2807, 2438, 2729,
	2583, 2727, 501, 2687, 2745, 2309, 2752, 6, 1038, 431,
	2751, 5, 2814, 2642, 2267, 1952, 1982, 2247, 926, 1748,
	1654, 2155, 2223, 1138, 492, 1245, 1706, 2525, 2326, 2644,
	1772, 2141, 2501, 534, 83, 2495, 2479, 414, 417, 2268,
	2224, 1506, 1652, 506, 485, 2007, 2349, 2746, 1648, 1137,
	129, 80, 1697, 129, 456, 456, 669, 2154, 726, 129,
	477, 2359, 2075, 709, 483, 518, 1953, 93, 106, 459,
	459, 1687, 1739, 2220, 1499, 1836, 484, 462, 1686, 2239,
	1866, 2232, 129, 2167, 1242, 1555, 2120, 1799, 1600, 1514,
	1631, 1693, 1682, 129, 1114, 1156, 1185, 129, 671, 1756,
	1735, 1569, 855, 750, 666, 1755, 2050, 508, 2008, 1754,
	648, 1592, 998, 1019, 1638, 862, 1816, 129, 459, 1532,
	671, 858, 1002, 779, 758, 999, 1752, 665, 129, 644,
	645, 1018, 876, 1190, 944, 651, 476, 433, 434, 692,
	676, 488, 640, 757, 1109, 681, 510, 1106, 2365, 2002,
	3007, 102, 3003, 85, 498, 98, 1010, 2998, 2983, 2021,
	2981, 2963, 2937, 637, 2024, 2883, 82, 2689, 2688, 1676,
	2282, 1183, 449, 2307, 443, 454, 437, 2466, 2206, 945,
	2029, 2028, 2954, 2621, 2812, 2922, 2735, 2634, 1723, 1710,
	2898, 87, 88, 89, 90, 91, 444, 2480, 1785, 2619,
	426, 36, 2025, 1785, 2087, 2358, 2799, 2482, 2323, 2360,
	2811, 2734, 1095, 2360, 2622, 2369, 2367, 2031, 2188, 2014,
	36, 2707, 72, 39, 40, 36, 36, 2015, 2856, 69,
	1919, 866, 2412, 675, 2066, 2820, 474, 2262, 2670, 36,
	2263, 2264, 678, 2820, 683, 684, 891, 890, 900, 901,
	893, 894, 895, 896, 897, 898, 899, 892, 1186, 686,
	902, 2815, 1947, 81, 1673, 1674, 2568, 1650, 1020, 1991,
	1021, 2817, 1990, 1815, 110, 1992, 848, 672, 672, 2817,
	1948, 729, 81, 1672, 1238, 1239, 1213, 81, 81, 1189,
	592, 2003, 598, 600, 599, 596, 597, 595, 594, 593,
	815, 81, 120, 116, 117, 807, 118, 72, 39, 40,
	425, 2458, 2459, 1187, 1188, 730, 731, 424, 99, 2033,
	1708, 1709, 2485, 661, 1814, 466, 776, 2550, 41, 1724,
	1736, 1711, 2027, 1711, 2399, 2030, 2821, 2397, 122, 121,
	423, 672, 1715, 1717, 2821, 1716, 436, 435, 438, 1729,
	473, 1724, 1169, 2117, 408, 1234, 442, 740, 428, 1233,
	1232, 1231, 2483, 2484, 2486, 2487, 2488, 1230, 1229, 736,
	811, 812, 2082, 446, 2109, 2915, 2701, 450, 2647, 2787,
	2333, 80, 80, 129, 467, 791, 713, 714, 2348, 2496,
	717, 453, 2114, 1827, 1601, 748, 123, 2499, 124, 2502,
	2503, 2504, 2505, 745, 2841, 2789, 744, 484, 2840, 2711,
	822, 2497, 2498, 823, 2513, 2709, 2638, 747, 101, 2521,
	2086, 746, 715, 716, 1828, 1224, 2848, 129, 112, 111,
	791, 1844, 1838, 1839, 2084, 1837, 1840, 1841, 1773, 2616,
	844, 2511, 114, 2336, 737, 738, 2324, 2880, 852, 2972,
	2620, 2614, 2327, 2328, 2329, 2330, 2331, 2327, 2328, 2329,
	2330, 2331, 2878, 2879, 1112, 727, 2613, 728, 730, 731,
	911, 1847, 108, 913, 418, 2064, 415, 2939, 129, 1121,
	1122, 1120, 109, 113, 2612, 1846, 1845, 108, 1196, 1197,
	1198, 1200, 1201, 1202, 1203, 455, 2611, 879, 113, 680,
	679, 923, 2610, 108, 924, 1763, 928, 2608, 409, 682,
	2609, 2866, 103, 2686, 104, 2748, 814, 419, 2697, 2698,
	2065, 1767, 1768, 2918, 2703, 682, 2826, 2827, 2440, 1973,
	2693, 484, 2067, 725, 1762, 115, 2893, 2026, 2100, 2101,
	723, 724, 2023, 722, 706, 2993, 119, 482, 482, 929,
	930, 931, 932, 933, 934, 935, 936, 937, 938, 939,
	940, 721, 943, 946, 946, 946, 952, 946, 946, 952,
	946, 952, 961, 962, 963, 964, 965, 966, 967, 968,
	969, 970, 971, 972, 973, 974, 975, 976, 977, 978,
	979, 980, 981, 982, 983, 984, 985, 986, 987, 988,
	989, 990, 991, 992, 993, 2481, 1003, 1191, 482, 411,
	912, 482, 482, 1595, 482, 482, 427, 2818, 2671, 2350,
	2526, 2527, 841, 2085, 1821, 2818, 1170, 1738, 1724, 2306,
	712, 741, 2708, 2637, 1189, 790, 2733, 129, 129, 129,
	2933, 2040, 1193, 1714, 412, 1192, 801, 504, 2617, 110,
	2702, 1843, 824, 671, 1705, 73, 2788, 672, 1187, 1188,
	2335, 2635, 100, 829, 916, 917, 918, 919, 920, 921,
	922, 672, 456, 416, 1037, 416, 671, 129, 2088, 2126,
	481, 481, 2364, 1571, 997, 79, 459, 459, 651, 3008,
	459, 456, 3005, 651, 1116, 2979, 1032, 129, 2999, 843,
	129, 2984, 2168, 1011, 79, 459, 459, 1115, 129, 79,
	79, 1119, 850, 1139, 1657, 1659, 416, 129, 129, 129,
	129, 129, 672, 79, 677, 1097, 1703, 479, 947, 949,
	951, 953, 955, 957, 958, 960, 2022, 2584, 459, 1199,
	73, 481, 129, 1006, 481, 481, 2948, 481, 481, 2943,
	695, 2586, 2271, 2713, 791, 1023, 472, 672, 839, 1164,
	1024, 1703, 2138, 2536, 787, 2946, 2537, 2108, 2105, 2090,
	1036, 494, 1141, 948, 950, 456, 954, 956, 2089, 959,
	1822, 1126, 1124, 2170, 1705, 1152, 1153, 1154, 1155, 459,
	459, 459, 742, 1181, 671, 1014, 1751, 1705, 674, 1704,
	1009, 1980, 1979, 112, 111, 2133, 2126, 1705, 1978, 1222,
	2130, 673, 1206, 2129, 2132, 80, 1033, 2103, 847, 685,
	380, 2390, 1895, 1160, 459, 1161, 1117, 1102, 1236, 459,
	459, 1101, 1118, 1892, 2011, 2540, 1204, 1782, 835, 2382,
	484, 1243, 1781, 2706, 1658, 2107, 1136, 739, 1135, 2106,
	129, 1228, 129, 1145, 1146, 671, 1005, 1143, 1128, 1995,
	834, 830, 831, 832, 833, 836, 837, 838, 840, 2977,
	2585, 1528, 2978, 129, 2976, 1987, 1227, 1886, 798, 1871,
	879, 914, 915, 1852, 80, 1766, 1764, 1509, 786, 1163,
	1031, 1016, 882, 705, 2344, 892, 1173, 1174, 902, 928,
	1176, 2602, 2473, 1677, 126, 2471, 1559, 1560, 1530, 484,
	902, 1668, 1567, 413, 1166, 2296, 1179, 2624, 1194, 1533,
	1705, 2867, 2868, 1195, 484, 671, 1205, 2843, 2728, 1704,
	2172, 2564, 2137, 2535, 1157, 2176, 2134, 2171, 796, 2169,
	2864, 2865, 1704, 2146, 2174, 416, 1632, 639, 2738, 2737,
	1502, 663, 1704, 2625, 2945, 2947, 1223, 2173, 875, 1226,
	872, 1791, 2603, 2474, 671, 671, 2472, 2142, 797, 719,
	793, 690, 2175, 2177, 1651, 1527, 2297, 875, 1660, 1578,
	1581, 1003, 704, 1235, 2237, 1003, 1240, 1594, 2541, 914,
	915, 874, 872, 1534, 711, 2987, 2969, 2986, 129, 484,
	914, 915, 732, 2844, 794, 795, 129, 2236, 129, 875,
	1525, 1178, 1029, 129, 129, 749, 688, 129, 129, 129,
	1681, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 1158, 687, 2190, 1593, 671, 671, 1531,
	2997, 2934, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547,
	1548, 1549, 1550, 1551, 1552, 1553, 1554, 1530, 2899, 1663,
	1792, 651, 1593, 1665, 1908, 1704, 1656, 1104, 720, 2512,
	1647, 1606, 2126, 1608, 96, 2506, 672, 1683, 2385, 2127,
	1703, 893, 894, 895, 896, 897, 898, 899, 892, 2542,
	710, 902, 1584, 2205, 1097, 1810, 1500, 853, 734, 1661,
	1500, 1596, 895, 896, 897, 898, 899, 892, 2280, 869,
	902, 1006, 2876, 81, 2904, 1779, 2903, 2792, 1006, 95,
	129, 2994, 1006, 479, 1535, 2784, 129, 129, 459, 459,
	459, 1507, 1508, 129, 2742, 2785, 952, 1521, 1523, 1524,
	1694, 471, 880, 2632, 1702, 1522, 694, 1670, 1669, 1777,
	1778, 2631, 1745, 1746, 1675, 1562, 1563, 2630, 1666, 94,
	129, 129, 129, 1691, 1741, 1742, 1743, 1744, 1539, 2704,
	1807, 863, 1590, 2629, 2623, 1684, 2995, 1890, 2465, 1889,
	2464, 883, 2786, 1537, 1538, 1536, 2283, 129, 859, 129,
	1737, 860, 2885, 671, 873, 874, 872, 671, 873, 874,
	872, 2055, 873, 874, 872, 873, 874, 872, 2053, 2876,
	1615, 1616, 1849, 875, 2034, 1620, 2705, 875, 1623, 927,
	1793, 875, 782, 781, 875, 1798, 671, 2884, 2845, 671,
	634, 635, 1760, 2842, 2798, 1712, 1713, 639, 1718, 1719,
	1720, 1721, 1722, 1725, 1726, 1727, 1728, 1813, 1556, 1511,
	1557, 1789, 1891, 873, 874, 872, 1732, 1733, 1734, 2056,
	1993, 3001, 1994, 2873, 1797, 697, 698, 699, 700, 701,
	702, 703, 875, 1512, 942, 2700, 1513, 873, 874, 872,
	2699, 780, 2685, 2639, 891, 890, 900, 901, 893, 894,
	895, 896, 897, 898, 899, 892, 875, 755, 902, 1127,
	1802, 2607, 1806, 96, 873, 874, 872, 2560, 1812, 2509,
	2508, 1819, 2936, 873, 874, 872, 1096, 873, 874, 872,
	754, 2877, 2507, 875, 1568, 1573, 1574, 1805, 2872, 2475,
	1580, 1583, 875, 1588, 1589, 2462, 875, 1868, 1869, 1870,
	1826, 2355, 2289, 1829, 1657, 1659, 2151, 2150, 2051, 1006,
	1811, 873, 874, 872, 821, 1786, 1175, 2710, 1599, 2192,
	1602, 1603, 2683, 2656, 1848, 1607, 2011, 1609, 1610, 2650,
	875, 2533, 2417, 2378, 2374, 1617, 1618, 1619, 2366, 1621,
	1622, 1800, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 2337,
	2095, 2094, 787, 1804, 1788, 1144, 1787, 1899, 891, 890,
	900, 901, 893, 894, 895, 896, 897, 898, 899, 892,
	1558, 886, 902, 889, 1171, 1168, 1162, 1134, 1133, 1105,
	903, 904, 905, 906, 907, 908, 909, 854, 887, 888,
	885, 1103, 777, 707, 422, 420, 2575, 2901, 891, 890,
	900, 901, 893, 894, 895, 896, 897, 898, 899, 892,
	2449, 2891, 902, 2449, 2852, 854, 854, 2919, 927, 2649,
	523, 522, 525, 526, 527, 528, 2598, 1833, 2597, 524,
	529, 2805, 854, 2316, 1658, 891, 890, 900, 901, 893,
	894, 895, 896, 897, 898, 899, 892, 2449, 2801, 902,
	2290, 996, 2897, 1008, 2449, 2691, 2235, 479, 1528, 1872,
	2575, 2679, 1565, 671, 891, 890, 900, 901, 893, 894,
	895, 896, 897, 898, 899, 892, 2575, 2592, 902, 2575,
	854, 2575, 2574, 2449, 2448, 880, 1640, 1643, 1644, 1645,
	1641, 1100, 1642, 1646, 2424, 1530, 2240, 2241, 1771, 1564,
	1566, 1749, 2430, 854, 1851, 854, 1575, 2304, 2303, 2300,
	2301, 639, 2300, 2299, 1132, 1012, 1517, 1518, 1519, 1884,
	854, 1635, 854, 1824, 1823, 1565, 1808, 1565, 854, 84,
	1533, 1147, 1148, 1149, 1150, 1151, 1035, 1034, 1012, 1770,
	1983, 1604, 1605, 2221, 1635, 2648, 2235, 826, 1611, 1612,
	1613, 1614, 900, 901, 893, 894, 895, 896, 897, 898,
	899, 892, 1949, 1951, 902, 1983, 1003, 1003, 1003, 1003,
	1003, 1013, 927, 1015, 1785, 1950, 81, 1576, 1577, 1634,
	2317, 1860, 1651, 1884, 1974, 1858, 1859, 484, 1877, 1662,
	1504, 1011, 2302, 1003, 1013, 1567, 1011, 1635, 129, 129,
	129, 129, 129, 2385, 1534, 787, 825, 484, 784, 785,
	129, 785, 1881, 479, 129, 2249, 1873, 2149, 129, 1635,
	1955, 2119, 2235, 1997, 1671, 129, 890, 900, 901, 893,
	894, 895, 896, 897, 898, 899, 892, 1977, 1954, 902,
	1985, 1503, 1986, 1884, 1913, 1096, 1912, 1177, 1784, 671,
	1505, 849, 1874, 1875, 1876, 1640, 1643, 1644, 1645, 1641,
	1225, 1642, 1646, 1907, 1237, 1184, 1011, 1125, 1969, 1123,
	1017, 1984, 662, 1680, 651, 2823, 1976, 2802, 2248, 2724,
	2653, 2467, 1711, 2436, 1740, 2279, 1736, 1516, 2240, 2241,
	430, 2001, 791, 1765, 1731, 1730, 1098, 774, 1801, 2958,
	1900, 1901, 1902, 1006, 1006, 1006, 1006, 1006, 1956, 1981,
	2956, 1959, 671, 1097, 129, 2926, 2315, 2243, 1998, 1006,
	2221, 1968, 1957, 1958, 2057, 1960, 1130, 671, 671, 671,
	1006, 827, 1965, 459, 81, 788, 783, 1966, 1867, 2246,
	1803, 1023, 1747, 1918, 1920, 1988, 1996, 129, 459, 456,
	1926, 1927, 1928, 1929, 1115, 1963, 2000, 2245, 461, 1967,
	1964, 1644, 1645, 1962, 459, 1961, 2862, 2093, 2006, 2092,
	2009, 2099, 489, 490, 2810, 2152, 1857, 533, 867, 868,
	80, 1515, 2854, 2427, 1865, 459, 1864, 671, 2565, 2532,
	2452, 2373, 2372, 459, 479, 2288, 2287, 2286, 2052, 2054,
	2147, 2148, 2718, 2013, 2005, 484, 2273, 865, 2715, 2797,
	1834, 2796, 1633, 2063, 671, 671, 1850, 2643, 2641, 2061,
	2157, 2097, 2696, 2062, 129, 2083, 2695, 421, 1664, 1172,
	2626, 2627, 2110, 2145, 671, 1528, 2144, 856, 2311, 2044,
	2116, 1030, 772, 756, 753, 752, 708, 2911, 857, 2660,
	2197, 2659, 2096, 2043, 1758, 2045, 2046, 2047, 2048, 2422,
	2102, 2035, 2036, 1759, 2037, 2038, 2039, 2041, 2042, 658,
	2104, 1129, 1530, 667, 1507, 1508, 2920, 2514, 2049, 2226,
	80, 2790, 671, 2118, 2515, 2128, 2847, 2139, 2140, 2123,
	2645, 2143, 2456, 2227, 751, 696, 2310, 1750, 1243, 96,
	2189, 1241, 2124, 2910, 2251, 484, 2121, 2131, 2136, 2255,
	2256, 2257, 671, 2909, 671, 2098, 486, 1880, 867, 868,
	1863, 2158, 2159, 2222, 845, 846, 2908, 2604, 1862, 2234,
	1832, 735, 2415, 1955, 1774, 2179, 2178, 671, 2846, 2166,
	1775, 1776, 2225, 2809, 2157, 1905, 2164, 1783, 2794, 2719,
	2675, 1954, 2281, 2010, 2012, 487, 84, 2254, 671, 2808,
	671, 2261, 671, 2730, 671, 1983, 2545, 2250, 2960, 2959,
	1930, 1931, 2069, 2070, 2071, 1935, 1796, 2259, 1938, 2353,
	2115, 891, 890, 900, 901, 893, 894, 895, 896, 897,
	898, 899, 892, 2161, 2229, 902, 2113, 2112, 1896, 2244,
	1893, 780, 1830, 1159, 870, 2959, 2960, 2180, 2181, 2676,
	2182, 2183, 2285, 1501, 2184, 2272, 2252, 2274, 662, 1745,
	129, 1746, 468, 470, 2764, 52, 86, 2193, 2194, 2766,
	19, 2266, 456, 2765, 18, 55, 2265, 2767, 20, 1,
	671, 671, 671, 2768, 21, 2318, 1820, 459, 2763, 15,
	2762, 14, 129, 459, 2332, 2756, 10, 2312, 2313, 2314,
	2198, 2199, 2200, 2201, 2202, 1208, 129, 2494, 459, 2493,
	671, 459, 2779, 34, 2339, 459, 459, 2334, 459, 2777,
	33, 2776, 32, 2775, 28, 2774, 27, 2773, 26, 2500,
	2253, 2771, 23, 2322, 671, 2770, 22, 2325, 129, 671,
	2772, 24, 2761, 13, 2758, 12, 671, 2757, 11, 671,
	2755, 9, 671, 2081, 2510, 2343, 1113, 2615, 2347, 2410,
	691, 1769, 2351, 2352, 778, 2354, 2795, 2714, 2716, 2640,
	2517, 2478, 1879, 2477, 2074, 2073, 773, 1182, 2122, 2284,
	2386, 1883, 1885, 2125, 1097, 1780, 1842, 1887, 1888, 863,
	2726, 2363, 1831, 828, 1894, 2357, 1695, 1897, 1898, 2356,
	2340, 2377, 1903, 1904, 1685, 2291, 2292, 664, 1910, 92,
	1911, 1790, 2295, 1914, 1915, 718, 1916, 1917, 388, 2298,
	1921, 1922, 1923, 1924, 1925, 1692, 2293, 2019, 2717, 2384,
	2294, 1932, 1933, 1934, 129, 1936, 1937, 775, 1939, 1940,
	1941, 1942, 1943, 1944, 1945, 2395, 2018, 2032, 1707, 1882,
	1753, 671, 1757, 2017, 2444, 2445, 2446, 2016, 671, 671,
	671, 1955, 1970, 1971, 2712, 2020, 1042, 1040, 671, 2431,
	1041, 1039, 1044, 1043, 2442, 392, 1025, 1909, 2454, 1954,
	80, 2833, 671, 2416, 2469, 871, 348, 107, 56, 2534,
	2135, 2341, 464, 2468, 465, 479, 2423, 2275, 2276, 2277,
	97, 2278, 2432, 479, 2447, 484, 105, 394, 910, 1861,
	1989, 649, 650, 642, 1853, 2388, 851, 2736, 129, 2453,
	671, 2443, 2894, 2825, 861, 2857, 1906, 941, 2490, 2491,
	2492, 1591, 507, 1972, 2563, 2859, 1520, 1998, 521, 520,
	2407, 2408, 2409, 2470, 2004, 519, 516, 517, 2819, 1510,
	1946, 2457, 884, 2305, 505, 496, 459, 1001, 2392, 2393,
	994, 2394, 1809, 1639, 2396, 1637, 2398, 1636, 1131, 2528,
	2529, 2543, 638, 2242, 2238, 1649, 1000, 1004, 70, 2157,
	2489, 2544, 2530, 733, 410, 671, 2411, 2669, 38, 469,
	2519, 491, 25, 671, 2520, 2226, 17, 743, 2226, 2570,
	2518, 16, 1835, 2522, 2516, 2538, 689, 2546, 2547, 2531,
	42, 2251, 2569, 2362, 2523, 44, 2068, 1761, 2272, 2832,
	2524, 2941, 1745, 759, 484, 2967, 2874, 2594, 31, 961,
	962, 30, 29, 671, 2769, 2573, 2455, 2778, 2760, 671,
	2539, 2759, 2600, 2928, 129, 2927, 129, 4, 842, 71,
	2567, 35, 671, 660, 2, 0, 0, 0, 2225, 2450,
	2451, 2225, 658, 2460, 0, 2566, 0, 658, 1026, 0,
	671, 0, 0, 0, 2576, 2601, 2572, 0, 0, 0,
	0, 0, 2599, 0, 2577, 0, 0, 0, 2461, 2587,
	2463, 1099, 2588, 2589, 2162, 2163, 2582, 1107, 1110, 2605,
	0, 0, 1656, 0, 2578, 0, 0, 0, 0, 0,
	0, 0, 0, 2661, 0, 2606, 1003, 0, 1107, 1110,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2618, 0, 0, 2628, 0, 2633, 0, 0, 0, 2226,
	671, 80, 0, 2636, 2203, 2204, 0, 0, 129, 2209,
	2646, 0, 2212, 0, 2678, 2651, 2652, 2551, 2552, 2553,
	2554, 2662, 0, 2228, 0, 2558, 484, 2658, 0, 2561,
	2562, 2664, 80, 0, 0, 0, 0, 0, 671, 0,
	0, 0, 2549, 2682, 0, 2692, 0, 0, 0, 0,
	0, 2677, 2191, 0, 2663, 2258, 0, 484, 2674, 2681,
	0, 0, 2225, 0, 0, 0, 2405, 0, 2060, 1209,
	0, 2694, 0, 0, 0, 0, 0, 2684, 0, 1003,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2595, 0, 2596, 0, 0, 0, 0, 0, 0,
	0, 2091, 0, 0, 0, 0, 0, 0, 459, 2270,
	0, 129, 0, 1006, 0, 0, 671, 0, 0, 0,
	0, 0, 0, 0, 0, 80, 2747, 2260, 2722, 2720,
	1244, 0, 2749, 0, 2723, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2731, 0, 0, 129,
	0, 0, 2740, 0, 2739, 0, 0, 2721, 0, 0,
	1244, 0, 1955, 802, 0, 891, 890, 900, 901, 893,
	894, 895, 896, 897, 898, 899, 892, 0, 2153, 902,
	1954, 0, 0, 2828, 0, 0, 0, 671, 2793, 0,
	2791, 671, 0, 0, 0, 0, 0, 0, 2800, 2803,
	1561, 0, 0, 0, 2590, 2591, 0, 2682, 2824, 2690,
	0, 2822, 0, 0, 80, 0, 1006, 0, 0, 0,
	0, 658, 0, 0, 0, 0, 0, 0, 2361, 0,
	0, 2837, 2387, 0, 0, 2004, 0, 2368, 2370, 1597,
	1598, 2391, 0, 0, 0, 671, 0, 2361, 0, 0,
	0, 0, 2400, 2401, 0, 0, 0, 0, 2406, 2871,
	2849, 0, 2863, 0, 0, 671, 2850, 2853, 0, 0,
	0, 0, 0, 2869, 2725, 0, 0, 2851, 0, 0,
	0, 0, 2870, 2654, 2655, 2379, 671, 0, 0, 0,
	0, 0, 0, 0, 0, 658, 456, 0, 0, 494,
	2425, 2426, 2881, 2428, 0, 0, 2429, 2890, 80, 1244,
	0, 459, 1244, 667, 80, 0, 0, 2892, 2889, 671,
	0, 2914, 0, 0, 0, 2905, 2441, 2907, 0, 0,
	0, 2912, 671, 2916, 0, 80, 2413, 2902, 0, 479,
	80, 0, 0, 0, 0, 671, 2923, 2929, 2938, 2951,
	0, 2197, 2921, 2940, 2935, 2932, 2917, 0, 0, 2953,
	2952, 2961, 2957, 456, 80, 484, 2955, 80, 80, 2931,
	927, 0, 80, 2930, 2308, 2914, 0, 0, 459, 2970,
	2433, 2434, 671, 2962, 2435, 2950, 2964, 2437, 0, 0,
	0, 0, 0, 0, 80, 927, 2980, 80, 0, 0,
	0, 2914, 2988, 0, 2990, 0, 2338, 0, 0, 0,
	0, 0, 80, 0, 80, 0, 2985, 0, 80, 2914,
	2342, 2914, 0, 0, 0, 2160, 0, 0, 0, 80,
	0, 0, 80, 0, 80, 0, 2914, 3000, 80, 0,
	0, 2914, 0, 0, 0, 2914, 0, 0, 0, 0,
	0, 3004, 2375, 891, 890, 900, 901, 893, 894, 895,
	896, 897, 898, 899, 892, 0, 2361, 902, 1818, 0,
	0, 0, 1818, 0, 0, 0, 0, 2404, 0, 0,
	0, 2555, 2556, 2557, 2414, 2559, 2361, 2207, 2208, 0,
	2210, 2211, 0, 2213, 2214, 2215, 2216, 2217, 2218, 2219,
	0, 1818, 0, 0, 1818, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2579, 2580,
	2581, 0, 0, 0, 0, 1064, 2949, 0, 0, 2593,
	0, 0, 0, 891, 890, 900, 901, 893, 894, 895,
	896, 897, 898, 899, 892, 2403, 0, 902, 0, 479,
	0, 479, 0, 0, 0, 0, 0, 2270, 0, 0,
	0, 0, 0, 0, 0, 2882, 2973, 2402, 0, 0,
	0, 0, 0, 0, 0, 2270, 891, 890, 900, 901,
	893, 894, 895, 896, 897, 898, 899, 892, 0, 0,
	902, 0, 0, 0, 0, 0, 0, 0, 0, 789,
	792, 799, 800, 0, 803, 804, 805, 806, 864, 808,
	809, 810, 0, 813, 0, 816, 817, 818, 819, 820,
	0, 0, 0, 0, 0, 2665, 2666, 2667, 2668, 1051,
	0, 0, 2476, 0, 0, 2672, 2673, 0, 0, 0,
	0, 0, 0, 0, 891, 890, 900, 901, 893, 894,
	895, 896, 897, 898, 899, 892, 127, 0, 902, 407,
	0, 0, 0, 0, 0, 127, 891, 890, 900, 901,
	893, 894, 895, 896, 897, 898, 899, 892, 0, 0,
	902, 2187, 0, 0, 0, 0, 0, 0, 478, 0,
	494, 0, 0, 0, 0, 0, 495, 0, 0, 641,
	659, 0, 0, 127, 0, 0, 0, 0, 0, 0,
	1065, 0, 0, 2186, 0, 0, 2389, 0, 0, 0,
	0, 0, 0, 127, 36, 0, 72, 39, 40, 0,
	0, 0, 0, 0, 127, 0, 0, 0, 59, 0,
	0, 0, 0, 2732, 78, 0, 0, 41, 0, 0,
	0, 0, 2741, 0, 0, 0, 0, 2418, 2419, 0,
	0, 2270, 0, 2420, 2744, 0, 2421, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1856, 0,
	0, 0, 0, 0, 0, 0, 81, 1244, 891, 890,
	900, 901, 893, 894, 895, 896, 897, 898, 899, 892,
	2804, 0, 902, 0, 0, 0, 0, 0, 0, 0,
	2813, 0, 2780, 0, 0, 2966, 2969, 2965, 0, 927,
	891, 890, 900, 901, 893, 894, 895, 896, 897, 898,
	899, 892, 2270, 0, 902, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1078, 1081, 1082, 1083, 1084,
	1085, 1086, 0, 1087, 1088, 1089, 1090, 1091, 1092, 1093,
	1094, 0, 1066, 1067, 1068, 1069, 1045, 1049, 1079, 1046,
	1052, 1048, 1050, 1047, 0, 1053, 1054, 1055, 1056, 1057,
	1058, 1059, 1060, 1061, 1062, 1063, 1070, 1071, 1072, 1073,
	1074, 1075, 1076, 1077, 0, 0, 0, 0, 43, 74,
	46, 45, 48, 0, 0, 0, 0, 0, 0, 0,
	2270, 0, 658, 2781, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2829, 2830, 0, 0, 0, 49,
	77, 76, 0, 0, 0, 0, 47, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 658, 0,
	0, 0, 2858, 2861, 1207, 0, 0, 1210, 1211, 1212,
	0, 1214, 1215, 0, 1244, 1216, 0, 0, 0, 0,
	0, 1217, 0, 0, 0, 1218, 1219, 0, 1220, 1221,
	0, 0, 0, 0, 1080, 0, 0, 57, 58, 127,
	2782, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2743, 66, 36, 67, 72, 39, 40,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 59,
	2906, 0, 0, 0, 2185, 78, 0, 2058, 41, 0,
	0, 68, 0, 127, 0, 0, 0, 0, 0, 0,
	1878, 2861, 2072, 2076, 2080, 0, 0, 2991, 2992, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2783,
	75, 0, 53, 54, 61, 0, 62, 81, 891, 890,
	900, 901, 893, 894, 895, 896, 897, 898, 899, 892,
	0, 0, 902, 0, 478, 0, 0, 0, 0, 0,
	0, 0, 0, 2780, 0, 0, 0, 0, 3006, 0,
	0, 0, 2111, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2989, 891, 890, 900, 901, 893, 894,
	895, 896, 897, 898, 899, 892, 0, 0, 902, 1244,
	1244, 891, 890, 900, 901, 893, 894, 895, 896, 897,
	898, 899, 892, 0, 0, 902, 0, 0, 0, 1244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 73,
	0, 0, 0, 0, 1244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 43,
	74, 46, 45, 48, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2781, 0, 0, 2195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 79, 0,
	49, 77, 76, 0, 0, 0, 0, 47, 0, 0,
	0, 0, 0, 0, 0, 658, 0, 1244, 0, 2233,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 127, 127, 127, 0, 0, 0, 0,
	0, 0, 2233, 659, 0, 0, 0, 0, 659, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 57, 58,
	0, 2782, 0, 1244, 0, 1244, 0, 1244, 0, 2269,
	0, 0, 0, 127, 0, 66, 0, 67, 1108, 1111,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 127, 0, 0, 127, 0, 0, 1108,
	1111, 0, 68, 0, 1140, 0, 0, 0, 0, 0,
	0, 0, 0, 127, 127, 127, 127, 127, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2783, 75, 0, 53, 54, 61, 0, 62, 1167, 0,
	0, 0, 0, 0, 0, 2319, 2320, 2321, 0, 0,
	0, 803, 804, 808, 810, 0, 816, 817, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1825, 0, 0,
	0, 0, 0, 0, 0, 2346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2371,
	0, 0, 0, 0, 2376, 0, 0, 0, 0, 0,
	0, 2380, 0, 0, 2381, 0, 0, 2383, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	73, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 0, 478, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 36, 37, 72, 39, 40, 127,
	0, 0, 0, 0, 0, 0, 0, 0, 59, 79,
	0, 1529, 0, 0, 78, 0, 0, 41, 63, 64,
	0, 0, 0, 0, 1064, 60, 0, 0, 0, 0,
	0, 0, 0, 658, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2439, 0, 0, 0,
	0, 0, 50, 2439, 2439, 2439, 81, 0, 1572, 1572,
	1572, 0, 0, 1244, 1572, 1572, 0, 1572, 1572, 0,
	0, 0, 659, 0, 0, 0, 0, 2439, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1572, 1572, 1572, 1572, 0, 0, 1572, 1572,
	1572, 1572, 1572, 0, 0, 0, 0, 0, 0, 1572,
	1572, 1572, 0, 1572, 1572, 2076, 1572, 1572, 1572, 1572,
	1572, 1572, 1572, 0, 127, 0, 0, 0, 1051, 0,
	0, 0, 127, 0, 478, 0, 0, 0, 0, 127,
	127, 0, 0, 127, 1667, 1140, 659, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1529, 0, 0, 0, 0, 0, 0, 0, 43, 74,
	46, 45, 48, 0, 0, 0, 0, 0, 0, 0,
	1244, 0, 0, 0, 0, 0, 0, 0, 1244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 49,
	77, 76, 0, 0, 0, 0, 47, 0, 0, 1065,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	65, 36, 0, 72, 39, 40, 0, 0, 2571, 0,
	0, 0, 0, 0, 2439, 59, 0, 0, 0, 0,
	0, 78, 0, 0, 41, 0, 127, 2269, 0, 0,
	0, 0, 127, 127, 0, 0, 0, 57, 58, 127,
	0, 0, 0, 0, 0, 2269, 0, 0, 0, 0,
	0, 0, 0, 0, 66, 0, 67, 0, 0, 0,
	0, 0, 0, 81, 0, 0, 1794, 1795, 127, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 68, 0, 0, 0, 0, 0, 0, 0, 2780,
	0, 0, 0, 127, 3002, 478, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 51,
	75, 0, 53, 54, 61, 2657, 62, 0, 0, 0,
	0, 0, 0, 0, 1078, 1081, 1082, 1083, 1084, 1085,
	1086, 0, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094,
	0, 1066, 1067, 1068, 1069, 1045, 1049, 1079, 1046, 1052,
	1048, 1050, 1047, 2680, 1053, 1054, 1055, 1056, 1057, 1058,
	1059, 1060, 1061, 1062, 1063, 1070, 1071, 1072, 1073, 1074,
	1075, 1076, 1077, 0, 0, 43, 74, 46, 45, 48,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2781, 0, 0, 0, 0, 0, 0, 0, 36, 0,
	72, 39, 40, 0, 0, 0, 49, 77, 76, 73,
	0, 0, 59, 47, 0, 0, 0, 0, 78, 0,
	0, 41, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 658, 0, 0, 0, 79, 0,
	81, 0, 0, 1080, 57, 58, 0, 2782, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 66, 0, 67, 0, 0, 2780, 0, 0, 0,
	0, 2996, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2269, 0, 0, 0, 2806, 0, 68, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2783, 75, 0, 53,
	54, 61, 0, 62, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 43, 74, 46, 45, 48, 0, 0, 0,
	2269, 0, 0, 0, 0, 0, 0, 2781, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2439, 0, 49, 77, 76, 0, 0, 0, 0,
	47, 0, 0, 0, 0, 0, 0, 0, 1529, 0,
	0, 0, 0, 0, 0, 36, 0, 72, 39, 40,
	0, 0, 0, 0, 2896, 0, 73, 0, 0, 59,
	0, 0, 0, 0, 0, 78, 0, 2900, 41, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1244, 57, 58, 0, 2782, 0, 0, 0, 0, 0,
	0, 1572, 1572, 0, 0, 0, 0, 0, 66, 0,
	67, 0, 0, 0, 0, 79, 0, 81, 0, 36,
	0, 72, 39, 40, 0, 0, 0, 2896, 0, 1572,
	0, 0, 0, 59, 0, 68, 0, 0, 0, 78,
	0, 0, 41, 2780, 0, 0, 0, 0, 2982, 0,
	0, 0, 0, 0, 1572, 1572, 0, 0, 0, 1572,
	0, 0, 1572, 2783, 75, 0, 53, 54, 61, 0,
	62, 0, 0, 659, 127, 127, 127, 127, 127, 0,
	0, 81, 2971, 0, 0, 0, 478, 0, 0, 0,
	127, 0, 0, 0, 478, 0, 0, 0, 0, 1572,
	0, 127, 0, 0, 0, 0, 0, 2780, 0, 659,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 43,
	74, 46, 45, 48, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2781, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	49, 77, 76, 73, 0, 0, 0, 47, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	127, 0, 0, 43, 74, 46, 45, 48, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2781, 0,
	0, 0, 79, 0, 0, 0, 0, 0, 57, 58,
	0, 2782, 0, 127, 49, 77, 76, 0, 0, 0,
	403, 47, 0, 0, 0, 66, 0, 67, 0, 0,
	0, 36, 0, 72, 39, 40, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 59, 0, 0, 0, 0,
	0, 78, 68, 0, 41, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 57, 58, 0, 2782, 0, 0, 0, 0,
	2783, 75, 0, 53, 54, 61, 0, 62, 0, 66,
	127, 67, 0, 81, 36, 0, 72, 39, 40, 0,
	0, 1572, 0, 0, 0, 0, 0, 0, 59, 0,
	0, 0, 0, 1572, 78, 1529, 68, 41, 0, 2780,
	0, 381, 0, 0, 2913, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2783, 75, 0, 53, 54, 61,
	0, 62, 0, 0, 0, 0, 81, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 384, 0,
	0, 0, 0, 0, 0, 0, 659, 393, 401, 402,
	73, 0, 2780, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 43, 74, 46, 45, 48,
	0, 0, 390, 0, 0, 391, 0, 0, 399, 400,
	2781, 0, 0, 0, 0, 0, 0, 0, 0, 79,
	0, 0, 0, 0, 0, 0, 49, 77, 76, 0,
	0, 0, 0, 47, 73, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 43, 74,
	46, 45, 48, 0, 0, 396, 0, 0, 0, 0,
	0, 0, 0, 2781, 0, 0, 127, 0, 0, 0,
	0, 0, 0, 79, 57, 58, 397, 2782, 0, 49,
	77, 76, 0, 0, 0, 0, 47, 0, 0, 0,
	0, 66, 0, 67, 0, 0, 0, 0, 127, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 127, 0, 0, 0, 0, 0, 68, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 57, 58, 0,
	2782, 382, 0, 0, 127, 0, 2783, 75, 0, 53,
	54, 61, 0, 62, 66, 0, 67, 0, 0, 0,
	0, 0, 0, 0, 495, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 385, 386, 0, 406,
	0, 68, 0, 387, 389, 0, 383, 405, 404, 1142,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2783,
	75, 0, 53, 54, 61, 0, 62, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	398, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	478, 0, 0, 0, 659, 0, 73, 0, 0, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 0, 0, 0, 0, 79, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 73,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 127, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 79, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	478, 0, 478, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 127, 495, 1474, 1442, 316, 1345,
	1478, 1293, 1323, 1492, 1329, 1332, 1406, 1261, 1372, 260,
	1320, 1262, 1248, 1298, 1252, 1311, 1253, 1295, 180, 1292,
	1445, 1378, 1476, 1362, 1399, 1409, 179, 171, 1375, 1374,
	1464, 1309, 1308, 1404, 1459, 1475, 1361, 0, 1485, 224,
	1456, 368, 338, 308, 245, 0, 0, 1359, 1461, 1370,
	1434, 1342, 1408, 1275, 1390, 1480, 1321, 1400, 1481, 0,
	0, 0, 0, 670, 0, 1689, 1690, 1317, 0, 0,
	0, 0, 356, 0, 1396, 1472, 1314, 370, 1354, 1405,
	1496, 1251, 1392, 0, 1256, 1264, 1491, 1465, 1305, 1306,
	183, 1999, 0, 0, 0, 0, 0, 127, 1357, 1371,
	1425, 1339, 333, 1411, 1417, 1437, 1331, 276, 196, 0,
	0, 0, 0, 0, 0, 0, 0, 1300, 0, 1388,
	0, 0, 0, 1269, 1258, 659, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 127, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1353, 0, 0,
	0, 1274, 1249, 1302, 1427, 1250, 1247, 246, 1265, 1439,
	1463, 1340, 215, 379, 1469, 1338, 1337, 1414, 1270, 1449,
	1324, 222, 1268, 130, 1263, 164, 1322, 257, 1424, 1431,
	363, 133, 1446, 1296, 1313, 172, 358, 286, 1401, 332,
	364, 1387, 285, 225, 325, 1415, 1471, 331, 1325, 315,
	339, 343, 190, 1363, 163, 305, 181, 178, 1304, 1436,
	1255, 197, 275, 175, 218, 1343, 1407, 1297, 168, 1420,
	1389, 1451, 304, 322, 136, 243, 323, 342, 154, 317,
	244, 250, 165, 167, 166, 150, 299, 321, 159, 170,
	1447, 1430, 1453, 1291, 1271, 1282, 1272, 1312, 1473, 210,
	201, 1454, 1452, 336, 365, 295, 294, 1328, 209, 1433,
	1391, 351, 282, 371, 216, 141, 1458, 346, 153, 220,
	318, 349, 194, 256, 174, 1403, 264, 1310, 132, 278,
	236, 237, 235, 238, 200, 361, 372, 1429, 280, 297,
	320, 155, 311, 359, 360, 362, 374, 288, 375, 376,
	1479, 230, 186, 189, 203, 211, 1402, 284, 312, 337,
	1393, 151, 144, 314, 330, 160, 296, 298, 344, 1426,
	146, 1467, 1448, 240, 1346, 1352, 1257, 0, 145, 1422,
	1301, 199, 1290, 1397, 1289, 198, 1413, 328, 329, 173,
	347, 1266, 1487, 147, 1267, 1486, 253, 0, 252, 1489,
	324, 1468, 241, 1381, 1379, 1259, 1466, 239, 1380, 221,
	188, 205, 273, 227, 274, 206, 248, 247, 249, 228,
	1383, 0, 143, 0, 309, 1477, 1498, 313, 157, 1284,
	1440, 319, 202, 279, 158, 195, 187, 272, 251, 152,
	208, 307, 219, 226, 1419, 345, 263, 287, 161, 334,
	306, 182, 1280, 1283, 1278, 1281, 1279, 1376, 1377, 1482,
	1483, 1484, 1428, 1273, 0, 0, 0, 0, 1368, 1470,
	1260, 0, 1444, 377, 378, 1410, 1494, 1330, 169, 352,
	353, 354, 355, 357, 366, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1277, 1294, 1316, 1364,
	1365, 1367, 1394, 1395, 1438, 1412, 1418, 1386, 134, 148,
	223, 1495, 281, 193, 1246, 1254, 1276, 1285, 1286, 1287,
	1288, 1299, 1303, 1315, 1318, 1319, 1327, 1333, 1334, 1335,
	1336, 1344, 1347, 1348, 1349, 1350, 1351, 1355, 1356, 1358,
	1369, 1373, 1382, 1384, 1385, 1416, 1421, 1432, 1435, 1441,
	1443, 1450, 1455, 1457, 1488, 1493, 1497, 335, 177, 1307,
	1360, 1366, 242, 1423, 149, 156, 162, 176, 185, 192,
	204, 207, 212, 213, 214, 217, 229, 231, 232, 233,
	234, 254, 255, 258, 259, 261, 262, 265, 266, 267,
	269, 270, 271, 277, 373, 283, 289, 290, 291, 292,
	293, 300, 301, 302, 303, 310, 326, 327, 340, 341,
	1462, 1341, 131, 135, 138, 139, 350, 140, 142, 184,
	191, 1326, 137, 1460, 1490, 1398, 268, 1474, 1442, 316,
	1345, 1478, 1293, 1323, 1492, 1329, 1332, 1406, 1261, 1372,
	260, 1320, 1262, 1248, 1298, 1252, 1311, 1253, 1295, 180,
	1292, 1445, 1378, 1476, 1362, 1399, 1409, 179, 171, 1375,
	1374, 1464, 1309, 1308, 1404, 1459, 1475, 1361, 0, 1485,
	224, 1456, 368, 338, 308, 245, 0, 0, 1359, 1461,
	1370, 1434, 1342, 1408, 1275, 1390, 1480, 1321, 1400, 1481,
	0, 0, 0, 0, 670, 0, 1689, 1690, 1317, 0,
	0, 0, 0, 356, 0, 1396, 1472, 1314, 370, 1354,
	1405, 1496, 1251, 1392, 0, 1256, 1264, 1491, 1465, 1305,
	1306, 183, 0, 0, 0, 0, 0, 0, 0, 1357,
	1371, 1425, 1339, 333, 1411, 1417, 1437, 1331, 276, 196,
	0, 0, 0, 0, 0, 0, 0, 0, 1300, 0,
	1388, 0, 0, 0, 1269, 1258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1353, 0,
	0, 0, 1274, 1249, 1302, 1427, 1250, 1247, 246, 1265,
	1439, 1463, 1340, 215, 379, 1469, 1338, 1337, 1414, 1270,
	1449, 1324, 222, 1268, 130, 1263, 164, 1322, 257, 1424,
	1431, 363, 133, 1446, 1296, 1313, 172, 358, 286, 1401,
	332, 364, 1387, 285, 225, 325, 1415, 1471, 331, 1325,
	315, 339, 343, 190, 1363, 163, 305, 181, 178, 1304,
	1436, 1255, 197, 275, 175, 218, 1343, 1407, 1297, 168,
	1420, 1389, 1451, 304, 322, 136, 243, 323, 342, 154,
	317, 244, 250, 165, 167, 166, 150, 299, 321, 159,
	170, 1447, 1430, 1453, 1291, 1271, 1282, 1272, 1312, 1473,
	210, 201, 1454, 1452, 336, 365, 295, 294, 1328, 209,
	1433, 1391, 351, 282, 371, 216, 141, 1458, 346, 153,
	220, 318, 349, 194, 256, 174, 1403, 264, 1310, 132,
	278, 236, 237, 235, 238, 200, 361, 372, 1429, 280,
	297, 320, 155, 311, 359, 360, 362, 374, 288, 375,
	376, 1479, 230, 186, 189, 203, 211, 1402, 284, 312,
	337, 1393, 151, 144, 314, 330, 160, 296, 298, 344,
	1426, 146, 1467, 1448, 240, 1346, 1352, 1257, 0, 145,
	1422, 1301, 199, 1290, 1397, 1289, 198, 1413, 328, 329,
	173, 347, 1266, 1487, 147, 1267, 1486, 253, 0, 252,
	1489, 324, 1468, 241, 1381, 1379, 1259, 1466, 239, 1380,
	221, 188, 205, 273, 227, 274, 206, 248, 247, 249,
	228, 1383, 0, 143, 0, 309, 1477, 1498, 313, 157,
	1284, 1440, 319, 202, 279, 158, 195, 187, 272, 251,
	152, 208, 307, 219, 226, 1419, 345, 263, 287, 161,
	334, 306, 182, 1280, 1283, 1278, 1281, 1279, 1376, 1377,
	1482, 1483, 1484, 1428, 1273, 0, 0, 0, 0, 1368,
	1470, 1260, 0, 1444, 377, 378, 1410, 1494, 1330, 169,
	352, 353, 354, 355, 357, 366, 367, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1277, 1294, 1316,
	1364, 1365, 1367, 1394, 1395, 1438, 1412, 1418, 1386, 134,
	148, 223, 1495, 281, 193, 1246, 1254, 1276, 1285, 1286,
	1287, 1288, 1299, 1303, 1315, 1318, 1319, 1327, 1333, 1334,
	1335, 1336, 1344, 1347, 1348, 1349, 1350, 1351, 1355, 1356,
	1358, 1369, 1373, 1382, 1384, 1385, 1416, 1421, 1432, 1435,
	1441, 1443, 1450, 1455, 1457, 1488, 1493, 1497, 335, 177,
	1307, 1360, 1366, 242, 1423, 149, 156, 162, 176, 185,
	192, 204, 207, 212, 213, 214, 217, 229, 231, 232,
	233, 234, 254, 255, 258, 259, 261, 262, 265, 266,
	267, 269, 270, 271, 277, 373, 283, 289, 290, 291,
	292, 293, 300, 301, 302, 303, 310, 326, 327, 340,
	341, 1462, 1341, 131, 135, 138, 139, 350, 140, 142,
	184, 191, 1326, 137, 1460, 1490, 1398, 268, 1474, 2230,
	316, 1345, 1478, 1293, 1323, 1492, 1329, 1332, 1406, 1261,
	1372, 260, 1320, 1262, 1248, 1298, 1252, 1311, 1253, 1295,
	180, 1292, 1445, 1378, 1476, 1362, 1399, 1409, 179, 171,
	1375, 1374, 1464, 1309, 1308, 1404, 1459, 1475, 1361, 0,
	1485, 224, 1456, 368, 338, 308, 245, 0, 0, 1359,
	1461, 1370, 1434, 1342, 1408, 1275, 1390, 1480, 1321, 1400,
	1481, 81, 0, 854, 0, 670, 0, 0, 0, 1317,
	0, 0, 0, 0, 356, 0, 1396, 1472, 1314, 370,
	1354, 1405, 1496, 1251, 1392, 0, 1256, 1264, 1491, 1465,
	1305, 1306, 183, 0, 0, 0, 0, 0, 0, 0,
	1357, 1371, 1425, 1339, 333, 1411, 1417, 1437, 1331, 276,
	196, 0, 0, 0, 0, 0, 0, 0, 0, 1300,
	0, 1388, 0, 0, 0, 1269, 1258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1353,
	0, 0, 0, 1274, 1249, 1302, 1427, 1250, 1247, 246,
	1265, 1439, 1463, 1340, 215, 379, 1469, 1338, 1337, 1414,
	1270, 1449, 1324, 222, 1268, 130, 1263, 164, 1322, 257,
	1424, 1431, 363, 133, 1446, 1296, 1313, 172, 358, 286,
	1401, 332, 364, 1387, 285, 225, 325, 1415, 1471, 331,
	1325, 315, 339, 343, 190, 1363, 163, 305, 181, 178,
	1304, 1436, 1255, 197, 275, 175, 218, 1343, 1407, 1297,
	168, 1420, 1389, 1451, 304, 322, 136, 243, 323, 342,
	154, 317, 244, 250, 165, 167, 166, 150, 299, 321,
	159, 170, 1447, 1430, 1453, 1291, 1271, 1282, 1272, 1312,
	1473, 210, 201, 1454, 1452, 336, 365, 295, 294, 1328,
	209, 1433, 1391, 351, 282, 371, 216, 141, 1458, 346,
	153, 220, 318, 349, 194, 256, 174, 1403, 264, 1310,
	132, 278, 236, 237, 235, 238, 200, 361, 372, 1429,
	280, 297, 320, 155, 311, 359, 360, 362, 374, 288,
	375, 376, 1479, 230, 186, 189, 203, 211, 1402, 284,
	312, 337, 1393, 151, 144, 314, 330, 160, 296, 298,
	344, 1426, 146, 1467, 1448, 240, 1346, 1352, 1257, 0,
	145, 1422, 1301, 199, 1290, 1397, 1289, 198, 1413, 328,
	329, 173, 347, 1266, 1487, 147, 1267, 1486, 253, 0,
	252, 1489, 324, 1468, 241, 1381, 1379, 1259, 1466, 239,
	1380, 221, 188, 205, 273, 227, 274, 206, 248, 247,
	249, 228, 1383, 0, 143, 0, 309, 1477, 1498, 313,
	157, 1284, 1440, 319, 202, 279, 158, 195, 187, 272,
	251, 152, 208, 307, 219, 226, 1419, 345, 263, 287,
	161, 334, 306, 182, 1280, 1283, 1278, 1281, 1279, 1376,
	1377, 1482, 1483, 1484, 1428, 1273, 0, 0, 0, 0,
	1368, 1470, 1260, 0, 1444, 377, 378, 1410, 1494, 1330,
	169, 352, 353, 354, 355, 357, 366, 367, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1277, 1294,
	1316, 1364, 1365, 1367, 1394, 1395, 1438, 1412, 1418, 1386,
	134, 148, 223, 2231, 281, 193, 1246, 1254, 1276, 1285,
	1286, 1287, 1288, 1299, 1303, 1315, 1318, 1319, 1327, 1333,
	1334, 1335, 1336, 1344, 1347, 1348, 1349, 1350, 1351, 1355,
	1356, 1358, 1369, 1373, 1382, 1384, 1385, 1416, 1421, 1432,
	1435, 1441, 1443, 1450, 1455, 1457, 1488, 1493, 1497, 335,
	177, 1307, 1360, 1366, 242, 1423, 149, 156, 162, 176,
	185, 192, 204, 207, 212, 213, 214, 217, 229, 231,
	232, 233, 234, 254, 255, 258, 259, 261, 262, 265,
	266, 267, 269, 270, 271, 277, 373, 283, 289, 290,
	291, 292, 293, 300, 301, 302, 303, 310, 326, 327,
	340, 341, 1462, 1341, 131, 135, 138, 139, 350, 140,
	142, 184, 191, 1326, 137, 1460, 1490, 1398, 268, 1474,
	1442, 316, 1345, 1478, 1293, 1323, 1492, 1329, 1332, 1406,
	1261, 1372, 260, 1320, 1262, 1248, 1298, 1252, 1311, 1253,
	1295, 180, 1292, 1445, 1378, 1476, 1362, 1399, 1409, 179,
	171, 1375, 1374, 1464, 1309, 1308, 1404, 1459, 1475, 1361,
	0, 1485, 224, 1456, 368, 338, 308, 245, 0, 0,
	1359, 1461, 1370, 1434, 1342, 1408, 1275, 1390, 1480, 1321,
	1400, 1481, 0, 0, 0, 0, 670, 0, 0, 0,
	1317, 0, 0, 0, 0, 356, 0, 1396, 1472, 1314,
	370, 1354, 1405, 1496, 1251, 1392, 0, 1256, 1264, 1491,
	1465, 1305, 1306, 183, 0, 0, 0, 0, 0, 0,
	0, 1357, 1371, 1425, 1339, 333, 1411, 1417, 1437, 1331,
	276, 196, 0, 0, 0, 0, 0, 0, 2548, 0,
	1300, 0, 1388, 0, 0, 0, 1269, 1258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1353, 0, 0, 0, 1274, 1249, 1302, 1427, 1250, 1247,
	246, 1265, 1439, 1463, 1340, 215, 379, 1469, 1338, 1337,
	1414, 1270, 1449, 1324, 222, 1268, 130, 1263, 164, 1322,
	257, 1424, 1431, 363, 133, 1446, 1296, 1313, 172, 358,
	286, 1401, 332, 364, 1387, 285, 225, 325, 1415, 1471,
	331, 1325, 315, 339, 343, 190, 1363, 163, 305, 181,
	178, 1304, 1436, 1255, 197, 275, 175, 218, 1343, 1407,
	1297, 168, 1420, 1389, 1451, 304, 322, 136, 243, 323,
	342, 154, 317, 244, 250, 165, 167, 166, 150, 299,
	321, 159, 170, 1447, 1430, 1453, 1291, 1271, 1282, 1272,
	1312, 1473, 210, 201, 1454, 1452, 336, 365, 295, 294,
	1328, 209, 1433, 1391, 351, 282, 371, 216, 141, 1458,
	346, 153, 220, 318, 349, 194, 256, 174, 1403, 264,
	1310, 132, 278, 236, 237, 235, 238, 200, 361, 372,
	1429, 280, 297, 320, 155, 311, 359, 360, 362, 374,
	288, 375, 376, 1479, 230, 186, 189, 203, 211, 1402,
	284, 312, 337, 1393, 151, 144, 314, 330, 160, 296,
	298, 344, 1426, 146, 1467, 1448, 240, 1346, 1352, 1257,
	0, 145, 1422, 1301, 199, 1290, 1397, 1289, 198, 1413,
	328, 329, 173, 347, 1266, 1487, 147, 1267, 1486, 253,
	0, 252, 1489, 324, 1468, 241, 1381, 1379, 1259, 1466,
	239, 1380, 221, 188, 205, 273, 227, 274, 206, 248,
	247, 249, 228, 1383, 0, 143, 0, 309, 1477, 1498,
	313, 157, 1284, 1440, 319, 202, 279, 158, 195, 187,
	272, 251, 152, 208, 307, 219, 226, 1419, 345, 263,
	287, 161, 334, 306, 182, 1280, 1283, 1278, 1281, 1279,
	1376, 1377, 1482, 1483, 1484, 1428, 1273, 0, 0, 0,
	0, 1368, 1470, 1260, 0, 1444, 377, 378, 1410, 1494,
	1330, 169, 352, 353, 354, 355, 357, 366, 367, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1277,
	1294, 1316, 1364, 1365, 1367, 1394, 1395, 1438, 1412, 1418,
	1386, 134, 148, 223, 1495, 281, 193, 1246, 1254, 1276,
	1285, 1286, 1287, 1288, 1299, 1303, 1315, 1318, 1319, 1327,
	1333, 1334, 1335, 1336, 1344, 1347, 1348, 1349, 1350, 1351,
	1355, 1356, 1358, 1369, 1373, 1382, 1384, 1385, 1416, 1421,
	1432, 1435, 1441, 1443, 1450, 1455, 1457, 1488, 1493, 1497,
	335, 177, 1307, 1360, 1366, 242, 1423, 149, 156, 162,
	176, 185, 192, 204, 207, 212, 213, 214, 217, 229,
	231, 232, 233, 234, 254, 255, 258, 259, 261, 262,
	265, 266, 267, 269, 270, 271, 277, 373, 283, 289,
	290, 291, 292, 293, 300, 301, 302, 303, 310, 326,
	327, 340, 341, 1462, 1341, 131, 135, 138, 139, 350,
	140, 142, 184, 191, 1326, 137, 1460, 1490, 1398, 268,
	1474, 1442, 316, 1345, 1478, 1293, 1323, 1492, 1329, 1332,
	1406, 1261, 1372, 260, 1320, 1262, 1248, 1298, 1252, 1311,
	1253, 1295, 180, 1292, 1445, 1378, 1476, 1362, 1399, 1409,
	179, 171, 1375, 1374, 1464, 1309, 1308, 1404, 1459, 1475,
	1361, 0, 1485, 224, 1456, 368, 338, 308, 245, 0,
	0, 1359, 1461, 1370, 1434, 1342, 1408, 1275, 1390, 1480,
	1321, 1400, 1481, 0, 0, 0, 0, 500, 0, 0,
	0, 1317, 0, 0, 0, 0, 356, 0, 1396, 1472,
	1314, 370, 1354, 1405, 1496, 1251, 1392, 0, 1256, 1264,
	1491, 1465, 1305, 1306, 183, 0, 0, 0, 0, 0,
	0, 0, 1357, 1371, 1425, 1339, 333, 1411, 1417, 1437,
	1331, 276, 196, 0, 0, 0, 0, 0, 0, 2165,
	0, 1300, 0, 1388, 0, 0, 0, 1269, 1258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1353, 0, 0, 0, 1274, 1249, 1302, 1427, 1250,
	1247, 246, 1265, 1439, 1463, 1340, 215, 379, 1469, 1338,
	1337, 1414, 1270, 1449, 1324, 222, 1268, 130, 1263, 164,
	1322, 257, 1424, 1431, 363, 133, 1446, 1296, 1313, 172,
	358, 286, 1401, 332, 364, 1387, 285, 225, 325, 1415,
	1471, 331, 1325, 315, 339, 343, 190, 1363, 163, 305,
	181, 178, 1304, 1436, 1255, 197, 275, 175, 218, 1343,
	1407, 1297, 168, 1420, 1389, 1451, 304, 322, 136, 243,
	323, 342, 154, 317, 244, 250, 165, 167, 166, 150,
	299, 321, 159, 170, 1447, 1430, 1453, 1291, 1271, 1282,
	1272, 1312, 1473, 210, 201, 1454, 1452, 336, 365, 295,
	294, 1328, 209, 1433, 1391, 351, 282, 371, 216, 141,
	1458, 346, 153, 220, 318, 349, 194, 256, 174, 1403,
	264, 1310, 132, 278, 236, 237, 235, 238, 200, 361,
	372, 1429, 280, 297, 320, 155, 311, 359, 360, 362,
	374, 288, 375, 376, 1479, 230, 186, 189, 203, 211,
	1402, 284, 312, 337, 1393, 151, 144, 314, 330, 160,
	296, 298, 344, 1426, 146, 1467, 1448, 240, 1346, 1352,
	1257, 0, 145, 1422, 1301, 199, 1290, 1397, 1289, 198,
	1413, 328, 329, 173, 347, 1266, 1487, 147, 1267, 1486,
	253, 0, 252, 1489, 324, 1468, 241, 1381, 1379, 1259,
	1466, 239, 1380, 221, 188, 205, 273, 227, 274, 206,
	248, 247, 249, 228, 1383, 0, 143, 0, 309, 1477,
	1498, 313, 157, 1284, 1440, 319, 202, 279, 158, 195,
	187, 272, 251, 152, 208, 307, 219, 226, 1419, 345,
	263, 287, 161, 334, 306, 182, 1280, 1283, 1278, 1281,
	1279, 1376, 1377, 1482, 1483, 1484, 1428, 1273, 0, 0,
	0, 0, 1368, 1470, 1260, 0, 1444, 377, 378, 1410,
	1494, 1330, 169, 352, 353, 354, 355, 357, 366, 367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1277, 1294, 1316, 1364, 1365, 1367, 1394, 1395, 1438, 1412,
	1418, 1386, 134, 148, 223, 1495, 281, 193, 1246, 1254,
	1276, 1285, 1286, 1287, 1288, 1299, 1303, 1315, 1318, 1319,
	1327, 1333, 1334, 1335, 1336, 1344, 1347, 1348, 1349, 1350,
	1351, 1355, 1356, 1358, 1369, 1373, 1382, 1384, 1385, 1416,
	1421, 1432, 1435, 1441, 1443, 1450, 1455, 1457, 1488, 1493,
	1497, 335, 177, 1307, 1360, 1366, 242, 1423, 149, 156,
	162, 176, 185, 192, 204, 207, 212, 213, 214, 217,
	229, 231, 232, 233, 234, 254, 255, 258, 259, 261,
	262, 265, 266, 267, 269, 270, 271, 277, 373, 283,
	289, 290, 291, 292, 293, 300, 301, 302, 303, 310,
	326, 327, 340, 341, 1462, 1341, 131, 135, 138, 139,
	350, 140, 142, 184, 191, 1326, 137, 1460, 1490, 1398,
	268, 1474, 1442, 316, 1345, 1478, 1293, 1323, 1492, 1329,
	1332, 1406, 1261, 1372, 260, 1320, 1262, 1248, 1298, 1252,
	1311, 1253, 1295, 180, 1292, 1445, 1378, 1476, 1362, 1399,
	1409, 179, 171, 1375, 1374, 1464, 1309, 1308, 1404, 1459,
	1475, 1361, 0, 1485, 224, 1456, 368, 338, 308, 245,
	0, 0, 1359, 1461, 1370, 1434, 1342, 1408, 1275, 1390,
	1480, 1321, 1400, 1481, 0, 0, 0, 0, 670, 0,
	0, 0, 1317, 0, 0, 0, 0, 356, 0, 1396,
	1472, 1314, 370, 1354, 1405, 1496, 1251, 1392, 0, 1256,
	1264, 1491, 1465, 1305, 1306, 183, 0, 0, 0, 0,
	0, 0, 0, 1357, 1371, 1425, 1339, 333, 1411, 1417,
	1437, 1331, 276, 196, 0, 0, 0, 0, 0, 0,
	2156, 0, 1300, 0, 1388, 0, 0, 0, 1269, 1258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1353, 0, 0, 0, 1274, 1249, 1302, 1427,
	1250, 1247, 246, 1265, 1439, 1463, 1340, 215, 379, 1469,
	1338, 1337, 1414, 1270, 1449, 1324, 222, 1268, 130, 1263,
	164, 1322, 257, 1424, 1431, 363, 133, 1446, 1296, 1313,
	172, 358, 286, 1401, 332, 364, 1387, 285, 225, 325,
	1415, 1471, 331, 1325, 315, 339, 343, 190, 1363, 163,
	305, 181, 178, 1304, 1436, 1255, 197, 275, 175, 218,
	1343, 1407, 1297, 168, 1420, 1389, 1451, 304, 322, 136,
	243, 323, 342, 154, 317, 244, 250, 165, 167, 166,
	150, 299, 321, 159, 170, 1447, 1430, 1453, 1291, 1271,
	1282, 1272, 1312, 1473, 210, 201, 1454, 1452, 336, 365,
	295, 294, 1328, 209, 1433, 1391, 351, 282, 371, 216,
	141, 1458, 346, 153, 220, 318, 349, 194, 256, 174,
	1403, 264, 1310, 132, 278, 236, 237, 235, 238, 200,
	361, 372, 1429, 280, 297, 320, 155, 311, 359, 360,
	362, 374, 288, 375, 376, 1479, 230, 186, 189, 203,
	211, 1402, 284, 312, 337, 1393, 151, 144, 314, 330,
	160, 296, 298, 344, 1426, 146, 1467, 1448, 240, 1346,
	1352, 1257, 0, 145, 1422, 1301, 199, 1290, 1397, 1289,
	198, 1413, 328, 329, 173, 347, 1266, 1487, 147, 1267,
	1486, 253, 0, 252, 1489, 324, 1468, 241, 1381, 1379,
	1259, 1466, 239, 1380, 221, 188, 205, 273, 227, 274,
	206, 248, 247, 249, 228, 1383, 0, 143, 0, 309,
	1477, 1498, 313, 157, 1284, 1440, 319, 202, 279, 158,
	195, 187, 272, 251, 152, 208, 307, 219, 226, 1419,
	345, 263, 287, 161, 334, 306, 182, 1280, 1283, 1278,
	1281, 1279, 1376, 1377, 1482, 1483, 1484, 1428, 1273, 0,
	0, 0, 0, 1368, 1470, 1260, 0, 1444, 377, 378,
	1410, 1494, 1330, 169, 352, 353, 354, 355, 357, 366,
	367, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1277, 1294, 1316, 1364, 1365, 1367, 1394, 1395, 1438,
	1412, 1418, 1386, 134, 148, 223, 1495, 281, 193, 1246,
	1254, 1276, 1285, 1286, 1287, 1288, 1299, 1303, 1315, 1318,
	1319, 1327, 1333, 1334, 1335, 1336, 1344, 1347, 1348, 1349,
	1350, 1351, 1355, 1356, 1358, 1369, 1373, 1382, 1384, 1385,
	1416, 1421, 1432, 1435, 1441, 1443, 1450, 1455, 1457, 1488,
	1493, 1497, 335, 177, 1307, 1360, 1366, 242, 1423, 149,
	156, 162, 176, 185, 192, 204, 207, 212, 213, 214,
	217, 229, 231, 232, 233, 234, 254, 255, 258, 259,
	261, 262, 265, 266, 267, 269, 270, 271, 277, 373,
	283, 289, 290, 291, 292, 293, 300, 301, 302, 303,
	310, 326, 327, 340, 341, 1462, 1341, 131, 135, 138,
	139, 350, 140, 142, 184, 191, 1326, 137, 1460, 1490,
	1398, 268, 1474, 1442, 316, 1345, 1478, 1293, 1323, 1492,
	1329, 1332, 1406, 1261, 1372, 260, 1320, 1262, 1248, 1298,
	1252, 1311, 1253, 1295, 180, 1292, 1445, 1378, 1476, 1362,
	1399, 1409, 179, 171, 1375, 1374, 1464, 1309, 1308, 1404,
	1459, 1475, 1361, 0, 1485, 224, 1456, 368, 338, 308,
	245, 0, 0, 1359, 1461, 1370, 1434, 1342, 1408, 1275,
	1390, 1480, 1321, 1400, 1481, 0, 0, 0, 0, 500,
	0, 0, 0, 1317, 0, 0, 0, 0, 356, 0,
	1396, 1472, 1314, 370, 1354, 1405, 1496, 1251, 1392, 0,
	1256, 1264, 1491, 1465, 1305, 1306, 183, 0, 0, 0,
	0, 0, 0, 0, 1357, 1371, 1425, 1339, 333, 1411,
	1417, 1437, 1331, 276, 196, 0, 0, 0, 0, 0,
	0, 1526, 0, 1300, 0, 1388, 0, 0, 0, 1269,
	1258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1353, 0, 0, 0, 1274, 1249, 1302,
	1427, 1250, 1247, 246, 1265, 1439, 1463, 1340, 215, 379,
	1469, 1338, 1337, 1414, 1270, 1449, 1324, 222, 1268, 130,
	1263, 164, 1322, 257, 1424, 1431, 363, 133, 1446, 1296,
	1313, 172, 358, 286, 1401, 332, 364, 1387, 285, 225,
	325, 1415, 1471, 331, 1325, 315, 339, 343, 190, 1363,
	163, 305, 181, 178, 1304, 1436, 1255, 197, 275, 175,
	218, 1343, 1407, 1297, 168, 1420, 1389, 1451, 304, 322,
	136, 243, 323, 342, 154, 317, 244, 250, 165, 167,
	166, 150, 299, 321, 159, 170, 1447, 1430, 1453, 1291,
	1271, 1282, 1272, 1312, 1473, 210, 201, 1454, 1452, 336,
	365, 295, 294, 1328, 209, 1433, 1391, 351, 282, 371,
	216, 141, 1458, 346, 153, 220, 318, 349, 194, 256,
	174, 1403, 264, 1310, 132, 278, 236, 237, 235, 238,
	200, 361, 372, 1429, 280, 297, 320, 155, 311, 359,
	360, 362, 374, 288, 375, 376, 1479, 230, 186, 189,
	203, 211, 1402, 284, 312, 337, 1393, 151, 144, 314,
	330, 160, 296, 298, 344, 1426, 146, 1467, 1448, 240,
	1346, 1352, 1257, 0, 145, 1422, 1301, 199, 1290, 1397,
	1289, 198, 1413, 328, 329, 173, 347, 1266, 1487, 147,
	1267, 1486, 253, 0, 252, 1489, 324, 1468, 241, 1381,
	1379, 1259, 1466, 239, 1380, 221, 188, 205, 273, 227,
	274, 206, 248, 247, 249, 228, 1383, 0, 143, 0,
	309, 1477, 1498, 313, 157, 1284, 1440, 319, 202, 279,
	158, 195, 187, 272, 251, 152, 208, 307, 219, 226,
	1419, 345, 263, 287, 161, 334, 306, 182, 1280, 1283,
	1278, 1281, 1279, 1376, 1377, 1482, 1483, 1484, 1428, 1273,
	0, 0, 0, 0, 1368, 1470, 1260, 0, 1444, 377,
	378, 1410, 1494, 1330, 169, 352, 353, 354, 355, 357,
	366, 367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1277, 1294, 1316, 1364, 1365, 1367, 1394, 1395,
	1438, 1412, 1418, 1386, 134, 148, 223, 1495, 281, 193,
	1246, 1254, 1276, 1285, 1286, 1287, 1288, 1299, 1303, 1315,
	1318, 1319, 1327, 1333, 1334, 1335, 1336, 1344, 1347, 1348,
	1349, 1350, 1351, 1355, 1356, 1358, 1369, 1373, 1382, 1384,
	1385, 1416, 1421, 1432, 1435, 1441, 1443, 1450, 1455, 1457,
	1488, 1493, 1497, 335, 177, 1307, 1360, 1366, 242, 1423,
	149, 156, 162, 176, 185, 192, 204, 207, 212, 213,
	214, 217, 229, 231, 232, 233, 234, 254, 255, 258,
	259, 261, 262, 265, 266, 267, 269, 270, 271, 277,
	373, 283, 289, 290, 291, 292, 293, 300, 301, 302,
	303, 310, 326, 327, 340, 341, 1462, 1341, 131, 135,
	138, 139, 350, 140, 142, 184, 191, 1326, 137, 1460,
	1490, 1398, 268, 1474, 1442, 316, 1345, 1478, 1293, 1323,
	1492, 1329, 1332, 1406, 1261, 1372, 260, 1320, 1262, 1248,
	1298, 1252, 1311, 1253, 1295, 180, 1292, 1445, 1378, 1476,
	1362, 1399, 1409, 179, 171, 1375, 1374, 1464, 1309, 1308,
	1404, 1459, 1475, 1361, 0, 1485, 224, 1456, 368, 338,
	308, 245, 0, 0, 1359, 1461, 1370, 1434, 1342, 1408,
	1275, 1390, 1480, 1321, 1400, 1481, 0, 0, 0, 0,
	670, 0, 0, 0, 1317, 0, 0, 0, 0, 356,
	0, 1396, 1472, 1314, 370, 1354, 1405, 1496, 1251, 1392,
	0, 1256, 1264, 1491, 1465, 1305, 1306, 183, 0, 0,
	0, 0, 0, 0, 0, 1357, 1371, 1425, 1339, 333,
	1411, 1417, 1437, 1331, 276, 196, 0, 0, 0, 0,
	0, 0, 0, 0, 1300, 0, 1388, 0, 0, 0,
	1269, 1258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1353, 0, 0, 0, 1274, 1249,
	1302, 1427, 1250, 1247, 246, 1265, 1439, 1463, 1340, 215,
	379, 1469, 1338, 1337, 1414, 1270, 1449, 1324, 222, 1268,
	130, 1263, 164, 1322, 257, 1424, 1431, 363, 133, 1446,
	1296, 1313, 172, 358, 286, 1401, 332, 364, 1387, 285,
	225, 325, 1415, 1471, 331, 1325, 315, 339, 343, 190,
	1363, 163, 305, 181, 178, 1304, 1436, 1255, 197, 275,
	175, 218, 1343, 1407, 1297, 168, 1420, 1389, 1451, 304,
	322, 136, 243, 323, 342, 154, 317, 244, 250, 165,
	167, 166, 150, 299, 321, 159, 170, 1447, 1430, 1453,
	1291, 1271, 1282, 1272, 1312, 1473, 210, 201, 1454, 1452,
	336, 365, 295, 294, 1328, 209, 1433, 1391, 351, 282,
	371, 216, 141, 1458, 346, 153, 220, 318, 349, 194,
	256, 174, 1403, 264, 1310, 132, 278, 236, 237, 235,
	238, 200, 361, 372, 1429, 280, 297, 320, 155, 311,
	359, 360, 362, 374, 288, 375, 376, 1479, 230, 186,
	189, 203, 211, 1402, 284, 312, 337, 1393, 151, 144,
	314, 330, 160, 296, 298, 344, 1426, 146, 1467, 1448,
	240, 1346, 1352, 1257, 0, 145, 1422, 1301, 199, 1290,
	1397, 1289, 198, 1413, 328, 329, 173, 347, 1266, 1487,
	147, 1267, 1486, 253, 0, 252, 1489, 324, 1468, 241,
	1381, 1379, 1259, 1466, 239, 1380, 221, 188, 205, 273,
	227, 274, 206, 248, 247, 249, 228, 1383, 0, 143,
	0, 309, 1477, 1498, 313, 157, 1284, 1440, 319, 202,
	279, 158, 195, 187, 272, 251, 152, 208, 307, 219,
	226, 1419, 345, 263, 287, 161, 334, 306, 182, 1280,
	1283, 1278, 1281, 1279, 1376, 1377, 1482, 1483, 1484, 1428,
	1273, 0, 0, 0, 0, 1368, 1470, 1260, 0, 1444,
	377, 378, 1410, 1494, 1330, 169, 352, 353, 354, 355,
	357, 366, 367, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1277, 1294, 1316, 1364, 1365, 1367, 1394,
	1395, 1438, 1412, 1418, 1386, 134, 148, 223, 1495, 281,
	193, 1246, 1254, 1276, 1285, 1286, 1287, 1288, 1299, 1303,
	1315, 1318, 1319, 1327, 1333, 1334, 1335, 1336, 1344, 1347,
	1348, 1349, 1350, 1351, 1355, 1356, 1358, 1369, 1373, 1382,
	1384, 1385, 1416, 1421, 1432, 1435, 1441, 1443, 1450, 1455,
	1457, 1488, 1493, 1497, 335, 177, 1307, 1360, 1366, 242,
	1423, 149, 156, 162, 176, 185, 192, 204, 207, 212,
	213, 214, 217, 229, 231, 232, 233, 234, 254, 255,
	258, 259, 261, 262, 265, 266, 267, 269, 270, 271,
	277, 373, 283, 289, 290, 291, 292, 293, 300, 301,
	302, 303, 310, 326, 327, 340, 341, 1462, 1341, 131,
	135, 138, 139, 350, 140, 142, 184, 191, 1326, 137,
	1460, 1490, 1398, 268, 1474, 1442, 316, 1345, 1478, 1293,
	1323, 1492, 1329, 1332, 1406, 1261, 1372, 260, 1320, 1262,
	1248, 1298, 1252, 1311, 1253, 1295, 180, 1292, 1445, 1378,
	1476, 1362, 1399, 1409, 179, 171, 1375, 1374, 1464, 1309,
	1308, 1404, 1459, 1475, 1361, 0, 1485, 224, 1456, 368,
	338, 308, 245, 0, 0, 1359, 1461, 1370, 1434, 1342,
	1408, 1275, 1390, 1480, 1321, 1400, 1481, 0, 0, 0,
	0, 2831, 0, 0, 0, 1317, 0, 0, 0, 0,
	356, 0, 1396, 1472, 1314, 370, 1354, 1405, 1496, 1251,
	1392, 0, 1256, 1264, 1491, 1465, 1305, 1306, 183, 0,
	0, 0, 0, 0, 0, 0, 1357, 1371, 1425, 1339,
	333, 1411, 1417, 1437, 1331, 276, 196, 0, 0, 0,
	0, 0, 0, 0, 0, 1300, 0, 1388, 0, 0,
	0, 1269, 1258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1353, 0, 0, 0, 1274,
	1249, 1302, 1427, 1250, 1247, 246, 1265, 1439, 1463, 1340,
	215, 379, 1469, 1338, 1337, 1414, 1270, 1449, 1324, 222,
	1268, 130, 1263, 164, 1322, 257, 1424, 1431, 363, 133,
	1446, 1296, 1313, 172, 358, 286, 1401, 332, 364, 1387,
	285, 225, 325, 1415, 1471, 331, 1325, 315, 339, 343,
	190, 1363, 163, 305, 181, 178, 1304, 1436, 1255, 197,
	275, 175, 218, 1343, 1407, 1297, 168, 1420, 1389, 1451,
	304, 322, 136, 243, 323, 342, 154, 317, 244, 250,
	165, 167, 166, 150, 299, 321, 159, 170, 1447, 1430,
	1453, 1291, 1271, 1282, 2834, 2835, 2836, 210, 201, 1454,
	1452, 336, 365, 295, 294, 1328, 209, 1433, 1391, 351,
	282, 371, 216, 141, 1458, 346, 153, 220, 318, 349,
	194, 256, 174, 1403, 264, 1310, 132, 278, 236, 237,
	235, 238, 200, 361, 372, 1429, 280, 297, 320, 155,
	311, 359, 360, 362, 374, 288, 375, 376, 1479, 230,
	186, 189, 203, 211, 1402, 284, 312, 337, 1393, 151,
	144, 314, 330, 160, 296, 298, 344, 1426, 146, 1467,
	1448, 240, 1346, 1352, 1257, 0, 145, 1422, 1301, 199,
	1290, 1397, 1289, 198, 1413, 328, 329, 173, 347, 1266,
	1487, 147, 1267, 1486, 253, 0, 252, 1489, 324, 1468,
	241, 1381, 1379, 1259, 1466, 239, 1380, 221, 188, 205,
	273, 227, 274, 206, 248, 247, 249, 228, 1383, 0,
	143, 0, 309, 1477, 1498, 313, 157, 1284, 1440, 319,
	202, 279, 158, 195, 187, 272, 251, 152, 208, 307,
	219, 226, 1419, 345, 263, 287, 161, 334, 306, 182,
	1280, 1283, 1278, 1281, 1279, 1376, 1377, 1482, 1483, 1484,
	1428, 1273, 0, 0, 0, 0, 1368, 1470, 1260, 0,
	1444, 377, 378, 1410, 1494, 1330, 169, 352, 353, 354,
	355, 357, 366, 367, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1277, 1294, 1316, 1364, 1365, 1367,
	1394, 1395, 1438, 1412, 1418, 1386, 134, 148, 223, 1495,
	281, 193, 1246, 1254, 1276, 1285, 1286, 1287, 1288, 1299,
	1303, 1315, 1318, 1319, 1327, 1333, 1334, 1335, 1336, 1344,
	1347, 1348, 1349, 1350, 1351, 1355, 1356, 1358, 1369, 1373,
	1382, 1384, 1385, 1416, 1421, 1432, 1435, 1441, 1443, 1450,
	1455, 1457, 1488, 1493, 1497, 335, 177, 1307, 1360, 1366,
	242, 1423, 149, 156, 162, 176, 185, 192, 204, 207,
	212, 213, 214, 217, 229, 231, 232, 233, 234, 254,
	255, 258, 259, 261, 262, 265, 266, 267, 269, 270,
	271, 277, 373, 283, 289, 290, 291, 292, 293, 300,
	301, 302, 303, 310, 326, 327, 340, 341, 1462, 1341,
	131, 135, 138, 139, 350, 140, 142, 184, 191, 1326,
	137, 1460, 1490, 1398, 268, 1474, 1442, 316, 1345, 1478,
	1293, 1323, 1492, 1329, 1332, 1406, 1261, 1372, 260, 1320,
	1262, 1248, 1298, 1252, 1311, 1253, 1295, 180, 1292, 1445,
	1378, 1476, 1362, 1399, 1409, 179, 171, 1375, 1374, 1464,
	1309, 1308, 1404, 1459, 1475, 1361, 0, 1485, 224, 1456,
	368, 338, 308, 245, 0, 0, 1359, 1461, 1370, 1434,
	1342, 1408, 1275, 1390, 1480, 1321, 1400, 1481, 0, 0,
	0, 0, 500, 0, 0, 0, 1317, 0, 0, 0,
	0, 356, 0, 1396, 1472, 1314, 370, 1354, 1405, 1496,
	1251, 1392, 0, 1256, 1264, 1491, 1465, 1305, 1306, 183,
	0, 0, 0, 0, 0, 0, 0, 1357, 1371, 1425,
	1339, 333, 1411, 1417, 1437, 1331, 276, 196, 0, 0,
	0, 0, 0, 0, 0, 0, 1300, 0, 1388, 0,
	0, 0, 1269, 1258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1353, 0, 0, 0,
	1274, 1249, 1302, 1427, 1250, 1247, 246, 1265, 1439, 1463,
	1340, 215, 379, 1469, 1338, 1337, 1414, 1270, 1449, 1324,
	222, 1268, 130, 1263, 164, 1322, 257, 1424, 1431, 363,
	133, 1446, 1296, 1313, 172, 358, 286, 1401, 332, 364,
	1387, 285, 225, 325, 1415, 1471, 331, 1325, 315, 339,
	343, 190, 1363, 163, 305, 181, 178, 1304, 1436, 1255,
	197, 275, 175, 218, 1343, 1407, 1297, 168, 1420, 1389,
	1451, 304, 322, 136, 243, 323, 342, 154, 317, 244,
	250, 165, 167, 166, 150, 299, 321, 159, 170, 1447,
	1430, 1453, 1291, 1271, 1282, 1272, 1312, 1473, 210, 201,
	1454, 1452, 336, 365, 295, 294, 1328, 209, 1433, 1391,
	351, 282, 371, 216, 141, 1458, 346, 153, 220, 318,
	349, 194, 256, 174, 1403, 264, 1310, 132, 278, 236,
	237, 235, 238, 200, 361, 372, 1429, 280, 297, 320,
	155, 311, 359, 360, 362, 374, 288, 375, 376, 1479,
	230, 186, 189, 203, 211, 1402, 284, 312, 337, 1393,
	151, 144, 314, 330, 160, 296, 298, 344, 1426, 146,
	1467, 1448, 240, 1346, 1352, 1257, 0, 145, 1422, 1301,
	199, 1290, 1397, 1289, 198, 1413, 328, 329, 173, 347,
	1266, 1487, 147, 1267, 1486, 253, 0, 252, 1489, 324,
	1468, 241, 1381, 1379, 1259, 1466, 239, 1380, 221, 188,
	205, 273, 227, 274, 206, 248, 247, 249, 228, 1383,
	0, 143, 0, 309, 1477, 1498, 313, 157, 1284, 1440,
	319, 202, 279, 158, 195, 187, 272, 251, 152, 208,
	307, 219, 226, 1419, 345, 263, 287, 161, 334, 306,
	182, 1280, 1283, 1278, 1281, 1279, 1376, 1377, 1482, 1483,
	1484, 1428, 1273, 0, 0, 0, 0, 1368, 1470, 1260,
	0, 1444, 377, 378, 1410, 1494, 1330, 169, 352, 353,
	354, 355, 357, 366, 367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1277, 1294, 1316, 1364, 1365,
	1367, 1394, 1395, 1438, 1412, 1418, 1386, 134, 148, 223,
	1495, 281, 193, 1246, 1254, 1276, 1285, 1286, 1287, 1288,
	1299, 1303, 1315, 1318, 1319, 1327, 1333, 1334, 1335, 1336,
	1344, 1347, 1348, 1349, 1350, 1351, 1355, 1356, 1358, 1369,
	1373, 1382, 1384, 1385, 1416, 1421, 1432, 1435, 1441, 1443,
	1450, 1455, 1457, 1488, 1493, 1497, 335, 177, 1307, 1360,
	1366, 242, 1423, 149, 156, 162, 176, 185, 192, 204,
	207, 212, 213, 214, 217, 229, 231, 232, 233, 234,
	254, 255, 258, 259, 261, 262, 265, 266, 267, 269,
	270, 271, 277, 373, 283, 289, 290, 291, 292, 293,
	300, 301, 302, 303, 310, 326, 327, 340, 341, 1462,
	1341, 131, 135, 138, 139, 350, 140, 142, 184, 191,
	1326, 137, 1460, 1490, 1398, 268, 36, 316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 502, 0, 0, 180, 499, 0,
	0, 0, 0, 0, 0, 179, 171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 591, 224, 0,
	368, 338, 308, 245, 0, 0, 0, 0, 578, 579,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 0,
	0, 0, 500, 523, 522, 525, 526, 527, 528, 0,
	0, 356, 524, 529, 531, 532, 370, 0, 0, 0,
	0, 497, 514, 0, 590, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 333, 0, 0, 0, 0, 276, 196, 0, 0,
	0, 0, 511, 512, 0, 0, 0, 0, 605, 0,
	513, 0, 0, 509, 536, 537, 538, 539, 540, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 515, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 0, 581, 0,
	0, 215, 379, 0, 0, 603, 0, 0, 0, 0,
	222, 0, 130, 0, 164, 0, 257, 0, 0, 588,
	133, 0, 0, 0, 172, 358, 286, 0, 332, 580,
	0, 285, 225, 325, 0, 0, 331, 0, 315, 339,
	343, 190, 0, 163, 305, 181, 178, 0, 0, 0,
	197, 275, 175, 218, 0, 0, 0, 168, 0, 0,
	0, 304, 322, 136, 243, 323, 342, 154, 317, 244,
	250, 165, 167, 166, 150, 299, 321, 159, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 201,
	0, 0, 336, 365, 295, 294, 0, 209, 0, 369,
	351, 282, 371, 216, 141, 0, 346, 153, 220, 318,
	349, 194, 256, 174, 0, 264, 0, 132, 278, 236,
	237, 235, 238, 200, 361, 372, 0, 280, 297, 320,
	155, 311, 359, 360, 362, 374, 288, 375, 376, 0,
	230, 186, 189, 203, 211, 0, 284, 312, 337, 0,
	151, 144, 314, 330, 160, 296, 298, 344, 0, 146,
	0, 0, 240, 0, 0, 0, 0, 145, 0, 0,
	199, 0, 0, 0, 198, 0, 328, 329, 173, 347,
	0, 0, 147, 0, 0, 253, 0, 252, 0, 324,
	0, 241, 0, 0, 0, 0, 239, 0, 221, 188,
	205, 273, 227, 274, 206, 248, 247, 249, 228, 0,
	0, 143, 0, 309, 0, 0, 313, 157, 0, 0,
	319, 202, 279, 158, 195, 187, 272, 251, 152, 208,
	307, 219, 226, 0, 345, 263, 287, 161, 334, 306,
	182, 592, 604, 598, 600, 599, 596, 597, 595, 594,
	593, 606, 582, 583, 584, 585, 586, 0, 0, 0,
	589, 0, 601, 602, 0, 0, 0, 169, 619, 620,
	621, 622, 623, 624, 625, 618, 626, 627, 628, 629,
	630, 530, 631, 632, 633, 607, 608, 609, 610, 611,
	612, 613, 614, 617, 615, 616, 587, 134, 148, 223,
	79, 281, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 335, 177, 0, 0,
	0, 242, 0, 149, 156, 162, 176, 185, 192, 204,
	207, 212, 213, 214, 217, 229, 231, 232, 233, 234,
	254, 255, 258, 259, 261, 262, 265, 266, 267, 269,
	270, 271, 277, 373, 283, 289, 290, 291, 292, 293,
	300, 301, 302, 303, 310, 326, 327, 340, 341, 316,
	0, 131, 135, 138, 139, 350, 140, 142, 184, 191,
	260, 137, 0, 0, 481, 268, 502, 0, 0, 180,
	499, 0, 0, 0, 0, 0, 0, 179, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 591,
	224, 0, 368, 338, 308, 245, 0, 0, 0, 0,
	578, 579, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 0, 0, 500, 523, 522, 525, 526, 527,
	528, 0, 0, 356, 524, 529, 531, 532, 370, 0,
	0, 0, 0, 497, 514, 0, 590, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 333, 0, 0, 0, 0, 276, 196,
	0, 0, 0, 0, 511, 512, 493, 0, 0, 0,
	605, 0, 513, 0, 0, 509, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 515, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 0,
	581, 0, 0, 215, 379, 0, 0, 603, 0, 0,
	0, 0, 222, 0, 130, 0, 164, 0, 257, 0,
	0, 588, 133, 0, 0, 0, 172, 358, 286, 0,
	332, 580, 0, 285, 225, 325, 0, 0, 331, 0,
	315, 339, 343, 190, 0, 163, 305, 181, 178, 0,
	0, 0, 197, 275, 175, 218, 0, 0, 0, 168,
	0, 0, 0, 304, 322, 136, 243, 323, 342, 154,
	317, 244, 250, 165, 167, 166, 150, 299, 321, 159,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 201, 0, 0, 336, 365, 295, 294, 0, 209,
	0, 369, 351, 282, 371, 216, 141, 0, 346, 153,
	220, 318, 349, 194, 256, 174, 0, 264, 0, 132,
	278, 236, 237, 235, 238, 200, 361, 372, 0, 280,
	297, 320, 155, 311, 359, 360, 362, 374, 288, 375,
	376, 0, 230, 186, 189, 203, 211, 0, 284, 312,
	337, 0, 151, 144, 314, 330, 160, 296, 298, 344,
	0, 146, 0, 0, 240, 0, 0, 0, 0, 145,
	0, 0, 199, 0, 0, 0, 198, 0, 328, 329,
	173, 347, 0, 0, 147, 0, 0, 253, 0, 252,
	0, 324, 0, 241, 0, 0, 0, 0, 239, 0,
	221, 188, 205, 273, 227, 274, 206, 248, 247, 249,
	228, 0, 0, 143, 0, 309, 0, 0, 313, 157,
	0, 0, 319, 202, 279, 158, 195, 187, 272, 251,
	152, 208, 307, 219, 226, 0, 345, 263, 287, 161,
	334, 306, 182, 592, 604, 598, 600, 599, 596, 597,
	595, 594, 593, 606, 582, 583, 584, 585, 586, 0,
	0, 0, 589, 0, 601, 602, 0, 0, 0, 169,
	619, 620, 621, 622, 623, 624, 625, 618, 626, 627,
	628, 629, 630, 530, 631, 632, 633, 607, 608, 609,
	610, 611, 612, 613, 614, 617, 615, 616, 587, 134,
	148, 223, 0, 281, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 335, 177,
	0, 0, 0, 242, 0, 149, 156, 162, 176, 185,
	192, 204, 207, 212, 213, 214, 217, 229, 231, 232,
	233, 234, 254, 255, 258, 259, 261, 262, 265, 266,
	267, 269, 270, 271, 277, 373, 283, 289, 290, 291,
	292, 293, 300, 301, 302, 303, 310, 326, 327, 340,
	341, 316, 0, 131, 135, 138, 139, 350, 140, 142,
	184, 191, 260, 137, 0, 0, 481, 268, 502, 0,
	0, 180, 499, 0, 0, 0, 0, 0, 0, 179,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 591, 224, 0, 368, 338, 308, 245, 0, 0,
	0, 0, 578, 579, 0, 0, 0, 0, 0, 0,
	0, 0, 81, 0, 854, 0, 500, 523, 522, 525,
	526, 527, 528, 0, 0, 356, 524, 529, 531, 532,
	370, 0, 0, 0, 0, 497, 514, 0, 590, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 333, 0, 0, 0, 0,
	276, 196, 0, 0, 0, 0, 511, 512, 0, 0,
	0, 0, 605, 0, 513, 0, 0, 509, 536, 537,
	538, 539, 540, 541, 542, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	515, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 581, 0, 0, 215, 379, 0, 0, 603,
	0, 0, 0, 0, 222, 0, 130, 0, 164, 0,
	257, 0, 0, 588, 133, 0, 0, 0, 172, 358,
	286, 0, 332, 580, 0, 285, 225, 325, 0, 0,
	331, 0, 315, 339, 343, 190, 0, 163, 305, 181,
	178, 0, 0, 0, 197, 275, 175, 218, 0, 0,
	0, 168, 0, 0, 0, 304, 322, 136, 243, 323,
	342, 154, 317, 244, 250, 165, 167, 166, 150, 299,
	321, 159, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 201, 0, 0, 336, 365, 295, 294,
	0, 209, 0, 369, 351, 282, 371, 216, 141, 0,
	346, 153, 220, 318, 349, 194, 256, 174, 0, 264,
	0, 132, 278, 236, 237, 235, 238, 200, 361, 372,
	0, 280, 297, 320, 155, 311, 359, 360, 362, 374,
	288, 375, 376, 0, 230, 186, 189, 203, 211, 0,
	284, 312, 337, 0, 151, 144, 314, 330, 160, 296,
	298, 344, 0, 146, 0, 0, 240, 0, 0, 0,
	0, 145, 0, 0, 199, 0, 0, 0, 198, 0,
	328, 329, 173, 347, 0, 0, 147, 0, 0, 253,
	0, 252, 0, 324, 0, 241, 0, 0, 0, 0,
	239, 0, 221, 188, 205, 273, 227, 274, 206, 248,
	247, 249, 228, 0, 0, 143, 0, 309, 0, 0,
	313, 157, 0, 0, 319, 202, 279, 158, 195, 187,
	272, 251, 152, 208, 307, 219, 226, 0, 345, 263,
	287, 161, 334, 306, 182, 592, 604, 598, 600, 599,
	596, 597, 595, 594, 593, 606, 582, 583, 584, 585,
	586, 0, 0, 0, 589, 0, 601, 602, 0, 0,
	0, 169, 619, 620, 621, 622, 623, 624, 625, 618,
	626, 627, 628, 629, 630, 530, 631, 632, 633, 607,
	608, 609, 610, 611, 612, 613, 614, 617, 615, 616,
	587, 134, 148, 223, 0, 281, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	335, 177, 0, 0, 0, 242, 0, 149, 156, 162,
	176, 185, 192, 204, 207, 212, 213, 214, 217, 229,
	231, 232, 233, 234, 254, 255, 258, 259, 261, 262,
	265, 266, 267, 269, 270, 271, 277, 373, 283, 289,
	290, 291, 292, 293, 300, 301, 302, 303, 310, 326,
	327, 340, 341, 316, 0, 131, 135, 138, 139, 350,
	140, 142, 184, 191, 260, 137, 0, 0, 481, 268,
	502, 0, 0, 180, 499, 0, 0, 0, 0, 0,
	0, 179, 171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 591, 224, 0, 368, 338, 308, 245,
	0, 0, 0, 0, 578, 579, 0, 0, 0, 0,
	0, 0, 0, 0, 81, 0, 0, 0, 500, 523,
	522, 525, 526, 527, 528, 0, 0, 356, 524, 529,
	531, 532, 370, 0, 0, 0, 0, 497, 514, 0,
	590, 0, 0, 0, 0, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 0,
	0, 0, 276, 196, 0, 0, 0, 0, 511, 512,
	1570, 0, 0, 0, 605, 0, 513, 0, 0, 509,
	536, 537, 538, 539, 540, 541, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 515, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 581, 0, 0, 215, 379, 0,
	0, 603, 0, 0, 0, 0, 222, 0, 130, 0,
	164, 0, 257, 0, 0, 588, 133, 0, 0, 0,
	172, 358, 286, 0, 332, 580, 0, 285, 225, 325,
	0, 0, 331, 0, 315, 339, 343, 190, 0, 163,
	305, 181, 178, 0, 0, 0, 197, 275, 175, 218,
	0, 0, 0, 168, 0, 0, 0, 304, 322, 136,
	243, 323, 342, 154, 317, 244, 250, 165, 167, 166,
	150, 299, 321, 159, 170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 201, 0, 0, 336, 365,
	295, 294, 0, 209, 0, 369, 351, 282, 371, 216,
	141, 0, 346, 153, 220, 318, 349, 194, 256, 174,
	0, 264, 0, 132, 278, 236, 237, 235, 238, 200,
	361, 372, 0, 280, 297, 320, 155, 311, 359, 360,
	362, 374, 288, 375, 376, 0, 230, 186, 189, 203,
	211, 0, 284, 312, 337, 0, 151, 144, 314, 330,
	160, 296, 298, 344, 0, 146, 0, 0, 240, 0,
	0, 0, 0, 145, 0, 0, 199, 0, 0, 0,
	198, 0, 328, 329, 173, 347, 0, 0, 147, 0,
	0, 253, 0, 252, 0, 324, 0, 241, 0, 0,
	0, 0, 239, 0, 221, 188, 205, 273, 227, 274,
	206, 248, 247, 249, 228, 0, 0, 143, 0, 309,
	0, 0, 313, 157, 0, 0, 319, 202, 279, 158,
	195, 187, 272, 251, 152, 208, 307, 219, 226, 0,
	345, 263, 287, 161, 334, 306, 182, 592, 604, 598,
	600, 599, 596, 597, 595, 594, 593, 606, 582, 583,
	584, 585, 586, 0, 0, 0, 589, 0, 601, 602,
	0, 0, 0, 169, 619, 620, 621, 622, 623, 624,
	625, 618, 626, 627, 628, 629, 630, 530, 631, 632,
	633, 607, 608, 609, 610, 611, 612, 613, 614, 617,
	615, 616, 587, 134, 148, 223, 0, 281, 193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 335, 177, 0, 0, 0, 242, 0, 149,
	156, 162, 176, 185, 192, 204, 207, 212, 213, 214,
	217, 229, 231, 232, 233, 234, 254, 255, 258, 259,
	261, 262, 265, 266, 267, 269, 270, 271, 277, 373,
	283, 289, 290, 291, 292, 293, 300, 301, 302, 303,
	310, 326, 327, 340, 341, 316, 0, 131, 135, 138,
	139, 350, 140, 142, 184, 191, 260, 137, 0, 0,
	481, 268, 502, 0, 0, 180, 499, 0, 0, 0,
	0, 0, 0, 179, 171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 591, 224, 0, 368, 338,
	308, 245, 0, 0, 0, 0, 578, 579, 0, 0,
	0, 0, 0, 0, 1678, 0, 81, 0, 0, 0,
	500, 523, 522, 525, 526, 527, 528, 0, 0, 356,
	524, 529, 531, 532, 1679, 0, 0, 0, 0, 497,
	514, 0, 590, 0, 0, 0, 0, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 333,
	0, 0, 0, 0, 276, 196, 0, 0, 0, 0,
	511, 512, 0, 0, 0, 0, 605, 0, 513, 0,
	0, 509, 536, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 515, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 581, 0, 0, 215,
	379, 0, 0, 603, 0, 0, 0, 0, 222, 0,
	130, 0, 164, 0, 257, 0, 0, 588, 133, 0,
	0, 0, 172, 358, 286, 0, 332, 580, 0, 285,
	225, 325, 0, 0, 331, 0, 315, 339, 343, 190,
	0, 163, 305, 181, 178, 0, 0, 0, 197, 275,
	175, 218, 0, 0, 0, 168, 0, 0, 0, 304,
	322, 136, 243, 323, 342, 154, 317, 244, 250, 165,
	167, 166, 150, 299, 321, 159, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 210, 201, 0, 0,
	336, 365, 295, 294, 0, 209, 0, 369, 351, 282,
	371, 216, 141, 0, 346, 153, 220, 318, 349, 194,
	256, 174, 0, 264, 0, 132, 278, 236, 237, 235,
	238, 200, 361, 372, 0, 280, 297, 320, 155, 311,
	359, 360, 362, 374, 288, 375, 376, 0, 230, 186,
	189, 203, 211, 0, 284, 312, 337, 0, 151, 144,
	314, 330, 160, 296, 298, 344, 0, 146, 0, 0,
	240, 0, 0, 0, 0, 145, 0, 0, 199, 0,
	0, 0, 198, 0, 328, 329, 173, 347, 0, 0,
	147, 0, 0, 253, 0, 252, 0, 324, 0, 241,
	0, 0, 0, 0, 239, 0, 221, 188, 205, 273,
	227, 274, 206, 248, 247, 249, 228, 0, 0, 143,
	0, 309, 0, 0, 313, 157, 0, 0, 319, 202,
	279, 158, 195, 187, 272, 251, 152, 208, 307, 219,
	226, 0, 345, 263, 287, 161, 334, 306, 182, 592,
	604, 598, 600, 599, 596, 597, 595, 594, 593, 606,
	582, 583, 584, 585, 586, 0, 0, 0, 589, 0,
	601, 602, 0, 0, 0, 169, 619, 620, 621, 622,
	623, 624, 625, 618, 626, 627, 628, 629, 630, 530,
	631, 632, 633, 607, 608, 609, 610, 611, 612, 613,
	614, 617, 615, 616, 587, 134, 148, 223, 0, 281,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 335, 177, 0, 0, 0, 242,
	0, 149, 156, 162, 176, 185, 192, 204, 207, 212,
	213, 214, 217, 229, 231, 232, 233, 234, 254, 255,
	258, 259, 261, 262, 265, 266, 267, 269, 270, 271,
	277, 373, 283, 289, 290, 291, 292, 293, 300, 301,
	302, 303, 310, 326, 327, 340, 341, 316, 0, 131,
	135, 138, 139, 350, 140, 142, 184, 191, 260, 137,
	0, 0, 481, 268, 502, 0, 0, 180, 499, 0,
	0, 0, 0, 0, 0, 179, 171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 591, 224, 0,
	368, 338, 308, 245, 0, 0, 0, 0, 578, 579,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 0,
	0, 0, 500, 523, 1582, 525, 526, 527, 528, 0,
	0, 356, 524, 529, 531, 532, 370, 0, 0, 0,
	0, 497, 514, 0, 590, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 333, 0, 0, 0, 0, 276, 196, 0, 0,
	0, 0, 511, 512, 1570, 0, 0, 0, 605, 0,
	513, 0, 0, 509, 536, 537, 538, 539, 540, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 515, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 0, 581, 0,
	0, 215, 379, 0, 0, 603, 0, 0, 0, 0,
	222, 0, 130, 0, 164, 0, 257, 0, 0, 588,
	133, 0, 0, 0, 172, 358, 286, 0, 332, 580,
	0, 285, 225, 325, 0, 0, 331, 0, 315, 339,
	343, 190, 0, 163, 305, 181, 178, 0, 0, 0,
	197, 275, 175, 218, 0, 0, 0, 168, 0, 0,
	0, 304, 322, 136, 243, 323, 342, 154, 317, 244,
	250, 165, 167, 166, 150, 299, 321, 159, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 201,
	0, 0, 336, 365, 295, 294, 0, 209, 0, 369,
	351, 282, 371, 216, 141, 0, 346, 153, 220, 318,
	349, 194, 256, 174, 0, 264, 0, 132, 278, 236,
	237, 235, 238, 200, 361, 372, 0, 280, 297, 320,
	155, 311, 359, 360, 362, 374, 288, 375, 376, 0,
	230, 186, 189, 203, 211, 0, 284, 312, 337, 0,
	151, 144, 314, 330, 160, 296, 298, 344, 0, 146,
	0, 0, 240, 0, 0, 0, 0, 145, 0, 0,
	199, 0, 0, 0, 198, 0, 328, 329, 173, 347,
	0, 0, 147, 0, 0, 253, 0, 252, 0, 324,
	0, 241, 0, 0, 0, 0, 239, 0, 221, 188,
	205, 273, 227, 274, 206, 248, 247, 249, 228, 0,
	0, 143, 0, 309, 0, 0, 313, 157, 0, 0,
	319, 202, 279, 158, 195, 187, 272, 251, 152, 208,
	307, 219, 226, 0, 345, 263, 287, 161, 334, 306,
	182, 592, 604, 598, 600, 599, 596, 597, 595, 594,
	593, 606, 582, 583, 584, 585, 586, 0, 0, 0,
	589, 0, 601, 602, 0, 0, 0, 169, 619, 620,
	621, 622, 623, 624, 625, 618, 626, 627, 628, 629,
	630, 530, 631, 632, 633, 607, 608, 609, 610, 611,
	612, 613, 614, 617, 615, 616, 587, 134, 148, 223,
	0, 281, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 335, 177, 0, 0,
	0, 242, 0, 149, 156, 162, 176, 185, 192, 204,
	207, 212, 213, 214, 217, 229, 231, 232, 233, 234,
	254, 255, 258, 259, 261, 262, 265, 266, 267, 269,
	270, 271, 277, 373, 283, 289, 290, 291, 292, 293,
	300, 301, 302, 303, 310, 326, 327, 340, 341, 316,
	0, 131, 135, 138, 139, 350, 140, 142, 184, 191,
	260, 137, 0, 0, 481, 268, 502, 0, 0, 180,
	499, 0, 0, 0, 0, 0, 0, 179, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 591,
	224, 0, 368, 338, 308, 245, 0, 0, 0, 0,
	578, 579, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 0, 0, 500, 523, 1579, 525, 526, 527,
	528, 0, 0, 356, 524, 529, 531, 532, 370, 0,
	0, 0, 0, 497, 514, 0, 590, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 333, 0, 0, 0, 0, 276, 196,
	0, 0, 0, 0, 511, 512, 1570, 0, 0, 0,
	605, 0, 513, 0, 0, 509, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 515, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 0,
	581, 0, 0, 215, 379, 0, 0, 603, 0, 0,
	0, 0, 222, 0, 130, 0, 164, 0, 257, 0,
	0, 588, 133, 0, 0, 0, 172, 358, 286, 0,
	332, 580, 0, 285, 225, 325, 0, 0, 331, 0,
	315, 339, 343, 190, 0, 163, 305, 181, 178, 0,
	0, 0, 197, 275, 175, 218, 0, 0, 0, 168,
	0, 0, 0, 304, 322, 136, 243, 323, 342, 154,
	317, 244, 250, 165, 167, 166, 150, 299, 321, 159,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 201, 0, 0, 336, 365, 295, 294, 0, 209,
	0, 369, 351, 282, 371, 216, 141, 0, 346, 153,
	220, 318, 349, 194, 256, 174, 0, 264, 0, 132,
	278, 236, 237, 235, 238, 200, 361, 372, 0, 280,
	297, 320, 155, 311, 359, 360, 362, 374, 288, 375,
	376, 0, 230, 186, 189, 203, 211, 0, 284, 312,
	337, 0, 151, 144, 314, 330, 160, 296, 298, 344,
	0, 146, 0, 0, 240, 0, 0, 0, 0, 145,
	0, 0, 199, 0, 0, 0, 198, 0, 328, 329,
	173, 347, 0, 0, 147, 0, 0, 253, 0, 252,
	0, 324, 0, 241, 0, 0, 0, 0, 239, 0,
	221, 188, 205, 273, 227, 274, 206, 248, 247, 249,
	228, 0, 0, 143, 0, 309, 0, 0, 313, 157,
	0, 0, 319, 202, 279, 158, 195, 187, 272, 251,
	152, 208, 307, 219, 226, 0, 345, 263, 287, 161,
	334, 306, 182, 592, 604, 598, 600, 599, 596, 597,
	595, 594, 593, 606, 582, 583, 584, 585, 586, 0,
	0, 0, 589, 0, 601, 602, 0, 0, 0, 169,
	619, 620, 621, 622, 623, 624, 625, 618, 626, 627,
	628, 629, 630, 530, 631, 632, 633, 607, 608, 609,
	610, 611, 612, 613, 614, 617, 615, 616, 587, 134,
	148, 223, 0, 281, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 335, 177,
	0, 0, 0, 242, 0, 149, 156, 162, 176, 185,
	192, 204, 207, 212, 213, 214, 217, 229, 231, 232,
	233, 234, 254, 255, 258, 259, 261, 262, 265, 266,
	267, 269, 270, 271, 277, 373, 283, 289, 290, 291,
	292, 293, 300, 301, 302, 303, 310, 326, 327, 340,
	341, 316, 0, 131, 135, 138, 139, 350, 140, 142,
	184, 191, 260, 137, 0, 0, 481, 268, 502, 0,
	0, 180, 499, 0, 0, 0, 0, 0, 0, 179,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 591, 224, 0, 368, 338, 308, 245, 0, 0,
	0, 0, 578, 579, 0, 0, 0, 0, 0, 0,
	0, 0, 81, 0, 1180, 0, 500, 523, 522, 525,
	526, 527, 528, 0, 0, 356, 524, 529, 531, 532,
	370, 0, 0, 0, 0, 497, 514, 0, 590, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 333, 0, 0, 0, 0,
	276, 196, 0, 0, 0, 0, 511, 512, 0, 0,
	0, 0, 605, 0, 513, 0, 0, 509, 536, 537,
	538, 539, 540, 541, 542, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	515, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 581, 0, 0, 215, 379, 0, 0, 603,
	0, 0, 0, 0, 222, 0, 130, 0, 164, 0,
	257, 0, 0, 588, 133, 0, 0, 0, 172, 358,
	286, 0, 332, 580, 0, 285, 225, 325, 0, 0,
	331, 0, 315, 339, 343, 190, 0, 163, 305, 181,
	178, 0, 0, 0, 197, 275, 175, 218, 0, 0,
	0, 168, 0, 0, 0, 304, 322, 136, 243, 323,
	342, 154, 317, 244, 250, 165, 167, 166, 150, 299,
	321, 159, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 201, 0, 0, 336, 365, 295, 294,
	0, 209, 0, 369, 351, 282, 371, 216, 141, 0,
	346, 153, 220, 318, 349, 194, 256, 174, 0, 264,
	0, 132, 278, 236, 237, 235, 238, 200, 361, 372,
	0, 280, 297, 320, 155, 311, 359, 360, 362, 374,
	288, 375, 376, 0, 230, 186, 189, 203, 211, 0,
	284, 312, 337, 0, 151, 144, 314, 330, 160, 296,
	298, 344, 0, 146, 0, 0, 240, 0, 0, 0,
	0, 145, 0, 0, 199, 0, 0, 0, 198, 0,
	328, 329, 173, 347, 0, 0, 147, 0, 0, 253,
	0, 252, 0, 324, 0, 241, 0, 0, 0, 0,
	239, 0, 221, 188, 205, 273, 227, 274, 206, 248,
	247, 249, 228, 0, 0, 143, 0, 309, 0, 0,
	313, 157, 0, 0, 319, 202, 279, 158, 195, 187,
	272, 251, 152, 208, 307, 219, 226, 0, 345, 263,
	287, 161, 334, 306, 182, 592, 604, 598, 600, 599,
	596, 597, 595, 594, 593, 606, 582, 583, 584, 585,
	586, 0, 0, 0, 589, 0, 601, 602, 0, 0,
	0, 169, 619, 620, 621, 622, 623, 624, 625, 618,
	626, 627, 628, 629, 630, 530, 631, 632, 633, 607,
	608, 609, 610, 611, 612, 613, 614, 617, 615, 616,
	587, 134, 148, 223, 0, 281, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	335, 177, 0, 0, 0, 242, 0, 149, 156, 162,
	176, 185, 192, 204, 207, 212, 213, 214, 217, 229,
	231, 232, 233, 234, 254, 255, 258, 259, 261, 262,
	265, 266, 267, 269, 270, 271, 277, 373, 283, 289,
	290, 291, 292, 293, 300, 301, 302, 303, 310, 326,
	327, 340, 341, 316, 0, 131, 135, 138, 139, 350,
	140, 142, 184, 191, 260, 137, 0, 0, 481, 268,
	502, 0, 0, 180, 499, 0, 0, 0, 0, 0,
	0, 179, 171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 591, 224, 0, 368, 338, 308, 245,
	0, 0, 0, 0, 578, 579, 0, 0, 0, 0,
	0, 0, 0, 0, 81, 0, 0, 0, 500, 523,
	522, 525, 526, 527, 528, 0, 0, 356, 524, 529,
	531, 532, 370, 0, 0, 0, 0, 497, 514, 0,
	590, 0, 0, 0, 0, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 0,
	0, 0, 276, 196, 0, 0, 0, 0, 511, 512,
	0, 0, 0, 0, 605, 0, 513, 0, 0, 509,
	536, 537, 538, 539, 540, 541, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 515, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 581, 0, 0, 215, 379, 0,
	0, 603, 0, 0, 0, 0, 222, 0, 130, 0,
	164, 0, 257, 0, 0, 588, 133, 0, 0, 0,
	172, 358, 286, 0, 332, 580, 0, 285, 225, 325,
	0, 0, 331, 0, 315, 339, 343, 190, 0, 163,
	305, 181, 178, 0, 0, 0, 197, 275, 175, 218,
	0, 0, 0, 168, 0, 0, 0, 304, 322, 136,
	243, 323, 342, 154, 317, 244, 250, 165, 167, 166,
	150, 299, 321, 159, 170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 201, 0, 0, 336, 365,
	295, 294, 0, 209, 0, 369, 351, 282, 371, 216,
	141, 0, 346, 153, 220, 318, 349, 194, 256, 174,
	0, 264, 0, 132, 278, 236, 237, 235, 238, 200,
	361, 372, 0, 280, 297, 320, 155, 311, 359, 360,
	362, 374, 288, 375, 376, 0, 230, 186, 189, 203,
	211, 0, 284, 312, 337, 0, 151, 144, 314, 330,
	160, 296, 298, 344, 0, 146, 0, 0, 240, 0,
	0, 0, 0, 145, 0, 0, 199, 0, 0, 0,
	198, 0, 328, 329, 173, 347, 0, 0, 147, 0,
	0, 253, 0, 252, 0, 324, 0, 241, 0, 0,
	0, 0, 239, 0, 221, 188, 205, 273, 227, 274,
	206, 248, 247, 249, 228, 0, 0, 143, 0, 309,
	0, 0, 313, 157, 0, 0, 319, 202, 279, 158,
	195, 187, 272, 251, 152, 208, 307, 219, 226, 0,
	345, 263, 287, 161, 334, 306, 182, 592, 604, 598,
	600, 599, 596, 597, 595, 594, 593, 606, 582, 583,
	584, 585, 586, 0, 0, 0, 589, 0, 601, 602,
	0, 0, 0, 169, 619, 620, 621, 622, 623, 624,
	625, 618, 626, 627, 628, 629, 630, 530, 631, 632,
	633, 607, 608, 609, 610, 611, 612, 613, 614, 617,
	615, 616, 587, 134, 148, 223, 0, 281, 193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 335, 177, 0, 0, 0, 242, 0, 149,
	156, 162, 176, 185, 192, 204, 207, 212, 213, 214,
	217, 229, 231, 232, 233, 234, 254, 255, 258, 259,
	261, 262, 265, 266, 267, 269, 270, 271, 277, 373,
	283, 289, 290, 291, 292, 293, 300, 301, 302, 303,
	310, 326, 327, 340, 341, 316, 0, 131, 135, 138,
	139, 350, 140, 142, 184, 191, 260, 137, 0, 0,
	481, 268, 0, 0, 0, 180, 0, 0, 0, 0,
	0, 0, 0, 179, 171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 591, 224, 0, 368, 338,
	308, 245, 0, 0, 0, 0, 578, 579, 0, 0,
	0, 0, 0, 0, 0, 0, 81, 0, 0, 0,
	500, 523, 522, 525, 526, 527, 528, 0, 0, 356,
	524, 529, 531, 532, 370, 0, 0, 0, 0, 0,
	514, 0, 590, 0, 0, 0, 0, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 333,
	0, 0, 0, 0, 276, 196, 0, 0, 0, 0,
	511, 512, 0, 0, 0, 0, 605, 0, 513, 0,
	0, 509, 536, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 515, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 581, 0, 0, 215,
	379, 0, 0, 603, 0, 0, 0, 0, 222, 0,
	130, 0, 164, 0, 257, 0, 0, 588, 133, 0,
	0, 0, 172, 358, 286, 0, 332, 580, 0, 285,
	225, 325, 0, 0, 331, 0, 315, 339, 343, 190,
	0, 163, 305, 181, 178, 0, 0, 0, 197, 275,
	175, 218, 0, 0, 0, 168, 0, 0, 0, 304,
	322, 136, 243, 323, 342, 154, 317, 244, 250, 165,
	167, 166, 150, 299, 321, 159, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 210, 201, 0, 0,
	336, 365, 295, 294, 0, 209, 0, 369, 351, 282,
	371, 216, 141, 0, 346, 153, 220, 318, 349, 194,
	256, 174, 0, 264, 0, 132, 278, 236, 237, 235,
	238, 200, 361, 372, 0, 280, 297, 320, 155, 311,
	359, 360, 362, 374, 288, 375, 376, 0, 230, 186,
	189, 203, 211, 0, 284, 312, 337, 0, 151, 144,
	314, 330, 160, 296, 298, 344, 0, 146, 0, 0,
	240, 0, 0, 0, 0, 145, 0, 0, 199, 0,
	0, 0, 198, 0, 328, 329, 173, 347, 0, 0,
	147, 0, 0, 253, 0, 252, 0, 324, 0, 241,
	0, 0, 0, 0, 239, 0, 221, 188, 205, 273,
	227, 274, 206, 248, 247, 249, 228, 0, 0, 143,
	0, 309, 0, 0, 313, 157, 0, 0, 319, 202,
	279, 158, 195, 187, 272, 251, 152, 208, 307, 219,
	226, 0, 345, 263, 287, 161, 334, 306, 182, 592,
	604, 598, 600, 599, 596, 597, 595, 594, 593, 606,
	582, 583, 584, 585, 586, 1585, 1586, 1587, 589, 0,
	601, 602, 0, 0, 0, 169, 619, 620, 621, 622,
	623, 624, 625, 618, 626, 627, 628, 629, 630, 530,
	631, 632, 633, 607, 608, 609, 610, 611, 612, 613,
	614, 617, 615, 616, 587, 134, 148, 223, 0, 281,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 335, 177, 0, 0, 0, 242,
	0, 149, 156, 162, 176, 185, 192, 204, 207, 212,
	213, 214, 217, 229, 231, 232, 233, 234, 254, 255,
	258, 259, 261, 262, 265, 266, 267, 269, 270, 271,
	277, 373, 283, 289, 290, 291, 292, 293, 300, 301,
	302, 303, 310, 326, 327, 340, 341, 316, 0, 131,
	135, 138, 139, 350, 140, 142, 184, 191, 260, 137,
	0, 0, 481, 268, 0, 0, 0, 180, 0, 0,
	0, 0, 0, 0, 0, 179, 171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 591, 224, 0,
	368, 338, 308, 245, 0, 0, 0, 0, 578, 579,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 0,
	0, 0, 500, 523, 522, 525, 526, 527, 528, 0,
	0, 356, 524, 529, 531, 532, 370, 0, 0, 0,
	0, 0, 514, 0, 590, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 333, 0, 0, 0, 0, 276, 196, 0, 0,
	0, 0, 511, 512, 0, 0, 0, 0, 605, 0,
	513, 0, 0, 509, 536, 537, 538, 539, 540, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 515, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 0, 581, 0,
	0, 215, 379, 0, 0, 603, 0, 0, 0, 0,
	222, 0, 130, 0, 164, 0, 257, 0, 0, 588,
	133, 0, 0, 0, 172, 358, 286, 0, 332, 580,
	2974, 285, 225, 325, 0, 0, 331, 0, 315, 339,
	343, 190, 0, 163, 305, 181, 178, 0, 0, 0,
	197, 275, 175, 218, 0, 0, 0, 168, 0, 0,
	0, 304, 322, 136, 243, 323, 342, 154, 317, 244,
	250, 165, 167, 166, 150, 299, 321, 159, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 201,
	0, 0, 336, 365, 295, 294, 0, 209, 0, 369,
	351, 282, 371, 216, 141, 0, 346, 153, 220, 318,
	349, 194, 256, 174, 0, 264, 0, 132, 278, 236,
	237, 235, 238, 200, 361, 372, 0, 280, 297, 320,
	155, 311, 359, 360, 362, 374, 288, 375, 376, 0,
	230, 186, 189, 203, 211, 0, 284, 312, 337, 0,
	151, 144, 314, 330, 160, 296, 298, 344, 0, 146,
	0, 0, 240, 0, 0, 0, 0, 145, 0, 0,
	199, 0, 0, 0, 198, 0, 328, 329, 173, 347,
	0, 0, 147, 0, 0, 253, 0, 252, 0, 324,
	0, 241, 0, 0, 0, 0, 239, 0, 221, 188,
	205, 273, 227, 274, 206, 248, 247, 249, 228, 0,
	0, 143, 0, 309, 0, 0, 313, 157, 0, 0,
	319, 202, 279, 158, 195, 187, 272, 251, 152, 208,
	307, 219, 226, 0, 345, 263, 287, 161, 334, 306,
	182, 592, 604, 598, 600, 599, 596, 597, 595, 594,
	593, 606, 582, 583, 584, 585, 586, 0, 0, 0,
	589, 0, 601, 602, 0, 0, 0, 169, 619, 620,
	621, 622, 623, 624, 625, 618, 626, 627, 628, 629,
	630, 530, 631, 632, 633, 607, 608, 609, 610, 611,
	612, 613, 614, 617, 615, 616, 587, 134, 148, 223,
	0, 281, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 335, 177, 0, 0,
	0, 242, 0, 149, 156, 162, 176, 185, 192, 204,
	207, 212, 213, 214, 217, 229, 231, 232, 233, 234,
	254, 255, 258, 259, 261, 262, 265, 266, 267, 269,
	270, 271, 277, 373, 283, 289, 290, 291, 292, 293,
	300, 301, 302, 303, 310, 326, 327, 340, 341, 316,
	0, 131, 135, 138, 139, 350, 140, 142, 184, 191,
	260, 137, 0, 0, 481, 268, 0, 0, 0, 180,
	0, 0, 0, 0, 0, 0, 0, 179, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 591,
	224, 0, 368, 338, 308, 245, 0, 0, 0, 0,
	578, 579, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 854, 0, 500, 523, 522, 525, 526, 527,
	528, 0, 0, 356, 524, 529, 531, 532, 370, 0,
	0, 0, 0, 0, 514, 0, 590, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 333, 0, 0, 0, 0, 276, 196,
	0, 0, 0, 0, 511, 512, 0, 0, 0, 0,
	605, 0, 513, 0, 0, 509, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 515, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 0,
	581, 0, 0, 215, 379, 0, 0, 603, 0, 0,
	0, 0, 222, 0, 130, 0, 164, 0, 257, 0,
	0, 588, 133, 0, 0, 0, 172, 358, 286, 0,
	332, 580, 0, 285, 225, 325, 0, 0, 331, 0,
	315, 339, 343, 190, 0, 163, 305, 181, 178, 0,
	0, 0, 197, 275, 175, 218, 0, 0, 0, 168,
	0, 0, 0, 304, 322, 136, 243, 323, 342, 154,
	317, 244, 250, 165, 167, 166, 150, 299, 321, 159,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 201, 0, 0, 336, 365, 295, 294, 0, 209,
	0, 369, 351, 282, 371, 216, 141, 0, 346, 153,
	220, 318, 349, 194, 256, 174, 0, 264, 0, 132,
	278, 236, 237, 235, 238, 200, 361, 372, 0, 280,
	297, 320, 155, 311, 359, 360, 362, 374, 288, 375,
	376, 0, 230, 186, 189, 203, 211, 0, 284, 312,
	337, 0, 151, 144, 314, 330, 160, 296, 298, 344,
	0, 146, 0, 0, 240, 0, 0, 0, 0, 145,
	0, 0, 199, 0, 0, 0, 198, 0, 328, 329,
	173, 347, 0, 0, 147, 0, 0, 253, 0, 252,
	0, 324, 0, 241, 0, 0, 0, 0, 239, 0,
	221, 188, 205, 273, 227, 274, 206, 248, 247, 249,
	228, 0, 0, 143, 0, 309, 0, 0, 313, 157,
	0, 0, 319, 202, 279, 158, 195, 187, 272, 251,
	152, 208, 307, 219, 226, 0, 345, 263, 287, 161,
	334, 306, 182, 592, 604, 598, 600, 599, 596, 597,
	595, 594, 593, 606, 582, 583, 584, 585, 586, 0,
	0, 0, 589, 0, 601, 602, 0, 0, 0, 169,
	619, 620, 621, 622, 623, 624, 625, 618, 626, 627,
	628, 629, 630, 530, 631, 632, 633, 607, 608, 609,
	610, 611, 612, 613, 614, 617, 615, 616, 587, 134,
	148, 223, 0, 281, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 335, 177,
	0, 0, 0, 242, 0, 149, 156, 162, 176, 185,
	192, 204, 207, 212, 213, 214, 217, 229, 231, 232,
	233, 234, 254, 255, 258, 259, 261, 262, 265, 266,
	267, 269, 270, 271, 277, 373, 283, 289, 290, 291,
	292, 293, 300, 301, 302, 303, 310, 326, 327, 340,
	341, 316, 0, 131, 135, 138, 139, 350, 140, 142,
	184, 191, 260, 137, 0, 0, 481, 268, 0, 0,
	0, 180, 0, 0, 0, 0, 0, 0, 0, 179,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 591, 224, 0, 368, 338, 308, 245, 0, 0,
	0, 0, 578, 579, 0, 0, 0, 0, 0, 0,
	0, 0, 81, 0, 0, 0, 500, 523, 522, 525,
	526, 527, 528, 0, 0, 356, 524, 529, 531, 532,
	370, 0, 0, 0, 0, 0, 514, 0, 590, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 333, 0, 0, 0, 0,
	276, 196, 0, 0, 0, 0, 511, 512, 0, 0,
	0, 0, 605, 0, 513, 0, 0, 509, 536, 537,
	538, 539, 540, 541, 542, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	515, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 581, 0, 0, 215, 379, 0, 0, 603,
	0, 0, 0, 0, 222, 0, 130, 0, 164, 0,
	257, 0, 0, 588, 133, 0, 0, 0, 172, 358,
	286, 0, 332, 580, 0, 285, 225, 325, 0, 0,
	331, 0, 315, 339, 343, 190, 0, 163, 305, 181,
	178, 0, 0, 0, 197, 275, 175, 218, 0, 0,
	0, 168, 0, 0, 0, 304, 322, 136, 243, 323,
	342, 154, 317, 244, 250, 165, 167, 166, 150, 299,
	321, 159, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 201, 0, 0, 336, 365, 295, 294,
	0, 209, 0, 369, 351, 282, 371, 216, 141, 0,
	346, 153, 220, 318, 349, 194, 256, 174, 0, 264,
	0, 132, 278, 236, 237, 235, 238, 200, 361, 372,
	0, 280, 297, 320, 155, 311, 359, 360, 362, 374,
	288, 375, 376, 0, 230, 186, 189, 203, 211, 0,
	284, 312, 337, 0, 151, 144, 314, 330, 160, 296,
	298, 344, 0, 146, 0, 0, 240, 0, 0, 0,
	0, 145, 0, 0, 199, 0, 0, 0, 198, 0,
	328, 329, 173, 347, 0, 0, 147, 0, 0, 253,
	0, 252, 0, 324, 0, 241, 0, 0, 0, 0,
	239, 0, 221, 188, 205, 273, 227, 274, 206, 248,
	247, 249, 228, 0, 0, 143, 0, 309, 0, 0,
	313, 157, 0, 0, 319, 202, 279, 158, 195, 187,
	272, 251, 152, 208, 307, 219, 226, 0, 345, 263,
	287, 161, 334, 306, 182, 592, 604, 598, 600, 599,
	596, 597, 595, 594, 593, 606, 582, 583, 584, 585,
	586, 0, 0, 0, 589, 0, 601, 602, 0, 0,
	0, 169, 619, 620, 621, 622, 623, 624, 625, 618,
	626, 627, 628, 629, 630, 530, 631, 632, 633, 607,
	608, 609, 610, 611, 612, 613, 614, 617, 615, 616,
	587, 134, 148, 223, 0, 281, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	335, 177, 0, 0, 0, 242, 0, 149, 156, 162,
	176, 185, 192, 204, 207, 212, 213, 214, 217, 229,
	231, 232, 233, 234, 254, 255, 258, 259, 261, 262,
	265, 266, 267, 269, 270, 271, 277, 373, 283, 289,
	290, 291, 292, 293, 300, 301, 302, 303, 310, 326,
	327, 340, 341, 0, 0, 131, 135, 138, 139, 350,
	140, 142, 184, 191, 0, 137, 0, 0, 481, 268,
	449, 316, 443, 454, 437, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 460, 0, 0, 0, 0,
	0, 180, 0, 0, 444, 0, 0, 0, 0, 179,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 224, 0, 368, 338, 308, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 458, 0, 457, 0,
	0, 0, 0, 0, 0, 356, 0, 0, 0, 0,
	370, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 333, 0, 0, 0, 0,
	276, 196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 436, 435, 438, 0, 0, 0,
	246, 0, 0, 0, 442, 215, 379, 0, 0, 0,
	0, 0, 0, 0, 222, 0, 130, 0, 164, 0,
	257, 446, 0, 363, 133, 450, 0, 0, 172, 358,
	286, 0, 332, 364, 0, 285, 225, 325, 0, 453,
	331, 0, 315, 339, 343, 190, 0, 163, 305, 181,
	178, 0, 0, 0, 197, 275, 175, 218, 0, 0,
	0, 168, 0, 0, 0, 304, 322, 136, 243, 323,
	342, 154, 317, 244, 250, 165, 167, 166, 150, 299,
	321, 159, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 201, 0, 0, 336, 365, 295, 294,
	0, 209, 0, 369, 351, 282, 371, 216, 141, 0,
	346, 153, 220, 318, 349, 194, 256, 174, 0, 264,
	0, 132, 278, 236, 237, 235, 238, 200, 361, 372,
	0, 463, 297, 320, 155, 311, 439, 440, 441, 447,
	448, 451, 452, 455, 230, 186, 189, 203, 211, 0,
	284, 312, 337, 0, 151, 144, 314, 330, 160, 296,
	298, 344, 0, 146, 0, 0, 240, 0, 0, 0,
	0, 145, 0, 0, 199, 0, 0, 0, 198, 0,
	328, 329, 173, 347, 0, 0, 147, 0, 0, 253,
	0, 252, 0, 324, 0, 241, 0, 0, 0, 0,
	239, 0, 221, 188, 205, 273, 227, 274, 206, 248,
	247, 249, 228, 0, 0, 143, 0, 309, 0, 0,
	313, 157, 0, 0, 319, 202, 279, 158, 195, 187,
	272, 251, 152, 208, 307, 219, 226, 0, 345, 263,
	287, 161, 334, 306, 182, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 378, 0, 0,
	0, 169, 352, 353, 354, 355, 357, 366, 367, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 134, 148, 223, 0, 281, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	335, 177, 0, 0, 0, 242, 0, 149, 156, 162,
	176, 185, 192, 204, 207, 212, 213, 214, 217, 229,
	231, 232, 233, 234, 254, 255, 258, 259, 261, 262,
	265, 266, 267, 269, 270, 271, 277, 445, 283, 289,
	290, 291, 292, 293, 300, 301, 302, 303, 310, 326,
	327, 340, 341, 0, 0, 131, 135, 138, 139, 350,
	140, 142, 184, 191, 0, 137, 0, 0, 0, 268,
	449, 316, 443, 454, 437, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 429, 0, 0, 0, 0,
	0, 180, 0, 0, 444, 0, 0, 0, 0, 179,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 224, 0, 368, 338, 308, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 458, 0, 457, 0,
	0, 0, 0, 0, 0, 356, 0, 0, 0, 0,
	370, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 333, 0, 0, 0, 0,
	276, 196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 436, 435, 438, 0, 0, 0,
	246, 0, 0, 0, 442, 215, 379, 0, 0, 0,
	0, 0, 0, 0, 222, 0, 130, 0, 164, 0,
	257, 446, 0, 363, 133, 450, 0, 0, 172, 358,
	286, 0, 332, 364, 0, 285, 225, 325, 0, 453,
	331, 0, 315, 339, 343, 190, 0, 163, 305, 181,
	178, 0, 0, 0, 197, 275, 175, 218, 0, 0,
	0, 168, 0, 0, 0, 304, 322, 136, 243, 323,
	342, 154, 317, 244, 250, 165, 167, 166, 150, 299,
	321, 159, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 201, 0, 0, 336, 365, 295, 294,
	0, 209, 0, 369, 351, 282, 371, 216, 141, 0,
	346, 153, 220, 318, 349, 194, 256, 174, 0, 264,
	0, 132, 278, 236, 237, 235, 238, 200, 361, 372,
	0, 432, 297, 320, 155, 311, 439, 440, 441, 447,
	448, 451, 452, 455, 230, 186, 189, 203, 211, 0,
	284, 312, 337, 0, 151, 144, 314, 330, 160, 296,
	298, 344, 0, 146, 0, 0, 240, 0, 0, 0,
	0, 145, 0, 0, 199, 0, 0, 0, 198, 0,
	328, 329, 173, 347, 0, 0, 147, 0, 0, 253,
	0, 252, 0, 324, 0, 241, 0, 0, 0, 0,
	239, 0, 221, 188, 205, 273, 227, 274, 206, 248,
	247, 249, 228, 0, 0, 143, 0, 309, 0, 0,
	313, 157, 0, 0, 319, 202, 279, 158, 195, 187,
	272, 251, 152, 208, 307, 219, 226, 0, 345, 263,
	287, 161, 334, 306, 182, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 378, 0, 0,
	0, 169, 352, 353, 354, 355, 357, 366, 367, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 134, 148, 223, 0, 281, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	335, 177, 0, 0, 0, 242, 0, 149, 156, 162,
	176, 185, 192, 204, 207, 212, 213, 214, 217, 229,
	231, 232, 233, 234, 254, 255, 258, 259, 261, 262,
	265, 266, 267, 269, 270, 271, 277, 445, 283, 289,
	290, 291, 292, 293, 300, 301, 302, 303, 310, 326,
	327, 340, 341, 316, 0, 131, 135, 138, 139, 350,
	140, 142, 184, 191, 260, 137, 0, 0, 0, 268,
	0, 0, 0, 180, 0, 0, 0, 0, 0, 0,
	0, 179, 171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 368, 338, 308, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 670, 0,
	0, 0, 0, 0, 0, 0, 0, 356, 0, 0,
	0, 0, 370, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 0,
	0, 0, 276, 196, 891, 890, 900, 901, 893, 894,
	895, 896, 897, 898, 899, 892, 0, 0, 902, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 215, 379, 0,
	0, 0, 0, 0, 0, 0, 222, 0, 130, 0,
	164, 0, 257, 0, 0, 363, 133, 0, 0, 0,
	172, 358, 286, 0, 332, 364, 0, 285, 225, 325,
	0, 0, 331, 0, 315, 339, 343, 190, 0, 163,
	305, 181, 178, 0, 0, 0, 197, 275, 175, 218,
	0, 0, 0, 168, 0, 0, 0, 304, 322, 136,
	243, 323, 342, 154, 317, 244, 250, 165, 167, 166,
	150, 299, 321, 159, 170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 201, 0, 0, 336, 365,
	295, 294, 0, 209, 0, 369, 351, 282, 371, 216,
	141, 0, 346, 153, 220, 318, 349, 194, 256, 174,
	0, 264, 0, 132, 278, 236, 237, 235, 238, 200,
	361, 372, 0, 280, 297, 320, 155, 311, 359, 360,
	362, 374, 288, 375, 376, 0, 230, 186, 189, 203,
	211, 0, 284, 312, 337, 0, 151, 144, 314, 330,
	160, 296, 298, 344, 0, 146, 0, 0, 240, 0,
	0, 0, 0, 145, 0, 0, 199, 0, 0, 0,
	198, 0, 328, 329, 173, 347, 0, 0, 147, 0,
	0, 253, 0, 252, 0, 324, 0, 241, 0, 0,
	0, 0, 239, 0, 221, 188, 205, 273, 227, 274,
	206, 248, 247, 249, 228, 0, 0, 143, 0, 309,
	0, 0, 313, 157, 0, 0, 319, 202, 279, 158,
	195, 187, 272, 251, 152, 208, 307, 219, 226, 0,
	345, 263, 287, 161, 334, 306, 182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 378,
	0, 0, 0, 169, 352, 353, 354, 355, 357, 366,
	367, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 134, 148, 223, 0, 281, 193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 335, 177, 0, 0, 0, 242, 0, 149,
	156, 162, 176, 185, 192, 204, 207, 212, 213, 214,
	217, 229, 231, 232, 233, 234, 254, 255, 258, 259,
	261, 262, 265, 266, 267, 269, 270, 271, 277, 373,
	283, 289, 290, 291, 292, 293, 300, 301, 302, 303,
	310, 326, 327, 340, 341, 316, 0, 131, 135, 138,
	139, 350, 140, 142, 184, 191, 260, 137, 0, 0,
	0, 268, 0, 0, 0, 180, 0, 0, 0, 0,
	0, 0, 0, 179, 171, 0, 0, 0, 0, 0,
	0, 0, 1701, 1705, 0, 0, 224, 0, 368, 338,
	308, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	670, 0, 0, 0, 0, 0, 0, 0, 0, 356,
	0, 0, 0, 0, 370, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 333,
	0, 0, 0, 0, 276, 196, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 0, 0, 1704, 215,
	379, 0, 0, 0, 1698, 0, 1699, 1700, 222, 672,
	130, 0, 1696, 1703, 257, 0, 0, 363, 133, 0,
	0, 0, 172, 358, 286, 0, 332, 364, 0, 285,
	225, 325, 0, 0, 331, 0, 315, 339, 343, 190,
	0, 163, 305, 181, 178, 0, 0, 0, 197, 275,
	175, 218, 0, 0, 0, 168, 0, 0, 0, 304,
	322, 136, 243, 323, 342, 154, 317, 244, 250, 165,
	167, 166, 150, 299, 321, 159, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 210, 201, 0, 0,
	336, 365, 295, 294, 0, 209, 0, 369, 351, 282,
	371, 216, 141, 0, 346, 153, 220, 318, 349, 194,
	256, 174, 0, 264, 0, 132, 278, 236, 237, 235,
	238, 200, 361, 372, 0, 280, 297, 320, 155, 311,
	359, 360, 362, 374, 288, 375, 376, 0, 230, 186,
	189, 203, 211, 0, 284, 312, 337, 0, 151, 144,
	314, 330, 160, 296, 298, 344, 0, 146, 0, 0,
	240, 0, 0, 0, 0, 145, 0, 0, 199, 0,
	0, 0, 198, 0, 328, 329, 173, 347, 0, 0,
	147, 0, 0, 253, 0, 252, 0, 324, 0, 241,
	0, 0, 0, 0, 239, 0, 221, 188, 205, 273,
	227, 274, 206, 248, 247, 249, 228, 0, 0, 143,
	0, 309, 0, 0, 313, 157, 0, 0, 319, 202,
	279, 158, 195, 187, 272, 251, 152, 208, 307, 219,
	226, 0, 345, 263, 287, 161, 334, 306, 182, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 378, 0, 0, 0, 169, 352, 353, 354, 355,
	357, 366, 367, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 134, 148, 223, 0, 281,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 335, 177, 0, 0, 0, 242,
	0, 149, 156, 162, 176, 185, 192, 204, 207, 212,
	213, 214, 217, 229, 231, 232, 233, 234, 254, 255,
	258, 259, 261, 262, 265, 266, 267, 269, 270, 271,
	277, 373, 283, 289, 290, 291, 292, 293, 300, 301,
	302, 303, 310, 326, 327, 340, 341, 0, 0, 131,
	135, 138, 139, 350, 140, 142, 184, 191, 316, 137,
	0, 0, 0, 268, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 1655, 0, 0, 0, 180, 0,
	0, 0, 0, 0, 0, 0, 179, 171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 368, 338, 308, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1657, 1659, 0, 0, 0,
	0, 0, 0, 128, 0, 480, 0, 0, 0, 0,
	0, 0, 356, 0, 0, 0, 0, 370, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 333, 1653, 0, 0, 0, 276, 196, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 215, 379, 0, 1658, 0, 0, 0, 0,
	0, 222, 0, 130, 0, 164, 0, 257, 0, 0,
	363, 133, 0, 0, 0, 172, 358, 286, 0, 332,
	364, 0, 285, 225, 325, 0, 0, 331, 0, 315,
	339, 343, 190, 0, 163, 305, 181, 178, 0, 0,
	0, 197, 275, 175, 218, 0, 0, 0, 168, 0,
	0, 0, 304, 322, 136, 243, 323, 342, 154, 317,
	244, 250, 165, 167, 166, 150, 299, 321, 159, 170,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 210,
	201, 0, 0, 336, 365, 295, 294, 0, 209, 0,
	369, 351, 282, 371, 216, 141, 0, 346, 153, 220,
	318, 349, 194, 256, 174, 0, 264, 0, 132, 278,
	236, 237, 235, 238, 200, 361, 372, 0, 280, 297,
	320, 155, 311, 359, 360, 362, 374, 288, 375, 376,
	0, 230, 186, 189, 203, 211, 0, 284, 312, 337,
	0, 151, 144, 314, 330, 160, 296, 298, 344, 0,
	146, 0, 0, 240, 0, 0, 0, 0, 145, 0,
	0, 199, 0, 0, 0, 198, 0, 328, 329, 173,
	347, 0, 0, 147, 0, 0, 253, 0, 252, 0,
	324, 0, 241, 0, 0, 0, 0, 239, 0, 221,
	188, 205, 273, 227, 274, 206, 248, 247, 249, 228,
	0, 0, 143, 0, 309, 0, 0, 313, 157, 0,
	0, 319, 202, 279, 158, 195, 187, 272, 251, 152,
	208, 307, 219, 226, 0, 345, 263, 287, 161, 334,
	306, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 378, 0, 0, 0, 169, 352,
	353, 354, 355, 357, 366, 367, 0, 0, 0, 0,
	0, 0, 482, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 134, 148,
	223, 0, 281, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 335, 177, 0,
	0, 0, 242, 0, 149, 156, 162, 176, 185, 192,
	204, 207, 212, 213, 214, 217, 229, 231, 232, 233,
	234, 254, 255, 258, 259, 261, 262, 265, 266, 267,
	269, 270, 271, 277, 373, 283, 289, 290, 291, 292,
	293, 300, 301, 302, 303, 310, 326, 327, 340, 341,
	0, 0, 131, 135, 138, 139, 350, 140, 142, 184,
	191, 316, 137, 0, 0, 481, 268, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 877, 0, 0,
	0, 180, 0, 0, 0, 0, 0, 0, 0, 179,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 224, 0, 368, 338, 308, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 878, 0, 881, 0,
	0, 0, 0, 0, 0, 356, 0, 0, 0, 0,
	370, 0, 873, 874, 872, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	0, 875, 0, 0, 0, 333, 0, 0, 0, 0,
	276, 196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 215, 379, 0, 0, 0,
	0, 0, 0, 0, 222, 0, 130, 0, 164, 0,
	257, 0, 0, 363, 133, 0, 0, 0, 172, 358,
	286, 0, 332, 364, 0, 285, 225, 325, 0, 0,
	331, 0, 315, 339, 343, 190, 0, 163, 305, 181,
	178, 0, 0, 0, 197, 275, 175, 218, 0, 0,
	0, 168, 0, 0, 0, 304, 322, 136, 243, 323,
	342, 154, 317, 244, 250, 165, 167, 166, 150, 299,
	321, 159, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 201, 0, 0, 336, 365, 295, 294,
	0, 209, 0, 369, 351, 282, 371, 216, 141, 0,
	346, 153, 220, 318, 349, 194, 256, 174, 0, 264,
	0, 132, 278, 236, 237, 235, 238, 200, 361, 372,
	0, 280, 297, 320, 155, 311, 359, 360, 362, 374,
	288, 375, 376, 0, 230, 186, 189, 203, 211, 0,
	284, 312, 337, 0, 151, 144, 314, 330, 160, 296,
	298, 344, 0, 146, 0, 0, 240, 0, 0, 0,
	0, 145, 0, 0, 199, 0, 0, 0, 198, 0,
	328, 329, 173, 347, 0, 0, 147, 0, 0, 253,
	0, 252, 0, 324, 0, 241, 0, 0, 0, 0,
	239, 0, 221, 188, 205, 273, 227, 274, 206, 248,
	247, 249, 228, 0, 0, 143, 0, 309, 0, 0,
	313, 157, 0, 0, 319, 202, 279, 158, 195, 187,
	272, 251, 152, 208, 307, 219, 226, 0, 345, 263,
	287, 161, 334, 306, 182, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 378, 0, 0,
	0, 169, 352, 353, 354, 355, 357, 366, 367, 0,
	0, 0, 0, 0, 0, 482, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 134, 148, 223, 0, 281, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	335, 177, 0, 0, 0, 242, 0, 149, 156, 162,
	176, 185, 192, 204, 207, 212, 213, 214, 217, 229,
	231, 232, 233, 234, 254, 255, 258, 259, 261, 262,
	265, 266, 267, 269, 270, 271, 277, 373, 283, 289,
	290, 291, 292, 293, 300, 301, 302, 303, 310, 326,
	327, 340, 341, 0, 0, 131, 135, 138, 139, 350,
	140, 142, 184, 191, 316, 137, 0, 0, 481, 268,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	1655, 0, 0, 0, 180, 0, 0, 0, 0, 0,
	0, 0, 179, 171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 224, 0, 368, 338, 308,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1657, 1659, 0, 0, 0, 0, 0, 0, 128,
	0, 480, 0, 0, 0, 0, 0, 0, 356, 0,
	0, 0, 0, 370, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 333, 0,
	0, 0, 0, 276, 196, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 0, 0, 0, 0, 215, 379,
	0, 1658, 0, 0, 0, 0, 0, 222, 0, 130,
	0, 164, 0, 257, 0, 0, 363, 133, 0, 0,
	0, 172, 358, 286, 0, 332, 364, 0, 285, 225,
	325, 0, 0, 331, 0, 315, 339, 343, 190, 0,
	163, 305, 181, 178, 0, 0, 0, 197, 275, 175,
	218, 0, 0, 0, 168, 0, 0, 0, 304, 322,
	136, 243, 323, 342, 154, 317, 244, 250, 165, 167,
	166, 150, 299, 321, 159, 170, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 210, 201, 0, 0, 336,
	365, 295, 294, 0, 209, 0, 369, 351, 282, 371,
	216, 141, 0, 346, 153, 220, 318, 349, 194, 256,
	174, 0, 264, 0, 132, 278, 236, 237, 235, 238,
	200, 361, 372, 0, 280, 297, 320, 155, 311, 359,
	360, 362, 374, 288, 375, 376, 0, 230, 186, 189,
	203, 211, 0, 284, 312, 337, 0, 151, 144, 314,
	330, 160, 296, 298, 344, 0, 146, 0, 0, 240,
	0, 0, 0, 0, 145, 0, 0, 199, 0, 0,
	0, 198, 0, 328, 329, 173, 347, 0, 0, 147,
	0, 0, 253, 0, 252, 0, 324, 0, 241, 0,
	0, 0, 0, 239, 0, 221, 188, 205, 273, 227,
	274, 206, 248, 247, 249, 228, 0, 0, 143, 0,
	309, 0, 0, 313, 157, 0, 0, 319, 202, 279,
	158, 195, 187, 272, 251, 152, 208, 307, 219, 226,
	0, 345, 263, 287, 161, 334, 306, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	378, 0, 0, 0, 169, 352, 353, 354, 355, 357,
	366, 367, 0, 0, 0, 0, 0, 0, 482, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 134, 148, 223, 0, 281, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 335, 177, 0, 0, 0, 242, 0,
	149, 156, 162, 176, 185, 192, 204, 207, 212, 213,
	214, 217, 229, 231, 232, 233, 234, 254, 255, 258,
	259, 261, 262, 265, 266, 267, 269, 270, 271, 277,
	373, 283, 289, 290, 291, 292, 293, 300, 301, 302,
	303, 310, 326, 327, 340, 341, 316, 0, 131, 135,
	138, 139, 350, 140, 142, 184, 191, 260, 137, 0,
	0, 481, 268, 0, 0, 0, 180, 0, 0, 0,
	0, 0, 0, 0, 179, 171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 224, 0, 368,
	338, 308, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 128, 0, 480, 0, 0, 0, 0, 0, 0,
	356, 0, 0, 0, 0, 370, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	333, 0, 0, 0, 0, 276, 196, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	215, 379, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 130, 0, 164, 0, 257, 0, 0, 363, 133,
	0, 0, 0, 172, 358, 286, 0, 332, 364, 0,
	285, 225, 325, 0, 0, 331, 0, 315, 339, 343,
	190, 0, 163, 305, 181, 178, 0, 0, 0, 197,
	275, 175, 218, 0, 0, 0, 168, 0, 0, 0,
	304, 322, 136, 243, 323, 342, 154, 317, 244, 250,
	165, 167, 166, 150, 299, 321, 159, 170, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 210, 201, 0,
	0, 336, 365, 295, 294, 0, 209, 0, 369, 351,
	282, 371, 216, 141, 0, 346, 153, 220, 318, 349,
	194, 256, 174, 0, 264, 0, 132, 278, 236, 237,
	235, 238, 200, 361, 372, 0, 280, 297, 320, 155,
	311, 359, 360, 362, 374, 288, 375, 376, 0, 230,
	186, 189, 203, 211, 0, 284, 312, 337, 0, 151,
	144, 314, 330, 160, 296, 298, 344, 0, 146, 0,
	0, 240, 0, 0, 0, 0, 145, 0, 0, 199,
	0, 0, 0, 198, 0, 328, 329, 173, 347, 0,
	0, 147, 0, 0, 253, 0, 252, 0, 324, 0,
	241, 0, 0, 0, 0, 239, 0, 221, 188, 205,
	273, 227, 274, 206, 248, 247, 249, 228, 0, 0,
	143, 0, 309, 0, 0, 313, 157, 0, 0, 319,
	202, 279, 158, 195, 187, 272, 251, 152, 208, 307,
	219, 226, 0, 345, 263, 287, 161, 334, 306, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 377, 378, 0, 0, 0, 169, 352, 353, 354,
	355, 357, 366, 367, 0, 0, 0, 0, 0, 0,
	482, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 134, 148, 223, 0,
	281, 193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 335, 177, 0, 0, 0,
	242, 475, 149, 156, 162, 176, 185, 192, 204, 207,
	212, 213, 214, 217, 229, 231, 232, 233, 234, 254,
	255, 258, 259, 261, 262, 265, 266, 267, 269, 270,
	271, 277, 373, 283, 289, 290, 291, 292, 293, 300,
	301, 302, 303, 310, 326, 327, 340, 341, 316, 0,
	131, 135, 138, 139, 350, 140, 142, 184, 191, 260,
	137, 0, 0, 481, 268, 0, 0, 0, 180, 0,
	0, 0, 0, 0, 1975, 0, 179, 171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 368, 338, 308, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 128, 0, 480, 0, 0, 0, 0,
	0, 0, 356, 0, 0, 0, 0, 370, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 333, 0, 0, 0, 0, 276, 196, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 215, 379, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 130, 0, 164, 0, 257, 0, 0,
	363, 133, 0, 0, 0, 172, 358, 286, 0, 332,
	364, 0, 285, 225, 325, 0, 0, 331, 0, 315,
	339, 343, 190, 0, 163, 305, 181, 178, 0, 0,
	0, 197, 275, 175, 218, 0, 0, 0, 168, 0,
	0, 0, 304, 322, 136, 243, 323, 342, 154, 317,
	244, 250, 165, 167, 166, 150, 299, 321, 159, 170,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 210,
	201, 0, 0, 336, 365, 295, 294, 0, 209, 0,
	369, 351, 282, 371, 216, 141, 0, 346, 153, 220,
	318, 349, 194, 256, 174, 0, 264, 0, 132, 278,
	236, 237, 235, 238, 200, 361, 372, 0, 280, 297,
	320, 155, 311, 359, 360, 362, 374, 288, 375, 376,
	0, 230, 186, 189, 203, 211, 0, 284, 312, 337,
	0, 151, 144, 314, 330, 160, 296, 298, 344, 0,
	146, 0, 0, 240, 0, 0, 0, 0, 145, 0,
	0, 199, 0, 0, 0, 198, 0, 328, 329, 173,
	347, 0, 0, 147, 0, 0, 253, 0, 252, 0,
	324, 0, 241, 0, 0, 0, 0, 239, 0, 221,
	188, 205, 273, 227, 274, 206, 248, 247, 249, 228,
	0, 0, 143, 0, 309, 0, 0, 313, 157, 0,
	0, 319, 202, 279, 158, 195, 187, 272, 251, 152,
	208, 307, 219, 226, 0, 345, 263, 287, 161, 334,
	306, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 378, 0, 0, 0, 169, 352,
	353, 354, 355, 357, 366, 367, 0, 0, 0, 0,
	0, 0, 482, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 134, 148,
	223, 0, 281, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 335, 177, 0,
	0, 0, 242, 0, 149, 156, 162, 176, 185, 192,
	204, 207, 212, 213, 214, 217, 229, 231, 232, 233,
	234, 254, 255, 258, 259, 261, 262, 265, 266, 267,
	269, 270, 271, 277, 373, 283, 289, 290, 291, 292,
	293, 300, 301, 302, 303, 310, 326, 327, 340, 341,
	0, 0, 131, 135, 138, 139, 350, 140, 142, 184,
	191, 0, 137, 36, 316, 481, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 0, 0, 0, 0, 0,
	0, 0, 179, 171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1650, 224, 0, 368, 338, 308,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 0, 0, 0, 1007,
	0, 0, 0, 0, 0, 0, 0, 0, 356, 0,
	0, 0, 0, 370, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 333, 0,
	0, 0, 0, 276, 196, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 0, 0, 0, 0, 215, 379,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 130,
	0, 164, 0, 257, 0, 0, 363, 133, 0, 0,
	0, 172, 358, 286, 0, 332, 364, 0, 285, 225,
	325, 0, 0, 331, 0, 315, 339, 343, 190, 0,
	163, 305, 181, 178, 0, 0, 0, 197, 275, 175,
	218, 0, 0, 0, 168, 0, 0, 0, 304, 322,
	136, 243, 323, 342, 154, 317, 244, 250, 165, 167,
	166, 150, 299, 321, 159, 170, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 210, 201, 0, 0, 336,
	365, 295, 294, 0, 209, 0, 369, 351, 282, 371,
	216, 141, 0, 346, 153, 220, 318, 349, 194, 256,
	174, 0, 264, 0, 132, 278, 236, 237, 235, 238,
	200, 361, 372, 0, 280, 297, 320, 155, 311, 359,
	360, 362, 374, 288, 375, 376, 0, 230, 186, 189,
	203, 211, 0, 284, 312, 337, 0, 151, 144, 314,
	330, 160, 296, 298, 344, 0, 146, 0, 0, 240,
	0, 0, 0, 0, 145, 0, 0, 199, 0, 0,
	0, 198, 0, 328, 329, 173, 347, 0, 0, 147,
	0, 0, 253, 0, 252, 0, 324, 0, 241, 0,
	0, 0, 0, 239, 0, 221, 188, 205, 273, 227,
	274, 206, 248, 247, 249, 228, 0, 0, 143, 0,
	309, 0, 0, 313, 157, 0, 0, 319, 202, 279,
	158, 195, 187, 272, 251, 152, 208, 307, 219, 226,
	0, 345, 263, 287, 161, 334, 306, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	378, 0, 0, 0, 169, 352, 353, 354, 355, 357,
	366, 367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 134, 148, 223, 79, 281, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 335, 177, 0, 0, 0, 242, 0,
	149, 156, 162, 176, 185, 192, 204, 207, 212, 213,
	214, 217, 229, 231, 232, 233, 234, 254, 255, 258,
	259, 261, 262, 265, 266, 267, 269, 270, 271, 277,
	373, 283, 289, 290, 291, 292, 293, 300, 301, 302,
	303, 310, 326, 327, 340, 341, 316, 0, 131, 135,
	138, 139, 350, 140, 142, 184, 191, 260, 137, 0,
	2888, 0, 268, 0, 0, 0, 180, 2886, 0, 0,
	0, 0, 0, 0, 179, 171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 224, 0, 368,
	338, 308, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 458, 0, 457, 0, 0, 0, 0, 0, 0,
	356, 0, 0, 0, 0, 370, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	333, 0, 0, 0, 0, 276, 196, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	215, 379, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 130, 0, 164, 0, 257, 0, 0, 363, 133,
	0, 0, 0, 172, 358, 286, 0, 332, 364, 0,
	285, 225, 325, 0, 0, 331, 0, 315, 339, 343,
	190, 0, 163, 305, 181, 178, 0, 0, 0, 197,
	275, 175, 218, 0, 0, 0, 168, 0, 0, 0,
	304, 322, 136, 243, 323, 342, 154, 317, 244, 250,
	165, 167, 166, 150, 299, 321, 159, 170, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 210, 201, 0,
	0, 336, 365, 295, 294, 0, 209, 0, 2887, 351,
	282, 371, 216, 141, 0, 346, 153, 220, 318, 349,
	194, 256, 174, 0, 264, 0, 132, 278, 236, 237,
	235, 238, 200, 361, 372, 0, 280, 297, 320, 155,
	311, 359, 360, 362, 374, 288, 375, 376, 0, 230,
	186, 189, 203, 211, 0, 284, 312, 337, 0, 151,
	144, 314, 330, 160, 296, 298, 344, 0, 146, 0,
	0, 240, 0, 0, 0, 0, 145, 0, 0, 199,
	0, 0, 0, 198, 0, 328, 329, 173, 347, 0,
	0, 147, 0, 0, 253, 0, 252, 0, 324, 0,
	241, 0, 0, 0, 0, 239, 0, 221, 188, 205,
	273, 227, 274, 206, 248, 247, 249, 228, 0, 0,
	143, 0, 309, 0, 0, 313, 157, 0, 0, 319,
	202, 279, 158, 195, 187, 272, 251, 152, 208, 307,
	219, 226, 0, 345, 263, 287, 161, 334, 306, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 377, 378, 0, 0, 0, 169, 352, 353, 354,
	355, 357, 366, 367, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 134, 148, 223, 0,
	281, 193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 335, 177, 0, 0, 0,
	242, 0, 149, 156, 162, 176, 185, 192, 204, 207,
	212, 213, 214, 217, 229, 231, 232, 233, 234, 254,
	255, 258, 259, 261, 262, 265, 266, 267, 269, 270,
	271, 277, 373, 283, 289, 290, 291, 292, 293, 300,
	301, 302, 303, 310, 326, 327, 340, 341, 316, 0,
	131, 135, 138, 139, 350, 140, 142, 184, 191, 260,
	137, 0, 0, 0, 268, 0, 0, 0, 180, 0,
	0, 0, 0, 0, 0, 0, 179, 171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 368, 338, 308, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 128, 0, 480, 0, 0, 0, 0,
	0, 0, 356, 0, 0, 0, 0, 370, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 333, 0, 0, 0, 0, 276, 196, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 215, 379, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 130, 0, 164, 0, 257, 0, 0,
	363, 133, 0, 0, 0, 172, 358, 286, 0, 332,
	364, 0, 285, 225, 325, 0, 0, 331, 0, 315,
	339, 343, 190, 0, 163, 305, 181, 178, 0, 0,
	0, 197, 275, 175, 218, 0, 0, 0, 168, 0,
	0, 0, 304, 322, 136, 243, 323, 342, 154, 317,
	244, 250, 165, 167, 166, 150, 299, 321, 159, 170,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 210,
	201, 0, 0, 336, 365, 295, 294, 0, 209, 0,
	369, 351, 282, 371, 216, 141, 0, 346, 153, 220,
	318, 349, 194, 256, 174, 0, 264, 0, 132, 278,
	236, 237, 235, 238, 200, 361, 372, 0, 280, 297,
	320, 155, 311, 359, 360, 362, 374, 288, 375, 376,
	0, 230, 186, 189, 203, 211, 0, 284, 312, 337,
	0, 151, 144, 314, 330, 160, 296, 298, 344, 0,
	146, 0, 0, 240, 0, 0, 0, 0, 145, 0,
	0, 199, 0, 0, 0, 198, 0, 328, 329, 173,
	347, 0, 0, 147, 0, 0, 253, 0, 252, 0,
	324, 0, 241, 0, 0, 0, 0, 239, 0, 221,
	188, 205, 273, 227, 274, 206, 248, 247, 249, 228,
	0, 0, 143, 0, 309, 0, 0, 313, 157, 0,
	0, 319, 202, 279, 158, 195, 187, 272, 251, 152,
	208, 307, 219, 226, 0, 345, 263, 287, 161, 334,
	306, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 378, 0, 0, 0, 169, 352,
	353, 354, 355, 357, 366, 367, 0, 0, 0, 0,
	0, 0, 482, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 134, 148,
	223, 0, 281, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 335, 177, 0,
	0, 0, 242, 0, 149, 156, 162, 176, 185, 192,
	204, 207, 212, 213, 214, 217, 229, 231, 232, 233,
	234, 254, 255, 258, 259, 261, 262, 265, 266, 267,
	269, 270, 271, 277, 373, 283, 289, 290, 291, 292,
	293, 300, 301, 302, 303, 310, 326, 327, 340, 341,
	316, 0, 131, 135, 138, 139, 350, 140, 142, 184,
	191, 260, 137, 0, 0, 481, 268, 0, 0, 0,
	180, 0, 0, 0, 0, 0, 0, 0, 179, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 224, 0, 368, 338, 308, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 670, 0, 0, 0, 0,
	0, 0, 0, 0, 356, 0, 0, 0, 0, 370,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2077, 333, 0, 0, 0, 0, 276,
	196, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 0, 0, 0, 215, 379, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 130, 0, 164, 0, 257,
	0, 0, 363, 133, 0, 0, 0, 172, 358, 286,
	0, 332, 364, 0, 285, 225, 325, 0, 0, 331,
	0, 315, 339, 343, 190, 0, 163, 305, 181, 178,
	0, 0, 0, 197, 275, 175, 218, 2078, 2079, 0,
	168, 0, 0, 0, 304, 322, 136, 243, 323, 342,
	154, 317, 244, 250, 165, 167, 166, 150, 299, 321,
	159, 170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 210, 201, 0, 0, 336, 365, 295, 294, 0,
	209, 0, 369, 351, 282, 371, 216, 141, 0, 346,
	153, 220, 318, 349, 194, 256, 174, 0, 264, 0,
	132, 278, 236, 237, 235, 238, 200, 361, 372, 0,
	280, 297, 320, 155, 311, 359, 360, 362, 374, 288,
	375, 376, 0, 230, 186, 189, 203, 211, 0, 284,
	312, 337, 0, 151, 144, 314, 330, 160, 296, 298,
	344, 0, 146, 0, 0, 240, 0, 0, 0, 0,
	145, 0, 0, 199, 0, 0, 0, 198, 0, 328,
	329, 173, 347, 0, 0, 147, 0, 0, 253, 0,
	252, 0, 324, 0, 241, 0, 0, 0, 0, 239,
	0, 221, 188, 205, 273, 227, 274, 206, 248, 247,
	249, 228, 0, 0, 143, 0, 309, 0, 0, 313,
	157, 0, 0, 319, 202, 279, 158, 195, 187, 272,
	251, 152, 208, 307, 219, 226, 0, 345, 263, 287,
	161, 334, 306, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 378, 0, 0, 0,
	169, 352, 353, 354, 355, 357, 366, 367, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	134, 148, 223, 0, 281, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 335,
	177, 0, 0, 0, 242, 0, 149, 156, 162, 176,
	185, 192, 204, 207, 212, 213, 214, 217, 229, 231,
	232, 233, 234, 254, 255, 258, 259, 261, 262, 265,
	266, 267, 269, 270, 271, 277, 373, 283, 289, 290,
	291, 292, 293, 300, 301, 302, 303, 310, 326, 327,
	340, 341, 316, 0, 131, 135, 138, 139, 350, 140,
	142, 184, 191, 260, 137, 0, 0, 0, 268, 0,
	0, 0, 180, 0, 0, 0, 0, 0, 0, 0,
	179, 171, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 224, 0, 368, 338, 308, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 878, 0, 881,
	0, 0, 0, 0, 0, 0, 356, 0, 0, 0,
	0, 370, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 333, 0, 0, 0,
	0, 276, 196, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 0, 0, 0, 0, 215, 379, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 130, 0, 164,
	0, 257, 0, 0, 363, 133, 0, 0, 0, 172,
	358, 286, 0, 332, 364, 0, 285, 225, 325, 0,
	0, 331, 0, 315, 339, 343, 190, 0, 163, 305,
	181, 178, 0, 0, 0, 197, 275, 175, 218, 0,
	0, 0, 168, 0, 0, 0, 304, 322, 136, 243,
	323, 342, 154, 317, 244, 250, 165, 167, 166, 150,
	299, 321, 159, 170, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 201, 0, 0, 336, 365, 295,
	294, 0, 209, 0, 369, 351, 282, 371, 216, 141,
	0, 346, 153, 220, 318, 349, 194, 256, 174, 0,
	264, 0, 132, 278, 236, 237, 235, 238, 200, 361,
	372, 0, 280, 297, 320, 155, 311, 359, 360, 362,
	374, 288, 375, 376, 0, 230, 186, 189, 203, 211,
	0, 284, 312, 337, 0, 151, 144, 314, 330, 160,
	296, 298, 344, 0, 146, 0, 0, 240, 0, 0,
	0, 0, 145, 0, 0, 199, 0, 0, 0, 198,
	0, 328, 329, 173, 347, 0, 0, 147, 0, 0,
	253, 0, 252, 0, 324, 0, 241, 0, 0, 0,
	0, 239, 0, 221, 188, 205, 273, 227, 274, 206,
	248, 247, 249, 228, 0, 0, 143, 0, 309, 0,
	0, 313, 157, 0, 0, 319, 202, 279, 158, 195,
	187, 272, 251, 152, 208, 307, 219, 226, 0, 345,
	263, 287, 161, 334, 306, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 378, 0,
	0, 0, 169, 352, 353, 354, 355, 357, 366, 367,
	0, 0, 0, 0, 0, 0, 482, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 134, 148, 223, 0, 281, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 335, 177, 0, 0, 0, 242, 0, 149, 156,
	162, 176, 185, 192, 204, 207, 212, 213, 214, 217,
	229, 231, 232, 233, 234, 254, 255, 258, 259, 261,
	262, 265, 266, 267, 269, 270, 271, 277, 373, 283,
	289, 290, 291, 292, 293, 300, 301, 302, 303, 310,
	326, 327, 340, 341, 316, 0, 131, 135, 138, 139,
	350, 140, 142, 184, 191, 260, 137, 0, 0, 481,
	268, 0, 0, 0, 180, 0, 0, 0, 0, 0,
	0, 0, 179, 171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 224, 0, 368, 338, 308,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 670,
	0, 0, 0, 0, 0, 0, 0, 0, 356, 0,
	0, 0, 0, 370, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 333, 0,
	0, 0, 0, 276, 196, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 0, 0, 0, 0, 215, 379,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 130,
	0, 164, 0, 257, 0, 0, 363, 133, 0, 0,
	0, 172, 358, 286, 0, 332, 364, 0, 285, 225,
	325, 0, 0, 331, 0, 315, 339, 343, 190, 0,
	163, 305, 181, 178, 0, 0, 0, 197, 275, 175,
	218, 0, 0, 0, 168, 0, 0, 0, 304, 322,
	136, 243, 323, 342, 154, 317, 244, 250, 165, 167,
	166, 150, 299, 321, 159, 170, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 210, 201, 0, 0, 336,
	365, 295, 294, 0, 209, 0, 369, 351, 282, 371,
	216, 141, 0, 346, 153, 220, 318, 349, 194, 256,
	174, 0, 264, 0, 132, 278, 236, 237, 235, 238,
	200, 361, 372, 0, 280, 297, 320, 155, 311, 359,
	360, 362, 374, 288, 375, 376, 0, 230, 186, 189,
	203, 211, 0, 284, 312, 337, 0, 151, 144, 314,
	330, 160, 296, 298, 344, 0, 146, 0, 0, 240,
	0, 0, 0, 0, 145, 0, 0, 199, 0, 0,
	0, 198, 0, 328, 329, 173, 347, 0, 0, 147,
	0, 0, 253, 0, 252, 0, 324, 0, 241, 0,
	0, 0, 0, 239, 0, 221, 188, 205, 273, 227,
	274, 206, 248, 247, 249, 228, 0, 0, 143, 0,
	309, 0, 0, 313, 157, 0, 0, 319, 202, 279,
	158, 195, 187, 272, 251, 152, 208, 307, 219, 226,
	0, 345, 263, 287, 161, 334, 306, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	378, 0, 0, 0, 169, 352, 353, 354, 355, 357,
	366, 367, 0, 0, 0, 0, 0, 0, 482, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 134, 148, 223, 0, 281, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 335, 177, 0, 0, 0, 242, 0,
	149, 156, 162, 176, 185, 192, 204, 207, 212, 213,
	214, 217, 229, 231, 232, 233, 234, 254, 255, 258,
	259, 261, 262, 265, 266, 267, 269, 270, 271, 277,
	373, 283, 289, 290, 291, 292, 293, 300, 301, 302,
	303, 310, 326, 327, 340, 341, 316, 0, 131, 135,
	138, 139, 350, 140, 142, 184, 191, 260, 137, 0,
	0, 481, 268, 0, 0, 0, 180, 0, 0, 0,
	0, 0, 0, 0, 179, 171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 224, 0, 368,
	338, 308, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 458, 0, 457, 0, 0, 0, 0, 0, 0,
	356, 0, 0, 0, 0, 370, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	333, 0, 0, 0, 0, 276, 196, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	215, 379, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 130, 0, 164, 0, 257, 0, 0, 363, 133,
	0, 0, 0, 172, 358, 286, 0, 332, 364, 0,
	285, 225, 325, 0, 0, 331, 0, 315, 339, 343,
	190, 0, 163, 305, 181, 178, 0, 0, 0, 197,
	275, 175, 218, 0, 0, 0, 168, 0, 0, 0,
	304, 322, 136, 243, 323, 342, 154, 317, 244, 250,
	165, 167, 166, 150, 299, 321, 159, 170, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 210, 201, 0,
	0, 336, 365, 295, 294, 0, 209, 0, 369, 351,
	282, 371, 216, 141, 0, 346, 153, 220, 318, 349,
	194, 256, 174, 0, 264, 0, 132, 278, 236, 237,
	235, 238, 200, 361, 372, 0, 280, 297, 320, 155,
	311, 359, 360, 362, 374, 288, 375, 376, 0, 230,
	186, 189, 203, 211, 0, 284, 312, 337, 0, 151,
	144, 314, 330, 160, 296, 298, 344, 0, 146, 0,
	0, 240, 0, 0, 0, 0, 145, 0, 0, 199,
	0, 0, 0, 198, 0, 328, 329, 173, 347, 0,
	0, 147, 0, 0, 253, 0, 252, 0, 324, 0,
	241, 0, 0, 0, 0, 239, 0, 221, 188, 205,
	273, 227, 274, 206, 248, 247, 249, 228, 0, 0,
	143, 0, 309, 0, 0, 313, 157, 0, 0, 319,
	202, 279, 158, 195, 187, 272, 251, 152, 208, 307,
	219, 226, 0, 345, 263, 287, 161, 334, 306, 182,
	0, 0, 0, 1165, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 377, 378, 0, 0, 0, 169, 352, 353, 354,
	355, 357, 366, 367, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 134, 148, 223, 0,
	281, 193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 335, 177, 0, 0, 0,
	242, 0, 149, 156, 162, 176, 185, 192, 204, 207,
	212, 213, 214, 217, 229, 231, 232, 233, 234, 254,
	255, 258, 259, 261, 262, 265, 266, 267, 269, 270,
	271, 277, 373, 283, 289, 290, 291, 292, 293, 300,
	301, 302, 303, 310, 326, 327, 340, 341, 316, 0,
	131, 135, 138, 139, 350, 140, 142, 184, 191, 260,
	137, 0, 0, 0, 268, 0, 0, 0, 180, 1028,
	0, 0, 0, 0, 0, 0, 179, 171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 368, 338, 308, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 670, 0, 1027, 0, 0, 0, 0,
	0, 0, 356, 0, 0, 0, 0, 370, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 333, 0, 0, 0, 0, 276, 196, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 215, 379, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 130, 0, 164, 0, 257, 0, 0,
	363, 133, 0, 0, 0, 172, 358, 286, 0, 332,
	364, 0, 285, 225, 325, 0, 0, 331, 0, 315,
	339, 343, 190, 0, 163, 305, 181, 178, 0, 0,
	0, 197, 275, 175, 218, 0, 0, 0, 168, 0,
	0, 0, 304, 322, 136, 243, 323, 342, 154, 317,
	244, 250, 165, 167, 166, 150, 299, 321, 159, 170,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 210,
	201, 0, 0, 336, 365, 295, 294, 0, 209, 0,
	369, 351, 282, 371, 216, 141, 0, 346, 153, 220,
	318, 349, 194, 256, 174, 0, 264, 0, 132, 278,
	236, 237, 235, 238, 200, 361, 372, 0, 280, 297,
	320, 155, 311, 359, 360, 362, 374, 288, 375, 376,
	0, 230, 186, 189, 203, 211, 0, 284, 312, 337,
	0, 151, 144, 314, 330, 160, 296, 298, 344, 0,
	146, 0, 0, 240, 0, 0, 0, 0, 145, 0,
	0, 199, 0, 0, 0, 198, 0, 328, 329, 173,
	347, 0, 0, 147, 0, 0, 253, 0, 252, 0,
	324, 0, 241, 0, 0, 0, 0, 239, 0, 221,
	188, 205, 273, 227, 274, 206, 248, 247, 249, 228,
	0, 0, 143, 0, 309, 0, 0, 313, 157, 0,
	0, 319, 202, 279, 158, 195, 187, 272, 251, 152,
	208, 307, 219, 226, 0, 345, 263, 287, 161, 334,
	306, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 378, 0, 0, 0, 169, 352,
	353, 354, 355, 357, 366, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 134, 148,
	223, 0, 281, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 335, 177, 0,
	0, 0, 242, 0, 149, 156, 162, 176, 185, 192,
	204, 207, 212, 213, 214, 217, 229, 231, 232, 233,
	234, 254, 255, 258, 259, 261, 262, 265, 266, 267,
	269, 270, 271, 277, 373, 283, 289, 290, 291, 292,
	293, 300, 301, 302, 303, 310, 326, 327, 340, 341,
	316, 0, 131, 135, 138, 139, 350, 140, 142, 184,
	191, 260, 137, 0, 0, 0, 268, 0, 0, 0,
	180, 0, 0, 0, 0, 0, 0, 0, 179, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 224, 0, 368, 338, 308, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 458, 0, 457, 0, 0,
	0, 0, 0, 0, 356, 0, 0, 0, 0, 370,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 333, 0, 0, 0, 0, 276,
	196, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 0, 0, 0, 215, 379, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 130, 0, 164, 0, 257,
	0, 0, 363, 133, 0, 0, 0, 172, 358, 286,
	0, 332, 364, 0, 285, 225, 325, 0, 0, 331,
	0, 315, 339, 343, 190, 0, 163, 305, 181, 178,
	0, 0, 0, 197, 275, 175, 218, 0, 0, 0,
	168, 0, 0, 0, 304, 322, 136, 243, 323, 342,
	154, 317, 244, 250, 165, 167, 166, 150, 299, 321,
	159, 170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 210, 201, 0, 0, 336, 365, 295, 294, 0,
	209, 0, 369, 351, 282, 371, 216, 141, 0, 346,
	153, 220, 318, 349, 194, 256, 174, 0, 264, 0,
	132, 278, 236, 237, 235, 238, 200, 361, 372, 0,
	280, 297, 320, 155, 311, 359, 360, 362, 374, 288,
	375, 376, 0, 230, 186, 189, 203, 211, 0, 284,
	312, 337, 0, 151, 144, 314, 330, 160, 296, 298,
	344, 0, 146, 0, 0, 240, 0, 0, 0, 0,
	145, 0, 0, 199, 0, 0, 0, 198, 0, 328,
	329, 173, 347, 0, 0, 147, 0, 0, 253, 0,
	252, 0, 324, 0, 241, 0, 0, 0, 0, 239,
	0, 221, 188, 205, 273, 227, 274, 206, 248, 247,
	249, 228, 0, 0, 143, 0, 309, 0, 0, 313,
	157, 0, 0, 319, 202, 279, 158, 195, 187, 272,
	251, 152, 208, 307, 219, 226, 0, 345, 263, 287,
	161, 334, 306, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 378, 0, 0, 0,
	169, 352, 353, 354, 355, 357, 366, 367, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	134, 148, 223, 0, 281, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 335,
	177, 0, 0, 0, 242, 0, 149, 156, 162, 176,
	185, 192, 204, 207, 212, 213, 214, 217, 229, 231,
	232, 233, 234, 254, 255, 258, 259, 261, 262, 265,
	266, 267, 269, 270, 271, 277, 373, 283, 289, 290,
	291, 292, 293, 300, 301, 302, 303, 310, 326, 327,
	340, 341, 316, 0, 131, 135, 138, 139, 350, 140,
	142, 184, 191, 260, 137, 0, 0, 0, 268, 0,
	0, 0, 180, 0, 0, 0, 0, 0, 0, 0,
	179, 171, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 224, 0, 368, 338, 308, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 81, 0, 0, 0, 1007, 0, 0,
	0, 0, 0, 0, 0, 0, 356, 0, 0, 0,
	0, 370, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 333, 0, 0, 0,
	0, 276, 196, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 0, 0, 0, 0, 215, 379, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 130, 0, 164,
	0, 257, 0, 0, 363, 133, 0, 0, 0, 172,
	358, 286, 0, 332, 364, 0, 285, 225, 325, 0,
	0, 331, 0, 315, 339, 343, 190, 0, 163, 305,
	181, 178, 0, 0, 0, 197, 275, 175, 218, 0,
	0, 0, 168, 0, 0, 0, 304, 322, 136, 243,
	323, 342, 154, 317, 244, 250, 165, 167, 166, 150,
	299, 321, 159, 170, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 201, 0, 0, 336, 365, 295,
	294, 0, 209, 0, 369, 351, 282, 371, 216, 141,
	0, 346, 153, 220, 318, 349, 194, 256, 174, 0,
	264, 0, 132, 278, 236, 237, 235, 238, 200, 361,
	372, 0, 280, 297, 320, 155, 311, 359, 360, 362,
	374, 288, 375, 376, 0, 230, 186, 189, 203, 211,
	0, 284, 312, 337, 0, 151, 144, 314, 330, 160,
	296, 298, 344, 0, 146, 0, 0, 240, 0, 0,
	0, 0, 145, 0, 0, 199, 0, 0, 0, 198,
	0, 328, 329, 173, 347, 0, 0, 147, 0, 0,
	253, 0, 252, 0, 324, 0, 241, 0, 0, 0,
	0, 239, 0, 221, 188, 205, 273, 227, 274, 206,
	248, 247, 249, 228, 0, 0, 143, 0, 309, 0,
	0, 313, 157, 0, 0, 319, 202, 279, 158, 195,
	187, 272, 251, 152, 208, 307, 219, 226, 0, 345,
	263, 287, 161, 334, 306, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 378, 0,
	0, 0, 169, 352, 353, 354, 355, 357, 366, 367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 134, 148, 223, 0, 281, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 335, 177, 0, 0, 0, 242, 0, 149, 156,
	162, 176, 185, 192, 204, 207, 212, 213, 214, 217,
	229, 231, 232, 233, 234, 254, 255, 258, 259, 261,
	262, 265, 266, 267, 269, 270, 271, 277, 373, 283,
	289, 290, 291, 292, 293, 300, 301, 302, 303, 310,
	326, 327, 340, 341, 316, 0, 131, 135, 138, 139,
	350, 140, 142, 184, 191, 260, 137, 0, 0, 0,
	268, 0, 0, 0, 180, 0, 0, 0, 0, 0,
	0, 0, 179, 171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 224, 0, 368, 338, 308,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 670,
	0, 0, 0, 0, 0, 0, 0, 0, 356, 0,
	0, 0, 0, 370, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 333, 0,
	0, 0, 0, 276, 196, 0, 0, 0, 0, 0,
	0, 2345, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 0, 0, 0, 0, 215, 379,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 130,
	0, 164, 0, 257, 0, 0, 363, 133, 0, 0,
	0, 172, 358, 286, 0, 332, 364, 0, 285, 225,
	325, 0, 0, 331, 0, 315, 339, 343, 190, 0,
	163, 305, 181, 178, 0, 0, 0, 197, 275, 175,
	218, 0, 0, 0, 168, 0, 0, 0, 304, 322,
	136, 243, 323, 342, 154, 317, 244, 250, 165, 167,
	166, 150, 299, 321, 159, 170, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 210, 201, 0, 0, 336,
	365, 295, 294, 0, 209, 0, 369, 351, 282, 371,
	216, 141, 0, 346, 153, 220, 318, 349, 194, 256,
	174, 0, 264, 0, 132, 278, 236, 237, 235, 238,
	200, 361, 372, 0, 280, 297, 320, 155, 311, 359,
	360, 362, 374, 288, 375, 376, 0, 230, 186, 189,
	203, 211, 0, 284, 312, 337, 0, 151, 144, 314,
	330, 160, 296, 298, 344, 0, 146, 0, 0, 240,
	0, 0, 0, 0, 145, 0, 0, 199, 0, 0,
	0, 198, 0, 328, 329, 173, 347, 0, 0, 147,
	0, 0, 253, 0, 252, 0, 324, 0, 241, 0,
	0, 0, 0, 239, 0, 221, 188, 205, 273, 227,
	274, 206, 248, 247, 249, 228, 0, 0, 143, 0,
	309, 0, 0, 313, 157, 0, 0, 319, 202, 279,
	158, 195, 187, 272, 251, 152, 208, 307, 219, 226,
	0, 345, 263, 287, 161, 334, 306, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	378, 0, 0, 0, 169, 352, 353, 354, 355, 357,
	366, 367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 134, 148, 223, 0, 281, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 335, 177, 0, 0, 0, 242, 0,
	149, 156, 162, 176, 185, 192, 204, 207, 212, 213,
	214, 217, 229, 231, 232, 233, 234, 254, 255, 258,
	259, 261, 262, 265, 266, 267, 269, 270, 271, 277,
	373, 283, 289, 290, 291, 292, 293, 300, 301, 302,
	303, 310, 326, 327, 340, 341, 316, 0, 131, 135,
	138, 139, 350, 140, 142, 184, 191, 260, 137, 0,
	0, 0, 268, 0, 0, 0, 180, 0, 0, 0,
	0, 0, 0, 0, 179, 171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 224, 0, 368,
	338, 308, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 81, 0, 0,
	0, 670, 0, 0, 0, 0, 0, 0, 0, 0,
	356, 0, 0, 0, 0, 370, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	333, 0, 0, 0, 0, 276, 196, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	215, 379, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 130, 0, 164, 0, 257, 0, 0, 363, 133,
	0, 0, 0, 172, 358, 286, 0, 332, 364, 0,
	285, 225, 325, 0, 0, 331, 0, 315, 339, 343,
	190, 0, 163, 305, 181, 178, 0, 0, 0, 197,
	275, 175, 218, 0, 0, 0, 168, 0, 0, 0,
	304, 322, 136, 243, 323, 342, 154, 317, 244, 250,
	165, 167, 166, 150, 299, 321, 159, 170, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 210, 201, 0,
	0, 336, 365, 295, 294, 0, 209, 0, 369, 351,
	282, 371, 216, 141, 0, 346, 153, 220, 318, 349,
	194, 256, 174, 0, 264, 0, 132, 278, 236, 237,
	235, 238, 200, 361, 372, 0, 280, 297, 320, 155,
	311, 359, 360, 362, 374, 288, 375, 376, 0, 230,
	186, 189, 203, 211, 0, 284, 312, 337, 0, 151,
	144, 314, 330, 160, 296, 298, 344, 0, 146, 0,
	0, 240, 0, 0, 0, 0, 145, 0, 0, 199,
	0, 0, 0, 198, 0, 328, 329, 173, 347, 0,
	0, 147, 0, 0, 253, 0, 252, 0, 324, 0,
	241, 0, 0, 0, 0, 239, 0, 221, 188, 205,
	273, 227, 274, 206, 248, 247, 249, 228, 0, 0,
	143, 0, 309, 0, 0, 313, 157, 0, 0, 319,
	202, 279, 158, 195, 187, 272, 251, 152, 208, 307,
	219, 226, 0, 345, 263, 287, 161, 334, 306, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 377, 378, 0, 0, 0, 169, 352, 353, 354,
	355, 357, 366, 367, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 134, 148, 223, 0,
	281, 193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 335, 177, 0, 0, 0,
	242, 0, 149, 156, 162, 176, 185, 192, 204, 207,
	212, 213, 214, 217, 229, 231, 232, 233, 234, 254,
	255, 258, 259, 261, 262, 265, 266, 267, 269, 270,
	271, 277, 373, 283, 289, 290, 291, 292, 293, 300,
	301, 302, 303, 310, 326, 327, 340, 341, 316, 0,
	131, 135, 138, 139, 350, 140, 142, 184, 191, 260,
	137, 0, 0, 0, 268, 0, 0, 0, 180, 0,
	0, 0, 0, 0, 0, 1854, 1855, 171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 368, 338, 308, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 670, 0, 0, 0, 0, 0, 0,
	0, 0, 356, 0, 0, 0, 0, 370, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 333, 0, 0, 0, 0, 276, 196, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 215, 379, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 130, 0, 164, 0, 257, 0, 0,
	363, 133, 0, 0, 0, 172, 358, 286, 0, 332,
	364, 0, 285, 225, 325, 0, 0, 331, 0, 315,
	339, 343, 190, 0, 163, 305, 181, 178, 0, 0,
	0, 197, 275, 175, 218, 0, 0, 0, 168, 0,
	0, 0, 304, 322, 136, 243, 323, 342, 154, 317,
	244, 250, 165, 167, 166, 150, 299, 321, 159, 170,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 210,
	201, 0, 0, 336, 365, 295, 294, 0, 209, 0,
	369, 351, 282, 371, 216, 141, 0, 346, 153, 220,
	318, 349, 194, 256, 174, 0, 264, 0, 132, 278,
	236, 237, 235, 238, 200, 361, 372, 0, 280, 297,
	320, 155, 311, 359, 360, 362, 374, 288, 375, 376,
	0, 230, 186, 189, 203, 211, 0, 284, 312, 337,
	0, 151, 144, 314, 330, 160, 296, 298, 344, 0,
	146, 0, 0, 240, 0, 0, 0, 0, 145, 0,
	0, 199, 0, 0, 0, 198, 0, 328, 329, 173,
	347, 0, 0, 147, 0, 0, 253, 0, 252, 0,
	324, 0, 241, 0, 0, 0, 0, 239, 0, 221,
	188, 205, 273, 227, 274, 206, 248, 247, 249, 228,
	0, 0, 143, 0, 309, 0, 0, 313, 157, 0,
	0, 319, 202, 279, 158, 195, 187, 272, 251, 152,
	208, 307, 219, 226, 0, 345, 263, 287, 161, 334,
	306, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 378, 0, 0, 0, 169, 352,
	353, 354, 355, 357, 366, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 134, 148,
	223, 0, 281, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 335, 177, 0,
	0, 0, 242, 0, 149, 156, 162, 176, 185, 192,
	204, 207, 212, 213, 214, 217, 229, 231, 232, 233,
	234, 254, 255, 258, 259, 261, 262, 265, 266, 267,
	269, 270, 271, 277, 373, 283, 289, 290, 291, 292,
	293, 300, 301, 302, 303, 310, 326, 327, 340, 341,
	316, 0, 131, 135, 138, 139, 350, 140, 142, 184,
	191, 260, 137, 0, 0, 0, 268, 0, 0, 0,
	180, 0, 0, 0, 0, 0, 0, 0, 179, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 224, 0, 368, 338, 308, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 670, 0, 0, 0, 0,
	0, 0, 0, 0, 356, 0, 0, 0, 0, 370,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 333, 0, 0, 0, 0, 276,
	196, 0, 0, 0, 0, 0, 0, 1817, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 0, 0, 0, 215, 379, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 130, 0, 164, 0, 257,
	0, 0, 363, 133, 0, 0, 0, 172, 358, 286,
	0, 332, 364, 0, 285, 225, 325, 0, 0, 331,
	0, 315, 339, 343, 190, 0, 163, 305, 181, 178,
	0, 0, 0, 197, 275, 175, 218, 0, 0, 0,
	168, 0, 0, 0, 304, 322, 136, 243, 323, 342,
	154, 317, 244, 250, 165, 167, 166, 150, 299, 321,
	159, 170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 210, 201, 0, 0, 336, 365, 295, 294, 0,
	209, 0, 369, 351, 282, 371, 216, 141, 0, 346,
	153, 220, 318, 349, 194, 256, 174, 0, 264, 0,
	132, 278, 236, 237, 235, 238, 200, 361, 372, 0,
	280, 297, 320, 155, 311, 359, 360, 362, 374, 288,
	375, 376, 0, 230, 186, 189, 203, 211, 0, 284,
	312, 337, 0, 151, 144, 314, 330, 160, 296, 298,
	344, 0, 146, 0, 0, 240, 0, 0, 0, 0,
	145, 0, 0, 199, 0, 0, 0, 198, 0, 328,
	329, 173, 347, 0, 0, 147, 0, 0, 253, 0,
	252, 0, 324, 0, 241, 0, 0, 0, 0, 239,
	0, 221, 188, 205, 273, 227, 274, 206, 248, 247,
	249, 228, 0, 0, 143, 0, 309, 0, 0, 313,
	157, 0, 0, 319, 202, 279, 158, 195, 187, 272,
	251, 152, 208, 307, 219, 226, 0, 345, 263, 287,
	161, 334, 306, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 378, 0, 0, 0,
	169, 352, 353, 354, 355, 357, 366, 367, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	134, 148, 223, 0, 281, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 335,
	177, 0, 0, 0, 242, 0, 149, 156, 162, 176,
	185, 192, 204, 207, 212, 213, 214, 217, 229, 231,
	232, 233, 234, 254, 255, 258, 259, 261, 262, 265,
	266, 267, 269, 270, 271, 277, 373, 283, 289, 290,
	291, 292, 293, 300, 301, 302, 303, 310, 326, 327,
	340, 341, 316, 0, 131, 135, 138, 139, 350, 140,
	142, 184, 191, 260, 137, 0, 0, 0, 268, 0,
	0, 0, 180, 0, 0, 0, 0, 0, 0, 0,
	179, 171, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 224, 0, 368, 338, 308, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 356, 0, 0, 0,
	0, 370, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 333, 0, 0, 0,
	0, 276, 196, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 0, 0, 0, 0, 215, 379, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 130, 0, 164,
	0, 257, 0, 0, 363, 133, 0, 0, 0, 172,
	358, 286, 0, 332, 364, 0, 285, 225, 325, 0,
	0, 331, 0, 315, 339, 343, 190, 0, 163, 305,
	181, 178, 0, 0, 0, 197, 275, 175, 218, 0,
	0, 0, 168, 0, 0, 0, 304, 322, 136, 243,
	323, 342, 154, 317, 244, 250, 165, 167, 166, 150,
	299, 321, 159, 170, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 201, 0, 0, 336, 365, 295,
	294, 0, 209, 0, 369, 351, 282, 371, 216, 141,
	0, 346, 153, 220, 318, 349, 194, 256, 174, 0,
	264, 0, 132, 278, 236, 237, 235, 238, 200, 361,
	372, 0, 280, 297, 320, 155, 311, 359, 360, 362,
	374, 288, 375, 376, 0, 230, 186, 189, 203, 211,
	0, 284, 312, 337, 0, 151, 144, 314, 330, 160,
	296, 298, 344, 0, 146, 0, 0, 240, 0, 0,
	0, 0, 145, 0, 0, 199, 0, 0, 0, 198,
	0, 328, 329, 173, 347, 0, 0, 147, 656, 0,
	253, 0, 252, 0, 324, 0, 241, 0, 0, 0,
	0, 239, 0, 221, 188, 205, 273, 227, 274, 206,
	248, 247, 249, 652, 0, 0, 143, 0, 309, 0,
	0, 313, 157, 0, 0, 319, 202, 279, 158, 195,
	187, 272, 657, 655, 646, 647, 219, 226, 0, 345,
	263, 287, 161, 334, 306, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 378, 0,
	0, 0, 169, 352, 353, 354, 355, 357, 366, 367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 134, 148, 223, 0, 281, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 335, 177, 0, 0, 0, 242, 0, 149, 156,
	162, 176, 185, 192, 204, 207, 212, 213, 214, 217,
	229, 231, 232, 233, 234, 254, 255, 258, 259, 261,
	262, 265, 266, 267, 269, 653, 654, 277, 373, 283,
	289, 290, 291, 292, 293, 300, 301, 302, 303, 310,
	326, 327, 340, 341, 316, 0, 131, 135, 138, 139,
	350, 140, 142, 184, 191, 260, 137, 0, 0, 0,
	268, 0, 0, 0, 180, 0, 0, 0, 0, 0,
	0, 0, 179, 171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 224, 0, 368, 338, 308,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 128,
	0, 0, 0, 0, 0, 0, 0, 0, 356, 0,
	0, 0, 0, 370, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 333, 0,
	0, 0, 0, 276, 196, 0, 0, 0, 0, 0,
	0, 1668, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 0, 0, 0, 0, 215, 379,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 130,
	0, 164, 0, 257, 0, 0, 363, 133, 0, 0,
	0, 172, 358, 286, 0, 332, 364, 0, 285, 225,
	325, 0, 0, 331, 0, 315, 339, 343, 190, 0,
	163, 305, 181, 178, 0, 0, 0, 197, 275, 175,
	218, 0, 0, 0, 168, 0, 0, 0, 304, 322,
	136, 243, 323, 342, 154, 317, 244, 250, 165, 167,
	166, 150, 299, 321, 159, 170, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 210, 201, 0, 0, 336,
	365, 295, 294, 0, 209, 0, 369, 351, 282, 371,
	216, 141, 0, 346, 153, 220, 318, 349, 194, 256,
	174, 0, 264, 0, 132, 278, 236, 237, 235, 238,
	200, 361, 372, 0, 280, 297, 320, 155, 311, 359,
	360, 362, 374, 288, 375, 376, 0, 230, 186, 189,
	203, 211, 0, 284, 312, 337, 0, 151, 144, 314,
	330, 160, 296, 298, 344, 0, 146, 0, 0, 240,
	0, 0, 0, 0, 145, 0, 0, 199, 0, 0,
	0, 198, 0, 328, 329, 173, 347, 0, 0, 147,
	0, 0, 253, 0, 252, 0, 324, 0, 241, 0,
	0, 0, 0, 239, 0, 221, 188, 205, 273, 227,
	274, 206, 248, 247, 249, 228, 0, 0, 143, 0,
	309, 0, 0, 313, 157, 0, 0, 319, 202, 279,
	158, 195, 187, 272, 251, 152, 208, 307, 219, 226,
	0, 345, 263, 287, 161, 334, 306, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	378, 0, 0, 0, 169, 352, 353, 354, 355, 357,
	366, 367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 134, 148, 223, 0, 281, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 335, 177, 0, 0, 0, 242, 0,
	149, 156, 162, 176, 185, 192, 204, 207, 212, 213,
	214, 217, 229, 231, 232, 233, 234, 254, 255, 258,
	259, 261, 262, 265, 266, 267, 269, 270, 271, 277,
	373, 283, 289, 290, 291, 292, 293, 300, 301, 302,
	303, 310, 326, 327, 340, 341, 316, 0, 131, 135,
	138, 139, 350, 140, 142, 184, 191, 260, 137, 0,
	0, 0, 268, 0, 0, 0, 180, 0, 0, 0,
	0, 0, 0, 0, 179, 171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 224, 0, 368,
	338, 308, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 128, 0, 0, 0, 0, 0, 0, 0, 0,
	356, 0, 0, 0, 0, 370, 995, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	333, 0, 0, 0, 0, 276, 196, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	215, 379, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 130, 0, 164, 0, 257, 0, 0, 363, 133,
	0, 0, 0, 172, 358, 286, 0, 332, 364, 0,
	285, 225, 325, 0, 0, 331, 0, 315, 339, 343,
	190, 0, 163, 305, 181, 178, 0, 0, 0, 197,
	275, 175, 218, 0, 0, 0, 168, 0, 0, 0,
	304, 322, 136, 243, 323, 342, 154, 317, 244, 250,
	165, 167, 166, 150, 299, 321, 159, 170, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 210, 201, 0,
	0, 336, 365, 295, 294, 0, 209, 0, 369, 351,
	282, 371, 216, 141, 0, 346, 153, 220, 318, 349,
	194, 256, 174, 0, 264, 0, 132, 278, 236, 237,
	235, 238, 200, 361, 372, 0, 280, 297, 320, 155,
	311, 359, 360, 362, 374, 288, 375, 376, 0, 230,
	186, 189, 203, 211, 0, 284, 312, 337, 0, 151,
	144, 314, 330, 160, 296, 298, 344, 0, 146, 0,
	0, 240, 0, 0, 0, 0, 145, 0, 0, 199,
	0, 0, 0, 198, 0, 328, 329, 173, 347, 0,
	0, 147, 0, 0, 253, 0, 252, 0, 324, 0,
	241, 0, 0, 0, 0, 239, 0, 221, 188, 205,
	273, 227, 274, 206, 248, 247, 249, 228, 0, 0,
	143, 0, 309, 0, 0, 313, 157, 0, 0, 319,
	202, 279, 158, 195, 187, 272, 251, 152, 208, 307,
	219, 226, 0, 345, 263, 287, 161, 334, 306, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 377, 378, 0, 0, 0, 169, 352, 353, 354,
	355, 357, 366, 367, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 134, 148, 223, 0,
	281, 193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 335, 177, 0, 0, 0,
	242, 0, 149, 156, 162, 176, 185, 192, 204, 207,
	212, 213, 214, 217, 229, 231, 232, 233, 234, 254,
	255, 258, 259, 261, 262, 265, 266, 267, 269, 270,
	271, 277, 373, 283, 289, 290, 291, 292, 293, 300,
	301, 302, 303, 310, 326, 327, 340, 341, 316, 0,
	131, 135, 138, 139, 350, 140, 142, 184, 191, 260,
	137, 0, 0, 0, 268, 0, 0, 0, 180, 0,
	0, 0, 0, 0, 0, 0, 179, 171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 368, 338, 308, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 670, 0, 0, 0, 0, 0, 0,
	0, 0, 356, 0, 0, 0, 0, 370, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 333, 0, 0, 0, 0, 276, 196, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 215, 379, 0, 0, 0, 0, 0, 0,
	0, 222, 672, 130, 0, 668, 0, 257, 0, 0,
	363, 133, 0, 0, 0, 172, 358, 286, 0, 332,
	364, 0, 285, 225, 325, 0, 0, 331, 0, 315,
	339, 343, 190, 0, 163, 305, 181, 178, 0, 0,
	0, 197, 275, 175, 218, 0, 0, 0, 168, 0,
	0, 0, 304, 322, 136, 243, 323, 342, 154, 317,
	244, 250, 165, 167, 166, 150, 299, 321, 159, 170,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 210,
	201, 0, 0, 336, 365, 295, 294, 0, 209, 0,
	369, 351, 282, 371, 216, 141, 0, 346, 153, 220,
	318, 349, 194, 256, 174, 0, 264, 0, 132, 278,
	236, 237, 235, 238, 200, 361, 372, 0, 280, 297,
	320, 155, 311, 359, 360, 362, 374, 288, 375, 376,
	0, 230, 186, 189, 203, 211, 0, 284, 312, 337,
	0, 151, 144, 314, 330, 160, 296, 298, 344, 0,
	146, 0, 0, 240, 0, 0, 0, 0, 145, 0,
	0, 199, 0, 0, 0, 198, 0, 328, 329, 173,
	347, 0, 0, 147, 0, 0, 253, 0, 252, 0,
	324, 0, 241, 0, 0, 0, 0, 239, 0, 221,
	188, 205, 273, 227, 274, 206, 248, 247, 249, 228,
	0, 0, 143, 0, 309, 0, 0, 313, 157, 0,
	0, 319, 202, 279, 158, 195, 187, 272, 251, 152,
	208, 307, 219, 226, 0, 345, 263, 287, 161, 334,
	306, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 378, 0, 0, 0, 169, 352,
	353, 354, 355, 357, 366, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 134, 148,
	223, 0, 281, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 335, 177, 0,
	0, 0, 242, 0, 149, 156, 162, 176, 185, 192,
	204, 207, 212, 213, 214, 217, 229, 231, 232, 233,
	234, 254, 255, 258, 259, 261, 262, 265, 266, 267,
	269, 270, 271, 277, 373, 283, 289, 290, 291, 292,
	293, 300, 301, 302, 303, 310, 326, 327, 340, 341,
	316, 0, 131, 135, 138, 139, 350, 140, 142, 184,
	191, 260, 137, 0, 0, 0, 268, 0, 0, 0,
	180, 0, 0, 0, 0, 0, 0, 0, 179, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 224, 0, 368, 338, 308, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 500, 0, 0, 0, 0,
	0, 0, 0, 0, 356, 0, 0, 0, 0, 370,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 333, 0, 0, 0, 0, 276,
	196, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 0, 0, 0, 215, 379, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 130, 0, 164, 0, 257,
	0, 0, 363, 133, 0, 0, 0, 172, 358, 286,
	0, 332, 364, 0, 285, 225, 325, 0, 0, 331,
	0, 315, 339, 343, 190, 0, 163, 305, 181, 178,
	0, 0, 0, 197, 275, 175, 218, 0, 0, 0,
	168, 0, 0, 0, 304, 322, 136, 243, 323, 342,
	154, 317, 244, 250, 165, 167, 166, 150, 299, 321,
	159, 170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 210, 201, 0, 0, 336, 365, 295, 294, 0,
	209, 0, 369, 351, 282, 371, 216, 141, 0, 346,
	153, 220, 318, 349, 194, 256, 174, 0, 264, 0,
	132, 278, 236, 237, 235, 238, 200, 361, 372, 0,
	280, 297, 320, 155, 311, 359, 360, 362, 374, 288,
	375, 376, 0, 230, 186, 189, 203, 211, 0, 284,
	312, 337, 0, 151, 144, 314, 643, 160, 296, 298,
	344, 0, 146, 0, 0, 240, 0, 0, 0, 0,
	145, 0, 0, 199, 0, 0, 0, 198, 0, 328,
	329, 173, 347, 0, 0, 147, 656, 0, 253, 0,
	252, 0, 324, 0, 241, 0, 0, 0, 0, 239,
	0, 221, 188, 205, 273, 227, 274, 206, 248, 247,
	249, 652, 0, 0, 143, 0, 309, 0, 0, 313,
	157, 0, 0, 319, 202, 279, 158, 195, 187, 272,
	657, 655, 646, 647, 219, 226, 0, 345, 263, 287,
	161, 334, 306, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 378, 0, 0, 0,
	169, 352, 353, 354, 355, 357, 366, 367, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	134, 148, 223, 0, 281, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 335,
	177, 0, 0, 0, 242, 0, 149, 156, 162, 176,
	185, 192, 204, 207, 212, 213, 214, 217, 229, 231,
	232, 233, 234, 254, 255, 258, 259, 261, 262, 265,
	266, 267, 269, 653, 654, 277, 373, 283, 289, 290,
	291, 292, 293, 300, 301, 302, 303, 310, 326, 327,
	340, 341, 0, 0, 131, 135, 138, 139, 350, 140,
	142, 184, 191, 316, 137, 0, 0, 636, 268, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 0, 0, 0, 0, 0, 0,
	0, 179, 171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 368, 338, 308, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 128, 0,
	0, 0, 0, 0, 0, 0, 0, 356, 0, 0,
	0, 0, 370, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 0,
	0, 0, 276, 196, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 215, 379, 0,
	0, 0, 0, 0, 0, 0, 222, 0, 130, 0,
	164, 0, 257, 0, 0, 363, 133, 0, 0, 0,
	172, 358, 286, 0, 332, 364, 0, 285, 225, 325,
	0, 0, 331, 0, 315, 339, 343, 190, 0, 163,
	305, 181, 178, 0, 0, 0, 197, 275, 175, 218,
	0, 0, 0, 168, 0, 0, 0, 304, 322, 136,
	243, 323, 342, 154, 317, 244, 250, 165, 167, 166,
	150, 299, 321, 159, 170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 201, 0, 0, 336, 365,
	295, 294, 0, 209, 0, 369, 351, 282, 371, 216,
	141, 0, 346, 153, 220, 318, 349, 194, 256, 174,
	0, 264, 0, 132, 278, 236, 237, 235, 238, 200,
	361, 372, 0, 280, 297, 320, 155, 311, 359, 360,
	362, 374, 288, 375, 376, 0, 230, 186, 189, 203,
	211, 0, 284, 312, 337, 0, 151, 144, 314, 330,
	160, 296, 298, 344, 0, 146, 0, 0, 240, 0,
	0, 0, 0, 145, 0, 0, 199, 0, 0, 0,
	198, 0, 328, 329, 173, 347, 0, 0, 147, 0,
	0, 253, 0, 252, 0, 324, 0, 241, 0, 0,
	0, 0, 239, 0, 221, 188, 205, 273, 227, 274,
	206, 248, 247, 249, 228, 0, 0, 143, 0, 309,
	0, 0, 313, 157, 0, 0, 319, 202, 279, 158,
	195, 187, 272, 251, 152, 208, 307, 219, 226, 0,
	345, 263, 287, 161, 334, 306, 182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 378,
	0, 0, 0, 169, 352, 353, 354, 355, 357, 366,
	367, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 134, 148, 223, 0, 281, 193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 335, 177, 0, 0, 0, 242, 0, 149,
	156, 162, 176, 185, 192, 204, 207, 212, 213, 214,
	217, 229, 231, 232, 233, 234, 254, 255, 258, 259,
	261, 262, 265, 266, 267, 269, 270, 271, 277, 373,
	283, 289, 290, 291, 292, 293, 300, 301, 302, 303,
	310, 326, 327, 340, 341, 316, 0, 131, 135, 138,
	139, 350, 140, 142, 184, 191, 260, 137, 0, 0,
	0, 268, 0, 0, 0, 180, 0, 0, 0, 0,
	0, 0, 0, 179, 171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 0, 368, 338,
	308, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	128, 0, 0, 0, 0, 0, 0, 0, 0, 356,
	0, 0, 0, 0, 370, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 333,
	0, 0, 0, 0, 276, 196, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 0, 125, 0, 215,
	379, 0, 0, 0, 0, 0, 0, 0, 222, 0,
	130, 0, 164, 0, 257, 0, 0, 363, 133, 0,
	0, 0, 172, 358, 286, 0, 332, 364, 0, 285,
	225, 325, 0, 0, 331, 0, 315, 339, 343, 190,
	0, 163, 305, 181, 178, 0, 0, 0, 197, 275,
	175, 218, 0, 0, 0, 168, 0, 0, 0, 304,
	322, 136, 243, 323, 342, 154, 317, 244, 250, 165,
	167, 166, 150, 299, 321, 159, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 210, 201, 0, 0,
	336, 365, 295, 294, 0, 209, 0, 369, 351, 282,
	371, 216, 141, 0, 346, 153, 220, 318, 349, 194,
	256, 174, 0, 264, 0, 132, 278, 236, 237, 235,
	238, 200, 361, 372, 0, 280, 297, 320, 155, 311,
	359, 360, 362, 374, 288, 375, 376, 0, 230, 186,
	189, 203, 211, 0, 284, 312, 337, 0, 151, 144,
	314, 330, 160, 296, 298, 344, 0, 146, 0, 0,
	240, 0, 0, 0, 0, 145, 0, 0, 199, 0,
	0, 0, 198, 0, 328, 329, 173, 347, 0, 0,
	147, 0, 0, 253, 0, 252, 0, 324, 0, 241,
	0, 0, 0, 0, 239, 0, 221, 188, 205, 273,
	227, 274, 206, 248, 247, 249, 228, 0, 0, 143,
	0, 309, 0, 0, 313, 157, 0, 0, 319, 202,
	279, 158, 195, 187, 272, 251, 152, 208, 307, 219,
	226, 0, 345, 263, 287, 161, 334, 306, 182, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 378, 0, 0, 0, 169, 352, 353, 354, 355,
	357, 366, 367, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 134, 148, 223, 0, 281,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 335, 177, 0, 0, 0, 242,
	0, 149, 156, 162, 176, 185, 192, 204, 207, 212,
	213, 214, 217, 229, 231, 232, 233, 234, 254, 255,
	258, 259, 261, 262, 265, 266, 267, 269, 270, 271,
	277, 373, 283, 289, 290, 291, 292, 293, 300, 301,
	302, 303, 310, 326, 327, 340, 341, 316, 0, 131,
	135, 138, 139, 350, 140, 142, 184, 191, 260, 137,
	0, 0, 0, 268, 0, 0, 0, 180, 0, 0,
	0, 0, 0, 0, 0, 179, 171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 224, 0,
	368, 338, 308, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 670, 0, 0, 0, 0, 0, 0, 0,
	0, 356, 0, 0, 0, 0, 370, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 333, 0, 0, 0, 0, 276, 196, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 0, 0, 0,
	0, 215, 379, 0, 0, 0, 0, 0, 0, 0,
	222, 0, 130, 0, 164, 0, 257, 0, 0, 363,
	133, 0, 0, 0, 172, 358, 286, 0, 332, 364,
	0, 285, 225, 325, 0, 0, 331, 0, 315, 339,
	343, 190, 0, 163, 305, 181, 178, 0, 0, 0,
	197, 275, 175, 218, 0, 0, 0, 168, 0, 0,
	0, 304, 322, 136, 243, 323, 342, 154, 317, 244,
	250, 165, 167, 166, 150, 299, 321, 159, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 201,
	0, 0, 336, 365, 295, 294, 0, 209, 0, 369,
	351, 282, 371, 216, 141, 0, 346, 153, 220, 318,
	349, 194, 256, 174, 0, 264, 0, 132, 278, 236,
	237, 235, 238, 200, 361, 372, 0, 280, 297, 320,
	155, 311, 359, 360, 362, 374, 288, 375, 376, 0,
	230, 186, 189, 203, 211, 0, 284, 312, 337, 0,
	151, 144, 314, 330, 160, 296, 298, 344, 0, 146,
	0, 0, 240, 0, 0, 0, 0, 145, 0, 0,
	199, 0, 0, 0, 198, 0, 328, 329, 173, 347,
	0, 0, 147, 0, 0, 253, 0, 252, 0, 324,
	0, 241, 0, 0, 0, 0, 239, 0, 221, 188,
	205, 273, 227, 274, 206, 248, 247, 249, 228, 0,
	0, 143, 0, 309, 0, 0, 313, 157, 0, 0,
	319, 202, 279, 158, 195, 187, 272, 251, 152, 208,
	307, 219, 226, 0, 345, 263, 287, 161, 334, 306,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 378, 0, 0, 0, 169, 352, 353,
	354, 355, 357, 366, 367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 134, 148, 223,
	0, 281, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 335, 177, 0, 0,
	0, 242, 0, 149, 156, 162, 176, 185, 192, 204,
	207, 212, 213, 214, 217, 229, 231, 232, 233, 234,
	254, 255, 258, 259, 261, 262, 265, 266, 267, 269,
	270, 271, 277, 373, 283, 289, 290, 291, 292, 293,
	300, 301, 302, 303, 310, 326, 327, 340, 341, 316,
	0, 131, 135, 138, 139, 350, 140, 142, 184, 191,
	260, 137, 0, 0, 0, 268, 0, 0, 0, 180,
	0, 0, 0, 0, 0, 0, 0, 179, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	224, 0, 368, 338, 308, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 128, 0, 0, 0, 0, 0,
	0, 0, 0, 356, 0, 0, 0, 0, 370, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 333, 0, 0, 0, 0, 276, 196,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 0,
	0, 0, 0, 215, 379, 0, 0, 0, 0, 0,
	0, 0, 222, 0, 130, 0, 164, 0, 257, 0,
	0, 363, 133, 0, 0, 0, 172, 358, 286, 0,
	332, 364, 0, 285, 225, 325, 0, 0, 331, 0,
	315, 339, 343, 190, 0, 163, 305, 181, 178, 0,
	0, 0, 197, 275, 175, 218, 0, 0, 0, 168,
	0, 0, 0, 304, 322, 136, 243, 323, 342, 154,
	317, 244, 250, 165, 167, 166, 150, 299, 321, 159,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 201, 0, 0, 336, 365, 295, 294, 0, 209,
	0, 369, 351, 282, 371, 216, 141, 0, 346, 153,
	220, 318, 349, 194, 256, 174, 0, 264, 0, 132,
	278, 236, 237, 235, 238, 200, 361, 372, 0, 280,
	297, 320, 155, 311, 359, 360, 362, 374, 288, 375,
	376, 0, 230, 186, 189, 203, 211, 0, 284, 312,
	337, 0, 151, 144, 314, 330, 160, 296, 298, 344,
	0, 146, 0, 0, 240, 0, 0, 0, 0, 145,
	0, 0, 199, 0, 0, 0, 198, 0, 328, 329,
	173, 347, 0, 0, 147, 0, 0, 253, 0, 252,
	0, 324, 0, 241, 0, 0, 0, 0, 239, 0,
	221, 188, 205, 273, 227, 274, 206, 248, 247, 249,
	228, 0, 0, 143, 0, 309, 0, 0, 313, 157,
	0, 0, 319, 202, 279, 158, 195, 187, 272, 251,
	152, 208, 307, 219, 226, 0, 345, 263, 287, 161,
	334, 306, 182, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 378, 0, 0, 0, 169,
	352, 353, 354, 355, 357, 366, 367, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 134,
	148, 223, 0, 281, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 335, 177,
	0, 0, 0, 242, 0, 149, 156, 162, 176, 185,
	192, 204, 207, 212, 213, 214, 217, 229, 231, 232,
	233, 234, 254, 255, 258, 259, 261, 262, 265, 266,
	267, 269, 270, 271, 277, 373, 283, 289, 290, 291,
	292, 293, 300, 301, 302, 303, 310, 326, 327, 340,
	341, 316, 0, 131, 135, 138, 139, 350, 140, 142,
	184, 191, 260, 137, 0, 0, 0, 268, 0, 0,
	0, 180, 0, 0, 0, 0, 0, 0, 0, 179,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 224, 0, 368, 338, 308, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 500, 0, 0, 0,
	0, 0, 0, 0, 0, 356, 0, 0, 0, 0,
	370, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 333, 0, 0, 0, 0,
	276, 196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 215, 379, 0, 0, 0,
	0, 0, 0, 0, 222, 0, 130, 0, 164, 0,
	257, 0, 0, 363, 133, 0, 0, 0, 172, 358,
	286, 0, 332, 364, 0, 285, 225, 325, 0, 0,
	331, 0, 315, 339, 343, 190, 0, 163, 305, 181,
	178, 0, 0, 0, 197, 275, 175, 218, 0, 0,
	0, 168, 0, 0, 0, 304, 322, 136, 243, 323,
	342, 154, 317, 244, 250, 165, 167, 166, 150, 299,
	321, 159, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 201, 0, 0, 336, 365, 295, 294,
	0, 209, 0, 369, 351, 282, 371, 216, 141, 0,
	346, 153, 220, 318, 349, 194, 256, 174, 0, 264,
	0, 132, 278, 236, 237, 235, 238, 200, 361, 372,
	0, 280, 297, 320, 155, 311, 359, 360, 362, 374,
	288, 375, 376, 0, 230, 186, 189, 203, 211, 0,
	284, 312, 337, 0, 151, 144, 314, 330, 160, 296,
	298, 344, 0, 146, 0, 0, 240, 0, 0, 0,
	0, 145, 0, 0, 199, 0, 0, 0, 198, 0,
	328, 329, 173, 347, 0, 0, 147, 0, 0, 253,
	0, 252, 0, 324, 0, 241, 0, 0, 0, 0,
	239, 0, 221, 188, 205, 273, 227, 274, 206, 248,
	247, 249, 228, 0, 0, 143, 0, 309, 0, 0,
	313, 157, 0, 0, 319, 202, 279, 158, 195, 187,
	272, 251, 152, 208, 307, 219, 226, 0, 345, 263,
	287, 161, 334, 306, 182, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 378, 0, 0,
	0, 169, 352, 353, 354, 355, 357, 366, 367, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 134, 148, 223, 0, 281, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	335, 177, 0, 0, 0, 242, 0, 149, 156, 162,
	176, 185, 192, 204, 207, 212, 213, 214, 217, 229,
	231, 232, 233, 234, 254, 255, 258, 259, 261, 262,
	265, 266, 267, 269, 270, 271, 277, 373, 283, 289,
	290, 291, 292, 293, 300, 301, 302, 303, 310, 326,
	327, 340, 341, 316, 0, 131, 135, 138, 139, 350,
	140, 142, 184, 191, 260, 137, 0, 0, 0, 268,
	0, 0, 0, 180, 0, 0, 0, 0, 0, 0,
	0, 179, 171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 368, 338, 308, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 500, 0,
	0, 0, 0, 0, 0, 0, 0, 356, 0, 0,
	0, 0, 370, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 0,
	0, 0, 276, 196, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 215, 379, 0,
	0, 0, 0, 0, 0, 0, 222, 0, 130, 0,
	164, 0, 257, 0, 0, 363, 133, 0, 0, 0,
	172, 358, 286, 0, 332, 364, 0, 285, 225, 325,
	0, 0, 331, 0, 315, 339, 343, 190, 0, 163,
	305, 181, 178, 0, 0, 0, 197, 275, 175, 218,
	0, 0, 0, 168, 0, 0, 0, 304, 322, 136,
	243, 323, 342, 154, 317, 244, 250, 165, 167, 166,
	150, 299, 321, 159, 170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 201, 0, 0, 336, 365,
	295, 294, 0, 209, 0, 369, 351, 282, 371, 216,
	141, 0, 346, 153, 220, 318, 349, 194, 256, 174,
	0, 264, 0, 132, 278, 236, 237, 235, 238, 200,
	361, 372, 0, 280, 297, 320, 155, 311, 359, 360,
	362, 374, 288, 375, 376, 0, 230, 186, 189, 203,
	211, 0, 284, 312, 337, 0, 151, 144, 314, 1022,
	160, 296, 298, 344, 0, 146, 0, 0, 240, 0,
	0, 0, 0, 145, 0, 0, 199, 0, 0, 0,
	198, 0, 328, 329, 173, 347, 0, 0, 147, 0,
	0, 253, 0, 252, 0, 324, 0, 241, 0, 0,
	0, 0, 239, 0, 221, 188, 205, 273, 227, 274,
	206, 248, 247, 249, 228, 0, 0, 143, 0, 309,
	0, 0, 313, 157, 0, 0, 319, 202, 279, 158,
	195, 187, 272, 251, 152, 208, 307, 219, 226, 0,
	345, 263, 287, 161, 334, 306, 182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 378,
	0, 0, 0, 169, 352, 353, 354, 355, 357, 366,
	367, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 134, 148, 223, 0, 281, 193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 335, 177, 0, 0, 0, 242, 0, 149,
	156, 162, 176, 185, 192, 204, 207, 212, 213, 214,
	217, 229, 231, 232, 233, 234, 254, 255, 258, 259,
	261, 262, 265, 266, 267, 269, 270, 271, 277, 373,
	283, 289, 290, 291, 292, 293, 300, 301, 302, 303,
	310, 326, 327, 340, 341, 0, 0, 131, 135, 138,
	139, 350, 140, 142, 184, 191, 0, 137, 0, 0,
	0, 268,
}

var yyPact = [...]int{
	4038, -1000, -410, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2011, -1000, -1000, -1000, -1000,
	-1000, -1000, 1081, 260, -1000, 283, 144, 36268, 661, 4938,
	37432, -1000, -1000, -1000, 191, 455, 37432, 434, 475, 1393,
	1861, 1392, 24, -63, -70, 155, 19914, 19314, 16, -1000,
	2086, 2088, -1000, -1000, 592, 37, -1000, -1000, -1000, 23439,
	225, -1000, -1000, 1969, 2009, 1788, -1000, 12312, 592, 592,
	35686, 35093, -1000, 2082, 37432, 34511, -1000, 651, 636, -178,
	559, 559, 305, 559, 559, 660, -1000, 291, 964, -1000,
	-1000, -1000, -1000, 946, 37432, 29273, 585, 36850, 585, 585,
	585, 585, 585, 585, 585, 37432, -1000, 746, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	37432, 1391, 1887, 1012, 228, -1000, -1000, -1000, 988, -1000,
	363, 345, 342, 335, 85, 1020, 1982, -1000, 1578, 1969,
	1969, -1000, -1000, -1000, -1000, -1000, -1000, 752, 315, 629,
	244, 225, 945, 1941, 1886, 1885, 1276, 1884, 794, 1883,
	1699, -42, -1000, 1390, 37432, -1000, -1000, 1178, 1177, 1740,
	1612, 725, 1739, -1000, -1000, 347, 716, 1694, 392, 1694,
	1694, 1694, 1694, 1694, -75, 1694, 1694, 1694, 80, 1694,
	138, 1694, 1694, 1694, 1694, 1694, 1313, -1000, -1000, -1000,
	374, 1610, 1606, 1735, 560, -1000, -1000, -1000, -1000, 1736,
	1973, 659, -1000, -117, 1652, 25781, -1000, 1578, -1000, -1000,
	-1000, -1000, -1000, 1415, -1000, 1888, 1143, 16386, 1827, -1000,
	-1000, 1059, 2063, -1000, 22264, 745, -1000, 16386, 1350, 1578,
	-1000, -1000, 1578, -1000, -1000, -1000, 733, -1000, -1000, 18714,
	18714, 18714, 18714, 18714, 18714, 18714, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1578, -1000, -1000, 1578, -1000, 11730, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1578, 1578,
	1578, 1578, 1578, 1578, 1578, 1578, 1578, 1578, 1578, 1578,
	16386, 1578, 1578, 1578, 1578, 1578, 1578, 1578, 1578, 1578,
	1578, 1578, 1578, 1578, 1578, 1578, 1578, 1578, 1578, 1578,
	1578, 1578, 1578, 1578, 1578, 1578, 1578, 1578, 1578, 1578,
	1578, 1578, 1578, 1578, 1578, 1578, 1578, 1578, 1578, 1578,
	1578, 1578, 1578, 1578, 33929, 29855, 37432, 1597, 1574, -1000,
	-1000, 744, 1671, -123, 38596, -1000, -1000, -1000, -1000, 38014,
	28691, 942, -1000, -1000, -1000, -1000, 1882, -1000, -1000, 743,
	-1000, 2011, -1000, -1000, 1537, 500, -1000, 4045, 170, -1000,
	-1000, -1000, 1698, 36850, 37432, 275, 1389, 1006, 1377, 38014,
	38014, -1000, 243, 29273, 29273, 559, 289, 29273, 255, 1670,
	619, 1668, 618, 1258, 37432, 1917, 1730, 37432, 1376, 1375,
	38014, 38014, 29273, 29273, -1000, 37432, 1667, -1000, 1012, -1000,
	5285, 16386, 559, 559, 37432, 37432, 37432, 37432, 37432, -1000,
	-1000, 1012, 1012, 1012, 1012, 953, 2062, 953, -1000, 953,
	-1000, -1000, 16386, -1000, 18714, 28109, 820, -1000, -1000, 37432,
	-1000, 1373, 310, -1000, -1000, -1000, -1000, -1000, -1000, 1372,
	-1000, 1866, 794, 794, -1000, 1312, 794, 1648, -1000, 941,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 794, -1000, 15804, -389, -1000, -1000, 1666, -1000,
	265, -1000, -1000, 448, 448, 196, 29273, 29273, 29273, -1000,
	1694, 36850, -1000, 1694, 1694, 1694, -94, 1694, 1694, -1000,
	-1000, 1694, -1000, -1000, -1000, -1000, -1000, 1694, -1000, -1000,
	-1000, 1694, 1694, -1000, 1694, 1694, -1000, -1000, -1000, -1000,
	-1000, 29273, 448, 169, 1661, 448, 29273, 29273, -1000, 68,
	67, 61, 60, -1000, -1000, -1000, -1000, 59, 55, -1000,
	-1000, 1788, -1000, -1000, 225, -1000, -1000, 37432, -110, 25781,
	1652, 1948, 9928, -1000, -1000, 1043, 2074, 870, 1642, -1000,
	-1000, 1651, -1000, 1136, 740, 1228, 1802, -1000, -1000, -1000,
	37432, -1000, 16386, 16386, 16386, 1084, -1000, 26945, -1000, -1000,
	-1000, -1000, 9327, 881, 18714, 1075, 1105, 18714, 18714, 18714,
	18714, 18714, 18714, 18714, 18714, 18714, 18714, 18714, 18714, 18714,
	18714, 18714, 1206, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1368, -1000, 225, 1417, 1417, 808, 808, 808, 808,
	808, 808, 20496, 1967, 1967, 1415, 1528, 1147, 11730, 13476,
	13476, 13476, 1415, 16386, 16386, 15222, 14640, 16968, 13476, 13476,
	1967, 971, 1147, 38014, -1000, -1000, 18132, -1000, -1000, -1000,
	-1000, -1000, 1415, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 36850, 36850, 13476, 13476, 13476, 13476, 1415, 1415, 13476,
	13476, 13476, 13476, 13476, 1415, 1415, 1415, 1415, 1967, 1967,
	13476, 13476, 13476, 1967, 13476, 13476, 1967, 13476, 13476, 13476,
	13476, 13476, 13476, 13476, 864, 37432, -1000, 1620, 1669, -1000,
	-1000, -1000, 1946, 24617, -1000, 21671, -1000, 1578, 864, 1592,
	29855, 37432, -1000, -1000, 29855, 37432, 33347, 32765, 1625, -1000,
	-109, -130, -123, -1000, -1000, 801, -1000, -1000, -1000, 14058,
	-1000, 11130, 1969, 1788, 6322, 21078, -1000, 170, -1000, -53,
	-1000, -1000, -1000, 1684, -1000, 1684, 295, 2, 1684, 1684,
	1684, 1684, 1684, -14, -14, -14, -14, 8, -1000, -1000,
	-1000, -1000, -1000, 1697, 1696, -1000, 1684, 1684, 1684, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1688, 292,
	1686, 1686, 1686, 1686, 1686, 486, 486, -1000, 16386, 1504,
	1944, 634, 289, 1896, 1909, 1896, 325, -1000, 739, 1695,
	-1000, 738, 309, 1540, -1000, 185, 1353, 37432, -1000, -1000,
	-1000, -1000, -1000, 37432, 37432, 29273, 29273, 29273, 664, -1000,
	37432, 1649, -1000, -1000, -1000, -1000, -1000, 1575, -1000, 1353,
	-1000, -1000, -1000, 1311, 1147, 1354, 1352, 1941, -1000, -1000,
	-1000, 980, -1000, -1000, -1000, -1000, 1012, 37432, 37432, 37432,
	1941, 1012, 1147, 1196, 1701, 1578, 1415, -1000, -1000, -1000,
	1351, -1000, 18714, 1648, 1648, -1000, 1648, 794, 1417, 1648,
	-1000, 1526, 1038, 1306, 37432, -1000, 25781, -44, -1000, -121,
	32183, -1000, -1000, -1000, 32183, -1000, 1694, 1694, 1694, 1694,
	1694, 80, 1694, 1694, 164, -1000, 617, -1000, 1524, -1000,
	-1000, -1000, -1000, 1694, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 32183, 119, 168, 32183, 1575, 2061, -1000,
	-1000, -1000, -1000, 1981, -1000, 1967, 1415, 280, -1000, -1000,
	-1000, 1578, 1505, 736, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	31601, -1000, 1794, 1143, 1143, 16386, -1000, -1000, -1000, 11130,
	1979, -1000, 1809, 1807, 1751, -1000, -1000, 881, 932, 900,
	-1000, -1000, 1284, -1000, -1000, -1000, -1000, 732, 1578, -1000,
	-1000, 3566, -1000, -1000, -1000, -1000, 1075, 18714, 18714, 18714,
	1196, 3566, 3520, 1502, 1577, 808, 1008, 1008, 796, 796,
	796, 796, 796, 989, 989, -1000, -1000, -1000, 1415, -1000,
	-1000, -1000, 13476, 13476, -1000, 16386, -1000, 1415, 1520, -1000,
	-1000, 1147, 730, 1520, 1520, -1000, 1140, 1259, 852, 2059,
	1520, 841, 2057, 1520, 1416, 18714, 18714, 18714, 1520, 1520,
	13476, 997, -1000, 16386, 1415, -1000, 1387, 1647, 1645, 1520,
	1415, 1644, 1520, 1520, -194, -194, 1415, 1520, 1415, 1520,
	1520, -194, -194, -194, -194, 13476, 13476, 1520, 1520, 1520,
	13476, 1520, 1520, 13476, 1520, 1520, 1520, 1520, 1520, 1520,
	1520, 263, 1578, -1000, 11130, 29855, 29855, 29855, 29855, 29855,
	-1000, 1779, 1777, -1000, 1769, 1746, 1773, 25781, 1522, 1415,
	321, 24617, -1000, 1578, -1000, 24021, 680, 648, 642, 641,
	13476, 2023, 29855, 1598, -1000, 1598, -1000, 728, -1000, -1000,
	38014, -123, -124, -1000, -1000, 1625, -1000, 1218, -1000, -1000,
	1147, -1000, 712, 1888, 1967, 1624, 5721, -1000, -1000, -1000,
	-1000, 500, -1000, -1000, -1000, 1693, 107, -1000, 1829, 782,
	782, 792, 1324, 1828, -1000, -1000, 166, -56, -1000, -1000,
	-1000, 1169, -14, -14, 1684, 1684, 293, 1684, -1000, -14,
	-1000, -1000, -1000, 801, 1880, 801, 801, 801, 801, -14,
	1304, 1304, -1000, -1000, -1000, -1000, 1163, -1000, 1688, -1000,
	1156, -1000, -1000, -1000, -1000, -1000, -1000, 1219, 1728, 36850,
	-1000, 37432, -1000, 1896, -1000, -1000, -1000, 132, -1000, -1000,
	-1000, 2034, -1000, -1000, 36850, 26363, 36850, -1000, -1000, 86,
	29273, 180, 360, 218, -1000, 615, -1000, 606, -1000, -1000,
	-1000, -1000, -1000, -1000, 37432, 29273, -1000, -1000, -1000, -1000,
	2023, 1349, 1348, -1000, -1000, -1000, 953, 1012, -1000, -1000,
	18714, 29273, -1000, 338, -1000, 3566, -1000, -1000, -1000, 864,
	658, -1000, -1000, -80, -1000, -1000, 605, 702, 698, 604,
	-1000, 97, 29273, -1000, 36850, -1000, 2056, 2055, 118, 2039,
	29273, -1000, 43, 1802, -1000, 1622, -1000, 905, 639, 769,
	512, 512, -1000, 897, 512, 1874, 1871, 861, -1000, 250,
	-1000, 9928, 9928, 1618, 1303, 1302, -1000, 1792, -1000, -1000,
	-1000, 37432, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 8726, 13476, -1000, 1196, 3566, 2905, -1000, 18714, -1000,
	1520, 1415, 1147, -1000, 13476, -1000, 8125, -1000, -1000, 599,
	1206, 599, 18714, 18714, -1000, 18714, 18714, -1000, -1000, 18714,
	3583, 3272, 3240, -239, -1000, 1584, 966, -1000, 16386, 1293,
	-1000, -1000, 18714, 18714, -1000, -1000, -1000, -1000, -1000, 31019,
	-1000, -194, -194, -194, -194, -194, -1000, -1000, -1000, -1000,
	1520, 1520, -194, -194, -194, 1520, -194, -194, 1520, -194,
	-194, -194, -194, -194, -194, -194, 1724, 11130, 1578, 6923,
	-1000, 36850, 1623, -1000, 937, 914, 1669, 1692, 1721, 1500,
	-1000, -1000, -1000, -1000, 1771, -1000, 1753, -1000, -1000, 1680,
	-1000, -1000, 1616, 1578, 36850, 18714, 680, -1000, 1578, 1578,
	1578, 1415, 2011, 16386, 1598, -1000, -1000, 817, -1000, -1000,
	-156, -157, -1000, -1000, -1000, 9928, -1000, 6322, -1000, 6322,
	-1000, 27527, 586, 1832, 551, 1324, 1324, 1324, -1000, 1324,
	-1000, -1000, -1000, 1687, -1000, 1055, -1000, -1000, -1000, -1000,
	-1000, 1578, -401, 1141, 18714, 2073, -1000, 1822, -1000, 1821,
	1820, 1298, -1000, -1000, 1450, 801, 801, -14, -1000, -1000,
	1684, -1000, 801, -1000, 873, -1000, -1000, -1000, -1000, 801,
	1513, -1000, 1510, 1593, -1000, 1508, 112, 37432, -1000, -1000,
	1943, -1000, -1000, -1000, 1879, 897, 897, 897, 1720, -1000,
	-1000, -1000, -1000, 1433, 1581, -1000, 4045, 36850, 36850, 36850,
	-1000, -252, 187, -1000, 29273, 116, 185, 399, 1347, 37432,
	29273, -1000, -1000, -1000, -1000, -1000, 1941, -1000, 3566, 1353,
	-1000, -1000, -14, 37432, -1000, 29273, 800, 30437, 29273, 114,
	159, -1000, 29273, 29273, 2038, 29273, 1575, 1297, 1751, 280,
	167, 1324, 635, -1000, -1000, 516, -1000, 106, 1336, 174,
	173, 36850, 1817, 1816, 1332, 37432, 36850, -1000, -1000, 171,
	1331, 16386, -1000, 36850, -1000, -1000, 36850, 692, -1000, 36850,
	-1000, -1000, -1000, -1000, 1039, 12312, -1000, -1000, 1415, -1000,
	18714, 3566, -194, -1000, -1000, -1000, 674, 1415, 1684, 1684,
	-1000, 1684, 1686, -1000, 1684, 13, 1684, 10, 1415, 1415,
	3118, 3096, 3028, 2617, 1387, 18714, 18714, 18714, 1578, -189,
	-1000, 1147, 16386, 2985, 1933, -1000, -1000, 1330, -1000, -1000,
	-1000, -1000, -1000, -194, -194, -1000, -1000, -1000, -1000, -194,
	-1000, -1000, -194, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1902, 1547, 1495, -1000, -1000, 12894, 1415, 1806, 1505,
	-1000, 23439, 1503, -1000, 2011, 11130, 16386, 16386, -1000, -1000,
	16386, 1685, -1000, 16386, -1000, -1000, -1000, -1000, 36850, 320,
	-1000, 16386, 1503, 1310, -1000, 36850, 36850, 36850, -1000, 1969,
	1147, -1000, -1000, -1000, -1000, 5721, -1000, 1484, -1000, 1684,
	1684, 1815, -1000, 782, -1000, -1000, -1000, -1000, -1000, 36850,
	-1000, 18714, 1939, -1000, 3566, -111, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 801, -1000, -1000, -1000, -1000, -1000, -14,
	1291, -14, 1135, -1000, 1133, -1000, -1000, -340, 1683, 225,
	-1000, 897, 863, 860, 1285, 37432, 146, 26363, -1000, 4045,
	4045, 4045, 127, 120, -1000, 1015, -1000, -1000, -1000, 1278,
	1266, 1265, 1353, 188, 1009, 152, -1000, 1931, -1000, -1000,
	1012, -68, -1000, 159, -1000, -1000, -1000, 159, -1000, -1000,
	163, 1575, 1575, 29273, 1575, -1000, -1000, -1000, 171, 441,
	4045, 4045, 1504, 782, 1814, 551, -1000, -1000, -1000, -1000,
	-1000, -1000, 1329, -1000, 770, -1000, 603, 441, 171, 1147,
	836, 1032, 9928, -1000, 2025, -1000, -1000, -1000, 3566, -1000,
	7524, -1000, -1000, 285, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 18714, 18714, 18714, 18714, -1000, 1387, 1387, 1387,
	18714, 1415, 1263, 1147, 18714, 18714, 849, -1000, -1000, -1000,
	-1000, -1000, 1813, -1000, 1578, -1000, -1000, 1578, 249, -1000,
	36850, 1969, -1000, 1147, 1147, 1147, 36850, 1147, 1482, -1000,
	1578, 22857, -1000, 25781, 1480, 1480, 1480, -1000, 700, 27527,
	1919, 1919, 1324, 1324, 1477, 1387, 1578, -1000, 1578, 1578,
	-1000, 801, -1000, 801, 1428, 1426, -1000, 27527, -1000, -1000,
	859, -1000, -1000, -1000, -1000, -1000, 1978, -1000, 146, -1000,
	1257, 287, 294, -1000, 282, 276, 264, 246, 230, -1000,
	-1000, -1000, -1000, 388, 127, -1000, -72, 1129, 872, 1870,
	120, -1000, 1128, 1112, 1106, 1098, 192, -1000, -1000, -1000,
	-1000, 201, 185, -1000, 372, 1239, -1000, 1850, 1848, 1937,
	1937, 104, 1575, 1604, 1419, -1000, -1000, 1327, -1000, -1000,
	1682, 1324, 1324, -1000, 1321, -1000, -1000, 36850, -1000, 441,
	1893, 1891, 1578, -1000, 2023, 29855, 12312, -1000, -1000, -1000,
	-1000, 1387, 1387, 1387, 1387, -1000, -1000, -1000, 158, -1000,
	-1000, 1387, 1387, 2011, 2004, 2070, -1000, 1495, 1578, -1000,
	225, -1000, -1000, 1461, -1000, 36850, -1000, -1000, 680, -1000,
	-1000, -1000, 700, -1000, 1320, 897, 1238, -1000, -1000, -1000,
	-1000, -1000, 336, -405, 18714, -1000, -1000, -1000, -1000, 1455,
	-1000, 225, -1000, -1000, 323, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1860, 1856, 306, -1000, 1236, 1231, -1000, 378,
	1171, 697, -206, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 371, 1315, -1000, 147, -1000, -1000,
	589, 1835, 1830, 2003, -1000, 29273, -1000, -1000, 29855, -1000,
	-1000, 166, 166, 27527, 1504, 1681, -1000, -1000, -1000, 18714,
	-1000, 846, 2020, 1545, -1000, -1000, -1000, -1000, -1000, 1415,
	178, -275, -1000, -1000, 865, 16386, 11130, 1495, 1415, -1000,
	-1000, -1000, -1000, -1000, 1089, -1000, 37432, -1000, -1000, -1000,
	1387, 700, -1000, 307, 5038, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1080, -1000, -1000, 1137, 381, 143, -1000,
	1928, -1000, 1680, 1072, 1848, 2002, 1841, 1838, -1000, 1190,
	-254, 1598, 1448, 1679, 27527, 3566, 1432, -1000, 36850, 2015,
	1997, -1000, -1000, 1791, -249, -278, 1415, 198, 198, 1463,
	1457, -1000, -1000, 1677, -405, -1000, 700, -1000, 316, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	16386, 16386, 10529, 5038, 135, -1000, 131, -1000, -1000, -1000,
	1189, -1000, 919, -1000, 1184, -1000, 1992, 1940, -1000, 172,
	2020, 700, 27527, 1414, -1000, 846, 1805, -197, 16386, 16386,
	-1000, 1783, -1000, -1000, -1000, 190, -1000, 854, 303, 835,
	-1000, 1417, -1000, 36850, -1000, -1000, 1286, 1221, -1000, 1144,
	1255, 219, 199, 3066, -1000, -1000, -1000, -1000, -411, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1183, 1148, 25199, 2015,
	-1000, 1411, 700, -1000, 344, -1000, 36850, -1000, 1147, 1453,
	-1000, 1147, -270, 998, -1000, -1000, -1000, -1000, -1000, 36850,
	1397, -1000, -1000, -1000, 1047, -1000, 16386, 5038, 1977, 1964,
	1954, 1889, 9928, 4975, -1000, -1000, -1000, -1000, 99, 1353,
	-197, 700, -1000, 330, 1418, -1000, 1923, 16386, -276, 190,
	-1000, 1719, 329, 977, 5038, -1000, 1246, -414, 432, 225,
	704, 18714, -1000, -1000, -1000, 29273, -1000, -1000, 1578, 36850,
	1578, -1000, -280, -1000, 1714, 1703, 2029, -1000, -1000, -1000,
	-1000, -1000, -1000, 5038, -1000, -415, 5038, 3288, -1000, -1000,
	-1000, 4753, -1000, -1000, -1000, -1000, 200, -1000, -1000, 3566,
	1353, 17550, -1000, -1000, -1000, -1000, 2067, -1000, 2065, 696,
	696, -1000, -416, 4689, -418, 536, 5038, 928, -1000, 16386,
	-1000, 704, -1000, 1387, 1415, -1000, -1000, -1000, 373, 1123,
	-1000, 4462, 976, 5038, -1000, -419, 533, 5038, -1000, 1195,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 4265, -1000,
	-424, 5038, 527, 3569, -426, -1000, 524, 5038, -1000,
}

var yyPgo = [...]int{
	0, 2484, 2483, 25, 2481, 259, 2479, 2478, 13, 2477,
	40, 36, 22, 14, 2475, 2180, 2177, 2174, 2172, 2170,
	2473, 7, 2471, 2468, 2165, 2467, 2464, 2161, 2157, 2155,
	2153, 2462, 2461, 2458, 2151, 2149, 2142, 19, 2456, 20,
	2455, 4, 154, 173, 2453, 2, 2451, 2449, 9, 2447,
	2446, 2125, 2445, 2440, 2436, 105, 2432, 2120, 2118, 2431,
	2113, 2107, 2427, 2426, 2103, 2099, 2094, 2422, 183, 2421,
	2419, 2418, 261, 110, 171, 2417, 2416, 2414, 117, 87,
	424, 118, 54, 131, 713, 2413, 24, 78, 266, 2411,
	2408, 142, 2407, 155, 2406, 166, 2405, 152, 137, 109,
	2404, 2403, 193, 2402, 2398, 2397, 144, 2395, 2393, 177,
	886, 2392, 2390, 172, 2387, 72, 174, 50, 46, 2385,
	2384, 2383, 2382, 2380, 21, 184, 2379, 133, 151, 2378,
	2377, 95, 2376, 2375, 209, 2369, 2368, 2366, 149, 48,
	2365, 2364, 52, 2363, 63, 70, 2362, 73, 2361, 141,
	2357, 2356, 29, 27, 2355, 64, 2354, 57, 2353, 145,
	208, 1123, 2352, 12, 10, 8, 2347, 42, 16, 3,
	51, 35, 71, 74, 132, 114, 2346, 28, 47, 120,
	111, 2344, 104, 103, 45, 2343, 161, 2342, 96, 160,
	140, 143, 159, 2341, 2340, 2339, 1171, 2338, 125, 88,
	2337, 93, 1176, 170, 119, 2336, 98, 2330, 2324, 2322,
	2320, 2319, 97, 116, 2318, 2317, 181, 175, 185, 55,
	32, 677, 2316, 1847, 18, 162, 2315, 49, 2313, 2311,
	2306, 3178, 122, 90, 115, 176, 2305, 113, 38, 56,
	2303, 2302, 2301, 2300, 2297, 2296, 219, 2295, 2294, 2287,
	2283, 218, 199, 2282, 139, 135, 129, 2280, 156, 33,
	2278, 2277, 130, 102, 2276, 2267, 2258, 2257, 136, 91,
	157, 2255, 121, 134, 138, 2248, 75, 2245, 2241, 321,
	61, 2239, 2237, 2234, 108, 101, 2226, 69, 44, 30,
	77, 34, 2223, 2222, 82, 86, 2220, 31, 2216, 5,
	6, 11, 2215, 2213, 2208, 2207, 2206, 2205, 2204, 92,
	2203, 2201, 66, 2200, 2199, 2198, 43, 2197, 2196, 2194,
	153, 126, 53, 168, 79, 39, 2191, 2190, 17, 2187,
	124, 2186, 60, 2184, 58, 2183, 2167, 62, 2163, 2159,
	65, 2139, 2137, 167, 1760, 2733, 2135, 163, 146, 59,
	76, 2116, 2109, 0, 643, 186, 164, 2105, 2096,
}

var yyR1 = [...]int{
	0, 352, 352, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 67, 3, 3, 8,
	9, 4, 4, 4, 5, 89, 89, 182, 182, 182,
	182, 181, 181, 90, 90, 88, 88, 95, 6, 6,
	7, 7, 10, 10, 71, 71, 11, 12, 12, 12,
	12, 355, 355, 104, 104, 102, 102, 103, 103, 179,
	179, 13, 13, 13, 186, 186, 191, 191, 191, 194,
	194, 194, 194, 169, 170, 171, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 326, 326,
	335, 335, 335, 336, 336, 334, 334, 334, 334, 334,
	338, 338, 339, 339, 337, 337, 337, 337, 341, 341,
	342, 342, 340, 340, 340, 340, 340, 340, 340, 340,
	340, 340, 340, 340, 340, 340, 329, 329, 329, 34,
	34, 34, 34, 35, 35, 35, 35, 35, 35, 343,
	343, 343, 343, 343, 343, 343, 343, 343, 343, 343,
	343, 343, 343, 343, 343, 343, 343, 343, 343, 343,
	343, 343, 343, 343, 343, 343, 343, 343, 343, 343,
	344, 344, 345, 345, 346, 346, 347, 347, 347, 347,
	348, 348, 348, 348, 348, 349, 349, 349, 349, 349,
	349, 349, 350, 350, 351, 351, 2, 307, 307, 308,
	308, 309, 309, 309, 309, 310, 310, 311, 311, 312,
	312, 312, 312, 312, 312, 312, 312, 312, 312, 25,
	218, 218, 215, 215, 215, 216, 216, 217, 217, 217,
	328, 328, 328, 322, 322, 322, 324, 324, 323, 323,
	323, 325, 325, 330, 330, 330, 330, 330, 332, 332,
	332, 332, 332, 332, 333, 333, 333, 331, 331, 49,
	49, 50, 50, 50, 158, 158, 158, 14, 14, 14,
	14, 14, 20, 22, 22, 38, 38, 39, 23, 23,
	23, 23, 40, 40, 41, 26, 26, 26, 26, 26,
	26, 47, 47, 47, 46, 46, 45, 45, 45, 45,
	45, 45, 24, 24, 24, 24, 48, 48, 43, 43,
	42, 44, 44, 44, 44, 44, 44, 44, 44, 44,
	44, 44, 44, 27, 27, 27, 27, 27, 27, 19,
	306, 306, 306, 37, 37, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 53, 281, 282, 282, 282,
	282, 282, 282, 282, 282, 269, 269, 270, 259, 259,
	259, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 238, 238, 238, 238, 242, 242, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 241, 241,
	241, 241, 241, 241, 241, 241, 243, 243, 243, 243,
	243, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 245, 245, 245, 245,
	245, 245, 245, 245, 268, 268, 246, 246, 262, 262,
	263, 263, 263, 260, 260, 260, 261, 261, 249, 250,
	264, 251, 251, 251, 252, 252, 252, 253, 253, 258,
	258, 257, 257, 257, 257, 257, 257, 254, 254, 254,
	254, 255, 255, 256, 267, 267, 267, 267, 267, 247,
	36, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 293, 293, 208, 208, 209, 209, 271,
	271, 291, 291, 290, 290, 289, 289, 289, 280, 280,
	286, 286, 286, 286, 286, 286, 286, 286, 275, 275,
	275, 274, 274, 276, 276, 279, 279, 288, 288, 287,
	287, 272, 272, 272, 294, 294, 294, 294, 294, 273,
	273, 273, 273, 295, 277, 277, 278, 278, 278, 300,
	301, 299, 299, 299, 299, 299, 121, 121, 121, 283,
	283, 283, 284, 284, 284, 285, 285, 285, 304, 304,
	303, 303, 51, 52, 56, 56, 55, 55, 55, 55,
	55, 55, 55, 55, 55, 55, 55, 55, 55, 55,
	55, 55, 55, 55, 55, 55, 55, 55, 55, 55,
	55, 55, 157, 157, 157, 213, 213, 298, 296, 296,
	297, 297, 16, 16, 54, 54, 327, 327, 17, 17,
	17, 17, 17, 17, 17, 17, 17, 302, 302, 302,
	18, 18, 57, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 85, 200,
	200, 199, 199, 198, 198, 198, 201, 201, 201, 201,
	236, 236, 236, 59, 59, 59, 63, 63, 66, 66,
	66, 64, 65, 28, 29, 29, 29, 29, 30, 214,
	214, 61, 61, 62, 62, 62, 62, 77, 77, 357,
	357, 60, 358, 68, 69, 69, 70, 70, 70, 204,
	204, 74, 74, 74, 72, 72, 72, 73, 73, 79,
	79, 83, 83, 83, 83, 82, 82, 82, 82, 160,
	160, 165, 228, 228, 141, 141, 161, 161, 166, 166,
	166, 167, 167, 168, 168, 168, 168, 168, 163, 163,
	162, 162, 164, 129, 129, 226, 226, 226, 225, 225,
	225, 225, 87, 87, 91, 91, 93, 93, 93, 93,
	93, 96, 143, 143, 114, 114, 115, 115, 115, 115,
	115, 127, 127, 178, 178, 177, 177, 180, 180, 92,
	94, 94, 94, 94, 99, 99, 100, 100, 101, 101,
	212, 212, 233, 233, 233, 105, 105, 105, 107, 106,
	106, 106, 106, 108, 108, 109, 109, 111, 112, 112,
	110, 110, 116, 116, 113, 117, 117, 117, 117, 118,
	118, 84, 84, 84, 84, 84, 84, 84, 84, 197,
	197, 120, 120, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 137, 137, 137, 137, 137, 137, 122,
	122, 122, 122, 122, 122, 122, 78, 78, 138, 138,
	138, 98, 97, 97, 81, 81, 80, 80, 139, 139,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 132, 132, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 131, 131, 131, 131, 131,
	131, 131, 131, 131, 131, 131, 131, 131, 131, 131,
	131, 131, 356, 356, 134, 133, 133, 133, 133, 133,
	133, 75, 75, 75, 75, 75, 234, 234, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 150, 150, 76, 76, 148, 148, 149,
	151, 151, 147, 147, 147, 124, 124, 124, 124, 124,
	124, 124, 124, 126, 126, 126, 152, 152, 140, 140,
	86, 153, 153, 154, 155, 155, 156, 156, 159, 172,
	172, 172, 173, 173, 173, 173, 128, 128, 174, 174,
	174, 123, 123, 123, 123, 123, 123, 123, 176, 176,
	175, 175, 175, 175, 183, 183, 142, 142, 145, 145,
	144, 146, 184, 184, 188, 188, 185, 185, 189, 189,
	189, 189, 192, 192, 193, 193, 193, 190, 190, 190,
	187, 187, 187, 230, 230, 230, 195, 195, 205, 205,
	202, 202, 203, 203, 196, 196, 248, 248, 248, 211,
	211, 210, 210, 210, 206, 206, 206, 207, 207, 227,
	227, 223, 223, 229, 229, 224, 224, 231, 231, 232,
	232, 305, 305, 265, 265, 315, 315, 266, 266, 316,
	316, 318, 318, 313, 313, 314, 314, 317, 317, 31,
	319, 319, 320, 320, 321, 321, 321, 321, 32, 33,
	33, 33, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 221, 221, 353, 354,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 11, 5, 7, 1,
	5, 1, 14, 3, 13, 0, 2, 0, 2, 3,
	3, 1, 3, 2, 3, 1, 3, 4, 1, 3,
	1, 3, 7, 8, 1, 1, 9, 8, 7, 6,
	6, 1, 1, 1, 3, 1, 3, 1, 3, 0,
	4, 3, 4, 5, 1, 3, 3, 2, 2, 2,
	2, 2, 1, 0, 0, 0, 2, 3, 3, 11,
	9, 11, 5, 5, 16, 12, 9, 4, 0, 3,
	0, 2, 2, 1, 3, 1, 1, 2, 2, 2,
	0, 2, 1, 2, 2, 2, 2, 2, 0, 1,
	1, 2, 3, 3, 5, 3, 3, 4, 5, 4,
	4, 2, 2, 2, 2, 2, 0, 2, 2, 9,
	9, 5, 7, 7, 7, 7, 8, 4, 6, 2,
	3, 2, 3, 3, 3, 4, 3, 3, 2, 2,
	3, 2, 2, 2, 2, 2, 3, 2, 2, 2,
	3, 3, 2, 3, 3, 2, 2, 2, 2, 2,
	1, 3, 0, 3, 1, 3, 0, 1, 1, 1,
	1, 3, 1, 3, 3, 0, 2, 5, 5, 5,
	7, 5, 0, 3, 0, 3, 4, 0, 1, 1,
	3, 2, 3, 3, 3, 0, 1, 1, 2, 2,
	2, 2, 1, 2, 2, 3, 3, 3, 3, 4,
	2, 3, 3, 3, 3, 0, 3, 0, 3, 3,
	1, 1, 1, 3, 2, 1, 1, 3, 3, 2,
	1, 1, 3, 1, 2, 5, 4, 6, 4, 3,
	3, 6, 5, 5, 4, 3, 5, 1, 3, 1,
	1, 1, 1, 1, 0, 2, 2, 1, 1, 1,
	1, 1, 4, 5, 8, 1, 2, 5, 7, 10,
	8, 11, 1, 2, 5, 5, 5, 5, 6, 3,
	5, 1, 1, 1, 1, 3, 1, 1, 1, 2,
	1, 1, 2, 4, 2, 4, 2, 3, 1, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 4, 3, 2, 4, 3,
	0, 2, 3, 1, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 5, 4, 1, 1, 2,
	3, 4, 3, 3, 3, 3, 3, 3, 0, 1,
	1, 0, 2, 3, 2, 2, 2, 2, 2, 6,
	8, 3, 3, 1, 1, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	3, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	1, 4, 4, 3, 3, 2, 4, 5, 2, 3,
	4, 2, 2, 3, 3, 3, 3, 3, 4, 1,
	1, 1, 1, 1, 6, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 0, 3, 0, 5,
	0, 3, 5, 0, 1, 1, 0, 1, 2, 3,
	1, 0, 3, 3, 0, 2, 2, 0, 1, 0,
	1, 1, 1, 1, 2, 2, 2, 5, 5, 4,
	4, 4, 4, 4, 2, 1, 2, 1, 2, 2,
	3, 2, 2, 2, 2, 1, 1, 1, 1, 3,
	2, 1, 1, 0, 3, 1, 1, 0, 1, 5,
	4, 0, 1, 1, 2, 2, 3, 2, 0, 1,
	3, 5, 3, 3, 5, 3, 2, 2, 1, 1,
	1, 1, 1, 0, 1, 0, 1, 1, 3, 3,
	3, 3, 3, 1, 10, 11, 11, 12, 12, 3,
	3, 2, 1, 5, 1, 1, 0, 2, 2, 3,
	3, 1, 1, 2, 2, 2, 0, 1, 2, 0,
	1, 3, 1, 2, 3, 1, 1, 1, 0, 2,
	0, 2, 1, 5, 1, 3, 5, 4, 3, 5,
	3, 8, 10, 3, 3, 3, 3, 3, 5, 4,
	5, 1, 2, 2, 4, 3, 6, 5, 3, 9,
	2, 2, 0, 1, 2, 0, 1, 7, 1, 3,
	8, 8, 3, 3, 3, 5, 3, 5, 5, 5,
	4, 4, 4, 4, 4, 4, 4, 0, 1, 1,
	3, 2, 3, 3, 4, 3, 5, 5, 5, 4,
	4, 4, 2, 2, 2, 6, 2, 4, 4, 4,
	5, 8, 6, 3, 5, 4, 2, 4, 3, 2,
	4, 5, 6, 2, 6, 6, 3, 3, 3, 0,
	1, 1, 1, 0, 2, 2, 0, 2, 3, 2,
	0, 1, 1, 2, 4, 1, 1, 1, 2, 4,
	4, 1, 1, 2, 3, 4, 4, 5, 3, 1,
	1, 3, 3, 1, 1, 1, 1, 0, 3, 1,
	1, 3, 0, 2, 0, 2, 1, 2, 2, 0,
	1, 0, 1, 1, 0, 1, 1, 0, 1, 3,
	5, 1, 1, 3, 5, 1, 2, 3, 5, 2,
	2, 6, 0, 1, 0, 3, 0, 1, 0, 2,
	2, 4, 1, 2, 2, 2, 2, 2, 0, 2,
	1, 3, 3, 1, 3, 0, 1, 2, 1, 1,
	1, 1, 1, 3, 1, 1, 1, 4, 1, 3,
	1, 2, 2, 4, 2, 6, 1, 4, 6, 3,
	2, 0, 3, 0, 3, 1, 3, 1, 3, 4,
	4, 4, 4, 3, 2, 4, 0, 1, 0, 2,
	0, 1, 1, 1, 1, 1, 2, 2, 1, 2,
	3, 2, 3, 2, 2, 1, 3, 3, 2, 1,
	1, 3, 1, 3, 3, 0, 5, 5, 5, 0,
	2, 1, 3, 3, 3, 2, 3, 1, 2, 0,
	3, 1, 1, 3, 3, 4, 4, 5, 3, 4,
	5, 6, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 0, 2, 1, 1,
	1, 3, 1, 3, 0, 1, 1, 3, 1, 3,
	1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 2, 2, 2, 2, 3, 1, 1,
	1, 1, 1, 1, 5, 6, 6, 6, 5, 5,
	5, 6, 5, 5, 6, 5, 5, 5, 5, 6,
	5, 5, 5, 4, 4, 5, 5, 5, 5, 5,
	4, 4, 4, 4, 4, 4, 4, 3, 6, 6,
	6, 8, 8, 8, 8, 4, 6, 7, 7, 7,
	9, 4, 7, 5, 4, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	8, 8, 0, 2, 3, 4, 4, 4, 4, 4,
	4, 0, 3, 4, 7, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 3, 3, 1, 2, 2, 1, 2, 1, 2,
	2, 1, 2, 0, 1, 0, 2, 1, 2, 4,
	0, 2, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 0, 3, 1, 3,
	1, 0, 2, 1, 0, 3, 1, 3, 2, 0,
	1, 1, 0, 2, 4, 4, 1, 1, 0, 2,
	4, 2, 4, 1, 3, 5, 4, 6, 0, 3,
	1, 3, 3, 5, 0, 5, 1, 3, 1, 2,
	3, 1, 1, 3, 3, 3, 1, 3, 1, 2,
	2, 3, 1, 1, 1, 1, 1, 3, 3, 3,
	1, 2, 1, 1, 1, 1, 1, 1, 0, 1,
	0, 2, 0, 3, 0, 1, 0, 3, 3, 1,
	1, 0, 1, 1, 1, 1, 1, 0, 1, 0,
	2, 1, 1, 1, 3, 1, 1, 1, 1, 1,
	1, 0, 2, 0, 1, 0, 4, 0, 1, 0,
	3, 0, 3, 0, 4, 0, 3, 0, 3, 3,
	1, 3, 2, 4, 1, 2, 1, 2, 2, 2,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -352, -1, -3, -9, -10, -11, -12, -13, -15,
	-51, -16, -17, -18, -57, -58, -59, -63, -64, -65,
	-61, -60, -24, -27, -19, -67, -28, -29, -30, -31,
	-32, -33, -34, -35, -36, -4, 6, 7, -71, 9,
	10, 29, -53, 180, -52, 183, 182, 218, 184, 211,
	64, 341, -66, 344, 345, -357, -214, 269, 270, 20,
	37, 346, 348, 30, 31, 232, 286, 288, 313, -5,
	-90, -6, 8, 441, 181, 342, 213, 212, 26, 490,
	-353, 68, 606, -155, 15, -68, -358, -68, -68, -68,
	-68, -68, -281, -212, 108, 68, 23, -207, -218, 88,
	432, 188, -216, 282, 284, -205, -206, -215, 242, 252,
	44, 199, 198, 253, 189, 282, 189, 190, 192, 432,
	188, 225, 224, 282, 284, 189, -110, -231, 72, -220,
	202, 591, 307, 210, 487, 592, 253, 601, 593, 594,
	596, 294, 597, 401, 341, 357, 349, 372, 488, 543,
	264, 340, 418, 297, 257, 320, 544, 407, 413, 267,
	344, 427, 545, 233, 204, 261, 263, 262, 247, 457,
	268, 36, 214, 368, 303, 242, 546, 537, 236, 35,
	27, 235, 430, 99, 598, 547, 331, 415, 389, 332,
	231, 599, 548, 492, 301, 414, 117, 240, 364, 360,
	313, 279, 411, 333, 549, 390, 394, 550, 419, 287,
	278, 334, 551, 552, 553, 191, 293, 554, 243, 421,
	298, 388, 200, 489, 48, 222, 422, 392, 398, 555,
	330, 556, 557, 558, 559, 311, 309, 310, 312, 386,
	352, 381, 541, 254, 259, 53, 186, 396, 395, 397,
	260, 417, 377, 375, 560, 561, 302, 206, 562, 563,
	18, 564, 565, 425, 305, 566, 567, 568, 605, 569,
	570, 571, 416, 391, 393, 241, 116, 572, 308, 412,
	317, 491, 291, 574, 336, 221, 216, 426, 326, 575,
	576, 577, 578, 579, 285, 284, 345, 318, 346, 265,
	580, 581, 582, 583, 251, 234, 429, 420, 52, 403,
	584, 321, 337, 406, 342, 228, 7, 258, 299, 410,
	319, 266, 252, 255, 379, 223, 585, 586, 366, 367,
	343, 226, 218, 111, 428, 536, 282, 338, 51, 229,
	587, 588, 256, 230, 347, 424, 296, 369, -222, 300,
	595, 290, 458, 459, 460, 461, 81, 462, 215, 322,
	323, 314, 324, 209, 219, 283, 463, 464, 50, 289,
	86, 292, 315, 573, 325, 327, 328, 452, 453, 192,
	189, 133, 373, 418, 180, 408, 409, 415, -275, 416,
	224, 227, -236, 189, -200, 407, 287, 308, 462, 230,
	231, 190, 191, 32, 420, 419, 411, -231, 193, 347,
	-77, 184, 219, -110, -48, 72, 271, -48, 29, 72,
	72, 36, 72, 346, 410, 410, 75, 491, 233, 21,
	-344, -325, 317, -343, -323, 181, 180, 10, 182, 322,
	323, 324, 190, 8, 30, 573, 207, 325, 326, 6,
	211, 327, 328, 225, 9, 329, -328, 74, 72, -220,
	21, -344, -325, 317, -209, -208, 339, 398, 6, -70,
	5, -196, 194, 343, -88, 542, -95, -233, -231, -221,
	74, 604, 471, -8, -3, -173, 17, 16, -74, 54,
	55, -69, -82, 124, -84, -231, -119, 91, -125, 28,
	72, -220, 24, -124, -221, -120, -147, -146, -98, 133,
	-235, 122, 123, 130, 92, 176, -132, -130, -131, -133,
	-135, -136, 74, 73, 82, 75, 76, 77, 78, 83,
	471, 84, 85, -223, -144, -353, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 58, 59,
	219, 188, 442, 443, 444, 445, 446, 486, 209, 450,
	94, 47, 431, 440, 439, 438, 436, 437, 433, 435,
	434, 452, 453, 195, 432, 128, 441, 475, 476, 477,
	478, 479, 480, 481, 482, 484, 485, 483, 465, 458,
	459, 460, 461, 462, 463, 464, 466, 467, 468, 469,
	470, 472, 473, 474, -196, -196, 11, -102, -103, -110,
	-113, -231, -185, 343, -192, -189, 419, 420, -190, -193,
	-187, -147, 398, 570, 571, 418, 373, 417, -223, -231,
	-2, -5, 6, -110, -282, -270, -273, -223, 204, -295,
	72, -220, 201, 190, 192, 441, -203, 195, -203, 225,
	224, -217, 250, -203, -203, 189, -216, 100, 100, -54,
	-110, -327, -322, -328, -202, 195, -223, -202, -202, -202,
	-202, -202, -202, -202, -110, 177, -102, 72, 29, -201,
	108, 12, 432, 188, 189, 224, 225, 192, -277, 11,
	110, 228, 228, 228, 229, 228, -199, 410, 412, 226,
	413, 414, 12, -85, 108, 19, -353, -173, -173, 125,
	72, 346, 193, -62, -3, -12, -10, -11, -8, 100,
	-127, 23, 29, 29, 74, 51, 29, -43, -42, -44,
	257, 258, 259, 260, 261, 262, 263, 264, 265, 266,
	267, 268, 29, -306, 68, -265, 398, 72, -319, -320,
	-110, 75, 75, 66, 66, 69, 193, 69, 66, -345,
	318, 68, -345, 284, 318, 319, 252, 282, 192, -345,
	-345, 284, -345, -345, -345, -345, -345, 410, -345, -345,
	-345, 320, 321, -345, 408, 192, -345, -345, -345, -345,
	-345, 71, 66, 69, 308, 66, 11, 66, -292, 133,
	331, 332, 333, 334, 330, 308, 335, 336, 337, 228,
	338, -68, -7, -5, -353, 21, 22, 189, 423, 69,
	-88, -176, -353, -354, 70, -174, 19, 30, -128, 75,
	78, -156, -159, -84, -231, 50, -72, 21, 22, 80,
	11, -226, 90, 88, 89, 107, -225, 23, 72, -220,
	-221, 74, 177, -84, -122, 110, 91, 108, 109, 93,
	119, 118, 129, 122, 123, 124, 125, 126, 127, 128,
	120, 121, 132, 100, 101, 102, 103, 104, 105, 106,
	-197, -353, -98, -353, 178, 179, -125, -125, -125, -125,
	-125, -125, -125, -353, -353, -8, -139, -84, -353, -353,
	-353, -353, -353, -353, -353, -353, -353, -353, -353, -353,
	-353, -150, -84, -353, -356, -134, -353, -356, -134, -356,
	-134, -356, -353, -356, -134, -356, -134, -356, -356, -134,
	-356, -353, -353, -353, -353, -353, -353, -353, -353, -353,
	-353, -353, -353, -353, -353, -353, -353, -353, -353, -353,
	-353, -353, -353, -353, -353, -353, -353, -353, -353, -353,
	-353, -353, -353, -353, -112, 87, -110, -87, -91, -93,
	-94, -114, -97, -353, -92, -110, -98, 72, -110, -102,
	-355, 69, 11, 67, -355, 69, 177, 69, -186, -191,
	421, 423, 343, -190, -190, -230, -223, 74, 28, 100,
	29, 177, -155, -68, 70, 69, -273, 204, -238, -242,
	-244, -243, -245, -240, -241, 370, 373, 377, 375, 371,
	376, 133, 374, 379, 380, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 29, 214, 366, 367, 368, 369,
	390, 391, 392, 393, 394, 395, 396, 397, 349, 372,
	488, 350, 351, 352, 353, 354, 355, 357, 358, 359,
	360, 361, 362, 363, 364, 72, -221, -295, 68, -223,
	-110, -218, -216, 72, 91, 72, -109, -223, -231, -116,
	-223, -231, 251, -331, -330, -322, -325, -203, -217, -322,
	256, 254, 255, 69, 193, 69, 193, 71, -102, 24,
	66, -104, -110, 72, 72, -109, -116, -324, -322, -325,
	-231, -201, 74, -235, -84, -203, -203, -110, -110, -110,
	-110, -110, -201, -201, -201, -201, -198, 11, 110, 11,
	-198, -198, -84, -125, -322, 434, 124, -231, 72, 72,
	346, 72, 33, -43, -43, 74, -43, 69, 100, -43,
	70, -139, -305, 590, 69, -321, 23, 423, 424, 399,
	-347, 189, 227, 224, -347, -343, 322, 323, 324, 573,
	325, 326, 327, 328, -324, -323, -322, -345, -346, -223,
	-345, -345, -345, 410, -345, -345, -345, -345, -345, -345,
	-345, -345, -328, -347, 286, 69, -347, -324, -322, 330,
	330, 330, 330, 330, 330, -74, -8, -110, 424, 425,
	-95, 23, -175, -224, -223, -219, 493, 185, 21, 181,
	184, 90, 23, 25, 494, 239, 93, 355, 133, 384,
	449, 16, 20, 203, 94, 187, 370, 373, 201, 132,
	197, 273, 275, 442, 180, 62, 495, 475, 433, 435,
	431, 434, 274, 432, 408, 496, 497, 498, 499, 363,
	361, 272, 28, 10, 476, 26, 212, 246, 22, 500,
	126, 359, 182, 501, 237, 97, 98, 538, 41, 40,
	306, 24, 276, 213, 85, 502, 477, 76, 503, 504,
	19, 65, 205, 11, 199, 227, 600, 505, 286, 13,
	456, 115, 14, 506, 507, 508, 509, 195, 194, 110,
	190, 590, 60, 244, 510, 8, 353, 511, 512, 513,
	514, 515, 354, 176, 87, 516, 517, 107, 518, 56,
	539, 45, 32, 232, 478, 479, 540, 480, 447, 519,
	58, 108, 17, 520, 38, 37, 436, 437, 30, 383,
	387, 382, 521, 399, 522, 523, 486, 220, 128, 249,
	63, 289, 91, 339, 481, 482, 83, 362, 604, 33,
	66, 217, 335, 304, 42, 88, 15, 245, 61, 34,
	454, 112, 484, 365, 196, 224, 524, 113, 485, 423,
	248, 525, 358, 542, 207, 109, 348, 183, 441, 316,
	270, 208, 526, 288, 59, 527, 238, 114, 483, 188,
	409, 528, 6, 529, 451, 29, 211, 269, 351, 198,
	530, 250, 281, 271, 280, 531, 49, 532, 295, 43,
	602, 57, 589, 189, 39, 96, 385, 350, 380, 193,
	448, 225, 84, 277, 5, 44, 31, 404, 9, 329,
	64, 67, 438, 439, 440, 47, 374, 371, 533, 378,
	603, 95, 12, 534, 455, 490, 89, 535, 405, -182,
	87, 9, 110, 69, 18, 69, -172, 25, 26, 177,
	-126, 51, 75, 78, -204, 49, -110, -84, -84, -84,
	-137, 83, 91, 84, 85, -225, 124, -232, -224, -231,
	-219, -125, -138, -144, -98, 79, 110, 108, 109, 93,
	-125, -125, -125, -125, -125, -125, -125, -125, -125, -125,
	-125, -125, -125, -125, -125, -234, 72, 74, 72, -124,
	-124, -223, -72, -72, -354, 69, -354, -8, -80, -83,
	124, -84, -231, -80, -80, -354, -84, -84, -147, 74,
	-80, -147, 74, -80, -125, 447, 448, 449, -80, -80,
	-72, -148, -149, 95, -147, -354, -125, -223, -223, -80,
	-81, -80, -80, -80, -354, -354, -83, -80, -83, -80,
	-80, -354, -354, -354, -354, -72, -72, -80, -80, -80,
	-72, -80, -80, -72, -80, -80, -80, -80, -80, -80,
	-80, -179, 112, -110, 29, 69, -105, -107, -106, -108,
	56, 60, 62, 57, 58, 59, 63, -212, -87, -96,
	47, -353, -115, 112, -117, 23, -233, 64, 194, 65,
	-353, -179, 67, -87, -110, -87, -113, -231, 124, -189,
	-192, 69, 422, 424, 425, -186, -252, 132, 66, 86,
	-84, -224, -232, -173, -74, -283, -284, -285, -224, 74,
	75, -270, -271, -272, -273, -286, 204, -294, 196, 198,
	199, 44, -274, 205, 190, 45, -239, -260, 403, 404,
	-246, 68, -246, -246, 378, 370, 373, 371, -246, -246,
	-246, -246, -246, -251, 373, -251, -251, -251, -251, 371,
	68, 68, -246, -246, -246, -262, 68, -262, 365, -263,
	68, -263, -263, -263, -263, -295, -295, -84, -227, 67,
	23, 192, -258, -257, -254, -255, -256, -253, 28, 24,
	-258, -49, 239, 210, 177, 68, 177, 242, 243, -326,
	69, 28, -332, 283, -110, -110, -110, -322, -322, -328,
	-302, 208, 203, -110, 69, 69, 74, 72, 72, -127,
	-278, 11, 110, -201, -231, -231, -110, -127, -201, -78,
	215, 67, -356, -354, 72, -125, -42, -124, 70, -111,
	87, 74, -320, -233, 398, 424, -348, 124, -223, -348,
	-351, 490, 193, 70, 69, -345, -348, 304, 286, -348,
	11, -293, 19, -72, -354, -56, -55, 185, 182, 183,
	186, 187, -298, 401, 181, 236, 235, 221, -97, -353,
	-354, 69, 177, -181, 34, 35, -223, 52, -128, -128,
	-159, -195, 19, 11, 47, 47, -73, 57, 83, 84,
	85, 177, -353, -138, -125, -125, -125, -78, 90, -354,
	-80, -81, -84, -354, 69, -354, 177, -354, -354, 69,
	67, 23, 11, 11, -354, 11, 11, -354, -354, 11,
	-125, -125, -125, -354, -354, -80, -151, -149, 97, -84,
	-354, -354, 69, 69, -354, -354, -354, -354, -160, 454,
	-160, -354, -354, -354, -354, -354, -160, -160, -160, -160,
	-80, -80, -354, -354, -354, -80, -354, -354, -80, -354,
	-354, -354, -354, -354, -354, -354, -123, 29, 47, -353,
	-8, -353, -184, -188, -147, -219, -91, -93, -93, -91,
	-93, 56, 56, 56, 61, 56, 61, 56, -106, -233,
	-354, -354, -143, 238, -353, 33, -233, -117, 190, 190,
	190, -81, -118, 12, -87, -118, -118, 177, -191, -194,
	426, 423, 429, 72, 74, 177, -174, 69, -285, 100,
	-273, 68, 72, -279, -221, 45, -274, -276, -274, -274,
	-279, 72, -279, 45, 83, 91, -249, -250, -264, -267,
	-247, 23, 600, 406, 28, 66, 401, 196, 45, 44,
	199, 81, -261, 405, 75, -251, -251, -246, -246, -246,
	378, -246, -251, -252, 29, -252, -252, -252, -252, -251,
	-268, 74, -268, 75, -262, 75, 70, 66, -223, -169,
	-110, -255, -254, -256, 373, 418, 132, 430, -50, 8,
	9, 10, -223, -307, -308, -309, -223, 110, 244, 245,
	-223, -335, 316, -330, 284, 293, 90, 16, 490, 193,
	193, -110, -322, -118, 72, 72, -198, -201, -125, -325,
	230, 231, -179, 189, -321, 193, 177, 177, 193, 307,
	-324, -223, 11, 11, 304, 11, -324, 340, -204, 69,
	-213, -274, -304, -272, -273, -303, 197, 204, -213, 204,
	201, -274, 205, 196, 197, -210, -274, 193, 23, -213,
	-213, -280, 100, -213, 32, 32, 112, -224, -224, 69,
	74, 74, 53, -110, -79, -170, 124, -224, -81, -78,
	90, -125, -354, -354, -83, 124, -232, -237, 133, 370,
	214, 368, 361, 388, 375, 403, 366, 404, -234, -237,
	-125, -125, -125, -125, -125, 11, 11, 11, 487, -155,
	99, -84, 96, -125, -125, -223, -165, -353, -160, -160,
	-160, -160, -160, -354, -354, -161, -160, -161, -161, -354,
	-161, -161, -354, -161, -161, -161, -161, -161, -161, -161,
	-183, 66, -184, -142, -145, -144, -353, -8, -354, -175,
	6, 490, -180, -223, -118, 69, 100, 100, -100, -99,
	66, 67, -101, 66, -99, 56, 56, -178, 68, 69,
	-144, -353, -180, -125, -117, -353, -353, -353, -354, -155,
	-84, -118, 423, 427, 428, -284, -285, -288, -287, -223,
	-221, 196, -294, 44, -294, -279, -279, -279, -279, 68,
	83, -353, 601, 75, -125, 9, 45, 45, 45, 74,
	70, -252, -252, -251, -246, -252, 72, 133, -252, 70,
	69, 70, 69, 70, 69, -121, 547, 91, -110, -171,
	23, 29, -280, -280, -280, 66, 70, 69, -238, -223,
	-223, -223, -338, 490, 289, -336, -334, 295, 296, 297,
	298, 299, -325, 294, -332, 291, 74, 72, -110, -322,
	-127, -251, -110, -324, 124, 124, -223, -324, 304, -350,
	490, -324, -324, 11, -324, 74, -73, -55, 68, -269,
	72, -221, -279, -206, 196, 72, 72, 72, -221, 72,
	-221, -223, 45, 45, 72, -110, -223, -269, 72, -84,
	-223, -223, 177, -223, -182, 69, -82, -354, -125, -161,
	177, -354, -246, -246, -246, -263, -246, 354, -246, 354,
	-354, -354, 19, 19, 19, 19, -354, -125, -125, -125,
	-353, -76, 451, -84, 69, 69, -228, 72, -161, -161,
	-161, -161, 27, -183, 69, -354, -354, 47, -354, -354,
	69, -155, -188, -84, -84, -84, 68, -84, -177, -223,
	238, -354, -117, -212, -177, -177, -177, -173, 70, 69,
	-246, -246, 45, -276, -177, -125, 23, -131, 452, 453,
	-252, -251, 74, -251, 75, 75, 547, 68, -8, -169,
	-280, 72, 133, 72, 133, 74, -110, -310, -311, -312,
	81, 489, 91, 246, 247, 206, 248, 249, 250, -309,
	-238, -238, -238, -341, -342, -340, 292, 314, 315, 300,
	-339, -337, 309, 310, 311, 312, 90, 74, 74, 74,
	-333, 283, 90, 292, 16, 23, -201, -313, -199, -350,
	-350, 286, -324, -79, -269, -157, 209, 210, -238, -238,
	-227, -276, 45, 72, -211, 193, 23, 193, -157, -269,
	29, 182, 87, -224, -89, 11, -170, -170, 124, -251,
	72, -125, -125, -125, -125, -354, -354, -354, -125, -354,
	74, -125, -125, -141, 112, 45, -145, -142, 47, -8,
	-353, -223, -173, -177, 70, 69, -144, -115, -233, -354,
	-354, -354, -290, -289, 67, 200, 81, -287, -172, -172,
	-279, -279, 70, -354, -353, -252, -252, 70, 70, -288,
	-169, -171, 72, 133, 19, -170, -312, 74, 250, 246,
	250, 250, 250, 250, 251, -329, 81, 290, -340, 301,
	552, 285, 316, 75, 75, 111, 30, 31, -337, 75,
	75, 75, 75, -334, 16, 490, -332, 291, 74, 74,
	-314, 38, -316, 39, -349, 23, -349, 304, 11, 70,
	72, -239, -239, 68, -279, -279, 72, -223, -157, 28,
	28, -353, -118, -87, -82, -354, -354, -354, -354, -75,
	110, 490, -354, -354, -155, 16, 9, -142, -8, 70,
	-223, -117, -289, 72, -280, 74, 207, -259, 603, 602,
	-125, 70, -8, 237, -171, 36, 36, 242, 243, 74,
	74, 28, 302, 176, 28, 75, 176, 457, 291, 74,
	72, 292, -248, 194, -317, 43, -315, -266, 42, 16,
	-322, -87, -288, -227, 68, -125, -296, -297, 112, -152,
	13, -170, -354, 488, 63, 491, -166, 114, 113, -139,
	-184, -354, 75, -110, -354, -291, -290, -169, 238, -21,
	-3, -10, -11, -12, -13, -15, -51, -16, -17, -22,
	-23, -18, -57, -58, -66, -64, -65, -61, -60, -26,
	-24, -27, -19, -28, -29, -30, -34, -35, -25, -36,
	94, 195, 272, 341, 75, 28, 75, 28, 305, 292,
	23, -178, 75, -316, 16, -318, 40, 41, 74, 490,
	-118, 70, 68, -288, -354, 69, -223, -153, 14, 16,
	53, 489, 492, -354, -167, 93, -168, 111, 457, -129,
	75, 176, -167, 68, -259, -158, 240, 241, -169, -84,
	-84, 72, -47, -229, 275, 276, 277, -224, -37, -21,
	303, 303, 74, 38, 114, 74, 16, 16, 284, -152,
	-291, -288, 70, -297, 47, -163, 455, -154, -84, -140,
	-86, -84, 53, -168, 116, 117, 238, 116, 117, -124,
	-177, -169, 72, 72, -38, -39, 95, 96, 273, 274,
	278, -238, 69, 606, 74, 74, 28, 289, 21, -325,
	-153, 70, -291, 222, -162, -164, -223, 69, 490, 90,
	-223, 70, -171, 99, 97, -39, -84, -37, 19, 19,
	19, 28, -224, 99, -21, 306, -163, -291, 223, 69,
	23, -86, 491, -168, -300, -301, 66, -14, -20, -13,
	-10, -11, -12, 341, 94, -37, 96, 606, -48, 75,
	-8, -46, -45, 75, -48, 280, 91, 281, 72, -125,
	-325, -353, -164, -165, 492, -301, 66, -300, 66, 10,
	9, -169, -37, 606, -37, 99, 97, -40, -41, 98,
	-21, 69, 279, -125, 220, -299, 208, 203, 206, 29,
	-299, 606, 99, 606, 195, -37, 99, 97, -41, -84,
	-45, -354, -354, 202, 28, 83, 99, 94, 606, 195,
	-37, 96, 99, 606, -37, 195, 99, 606, 195,
}

var yyDef = [...]int{
	35, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, -2, 752, 752, 752, 752,
	752, 752, 850, -2, 612, 0, 0, 0, 0, -2,
	725, 726, 727, 731, 732, 747, 749, 0, 343, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 537, 41,
	0, 0, 64, 65, 1204, 0, 750, 739, 740, 0,
	0, 1767, 2, 1142, 0, 761, 754, 0, 1204, 1204,
	0, 0, 96, 0, 0, 0, 851, 0, 0, 0,
	1202, 1202, 247, 1202, 1202, 0, 1218, 245, 0, 1199,
	1214, 1215, 1216, 0, 0, 0, 1200, 0, 1200, 1200,
	1200, 1200, 1200, 1200, 1200, 0, 671, 870, 1227, 1228,
	1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524,
	1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534,
	1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544,
	1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554,
	1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564,
	1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574,
	1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584,
	1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594,
	1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604,
	1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614,
	1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624,
	1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634,
	1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644,
	1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654,
	1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664,
	1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674,
	1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684,
	1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694,
	1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704,
	1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714,
	1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724,
	1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734,
	1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744,
	1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754,
	1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764,
	0, 0, 0, 716, 0, 682, 683, 684, 0, 686,
	0, 0, 0, 0, 0, 696, 699, 703, 0, 1142,
	1142, 558, 559, 560, 721, 722, 710, 723, 0, 0,
	0, 0, 0, 831, 322, 324, 0, 344, 0, 347,
	350, 1233, 733, 0, 0, 1258, 1259, 0, 0, 0,
	0, 0, 1665, 190, 261, 192, 192, 192, 192, -2,
	-2, -2, 192, 192, 0, -2, 192, -2, 1673, 192,
	0, -2, -2, 192, 192, 192, 260, 250, 251, 252,
	0, 0, 0, 1665, 0, 538, 535, 536, 752, 0,
	756, 0, 1205, 728, 53, 0, 55, 1158, 852, 853,
	854, 1765, 1766, 0, 39, 1148, 0, 0, 764, 762,
	763, 753, 0, 775, 805, 0, 881, 0, 887, 889,
	-2, -2, 0, 930, 931, 932, 933, 934, 935, 0,
	0, 0, 0, 0, 0, 0, 958, 959, 960, 961,
	962, 963, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122,
	1766, 891, 892, 1112, 1171, 0, 1048, 1049, 1050, 1051,
	1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061,
	1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071,
	1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081,
	1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 0, 0,
	1749, 0, 0, 0, 0, 0, 0, 0, 1748, 0,
	1103, 0, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032,
	1032, 1762, 1763, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1737,
	1738, 1739, 1740, 1742, 1751, 1752, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 75,
	77, 870, 81, 1715, 0, 1176, -2, -2, 1178, 0,
	0, 0, -2, -2, -2, -2, 0, -2, 1112, 0,
	97, 1134, 752, 98, 0, 387, 388, 0, 1549, 582,
	1221, 1222, 0, 0, 0, 245, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 1202, 247, 0, 0, 652,
	0, 653, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 670, 0, 672, 673, 716, 675,
	0, 0, 1202, 1202, 0, 0, 0, 0, 0, 584,
	585, 716, 716, 716, 716, 713, 0, 713, 693, 713,
	711, 712, 0, 698, 0, 0, 0, 706, 707, 0,
	734, 0, 0, 741, 743, 744, 745, 746, 742, 0,
	751, 0, 0, 0, 326, 0, 0, 346, 328, 0,
	331, 332, 333, 334, 335, 336, 337, 338, 339, 340,
	341, 342, 0, 349, 0, 1231, 1234, 738, 1249, 1250,
	0, 1260, 1261, 196, 196, 0, 0, 0, 0, 159,
	192, 0, 161, 192, 192, 192, 0, 192, 192, 168,
	169, 192, 171, 172, 173, 174, 175, 192, 177, 178,
	179, 192, 192, 182, 192, 192, 185, 186, 187, 188,
	189, 259, 196, 0, 0, 196, 0, 0, 520, 0,
	0, 0, 0, 525, 526, 527, 528, 0, 0, 531,
	532, 761, 43, 60, 0, 757, 758, 0, 0, 0,
	54, 0, 0, 59, 1768, 47, 0, 0, 1143, 1146,
	1147, 1135, 1136, 1139, 0, 0, 759, 765, 766, 755,
	0, 776, 0, 0, 0, 0, 806, 0, 808, 809,
	810, 811, 0, 885, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 909, 910, 911, 912, 913, 914, 915,
	888, 0, 902, 0, 0, 0, 951, 952, 953, 954,
	955, 956, 0, 764, 764, 0, 0, 928, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	764, 0, 1104, 0, 1015, 1024, 0, 1016, 1025, 1017,
	1026, 1018, 0, 1019, 1027, 1020, 1028, 1021, 1022, 1029,
	1023, 0, 0, 0, 924, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 764, 764,
	0, 0, 0, 764, 0, 0, 764, 0, 0, 0,
	0, 0, 0, 0, 79, 0, 869, 0, 812, 814,
	815, 816, -2, 0, 820, 875, 922, 1227, -2, 0,
	0, 0, 71, 72, 0, 0, 0, 0, 82, 84,
	0, 0, 1715, 1179, 1180, 494, 1193, 1194, 1195, 0,
	1191, 0, 1142, 761, 599, 0, 389, 0, 401, 483,
	413, 414, 415, 476, 417, 476, 476, 0, 476, 476,
	476, 476, 476, 491, 491, 491, 491, 491, 459, 460,
	461, 462, 463, 0, 0, 436, 476, 476, 476, 440,
	466, 467, 468, 469, 470, 471, 472, 473, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 478, 478,
	480, 480, 480, 480, 480, 0, 0, 581, 0, 1219,
	0, 0, 247, -2, 0, -2, 0, 865, 0, 0,
	872, 0, 0, 108, 277, 263, 107, 0, 241, 246,
	242, 243, 244, 0, 0, 0, 0, 254, 667, 1201,
	0, 660, 73, 661, 662, 663, 664, 665, 256, 666,
	871, 674, 717, 0, 719, 0, 0, 831, 679, 680,
	681, 586, 687, 688, 689, 695, 716, 0, 0, 0,
	831, 716, 697, 916, 700, 1032, 0, 724, 736, 735,
	0, 748, 0, 323, 325, 327, 345, 0, 0, 348,
	351, 0, 0, 0, 0, 1252, 0, 1254, 1256, 0,
	0, 197, 198, 199, 0, 191, 192, 192, 192, 192,
	192, 0, 192, 192, 214, 262, 0, 160, 0, 194,
	162, 163, 164, 192, 166, 167, 170, 176, 180, 181,
	183, 184, 258, 0, 0, 0, 0, 157, 0, 521,
	522, 523, 524, 533, 530, 764, 0, 0, 729, 730,
	56, 0, 0, 1160, 1225, 1226, 1262, 1263, 1264, 1265,
	1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275,
	1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285,
	1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295,
	1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305,
	1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315,
	1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325,
	1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335,
	1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345,
	1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355,
	1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365,
	1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375,
	1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385,
	1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395,
	1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405,
	1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415,
	1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425,
	1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435,
	1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445,
	1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455,
	1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465,
	1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475,
	1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485,
	1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495,
	1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505,
	1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 37,
	0, 1149, 0, 0, 0, 0, 1138, 1140, 1141, 0,
	0, 1123, 0, 0, 767, 760, 40, 882, 883, 884,
	886, 903, 0, 905, 907, 807, 777, 0, 1113, 1229,
	-2, 893, 894, 918, 919, 920, 0, 0, 0, 0,
	916, 898, 0, 936, 937, 938, 939, 940, 941, 942,
	943, 944, 945, 946, 947, 950, 1046, 1047, 0, 948,
	949, 957, 0, 924, 921, 0, 1170, 0, 0, 926,
	771, 772, 0, 0, 0, 997, 0, 0, 933, 1115,
	0, 933, 1115, 0, 0, 0, 0, 0, 0, 0,
	0, 1110, 1107, 0, 0, 1033, 0, 0, 0, 0,
	0, 925, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 868, 0, 0, 0, 0, 0, 0,
	855, 0, 0, 858, 0, 0, 0, 0, 0, 0,
	0, 0, 824, 0, 826, 0, 875, 0, 0, 0,
	924, 879, 0, 879, 76, 879, 78, 0, 874, 1177,
	0, 0, 0, 87, 88, 83, 1181, 0, 1187, -2,
	1189, 1113, 0, 1148, 764, 386, 600, 602, 605, 606,
	607, 390, 392, 393, 394, 0, -2, 573, 0, 0,
	563, 565, 565, 0, 561, 562, 397, 486, 484, 485,
	416, 0, 491, 491, 476, 476, 476, 476, 445, 491,
	448, 451, 452, 494, 0, 494, 494, 494, 494, 491,
	0, 0, 437, 438, 439, 428, 0, 429, 478, 431,
	0, 432, 433, 434, 435, 579, 580, 0, 0, 0,
	93, 0, 102, -2, 501, 502, 503, 0, 498, 1203,
	103, 0, 279, 280, 0, 217, 0, 248, 249, 110,
	0, 0, 264, 0, 385, 0, 654, 0, 656, 253,
	658, 668, 669, 659, 0, 0, 718, 676, 677, 678,
	879, 0, 0, 690, 714, 715, 713, 716, 694, 708,
	0, 0, 701, 0, 737, 832, 329, 330, 352, 79,
	0, 1232, 1251, 0, 1255, 1257, 0, 200, 202, 0,
	151, 0, 0, 193, 0, 165, 0, 0, 0, 0,
	0, 529, 0, 759, 61, 613, 614, -2, 645, 1211,
	645, 645, 631, 548, 645, 0, 0, 0, 57, 0,
	1159, 0, 0, 48, 0, 1564, 51, 0, 1144, 1145,
	1137, 0, 1196, 1197, 1124, 1125, 94, 768, 904, 906,
	908, 0, 924, 895, 916, 899, 0, 896, 0, 890,
	0, 0, 929, -2, 0, 994, 0, 995, 996, 0,
	0, 0, 0, 0, 1039, 0, 0, 1040, 1005, 0,
	0, 0, 0, 0, 1011, 1134, 0, 1108, 0, 0,
	1014, 1034, 0, 0, 1035, 1036, 1037, 1038, 983, 0,
	984, 0, 0, 0, 0, 0, 990, 991, 992, 993,
	0, 0, 786, 786, 786, 0, 786, 786, 0, 786,
	786, 786, 786, 786, 786, 786, 1164, 0, 0, 0,
	1153, 0, 879, 1172, 0, 0, 813, 846, 848, 0,
	843, 856, 857, 859, 0, 861, 0, 863, 864, 833,
	819, 923, 821, 0, 0, 0, 875, 830, 0, 0,
	0, 0, 1134, 0, 879, 69, 70, 0, 85, 86,
	0, 0, 92, 495, 496, 0, 216, 0, 603, 0,
	391, 0, 566, 0, 0, 565, 565, 565, 564, 565,
	556, 566, 557, 0, 402, 0, 404, 405, 406, 407,
	408, 0, 0, 0, 0, 0, 490, 0, 515, 517,
	0, 0, 412, 487, 0, 494, 494, 491, 443, 444,
	476, 449, 494, 453, 0, 454, 455, 456, 457, 494,
	0, 474, 0, 0, 430, 0, 596, 0, 1220, 95,
	0, 504, 505, 506, 0, 548, 548, 548, 0, 281,
	282, 283, 866, 0, 218, 219, 0, 0, 0, 0,
	873, 120, 0, 278, 0, 0, 0, 0, 0, 0,
	0, 74, 257, 685, 587, 588, 831, 692, 917, 702,
	704, 705, 491, 0, 1253, 0, 0, 0, 0, 0,
	212, 195, 0, 0, 0, 0, 158, 0, 767, 0,
	0, 565, 0, 632, 633, 0, 646, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1212, 1213, 0,
	0, 0, 549, 0, 640, 641, 0, 1162, 1161, 0,
	49, 50, 1150, 38, 47, 0, 778, 1114, 0, 897,
	0, 900, 786, 964, 927, 773, 0, 0, 476, 476,
	1093, 476, 480, 1096, 476, 1098, 476, 1101, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1105,
	1013, 1111, 0, 0, 0, 779, 780, 782, 985, 986,
	987, 988, 989, 786, 786, 968, 787, 969, 970, 786,
	972, 973, 786, 975, 976, 977, 978, 980, 981, 982,
	62, 0, 1164, 1151, 1166, 1168, 0, 0, 0, 0,
	-2, 1511, 0, 837, 1134, 0, 0, 0, 840, 847,
	0, 0, 841, 0, 842, 860, 862, 817, 0, 0,
	822, 0, 0, -2, 829, 0, 0, 0, 839, 1142,
	880, 68, 89, 90, 91, 601, 604, 0, 567, 476,
	476, 0, 571, 563, 572, 550, 552, 553, 555, 0,
	403, 0, 0, 411, 488, 0, 514, 516, 518, 519,
	477, 441, 442, 494, 450, 446, 492, 493, 458, 491,
	0, 491, 0, 481, 0, 583, 597, 0, 0, 0,
	93, 548, 0, 0, 0, 0, 225, 0, 221, 0,
	0, 0, 128, 0, 111, 112, 113, 115, 116, 0,
	0, 0, 109, 0, 266, 0, 269, 270, 655, 657,
	716, 1243, 867, 212, 201, 203, 204, 212, 215, 152,
	0, 153, 155, 0, 154, 534, 94, 615, 0, 642,
	0, 0, 1219, 563, 0, -2, 618, 623, 624, 625,
	626, 627, 0, 638, 0, 620, 0, 642, 0, 635,
	0, 0, 0, 52, 45, 94, 94, 965, 901, 979,
	0, 998, 1090, 491, 1094, 1095, 1097, 1099, 1100, 1102,
	1000, 999, 0, 0, 0, 0, 1006, 0, 0, 0,
	0, 0, 0, 1109, 0, 0, 784, 783, 966, 967,
	971, 974, 0, 63, 0, 1169, -2, 0, 0, 80,
	0, 1142, 1173, 1174, 1175, 844, 0, 849, 0, 835,
	0, 875, 827, 0, 0, 0, 0, 67, 540, 0,
	1139, 1139, 565, 565, 0, 0, 0, 489, 0, 0,
	447, 494, 475, 494, 0, 0, 598, 0, 93, 95,
	0, 509, 510, 511, 512, 513, 0, 94, 226, 227,
	0, 0, 0, 232, 0, 0, 0, 0, 0, 220,
	222, 223, 224, 146, 129, 130, 0, 0, 0, 0,
	121, 122, 0, 0, 0, 0, 0, 117, 118, 119,
	265, 0, 0, 268, 0, 0, 691, 1245, 1239, 205,
	205, 0, 156, 0, 0, 617, 643, 0, 401, 401,
	0, 565, 565, 634, 0, 1209, 1210, 0, 629, 642,
	0, 0, 0, 1163, 879, 0, 0, 769, 774, 1091,
	1092, 0, 0, 0, 0, 1007, 1008, 1009, 1041, 1012,
	1106, 0, 0, 1134, 0, 0, 1167, 1152, 0, 1156,
	0, 838, 66, 0, 834, 0, 823, 825, 875, 876,
	877, 878, 539, 543, 0, 548, 0, 568, 569, 570,
	551, 554, 0, 398, 0, 464, 465, 479, 482, 0,
	100, 0, 507, 508, 0, 95, 228, 229, 230, 231,
	233, 234, 0, 0, 0, 106, 0, 0, 131, 0,
	0, 0, 0, 141, 142, 143, 144, 145, 123, 124,
	125, 126, 127, 114, 0, 0, 267, 0, 272, 273,
	1206, 1247, -2, 0, 149, 0, 150, 213, 0, 616,
	644, 395, 396, 0, 1219, 0, 619, 628, 630, 0,
	637, 0, 1126, 46, 94, 1001, 1003, 1002, 1004, 0,
	0, 0, 1030, 1031, 788, 0, 0, 1155, 0, 845,
	836, 828, 544, 545, 0, 547, 0, 409, 399, 400,
	0, 541, 93, 0, 0, 235, 236, 237, 238, 147,
	148, 132, 133, 0, 135, 136, 0, 0, 0, 275,
	0, 271, 833, 0, 1239, 0, 1241, 0, 1238, 0,
	206, 879, 0, 0, 0, 636, 0, 648, 0, 1131,
	0, 770, 1010, 0, 0, 0, 0, 0, 0, 785,
	1165, -2, 546, 0, 398, 99, 542, 101, 284, 93,
	355, 356, 357, 358, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 383, 384,
	0, 0, 0, 0, 0, 137, 0, 139, 140, 274,
	0, 36, 0, 1246, 0, 1244, 0, 0, 1240, 0,
	1126, 541, 0, 0, 647, 0, 0, 798, 0, 0,
	1042, 0, 1045, 781, 789, 0, 792, 0, 0, 0,
	803, 0, 790, 0, 410, 93, 0, 0, 105, 0,
	0, 1221, 0, 0, -2, -2, -2, 1223, 0, 353,
	134, 138, 276, 1207, 1208, 1248, 0, 0, 0, 1131,
	621, 0, 541, 649, 0, 44, 0, 1132, 1133, 1127,
	1128, 1130, 1043, 0, 793, 794, 795, 796, 797, 0,
	0, 95, 285, 286, 0, 295, 0, 0, 0, 0,
	0, 309, 0, 0, 1242, 1236, 207, -2, 209, 211,
	798, 541, 639, 0, 799, 800, 0, 0, 0, 0,
	804, 574, 0, 0, 0, 296, 0, 0, 0, 0,
	0, 0, 1224, 239, 354, 0, 42, 622, 0, 0,
	0, 1129, 0, 791, 575, 576, 0, 93, 287, 288,
	289, 290, 291, 0, 293, 0, 0, 0, 305, 306,
	307, 0, 314, 316, 317, 318, 0, 320, 321, 310,
	210, 0, 801, 802, 1044, 577, 0, 578, 0, 0,
	0, 104, 0, 0, 0, 0, 0, 0, 302, 0,
	308, 0, 319, 0, 0, 589, 591, 592, 0, 0,
	590, 0, 0, 297, 298, 0, 0, 0, 303, 0,
	315, 650, 651, 593, 594, 595, 292, 294, 0, 300,
	0, 0, 0, 0, 0, 299, 0, 304, 301,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 92, 3, 3, 3, 127, 119, 3,
	68, 70, 124, 122, 69, 123, 177, 125, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 606,
	101, 100, 102, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 129, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 118, 3, 130,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 82, 83, 84, 85,
	86, 87, 88, 89, 90, 91, 93, 94, 95, 96,
	97, 98, 99, 103, 104, 105, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 116, 117, 120, 121,
	126, 128, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 274, 275,
}

var yyTok3 = [...]int{
	57600, 276, 57601, 277, 57602, 278, 57603, 279, 57604, 280,
	57605, 281, 57606, 282, 57607, 283, 57608, 284, 57609, 285,
	57610, 286, 57611, 287, 57612, 288, 57613, 289, 57614, 290,
	57615, 291, 57616, 292, 57617, 293, 57618, 294, 57619, 295,
	57620, 296, 57621, 297, 57622, 298, 57623, 299, 57624, 300,
	57625, 301, 57626, 302, 57627, 303, 57628, 304, 57629, 305,
	57630, 306, 57631, 307, 57632, 308, 57633, 309, 57634, 310,
	57635, 311, 57636, 312, 57637, 313, 57638, 314, 57639, 315,
	57640, 316, 57641, 317, 57642, 318, 57643, 319, 57644, 320,
	57645, 321, 57646, 322, 57647, 323, 57648, 324, 57649, 325,
	57650, 326, 57651, 327, 57652, 328, 57653, 329, 57654, 330,
	57655, 331, 57656, 332, 57657, 333, 57658, 334, 57659, 335,
	57660, 336, 57661, 337, 57662, 338, 57663, 339, 57664, 340,
	57665, 341, 57666, 342, 57667, 343, 57668, 344, 57669, 345,
	57670, 346, 57671, 347, 57672, 348, 57673, 349, 57674, 350,
	57675, 351, 57676, 352, 57677, 353, 57678, 354, 57679, 355,
	57680, 356, 57681, 357, 57682, 358, 57683, 359, 57684, 360,
	57685, 361, 57686, 362, 57687, 363, 57688, 364, 57689, 365,
	57690, 366, 57691, 367, 57692, 368, 57693, 369, 57694, 370,
	57695, 371, 57696, 372, 57697, 373, 57698, 374, 57699, 375,
	57700, 376, 57701, 377, 57702, 378, 57703, 379, 57704, 380,
	57705, 381, 57706, 382, 57707, 383, 57708, 384, 57709, 385,
	57710, 386, 57711, 387, 57712, 388, 57713, 389, 57714, 390,
	57715, 391, 57716, 392, 57717, 393, 57718, 394, 57719, 395,
	57720, 396, 57721, 397, 57722, 398, 57723, 399, 57724, 400,
	57725, 401, 57726, 402, 57727, 403, 57728, 404, 57729, 405,
	57730, 406, 57731, 407, 57732, 408, 57733, 409, 57734, 410,
	57735, 411, 57736, 412, 57737, 413, 57738, 414, 57739, 415,
	57740, 416, 57741, 417, 57742, 418, 57743, 419, 57744, 420,
	57745, 421, 57746, 422, 57747, 423, 57748, 424, 57749, 425,
	57750, 426, 57751, 427, 57752, 428, 57753, 429, 57754, 430,
	57755, 431, 57756, 432, 57757, 433, 57758, 434, 57759, 435,
	57760, 436, 57761, 437, 57762, 438, 57763, 439, 57764, 440,
	57765, 441, 57766, 442, 57767, 443, 57768, 444, 57769, 445,
	57770, 446, 57771, 447, 57772, 448, 57773, 449, 57774, 450,
	57775, 451, 57776, 452, 57777, 453, 57778, 454, 57779, 455,
	57780, 456, 57781, 457, 57782, 458, 57783, 459, 57784, 460,
	57785, 461, 57786, 462, 57787, 463, 57788, 464, 57789, 465,
	57790, 466, 57791, 467, 57792, 468, 57793, 469, 57794, 470,
	57795, 471, 57796, 472, 57797, 473, 57798, 474, 57799, 475,
	57800, 476, 57801, 477, 57802, 478, 57803, 479, 57804, 480,
	57805, 481, 57806, 482, 57807, 483, 57808, 484, 57809, 485,
	57810, 486, 57811, 487, 57812, 488, 57813, 489, 57814, 490,
	57815, 491, 57816, 492, 57817, 493, 57818, 494, 57819, 495,
	57820, 496, 57821, 497, 57822, 498, 57823, 499, 57824, 500,
	57825, 501, 57826, 502, 57827, 503, 57828, 504, 57829, 505,
	57830, 506, 57831, 507, 57832, 508, 57833, 509, 57834, 510,
	57835, 511, 57836, 512, 57837, 513, 57838, 514, 57839, 515,
	57840, 516, 57841, 517, 57842, 518, 57843, 519, 57844, 520,
	57845, 521, 57846, 522, 57847, 523, 57848, 524, 57849, 525,
	57850, 526, 57851, 527, 57852, 528, 57853, 529, 57854, 530,
	57855, 531, 57856, 532, 57857, 533, 57858, 534, 57859, 535,
	57860, 536, 57861, 537, 57862, 538, 57863, 539, 57864, 540,
	57865, 541, 57866, 542, 57867, 543, 57868, 544, 57869, 545,
	57870, 546, 57871, 547, 57872, 548, 57873, 549, 57874, 550,
	57875, 551, 57876, 552, 57877, 553, 57878, 554, 57879, 555,
	57880, 556, 57881, 557, 57882, 558, 57883, 559, 57884, 560,
	57885, 561, 57886, 562, 57887, 563, 57888, 564, 57889, 565,
	57890, 566, 57891, 567, 57892, 568, 57893, 569, 57894, 570,
	57895, 571, 57896, 572, 57897, 573, 57898, 574, 57899, 575,
	57900, 576, 57901, 577, 57902, 578, 57903, 579, 57904, 580,
	57905, 581, 57906, 582, 57907, 583, 57908, 584, 57909, 585,
	57910, 586, 57911, 587, 57912, 588, 57913, 589, 57914, 590,
	57915, 591, 57916, 592, 57917, 593, 57918, 594, 57919, 595,
	57920, 596, 57921, 597, 57922, 598, 57923, 599, 57924, 600,
	57925, 601, 57926, 602, 57927, 603, 57928, 604, 57929, 605,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:537
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:541
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:548
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:583
		{
			setParseTree(yylex, nil)
		}
	case 36:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:589
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 37:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:595
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			if err := yyDollar[1].selStmt.SetInto(yyDollar[5].into); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 38:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:606
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:612
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 40:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:622
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:629
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 42:
		yyDollar = yyS[yypt-14 : yypt+1]
//line sql.y:633
		{
			yyVAL.selStmt = &Select{With: yyDollar[1].with, Comments: Comments(yyDollar[3].bytes2), Cache: yyDollar[4].str, Distinct: yyDollar[5].str, Hints: yyDollar[7].str, SelectExprs: yyDollar[8].selectExprs, From: yyDollar[10].tableExprs, Where: NewWhere(WhereStr, yyDollar[11].expr), GroupBy: GroupBy(yyDollar[12].exprs), Having: NewWhere(HavingStr, yyDollar[13].expr), Window: yyDollar[14].window}
			if yyDollar[6].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 43:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:640
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 44:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:646
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr), Window: yyDollar[13].window, Into: yyDollar[8].into}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 45:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:654
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:658
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:667
		{
			yyVAL.into = nil
		}
	case 48:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:671
		{
			yyVAL.into = &Into{Variables: yyDollar[2].variables}
		}
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:675
		{
			yyVAL.into = &Into{Outfile: string(yyDollar[3].bytes)}
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:679
		{
			yyVAL.into = &Into{Dumpfile: string(yyDollar[3].bytes)}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:685
		{
			yyVAL.variables = Variables{yyDollar[1].colIdent}
		}
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:689
		{
			yyVAL.variables = append(yyVAL.variables, yyDollar[3].colIdent)
		}
	case 53:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:695
		{
			yyVAL.with = &With{Ctes: yyDollar[2].tableExprs, Recursive: false}
		}
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:699
		{
			yyVAL.with = &With{Ctes: yyDollar[3].tableExprs, Recursive: true}
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:705
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:709
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 57:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:715
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[4].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[2].columns}
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:721
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:729
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:735
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:743
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:749
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].assignExprs)
			yyVAL.statement = ins
		}
	case 63:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:761
		{
			cols := make(Columns, 0, len(yyDollar[7].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].assignExprs))
			for _, updateList := range yyDollar[7].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].assignExprs)}
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:773
		{
			yyVAL.str = InsertStr
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:777
		{
			yyVAL.str = ReplaceStr
		}
	case 66:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:783
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].assignExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 67:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:789
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 68:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:793
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 69:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:797
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 70:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:801
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:806
		{
		}
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:807
		{
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:811
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:815
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:821
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:825
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:831
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:835
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 79:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:840
		{
			yyVAL.partitions = nil
		}
	case 80:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:844
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 81:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:850
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 82:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:854
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 83:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:861
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:870
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:874
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:880
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 87:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:884
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 88:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:888
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 89:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:894
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:898
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 91:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:902
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:906
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:911
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 94:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:916
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 95:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:921
		{
			yyVAL.boolean = yySpecialCommentMode(yylex)
		}
	case 96:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:927
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:936
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:941
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 99:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:946
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 100:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:950
		{
			yyDollar[2].viewSpec.ViewName = yyDollar[4].tableName.ToViewName()
			yyDollar[2].viewSpec.ViewExpr = yyDollar[8].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[2].viewSpec, SpecialCommentMode: yyDollar[7].boolean, SubStatementPositionStart: yyDollar[6].int, SubStatementPositionEnd: yyDollar[9].int - 1}
		}
	case 101:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:956
		{
			yyDollar[4].viewSpec.ViewName = yyDollar[6].tableName.ToViewName()
			yyDollar[4].viewSpec.ViewExpr = yyDollar[10].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[4].viewSpec, SpecialCommentMode: yyDollar[9].boolean, SubStatementPositionStart: yyDollar[8].int, SubStatementPositionEnd: yyDollar[11].int - 1, OrReplace: true}
		}
	case 102:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:962
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 103:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:970
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 104:
		yyDollar = yyS[yypt-16 : yypt+1]
//line sql.y:978
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName, Definer: yyDollar[2].str, Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[15].statement}, SpecialCommentMode: yyDollar[14].boolean, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[16].int - 1}
		}
	case 105:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:982
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName, Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[11].statement}, SpecialCommentMode: yyDollar[10].boolean, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[12].int - 1}
		}
	case 106:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:986
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].tlsOptionItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].accountLimitItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].passLockItems)
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames, TLSOptions: tlsOptions, AccountLimits: accountLimits, PasswordOptions: passwordOptions, Locked: locked, Attribute: yyDollar[9].str}
		}
	case 107:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1005
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 108:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1014
		{
			yyVAL.accountNames = nil
		}
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1018
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 110:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1023
		{
			yyVAL.tlsOptionItems = nil
		}
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1027
		{
			yyVAL.tlsOptionItems = nil
		}
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1031
		{
			yyVAL.tlsOptionItems = yyDollar[2].tlsOptionItems
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1037
		{
			yyVAL.tlsOptionItems = []TLSOptionItem{yyDollar[1].tlsOptionItem}
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1041
		{
			yyVAL.tlsOptionItems = append(yyDollar[1].tlsOptionItems, yyDollar[3].tlsOptionItem)
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1047
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1051
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1055
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1059
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1063
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 120:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1068
		{
			yyVAL.accountLimitItems = nil
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1072
		{
			yyVAL.accountLimitItems = yyDollar[2].accountLimitItems
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1078
		{
			yyVAL.accountLimitItems = []AccountLimitItem{yyDollar[1].accountLimitItem}
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1082
		{
			yyVAL.accountLimitItems = append(yyDollar[1].accountLimitItems, yyDollar[2].accountLimitItem)
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1088
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1092
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1096
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1100
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 128:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1105
		{
			yyVAL.passLockItems = nil
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1109
		{
			yyVAL.passLockItems = yyDollar[1].passLockItems
		}
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1115
		{
			yyVAL.passLockItems = []PassLockItem{yyDollar[1].passLockItem}
		}
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1119
		{
			yyVAL.passLockItems = append(yyDollar[1].passLockItems, yyDollar[2].passLockItem)
		}
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1125
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1129
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 134:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1133
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1137
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1141
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 137:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1145
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 138:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1149
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 139:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1153
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 140:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1157
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1161
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1165
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1169
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1173
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1177
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 146:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1182
		{
			yyVAL.str = ""
		}
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1186
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.str = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1191
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 149:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1197
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 150:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1202
		{
			yyVAL.statement = &GrantPrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 151:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1206
		{
			yyVAL.statement = &GrantRole{Roles: yyDollar[2].accountNames, To: yyDollar[4].accountNames, WithAdminOption: yyDollar[5].boolean}
		}
	case 152:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1210
		{
			yyVAL.statement = &GrantProxy{On: yyDollar[4].accountName, To: yyDollar[6].accountNames, WithGrantOption: yyDollar[7].boolean}
		}
	case 153:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1216
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &RevokePrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 154:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1221
		{
			yyVAL.statement = &RevokePrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 155:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1225
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[7].accountNames}
		}
	case 156:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1229
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[8].accountNames}
		}
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1233
		{
			yyVAL.statement = &RevokeRole{Roles: yyDollar[2].accountNames, From: yyDollar[4].accountNames}
		}
	case 158:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1237
		{
			yyVAL.statement = &RevokeProxy{On: yyDollar[4].accountName, From: yyDollar[6].accountNames}
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1243
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].strs}
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1247
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].strs}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1251
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].strs}
		}
	case 162:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1255
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].strs}
		}
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1259
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].strs}
		}
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1263
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].strs}
		}
	case 165:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1267
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].strs}
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1271
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].strs}
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1275
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].strs}
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1279
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].strs}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1283
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].strs}
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1287
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].strs}
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1291
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].strs}
		}
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1295
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].strs}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1299
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].strs}
		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1303
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].strs}
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1307
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].strs}
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1311
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].strs}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1315
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].strs}
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1319
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].strs}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1323
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].strs}
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1327
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].strs}
		}
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1331
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].strs}
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1335
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].strs}
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1339
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].strs}
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1343
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].strs}
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1347
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].strs}
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1351
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].strs}
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1355
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].strs}
		}
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1359
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].strs}
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1363
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].strs}
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1369
		{
			yyVAL.grantPrivileges = []Privilege{yyDollar[1].grantPrivilege}
		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1373
		{
			yyVAL.grantPrivileges = append(yyDollar[1].grantPrivileges, yyDollar[3].grantPrivilege)
		}
	case 192:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1378
		{
			yyVAL.strs = nil
		}
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1382
		{
			yyVAL.strs = yyDollar[2].strs
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1388
		{
			yyVAL.strs = []string{yyDollar[1].colIdent.String()}
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1392
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].colIdent.String())
		}
	case 196:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1397
		{
			yyVAL.grantObjectType = GrantObjectType_Any
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1401
		{
			yyVAL.grantObjectType = GrantObjectType_Table
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1405
		{
			yyVAL.grantObjectType = GrantObjectType_Function
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1409
		{
			yyVAL.grantObjectType = GrantObjectType_Procedure
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1415
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1419
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1423
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].colIdent.String()}
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1427
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: "*"}
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1431
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: yyDollar[3].colIdent.String()}
		}
	case 205:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1436
		{
			yyVAL.grantAssumption = nil
		}
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1440
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 207:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1444
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 208:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1448
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].accountName, Roles: nil}
		}
	case 209:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1452
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].accountName, Roles: nil}
		}
	case 210:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1456
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].accountName, Roles: yyDollar[7].accountNames}
		}
	case 211:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1460
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].accountName, Roles: yyDollar[5].accountNames}
		}
	case 212:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1465
		{
			yyVAL.boolean = false
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1469
		{
			yyVAL.boolean = true
		}
	case 214:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1474
		{
			yyVAL.boolean = false
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1478
		{
			yyVAL.boolean = true
		}
	case 216:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1485
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 217:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1497
		{
			yyVAL.procedureParams = nil
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1501
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1507
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1511
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1517
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[1].colIdent.String(), Type: yyDollar[2].columnType}
		}
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1521
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1525
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1529
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 225:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1534
		{
			yyVAL.characteristics = nil
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1538
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1544
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1548
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1554
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1558
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1562
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1566
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1570
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1574
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1578
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1582
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1586
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1590
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 239:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1596
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1602
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: "", Definer: yyDollar[1].str, Security: yyDollar[2].str}
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1606
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: yyDollar[1].str, Definer: yyDollar[2].str, Security: yyDollar[3].str}
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1612
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1616
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1620
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 245:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1625
		{
			yyVAL.str = ""
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1629
		{
			yyVAL.str = yyDollar[3].accountName.String()
		}
	case 247:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1634
		{
			yyVAL.str = ""
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1638
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 249:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1642
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1648
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1652
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1656
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1662
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 254:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1670
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1674
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1680
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1684
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1690
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1698
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1706
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1716
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1720
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1726
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1730
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 265:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1734
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 266:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1738
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 267:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1742
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 268:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1748
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 269:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1752
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1756
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 271:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1760
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 272:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1764
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 273:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1768
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 274:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1774
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1778
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 276:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1782
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1788
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1792
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1798
		{
			yyVAL.str = BeforeStr
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1802
		{
			yyVAL.str = AfterStr
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1808
		{
			yyVAL.str = InsertStr
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1812
		{
			yyVAL.str = UpdateStr
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1816
		{
			yyVAL.str = DeleteStr
		}
	case 284:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1821
		{
			yyVAL.triggerOrder = nil
		}
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1825
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1829
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1835
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 292:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1845
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 293:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1851
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 294:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1855
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1861
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 296:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1865
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 297:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1871
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 298:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1877
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 299:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1882
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 300:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1887
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 301:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1893
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1901
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1905
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 304:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1911
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 305:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1917
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 306:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1921
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 307:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1925
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 308:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1929
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1933
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 310:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1937
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1944
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1948
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1952
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1958
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1962
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1968
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1972
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1976
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1980
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1984
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1988
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1994
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 323:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1998
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2002
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 325:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2006
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2012
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2016
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2022
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2026
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2032
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2038
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2042
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2046
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2050
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2054
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2058
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2062
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2066
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2070
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2074
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2078
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2082
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2088
		{
			yyVAL.statement = &Resignal{}
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2092
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 345:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2096
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2100
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2104
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 348:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2108
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2114
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2119
		{
			yyVAL.exprs = nil
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2123
		{
			yyVAL.exprs = nil
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2127
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2133
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2137
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2143
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 385:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2178
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
		}
	case 386:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2194
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2201
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2206
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2211
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2217
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 391:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2221
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2226
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2230
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2234
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2240
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2248
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2258
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 398:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2267
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2271
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2275
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2280
		{
			yyVAL.columnType = ColumnType{}
		}
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2284
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2293
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2302
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2311
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2320
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2329
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2338
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 409:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2347
		{
			opt := ColumnType{GeneratedExpr: yyDollar[4].expr, Stored: yyDollar[6].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 410:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2356
		{
			opt := ColumnType{GeneratedExpr: yyDollar[6].expr, Stored: yyDollar[8].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2365
		{
			opt := ColumnType{SRID: NewIntVal(yyDollar[3].bytes)}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2376
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2387
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2392
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2398
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2402
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2406
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2410
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2414
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2418
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2422
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2426
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2430
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2434
		{
			yyVAL.columnType = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2440
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 429:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2446
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2452
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2458
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2464
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 433:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2470
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2476
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 435:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2482
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2490
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2494
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2498
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2502
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2506
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 441:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2512
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2516
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2520
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2524
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 445:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2528
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 446:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2532
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 447:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2536
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2540
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2544
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2548
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2552
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2556
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2560
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2564
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2568
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2572
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2576
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 458:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2580
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2584
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2588
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2592
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2596
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2600
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 464:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2604
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 465:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2609
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2615
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2619
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2623
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2627
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2631
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2635
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2639
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2643
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2649
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2654
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 476:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2659
		{
			yyVAL.sqlVal = nil
		}
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2663
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 478:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2668
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 479:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2672
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 480:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2680
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2684
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 482:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2690
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 483:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2698
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2702
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2706
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 486:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2711
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2715
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2721
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2727
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2733
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2738
		{
			yyVAL.str = ""
		}
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2742
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2746
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 494:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2751
		{
			yyVAL.str = ""
		}
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2755
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2759
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2764
		{
			yyVAL.boolean = false
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2768
		{
			yyVAL.boolean = true
		}
	case 499:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2773
		{
			yyVAL.charsetCollates = nil
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2777
		{
			yyVAL.charsetCollates = yyDollar[1].charsetCollates
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2783
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2787
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2791
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2795
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2799
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 506:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2803
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 507:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2809
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 508:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2813
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 509:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2817
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 510:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2821
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 511:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2827
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 512:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2831
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 513:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2837
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2843
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2847
		{
			yyVAL.colKeyOpt = colKey
		}
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2851
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2855
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2859
		{
			yyVAL.colKeyOpt = colKeyFulltextKey
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2865
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2871
		{
			yyVAL.statement = &Flush{Type: yyDollar[2].str, Option: yyDollar[3].flushOption}
		}
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2877
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2881
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2885
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2889
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2893
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2897
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2901
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2905
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2909
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].str}
		}
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2913
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2917
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2921
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 533:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2926
		{
			yyVAL.str = ""
		}
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2928
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2932
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2934
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 537:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2937
		{
			yyVAL.str = ""
		}
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2939
		{
			yyVAL.str = yyDollar[1].str
		}
	case 539:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2943
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 540:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2947
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 541:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2952
		{
			yyVAL.indexOptions = nil
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2956
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2962
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2966
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2972
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2976
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2981
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 548:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2987
		{
			yyVAL.str = ""
		}
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2991
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2999
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 551:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3003
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3007
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3011
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true}
		}
	case 554:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3015
		{
			var name string
			name = yyDollar[2].str
			if name == "" {
				name = yyDollar[5].str
			}
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].str), Name: NewColIdent(name), Unique: true}
		}
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3024
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3028
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3032
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3038
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3042
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3046
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3052
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3056
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 563:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3061
		{
			yyVAL.str = ""
		}
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3065
		{
			yyVAL.str = yyDollar[1].str
		}
	case 565:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3070
		{
			yyVAL.str = ""
		}
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3074
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3080
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3084
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3090
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3094
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3100
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3104
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3108
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 574:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3114
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 575:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3118
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 576:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3122
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 577:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3126
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 578:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3130
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3136
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3140
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3144
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3148
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 583:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3154
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3160
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3164
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3169
		{
			yyVAL.str = ""
		}
	case 587:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3173
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 588:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3177
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3183
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3189
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3195
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3199
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3203
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3207
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3211
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 596:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3216
		{
			yyVAL.boolean = true
		}
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3220
		{
			yyVAL.boolean = true
		}
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3224
		{
			yyVAL.boolean = false
		}
	case 599:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3229
		{
			yyVAL.str = ""
		}
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3233
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3237
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3245
		{
			yyVAL.str = yyDollar[1].str
		}
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3249
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3253
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3259
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3263
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3267
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 608:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3272
		{
			yyVAL.str = ""
		}
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3276
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 610:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3281
		{
			yyVAL.str = string("")
		}
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3285
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 613:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3294
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3307
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3311
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 616:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3317
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3324
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3331
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 619:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3335
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3339
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 621:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3344
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 622:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3348
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3352
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3357
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3362
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3367
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3372
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 628:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3376
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 629:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3380
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 630:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3387
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3393
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3397
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3403
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3409
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3414
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 636:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3418
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 637:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3422
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3426
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 639:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3432
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[7].indexColumns, Options: yyDollar[9].indexOptions}
			yyVAL.ddl = ddl
		}
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3438
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3442
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 642:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3447
		{
			yyVAL.columnOrder = nil
		}
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3451
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3455
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 645:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3460
		{
		}
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3462
		{
		}
	case 647:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3466
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3472
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3476
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 650:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3482
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 651:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3486
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3492
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3496
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3502
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 655:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3506
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3514
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 657:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3518
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 658:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3524
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 659:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3532
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 660:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3536
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 661:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3544
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3552
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3560
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName}, IfExists: exists}
		}
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3568
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName}, IfExists: exists}
		}
	case 665:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3576
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 666:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3584
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 667:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3593
		{

		}
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3597
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3601
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3607
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3611
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3617
		{
			yyVAL.statement = &Analyze{Tables: yyDollar[3].tableNames}
		}
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3623
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 674:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3628
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3632
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 676:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3636
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 677:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3640
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 678:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3644
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 679:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3649
		{
			yyVAL.statement = &Show{Type: CreateProcedureStr, Table: yyDollar[4].tableName}
		}
	case 680:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3653
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 681:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3657
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3661
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3665
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3669
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 685:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3673
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3677
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 687:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3681
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 688:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3685
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 689:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3689
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 690:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3693
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 691:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3697
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, AsOf: yyDollar[7].expr, Filter: yyDollar[8].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, Table: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 692:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3702
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3707
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 694:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3711
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3715
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3719
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3723
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3729
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3737
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3741
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 701:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3746
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 702:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3750
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3755
		{
			yyVAL.statement = &ShowPrivileges{}
		}
	case 704:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3759
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 705:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3763
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3767
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3771
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3777
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 709:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3783
		{
			yyVAL.boolean = false
		}
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3787
		{
			yyVAL.boolean = true
		}
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3793
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3797
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 713:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3803
		{
			yyVAL.str = ""
		}
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3807
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3811
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 716:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3817
		{
			yyVAL.showFilter = nil
		}
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3821
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3825
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[3].bytes)}
		}
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3829
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 720:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3835
		{
			yyVAL.str = ""
		}
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3839
		{
			yyVAL.str = SessionStr
		}
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3843
		{
			yyVAL.str = GlobalStr
		}
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3849
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 724:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3853
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: yyDollar[2].tableIdent.v + "/" + yyDollar[4].tableIdent.v}}
		}
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3857
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3863
		{
			yyVAL.statement = &Begin{}
		}
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3867
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3873
		{
			yyVAL.statement = &Begin{}
		}
	case 729:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3877
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 730:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3881
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3887
		{
			yyVAL.statement = &Commit{}
		}
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3893
		{
			yyVAL.statement = &Rollback{}
		}
	case 733:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3899
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3905
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3909
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3913
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 737:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3917
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3923
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3928
		{
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3929
		{
		}
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3933
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3937
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3943
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 747:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3951
		{
			yyVAL.str = ""
		}
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3955
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3966
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[3].expr}
			yyVAL.statement = &Show{Type: "columns", Table: yyDollar[2].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 752:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3972
		{
			setAllowComments(yylex, true)
		}
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3976
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 754:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3982
		{
			yyVAL.bytes2 = nil
		}
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3986
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3992
		{
			yyVAL.str = UnionStr
		}
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3996
		{
			yyVAL.str = UnionAllStr
		}
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4000
		{
			yyVAL.str = UnionDistinctStr
		}
	case 759:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4005
		{
			yyVAL.byt = 0
		}
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4009
		{
			yyVAL.byt = 1
		}
	case 761:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4014
		{
			yyVAL.str = ""
		}
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4018
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4022
		{
			yyVAL.str = SQLCacheStr
		}
	case 764:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4027
		{
			yyVAL.str = ""
		}
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4031
		{
			yyVAL.str = ""
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4035
		{
			yyVAL.str = DistinctStr
		}
	case 767:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4040
		{
			yyVAL.str = ""
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4044
		{
			yyVAL.str = StraightJoinHint
		}
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4050
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 770:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4058
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4069
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4073
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4077
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 774:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4081
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4087
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 776:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4091
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4095
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 778:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4099
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4105
		{
			yyVAL.over = &Over{NameRef: yyDollar[2].colIdent}
		}
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4109
		{
			yyVAL.over = (*Over)(yyDollar[2].windowDef)
		}
	case 781:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4115
		{
			yyVAL.windowDef = &WindowDef{NameRef: yyDollar[2].colIdent, PartitionBy: yyDollar[3].exprs, OrderBy: yyDollar[4].orderBy, Frame: yyDollar[5].frame}
		}
	case 782:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4120
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4123
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 784:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4128
		{
			yyVAL.exprs = nil
		}
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4132
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 786:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4137
		{
			yyVAL.over = nil
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4141
		{
			yyVAL.over = yyDollar[1].over
		}
	case 788:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4146
		{
			yyVAL.frame = nil
		}
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4150
		{
			yyVAL.frame = &Frame{Unit: RowsUnit, Extent: yyDollar[2].frameExtent}
		}
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4154
		{
			yyVAL.frame = &Frame{Unit: RangeUnit, Extent: yyDollar[2].frameExtent}
		}
	case 791:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4161
		{
			startBound := yyDollar[2].frameBound
			endBound := yyDollar[4].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound, End: endBound}
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4184
		{
			startBound := yyDollar[1].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound}
		}
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4199
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedPreceding}
		}
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4203
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedFollowing}
		}
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4207
		{
			yyVAL.frameBound = &FrameBound{Type: CurrentRow}
		}
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4211
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprPreceding,
			}
		}
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4218
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprFollowing,
			}
		}
	case 798:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4226
		{
			yyVAL.window = nil
		}
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4229
		{
			yyVAL.window = yyDollar[2].window
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4235
		{
			yyVAL.window = Window{yyDollar[1].windowDef}
		}
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4238
		{
			yyVAL.window = append(yyDollar[1].window, yyDollar[3].windowDef)
		}
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4244
		{
			def := yyDollar[3].windowDef
			def.Name = yyDollar[1].colIdent
			yyVAL.windowDef = def
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4253
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4257
		{
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 805:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4262
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4266
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4270
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4276
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4280
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4284
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4288
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4294
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4298
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4308
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 817:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4312
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4322
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4328
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4335
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4341
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 823:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4345
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4351
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 825:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4356
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4367
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 827:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4371
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 828:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4375
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4379
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4383
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 831:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4394
		{
			yyVAL.expr = nil
		}
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4398
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 833:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4403
		{
			yyVAL.columns = nil
		}
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4407
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4413
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4417
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4423
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4427
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 839:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4433
		{
			yyVAL.tableExpr = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].selectExprs}
		}
	case 840:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4446
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 841:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4450
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 842:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4454
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4458
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4464
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 845:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4466
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 846:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4470
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4472
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 848:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4476
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 849:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4478
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 850:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4481
		{
			yyVAL.empty = struct{}{}
		}
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4483
		{
			yyVAL.empty = struct{}{}
		}
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4488
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4492
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4498
		{
			yyVAL.str = JoinStr
		}
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4502
		{
			yyVAL.str = JoinStr
		}
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4506
		{
			yyVAL.str = JoinStr
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4512
		{
			yyVAL.str = StraightJoinStr
		}
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4518
		{
			yyVAL.str = LeftJoinStr
		}
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4522
		{
			yyVAL.str = LeftJoinStr
		}
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4526
		{
			yyVAL.str = RightJoinStr
		}
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4530
		{
			yyVAL.str = RightJoinStr
		}
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4536
		{
			yyVAL.str = NaturalJoinStr
		}
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4540
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4550
		{
			yyVAL.triggerName = TriggerName{Name: yyDollar[1].colIdent}
		}
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4554
		{
			yyVAL.triggerName = TriggerName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4560
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4566
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4570
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4576
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4580
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4586
		{
			yyVAL.procedureName = ProcedureName{Name: yyDollar[1].colIdent}
		}
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4590
		{
			yyVAL.procedureName = ProcedureName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4596
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 875:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4601
		{
			yyVAL.indexHints = nil
		}
	case 876:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4605
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 877:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4609
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 878:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4613
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 879:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4618
		{
			yyVAL.expr = nil
		}
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4622
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4628
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4632
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4636
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4640
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 885:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4644
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4648
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4652
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 888:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4656
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 889:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4662
		{
			yyVAL.str = ""
		}
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4666
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4672
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4676
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4682
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 894:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4686
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 895:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4690
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 896:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4694
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 897:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4698
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4702
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 899:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4706
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 900:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4710
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 901:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4714
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 902:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4718
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4724
		{
			yyVAL.str = IsNullStr
		}
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4728
		{
			yyVAL.str = IsNotNullStr
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4732
		{
			yyVAL.str = IsTrueStr
		}
	case 906:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4736
		{
			yyVAL.str = IsNotTrueStr
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4740
		{
			yyVAL.str = IsFalseStr
		}
	case 908:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4744
		{
			yyVAL.str = IsNotFalseStr
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4750
		{
			yyVAL.str = EqualStr
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4754
		{
			yyVAL.str = LessThanStr
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4758
		{
			yyVAL.str = GreaterThanStr
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4762
		{
			yyVAL.str = LessEqualStr
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4766
		{
			yyVAL.str = GreaterEqualStr
		}
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4770
		{
			yyVAL.str = NotEqualStr
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4774
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 916:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4779
		{
			yyVAL.expr = nil
		}
	case 917:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4783
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4789
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4793
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4797
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4803
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4809
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4813
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 924:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4819
		{
			yyVAL.selectExprs = nil
		}
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4826
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 927:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4830
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4836
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4840
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4846
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4850
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4854
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4858
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4862
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4866
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4870
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4874
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4878
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4882
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4886
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4890
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4894
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4898
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4902
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4906
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4910
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4914
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4918
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4922
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4926
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 951:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4930
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4934
		{
			yyVAL.expr = &UnaryExpr{Operator: yyDollar[1].str, Expr: yyDollar[2].expr}
		}
	case 953:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4938
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4946
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4960
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4964
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4968
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 964:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4988
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 965:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4992
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 966:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5002
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 967:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5006
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 968:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5010
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 969:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5014
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 970:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5018
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 971:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5022
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 972:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5026
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 973:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5030
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 974:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5034
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 975:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5038
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 976:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5042
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 977:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5046
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 978:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5050
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 979:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5054
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 980:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5058
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 981:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5062
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 982:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5066
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 983:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5075
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 984:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5079
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 985:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5083
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 986:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5087
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 987:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5091
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 988:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5095
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 989:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5099
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 990:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5103
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 991:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5107
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 992:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5111
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 993:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5115
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 994:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5126
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 995:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5130
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 996:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5134
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5138
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 998:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5142
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 999:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5146
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 1000:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5150
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 1001:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5154
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1002:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5158
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1003:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5162
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1004:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5166
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1005:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5170
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 1006:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5174
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 1007:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5178
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 1008:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5182
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 1009:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5186
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 1010:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5190
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 1011:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5194
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1012:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5198
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 1013:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5202
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 1014:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5206
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5216
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5220
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5224
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5229
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1019:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5234
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1020:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5239
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1021:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5245
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1022:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5250
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1023:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5254
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1024:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5259
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5263
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1026:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5267
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1027:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5272
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1028:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5277
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5282
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1030:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5286
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1031:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5290
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5301
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1035:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5311
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1036:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5315
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1037:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5319
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1038:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5323
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1039:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5327
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1040:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5331
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1041:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5337
		{
			yyVAL.str = ""
		}
	case 1042:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5341
		{
			yyVAL.str = BooleanModeStr
		}
	case 1043:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5345
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 1044:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5349
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5353
		{
			yyVAL.str = QueryExpansionStr
		}
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5359
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5363
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5369
		{
			yyVAL.str = Armscii8Str
		}
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5373
		{
			yyVAL.str = AsciiStr
		}
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5377
		{
			yyVAL.str = Big5Str
		}
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5381
		{
			yyVAL.str = UBinaryStr
		}
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5385
		{
			yyVAL.str = Cp1250Str
		}
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5389
		{
			yyVAL.str = Cp1251Str
		}
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5393
		{
			yyVAL.str = Cp1256Str
		}
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5397
		{
			yyVAL.str = Cp1257Str
		}
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5401
		{
			yyVAL.str = Cp850Str
		}
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5405
		{
			yyVAL.str = Cp852Str
		}
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5409
		{
			yyVAL.str = Cp866Str
		}
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5413
		{
			yyVAL.str = Cp932Str
		}
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5417
		{
			yyVAL.str = Dec8Str
		}
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5421
		{
			yyVAL.str = EucjpmsStr
		}
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5425
		{
			yyVAL.str = EuckrStr
		}
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5429
		{
			yyVAL.str = Gb18030Str
		}
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5433
		{
			yyVAL.str = Gb2312Str
		}
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5437
		{
			yyVAL.str = GbkStr
		}
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5441
		{
			yyVAL.str = Geostd8Str
		}
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5445
		{
			yyVAL.str = GreekStr
		}
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5449
		{
			yyVAL.str = HebrewStr
		}
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5453
		{
			yyVAL.str = Hp8Str
		}
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5457
		{
			yyVAL.str = Keybcs2Str
		}
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5461
		{
			yyVAL.str = Koi8rStr
		}
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5465
		{
			yyVAL.str = Koi8uStr
		}
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5469
		{
			yyVAL.str = Latin1Str
		}
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5473
		{
			yyVAL.str = Latin2Str
		}
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5477
		{
			yyVAL.str = Latin5Str
		}
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5481
		{
			yyVAL.str = Latin7Str
		}
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5485
		{
			yyVAL.str = MacceStr
		}
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5489
		{
			yyVAL.str = MacromanStr
		}
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5493
		{
			yyVAL.str = SjisStr
		}
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5497
		{
			yyVAL.str = Swe7Str
		}
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5501
		{
			yyVAL.str = Tis620Str
		}
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5505
		{
			yyVAL.str = Ucs2Str
		}
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5509
		{
			yyVAL.str = UjisStr
		}
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5513
		{
			yyVAL.str = Utf16Str
		}
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5517
		{
			yyVAL.str = Utf16leStr
		}
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5521
		{
			yyVAL.str = Utf32Str
		}
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5525
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5529
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5533
		{
			yyVAL.str = Utf8mb4Str
		}
	case 1090:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5539
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5543
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5547
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5551
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1094:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5555
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1095:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5559
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5565
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1097:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5569
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5573
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1099:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5577
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1100:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5581
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5585
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1102:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5589
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1103:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5594
		{
			yyVAL.expr = nil
		}
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5598
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1105:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5603
		{
			yyVAL.str = string("")
		}
	case 1106:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5607
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5613
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 1108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5617
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 1109:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5623
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 1110:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5628
		{
			yyVAL.expr = nil
		}
	case 1111:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5632
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5638
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5642
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 1114:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5646
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5652
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5656
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5660
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5664
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5668
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5672
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5676
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5680
		{
			yyVAL.expr = &NullVal{}
		}
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5686
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 1124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5690
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1125:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5694
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1126:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5699
		{
			yyVAL.exprs = nil
		}
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5703
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5709
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5713
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5719
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1131:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5724
		{
			yyVAL.expr = nil
		}
	case 1132:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5728
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5734
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1134:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5739
		{
			yyVAL.orderBy = nil
		}
	case 1135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5743
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5749
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 1137:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5753
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 1138:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5759
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 1139:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5764
		{
			yyVAL.str = AscScr
		}
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5768
		{
			yyVAL.str = AscScr
		}
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5772
		{
			yyVAL.str = DescScr
		}
	case 1142:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5777
		{
			yyVAL.limit = nil
		}
	case 1143:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5781
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 1144:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5785
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 1145:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5789
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5795
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5799
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1148:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5804
		{
			yyVAL.str = ""
		}
	case 1149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5808
		{
			yyVAL.str = ForUpdateStr
		}
	case 1150:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5812
		{
			yyVAL.str = ShareModeStr
		}
	case 1151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5825
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 1152:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5829
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5833
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 1154:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5837
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 1155:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5842
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 1156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5846
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 1157:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5850
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 1158:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5856
		{
			yyVAL.columns = nil
		}
	case 1159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5860
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5866
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5870
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 1162:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5874
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1163:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5878
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 1164:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5883
		{
			yyVAL.assignExprs = nil
		}
	case 1165:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5887
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5893
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 1167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5897
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5903
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 1169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5907
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 1170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5913
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5919
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5929
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 1173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5933
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 1174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5939
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 1175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5942
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5948
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 1177:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5952
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5958
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 1179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5969
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5982
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5995
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6001
		{
			yyVAL.setScope = SetScope_Global
		}
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6005
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6011
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6015
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6019
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 1187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6025
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1188:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6029
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1189:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6033
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 1191:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6040
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6047
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6051
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6055
		{
			yyVAL.expr = &Default{}
		}
	case 1198:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6064
		{
			yyVAL.byt = 0
		}
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6066
		{
			yyVAL.byt = 1
		}
	case 1200:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6069
		{
			yyVAL.byt = 0
		}
	case 1201:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6071
		{
			yyVAL.byt = 1
		}
	case 1202:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6074
		{
			yyVAL.byt = 0
		}
	case 1203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6076
		{
			yyVAL.byt = 1
		}
	case 1204:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6079
		{
			yyVAL.str = ""
		}
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6081
		{
			yyVAL.str = IgnoreStr
		}
	case 1206:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6084
		{
			yyVAL.sqlVal = nil
		}
	case 1207:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6086
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1208:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6088
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6092
		{
			yyVAL.empty = struct{}{}
		}
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6094
		{
			yyVAL.empty = struct{}{}
		}
	case 1211:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6097
		{
			yyVAL.empty = struct{}{}
		}
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6099
		{
			yyVAL.empty = struct{}{}
		}
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6101
		{
			yyVAL.empty = struct{}{}
		}
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6105
		{
			yyVAL.str = UniqueStr
		}
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6107
		{
			yyVAL.str = FulltextStr
		}
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6109
		{
			yyVAL.str = SpatialStr
		}
	case 1217:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6112
		{
			yyVAL.str = ""
		}
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6114
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1219:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6117
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 1220:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6119
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6123
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6127
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6133
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 1224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6137
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6144
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6150
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6154
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6161
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1231:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6166
		{
			yyVAL.str = string("")
		}
	case 1232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6168
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1233:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6171
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6173
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1235:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6176
		{
			yyVAL.EnclosedBy = nil
		}
	case 1236:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6180
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1237:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6185
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6189
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1239:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6194
		{
			yyVAL.sqlVal = nil
		}
	case 1240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6198
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1241:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6203
		{
			yyVAL.sqlVal = nil
		}
	case 1242:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6207
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1243:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6212
		{
			yyVAL.Fields = nil
		}
	case 1244:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6216
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1245:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6221
		{
			yyVAL.Lines = nil
		}
	case 1246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6225
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1247:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6230
		{
			yyVAL.sqlVal = nil
		}
	case 1248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6234
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1249:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6240
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6246
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1251:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6250
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1252:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6256
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1253:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6260
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6266
		{
			yyVAL.lockType = LockRead
		}
	case 1255:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6270
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6274
		{
			yyVAL.lockType = LockWrite
		}
	case 1257:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6278
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1258:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6284
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1259:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6290
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[2].bytes)}
		}
	case 1260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6294
		{
			yyVAL.statement = &Kill{ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1261:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6298
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6873
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6882
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
