// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

//import "runtime/debug"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

func yySpecialCommentMode(yylex interface{}) bool {
	tkn := yylex.(*Tokenizer)
	return tkn.specialComment != nil
}

//line sql.y:64
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	variables                Variables
	into                     *Into
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	triggerName              TriggerName
	tableName                TableName
	tableNames               TableNames
	procedureName            ProcedureName
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	flushOption              *FlushOption
	replicationOption        *ReplicationOption
	replicationOptions       []*ReplicationOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	viewSpec                 *ViewSpec
	showFilter               *ShowFilter
	frame                    *Frame
	frameExtent              *FrameExtent
	frameBound               *FrameBound
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	charsetCollate           *CharsetAndCollate
	charsetCollates          []*CharsetAndCollate
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptionItem            TLSOptionItem
	tlsOptionItems           []TLSOptionItem
	accountLimitItem         AccountLimitItem
	accountLimitItems        []AccountLimitItem
	passLockItem             PassLockItem
	passLockItems            []PassLockItem
	grantPrivilege           Privilege
	grantPrivileges          []Privilege
	grantObjectType          GrantObjectType
	privilegeLevel           PrivilegeLevel
	grantAssumption          *GrantUserAssumption
	with                     *With
	window                   Window
	over                     *Over
	windowDef                *WindowDef
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const DUPLICATE = 57369
const DEFAULT = 57370
const SET = 57371
const LOCK = 57372
const UNLOCK = 57373
const KEYS = 57374
const OF = 57375
const OUTFILE = 57376
const DUMPFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const INTO = 57425
const OR = 57426
const XOR = 57427
const AND = 57428
const NOT = 57429
const BETWEEN = 57430
const CASE = 57431
const WHEN = 57432
const THEN = 57433
const ELSE = 57434
const ELSEIF = 57435
const END = 57436
const LE = 57437
const GE = 57438
const NE = 57439
const NULL_SAFE_EQUAL = 57440
const IS = 57441
const LIKE = 57442
const REGEXP = 57443
const IN = 57444
const UNBOUNDED = 57445
const PARTITION = 57446
const RANGE = 57447
const ROWS = 57448
const GROUPS = 57449
const PRECEDING = 57450
const FOLLOWING = 57451
const SHIFT_LEFT = 57452
const SHIFT_RIGHT = 57453
const DIV = 57454
const MOD = 57455
const UNARY = 57456
const COLLATE = 57457
const BINARY = 57458
const UNDERSCORE_ARMSCII8 = 57459
const UNDERSCORE_ASCII = 57460
const UNDERSCORE_BIG5 = 57461
const UNDERSCORE_BINARY = 57462
const UNDERSCORE_CP1250 = 57463
const UNDERSCORE_CP1251 = 57464
const UNDERSCORE_CP1256 = 57465
const UNDERSCORE_CP1257 = 57466
const UNDERSCORE_CP850 = 57467
const UNDERSCORE_CP852 = 57468
const UNDERSCORE_CP866 = 57469
const UNDERSCORE_CP932 = 57470
const UNDERSCORE_DEC8 = 57471
const UNDERSCORE_EUCJPMS = 57472
const UNDERSCORE_EUCKR = 57473
const UNDERSCORE_GB18030 = 57474
const UNDERSCORE_GB2312 = 57475
const UNDERSCORE_GBK = 57476
const UNDERSCORE_GEOSTD8 = 57477
const UNDERSCORE_GREEK = 57478
const UNDERSCORE_HEBREW = 57479
const UNDERSCORE_HP8 = 57480
const UNDERSCORE_KEYBCS2 = 57481
const UNDERSCORE_KOI8R = 57482
const UNDERSCORE_KOI8U = 57483
const UNDERSCORE_LATIN1 = 57484
const UNDERSCORE_LATIN2 = 57485
const UNDERSCORE_LATIN5 = 57486
const UNDERSCORE_LATIN7 = 57487
const UNDERSCORE_MACCE = 57488
const UNDERSCORE_MACROMAN = 57489
const UNDERSCORE_SJIS = 57490
const UNDERSCORE_SWE7 = 57491
const UNDERSCORE_TIS620 = 57492
const UNDERSCORE_UCS2 = 57493
const UNDERSCORE_UJIS = 57494
const UNDERSCORE_UTF16 = 57495
const UNDERSCORE_UTF16LE = 57496
const UNDERSCORE_UTF32 = 57497
const UNDERSCORE_UTF8 = 57498
const UNDERSCORE_UTF8MB3 = 57499
const UNDERSCORE_UTF8MB4 = 57500
const INTERVAL = 57501
const JSON_EXTRACT_OP = 57502
const JSON_UNQUOTE_EXTRACT_OP = 57503
const CREATE = 57504
const ALTER = 57505
const DROP = 57506
const RENAME = 57507
const ANALYZE = 57508
const ADD = 57509
const MODIFY = 57510
const CHANGE = 57511
const SCHEMA = 57512
const TABLE = 57513
const INDEX = 57514
const INDEXES = 57515
const VIEW = 57516
const TO = 57517
const IGNORE = 57518
const IF = 57519
const PRIMARY = 57520
const COLUMN = 57521
const SPATIAL = 57522
const FULLTEXT = 57523
const KEY_BLOCK_SIZE = 57524
const CHECK = 57525
const ACTION = 57526
const CASCADE = 57527
const CONSTRAINT = 57528
const FOREIGN = 57529
const NO = 57530
const REFERENCES = 57531
const RESTRICT = 57532
const FIRST = 57533
const AFTER = 57534
const LAST = 57535
const SHOW = 57536
const DESCRIBE = 57537
const EXPLAIN = 57538
const DATE = 57539
const ESCAPE = 57540
const REPAIR = 57541
const OPTIMIZE = 57542
const TRUNCATE = 57543
const FORMAT = 57544
const EXTENDED = 57545
const MAXVALUE = 57546
const REORGANIZE = 57547
const LESS = 57548
const THAN = 57549
const PROCEDURE = 57550
const TRIGGER = 57551
const TRIGGERS = 57552
const FUNCTION = 57553
const STATUS = 57554
const VARIABLES = 57555
const WARNINGS = 57556
const ERRORS = 57557
const KILL = 57558
const CONNECTION = 57559
const SEQUENCE = 57560
const ENABLE = 57561
const DISABLE = 57562
const EACH = 57563
const ROW = 57564
const BEFORE = 57565
const FOLLOWS = 57566
const PRECEDES = 57567
const DEFINER = 57568
const INVOKER = 57569
const INOUT = 57570
const OUT = 57571
const DETERMINISTIC = 57572
const CONTAINS = 57573
const READS = 57574
const MODIFIES = 57575
const SQL = 57576
const SECURITY = 57577
const TEMPORARY = 57578
const ALGORITHM = 57579
const MERGE = 57580
const TEMPTABLE = 57581
const UNDEFINED = 57582
const CLASS_ORIGIN = 57583
const SUBCLASS_ORIGIN = 57584
const MESSAGE_TEXT = 57585
const MYSQL_ERRNO = 57586
const CONSTRAINT_CATALOG = 57587
const CONSTRAINT_SCHEMA = 57588
const CONSTRAINT_NAME = 57589
const CATALOG_NAME = 57590
const SCHEMA_NAME = 57591
const TABLE_NAME = 57592
const COLUMN_NAME = 57593
const CURSOR_NAME = 57594
const SIGNAL = 57595
const RESIGNAL = 57596
const SQLSTATE = 57597
const DECLARE = 57598
const CONDITION = 57599
const CURSOR = 57600
const CONTINUE = 57601
const EXIT = 57602
const UNDO = 57603
const HANDLER = 57604
const FOUND = 57605
const SQLWARNING = 57606
const SQLEXCEPTION = 57607
const FETCH = 57608
const OPEN = 57609
const CLOSE = 57610
const LOOP = 57611
const LEAVE = 57612
const ITERATE = 57613
const USER = 57614
const IDENTIFIED = 57615
const ROLE = 57616
const REUSE = 57617
const GRANT = 57618
const GRANTS = 57619
const REVOKE = 57620
const NONE = 57621
const ATTRIBUTE = 57622
const RANDOM = 57623
const PASSWORD = 57624
const INITIAL = 57625
const AUTHENTICATION = 57626
const SSL = 57627
const X509 = 57628
const CIPHER = 57629
const ISSUER = 57630
const SUBJECT = 57631
const ACCOUNT = 57632
const EXPIRE = 57633
const NEVER = 57634
const DAY = 57635
const OPTION = 57636
const OPTIONAL = 57637
const EXCEPT = 57638
const ADMIN = 57639
const PRIVILEGES = 57640
const MAX_QUERIES_PER_HOUR = 57641
const MAX_UPDATES_PER_HOUR = 57642
const MAX_CONNECTIONS_PER_HOUR = 57643
const MAX_USER_CONNECTIONS = 57644
const FLUSH = 57645
const FAILED_LOGIN_ATTEMPTS = 57646
const PASSWORD_LOCK_TIME = 57647
const REQUIRE = 57648
const PROXY = 57649
const ROUTINE = 57650
const TABLESPACE = 57651
const CLIENT = 57652
const SLAVE = 57653
const EVENT = 57654
const EXECUTE = 57655
const FILE = 57656
const RELOAD = 57657
const REPLICATION = 57658
const SHUTDOWN = 57659
const SUPER = 57660
const USAGE = 57661
const LOGS = 57662
const ENGINE = 57663
const ERROR = 57664
const GENERAL = 57665
const HOSTS = 57666
const OPTIMIZER_COSTS = 57667
const RELAY = 57668
const SLOW = 57669
const USER_RESOURCES = 57670
const NO_WRITE_TO_BINLOG = 57671
const CHANNEL = 57672
const REPLICA = 57673
const SOURCE = 57674
const STOP = 57675
const SOURCE_HOST = 57676
const SOURCE_USER = 57677
const SOURCE_PASSWORD = 57678
const SOURCE_PORT = 57679
const BEGIN = 57680
const START = 57681
const TRANSACTION = 57682
const COMMIT = 57683
const ROLLBACK = 57684
const SAVEPOINT = 57685
const WORK = 57686
const RELEASE = 57687
const CHAIN = 57688
const BIT = 57689
const TINYINT = 57690
const SMALLINT = 57691
const MEDIUMINT = 57692
const INT = 57693
const INTEGER = 57694
const BIGINT = 57695
const INTNUM = 57696
const SERIAL = 57697
const REAL = 57698
const DOUBLE = 57699
const FLOAT_TYPE = 57700
const DECIMAL = 57701
const NUMERIC = 57702
const DEC = 57703
const FIXED = 57704
const PRECISION = 57705
const TIME = 57706
const TIMESTAMP = 57707
const DATETIME = 57708
const YEAR = 57709
const CHAR = 57710
const VARCHAR = 57711
const BOOL = 57712
const CHARACTER = 57713
const VARBINARY = 57714
const NCHAR = 57715
const NVARCHAR = 57716
const NATIONAL = 57717
const VARYING = 57718
const TEXT = 57719
const TINYTEXT = 57720
const MEDIUMTEXT = 57721
const LONGTEXT = 57722
const LONG = 57723
const BLOB = 57724
const TINYBLOB = 57725
const MEDIUMBLOB = 57726
const LONGBLOB = 57727
const JSON = 57728
const ENUM = 57729
const GEOMETRY = 57730
const POINT = 57731
const LINESTRING = 57732
const POLYGON = 57733
const GEOMETRYCOLLECTION = 57734
const MULTIPOINT = 57735
const MULTILINESTRING = 57736
const MULTIPOLYGON = 57737
const LOCAL = 57738
const LOW_PRIORITY = 57739
const NULLX = 57740
const AUTO_INCREMENT = 57741
const APPROXNUM = 57742
const SIGNED = 57743
const UNSIGNED = 57744
const ZEROFILL = 57745
const SRID = 57746
const COLLATION = 57747
const DATABASES = 57748
const SCHEMAS = 57749
const TABLES = 57750
const FULL = 57751
const PROCESSLIST = 57752
const COLUMNS = 57753
const FIELDS = 57754
const ENGINES = 57755
const PLUGINS = 57756
const NAMES = 57757
const CHARSET = 57758
const GLOBAL = 57759
const SESSION = 57760
const ISOLATION = 57761
const LEVEL = 57762
const READ = 57763
const WRITE = 57764
const ONLY = 57765
const REPEATABLE = 57766
const COMMITTED = 57767
const UNCOMMITTED = 57768
const SERIALIZABLE = 57769
const ENCRYPTION = 57770
const CURRENT_TIMESTAMP = 57771
const NOW = 57772
const DATABASE = 57773
const CURRENT_DATE = 57774
const CURRENT_USER = 57775
const CURRENT_TIME = 57776
const LOCALTIME = 57777
const LOCALTIMESTAMP = 57778
const UTC_DATE = 57779
const UTC_TIME = 57780
const UTC_TIMESTAMP = 57781
const REPLACE = 57782
const CONVERT = 57783
const CAST = 57784
const SUBSTR = 57785
const SUBSTRING = 57786
const TRIM = 57787
const LEADING = 57788
const TRAILING = 57789
const BOTH = 57790
const GROUP_CONCAT = 57791
const SEPARATOR = 57792
const TIMESTAMPADD = 57793
const TIMESTAMPDIFF = 57794
const OVER = 57795
const WINDOW = 57796
const GROUPING = 57797
const CURRENT = 57798
const AVG = 57799
const BIT_AND = 57800
const BIT_OR = 57801
const BIT_XOR = 57802
const COUNT = 57803
const JSON_ARRAYAGG = 57804
const JSON_OBJECTAGG = 57805
const MAX = 57806
const MIN = 57807
const STDDEV_POP = 57808
const STDDEV = 57809
const STD = 57810
const STDDEV_SAMP = 57811
const SUM = 57812
const VAR_POP = 57813
const VARIANCE = 57814
const VAR_SAMP = 57815
const CUME_DIST = 57816
const DENSE_RANK = 57817
const FIRST_VALUE = 57818
const LAG = 57819
const LAST_VALUE = 57820
const LEAD = 57821
const NTH_VALUE = 57822
const NTILE = 57823
const ROW_NUMBER = 57824
const PERCENT_RANK = 57825
const RANK = 57826
const DUAL = 57827
const JSON_TABLE = 57828
const PATH = 57829
const AVG_ROW_LENGTH = 57830
const CHECKSUM = 57831
const COMPRESSION = 57832
const DIRECTORY = 57833
const DELAY_KEY_WRITE = 57834
const ENGINE_ATTRIBUTE = 57835
const INSERT_METHOD = 57836
const MAX_ROWS = 57837
const MIN_ROWS = 57838
const PACK_KEYS = 57839
const ROW_FORMAT = 57840
const SECONDARY_ENGINE_ATTRIBUTE = 57841
const STATS_AUTO_RECALC = 57842
const STATS_PERSISTENT = 57843
const STATS_SAMPLE_PAGES = 57844
const STORAGE = 57845
const DISK = 57846
const MEMORY = 57847
const DYNAMIC = 57848
const COMPRESSED = 57849
const REDUNDANT = 57850
const COMPACT = 57851
const LIST = 57852
const HASH = 57853
const PARTITIONS = 57854
const SUBPARTITION = 57855
const SUBPARTITIONS = 57856
const PREPARE = 57857
const DEALLOCATE = 57858
const MATCH = 57859
const AGAINST = 57860
const BOOLEAN = 57861
const LANGUAGE = 57862
const WITH = 57863
const QUERY = 57864
const EXPANSION = 57865
const ACCESSIBLE = 57866
const ASENSITIVE = 57867
const CUBE = 57868
const DAY_HOUR = 57869
const DAY_MICROSECOND = 57870
const DAY_MINUTE = 57871
const DAY_SECOND = 57872
const DELAYED = 57873
const DISTINCTROW = 57874
const EMPTY = 57875
const FLOAT4 = 57876
const FLOAT8 = 57877
const GET = 57878
const HIGH_PRIORITY = 57879
const HOUR_MICROSECOND = 57880
const HOUR_MINUTE = 57881
const HOUR_SECOND = 57882
const INSENSITIVE = 57883
const INT1 = 57884
const INT2 = 57885
const INT3 = 57886
const INT4 = 57887
const INT8 = 57888
const IO_AFTER_GTIDS = 57889
const IO_BEFORE_GTIDS = 57890
const LINEAR = 57891
const MASTER_BIND = 57892
const MASTER_SSL_VERIFY_SERVER_CERT = 57893
const MIDDLEINT = 57894
const MINUTE_MICROSECOND = 57895
const MINUTE_SECOND = 57896
const PURGE = 57897
const READ_WRITE = 57898
const REPEAT = 57899
const RETURN = 57900
const RLIKE = 57901
const SECOND_MICROSECOND = 57902
const SENSITIVE = 57903
const SPECIFIC = 57904
const SQL_BIG_RESULT = 57905
const SQL_SMALL_RESULT = 57906
const VARCHARACTER = 57907
const WHILE = 57908
const YEAR_MONTH = 57909
const UNUSED = 57910
const DESCRIPTION = 57911
const LATERAL = 57912
const MEMBER = 57913
const RECURSIVE = 57914
const BUCKETS = 57915
const CLONE = 57916
const COMPONENT = 57917
const DEFINITION = 57918
const ENFORCED = 57919
const EXCLUDE = 57920
const GEOMCOLLECTION = 57921
const GET_MASTER_PUBLIC_KEY = 57922
const HISTOGRAM = 57923
const HISTORY = 57924
const INACTIVE = 57925
const INVISIBLE = 57926
const LOCKED = 57927
const MASTER_COMPRESSION_ALGORITHMS = 57928
const MASTER_PUBLIC_KEY_PATH = 57929
const MASTER_TLS_CIPHERSUITES = 57930
const MASTER_ZSTD_COMPRESSION_LEVEL = 57931
const NESTED = 57932
const NETWORK_NAMESPACE = 57933
const NOWAIT = 57934
const NULLS = 57935
const OJ = 57936
const OLD = 57937
const ORDINALITY = 57938
const ORGANIZATION = 57939
const OTHERS = 57940
const PERSIST = 57941
const PERSIST_ONLY = 57942
const PRIVILEGE_CHECKS_USER = 57943
const PROCESS = 57944
const REFERENCE = 57945
const REQUIRE_ROW_FORMAT = 57946
const RESOURCE = 57947
const RESPECT = 57948
const RESTART = 57949
const RETAIN = 57950
const SECONDARY = 57951
const SECONDARY_ENGINE = 57952
const SECONDARY_LOAD = 57953
const SECONDARY_UNLOAD = 57954
const SKIP = 57955
const THREAD_PRIORITY = 57956
const TIES = 57957
const VCPU = 57958
const VISIBLE = 57959
const SYSTEM = 57960
const INFILE = 57961
const ACTIVE = 57962
const AGGREGATE = 57963
const ANY = 57964
const ARRAY = 57965
const ASCII = 57966
const AT = 57967
const AUTOEXTEND_SIZE = 57968
const ENDS = 57969
const EVENTS = 57970
const GENERATED = 57971
const ALWAYS = 57972
const STORED = 57973
const VIRTUAL = 57974
const NVAR = 57975
const PASSWORD_LOCK = 57976

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DUMPFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"':'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"INTO",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB3",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"LAST",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"EXTENDED",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"ENABLE",
	"DISABLE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"ALGORITHM",
	"MERGE",
	"TEMPTABLE",
	"UNDEFINED",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"FETCH",
	"OPEN",
	"CLOSE",
	"LOOP",
	"LEAVE",
	"ITERATE",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTION",
	"OPTIONAL",
	"EXCEPT",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EVENT",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"REPLICA",
	"SOURCE",
	"STOP",
	"SOURCE_HOST",
	"SOURCE_USER",
	"SOURCE_PASSWORD",
	"SOURCE_PORT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"CHAIN",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"SRID",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ENCRYPTION",
	"CURRENT_TIMESTAMP",
	"NOW",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"DUAL",
	"JSON_TABLE",
	"PATH",
	"AVG_ROW_LENGTH",
	"CHECKSUM",
	"COMPRESSION",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"DISK",
	"MEMORY",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"LIST",
	"HASH",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"PREPARE",
	"DEALLOCATE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ACCESSIBLE",
	"ASENSITIVE",
	"CUBE",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"DELAYED",
	"DISTINCTROW",
	"EMPTY",
	"FLOAT4",
	"FLOAT8",
	"GET",
	"HIGH_PRIORITY",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"INSENSITIVE",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"IO_AFTER_GTIDS",
	"IO_BEFORE_GTIDS",
	"LINEAR",
	"MASTER_BIND",
	"MASTER_SSL_VERIFY_SERVER_CERT",
	"MIDDLEINT",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"PURGE",
	"READ_WRITE",
	"REPEAT",
	"RETURN",
	"RLIKE",
	"SECOND_MICROSECOND",
	"SENSITIVE",
	"SPECIFIC",
	"SQL_BIG_RESULT",
	"SQL_SMALL_RESULT",
	"VARCHARACTER",
	"WHILE",
	"YEAR_MONTH",
	"UNUSED",
	"DESCRIPTION",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"ACTIVE",
	"AGGREGATE",
	"ANY",
	"ARRAY",
	"ASCII",
	"AT",
	"AUTOEXTEND_SIZE",
	"ENDS",
	"EVENTS",
	"GENERATED",
	"ALWAYS",
	"STORED",
	"VIRTUAL",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 39,
	654, 39,
	-2, 61,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 45,
	190, 1412,
	191, 1431,
	-2, 254,
	-1, 55,
	231, 881,
	232, 881,
	-2, 870,
	-1, 77,
	5, 66,
	-2, 47,
	-1, 451,
	1, 2092,
	23, 2092,
	178, 2092,
	654, 2092,
	-2, 915,
	-1, 464,
	178, 1441,
	-2, 1435,
	-1, 465,
	178, 1442,
	-2, 1436,
	-1, 525,
	1, 555,
	654, 555,
	-2, 553,
	-1, 547,
	178, 1802,
	-2, 1079,
	-1, 577,
	178, 1910,
	-2, 1330,
	-1, 578,
	178, 1991,
	-2, 1081,
	-1, 579,
	178, 1822,
	-2, 1082,
	-1, 646,
	178, 1773,
	-2, 1300,
	-1, 649,
	178, 1790,
	-2, 1229,
	-1, 650,
	178, 2003,
	-2, 1229,
	-1, 651,
	178, 2002,
	-2, 1229,
	-1, 652,
	178, 2001,
	-2, 1229,
	-1, 653,
	178, 1890,
	-2, 1229,
	-1, 654,
	178, 1891,
	-2, 1229,
	-1, 655,
	178, 1788,
	-2, 1229,
	-1, 656,
	178, 1789,
	-2, 1229,
	-1, 657,
	178, 1791,
	-2, 1229,
	-1, 905,
	101, 2104,
	178, 2104,
	-2, 1396,
	-1, 906,
	101, 2214,
	178, 2214,
	-2, 1397,
	-1, 911,
	101, 2128,
	178, 2128,
	-2, 1398,
	-1, 912,
	101, 2172,
	178, 2172,
	-2, 1399,
	-1, 913,
	101, 2173,
	178, 2173,
	-2, 1400,
	-1, 914,
	101, 2041,
	178, 2041,
	-2, 1404,
	-1, 916,
	101, 2149,
	178, 2149,
	-2, 1406,
	-1, 1080,
	364, 894,
	-2, 898,
	-1, 1082,
	364, 894,
	-2, 898,
	-1, 1189,
	5, 66,
	-2, 48,
	-1, 1194,
	1, 555,
	654, 555,
	-2, 553,
	-1, 1196,
	1, 556,
	654, 556,
	-2, 553,
	-1, 1459,
	1, 555,
	654, 555,
	-2, 553,
	-1, 1461,
	1, 555,
	654, 555,
	-2, 553,
	-1, 1936,
	178, 1444,
	-2, 1440,
	-1, 2056,
	1, 990,
	5, 990,
	12, 990,
	13, 990,
	14, 990,
	15, 990,
	17, 990,
	19, 990,
	29, 990,
	30, 990,
	56, 990,
	57, 990,
	58, 990,
	59, 990,
	60, 990,
	62, 990,
	63, 990,
	66, 990,
	67, 990,
	69, 990,
	70, 990,
	88, 990,
	428, 990,
	473, 990,
	654, 990,
	-2, 1023,
	-1, 2064,
	67, 83,
	69, 83,
	-2, 87,
	-1, 2082,
	178, 1914,
	-2, 1401,
	-1, 2249,
	44, 745,
	197, 747,
	199, 745,
	200, 745,
	-2, 791,
	-1, 2298,
	5, 67,
	-2, 1111,
	-1, 2869,
	197, 748,
	-2, 746,
	-1, 2942,
	69, 1686,
	70, 1686,
	178, 1686,
	-2, 921,
	-1, 2968,
	1, 1065,
	5, 1065,
	12, 1065,
	13, 1065,
	14, 1065,
	15, 1065,
	17, 1065,
	19, 1065,
	29, 1065,
	30, 1065,
	56, 1065,
	57, 1065,
	58, 1065,
	59, 1065,
	60, 1065,
	62, 1065,
	63, 1065,
	66, 1065,
	67, 1065,
	69, 1065,
	70, 1065,
	88, 1065,
	428, 1065,
	473, 1065,
	654, 1065,
	-2, 1023,
	-1, 3157,
	5, 67,
	-2, 1362,
	-1, 3260,
	41, 1451,
	-2, 1449,
	-1, 3500,
	5, 67,
	-2, 1365,
	-1, 3523,
	281, 321,
	-2, 1506,
	-1, 3524,
	281, 322,
	-2, 1547,
	-1, 3525,
	281, 323,
	-2, 1723,
	-1, 3721,
	96, 306,
	98, 306,
	100, 306,
	-2, 61,
	-1, 3757,
	98, 313,
	99, 313,
	100, 313,
	-2, 61,
}

const yyPrivate = 57344

const yyLast = 55157

var yyAct = [...]int{
	589, 85, 3664, 3698, 3645, 3713, 1210, 521, 3646, 2645,
	1022, 476, 2459, 3602, 3537, 3492, 3530, 2497, 3557, 2079,
	2458, 2836, 3414, 8, 3666, 2807, 1293, 3405, 3373, 3502,
	3579, 549, 2760, 3198, 3329, 3413, 7, 2978, 3260, 3372,
	3412, 6, 2671, 553, 3411, 5, 2962, 588, 3490, 2935,
	1294, 2383, 1492, 3262, 2936, 3031, 533, 2147, 2381, 2599,
	88, 540, 3114, 2164, 2846, 2377, 556, 2820, 1389, 3084,
	2750, 3090, 2445, 1961, 2761, 1317, 1908, 100, 2932, 2105,
	3068, 3406, 501, 501, 507, 517, 85, 455, 458, 2672,
	2506, 2944, 1882, 2524, 1884, 2096, 1890, 2953, 2863, 992,
	1047, 1066, 2449, 3410, 3, 113, 1093, 2230, 1901, 566,
	2248, 2111, 530, 552, 2021, 2133, 2366, 2408, 2615, 2060,
	1494, 2092, 2052, 2213, 1491, 2053, 1967, 2194, 985, 1883,
	1833, 1797, 1778, 1468, 2488, 2129, 1211, 2109, 1371, 2359,
	2012, 1938, 910, 907, 1218, 2567, 2056, 1367, 1214, 1124,
	1102, 1838, 984, 2675, 903, 1370, 536, 1232, 2066, 1199,
	1195, 520, 1198, 1197, 904, 479, 2450, 2653, 478, 1222,
	134, 1086, 1037, 77, 1810, 1021, 1101, 1809, 1005, 558,
	1777, 453, 461, 109, 1462, 105, 1010, 526, 3757, 531,
	3752, 3743, 3721, 3719, 3693, 3673, 2466, 3659, 90, 3591,
	3587, 2470, 87, 3331, 3330, 2775, 1831, 2805, 3061, 2982,
	3754, 3750, 3239, 3748, 3680, 3488, 3638, 2475, 2474, 3381,
	40, 982, 43, 2749, 2178, 471, 2178, 3605, 3237, 40,
	3476, 2817, 3487, 40, 3380, 40, 2637, 40, 3252, 2471,
	92, 1019, 98, 3240, 415, 494, 2517, 488, 499, 482,
	3572, 3313, 2666, 1035, 3188, 2477, 989, 2456, 1135, 3182,
	83, 3298, 3195, 3196, 3023, 2457, 519, 2732, 2731, 489,
	2667, 3643, 3353, 3553, 2979, 3011, 2379, 127, 123, 124,
	2336, 125, 86, 3612, 1316, 2926, 1004, 1007, 527, 1012,
	1013, 86, 898, 899, 900, 86, 1897, 86, 1015, 86,
	2481, 96, 94, 95, 2212, 2869, 2081, 2460, 2401, 450,
	2713, 2400, 2076, 2077, 2402, 129, 128, 1834, 2022, 3289,
	2714, 2715, 1872, 1873, 3496, 1175, 2075, 1249, 1248, 1258,
	1259, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1250, 3496,
	3047, 1260, 3491, 3053, 3055, 3054, 3051, 3052, 3050, 3049,
	3048, 1051, 1052, 1070, 1071, 1055, 3069, 1069, 1080, 1837,
	3493, 980, 3056, 3057, 3311, 1372, 3071, 1373, 1855, 1153,
	2473, 470, 469, 2476, 86, 3493, 1161, 2444, 2479, 130,
	2211, 131, 515, 1835, 1836, 473, 2107, 2108, 1450, 1053,
	1054, 1121, 2368, 2371, 2372, 2373, 2369, 2112, 2370, 2375,
	3138, 2469, 2954, 2955, 2123, 2130, 2368, 2371, 2372, 2373,
	2369, 465, 2370, 2375, 2692, 86, 2372, 2373, 2912, 2910,
	481, 480, 483, 2115, 2117, 3497, 2116, 2200, 2199, 1815,
	487, 448, 445, 1083, 1001, 1076, 468, 510, 511, 2112,
	3497, 2744, 2231, 2232, 2233, 2234, 511, 491, 1174, 516,
	512, 85, 495, 85, 2555, 1879, 1878, 1877, 1876, 1875,
	1874, 509, 140, 1451, 412, 414, 1137, 498, 140, 1157,
	1158, 2512, 2542, 140, 2724, 2827, 3632, 3085, 3266, 1092,
	2845, 3074, 2547, 504, 504, 3088, 1088, 2225, 2516, 3539,
	140, 1090, 1077, 1078, 3538, 1089, 3464, 3466, 3357, 3086,
	3087, 3102, 3091, 3092, 3093, 3094, 1001, 3111, 2226, 3546,
	1866, 3711, 2514, 140, 994, 3703, 3584, 1001, 85, 3238,
	2165, 1056, 1193, 3072, 3073, 3075, 3076, 3077, 1168, 1205,
	1038, 1169, 1128, 140, 504, 1451, 994, 3100, 126, 3731,
	3672, 3588, 3232, 525, 1034, 140, 1451, 3227, 1269, 1271,
	3654, 1466, 1273, 1895, 1087, 1067, 531, 1068, 1070, 1071,
	2256, 2250, 2251, 2469, 2249, 2252, 2253, 3710, 115, 3355,
	484, 485, 486, 492, 1845, 496, 497, 500, 3582, 3583,
	3234, 1285, 3256, 2830, 1288, 1289, 1290, 1291, 1292, 1125,
	1297, 2472, 1137, 121, 2751, 2752, 2468, 2818, 1896, 3231,
	449, 2753, 2259, 2821, 2822, 2823, 2824, 2825, 1160, 456,
	1898, 3661, 1050, 3339, 3230, 1270, 2258, 2257, 3229, 3228,
	2616, 3226, 132, 2821, 2822, 2823, 2824, 2825, 3013, 1475,
	1476, 1474, 3347, 1298, 1299, 1300, 1301, 1302, 1303, 1304,
	1305, 1306, 1307, 1308, 1309, 1310, 1311, 117, 1314, 1315,
	1318, 1318, 1318, 1324, 1318, 1318, 1324, 1318, 1324, 1333,
	1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343,
	1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353,
	1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 86, 2980,
	472, 1189, 106, 531, 122, 2847, 1239, 2219, 1011, 2515,
	1065, 1137, 2618, 439, 3343, 3344, 3563, 2482, 141, 3379,
	1837, 2804, 142, 3515, 3516, 143, 144, 2469, 1816, 2132,
	3408, 145, 1084, 3494, 2486, 1136, 1320, 1322, 2982, 1326,
	1328, 2723, 1331, 3655, 1835, 1836, 3186, 2441, 3494, 3187,
	1138, 1145, 1146, 1148, 1149, 1150, 1151, 1152, 3290, 1154,
	1155, 1156, 97, 1159, 532, 1162, 1163, 1164, 1165, 1166,
	2415, 1091, 3253, 532, 2374, 3611, 2114, 532, 2422, 532,
	2518, 78, 3012, 3014, 3015, 3016, 2722, 3184, 2374, 1170,
	141, 3349, 3465, 1129, 142, 1190, 2374, 143, 144, 1204,
	1177, 141, 108, 145, 3354, 142, 2255, 3235, 143, 144,
	459, 2409, 119, 118, 145, 416, 1082, 3255, 2829, 457,
	457, 1009, 1008, 3070, 2419, 3172, 3670, 1147, 2698, 3665,
	2755, 2467, 140, 86, 3712, 115, 1144, 1044, 3634, 571,
	570, 573, 574, 575, 576, 3668, 120, 1011, 572, 1973,
	2786, 2787, 2159, 2160, 460, 2410, 2156, 1062, 115, 2016,
	2754, 3600, 419, 1839, 2532, 2533, 1063, 1064, 116, 120,
	490, 429, 437, 438, 2620, 2418, 454, 1061, 1060, 2624,
	3327, 2619, 1811, 2617, 3115, 3116, 3321, 2155, 2622, 2779,
	3002, 140, 1001, 3003, 3738, 3004, 2102, 1187, 1142, 2104,
	1841, 2621, 1001, 1840, 110, 991, 111, 1774, 425, 3717,
	2585, 427, 3199, 2764, 435, 436, 2623, 2625, 1001, 1001,
	2573, 117, 2102, 2868, 3758, 3348, 3755, 3201, 3744, 3722,
	2386, 2388, 2104, 2423, 1143, 1006, 1139, 1024, 3359, 3125,
	140, 527, 3126, 2429, 2843, 1319, 1321, 1323, 1325, 1327,
	1329, 1330, 1332, 2541, 140, 1133, 2537, 910, 2520, 2705,
	2519, 2220, 910, 1871, 1235, 1480, 1478, 1085, 2150, 2104,
	1140, 1141, 1003, 2104, 2104, 2704, 2703, 432, 2421, 1002,
	2535, 1202, 1014, 1183, 1104, 1105, 1106, 1107, 1108, 1109,
	1110, 1111, 1112, 1113, 1114, 1115, 410, 3129, 433, 2311,
	1274, 2453, 1275, 1276, 1272, 1182, 1178, 1179, 1180, 1181,
	1184, 1185, 1186, 1188, 1249, 1248, 1258, 1259, 1251, 1252,
	1253, 1254, 1255, 1256, 1257, 1250, 2308, 457, 1260, 86,
	1038, 426, 2081, 2898, 501, 1470, 3667, 3669, 2712, 2539,
	2538, 2405, 2175, 2433, 3352, 2103, 3200, 2174, 2949, 2290,
	2279, 1384, 2573, 501, 1493, 457, 1001, 1375, 1260, 2574,
	2102, 2387, 1376, 107, 1079, 2397, 1446, 1447, 1448, 1449,
	2440, 417, 2241, 3035, 2157, 1469, 119, 118, 2103, 1473,
	1132, 2584, 2426, 1365, 3715, 2581, 2071, 3716, 1911, 3714,
	1277, 1383, 1287, 1286, 2840, 1240, 1362, 1363, 1119, 1036,
	2435, 1453, 85, 3541, 1807, 431, 420, 421, 1250, 442,
	3124, 1260, 2195, 422, 424, 2103, 418, 441, 440, 2103,
	2103, 2580, 2573, 1388, 3374, 1277, 2577, 3564, 3565, 2576,
	2579, 1904, 2416, 1456, 3036, 3561, 3562, 1088, 1805, 1274,
	3384, 3383, 1090, 1496, 3152, 3242, 1089, 2858, 1023, 2859,
	2592, 3130, 2360, 1038, 501, 1231, 1486, 1782, 3401, 2244,
	2412, 434, 103, 2951, 2562, 1798, 2563, 1275, 1276, 2186,
	2639, 1793, 1058, 1794, 1795, 1796, 2559, 2414, 2560, 1828,
	3542, 3243, 1788, 1789, 1790, 1791, 2950, 1792, 1864, 2425,
	1385, 1229, 1230, 1228, 1275, 1276, 1049, 1848, 1458, 3746,
	1457, 1228, 1465, 1471, 2013, 1087, 1482, 102, 2860, 1801,
	1231, 1802, 1472, 2781, 2784, 2948, 85, 1072, 1231, 2782,
	2783, 85, 2554, 1490, 1489, 2564, 1253, 1254, 1255, 1256,
	1257, 1250, 2553, 1781, 1260, 1969, 1870, 2561, 1784, 1786,
	1787, 2552, 1900, 2551, 1825, 1229, 1230, 1228, 101, 2413,
	2417, 2420, 3580, 2424, 2427, 2428, 2430, 2431, 2432, 2434,
	2436, 2437, 2438, 2439, 1231, 1799, 1812, 1846, 1381, 2187,
	1813, 1095, 1059, 1817, 1026, 1027, 1028, 1029, 1030, 1031,
	1032, 1945, 85, 1820, 1821, 3606, 1017, 1823, 3742, 1909,
	1910, 1016, 1843, 1048, 3656, 1460, 1943, 1944, 1942, 3101,
	2013, 1939, 2324, 1826, 1229, 1230, 1228, 1869, 1297, 1847,
	1844, 3095, 3658, 1081, 1074, 3630, 2894, 1972, 1974, 531,
	1940, 3131, 140, 1231, 2773, 1229, 1230, 1228, 542, 2494,
	1865, 994, 1899, 1868, 1989, 1902, 1251, 1252, 1253, 1254,
	1255, 1256, 1257, 1250, 1231, 1931, 1260, 1936, 1229, 1230,
	1228, 2304, 1225, 1229, 1230, 1228, 1918, 1887, 1230, 1228,
	1998, 2001, 2207, 1880, 1902, 1891, 1894, 1231, 2014, 1892,
	1893, 1930, 1231, 3613, 2057, 1215, 1231, 1965, 1216, 1971,
	2303, 3739, 2302, 86, 3580, 531, 3618, 2411, 3617, 3683,
	1208, 1978, 1980, 3511, 1189, 1941, 3462, 1239, 3350, 3469,
	2080, 1927, 1229, 1230, 1228, 1849, 3461, 3402, 1852, 1853,
	1854, 531, 1856, 1857, 3020, 3314, 1858, 1229, 1230, 1228,
	3250, 1231, 1859, 910, 994, 140, 1860, 1861, 3747, 1862,
	1863, 3725, 3699, 3724, 504, 504, 1231, 3740, 504, 2051,
	2061, 1229, 1230, 1228, 3463, 140, 3351, 3018, 140, 3581,
	1962, 2087, 1963, 504, 504, 2276, 2277, 2278, 140, 3642,
	1231, 3249, 3021, 1780, 1780, 1977, 3248, 3247, 1981, 1982,
	1983, 1984, 1985, 3241, 140, 140, 140, 140, 2027, 140,
	2029, 1229, 1230, 1228, 3060, 3059, 3008, 2652, 2085, 2641,
	1936, 2010, 2050, 2998, 2064, 3019, 2991, 504, 2856, 2776,
	1231, 140, 2172, 1248, 1258, 1259, 1251, 1252, 1253, 1254,
	1255, 1256, 1257, 1250, 2086, 2493, 1260, 2491, 2480, 2113,
	3749, 2118, 2119, 2120, 2121, 2122, 2093, 1127, 2403, 1126,
	2404, 3593, 3592, 1099, 2073, 2069, 2139, 2140, 2141, 2142,
	2078, 994, 2170, 2171, 2072, 3543, 3540, 2065, 3475, 3346,
	2090, 989, 2088, 3345, 504, 504, 504, 1098, 3326, 994,
	2143, 2144, 2145, 3257, 2101, 2126, 2127, 2128, 2135, 2136,
	2137, 2138, 1913, 1249, 1248, 1258, 1259, 1251, 1252, 1253,
	1254, 1255, 1256, 1257, 1250, 3225, 2131, 1260, 3194, 504,
	1923, 1925, 1926, 3193, 504, 504, 3732, 1914, 1924, 3179,
	1915, 2166, 1966, 3148, 3098, 3097, 3096, 2168, 2169, 3058,
	3017, 3009, 3001, 140, 2176, 994, 571, 570, 573, 574,
	575, 576, 2999, 2995, 140, 572, 1973, 1990, 1991, 1992,
	2151, 2994, 2153, 1996, 1997, 2000, 2003, 2993, 2008, 2009,
	2857, 2855, 2854, 2853, 2015, 2792, 2595, 2594, 140, 2565,
	2489, 2208, 2181, 1822, 1776, 1235, 1775, 1201, 3675, 3589,
	3577, 3576, 103, 3533, 2020, 3532, 2023, 2024, 3528, 3527,
	3356, 2028, 3274, 2030, 2031, 2453, 3268, 3122, 2931, 2036,
	2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046,
	2047, 3531, 2919, 2888, 994, 2884, 994, 2870, 2831, 994,
	2527, 2526, 1194, 2386, 2388, 2201, 994, 2183, 994, 994,
	1244, 2182, 1247, 1964, 1819, 1814, 1488, 1487, 140, 1261,
	1262, 1263, 1264, 1265, 1266, 1267, 1461, 1245, 1246, 1243,
	1459, 2315, 1122, 1045, 467, 475, 1481, 1249, 1248, 1258,
	1259, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1250, 1167,
	2306, 1260, 2288, 1209, 1209, 994, 994, 3267, 1249, 1248,
	1258, 1259, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1250,
	3218, 1219, 1260, 3208, 1209, 3208, 3615, 3026, 3598, 3481,
	1209, 1241, 3568, 1209, 140, 140, 140, 3026, 3549, 3217,
	1209, 2810, 1249, 1248, 1258, 1259, 1251, 1252, 1253, 1254,
	1255, 1256, 1257, 1250, 2933, 1209, 1260, 2947, 506, 994,
	3399, 571, 570, 573, 574, 575, 576, 1324, 2795, 2974,
	572, 1973, 3026, 3477, 2525, 1295, 3208, 3389, 3026, 3337,
	2288, 1209, 3208, 3304, 2387, 3208, 3207, 3161, 1209, 1249,
	1248, 1258, 1259, 1251, 1252, 1253, 1254, 1255, 1256, 1257,
	1250, 2794, 2210, 1260, 1249, 1248, 1258, 1259, 1251, 1252,
	1253, 1254, 1255, 1256, 1257, 1250, 2067, 2204, 1260, 1249,
	1248, 1258, 1259, 1251, 1252, 1253, 1254, 1255, 1256, 1257,
	1250, 2363, 1313, 1260, 2240, 1209, 3026, 3025, 2802, 2801,
	2798, 2799, 2238, 140, 2793, 2929, 2798, 2797, 1133, 140,
	140, 504, 504, 504, 2179, 2184, 140, 89, 2188, 2363,
	1209, 2222, 2221, 2193, 2928, 1987, 2205, 2362, 2192, 2525,
	2918, 3706, 2068, 2067, 2070, 1987, 1209, 1387, 1386, 2392,
	2191, 1774, 1258, 1259, 1251, 1252, 1253, 1254, 1255, 1256,
	1257, 1250, 2280, 2917, 1260, 1249, 1248, 1258, 1259, 1251,
	1252, 1253, 1254, 1255, 1256, 1257, 1250, 2363, 2061, 1260,
	2163, 2288, 1125, 1906, 1249, 1248, 1258, 1259, 1251, 1252,
	1253, 1254, 1255, 1256, 1257, 1250, 2947, 2217, 1260, 2068,
	1171, 1774, 1172, 1131, 1130, 2203, 3635, 1131, 3604, 2947,
	3155, 1987, 2209, 981, 2363, 2178, 2964, 2811, 2800, 2224,
	1939, 2162, 2227, 2916, 2216, 2593, 2566, 2550, 2074, 2288,
	2330, 2329, 1824, 2180, 1905, 2177, 1931, 1907, 1936, 1940,
	1249, 1248, 1258, 1259, 1251, 1252, 1253, 1254, 1255, 1256,
	1257, 1250, 1191, 1867, 1260, 1832, 1774, 1479, 2237, 1477,
	1133, 1369, 2086, 1249, 1248, 1258, 1259, 1251, 1252, 1253,
	1254, 1255, 1256, 1257, 1250, 86, 86, 1260, 3512, 3478,
	2963, 3370, 2268, 3271, 2266, 2267, 3169, 3062, 2380, 2110,
	2954, 2955, 2148, 2389, 2390, 2134, 2112, 2057, 2385, 2772,
	2057, 2130, 2443, 1137, 2285, 2158, 2125, 2124, 1454, 1118,
	2196, 1042, 1041, 3737, 2281, 3735, 3687, 3685, 3647, 2957,
	2933, 2197, 2291, 1249, 1248, 1258, 1259, 1251, 1252, 1253,
	1254, 1255, 1256, 1257, 1250, 2809, 2495, 1260, 1842, 1484,
	1173, 1134, 2275, 2691, 2223, 2688, 2686, 910, 2690, 444,
	2689, 2687, 2961, 2960, 2061, 2959, 2685, 2684, 537, 538,
	3559, 3486, 2393, 2061, 2376, 2394, 2061, 2596, 2265, 3535,
	1917, 1223, 1224, 1986, 1988, 3551, 3158, 2273, 2272, 3295,
	3121, 1993, 2323, 3029, 2883, 2882, 2791, 2790, 2789, 2455,
	2447, 531, 2766, 546, 3361, 3364, 3474, 3473, 1496, 2361,
	1221, 3261, 3259, 2452, 2454, 3342, 3341, 466, 3536, 446,
	447, 1818, 3244, 3245, 3704, 2591, 140, 2590, 2988, 2025,
	2026, 3153, 2777, 2335, 2337, 1453, 2032, 2033, 2034, 2035,
	2343, 2344, 2345, 2346, 2391, 1212, 2725, 501, 2531, 2242,
	140, 140, 140, 2398, 1382, 1469, 1213, 1375, 2395, 2442,
	1116, 1100, 2243, 1097, 2406, 1096, 2483, 2484, 2485, 2487,
	1046, 2522, 3278, 3277, 1201, 1909, 1910, 2152, 3103, 85,
	1483, 3636, 3467, 3263, 140, 3104, 140, 3034, 1094, 2808,
	994, 1223, 1224, 2604, 103, 994, 2149, 1881, 1206, 1207,
	2490, 2271, 3624, 3623, 3622, 2448, 3222, 2451, 2492, 2270,
	2498, 2236, 1075, 534, 3545, 1785, 3544, 994, 3485, 3471,
	994, 1249, 1248, 1258, 1259, 1251, 1252, 1253, 1254, 1255,
	1256, 1257, 1250, 2529, 3393, 1260, 2513, 2521, 1803, 3365,
	2292, 2293, 2294, 2295, 2296, 3294, 2717, 535, 89, 3484,
	3376, 2525, 3590, 2523, 994, 2500, 2501, 2502, 3689, 3688,
	3709, 3133, 2850, 2528, 2548, 2546, 2545, 2312, 2309, 2321,
	2228, 1800, 1226, 1040, 1039, 3688, 2557, 2646, 3689, 3386,
	2540, 2536, 531, 2788, 1295, 2543, 2534, 1903, 981, 529,
	3427, 58, 91, 2549, 3429, 22, 3428, 21, 3430, 23,
	2668, 2670, 3431, 24, 2057, 2057, 2057, 2057, 2057, 61,
	2556, 2570, 3425, 17, 2601, 3424, 16, 2626, 2571, 3534,
	2628, 2380, 2638, 2699, 2694, 1931, 2669, 1936, 1, 2597,
	3423, 15, 2701, 2057, 1887, 2602, 2575, 2218, 2586, 2587,
	3426, 18, 2589, 3422, 14, 1850, 2673, 1989, 3416, 10,
	2603, 2608, 3448, 38, 3083, 2606, 2568, 2578, 2583, 3446,
	36, 3445, 35, 2627, 3444, 31, 3443, 30, 3442, 29,
	2061, 2061, 2061, 2061, 2061, 3440, 26, 2702, 3439, 25,
	3441, 27, 3421, 13, 3418, 12, 3082, 2061, 3417, 11,
	3415, 9, 3089, 2816, 1919, 1920, 1921, 2819, 2709, 2061,
	2511, 140, 3099, 531, 1467, 3233, 1020, 2774, 2161, 140,
	1123, 2785, 140, 3472, 3360, 3362, 3258, 3106, 140, 3067,
	3066, 140, 140, 140, 531, 2708, 2679, 2710, 2711, 2682,
	2680, 2681, 2693, 2683, 2505, 2504, 1117, 1830, 2569, 2572,
	2601, 2173, 2778, 2254, 2706, 2235, 2647, 2648, 2649, 2650,
	2651, 2229, 1176, 2094, 3571, 3312, 3181, 2981, 2977, 2407,
	2768, 2769, 2770, 1295, 2771, 501, 2826, 2716, 1994, 1995,
	3010, 2089, 3501, 983, 99, 2185, 1057, 2758, 423, 2091,
	2765, 2464, 2767, 3363, 2143, 1120, 2145, 2463, 2478, 2106,
	1196, 1200, 2462, 2461, 3358, 2837, 2465, 1393, 1391, 1392,
	994, 1390, 140, 1395, 1394, 3682, 3610, 428, 1377, 994,
	994, 3522, 2930, 2833, 504, 1227, 2812, 582, 114, 3123,
	2828, 2582, 513, 514, 2780, 104, 112, 1916, 2286, 140,
	504, 430, 1780, 1268, 2269, 2399, 908, 909, 2796, 901,
	2261, 1192, 3382, 3552, 3601, 3514, 1217, 2084, 504, 3554,
	3483, 3375, 2322, 1312, 2011, 2806, 1249, 1248, 1258, 1259,
	1251, 1252, 1253, 1254, 1255, 1256, 1257, 1250, 994, 555,
	1260, 2697, 504, 3151, 994, 2835, 3556, 1922, 2924, 2832,
	504, 2866, 569, 568, 567, 564, 565, 3495, 1912, 2665,
	1242, 2803, 994, 994, 544, 2838, 2055, 2198, 2852, 2048,
	2206, 2895, 2839, 2367, 2365, 2364, 2844, 1485, 2938, 85,
	2848, 2849, 1366, 2851, 1453, 2867, 2956, 2861, 2952, 2378,
	2146, 140, 2059, 2054, 2058, 2887, 42, 3132, 1073, 2598,
	2925, 994, 3288, 2274, 93, 2939, 528, 539, 28, 2966,
	20, 19, 2885, 2247, 2970, 2971, 2972, 2893, 1018, 2934,
	2673, 44, 46, 47, 2499, 2937, 2154, 3521, 3663, 1103,
	3674, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 3697, 3578,
	2875, 2880, 2239, 37, 34, 33, 2908, 32, 3437, 3436,
	3435, 3438, 3434, 3433, 3432, 3447, 2965, 3420, 994, 3419,
	2260, 3649, 3648, 2969, 2905, 2906, 4, 2907, 1203, 84,
	2909, 2941, 2911, 39, 979, 2946, 2, 0, 0, 2975,
	0, 0, 531, 0, 0, 140, 140, 140, 140, 140,
	2958, 0, 3039, 3041, 3043, 3044, 0, 0, 140, 0,
	0, 2967, 140, 0, 0, 2986, 140, 0, 2992, 0,
	0, 0, 0, 2976, 140, 0, 3000, 0, 85, 0,
	0, 3037, 0, 0, 2287, 0, 2289, 994, 0, 0,
	0, 0, 1887, 0, 2758, 0, 3064, 0, 0, 0,
	0, 0, 2758, 0, 3063, 0, 0, 0, 0, 2298,
	2299, 2300, 2301, 0, 0, 0, 2305, 2307, 0, 0,
	2310, 0, 2757, 2313, 2314, 994, 0, 0, 2319, 2320,
	0, 0, 0, 0, 2326, 2327, 0, 2328, 0, 3030,
	2331, 2332, 0, 2333, 2334, 0, 0, 2338, 2339, 2340,
	2341, 2342, 3079, 3080, 3081, 0, 2347, 2348, 2349, 2350,
	2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 3046, 0,
	3027, 3028, 3078, 0, 3108, 0, 0, 140, 0, 3110,
	0, 531, 0, 0, 0, 0, 0, 0, 0, 0,
	994, 994, 994, 0, 3119, 0, 504, 2837, 3137, 3065,
	0, 140, 504, 3117, 3118, 0, 3105, 0, 3107, 0,
	0, 0, 2983, 2984, 2985, 0, 0, 140, 0, 504,
	3127, 994, 0, 504, 3134, 3135, 0, 504, 504, 0,
	504, 3113, 3005, 3006, 3007, 2765, 0, 0, 3109, 2143,
	3120, 0, 3022, 0, 0, 3112, 0, 0, 0, 2865,
	3183, 3185, 0, 3024, 0, 0, 0, 3128, 2873, 2878,
	994, 2673, 0, 2601, 140, 994, 0, 0, 2865, 0,
	0, 994, 0, 0, 994, 994, 0, 3162, 0, 0,
	0, 0, 0, 3154, 0, 0, 0, 0, 0, 3171,
	3174, 0, 0, 0, 0, 0, 3176, 3177, 3178, 0,
	0, 0, 3180, 0, 0, 3210, 0, 3163, 0, 0,
	0, 0, 0, 0, 0, 0, 3175, 0, 1318, 1318,
	1318, 1324, 1318, 1318, 1324, 1318, 1324, 1333, 1334, 0,
	3191, 3189, 0, 0, 3192, 0, 3038, 3040, 3042, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	994, 3220, 994, 0, 0, 0, 2758, 0, 0, 0,
	3221, 0, 0, 0, 0, 3219, 0, 0, 0, 0,
	0, 3202, 3205, 3206, 3203, 3204, 0, 3197, 0, 0,
	0, 994, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1320, 1322, 3223, 1326, 1328, 0,
	1331, 0, 3279, 1219, 2057, 0, 0, 0, 0, 2757,
	0, 2609, 2610, 2611, 2612, 2613, 2614, 2757, 3224, 0,
	0, 0, 0, 3236, 0, 0, 2938, 0, 0, 2938,
	3300, 3246, 0, 3251, 3265, 3254, 0, 0, 0, 0,
	0, 0, 0, 2966, 3264, 0, 0, 0, 0, 0,
	0, 2385, 0, 3307, 994, 3316, 3299, 3318, 3319, 3320,
	0, 3276, 0, 3272, 3273, 0, 3283, 3269, 3270, 3282,
	2061, 0, 0, 2937, 0, 0, 2937, 0, 3297, 0,
	3296, 0, 3293, 2297, 0, 0, 0, 0, 0, 3302,
	3305, 140, 85, 994, 0, 3303, 3280, 2695, 2696, 0,
	1220, 3323, 3306, 0, 0, 0, 0, 0, 1804, 2325,
	0, 0, 0, 0, 0, 0, 0, 0, 3338, 3340,
	0, 0, 0, 0, 3315, 504, 3317, 0, 0, 0,
	0, 0, 504, 531, 3322, 0, 0, 0, 0, 0,
	3324, 0, 0, 0, 2865, 0, 0, 0, 2636, 0,
	2758, 135, 2758, 0, 0, 0, 0, 443, 0, 0,
	0, 0, 135, 0, 0, 463, 2758, 0, 0, 2938,
	2865, 85, 0, 0, 3368, 0, 0, 0, 0, 522,
	994, 0, 3391, 3392, 0, 0, 3366, 0, 3367, 0,
	0, 0, 0, 543, 0, 531, 0, 3388, 0, 918,
	3369, 0, 135, 1319, 1321, 1323, 1325, 1327, 1329, 1330,
	1332, 85, 0, 3377, 0, 3385, 2937, 0, 3387, 0,
	0, 3398, 135, 0, 0, 140, 3407, 3409, 3211, 3390,
	3212, 0, 3213, 3215, 135, 0, 0, 0, 0, 0,
	0, 0, 3395, 0, 3397, 994, 3400, 0, 0, 0,
	2635, 0, 994, 994, 994, 0, 1249, 1248, 1258, 1259,
	1251, 1252, 1253, 1254, 1255, 1256, 1257, 1250, 0, 3470,
	1260, 2757, 0, 3479, 531, 3468, 1937, 0, 0, 1946,
	1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956,
	1957, 1958, 1959, 1960, 0, 0, 0, 3517, 0, 3499,
	2673, 3505, 3504, 3498, 0, 0, 0, 0, 994, 3513,
	3323, 0, 0, 0, 0, 0, 0, 3403, 0, 0,
	0, 0, 2896, 0, 0, 0, 85, 0, 0, 0,
	0, 85, 0, 0, 0, 2904, 0, 0, 0, 0,
	3529, 0, 2004, 0, 994, 0, 2913, 2914, 2915, 0,
	0, 0, 2017, 2920, 0, 0, 3503, 580, 1249, 1248,
	1258, 1259, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1250,
	0, 0, 1260, 0, 0, 3547, 0, 3560, 0, 0,
	3550, 3548, 3573, 0, 0, 0, 0, 0, 2940, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3566,
	0, 0, 3575, 0, 0, 0, 0, 0, 994, 0,
	0, 0, 0, 0, 0, 140, 0, 3526, 0, 0,
	2640, 0, 462, 0, 0, 0, 2973, 501, 3597, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3574, 0,
	0, 0, 3569, 994, 0, 0, 0, 3599, 0, 0,
	0, 994, 85, 0, 0, 140, 917, 140, 85, 85,
	986, 3585, 85, 0, 0, 2757, 3621, 2757, 3609, 0,
	0, 3616, 0, 3629, 3628, 0, 2837, 3625, 3628, 3619,
	0, 2757, 1025, 0, 0, 0, 3641, 0, 0, 85,
	994, 0, 3639, 3637, 85, 0, 3633, 0, 0, 3614,
	0, 0, 0, 3657, 0, 3677, 0, 2646, 2080, 3650,
	0, 135, 0, 501, 3676, 3671, 3679, 3660, 3681, 3678,
	3662, 3686, 3653, 0, 3684, 85, 0, 3652, 0, 85,
	85, 3651, 3692, 3503, 85, 0, 3690, 0, 0, 3691,
	0, 0, 0, 3694, 85, 504, 3628, 0, 0, 0,
	3700, 3626, 0, 994, 0, 0, 0, 0, 0, 0,
	3628, 0, 0, 0, 85, 3718, 0, 85, 0, 0,
	135, 3726, 85, 0, 0, 3729, 0, 0, 0, 0,
	3628, 3723, 0, 0, 0, 0, 0, 0, 0, 0,
	85, 0, 85, 0, 0, 0, 85, 531, 994, 0,
	994, 0, 994, 0, 0, 0, 3628, 0, 3628, 140,
	3745, 0, 0, 0, 85, 0, 0, 85, 0, 522,
	0, 2834, 0, 85, 0, 0, 0, 0, 85, 0,
	3628, 3753, 2634, 522, 0, 0, 0, 0, 0, 3628,
	0, 3143, 3144, 3145, 3628, 3147, 0, 0, 0, 0,
	0, 0, 994, 0, 0, 0, 994, 0, 3156, 3157,
	0, 3159, 0, 0, 3160, 0, 0, 0, 0, 0,
	0, 0, 0, 994, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2889, 0, 0, 3173, 0, 0,
	0, 0, 0, 0, 0, 542, 2654, 2655, 2656, 2657,
	2658, 2659, 2660, 2661, 2662, 2663, 2664, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 40, 1249, 1248, 1258,
	1259, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1250, 0,
	64, 1260, 0, 0, 994, 0, 82, 2927, 0, 43,
	1249, 1248, 1258, 1259, 1251, 1252, 1253, 1254, 1255, 1256,
	1257, 1250, 0, 3209, 1260, 0, 0, 0, 0, 0,
	994, 0, 0, 0, 3214, 3216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 86, 0,
	0, 0, 0, 3456, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 994, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3449, 0, 0, 3696, 3699,
	3695, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 504, 0,
	0, 0, 0, 0, 0, 994, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 994, 0,
	994, 0, 2202, 0, 0, 994, 0, 0, 0, 3284,
	3285, 3286, 3287, 0, 0, 0, 0, 0, 994, 3291,
	3292, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	140, 45, 79, 49, 48, 51, 3308, 3309, 3310, 0,
	0, 0, 0, 0, 0, 0, 3450, 0, 0, 0,
	0, 0, 0, 0, 504, 0, 0, 994, 0, 0,
	0, 0, 140, 55, 81, 80, 0, 0, 0, 0,
	50, 3333, 3334, 3335, 0, 3336, 0, 140, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2899, 2900,
	2901, 2902, 2903, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2282, 2283, 2284,
	0, 0, 62, 63, 0, 3452, 0, 0, 0, 0,
	2245, 2246, 0, 0, 0, 3459, 3453, 3454, 3455, 3457,
	3458, 1368, 0, 0, 918, 71, 0, 72, 3378, 918,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 76, 0, 1295, 3394, 0, 3396, 0, 2316,
	2317, 2318, 53, 0, 3164, 3165, 3166, 3167, 0, 0,
	3168, 0, 3404, 3170, 0, 0, 0, 0, 0, 0,
	0, 0, 1295, 0, 0, 0, 0, 3460, 3451, 0,
	59, 60, 66, 0, 67, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 554, 0, 0, 0, 0,
	0, 0, 3480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3489, 0, 135, 0, 0, 0, 3500, 1464,
	463, 0, 0, 0, 0, 3506, 0, 3507, 3508, 3509,
	3510, 0, 0, 0, 135, 0, 0, 135, 0, 0,
	1464, 463, 0, 0, 0, 0, 136, 1495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 136, 0, 0,
	0, 0, 0, 135, 135, 135, 135, 0, 135, 0,
	0, 0, 0, 0, 523, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1808, 0, 0, 0, 919, 0, 0, 136, 987, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 581, 0, 0, 0, 136, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 136,
	0, 3567, 0, 0, 3570, 0, 0, 0, 0, 2530,
	542, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 52, 54, 0, 0, 0, 0,
	78, 0, 0, 0, 137, 0, 0, 0, 0, 0,
	0, 917, 0, 0, 0, 137, 917, 1378, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3608, 0, 0,
	0, 0, 522, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 135, 0, 137, 988, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2605, 0, 0, 0, 0, 137, 0, 135, 0, 0,
	0, 0, 0, 0, 3644, 2558, 0, 137, 0, 0,
	0, 1495, 2629, 2630, 0, 2631, 2632, 0, 2588, 2633,
	0, 0, 2441, 0, 0, 0, 0, 0, 0, 0,
	1455, 0, 0, 2642, 2643, 0, 1463, 462, 0, 0,
	0, 0, 0, 0, 1970, 2415, 0, 0, 0, 0,
	0, 0, 0, 2422, 0, 0, 0, 1463, 462, 0,
	1295, 0, 0, 0, 0, 0, 0, 522, 0, 1970,
	1970, 1970, 0, 0, 0, 1970, 1970, 1970, 1970, 0,
	1970, 1970, 0, 0, 0, 918, 1970, 0, 0, 0,
	0, 0, 0, 0, 2707, 0, 0, 3733, 3734, 2419,
	0, 0, 0, 0, 0, 0, 1970, 1970, 1970, 1970,
	0, 0, 1970, 1970, 1970, 1970, 1970, 0, 0, 0,
	0, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970, 1970,
	1970, 1970, 1970, 135, 135, 135, 0, 0, 0, 0,
	918, 0, 0, 0, 0, 0, 0, 1829, 0, 0,
	2418, 0, 0, 0, 1495, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1851, 136, 0, 0, 0,
	0, 0, 0, 0, 2718, 2719, 2720, 2721, 0, 0,
	2726, 2727, 2728, 2729, 2730, 0, 0, 2733, 2734, 2735,
	2736, 2737, 2738, 2739, 2740, 2741, 2742, 2743, 0, 2745,
	2746, 2747, 2748, 0, 2759, 0, 0, 0, 2423, 0,
	0, 0, 0, 0, 0, 3518, 3519, 0, 2429, 0,
	0, 1889, 0, 0, 0, 136, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 135, 0, 0, 0, 0, 0, 135, 135,
	3555, 3558, 0, 2421, 0, 135, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1889, 0,
	0, 0, 0, 0, 523, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 137, 0, 0, 0, 523, 0,
	0, 0, 0, 40, 0, 0, 0, 0, 1236, 0,
	1889, 0, 1889, 0, 0, 1975, 0, 64, 2897, 0,
	0, 0, 1976, 82, 1889, 1889, 43, 0, 2433, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1415,
	0, 0, 0, 0, 0, 0, 0, 0, 2921, 2922,
	2923, 0, 917, 137, 0, 2440, 3620, 0, 0, 0,
	0, 0, 0, 0, 0, 86, 0, 2426, 0, 0,
	3456, 2018, 2019, 0, 0, 0, 0, 0, 0, 3586,
	3558, 0, 0, 0, 0, 2435, 0, 0, 0, 0,
	0, 0, 3449, 0, 0, 0, 0, 3756, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 917, 0, 0,
	0, 0, 0, 0, 2968, 0, 0, 2416, 0, 0,
	0, 1889, 0, 0, 0, 986, 1238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1402, 2412, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2414, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2425, 3727, 0, 0, 45, 79,
	49, 48, 51, 0, 0, 0, 0, 0, 3033, 0,
	0, 0, 0, 3450, 0, 2987, 0, 2989, 2990, 3045,
	0, 0, 0, 0, 2996, 2997, 0, 0, 0, 0,
	55, 81, 80, 0, 0, 0, 0, 50, 0, 0,
	0, 0, 0, 0, 0, 0, 1416, 0, 0, 0,
	0, 0, 0, 0, 2413, 2417, 2420, 0, 2424, 2427,
	2428, 2430, 2431, 2432, 2434, 2436, 2437, 2438, 2439, 0,
	0, 0, 0, 0, 0, 135, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 62,
	63, 0, 3452, 0, 0, 0, 0, 0, 0, 2189,
	2190, 135, 3459, 3453, 3454, 3455, 3457, 3458, 0, 0,
	0, 0, 71, 0, 72, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 135, 0, 522, 0, 0, 0, 76,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 53,
	3139, 3140, 3141, 3142, 0, 0, 0, 0, 3146, 0,
	0, 0, 3149, 3150, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3460, 3451, 0, 59, 60, 66,
	0, 67, 0, 0, 0, 0, 136, 0, 0, 919,
	0, 0, 2411, 0, 919, 0, 1429, 1432, 1433, 1434,
	1435, 1436, 1437, 0, 1438, 1439, 1440, 1441, 1442, 1443,
	1444, 1445, 1495, 1417, 1418, 1419, 1420, 1396, 1400, 1430,
	1397, 1403, 1399, 1401, 1398, 0, 1404, 1405, 1406, 1407,
	1408, 1409, 1410, 1411, 1412, 1413, 1414, 1421, 1422, 1423,
	1424, 1425, 1426, 1427, 1428, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1452, 1970, 0,
	0, 3190, 1970, 1970, 1970, 1970, 1970, 0, 0, 136,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 137, 0, 0, 0, 0, 136,
	0, 1970, 136, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 136, 136,
	136, 136, 0, 136, 0, 0, 0, 0, 0, 0,
	135, 52, 54, 0, 0, 0, 0, 78, 135, 0,
	0, 522, 0, 0, 0, 0, 0, 135, 1431, 0,
	135, 2396, 1495, 0, 918, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2215, 0, 0, 0,
	0, 2215, 0, 0, 0, 0, 0, 137, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2215, 0, 0, 2215, 137, 0, 0,
	137, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3332, 0, 0, 0, 0, 0,
	0, 135, 0, 0, 0, 0, 137, 137, 137, 137,
	2264, 137, 0, 0, 0, 0, 0, 1783, 0, 1889,
	0, 0, 0, 0, 0, 0, 0, 523, 135, 1885,
	0, 0, 0, 0, 0, 0, 0, 0, 136, 0,
	0, 0, 0, 3325, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3371, 136, 0, 0, 0, 0, 0, 0, 1236,
	0, 0, 0, 0, 0, 0, 1933, 590, 591, 592,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 611, 612,
	613, 614, 615, 616, 617, 618, 619, 620, 621, 622,
	623, 624, 625, 626, 627, 628, 629, 630, 631, 0,
	135, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1970, 523, 0, 0, 0, 0, 0, 0, 1970,
	0, 1495, 0, 0, 0, 0, 0, 1886, 0, 0,
	919, 0, 0, 0, 0, 0, 137, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	137, 917, 0, 0, 0, 1415, 0, 1238, 0, 0,
	0, 0, 0, 0, 1932, 0, 0, 0, 136, 136,
	136, 0, 0, 0, 0, 919, 0, 0, 0, 0,
	0, 0, 0, 918, 135, 135, 135, 135, 135, 1933,
	0, 0, 0, 987, 0, 0, 0, 522, 0, 0,
	0, 135, 0, 0, 0, 522, 0, 0, 0, 0,
	1970, 0, 0, 135, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2496, 0, 0, 0,
	0, 0, 0, 0, 0, 2503, 2507, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1402, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 136, 0, 0,
	0, 0, 0, 136, 136, 0, 137, 137, 137, 0,
	136, 0, 0, 0, 2215, 0, 0, 0, 0, 0,
	2544, 0, 0, 0, 0, 0, 0, 1932, 0, 0,
	0, 988, 0, 0, 0, 0, 135, 0, 1889, 1889,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	135, 0, 1416, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 135, 1889, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1889, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 137, 0, 0, 0, 0,
	0, 137, 137, 135, 0, 0, 0, 0, 137, 0,
	0, 0, 0, 0, 2644, 0, 0, 0, 0, 0,
	543, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3707, 0, 0, 0, 0, 0, 0, 0, 0,
	917, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3730, 0,
	0, 0, 0, 0, 0, 3736, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1889, 0, 0, 0, 918, 0, 0,
	0, 0, 1429, 1432, 1433, 1434, 1435, 1436, 1437, 0,
	1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 0, 1417,
	1418, 1419, 1420, 1396, 1400, 1430, 1397, 1403, 1399, 1401,
	1398, 2762, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411,
	1412, 1413, 1414, 1421, 1422, 1423, 1424, 1425, 1426, 1427,
	1428, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	136, 0, 0, 0, 0, 0, 2813, 2814, 2815, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 136, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2842, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	135, 0, 0, 0, 0, 0, 0, 0, 136, 0,
	523, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2881, 0, 0, 0,
	0, 2886, 0, 0, 1431, 0, 0, 2890, 0, 0,
	2891, 2892, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 137, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1933, 0, 0,
	0, 0, 0, 0, 137, 0, 0, 0, 0, 0,
	0, 40, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 917, 64, 1889, 0, 2945, 0,
	0, 82, 0, 0, 43, 0, 137, 0, 0, 0,
	0, 0, 0, 0, 522, 0, 0, 0, 918, 0,
	0, 0, 0, 0, 0, 0, 0, 2945, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 86, 0, 0, 0, 0, 3456, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3449, 0, 0, 0, 0, 3751, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1932, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3032, 0, 0, 0, 0, 136, 0, 0, 0, 0,
	1970, 0, 1970, 136, 1970, 1970, 523, 0, 0, 0,
	0, 0, 136, 0, 0, 136, 0, 0, 0, 919,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2507,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2446, 0, 0, 0, 0, 45, 79, 49, 48,
	51, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3450, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 55, 81,
	80, 0, 0, 0, 0, 50, 0, 0, 0, 0,
	0, 0, 0, 0, 135, 543, 136, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 137, 0, 0, 1889, 0, 0, 0,
	0, 137, 0, 136, 0, 0, 0, 0, 0, 0,
	137, 0, 0, 137, 522, 0, 522, 62, 63, 0,
	3452, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3459, 3453, 3454, 3455, 3457, 3458, 0, 0, 0, 0,
	71, 0, 72, 0, 0, 917, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3032, 0, 0, 0, 0, 1885, 76, 3032, 3032,
	3032, 0, 0, 0, 0, 0, 0, 53, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 137, 136, 0, 0, 0, 0,
	0, 0, 3460, 3451, 0, 59, 60, 66, 0, 67,
	0, 0, 0, 0, 0, 0, 1933, 0, 0, 0,
	0, 137, 0, 0, 2762, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2762, 0, 0, 0, 0, 0, 0, 0, 135, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1886, 0, 0, 0, 2674, 136,
	136, 136, 136, 136, 0, 0, 0, 0, 0, 0,
	0, 0, 523, 0, 0, 0, 136, 0, 0, 0,
	523, 0, 0, 137, 0, 0, 0, 0, 136, 0,
	0, 0, 0, 0, 3275, 0, 0, 918, 0, 0,
	0, 0, 0, 0, 1932, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3301,
	0, 0, 0, 0, 0, 0, 0, 3032, 0, 2763,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 52,
	54, 0, 0, 0, 0, 78, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3328, 137, 137, 137,
	137, 137, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 136, 0, 0, 137, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 40, 0, 137, 0, 0, 0,
	0, 0, 0, 0, 0, 136, 0, 0, 64, 0,
	0, 0, 0, 0, 82, 0, 0, 43, 0, 0,
	0, 136, 0, 0, 0, 0, 0, 0, 0, 2762,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 86, 0, 0, 0,
	2446, 3456, 2872, 2877, 0, 0, 0, 0, 136, 0,
	0, 0, 0, 0, 3032, 0, 3032, 0, 3032, 0,
	0, 0, 0, 3449, 0, 0, 0, 0, 3741, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 137,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 522,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 137, 0, 0, 0, 0, 2762, 0,
	0, 0, 3482, 0, 0, 0, 0, 0, 0, 137,
	0, 522, 0, 0, 917, 0, 0, 0, 0, 1889,
	0, 0, 2674, 0, 1885, 0, 522, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 45,
	79, 49, 48, 51, 0, 0, 0, 0, 0, 0,
	2874, 2879, 0, 0, 3450, 0, 137, 0, 0, 0,
	0, 0, 0, 0, 0, 40, 0, 0, 0, 0,
	0, 55, 81, 80, 0, 0, 0, 0, 50, 64,
	1889, 0, 0, 0, 0, 82, 0, 0, 43, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2762, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 86, 0, 0,
	62, 63, 3456, 3452, 0, 0, 0, 0, 0, 0,
	3032, 0, 1886, 3459, 3453, 3454, 3455, 3457, 3458, 0,
	0, 0, 0, 71, 3449, 72, 0, 0, 0, 3728,
	0, 0, 40, 0, 0, 136, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 64, 0, 0, 0,
	76, 3603, 82, 0, 0, 43, 0, 0, 0, 0,
	53, 0, 0, 0, 3607, 0, 1889, 0, 0, 0,
	0, 3032, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1889, 3460, 3451, 0, 59, 60,
	66, 0, 67, 0, 86, 0, 0, 0, 0, 3456,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	45, 79, 49, 48, 51, 0, 0, 0, 0, 0,
	0, 3449, 0, 0, 0, 3450, 3720, 0, 0, 0,
	0, 0, 0, 3603, 0, 0, 0, 0, 0, 0,
	0, 0, 55, 81, 80, 0, 0, 0, 0, 50,
	0, 0, 0, 137, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 40, 0, 0, 0, 523,
	0, 0, 0, 2674, 0, 0, 0, 0, 0, 64,
	0, 0, 0, 0, 0, 82, 0, 0, 43, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 62, 63, 0, 3452, 0, 0, 45, 79, 49,
	48, 51, 0, 0, 3459, 3453, 3454, 3455, 3457, 3458,
	0, 0, 3450, 0, 71, 0, 72, 86, 0, 0,
	0, 0, 3456, 0, 0, 0, 0, 0, 0, 55,
	81, 80, 0, 0, 0, 0, 50, 0, 0, 0,
	0, 76, 2763, 0, 3449, 0, 0, 0, 0, 3705,
	0, 53, 52, 54, 0, 0, 0, 0, 78, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3460, 3451, 2763, 59,
	60, 66, 0, 67, 0, 0, 0, 0, 62, 63,
	0, 3452, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3459, 3453, 3454, 3455, 3457, 3458, 0, 0, 0,
	0, 71, 0, 72, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	45, 79, 49, 48, 51, 0, 0, 0, 76, 0,
	0, 0, 0, 0, 0, 3450, 0, 0, 53, 136,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 55, 81, 80, 0, 0, 0, 0, 50,
	0, 0, 0, 3460, 3451, 0, 59, 60, 66, 0,
	67, 0, 0, 0, 0, 0, 0, 0, 0, 523,
	0, 523, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 62, 63, 0, 3452, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3459, 3453, 3454, 3455, 3457, 3458,
	0, 0, 0, 0, 71, 0, 72, 0, 0, 0,
	0, 0, 0, 52, 54, 0, 0, 0, 0, 78,
	0, 0, 0, 0, 0, 0, 0, 137, 0, 0,
	0, 76, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 53, 0, 0, 0, 0, 0, 2763, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3460, 3451, 0, 59,
	60, 66, 0, 67, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 136, 0, 0, 0, 0, 0, 0,
	52, 54, 0, 0, 0, 0, 78, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2763, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2674, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 137, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 52, 54, 0, 0, 0, 0, 78,
	0, 0, 0, 0, 2763, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 877, 0, 377,
	639, 881, 724, 747, 890, 753, 755, 818, 700, 795,
	304, 744, 701, 0, 0, 692, 548, 693, 725, 221,
	547, 851, 796, 879, 781, 811, 821, 220, 208, 788,
	787, 868, 736, 735, 816, 864, 878, 0, 0, 647,
	267, 0, 0, 401, 359, 287, 0, 0, 779, 0,
	632, 633, 764, 820, 712, 807, 883, 745, 812, 884,
	86, 0, 1209, 0, 523, 464, 571, 570, 573, 574,
	575, 576, 0, 0, 147, 572, 577, 578, 579, 0,
	774, 817, 895, 691, 545, 562, 696, 646, 0, 869,
	732, 733, 225, 0, 0, 0, 523, 0, 0, 0,
	777, 794, 836, 761, 396, 823, 832, 846, 754, 322,
	240, 523, 0, 0, 0, 559, 560, 1968, 0, 0,
	0, 662, 0, 561, 0, 706, 557, 590, 591, 592,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 611, 612,
	613, 614, 615, 616, 617, 618, 619, 620, 621, 622,
	623, 624, 625, 626, 627, 628, 629, 630, 631, 563,
	0, 0, 0, 711, 689, 730, 838, 690, 688, 288,
	703, 635, 867, 762, 256, 164, 873, 760, 660, 826,
	707, 855, 748, 264, 705, 165, 702, 708, 746, 299,
	835, 841, 644, 168, 266, 852, 726, 739, 209, 0,
	334, 813, 395, 551, 236, 799, 333, 268, 388, 827,
	875, 394, 749, 371, 402, 406, 232, 782, 200, 356,
	223, 218, 731, 845, 695, 241, 321, 213, 260, 765,
	819, 727, 205, 830, 806, 857, 355, 385, 170, 284,
	386, 405, 188, 378, 285, 292, 202, 204, 203, 182,
	349, 384, 194, 207, 853, 840, 859, 722, 709, 714,
	710, 738, 876, 250, 242, 860, 858, 740, 308, 191,
	792, 785, 778, 399, 154, 344, 343, 752, 249, 843,
	155, 146, 329, 156, 257, 173, 863, 408, 187, 262,
	379, 550, 235, 298, 211, 815, 309, 737, 167, 325,
	280, 282, 279, 283, 239, 150, 157, 839, 327, 346,
	383, 189, 362, 148, 149, 151, 159, 337, 160, 161,
	882, 274, 227, 231, 243, 254, 814, 332, 363, 400,
	808, 184, 336, 364, 375, 365, 368, 366, 367, 176,
	370, 393, 195, 345, 348, 407, 837, 183, 178, 871,
	854, 801, 767, 773, 697, 0, 177, 833, 729, 741,
	721, 809, 720, 238, 825, 391, 392, 210, 409, 638,
	886, 179, 704, 885, 295, 303, 294, 888, 387, 872,
	802, 791, 789, 698, 870, 800, 790, 263, 230, 245,
	319, 270, 320, 246, 290, 289, 291, 272, 793, 0,
	174, 0, 360, 880, 897, 369, 192, 715, 847, 382,
	153, 326, 193, 237, 228, 318, 293, 185, 248, 358,
	261, 269, 829, 894, 307, 335, 199, 397, 357, 224,
	649, 300, 661, 655, 657, 656, 653, 654, 652, 651,
	650, 663, 636, 637, 640, 641, 642, 784, 874, 699,
	645, 850, 658, 659, 822, 892, 634, 206, 583, 675,
	676, 677, 584, 678, 679, 585, 586, 680, 681, 682,
	683, 587, 684, 685, 686, 664, 665, 666, 667, 668,
	669, 670, 671, 674, 672, 673, 0, 780, 315, 175,
	186, 198, 217, 215, 229, 258, 281, 286, 313, 347,
	352, 372, 373, 374, 376, 219, 0, 222, 197, 330,
	196, 271, 251, 314, 380, 381, 323, 212, 643, 169,
	180, 265, 893, 328, 234, 687, 694, 713, 716, 717,
	718, 719, 723, 728, 734, 742, 743, 751, 756, 757,
	758, 759, 766, 768, 769, 770, 771, 772, 775, 776,
	786, 797, 798, 804, 805, 0, 828, 831, 648, 842,
	844, 848, 849, 856, 861, 862, 887, 891, 896, 398,
	216, 783, 803, 834, 181, 190, 201, 214, 226, 233,
	244, 247, 252, 253, 255, 259, 273, 275, 276, 277,
	278, 296, 297, 301, 302, 305, 306, 310, 311, 312,
	316, 317, 324, 158, 331, 338, 339, 340, 341, 342,
	350, 351, 353, 354, 361, 389, 390, 403, 404, 866,
	763, 166, 0, 0, 172, 0, 0, 0, 0, 0,
	750, 171, 865, 889, 810, 824, 877, 0, 377, 639,
	881, 724, 747, 890, 753, 755, 818, 700, 795, 304,
	744, 701, 0, 0, 692, 548, 693, 725, 221, 547,
	851, 796, 879, 781, 811, 821, 220, 208, 788, 787,
	868, 736, 735, 816, 864, 878, 0, 0, 647, 267,
	0, 0, 401, 359, 287, 0, 0, 779, 0, 632,
	633, 764, 820, 712, 807, 883, 745, 812, 884, 86,
	0, 0, 0, 0, 464, 571, 570, 573, 574, 575,
	576, 0, 0, 147, 572, 577, 578, 579, 0, 774,
	817, 895, 691, 545, 562, 696, 646, 0, 869, 732,
	733, 225, 0, 0, 0, 0, 0, 0, 0, 777,
	794, 836, 761, 396, 823, 832, 846, 754, 322, 240,
	0, 0, 0, 0, 559, 560, 541, 0, 0, 0,
	662, 0, 561, 0, 706, 557, 590, 591, 592, 593,
	594, 595, 596, 597, 598, 599, 600, 601, 602, 603,
	604, 605, 606, 607, 608, 609, 610, 611, 612, 613,
	614, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 626, 627, 628, 629, 630, 631, 563, 0,
	0, 0, 711, 689, 730, 838, 690, 688, 288, 703,
	635, 867, 762, 256, 164, 873, 760, 660, 826, 707,
	855, 748, 264, 705, 165, 702, 708, 746, 299, 835,
	841, 644, 168, 266, 852, 726, 739, 209, 0, 334,
	813, 395, 551, 236, 799, 333, 268, 388, 827, 875,
	394, 749, 371, 402, 406, 232, 782, 200, 356, 223,
	218, 731, 845, 695, 241, 321, 213, 260, 765, 819,
	727, 205, 830, 806, 857, 355, 385, 170, 284, 386,
	405, 188, 378, 285, 292, 202, 204, 203, 182, 349,
	384, 194, 207, 853, 840, 859, 722, 709, 714, 710,
	738, 876, 250, 242, 860, 858, 740, 308, 191, 792,
	785, 778, 399, 154, 344, 343, 752, 249, 843, 155,
	146, 329, 156, 257, 173, 863, 408, 187, 262, 379,
	550, 235, 298, 211, 815, 309, 737, 167, 325, 280,
	282, 279, 283, 239, 150, 157, 839, 327, 346, 383,
	189, 362, 148, 149, 151, 159, 337, 160, 161, 882,
	274, 227, 231, 243, 254, 814, 332, 363, 400, 808,
	184, 336, 364, 375, 365, 368, 366, 367, 176, 370,
	393, 195, 345, 348, 407, 837, 183, 178, 871, 854,
	801, 767, 773, 697, 0, 177, 833, 729, 741, 721,
	809, 720, 238, 825, 391, 392, 210, 409, 638, 886,
	179, 704, 885, 295, 303, 294, 888, 387, 872, 802,
	791, 789, 698, 870, 800, 790, 263, 230, 245, 319,
	270, 320, 246, 290, 289, 291, 272, 793, 0, 174,
	0, 360, 880, 897, 369, 192, 715, 847, 382, 153,
	326, 193, 237, 228, 318, 293, 185, 248, 358, 261,
	269, 829, 894, 307, 335, 199, 397, 357, 224, 649,
	300, 661, 655, 657, 656, 653, 654, 652, 651, 650,
	663, 636, 637, 640, 641, 642, 784, 874, 699, 645,
	850, 658, 659, 822, 892, 634, 206, 583, 675, 676,
	677, 584, 678, 679, 585, 586, 680, 681, 682, 683,
	587, 684, 685, 686, 664, 665, 666, 667, 668, 669,
	670, 671, 674, 672, 673, 0, 780, 315, 175, 186,
	198, 217, 215, 229, 258, 281, 286, 313, 347, 352,
	372, 373, 374, 376, 219, 0, 222, 197, 330, 196,
	271, 251, 314, 380, 381, 323, 212, 643, 169, 180,
	265, 893, 328, 234, 687, 694, 713, 716, 717, 718,
	719, 723, 728, 734, 742, 743, 751, 756, 757, 758,
	759, 766, 768, 769, 770, 771, 772, 775, 776, 786,
	797, 798, 804, 805, 0, 828, 831, 648, 842, 844,
	848, 849, 856, 861, 862, 887, 891, 896, 398, 216,
	783, 803, 834, 181, 190, 201, 214, 226, 233, 244,
	247, 252, 253, 255, 259, 273, 275, 276, 277, 278,
	296, 297, 301, 302, 305, 306, 310, 311, 312, 316,
	317, 324, 158, 331, 338, 339, 340, 341, 342, 350,
	351, 353, 354, 361, 389, 390, 403, 404, 866, 763,
	166, 0, 0, 172, 0, 0, 0, 0, 0, 750,
	171, 865, 889, 810, 824, 877, 0, 377, 639, 881,
	724, 747, 890, 753, 755, 818, 700, 795, 304, 744,
	701, 0, 0, 692, 548, 693, 725, 221, 547, 851,
	796, 879, 781, 811, 821, 220, 208, 788, 787, 868,
	736, 735, 816, 864, 878, 0, 0, 647, 267, 0,
	0, 401, 359, 287, 0, 0, 779, 0, 632, 633,
	764, 820, 712, 807, 883, 745, 812, 884, 86, 0,
	1209, 0, 0, 464, 571, 570, 573, 574, 575, 576,
	0, 0, 147, 572, 577, 578, 579, 0, 774, 817,
	895, 691, 545, 562, 696, 646, 0, 869, 732, 733,
	225, 0, 0, 0, 0, 0, 0, 0, 777, 794,
	836, 761, 396, 823, 832, 846, 754, 322, 240, 0,
	0, 0, 0, 559, 560, 0, 0, 0, 0, 662,
	0, 561, 0, 706, 557, 590, 591, 592, 593, 594,
	595, 596, 597, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 620, 621, 622, 623, 624,
	625, 626, 627, 628, 629, 630, 631, 563, 0, 0,
	0, 711, 689, 730, 838, 690, 688, 288, 703, 635,
	867, 762, 256, 164, 873, 760, 660, 826, 707, 855,
	748, 264, 705, 165, 702, 708, 746, 299, 835, 841,
	644, 168, 266, 852, 726, 739, 209, 0, 334, 813,
	395, 551, 236, 799, 333, 268, 388, 827, 875, 394,
	749, 371, 402, 406, 232, 782, 200, 356, 223, 218,
	731, 845, 695, 241, 321, 213, 260, 765, 819, 727,
	205, 830, 806, 857, 355, 385, 170, 284, 386, 405,
	188, 378, 285, 292, 202, 204, 203, 182, 349, 384,
	194, 207, 853, 840, 859, 722, 709, 714, 710, 738,
	876, 250, 242, 860, 858, 740, 308, 191, 792, 785,
	778, 399, 154, 344, 343, 752, 249, 843, 155, 146,
	329, 156, 257, 173, 863, 408, 187, 262, 379, 550,
	235, 298, 211, 815, 309, 737, 167, 325, 280, 282,
	279, 283, 239, 150, 157, 839, 327, 346, 383, 189,
	362, 148, 149, 151, 159, 337, 160, 161, 882, 274,
	227, 231, 243, 254, 814, 332, 363, 400, 808, 184,
	336, 364, 375, 365, 368, 366, 367, 176, 370, 393,
	195, 345, 348, 407, 837, 183, 178, 871, 854, 801,
	767, 773, 697, 0, 177, 833, 729, 741, 721, 809,
	720, 238, 825, 391, 392, 210, 409, 638, 886, 179,
	704, 885, 295, 303, 294, 888, 387, 872, 802, 791,
	789, 698, 870, 800, 790, 263, 230, 245, 319, 270,
	320, 246, 290, 289, 291, 272, 793, 0, 174, 0,
	360, 880, 897, 369, 192, 715, 847, 382, 153, 326,
	193, 237, 228, 318, 293, 185, 248, 358, 261, 269,
	829, 894, 307, 335, 199, 397, 357, 224, 649, 300,
	661, 655, 657, 656, 653, 654, 652, 651, 650, 663,
	636, 637, 640, 641, 642, 784, 874, 699, 645, 850,
	658, 659, 822, 892, 634, 206, 583, 675, 676, 677,
	584, 678, 679, 585, 586, 680, 681, 682, 683, 587,
	684, 685, 686, 664, 665, 666, 667, 668, 669, 670,
	671, 674, 672, 673, 0, 780, 315, 175, 186, 198,
	217, 215, 229, 258, 281, 286, 313, 347, 352, 372,
	373, 374, 376, 219, 0, 222, 197, 330, 196, 271,
	251, 314, 380, 381, 323, 212, 643, 169, 180, 265,
	893, 328, 234, 687, 694, 713, 716, 717, 718, 719,
	723, 728, 734, 742, 743, 751, 756, 757, 758, 759,
	766, 768, 769, 770, 771, 772, 775, 776, 786, 797,
	798, 804, 805, 0, 828, 831, 648, 842, 844, 848,
	849, 856, 861, 862, 887, 891, 896, 398, 216, 783,
	803, 834, 181, 190, 201, 214, 226, 233, 244, 247,
	252, 253, 255, 259, 273, 275, 276, 277, 278, 296,
	297, 301, 302, 305, 306, 310, 311, 312, 316, 317,
	324, 158, 331, 338, 339, 340, 341, 342, 350, 351,
	353, 354, 361, 389, 390, 403, 404, 866, 763, 166,
	0, 0, 172, 0, 0, 0, 0, 0, 750, 171,
	865, 889, 810, 824, 877, 0, 377, 639, 881, 724,
	747, 890, 753, 755, 818, 700, 795, 304, 744, 701,
	0, 0, 692, 548, 693, 725, 221, 547, 851, 796,
	879, 781, 811, 821, 220, 208, 788, 787, 868, 736,
	735, 816, 864, 878, 0, 0, 647, 267, 0, 0,
	401, 359, 287, 0, 0, 779, 0, 632, 633, 764,
	820, 712, 807, 883, 745, 812, 884, 86, 0, 0,
	0, 0, 464, 571, 570, 573, 574, 575, 576, 0,
	0, 147, 572, 577, 578, 579, 0, 774, 817, 895,
	691, 545, 562, 696, 646, 0, 869, 732, 733, 225,
	0, 0, 0, 0, 0, 0, 0, 777, 794, 836,
	761, 396, 823, 832, 846, 754, 322, 240, 0, 0,
	0, 0, 559, 560, 1968, 0, 0, 0, 662, 0,
	561, 0, 706, 557, 590, 591, 592, 593, 594, 595,
	596, 597, 598, 599, 600, 601, 602, 603, 604, 605,
	606, 607, 608, 609, 610, 611, 612, 613, 614, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	626, 627, 628, 629, 630, 631, 563, 0, 0, 0,
	711, 689, 730, 838, 690, 688, 288, 703, 635, 867,
	762, 256, 164, 873, 760, 660, 826, 707, 855, 748,
	264, 705, 165, 702, 708, 746, 299, 835, 841, 644,
	168, 266, 852, 726, 739, 209, 0, 334, 813, 395,
	551, 236, 799, 333, 268, 388, 827, 875, 394, 749,
	371, 402, 406, 232, 782, 200, 356, 223, 218, 731,
	845, 695, 241, 321, 213, 260, 765, 819, 727, 205,
	830, 806, 857, 355, 385, 170, 284, 386, 405, 188,
	378, 285, 292, 202, 204, 203, 182, 349, 384, 194,
	207, 853, 840, 859, 722, 709, 714, 710, 738, 876,
	250, 242, 860, 858, 740, 308, 191, 792, 785, 778,
	399, 154, 344, 343, 752, 249, 843, 155, 146, 329,
	156, 257, 173, 863, 408, 187, 262, 379, 550, 235,
	298, 211, 815, 309, 737, 167, 325, 280, 282, 279,
	283, 239, 150, 157, 839, 327, 346, 383, 189, 362,
	148, 149, 151, 159, 337, 160, 161, 882, 274, 227,
	231, 243, 254, 814, 332, 363, 400, 808, 184, 336,
	364, 375, 365, 368, 366, 367, 176, 370, 393, 195,
	345, 348, 407, 837, 183, 178, 871, 854, 801, 767,
	773, 697, 0, 177, 833, 729, 741, 721, 809, 720,
	238, 825, 391, 392, 210, 409, 638, 886, 179, 704,
	885, 295, 303, 294, 888, 387, 872, 802, 791, 789,
	698, 870, 800, 790, 263, 230, 245, 319, 270, 320,
	246, 290, 289, 291, 272, 793, 0, 174, 0, 360,
	880, 897, 369, 192, 715, 847, 382, 153, 326, 193,
	237, 228, 318, 293, 185, 248, 358, 261, 269, 829,
	894, 307, 335, 199, 397, 357, 224, 649, 300, 661,
	655, 657, 656, 653, 654, 652, 651, 650, 663, 636,
	637, 640, 641, 642, 784, 874, 699, 645, 850, 658,
	659, 822, 892, 634, 206, 583, 675, 676, 677, 584,
	678, 679, 585, 586, 680, 681, 682, 683, 587, 684,
	685, 686, 664, 665, 666, 667, 668, 669, 670, 671,
	674, 672, 673, 0, 780, 315, 175, 186, 198, 217,
	215, 229, 258, 281, 286, 313, 347, 352, 372, 373,
	374, 376, 219, 0, 222, 197, 330, 196, 271, 251,
	314, 380, 381, 323, 212, 643, 169, 180, 265, 893,
	328, 234, 687, 694, 713, 716, 717, 718, 719, 723,
	728, 734, 742, 743, 751, 756, 757, 758, 759, 766,
	768, 769, 770, 771, 772, 775, 776, 786, 797, 798,
	804, 805, 0, 828, 831, 648, 842, 844, 848, 849,
	856, 861, 862, 887, 891, 896, 398, 216, 783, 803,
	834, 181, 190, 201, 214, 226, 233, 244, 247, 252,
	253, 255, 259, 273, 275, 276, 277, 278, 296, 297,
	301, 302, 305, 306, 310, 311, 312, 316, 317, 324,
	158, 331, 338, 339, 340, 341, 342, 350, 351, 353,
	354, 361, 389, 390, 403, 404, 866, 763, 166, 0,
	0, 172, 0, 0, 0, 0, 0, 750, 171, 865,
	889, 810, 824, 877, 0, 377, 639, 881, 724, 747,
	890, 753, 755, 818, 700, 795, 304, 744, 701, 0,
	0, 692, 548, 693, 725, 221, 547, 851, 796, 879,
	781, 811, 821, 220, 208, 788, 787, 868, 736, 735,
	816, 864, 878, 0, 0, 647, 267, 0, 0, 401,
	359, 287, 0, 0, 779, 0, 632, 633, 764, 820,
	712, 807, 883, 745, 2082, 884, 86, 0, 0, 0,
	0, 464, 571, 570, 573, 574, 575, 576, 0, 0,
	147, 572, 577, 578, 579, 2083, 774, 817, 895, 691,
	545, 562, 696, 646, 0, 869, 732, 733, 225, 0,
	0, 0, 0, 0, 0, 0, 777, 794, 836, 761,
	396, 823, 832, 846, 754, 322, 240, 0, 0, 0,
	0, 559, 560, 0, 0, 0, 0, 662, 0, 561,
	0, 706, 557, 590, 591, 592, 593, 594, 595, 596,
	597, 598, 599, 600, 601, 602, 603, 604, 605, 606,
	607, 608, 609, 610, 611, 612, 613, 614, 615, 616,
	617, 618, 619, 620, 621, 622, 623, 624, 625, 626,
	627, 628, 629, 630, 631, 563, 0, 0, 0, 711,
	689, 730, 838, 690, 688, 288, 703, 635, 867, 762,
	256, 164, 873, 760, 660, 826, 707, 855, 748, 264,
	705, 165, 702, 708, 746, 299, 835, 841, 644, 168,
	266, 852, 726, 739, 209, 0, 334, 813, 395, 551,
	236, 799, 333, 268, 388, 827, 875, 394, 749, 371,
	402, 406, 232, 782, 200, 356, 223, 218, 731, 845,
	695, 241, 321, 213, 260, 765, 819, 727, 205, 830,
	806, 857, 355, 385, 170, 284, 386, 405, 188, 378,
	285, 292, 202, 204, 203, 182, 349, 384, 194, 207,
	853, 840, 859, 722, 709, 714, 710, 738, 876, 250,
	242, 860, 858, 740, 308, 191, 792, 785, 778, 399,
	154, 344, 343, 752, 249, 843, 155, 146, 329, 156,
	257, 173, 863, 408, 187, 262, 379, 550, 235, 298,
	211, 815, 309, 737, 167, 325, 280, 282, 279, 283,
	239, 150, 157, 839, 327, 346, 383, 189, 362, 148,
	149, 151, 159, 337, 160, 161, 882, 274, 227, 231,
	243, 254, 814, 332, 363, 400, 808, 184, 336, 364,
	375, 365, 368, 366, 367, 176, 370, 393, 195, 345,
	348, 407, 837, 183, 178, 871, 854, 801, 767, 773,
	697, 0, 177, 833, 729, 741, 721, 809, 720, 238,
	825, 391, 392, 210, 409, 638, 886, 179, 704, 885,
	295, 303, 294, 888, 387, 872, 802, 791, 789, 698,
	870, 800, 790, 263, 230, 245, 319, 270, 320, 246,
	290, 289, 291, 272, 793, 0, 174, 0, 360, 880,
	897, 369, 192, 715, 847, 382, 153, 326, 193, 237,
	228, 318, 293, 185, 248, 358, 261, 269, 829, 894,
	307, 335, 199, 397, 357, 224, 649, 300, 661, 655,
	657, 656, 653, 654, 652, 651, 650, 663, 636, 637,
	640, 641, 642, 784, 874, 699, 645, 850, 658, 659,
	822, 892, 634, 206, 583, 675, 676, 677, 584, 678,
	679, 585, 586, 680, 681, 682, 683, 587, 684, 685,
	686, 664, 665, 666, 667, 668, 669, 670, 671, 674,
	672, 673, 0, 780, 315, 175, 186, 198, 217, 215,
	229, 258, 281, 286, 313, 347, 352, 372, 373, 374,
	376, 219, 0, 222, 197, 330, 196, 271, 251, 314,
	380, 381, 323, 212, 643, 169, 180, 265, 893, 328,
	234, 687, 694, 713, 716, 717, 718, 719, 723, 728,
	734, 742, 743, 751, 756, 757, 758, 759, 766, 768,
	769, 770, 771, 772, 775, 776, 786, 797, 798, 804,
	805, 0, 828, 831, 648, 842, 844, 848, 849, 856,
	861, 862, 887, 891, 896, 398, 216, 783, 803, 834,
	181, 190, 201, 214, 226, 233, 244, 247, 252, 253,
	255, 259, 273, 275, 276, 277, 278, 296, 297, 301,
	302, 305, 306, 310, 311, 312, 316, 317, 324, 158,
	331, 338, 339, 340, 341, 342, 350, 351, 353, 354,
	361, 389, 390, 403, 404, 866, 763, 166, 0, 0,
	172, 0, 0, 0, 0, 0, 750, 171, 865, 889,
	810, 824, 877, 0, 377, 639, 881, 724, 747, 890,
	753, 755, 818, 700, 795, 304, 744, 701, 0, 0,
	692, 937, 693, 725, 221, 935, 851, 796, 879, 781,
	811, 821, 220, 208, 788, 787, 868, 736, 735, 816,
	864, 878, 0, 0, 647, 267, 0, 0, 401, 359,
	287, 0, 0, 779, 0, 632, 633, 764, 820, 712,
	807, 883, 745, 812, 884, 86, 0, 1209, 0, 0,
	464, 571, 570, 573, 574, 575, 576, 0, 0, 147,
	572, 577, 578, 579, 0, 774, 817, 895, 691, 954,
	562, 696, 646, 0, 869, 732, 733, 225, 0, 0,
	0, 0, 0, 0, 0, 777, 794, 836, 761, 396,
	823, 832, 846, 754, 322, 240, 0, 0, 0, 0,
	559, 560, 0, 0, 0, 0, 662, 0, 561, 0,
	706, 557, 590, 591, 592, 593, 594, 595, 596, 597,
	598, 599, 600, 601, 602, 603, 604, 605, 606, 607,
	608, 609, 610, 611, 612, 613, 614, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 626, 627,
	628, 629, 630, 631, 563, 0, 0, 0, 711, 689,
	730, 838, 690, 688, 288, 703, 635, 867, 762, 256,
	164, 873, 760, 660, 826, 707, 855, 748, 264, 705,
	165, 702, 708, 746, 299, 835, 841, 644, 168, 266,
	852, 726, 739, 209, 0, 334, 813, 395, 551, 236,
	799, 333, 268, 388, 827, 875, 394, 749, 371, 402,
	406, 232, 782, 200, 356, 223, 218, 731, 845, 695,
	241, 321, 213, 260, 765, 819, 727, 205, 830, 806,
	857, 355, 385, 170, 284, 386, 405, 188, 378, 285,
	292, 202, 204, 203, 182, 349, 384, 194, 207, 853,
	840, 859, 722, 709, 714, 710, 738, 876, 250, 242,
	860, 858, 740, 308, 191, 792, 785, 778, 399, 154,
	344, 343, 752, 249, 843, 155, 146, 329, 156, 257,
	173, 863, 408, 187, 262, 379, 550, 235, 298, 211,
	815, 309, 737, 167, 325, 280, 282, 279, 283, 239,
	150, 157, 839, 327, 346, 383, 189, 362, 148, 149,
	151, 159, 337, 160, 161, 882, 274, 227, 231, 243,
	254, 814, 332, 363, 400, 808, 184, 336, 364, 375,
	365, 368, 366, 367, 176, 370, 393, 195, 345, 348,
	407, 837, 183, 178, 871, 854, 801, 767, 773, 697,
	0, 177, 833, 729, 741, 721, 809, 720, 238, 825,
	391, 392, 210, 409, 638, 886, 179, 704, 885, 295,
	303, 294, 888, 387, 872, 802, 791, 789, 698, 870,
	800, 790, 263, 230, 245, 319, 270, 320, 246, 290,
	289, 291, 272, 793, 0, 174, 0, 360, 880, 897,
	369, 192, 715, 847, 382, 153, 326, 193, 237, 228,
	318, 293, 185, 248, 358, 261, 269, 829, 894, 307,
	335, 199, 397, 357, 224, 649, 300, 661, 655, 657,
	656, 653, 654, 652, 651, 650, 663, 636, 637, 640,
	641, 642, 784, 874, 699, 645, 850, 658, 659, 822,
	892, 634, 206, 583, 675, 676, 677, 584, 678, 679,
	585, 586, 680, 681, 682, 683, 587, 684, 685, 686,
	664, 665, 666, 667, 668, 669, 670, 671, 674, 672,
	673, 0, 780, 315, 175, 186, 198, 217, 215, 229,
	258, 281, 286, 313, 347, 352, 372, 373, 374, 376,
	219, 0, 222, 197, 330, 196, 271, 251, 314, 380,
	381, 323, 212, 643, 169, 180, 265, 893, 328, 234,
	687, 694, 713, 716, 717, 718, 719, 723, 728, 734,
	742, 743, 751, 756, 757, 758, 759, 766, 768, 769,
	770, 771, 772, 775, 776, 786, 797, 798, 804, 805,
	0, 828, 831, 648, 842, 844, 848, 849, 856, 861,
	862, 887, 891, 896, 398, 216, 783, 803, 834, 181,
	190, 201, 214, 226, 233, 244, 247, 252, 253, 255,
	259, 273, 275, 276, 277, 278, 296, 297, 301, 302,
	305, 306, 310, 311, 312, 316, 317, 324, 158, 331,
	338, 339, 340, 341, 342, 350, 351, 353, 354, 361,
	389, 390, 403, 404, 866, 763, 166, 0, 0, 172,
	0, 0, 0, 0, 0, 750, 171, 865, 889, 810,
	824, 877, 0, 377, 639, 881, 724, 747, 890, 753,
	755, 818, 700, 795, 304, 744, 701, 0, 0, 692,
	548, 693, 725, 221, 547, 851, 796, 879, 781, 811,
	821, 220, 208, 788, 787, 868, 736, 735, 816, 864,
	878, 0, 0, 647, 267, 0, 0, 401, 359, 287,
	0, 0, 779, 0, 632, 633, 764, 820, 712, 807,
	883, 745, 812, 884, 86, 0, 0, 0, 0, 464,
	571, 2002, 573, 574, 575, 576, 0, 0, 147, 572,
	577, 578, 579, 0, 774, 817, 895, 691, 545, 562,
	696, 646, 0, 869, 732, 733, 225, 0, 0, 0,
	0, 0, 0, 0, 777, 794, 836, 761, 396, 823,
	832, 846, 754, 322, 240, 0, 0, 0, 0, 559,
	560, 1968, 0, 0, 0, 662, 0, 561, 0, 706,
	557, 590, 591, 592, 593, 594, 595, 596, 597, 598,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 611, 612, 613, 614, 615, 616, 617, 618,
	619, 620, 621, 622, 623, 624, 625, 626, 627, 628,
	629, 630, 631, 563, 0, 0, 0, 711, 689, 730,
	838, 690, 688, 288, 703, 635, 867, 762, 256, 164,
	873, 760, 660, 826, 707, 855, 748, 264, 705, 165,
	702, 708, 746, 299, 835, 841, 644, 168, 266, 852,
	726, 739, 209, 0, 334, 813, 395, 551, 236, 799,
	333, 268, 388, 827, 875, 394, 749, 371, 402, 406,
	232, 782, 200, 356, 223, 218, 731, 845, 695, 241,
	321, 213, 260, 765, 819, 727, 205, 830, 806, 857,
	355, 385, 170, 284, 386, 405, 188, 378, 285, 292,
	202, 204, 203, 182, 349, 384, 194, 207, 853, 840,
	859, 722, 709, 714, 710, 738, 876, 250, 242, 860,
	858, 740, 308, 191, 792, 785, 778, 399, 154, 344,
	343, 752, 249, 843, 155, 146, 329, 156, 257, 173,
	863, 408, 187, 262, 379, 550, 235, 298, 211, 815,
	309, 737, 167, 325, 280, 282, 279, 283, 239, 150,
	157, 839, 327, 346, 383, 189, 362, 148, 149, 151,
	159, 337, 160, 161, 882, 274, 227, 231, 243, 254,
	814, 332, 363, 400, 808, 184, 336, 364, 375, 365,
	368, 366, 367, 176, 370, 393, 195, 345, 348, 407,
	837, 183, 178, 871, 854, 801, 767, 773, 697, 0,
	177, 833, 729, 741, 721, 809, 720, 238, 825, 391,
	392, 210, 409, 638, 886, 179, 704, 885, 295, 303,
	294, 888, 387, 872, 802, 791, 789, 698, 870, 800,
	790, 263, 230, 245, 319, 270, 320, 246, 290, 289,
	291, 272, 793, 0, 174, 0, 360, 880, 897, 369,
	192, 715, 847, 382, 153, 326, 193, 237, 228, 318,
	293, 185, 248, 358, 261, 269, 829, 894, 307, 335,
	199, 397, 357, 224, 649, 300, 661, 655, 657, 656,
	653, 654, 652, 651, 650, 663, 636, 637, 640, 641,
	642, 784, 874, 699, 645, 850, 658, 659, 822, 892,
	634, 206, 583, 675, 676, 677, 584, 678, 679, 585,
	586, 680, 681, 682, 683, 587, 684, 685, 686, 664,
	665, 666, 667, 668, 669, 670, 671, 674, 672, 673,
	0, 780, 315, 175, 186, 198, 217, 215, 229, 258,
	281, 286, 313, 347, 352, 372, 373, 374, 376, 219,
	0, 222, 197, 330, 196, 271, 251, 314, 380, 381,
	323, 212, 643, 169, 180, 265, 893, 328, 234, 687,
	694, 713, 716, 717, 718, 719, 723, 728, 734, 742,
	743, 751, 756, 757, 758, 759, 766, 768, 769, 770,
	771, 772, 775, 776, 786, 797, 798, 804, 805, 0,
	828, 831, 648, 842, 844, 848, 849, 856, 861, 862,
	887, 891, 896, 398, 216, 783, 803, 834, 181, 190,
	201, 214, 226, 233, 244, 247, 252, 253, 255, 259,
	273, 275, 276, 277, 278, 296, 297, 301, 302, 305,
	306, 310, 311, 312, 316, 317, 324, 158, 331, 338,
	339, 340, 341, 342, 350, 351, 353, 354, 361, 389,
	390, 403, 404, 866, 763, 166, 0, 0, 172, 0,
	0, 0, 0, 0, 750, 171, 865, 889, 810, 824,
	877, 0, 377, 639, 881, 724, 747, 890, 753, 755,
	818, 700, 795, 304, 744, 701, 0, 0, 692, 548,
	693, 725, 221, 547, 851, 796, 879, 781, 811, 821,
	220, 208, 788, 787, 868, 736, 735, 816, 864, 878,
	0, 0, 647, 267, 0, 0, 401, 359, 287, 0,
	0, 779, 0, 632, 633, 764, 820, 712, 807, 883,
	745, 812, 884, 86, 0, 0, 0, 0, 464, 571,
	1999, 573, 574, 575, 576, 0, 0, 147, 572, 577,
	578, 579, 0, 774, 817, 895, 691, 545, 562, 696,
	646, 0, 869, 732, 733, 225, 0, 0, 0, 0,
	0, 0, 0, 777, 794, 836, 761, 396, 823, 832,
	846, 754, 322, 240, 0, 0, 0, 0, 559, 560,
	1968, 0, 0, 0, 662, 0, 561, 0, 706, 557,
	590, 591, 592, 593, 594, 595, 596, 597, 598, 599,
	600, 601, 602, 603, 604, 605, 606, 607, 608, 609,
	610, 611, 612, 613, 614, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 626, 627, 628, 629,
	630, 631, 563, 0, 0, 0, 711, 689, 730, 838,
	690, 688, 288, 703, 635, 867, 762, 256, 164, 873,
	760, 660, 826, 707, 855, 748, 264, 705, 165, 702,
	708, 746, 299, 835, 841, 644, 168, 266, 852, 726,
	739, 209, 0, 334, 813, 395, 551, 236, 799, 333,
	268, 388, 827, 875, 394, 749, 371, 402, 406, 232,
	782, 200, 356, 223, 218, 731, 845, 695, 241, 321,
	213, 260, 765, 819, 727, 205, 830, 806, 857, 355,
	385, 170, 284, 386, 405, 188, 378, 285, 292, 202,
	204, 203, 182, 349, 384, 194, 207, 853, 840, 859,
	722, 709, 714, 710, 738, 876, 250, 242, 860, 858,
	740, 308, 191, 792, 785, 778, 399, 154, 344, 343,
	752, 249, 843, 155, 146, 329, 156, 257, 173, 863,
	408, 187, 262, 379, 550, 235, 298, 211, 815, 309,
	737, 167, 325, 280, 282, 279, 283, 239, 150, 157,
	839, 327, 346, 383, 189, 362, 148, 149, 151, 159,
	337, 160, 161, 882, 274, 227, 231, 243, 254, 814,
	332, 363, 400, 808, 184, 336, 364, 375, 365, 368,
	366, 367, 176, 370, 393, 195, 345, 348, 407, 837,
	183, 178, 871, 854, 801, 767, 773, 697, 0, 177,
	833, 729, 741, 721, 809, 720, 238, 825, 391, 392,
	210, 409, 638, 886, 179, 704, 885, 295, 303, 294,
	888, 387, 872, 802, 791, 789, 698, 870, 800, 790,
	263, 230, 245, 319, 270, 320, 246, 290, 289, 291,
	272, 793, 0, 174, 0, 360, 880, 897, 369, 192,
	715, 847, 382, 153, 326, 193, 237, 228, 318, 293,
	185, 248, 358, 261, 269, 829, 894, 307, 335, 199,
	397, 357, 224, 649, 300, 661, 655, 657, 656, 653,
	654, 652, 651, 650, 663, 636, 637, 640, 641, 642,
	784, 874, 699, 645, 850, 658, 659, 822, 892, 634,
	206, 583, 675, 676, 677, 584, 678, 679, 585, 586,
	680, 681, 682, 683, 587, 684, 685, 686, 664, 665,
	666, 667, 668, 669, 670, 671, 674, 672, 673, 0,
	780, 315, 175, 186, 198, 217, 215, 229, 258, 281,
	286, 313, 347, 352, 372, 373, 374, 376, 219, 0,
	222, 197, 330, 196, 271, 251, 314, 380, 381, 323,
	212, 643, 169, 180, 265, 893, 328, 234, 687, 694,
	713, 716, 717, 718, 719, 723, 728, 734, 742, 743,
	751, 756, 757, 758, 759, 766, 768, 769, 770, 771,
	772, 775, 776, 786, 797, 798, 804, 805, 0, 828,
	831, 648, 842, 844, 848, 849, 856, 861, 862, 887,
	891, 896, 398, 216, 783, 803, 834, 181, 190, 201,
	214, 226, 233, 244, 247, 252, 253, 255, 259, 273,
	275, 276, 277, 278, 296, 297, 301, 302, 305, 306,
	310, 311, 312, 316, 317, 324, 158, 331, 338, 339,
	340, 341, 342, 350, 351, 353, 354, 361, 389, 390,
	403, 404, 866, 763, 166, 0, 0, 172, 0, 0,
	0, 0, 0, 750, 171, 865, 889, 810, 824, 877,
	40, 377, 639, 881, 724, 747, 890, 753, 755, 818,
	700, 795, 304, 744, 701, 0, 0, 692, 548, 693,
	725, 221, 547, 851, 796, 879, 781, 811, 821, 220,
	208, 788, 787, 868, 736, 735, 816, 864, 878, 0,
	0, 647, 267, 0, 0, 401, 359, 287, 0, 0,
	779, 0, 632, 633, 764, 820, 712, 807, 883, 745,
	812, 884, 86, 0, 0, 0, 0, 464, 571, 570,
	573, 574, 575, 576, 0, 0, 147, 572, 577, 578,
	579, 0, 774, 817, 895, 691, 545, 562, 696, 646,
	0, 869, 732, 733, 225, 0, 0, 0, 0, 0,
	0, 0, 777, 794, 836, 761, 396, 823, 832, 846,
	754, 322, 240, 0, 0, 0, 0, 559, 560, 0,
	0, 0, 0, 662, 0, 561, 0, 706, 557, 590,
	591, 592, 593, 594, 595, 596, 597, 598, 599, 600,
	601, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	611, 612, 613, 614, 615, 616, 617, 618, 619, 620,
	621, 622, 623, 624, 625, 626, 627, 628, 629, 630,
	631, 563, 0, 0, 0, 711, 689, 730, 838, 690,
	688, 288, 703, 635, 867, 762, 256, 164, 873, 760,
	660, 826, 707, 855, 748, 264, 705, 165, 702, 708,
	746, 299, 835, 841, 644, 168, 266, 852, 726, 739,
	209, 0, 334, 813, 395, 551, 236, 799, 333, 268,
	388, 827, 875, 394, 749, 371, 402, 406, 232, 782,
	200, 356, 223, 218, 731, 845, 695, 241, 321, 213,
	260, 765, 819, 727, 205, 830, 806, 857, 355, 385,
	170, 284, 386, 405, 188, 378, 285, 292, 202, 204,
	203, 182, 349, 384, 194, 207, 853, 840, 859, 722,
	709, 714, 710, 738, 876, 250, 242, 860, 858, 740,
	308, 191, 792, 785, 778, 399, 154, 344, 343, 752,
	249, 843, 155, 146, 329, 156, 257, 173, 863, 408,
	187, 262, 379, 550, 235, 298, 211, 815, 309, 737,
	167, 325, 280, 282, 279, 283, 239, 150, 157, 839,
	327, 346, 383, 189, 362, 148, 149, 151, 159, 337,
	160, 161, 882, 274, 227, 231, 243, 254, 814, 332,
	363, 400, 808, 184, 336, 364, 375, 365, 368, 366,
	367, 176, 370, 393, 195, 345, 348, 407, 837, 183,
	178, 871, 854, 801, 767, 773, 697, 0, 177, 833,
	729, 741, 721, 809, 720, 238, 825, 391, 392, 210,
	409, 638, 886, 179, 704, 885, 295, 303, 294, 888,
	387, 872, 802, 791, 789, 698, 870, 800, 790, 263,
	230, 245, 319, 270, 320, 246, 290, 289, 291, 272,
	793, 0, 174, 0, 360, 880, 897, 369, 192, 715,
	847, 382, 153, 326, 193, 237, 228, 318, 293, 185,
	248, 358, 261, 269, 829, 894, 307, 335, 199, 397,
	357, 224, 649, 300, 661, 655, 657, 656, 653, 654,
	652, 651, 650, 663, 636, 637, 640, 641, 642, 784,
	874, 699, 645, 850, 658, 659, 822, 892, 634, 206,
	583, 675, 676, 677, 584, 678, 679, 585, 586, 680,
	681, 682, 683, 587, 684, 685, 686, 664, 665, 666,
	667, 668, 669, 670, 671, 674, 672, 673, 0, 780,
	315, 175, 186, 198, 217, 215, 229, 258, 281, 286,
	313, 347, 352, 372, 373, 374, 376, 219, 0, 222,
	197, 330, 196, 271, 251, 314, 380, 381, 323, 212,
	643, 169, 180, 265, 1296, 328, 234, 687, 694, 713,
	716, 717, 718, 719, 723, 728, 734, 742, 743, 751,
	756, 757, 758, 759, 766, 768, 769, 770, 771, 772,
	775, 776, 786, 797, 798, 804, 805, 0, 828, 831,
	648, 842, 844, 848, 849, 856, 861, 862, 887, 891,
	896, 398, 216, 783, 803, 834, 181, 190, 201, 214,
	226, 233, 244, 247, 252, 253, 255, 259, 273, 275,
	276, 277, 278, 296, 297, 301, 302, 305, 306, 310,
	311, 312, 316, 317, 324, 158, 331, 338, 339, 340,
	341, 342, 350, 351, 353, 354, 361, 389, 390, 403,
	404, 866, 763, 166, 0, 0, 172, 0, 0, 0,
	0, 0, 750, 171, 865, 889, 810, 824, 877, 0,
	377, 639, 881, 724, 747, 890, 753, 755, 818, 700,
	795, 304, 744, 701, 0, 0, 692, 548, 693, 725,
	221, 547, 851, 796, 879, 781, 811, 821, 220, 208,
	788, 787, 868, 736, 735, 816, 864, 878, 0, 0,
	647, 267, 0, 0, 401, 359, 287, 0, 0, 779,
	0, 632, 633, 764, 820, 712, 807, 883, 745, 812,
	884, 86, 0, 1827, 0, 0, 464, 571, 570, 573,
	574, 575, 576, 0, 0, 147, 572, 577, 578, 579,
	0, 774, 817, 895, 691, 545, 562, 696, 646, 0,
	869, 732, 733, 225, 0, 0, 0, 0, 0, 0,
	0, 777, 794, 836, 761, 396, 823, 832, 846, 754,
	322, 240, 0, 0, 0, 0, 559, 560, 0, 0,
	0, 0, 662, 0, 561, 0, 706, 557, 590, 591,
	592, 593, 594, 595, 596, 597, 598, 599, 600, 601,
	602, 603, 604, 605, 606, 607, 608, 609, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 626, 627, 628, 629, 630, 631,
	563, 0, 0, 0, 711, 689, 730, 838, 690, 688,
	288, 703, 635, 867, 762, 256, 164, 873, 760, 660,
	826, 707, 855, 748, 264, 705, 165, 702, 708, 746,
	299, 835, 841, 644, 168, 266, 852, 726, 739, 209,
	0, 334, 813, 395, 551, 236, 799, 333, 268, 388,
	827, 875, 394, 749, 371, 402, 406, 232, 782, 200,
	356, 223, 218, 731, 845, 695, 241, 321, 213, 260,
	765, 819, 727, 205, 830, 806, 857, 355, 385, 170,
	284, 386, 405, 188, 378, 285, 292, 202, 204, 203,
	182, 349, 384, 194, 207, 853, 840, 859, 722, 709,
	714, 710, 738, 876, 250, 242, 860, 858, 740, 308,
	191, 792, 785, 778, 399, 154, 344, 343, 752, 249,
	843, 155, 146, 329, 156, 257, 173, 863, 408, 187,
	262, 379, 550, 235, 298, 211, 815, 309, 737, 167,
	325, 280, 282, 279, 283, 239, 150, 157, 839, 327,
	346, 383, 189, 362, 148, 149, 151, 159, 337, 160,
	161, 882, 274, 227, 231, 243, 254, 814, 332, 363,
	400, 808, 184, 336, 364, 375, 365, 368, 366, 367,
	176, 370, 393, 195, 345, 348, 407, 837, 183, 178,
	871, 854, 801, 767, 773, 697, 0, 177, 833, 729,
	741, 721, 809, 720, 238, 825, 391, 392, 210, 409,
	638, 886, 179, 704, 885, 295, 303, 294, 888, 387,
	872, 802, 791, 789, 698, 870, 800, 790, 263, 230,
	245, 319, 270, 320, 246, 290, 289, 291, 272, 793,
	0, 174, 0, 360, 880, 897, 369, 192, 715, 847,
	382, 153, 326, 193, 237, 228, 318, 293, 185, 248,
	358, 261, 269, 829, 894, 307, 335, 199, 397, 357,
	224, 649, 300, 661, 655, 657, 656, 653, 654, 652,
	651, 650, 663, 636, 637, 640, 641, 642, 784, 874,
	699, 645, 850, 658, 659, 822, 892, 634, 206, 583,
	675, 676, 677, 584, 678, 679, 585, 586, 680, 681,
	682, 683, 587, 684, 685, 686, 664, 665, 666, 667,
	668, 669, 670, 671, 674, 672, 673, 0, 780, 315,
	175, 186, 198, 217, 215, 229, 258, 281, 286, 313,
	347, 352, 372, 373, 374, 376, 219, 0, 222, 197,
	330, 196, 271, 251, 314, 380, 381, 323, 212, 643,
	169, 180, 265, 893, 328, 234, 687, 694, 713, 716,
	717, 718, 719, 723, 728, 734, 742, 743, 751, 756,
	757, 758, 759, 766, 768, 769, 770, 771, 772, 775,
	776, 786, 797, 798, 804, 805, 0, 828, 831, 648,
	842, 844, 848, 849, 856, 861, 862, 887, 891, 896,
	398, 216, 783, 803, 834, 181, 190, 201, 214, 226,
	233, 244, 247, 252, 253, 255, 259, 273, 275, 276,
	277, 278, 296, 297, 301, 302, 305, 306, 310, 311,
	312, 316, 317, 324, 158, 331, 338, 339, 340, 341,
	342, 350, 351, 353, 354, 361, 389, 390, 403, 404,
	866, 763, 166, 0, 0, 172, 0, 0, 0, 0,
	0, 750, 171, 865, 889, 810, 824, 877, 0, 377,
	639, 881, 724, 747, 890, 753, 755, 818, 700, 795,
	304, 744, 701, 0, 0, 692, 937, 693, 725, 221,
	935, 851, 796, 879, 781, 811, 821, 220, 208, 788,
	787, 868, 736, 735, 816, 864, 878, 0, 0, 647,
	267, 0, 0, 401, 359, 287, 0, 0, 779, 0,
	632, 633, 764, 820, 712, 807, 883, 745, 812, 884,
	86, 0, 0, 0, 0, 464, 571, 570, 573, 574,
	575, 576, 0, 0, 147, 572, 577, 578, 579, 0,
	774, 817, 895, 691, 954, 562, 696, 646, 0, 869,
	732, 733, 225, 0, 0, 0, 0, 0, 0, 0,
	777, 794, 836, 761, 396, 823, 832, 846, 754, 322,
	240, 0, 0, 0, 0, 559, 560, 0, 0, 0,
	0, 662, 0, 561, 0, 706, 557, 590, 591, 592,
	593, 594, 595, 596, 597, 598, 599, 600, 601, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 611, 612,
	613, 614, 615, 616, 617, 618, 619, 620, 621, 622,
	623, 624, 625, 626, 627, 628, 629, 630, 631, 563,
	0, 0, 0, 711, 689, 730, 838, 690, 688, 288,
	703, 635, 867, 762, 256, 164, 873, 760, 660, 826,
	707, 855, 748, 264, 705, 165, 702, 708, 746, 299,
	835, 841, 644, 168, 266, 852, 726, 739, 209, 0,
	334, 813, 395, 551, 236, 799, 333, 268, 388, 827,
	875, 394, 749, 371, 402, 406, 232, 782, 200, 356,
	223, 218, 731, 845, 695, 241, 321, 213, 260, 765,
	819, 727, 205, 830, 806, 857, 355, 385, 170, 284,
	386, 405, 188, 378, 285, 292, 202, 204, 203, 182,
	349, 384, 194, 207, 853, 840, 859, 722, 709, 714,
	710, 738, 876, 250, 242, 860, 858, 740, 308, 191,
	792, 785, 778, 399, 154, 344, 343, 752, 249, 843,
	155, 146, 329, 156, 257, 173, 863, 408, 187, 262,
	379, 550, 235, 298, 211, 815, 309, 737, 167, 325,
	280, 282, 279, 283, 239, 150, 157, 839, 327, 346,
	383, 189, 362, 148, 149, 151, 159, 337, 160, 161,
	882, 274, 227, 231, 243, 254, 814, 332, 363, 400,
	808, 184, 336, 364, 375, 365, 368, 366, 367, 176,
	370, 393, 195, 345, 348, 407, 837, 183, 178, 871,
	854, 801, 767, 773, 697, 0, 177, 833, 729, 741,
	721, 809, 720, 238, 825, 391, 392, 210, 409, 638,
	886, 179, 704, 885, 295, 303, 294, 888, 387, 872,
	802, 791, 789, 698, 870, 800, 790, 263, 230, 245,
	319, 270, 320, 246, 290, 289, 291, 272, 793, 0,
	174, 0, 360, 880, 897, 369, 192, 715, 847, 382,
	153, 326, 193, 237, 228, 318, 293, 185, 248, 358,
	261, 269, 829, 894, 307, 335, 199, 397, 357, 224,
	649, 300, 661, 655, 657, 656, 653, 654, 652, 651,
	650, 663, 636, 637, 640, 641, 642, 784, 874, 699,
	645, 850, 658, 659, 822, 892, 634, 206, 583, 675,
	676, 677, 584, 678, 679, 585, 586, 680, 681, 682,
	683, 587, 684, 685, 686, 664, 665, 666, 667, 668,
	669, 670, 671, 674, 672, 673, 0, 780, 315, 175,
	186, 198, 217, 215, 229, 258, 281, 286, 313, 347,
	352, 372, 373, 374, 376, 219, 0, 222, 197, 330,
	196, 271, 251, 314, 380, 381, 323, 212, 643, 169,
	180, 265, 893, 328, 234, 687, 694, 713, 716, 717,
	718, 719, 723, 728, 734, 742, 743, 751, 756, 757,
	758, 759, 766, 768, 769, 770, 771, 772, 775, 776,
	786, 797, 798, 804, 805, 0, 828, 831, 648, 842,
	844, 848, 849, 856, 861, 862, 887, 891, 896, 398,
	216, 783, 803, 834, 181, 190, 201, 214, 226, 233,
	244, 247, 252, 253, 255, 259, 273, 275, 276, 277,
	278, 296, 297, 301, 302, 305, 306, 310, 311, 312,
	316, 317, 324, 158, 331, 338, 339, 340, 341, 342,
	350, 351, 353, 354, 361, 389, 390, 403, 404, 866,
	763, 166, 0, 0, 172, 0, 0, 0, 0, 0,
	750, 171, 865, 889, 810, 824, 877, 0, 377, 639,
	881, 724, 747, 890, 753, 755, 818, 700, 795, 304,
	744, 701, 0, 0, 692, 548, 693, 725, 221, 547,
	851, 796, 879, 781, 811, 821, 220, 208, 788, 787,
	868, 736, 735, 816, 864, 878, 0, 0, 647, 267,
	0, 0, 401, 359, 287, 0, 0, 779, 0, 632,
	633, 764, 820, 712, 807, 883, 745, 812, 884, 86,
	0, 0, 0, 0, 464, 571, 570, 573, 574, 575,
	576, 0, 0, 147, 572, 577, 578, 579, 0, 774,
	817, 895, 691, 545, 562, 696, 646, 0, 869, 732,
	733, 225, 0, 0, 0, 0, 0, 0, 0, 777,
	794, 836, 761, 396, 823, 832, 846, 754, 322, 240,
	0, 0, 0, 0, 559, 560, 0, 0, 0, 0,
	662, 0, 561, 0, 706, 557, 590, 591, 592, 593,
	594, 595, 596, 597, 598, 599, 600, 601, 602, 603,
	604, 605, 606, 607, 608, 609, 610, 611, 612, 613,
	614, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 626, 627, 628, 629, 630, 631, 563, 0,
	0, 0, 711, 689, 730, 838, 690, 688, 288, 703,
	635, 867, 762, 256, 164, 873, 760, 660, 826, 707,
	855, 748, 264, 705, 165, 702, 708, 746, 299, 835,
	841, 644, 168, 266, 852, 726, 739, 209, 0, 334,
	813, 395, 551, 236, 799, 333, 268, 388, 827, 875,
	394, 749, 371, 402, 406, 232, 782, 200, 356, 223,
	218, 731, 845, 695, 241, 321, 213, 260, 765, 819,
	727, 205, 830, 806, 857, 355, 385, 170, 284, 386,
	405, 188, 378, 285, 292, 202, 204, 203, 182, 349,
	384, 194, 207, 853, 840, 859, 722, 709, 714, 710,
	738, 876, 250, 242, 860, 858, 740, 308, 191, 792,
	785, 778, 399, 154, 344, 343, 752, 249, 843, 155,
	146, 329, 156, 257, 173, 863, 408, 187, 262, 379,
	550, 235, 298, 211, 815, 309, 737, 167, 325, 280,
	282, 279, 283, 239, 150, 157, 839, 327, 346, 383,
	189, 362, 148, 149, 151, 159, 337, 160, 161, 882,
	274, 227, 231, 243, 254, 814, 332, 363, 400, 808,
	184, 336, 364, 375, 365, 368, 366, 367, 176, 370,
	393, 195, 345, 348, 407, 837, 183, 178, 871, 854,
	801, 767, 773, 697, 0, 177, 833, 729, 741, 721,
	809, 720, 238, 825, 391, 392, 210, 409, 638, 886,
	179, 704, 885, 295, 303, 294, 888, 387, 872, 802,
	791, 789, 698, 870, 800, 790, 263, 230, 245, 319,
	270, 320, 246, 290, 289, 291, 272, 793, 0, 174,
	0, 360, 880, 897, 369, 192, 715, 847, 382, 153,
	326, 193, 237, 228, 318, 293, 185, 248, 358, 261,
	269, 829, 894, 307, 335, 199, 397, 357, 224, 649,
	300, 661, 655, 657, 656, 653, 654, 652, 651, 650,
	663, 636, 637, 640, 641, 642, 784, 874, 699, 645,
	850, 658, 659, 822, 892, 634, 206, 583, 675, 676,
	677, 584, 678, 679, 585, 586, 680, 681, 682, 683,
	587, 684, 685, 686, 664, 665, 666, 667, 668, 669,
	670, 671, 674, 672, 673, 0, 780, 315, 175, 186,
	198, 217, 215, 229, 258, 281, 286, 313, 347, 352,
	372, 373, 374, 376, 219, 0, 222, 197, 330, 196,
	271, 251, 314, 380, 381, 323, 212, 643, 169, 180,
	265, 893, 328, 234, 687, 694, 713, 716, 717, 718,
	719, 723, 728, 734, 742, 743, 751, 756, 757, 758,
	759, 766, 768, 769, 770, 771, 772, 775, 776, 786,
	797, 798, 804, 805, 0, 828, 831, 648, 842, 844,
	848, 849, 856, 861, 862, 887, 891, 896, 398, 216,
	783, 803, 834, 181, 190, 201, 214, 226, 233, 244,
	247, 252, 253, 255, 259, 273, 275, 276, 277, 278,
	296, 297, 301, 302, 305, 306, 310, 311, 312, 316,
	317, 324, 158, 331, 338, 339, 340, 341, 342, 350,
	351, 353, 354, 361, 389, 390, 403, 404, 866, 763,
	166, 0, 0, 172, 0, 0, 0, 0, 0, 750,
	171, 865, 889, 810, 824, 877, 0, 377, 639, 881,
	724, 747, 890, 753, 755, 818, 700, 795, 304, 744,
	701, 0, 0, 692, 937, 693, 725, 221, 935, 851,
	796, 879, 781, 811, 821, 220, 208, 788, 787, 868,
	736, 735, 816, 864, 878, 0, 0, 647, 267, 0,
	0, 401, 359, 287, 0, 0, 779, 0, 632, 633,
	764, 820, 712, 807, 883, 745, 812, 884, 86, 0,
	0, 0, 0, 464, 571, 570, 573, 574, 575, 576,
	0, 0, 147, 572, 577, 578, 579, 0, 774, 817,
	895, 691, 954, 562, 696, 646, 0, 869, 732, 733,
	225, 0, 0, 0, 0, 0, 0, 0, 777, 794,
	836, 761, 396, 823, 832, 846, 754, 322, 240, 0,
	0, 0, 0, 559, 560, 0, 0, 0, 0, 662,
	0, 561, 0, 706, 557, 590, 591, 592, 593, 594,
	595, 596, 597, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 620, 621, 622, 623, 624,
	625, 626, 627, 628, 629, 630, 631, 563, 0, 0,
	0, 711, 689, 730, 838, 690, 688, 288, 703, 635,
	867, 762, 256, 164, 873, 760, 660, 826, 707, 855,
	748, 264, 705, 165, 702, 708, 746, 299, 835, 841,
	644, 168, 266, 852, 726, 739, 209, 0, 334, 813,
	395, 551, 236, 3708, 333, 268, 388, 827, 875, 394,
	749, 371, 402, 406, 232, 782, 200, 356, 223, 218,
	731, 845, 695, 241, 321, 213, 260, 765, 819, 727,
	205, 830, 806, 857, 355, 385, 170, 284, 386, 405,
	188, 378, 285, 292, 202, 204, 203, 182, 349, 384,
	194, 207, 853, 840, 859, 722, 709, 714, 710, 738,
	876, 250, 242, 860, 858, 740, 308, 191, 792, 785,
	778, 399, 154, 344, 343, 752, 249, 843, 155, 146,
	329, 156, 257, 173, 863, 408, 187, 262, 379, 550,
	235, 298, 211, 815, 309, 737, 167, 325, 280, 282,
	279, 283, 239, 150, 157, 839, 327, 346, 383, 189,
	362, 148, 149, 151, 159, 337, 160, 161, 882, 274,
	227, 231, 243, 254, 814, 332, 363, 400, 808, 184,
	336, 364, 375, 365, 368, 366, 367, 176, 370, 393,
	195, 345, 348, 407, 837, 183, 178, 871, 854, 801,
	767, 773, 697, 0, 177, 833, 729, 741, 721, 809,
	720, 238, 825, 391, 392, 210, 409, 638, 886, 179,
	704, 885, 295, 303, 294, 888, 387, 872, 802, 791,
	789, 698, 870, 800, 790, 263, 230, 245, 319, 270,
	320, 246, 290, 289, 291, 272, 793, 0, 174, 0,
	360, 880, 897, 369, 192, 715, 847, 382, 153, 326,
	193, 237, 228, 318, 293, 185, 248, 358, 261, 269,
	829, 894, 307, 335, 199, 397, 357, 224, 649, 300,
	661, 655, 657, 656, 653, 654, 652, 651, 650, 663,
	636, 637, 640, 641, 642, 784, 874, 699, 645, 850,
	658, 659, 822, 892, 634, 206, 583, 675, 676, 677,
	584, 678, 679, 585, 586, 680, 681, 682, 683, 587,
	684, 685, 686, 664, 665, 666, 667, 668, 669, 670,
	671, 674, 672, 673, 0, 780, 315, 175, 186, 198,
	217, 215, 229, 258, 281, 286, 313, 347, 352, 372,
	373, 374, 376, 219, 0, 222, 197, 330, 196, 271,
	251, 314, 380, 381, 323, 212, 643, 169, 180, 265,
	893, 328, 234, 687, 694, 713, 716, 717, 718, 719,
	723, 728, 734, 742, 743, 751, 756, 757, 758, 759,
	766, 768, 769, 770, 771, 772, 775, 776, 786, 797,
	798, 804, 805, 0, 828, 831, 648, 842, 844, 848,
	849, 856, 861, 862, 887, 891, 896, 398, 216, 783,
	803, 834, 181, 190, 201, 214, 226, 233, 244, 247,
	252, 253, 255, 259, 273, 275, 276, 277, 278, 296,
	297, 301, 302, 305, 306, 310, 311, 312, 316, 317,
	324, 158, 331, 338, 339, 340, 341, 342, 350, 351,
	353, 354, 361, 389, 390, 403, 404, 866, 763, 166,
	0, 0, 172, 0, 0, 0, 0, 0, 750, 171,
	865, 889, 810, 824, 877, 0, 377, 639, 881, 724,
	747, 890, 753, 755, 818, 700, 795, 304, 744, 701,
	0, 0, 692, 937, 693, 725, 221, 935, 851, 796,
	879, 781, 811, 821, 220, 208, 788, 787, 868, 736,
	735, 816, 864, 878, 0, 0, 647, 267, 0, 0,
	401, 359, 287, 0, 0, 779, 0, 632, 633, 764,
	820, 712, 807, 883, 745, 812, 884, 86, 0, 0,
	0, 0, 464, 571, 570, 573, 574, 575, 576, 0,
	0, 147, 572, 577, 578, 579, 0, 774, 817, 895,
	691, 954, 562, 696, 646, 0, 869, 732, 733, 225,
	0, 0, 0, 0, 0, 0, 0, 777, 794, 836,
	761, 396, 823, 832, 846, 754, 322, 240, 0, 0,
	0, 0, 559, 560, 0, 0, 0, 0, 662, 0,
	561, 0, 706, 557, 590, 591, 592, 593, 594, 595,
	596, 597, 598, 599, 600, 601, 602, 603, 604, 605,
	606, 607, 608, 609, 610, 611, 612, 613, 614, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	626, 627, 628, 629, 630, 631, 563, 0, 0, 0,
	711, 689, 730, 838, 690, 688, 288, 703, 635, 867,
	762, 256, 164, 873, 760, 660, 826, 707, 855, 748,
	264, 705, 165, 702, 708, 746, 299, 835, 841, 644,
	168, 266, 852, 726, 739, 209, 0, 334, 813, 395,
	551, 236, 799, 333, 268, 388, 827, 875, 394, 749,
	371, 402, 406, 232, 782, 200, 356, 223, 218, 731,
	845, 695, 241, 321, 213, 260, 765, 819, 727, 205,
	830, 806, 857, 355, 385, 170, 284, 386, 405, 188,
	378, 285, 292, 202, 204, 203, 182, 349, 384, 194,
	207, 853, 840, 859, 722, 709, 714, 710, 738, 876,
	250, 242, 860, 858, 740, 308, 191, 792, 785, 778,
	399, 154, 344, 343, 752, 249, 843, 155, 146, 329,
	156, 257, 173, 863, 408, 187, 262, 379, 550, 235,
	298, 211, 815, 309, 737, 167, 325, 280, 282, 279,
	283, 239, 150, 157, 839, 327, 346, 383, 189, 362,
	148, 149, 151, 159, 337, 160, 161, 882, 274, 227,
	231, 243, 254, 814, 332, 363, 400, 808, 184, 336,
	364, 375, 365, 368, 366, 367, 176, 370, 393, 195,
	345, 348, 407, 837, 183, 178, 871, 854, 801, 767,
	773, 697, 0, 177, 833, 729, 741, 721, 809, 720,
	238, 825, 391, 392, 210, 409, 638, 886, 179, 704,
	885, 295, 303, 294, 888, 387, 872, 802, 791, 789,
	698, 870, 800, 790, 263, 230, 245, 319, 270, 320,
	246, 290, 289, 291, 272, 793, 0, 174, 0, 360,
	880, 897, 369, 192, 715, 847, 382, 153, 326, 193,
	237, 228, 318, 293, 185, 248, 358, 261, 269, 829,
	894, 307, 335, 199, 397, 357, 224, 649, 300, 661,
	655, 657, 656, 653, 654, 652, 651, 650, 663, 636,
	637, 640, 641, 642, 2005, 2006, 2007, 645, 850, 658,
	659, 822, 892, 634, 206, 583, 675, 676, 677, 584,
	678, 679, 585, 586, 680, 681, 682, 683, 587, 684,
	685, 686, 664, 665, 666, 667, 668, 669, 670, 671,
	674, 672, 673, 0, 780, 315, 175, 186, 198, 217,
	215, 229, 258, 281, 286, 313, 347, 352, 372, 373,
	374, 376, 219, 0, 222, 197, 330, 196, 271, 251,
	314, 380, 381, 323, 212, 643, 169, 180, 265, 893,
	328, 234, 687, 694, 713, 716, 717, 718, 719, 723,
	728, 734, 742, 743, 751, 756, 757, 758, 759, 766,
	768, 769, 770, 771, 772, 775, 776, 786, 797, 798,
	804, 805, 0, 828, 831, 648, 842, 844, 848, 849,
	856, 861, 862, 887, 891, 896, 398, 216, 783, 803,
	834, 181, 190, 201, 214, 226, 233, 244, 247, 252,
	253, 255, 259, 273, 275, 276, 277, 278, 296, 297,
	301, 302, 305, 306, 310, 311, 312, 316, 317, 324,
	158, 331, 338, 339, 340, 341, 342, 350, 351, 353,
	354, 361, 389, 390, 403, 404, 866, 763, 166, 0,
	0, 172, 0, 0, 0, 0, 0, 750, 171, 865,
	889, 810, 824, 1745, 2942, 377, 1600, 1749, 1549, 1579,
	1766, 1585, 1588, 1669, 1515, 1638, 304, 1576, 1516, 1499,
	1554, 1503, 1567, 1504, 1551, 221, 1547, 1710, 1641, 1747,
	1620, 1662, 1672, 220, 208, 1630, 1629, 1735, 1565, 1564,
	1667, 1724, 1746, 1619, 0, 1756, 267, 1721, 997, 401,
	359, 287, 1000, 999, 1615, 1730, 1636, 1699, 1598, 1671,
	1531, 1654, 1751, 1577, 1663, 1752, 86, 0, 1209, 0,
	0, 993, 0, 0, 0, 0, 0, 0, 0, 0,
	147, 0, 1659, 1743, 1570, 998, 1610, 1668, 1771, 1502,
	1655, 0, 1507, 1518, 1765, 1736, 1561, 1562, 225, 0,
	0, 0, 0, 0, 0, 0, 1613, 1637, 1689, 1595,
	396, 1674, 1684, 1702, 1587, 322, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 1556, 0, 1652, 0, 0,
	0, 1523, 1509, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1609, 0, 0, 0, 1530,
	1500, 1558, 1691, 1501, 1498, 288, 1519, 1704, 1734, 1596,
	256, 164, 1740, 1594, 1593, 1678, 1524, 1714, 1580, 264,
	1522, 165, 1517, 1525, 1578, 299, 1688, 1696, 152, 168,
	266, 1711, 1552, 1569, 209, 1888, 334, 1664, 395, 996,
	236, 1645, 333, 268, 388, 1679, 1742, 394, 1581, 371,
	402, 406, 232, 1621, 200, 356, 223, 218, 1560, 1701,
	1506, 241, 321, 213, 260, 1599, 1670, 1553, 205, 1682,
	1653, 1716, 355, 385, 170, 284, 386, 405, 188, 378,
	285, 292, 202, 204, 203, 182, 349, 384, 194, 207,
	1712, 1695, 1718, 1546, 1526, 1537, 1527, 1568, 1744, 250,
	242, 1719, 1717, 1571, 308, 191, 1634, 1627, 1614, 399,
	154, 344, 343, 1584, 249, 1698, 155, 146, 329, 156,
	257, 173, 1723, 408, 187, 262, 379, 995, 235, 298,
	211, 1666, 309, 1566, 167, 325, 280, 282, 279, 283,
	239, 150, 157, 1694, 327, 346, 383, 189, 362, 148,
	149, 151, 159, 337, 160, 161, 1750, 274, 227, 231,
	243, 254, 1665, 332, 363, 400, 1656, 184, 336, 364,
	375, 365, 368, 366, 367, 176, 370, 393, 195, 345,
	348, 407, 1690, 183, 178, 1738, 1713, 1647, 1602, 1608,
	1508, 0, 177, 1686, 1557, 1573, 1545, 1660, 1544, 238,
	1677, 391, 392, 210, 409, 1520, 1758, 179, 1521, 1757,
	295, 303, 294, 1761, 387, 1739, 1648, 1633, 1631, 1513,
	1737, 1646, 1632, 263, 230, 245, 319, 270, 320, 246,
	290, 289, 291, 272, 1635, 0, 174, 0, 360, 1748,
	1773, 369, 192, 1539, 1705, 382, 153, 326, 193, 237,
	228, 318, 293, 185, 248, 358, 261, 269, 1681, 1770,
	307, 335, 199, 397, 357, 224, 1535, 300, 1538, 1533,
	1536, 1534, 1639, 1640, 1753, 1754, 1755, 1693, 1528, 0,
	1731, 1732, 0, 1626, 1741, 1514, 0, 1709, 162, 163,
	1673, 1768, 1586, 206, 141, 1510, 1511, 1512, 142, 1616,
	1617, 143, 144, 1727, 1726, 1725, 1728, 145, 1762, 1760,
	1763, 1529, 1550, 1572, 1622, 1623, 1625, 1657, 1658, 1703,
	1676, 1685, 1559, 1618, 315, 175, 186, 198, 217, 215,
	229, 258, 281, 286, 313, 347, 352, 372, 373, 374,
	376, 219, 0, 222, 197, 330, 196, 271, 251, 314,
	380, 381, 323, 212, 1644, 169, 180, 265, 2943, 328,
	234, 1497, 1505, 1532, 1540, 1541, 1542, 1543, 1548, 1555,
	1563, 1574, 1575, 1583, 1589, 1590, 1591, 1592, 1601, 1603,
	1604, 1605, 1606, 1607, 1611, 1612, 1628, 1642, 1643, 1650,
	1651, 0, 1680, 1683, 1692, 1697, 1700, 1706, 1708, 1715,
	1720, 1722, 1759, 1767, 1772, 398, 216, 1624, 1649, 1687,
	181, 190, 201, 214, 226, 233, 244, 247, 252, 253,
	255, 259, 273, 275, 276, 277, 278, 296, 297, 301,
	302, 305, 306, 310, 311, 312, 316, 317, 324, 158,
	331, 338, 339, 340, 341, 342, 350, 351, 353, 354,
	361, 389, 390, 403, 404, 1733, 1597, 166, 0, 0,
	172, 0, 0, 0, 0, 0, 1582, 171, 1729, 1764,
	1661, 1675, 1745, 1707, 377, 1600, 1749, 1549, 1579, 1766,
	1585, 1588, 1669, 1515, 1638, 304, 1576, 1516, 1499, 1554,
	1503, 1567, 1504, 1551, 221, 1547, 1710, 1641, 1747, 1620,
	1662, 1672, 220, 208, 1630, 1629, 1735, 1565, 1564, 1667,
	1724, 1746, 1619, 0, 1756, 267, 1721, 997, 401, 359,
	287, 1000, 999, 1615, 1730, 1636, 1699, 1598, 1671, 1531,
	1654, 1751, 1577, 1663, 1752, 0, 0, 0, 0, 0,
	993, 0, 0, 0, 0, 0, 0, 0, 0, 147,
	0, 1659, 1743, 1570, 998, 1610, 1668, 1771, 1502, 1655,
	0, 1507, 1518, 1765, 1736, 1561, 1562, 225, 0, 0,
	0, 0, 0, 0, 0, 1613, 1637, 1689, 1595, 396,
	1674, 1684, 1702, 1587, 322, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 1556, 0, 1652, 0, 0, 0,
	1523, 1509, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1609, 0, 0, 0, 1530, 1500,
	1558, 1691, 1501, 1498, 288, 1519, 1704, 1734, 1596, 256,
	164, 1740, 1594, 1593, 1678, 1524, 1714, 1580, 264, 1522,
	165, 1517, 1525, 1578, 299, 1688, 1696, 152, 168, 266,
	1711, 1552, 1569, 209, 1888, 334, 1664, 395, 996, 236,
	1645, 333, 268, 388, 1679, 1742, 394, 1581, 371, 402,
	406, 232, 1621, 200, 356, 223, 218, 1560, 1701, 1506,
	241, 321, 213, 260, 1599, 1670, 1553, 205, 1682, 1653,
	1716, 355, 385, 170, 284, 386, 405, 188, 378, 285,
	292, 202, 204, 203, 182, 349, 384, 194, 207, 1712,
	1695, 1718, 1546, 1526, 1537, 1527, 1568, 1744, 250, 242,
	1719, 1717, 1571, 308, 191, 1634, 1627, 1614, 399, 154,
	344, 343, 1584, 249, 1698, 155, 146, 329, 156, 257,
	173, 1723, 408, 187, 262, 379, 995, 235, 298, 211,
	1666, 309, 1566, 167, 325, 280, 282, 279, 283, 239,
	150, 157, 1694, 327, 346, 383, 189, 362, 148, 149,
	151, 159, 337, 160, 161, 1750, 274, 227, 231, 243,
	254, 1665, 332, 363, 400, 1656, 184, 336, 364, 375,
	365, 368, 366, 367, 176, 370, 393, 195, 345, 348,
	407, 1690, 183, 178, 1738, 1713, 1647, 1602, 1608, 1508,
	0, 177, 1686, 1557, 1573, 1545, 1660, 1544, 238, 1677,
	391, 392, 210, 409, 1520, 1758, 179, 1521, 1757, 295,
	303, 294, 1761, 387, 1739, 1648, 1633, 1631, 1513, 1737,
	1646, 1632, 263, 230, 245, 319, 270, 320, 246, 290,
	289, 291, 272, 1635, 0, 174, 0, 360, 1748, 1773,
	369, 192, 1539, 1705, 382, 153, 326, 193, 237, 228,
	318, 293, 185, 248, 358, 261, 269, 1681, 1770, 307,
	335, 199, 397, 357, 224, 1535, 300, 1538, 1533, 1536,
	1534, 1639, 1640, 1753, 1754, 1755, 1693, 1528, 0, 1731,
	1732, 0, 1626, 1741, 1514, 0, 1709, 162, 163, 1673,
	1768, 1586, 206, 141, 1510, 1511, 1512, 142, 1616, 1617,
	143, 144, 1727, 1726, 1725, 1728, 145, 1762, 1760, 1763,
	1529, 1550, 1572, 1622, 1623, 1625, 1657, 1658, 1703, 1676,
	1685, 1559, 1618, 315, 175, 186, 198, 217, 215, 229,
	258, 281, 286, 313, 347, 352, 372, 373, 374, 376,
	219, 0, 222, 197, 330, 196, 271, 251, 314, 380,
	381, 323, 212, 1644, 169, 180, 265, 1769, 328, 234,
	1497, 1505, 1532, 1540, 1541, 1542, 1543, 1548, 1555, 1563,
	1574, 1575, 1583, 1589, 1590, 1591, 1592, 1601, 1603, 1604,
	1605, 1606, 1607, 1611, 1612, 1628, 1642, 1643, 1650, 1651,
	0, 1680, 1683, 1692, 1697, 1700, 1706, 1708, 1715, 1720,
	1722, 1759, 1767, 1772, 398, 216, 1624, 1649, 1687, 181,
	190, 201, 214, 226, 233, 244, 247, 252, 253, 255,
	259, 273, 275, 276, 277, 278, 296, 297, 301, 302,
	305, 306, 310, 311, 312, 316, 317, 324, 158, 331,
	338, 339, 340, 341, 342, 350, 351, 353, 354, 361,
	389, 390, 403, 404, 1733, 1597, 166, 0, 0, 172,
	0, 0, 0, 0, 0, 1582, 171, 1729, 1764, 1661,
	1675, 1745, 1707, 377, 1600, 1749, 1549, 1579, 1766, 1585,
	1588, 1669, 1515, 1638, 304, 1576, 1516, 1499, 1554, 1503,
	1567, 1504, 1551, 221, 1547, 1710, 1641, 1747, 1620, 1662,
	1672, 220, 208, 1630, 1629, 1735, 1565, 1564, 1667, 1724,
	1746, 1619, 0, 1756, 267, 1721, 0, 401, 359, 287,
	0, 0, 1615, 1730, 1636, 1699, 1598, 1671, 1531, 1654,
	1751, 1577, 1663, 1752, 0, 0, 0, 0, 0, 464,
	0, 0, 0, 0, 0, 0, 0, 0, 147, 0,
	1659, 1743, 1570, 0, 1610, 1668, 1771, 1502, 1655, 0,
	1507, 1518, 1765, 1736, 1561, 1562, 225, 0, 0, 0,
	0, 0, 0, 0, 1613, 1637, 1689, 1595, 396, 1674,
	1684, 1702, 1587, 322, 240, 0, 0, 0, 0, 0,
	0, 2607, 0, 1556, 0, 1652, 0, 0, 0, 1523,
	1509, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1609, 0, 0, 0, 1530, 1500, 1558,
	1691, 1501, 1498, 288, 1519, 1704, 1734, 1596, 256, 164,
	1740, 1594, 1593, 1678, 1524, 1714, 1580, 264, 1522, 165,
	1517, 1525, 1578, 299, 1688, 1696, 152, 168, 266, 1711,
	1552, 1569, 209, 0, 334, 1664, 395, 1935, 236, 1645,
	333, 268, 388, 1679, 1742, 394, 1581, 371, 402, 406,
	232, 1621, 200, 356, 223, 218, 1560, 1701, 1506, 241,
	321, 213, 260, 1599, 1670, 1553, 205, 1682, 1653, 1716,
	355, 385, 170, 284, 386, 405, 188, 378, 285, 292,
	202, 204, 203, 182, 349, 384, 194, 207, 1712, 1695,
	1718, 1546, 1526, 1537, 1527, 1568, 1744, 250, 242, 1719,
	1717, 1571, 308, 191, 1634, 1627, 1614, 399, 154, 344,
	343, 1584, 249, 1698, 155, 146, 329, 156, 257, 173,
	1723, 408, 187, 262, 379, 1934, 235, 298, 211, 1666,
	309, 1566, 167, 325, 280, 282, 279, 283, 239, 150,
	157, 1694, 327, 346, 383, 189, 362, 148, 149, 151,
	159, 337, 160, 161, 1750, 274, 227, 231, 243, 254,
	1665, 332, 363, 400, 1656, 184, 336, 364, 375, 365,
	368, 366, 367, 176, 370, 393, 195, 345, 348, 407,
	1690, 183, 178, 1738, 1713, 1647, 1602, 1608, 1508, 0,
	177, 1686, 1557, 1573, 1545, 1660, 1544, 238, 1677, 391,
	392, 210, 409, 1520, 1758, 179, 1521, 1757, 295, 303,
	294, 1761, 387, 1739, 1648, 1633, 1631, 1513, 1737, 1646,
	1632, 263, 230, 245, 319, 270, 320, 246, 290, 289,
	291, 272, 1635, 0, 174, 0, 360, 1748, 1773, 369,
	192, 1539, 1705, 382, 153, 326, 193, 237, 228, 318,
	293, 185, 248, 358, 261, 269, 1681, 1770, 307, 335,
	199, 397, 357, 224, 1535, 300, 1538, 1533, 1536, 1534,
	1639, 1640, 1753, 1754, 1755, 1693, 1528, 0, 1731, 1732,
	0, 1626, 1741, 1514, 0, 1709, 162, 163, 1673, 1768,
	1586, 206, 141, 1510, 1511, 1512, 142, 1616, 1617, 143,
	144, 1727, 1726, 1725, 1728, 145, 1762, 1760, 1763, 1529,
	1550, 1572, 1622, 1623, 1625, 1657, 1658, 1703, 1676, 1685,
	1559, 1618, 315, 175, 186, 198, 217, 215, 229, 258,
	281, 286, 313, 347, 352, 372, 373, 374, 376, 219,
	0, 222, 197, 330, 196, 271, 251, 314, 380, 381,
	323, 212, 1644, 169, 180, 265, 1769, 328, 234, 1497,
	1505, 1532, 1540, 1541, 1542, 1543, 1548, 1555, 1563, 1574,
	1575, 1583, 1589, 1590, 1591, 1592, 1601, 1603, 1604, 1605,
	1606, 1607, 1611, 1612, 1628, 1642, 1643, 1650, 1651, 0,
	1680, 1683, 1692, 1697, 1700, 1706, 1708, 1715, 1720, 1722,
	1759, 1767, 1772, 398, 216, 1624, 1649, 1687, 181, 190,
	201, 214, 226, 233, 244, 247, 252, 253, 255, 259,
	273, 275, 276, 277, 278, 296, 297, 301, 302, 305,
	306, 310, 311, 312, 316, 317, 324, 158, 331, 338,
	339, 340, 341, 342, 350, 351, 353, 354, 361, 389,
	390, 403, 404, 1733, 1597, 166, 0, 0, 172, 0,
	0, 0, 0, 0, 1582, 171, 1729, 1764, 1661, 1675,
	1745, 1707, 377, 1600, 1749, 1549, 1579, 1766, 1585, 1588,
	1669, 1515, 1638, 304, 1576, 1516, 1499, 1554, 1503, 1567,
	1504, 1551, 221, 1547, 1710, 1641, 1747, 1620, 1662, 1672,
	220, 208, 1630, 1629, 1735, 1565, 1564, 1667, 1724, 1746,
	1619, 0, 1756, 267, 1721, 0, 401, 359, 287, 0,
	0, 1615, 1730, 1636, 1699, 1598, 1671, 1531, 1654, 1751,
	1577, 1663, 1752, 0, 0, 0, 0, 0, 464, 0,
	0, 0, 0, 0, 0, 0, 0, 147, 0, 1659,
	1743, 1570, 0, 1610, 1668, 1771, 1502, 1655, 0, 1507,
	1518, 1765, 1736, 1561, 1562, 225, 0, 0, 0, 0,
	0, 0, 0, 1613, 1637, 1689, 1595, 396, 1674, 1684,
	1702, 1587, 322, 240, 0, 0, 0, 0, 0, 0,
	1929, 0, 1556, 0, 1652, 0, 0, 0, 1523, 1509,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1609, 0, 0, 0, 1530, 1500, 1558, 1691,
	1501, 1498, 288, 1519, 1704, 1734, 1596, 256, 164, 1740,
	1594, 1593, 1678, 1524, 1714, 1580, 264, 1522, 165, 1517,
	1525, 1578, 299, 1688, 1696, 152, 168, 266, 1711, 1552,
	1569, 209, 0, 334, 1664, 395, 1935, 236, 1645, 333,
	268, 388, 1679, 1742, 394, 1581, 371, 402, 406, 232,
	1621, 200, 356, 223, 218, 1560, 1701, 1506, 241, 321,
	213, 260, 1599, 1670, 1553, 205, 1682, 1653, 1716, 355,
	385, 170, 284, 386, 405, 188, 378, 285, 292, 202,
	204, 203, 182, 349, 384, 194, 207, 1712, 1695, 1718,
	1546, 1526, 1537, 1527, 1568, 1744, 250, 242, 1719, 1717,
	1571, 308, 191, 1634, 1627, 1614, 399, 154, 344, 343,
	1584, 249, 1698, 155, 146, 329, 156, 257, 173, 1723,
	408, 187, 262, 379, 1934, 235, 298, 211, 1666, 309,
	1566, 167, 325, 280, 282, 279, 283, 239, 150, 157,
	1694, 327, 346, 383, 189, 362, 148, 149, 151, 159,
	337, 160, 161, 1750, 274, 227, 231, 243, 254, 1665,
	332, 363, 400, 1656, 184, 336, 364, 375, 365, 368,
	366, 367, 176, 370, 393, 195, 345, 348, 407, 1690,
	183, 178, 1738, 1713, 1647, 1602, 1608, 1508, 0, 177,
	1686, 1557, 1573, 1545, 1660, 1544, 238, 1677, 391, 392,
	210, 409, 1520, 1758, 179, 1521, 1757, 295, 303, 294,
	1761, 387, 1739, 1648, 1633, 1631, 1513, 1737, 1646, 1632,
	263, 230, 245, 319, 270, 320, 246, 290, 289, 291,
	272, 1635, 0, 174, 0, 360, 1748, 1773, 369, 192,
	1539, 1705, 382, 153, 326, 193, 237, 228, 318, 293,
	185, 248, 358, 261, 269, 1681, 1770, 307, 335, 199,
	397, 357, 224, 1535, 300, 1538, 1533, 1536, 1534, 1639,
	1640, 1753, 1754, 1755, 1693, 1528, 0, 1731, 1732, 0,
	1626, 1741, 1514, 0, 1709, 162, 163, 1673, 1768, 1586,
	206, 141, 1510, 1511, 1512, 142, 1616, 1617, 143, 144,
	1727, 1726, 1725, 1728, 145, 1762, 1760, 1763, 1529, 1550,
	1572, 1622, 1623, 1625, 1657, 1658, 1703, 1676, 1685, 1559,
	1618, 315, 175, 186, 198, 217, 215, 229, 258, 281,
	286, 313, 347, 352, 372, 373, 374, 376, 219, 0,
	222, 197, 330, 196, 271, 251, 314, 380, 381, 323,
	212, 1644, 169, 180, 265, 1769, 328, 234, 1497, 1505,
	1532, 1540, 1541, 1542, 1543, 1548, 1555, 1563, 1574, 1575,
	1583, 1589, 1590, 1591, 1592, 1601, 1603, 1604, 1605, 1606,
	1607, 1611, 1612, 1628, 1642, 1643, 1650, 1651, 0, 1680,
	1683, 1692, 1697, 1700, 1706, 1708, 1715, 1720, 1722, 1759,
	1767, 1772, 398, 216, 1624, 1649, 1687, 181, 190, 201,
	214, 226, 233, 244, 247, 252, 253, 255, 259, 273,
	275, 276, 277, 278, 296, 297, 301, 302, 305, 306,
	310, 311, 312, 316, 317, 324, 158, 331, 338, 339,
	340, 341, 342, 350, 351, 353, 354, 361, 389, 390,
	403, 404, 1733, 1597, 166, 0, 0, 172, 0, 0,
	0, 0, 0, 1582, 171, 1729, 1764, 1661, 1675, 1745,
	1707, 377, 1600, 1749, 1549, 1579, 1766, 1585, 1588, 1669,
	1515, 1638, 304, 1576, 1516, 1499, 1554, 1503, 1567, 1504,
	1551, 221, 1547, 1710, 1641, 1747, 1620, 1662, 1672, 220,
	208, 1630, 1629, 1735, 1565, 1564, 1667, 1724, 1746, 1619,
	0, 1756, 267, 1721, 0, 401, 359, 287, 0, 0,
	1615, 1730, 1636, 1699, 1598, 1671, 1531, 1654, 1751, 1577,
	1663, 1752, 0, 0, 0, 0, 0, 464, 0, 0,
	0, 0, 0, 0, 0, 0, 147, 0, 1659, 1743,
	1570, 0, 1610, 1668, 1771, 1502, 1655, 0, 1507, 1518,
	1765, 1736, 1561, 1562, 225, 0, 0, 0, 0, 0,
	0, 0, 1613, 1637, 1689, 1595, 396, 1674, 1684, 1702,
	1587, 322, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 1556, 0, 1652, 0, 0, 0, 1523, 1509, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1609, 0, 0, 0, 1530, 1500, 1558, 1691, 1501,
	1498, 288, 1519, 1704, 1734, 1596, 256, 164, 1740, 1594,
	1593, 1678, 1524, 1714, 1580, 264, 1522, 165, 1517, 1525,
	1578, 299, 1688, 1696, 152, 168, 266, 1711, 1552, 1569,
	209, 0, 334, 1664, 395, 1935, 236, 1645, 333, 268,
	388, 1679, 1742, 394, 1581, 371, 402, 406, 232, 1621,
	200, 356, 223, 218, 1560, 1701, 1506, 241, 321, 213,
	260, 1599, 1670, 1553, 205, 1682, 1653, 1716, 355, 385,
	170, 284, 386, 405, 188, 378, 285, 292, 202, 204,
	203, 182, 349, 384, 194, 207, 1712, 1695, 1718, 1546,
	1526, 1537, 1527, 1568, 1744, 250, 242, 1719, 1717, 1571,
	308, 191, 1634, 1627, 1614, 399, 154, 344, 343, 1584,
	249, 1698, 155, 146, 329, 156, 257, 173, 1723, 408,
	187, 262, 379, 1934, 235, 298, 211, 1666, 309, 1566,
	167, 325, 280, 282, 279, 283, 239, 150, 157, 1694,
	327, 346, 383, 189, 362, 148, 149, 151, 159, 337,
	160, 161, 1750, 274, 227, 231, 243, 254, 1665, 332,
	363, 400, 1656, 184, 336, 364, 375, 365, 368, 366,
	367, 176, 370, 393, 195, 345, 348, 407, 1690, 183,
	178, 1738, 1713, 1647, 1602, 1608, 1508, 0, 177, 1686,
	1557, 1573, 1545, 1660, 1544, 238, 1677, 391, 392, 210,
	409, 1520, 1758, 179, 1521, 1757, 295, 303, 294, 1761,
	387, 1739, 1648, 1633, 1631, 1513, 1737, 1646, 1632, 263,
	230, 245, 319, 270, 320, 246, 290, 289, 291, 272,
	1635, 0, 174, 0, 360, 1748, 1773, 369, 192, 1539,
	1705, 382, 153, 326, 193, 237, 228, 318, 293, 185,
	248, 358, 261, 269, 1681, 1770, 307, 335, 199, 397,
	357, 224, 1535, 300, 1538, 1533, 1536, 1534, 1639, 1640,
	1753, 1754, 1755, 1693, 1528, 0, 1731, 1732, 0, 1626,
	1741, 1514, 0, 1709, 162, 163, 1673, 1768, 1586, 206,
	141, 1510, 1511, 1512, 142, 1616, 1617, 143, 144, 1727,
	1726, 1725, 1728, 145, 1762, 1760, 1763, 1529, 1550, 1572,
	1622, 1623, 1625, 1657, 1658, 1703, 1676, 1685, 1559, 1618,
	315, 175, 186, 198, 217, 215, 229, 258, 281, 286,
	313, 347, 352, 372, 373, 374, 376, 219, 0, 222,
	197, 330, 196, 271, 251, 314, 380, 381, 323, 212,
	1644, 169, 180, 265, 1769, 328, 234, 1497, 1505, 1532,
	1540, 1541, 1542, 1543, 1548, 1555, 1563, 1574, 1575, 1583,
	1589, 1590, 1591, 1592, 1601, 1603, 1604, 1605, 1606, 1607,
	1611, 1612, 1628, 1642, 1643, 1650, 1651, 0, 1680, 1683,
	1692, 1697, 1700, 1706, 1708, 1715, 1720, 1722, 1759, 1767,
	1772, 398, 216, 1624, 1649, 1687, 181, 190, 201, 214,
	226, 233, 244, 247, 252, 253, 255, 259, 273, 275,
	276, 277, 278, 296, 297, 301, 302, 305, 306, 310,
	311, 312, 316, 317, 324, 158, 331, 338, 339, 340,
	341, 342, 350, 351, 353, 354, 361, 389, 390, 403,
	404, 1733, 1597, 166, 0, 0, 172, 0, 0, 0,
	0, 0, 1582, 171, 1729, 1764, 1661, 1675, 877, 0,
	377, 942, 881, 724, 747, 890, 753, 755, 818, 700,
	795, 304, 744, 701, 0, 0, 692, 937, 693, 725,
	221, 935, 851, 796, 879, 781, 811, 821, 220, 208,
	788, 787, 868, 736, 735, 816, 864, 878, 0, 0,
	975, 267, 0, 997, 401, 359, 287, 1000, 999, 779,
	0, 949, 962, 764, 820, 712, 807, 883, 745, 812,
	884, 0, 0, 0, 0, 0, 464, 0, 0, 0,
	0, 0, 0, 0, 0, 147, 0, 957, 971, 938,
	998, 774, 817, 895, 691, 954, 0, 696, 926, 0,
	869, 732, 733, 225, 0, 0, 0, 0, 0, 0,
	0, 777, 794, 836, 761, 396, 823, 832, 846, 754,
	322, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 953, 0, 0, 0, 706, 922, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	943, 0, 0, 0, 711, 689, 730, 838, 690, 688,
	288, 703, 964, 867, 762, 256, 164, 873, 760, 941,
	826, 707, 855, 748, 264, 705, 165, 702, 708, 746,
	299, 835, 841, 152, 168, 266, 852, 726, 739, 209,
	2676, 334, 813, 395, 2678, 236, 799, 333, 268, 388,
	827, 875, 394, 749, 371, 402, 406, 232, 782, 200,
	356, 223, 218, 731, 845, 695, 241, 321, 213, 260,
	765, 819, 727, 205, 830, 806, 857, 355, 385, 170,
	284, 386, 405, 188, 378, 285, 292, 202, 204, 203,
	182, 349, 384, 194, 207, 853, 840, 859, 722, 709,
	714, 710, 738, 876, 250, 242, 860, 858, 740, 308,
	191, 792, 785, 778, 399, 154, 344, 343, 752, 249,
	843, 155, 146, 329, 156, 257, 173, 863, 408, 187,
	262, 379, 2677, 235, 298, 211, 815, 309, 737, 167,
	325, 280, 282, 279, 283, 239, 150, 157, 839, 327,
	346, 383, 189, 362, 148, 149, 151, 159, 337, 160,
	161, 882, 274, 227, 231, 243, 254, 814, 332, 363,
	400, 808, 184, 336, 364, 375, 365, 368, 366, 367,
	176, 370, 393, 195, 345, 348, 407, 837, 183, 178,
	871, 854, 801, 767, 773, 697, 0, 177, 833, 729,
	741, 721, 809, 720, 238, 825, 391, 392, 210, 409,
	927, 886, 179, 704, 885, 295, 303, 294, 888, 387,
	872, 802, 791, 789, 698, 870, 800, 790, 263, 230,
	245, 319, 270, 320, 246, 290, 289, 291, 272, 793,
	0, 174, 0, 360, 880, 897, 369, 192, 715, 847,
	382, 153, 326, 193, 237, 228, 318, 293, 185, 248,
	358, 261, 269, 829, 894, 307, 335, 199, 397, 357,
	224, 932, 300, 934, 930, 933, 931, 950, 951, 972,
	973, 974, 961, 928, 0, 969, 970, 0, 784, 874,
	699, 0, 850, 162, 163, 822, 892, 940, 206, 141,
	923, 924, 925, 142, 944, 945, 143, 144, 967, 966,
	965, 968, 145, 977, 976, 978, 929, 936, 939, 946,
	947, 948, 955, 956, 963, 958, 959, 0, 780, 315,
	175, 186, 198, 217, 215, 229, 258, 281, 286, 313,
	347, 352, 372, 373, 374, 376, 219, 0, 222, 197,
	330, 196, 271, 251, 314, 380, 381, 323, 212, 952,
	169, 180, 265, 893, 328, 234, 687, 694, 713, 716,
	717, 718, 719, 723, 728, 734, 742, 743, 751, 756,
	757, 758, 759, 766, 768, 769, 770, 771, 772, 775,
	776, 786, 797, 798, 804, 805, 0, 828, 831, 960,
	842, 844, 848, 849, 856, 861, 862, 887, 891, 896,
	398, 216, 783, 803, 834, 181, 190, 201, 214, 226,
	233, 244, 247, 252, 253, 255, 259, 273, 275, 276,
	277, 278, 296, 297, 301, 302, 305, 306, 310, 311,
	312, 316, 317, 324, 158, 331, 338, 339, 340, 341,
	342, 350, 351, 353, 354, 361, 389, 390, 403, 404,
	866, 763, 166, 0, 0, 172, 0, 0, 0, 0,
	0, 750, 171, 865, 889, 810, 824, 877, 0, 377,
	942, 881, 724, 747, 890, 753, 755, 818, 700, 795,
	304, 744, 701, 0, 0, 692, 937, 693, 725, 221,
	935, 851, 796, 879, 781, 811, 821, 220, 208, 788,
	787, 868, 736, 735, 816, 864, 878, 0, 0, 975,
	267, 0, 0, 401, 359, 287, 0, 0, 779, 0,
	949, 962, 764, 820, 712, 807, 883, 745, 812, 884,
	0, 0, 0, 0, 0, 464, 0, 0, 0, 0,
	0, 0, 0, 0, 147, 0, 957, 971, 938, 0,
	774, 817, 895, 691, 954, 0, 696, 926, 0, 869,
	732, 733, 225, 0, 0, 0, 0, 0, 0, 0,
	777, 794, 836, 761, 396, 823, 832, 846, 754, 322,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 953, 0, 0, 0, 706, 922, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 943,
	0, 0, 0, 711, 689, 730, 838, 690, 688, 288,
	703, 964, 867, 762, 256, 164, 873, 760, 941, 826,
	707, 855, 748, 264, 705, 165, 702, 708, 746, 299,
	835, 841, 152, 168, 266, 852, 726, 739, 209, 0,
	334, 813, 395, 921, 236, 799, 333, 268, 388, 827,
	875, 394, 749, 371, 402, 406, 232, 782, 200, 356,
	223, 218, 731, 845, 695, 241, 321, 213, 260, 765,
	819, 727, 205, 830, 806, 857, 355, 385, 170, 284,
	386, 405, 188, 378, 285, 292, 202, 204, 203, 182,
	349, 384, 194, 207, 853, 840, 859, 722, 709, 714,
	710, 738, 876, 250, 242, 860, 858, 740, 308, 191,
	792, 785, 778, 399, 154, 344, 343, 752, 249, 843,
	155, 146, 329, 156, 257, 173, 863, 408, 187, 262,
	379, 920, 235, 298, 211, 815, 309, 737, 167, 325,
	280, 282, 279, 283, 239, 150, 157, 839, 327, 346,
	383, 189, 362, 148, 149, 151, 159, 337, 160, 161,
	882, 274, 227, 231, 243, 254, 814, 332, 363, 400,
	808, 184, 336, 364, 375, 365, 368, 366, 367, 176,
	370, 393, 195, 345, 348, 407, 837, 183, 178, 871,
	854, 801, 767, 773, 697, 0, 177, 833, 729, 741,
	721, 809, 720, 238, 825, 391, 392, 210, 409, 927,
	886, 179, 704, 885, 295, 303, 294, 888, 387, 872,
	802, 791, 789, 698, 870, 800, 790, 263, 230, 245,
	319, 270, 320, 246, 290, 289, 291, 272, 793, 0,
	174, 0, 360, 880, 897, 369, 192, 715, 847, 382,
	153, 326, 193, 237, 228, 318, 293, 185, 248, 358,
	261, 269, 829, 894, 307, 335, 199, 397, 357, 224,
	932, 300, 934, 930, 933, 931, 950, 951, 972, 973,
	974, 961, 928, 0, 969, 970, 0, 784, 874, 699,
	0, 850, 162, 163, 822, 892, 940, 206, 141, 923,
	924, 925, 142, 944, 945, 143, 144, 967, 966, 965,
	968, 145, 977, 976, 978, 929, 936, 939, 946, 947,
	948, 955, 956, 963, 958, 959, 0, 780, 315, 175,
	186, 198, 217, 215, 229, 258, 281, 286, 313, 347,
	352, 372, 373, 374, 376, 219, 0, 222, 197, 330,
	196, 271, 251, 314, 380, 381, 323, 212, 952, 169,
	180, 265, 893, 328, 234, 687, 694, 713, 716, 717,
	718, 719, 723, 728, 734, 742, 743, 751, 756, 757,
	758, 759, 766, 768, 769, 770, 771, 772, 775, 776,
	786, 797, 798, 804, 805, 0, 828, 831, 960, 842,
	844, 848, 849, 856, 861, 862, 887, 891, 896, 398,
	216, 783, 803, 834, 181, 190, 201, 214, 226, 233,
	244, 247, 252, 253, 255, 259, 273, 275, 276, 277,
	278, 296, 297, 301, 302, 305, 306, 310, 311, 312,
	316, 317, 324, 158, 331, 338, 339, 340, 341, 342,
	350, 351, 353, 354, 361, 389, 390, 403, 404, 866,
	763, 166, 0, 0, 172, 0, 0, 0, 0, 0,
	750, 171, 865, 889, 810, 824, 877, 0, 377, 942,
	881, 724, 747, 890, 753, 755, 818, 700, 795, 304,
	744, 701, 0, 0, 692, 937, 693, 725, 221, 935,
	851, 796, 879, 781, 811, 821, 220, 208, 788, 787,
	868, 736, 735, 816, 864, 878, 0, 0, 975, 267,
	0, 0, 401, 359, 287, 0, 0, 779, 0, 949,
	962, 764, 820, 712, 807, 883, 745, 812, 884, 0,
	0, 0, 0, 0, 464, 0, 0, 0, 0, 0,
	0, 0, 0, 147, 0, 957, 971, 938, 0, 774,
	817, 895, 691, 954, 0, 696, 926, 0, 869, 732,
	733, 225, 0, 0, 0, 0, 0, 0, 0, 777,
	794, 836, 761, 396, 823, 832, 846, 754, 322, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	953, 0, 0, 0, 706, 922, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 943, 0,
	0, 0, 711, 689, 730, 838, 690, 688, 288, 703,
	964, 867, 762, 256, 164, 873, 760, 941, 826, 707,
	855, 748, 264, 705, 165, 702, 708, 746, 299, 835,
	841, 152, 168, 266, 852, 726, 739, 209, 0, 334,
	813, 395, 921, 236, 799, 333, 268, 388, 827, 875,
	394, 749, 371, 402, 406, 232, 782, 200, 356, 223,
	218, 731, 845, 695, 241, 321, 213, 260, 765, 819,
	727, 205, 830, 806, 857, 355, 385, 170, 284, 386,
	405, 188, 378, 285, 292, 202, 204, 203, 182, 349,
	384, 194, 207, 853, 840, 859, 722, 709, 714, 710,
	738, 876, 250, 242, 860, 858, 740, 308, 191, 792,
	785, 778, 399, 154, 344, 343, 752, 249, 843, 155,
	146, 329, 156, 257, 173, 863, 408, 187, 262, 379,
	920, 235, 298, 211, 815, 309, 737, 167, 325, 280,
	282, 279, 283, 239, 150, 157, 839, 327, 346, 383,
	189, 362, 148, 149, 151, 159, 337, 160, 161, 882,
	274, 227, 231, 243, 254, 814, 332, 363, 400, 808,
	184, 336, 364, 375, 365, 368, 366, 367, 176, 370,
	393, 195, 345, 348, 407, 837, 183, 178, 871, 854,
	801, 767, 773, 697, 0, 177, 833, 729, 741, 721,
	809, 720, 238, 825, 391, 392, 210, 409, 927, 886,
	179, 915, 885, 295, 303, 294, 888, 387, 872, 802,
	791, 789, 698, 870, 800, 790, 263, 230, 245, 319,
	270, 320, 246, 290, 289, 291, 911, 793, 0, 174,
	0, 360, 880, 897, 369, 192, 715, 847, 382, 153,
	326, 193, 237, 228, 318, 916, 914, 905, 906, 261,
	269, 829, 894, 307, 335, 199, 397, 357, 224, 932,
	300, 934, 930, 933, 931, 950, 951, 972, 973, 974,
	961, 928, 0, 969, 970, 0, 784, 874, 699, 0,
	850, 162, 163, 822, 892, 940, 206, 141, 923, 924,
	925, 142, 944, 945, 143, 144, 967, 966, 965, 968,
	145, 977, 976, 978, 929, 936, 939, 946, 947, 948,
	955, 956, 963, 958, 959, 0, 780, 315, 175, 186,
	198, 217, 215, 229, 258, 281, 286, 313, 347, 352,
	372, 373, 374, 376, 219, 0, 222, 197, 330, 196,
	271, 251, 314, 380, 381, 323, 212, 952, 169, 180,
	265, 893, 328, 234, 687, 694, 713, 716, 717, 718,
	719, 723, 728, 734, 742, 743, 751, 756, 757, 758,
	759, 766, 768, 769, 770, 771, 772, 775, 776, 786,
	797, 798, 804, 805, 0, 828, 831, 960, 842, 844,
	848, 849, 856, 861, 862, 887, 891, 896, 398, 216,
	783, 803, 834, 181, 190, 201, 214, 226, 233, 244,
	247, 252, 253, 255, 259, 273, 275, 276, 277, 278,
	296, 297, 301, 302, 305, 306, 310, 311, 312, 912,
	913, 324, 158, 331, 338, 339, 340, 341, 342, 350,
	351, 353, 354, 361, 389, 390, 403, 404, 866, 763,
	166, 0, 0, 172, 0, 0, 0, 0, 0, 750,
	171, 865, 889, 810, 824, 877, 0, 377, 942, 881,
	724, 747, 890, 753, 755, 818, 700, 795, 304, 744,
	701, 0, 0, 692, 937, 693, 725, 221, 935, 851,
	796, 879, 781, 811, 821, 220, 208, 788, 787, 868,
	736, 735, 816, 864, 878, 0, 0, 975, 267, 0,
	0, 401, 359, 287, 0, 0, 779, 0, 949, 962,
	764, 820, 712, 807, 883, 745, 812, 884, 0, 0,
	0, 0, 0, 464, 0, 0, 0, 0, 0, 0,
	0, 0, 147, 0, 957, 971, 938, 0, 774, 817,
	895, 691, 954, 0, 696, 926, 0, 869, 732, 733,
	225, 0, 0, 0, 0, 0, 0, 0, 777, 794,
	836, 761, 396, 823, 832, 846, 754, 322, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 953,
	0, 0, 0, 706, 922, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 943, 0, 0,
	0, 711, 689, 730, 838, 690, 688, 288, 703, 964,
	867, 762, 256, 164, 873, 760, 941, 826, 707, 855,
	748, 264, 705, 165, 702, 708, 746, 299, 835, 841,
	152, 168, 266, 852, 726, 739, 209, 0, 334, 813,
	395, 921, 236, 799, 333, 268, 388, 827, 875, 394,
	749, 371, 402, 406, 232, 782, 200, 356, 223, 218,
	731, 845, 695, 241, 321, 213, 260, 765, 819, 727,
	205, 830, 806, 857, 355, 385, 170, 284, 386, 405,
	188, 378, 285, 292, 202, 204, 203, 182, 349, 384,
	194, 207, 853, 840, 859, 722, 709, 714, 710, 738,
	876, 250, 242, 860, 858, 740, 308, 191, 792, 785,
	778, 399, 154, 344, 343, 752, 249, 843, 155, 146,
	329, 156, 257, 173, 863, 408, 187, 262, 379, 920,
	235, 298, 211, 815, 309, 737, 167, 325, 280, 282,
	279, 283, 239, 150, 157, 839, 327, 346, 383, 189,
	362, 148, 149, 151, 159, 337, 160, 161, 882, 274,
	227, 231, 243, 254, 814, 332, 363, 400, 808, 184,
	336, 364, 375, 365, 368, 366, 367, 176, 370, 1374,
	195, 345, 348, 407, 837, 183, 178, 871, 854, 801,
	767, 773, 697, 0, 177, 833, 729, 741, 721, 809,
	720, 238, 825, 391, 392, 210, 409, 927, 886, 179,
	704, 885, 295, 303, 294, 888, 387, 872, 802, 791,
	789, 698, 870, 800, 790, 263, 230, 245, 319, 270,
	320, 246, 290, 289, 291, 272, 793, 0, 174, 0,
	360, 880, 897, 369, 192, 715, 847, 382, 153, 326,
	193, 237, 228, 318, 293, 185, 248, 358, 261, 269,
	829, 894, 307, 335, 199, 397, 357, 224, 932, 300,
	934, 930, 933, 931, 950, 951, 972, 973, 974, 961,
	928, 0, 969, 970, 0, 784, 874, 699, 0, 850,
	162, 163, 822, 892, 940, 206, 141, 923, 924, 925,
	142, 944, 945, 143, 144, 967, 966, 965, 968, 145,
	977, 976, 978, 929, 936, 939, 946, 947, 948, 955,
	956, 963, 958, 959, 0, 780, 315, 175, 186, 198,
	217, 215, 229, 258, 281, 286, 313, 347, 352, 372,
	373, 374, 376, 219, 0, 222, 197, 330, 196, 271,
	251, 314, 380, 381, 323, 212, 952, 169, 180, 265,
	893, 328, 234, 687, 694, 713, 716, 717, 718, 719,
	723, 728, 734, 742, 743, 751, 756, 757, 758, 759,
	766, 768, 769, 770, 771, 772, 775, 776, 786, 797,
	798, 804, 805, 0, 828, 831, 960, 842, 844, 848,
	849, 856, 861, 862, 887, 891, 896, 398, 216, 783,
	803, 834, 181, 190, 201, 214, 226, 233, 244, 247,
	252, 253, 255, 259, 273, 275, 276, 277, 278, 296,
	297, 301, 302, 305, 306, 310, 311, 312, 316, 317,
	324, 158, 331, 338, 339, 340, 341, 342, 350, 351,
	353, 354, 361, 389, 390, 403, 404, 866, 763, 166,
	0, 0, 172, 0, 0, 0, 0, 0, 750, 171,
	865, 889, 810, 824, 877, 0, 377, 942, 881, 724,
	747, 890, 753, 755, 818, 700, 795, 304, 744, 701,
	0, 0, 692, 937, 693, 725, 221, 935, 851, 796,
	879, 781, 811, 821, 220, 208, 788, 787, 868, 736,
	735, 816, 864, 878, 0, 0, 975, 267, 0, 0,
	401, 359, 287, 0, 0, 779, 0, 949, 962, 764,
	820, 712, 807, 883, 745, 812, 884, 0, 0, 0,
	0, 0, 464, 0, 0, 0, 0, 0, 0, 0,
	0, 147, 0, 957, 971, 938, 0, 774, 817, 895,
	691, 954, 0, 696, 926, 0, 869, 732, 733, 225,
	0, 0, 0, 0, 0, 0, 0, 777, 794, 836,
	761, 396, 823, 832, 846, 754, 322, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 953, 0,
	0, 0, 706, 922, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 943, 0, 0, 0,
	711, 689, 730, 838, 690, 688, 288, 703, 964, 867,
	762, 256, 164, 873, 760, 941, 826, 707, 855, 748,
	264, 705, 165, 702, 708, 746, 299, 835, 841, 152,
	168, 266, 852, 726, 739, 209, 0, 334, 813, 395,
	921, 236, 799, 333, 268, 388, 827, 875, 394, 749,
	371, 402, 406, 232, 782, 200, 356, 223, 218, 731,
	845, 695, 241, 321, 213, 260, 765, 819, 727, 205,
	830, 806, 857, 355, 385, 170, 284, 386, 405, 188,
	378, 285, 292, 202, 204, 203, 182, 349, 384, 194,
	207, 853, 840, 859, 722, 709, 714, 710, 738, 876,
	250, 242, 860, 858, 740, 308, 191, 792, 785, 778,
	399, 154, 344, 343, 752, 249, 843, 155, 146, 329,
	156, 257, 173, 863, 408, 187, 262, 379, 920, 235,
	298, 211, 815, 309, 737, 167, 325, 280, 282, 279,
	283, 239, 150, 157, 839, 327, 346, 383, 189, 362,
	148, 149, 151, 159, 337, 160, 161, 882, 274, 227,
	231, 243, 254, 814, 332, 363, 400, 808, 184, 336,
	364, 375, 365, 368, 366, 367, 176, 370, 902, 195,
	345, 348, 407, 837, 183, 178, 871, 854, 801, 767,
	773, 697, 0, 177, 833, 729, 741, 721, 809, 720,
	238, 825, 391, 392, 210, 409, 927, 886, 179, 915,
	885, 295, 303, 294, 888, 387, 872, 802, 791, 789,
	698, 870, 800, 790, 263, 230, 245, 319, 270, 320,
	246, 290, 289, 291, 911, 793, 0, 174, 0, 360,
	880, 897, 369, 192, 715, 847, 382, 153, 326, 193,
	237, 228, 318, 916, 914, 905, 906, 261, 269, 829,
	894, 307, 335, 199, 397, 357, 224, 932, 300, 934,
	930, 933, 931, 950, 951, 972, 973, 974, 961, 928,
	0, 969, 970, 0, 784, 874, 699, 0, 850, 162,
	163, 822, 892, 940, 206, 141, 923, 924, 925, 142,
	944, 945, 143, 144, 967, 966, 965, 968, 145, 977,
	976, 978, 929, 936, 939, 946, 947, 948, 955, 956,
	963, 958, 959, 0, 780, 315, 175, 186, 198, 217,
	215, 229, 258, 281, 286, 313, 347, 352, 372, 373,
	374, 376, 219, 0, 222, 197, 330, 196, 271, 251,
	314, 380, 381, 323, 212, 952, 169, 180, 265, 893,
	328, 234, 687, 694, 713, 716, 717, 718, 719, 723,
	728, 734, 742, 743, 751, 756, 757, 758, 759, 766,
	768, 769, 770, 771, 772, 775, 776, 786, 797, 798,
	804, 805, 0, 828, 831, 960, 842, 844, 848, 849,
	856, 861, 862, 887, 891, 896, 398, 216, 783, 803,
	834, 181, 190, 201, 214, 226, 233, 244, 247, 252,
	253, 255, 259, 273, 275, 276, 277, 278, 296, 297,
	301, 302, 305, 306, 310, 311, 312, 912, 913, 324,
	158, 331, 338, 339, 340, 341, 342, 350, 351, 353,
	354, 361, 389, 390, 403, 404, 866, 763, 166, 0,
	0, 172, 0, 0, 0, 0, 0, 750, 171, 865,
	889, 810, 824, 1745, 1707, 377, 1600, 1749, 1549, 1579,
	1766, 1585, 1588, 1669, 1515, 1638, 304, 1576, 1516, 1499,
	1554, 1503, 1567, 1504, 1551, 221, 1547, 1710, 1641, 1747,
	1620, 1662, 1672, 220, 208, 1630, 1629, 1735, 1565, 1564,
	1667, 1724, 1746, 1619, 0, 1756, 267, 1721, 0, 401,
	359, 287, 0, 0, 1615, 1730, 1636, 1699, 1598, 1671,
	1531, 1654, 1751, 1577, 1663, 1752, 0, 0, 0, 0,
	0, 2756, 0, 2751, 2752, 0, 0, 0, 0, 0,
	2753, 0, 1659, 1743, 1570, 0, 1610, 1668, 1771, 1502,
	1655, 0, 1507, 1518, 1765, 1736, 1561, 1562, 225, 0,
	0, 0, 0, 0, 0, 0, 1613, 1637, 1689, 1595,
	396, 1674, 1684, 1702, 1587, 322, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 1556, 0, 1652, 0, 0,
	0, 1523, 1509, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1609, 0, 0, 0, 1530,
	1500, 1558, 1691, 1501, 1498, 288, 1519, 1704, 1734, 1596,
	256, 0, 1740, 1594, 1593, 1678, 1524, 1714, 1580, 264,
	1522, 165, 1517, 1525, 1578, 299, 1688, 1696, 0, 168,
	266, 1711, 1552, 1569, 209, 0, 334, 1664, 395, 0,
	236, 1645, 333, 268, 388, 1679, 1742, 394, 1581, 371,
	402, 406, 232, 1621, 200, 356, 223, 218, 1560, 1701,
	1506, 241, 321, 213, 260, 1599, 1670, 1553, 205, 1682,
	1653, 1716, 355, 385, 170, 284, 386, 405, 188, 378,
	285, 292, 202, 204, 203, 182, 349, 384, 194, 207,
	1712, 1695, 1718, 1546, 1526, 1537, 1527, 1568, 1744, 250,
	242, 1719, 1717, 1571, 308, 191, 1634, 1627, 1614, 399,
	0, 344, 343, 1584, 249, 1698, 0, 0, 329, 2755,
	257, 173, 1723, 408, 187, 262, 379, 0, 235, 298,
	211, 1666, 309, 1566, 167, 325, 280, 282, 279, 283,
	239, 0, 0, 1694, 327, 346, 383, 189, 362, 2754,
	0, 0, 0, 337, 0, 0, 1750, 274, 227, 231,
	243, 254, 1665, 332, 363, 400, 1656, 184, 336, 364,
	375, 365, 368, 366, 367, 176, 370, 393, 195, 345,
	348, 407, 1690, 183, 178, 1738, 1713, 1647, 1602, 1608,
	1508, 0, 177, 1686, 1557, 1573, 1545, 1660, 1544, 238,
	1677, 391, 392, 210, 409, 1520, 1758, 179, 1521, 1757,
	295, 303, 294, 1761, 387, 1739, 1648, 1633, 1631, 1513,
	1737, 1646, 1632, 263, 230, 245, 319, 270, 320, 246,
	290, 289, 291, 272, 1635, 0, 174, 0, 360, 1748,
	1773, 369, 192, 1539, 1705, 382, 0, 326, 193, 237,
	228, 318, 293, 185, 248, 358, 261, 269, 1681, 1770,
	307, 335, 199, 397, 357, 224, 1535, 300, 1538, 1533,
	1536, 1534, 1639, 1640, 1753, 1754, 1755, 1693, 1528, 0,
	1731, 1732, 0, 1626, 1741, 1514, 0, 1709, 0, 0,
	1673, 1768, 1586, 206, 0, 1510, 1511, 1512, 0, 1616,
	1617, 0, 0, 1727, 1726, 1725, 1728, 0, 1762, 1760,
	1763, 1529, 1550, 1572, 1622, 1623, 1625, 1657, 1658, 1703,
	1676, 1685, 1559, 1618, 315, 175, 186, 198, 217, 215,
	229, 258, 281, 286, 313, 347, 352, 372, 373, 374,
	376, 219, 0, 222, 197, 330, 196, 271, 251, 314,
	380, 381, 323, 212, 1644, 169, 180, 265, 1769, 328,
	234, 1497, 1505, 1532, 1540, 1541, 1542, 1543, 1548, 1555,
	1563, 1574, 1575, 1583, 1589, 1590, 1591, 1592, 1601, 1603,
	1604, 1605, 1606, 1607, 1611, 1612, 1628, 1642, 1643, 1650,
	1651, 0, 1680, 1683, 1692, 1697, 1700, 1706, 1708, 1715,
	1720, 1722, 1759, 1767, 1772, 398, 216, 1624, 1649, 1687,
	181, 190, 201, 214, 226, 233, 244, 247, 252, 253,
	255, 259, 273, 275, 276, 277, 278, 296, 297, 301,
	302, 305, 306, 310, 311, 312, 316, 317, 324, 0,
	331, 338, 339, 340, 341, 342, 350, 351, 353, 354,
	361, 389, 390, 403, 404, 1733, 1597, 166, 0, 0,
	172, 0, 0, 0, 0, 0, 1582, 171, 1729, 1764,
	1661, 1675, 1745, 1707, 377, 1600, 1749, 1549, 1579, 1766,
	1585, 1588, 1669, 1515, 1638, 304, 1576, 1516, 1499, 1554,
	1503, 1567, 1504, 1551, 221, 1547, 1710, 1641, 1747, 1620,
	1662, 1672, 220, 208, 1630, 1629, 1735, 1565, 1564, 1667,
	1724, 1746, 1619, 0, 1756, 267, 1721, 0, 401, 359,
	287, 0, 0, 1615, 1730, 1636, 1699, 1598, 1671, 1531,
	1654, 1751, 1577, 1663, 1752, 0, 0, 0, 0, 0,
	993, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1659, 1743, 1570, 0, 1610, 1668, 1771, 1502, 1655,
	0, 1507, 1518, 1765, 1736, 1561, 1562, 225, 0, 0,
	0, 0, 0, 0, 0, 1613, 1637, 1689, 1595, 396,
	1674, 1684, 1702, 1587, 322, 240, 0, 0, 0, 0,
	0, 0, 3136, 0, 1556, 0, 1652, 0, 0, 0,
	1523, 1509, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1609, 0, 0, 0, 1530, 1500,
	1558, 1691, 1501, 1498, 288, 1519, 1704, 1734, 1596, 256,
	0, 1740, 1594, 1593, 1678, 1524, 1714, 1580, 264, 1522,
	165, 1517, 1525, 1578, 299, 1688, 1696, 0, 168, 266,
	1711, 1552, 1569, 209, 0, 334, 1664, 395, 0, 236,
	1645, 333, 268, 388, 1679, 1742, 394, 1581, 371, 402,
	406, 232, 1621, 200, 356, 223, 218, 1560, 1701, 1506,
	241, 321, 213, 260, 1599, 1670, 1553, 205, 1682, 1653,
	1716, 355, 385, 170, 284, 386, 405, 188, 378, 285,
	292, 202, 204, 203, 182, 349, 384, 194, 207, 1712,
	1695, 1718, 1546, 1526, 1537, 1527, 1568, 1744, 250, 242,
	1719, 1717, 1571, 308, 191, 1634, 1627, 1614, 399, 0,
	344, 343, 1584, 249, 1698, 0, 0, 329, 0, 257,
	173, 1723, 408, 187, 262, 379, 0, 235, 298, 211,
	1666, 309, 1566, 167, 325, 280, 282, 279, 283, 239,
	0, 0, 1694, 327, 346, 383, 189, 362, 0, 0,
	0, 0, 337, 0, 0, 1750, 274, 227, 231, 243,
	254, 1665, 332, 363, 400, 1656, 184, 336, 364, 375,
	365, 368, 366, 367, 176, 370, 393, 195, 345, 348,
	407, 1690, 183, 178, 1738, 1713, 1647, 1602, 1608, 1508,
	0, 177, 1686, 1557, 1573, 1545, 1660, 1544, 238, 1677,
	391, 392, 210, 409, 1520, 1758, 179, 1521, 1757, 295,
	303, 294, 1761, 387, 1739, 1648, 1633, 1631, 1513, 1737,
	1646, 1632, 263, 230, 245, 319, 270, 320, 246, 290,
	289, 291, 272, 1635, 0, 174, 0, 360, 1748, 1773,
	369, 192, 1539, 1705, 382, 0, 326, 193, 237, 228,
	318, 293, 185, 248, 358, 261, 269, 1681, 1770, 307,
	335, 199, 397, 357, 224, 1535, 300, 1538, 1533, 1536,
	1534, 1639, 1640, 1753, 1754, 1755, 1693, 1528, 0, 1731,
	1732, 0, 1626, 1741, 1514, 0, 1709, 0, 0, 1673,
	1768, 1586, 206, 0, 1510, 1511, 1512, 0, 1616, 1617,
	0, 0, 1727, 1726, 1725, 1728, 0, 1762, 1760, 1763,
	1529, 1550, 1572, 1622, 1623, 1625, 1657, 1658, 1703, 1676,
	1685, 1559, 1618, 315, 175, 186, 198, 217, 215, 229,
	258, 281, 286, 313, 347, 352, 372, 373, 374, 376,
	219, 0, 222, 197, 330, 196, 271, 251, 314, 380,
	381, 323, 212, 1644, 169, 180, 265, 1769, 328, 234,
	1497, 1505, 1532, 1540, 1541, 1542, 1543, 1548, 1555, 1563,
	1574, 1575, 1583, 1589, 1590, 1591, 1592, 1601, 1603, 1604,
	1605, 1606, 1607, 1611, 1612, 1628, 1642, 1643, 1650, 1651,
	0, 1680, 1683, 1692, 1697, 1700, 1706, 1708, 1715, 1720,
	1722, 1759, 1767, 1772, 398, 216, 1624, 1649, 1687, 181,
	190, 201, 214, 226, 233, 244, 247, 252, 253, 255,
	259, 273, 275, 276, 277, 278, 296, 297, 301, 302,
	305, 306, 310, 311, 312, 316, 317, 324, 0, 331,
	338, 339, 340, 341, 342, 350, 351, 353, 354, 361,
	389, 390, 403, 404, 1733, 1597, 166, 0, 0, 172,
	0, 0, 0, 0, 0, 1582, 171, 1729, 1764, 1661,
	1675, 1745, 1707, 377, 1600, 1749, 1549, 1579, 1766, 1585,
	1588, 1669, 1515, 1638, 304, 1576, 1516, 1499, 1554, 1503,
	1567, 1504, 1551, 221, 1547, 1710, 1641, 1747, 1620, 1662,
	1672, 220, 208, 1630, 1629, 1735, 1565, 1564, 1667, 1724,
	1746, 1619, 0, 1756, 267, 1721, 0, 401, 359, 287,
	0, 0, 1615, 1730, 1636, 1699, 1598, 1671, 1531, 1654,
	1751, 1577, 1663, 1752, 0, 0, 0, 0, 0, 993,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1659, 1743, 1570, 0, 1610, 1668, 1771, 1502, 1655, 0,
	1507, 1518, 1765, 1736, 1561, 1562, 225, 0, 0, 0,
	0, 0, 0, 0, 1613, 1637, 1689, 1595, 396, 1674,
	1684, 1702, 1587, 322, 240, 0, 0, 0, 0, 0,
	0, 2600, 0, 1556, 0, 1652, 0, 0, 0, 1523,
	1509, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1609, 0, 0, 0, 1530, 1500, 1558,
	1691, 1501, 1498, 288, 1519, 1704, 1734, 1596, 256, 0,
	1740, 1594, 1593, 1678, 1524, 1714, 1580, 264, 1522, 165,
	1517, 1525, 1578, 299, 1688, 1696, 0, 168, 266, 1711,
	1552, 1569, 209, 0, 334, 1664, 395, 0, 236, 1645,
	333, 268, 388, 1679, 1742, 394, 1581, 371, 402, 406,
	232, 1621, 200, 356, 223, 218, 1560, 1701, 1506, 241,
	321, 213, 260, 1599, 1670, 1553, 205, 1682, 1653, 1716,
	355, 385, 170, 284, 386, 405, 188, 378, 285, 292,
	202, 204, 203, 182, 349, 384, 194, 207, 1712, 1695,
	1718, 1546, 1526, 1537, 1527, 1568, 1744, 250, 242, 1719,
	1717, 1571, 308, 191, 1634, 1627, 1614, 399, 0, 344,
	343, 1584, 249, 1698, 0, 0, 329, 0, 257, 173,
	1723, 408, 187, 262, 379, 0, 235, 298, 211, 1666,
	309, 1566, 167, 325, 280, 282, 279, 283, 239, 0,
	0, 1694, 327, 346, 383, 189, 362, 0, 0, 0,
	0, 337, 0, 0, 1750, 274, 227, 231, 243, 254,
	1665, 332, 363, 400, 1656, 184, 336, 364, 375, 365,
	368, 366, 367, 176, 370, 393, 195, 345, 348, 407,
	1690, 183, 178, 1738, 1713, 1647, 1602, 1608, 1508, 0,
	177, 1686, 1557, 1573, 1545, 1660, 1544, 238, 1677, 391,
	392, 210, 409, 1520, 1758, 179, 1521, 1757, 295, 303,
	294, 1761, 387, 1739, 1648, 1633, 1631, 1513, 1737, 1646,
	1632, 263, 230, 245, 319, 270, 320, 246, 290, 289,
	291, 272, 1635, 0, 174, 0, 360, 1748, 1773, 369,
	192, 1539, 1705, 382, 0, 326, 193, 237, 228, 318,
	293, 185, 248, 358, 261, 269, 1681, 1770, 307, 335,
	199, 397, 357, 224, 1535, 300, 1538, 1533, 1536, 1534,
	1639, 1640, 1753, 1754, 1755, 1693, 1528, 0, 1731, 1732,
	0, 1626, 1741, 1514, 0, 1709, 0, 0, 1673, 1768,
	1586, 206, 0, 1510, 1511, 1512, 0, 1616, 1617, 0,
	0, 1727, 1726, 1725, 1728, 0, 1762, 1760, 1763, 1529,
	1550, 1572, 1622, 1623, 1625, 1657, 1658, 1703, 1676, 1685,
	1559, 1618, 315, 175, 186, 198, 217, 215, 229, 258,
	281, 286, 313, 347, 352, 372, 373, 374, 376, 219,
	0, 222, 197, 330, 196, 271, 251, 314, 380, 381,
	323, 212, 1644, 169, 180, 265, 1769, 328, 234, 1497,
	1505, 1532, 1540, 1541, 1542, 1543, 1548, 1555, 1563, 1574,
	1575, 1583, 1589, 1590, 1591, 1592, 1601, 1603, 1604, 1605,
	1606, 1607, 1611, 1612, 1628, 1642, 1643, 1650, 1651, 0,
	1680, 1683, 1692, 1697, 1700, 1706, 1708, 1715, 1720, 1722,
	1759, 1767, 1772, 398, 216, 1624, 1649, 1687, 181, 190,
	201, 214, 226, 233, 244, 247, 252, 253, 255, 259,
	273, 275, 276, 277, 278, 296, 297, 301, 302, 305,
	306, 310, 311, 312, 316, 317, 324, 0, 331, 338,
	339, 340, 341, 342, 350, 351, 353, 354, 361, 389,
	390, 403, 404, 1733, 1597, 166, 0, 0, 172, 0,
	0, 0, 0, 0, 1582, 171, 1729, 1764, 1661, 1675,
	1745, 1707, 377, 1600, 1749, 1549, 1579, 1766, 1585, 1588,
	1669, 1515, 1638, 304, 1576, 1516, 1499, 1554, 1503, 1567,
	1504, 1551, 221, 1547, 1710, 1641, 1747, 1620, 1662, 1672,
	220, 208, 1630, 1629, 1735, 1565, 1564, 1667, 1724, 1746,
	1619, 0, 1756, 267, 1721, 0, 401, 359, 287, 0,
	0, 1615, 1730, 1636, 1699, 1598, 1671, 1531, 1654, 1751,
	1577, 1663, 1752, 0, 0, 0, 0, 0, 139, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1659,
	1743, 1570, 0, 1610, 1668, 1771, 1502, 1655, 0, 1507,
	1518, 1765, 1736, 1561, 1562, 225, 0, 0, 0, 0,
	0, 0, 0, 1613, 1637, 1689, 1595, 396, 1674, 1684,
	1702, 1587, 322, 240, 0, 0, 0, 0, 0, 0,
	2397, 0, 1556, 0, 1652, 0, 0, 0, 1523, 1509,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1609, 0, 0, 0, 1530, 1500, 1558, 1691,
	1501, 1498, 288, 1519, 1704, 1734, 1596, 256, 0, 1740,
	1594, 1593, 1678, 1524, 1714, 1580, 264, 1522, 165, 1517,
	1525, 1578, 299, 1688, 1696, 0, 168, 266, 1711, 1552,
	1569, 209, 0, 334, 1664, 395, 0, 236, 1645, 333,
	268, 388, 1679, 1742, 394, 1581, 371, 402, 406, 232,
	1621, 200, 356, 223, 218, 1560, 1701, 1506, 241, 321,
	213, 260, 1599, 1670, 1553, 205, 1682, 1653, 1716, 355,
	385, 170, 284, 386, 405, 188, 378, 285, 292, 202,
	204, 203, 182, 349, 384, 194, 207, 1712, 1695, 1718,
	1546, 1526, 1537, 1527, 1568, 1744, 250, 242, 1719, 1717,
	1571, 308, 191, 1634, 1627, 1614, 399, 0, 344, 343,
	1584, 249, 1698, 0, 0, 329, 0, 257, 173, 1723,
	408, 187, 262, 379, 0, 235, 298, 211, 1666, 309,
	1566, 167, 325, 280, 282, 279, 283, 239, 0, 0,
	1694, 327, 346, 383, 189, 362, 0, 0, 0, 0,
	337, 0, 0, 1750, 274, 227, 231, 243, 254, 1665,
	332, 363, 400, 1656, 184, 336, 364, 375, 365, 368,
	366, 367, 176, 370, 393, 195, 345, 348, 407, 1690,
	183, 178, 1738, 1713, 1647, 1602, 1608, 1508, 0, 177,
	1686, 1557, 1573, 1545, 1660, 1544, 238, 1677, 391, 392,
	210, 409, 1520, 1758, 179, 1521, 1757, 295, 303, 294,
	1761, 387, 1739, 1648, 1633, 1631, 1513, 1737, 1646, 1632,
	263, 230, 245, 319, 270, 320, 246, 290, 289, 291,
	272, 1635, 0, 174, 0, 360, 1748, 1773, 369, 192,
	1539, 1705, 382, 0, 326, 193, 237, 228, 318, 293,
	185, 248, 358, 261, 269, 1681, 1770, 307, 335, 199,
	397, 357, 224, 1535, 300, 1538, 1533, 1536, 1534, 1639,
	1640, 1753, 1754, 1755, 1693, 1528, 0, 1731, 1732, 0,
	1626, 1741, 1514, 0, 1709, 0, 0, 1673, 1768, 1586,
	206, 0, 1510, 1511, 1512, 0, 1616, 1617, 0, 0,
	1727, 1726, 1725, 1728, 0, 1762, 1760, 1763, 1529, 1550,
	1572, 1622, 1623, 1625, 1657, 1658, 1703, 1676, 1685, 1559,
	1618, 315, 175, 186, 198, 217, 215, 229, 258, 281,
	286, 313, 347, 352, 372, 373, 374, 376, 219, 0,
	222, 197, 330, 196, 271, 251, 314, 380, 381, 323,
	212, 1644, 169, 180, 265, 1769, 328, 234, 1497, 1505,
	1532, 1540, 1541, 1542, 1543, 1548, 1555, 1563, 1574, 1575,
	1583, 1589, 1590, 1591, 1592, 1601, 1603, 1604, 1605, 1606,
	1607, 1611, 1612, 1628, 1642, 1643, 1650, 1651, 0, 1680,
	1683, 1692, 1697, 1700, 1706, 1708, 1715, 1720, 1722, 1759,
	1767, 1772, 398, 216, 1624, 1649, 1687, 181, 190, 201,
	214, 226, 233, 244, 247, 252, 253, 255, 259, 273,
	275, 276, 277, 278, 296, 297, 301, 302, 305, 306,
	310, 311, 312, 316, 317, 324, 0, 331, 338, 339,
	340, 341, 342, 350, 351, 353, 354, 361, 389, 390,
	403, 404, 1733, 1597, 166, 0, 0, 172, 0, 0,
	0, 0, 0, 1582, 171, 1729, 1764, 1661, 1675, 1745,
	1707, 377, 1600, 1749, 1549, 1579, 1766, 1585, 1588, 1669,
	1515, 1638, 304, 1576, 1516, 1499, 1554, 1503, 1567, 1504,
	1551, 221, 1547, 1710, 1641, 1747, 1620, 1662, 1672, 220,
	208, 1630, 1629, 1735, 1565, 1564, 1667, 1724, 1746, 1619,
	0, 1756, 267, 1721, 0, 401, 359, 287, 0, 0,
	1615, 1730, 1636, 1699, 1598, 1671, 1531, 1654, 1751, 1577,
	1663, 1752, 0, 0, 0, 0, 0, 993, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1659, 1743,
	1570, 0, 1610, 1668, 1771, 1502, 1655, 0, 1507, 1518,
	1765, 1736, 1561, 1562, 225, 0, 0, 0, 0, 0,
	0, 0, 1613, 1637, 1689, 1595, 396, 1674, 1684, 1702,
	1587, 322, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 1556, 0, 1652, 0, 0, 0, 1523, 1509, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1609, 0, 0, 0, 1530, 1500, 1558, 1691, 1501,
	1498, 288, 1519, 1704, 1734, 1596, 256, 0, 1740, 1594,
	1593, 1678, 1524, 1714, 1580, 264, 1522, 165, 1517, 1525,
	1578, 299, 1688, 1696, 0, 168, 266, 1711, 1552, 1569,
	209, 0, 334, 1664, 395, 0, 236, 1645, 333, 268,
	388, 1679, 1742, 394, 1581, 371, 402, 406, 232, 1621,
	200, 356, 223, 218, 1560, 1701, 1506, 241, 321, 213,
	260, 1599, 1670, 1553, 205, 1682, 1653, 1716, 355, 385,
	170, 284, 386, 405, 188, 378, 285, 292, 202, 204,
	203, 182, 349, 384, 194, 207, 1712, 1695, 1718, 1546,
	1526, 1537, 1527, 1568, 1744, 250, 242, 1719, 1717, 1571,
	308, 191, 1634, 1627, 1614, 399, 0, 344, 343, 1584,
	249, 1698, 0, 0, 329, 0, 257, 173, 1723, 408,
	187, 262, 379, 0, 235, 298, 211, 1666, 309, 1566,
	167, 325, 280, 282, 279, 283, 239, 0, 0, 1694,
	327, 346, 383, 189, 362, 0, 0, 0, 0, 337,
	0, 0, 1750, 274, 227, 231, 243, 254, 1665, 332,
	363, 400, 1656, 184, 336, 364, 375, 365, 368, 366,
	367, 176, 370, 393, 195, 345, 348, 407, 1690, 183,
	178, 1738, 1713, 1647, 1602, 1608, 1508, 0, 177, 1686,
	1557, 1573, 1545, 1660, 1544, 238, 1677, 391, 392, 210,
	409, 1520, 1758, 179, 1521, 1757, 295, 303, 294, 1761,
	387, 1739, 1648, 1633, 1631, 1513, 1737, 1646, 1632, 263,
	230, 245, 319, 270, 320, 246, 290, 289, 291, 272,
	1635, 0, 174, 0, 360, 1748, 1773, 369, 192, 1539,
	1705, 382, 1979, 326, 193, 237, 228, 318, 293, 185,
	248, 358, 261, 269, 1681, 1770, 307, 335, 199, 397,
	357, 224, 1535, 300, 1538, 1533, 1536, 1534, 1639, 1640,
	1753, 1754, 1755, 1693, 1528, 0, 1731, 1732, 0, 1626,
	1741, 1514, 0, 1709, 0, 0, 1673, 1768, 1586, 206,
	0, 1510, 1511, 1512, 0, 1616, 1617, 0, 0, 1727,
	1726, 1725, 1728, 0, 1762, 1760, 1763, 1529, 1550, 1572,
	1622, 1623, 1625, 1657, 1658, 1703, 1676, 1685, 1559, 1618,
	315, 175, 186, 198, 217, 215, 229, 258, 281, 286,
	313, 347, 352, 372, 373, 374, 376, 219, 0, 222,
	197, 330, 196, 271, 251, 314, 380, 381, 323, 212,
	1644, 169, 180, 265, 1769, 328, 234, 1497, 1505, 1532,
	1540, 1541, 1542, 1543, 1548, 1555, 1563, 1574, 1575, 1583,
	1589, 1590, 1591, 1592, 1601, 1603, 1604, 1605, 1606, 1607,
	1611, 1612, 1628, 1642, 1643, 1650, 1651, 0, 1680, 1683,
	1692, 1697, 1700, 1706, 1708, 1715, 1720, 1722, 1759, 1767,
	1772, 398, 216, 1624, 1649, 1687, 181, 190, 201, 214,
	226, 233, 244, 247, 252, 253, 255, 259, 273, 275,
	276, 277, 278, 296, 297, 301, 302, 305, 306, 310,
	311, 312, 316, 317, 324, 0, 331, 338, 339, 340,
	341, 342, 350, 351, 353, 354, 361, 389, 390, 403,
	404, 1733, 1597, 166, 0, 0, 172, 0, 0, 0,
	0, 0, 1582, 171, 1729, 1764, 1661, 1675, 1745, 1707,
	377, 1600, 1749, 1549, 1579, 1766, 1585, 1588, 1669, 1515,
	1638, 304, 1576, 1516, 1499, 1554, 1503, 1567, 1504, 1551,
	221, 1547, 1710, 1641, 1747, 1620, 1662, 1672, 220, 208,
	1630, 1629, 1735, 1565, 1564, 1667, 1724, 1746, 1619, 0,
	1756, 267, 1721, 0, 401, 359, 287, 0, 0, 1615,
	1730, 1636, 1699, 1598, 1671, 1531, 1654, 1751, 1577, 1663,
	1752, 0, 0, 0, 0, 0, 993, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1659, 1743, 1570,
	0, 1610, 1668, 1771, 1502, 1655, 0, 1507, 1518, 1765,
	1736, 1561, 1562, 225, 0, 0, 0, 0, 0, 0,
	0, 1613, 1637, 1689, 1595, 396, 1674, 1684, 1702, 1587,
	322, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	1556, 0, 1652, 0, 0, 0, 1523, 1509, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1609, 0, 0, 0, 1530, 1500, 1558, 1691, 1501, 1498,
	288, 1519, 1704, 1734, 1596, 256, 0, 1740, 1594, 1593,
	1678, 1524, 1714, 1580, 264, 1522, 165, 1517, 1525, 1578,
	299, 1688, 1696, 0, 168, 266, 1711, 1552, 1569, 209,
	0, 334, 1664, 395, 0, 236, 1645, 333, 268, 388,
	1679, 1742, 394, 1581, 371, 402, 406, 232, 1621, 200,
	356, 223, 218, 1560, 1701, 1506, 241, 321, 213, 260,
	1599, 1670, 1553, 205, 1682, 1653, 1716, 355, 385, 170,
	284, 386, 405, 188, 378, 285, 292, 202, 204, 203,
	182, 349, 384, 194, 207, 1712, 1695, 1718, 1546, 1526,
	1537, 1527, 1568, 1744, 250, 242, 1719, 1717, 1571, 308,
	191, 1634, 1627, 1614, 399, 0, 344, 343, 1584, 249,
	1698, 0, 0, 329, 0, 257, 173, 1723, 408, 187,
	262, 379, 0, 235, 298, 211, 1666, 309, 1566, 167,
	325, 280, 282, 279, 283, 239, 0, 0, 1694, 327,
	346, 383, 189, 362, 0, 0, 0, 0, 337, 0,
	0, 1750, 274, 227, 231, 243, 254, 1665, 332, 363,
	400, 1656, 184, 336, 364, 375, 365, 368, 366, 367,
	176, 370, 393, 195, 345, 348, 407, 1690, 183, 178,
	1738, 1713, 1647, 1602, 1608, 1508, 0, 177, 1686, 1557,
	1573, 1545, 1660, 1544, 238, 1677, 391, 392, 210, 409,
	1520, 1758, 179, 1521, 1757, 295, 303, 294, 1761, 387,
	1739, 1648, 1633, 1631, 1513, 1737, 1646, 1632, 263, 230,
	245, 319, 270, 320, 246, 290, 289, 291, 272, 1635,
	0, 174, 0, 360, 1748, 1773, 369, 192, 1539, 1705,
	382, 0, 326, 193, 237, 228, 318, 293, 185, 248,
	358, 261, 269, 1681, 1770, 307, 335, 199, 397, 357,
	224, 1535, 300, 1538, 1533, 1536, 1534, 1639, 1640, 1753,
	1754, 1755, 1693, 1528, 0, 1731, 1732, 0, 1626, 1741,
	1514, 0, 1709, 0, 0, 1673, 1768, 1586, 206, 0,
	1510, 1511, 1512, 0, 1616, 1617, 0, 0, 1727, 1726,
	1725, 1728, 0, 1762, 1760, 1763, 1529, 1550, 1572, 1622,
	1623, 1625, 1657, 1658, 1703, 1676, 1685, 1559, 1618, 315,
	175, 186, 198, 217, 215, 229, 258, 281, 286, 313,
	347, 352, 372, 373, 374, 376, 219, 0, 222, 197,
	330, 196, 271, 251, 314, 380, 381, 323, 212, 1644,
	169, 180, 265, 1769, 328, 234, 1497, 1505, 1532, 1540,
	1541, 1542, 1543, 1548, 1555, 1563, 1574, 1575, 1583, 1589,
	1590, 1591, 1592, 1601, 1603, 1604, 1605, 1606, 1607, 1611,
	1612, 1628, 1642, 1643, 1650, 1651, 0, 1680, 1683, 1692,
	1697, 1700, 1706, 1708, 1715, 1720, 1722, 1759, 1767, 1772,
	398, 216, 1624, 1649, 1687, 181, 190, 201, 214, 226,
	233, 244, 247, 252, 253, 255, 259, 273, 275, 276,
	277, 278, 296, 297, 301, 302, 305, 306, 310, 311,
	312, 316, 317, 324, 0, 331, 338, 339, 340, 341,
	342, 350, 351, 353, 354, 361, 389, 390, 403, 404,
	1733, 1597, 166, 0, 0, 172, 0, 0, 0, 0,
	0, 1582, 171, 1729, 1764, 1661, 1675, 1745, 1707, 377,
	1600, 1749, 1549, 1579, 1766, 1585, 1588, 1669, 1515, 1638,
	304, 1576, 1516, 1499, 1554, 1503, 1567, 1504, 1551, 221,
	1547, 1710, 1641, 1747, 1620, 1662, 1672, 220, 208, 1630,
	1629, 1735, 1565, 1564, 1667, 1724, 1746, 1619, 0, 1756,
	267, 1721, 0, 401, 359, 287, 0, 0, 1615, 1730,
	1636, 1699, 1598, 1671, 1531, 1654, 1751, 1577, 1663, 1752,
	0, 0, 0, 0, 0, 3520, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1659, 1743, 1570, 0,
	1610, 1668, 1771, 1502, 1655, 0, 1507, 1518, 1765, 1736,
	1561, 1562, 225, 0, 0, 0, 0, 0, 0, 0,
	1613, 1637, 1689, 1595, 396, 1674, 1684, 1702, 1587, 322,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 1556,
	0, 1652, 0, 0, 0, 1523, 1509, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1609,
	0, 0, 0, 1530, 1500, 1558, 1691, 1501, 1498, 288,
	1519, 1704, 1734, 1596, 256, 0, 1740, 1594, 1593, 1678,
	1524, 1714, 1580, 264, 1522, 165, 1517, 1525, 1578, 299,
	1688, 1696, 0, 168, 266, 1711, 1552, 1569, 209, 0,
	334, 1664, 395, 0, 236, 1645, 333, 268, 388, 1679,
	1742, 394, 1581, 371, 402, 406, 232, 1621, 200, 356,
	223, 218, 1560, 1701, 1506, 241, 321, 213, 260, 1599,
	1670, 1553, 205, 1682, 1653, 1716, 355, 385, 170, 284,
	386, 405, 188, 378, 285, 292, 202, 204, 203, 182,
	349, 384, 194, 207, 1712, 1695, 1718, 1546, 1526, 1537,
	3523, 3524, 3525, 250, 242, 1719, 1717, 1571, 308, 191,
	1634, 1627, 1614, 399, 0, 344, 343, 1584, 249, 1698,
	0, 0, 329, 0, 257, 173, 1723, 408, 187, 262,
	379, 0, 235, 298, 211, 1666, 309, 1566, 167, 325,
	280, 282, 279, 283, 239, 0, 0, 1694, 327, 346,
	383, 189, 362, 0, 0, 0, 0, 337, 0, 0,
	1750, 274, 227, 231, 243, 254, 1665, 332, 363, 400,
	1656, 184, 336, 364, 375, 365, 368, 366, 367, 176,
	370, 393, 195, 345, 348, 407, 1690, 183, 178, 1738,
	1713, 1647, 1602, 1608, 1508, 0, 177, 1686, 1557, 1573,
	1545, 1660, 1544, 238, 1677, 391, 392, 210, 409, 1520,
	1758, 179, 1521, 1757, 295, 303, 294, 1761, 387, 1739,
	1648, 1633, 1631, 1513, 1737, 1646, 1632, 263, 230, 245,
	319, 270, 320, 246, 290, 289, 291, 272, 1635, 0,
	174, 0, 360, 1748, 1773, 369, 192, 1539, 1705, 382,
	0, 326, 193, 237, 228, 318, 293, 185, 248, 358,
	261, 269, 1681, 1770, 307, 335, 199, 397, 357, 224,
	1535, 300, 1538, 1533, 1536, 1534, 1639, 1640, 1753, 1754,
	1755, 1693, 1528, 0, 1731, 1732, 0, 1626, 1741, 1514,
	0, 1709, 0, 0, 1673, 1768, 1586, 206, 0, 1510,
	1511, 1512, 0, 1616, 1617, 0, 0, 1727, 1726, 1725,
	1728, 0, 1762, 1760, 1763, 1529, 1550, 1572, 1622, 1623,
	1625, 1657, 1658, 1703, 1676, 1685, 1559, 1618, 315, 175,
	186, 198, 217, 215, 229, 258, 281, 286, 313, 347,
	352, 372, 373, 374, 376, 219, 0, 222, 197, 330,
	196, 271, 251, 314, 380, 381, 323, 212, 1644, 169,
	180, 265, 1769, 328, 234, 1497, 1505, 1532, 1540, 1541,
	1542, 1543, 1548, 1555, 1563, 1574, 1575, 1583, 1589, 1590,
	1591, 1592, 1601, 1603, 1604, 1605, 1606, 1607, 1611, 1612,
	1628, 1642, 1643, 1650, 1651, 0, 1680, 1683, 1692, 1697,
	1700, 1706, 1708, 1715, 1720, 1722, 1759, 1767, 1772, 398,
	216, 1624, 1649, 1687, 181, 190, 201, 214, 226, 233,
	244, 247, 252, 253, 255, 259, 273, 275, 276, 277,
	278, 296, 297, 301, 302, 305, 306, 310, 311, 312,
	316, 317, 324, 0, 331, 338, 339, 340, 341, 342,
	350, 351, 353, 354, 361, 389, 390, 403, 404, 1733,
	1597, 166, 0, 0, 172, 0, 0, 0, 0, 0,
	1582, 171, 1729, 1764, 1661, 1675, 1745, 1707, 377, 1600,
	1749, 1549, 1579, 1766, 1585, 1588, 1669, 1515, 1638, 304,
	1576, 1516, 1499, 1554, 1503, 1567, 1504, 1551, 221, 1547,
	1710, 1641, 1747, 1620, 1662, 1672, 220, 208, 1630, 1629,
	1735, 1565, 1564, 1667, 1724, 1746, 1619, 0, 1756, 267,
	1721, 0, 401, 359, 287, 0, 0, 1615, 1730, 1636,
	1699, 1598, 1671, 1531, 1654, 1751, 1577, 1663, 1752, 0,
	0, 0, 0, 0, 2756, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1659, 1743, 1570, 0, 1610,
	1668, 1771, 1502, 1655, 0, 1507, 1518, 1765, 1736, 1561,
	1562, 225, 0, 0, 0, 0, 0, 0, 0, 1613,
	1637, 1689, 1595, 396, 1674, 1684, 1702, 1587, 322, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 1556, 0,
	1652, 0, 0, 0, 1523, 1509, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1609, 0,
	0, 0, 1530, 1500, 1558, 1691, 1501, 1498, 288, 1519,
	1704, 1734, 1596, 256, 0, 1740, 1594, 1593, 1678, 1524,
	1714, 1580, 264, 1522, 165, 1517, 1525, 1578, 299, 1688,
	1696, 0, 168, 266, 1711, 1552, 1569, 209, 0, 334,
	1664, 395, 0, 236, 1645, 333, 268, 388, 1679, 1742,
	394, 1581, 371, 402, 406, 232, 1621, 200, 356, 223,
	218, 1560, 1701, 1506, 241, 321, 213, 260, 1599, 1670,
	1553, 205, 1682, 1653, 1716, 355, 385, 170, 284, 386,
	405, 188, 378, 285, 292, 202, 204, 203, 182, 349,
	384, 194, 207, 1712, 1695, 1718, 1546, 1526, 1537, 1527,
	1568, 1744, 250, 242, 1719, 1717, 1571, 308, 191, 1634,
	1627, 1614, 399, 0, 344, 343, 1584, 249, 1698, 0,
	0, 329, 0, 257, 173, 1723, 408, 187, 262, 379,
	0, 235, 298, 211, 1666, 309, 1566, 167, 325, 280,
	282, 279, 283, 239, 0, 0, 1694, 327, 346, 383,
	189, 362, 0, 0, 0, 0, 337, 0, 0, 1750,
	274, 227, 231, 243, 254, 1665, 332, 363, 400, 1656,
	184, 336, 364, 375, 365, 368, 366, 367, 176, 370,
	393, 195, 345, 348, 407, 1690, 183, 178, 1738, 1713,
	1647, 1602, 1608, 1508, 0, 177, 1686, 1557, 1573, 1545,
	1660, 1544, 238, 1677, 391, 392, 210, 409, 1520, 1758,
	179, 1521, 1757, 295, 303, 294, 1761, 387, 1739, 1648,
	1633, 1631, 1513, 1737, 1646, 1632, 263, 230, 245, 319,
	270, 320, 246, 290, 289, 291, 272, 1635, 0, 174,
	0, 360, 1748, 1773, 369, 192, 1539, 1705, 382, 0,
	326, 193, 237, 228, 318, 293, 185, 248, 358, 261,
	269, 1681, 1770, 307, 335, 199, 397, 357, 224, 1535,
	300, 1538, 1533, 1536, 1534, 1639, 1640, 1753, 1754, 1755,
	1693, 1528, 0, 1731, 1732, 0, 1626, 1741, 1514, 0,
	1709, 0, 0, 1673, 1768, 1586, 206, 0, 1510, 1511,
	1512, 0, 1616, 1617, 0, 0, 1727, 1726, 1725, 1728,
	0, 1762, 1760, 1763, 1529, 1550, 1572, 1622, 1623, 1625,
	1657, 1658, 1703, 1676, 1685, 1559, 1618, 315, 175, 186,
	198, 217, 215, 229, 258, 281, 286, 313, 347, 352,
	372, 373, 374, 376, 219, 0, 222, 197, 330, 196,
	271, 251, 314, 380, 381, 323, 212, 1644, 169, 180,
	265, 1769, 328, 234, 1497, 1505, 1532, 1540, 1541, 1542,
	1543, 1548, 1555, 1563, 1574, 1575, 1583, 1589, 1590, 1591,
	1592, 1601, 1603, 1604, 1605, 1606, 1607, 1611, 1612, 1628,
	1642, 1643, 1650, 1651, 0, 1680, 1683, 1692, 1697, 1700,
	1706, 1708, 1715, 1720, 1722, 1759, 1767, 1772, 398, 216,
	1624, 1649, 1687, 181, 190, 201, 214, 226, 233, 244,
	247, 252, 253, 255, 259, 273, 275, 276, 277, 278,
	296, 297, 301, 302, 305, 306, 310, 311, 312, 316,
	317, 324, 0, 331, 338, 339, 340, 341, 342, 350,
	351, 353, 354, 361, 389, 390, 403, 404, 1733, 1597,
	166, 0, 0, 172, 0, 0, 0, 0, 0, 1582,
	171, 1729, 1764, 1661, 1675, 1745, 1707, 377, 1600, 1749,
	1549, 1579, 1766, 1585, 1588, 1669, 1515, 1638, 304, 1576,
	1516, 1499, 1554, 1503, 1567, 1504, 1551, 221, 1547, 1710,
	1641, 1747, 1620, 1662, 1672, 220, 208, 1630, 1629, 1735,
	1565, 1564, 1667, 1724, 1746, 1619, 0, 1756, 267, 1721,
	0, 401, 359, 287, 0, 0, 1615, 1730, 1636, 1699,
	1598, 1671, 1531, 1654, 1751, 1577, 1663, 1752, 0, 0,
	0, 0, 0, 139, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1659, 1743, 1570, 0, 1610, 1668,
	1771, 1502, 1655, 0, 1507, 1518, 1765, 1736, 1561, 1562,
	225, 0, 0, 0, 0, 0, 0, 0, 1613, 1637,
	1689, 1595, 396, 1674, 1684, 1702, 1587, 322, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 1556, 0, 1652,
	0, 0, 0, 1523, 1509, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1609, 0, 0,
	0, 1530, 1500, 1558, 1691, 1501, 1498, 288, 1519, 1704,
	1734, 1596, 256, 0, 1740, 1594, 1593, 1678, 1524, 1714,
	1580, 264, 1522, 165, 1517, 1525, 1578, 299, 1688, 1696,
	0, 168, 266, 1711, 1552, 1569, 209, 0, 334, 1664,
	395, 0, 236, 1645, 333, 268, 388, 1679, 1742, 394,
	1581, 371, 402, 406, 232, 1621, 200, 356, 223, 218,
	1560, 1701, 1506, 241, 321, 213, 260, 1599, 1670, 1553,
	205, 1682, 1653, 1716, 355, 385, 170, 284, 386, 405,
	188, 378, 285, 292, 202, 204, 203, 182, 349, 384,
	194, 207, 1712, 1695, 1718, 1546, 1526, 1537, 1527, 1568,
	1744, 250, 242, 1719, 1717, 1571, 308, 191, 1634, 1627,
	1614, 399, 0, 344, 343, 1584, 249, 1698, 0, 0,
	329, 0, 257, 173, 1723, 408, 187, 262, 379, 0,
	235, 298, 211, 1666, 309, 1566, 167, 325, 280, 282,
	279, 283, 239, 0, 0, 1694, 327, 346, 383, 189,
	362, 0, 0, 0, 0, 337, 0, 0, 1750, 274,
	227, 231, 243, 254, 1665, 332, 363, 400, 1656, 184,
	336, 364, 375, 365, 368, 366, 367, 176, 370, 393,
	195, 345, 348, 407, 1690, 183, 178, 1738, 1713, 1647,
	1602, 1608, 1508, 0, 177, 1686, 1557, 1573, 1545, 1660,
	1544, 238, 1677, 391, 392, 210, 409, 1520, 1758, 179,
	1521, 1757, 295, 303, 294, 1761, 387, 1739, 1648, 1633,
	1631, 1513, 1737, 1646, 1632, 263, 230, 245, 319, 270,
	320, 246, 290, 289, 291, 272, 1635, 0, 174, 0,
	360, 1748, 1773, 369, 192, 1539, 1705, 382, 0, 326,
	193, 237, 228, 318, 293, 185, 248, 358, 261, 269,
	1681, 1770, 307, 335, 199, 397, 357, 224, 1535, 300,
	1538, 1533, 1536, 1534, 1639, 1640, 1753, 1754, 1755, 1693,
	1528, 0, 1731, 1732, 0, 1626, 1741, 1514, 0, 1709,
	0, 0, 1673, 1768, 1586, 206, 0, 1510, 1511, 1512,
	0, 1616, 1617, 0, 0, 1727, 1726, 1725, 1728, 0,
	1762, 1760, 1763, 1529, 1550, 1572, 1622, 1623, 1625, 1657,
	1658, 1703, 1676, 1685, 1559, 1618, 315, 175, 186, 198,
	217, 215, 229, 258, 281, 286, 313, 347, 352, 372,
	373, 374, 376, 219, 0, 222, 197, 330, 196, 271,
	251, 314, 380, 381, 323, 212, 1644, 169, 180, 265,
	1769, 328, 234, 1497, 1505, 1532, 1540, 1541, 1542, 1543,
	1548, 1555, 1563, 1574, 1575, 1583, 1589, 1590, 1591, 1592,
	1601, 1603, 1604, 1605, 1606, 1607, 1611, 1612, 1628, 1642,
	1643, 1650, 1651, 0, 1680, 1683, 1692, 1697, 1700, 1706,
	1708, 1715, 1720, 1722, 1759, 1767, 1772, 398, 216, 1624,
	1649, 1687, 181, 190, 201, 214, 226, 233, 244, 247,
	252, 253, 255, 259, 273, 275, 276, 277, 278, 296,
	297, 301, 302, 305, 306, 310, 311, 312, 316, 317,
	324, 0, 331, 338, 339, 340, 341, 342, 350, 351,
	353, 354, 361, 389, 390, 403, 404, 1733, 1597, 166,
	0, 0, 172, 377, 0, 0, 0, 0, 1582, 171,
	1729, 1764, 1661, 1675, 304, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	0, 220, 208, 0, 0, 0, 0, 0, 0, 0,
	2100, 2104, 0, 0, 267, 0, 997, 401, 359, 287,
	1000, 999, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 993,
	0, 0, 0, 0, 0, 0, 0, 0, 147, 0,
	0, 0, 0, 998, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 396, 0,
	0, 0, 0, 322, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 0, 0, 2103, 256, 164,
	0, 0, 0, 2097, 0, 2098, 2099, 264, 1001, 165,
	0, 2095, 2102, 299, 0, 0, 152, 168, 266, 0,
	0, 0, 209, 990, 334, 0, 395, 996, 236, 0,
	333, 268, 388, 0, 0, 394, 0, 371, 402, 406,
	232, 0, 200, 356, 223, 218, 0, 0, 0, 241,
	321, 213, 260, 0, 0, 0, 205, 0, 0, 0,
	355, 385, 170, 284, 386, 405, 188, 378, 285, 292,
	202, 204, 203, 182, 349, 384, 194, 207, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 242, 0,
	0, 0, 308, 191, 0, 0, 0, 399, 154, 344,
	343, 0, 249, 0, 155, 146, 329, 156, 257, 173,
	0, 408, 187, 262, 379, 995, 235, 298, 211, 0,
	309, 0, 167, 325, 280, 282, 279, 283, 239, 150,
	157, 0, 327, 346, 383, 189, 362, 148, 149, 151,
	159, 337, 160, 161, 0, 274, 227, 231, 243, 254,
	0, 332, 363, 400, 0, 184, 336, 364, 375, 365,
	368, 366, 367, 176, 370, 393, 195, 345, 348, 407,
	0, 183, 178, 0, 0, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 0, 0, 238, 0, 391,
	392, 210, 409, 0, 0, 179, 0, 0, 295, 303,
	294, 0, 387, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 230, 245, 319, 270, 320, 246, 290, 289,
	291, 272, 0, 0, 174, 0, 360, 0, 0, 369,
	192, 0, 0, 382, 153, 326, 193, 237, 228, 318,
	293, 185, 248, 358, 261, 269, 0, 0, 307, 335,
	199, 397, 357, 224, 0, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 162, 163, 0, 0,
	0, 206, 141, 0, 0, 0, 142, 0, 0, 143,
	144, 0, 0, 0, 0, 145, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 175, 186, 198, 217, 215, 229, 258,
	281, 286, 313, 347, 352, 372, 373, 374, 376, 219,
	0, 222, 197, 330, 196, 271, 251, 314, 380, 381,
	323, 212, 0, 169, 180, 265, 0, 328, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 398, 216, 0, 0, 0, 181, 190,
	201, 214, 226, 233, 244, 247, 252, 253, 255, 259,
	273, 275, 276, 277, 278, 296, 297, 301, 302, 305,
	306, 310, 311, 312, 316, 317, 324, 158, 331, 338,
	339, 340, 341, 342, 350, 351, 353, 354, 361, 389,
	390, 403, 404, 377, 0, 166, 0, 0, 172, 0,
	0, 0, 0, 0, 304, 171, 0, 0, 0, 1233,
	0, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	0, 220, 208, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 997, 401, 359, 287,
	1000, 999, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1234,
	0, 1237, 0, 0, 0, 0, 0, 0, 147, 0,
	0, 0, 0, 998, 0, 1229, 1230, 1228, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 1231, 0, 0, 0, 396, 0,
	0, 0, 0, 322, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 0, 0, 0, 256, 164,
	0, 0, 0, 0, 0, 0, 0, 264, 0, 165,
	0, 0, 0, 299, 0, 0, 152, 168, 266, 0,
	0, 0, 209, 0, 334, 0, 395, 996, 236, 0,
	333, 268, 388, 0, 0, 394, 0, 371, 402, 406,
	232, 0, 200, 356, 223, 218, 0, 0, 0, 241,
	321, 213, 260, 0, 0, 0, 205, 0, 0, 0,
	355, 385, 170, 284, 386, 405, 188, 378, 285, 292,
	202, 204, 203, 182, 349, 384, 194, 207, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 242, 0,
	0, 0, 308, 191, 0, 0, 0, 399, 154, 344,
	343, 0, 249, 0, 155, 146, 329, 156, 257, 173,
	0, 408, 187, 262, 379, 995, 235, 298, 211, 0,
	309, 0, 167, 325, 280, 282, 279, 283, 239, 150,
	157, 0, 327, 346, 383, 189, 362, 148, 149, 151,
	159, 337, 160, 161, 0, 274, 227, 231, 243, 254,
	0, 332, 363, 400, 0, 184, 336, 364, 375, 365,
	368, 366, 367, 176, 370, 393, 195, 345, 348, 407,
	0, 183, 178, 0, 0, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 0, 0, 238, 0, 391,
	392, 210, 409, 0, 0, 179, 0, 0, 295, 303,
	294, 0, 387, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 230, 245, 319, 270, 320, 246, 290, 289,
	291, 272, 0, 0, 174, 0, 360, 0, 0, 369,
	192, 0, 0, 382, 153, 326, 193, 237, 228, 318,
	293, 185, 248, 358, 261, 269, 0, 0, 307, 335,
	199, 397, 357, 224, 0, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 162, 163, 0, 0,
	0, 206, 141, 0, 0, 0, 142, 0, 0, 143,
	144, 0, 0, 0, 0, 145, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 175, 186, 198, 217, 215, 229, 258,
	281, 286, 313, 347, 352, 372, 373, 374, 376, 219,
	0, 222, 197, 330, 196, 271, 251, 314, 380, 381,
	323, 212, 0, 169, 180, 265, 0, 328, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 398, 216, 0, 0, 0, 181, 190,
	201, 214, 226, 233, 244, 247, 252, 253, 255, 259,
	273, 275, 276, 277, 278, 296, 297, 301, 302, 305,
	306, 310, 311, 312, 316, 317, 324, 158, 331, 338,
	339, 340, 341, 342, 350, 351, 353, 354, 361, 389,
	390, 403, 404, 377, 0, 166, 0, 0, 172, 0,
	0, 0, 0, 0, 304, 171, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	0, 220, 208, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 997, 401, 359, 287,
	1000, 999, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 993,
	0, 0, 0, 0, 0, 0, 0, 0, 147, 0,
	0, 0, 0, 998, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 396, 0,
	0, 0, 0, 322, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 0, 0, 0, 256, 164,
	0, 0, 0, 0, 0, 0, 0, 264, 1001, 165,
	0, 991, 0, 299, 0, 0, 152, 168, 266, 0,
	0, 0, 209, 990, 334, 0, 395, 996, 236, 0,
	333, 268, 388, 0, 0, 394, 0, 371, 402, 406,
	232, 0, 200, 356, 223, 218, 0, 0, 0, 241,
	321, 213, 260, 0, 0, 0, 205, 0, 0, 0,
	355, 385, 170, 284, 386, 405, 188, 378, 285, 292,
	202, 204, 203, 182, 349, 384, 194, 207, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 242, 0,
	0, 0, 308, 191, 0, 0, 0, 399, 154, 344,
	343, 0, 249, 0, 155, 146, 329, 156, 257, 173,
	0, 408, 187, 262, 379, 995, 235, 298, 211, 0,
	309, 0, 167, 325, 280, 282, 279, 283, 239, 150,
	157, 0, 327, 346, 383, 189, 362, 148, 149, 151,
	159, 337, 160, 161, 0, 274, 227, 231, 243, 254,
	0, 332, 363, 400, 0, 184, 336, 364, 375, 365,
	368, 366, 367, 176, 370, 393, 195, 345, 348, 407,
	0, 183, 178, 0, 0, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 0, 0, 238, 0, 391,
	392, 210, 409, 0, 0, 179, 0, 0, 295, 303,
	294, 0, 387, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 230, 245, 319, 270, 320, 246, 290, 289,
	291, 272, 0, 0, 174, 0, 360, 0, 0, 369,
	192, 0, 0, 382, 153, 326, 193, 237, 228, 318,
	293, 185, 248, 358, 261, 269, 0, 0, 307, 335,
	199, 397, 357, 224, 0, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 162, 163, 0, 0,
	0, 206, 141, 0, 0, 0, 142, 0, 0, 143,
	144, 0, 0, 0, 0, 145, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 175, 186, 198, 217, 215, 229, 258,
	281, 286, 313, 347, 352, 372, 373, 374, 376, 219,
	0, 222, 197, 330, 196, 271, 251, 314, 380, 381,
	323, 212, 0, 169, 180, 265, 0, 328, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 398, 216, 0, 0, 0, 181, 190,
	201, 214, 226, 233, 244, 247, 252, 253, 255, 259,
	273, 275, 276, 277, 278, 296, 297, 301, 302, 305,
	306, 310, 311, 312, 316, 317, 324, 158, 331, 338,
	339, 340, 341, 342, 350, 351, 353, 354, 361, 389,
	390, 403, 404, 377, 0, 166, 0, 0, 172, 0,
	0, 0, 0, 0, 304, 171, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	0, 220, 208, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 997, 401, 359, 287,
	1000, 999, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1234,
	0, 1237, 0, 0, 0, 0, 0, 0, 147, 0,
	0, 0, 0, 998, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 396, 0,
	0, 0, 0, 322, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 0, 0, 0, 256, 164,
	0, 0, 0, 0, 0, 0, 0, 264, 0, 165,
	0, 0, 0, 299, 0, 0, 152, 168, 266, 0,
	0, 0, 209, 1928, 334, 0, 395, 996, 236, 0,
	333, 268, 388, 0, 0, 394, 0, 371, 402, 406,
	232, 0, 200, 356, 223, 218, 0, 0, 0, 241,
	321, 213, 260, 0, 0, 0, 205, 0, 0, 0,
	355, 385, 170, 284, 386, 405, 188, 378, 285, 292,
	202, 204, 203, 182, 349, 384, 194, 207, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 242, 0,
	0, 0, 308, 191, 0, 0, 0, 399, 154, 344,
	343, 0, 249, 0, 155, 146, 329, 156, 257, 173,
	0, 408, 187, 262, 379, 995, 235, 298, 211, 0,
	309, 0, 167, 325, 280, 282, 279, 283, 239, 150,
	157, 0, 327, 346, 383, 189, 362, 148, 149, 151,
	159, 337, 160, 161, 0, 274, 227, 231, 243, 254,
	0, 332, 363, 400, 0, 184, 336, 364, 375, 365,
	368, 366, 367, 176, 370, 393, 195, 345, 348, 407,
	0, 183, 178, 0, 0, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 0, 0, 238, 0, 391,
	392, 210, 409, 0, 0, 179, 0, 0, 295, 303,
	294, 0, 387, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 230, 245, 319, 270, 320, 246, 290, 289,
	291, 272, 0, 0, 174, 0, 360, 0, 0, 369,
	192, 0, 0, 382, 153, 326, 193, 237, 228, 318,
	293, 185, 248, 358, 261, 269, 0, 0, 307, 335,
	199, 397, 357, 224, 0, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 162, 163, 0, 0,
	0, 206, 141, 0, 0, 0, 142, 0, 0, 143,
	144, 0, 0, 0, 0, 145, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 175, 186, 198, 217, 215, 229, 258,
	281, 286, 313, 347, 352, 372, 373, 374, 376, 219,
	0, 222, 197, 330, 196, 271, 251, 314, 380, 381,
	323, 212, 0, 169, 180, 265, 0, 328, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 398, 216, 0, 0, 0, 181, 190,
	201, 214, 226, 233, 244, 247, 252, 253, 255, 259,
	273, 275, 276, 277, 278, 296, 297, 301, 302, 305,
	306, 310, 311, 312, 316, 317, 324, 158, 331, 338,
	339, 340, 341, 342, 350, 351, 353, 354, 361, 389,
	390, 403, 404, 377, 0, 166, 0, 0, 172, 0,
	0, 0, 0, 0, 304, 171, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	0, 220, 208, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 997, 401, 359, 287,
	1000, 999, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2876,
	0, 0, 0, 0, 0, 0, 0, 0, 147, 0,
	0, 0, 0, 998, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 396, 0,
	0, 0, 0, 322, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 0, 0, 0, 256, 164,
	0, 0, 0, 0, 0, 0, 0, 264, 0, 165,
	0, 0, 0, 299, 0, 0, 152, 168, 266, 0,
	0, 0, 209, 0, 334, 0, 395, 996, 236, 0,
	333, 268, 388, 0, 0, 394, 0, 371, 402, 406,
	232, 0, 200, 356, 223, 218, 0, 0, 0, 241,
	321, 213, 260, 0, 0, 0, 205, 0, 0, 0,
	355, 385, 170, 284, 386, 405, 188, 378, 285, 292,
	202, 204, 203, 182, 349, 384, 194, 207, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 242, 0,
	0, 0, 308, 191, 0, 0, 0, 399, 154, 344,
	343, 0, 249, 0, 155, 146, 329, 156, 257, 173,
	0, 408, 187, 262, 379, 995, 235, 298, 211, 0,
	309, 0, 167, 325, 280, 282, 279, 283, 239, 150,
	157, 0, 327, 346, 383, 189, 362, 148, 149, 151,
	159, 337, 160, 161, 0, 274, 227, 231, 243, 254,
	0, 332, 363, 400, 0, 184, 336, 364, 375, 365,
	368, 366, 367, 176, 370, 393, 195, 345, 348, 407,
	0, 183, 178, 0, 0, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 0, 0, 238, 0, 391,
	392, 210, 409, 0, 0, 179, 0, 0, 295, 303,
	294, 0, 387, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 230, 245, 319, 270, 320, 246, 290, 289,
	291, 272, 0, 0, 174, 0, 360, 0, 0, 369,
	192, 0, 0, 382, 153, 326, 193, 237, 228, 318,
	293, 185, 248, 358, 261, 269, 0, 0, 307, 335,
	199, 397, 357, 224, 0, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 162, 163, 0, 0,
	0, 206, 141, 0, 0, 0, 142, 0, 0, 143,
	144, 0, 0, 0, 0, 145, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 175, 186, 198, 217, 215, 229, 258,
	281, 286, 313, 347, 352, 372, 373, 374, 376, 219,
	0, 222, 197, 330, 196, 271, 251, 314, 380, 381,
	323, 212, 0, 169, 180, 265, 0, 328, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 398, 216, 0, 0, 0, 181, 190,
	201, 214, 226, 233, 244, 247, 252, 253, 255, 259,
	273, 275, 276, 277, 278, 296, 297, 301, 302, 305,
	306, 310, 311, 312, 316, 317, 324, 158, 331, 338,
	339, 340, 341, 342, 350, 351, 353, 354, 361, 389,
	390, 403, 404, 377, 0, 166, 0, 0, 172, 0,
	0, 0, 0, 0, 304, 171, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	0, 220, 208, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 997, 401, 359, 287,
	1000, 999, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2871,
	0, 0, 0, 0, 0, 0, 0, 0, 147, 0,
	0, 0, 0, 998, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 396, 0,
	0, 0, 0, 322, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 0, 0, 0, 256, 164,
	0, 0, 0, 0, 0, 0, 0, 264, 0, 165,
	0, 0, 0, 299, 0, 0, 152, 168, 266, 0,
	0, 0, 209, 0, 334, 0, 395, 996, 236, 0,
	333, 268, 388, 0, 0, 394, 0, 371, 402, 406,
	232, 0, 200, 356, 223, 218, 0, 0, 0, 241,
	321, 213, 260, 0, 0, 0, 205, 0, 0, 0,
	355, 385, 170, 284, 386, 405, 188, 378, 285, 292,
	202, 204, 203, 182, 349, 384, 194, 207, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 242, 0,
	0, 0, 308, 191, 0, 0, 0, 399, 154, 344,
	343, 0, 249, 0, 155, 146, 329, 156, 257, 173,
	0, 408, 187, 262, 379, 995, 235, 298, 211, 0,
	309, 0, 167, 325, 280, 282, 279, 283, 239, 150,
	157, 0, 327, 346, 383, 189, 362, 148, 149, 151,
	159, 337, 160, 161, 0, 274, 227, 231, 243, 254,
	0, 332, 363, 400, 0, 184, 336, 364, 375, 365,
	368, 366, 367, 176, 370, 393, 195, 345, 348, 407,
	0, 183, 178, 0, 0, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 0, 0, 238, 0, 391,
	392, 210, 409, 0, 0, 179, 0, 0, 295, 303,
	294, 0, 387, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 230, 245, 319, 270, 320, 246, 290, 289,
	291, 272, 0, 0, 174, 0, 360, 0, 0, 369,
	192, 0, 0, 382, 153, 326, 193, 237, 228, 318,
	293, 185, 248, 358, 261, 269, 0, 0, 307, 335,
	199, 397, 357, 224, 0, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 162, 163, 0, 0,
	0, 206, 141, 0, 0, 0, 142, 0, 0, 143,
	144, 0, 0, 0, 0, 145, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 175, 186, 198, 217, 215, 229, 258,
	281, 286, 313, 347, 352, 372, 373, 374, 376, 219,
	0, 222, 197, 330, 196, 271, 251, 314, 380, 381,
	323, 212, 0, 169, 180, 265, 0, 328, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 398, 216, 0, 0, 0, 181, 190,
	201, 214, 226, 233, 244, 247, 252, 253, 255, 259,
	273, 275, 276, 277, 278, 296, 297, 301, 302, 305,
	306, 310, 311, 312, 316, 317, 324, 158, 331, 338,
	339, 340, 341, 342, 350, 351, 353, 354, 361, 389,
	390, 403, 404, 0, 0, 166, 40, 377, 172, 0,
	0, 0, 0, 0, 0, 171, 0, 0, 304, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 220, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2379, 267, 0,
	0, 401, 359, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 86, 0,
	0, 0, 0, 2062, 0, 0, 0, 0, 0, 0,
	0, 0, 147, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 396, 0, 0, 0, 0, 322, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 0,
	0, 0, 256, 164, 0, 0, 0, 0, 0, 0,
	0, 264, 0, 165, 0, 0, 0, 299, 0, 0,
	152, 168, 266, 0, 0, 0, 209, 0, 334, 0,
	395, 0, 236, 0, 333, 268, 388, 0, 0, 394,
	0, 371, 402, 406, 232, 0, 200, 356, 223, 218,
	0, 0, 0, 241, 321, 213, 260, 0, 0, 0,
	205, 0, 0, 0, 355, 385, 170, 284, 386, 405,
	188, 378, 285, 292, 202, 204, 203, 182, 349, 384,
	194, 207, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 242, 0, 0, 0, 308, 191, 0, 0,
	0, 399, 154, 344, 343, 0, 249, 0, 155, 146,
	329, 156, 257, 173, 0, 408, 187, 262, 379, 138,
	235, 298, 211, 0, 309, 0, 167, 325, 280, 282,
	279, 283, 239, 150, 157, 0, 327, 346, 383, 189,
	362, 148, 149, 151, 159, 337, 160, 161, 0, 274,
	227, 231, 243, 254, 0, 332, 363, 400, 0, 184,
	336, 364, 375, 365, 368, 366, 367, 176, 370, 393,
	195, 345, 348, 407, 0, 183, 178, 0, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 238, 0, 391, 392, 210, 409, 0, 0, 179,
	0, 0, 295, 303, 294, 0, 387, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 230, 245, 319, 270,
	320, 246, 290, 289, 291, 272, 0, 0, 174, 0,
	360, 0, 0, 369, 192, 0, 0, 382, 153, 326,
	193, 237, 228, 318, 293, 185, 248, 358, 261, 269,
	0, 0, 307, 335, 199, 397, 357, 224, 0, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	162, 163, 0, 0, 0, 206, 141, 0, 0, 0,
	142, 0, 0, 143, 144, 0, 0, 0, 0, 145,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2063, 315, 175, 186, 198,
	217, 215, 229, 258, 281, 286, 313, 347, 352, 372,
	373, 374, 376, 219, 0, 222, 197, 330, 196, 271,
	251, 314, 380, 381, 323, 212, 0, 169, 180, 265,
	532, 328, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 216, 0,
	0, 0, 181, 190, 201, 214, 226, 233, 244, 247,
	252, 253, 255, 259, 273, 275, 276, 277, 278, 296,
	297, 301, 302, 305, 306, 310, 311, 312, 316, 317,
	324, 158, 331, 338, 339, 340, 341, 342, 350, 351,
	353, 354, 361, 389, 390, 403, 404, 377, 0, 166,
	0, 0, 172, 0, 0, 0, 0, 0, 304, 171,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 220, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 401, 359, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 86, 0,
	0, 0, 0, 2062, 0, 0, 0, 0, 0, 0,
	0, 0, 147, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 396, 0, 0, 0, 0, 322, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 0,
	0, 0, 256, 164, 0, 0, 0, 0, 0, 0,
	0, 264, 0, 165, 0, 0, 0, 299, 0, 0,
	152, 168, 266, 0, 0, 0, 209, 0, 334, 0,
	395, 0, 236, 0, 333, 268, 388, 0, 0, 394,
	0, 371, 402, 406, 232, 0, 200, 356, 223, 218,
	0, 0, 0, 241, 321, 213, 260, 0, 0, 0,
	205, 0, 0, 0, 355, 385, 170, 284, 386, 405,
	188, 378, 285, 292, 202, 204, 203, 182, 349, 384,
	194, 207, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 242, 0, 0, 0, 308, 191, 0, 0,
	0, 399, 154, 344, 343, 0, 249, 0, 155, 146,
	329, 156, 257, 173, 0, 408, 187, 262, 379, 138,
	235, 298, 211, 0, 309, 0, 167, 325, 280, 282,
	279, 283, 239, 150, 157, 0, 327, 346, 383, 189,
	362, 148, 149, 151, 159, 337, 160, 161, 0, 274,
	227, 231, 243, 254, 0, 332, 363, 400, 0, 184,
	336, 364, 375, 365, 368, 366, 367, 176, 370, 393,
	195, 345, 348, 407, 0, 183, 178, 0, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 238, 0, 391, 392, 210, 409, 0, 0, 179,
	0, 0, 295, 303, 294, 0, 387, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 230, 245, 319, 270,
	320, 246, 290, 289, 291, 272, 0, 0, 174, 0,
	360, 0, 0, 369, 192, 0, 0, 382, 153, 326,
	193, 237, 228, 318, 293, 185, 248, 358, 261, 269,
	0, 0, 307, 335, 199, 397, 357, 224, 0, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	162, 163, 0, 0, 0, 206, 141, 0, 0, 0,
	142, 0, 0, 143, 144, 0, 0, 0, 0, 145,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3281, 2063, 315, 175, 186, 198,
	217, 215, 229, 258, 281, 286, 313, 347, 352, 372,
	373, 374, 376, 219, 0, 222, 197, 330, 196, 271,
	251, 314, 380, 381, 323, 212, 0, 169, 180, 265,
	0, 328, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 216, 0,
	0, 0, 181, 190, 201, 214, 226, 233, 244, 247,
	252, 253, 255, 259, 273, 275, 276, 277, 278, 296,
	297, 301, 302, 305, 306, 310, 311, 312, 316, 317,
	324, 158, 331, 338, 339, 340, 341, 342, 350, 351,
	353, 354, 361, 389, 390, 403, 404, 377, 0, 166,
	0, 0, 172, 0, 0, 0, 0, 0, 304, 171,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 220, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 401, 359, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 86, 0,
	0, 0, 0, 2062, 0, 0, 0, 0, 0, 0,
	0, 0, 147, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 396, 0, 0, 0, 0, 322, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 0,
	0, 0, 256, 164, 0, 0, 0, 0, 0, 0,
	0, 264, 0, 165, 0, 0, 0, 299, 0, 0,
	152, 168, 266, 0, 0, 0, 209, 0, 334, 0,
	395, 0, 236, 0, 333, 268, 388, 0, 0, 394,
	0, 371, 402, 406, 232, 0, 200, 356, 223, 218,
	0, 0, 0, 241, 321, 213, 260, 0, 0, 0,
	205, 0, 0, 0, 355, 385, 170, 284, 386, 405,
	188, 378, 285, 292, 202, 204, 203, 182, 349, 384,
	194, 207, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 242, 0, 0, 0, 308, 191, 0, 0,
	0, 399, 154, 344, 343, 0, 249, 0, 155, 146,
	329, 156, 257, 173, 0, 408, 187, 262, 379, 138,
	235, 298, 211, 0, 309, 0, 167, 325, 280, 282,
	279, 283, 239, 150, 157, 0, 327, 346, 383, 189,
	362, 148, 149, 151, 159, 337, 160, 161, 0, 274,
	227, 231, 243, 254, 0, 332, 363, 400, 0, 184,
	336, 364, 375, 365, 368, 366, 367, 176, 370, 393,
	195, 345, 348, 407, 0, 183, 178, 0, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 238, 0, 391, 392, 210, 409, 0, 0, 179,
	0, 0, 295, 303, 294, 0, 387, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 230, 245, 319, 270,
	320, 246, 290, 289, 291, 272, 0, 0, 174, 0,
	360, 0, 0, 369, 192, 0, 0, 382, 153, 326,
	193, 237, 228, 318, 293, 185, 248, 358, 261, 269,
	0, 0, 307, 335, 199, 397, 357, 224, 0, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	162, 163, 0, 0, 0, 206, 141, 0, 0, 0,
	142, 0, 0, 143, 144, 0, 0, 0, 0, 145,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2063, 315, 175, 186, 198,
	217, 215, 229, 258, 281, 286, 313, 347, 352, 372,
	373, 374, 376, 219, 0, 222, 197, 330, 196, 271,
	251, 314, 380, 381, 323, 212, 0, 169, 180, 265,
	0, 328, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 216, 0,
	0, 0, 181, 190, 201, 214, 226, 233, 244, 247,
	252, 253, 255, 259, 273, 275, 276, 277, 278, 296,
	297, 301, 302, 305, 306, 310, 311, 312, 316, 317,
	324, 158, 331, 338, 339, 340, 341, 342, 350, 351,
	353, 354, 361, 389, 390, 403, 404, 377, 0, 166,
	0, 0, 172, 0, 0, 0, 0, 0, 304, 171,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 220, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 401, 359, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 139, 0, 0, 0, 0, 0, 0,
	0, 0, 147, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 396, 0, 0, 0, 0, 322, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 452, 0, 288, 0, 0,
	0, 0, 256, 164, 0, 0, 0, 0, 0, 0,
	0, 264, 0, 165, 0, 0, 0, 299, 0, 0,
	152, 168, 266, 0, 0, 0, 209, 0, 334, 0,
	395, 454, 451, 0, 333, 268, 388, 0, 0, 394,
	0, 371, 402, 406, 232, 0, 200, 356, 223, 218,
	0, 0, 0, 241, 321, 213, 260, 0, 0, 0,
	205, 0, 0, 0, 355, 385, 170, 284, 386, 405,
	188, 378, 285, 292, 202, 204, 203, 182, 349, 384,
	194, 207, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 242, 0, 0, 0, 308, 191, 0, 0,
	0, 399, 154, 344, 343, 0, 249, 0, 155, 146,
	329, 156, 257, 173, 0, 408, 187, 262, 379, 138,
	235, 298, 211, 0, 309, 0, 167, 325, 280, 282,
	279, 283, 239, 150, 157, 0, 327, 346, 383, 189,
	362, 148, 149, 151, 159, 337, 160, 161, 0, 274,
	227, 231, 243, 254, 0, 332, 363, 400, 0, 184,
	336, 364, 375, 365, 368, 366, 367, 176, 370, 393,
	195, 345, 348, 407, 0, 183, 178, 0, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 238, 0, 391, 392, 210, 409, 0, 0, 179,
	0, 0, 295, 303, 294, 0, 387, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 230, 245, 319, 270,
	320, 246, 290, 289, 291, 272, 0, 0, 174, 0,
	360, 0, 0, 369, 192, 0, 0, 382, 153, 326,
	193, 237, 228, 318, 293, 185, 248, 358, 261, 269,
	0, 0, 307, 335, 199, 397, 357, 224, 0, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	162, 163, 0, 0, 0, 206, 141, 0, 0, 0,
	142, 0, 0, 143, 144, 0, 0, 0, 0, 145,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 175, 186, 198,
	217, 215, 229, 258, 281, 286, 313, 347, 352, 372,
	373, 374, 376, 219, 0, 222, 197, 330, 196, 271,
	251, 314, 380, 381, 323, 212, 0, 169, 180, 265,
	0, 328, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 216, 0,
	0, 0, 181, 190, 201, 214, 226, 233, 244, 247,
	252, 253, 255, 259, 273, 275, 276, 277, 278, 296,
	297, 301, 302, 305, 306, 310, 311, 312, 316, 317,
	324, 158, 331, 338, 339, 340, 341, 342, 350, 351,
	353, 354, 361, 389, 390, 403, 404, 377, 0, 166,
	0, 0, 172, 0, 0, 0, 0, 0, 304, 171,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 220, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 401, 359, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 139, 0, 0, 0, 0, 0, 0,
	0, 0, 147, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 396, 0, 0, 0, 0, 322, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 0,
	0, 0, 256, 164, 0, 0, 0, 0, 0, 0,
	0, 264, 0, 165, 0, 0, 0, 299, 0, 0,
	152, 168, 266, 0, 0, 0, 209, 0, 334, 0,
	395, 2167, 236, 0, 333, 268, 388, 0, 0, 394,
	0, 371, 402, 406, 232, 0, 200, 356, 223, 218,
	0, 0, 0, 241, 321, 213, 260, 0, 0, 0,
	205, 0, 0, 0, 355, 385, 170, 284, 386, 405,
	188, 378, 285, 292, 202, 204, 203, 182, 349, 384,
	194, 207, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 242, 0, 0, 0, 308, 191, 0, 0,
	0, 399, 154, 344, 343, 0, 249, 0, 155, 146,
	329, 156, 257, 173, 0, 408, 187, 262, 379, 138,
	235, 298, 211, 0, 309, 0, 167, 325, 280, 282,
	279, 283, 239, 150, 157, 0, 327, 346, 383, 189,
	362, 148, 149, 151, 159, 337, 160, 161, 0, 274,
	227, 231, 243, 254, 0, 332, 363, 400, 0, 184,
	336, 364, 375, 365, 368, 366, 367, 176, 370, 393,
	195, 345, 348, 407, 0, 183, 178, 0, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 238, 0, 391, 392, 210, 409, 0, 0, 179,
	0, 0, 295, 303, 294, 0, 387, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 230, 245, 319, 270,
	320, 246, 290, 289, 291, 272, 0, 0, 174, 0,
	360, 0, 0, 369, 192, 0, 0, 382, 153, 326,
	193, 237, 228, 318, 293, 185, 248, 358, 261, 269,
	0, 0, 307, 335, 199, 397, 357, 224, 0, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	162, 163, 0, 0, 0, 206, 141, 0, 0, 0,
	142, 0, 0, 143, 144, 0, 0, 0, 0, 145,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 175, 186, 198,
	217, 215, 229, 258, 281, 286, 313, 347, 352, 372,
	373, 374, 376, 219, 0, 222, 197, 330, 196, 271,
	251, 314, 380, 381, 323, 212, 0, 169, 180, 265,
	0, 328, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 216, 0,
	0, 0, 181, 190, 201, 214, 226, 233, 244, 247,
	252, 253, 255, 259, 273, 275, 276, 277, 278, 296,
	297, 301, 302, 305, 306, 310, 311, 312, 316, 317,
	324, 158, 331, 338, 339, 340, 341, 342, 350, 351,
	353, 354, 361, 389, 390, 403, 404, 377, 0, 166,
	0, 0, 172, 0, 0, 0, 0, 0, 304, 171,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 220, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 401, 359, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 139, 0, 0, 0, 0, 0, 0,
	0, 0, 147, 0, 0, 0, 0, 0, 2049, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 396, 0, 0, 0, 0, 322, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 0,
	0, 0, 256, 164, 0, 0, 0, 0, 0, 0,
	0, 264, 0, 165, 0, 0, 0, 299, 0, 0,
	152, 168, 266, 0, 0, 0, 209, 0, 334, 0,
	395, 0, 236, 0, 333, 268, 388, 0, 0, 394,
	0, 371, 402, 406, 232, 0, 200, 356, 223, 218,
	0, 0, 0, 241, 321, 213, 260, 0, 0, 0,
	205, 0, 0, 0, 355, 385, 170, 284, 386, 405,
	188, 378, 285, 292, 202, 204, 203, 182, 349, 384,
	194, 207, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 242, 0, 0, 0, 308, 191, 0, 0,
	0, 399, 154, 344, 343, 0, 249, 0, 155, 146,
	329, 156, 257, 173, 0, 408, 187, 262, 379, 138,
	235, 298, 211, 0, 309, 0, 167, 325, 280, 282,
	279, 283, 239, 150, 157, 0, 327, 346, 383, 189,
	362, 148, 149, 151, 159, 337, 160, 161, 0, 274,
	227, 231, 243, 254, 0, 332, 363, 400, 0, 184,
	336, 364, 375, 365, 368, 366, 367, 176, 370, 393,
	195, 345, 348, 407, 0, 183, 178, 0, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 238, 0, 391, 392, 210, 409, 0, 0, 179,
	0, 0, 295, 303, 294, 0, 387, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 230, 245, 319, 270,
	320, 246, 290, 289, 291, 272, 0, 0, 174, 0,
	360, 0, 0, 369, 192, 0, 0, 382, 153, 326,
	193, 237, 228, 318, 293, 185, 248, 358, 261, 269,
	0, 0, 307, 335, 199, 397, 357, 224, 0, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	162, 163, 0, 0, 0, 206, 141, 0, 0, 0,
	142, 0, 0, 143, 144, 0, 0, 0, 0, 145,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 175, 186, 198,
	217, 215, 229, 258, 281, 286, 313, 347, 352, 372,
	373, 374, 376, 219, 0, 222, 197, 330, 196, 271,
	251, 314, 380, 381, 323, 212, 0, 169, 180, 265,
	0, 328, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 216, 0,
	0, 0, 181, 190, 201, 214, 226, 233, 244, 247,
	252, 253, 255, 259, 273, 275, 276, 277, 278, 296,
	297, 301, 302, 305, 306, 310, 311, 312, 316, 317,
	324, 158, 331, 338, 339, 340, 341, 342, 350, 351,
	353, 354, 361, 389, 390, 403, 404, 377, 0, 166,
	0, 1364, 172, 0, 0, 0, 0, 0, 304, 171,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 220, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 401, 359, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 139, 0, 0, 0, 0, 0, 0,
	0, 0, 147, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 396, 0, 0, 0, 0, 322, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 0,
	0, 0, 256, 164, 0, 0, 0, 0, 0, 0,
	0, 264, 0, 165, 0, 0, 0, 299, 0, 0,
	152, 168, 266, 0, 0, 0, 209, 0, 334, 0,
	395, 0, 236, 0, 333, 268, 388, 0, 0, 394,
	0, 371, 402, 406, 232, 0, 200, 356, 223, 218,
	0, 0, 0, 241, 321, 213, 260, 0, 0, 0,
	205, 0, 0, 0, 355, 385, 170, 284, 386, 405,
	188, 378, 285, 292, 202, 204, 203, 182, 349, 384,
	194, 207, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 242, 0, 0, 0, 308, 191, 0, 0,
	0, 399, 154, 344, 343, 0, 249, 0, 155, 146,
	329, 156, 257, 173, 0, 408, 187, 262, 379, 138,
	235, 298, 211, 0, 309, 0, 167, 325, 280, 282,
	279, 283, 239, 150, 157, 0, 327, 346, 383, 189,
	362, 148, 149, 151, 159, 337, 160, 161, 0, 274,
	227, 231, 243, 254, 0, 332, 363, 400, 0, 184,
	336, 364, 375, 365, 368, 366, 367, 176, 370, 393,
	195, 345, 348, 407, 0, 183, 178, 0, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 238, 0, 391, 392, 210, 409, 0, 0, 179,
	0, 0, 295, 303, 294, 0, 387, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 230, 245, 319, 270,
	320, 246, 290, 289, 291, 272, 0, 0, 174, 0,
	360, 0, 0, 369, 192, 0, 0, 382, 153, 326,
	193, 237, 228, 318, 293, 185, 248, 358, 261, 269,
	0, 0, 307, 335, 199, 397, 357, 224, 0, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	162, 163, 0, 0, 0, 206, 141, 0, 0, 0,
	142, 0, 0, 143, 144, 0, 0, 0, 0, 145,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 175, 186, 198,
	217, 215, 229, 258, 281, 286, 313, 347, 352, 372,
	373, 374, 376, 219, 0, 222, 197, 330, 196, 271,
	251, 314, 380, 381, 323, 212, 0, 169, 180, 265,
	0, 328, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 216, 0,
	0, 0, 181, 190, 201, 214, 226, 233, 244, 247,
	252, 253, 255, 259, 273, 275, 276, 277, 278, 296,
	297, 301, 302, 305, 306, 310, 311, 312, 316, 317,
	324, 158, 331, 338, 339, 340, 341, 342, 350, 351,
	353, 354, 361, 389, 390, 403, 404, 377, 0, 166,
	0, 0, 172, 0, 0, 0, 0, 0, 304, 171,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 220, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 401, 359, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 139, 0, 0, 0, 0, 0, 0,
	0, 0, 147, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 396, 0, 0, 0, 0, 322, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 0,
	133, 0, 256, 164, 0, 0, 0, 0, 0, 0,
	0, 264, 0, 165, 0, 0, 0, 299, 0, 0,
	152, 168, 266, 0, 0, 0, 209, 0, 334, 0,
	395, 0, 236, 0, 333, 268, 388, 0, 0, 394,
	0, 371, 402, 406, 232, 0, 200, 356, 223, 218,
	0, 0, 0, 241, 321, 213, 260, 0, 0, 0,
	205, 0, 0, 0, 355, 385, 170, 284, 386, 405,
	188, 378, 285, 292, 202, 204, 203, 182, 349, 384,
	194, 207, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 242, 0, 0, 0, 308, 191, 0, 0,
	0, 399, 154, 344, 343, 0, 249, 0, 155, 146,
	329, 156, 257, 173, 0, 408, 187, 262, 379, 138,
	235, 298, 211, 0, 309, 0, 167, 325, 280, 282,
	279, 283, 239, 150, 157, 0, 327, 346, 383, 189,
	362, 148, 149, 151, 159, 337, 160, 161, 0, 274,
	227, 231, 243, 254, 0, 332, 363, 400, 0, 184,
	336, 364, 375, 365, 368, 366, 367, 176, 370, 393,
	195, 345, 348, 407, 0, 183, 178, 0, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 238, 0, 391, 392, 210, 409, 0, 0, 179,
	0, 0, 295, 303, 294, 0, 387, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 230, 245, 319, 270,
	320, 246, 290, 289, 291, 272, 0, 0, 174, 0,
	360, 0, 0, 369, 192, 0, 0, 382, 153, 326,
	193, 237, 228, 318, 293, 185, 248, 358, 261, 269,
	0, 0, 307, 335, 199, 397, 357, 224, 0, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	162, 163, 0, 0, 0, 206, 141, 0, 0, 0,
	142, 0, 0, 143, 144, 0, 0, 0, 0, 145,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 175, 186, 198,
	217, 215, 229, 258, 281, 286, 313, 347, 352, 372,
	373, 374, 376, 219, 0, 222, 197, 330, 196, 271,
	251, 314, 380, 381, 323, 212, 0, 169, 180, 265,
	0, 328, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 216, 0,
	0, 0, 181, 190, 201, 214, 226, 233, 244, 247,
	252, 253, 255, 259, 273, 275, 276, 277, 278, 296,
	297, 301, 302, 305, 306, 310, 311, 312, 316, 317,
	324, 158, 331, 338, 339, 340, 341, 342, 350, 351,
	353, 354, 361, 389, 390, 403, 404, 377, 0, 166,
	0, 0, 172, 0, 0, 0, 0, 0, 304, 171,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 220, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 401, 359, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 139, 0, 0, 0, 0, 0, 0,
	0, 0, 147, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 396, 0, 0, 0, 0, 322, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 0,
	0, 0, 256, 164, 0, 0, 0, 0, 0, 0,
	0, 264, 0, 165, 0, 0, 0, 299, 0, 0,
	152, 168, 266, 0, 0, 0, 209, 0, 334, 0,
	395, 0, 236, 0, 333, 268, 388, 0, 0, 394,
	0, 371, 402, 406, 232, 0, 200, 356, 223, 218,
	0, 0, 0, 241, 321, 213, 260, 0, 0, 0,
	205, 0, 0, 0, 355, 385, 170, 284, 386, 405,
	188, 378, 285, 292, 202, 204, 203, 182, 349, 384,
	194, 207, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 242, 0, 0, 0, 308, 191, 0, 0,
	0, 399, 154, 344, 343, 0, 249, 0, 155, 146,
	329, 156, 257, 173, 0, 408, 187, 262, 379, 138,
	235, 298, 211, 0, 309, 0, 167, 325, 280, 282,
	279, 283, 239, 150, 157, 0, 327, 346, 383, 189,
	362, 148, 149, 151, 159, 337, 160, 161, 0, 274,
	227, 231, 243, 254, 0, 332, 363, 400, 0, 184,
	336, 364, 375, 365, 368, 366, 367, 176, 370, 393,
	195, 345, 348, 407, 0, 183, 178, 0, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 238, 0, 391, 392, 210, 409, 0, 0, 179,
	0, 0, 295, 303, 294, 0, 387, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 230, 245, 319, 270,
	320, 246, 290, 289, 291, 272, 0, 0, 174, 0,
	360, 0, 0, 369, 192, 0, 0, 382, 153, 326,
	193, 237, 228, 318, 293, 185, 248, 358, 261, 269,
	0, 0, 307, 335, 199, 397, 357, 224, 0, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	162, 163, 0, 0, 0, 206, 141, 0, 0, 0,
	142, 0, 0, 143, 144, 0, 0, 0, 0, 145,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 175, 186, 198,
	217, 215, 229, 258, 281, 286, 313, 347, 352, 372,
	373, 374, 376, 219, 0, 222, 197, 330, 196, 271,
	251, 314, 380, 381, 323, 212, 0, 169, 180, 265,
	0, 328, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 216, 0,
	0, 0, 181, 190, 201, 214, 226, 233, 244, 247,
	252, 253, 255, 259, 273, 275, 276, 277, 278, 296,
	297, 301, 302, 305, 306, 310, 311, 312, 316, 317,
	324, 158, 331, 338, 339, 340, 341, 342, 350, 351,
	353, 354, 361, 389, 390, 403, 404, 0, 0, 166,
	0, 0, 172, 494, 377, 488, 499, 482, 0, 171,
	0, 0, 0, 0, 0, 304, 0, 0, 505, 0,
	0, 0, 0, 0, 221, 0, 0, 489, 0, 0,
	0, 0, 220, 208, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 0, 401, 359,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	503, 0, 502, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 396,
	0, 0, 0, 0, 322, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 481, 480,
	483, 0, 0, 0, 288, 0, 0, 0, 487, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	165, 0, 0, 0, 299, 491, 0, 0, 168, 266,
	495, 0, 0, 209, 0, 334, 0, 395, 0, 236,
	0, 333, 268, 388, 0, 498, 394, 0, 371, 402,
	406, 232, 0, 200, 356, 223, 218, 0, 0, 0,
	241, 321, 213, 260, 0, 0, 0, 205, 0, 0,
	0, 355, 385, 170, 284, 386, 405, 188, 378, 285,
	292, 202, 204, 203, 182, 349, 384, 194, 207, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 242,
	0, 0, 0, 308, 191, 0, 0, 0, 399, 0,
	344, 343, 0, 249, 0, 0, 0, 329, 0, 257,
	173, 0, 408, 187, 262, 379, 0, 235, 298, 211,
	0, 309, 0, 167, 325, 280, 282, 279, 283, 239,
	0, 0, 0, 508, 346, 383, 189, 362, 484, 485,
	486, 492, 493, 496, 497, 500, 274, 227, 231, 243,
	254, 0, 332, 363, 400, 0, 184, 336, 364, 375,
	365, 368, 366, 367, 176, 370, 393, 195, 345, 348,
	407, 0, 183, 178, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 0, 0, 238, 0,
	391, 392, 210, 409, 0, 0, 179, 0, 0, 295,
	303, 294, 0, 387, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 230, 245, 319, 270, 320, 246, 290,
	289, 291, 272, 0, 0, 174, 0, 360, 0, 0,
	369, 192, 0, 0, 382, 0, 326, 193, 237, 228,
	318, 293, 185, 248, 358, 261, 269, 0, 0, 307,
	335, 199, 397, 357, 224, 0, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 206, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 175, 186, 198, 217, 215, 229,
	258, 281, 286, 313, 347, 352, 372, 373, 374, 376,
	219, 0, 222, 197, 330, 196, 271, 251, 314, 380,
	381, 323, 212, 0, 169, 180, 265, 0, 328, 234,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 398, 216, 0, 0, 0, 181,
	190, 201, 214, 226, 233, 244, 247, 252, 253, 255,
	259, 273, 275, 276, 277, 278, 296, 297, 301, 302,
	305, 306, 310, 311, 312, 316, 317, 324, 490, 331,
	338, 339, 340, 341, 342, 350, 351, 353, 354, 361,
	389, 390, 403, 404, 0, 0, 166, 0, 0, 172,
	494, 377, 488, 499, 482, 0, 171, 0, 0, 0,
	0, 0, 304, 0, 0, 474, 0, 0, 0, 0,
	0, 221, 0, 0, 489, 0, 0, 0, 0, 220,
	208, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 267, 0, 0, 401, 359, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 503, 0, 502,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 396, 0, 0, 0,
	0, 322, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 481, 480, 483, 0, 0,
	0, 288, 0, 0, 0, 487, 256, 0, 0, 0,
	0, 0, 0, 0, 0, 264, 0, 165, 0, 0,
	0, 299, 491, 0, 0, 168, 266, 495, 0, 0,
	209, 0, 334, 0, 395, 0, 236, 0, 333, 268,
	388, 0, 498, 394, 0, 371, 402, 406, 232, 0,
	200, 356, 223, 218, 0, 0, 0, 241, 321, 213,
	260, 0, 0, 0, 205, 0, 0, 0, 355, 385,
	170, 284, 386, 405, 188, 378, 285, 292, 202, 204,
	203, 182, 349, 384, 194, 207, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 242, 0, 0, 0,
	308, 191, 0, 0, 0, 399, 0, 344, 343, 0,
	249, 0, 0, 0, 329, 0, 257, 173, 0, 408,
	187, 262, 379, 0, 235, 298, 211, 0, 309, 0,
	167, 325, 280, 282, 279, 283, 239, 0, 0, 0,
	477, 346, 383, 189, 362, 484, 485, 486, 492, 493,
	496, 497, 500, 274, 227, 231, 243, 254, 0, 332,
	363, 400, 0, 184, 336, 364, 375, 365, 368, 366,
	367, 176, 370, 393, 195, 345, 348, 407, 0, 183,
	178, 0, 0, 0, 0, 0, 0, 0, 177, 0,
	0, 0, 0, 0, 0, 238, 0, 391, 392, 210,
	409, 0, 0, 179, 0, 0, 295, 303, 294, 0,
	387, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	230, 245, 319, 270, 320, 246, 290, 289, 291, 272,
	0, 0, 174, 0, 360, 0, 0, 369, 192, 0,
	0, 382, 0, 326, 193, 237, 228, 318, 293, 185,
	248, 358, 261, 269, 0, 0, 307, 335, 199, 397,
	357, 224, 0, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 0, 0, 0, 0, 0, 206,
	0, 0, 221, 0, 0, 0, 0, 0, 0, 0,
	220, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 401, 359, 287, 0,
	315, 175, 186, 198, 217, 215, 229, 258, 281, 286,
	313, 347, 352, 372, 373, 374, 376, 219, 993, 222,
	197, 330, 196, 271, 251, 314, 380, 381, 323, 212,
	0, 169, 180, 265, 0, 328, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 322, 240, 1249, 1248, 1258, 1259, 1251, 1252,
	1253, 1254, 1255, 1256, 1257, 1250, 0, 0, 1260, 0,
	0, 398, 216, 0, 0, 0, 181, 190, 201, 214,
	226, 233, 244, 247, 252, 253, 255, 259, 273, 275,
	276, 277, 278, 296, 297, 301, 302, 305, 306, 310,
	311, 312, 316, 317, 324, 490, 331, 338, 339, 340,
	341, 342, 350, 351, 353, 354, 361, 389, 390, 403,
	404, 0, 288, 166, 0, 0, 172, 256, 0, 0,
	0, 0, 0, 171, 0, 0, 264, 0, 165, 0,
	0, 0, 299, 0, 0, 0, 168, 266, 0, 0,
	0, 209, 0, 334, 0, 395, 0, 236, 0, 333,
	268, 388, 0, 0, 394, 0, 371, 402, 406, 232,
	0, 200, 356, 223, 218, 0, 0, 0, 241, 321,
	213, 260, 0, 0, 0, 205, 0, 0, 0, 355,
	385, 170, 284, 386, 405, 188, 378, 285, 292, 202,
	204, 203, 182, 349, 384, 194, 207, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 242, 0, 0,
	0, 308, 191, 0, 0, 0, 399, 0, 344, 343,
	0, 249, 0, 0, 0, 329, 0, 257, 173, 0,
	408, 187, 262, 379, 0, 235, 298, 211, 0, 309,
	0, 167, 325, 280, 282, 279, 283, 239, 0, 0,
	0, 327, 346, 383, 189, 362, 0, 0, 0, 0,
	337, 0, 0, 0, 274, 227, 231, 243, 254, 0,
	332, 363, 400, 0, 184, 336, 364, 375, 365, 368,
	366, 367, 176, 370, 393, 195, 345, 348, 407, 0,
	183, 178, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 238, 0, 391, 392,
	210, 409, 0, 0, 179, 0, 0, 295, 303, 294,
	0, 387, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 230, 245, 319, 270, 320, 246, 290, 289, 291,
	272, 0, 0, 174, 0, 360, 0, 0, 369, 192,
	0, 0, 382, 0, 326, 193, 237, 228, 318, 293,
	185, 248, 358, 261, 269, 0, 0, 307, 335, 199,
	397, 357, 224, 0, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	206, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 175, 186, 198, 217, 215, 229, 258, 281,
	286, 313, 347, 352, 372, 373, 374, 376, 219, 0,
	222, 197, 330, 196, 271, 251, 314, 380, 381, 323,
	212, 0, 169, 180, 265, 0, 328, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 398, 216, 0, 0, 0, 181, 190, 201,
	214, 226, 233, 244, 247, 252, 253, 255, 259, 273,
	275, 276, 277, 278, 296, 297, 301, 302, 305, 306,
	310, 311, 312, 316, 317, 324, 0, 331, 338, 339,
	340, 341, 342, 350, 351, 353, 354, 361, 389, 390,
	403, 404, 377, 0, 166, 0, 0, 172, 0, 0,
	0, 0, 0, 304, 171, 0, 0, 0, 2384, 0,
	0, 0, 221, 0, 0, 0, 0, 0, 0, 0,
	220, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 401, 359, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2386,
	2388, 0, 0, 0, 0, 0, 0, 0, 139, 0,
	524, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 396, 2382, 0,
	0, 0, 322, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 0, 0, 0, 256, 0, 0,
	2387, 0, 0, 0, 0, 0, 264, 0, 165, 0,
	0, 0, 299, 0, 0, 0, 168, 266, 0, 0,
	0, 209, 0, 334, 0, 395, 0, 236, 0, 333,
	268, 388, 0, 0, 394, 0, 371, 402, 406, 232,
	0, 200, 356, 223, 218, 0, 0, 0, 241, 321,
	213, 260, 0, 0, 0, 205, 0, 0, 0, 355,
	385, 170, 284, 386, 405, 188, 378, 285, 292, 202,
	204, 203, 182, 349, 384, 194, 207, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 242, 0, 0,
	0, 308, 191, 0, 0, 0, 399, 0, 344, 343,
	0, 249, 0, 0, 0, 329, 0, 257, 173, 0,
	408, 187, 262, 379, 0, 235, 298, 211, 0, 309,
	0, 167, 325, 280, 282, 279, 283, 239, 0, 0,
	0, 327, 346, 383, 189, 362, 0, 0, 0, 0,
	337, 0, 0, 0, 274, 227, 231, 243, 254, 0,
	332, 363, 400, 0, 184, 336, 364, 375, 365, 368,
	366, 367, 176, 370, 393, 195, 345, 348, 407, 0,
	183, 178, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 238, 0, 391, 392,
	210, 409, 0, 0, 179, 0, 0, 295, 303, 294,
	0, 387, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 230, 245, 319, 270, 320, 246, 290, 289, 291,
	272, 0, 0, 174, 0, 360, 0, 0, 369, 192,
	0, 0, 382, 0, 326, 193, 237, 228, 318, 293,
	185, 248, 358, 261, 269, 0, 0, 307, 335, 199,
	397, 357, 224, 0, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	206, 141, 0, 0, 0, 142, 0, 0, 143, 144,
	0, 0, 0, 0, 145, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 175, 186, 198, 217, 215, 229, 258, 281,
	286, 313, 347, 352, 372, 373, 374, 376, 219, 0,
	222, 197, 330, 196, 271, 251, 314, 380, 381, 323,
	212, 0, 169, 180, 265, 0, 328, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 398, 216, 0, 0, 0, 181, 190, 201,
	214, 226, 233, 244, 247, 252, 253, 255, 259, 273,
	275, 276, 277, 278, 296, 297, 301, 302, 305, 306,
	310, 311, 312, 316, 317, 324, 0, 331, 338, 339,
	340, 341, 342, 350, 351, 353, 354, 361, 389, 390,
	403, 404, 377, 0, 166, 0, 0, 172, 0, 0,
	0, 0, 0, 304, 171, 0, 0, 0, 2384, 0,
	0, 0, 221, 0, 0, 0, 0, 0, 0, 0,
	220, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 401, 359, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2386,
	2388, 0, 0, 0, 0, 0, 0, 0, 139, 0,
	524, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 322, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 0, 0, 0, 256, 0, 0,
	2387, 0, 0, 0, 0, 0, 264, 0, 165, 0,
	0, 0, 299, 0, 0, 0, 168, 266, 0, 0,
	0, 209, 0, 334, 0, 395, 0, 236, 0, 333,
	268, 388, 0, 0, 394, 0, 371, 402, 406, 232,
	0, 200, 356, 223, 218, 0, 0, 0, 241, 321,
	213, 260, 0, 0, 0, 205, 0, 0, 0, 355,
	385, 170, 284, 386, 405, 188, 378, 285, 292, 202,
	204, 203, 182, 349, 384, 194, 207, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 242, 0, 0,
	0, 308, 191, 0, 0, 0, 399, 0, 344, 343,
	0, 249, 0, 0, 0, 329, 0, 257, 173, 0,
	408, 187, 262, 379, 0, 235, 298, 211, 0, 309,
	0, 167, 325, 280, 282, 279, 283, 239, 0, 0,
	0, 327, 346, 383, 189, 362, 0, 0, 0, 0,
	337, 0, 0, 0, 274, 227, 231, 243, 254, 0,
	332, 363, 400, 0, 184, 336, 364, 375, 365, 368,
	366, 367, 176, 370, 393, 195, 345, 348, 407, 0,
	183, 178, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 238, 0, 391, 392,
	210, 409, 0, 0, 179, 0, 0, 295, 303, 294,
	0, 387, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 230, 245, 319, 270, 320, 246, 290, 289, 291,
	272, 0, 0, 174, 0, 360, 0, 0, 369, 192,
	0, 0, 382, 0, 326, 193, 237, 228, 318, 293,
	185, 248, 358, 261, 269, 0, 0, 307, 335, 199,
	397, 357, 224, 0, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	206, 141, 0, 0, 0, 142, 0, 0, 143, 144,
	0, 0, 0, 0, 145, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 175, 186, 198, 217, 215, 229, 258, 281,
	286, 313, 347, 352, 372, 373, 374, 376, 219, 0,
	222, 197, 330, 196, 271, 251, 314, 380, 381, 323,
	212, 0, 169, 180, 265, 0, 328, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 398, 216, 0, 0, 0, 181, 190, 201,
	214, 226, 233, 244, 247, 252, 253, 255, 259, 273,
	275, 276, 277, 278, 296, 297, 301, 302, 305, 306,
	310, 311, 312, 316, 317, 324, 0, 331, 338, 339,
	340, 341, 342, 350, 351, 353, 354, 361, 389, 390,
	403, 404, 377, 0, 166, 0, 0, 172, 0, 0,
	0, 0, 0, 304, 171, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 0, 0, 0, 0, 0, 0,
	220, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 401, 359, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 139, 0,
	524, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 322, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 0, 0, 0, 256, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 165, 0,
	0, 0, 299, 0, 0, 0, 168, 266, 0, 0,
	0, 209, 0, 334, 0, 395, 0, 236, 0, 333,
	268, 388, 0, 0, 394, 0, 371, 402, 406, 232,
	0, 200, 356, 223, 218, 0, 0, 0, 241, 321,
	213, 260, 0, 0, 0, 205, 0, 0, 0, 355,
	385, 170, 284, 386, 405, 188, 378, 285, 292, 202,
	204, 203, 182, 349, 384, 194, 207, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 242, 0, 0,
	0, 308, 191, 0, 0, 0, 399, 0, 344, 343,
	0, 249, 0, 0, 0, 329, 0, 257, 173, 0,
	408, 187, 262, 379, 0, 235, 298, 211, 0, 309,
	0, 167, 325, 280, 282, 279, 283, 239, 0, 0,
	0, 327, 346, 383, 189, 362, 0, 0, 0, 0,
	337, 0, 0, 0, 274, 227, 231, 243, 254, 0,
	332, 363, 400, 0, 184, 336, 364, 375, 365, 368,
	366, 367, 176, 370, 393, 195, 345, 348, 407, 0,
	183, 178, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 238, 0, 391, 392,
	210, 409, 0, 0, 179, 0, 0, 295, 303, 294,
	0, 387, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 230, 245, 319, 270, 320, 246, 290, 289, 291,
	272, 0, 0, 174, 0, 360, 0, 0, 369, 192,
	0, 0, 382, 0, 326, 193, 237, 228, 318, 293,
	185, 248, 358, 261, 269, 0, 0, 307, 335, 199,
	397, 357, 224, 0, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	206, 141, 0, 0, 0, 142, 0, 0, 143, 144,
	0, 0, 0, 0, 145, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 175, 186, 198, 217, 215, 229, 258, 281,
	286, 313, 347, 352, 372, 373, 374, 376, 219, 0,
	222, 197, 330, 196, 271, 251, 314, 380, 381, 323,
	212, 0, 169, 180, 265, 0, 328, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 398, 216, 0, 0, 518, 181, 190, 201,
	214, 226, 233, 244, 247, 252, 253, 255, 259, 273,
	275, 276, 277, 278, 296, 297, 301, 302, 305, 306,
	310, 311, 312, 316, 317, 324, 0, 331, 338, 339,
	340, 341, 342, 350, 351, 353, 354, 361, 389, 390,
	403, 404, 377, 0, 166, 0, 0, 172, 0, 0,
	0, 0, 0, 304, 171, 0, 0, 0, 3640, 0,
	0, 0, 221, 0, 0, 0, 0, 0, 0, 0,
	220, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 401, 359, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 139, 0,
	524, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 322, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 0, 0, 0, 256, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 165, 0,
	0, 0, 299, 0, 0, 0, 168, 266, 0, 0,
	0, 209, 0, 334, 0, 395, 0, 236, 0, 333,
	268, 388, 0, 0, 394, 0, 371, 402, 406, 232,
	0, 200, 356, 223, 218, 0, 0, 0, 241, 321,
	213, 260, 0, 0, 0, 205, 0, 0, 0, 355,
	385, 170, 284, 386, 405, 188, 378, 285, 292, 202,
	204, 203, 182, 349, 384, 194, 207, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 242, 0, 0,
	0, 308, 191, 0, 0, 0, 399, 0, 344, 343,
	0, 249, 0, 0, 0, 329, 0, 257, 173, 0,
	408, 187, 262, 379, 0, 235, 298, 211, 0, 309,
	0, 167, 325, 280, 282, 279, 283, 239, 0, 0,
	0, 327, 346, 383, 189, 362, 0, 0, 0, 0,
	337, 0, 0, 0, 274, 227, 231, 243, 254, 0,
	332, 363, 400, 0, 184, 336, 364, 375, 365, 368,
	366, 367, 176, 370, 393, 195, 345, 348, 407, 0,
	183, 178, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 238, 0, 391, 392,
	210, 409, 0, 0, 179, 0, 0, 295, 303, 294,
	0, 387, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 230, 245, 319, 270, 320, 246, 290, 289, 291,
	272, 0, 0, 174, 0, 360, 0, 0, 369, 192,
	0, 0, 382, 0, 326, 193, 237, 228, 318, 293,
	185, 248, 358, 261, 269, 0, 0, 307, 335, 199,
	397, 357, 224, 0, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	206, 141, 0, 0, 0, 142, 0, 0, 143, 144,
	0, 0, 0, 0, 145, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 175, 186, 198, 217, 215, 229, 258, 281,
	286, 313, 347, 352, 372, 373, 374, 376, 219, 0,
	222, 197, 330, 196, 271, 251, 314, 380, 381, 323,
	212, 0, 169, 180, 265, 0, 328, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 398, 216, 0, 0, 0, 181, 190, 201,
	214, 226, 233, 244, 247, 252, 253, 255, 259, 273,
	275, 276, 277, 278, 296, 297, 301, 302, 305, 306,
	310, 311, 312, 316, 317, 324, 0, 331, 338, 339,
	340, 341, 342, 350, 351, 353, 354, 361, 389, 390,
	403, 404, 377, 0, 166, 0, 0, 172, 0, 0,
	0, 0, 0, 304, 171, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 0, 0, 0, 0, 2700, 0,
	220, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 401, 359, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 139, 0,
	524, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 322, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 0, 0, 0, 256, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 165, 0,
	0, 0, 299, 0, 0, 0, 168, 266, 0, 0,
	0, 209, 0, 334, 0, 395, 0, 236, 0, 333,
	268, 388, 0, 0, 394, 0, 371, 402, 406, 232,
	0, 200, 356, 223, 218, 0, 0, 0, 241, 321,
	213, 260, 0, 0, 0, 205, 0, 0, 0, 355,
	385, 170, 284, 386, 405, 188, 378, 285, 292, 202,
	204, 203, 182, 349, 384, 194, 207, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 242, 0, 0,
	0, 308, 191, 0, 0, 0, 399, 0, 344, 343,
	0, 249, 0, 0, 0, 329, 0, 257, 173, 0,
	408, 187, 262, 379, 0, 235, 298, 211, 0, 309,
	0, 167, 325, 280, 282, 279, 283, 239, 0, 0,
	0, 327, 346, 383, 189, 362, 0, 0, 0, 0,
	337, 0, 0, 0, 274, 227, 231, 243, 254, 0,
	332, 363, 400, 0, 184, 336, 364, 375, 365, 368,
	366, 367, 176, 370, 393, 195, 345, 348, 407, 0,
	183, 178, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 238, 0, 391, 392,
	210, 409, 0, 0, 179, 0, 0, 295, 303, 294,
	0, 387, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 230, 245, 319, 270, 320, 246, 290, 289, 291,
	272, 0, 0, 174, 0, 360, 0, 0, 369, 192,
	0, 0, 382, 0, 326, 193, 237, 228, 318, 293,
	185, 248, 358, 261, 269, 0, 0, 307, 335, 199,
	397, 357, 224, 0, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	206, 141, 0, 0, 0, 142, 0, 0, 143, 144,
	0, 0, 0, 0, 145, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 175, 186, 198, 217, 215, 229, 258, 281,
	286, 313, 347, 352, 372, 373, 374, 376, 219, 0,
	222, 197, 330, 196, 271, 251, 314, 380, 381, 323,
	212, 0, 169, 180, 265, 0, 328, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 398, 216, 0, 0, 0, 181, 190, 201,
	214, 226, 233, 244, 247, 252, 253, 255, 259, 273,
	275, 276, 277, 278, 296, 297, 301, 302, 305, 306,
	310, 311, 312, 316, 317, 324, 0, 331, 338, 339,
	340, 341, 342, 350, 351, 353, 354, 361, 389, 390,
	403, 404, 377, 0, 166, 0, 0, 172, 0, 0,
	0, 0, 0, 304, 171, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 0, 0, 0, 0, 0, 0,
	220, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 401, 359, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 139, 0,
	524, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 322, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 0, 0, 0, 256, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 165, 0,
	0, 0, 299, 0, 0, 0, 168, 266, 0, 0,
	0, 209, 0, 334, 0, 395, 0, 236, 0, 333,
	268, 388, 0, 0, 394, 0, 371, 402, 406, 232,
	0, 200, 356, 223, 218, 0, 0, 0, 241, 321,
	213, 260, 0, 0, 0, 205, 0, 0, 0, 355,
	385, 170, 284, 386, 405, 188, 378, 285, 292, 202,
	204, 203, 182, 349, 384, 194, 207, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 242, 0, 0,
	0, 308, 191, 0, 0, 0, 399, 0, 344, 343,
	0, 249, 0, 0, 0, 329, 0, 257, 173, 0,
	408, 187, 262, 379, 0, 235, 298, 211, 0, 309,
	0, 167, 325, 280, 282, 279, 283, 239, 0, 0,
	0, 327, 346, 383, 189, 362, 0, 0, 0, 0,
	337, 0, 0, 0, 274, 227, 231, 243, 254, 0,
	332, 363, 400, 0, 184, 336, 364, 375, 365, 368,
	366, 367, 176, 370, 393, 195, 345, 348, 407, 0,
	183, 178, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 238, 0, 391, 392,
	210, 409, 0, 0, 179, 0, 0, 295, 303, 294,
	0, 387, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 230, 245, 319, 270, 320, 246, 290, 289, 291,
	272, 0, 0, 174, 0, 360, 0, 0, 369, 192,
	0, 0, 382, 0, 326, 193, 237, 228, 318, 293,
	185, 248, 358, 261, 269, 0, 0, 307, 335, 199,
	397, 357, 224, 0, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 304, 0, 0, 0, 0, 0,
	206, 141, 0, 221, 0, 142, 0, 0, 143, 144,
	0, 220, 208, 0, 145, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 401, 359, 287,
	0, 315, 175, 186, 198, 217, 215, 229, 258, 281,
	286, 313, 347, 352, 372, 373, 374, 376, 219, 993,
	222, 197, 330, 196, 271, 251, 314, 380, 381, 323,
	212, 0, 169, 180, 265, 0, 328, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 396, 0,
	0, 0, 0, 322, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 398, 216, 0, 0, 0, 181, 190, 201,
	214, 226, 233, 244, 247, 252, 253, 255, 259, 273,
	275, 276, 277, 278, 296, 297, 301, 302, 305, 306,
	310, 311, 312, 316, 317, 324, 0, 331, 338, 339,
	340, 341, 342, 350, 351, 353, 354, 361, 389, 390,
	403, 404, 0, 288, 166, 0, 0, 172, 256, 0,
	0, 0, 0, 0, 171, 0, 0, 264, 0, 165,
	0, 0, 0, 299, 0, 0, 0, 168, 266, 0,
	0, 0, 209, 0, 334, 0, 395, 0, 236, 0,
	333, 268, 388, 0, 0, 394, 0, 371, 402, 406,
	232, 0, 200, 356, 223, 218, 0, 0, 0, 241,
	321, 213, 260, 0, 0, 0, 205, 0, 0, 0,
	355, 385, 170, 284, 386, 405, 188, 378, 285, 292,
	202, 204, 203, 182, 349, 384, 194, 207, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 242, 0,
	0, 0, 308, 191, 0, 0, 0, 399, 0, 344,
	343, 0, 249, 0, 0, 0, 329, 0, 257, 173,
	0, 408, 187, 262, 379, 0, 235, 298, 211, 0,
	309, 0, 167, 325, 280, 282, 279, 283, 239, 0,
	0, 0, 327, 346, 383, 189, 362, 0, 0, 0,
	0, 337, 0, 0, 0, 274, 227, 231, 243, 254,
	0, 332, 363, 400, 0, 184, 336, 364, 375, 365,
	368, 366, 367, 176, 370, 393, 195, 345, 348, 407,
	0, 183, 178, 0, 0, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 0, 0, 238, 0, 391,
	392, 210, 409, 0, 0, 179, 0, 0, 295, 303,
	294, 0, 387, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 230, 245, 319, 270, 320, 246, 290, 289,
	291, 272, 0, 0, 174, 0, 360, 0, 0, 369,
	192, 0, 0, 382, 0, 326, 193, 237, 228, 318,
	293, 185, 248, 358, 261, 269, 0, 0, 307, 335,
	199, 397, 357, 224, 0, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 206, 141, 0, 0, 0, 142, 0, 0, 143,
	144, 0, 0, 0, 0, 145, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 175, 186, 198, 217, 215, 229, 258,
	281, 286, 313, 347, 352, 372, 373, 374, 376, 219,
	0, 222, 197, 330, 196, 271, 251, 314, 380, 381,
	323, 212, 0, 169, 180, 265, 0, 328, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 398, 216, 0, 0, 0, 181, 190,
	201, 214, 226, 233, 244, 247, 252, 253, 255, 259,
	273, 275, 276, 277, 278, 296, 297, 301, 302, 305,
	306, 310, 311, 312, 316, 317, 324, 0, 331, 338,
	339, 340, 341, 342, 350, 351, 353, 354, 361, 389,
	390, 403, 404, 377, 0, 166, 0, 0, 172, 0,
	0, 0, 0, 0, 304, 171, 0, 3596, 0, 0,
	0, 0, 0, 221, 3594, 0, 0, 0, 0, 0,
	0, 220, 208, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 401, 359, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 503,
	0, 502, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 396, 0,
	0, 0, 0, 322, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 0, 165,
	0, 0, 0, 299, 0, 0, 0, 168, 266, 0,
	0, 0, 209, 0, 334, 0, 395, 0, 236, 0,
	333, 268, 388, 0, 0, 394, 0, 371, 402, 406,
	232, 0, 200, 356, 223, 218, 0, 0, 0, 241,
	321, 213, 260, 0, 0, 0, 205, 0, 0, 0,
	355, 385, 170, 284, 386, 405, 188, 378, 285, 292,
	202, 204, 203, 182, 349, 384, 194, 207, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 242, 0,
	0, 0, 308, 191, 0, 0, 0, 399, 0, 344,
	343, 0, 249, 0, 3595, 0, 329, 0, 257, 173,
	0, 408, 187, 262, 379, 0, 235, 298, 211, 0,
	309, 0, 167, 325, 280, 282, 279, 283, 239, 0,
	0, 0, 327, 346, 383, 189, 362, 0, 0, 0,
	0, 337, 0, 0, 0, 274, 227, 231, 243, 254,
	0, 332, 363, 400, 0, 184, 336, 364, 375, 365,
	368, 366, 367, 176, 370, 393, 195, 345, 348, 407,
	0, 183, 178, 0, 0, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 0, 0, 238, 0, 391,
	392, 210, 409, 0, 0, 179, 0, 0, 295, 303,
	294, 0, 387, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 230, 245, 319, 270, 320, 246, 290, 289,
	291, 272, 0, 0, 174, 0, 360, 0, 0, 369,
	192, 0, 0, 382, 0, 326, 193, 237, 228, 318,
	293, 185, 248, 358, 261, 269, 0, 0, 307, 335,
	199, 397, 357, 224, 0, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 304, 0, 0, 0, 0,
	0, 206, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 0, 220, 208, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 0, 401, 359,
	287, 0, 315, 175, 186, 198, 217, 215, 229, 258,
	281, 286, 313, 347, 352, 372, 373, 374, 376, 219,
	993, 222, 197, 330, 196, 271, 251, 314, 380, 381,
	323, 212, 0, 169, 180, 265, 0, 328, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2508, 396,
	0, 0, 0, 0, 322, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 398, 216, 0, 0, 0, 181, 190,
	201, 214, 226, 233, 244, 247, 252, 253, 255, 259,
	273, 275, 276, 277, 278, 296, 297, 301, 302, 305,
	306, 310, 311, 312, 316, 317, 324, 0, 331, 338,
	339, 340, 341, 342, 350, 351, 353, 354, 361, 389,
	390, 403, 404, 0, 288, 166, 0, 0, 172, 256,
	0, 0, 0, 0, 0, 171, 0, 0, 264, 0,
	165, 0, 0, 0, 299, 0, 0, 0, 168, 266,
	0, 0, 0, 209, 0, 334, 0, 395, 0, 236,
	0, 333, 268, 388, 0, 0, 394, 0, 371, 402,
	406, 232, 0, 200, 356, 223, 218, 0, 0, 0,
	241, 321, 213, 260, 2509, 2510, 0, 205, 0, 0,
	0, 355, 385, 170, 284, 386, 405, 188, 378, 285,
	292, 202, 204, 203, 182, 349, 384, 194, 207, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 242,
	0, 0, 0, 308, 191, 0, 0, 0, 399, 0,
	344, 343, 0, 249, 0, 0, 0, 329, 0, 257,
	173, 0, 408, 187, 262, 379, 0, 235, 298, 211,
	0, 309, 0, 167, 325, 280, 282, 279, 283, 239,
	0, 0, 0, 327, 346, 383, 189, 362, 0, 0,
	0, 0, 337, 0, 0, 0, 274, 227, 231, 243,
	254, 0, 332, 363, 400, 0, 184, 336, 364, 375,
	365, 368, 366, 367, 176, 370, 393, 195, 345, 348,
	407, 0, 183, 178, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 0, 0, 238, 0,
	391, 392, 210, 409, 0, 0, 179, 0, 0, 295,
	303, 294, 0, 387, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 230, 245, 319, 270, 320, 246, 290,
	289, 291, 272, 0, 0, 174, 0, 360, 0, 0,
	369, 192, 0, 0, 382, 0, 326, 193, 237, 228,
	318, 293, 185, 248, 358, 261, 269, 0, 0, 307,
	335, 199, 397, 357, 224, 0, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 206, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 175, 186, 198, 217, 215, 229,
	258, 281, 286, 313, 347, 352, 372, 373, 374, 376,
	219, 0, 222, 197, 330, 196, 271, 251, 314, 380,
	381, 323, 212, 0, 169, 180, 265, 0, 328, 234,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 398, 216, 0, 0, 0, 181,
	190, 201, 214, 226, 233, 244, 247, 252, 253, 255,
	259, 273, 275, 276, 277, 278, 296, 297, 301, 302,
	305, 306, 310, 311, 312, 316, 317, 324, 0, 331,
	338, 339, 340, 341, 342, 350, 351, 353, 354, 361,
	389, 390, 403, 404, 377, 0, 166, 0, 0, 172,
	0, 0, 0, 0, 0, 304, 171, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 0, 220, 208, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 0, 401, 359,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	503, 0, 502, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 396,
	0, 0, 0, 0, 322, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 0, 0, 0, 0, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	165, 0, 0, 0, 299, 0, 0, 0, 168, 266,
	0, 0, 0, 209, 0, 334, 0, 395, 0, 236,
	0, 333, 268, 388, 0, 0, 394, 0, 371, 402,
	406, 232, 0, 200, 356, 223, 218, 0, 0, 0,
	241, 321, 213, 260, 0, 0, 0, 205, 0, 0,
	0, 355, 385, 170, 284, 386, 405, 188, 378, 285,
	292, 202, 204, 203, 182, 349, 384, 194, 207, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 242,
	0, 0, 0, 308, 191, 0, 0, 0, 399, 0,
	344, 343, 0, 249, 0, 0, 0, 329, 0, 257,
	173, 0, 408, 187, 262, 379, 0, 235, 298, 211,
	0, 309, 0, 167, 325, 280, 282, 279, 283, 239,
	0, 0, 0, 327, 346, 383, 189, 362, 0, 0,
	0, 0, 337, 0, 0, 0, 274, 227, 231, 243,
	254, 0, 332, 363, 400, 0, 184, 336, 364, 375,
	365, 368, 366, 367, 176, 370, 393, 195, 345, 348,
	407, 0, 183, 178, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 0, 0, 238, 0,
	391, 392, 210, 409, 0, 0, 179, 0, 0, 295,
	303, 294, 0, 387, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 230, 245, 319, 270, 320, 246, 290,
	289, 291, 272, 0, 0, 174, 0, 360, 0, 0,
	369, 192, 0, 0, 382, 0, 326, 193, 237, 228,
	318, 293, 185, 248, 358, 261, 269, 0, 0, 307,
	335, 199, 397, 357, 224, 0, 300, 0, 0, 1806,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 206, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 175, 186, 198, 217, 215, 229,
	258, 281, 286, 313, 347, 352, 372, 373, 374, 376,
	219, 0, 222, 197, 330, 196, 271, 251, 314, 380,
	381, 323, 212, 0, 169, 180, 265, 0, 328, 234,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 398, 216, 0, 0, 0, 181,
	190, 201, 214, 226, 233, 244, 247, 252, 253, 255,
	259, 273, 275, 276, 277, 278, 296, 297, 301, 302,
	305, 306, 310, 311, 312, 316, 317, 324, 0, 331,
	338, 339, 340, 341, 342, 350, 351, 353, 354, 361,
	389, 390, 403, 404, 377, 0, 166, 0, 0, 172,
	0, 0, 0, 0, 0, 304, 171, 0, 0, 0,
	0, 0, 0, 0, 221, 1380, 0, 0, 0, 0,
	0, 0, 220, 208, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 0, 401, 359,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	993, 0, 1379, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 396,
	0, 0, 0, 0, 322, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 0, 0, 0, 0, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	165, 0, 0, 0, 299, 0, 0, 0, 168, 266,
	0, 0, 0, 209, 0, 334, 0, 395, 0, 236,
	0, 333, 268, 388, 0, 0, 394, 0, 371, 402,
	406, 232, 0, 200, 356, 223, 218, 0, 0, 0,
	241, 321, 213, 260, 0, 0, 0, 205, 0, 0,
	0, 355, 385, 170, 284, 386, 405, 188, 378, 285,
	292, 202, 204, 203, 182, 349, 384, 194, 207, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 242,
	0, 0, 0, 308, 191, 0, 0, 0, 399, 0,
	344, 343, 0, 249, 0, 0, 0, 329, 0, 257,
	173, 0, 408, 187, 262, 379, 0, 235, 298, 211,
	0, 309, 0, 167, 325, 280, 282, 279, 283, 239,
	0, 0, 0, 327, 346, 383, 189, 362, 0, 0,
	0, 0, 337, 0, 0, 0, 274, 227, 231, 243,
	254, 0, 332, 363, 400, 0, 184, 336, 364, 375,
	365, 368, 366, 367, 176, 370, 393, 195, 345, 348,
	407, 0, 183, 178, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 0, 0, 238, 0,
	391, 392, 210, 409, 0, 0, 179, 0, 0, 295,
	303, 294, 0, 387, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 230, 245, 319, 270, 320, 246, 290,
	289, 291, 272, 0, 0, 174, 0, 360, 0, 0,
	369, 192, 0, 0, 382, 0, 326, 193, 237, 228,
	318, 293, 185, 248, 358, 261, 269, 0, 0, 307,
	335, 199, 397, 357, 224, 0, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 206, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 175, 186, 198, 217, 215, 229,
	258, 281, 286, 313, 347, 352, 372, 373, 374, 376,
	219, 0, 222, 197, 330, 196, 271, 251, 314, 380,
	381, 323, 212, 0, 169, 180, 265, 0, 328, 234,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 398, 216, 0, 0, 0, 181,
	190, 201, 214, 226, 233, 244, 247, 252, 253, 255,
	259, 273, 275, 276, 277, 278, 296, 297, 301, 302,
	305, 306, 310, 311, 312, 316, 317, 324, 0, 331,
	338, 339, 340, 341, 342, 350, 351, 353, 354, 361,
	389, 390, 403, 404, 377, 0, 166, 0, 0, 172,
	0, 0, 0, 0, 0, 304, 171, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 0, 220, 208, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 0, 401, 359,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	503, 0, 502, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 396,
	0, 0, 0, 0, 322, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 0, 0, 0, 0, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	165, 0, 0, 0, 299, 0, 0, 0, 168, 266,
	0, 0, 0, 209, 0, 334, 0, 395, 0, 236,
	0, 333, 268, 388, 0, 0, 394, 0, 371, 402,
	406, 232, 0, 200, 356, 223, 218, 0, 0, 0,
	241, 321, 213, 260, 0, 0, 0, 205, 0, 0,
	0, 355, 385, 170, 284, 386, 405, 188, 378, 285,
	292, 202, 204, 203, 182, 349, 384, 194, 207, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 242,
	0, 0, 0, 308, 191, 0, 0, 0, 399, 0,
	344, 343, 0, 249, 0, 0, 0, 329, 0, 257,
	173, 0, 408, 187, 262, 379, 0, 235, 298, 211,
	0, 309, 0, 167, 325, 280, 282, 279, 283, 239,
	0, 0, 0, 327, 346, 383, 189, 362, 0, 0,
	0, 0, 337, 0, 0, 0, 274, 227, 231, 243,
	254, 0, 332, 363, 400, 0, 184, 336, 364, 375,
	365, 368, 366, 367, 176, 370, 393, 195, 345, 348,
	407, 0, 183, 178, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 0, 0, 238, 0,
	391, 392, 210, 409, 0, 0, 179, 0, 0, 295,
	303, 294, 0, 387, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 230, 245, 319, 270, 320, 246, 290,
	289, 291, 272, 0, 0, 174, 0, 360, 0, 0,
	369, 192, 0, 0, 382, 0, 326, 193, 237, 228,
	318, 293, 185, 248, 358, 261, 269, 0, 0, 307,
	335, 199, 397, 357, 224, 0, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 206, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 175, 186, 198, 217, 215, 229,
	258, 281, 286, 313, 347, 352, 372, 373, 374, 376,
	219, 0, 222, 197, 330, 196, 271, 251, 314, 380,
	381, 323, 212, 0, 169, 180, 265, 0, 328, 234,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 398, 216, 0, 0, 0, 181,
	190, 201, 214, 226, 233, 244, 247, 252, 253, 255,
	259, 273, 275, 276, 277, 278, 296, 297, 301, 302,
	305, 306, 310, 311, 312, 316, 317, 324, 0, 331,
	338, 339, 340, 341, 342, 350, 351, 353, 354, 361,
	389, 390, 403, 404, 377, 0, 166, 0, 0, 172,
	0, 0, 0, 0, 0, 304, 171, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 0, 220, 208, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 0, 401, 359,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2862, 0, 0, 0, 0,
	2864, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 396,
	0, 0, 0, 0, 322, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 0, 0, 0, 0, 256,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	165, 0, 0, 0, 299, 0, 0, 0, 168, 266,
	0, 0, 0, 209, 0, 334, 0, 395, 0, 236,
	0, 333, 268, 388, 0, 0, 394, 0, 371, 402,
	406, 232, 0, 200, 356, 223, 218, 0, 0, 0,
	241, 321, 213, 260, 0, 0, 0, 205, 0, 0,
	0, 355, 385, 170, 284, 386, 405, 188, 378, 285,
	292, 202, 204, 203, 182, 349, 384, 194, 207, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 242,
	0, 0, 0, 308, 191, 0, 0, 0, 399, 0,
	344, 343, 0, 249, 0, 0, 0, 329, 0, 257,
	173, 0, 408, 187, 262, 379, 0, 235, 298, 211,
	0, 309, 0, 167, 325, 280, 282, 279, 283, 239,
	0, 0, 0, 327, 346, 383, 189, 362, 0, 0,
	0, 0, 337, 0, 0, 0, 274, 227, 231, 243,
	254, 0, 332, 363, 400, 0, 184, 336, 364, 375,
	365, 368, 366, 367, 176, 370, 393, 195, 345, 348,
	407, 0, 183, 178, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 0, 0, 238, 0,
	391, 392, 210, 409, 0, 0, 179, 0, 0, 295,
	303, 294, 0, 387, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 230, 245, 319, 270, 320, 246, 290,
	289, 291, 272, 0, 0, 174, 0, 360, 0, 0,
	369, 192, 0, 0, 382, 0, 326, 193, 237, 228,
	318, 293, 185, 248, 358, 261, 269, 0, 0, 307,
	335, 199, 397, 357, 224, 0, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 304, 0, 0, 0,
	0, 0, 206, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 0, 220, 208, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 401,
	359, 287, 0, 315, 175, 186, 198, 217, 215, 229,
	258, 281, 286, 313, 347, 352, 372, 373, 374, 376,
	219, 993, 222, 197, 330, 196, 271, 251, 314, 380,
	381, 323, 212, 0, 169, 180, 265, 0, 328, 234,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	396, 0, 0, 0, 0, 322, 240, 0, 0, 0,
	0, 0, 0, 2841, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 398, 216, 0, 0, 0, 181,
	190, 201, 214, 226, 233, 244, 247, 252, 253, 255,
	259, 273, 275, 276, 277, 278, 296, 297, 301, 302,
	305, 306, 310, 311, 312, 316, 317, 324, 0, 331,
	338, 339, 340, 341, 342, 350, 351, 353, 354, 361,
	389, 390, 403, 404, 0, 288, 166, 0, 0, 172,
	256, 0, 0, 0, 0, 0, 171, 0, 0, 264,
	0, 165, 0, 0, 0, 299, 0, 0, 0, 168,
	266, 0, 0, 0, 209, 0, 334, 0, 395, 0,
	236, 0, 333, 268, 388, 0, 0, 394, 0, 371,
	402, 406, 232, 0, 200, 356, 223, 218, 0, 0,
	0, 241, 321, 213, 260, 0, 0, 0, 205, 0,
	0, 0, 355, 385, 170, 284, 386, 405, 188, 378,
	285, 292, 202, 204, 203, 182, 349, 384, 194, 207,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	242, 0, 0, 0, 308, 191, 0, 0, 0, 399,
	0, 344, 343, 0, 249, 0, 0, 0, 329, 0,
	257, 173, 0, 408, 187, 262, 379, 0, 235, 298,
	211, 0, 309, 0, 167, 325, 280, 282, 279, 283,
	239, 0, 0, 0, 327, 346, 383, 189, 362, 0,
	0, 0, 0, 337, 0, 0, 0, 274, 227, 231,
	243, 254, 0, 332, 363, 400, 0, 184, 336, 364,
	375, 365, 368, 366, 367, 176, 370, 393, 195, 345,
	348, 407, 0, 183, 178, 0, 0, 0, 0, 0,
	0, 0, 177, 0, 0, 0, 0, 0, 0, 238,
	0, 391, 392, 210, 409, 0, 0, 179, 0, 0,
	295, 303, 294, 0, 387, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 230, 245, 319, 270, 320, 246,
	290, 289, 291, 272, 0, 0, 174, 0, 360, 0,
	0, 369, 192, 0, 0, 382, 0, 326, 193, 237,
	228, 318, 293, 185, 248, 358, 261, 269, 0, 0,
	307, 335, 199, 397, 357, 224, 0, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 206, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 315, 175, 186, 198, 217, 215,
	229, 258, 281, 286, 313, 347, 352, 372, 373, 374,
	376, 219, 0, 222, 197, 330, 196, 271, 251, 314,
	380, 381, 323, 212, 0, 169, 180, 265, 0, 328,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 398, 216, 0, 0, 0,
	181, 190, 201, 214, 226, 233, 244, 247, 252, 253,
	255, 259, 273, 275, 276, 277, 278, 296, 297, 301,
	302, 305, 306, 310, 311, 312, 316, 317, 324, 0,
	331, 338, 339, 340, 341, 342, 350, 351, 353, 354,
	361, 389, 390, 403, 404, 377, 0, 166, 0, 0,
	172, 0, 0, 0, 0, 0, 304, 171, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 0, 220, 208, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 401,
	359, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 86, 0, 0, 0,
	0, 993, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	396, 0, 0, 0, 0, 322, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 0, 0, 0, 0,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	0, 165, 0, 0, 0, 299, 0, 0, 0, 168,
	266, 0, 0, 0, 209, 0, 334, 0, 395, 0,
	236, 0, 333, 268, 388, 0, 0, 394, 0, 371,
	402, 406, 232, 0, 200, 356, 223, 218, 0, 0,
	0, 241, 321, 213, 260, 0, 0, 0, 205, 0,
	0, 0, 355, 385, 170, 284, 386, 405, 188, 378,
	285, 292, 202, 204, 203, 182, 349, 384, 194, 207,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	242, 0, 0, 0, 308, 191, 0, 0, 0, 399,
	0, 344, 343, 0, 249, 0, 0, 0, 329, 0,
	257, 173, 0, 408, 187, 262, 379, 0, 235, 298,
	211, 0, 309, 0, 167, 325, 280, 282, 279, 283,
	239, 0, 0, 0, 327, 346, 383, 189, 362, 0,
	0, 0, 0, 337, 0, 0, 0, 274, 227, 231,
	243, 254, 0, 332, 363, 400, 0, 184, 336, 364,
	375, 365, 368, 366, 367, 176, 370, 393, 195, 345,
	348, 407, 0, 183, 178, 0, 0, 0, 0, 0,
	0, 0, 177, 0, 0, 0, 0, 0, 0, 238,
	0, 391, 392, 210, 409, 0, 0, 179, 0, 0,
	295, 303, 294, 0, 387, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 230, 245, 319, 270, 320, 246,
	290, 289, 291, 272, 0, 0, 174, 0, 360, 0,
	0, 369, 192, 0, 0, 382, 0, 326, 193, 237,
	228, 318, 293, 185, 248, 358, 261, 269, 0, 0,
	307, 335, 199, 397, 357, 224, 0, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 304, 0, 0,
	0, 0, 0, 206, 0, 0, 221, 0, 0, 0,
	0, 0, 0, 0, 220, 208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 267, 0, 0,
	401, 359, 287, 0, 315, 175, 186, 198, 217, 215,
	229, 258, 281, 286, 313, 347, 352, 372, 373, 374,
	376, 219, 993, 222, 197, 330, 196, 271, 251, 314,
	380, 381, 323, 212, 0, 169, 180, 265, 0, 328,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 396, 0, 0, 0, 0, 322, 240, 0, 0,
	0, 0, 0, 0, 2214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 398, 216, 0, 0, 0,
	181, 190, 201, 214, 226, 233, 244, 247, 252, 253,
	255, 259, 273, 275, 276, 277, 278, 296, 297, 301,
	302, 305, 306, 310, 311, 312, 316, 317, 324, 0,
	331, 338, 339, 340, 341, 342, 350, 351, 353, 354,
	361, 389, 390, 403, 404, 0, 288, 166, 0, 0,
	172, 256, 0, 0, 0, 0, 0, 171, 0, 0,
	264, 0, 165, 0, 0, 0, 299, 0, 0, 0,
	168, 266, 0, 0, 0, 209, 0, 334, 0, 395,
	0, 236, 0, 333, 268, 388, 0, 0, 394, 0,
	371, 402, 406, 232, 0, 200, 356, 223, 218, 0,
	0, 0, 241, 321, 213, 260, 0, 0, 0, 205,
	0, 0, 0, 355, 385, 170, 284, 386, 405, 188,
	378, 285, 292, 202, 204, 203, 182, 349, 384, 194,
	207, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 242, 0, 0, 0, 308, 191, 0, 0, 0,
	399, 0, 344, 343, 0, 249, 0, 0, 0, 329,
	0, 257, 173, 0, 408, 187, 262, 379, 0, 235,
	298, 211, 0, 309, 0, 167, 325, 280, 282, 279,
	283, 239, 0, 0, 0, 327, 346, 383, 189, 362,
	0, 0, 0, 0, 337, 0, 0, 0, 274, 227,
	231, 243, 254, 0, 332, 363, 400, 0, 184, 336,
	364, 375, 365, 368, 366, 367, 176, 370, 393, 195,
	345, 348, 407, 0, 183, 178, 0, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 0, 0, 0, 0,
	238, 0, 391, 392, 210, 409, 0, 0, 179, 0,
	0, 295, 303, 294, 0, 387, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 230, 245, 319, 270, 320,
	246, 290, 289, 291, 272, 0, 0, 174, 0, 360,
	0, 0, 369, 192, 0, 0, 382, 0, 326, 193,
	237, 228, 318, 293, 185, 248, 358, 261, 269, 0,
	0, 307, 335, 199, 397, 357, 224, 0, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	0, 0, 0, 0, 206, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 2262, 2263, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 401, 359, 287, 0, 315, 175, 186, 198, 217,
	215, 229, 258, 281, 286, 313, 347, 352, 372, 373,
	374, 376, 219, 993, 222, 197, 330, 196, 271, 251,
	314, 380, 381, 323, 212, 0, 169, 180, 265, 0,
	328, 234, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 396, 0, 0, 0, 0, 322, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 398, 216, 0, 0,
	0, 181, 190, 201, 214, 226, 233, 244, 247, 252,
	253, 255, 259, 273, 275, 276, 277, 278, 296, 297,
	301, 302, 305, 306, 310, 311, 312, 316, 317, 324,
	0, 331, 338, 339, 340, 341, 342, 350, 351, 353,
	354, 361, 389, 390, 403, 404, 0, 288, 166, 0,
	0, 172, 256, 0, 0, 0, 0, 0, 171, 0,
	0, 264, 0, 165, 0, 0, 0, 299, 0, 0,
	0, 168, 266, 0, 0, 0, 209, 0, 334, 0,
	395, 0, 236, 0, 333, 268, 388, 0, 0, 394,
	0, 371, 402, 406, 232, 0, 200, 356, 223, 218,
	0, 0, 0, 241, 321, 213, 260, 0, 0, 0,
	205, 0, 0, 0, 355, 385, 170, 284, 386, 405,
	188, 378, 285, 292, 202, 204, 203, 182, 349, 384,
	194, 207, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 242, 0, 0, 0, 308, 191, 0, 0,
	0, 399, 0, 344, 343, 0, 249, 0, 0, 0,
	329, 0, 257, 173, 0, 408, 187, 262, 379, 0,
	235, 298, 211, 0, 309, 0, 167, 325, 280, 282,
	279, 283, 239, 0, 0, 0, 327, 346, 383, 189,
	362, 0, 0, 0, 0, 337, 0, 0, 0, 274,
	227, 231, 243, 254, 0, 332, 363, 400, 0, 184,
	336, 364, 375, 365, 368, 366, 367, 176, 370, 393,
	195, 345, 348, 407, 0, 183, 178, 0, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 238, 0, 391, 392, 210, 409, 0, 0, 179,
	0, 0, 295, 303, 294, 0, 387, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 230, 245, 319, 270,
	320, 246, 290, 289, 291, 272, 0, 0, 174, 0,
	360, 0, 0, 369, 192, 0, 0, 382, 0, 326,
	193, 237, 228, 318, 293, 185, 248, 358, 261, 269,
	0, 0, 307, 335, 199, 397, 357, 224, 0, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 304,
	0, 0, 0, 0, 0, 206, 0, 0, 221, 0,
	0, 0, 0, 0, 0, 0, 220, 208, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 401, 359, 287, 0, 315, 175, 186, 198,
	217, 215, 229, 258, 281, 286, 313, 347, 352, 372,
	373, 374, 376, 219, 993, 222, 197, 330, 196, 271,
	251, 314, 380, 381, 323, 212, 0, 169, 180, 265,
	0, 328, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 396, 0, 0, 0, 0, 322, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 216, 0,
	0, 0, 181, 190, 201, 214, 226, 233, 244, 247,
	252, 253, 255, 259, 273, 275, 276, 277, 278, 296,
	297, 301, 302, 305, 306, 310, 311, 312, 316, 317,
	324, 0, 331, 338, 339, 340, 341, 342, 350, 351,
	353, 354, 361, 389, 390, 403, 404, 0, 288, 166,
	0, 0, 172, 256, 0, 0, 0, 0, 0, 171,
	0, 0, 264, 0, 165, 0, 0, 0, 299, 0,
	0, 0, 168, 266, 0, 0, 0, 209, 0, 334,
	0, 395, 0, 236, 0, 333, 268, 388, 0, 0,
	394, 0, 371, 402, 406, 232, 0, 200, 356, 223,
	218, 0, 0, 0, 241, 321, 213, 260, 0, 0,
	0, 205, 0, 0, 0, 355, 385, 170, 284, 386,
	405, 188, 378, 285, 292, 202, 204, 203, 182, 349,
	384, 194, 207, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 242, 0, 0, 0, 308, 191, 0,
	0, 0, 399, 0, 344, 343, 0, 249, 0, 0,
	0, 329, 0, 257, 173, 0, 408, 187, 262, 379,
	0, 235, 298, 211, 0, 309, 0, 167, 325, 280,
	282, 279, 283, 239, 0, 0, 0, 327, 346, 383,
	189, 362, 0, 0, 0, 0, 337, 0, 0, 0,
	274, 227, 231, 243, 254, 0, 332, 363, 400, 0,
	184, 336, 364, 375, 365, 368, 366, 367, 176, 370,
	393, 195, 345, 348, 407, 0, 183, 178, 0, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 238, 0, 391, 392, 210, 409, 0, 0,
	179, 0, 0, 295, 303, 294, 0, 387, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 230, 245, 319,
	270, 320, 246, 290, 289, 291, 272, 0, 0, 174,
	0, 360, 0, 0, 369, 192, 0, 0, 382, 0,
	326, 193, 237, 228, 318, 293, 185, 248, 358, 261,
	269, 0, 0, 307, 335, 199, 397, 357, 224, 0,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	304, 0, 0, 0, 0, 0, 206, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 220, 208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	267, 0, 0, 401, 359, 287, 0, 315, 175, 186,
	198, 217, 215, 229, 258, 281, 286, 313, 347, 352,
	372, 373, 374, 376, 219, 2864, 222, 197, 330, 196,
	271, 251, 314, 380, 381, 323, 212, 0, 169, 180,
	265, 0, 328, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 396, 0, 0, 0, 0, 322,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 398, 216,
	0, 0, 0, 181, 190, 201, 214, 226, 233, 244,
	247, 252, 253, 255, 259, 273, 275, 276, 277, 278,
	296, 297, 301, 302, 305, 306, 310, 311, 312, 316,
	317, 324, 0, 331, 338, 339, 340, 341, 342, 350,
	351, 353, 354, 361, 389, 390, 403, 404, 0, 288,
	166, 0, 0, 172, 256, 0, 0, 0, 0, 0,
	171, 0, 0, 264, 0, 165, 0, 0, 0, 299,
	0, 0, 0, 168, 266, 0, 0, 0, 209, 0,
	334, 0, 395, 0, 236, 0, 333, 268, 388, 0,
	0, 394, 0, 371, 402, 406, 232, 0, 200, 356,
	223, 218, 0, 0, 0, 241, 321, 213, 260, 0,
	0, 0, 205, 0, 0, 0, 355, 385, 170, 284,
	386, 405, 188, 378, 285, 292, 202, 204, 203, 182,
	349, 384, 194, 207, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 242, 0, 0, 0, 308, 191,
	0, 0, 0, 399, 0, 344, 343, 0, 249, 0,
	0, 0, 329, 0, 257, 173, 0, 408, 187, 262,
	379, 0, 235, 298, 211, 0, 309, 0, 167, 325,
	280, 282, 279, 283, 239, 0, 0, 0, 327, 346,
	383, 189, 362, 0, 0, 0, 0, 337, 0, 0,
	0, 274, 227, 231, 243, 254, 0, 332, 363, 400,
	0, 184, 336, 364, 375, 365, 368, 366, 367, 176,
	370, 393, 195, 345, 348, 407, 0, 183, 178, 0,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 0, 0, 238, 0, 391, 392, 210, 409, 0,
	0, 179, 0, 0, 295, 303, 294, 0, 387, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 230, 245,
	319, 270, 320, 246, 290, 289, 291, 272, 0, 0,
	174, 0, 360, 0, 0, 369, 192, 0, 0, 382,
	0, 326, 193, 237, 228, 318, 293, 185, 248, 358,
	261, 269, 0, 0, 307, 335, 199, 397, 357, 224,
	0, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 304, 0, 0, 0, 0, 0, 206, 0, 0,
	221, 0, 0, 0, 0, 0, 0, 0, 220, 208,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 401, 359, 287, 0, 315, 175,
	186, 198, 217, 215, 229, 258, 281, 286, 313, 347,
	352, 372, 373, 374, 376, 219, 1779, 222, 197, 330,
	196, 271, 251, 314, 380, 381, 323, 212, 0, 169,
	180, 265, 0, 328, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 396, 0, 0, 0, 0,
	322, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	216, 0, 0, 0, 181, 190, 201, 214, 226, 233,
	244, 247, 252, 253, 255, 259, 273, 275, 276, 277,
	278, 296, 297, 301, 302, 305, 306, 310, 311, 312,
	316, 317, 324, 0, 331, 338, 339, 340, 341, 342,
	350, 351, 353, 354, 361, 389, 390, 403, 404, 0,
	288, 166, 0, 0, 172, 256, 0, 0, 0, 0,
	0, 171, 0, 0, 264, 0, 165, 0, 0, 0,
	299, 0, 0, 0, 168, 266, 0, 0, 0, 209,
	0, 334, 0, 395, 0, 236, 0, 333, 268, 388,
	0, 0, 394, 0, 371, 402, 406, 232, 0, 200,
	356, 223, 218, 0, 0, 0, 241, 321, 213, 260,
	0, 0, 0, 205, 0, 0, 0, 355, 385, 170,
	284, 386, 405, 188, 378, 285, 292, 202, 204, 203,
	182, 349, 384, 194, 207, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 242, 0, 0, 0, 308,
	191, 0, 0, 0, 399, 0, 344, 343, 0, 249,
	0, 0, 0, 329, 0, 257, 173, 0, 408, 187,
	262, 379, 0, 235, 298, 211, 0, 309, 0, 167,
	325, 280, 282, 279, 283, 239, 0, 0, 0, 327,
	346, 383, 189, 362, 0, 0, 0, 0, 337, 0,
	0, 0, 274, 227, 231, 243, 254, 0, 332, 363,
	400, 0, 184, 336, 364, 375, 365, 368, 366, 367,
	176, 370, 393, 195, 345, 348, 407, 0, 183, 178,
	0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 238, 0, 391, 392, 210, 409,
	0, 0, 179, 0, 0, 295, 303, 294, 0, 387,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 230,
	245, 319, 270, 320, 246, 290, 289, 291, 272, 0,
	0, 174, 0, 360, 0, 0, 369, 192, 0, 0,
	382, 0, 326, 193, 237, 228, 318, 293, 185, 248,
	358, 261, 269, 0, 0, 307, 335, 199, 397, 357,
	224, 0, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 377, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 304, 0, 0, 0, 0, 0, 206, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 220,
	208, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 267, 0, 0, 401, 359, 287, 0, 315,
	175, 186, 198, 217, 215, 229, 258, 281, 286, 313,
	347, 352, 372, 373, 374, 376, 219, 139, 222, 197,
	330, 196, 271, 251, 314, 380, 381, 323, 212, 0,
	169, 180, 265, 0, 328, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 396, 0, 0, 0,
	0, 322, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	398, 216, 0, 0, 0, 181, 190, 201, 214, 226,
	233, 244, 247, 252, 253, 255, 259, 273, 275, 276,
	277, 278, 296, 297, 301, 302, 305, 306, 310, 311,
	312, 316, 317, 324, 0, 331, 338, 339, 340, 341,
	342, 350, 351, 353, 354, 361, 389, 390, 403, 404,
	0, 288, 166, 0, 0, 172, 256, 0, 0, 0,
	0, 0, 171, 0, 0, 264, 0, 165, 0, 0,
	0, 299, 0, 0, 0, 168, 266, 0, 0, 0,
	209, 0, 334, 0, 395, 0, 236, 0, 333, 268,
	388, 0, 0, 394, 0, 371, 402, 406, 232, 0,
	200, 356, 223, 218, 0, 0, 0, 241, 321, 213,
	260, 0, 0, 0, 205, 0, 0, 0, 355, 385,
	170, 284, 386, 405, 188, 378, 285, 292, 202, 204,
	203, 182, 349, 384, 194, 207, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 242, 0, 0, 0,
	308, 191, 0, 0, 0, 399, 0, 344, 343, 0,
	249, 0, 0, 0, 329, 0, 257, 173, 0, 408,
	187, 262, 379, 0, 235, 298, 211, 0, 309, 0,
	167, 325, 280, 282, 279, 283, 239, 0, 0, 0,
	327, 346, 383, 189, 362, 0, 0, 0, 0, 337,
	0, 0, 0, 274, 227, 231, 243, 254, 0, 332,
	363, 400, 0, 184, 336, 364, 375, 365, 368, 366,
	367, 176, 370, 393, 195, 345, 348, 407, 0, 183,
	178, 0, 0, 0, 0, 0, 0, 0, 177, 0,
	0, 0, 0, 0, 0, 238, 0, 391, 392, 210,
	409, 0, 0, 179, 0, 0, 295, 303, 294, 0,
	387, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	230, 245, 319, 270, 320, 246, 290, 289, 291, 272,
	0, 0, 174, 0, 360, 0, 0, 369, 192, 0,
	0, 382, 0, 326, 193, 237, 228, 318, 293, 185,
	248, 358, 261, 269, 0, 0, 307, 335, 199, 397,
	357, 224, 0, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 0, 0, 0, 0, 0, 206,
	0, 0, 221, 0, 0, 0, 0, 0, 0, 0,
	220, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 401, 359, 287, 0,
	315, 175, 186, 198, 217, 215, 229, 258, 281, 286,
	313, 347, 352, 372, 373, 374, 376, 219, 464, 222,
	197, 330, 196, 271, 251, 314, 380, 381, 323, 212,
	0, 169, 180, 265, 0, 328, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 396, 0, 0,
	0, 0, 322, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 398, 216, 0, 0, 0, 181, 190, 201, 214,
	226, 233, 244, 247, 252, 253, 255, 259, 273, 275,
	276, 277, 278, 296, 297, 301, 302, 305, 306, 310,
	311, 312, 316, 317, 324, 0, 331, 338, 339, 340,
	341, 342, 350, 351, 353, 354, 361, 389, 390, 403,
	404, 0, 288, 166, 0, 0, 172, 256, 0, 0,
	0, 0, 0, 171, 0, 0, 264, 0, 165, 0,
	0, 0, 299, 0, 0, 0, 168, 266, 0, 0,
	0, 209, 0, 334, 0, 395, 0, 236, 0, 333,
	268, 388, 0, 0, 394, 0, 371, 402, 406, 232,
	0, 200, 356, 223, 218, 0, 0, 0, 241, 321,
	213, 260, 0, 0, 0, 205, 0, 0, 0, 355,
	385, 170, 284, 386, 405, 188, 378, 285, 292, 202,
	204, 203, 182, 349, 384, 194, 207, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 242, 0, 0,
	0, 308, 191, 0, 0, 0, 399, 0, 344, 343,
	0, 249, 0, 0, 0, 329, 0, 257, 173, 0,
	408, 187, 262, 379, 0, 235, 298, 211, 0, 309,
	0, 167, 325, 280, 282, 279, 283, 239, 0, 0,
	0, 327, 346, 383, 189, 362, 0, 0, 0, 0,
	337, 0, 0, 0, 274, 227, 231, 243, 254, 0,
	332, 363, 400, 0, 184, 336, 364, 375, 365, 368,
	366, 367, 176, 370, 393, 195, 345, 348, 407, 0,
	183, 178, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 238, 0, 391, 392,
	210, 409, 0, 0, 179, 0, 0, 295, 303, 294,
	0, 387, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 230, 245, 319, 270, 320, 246, 290, 289, 291,
	272, 0, 0, 174, 0, 360, 0, 0, 369, 192,
	0, 0, 382, 0, 326, 193, 237, 228, 318, 293,
	185, 248, 358, 261, 269, 0, 0, 307, 335, 199,
	397, 357, 224, 0, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 304, 0, 0, 0, 0, 0,
	206, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	0, 220, 208, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 401, 359, 287,
	0, 315, 175, 186, 198, 217, 215, 229, 258, 281,
	286, 313, 347, 352, 372, 373, 374, 376, 219, 1043,
	222, 197, 330, 196, 271, 251, 314, 380, 381, 323,
	212, 0, 169, 180, 265, 0, 328, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 396, 0,
	0, 0, 0, 322, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 398, 216, 0, 0, 0, 181, 190, 201,
	214, 226, 233, 244, 247, 252, 253, 255, 259, 273,
	275, 276, 277, 278, 296, 297, 301, 302, 305, 306,
	310, 311, 312, 316, 317, 324, 0, 331, 338, 339,
	340, 341, 342, 350, 351, 353, 354, 361, 389, 390,
	403, 404, 0, 288, 166, 0, 0, 172, 256, 0,
	0, 0, 0, 0, 171, 0, 0, 264, 0, 165,
	0, 0, 0, 299, 0, 0, 0, 168, 266, 0,
	0, 0, 209, 0, 334, 0, 395, 0, 236, 0,
	333, 268, 388, 0, 0, 394, 0, 371, 402, 406,
	232, 0, 200, 356, 223, 218, 0, 0, 0, 241,
	321, 213, 260, 0, 0, 0, 205, 0, 0, 0,
	355, 385, 170, 284, 386, 405, 188, 378, 285, 292,
	202, 204, 203, 182, 349, 384, 194, 207, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 242, 0,
	0, 0, 308, 191, 0, 0, 0, 399, 0, 344,
	343, 0, 249, 0, 0, 0, 329, 0, 257, 173,
	0, 408, 187, 262, 379, 0, 235, 298, 211, 0,
	309, 0, 167, 325, 280, 282, 279, 283, 239, 0,
	0, 0, 327, 346, 383, 189, 362, 0, 0, 0,
	0, 337, 0, 0, 0, 274, 227, 231, 243, 254,
	0, 332, 363, 400, 0, 184, 336, 364, 375, 365,
	368, 366, 367, 176, 370, 393, 195, 345, 348, 407,
	0, 183, 178, 0, 0, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 0, 0, 238, 0, 391,
	392, 210, 409, 0, 0, 179, 0, 0, 295, 303,
	294, 0, 387, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 230, 245, 319, 270, 320, 246, 290, 289,
	291, 272, 0, 0, 174, 0, 360, 0, 0, 369,
	192, 0, 0, 382, 0, 326, 193, 237, 228, 318,
	293, 185, 248, 358, 261, 269, 0, 0, 307, 335,
	199, 397, 357, 224, 0, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 304, 0, 0, 0, 0,
	0, 206, 0, 0, 221, 0, 0, 0, 0, 0,
	0, 0, 220, 208, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 0, 401, 359,
	287, 0, 315, 175, 186, 198, 217, 215, 229, 258,
	281, 286, 313, 347, 352, 372, 373, 374, 376, 219,
	1033, 222, 197, 330, 196, 271, 251, 314, 380, 381,
	323, 212, 0, 169, 180, 265, 0, 328, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 396,
	0, 0, 0, 0, 322, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 398, 216, 0, 0, 0, 181, 190,
	201, 214, 226, 233, 244, 247, 252, 253, 255, 259,
	273, 275, 276, 277, 278, 296, 297, 301, 302, 305,
	306, 310, 311, 312, 316, 317, 324, 0, 331, 338,
	339, 340, 341, 342, 350, 351, 353, 354, 361, 389,
	390, 403, 404, 0, 288, 166, 0, 0, 172, 256,
	0, 0, 0, 0, 0, 171, 0, 0, 264, 0,
	165, 0, 0, 0, 299, 0, 0, 0, 168, 266,
	0, 0, 0, 209, 0, 334, 0, 395, 0, 236,
	0, 333, 268, 388, 0, 0, 394, 0, 371, 402,
	406, 232, 0, 200, 356, 223, 218, 0, 0, 0,
	241, 321, 213, 260, 0, 0, 0, 205, 0, 0,
	0, 355, 385, 170, 284, 386, 405, 188, 378, 285,
	292, 202, 204, 203, 182, 349, 384, 194, 207, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 242,
	0, 0, 0, 308, 191, 0, 0, 0, 399, 0,
	344, 343, 0, 249, 0, 0, 0, 329, 0, 257,
	173, 0, 408, 187, 262, 379, 0, 235, 298, 211,
	0, 309, 0, 167, 325, 280, 282, 279, 283, 239,
	0, 0, 0, 327, 346, 383, 189, 362, 0, 0,
	0, 0, 337, 0, 0, 0, 274, 227, 231, 243,
	254, 0, 332, 363, 400, 0, 184, 336, 364, 375,
	365, 368, 366, 367, 176, 370, 393, 195, 345, 348,
	407, 0, 183, 178, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 0, 0, 238, 0,
	391, 392, 210, 409, 0, 0, 179, 0, 0, 295,
	303, 294, 0, 387, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 230, 245, 319, 270, 320, 246, 290,
	289, 291, 272, 0, 0, 174, 0, 360, 0, 0,
	369, 192, 0, 0, 382, 0, 326, 193, 237, 228,
	318, 293, 185, 248, 358, 261, 269, 0, 0, 307,
	335, 199, 397, 357, 224, 0, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 304, 0, 0, 0,
	0, 0, 206, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 0, 220, 208, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 401,
	359, 287, 0, 315, 175, 186, 198, 217, 215, 229,
	258, 281, 286, 313, 347, 352, 372, 373, 374, 376,
	219, 413, 222, 197, 330, 196, 271, 251, 314, 380,
	381, 323, 212, 0, 169, 180, 265, 0, 328, 234,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	396, 0, 0, 0, 0, 322, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 398, 216, 0, 0, 0, 181,
	190, 201, 214, 226, 233, 244, 247, 252, 253, 255,
	259, 273, 275, 276, 277, 278, 296, 297, 301, 302,
	305, 306, 310, 311, 312, 316, 317, 324, 0, 331,
	338, 339, 340, 341, 342, 350, 351, 353, 354, 361,
	389, 390, 403, 404, 0, 288, 166, 0, 0, 172,
	256, 0, 0, 0, 0, 0, 171, 0, 0, 264,
	0, 165, 0, 0, 0, 299, 0, 0, 0, 168,
	266, 0, 0, 0, 209, 0, 334, 0, 395, 0,
	236, 0, 333, 268, 388, 0, 0, 394, 0, 371,
	402, 406, 232, 0, 200, 356, 223, 218, 0, 0,
	0, 241, 321, 213, 260, 0, 0, 0, 205, 0,
	0, 0, 355, 385, 170, 284, 386, 405, 188, 378,
	285, 292, 202, 204, 203, 182, 349, 384, 194, 207,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	242, 0, 0, 0, 308, 191, 0, 0, 0, 399,
	0, 344, 343, 0, 249, 0, 0, 0, 329, 0,
	257, 173, 0, 408, 187, 262, 379, 0, 235, 298,
	211, 0, 309, 0, 167, 325, 280, 282, 279, 283,
	239, 0, 0, 0, 327, 346, 383, 189, 362, 0,
	0, 0, 0, 337, 0, 0, 0, 274, 227, 231,
	243, 254, 0, 332, 363, 400, 0, 184, 336, 364,
	375, 365, 368, 366, 367, 176, 370, 393, 195, 345,
	348, 407, 0, 183, 178, 0, 0, 0, 0, 0,
	0, 0, 177, 0, 0, 0, 0, 0, 0, 238,
	0, 391, 392, 210, 409, 0, 0, 179, 0, 0,
	295, 303, 294, 0, 387, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 230, 245, 319, 270, 320, 246,
	290, 289, 291, 272, 0, 0, 174, 0, 360, 0,
	0, 369, 192, 0, 0, 382, 0, 326, 193, 237,
	228, 318, 293, 185, 248, 358, 261, 269, 0, 0,
	307, 335, 199, 397, 357, 224, 0, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 304, 0, 0,
	0, 0, 0, 206, 0, 0, 221, 0, 0, 0,
	0, 0, 0, 0, 220, 208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 267, 0, 0,
	401, 359, 287, 0, 315, 175, 186, 198, 217, 215,
	229, 258, 281, 286, 313, 347, 352, 372, 373, 374,
	376, 219, 411, 222, 197, 330, 196, 271, 251, 314,
	380, 381, 323, 212, 0, 169, 180, 265, 0, 328,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 396, 0, 0, 0, 0, 322, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 398, 216, 0, 0, 0,
	181, 190, 201, 214, 226, 233, 244, 247, 252, 253,
	255, 259, 273, 275, 276, 277, 278, 296, 297, 301,
	302, 305, 306, 310, 311, 312, 316, 317, 324, 0,
	331, 338, 339, 340, 341, 342, 350, 351, 353, 354,
	361, 389, 390, 403, 404, 0, 288, 166, 0, 0,
	172, 256, 0, 0, 0, 0, 0, 171, 0, 0,
	264, 0, 165, 0, 0, 0, 299, 0, 0, 0,
	168, 266, 0, 0, 0, 209, 0, 334, 0, 395,
	0, 236, 0, 333, 268, 388, 0, 0, 394, 0,
	371, 402, 406, 232, 0, 200, 356, 223, 218, 0,
	0, 0, 241, 321, 213, 260, 0, 0, 0, 205,
	0, 0, 0, 355, 385, 170, 284, 386, 405, 188,
	378, 285, 292, 202, 204, 203, 182, 349, 384, 194,
	207, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 242, 0, 0, 0, 308, 191, 0, 0, 0,
	399, 0, 344, 343, 0, 249, 0, 0, 0, 329,
	0, 257, 173, 0, 408, 187, 262, 379, 0, 235,
	298, 211, 0, 309, 0, 167, 325, 280, 282, 279,
	283, 239, 0, 0, 0, 327, 346, 383, 189, 362,
	0, 0, 0, 0, 337, 0, 0, 0, 274, 227,
	231, 243, 254, 0, 332, 363, 400, 0, 184, 336,
	364, 375, 365, 368, 366, 367, 176, 370, 393, 195,
	345, 348, 407, 0, 183, 178, 0, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 0, 0, 0, 0,
	238, 0, 391, 392, 210, 409, 0, 0, 179, 0,
	0, 295, 303, 294, 0, 387, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 230, 245, 319, 270, 320,
	246, 290, 289, 291, 272, 0, 0, 174, 0, 360,
	0, 0, 369, 192, 0, 0, 382, 0, 326, 193,
	237, 228, 318, 293, 185, 248, 358, 261, 269, 0,
	0, 307, 335, 199, 397, 357, 224, 0, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 206, 0, 0, 0, 0, 0,
	40, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 64, 0, 0, 0, 0, 0,
	82, 0, 0, 43, 0, 315, 175, 186, 198, 217,
	215, 229, 258, 281, 286, 313, 347, 352, 372, 373,
	374, 376, 219, 0, 222, 197, 330, 196, 271, 251,
	314, 380, 381, 323, 212, 0, 169, 180, 265, 0,
	328, 234, 86, 3702, 0, 0, 0, 3456, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3449,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 398, 216, 0, 0,
	0, 181, 190, 201, 214, 226, 233, 244, 247, 252,
	253, 255, 259, 273, 275, 276, 277, 278, 296, 297,
	301, 302, 305, 306, 310, 311, 312, 316, 317, 324,
	0, 331, 338, 339, 340, 341, 342, 350, 351, 353,
	354, 361, 389, 390, 403, 404, 0, 0, 166, 0,
	40, 172, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 0, 64, 45, 79, 49, 48, 51,
	82, 0, 0, 43, 0, 0, 0, 0, 0, 0,
	3450, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 40, 0, 0, 0, 0, 0, 55, 81, 80,
	0, 0, 0, 0, 50, 64, 0, 0, 0, 0,
	0, 82, 86, 0, 43, 0, 0, 3456, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3449,
	0, 0, 0, 0, 3631, 0, 0, 0, 0, 0,
	0, 0, 0, 86, 0, 0, 62, 63, 3456, 3452,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3459,
	3453, 3454, 3455, 3457, 3458, 0, 0, 0, 0, 71,
	3449, 72, 0, 0, 0, 3627, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 76, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 53, 0, 0, 0,
	0, 0, 0, 0, 0, 45, 79, 49, 48, 51,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3450, 3701, 3451, 0, 59, 60, 66, 0, 67, 0,
	0, 40, 0, 0, 0, 0, 0, 55, 81, 80,
	0, 0, 0, 0, 50, 64, 45, 79, 49, 48,
	51, 82, 0, 0, 43, 0, 0, 0, 0, 0,
	0, 3450, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 55, 81,
	80, 0, 0, 0, 0, 50, 0, 0, 0, 0,
	0, 0, 0, 86, 0, 0, 62, 63, 3456, 3452,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3459,
	3453, 3454, 3455, 3457, 3458, 0, 0, 0, 0, 71,
	3449, 72, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 62, 63, 0,
	3452, 0, 0, 0, 0, 0, 76, 0, 0, 0,
	3459, 3453, 3454, 3455, 3457, 3458, 53, 0, 0, 0,
	71, 0, 72, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3460, 3451, 0, 59, 60, 66, 76, 67, 0,
	0, 0, 0, 0, 0, 0, 0, 53, 52, 54,
	0, 0, 0, 0, 78, 0, 45, 79, 49, 48,
	51, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3450, 3460, 3451, 0, 59, 60, 66, 0, 67,
	0, 0, 40, 41, 0, 0, 0, 0, 55, 81,
	80, 0, 0, 0, 0, 50, 64, 0, 0, 0,
	0, 0, 82, 0, 0, 43, 68, 69, 0, 0,
	0, 0, 0, 65, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	56, 0, 0, 0, 86, 0, 0, 62, 63, 0,
	3452, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3459, 3453, 3454, 3455, 3457, 3458, 0, 0, 0, 0,
	71, 0, 72, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 76, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 53, 52, 54,
	0, 0, 0, 0, 78, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3460, 3451, 0, 59, 60, 66, 0, 67,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 52,
	54, 0, 0, 0, 0, 78, 0, 45, 79, 49,
	48, 51, 0, 0, 73, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 55,
	81, 80, 0, 0, 0, 0, 50, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 70, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 62, 63,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 71, 0, 72, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 76, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 53, 52,
	54, 0, 0, 0, 0, 78, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 75, 0,
	0, 0, 0, 57, 74, 0, 59, 60, 66, 0,
	67, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	52, 54, 0, 0, 0, 0, 78,
}

var yyPact = [...]int{
	54616, -1000, -452, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2293,
	-1000, -1000, 293, -1000, 1129, 603, -1000, -1000, 403, 88,
	37350, 796, 53579, 53128, -290, 671, 51324, 69, -1000, 69,
	237, 34830, 536, 771, 51775, 2141, 1651, 74, -55, -56,
	149, 39254, 38617, 126, 87, 100, 34, -1000, 41595, 93,
	-1000, -1000, -1000, -1000, 2344, 227, -1000, -1000, 2256, 2291,
	2074, -1000, 8401, -1000, -1000, -1000, -1000, -1000, 22679, -1000,
	2342, 37980, 30416, -1000, 778, 769, -173, 729, 729, 584,
	729, 729, 782, -1000, 323, 1180, -1000, -1000, -1000, -1000,
	1175, 37980, 46907, 731, 49971, 731, 731, 731, 731, 731,
	731, 731, 52677, 37980, -1000, 911, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	37980, 2323, 2322, 2015, 2014, 52226, 1650, 2201, 1174, 162,
	1174, -1000, -1000, 1151, -1000, 637, 636, 616, 625, 469,
	128, 1195, 2253, -1000, 1978, 2256, 2256, -1000, -1000, -1000,
	-1000, -1000, -1000, 928, -1000, -1000, 1212, 1212, 360, 763,
	231, 645, 227, 2225, 1160, 2196, 2194, 1472, 2192, 714,
	2191, 2011, -1000, 910, -1000, -1000, -24, -1000, 1649, 37980,
	-1000, -1000, 1443, 1441, 466, 1908, 876, 2045, -1000, -1000,
	398, 633, 2005, 524, 2005, 2005, 2005, 2005, 2005, -58,
	2005, 2005, 2005, 140, 2005, 183, 2005, 2005, 2005, 2005,
	2005, 1668, -1000, -1000, -1000, 462, 1904, 1961, 2044, 97,
	-1000, -115, -1000, 656, -1000, -1000, -1000, 1977, 43485, 1953,
	-1000, 1978, -1000, -1000, -1000, 1619, 781, -1000, 1977, 2237,
	1674, -1000, 41595, 2186, 1289, 14891, 2120, -1000, -1000, 1261,
	2321, -1000, 29786, 907, -1000, 14891, 1608, 1978, 1978, -1000,
	816, 951, -1000, 813, 902, -1000, -1000, 14242, 14242, 14242,
	14242, 14242, 14242, 14242, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1978, 905, 904, 1978, 1978, 1978, 1978, 1978, -1000, 12944,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
	1978, 1978, 1978, 1978, 1978, 1978, 14891, 1978, 1978, 1978,
	1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
	1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
	1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978,
	1978, 1978, 1978, 1978, 1978, 1978, 1978, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 736, 736,
	36720, 1962, -73, 22030, -1000, -1000, -1000, -1000, 20732, 46277,
	1157, -1000, -1000, -1000, -1000, 2185, -1000, -1000, 903, 902,
	816, 812, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2293, -1000, -1000, 1848, 690, -1000, 5536, 5536, 5536, 5536,
	5536, 315, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2010, 49971, 37980, 580, 1647, 1193, 1643, 51775, 51775,
	-1000, 297, 46907, 46907, 729, 445, 46907, 372, 1960, 762,
	1958, 761, 1655, 37980, 2216, 2043, 37980, 1634, 1633, 51775,
	51775, 46907, 46907, -1000, -1000, -1000, 28520, 1957, -1000, 1571,
	1569, 50873, 50873, -1000, -1000, -1000, 1174, -1000, 5322, 14891,
	729, 729, 37980, 37980, 37980, 37980, -1000, 37980, -1000, -1000,
	1174, -1000, 1174, 1174, 1174, 1144, 2320, 1144, -1000, 1144,
	-1000, -1000, 14891, -1000, 14242, 45647, 969, -1000, -1000, 51324,
	665, 665, 665, -1000, 1632, 356, -1000, -1000, -1000, -1000,
	-1000, 231, -1000, -1000, 2148, 1631, 714, 714, -1000, 1568,
	714, 1933, -1000, 1133, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 714, -1000, 13593, 49971,
	-432, -1000, -1000, 1956, -1000, 294, -1000, -1000, 663, 2042,
	663, 239, 46907, 46907, 46907, -1000, 2005, 49971, -1000, 2005,
	2005, 2005, -59, 2005, 2005, -1000, -1000, 2005, -1000, -1000,
	-1000, -1000, -1000, 2005, -1000, -1000, -1000, 2005, 2005, -1000,
	2005, 2005, -1000, -1000, -1000, -1000, -1000, 46907, 663, 215,
	1954, 663, 46907, 46907, 759, -119, -1000, 121, 120, 119,
	118, -1000, -1000, -1000, -1000, 117, 116, -1000, -1000, -1000,
	1953, 43485, 2234, 17487, 2206, -1000, 2206, -1000, -1000, -1000,
	163, -1000, 37980, -1000, -1000, 227, -1000, -1000, -1000, -1000,
	1977, 1266, 2338, 1010, 1935, -1000, -1000, 1938, -1000, 1254,
	900, 1511, 2091, -1000, -1000, -1000, 37980, -1000, 14891, 14891,
	14891, 1496, -1000, 31046, -1000, -1000, -1000, -1000, -1000, -1000,
	18785, 1037, 14242, 1305, 1177, 14242, 14242, 14242, 14242, 14242,
	14242, 14242, 14242, 14242, 14242, 14242, 14242, 14242, 14242, 14242,
	1367, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1630,
	-1000, 227, 26573, 9699, 26573, 1532, 1532, 49971, 915, 915,
	915, 915, 915, 915, 39705, 2230, 25924, 26573, 2230, 2230,
	2230, 2230, 2230, 1674, 1846, 1226, 41595, 12944, 9699, 9699,
	9699, 1674, 14891, 14891, 9699, 9699, 12295, 11646, 16189, 9699,
	9699, 2230, 1098, 1226, 20732, 9699, -1000, -1000, 10997, -1000,
	-1000, -1000, -1000, -1000, 1674, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 49971, 49971, 9699, 9699, 9699, 9699, 1674,
	1674, 9699, 9699, 9699, 9699, 9699, 1674, 1674, 1674, 1674,
	9699, 9699, 9699, 9699, 9699, 9699, 9699, 9699, 9699, 9699,
	9699, 9699, 36090, 34200, 37980, 1902, 1845, -1000, 898, 21381,
	1929, -1000, -113, -129, -73, -1000, -1000, 889, -1000, -1000,
	-1000, 10348, -1000, 19434, 2256, 2074, -1000, 29156, -1000, -1000,
	-34, -1000, -1000, -1000, 1991, -1000, 1998, 371, 36, 1998,
	1998, 1998, 1998, 1998, -1000, -1000, -1000, -1000, 16, -1000,
	-1000, -1000, -1000, -1000, 2009, 2008, -1000, 1991, 1991, 1991,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2003,
	337, 1997, 1997, 1997, 1997, 1997, -1000, -1000, -1000, -1000,
	707, 707, 707, -1000, 14891, 1995, 2233, 765, 445, 2206,
	2213, 2206, 635, -1000, 886, 2007, 597, 1922, -1000, 228,
	1819, 35460, -1000, -1000, -1000, -1000, -1000, 37980, 37980, 46907,
	46907, 46907, 828, -1000, 37980, 1936, -1000, -1000, -1000, -1000,
	-1000, 1916, -1000, 1819, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 37980, -1000, -1000, 1934, -1000, -1000,
	-1000, 1934, -1000, -1000, 1567, 1226, 1628, 1624, 2225, -1000,
	-1000, -1000, 1148, -1000, -1000, -1000, -1000, 1174, 51324, 51324,
	37980, 2225, 1174, 1226, 885, 2013, 1978, 1674, -1000, -1000,
	64, -1000, 62, -1000, -1000, -1000, 1622, -1000, 14242, -1000,
	1933, 1933, -1000, 1933, 714, 1532, 1933, -1000, 1836, -1000,
	1264, 1566, 37980, -1000, 43485, -35, -1000, -137, 49069, -1000,
	-1000, -1000, 663, 49069, -1000, 140, 157, -1000, 757, -1000,
	1832, -1000, -1000, -1000, -1000, 2005, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 49069, 174, 213, 49069, 1916,
	2319, 89, -1000, -1000, -1000, -1000, -1000, -1000, 2252, -1000,
	-1000, 1978, 1805, -1000, 884, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2180, 1048, 1048, 1048, 378,
	1674, -1000, 49520, -1000, 2086, 1289, 1289, 14891, -1000, -1000,
	-1000, 19434, 2250, -1000, 2101, 2100, 2055, -1000, -1000, 1037,
	1258, 1100, -1000, -1000, 1361, -1000, -1000, -1000, -1000, -1000,
	862, 1978, -1000, -1000, -1000, -1000, -1000, 3728, -1000, -1000,
	-1000, -1000, 1305, 14242, 14242, 14242, 885, 3728, 2497, 1801,
	1373, 915, 1091, 1091, 968, 968, 968, 968, 968, 1203,
	1203, -1000, -1000, -1000, 1674, -1000, 1751, -1000, -1000, 1226,
	861, -1000, -1000, -1000, -1000, -1000, -1000, 9699, -1000, -1000,
	-1000, 9699, 9699, 9699, 9699, 9699, -1000, 14891, -1000, 1674,
	1751, 1751, 1751, -1000, 1303, 1318, 1673, 1751, 1005, 2317,
	1751, 978, 2316, 1751, 1710, 14242, 14242, 14242, 1751, 1751,
	9699, 1194, -1000, 14891, 1674, 1751, -1000, 1725, 1932, 1931,
	1751, 1674, 1930, 1751, 1751, -192, -192, 1674, 1751, 1674,
	1751, 1751, -192, -192, -192, -192, 1751, 1751, 1751, 1751,
	1751, 1751, 1751, 1751, 1751, 1751, 1751, 1751, 1029, 37980,
	-1000, 1878, 350, -1000, -1000, -1000, 2231, 32940, -1000, -1000,
	40335, -1000, 1978, 1978, 1029, 1852, 34200, -1000, -1000, 34200,
	51324, 25275, -1000, 20732, -73, -132, -1000, -1000, 1929, -1000,
	-1000, 1445, -1000, -1000, 1226, -1000, 853, 2186, 2230, 732,
	690, -1000, -1000, -1000, 2004, 304, -1000, 2115, 919, 919,
	918, 1592, 2114, -1000, -1000, 173, -44, -1000, -1000, -1000,
	1432, -1000, 224, -1000, 1998, 1998, 329, 1998, -1000, -1000,
	-1000, -1000, -1000, -1000, 1565, 1565, -1000, -1000, -1000, -1000,
	1431, -1000, 2003, -1000, 1429, -1000, -1000, -1000, -1000, 173,
	173, 173, 173, -1000, -1000, -1000, 1249, 2040, 49971, -1000,
	37980, -1000, -1000, -1000, 2307, -1000, -1000, 49971, 45017, -1000,
	-1000, 146, 46907, 219, 397, 230, -1000, -1000, 756, -1000,
	754, -1000, -1000, -1000, -1000, -1000, -1000, 37980, 46907, -1000,
	50873, -1000, -1000, -1000, -1000, 2299, 1618, 1617, -1000, -1000,
	-1000, 1144, 1174, -1000, -1000, 14242, 46907, -1000, 621, -1000,
	-1000, -1000, 3728, -1000, -1000, -1000, 1029, 780, -1000, -1000,
	-57, -1000, -1000, 752, 852, 851, 49069, 749, -1000, 156,
	46907, -1000, 49971, -1000, 2315, 2314, 169, 2313, 46907, 1928,
	-1000, 1132, 1130, 1121, 1111, -1000, 105, -1000, 229, -1000,
	17487, 26573, 1048, 1093, -1000, 1081, 1564, 1927, -1000, 844,
	914, 877, 712, 712, -1000, 1048, 712, 2155, 2153, 1027,
	-1000, 1926, 1562, 1561, -1000, 2084, -1000, -1000, -1000, 37980,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 24626,
	9699, -1000, 885, 3728, 2162, -1000, 14242, -1000, 9699, -1000,
	18136, 1674, 1751, 1751, 1751, 1751, 1751, 1226, -1000, -1000,
	-1000, -1000, 486, 1367, 486, -1000, 1367, -1000, 14242, 14242,
	-1000, 14242, 14242, -1000, -1000, 14242, 3751, 3369, 3267, -301,
	-1000, 1882, 1060, -1000, 14891, 1382, -1000, -1000, -1000, 14242,
	14242, -1000, -1000, -1000, -1000, -1000, 48618, -1000, -192, -192,
	-192, -192, -192, -1000, -1000, -1000, -1000, -192, -192, -192,
	-192, -192, -192, -192, -192, -192, -192, -192, -192, 223,
	1978, -1000, 20083, 34200, 34200, 34200, 34200, 34200, -1000, 2071,
	2070, -1000, 2060, 2059, 2057, 358, 43485, 1830, 1674, 577,
	32940, -1000, 1978, -1000, 42855, 856, 775, 774, 758, 9699,
	14242, 2299, 34200, 1802, 1802, -1000, 850, -1000, -1000, -1000,
	-130, -124, -1000, -1000, -1000, 26573, -1000, -1000, -1000, 4477,
	2290, 1048, 1048, 1048, 1048, 341, 2177, 1048, 1048, 1048,
	1048, 1048, -242, -243, 1048, 1048, 1048, 1048, 1048, 1048,
	1048, 1048, 1048, 1048, 1048, 82, 1048, 1048, 1048, 1048,
	23328, 1048, -1000, 43936, 706, 2118, 680, 1592, 1592, 1592,
	-1000, 1592, -1000, -1000, -1000, 2001, -1000, 1230, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1978, -444, 1413, 2163,
	755, 2334, -1000, 2113, -1000, 2112, 2111, 1560, -1000, -1000,
	1814, 1771, 1738, -1000, -1000, -1000, 1998, -1000, 1817, -1000,
	1811, 1919, -1000, 1809, 115, 37980, -1000, -1000, 2226, 2039,
	-1000, -1000, -1000, -1000, 1711, 1918, -1000, 5536, 49971, 49971,
	49971, -309, 299, -1000, 46907, 172, 228, 508, 1615, 37980,
	46907, -1000, -1000, -1000, -1000, 14891, -1000, -1000, 2225, -1000,
	3728, 1819, -1000, -1000, 11, 37980, -1000, 46907, 959, 47988,
	740, 46907, 167, 155, -1000, 46907, 46907, 2311, 46907, 1916,
	89, 1558, 1557, 1556, 1412, 1555, -1000, -1000, 1064, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 378, 47537, 1592, 867,
	-1000, -1000, 716, -1000, 232, 1614, 32306, 31676, 49971, 2110,
	2109, 1612, 37980, 49971, -1000, -1000, 50422, 1610, 14891, 49971,
	-1000, -1000, 49971, 49971, -1000, -1000, -1000, -1000, 1237, 8401,
	-1000, -1000, 1674, -1000, 14242, 3728, -1000, -1000, 845, -1000,
	-192, -192, -192, -192, -192, 1674, 1991, 1991, -1000, 1991,
	1997, -1000, 1991, 48, 1991, 47, 1674, 1674, 1674, 1974,
	1914, 1891, 1663, 1725, 14242, 14242, 14242, 1978, -184, -1000,
	1226, 14891, 1835, 1816, -1000, -1000, 1595, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2024, 20083, 1978, 16838, -1000,
	49971, 1897, -1000, 1104, 937, 1075, 1052, 816, 812, 350,
	1994, 2023, 336, -1000, -1000, -1000, -1000, 2069, -1000, 2067,
	2066, -1000, -1000, -1000, 1982, -1000, -1000, 1917, 1978, 49971,
	14242, 856, -1000, 1978, 1978, 1978, 1674, 1740, 2293, 1802,
	-1000, -1000, 930, -1000, -1000, -1000, -1000, 160, 519, 519,
	519, 1367, 1048, 2159, 1048, 1048, 1410, 27871, 1552, 1546,
	1538, 1048, 1048, 1407, 1537, 27871, 1527, 673, 519, 519,
	519, 1400, 1526, 247, -1000, 1525, 1409, 1376, 519, -1000,
	-258, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 519,
	1807, -1000, 1991, 1991, 2108, -1000, 919, -1000, -1000, -1000,
	-1000, -1000, 49971, -1000, 14242, 2224, -1000, 990, -1000, 1532,
	-1000, 1978, 1978, 1978, 1978, 14242, -1000, -1000, -108, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1524, -1000,
	1399, -1000, 1398, -1000, -1000, -388, 1989, 227, -1000, 37980,
	274, 45017, -1000, 5536, 5536, 5536, 176, 184, -1000, 1210,
	-1000, -1000, -1000, 1521, 1520, 1519, 1819, 245, 1198, 200,
	-1000, 2222, -1000, -1000, 1226, 1174, -77, -1000, -1000, 155,
	-1000, -1000, -1000, 46907, 155, -1000, -1000, 212, 1916, 1916,
	46907, 1916, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 50422, 664, 5536, 5536, 1995, 919, 2105, 680,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1594, -1000, 906, -1000, 738, 664, 50422, 1226,
	958, 1223, -1000, 2310, -1000, -1000, -1000, 3728, 23977, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 327, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 14242, 14242, 14242, 14242,
	-1000, 1725, 1725, 1725, 14242, 1674, 1518, 1226, 14242, 14242,
	1021, -1000, -1000, 2164, 1728, 1911, -1000, -1000, 9050, 1674,
	2099, 1805, -1000, 41595, 1758, -1000, 2293, 20083, 14891, 14891,
	14891, 14891, -1000, -1000, 14891, 1988, -1000, 14891, -1000, -1000,
	-1000, -1000, -1000, 49971, 574, -1000, 14891, 1758, 1629, -1000,
	49971, 49971, 49971, -1000, 1514, 2256, -1000, -272, -1000, 347,
	306, 209, -1000, -1000, -1000, -1000, -1000, 1367, 1048, 27871,
	1367, -1000, -1000, -1000, -1000, -1000, 1508, 1503, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -261, -1000, 835, 43936, 2210, 2210, 1592,
	1592, 1756, -1000, 1725, 1978, -1000, -1000, -1000, -1000, 7752,
	-1000, 7752, -1000, 7752, 7752, 1725, -1000, 1978, 1978, 1978,
	1978, 1978, 1978, 1978, 1978, 1978, 1978, 1978, -1000, 1709,
	1690, -1000, 43936, -1000, -1000, 2247, -1000, 274, -1000, 1500,
	368, 298, -1000, 366, 365, 361, 346, 288, -1000, -1000,
	-1000, -1000, 498, 176, -1000, -82, 1387, 1059, 2152, 184,
	-1000, 1381, 1380, 1375, 1334, 319, -1000, -1000, -1000, -1000,
	222, 228, -1000, 507, 1478, -1000, 2134, 2132, 2220, 155,
	2220, 165, 1916, 1677, -1000, -1000, 1593, -1000, -1000, 1985,
	1592, 1592, -1000, 1589, -1000, -1000, 49971, -1000, 664, 2205,
	2204, 1978, 2299, 33570, 8401, -1000, -1000, -1000, -1000, 1725,
	1725, 1725, 1725, -1000, -1000, -1000, 208, -1000, -1000, 1725,
	1725, 2293, 2289, 2104, -1000, 1978, -1000, -1000, 1978, 214,
	-1000, 49971, 2256, -1000, 1226, 1226, 1226, 1226, 1226, 49971,
	1226, 1753, 1978, 40965, -1000, 43485, 1694, 1694, 1694, -66,
	-1000, -281, 1329, 27871, 1978, 27871, 1978, 1978, 620, -1000,
	1367, -1000, -1000, -1000, -1000, -1000, -1000, 835, -1000, 27871,
	1048, 1473, -1000, -1000, -1000, -1000, -1000, 662, 49971, -447,
	14242, 1751, 1751, 1751, -1000, 1751, -1000, -1000, -1000, 1749,
	-1000, 227, 373, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2140, 2139, 459, -1000, 1468, 1464, -1000, 604, 1360, 857,
	-203, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 494, 1587, -1000, 197, -1000, -1000, 733, 2121,
	2123, 2283, -1000, 46907, 2220, -1000, -1000, -1000, -1000, 173,
	173, 43936, 1995, 1983, -1000, -1000, -1000, 14242, -1000, 1001,
	2297, -1000, 1915, -1000, -1000, -1000, -1000, -1000, 1674, 171,
	-322, -1000, -1000, 1016, 14891, 2330, -1000, 1911, 1978, -1000,
	227, -1000, -1000, 1747, -1000, -1000, -1000, 856, -1000, -1000,
	-1000, 1978, 1978, 2278, -1000, 1674, 49971, 1674, 49971, 1727,
	49971, 1047, -1000, -1000, -1000, 1321, -1000, 37980, -1000, -1000,
	-1000, -1000, 1725, -1000, -1000, -1000, -1000, 835, -1000, 479,
	54415, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1320,
	-1000, -1000, 1358, 468, 196, -1000, 2219, -1000, 1982, 1313,
	2132, 2263, 2127, 2125, -1000, 1463, -310, -1000, 1743, 1981,
	43936, 3728, 1700, -1000, 49971, 2295, 2262, -1000, -1000, 2078,
	-307, -327, 1674, 248, 248, 1912, 20083, 1911, 1674, -1000,
	-1000, 26573, 1001, -359, -1000, 1694, -1000, 1694, 1674, 1674,
	1694, 1307, -1000, 1980, -447, -1000, 835, -1000, 470, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 14891,
	14891, 79, 27222, 1586, 1585, 54415, 1609, 1582, 1580, 2128,
	54415, 182, -1000, 177, -1000, -1000, -1000, 1461, -1000, 1055,
	-1000, 1460, -1000, 2260, 2258, -1000, 216, 835, 43936, 1708,
	-1000, 1001, 2098, -200, 14891, 14891, -1000, 2077, -1000, -1000,
	-1000, 263, -1000, 1008, 465, 1000, -1000, 1532, -1000, 1910,
	-1000, 1703, -1000, 5536, 1700, -283, -1000, -1000, -1000, -1000,
	-1000, 1978, 49971, -1000, -1000, 1578, 1577, -1000, 1146, 1342,
	302, 235, 4760, -1000, -1000, -1000, -1000, -1000, -1000, -454,
	-1000, 253, -1000, -1000, 1576, -1000, 2301, -455, -1000, -1000,
	-1000, -1000, -1000, -1000, 1447, 1446, 44566, -1000, 1698, 835,
	-1000, 626, -1000, 49971, -1000, 1226, 1909, -1000, 1226, -313,
	1184, -1000, -1000, -1000, -1000, -1000, 49971, 1674, 26573, 259,
	-1000, -1000, 1287, 49971, 1696, -1000, -1000, -1000, 1278, -1000,
	14891, 54415, 2245, 2244, 2243, 11, 26573, 54255, 54415, 1217,
	-1000, 54214, -1000, -1000, -1000, -1000, 161, 1819, 835, -1000,
	602, 1907, -1000, 2218, 14891, -325, 263, -1000, 42225, -1000,
	-1000, 1374, -235, -1000, 1694, 2022, 193, 1189, 54415, -1000,
	1205, -457, 535, 227, 743, 889, -1000, 252, -1000, -459,
	1575, -1000, 46907, -1000, 1978, 49971, 1978, -1000, -328, -1000,
	43485, -1000, -1000, 1304, -1000, 2021, 2020, 2309, -1000, -1000,
	-1000, -1000, -1000, -1000, 54415, 41595, -1000, -460, 54415, 3840,
	-1000, -1000, -1000, 54054, -1000, -1000, -1000, -1000, 233, -1000,
	-1000, 2156, -1000, 7149, 1842, -1000, 1819, 15540, -1000, -1000,
	-1000, -1000, 483, -1000, -1000, 2329, -1000, 2325, 870, 870,
	-1000, -461, -1000, 7016, -462, 723, 54415, 1323, -1000, 14891,
	-1000, 6919, 743, -1000, 14242, 251, 1513, 1725, 1674, -1000,
	2019, 14242, 2017, -1000, -1000, -1000, 681, 1343, -1000, 6718,
	1183, 54415, -1000, -463, 722, 54415, -1000, 1092, -1000, -1000,
	3728, 1345, -1000, -1000, -1000, -339, 1444, -341, -1000, -1000,
	-1000, -1000, -1000, 6135, -1000, -464, 54415, -1000, -1000, -342,
	-1000, 720, 4747, -466, -1000, -1000, 718, 54415, -1000,
}

var yyPgo = [...]int{
	0, 2766, 2764, 103, 173, 2763, 260, 2759, 2758, 26,
	2756, 44, 40, 35, 22, 2752, 2450, 2448, 2444, 2442,
	2440, 2751, 16, 2749, 2747, 2438, 2745, 2744, 2435, 2743,
	2742, 2741, 2740, 2739, 2738, 2428, 2426, 2424, 2737, 2735,
	2734, 2421, 2419, 2412, 2733, 14, 2729, 30, 2728, 3,
	2720, 150, 176, 2719, 2, 2718, 2717, 24, 2716, 2714,
	2408, 2713, 2712, 2711, 2708, 110, 2703, 2403, 2400, 2701,
	2390, 2375, 2372, 2362, 2358, 171, 2700, 2356, 2354, 2350,
	2698, 2119, 174, 358, 177, 198, 2697, 2696, 2694, 169,
	2693, 156, 2692, 2690, 309, 127, 2689, 318, 114, 61,
	126, 1225, 2688, 18, 65, 266, 2687, 6, 2686, 122,
	2684, 125, 2683, 2682, 161, 2679, 146, 66, 97, 2678,
	2676, 172, 2672, 2667, 2665, 116, 2664, 2663, 184, 119,
	2660, 2659, 147, 2656, 58, 182, 51, 93, 2654, 113,
	2651, 2650, 2649, 31, 2163, 2648, 106, 148, 2647, 2646,
	109, 2645, 2644, 75, 2643, 2642, 2637, 141, 50, 2636,
	2633, 49, 2631, 47, 54, 2629, 43, 2614, 140, 2613,
	2612, 2611, 2610, 2609, 60, 2606, 62, 2605, 144, 167,
	1477, 2604, 2603, 13, 9, 2602, 48, 15, 17, 59,
	25, 76, 56, 136, 129, 92, 2601, 55, 46, 139,
	91, 2600, 180, 132, 108, 78, 42, 2599, 155, 2597,
	89, 164, 143, 138, 154, 2596, 2595, 2594, 187, 2593,
	131, 101, 2591, 100, 1138, 178, 2587, 2586, 105, 2585,
	2583, 2582, 2581, 2579, 77, 145, 2578, 183, 186, 185,
	96, 2577, 411, 4215, 4333, 153, 3487, 94, 157, 2575,
	57, 2572, 2571, 2568, 3230, 120, 7, 73, 179, 2567,
	118, 68, 79, 2566, 2565, 2564, 2563, 2561, 2559, 2558,
	2557, 111, 137, 2556, 2554, 2553, 2552, 21, 20, 19,
	12, 2551, 163, 162, 159, 2550, 160, 34, 2549, 2548,
	135, 115, 2547, 2545, 2543, 2541, 134, 98, 152, 29,
	2539, 121, 128, 166, 2538, 102, 2536, 2535, 72, 2222,
	2534, 2533, 2532, 2531, 117, 223, 2530, 2519, 2518, 37,
	2517, 2516, 2515, 2514, 2513, 74, 32, 33, 81, 27,
	2512, 2511, 107, 2505, 95, 99, 39, 28, 2503, 5,
	4, 8, 2501, 2499, 2498, 2497, 2496, 2495, 2494, 90,
	2480, 2479, 80, 2477, 2476, 2475, 38, 2474, 2473, 2470,
	149, 130, 52, 165, 124, 11, 2468, 2466, 10, 2465,
	133, 2464, 63, 2462, 67, 2460, 2457, 71, 2453, 2452,
	69, 2446, 2414, 168, 1725, 258, 2405, 151, 123, 53,
	64, 2397, 70, 2388, 0, 849, 158, 2379, 284, 2369,
	2352, 2320,
}

var yyR1 = [...]int{
	0, 393, 393, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	80, 3, 3, 9, 10, 4, 4, 5, 5, 107,
	107, 6, 106, 106, 106, 204, 204, 204, 204, 201,
	201, 108, 108, 105, 105, 114, 7, 7, 8, 8,
	11, 11, 88, 88, 12, 13, 13, 13, 13, 396,
	396, 123, 123, 121, 121, 122, 122, 199, 199, 14,
	14, 14, 208, 208, 213, 213, 213, 216, 216, 216,
	216, 188, 189, 190, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 366, 366, 375, 375,
	375, 376, 376, 374, 374, 374, 374, 374, 378, 378,
	379, 379, 377, 377, 377, 377, 381, 381, 382, 382,
	380, 380, 380, 380, 380, 380, 380, 380, 380, 380,
	380, 380, 380, 380, 369, 369, 369, 41, 41, 41,
	41, 41, 42, 42, 42, 42, 42, 42, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 384,
	384, 385, 385, 386, 386, 387, 387, 387, 387, 388,
	388, 388, 388, 388, 389, 389, 389, 389, 389, 389,
	389, 390, 390, 391, 391, 2, 347, 347, 348, 348,
	349, 349, 349, 349, 350, 350, 351, 351, 352, 352,
	352, 352, 352, 352, 352, 352, 352, 352, 26, 239,
	239, 236, 236, 236, 237, 237, 238, 238, 238, 368,
	368, 368, 362, 362, 362, 364, 364, 363, 363, 363,
	365, 365, 370, 370, 370, 370, 370, 372, 372, 372,
	372, 372, 372, 373, 373, 373, 371, 371, 58, 58,
	59, 59, 59, 177, 177, 177, 15, 15, 15, 15,
	15, 21, 23, 23, 46, 46, 47, 24, 24, 24,
	24, 48, 48, 49, 27, 27, 27, 27, 27, 27,
	27, 56, 56, 56, 55, 55, 54, 54, 54, 54,
	54, 54, 29, 30, 31, 397, 397, 397, 50, 50,
	32, 32, 32, 33, 34, 25, 25, 25, 25, 57,
	57, 52, 52, 51, 53, 53, 53, 53, 53, 53,
	53, 53, 53, 53, 53, 53, 28, 28, 28, 28,
	28, 28, 20, 346, 346, 346, 45, 45, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 63, 63, 310,
	311, 311, 311, 311, 311, 311, 311, 311, 297, 297,
	298, 298, 298, 298, 298, 287, 287, 287, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 261, 261, 261, 261, 267, 267, 265, 265,
	265, 265, 265, 265, 265, 265, 265, 265, 266, 266,
	266, 266, 266, 266, 266, 266, 268, 268, 268, 268,
	268, 269, 269, 269, 269, 269, 269, 269, 269, 269,
	269, 269, 269, 269, 269, 269, 269, 269, 269, 269,
	269, 269, 269, 269, 269, 269, 270, 270, 270, 270,
	270, 270, 270, 270, 296, 296, 272, 272, 271, 271,
	271, 290, 290, 291, 291, 291, 288, 288, 288, 289,
	289, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 276, 292, 277, 277, 278, 278, 279,
	279, 280, 280, 281, 281, 286, 286, 285, 285, 285,
	285, 285, 285, 282, 282, 282, 282, 282, 282, 283,
	283, 283, 284, 295, 295, 295, 295, 295, 273, 43,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 333, 333, 230, 230, 231, 231, 44, 44,
	44, 331, 331, 332, 332, 332, 332, 300, 300, 329,
	329, 328, 328, 327, 327, 327, 309, 309, 324, 324,
	324, 324, 324, 324, 324, 324, 304, 304, 304, 303,
	303, 305, 305, 308, 308, 326, 326, 325, 325, 301,
	301, 301, 334, 334, 334, 334, 334, 302, 302, 302,
	302, 302, 335, 306, 306, 307, 307, 307, 340, 341,
	339, 339, 339, 339, 339, 140, 140, 140, 313, 313,
	313, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 315, 315, 315, 315, 315, 316, 316, 316, 316,
	316, 316, 392, 392, 392, 317, 317, 317, 318, 318,
	318, 318, 318, 319, 319, 319, 319, 320, 320, 321,
	321, 322, 322, 323, 323, 344, 344, 343, 343, 60,
	60, 62, 62, 61, 66, 66, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 176, 176,
	176, 235, 235, 338, 336, 336, 337, 337, 17, 17,
	64, 64, 367, 367, 18, 18, 18, 18, 18, 18,
	18, 18, 18, 342, 342, 342, 19, 19, 67, 70,
	70, 202, 202, 203, 203, 71, 71, 71, 71, 72,
	72, 72, 72, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 102,
	222, 222, 221, 221, 220, 220, 220, 223, 223, 223,
	223, 259, 259, 259, 69, 69, 69, 81, 81, 76,
	76, 79, 79, 79, 82, 82, 83, 83, 84, 84,
	77, 78, 35, 36, 36, 36, 36, 37, 74, 74,
	74, 75, 75, 75, 75, 94, 94, 399, 399, 399,
	73, 400, 85, 86, 86, 87, 87, 87, 226, 226,
	91, 91, 91, 89, 89, 89, 90, 90, 96, 96,
	100, 100, 100, 100, 99, 99, 99, 99, 179, 179,
	184, 251, 251, 160, 160, 180, 180, 185, 185, 185,
	186, 186, 187, 187, 187, 187, 187, 182, 182, 181,
	181, 183, 148, 148, 249, 249, 249, 249, 248, 248,
	248, 248, 248, 248, 104, 104, 109, 109, 111, 111,
	111, 111, 111, 111, 115, 162, 162, 133, 133, 134,
	134, 134, 134, 134, 146, 146, 198, 198, 197, 197,
	200, 200, 110, 112, 112, 112, 112, 118, 118, 119,
	119, 120, 120, 234, 234, 256, 256, 256, 124, 124,
	124, 126, 125, 125, 125, 125, 125, 125, 127, 127,
	113, 113, 312, 312, 299, 263, 263, 264, 401, 401,
	401, 401, 128, 128, 130, 131, 131, 129, 129, 129,
	129, 129, 135, 135, 132, 136, 136, 136, 136, 137,
	137, 101, 101, 101, 101, 101, 101, 101, 101, 219,
	219, 139, 139, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 156, 156, 156, 156, 156, 156, 141,
	141, 141, 141, 141, 141, 141, 95, 95, 157, 157,
	157, 117, 116, 116, 98, 98, 97, 97, 158, 158,
	144, 144, 144, 144, 144, 144, 144, 144, 144, 144,
	144, 144, 144, 144, 144, 144, 144, 144, 144, 144,
	144, 144, 144, 144, 144, 144, 144, 144, 144, 144,
	144, 144, 144, 144, 144, 144, 151, 151, 155, 155,
	155, 155, 155, 155, 155, 155, 155, 155, 155, 155,
	155, 155, 155, 155, 155, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 149, 149, 149, 149,
	149, 149, 149, 149, 149, 149, 149, 149, 149, 149,
	149, 149, 149, 149, 149, 149, 149, 149, 149, 149,
	149, 149, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 398,
	398, 153, 152, 152, 152, 152, 152, 152, 92, 92,
	92, 92, 92, 257, 257, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 260, 260, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 260, 260,
	169, 169, 93, 93, 167, 167, 168, 170, 170, 166,
	166, 166, 166, 166, 166, 166, 166, 166, 166, 166,
	166, 166, 166, 143, 143, 143, 143, 143, 143, 143,
	143, 145, 145, 145, 171, 171, 159, 159, 103, 172,
	172, 173, 174, 174, 175, 175, 178, 191, 191, 191,
	192, 192, 192, 192, 147, 147, 193, 193, 193, 142,
	142, 142, 142, 142, 142, 142, 196, 196, 195, 195,
	194, 194, 194, 194, 194, 194, 205, 205, 161, 161,
	164, 164, 163, 165, 206, 206, 210, 210, 210, 210,
	207, 207, 211, 211, 211, 211, 214, 214, 215, 215,
	215, 212, 212, 212, 209, 209, 209, 253, 253, 253,
	217, 217, 227, 227, 224, 224, 225, 225, 218, 218,
	274, 274, 274, 233, 233, 232, 232, 232, 228, 228,
	228, 229, 229, 250, 250, 246, 246, 252, 252, 247,
	247, 254, 254, 255, 255, 345, 345, 293, 293, 355,
	355, 294, 294, 356, 356, 358, 358, 353, 353, 354,
	354, 357, 357, 38, 359, 359, 360, 360, 361, 361,
	361, 361, 39, 40, 40, 40, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 245, 245, 245, 245, 245,
	245, 243, 243, 243, 243, 243, 394, 395,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	11, 5, 7, 1, 5, 1, 3, 1, 3, 2,
	1, 13, 0, 2, 2, 0, 2, 3, 3, 1,
	3, 0, 2, 1, 3, 4, 1, 3, 1, 3,
	8, 9, 1, 1, 10, 9, 8, 7, 7, 1,
	1, 1, 3, 1, 3, 1, 3, 0, 4, 3,
	4, 5, 1, 3, 3, 2, 2, 2, 2, 2,
	1, 0, 0, 0, 2, 3, 3, 11, 9, 11,
	5, 5, 16, 12, 9, 4, 0, 3, 0, 2,
	2, 1, 3, 1, 1, 2, 2, 2, 0, 2,
	1, 2, 2, 2, 2, 2, 0, 1, 1, 2,
	3, 3, 5, 3, 3, 4, 5, 4, 4, 2,
	2, 2, 2, 2, 0, 2, 2, 9, 10, 9,
	5, 7, 7, 7, 7, 8, 4, 6, 2, 3,
	2, 3, 3, 3, 4, 3, 3, 2, 2, 3,
	2, 2, 2, 2, 2, 3, 2, 2, 2, 3,
	3, 2, 3, 3, 2, 2, 2, 2, 2, 1,
	3, 0, 3, 1, 3, 0, 1, 1, 1, 1,
	3, 1, 3, 3, 0, 2, 5, 5, 5, 7,
	5, 0, 3, 0, 3, 4, 0, 1, 1, 3,
	2, 3, 3, 3, 0, 1, 1, 2, 2, 2,
	2, 1, 2, 2, 3, 3, 3, 3, 4, 2,
	3, 3, 3, 3, 0, 3, 0, 3, 3, 1,
	1, 1, 3, 2, 1, 1, 3, 3, 2, 1,
	1, 3, 1, 2, 5, 4, 6, 4, 3, 3,
	6, 5, 5, 4, 3, 5, 1, 3, 1, 1,
	1, 1, 1, 0, 2, 2, 1, 1, 1, 1,
	1, 4, 5, 8, 1, 2, 5, 7, 10, 8,
	11, 1, 2, 5, 5, 5, 5, 6, 7, 5,
	7, 1, 1, 1, 1, 3, 1, 1, 1, 2,
	1, 1, 2, 2, 5, 0, 1, 2, 1, 3,
	5, 7, 8, 2, 2, 2, 4, 2, 4, 2,
	3, 1, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 4, 3,
	2, 4, 3, 0, 2, 3, 1, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 5, 5, 5,
	1, 1, 2, 3, 4, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 0, 1, 1, 0, 2,
	3, 2, 2, 2, 2, 2, 2, 2, 2, 6,
	8, 3, 3, 1, 1, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	3, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	1, 2, 2, 3, 3, 2, 2, 3, 2, 3,
	4, 2, 2, 1, 1, 1, 1, 1, 2, 1,
	1, 1, 1, 1, 4, 4, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 0, 3, 0, 3,
	3, 0, 5, 0, 3, 5, 0, 1, 1, 0,
	1, 2, 3, 2, 3, 5, 3, 5, 3, 5,
	4, 5, 4, 3, 1, 0, 1, 3, 3, 0,
	1, 2, 2, 0, 1, 0, 1, 1, 1, 1,
	2, 2, 2, 5, 5, 5, 4, 4, 4, 4,
	4, 4, 4, 2, 1, 2, 1, 2, 2, 3,
	2, 2, 2, 2, 1, 1, 1, 1, 3, 2,
	1, 1, 0, 3, 1, 1, 0, 1, 5, 2,
	2, 1, 3, 3, 3, 3, 3, 5, 4, 0,
	1, 1, 2, 2, 3, 2, 0, 1, 3, 5,
	3, 3, 5, 3, 2, 2, 1, 1, 1, 1,
	1, 0, 1, 0, 1, 1, 3, 3, 3, 3,
	3, 1, 10, 11, 11, 12, 12, 3, 3, 3,
	2, 1, 5, 1, 1, 0, 2, 2, 3, 3,
	1, 1, 2, 2, 2, 0, 1, 2, 0, 2,
	3, 3, 3, 3, 3, 4, 4, 5, 3, 3,
	4, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	3, 3, 3, 3, 3, 3, 2, 2, 4, 4,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 5, 8, 1, 4,
	5, 4, 5, 5, 5, 5, 8, 0, 1, 0,
	2, 0, 4, 0, 2, 0, 2, 0, 2, 1,
	1, 4, 3, 5, 1, 3, 5, 4, 3, 5,
	3, 8, 10, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 5, 4, 5, 1, 2, 2,
	4, 3, 6, 5, 3, 9, 2, 2, 0, 1,
	2, 0, 1, 7, 1, 3, 8, 8, 3, 3,
	3, 5, 3, 5, 5, 5, 4, 4, 4, 4,
	4, 4, 4, 0, 1, 1, 3, 2, 3, 4,
	4, 1, 3, 1, 1, 2, 2, 4, 4, 3,
	3, 3, 3, 3, 4, 3, 5, 5, 5, 4,
	4, 4, 3, 2, 2, 6, 2, 4, 3, 4,
	4, 5, 8, 6, 3, 5, 4, 2, 4, 3,
	2, 4, 5, 6, 2, 6, 6, 3, 3, 3,
	0, 1, 1, 1, 0, 2, 2, 0, 2, 3,
	2, 0, 1, 1, 2, 4, 1, 0, 1, 2,
	1, 2, 4, 4, 0, 1, 0, 3, 0, 2,
	4, 4, 2, 3, 4, 4, 5, 3, 3, 4,
	3, 1, 1, 1, 1, 0, 3, 1, 1, 1,
	3, 0, 2, 0, 2, 1, 2, 2, 0, 1,
	0, 1, 1, 0, 1, 1, 0, 1, 3, 5,
	1, 1, 3, 5, 1, 2, 3, 5, 2, 2,
	6, 0, 1, 0, 3, 0, 1, 0, 2, 2,
	4, 1, 2, 2, 2, 2, 2, 0, 2, 1,
	3, 3, 1, 3, 0, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 1, 1, 4,
	1, 3, 1, 1, 2, 2, 4, 2, 6, 1,
	4, 6, 3, 2, 0, 3, 0, 3, 1, 3,
	1, 3, 4, 4, 4, 4, 3, 2, 4, 0,
	1, 0, 2, 0, 1, 1, 1, 1, 1, 2,
	2, 1, 2, 3, 2, 3, 3, 2, 2, 2,
	12, 11, 1, 3, 3, 4, 3, 0, 0, 3,
	4, 3, 1, 3, 3, 2, 1, 1, 3, 1,
	1, 1, 1, 3, 3, 0, 5, 5, 5, 0,
	2, 1, 3, 3, 3, 2, 3, 1, 2, 0,
	3, 1, 1, 3, 3, 4, 4, 5, 3, 4,
	5, 6, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 0, 2, 1, 1,
	1, 3, 1, 3, 0, 1, 1, 3, 1, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 2, 2, 2, 2, 3,
	1, 1, 1, 1, 1, 1, 5, 6, 6, 6,
	5, 5, 5, 6, 5, 5, 6, 5, 5, 5,
	5, 6, 5, 5, 5, 4, 4, 5, 5, 5,
	5, 5, 4, 4, 4, 4, 4, 4, 4, 4,
	3, 6, 6, 4, 6, 6, 4, 8, 8, 8,
	8, 4, 6, 7, 7, 7, 9, 4, 7, 5,
	4, 4, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 8, 8, 0,
	2, 3, 4, 4, 4, 4, 4, 4, 0, 3,
	4, 7, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 3, 3,
	1, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	0, 1, 0, 2, 1, 2, 4, 0, 2, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 0, 3, 1, 3, 1, 0,
	2, 1, 0, 3, 1, 3, 2, 0, 1, 1,
	0, 2, 4, 4, 1, 1, 0, 2, 4, 2,
	4, 1, 3, 5, 4, 6, 0, 3, 1, 3,
	3, 1, 1, 1, 1, 1, 0, 5, 1, 3,
	1, 2, 3, 1, 1, 3, 3, 3, 3, 3,
	1, 3, 1, 2, 2, 3, 1, 1, 1, 1,
	1, 3, 3, 3, 1, 2, 1, 1, 1, 1,
	1, 1, 0, 1, 0, 2, 0, 3, 0, 1,
	0, 3, 3, 1, 1, 0, 1, 1, 1, 1,
	1, 0, 1, 0, 2, 1, 1, 1, 3, 1,
	1, 1, 1, 1, 1, 0, 2, 0, 1, 0,
	4, 0, 1, 0, 3, 0, 3, 0, 4, 0,
	3, 0, 3, 3, 1, 3, 2, 4, 1, 2,
	1, 2, 2, 2, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -393, -1, -3, -10, -11, -12, -13, -14, -16,
	-60, -17, -18, -19, -67, -70, -71, -72, -68, -69,
	-76, -77, -78, -74, -73, -25, -28, -20, -80, -35,
	-36, -37, -38, -39, -40, -41, -42, -44, -43, -5,
	6, 7, -108, 29, -63, 181, -62, -61, 184, 183,
	220, 185, 534, 332, 535, 213, 64, 357, -79, 360,
	361, -399, 272, 273, 20, 37, 362, 364, 30, 31,
	235, 295, 297, 188, 358, 352, 322, -4, 540, 182,
	215, 214, 26, -6, -7, -394, 68, 654, -174, 15,
	-85, -400, -85, -88, 9, 10, 8, 459, -85, -310,
	-234, 109, 68, 23, -229, -239, 89, 450, 189, -237,
	291, 293, -227, -228, -236, 245, 255, 44, 200, 199,
	256, 190, 291, 190, 191, 193, 450, 189, 228, 227,
	291, 293, 534, 190, -129, -254, -243, -244, 309, 73,
	-242, 476, 480, 483, 484, 489, 299, 82, 331, 332,
	323, 333, 210, 428, 292, 298, 301, 324, 621, 334,
	336, 337, 470, 471, 193, 203, 639, 316, 211, 537,
	256, 649, 642, 303, 418, 507, 357, 374, 366, 389,
	538, 592, 267, 365, 349, 435, 508, 306, 260, 329,
	593, 287, 424, 430, 270, 360, 528, 526, 509, 444,
	236, 594, 264, 266, 265, 250, 475, 271, 36, 216,
	385, 312, 535, 245, 595, 511, 588, 510, 239, 523,
	35, 27, 525, 238, 447, 100, 596, 340, 432, 512,
	406, 341, 234, 597, 542, 310, 222, 431, 381, 322,
	118, 243, 282, 342, 598, 407, 411, 599, 436, 296,
	281, 530, 600, 601, 343, 602, 192, 302, 513, 603,
	246, 438, 307, 405, 201, 539, 212, 48, 225, 439,
	409, 529, 415, 604, 339, 605, 606, 607, 608, 320,
	318, 514, 319, 321, 257, 262, 515, 53, 187, 413,
	412, 414, 263, 434, 394, 392, 609, 610, 311, 207,
	449, 611, 612, 393, 18, 613, 614, 442, 286, 314,
	615, 616, 617, 516, 531, 506, 618, 619, 433, 408,
	410, 244, 117, 534, 620, 317, 429, 326, 541, 300,
	527, 622, 345, 224, 218, 443, 350, 335, 623, 624,
	625, 626, 627, 294, 293, 361, 327, 517, 362, 268,
	628, 629, 518, 630, 631, 254, 237, 446, 437, 52,
	420, 632, 330, 346, 351, 353, 355, 356, 354, 423,
	358, 231, 519, 520, 521, 352, 522, 7, 261, 308,
	532, 533, 427, 328, 269, 255, 258, 396, 226, 633,
	634, 383, 384, 359, 229, 220, 112, 445, 587, 291,
	347, 51, 232, 635, 636, 259, 233, 363, 305, 386,
	190, 73, -242, 73, -242, 534, 134, 390, 435, 181,
	425, 426, 432, -304, 433, 227, 350, 230, -259, 190,
	-222, 424, 296, 317, 480, 233, 234, 191, 192, 32,
	437, 436, 428, -254, -81, 363, -81, -81, 194, 363,
	-94, 222, 185, -129, 221, -57, 73, 274, -57, 29,
	73, -135, -246, -254, 73, -242, 36, 73, 362, 427,
	427, 76, 541, 236, 21, -384, -365, 326, -383, -363,
	182, 181, 10, 183, 331, 332, 333, 191, 8, 30,
	621, 208, 334, 335, 6, 213, 336, 337, 228, 9,
	338, -368, 75, 73, -242, 21, -384, -365, 326, 335,
	350, 359, 350, -231, -230, 348, 415, -107, 591, -105,
	-114, -256, -254, -243, 75, 450, -218, 195, -87, 5,
	-9, -3, 540, -192, 17, 16, -91, 54, 55, -86,
	-99, 125, -101, -254, -138, 92, -144, 28, 24, -143,
	309, 221, -139, -166, -243, -165, -117, 134, -258, 123,
	124, 131, 93, 177, -151, -149, -150, -152, -154, -155,
	75, 74, 83, 76, 77, 78, 79, 84, 85, 86,
	-246, -244, -241, 476, 480, 483, 484, 489, -163, -394,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 58, 59, 474, 189, 460, 461, 387, 8,
	462, 463, 464, 536, 210, 468, 95, 47, 576, 448,
	458, 457, 456, 454, 455, 451, 453, 452, 470, 471,
	196, 450, 129, 459, 493, 494, 495, 496, 497, 498,
	499, 500, 502, 503, 501, 477, 478, 479, 481, 482,
	485, 486, 487, 488, 490, 491, 492, 543, 186, 182,
	185, 91, 23, 25, 544, 242, 94, 372, 401, 467,
	16, 20, 204, 188, 390, 202, 133, 198, 205, 276,
	278, 181, 62, 545, 277, 425, 546, 547, 548, 549,
	380, 378, 275, 550, 10, 26, 214, 249, 551, 376,
	183, 240, 98, 99, 552, 41, 40, 315, 279, 215,
	285, 377, 553, 554, 19, 65, 206, 11, 200, 230,
	648, 555, 295, 13, 116, 14, 556, 557, 558, 559,
	195, 111, 191, 638, 60, 247, 560, 370, 561, 562,
	563, 564, 565, 371, 88, 566, 567, 108, 290, 56,
	505, 32, 235, 589, 465, 289, 568, 38, 37, 400,
	404, 399, 288, 416, 109, 17, 30, 569, 570, 223,
	403, 369, 398, 590, 571, 572, 252, 63, 348, 379,
	652, 33, 66, 219, 344, 313, 42, 89, 15, 248,
	61, 34, 472, 113, 653, 382, 197, 227, 574, 440,
	251, 575, 114, 375, 591, 208, 110, 364, 184, 325,
	273, 209, 577, 297, 578, 241, 115, 426, 579, 580,
	469, 29, 213, 272, 368, 199, 581, 253, 284, 274,
	283, 582, 583, 304, 43, 650, 637, 190, 39, 97,
	402, 367, 397, 194, 466, 228, 280, 5, 44, 31,
	421, 9, 338, 64, 67, 391, 388, 584, 395, 651,
	12, 585, 473, 540, 441, 90, 586, 422, -85, -85,
	-85, -207, 359, -214, -211, 436, 437, -212, -215, -209,
	-166, 415, 618, 619, 435, 390, 434, -246, -254, -243,
	309, 221, 134, 477, 478, 479, 95, 387, 460, 493,
	451, 453, 448, 452, 450, 28, 494, 24, 86, 495,
	474, 196, 8, 177, 481, 482, 496, 497, 498, 58,
	454, 455, 536, 129, 92, 499, 500, 84, 502, 503,
	576, 459, 59, 501, 189, 487, 486, 485, 488, 462,
	463, 85, 456, 457, 458, 47, 491, 490, 492, -2,
	-6, 6, -129, -311, -298, -302, -246, -243, -244, -245,
	217, 205, -335, 73, -242, 309, 221, 50, 87, 55,
	54, 202, 191, 193, 459, -225, 196, -225, 228, 227,
	-238, 253, -225, -225, 190, -237, 101, 101, -64, -129,
	-367, -362, -368, -224, 196, -246, -224, -224, -224, -224,
	-224, -224, -224, 73, -242, -129, 178, -121, -129, 11,
	11, 67, 67, 73, -242, 73, 29, -223, 109, 12,
	450, 189, 190, 227, 228, 193, -223, -306, 11, 111,
	231, 231, 231, 231, 232, 231, -221, 427, 429, 229,
	430, 431, 12, -102, 109, 19, -394, -192, -192, 126,
	-83, 91, -83, 73, 362, 194, -75, -3, -13, -11,
	-12, -94, -9, -146, 23, 101, 29, 29, 75, 51,
	29, -52, -51, -53, 260, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 270, 271, 29, -346, 68, 178,
	-293, 415, 73, -359, -360, -129, 76, 76, 66, 317,
	66, 69, 194, 69, 66, -385, 327, 68, -385, 293,
	327, 328, 255, 291, 193, -385, -385, 293, -385, -385,
	-385, -385, -385, 427, -385, -385, -385, 329, 330, -385,
	425, 193, -385, -385, -385, -385, -385, 71, 66, 69,
	317, 66, 11, 66, 351, 440, -330, 134, 340, 341,
	342, 343, 339, 317, 344, 345, 346, 231, 347, -4,
	-105, 69, -196, -394, 73, -286, -285, -282, -283, -284,
	-281, 28, 190, -8, -6, -394, 21, 22, -395, 70,
	-107, -193, 19, 30, -147, 76, 79, -175, -178, -101,
	-254, 50, -89, 21, 22, 81, 11, -249, 91, 89,
	90, 108, -248, 23, 73, -242, -243, 75, -244, -245,
	178, -101, -141, 111, 92, 109, 110, 94, 120, 119,
	130, 123, 124, 125, 126, 127, 128, 129, 121, 122,
	133, 101, 102, 103, 104, 105, 106, 107, -219, -394,
	-117, -394, 178, -394, 178, 179, 180, 178, -144, -144,
	-144, -144, -144, -144, -144, -394, 178, 178, -394, -394,
	-394, -394, -394, -9, -158, -101, 540, -394, -394, -394,
	-394, -394, -394, -394, -394, -394, -394, -394, -394, -394,
	-394, -394, -169, -101, -394, -394, -398, -153, -394, -398,
	-153, -398, -153, -398, -394, -398, -153, -398, -153, -398,
	-398, -153, -398, -394, -394, -394, -394, -394, -394, -394,
	-394, -394, -394, -394, -394, -394, -394, -394, -394, -394,
	-394, -394, -394, -394, -394, -394, -394, -394, -394, -394,
	-394, -394, -218, -218, 11, -121, -122, -132, -254, 69,
	-208, -213, 438, 440, 359, -212, -212, -253, -246, 75,
	28, 101, 29, 178, -174, -85, 70, 69, -302, -261,
	-267, -269, -268, -270, -265, -266, 387, 390, 394, 392,
	388, 393, 134, 391, 396, 397, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 29, 216, 383, 384, 385,
	386, 407, 408, 409, 410, 411, 412, 413, 414, 366,
	389, 538, 367, 368, 369, 370, 371, 372, 374, 375,
	376, 377, 378, 379, 380, 381, -261, -261, -261, -261,
	73, 231, -243, -335, 68, -246, -129, -239, -237, 73,
	92, 73, -128, -246, -254, -135, 254, -371, -370, -362,
	-365, -225, -238, -362, 259, 257, 258, 69, 194, 69,
	194, 71, -121, 24, 66, -123, -129, 73, 73, -128,
	-135, -364, -362, -365, -255, -254, -240, 543, 186, 21,
	182, 185, 91, 23, 25, 544, 242, 94, 372, 134,
	477, 478, 479, 401, 467, 16, 20, 204, 95, 188,
	387, 390, 202, 133, 198, 205, 276, 278, 460, 493,
	181, 62, 545, 451, 453, 448, 452, 277, 450, 425,
	546, 547, 548, 549, 380, 378, 275, 28, 550, 10,
	494, 26, 214, 249, 22, 551, 127, 376, 183, 504,
	240, 98, 99, 552, 41, 40, 315, 24, 279, 215,
	86, 285, 495, 377, 553, 554, 19, 65, 206, 11,
	200, 230, 648, 555, 295, 13, 474, 116, 14, 556,
	557, 558, 559, 196, 195, 111, 191, 638, 60, 247,
	8, 560, 370, 561, 562, 563, 564, 565, 371, 177,
	88, 566, 567, 108, 290, 56, 481, 482, 505, 45,
	32, 235, 496, 497, 589, 498, 465, 289, 568, 38,
	37, 400, 404, 399, 288, 416, 58, 109, 17, 454,
	455, 30, 569, 570, 536, 223, 403, 369, 398, 590,
	571, 572, 129, 252, 63, 92, 348, 499, 500, 84,
	379, 652, 33, 66, 219, 344, 313, 42, 89, 15,
	248, 61, 34, 472, 113, 653, 502, 382, 197, 227,
	574, 440, 251, 575, 114, 503, 375, 591, 208, 110,
	364, 184, 576, 459, 325, 273, 209, 577, 297, 59,
	578, 241, 115, 501, 189, 426, 579, 6, 580, 469,
	29, 213, 272, 368, 199, 581, 253, 284, 274, 283,
	582, 49, 583, 304, 43, 487, 486, 485, 488, 650,
	57, 462, 463, 637, 190, 39, 97, 402, 367, 397,
	194, 466, 228, 85, 280, 5, 44, 31, 421, 9,
	338, 64, 67, 456, 457, 458, 47, 391, 388, 584,
	491, 395, 490, 492, 651, 96, 12, 585, 473, 540,
	441, 90, 586, 422, 69, 75, 75, -202, -203, 73,
	-242, -202, -223, 75, -258, -101, -225, -225, -129, -129,
	-129, -129, -129, -223, -223, -223, -223, -220, 11, 111,
	11, -220, -220, -101, -144, -362, 452, 125, -254, -84,
	-82, 207, -82, -84, 73, 73, 362, -75, 33, 73,
	-52, -52, 75, -52, 69, 101, -52, 70, -158, -246,
	-345, 638, 69, -361, 23, 440, 441, 416, -387, 190,
	230, 227, 66, -387, -383, 335, -364, -363, -362, -385,
	-386, -246, -385, -385, -385, 427, -385, -385, -385, -385,
	-385, -385, -385, -385, -368, -387, 295, 69, -387, -364,
	-362, 194, 441, 442, 339, 339, 339, 339, 339, 339,
	-114, 23, -195, -194, -247, -243, -244, -245, 217, -246,
	-240, -286, -283, -282, -284, 390, 435, 133, 447, -129,
	-9, -204, 88, 9, 111, 69, 18, 69, -191, 25,
	26, 178, -145, 51, 76, 79, -226, 49, -129, -101,
	-101, -101, -156, 84, 92, 85, 86, -248, 217, 125,
	-255, -247, -244, -243, 309, 221, -240, -144, -157, -163,
	-117, 80, 111, 109, 110, 94, -144, -144, -144, -144,
	-144, -144, -144, -144, -144, -144, -144, -144, -144, -144,
	-144, -257, 73, 75, 73, -247, -97, -100, 125, -101,
	-254, -247, -143, 84, -143, -246, -246, -89, -247, 428,
	-247, -89, -89, -89, -89, -89, -395, 69, -395, -9,
	-97, -97, -97, -395, -101, -101, -97, -97, -166, 75,
	-97, -166, 75, -97, -144, 465, 466, 467, -97, -97,
	-89, -167, -168, 96, -166, -97, -395, -144, -246, -246,
	-97, -98, -97, -97, -97, -395, -395, -100, -97, -100,
	-97, -97, -395, -395, -395, -395, -97, -97, -97, -97,
	-97, -97, -97, -97, -97, -97, -97, -97, -131, 88,
	-129, -104, -109, -111, -112, -133, -116, -394, -110, -113,
	-129, -117, 73, 505, -129, -121, -396, 11, 67, -396,
	69, 178, -211, -214, 69, 439, 441, 442, -208, -279,
	-280, 133, 66, 87, -101, -247, -255, -192, -91, -313,
	-298, -300, -301, -302, -324, 205, -334, 197, 199, 200,
	44, -303, 206, 191, 45, -262, -288, 420, 421, -272,
	68, -271, 68, -271, 395, 387, 390, 388, -271, -271,
	-271, -271, -271, 388, 68, 68, -272, -272, -272, -290,
	68, -290, 382, -291, 68, -291, -291, -291, -291, -262,
	-262, -262, -262, -335, -335, -335, -101, -250, 67, 23,
	193, -286, 24, -286, -58, 242, 211, 178, 68, 245,
	246, -366, 69, 28, -372, 292, -129, 221, -129, -129,
	-362, -362, -368, -342, 209, 204, -129, 69, 69, -129,
	69, 75, 73, 73, -146, -307, 11, 111, -223, -254,
	-254, -129, -146, -223, -95, 217, 67, -398, -395, 364,
	365, 73, -144, -51, -143, 70, -130, 88, 75, -360,
	-256, 415, 441, -388, 125, -246, -387, -388, -391, 540,
	194, 70, 69, -385, -388, 313, 295, -388, 11, -331,
	-332, 353, 354, 355, 356, -333, 19, -116, -394, -395,
	69, 178, 29, -309, 101, -309, -309, -66, -65, 186,
	183, 184, 187, 188, -338, 418, 182, 239, 238, 224,
	-395, -201, 34, 35, -246, 52, -147, -147, -178, -217,
	19, 11, 47, 47, -90, 57, 84, 85, 86, 178,
	-394, -157, -144, -144, -144, -95, 91, -395, 69, -395,
	178, -98, -97, -97, -97, -97, -97, -101, -395, -395,
	-395, -395, 69, 67, 23, -395, 67, -395, 11, 11,
	-395, 11, 11, -395, -395, 11, -144, -144, -144, -395,
	-395, -97, -170, -168, 98, -101, -395, -395, -395, 69,
	69, -395, -395, -395, -395, -179, 472, -179, -395, -395,
	-395, -395, -395, -179, -179, -179, -179, -395, -395, -395,
	-395, -395, -395, -395, -395, -395, -395, -395, -395, -199,
	113, -129, 29, 69, -124, -126, -125, -127, 56, 60,
	62, 57, 58, 59, 428, 63, -234, -104, -115, 47,
	-394, -134, 113, -136, 23, -256, 64, 195, 65, -394,
	-394, -199, 67, -104, -104, -132, -254, 125, -213, -216,
	443, 440, 446, 73, 75, 178, -193, -317, -314, 69,
	113, 645, 418, 507, 435, 28, 390, 508, 133, 82,
	509, 236, 36, 191, 511, 447, 340, 512, 513, 201,
	514, 515, 516, 301, 517, 358, 518, 519, 520, 521,
	328, 5, -302, 68, 73, -308, -243, 45, -303, -305,
	-303, -303, -308, 73, -308, 45, 84, 92, -278, -280,
	134, -275, -276, -292, -295, -273, 23, 648, 423, 390,
	28, 66, 418, 197, 45, 44, 200, 82, -289, 422,
	76, 76, 483, -271, -271, -271, 395, -271, -296, 75,
	-296, 76, -290, 76, 70, 66, -246, -188, -129, -59,
	8, 9, 10, -246, -347, -348, -349, -246, 111, 247,
	248, -375, 325, -370, 293, 302, 91, 16, 540, 194,
	194, -129, -362, -203, -137, 12, 73, 73, -220, -223,
	-144, -365, 233, 234, -199, 190, -361, 194, 178, 178,
	-388, 194, 316, -364, -246, 11, 11, 313, 11, -364,
	69, 101, 101, 101, 101, 349, -194, -247, -309, 73,
	75, 134, 73, 75, 134, 75, 69, -235, -303, -344,
	-301, -302, -343, 198, 205, -235, 205, 202, -303, 206,
	197, 198, -232, -303, 194, 23, -235, -235, -309, -235,
	32, 32, 113, 69, 75, 75, 53, -129, -96, -189,
	125, -247, -98, -95, 91, -144, -100, 125, -255, -395,
	-395, -395, -395, -395, -395, -260, 134, 387, 216, 385,
	378, 405, 392, 420, 383, 421, -257, -260, -257, -144,
	-144, -144, -144, -144, 11, 11, 11, 537, -174, 100,
	-101, 97, -144, -144, -246, -184, -394, -179, -179, -179,
	-179, -179, -180, -179, -180, -180, -180, -180, -180, -180,
	-180, -180, -180, -180, -180, -142, 29, 47, -394, -9,
	-394, -206, -210, -166, -243, -245, 217, 309, 221, -109,
	-111, -111, -109, -111, 56, 56, 56, 61, 56, 61,
	61, 56, 56, -125, -256, -395, -395, -162, 241, -394,
	33, -256, -136, 191, 191, 191, -98, -144, -137, -104,
	-137, -137, 178, 440, 444, 445, -314, 16, -309, -309,
	-309, -309, 435, 390, 133, 29, -309, -309, -309, -309,
	-309, 510, 510, -309, -309, -309, -309, -309, -309, -309,
	-309, -309, -309, -309, 359, -309, -309, -309, -309, -315,
	-392, 75, 76, 82, 331, 301, 73, -242, -240, -309,
	-326, -325, -246, -243, 197, -334, 44, -334, -308, -308,
	-308, -308, 68, 84, -394, 649, 76, 29, -143, 124,
	-139, 448, 454, 455, 449, -394, 85, 86, 9, 45,
	45, 45, 75, 70, 70, 70, -271, 70, 69, 70,
	69, 70, 69, -140, 596, 92, -129, -190, 23, 66,
	70, 69, -261, -246, -246, -246, -378, 540, 298, -376,
	-374, 304, 305, 306, 307, 308, -365, 303, -372, 300,
	75, 73, -129, -362, -101, -146, -277, -278, -129, -364,
	125, 125, -246, 194, -364, 313, -390, 540, -364, -364,
	11, -364, -332, 75, 75, 75, 76, 75, 73, 75,
	134, -65, 68, -297, 73, -242, -308, -228, 197, 73,
	73, 73, -243, -242, -244, -245, 73, -243, -242, -244,
	-245, -246, 45, 45, 73, -129, -246, -297, 73, -101,
	-246, -246, -246, -204, 69, -99, -395, -144, 178, -180,
	-180, -180, -180, -180, -395, -272, -272, -272, -291, -272,
	371, -272, 371, -395, -395, -395, 19, 19, 19, 19,
	-395, -144, -144, -144, -394, -93, 469, -101, 69, 69,
	-251, 73, -205, 66, -206, -161, -164, -163, -394, -9,
	-395, -195, 6, 540, -200, -246, -137, 69, 101, 101,
	101, 101, -119, -118, 66, 67, -120, 66, -118, 56,
	56, 56, -198, 68, 69, -163, -394, -200, -144, -136,
	-394, -394, -394, -395, 69, -174, -137, -318, -319, 114,
	529, -320, 568, -315, -315, -315, -257, -309, 29, -309,
	-309, 76, -392, 75, 75, 75, -309, -309, 76, 75,
	-392, 75, 207, 210, 212, -315, -315, -315, 76, 75,
	-316, 28, 525, 381, 526, 527, 528, 75, 28, 76,
	28, 76, -315, 522, -315, 70, 69, -272, -272, 45,
	-305, -197, -246, -144, 23, 73, 134, -143, -398, -394,
	-398, -394, -398, -394, -394, -144, -150, 448, 458, 457,
	456, 454, 455, 451, 453, 452, 470, 471, 75, 76,
	76, 596, 68, -9, -188, -129, -350, -351, -352, 82,
	539, 92, 249, 250, 207, 251, 252, 253, -349, -261,
	-261, -261, -381, -382, -380, 301, 323, 324, 309, -379,
	-377, 318, 319, 320, 321, 91, 75, 75, 75, -373,
	292, 91, 301, 16, 23, -223, -353, -221, -390, -364,
	-390, 295, -364, -297, -176, 210, 211, -261, -261, -250,
	-305, 45, 73, -233, 194, 23, 194, -176, -297, 29,
	183, 88, -106, 11, -189, -189, 125, -277, 73, -144,
	-144, -144, -144, -395, -395, -395, -144, -395, 75, -144,
	-144, -160, 113, 27, -205, 69, -395, -395, 47, -395,
	-395, 69, -174, -210, -101, -101, -101, -101, -101, 68,
	-101, -197, 241, -395, -136, -234, -197, -197, -197, 75,
	-192, -321, 531, -394, 430, -394, 430, 530, 45, -257,
	-309, -392, -257, 75, 75, 523, 524, -328, -327, 67,
	201, 82, -325, -191, -191, -308, -308, 70, 69, -395,
	-394, -97, -97, -97, -395, -97, -395, 70, 70, -326,
	-188, -190, 19, -189, -352, 75, 253, 249, 253, 253,
	253, 253, 254, -369, 82, 299, -380, 310, 601, 294,
	325, 76, 76, 112, 30, 31, -377, 76, 76, 76,
	76, -374, 16, 540, -372, 300, 75, 75, -354, 38,
	-356, 39, -389, 23, -390, -389, 313, 70, 73, -262,
	-262, 68, -308, -308, 73, -246, -176, 28, 28, -394,
	-137, 504, -104, -99, -395, -395, -395, -395, -92, 111,
	540, -395, -395, -174, 16, 45, -164, -161, 47, -9,
	-394, -246, -192, -197, 70, -163, -134, -256, -395, -395,
	-395, 430, -322, 532, 76, -392, -394, -392, -394, -394,
	-394, 256, -257, -327, -392, -309, 75, 208, -246, -287,
	651, 650, -144, -395, -395, -395, -395, 70, -9, 240,
	-190, 36, 36, 245, 246, 75, 75, 28, 311, 177,
	28, 76, 177, 475, 300, 75, 73, 301, -274, 195,
	-357, 43, -355, -294, 42, 16, -362, -389, -326, -250,
	68, -144, -336, -337, 113, -171, 13, -189, -395, 538,
	63, 541, -185, 115, 114, -158, 9, -161, -9, 70,
	-136, -394, -394, 16, -395, -197, -395, -197, -143, 73,
	-197, 101, 76, -129, -395, -329, -328, -188, 241, -22,
	-3, -11, -12, -13, -14, -16, -60, -17, -18, -23,
	-24, -19, -67, -70, -71, -72, -68, -79, -77, -78,
	-74, -73, -27, -29, -30, -32, -33, -34, -31, -25,
	-28, -20, -35, -36, -37, -41, -42, -26, -43, 95,
	196, 358, 275, 286, 287, 288, 73, 289, 290, 285,
	357, 76, 28, 76, 28, 314, 301, 23, -198, 76,
	-356, 16, -358, 40, 41, 75, 540, 70, 68, -326,
	-395, 69, -246, -172, 14, 16, 53, 539, 542, -395,
	-186, 94, -187, 112, 475, -148, 76, 177, -186, -206,
	-395, -312, -299, -247, -336, -319, -395, -395, -395, -395,
	-395, 76, 68, -287, -177, 243, 244, -188, -101, -101,
	73, -56, -252, 278, 279, 280, -247, 73, 73, -45,
	-22, 72, 73, 73, -397, 11, 50, -45, 312, 312,
	75, 38, 115, 75, 16, 16, 293, -329, -326, 70,
	-337, 47, -182, 473, -173, -101, -159, -103, -101, 53,
	-187, 117, 118, 241, 117, 118, -143, -395, 69, -261,
	-395, -323, 533, -394, -197, -188, 73, 73, -46, -47,
	96, 97, 276, 277, 281, -261, 69, 654, 288, 73,
	11, 654, 75, 75, 28, 298, 21, -365, 70, -329,
	225, -181, -183, -246, 69, 540, 91, -246, -395, -299,
	-263, 506, 24, 76, -197, 70, -190, 100, 98, -47,
	-101, -45, 19, 19, 19, -277, -247, 100, -22, -45,
	88, 100, 315, -329, 226, 69, 23, -103, 541, -187,
	23, -256, 75, 506, -395, -340, -341, 66, -15, -21,
	-14, -11, -12, -13, 357, 540, 95, -45, 97, 654,
	-57, 76, -9, -55, -54, 76, -57, 283, 92, 284,
	73, -279, 288, 654, -50, 73, -365, -394, -183, -184,
	542, -256, -264, 75, -341, 66, -340, 66, 10, 9,
	-188, -45, -107, 654, -45, 100, 98, -48, -49, 99,
	-22, 357, 69, 282, 28, 100, 69, -144, 223, -401,
	84, 28, 341, -339, 209, 204, 207, 29, -339, 654,
	100, 654, 196, -45, 100, 98, -49, -101, 100, -54,
	-144, 288, 73, -395, -395, 66, -144, 66, 203, 28,
	84, 100, 95, 654, 196, -45, 97, 73, 552, 66,
	552, 100, 654, -45, 552, 196, 100, 654, 196,
}

var yyDef = [...]int{
	-2, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, 35, 36, 37, 38, 1342,
	921, 921, 0, 921, 1023, -2, 749, 750, 0, 0,
	0, 0, 0, 0, 0, -2, 886, 887, 890, 887,
	887, 915, 0, 366, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 596, -2, 0, 1418,
	917, 918, 919, 45, 0, 0, 2296, 2, 1350, 0,
	930, 923, 0, 921, 921, 921, 72, 73, 0, 104,
	0, 0, 0, 1024, 0, 0, 0, 1416, 1416, 256,
	1416, 1416, 0, 1432, 254, 0, 1413, 1428, 1429, 1430,
	0, 0, 0, 1414, 0, 1414, 1414, 1414, 1414, 1414,
	1414, 1414, 0, 0, 817, 1057, 1059, 1060, 1061, 1441,
	1442, 2291, 2292, 2293, 2294, 2295, 2266, 2267, 2268, 2269,
	2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279,
	2280, 2281, 2282, 2283, 2284, 2021, 2022, 2023, 2024, 2025,
	2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035,
	2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045,
	2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055,
	2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065,
	2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075,
	2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085,
	2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095,
	2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105,
	2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115,
	2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125,
	2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135,
	2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145,
	2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155,
	2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165,
	2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175,
	2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185,
	2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195,
	2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205,
	2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215,
	2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225,
	2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235,
	2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245,
	2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255,
	2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265,
	0, 0, 0, 825, 826, 0, 0, 0, 877, 0,
	877, 843, 844, 0, 846, 0, 0, 0, 0, 0,
	0, 857, 860, 864, 0, 1350, 1350, 626, 627, 628,
	882, 883, 871, 884, 889, 888, 896, 896, 0, 888,
	61, -2, 0, 1004, 0, 345, 347, 0, 367, 0,
	370, 373, 1062, 0, -2, -2, 1447, 902, 0, 0,
	1472, 1473, 0, 0, 0, 0, 0, 2183, 199, 270,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 0,
	201, 201, 201, 2193, 201, 0, 201, 201, 201, 201,
	201, 269, 259, 260, 261, 0, 0, 0, 2183, 0,
	599, 891, 600, 0, 597, 594, 595, 62, 0, 50,
	63, 1366, 1025, 1026, 1027, -2, 0, 1419, 0, 925,
	0, 43, 0, 1356, 0, 0, 933, 931, 932, 922,
	0, 944, 974, 0, 1071, 1906, 1077, -2, 1819, 1120,
	1121, 1122, 1123, 1124, 1125, 1126, 1127, 1764, 0, 0,
	0, 0, 0, 1861, 1150, 1151, 1152, 1153, 1154, 1155,
	1323, 1324, 1325, 1326, 1327, 1328, 1329, -2, -2, -2,
	1309, 1310, 0, 2291, 2292, 2293, 2294, 2295, 1383, 0,
	1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254,
	1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264,
	1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274,
	1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284,
	1285, 1286, 1887, 1950, 1838, 1955, 1783, 0, 1775, 1852,
	1979, 1980, 0, 1895, 2272, 0, -2, 2004, 1943, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, 2282, 2283,
	1845, 1793, 1903, 1944, 1784, 1805, 1824, 1873, 1874, 1876,
	1908, 1909, 1927, 1936, 1954, 1765, 1766, 1767, 1868, 1869,
	1976, 1975, 1974, 1977, 2010, 2008, 2011, 1753, 1754, 1755,
	1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1768, 1769,
	1770, 1771, 1772, 1774, 1776, 1777, 1778, 1779, 1780, 1781,
	1782, 1785, 1786, 1787, 1792, 1794, 1795, 1796, 1797, 1798,
	1799, 1800, 1801, 1803, 1804, 1806, 1807, 1808, 1809, 1810,
	1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1820, 1821,
	1823, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833,
	1834, 1835, 1836, 1837, 1839, 1840, 1841, 1842, 1843, 1844,
	1846, 1847, 1848, 1849, 1850, 1851, 1853, 1854, 1855, 1856,
	1857, 1858, 1859, 1860, 1862, 1863, 1864, 1865, 1866, 1867,
	1870, 1871, 1872, 1875, 1877, 1878, 1879, 1880, 1881, 1882,
	1883, 1884, 1885, 1886, 1888, 1889, 1892, 1893, 1894, 1896,
	1897, 1898, 1899, 1900, 1901, 1902, 1904, 1905, 1907, 1911,
	1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921,
	1922, 1923, 1924, 1925, 1926, 1928, 1929, 1930, 1931, 1932,
	1933, 1934, 1935, 1937, 1938, 1939, 1940, 1941, 1942, 1945,
	1946, 1947, 1948, 1949, 1951, 1952, 1953, 1956, 1957, 1958,
	1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968,
	1969, 1970, 1971, 1972, 1973, 1978, 1981, 1982, 1983, 1984,
	1985, 1986, 1987, 1988, 1989, 1990, 1992, 1993, 1994, 1995,
	1996, 1997, 1998, 1999, 2000, 2005, 2006, 2007, 2009, 2012,
	2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 1418, 1418,
	0, 89, 2249, 0, 1390, -2, -2, 1392, 0, 0,
	0, -2, -2, -2, -2, 1776, -2, 1309, 0, 0,
	0, 0, 1764, 1765, 1766, 1767, 1773, 1775, 1783, 1784,
	1788, 1789, 1790, 1791, 1793, 1802, 1805, 1819, 1822, 1824,
	1838, 1845, 1852, 1861, 1868, 1869, 1873, 1874, 1876, 1887,
	1890, 1891, 1895, 1903, 1906, 1908, 1909, 1910, 1927, 1936,
	1943, 1944, 1950, 1954, 1955, 1974, 1975, 1976, 1977, 1979,
	1980, 1991, 2001, 2002, 2003, 2004, 2008, 2010, 2011, 105,
	1342, 921, 106, 0, 420, 421, 0, 0, 0, 0,
	0, 0, 651, 1435, 1436, 2285, 2286, 2287, 2288, 2289,
	2290, 0, 0, 0, 254, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 1416, 256, 0, 0, 798, 0,
	799, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 831, 832, 816, 0, 818, 83, 0,
	0, 0, 0, 829, 830, 833, 877, 835, 0, 0,
	1416, 1416, 0, 0, 0, 0, 842, 0, 653, 654,
	877, 848, 877, 877, 877, 874, 0, 874, 854, 874,
	872, 873, 0, 859, 0, 0, 0, 867, 868, 0,
	-2, 894, -2, 903, 0, 0, 908, 911, 912, 913,
	914, 61, 910, 920, 0, 0, 0, 0, 349, 0,
	0, 369, 351, 0, 354, 355, 356, 357, 358, 359,
	360, 361, 362, 363, 364, 365, 0, 372, 0, 0,
	1445, 1448, 907, 1463, 1464, 0, 1474, 1475, 205, 0,
	205, 0, 0, 0, 0, 168, 201, 0, 170, 201,
	201, 201, 0, 201, 201, 177, 178, 201, 180, 181,
	182, 183, 184, 201, 186, 187, 188, 201, 201, 191,
	201, 201, 194, 195, 196, 197, 198, 268, 205, 0,
	0, 205, 0, 0, 0, 0, 579, 0, 0, 0,
	0, 584, 585, 586, 587, 0, 0, 590, 591, -2,
	49, 0, 0, 0, -2, 752, -2, 557, 558, 559,
	0, 554, 0, 46, 68, 0, 926, 927, 67, 2297,
	0, 55, 0, 0, 1351, 1354, 1355, 1343, 1344, 1347,
	0, 0, 928, 934, 935, 924, 0, 945, 0, 0,
	0, 0, 975, 0, 978, 979, 980, 981, 982, 983,
	0, 1075, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1078, 0,
	1092, 0, 0, 0, 0, 0, 0, 0, 1143, 1144,
	1145, 1146, 1147, 1148, 0, 933, 0, 0, 933, 933,
	933, 933, 933, 0, 0, 1118, 2016, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 933, 0, 1301, 0, 0, 1212, 1221, 0, 1213,
	1222, 1214, 1223, 1215, 0, 1216, 1224, 1217, 1225, 1218,
	1219, 1226, 1220, 0, 0, 0, 1114, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 85, 1057, 0,
	90, 92, 0, 0, 2249, 1393, 1394, 549, 1407, 1408,
	1409, 0, 1405, 0, 1350, 930, 668, 0, 422, 438,
	526, 453, 454, 455, 516, 457, 518, 518, 0, 518,
	518, 518, 518, 518, 493, 494, 495, 496, 497, 499,
	500, 501, 502, 503, 0, 0, 476, 516, 516, 516,
	480, 506, 507, 508, 509, 510, 511, 512, 513, 458,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 521,
	521, 523, 523, 523, 523, 523, 438, 438, 438, 438,
	0, 0, 0, 650, 0, 1433, 0, 0, 256, -2,
	0, -2, 0, 1052, 0, 0, 0, 116, 286, 272,
	115, 0, 250, 255, 251, 252, 253, 0, 0, 0,
	0, 263, 813, 1415, 0, 806, 81, 807, 808, 809,
	810, 811, 265, 812, 1058, 1443, 1444, 1476, 1477, 1478,
	1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488,
	1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498,
	1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508,
	1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518,
	1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528,
	1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538,
	1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548,
	1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558,
	1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568,
	1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578,
	1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588,
	1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598,
	1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608,
	1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618,
	1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628,
	1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638,
	1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648,
	1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658,
	1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668,
	1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678,
	1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688,
	1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698,
	1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708,
	1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718,
	1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728,
	1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738,
	1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748,
	1749, 1750, 1751, 1752, 0, 819, 820, 827, 821, 823,
	824, 828, 834, 878, 0, 880, 0, 0, 1004, 839,
	840, 841, 655, 847, 849, 850, 856, 877, 0, 0,
	0, 1004, 877, 858, 1106, 861, 1229, 0, 885, 900,
	0, 895, 0, 901, 905, 904, 0, 909, 0, 916,
	346, 348, 350, 368, 0, 0, 371, 374, 0, 1063,
	0, 0, 0, 1466, 0, 1468, 1470, 0, 0, 206,
	207, 208, 205, 0, 200, 0, 223, 271, 0, 169,
	0, 203, 171, 172, 173, 201, 175, 176, 179, 185,
	189, 190, 192, 193, 267, 0, 0, 0, 0, 166,
	0, 0, 892, 893, 580, 581, 582, 583, 592, 589,
	64, 0, 0, 1368, 1371, 1372, 1373, 1374, 1375, 1439,
	1440, 751, 560, 561, 562, 0, 616, 616, 616, 0,
	0, 41, 0, 1357, 0, 0, 0, 0, 1346, 1348,
	1349, 0, 0, 1331, 0, 0, 936, 929, 44, 1072,
	1073, 1074, 1076, 1093, 0, 1095, 1097, 976, 977, 946,
	0, 1311, 1312, 1313, 1314, 1315, -2, 1083, 1084, 1108,
	1109, 1110, 0, 0, 0, 0, 1106, 1088, 0, 1128,
	1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138,
	1139, 1142, 1243, 1244, 0, 1320, 0, 1116, 940, 941,
	0, 1321, 1140, 1330, 1141, 1316, 1149, 1114, 1318, 1319,
	1317, 0, 0, 0, 0, 0, 1111, 0, 1382, 0,
	0, 0, 0, 1190, 0, 0, 0, 0, 1124, 1323,
	0, 1124, 1323, 0, 0, 1877, 1989, 1769, 0, 0,
	0, 1307, 1304, 0, 0, 0, 1230, 0, 0, 0,
	0, 0, 1115, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 87, 0,
	1056, 0, 984, 986, 987, 988, -2, 0, 992, 993,
	1065, 1112, 1441, 0, -2, 0, 0, 79, 80, 0,
	0, 0, 1391, 0, 0, 0, 95, 96, 91, 1395,
	550, 0, -2, 1402, 1403, 1311, 0, 1356, 933, 725,
	423, 425, 426, 427, 0, 633, 641, 0, 0, 631,
	633, 633, 0, 629, 630, 430, 529, 527, 528, 456,
	0, 481, 0, 482, 518, 518, 518, 518, 485, 486,
	488, 491, 492, 498, 0, 0, 477, 478, 479, 468,
	0, 469, 521, 471, 0, 472, 473, 474, 475, 431,
	432, 433, 434, 647, 648, 649, 0, 0, 0, 101,
	0, 110, 1417, 111, 0, 288, 289, 0, 226, 257,
	258, 118, 0, 0, 273, 0, 417, 418, 0, 800,
	0, 802, 262, 804, 814, 815, 805, 0, 0, 84,
	0, 879, 836, 837, 838, 1069, 0, 0, 851, 875,
	876, 874, 877, 855, 869, 0, 0, 862, 0, 899,
	897, 906, 1005, 352, 353, 375, 87, 0, 1446, 1465,
	0, 1469, 1471, 0, 209, 211, 0, 0, 160, 0,
	0, 202, 0, 174, 0, 0, 0, 0, 0, 598,
	601, 0, 0, 0, 0, 588, 0, 65, 0, 1367,
	0, 0, 616, 0, 617, 0, 0, 753, 754, -2,
	791, 1425, 791, 791, 777, 616, 791, 0, 0, 0,
	69, 56, 0, 2076, 59, 0, 1352, 1353, 1345, 0,
	1410, 1411, 1332, 1333, 102, 937, 1094, 1096, 1098, 0,
	1114, 1085, 1106, 1089, 0, 1086, 0, 1080, 0, 1188,
	0, 0, 0, 0, 0, 0, 0, 1119, -2, 1186,
	1187, 1189, 0, 0, 0, 1193, 0, 1196, 0, 0,
	1236, 0, 0, 1237, 1201, 0, 0, 0, 0, 0,
	1207, 1342, 0, 1305, 0, 0, 1210, 1211, 1231, 0,
	0, 1232, 1233, 1234, 1235, 1175, 0, 1176, 0, 0,
	0, 0, 0, 1182, 1183, 1184, 1185, 955, 955, 955,
	955, 955, 955, 955, 955, 955, 955, 955, 955, 0,
	0, 1055, 0, 0, 0, 0, 0, 0, 1028, 0,
	0, 1031, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 997, 0, 999, 0, 1065, 0, 0, 0, 1114,
	0, 1069, 0, 1069, 1069, 86, 0, 1064, 93, 94,
	0, 0, 100, 551, 552, 0, 225, 419, 669, 0,
	0, 616, 616, 616, 616, 0, 0, 616, 616, 616,
	616, 616, 0, 0, 616, 616, 616, 616, 616, 616,
	616, 616, 616, 616, 616, 0, 616, 616, 616, 616,
	0, 616, 424, 0, 634, 0, 0, 633, 633, 633,
	632, 633, 624, 634, 625, 0, 439, 0, 441, 442,
	443, 444, 445, 446, 447, 448, 0, 0, 0, 0,
	0, 0, 544, 0, 574, 576, 0, 0, 452, 530,
	0, 0, 0, 487, 483, 484, 518, 489, 0, 514,
	0, 0, 470, 0, 665, 0, 1434, 103, 0, 0,
	290, 291, 292, 1053, 0, 227, 228, 0, 0, 0,
	0, 128, 0, 287, 0, 0, 0, 0, 0, 0,
	0, 82, 266, 822, 845, 0, 656, 657, 1004, 853,
	1107, 863, 865, 866, 545, 0, 1467, 0, 0, 0,
	0, 0, 0, 221, 204, 0, 0, 0, 0, 167,
	0, 0, 0, 0, 0, 0, 1369, 1370, 0, 566,
	567, 568, 569, 570, 571, 572, 0, 0, 633, 0,
	778, 779, 0, 792, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1426, 1427, 0, 0, 0, 0,
	786, 787, 0, 0, 57, 58, 1358, 42, 55, 0,
	947, 1322, 0, 1087, 0, 1090, 1117, 942, 0, 1156,
	955, 955, 955, 955, 955, 0, 516, 516, 1290, 516,
	523, 1293, 516, 1295, 516, 1298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1302, 1209,
	1308, 0, 0, 0, 948, 949, 951, 1177, 1178, 1179,
	1180, 1181, 1160, 956, 1161, 1162, 1164, 1165, 1167, 1168,
	1169, 1170, 1172, 1173, 1174, 1376, 0, 0, 0, 1361,
	0, 1069, 1384, 0, 0, 0, 0, 2285, 2286, 985,
	1019, 1021, 0, 1016, 1029, 1030, 1032, 0, 1034, 0,
	0, 1037, 1038, 1039, 1006, 991, 1113, 994, 0, 0,
	0, 1065, 1003, 0, 0, 0, 0, 0, 1342, 1069,
	77, 78, 0, 97, 98, 99, 670, 737, 0, 0,
	0, 0, 616, 0, 616, 616, 0, 0, 0, 0,
	0, 616, 616, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 699, 0, 0, 0, 0, 706,
	707, 711, 712, 713, 714, 715, 722, 723, 724, 0,
	0, 635, 516, 516, 0, 639, 631, 640, 618, 620,
	621, 623, 0, 440, 0, 0, 451, 0, 531, 0,
	533, 1229, 1229, 1229, 0, 0, 1081, 1082, 0, 573,
	575, 577, 578, 517, 519, 520, 490, 504, 0, 505,
	0, 524, 0, 652, 666, 0, 0, 0, 101, 0,
	234, 0, 230, 0, 0, 0, 136, 0, 119, 120,
	121, 123, 124, 0, 0, 0, 117, 0, 275, 0,
	278, 279, 801, 803, 1070, 877, 1457, 546, 1054, 221,
	210, 212, 213, 0, 221, 224, 161, 0, 162, 164,
	0, 163, 602, 603, 604, 605, 606, 593, 563, 564,
	565, 755, 0, 788, 0, 0, 1433, 631, 0, -2,
	758, 763, 764, 765, 766, 767, 768, 769, 770, 771,
	772, 773, 0, 784, 0, 760, 0, 788, 0, 781,
	0, 0, 60, 52, 102, 102, 1157, 1091, 0, 1159,
	1163, 1158, 1166, 1171, 1191, 1287, 545, 1291, 1292, 1294,
	1296, 1297, 1299, 1195, 1192, 1194, 0, 0, 0, 0,
	1202, 0, 0, 0, 0, 0, 0, 1306, 0, 0,
	953, 952, 70, 0, 1376, 1359, 1378, 1380, 0, 0,
	0, 0, -2, 1748, 0, 1010, 1342, 0, 0, 0,
	0, 0, 1013, 1020, 0, 0, 1014, 0, 1015, 1033,
	1035, 1036, 989, 0, 0, 995, 0, 0, -2, 1002,
	0, 0, 0, 1012, 0, 1350, 76, 739, 728, 0,
	0, 0, 738, 671, 672, 673, 674, 0, 616, 0,
	0, 678, 679, 681, 682, 683, 0, 0, 686, 687,
	688, 689, 690, 691, 692, 693, 694, 695, 696, 697,
	698, 716, 717, 718, 719, 720, 721, 700, 701, 702,
	703, 704, 705, 0, 710, 608, 0, 1347, 1347, 633,
	633, 0, 1008, 0, 0, 547, 548, 532, 534, 0,
	536, 0, 538, 0, 0, 0, 543, 1229, 1229, 1229,
	1229, 1229, 1229, 1229, 1229, 1229, 0, 0, 515, 0,
	0, 667, 0, 101, 103, 0, 102, 235, 236, 0,
	0, 0, 241, 0, 0, 0, 0, 0, 229, 231,
	232, 233, 154, 137, 138, 0, 0, 0, 0, 129,
	130, 0, 0, 0, 0, 0, 125, 126, 127, 274,
	0, 0, 277, 0, 0, 852, 1459, 1453, 214, 221,
	214, 0, 165, 0, 757, 789, 0, 438, 438, 0,
	633, 633, 780, 0, 1423, 1424, 0, 775, 788, 0,
	0, 0, 1069, 0, 0, 938, 943, 1288, 1289, 0,
	0, 0, 0, 1203, 1204, 1205, 1238, 1208, 1303, 0,
	0, 1342, 0, 0, 71, 0, 1381, -2, 0, 0,
	88, 0, 1350, 1385, 1386, 1387, 1388, 1389, 1017, 0,
	1022, 0, 0, 1065, 1000, 0, 0, 0, 0, 0,
	75, 741, 0, 0, 0, 0, 0, 0, 0, 675,
	0, 680, 676, 684, 685, 708, 709, 607, 611, 0,
	616, 0, 636, 637, 638, 619, 622, 0, 0, 435,
	0, 0, 0, 0, 540, 0, 542, 522, 525, 0,
	108, 0, 0, 103, 237, 238, 239, 240, 242, 243,
	0, 0, 0, 114, 0, 0, 139, 0, 0, 0,
	0, 149, 150, 151, 152, 153, 131, 132, 133, 134,
	135, 122, 0, 0, 276, 0, 281, 282, 1420, 1461,
	-2, 0, 157, 0, 214, 159, 222, 756, 790, 428,
	429, 0, 1433, 0, 759, 774, 776, 0, 783, 0,
	1334, 53, 54, 102, 1197, 1199, 1198, 1200, 0, 0,
	0, 1227, 1228, 957, 0, 0, 1379, 1360, 0, 1364,
	0, 1011, 74, 0, 1007, 996, 998, 1065, 1066, 1067,
	1068, 0, 726, 0, 740, 0, 0, 0, 0, 0,
	0, 0, 677, 612, 613, 0, 615, 0, 1009, 449,
	436, 437, 0, 535, 537, 539, 541, 609, 101, 0,
	61, 244, 245, 246, 247, 155, 156, 140, 141, 0,
	143, 144, 0, 0, 0, 284, 0, 280, 1006, 0,
	1453, 0, 1455, 0, 1452, 0, 215, 158, 0, 0,
	0, 782, 0, 794, 0, 1339, 0, 939, 1206, 0,
	0, 0, 0, 0, 0, 954, 0, 1363, 0, 1018,
	1001, 0, 0, 737, 729, 0, 731, 0, 0, 0,
	0, 0, 614, 0, 435, 107, 610, 109, 293, 101,
	378, 379, 380, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 393, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 0,
	0, 0, 0, 0, 0, 61, 0, 0, 0, 335,
	61, 0, 145, 0, 147, 148, 283, 0, 40, 0,
	1460, 0, 1458, 0, 0, 1454, 0, 609, 0, 0,
	793, 0, 0, 967, 0, 0, 1239, 0, 1242, 950,
	958, 0, 961, 0, 0, 0, 972, 0, 959, 1377,
	-2, 0, 1042, 0, 0, 743, 730, 732, 733, 734,
	735, 0, 0, 450, 101, 0, 0, 113, 0, 0,
	1435, 0, 0, -2, -2, -2, 1437, 332, 333, 0,
	376, 0, 343, 344, 0, 336, 0, 0, 142, 146,
	285, 1421, 1422, 1462, 0, 0, 0, 761, 0, 609,
	795, 0, 51, 0, 1340, 1341, 1335, 1336, 1338, 1240,
	0, 962, 963, 964, 965, 966, 0, 0, 0, 0,
	727, 742, 0, 0, 0, 103, 294, 295, 0, 304,
	0, 61, 0, 0, 0, 545, 0, 61, 61, 0,
	337, 61, 1456, 1450, 216, 217, 218, 220, 609, 785,
	0, 968, 969, 0, 0, 0, 0, 973, 0, 1043,
	1044, 0, 0, 744, 0, 642, 61, 0, 61, 305,
	0, 0, 0, 0, 0, 549, 1438, 0, 377, 0,
	0, 248, 0, 762, 0, 0, 0, 1337, 0, 960,
	0, 1041, 1047, 0, 736, 643, 644, 0, 101, 296,
	297, 298, 299, 300, 61, 0, 302, 0, 61, 61,
	314, 315, 316, 61, 324, 326, 327, 328, 0, 330,
	331, 319, 340, 61, 334, 338, 219, 0, 970, 971,
	1241, 1040, 1048, 1046, 645, 0, 646, 0, 0, 0,
	112, 0, 62, 61, 0, 0, 61, 0, 311, 0,
	317, 61, 0, 329, 0, 0, 0, 0, 1896, 1045,
	0, 0, 0, 658, 660, 661, 0, 0, 659, 61,
	0, -2, 307, 0, 0, 61, 312, 0, 318, 325,
	320, 341, 339, 796, 797, 0, 0, 0, 662, 663,
	664, 301, 303, 61, 309, 0, 61, 342, 1049, 0,
	1051, 0, 61, 0, 1050, 308, 0, -2, 310,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 93, 3, 3, 3, 128, 120, 3,
	68, 70, 125, 123, 69, 124, 178, 126, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 72, 654,
	102, 101, 103, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 130, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 119, 3, 131,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 73, 74, 75, 76,
	77, 78, 79, 80, 81, 82, 83, 84, 85, 86,
	87, 88, 89, 90, 91, 92, 94, 95, 96, 97,
	98, 99, 100, 104, 105, 106, 107, 108, 109, 110,
	111, 112, 113, 114, 115, 116, 117, 118, 121, 122,
	127, 129, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
	251, 252, 253, 254, 255, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 270,
	271, 272, 273, 274, 275, 276,
}

var yyTok3 = [...]int{
	57600, 277, 57601, 278, 57602, 279, 57603, 280, 57604, 281,
	57605, 282, 57606, 283, 57607, 284, 57608, 285, 57609, 286,
	57610, 287, 57611, 288, 57612, 289, 57613, 290, 57614, 291,
	57615, 292, 57616, 293, 57617, 294, 57618, 295, 57619, 296,
	57620, 297, 57621, 298, 57622, 299, 57623, 300, 57624, 301,
	57625, 302, 57626, 303, 57627, 304, 57628, 305, 57629, 306,
	57630, 307, 57631, 308, 57632, 309, 57633, 310, 57634, 311,
	57635, 312, 57636, 313, 57637, 314, 57638, 315, 57639, 316,
	57640, 317, 57641, 318, 57642, 319, 57643, 320, 57644, 321,
	57645, 322, 57646, 323, 57647, 324, 57648, 325, 57649, 326,
	57650, 327, 57651, 328, 57652, 329, 57653, 330, 57654, 331,
	57655, 332, 57656, 333, 57657, 334, 57658, 335, 57659, 336,
	57660, 337, 57661, 338, 57662, 339, 57663, 340, 57664, 341,
	57665, 342, 57666, 343, 57667, 344, 57668, 345, 57669, 346,
	57670, 347, 57671, 348, 57672, 349, 57673, 350, 57674, 351,
	57675, 352, 57676, 353, 57677, 354, 57678, 355, 57679, 356,
	57680, 357, 57681, 358, 57682, 359, 57683, 360, 57684, 361,
	57685, 362, 57686, 363, 57687, 364, 57688, 365, 57689, 366,
	57690, 367, 57691, 368, 57692, 369, 57693, 370, 57694, 371,
	57695, 372, 57696, 373, 57697, 374, 57698, 375, 57699, 376,
	57700, 377, 57701, 378, 57702, 379, 57703, 380, 57704, 381,
	57705, 382, 57706, 383, 57707, 384, 57708, 385, 57709, 386,
	57710, 387, 57711, 388, 57712, 389, 57713, 390, 57714, 391,
	57715, 392, 57716, 393, 57717, 394, 57718, 395, 57719, 396,
	57720, 397, 57721, 398, 57722, 399, 57723, 400, 57724, 401,
	57725, 402, 57726, 403, 57727, 404, 57728, 405, 57729, 406,
	57730, 407, 57731, 408, 57732, 409, 57733, 410, 57734, 411,
	57735, 412, 57736, 413, 57737, 414, 57738, 415, 57739, 416,
	57740, 417, 57741, 418, 57742, 419, 57743, 420, 57744, 421,
	57745, 422, 57746, 423, 57747, 424, 57748, 425, 57749, 426,
	57750, 427, 57751, 428, 57752, 429, 57753, 430, 57754, 431,
	57755, 432, 57756, 433, 57757, 434, 57758, 435, 57759, 436,
	57760, 437, 57761, 438, 57762, 439, 57763, 440, 57764, 441,
	57765, 442, 57766, 443, 57767, 444, 57768, 445, 57769, 446,
	57770, 447, 57771, 448, 57772, 449, 57773, 450, 57774, 451,
	57775, 452, 57776, 453, 57777, 454, 57778, 455, 57779, 456,
	57780, 457, 57781, 458, 57782, 459, 57783, 460, 57784, 461,
	57785, 462, 57786, 463, 57787, 464, 57788, 465, 57789, 466,
	57790, 467, 57791, 468, 57792, 469, 57793, 470, 57794, 471,
	57795, 472, 57796, 473, 57797, 474, 57798, 475, 57799, 476,
	57800, 477, 57801, 478, 57802, 479, 57803, 480, 57804, 481,
	57805, 482, 57806, 483, 57807, 484, 57808, 485, 57809, 486,
	57810, 487, 57811, 488, 57812, 489, 57813, 490, 57814, 491,
	57815, 492, 57816, 493, 57817, 494, 57818, 495, 57819, 496,
	57820, 497, 57821, 498, 57822, 499, 57823, 500, 57824, 501,
	57825, 502, 57826, 503, 57827, 504, 57828, 505, 57829, 506,
	57830, 507, 57831, 508, 57832, 509, 57833, 510, 57834, 511,
	57835, 512, 57836, 513, 57837, 514, 57838, 515, 57839, 516,
	57840, 517, 57841, 518, 57842, 519, 57843, 520, 57844, 521,
	57845, 522, 57846, 523, 57847, 524, 57848, 525, 57849, 526,
	57850, 527, 57851, 528, 57852, 529, 57853, 530, 57854, 531,
	57855, 532, 57856, 533, 57857, 534, 57858, 535, 57859, 536,
	57860, 537, 57861, 538, 57862, 539, 57863, 540, 57864, 541,
	57865, 542, 57866, 543, 57867, 544, 57868, 545, 57869, 546,
	57870, 547, 57871, 548, 57872, 549, 57873, 550, 57874, 551,
	57875, 552, 57876, 553, 57877, 554, 57878, 555, 57879, 556,
	57880, 557, 57881, 558, 57882, 559, 57883, 560, 57884, 561,
	57885, 562, 57886, 563, 57887, 564, 57888, 565, 57889, 566,
	57890, 567, 57891, 568, 57892, 569, 57893, 570, 57894, 571,
	57895, 572, 57896, 573, 57897, 574, 57898, 575, 57899, 576,
	57900, 577, 57901, 578, 57902, 579, 57903, 580, 57904, 581,
	57905, 582, 57906, 583, 57907, 584, 57908, 585, 57909, 586,
	57910, 587, 57911, 588, 57912, 589, 57913, 590, 57914, 591,
	57915, 592, 57916, 593, 57917, 594, 57918, 595, 57919, 596,
	57920, 597, 57921, 598, 57922, 599, 57923, 600, 57924, 601,
	57925, 602, 57926, 603, 57927, 604, 57928, 605, 57929, 606,
	57930, 607, 57931, 608, 57932, 609, 57933, 610, 57934, 611,
	57935, 612, 57936, 613, 57937, 614, 57938, 615, 57939, 616,
	57940, 617, 57941, 618, 57942, 619, 57943, 620, 57944, 621,
	57945, 622, 57946, 623, 57947, 624, 57948, 625, 57949, 626,
	57950, 627, 57951, 628, 57952, 629, 57953, 630, 57954, 631,
	57955, 632, 57956, 633, 57957, 634, 57958, 635, 57959, 636,
	57960, 637, 57961, 638, 57962, 639, 57963, 640, 57964, 641,
	57965, 642, 57966, 643, 57967, 644, 57968, 645, 57969, 646,
	57970, 647, 57971, 648, 57972, 649, 57973, 650, 57974, 651,
	57975, 652, 57976, 653, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:565
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:569
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:576
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 39:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:615
		{
			setParseTree(yylex, nil)
		}
	case 40:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:621
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 41:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:627
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			if err := yyDollar[1].selStmt.SetInto(yyDollar[5].into); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 42:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:638
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:644
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 44:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:654
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:661
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:665
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:671
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:675
		{
			yyDollar[3].selStmt.SetWith(yyDollar[2].with)
			yyVAL.selStmt = yyDollar[3].selStmt
		}
	case 49:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:682
		{
			yyVAL.with = &With{Ctes: yyDollar[2].tableExprs, Recursive: true}
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:685
		{
			yyVAL.with = &With{Ctes: yyDollar[1].tableExprs, Recursive: false}
		}
	case 51:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:691
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr), Window: yyDollar[13].window, Into: yyDollar[8].into}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 52:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:699
		{
			yyVAL.tableExprs = nil
		}
	case 53:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:703
		{
			yyVAL.tableExprs = nil
		}
	case 54:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:707
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 55:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:716
		{
			yyVAL.into = nil
		}
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:720
		{
			yyVAL.into = &Into{Variables: yyDollar[2].variables}
		}
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:724
		{
			yyVAL.into = &Into{Outfile: string(yyDollar[3].bytes)}
		}
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:728
		{
			yyVAL.into = &Into{Dumpfile: string(yyDollar[3].bytes)}
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:734
		{
			yyVAL.variables = Variables{yyDollar[1].colIdent}
		}
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:738
		{
			yyVAL.variables = append(yyVAL.variables, yyDollar[3].colIdent)
		}
	case 61:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:743
		{
			yyVAL.with = nil
		}
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:747
		{
			yyVAL.with = yyDollar[2].with
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:753
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:757
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 65:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:763
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[4].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[2].columns}
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:769
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:777
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:783
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:791
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 70:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:797
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[7].ins
			ins.Action = yyDollar[2].str
			ins.Comments = yyDollar[3].bytes2
			ins.Ignore = yyDollar[4].str
			ins.Table = yyDollar[5].tableName
			ins.Partitions = yyDollar[6].partitions
			ins.OnDup = OnDup(yyDollar[8].assignExprs)
			ins.With = yyDollar[1].with
			yyVAL.statement = ins
		}
	case 71:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:810
		{
			cols := make(Columns, 0, len(yyDollar[8].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[9].assignExprs))
			for _, updateList := range yyDollar[8].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[2].str, Comments: Comments(yyDollar[3].bytes2), Ignore: yyDollar[4].str, Table: yyDollar[5].tableName, Partitions: yyDollar[6].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[9].assignExprs), With: yyDollar[1].with}
		}
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:822
		{
			yyVAL.str = InsertStr
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:826
		{
			yyVAL.str = ReplaceStr
		}
	case 74:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:832
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[3].bytes2), Ignore: yyDollar[4].str, TableExprs: yyDollar[5].tableExprs, Exprs: yyDollar[7].assignExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), OrderBy: yyDollar[9].orderBy, Limit: yyDollar[10].limit, With: yyDollar[1].with}
		}
	case 75:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:838
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitions, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit, With: yyDollar[1].with}
		}
	case 76:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:842
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[5].tableNames, TableExprs: yyDollar[7].tableExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), With: yyDollar[1].with}
		}
	case 77:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:846
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), With: yyDollar[1].with}
		}
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:850
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), With: yyDollar[1].with}
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:855
		{
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:856
		{
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:860
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 82:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:864
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:870
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:874
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:880
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:884
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 87:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:889
		{
			yyVAL.partitions = nil
		}
	case 88:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:893
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:899
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 90:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:903
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 91:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:910
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:919
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:923
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:929
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 95:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:933
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 96:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:937
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:943
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 98:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:947
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 99:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:951
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:955
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 101:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:960
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 102:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:965
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 103:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:970
		{
			yyVAL.boolean = yySpecialCommentMode(yylex)
		}
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:976
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:985
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:990
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 107:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:995
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 108:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:999
		{
			yyDollar[2].viewSpec.ViewName = yyDollar[4].tableName.ToViewName()
			yyDollar[2].viewSpec.ViewExpr = yyDollar[8].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[2].viewSpec, SpecialCommentMode: yyDollar[7].boolean, SubStatementPositionStart: yyDollar[6].int, SubStatementPositionEnd: yyDollar[9].int - 1}
		}
	case 109:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1005
		{
			yyDollar[4].viewSpec.ViewName = yyDollar[6].tableName.ToViewName()
			yyDollar[4].viewSpec.ViewExpr = yyDollar[10].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[4].viewSpec, SpecialCommentMode: yyDollar[9].boolean, SubStatementPositionStart: yyDollar[8].int, SubStatementPositionEnd: yyDollar[11].int - 1, OrReplace: true}
		}
	case 110:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1011
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 111:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1019
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 112:
		yyDollar = yyS[yypt-16 : yypt+1]
//line sql.y:1027
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName, Definer: yyDollar[2].str, Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[15].statement}, SpecialCommentMode: yyDollar[14].boolean, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[16].int - 1}
		}
	case 113:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1031
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName, Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[11].statement}, SpecialCommentMode: yyDollar[10].boolean, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[12].int - 1}
		}
	case 114:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1035
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].tlsOptionItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].accountLimitItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].passLockItems)
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames, TLSOptions: tlsOptions, AccountLimits: accountLimits, PasswordOptions: passwordOptions, Locked: locked, Attribute: yyDollar[9].str}
		}
	case 115:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1054
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 116:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1063
		{
			yyVAL.accountNames = nil
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1067
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1072
		{
			yyVAL.tlsOptionItems = nil
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1076
		{
			yyVAL.tlsOptionItems = nil
		}
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1080
		{
			yyVAL.tlsOptionItems = yyDollar[2].tlsOptionItems
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1086
		{
			yyVAL.tlsOptionItems = []TLSOptionItem{yyDollar[1].tlsOptionItem}
		}
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1090
		{
			yyVAL.tlsOptionItems = append(yyDollar[1].tlsOptionItems, yyDollar[3].tlsOptionItem)
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1096
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1100
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1104
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1108
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1112
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 128:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1117
		{
			yyVAL.accountLimitItems = nil
		}
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1121
		{
			yyVAL.accountLimitItems = yyDollar[2].accountLimitItems
		}
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1127
		{
			yyVAL.accountLimitItems = []AccountLimitItem{yyDollar[1].accountLimitItem}
		}
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1131
		{
			yyVAL.accountLimitItems = append(yyDollar[1].accountLimitItems, yyDollar[2].accountLimitItem)
		}
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1137
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1141
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1145
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1149
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 136:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1154
		{
			yyVAL.passLockItems = nil
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1158
		{
			yyVAL.passLockItems = yyDollar[1].passLockItems
		}
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1164
		{
			yyVAL.passLockItems = []PassLockItem{yyDollar[1].passLockItem}
		}
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1168
		{
			yyVAL.passLockItems = append(yyDollar[1].passLockItems, yyDollar[2].passLockItem)
		}
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1174
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1178
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 142:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1182
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1186
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1190
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1194
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 146:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1198
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1202
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1206
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1210
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1214
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1218
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1222
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1226
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 154:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1231
		{
			yyVAL.str = ""
		}
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1235
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.str = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1240
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 157:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1246
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 158:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1251
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[5].grantObjectType, PrivilegeLevel: yyDollar[6].privilegeLevel, To: yyDollar[8].accountNames, WithGrantOption: yyDollar[9].boolean, As: yyDollar[10].grantAssumption}
		}
	case 159:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1256
		{
			yyVAL.statement = &GrantPrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 160:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1260
		{
			yyVAL.statement = &GrantRole{Roles: yyDollar[2].accountNames, To: yyDollar[4].accountNames, WithAdminOption: yyDollar[5].boolean}
		}
	case 161:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1264
		{
			yyVAL.statement = &GrantProxy{On: yyDollar[4].accountName, To: yyDollar[6].accountNames, WithGrantOption: yyDollar[7].boolean}
		}
	case 162:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1270
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &RevokePrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 163:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1275
		{
			yyVAL.statement = &RevokePrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 164:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1279
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[7].accountNames}
		}
	case 165:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1283
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[8].accountNames}
		}
	case 166:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1287
		{
			yyVAL.statement = &RevokeRole{Roles: yyDollar[2].accountNames, From: yyDollar[4].accountNames}
		}
	case 167:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1291
		{
			yyVAL.statement = &RevokeProxy{On: yyDollar[4].accountName, From: yyDollar[6].accountNames}
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1297
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].strs}
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1301
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].strs}
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1305
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].strs}
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1309
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].strs}
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1313
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].strs}
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1317
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].strs}
		}
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1321
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].strs}
		}
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1325
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].strs}
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1329
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].strs}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1333
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].strs}
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1337
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].strs}
		}
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1341
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].strs}
		}
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1345
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].strs}
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1349
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].strs}
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1353
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].strs}
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1357
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].strs}
		}
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1361
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].strs}
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1365
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].strs}
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1369
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].strs}
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1373
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].strs}
		}
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1377
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].strs}
		}
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1381
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].strs}
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1385
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].strs}
		}
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1389
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].strs}
		}
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1393
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].strs}
		}
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1397
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].strs}
		}
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1401
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].strs}
		}
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1405
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].strs}
		}
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1409
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].strs}
		}
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1413
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].strs}
		}
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1417
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].strs}
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1423
		{
			yyVAL.grantPrivileges = []Privilege{yyDollar[1].grantPrivilege}
		}
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1427
		{
			yyVAL.grantPrivileges = append(yyDollar[1].grantPrivileges, yyDollar[3].grantPrivilege)
		}
	case 201:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1432
		{
			yyVAL.strs = nil
		}
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1436
		{
			yyVAL.strs = yyDollar[2].strs
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1442
		{
			yyVAL.strs = []string{yyDollar[1].colIdent.String()}
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1446
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].colIdent.String())
		}
	case 205:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1451
		{
			yyVAL.grantObjectType = GrantObjectType_Any
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1455
		{
			yyVAL.grantObjectType = GrantObjectType_Table
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1459
		{
			yyVAL.grantObjectType = GrantObjectType_Function
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1463
		{
			yyVAL.grantObjectType = GrantObjectType_Procedure
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1469
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 210:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1473
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1477
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].colIdent.String()}
		}
	case 212:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1481
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: "*"}
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1485
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: yyDollar[3].colIdent.String()}
		}
	case 214:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1490
		{
			yyVAL.grantAssumption = nil
		}
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1494
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 216:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1498
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 217:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1502
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].accountName, Roles: nil}
		}
	case 218:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1506
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].accountName, Roles: nil}
		}
	case 219:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1510
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].accountName, Roles: yyDollar[7].accountNames}
		}
	case 220:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1514
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].accountName, Roles: yyDollar[5].accountNames}
		}
	case 221:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1519
		{
			yyVAL.boolean = false
		}
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1523
		{
			yyVAL.boolean = true
		}
	case 223:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1528
		{
			yyVAL.boolean = false
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1532
		{
			yyVAL.boolean = true
		}
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1539
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 226:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1551
		{
			yyVAL.procedureParams = nil
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1555
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1561
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1565
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1571
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[1].colIdent.String(), Type: yyDollar[2].columnType}
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1575
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1579
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1583
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 234:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1588
		{
			yyVAL.characteristics = nil
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1592
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1598
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1602
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1608
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 239:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1612
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1616
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1620
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1624
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1628
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1632
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1636
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1640
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1644
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 248:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1650
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1656
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: "", Definer: yyDollar[1].str, Security: yyDollar[2].str}
		}
	case 250:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1660
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: yyDollar[1].str, Definer: yyDollar[2].str, Security: yyDollar[3].str}
		}
	case 251:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1666
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1670
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1674
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 254:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1679
		{
			yyVAL.str = ""
		}
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1683
		{
			yyVAL.str = yyDollar[3].accountName.String()
		}
	case 256:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1688
		{
			yyVAL.str = ""
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1692
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1696
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1702
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1706
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1710
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1716
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1724
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1728
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1734
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1738
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1744
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1752
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1760
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1770
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1774
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1780
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1784
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 274:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1788
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 275:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1792
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 276:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1796
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 277:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1802
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1806
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1810
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 280:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1814
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 281:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1818
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 282:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1822
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 283:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1828
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1832
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 285:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1836
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1842
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1846
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1852
		{
			yyVAL.str = BeforeStr
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1856
		{
			yyVAL.str = AfterStr
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1862
		{
			yyVAL.str = InsertStr
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1866
		{
			yyVAL.str = UpdateStr
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1870
		{
			yyVAL.str = DeleteStr
		}
	case 293:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1875
		{
			yyVAL.triggerOrder = nil
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1879
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1883
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1889
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 301:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1899
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 302:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1905
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 303:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1909
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1915
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1919
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 306:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1925
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 307:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1931
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 308:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1936
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 309:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1941
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 310:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1947
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1955
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1959
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 313:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1965
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 314:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1971
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 315:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1975
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 316:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1979
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 317:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1983
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 318:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1987
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: &BeginEndBlock{}}}
		}
	case 319:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1991
		{
			yyDollar[3].columnType.Charset = yyDollar[4].str
			yyDollar[3].columnType.Collate = yyDollar[5].str
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 320:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1997
		{
			yyDollar[3].columnType.Charset = yyDollar[4].str
			yyDollar[3].columnType.Collate = yyDollar[5].str
			yyDollar[3].columnType.Default = yyDollar[7].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2006
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2010
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2014
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2020
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 325:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2024
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2030
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2034
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2038
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2042
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2046
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2050
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2056
		{
			yyVAL.statement = &OpenCursor{Name: string(yyDollar[2].bytes)}
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2062
		{
			yyVAL.statement = &CloseCursor{Name: string(yyDollar[2].bytes)}
		}
	case 334:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2068
		{
			yyVAL.statement = &FetchCursor{Name: string(yyDollar[3].bytes), Variables: yyDollar[5].strs}
		}
	case 335:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2073
		{
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2076
		{
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2080
		{
			yyVAL.strs = []string{string(yyDollar[1].bytes)}
		}
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2084
		{
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[3].bytes))
		}
	case 340:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2090
		{
			yyVAL.statement = &Loop{Label: "", Statements: yyDollar[2].statements}
		}
	case 341:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2094
		{
			yyVAL.statement = &Loop{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].statements}
		}
	case 342:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2098
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[8].bytes) {
				yylex.Error("End-label " + string(yyDollar[8].bytes) + " without match")
				return 1
			}
			yyVAL.statement = &Loop{Label: label, Statements: yyDollar[4].statements}
		}
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2109
		{
			yyVAL.statement = &Leave{Label: string(yyDollar[2].bytes)}
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2115
		{
			yyVAL.statement = &Iterate{Label: string(yyDollar[2].bytes)}
		}
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2121
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 346:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2125
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2129
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 348:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2133
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2139
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2143
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2149
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2153
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2159
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2165
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2169
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2173
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2177
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2181
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2185
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2189
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2193
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2197
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2201
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2205
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2209
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2215
		{
			yyVAL.statement = &Resignal{}
		}
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2219
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 368:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2223
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2227
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2231
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 371:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2235
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2241
		{
			yyVAL.statement = &Call{ProcName: yyDollar[2].procedureName, Params: yyDollar[3].exprs}
		}
	case 373:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2246
		{
			yyVAL.exprs = nil
		}
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2250
		{
			yyVAL.exprs = nil
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2254
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2260
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2264
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2270
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 417:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2314
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
		}
	case 418:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2328
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: TableName{Name: NewTableIdent(string(yyDollar[5].bytes))}, IfNotExists: ne, Temporary: neTemp}
		}
	case 419:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2344
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str + yyDollar[5].str
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2351
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2356
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2361
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2367
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 424:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2371
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2376
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2380
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2384
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2390
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2398
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2408
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2416
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2424
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2432
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2440
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2449
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2453
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2457
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 438:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2462
		{
			yyVAL.columnType = ColumnType{}
		}
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2466
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2475
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 441:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2484
		{
			opt := ColumnType{Charset: yyDollar[2].str}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2493
		{
			opt := ColumnType{Collate: yyDollar[2].str}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2502
		{
			opt := ColumnType{BinaryCollate: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2511
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 445:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2520
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2529
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2538
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2547
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 449:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2556
		{
			opt := ColumnType{GeneratedExpr: yyDollar[4].expr, Stored: yyDollar[6].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 450:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2565
		{
			opt := ColumnType{GeneratedExpr: yyDollar[6].expr, Stored: yyDollar[8].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2574
		{
			opt := ColumnType{SRID: NewIntVal(yyDollar[3].bytes)}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2585
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2596
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2601
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2607
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2611
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2615
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2619
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2623
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2627
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2631
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2635
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2639
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2643
		{
			yyVAL.columnType = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2649
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 469:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2655
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2661
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 471:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2667
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 472:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2673
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2679
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2685
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2691
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2699
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2703
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2707
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2711
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2715
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 481:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2721
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 482:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2725
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2729
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2733
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2737
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2741
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2745
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2749
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2753
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 490:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2757
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2761
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2765
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2769
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2773
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2777
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2781
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2785
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2789
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2793
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2797
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2801
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2805
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2809
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 504:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2813
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs}
		}
	case 505:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2818
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs}
		}
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2824
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2828
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2832
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2836
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2840
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2844
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2848
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2852
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2858
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2863
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2868
		{
			yyVAL.sqlVal = nil
		}
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2872
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2877
		{
			yyVAL.sqlVal = nil
		}
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2881
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2885
		{
			yyVAL.sqlVal = NewValArg(yyDollar[2].bytes)
		}
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2890
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 522:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2894
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2902
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2906
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 525:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2912
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 526:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2920
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2924
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2928
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 529:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2933
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2937
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2943
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2947
		{
			if num, ok := yyDollar[3].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.optVal = num
				} else {
					yyVAL.optVal = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.optVal = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[3].expr}
			}
		}
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2961
		{
			yyVAL.optVal = yyDollar[2].boolVal
		}
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2965
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 535:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2969
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes)), Exprs: yyDollar[4].selectExprs}
		}
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2973
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 537:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2977
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes)), Exprs: yyDollar[4].selectExprs}
		}
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2981
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 539:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2985
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes)), Exprs: yyDollar[4].selectExprs}
		}
	case 540:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2989
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 541:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2993
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes)), Exprs: yyDollar[4].selectExprs}
		}
	case 542:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2997
		{
			yyVAL.optVal = &ParenExpr{yyDollar[3].expr}
		}
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3003
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3009
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 545:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3014
		{
			yyVAL.str = ""
		}
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3018
		{
			yyVAL.str = yyDollar[1].str
		}
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3024
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3028
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 549:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3033
		{
			yyVAL.str = ""
		}
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3037
		{
			yyVAL.str = yyDollar[1].str
		}
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3043
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3047
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 553:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3052
		{
			yyVAL.boolean = false
		}
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3056
		{
			yyVAL.boolean = true
		}
	case 555:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3061
		{
			yyVAL.charsetCollates = nil
		}
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3065
		{
			yyVAL.charsetCollates = yyDollar[1].charsetCollates
		}
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3071
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3075
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3079
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3083
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3087
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3091
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 563:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3097
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 564:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3101
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 565:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3105
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 566:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3109
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 567:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3113
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 568:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3117
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 569:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3123
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 570:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3127
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 571:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3131
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 572:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3137
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3143
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3147
		{
			yyVAL.colKeyOpt = colKey
		}
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3151
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3155
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3159
		{
			yyVAL.colKeyOpt = colKeyFulltextKey
		}
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3165
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3171
		{
			yyVAL.statement = &Flush{Type: yyDollar[2].str, Option: yyDollar[3].flushOption}
		}
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3177
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3181
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 582:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3185
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3189
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3193
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3197
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3201
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3205
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3209
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].str}
		}
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3213
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3217
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3221
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 592:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3226
		{
			yyVAL.str = ""
		}
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3228
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3232
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3234
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 596:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3237
		{
			yyVAL.str = ""
		}
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3239
		{
			yyVAL.str = yyDollar[1].str
		}
	case 598:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3244
		{
			yyVAL.statement = &ChangeReplicationSource{Options: yyDollar[5].replicationOptions}
		}
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3248
		{
			yyVAL.statement = &StartReplica{}
		}
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3252
		{
			yyVAL.statement = &StopReplica{}
		}
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3258
		{
			yyVAL.replicationOptions = []*ReplicationOption{yyDollar[1].replicationOption}
		}
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3262
		{
			yyVAL.replicationOptions = append(yyVAL.replicationOptions, yyDollar[3].replicationOption)
		}
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3268
		{
			yyVAL.replicationOption = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3272
		{
			yyVAL.replicationOption = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3276
		{
			yyVAL.replicationOption = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3280
		{
			yyVAL.replicationOption = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 607:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3286
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 608:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3290
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 609:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3295
		{
			yyVAL.indexOptions = nil
		}
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3299
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3305
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3309
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3315
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3319
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3324
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 616:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3330
		{
			yyVAL.str = ""
		}
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3334
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3342
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 619:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3346
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3350
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3354
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true}
		}
	case 622:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3358
		{
			var name string
			name = yyDollar[2].str
			if name == "" {
				name = yyDollar[5].str
			}
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].str), Name: NewColIdent(name), Unique: true}
		}
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3367
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3371
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3375
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3381
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3385
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3389
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3395
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3399
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 631:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3404
		{
			yyVAL.str = ""
		}
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3408
		{
			yyVAL.str = yyDollar[1].str
		}
	case 633:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3413
		{
			yyVAL.str = ""
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3417
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3423
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3427
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3433
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3437
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3443
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3447
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3451
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 642:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3457
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 643:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3461
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 644:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3465
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 645:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3469
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 646:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3473
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3479
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3484
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3488
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3492
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3496
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 652:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3502
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3508
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3512
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3517
		{
			yyVAL.str = ""
		}
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3521
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3525
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3531
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3537
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3543
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3547
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3551
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3555
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3559
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 665:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3564
		{
			yyVAL.boolean = true
		}
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3568
		{
			yyVAL.boolean = true
		}
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3572
		{
			yyVAL.boolean = false
		}
	case 668:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3577
		{
			yyVAL.str = ""
		}
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3581
		{
			yyVAL.str = yyDollar[1].str + " " + string(yyDollar[2].str)
		}
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3585
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3591
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3595
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3599
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3603
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].str) + " "
		}
	case 675:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3607
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + yyDollar[3].str
		}
	case 676:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3611
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + yyDollar[4].str
		}
	case 677:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3615
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + yyDollar[5].str
		}
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3619
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3623
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 680:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3627
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[4].bytes)
		}
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3631
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3635
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3639
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 684:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3643
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + "'" + string(yyDollar[4].bytes) + "'"
		}
	case 685:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3647
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + "'" + string(yyDollar[4].bytes) + "'"
		}
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3651
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3655
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3659
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3663
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3667
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3671
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3675
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3679
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3683
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3687
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3691
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3695
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3699
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3703
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3707
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3711
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3715
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3719
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3723
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3727
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 706:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3731
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str
		}
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3735
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 708:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3739
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)
		}
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3743
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)
		}
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3747
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3753
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3757
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3762
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3766
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3770
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3776
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3780
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3784
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3788
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3792
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3796
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 725:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3807
		{
			yyVAL.str = ""
		}
	case 726:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3811
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + yyDollar[3].str + yyDollar[4].str + yyDollar[5].str
		}
	case 727:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3815
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + yyDollar[3].str + yyDollar[4].str + yyDollar[5].str + "(partition_definitions)"
		}
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3821
		{
			yyVAL.str = yyDollar[1].str
		}
	case 729:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3825
		{
			yyVAL.str = string(yyDollar[1].bytes) + " (" + string(yyDollar[3].bytes) + ")"
		}
	case 730:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3829
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " (column_list)"
		}
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3833
		{
			yyVAL.str = string(yyDollar[1].bytes) + " (" + string(yyDollar[3].bytes) + ")"
		}
	case 732:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3837
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " (column_list)"
		}
	case 733:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3843
		{
			yyVAL.str = yyDollar[1].str + string(yyDollar[2].bytes) + " (value)"
		}
	case 734:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3847
		{
			yyVAL.str = yyDollar[1].str + string(yyDollar[2].bytes) + " (" + string(yyDollar[4].bytes) + ")"
		}
	case 735:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3851
		{
			yyVAL.str = yyDollar[1].str + string(yyDollar[2].bytes) + " (column_list)"
		}
	case 736:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3855
		{
			yyVAL.str = yyDollar[1].str + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[5].bytes) + " (column_list)"
		}
	case 737:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3860
		{
			yyVAL.str = ""
		}
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3864
		{
			yyVAL.str = string(yyDollar[1].bytes) + " "
		}
	case 739:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3869
		{
			yyVAL.str = ""
		}
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3873
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " "
		}
	case 741:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3878
		{
			yyVAL.str = ""
		}
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3882
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + yyDollar[3].str + " " + yyDollar[4].str
		}
	case 743:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3887
		{
			yyVAL.str = ""
		}
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3891
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " "
		}
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3896
		{
			yyVAL.str = ""
		}
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3900
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 747:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3905
		{
			yyVAL.str = string("")
		}
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3909
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 751:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3919
		{
			yyVAL.statement = &DBDDL{Action: AlterStr, DBName: string(yyDollar[3].bytes), CharsetCollate: yyDollar[4].charsetCollates}
		}
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3923
		{
			yyVAL.statement = &DBDDL{Action: AlterStr, CharsetCollate: yyDollar[3].charsetCollates}
		}
	case 753:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3929
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3942
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3946
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 756:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3952
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 757:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3959
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3966
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 759:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3970
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3974
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 761:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3979
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 762:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3983
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3987
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3992
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3997
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4002
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4007
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4012
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4017
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4022
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4027
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4032
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4037
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 774:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4041
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 775:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4045
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 776:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4052
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4058
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 778:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4062
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4068
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 780:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4074
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4079
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 782:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4083
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 783:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4087
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4091
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 785:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:4097
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[7].indexColumns, Options: yyDollar[9].indexOptions}
			yyVAL.ddl = ddl
		}
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4103
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4107
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 788:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4112
		{
			yyVAL.columnOrder = nil
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4116
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4120
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 791:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4125
		{
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4127
		{
		}
	case 793:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4131
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4137
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4141
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 796:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4147
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 797:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4151
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4157
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4161
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4167
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 801:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4171
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4179
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 803:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4183
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 804:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4189
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 805:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4197
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 806:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4201
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 807:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4209
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 808:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4217
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 809:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4225
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName}, IfExists: exists}
		}
	case 810:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4233
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName}, IfExists: exists}
		}
	case 811:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4241
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 812:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4249
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 813:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4258
		{

		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4262
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4266
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4272
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4276
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4282
		{
			yyVAL.statement = &Analyze{Tables: yyDollar[3].tableNames}
		}
	case 819:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4288
		{
			yyVAL.statement = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].bytes)}
		}
	case 820:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4292
		{
			yyVAL.statement = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].bytes)}
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4298
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4302
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4309
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4313
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4319
		{
			yyVAL.statement = &Execute{Name: string(yyDollar[2].bytes)}
		}
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4323
		{
			yyVAL.statement = &Execute{Name: string(yyDollar[2].bytes)}
		}
	case 827:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4327
		{
			yyVAL.statement = &Execute{Name: string(yyDollar[2].bytes), VarList: yyDollar[4].strs}
		}
	case 828:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4331
		{
			yyVAL.statement = &Execute{Name: string(yyDollar[2].bytes), VarList: yyDollar[4].strs}
		}
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4337
		{
			yyVAL.statement = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4341
		{
			yyVAL.statement = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4345
		{
			yyVAL.statement = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4349
		{
			yyVAL.statement = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4355
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 834:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4360
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4364
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 836:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4368
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 837:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4372
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 838:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4376
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 839:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4381
		{
			yyVAL.statement = &Show{Type: CreateProcedureStr, Table: yyDollar[4].tableName}
		}
	case 840:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4385
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 841:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4389
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4393
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 843:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4397
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4401
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 845:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4405
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 846:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4409
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 847:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4413
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4417
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 849:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4421
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 850:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4425
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 851:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4429
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 852:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4433
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, AsOf: yyDollar[7].expr, Filter: yyDollar[8].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, Table: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 853:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4438
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4443
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 855:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4447
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 856:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4451
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4455
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 858:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4459
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4465
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4473
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 861:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4477
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 862:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4482
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 863:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4486
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4491
		{
			yyVAL.statement = &ShowPrivileges{}
		}
	case 865:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4495
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 866:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4499
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4503
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4507
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4513
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 870:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4519
		{
			yyVAL.boolean = false
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4523
		{
			yyVAL.boolean = true
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4529
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4533
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 874:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4539
		{
			yyVAL.str = ""
		}
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4543
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 876:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4547
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 877:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4553
		{
			yyVAL.showFilter = nil
		}
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4557
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4561
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[3].bytes)}
		}
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4565
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 881:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4571
		{
			yyVAL.str = ""
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4575
		{
			yyVAL.str = SessionStr
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4579
		{
			yyVAL.str = GlobalStr
		}
	case 884:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4585
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 885:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4589
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: yyDollar[2].tableIdent.v + "/" + yyDollar[4].tableIdent.v}}
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4593
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 887:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4598
		{
			yyVAL.bytes = nil
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4602
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 889:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4608
		{
			yyVAL.statement = &Begin{}
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4612
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 891:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4618
		{
			yyVAL.statement = &Begin{}
		}
	case 892:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4622
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 893:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4626
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 894:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4631
		{
			yyVAL.bytes = nil
		}
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4635
		{
			yyVAL.bytes = nil
		}
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4640
		{
			yyVAL.bytes = nil
		}
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4644
		{
			yyVAL.bytes = nil
		}
	case 898:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4649
		{
			yyVAL.bytes = nil
		}
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4653
		{
			yyVAL.bytes = nil
		}
	case 900:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4659
		{
			yyVAL.statement = &Commit{}
		}
	case 901:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4665
		{
			yyVAL.statement = &Rollback{}
		}
	case 902:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4671
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4677
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 904:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4681
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 905:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4685
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 906:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4689
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4695
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4701
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 909:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4705
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[3].str, Statement: yyDollar[4].statement}
		}
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4709
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4715
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 915:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4723
		{
			yyVAL.str = ""
		}
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4727
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4739
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[3].expr}
			yyVAL.statement = &Show{Type: "columns", Table: yyDollar[2].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 921:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4745
		{
			setAllowComments(yylex, true)
		}
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4749
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 923:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4755
		{
			yyVAL.bytes2 = nil
		}
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4759
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4765
		{
			yyVAL.str = UnionStr
		}
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4769
		{
			yyVAL.str = UnionAllStr
		}
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4773
		{
			yyVAL.str = UnionDistinctStr
		}
	case 928:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4778
		{
			yyVAL.byt = 0
		}
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4782
		{
			yyVAL.byt = 1
		}
	case 930:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4787
		{
			yyVAL.str = ""
		}
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4791
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4795
		{
			yyVAL.str = SQLCacheStr
		}
	case 933:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4800
		{
			yyVAL.str = ""
		}
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4804
		{
			yyVAL.str = ""
		}
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4808
		{
			yyVAL.str = DistinctStr
		}
	case 936:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4813
		{
			yyVAL.str = ""
		}
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4817
		{
			yyVAL.str = StraightJoinHint
		}
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4823
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 939:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4831
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4842
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4846
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4850
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 943:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4854
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4860
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4864
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4868
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 947:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4872
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4878
		{
			yyVAL.over = &Over{NameRef: yyDollar[2].colIdent}
		}
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4882
		{
			yyVAL.over = (*Over)(yyDollar[2].windowDef)
		}
	case 950:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4888
		{
			yyVAL.windowDef = &WindowDef{NameRef: yyDollar[2].colIdent, PartitionBy: yyDollar[3].exprs, OrderBy: yyDollar[4].orderBy, Frame: yyDollar[5].frame}
		}
	case 951:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4893
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4896
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 953:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4901
		{
			yyVAL.exprs = nil
		}
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4905
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 955:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4910
		{
			yyVAL.over = nil
		}
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4914
		{
			yyVAL.over = yyDollar[1].over
		}
	case 957:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4919
		{
			yyVAL.frame = nil
		}
	case 958:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4923
		{
			yyVAL.frame = &Frame{Unit: RowsUnit, Extent: yyDollar[2].frameExtent}
		}
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4927
		{
			yyVAL.frame = &Frame{Unit: RangeUnit, Extent: yyDollar[2].frameExtent}
		}
	case 960:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4934
		{
			startBound := yyDollar[2].frameBound
			endBound := yyDollar[4].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound, End: endBound}
		}
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4957
		{
			startBound := yyDollar[1].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound}
		}
	case 962:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4972
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedPreceding}
		}
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4976
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedFollowing}
		}
	case 964:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4980
		{
			yyVAL.frameBound = &FrameBound{Type: CurrentRow}
		}
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4984
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprPreceding,
			}
		}
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4991
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprFollowing,
			}
		}
	case 967:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4999
		{
			yyVAL.window = nil
		}
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5002
		{
			yyVAL.window = yyDollar[2].window
		}
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5008
		{
			yyVAL.window = Window{yyDollar[1].windowDef}
		}
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5011
		{
			yyVAL.window = append(yyDollar[1].window, yyDollar[3].windowDef)
		}
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5017
		{
			def := yyDollar[3].windowDef
			def.Name = yyDollar[1].colIdent
			yyVAL.windowDef = def
		}
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5026
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5030
		{
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 974:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5035
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5039
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5043
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5047
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[2].bytes))
		}
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5053
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5057
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5061
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5065
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5069
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5073
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5079
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5083
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5093
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 989:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5097
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5107
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5113
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5121
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5127
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 996:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5131
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5137
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 998:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5142
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5153
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 1000:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5157
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 1001:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5161
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5165
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5169
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 1004:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5180
		{
			yyVAL.expr = nil
		}
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5184
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 1006:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5189
		{
			yyVAL.columns = nil
		}
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5193
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5199
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5203
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5209
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5213
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 1012:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5219
		{
			yyVAL.tableExpr = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].selectExprs}
		}
	case 1013:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5233
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 1014:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5237
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 1015:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5241
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5245
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5251
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 1018:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5253
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 1019:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5257
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5259
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 1021:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5263
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 1022:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5265
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 1023:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5268
		{
			yyVAL.empty = struct{}{}
		}
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5270
		{
			yyVAL.empty = struct{}{}
		}
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5275
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5279
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5285
		{
			yyVAL.str = JoinStr
		}
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5289
		{
			yyVAL.str = JoinStr
		}
	case 1030:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5293
		{
			yyVAL.str = JoinStr
		}
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5299
		{
			yyVAL.str = StraightJoinStr
		}
	case 1032:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5305
		{
			yyVAL.str = LeftJoinStr
		}
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5309
		{
			yyVAL.str = LeftJoinStr
		}
	case 1034:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5313
		{
			yyVAL.str = RightJoinStr
		}
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5317
		{
			yyVAL.str = RightJoinStr
		}
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5321
		{
			yyVAL.str = FullOuterJoinStr
		}
	case 1037:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5325
		{
			yyVAL.str = FullOuterJoinStr
		}
	case 1038:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5331
		{
			yyVAL.str = NaturalJoinStr
		}
	case 1039:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5335
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 1040:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:5345
		{
			yyVAL.tableExpr = &JSONTableExpr{Data: yyDollar[3].expr, Path: string(yyDollar[5].bytes), Spec: yyDollar[8].TableSpec, Alias: yyDollar[12].tableIdent}
		}
	case 1041:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:5349
		{
			yyVAL.tableExpr = &JSONTableExpr{Data: yyDollar[3].expr, Path: string(yyDollar[5].bytes), Spec: yyDollar[8].TableSpec, Alias: yyDollar[11].tableIdent}
		}
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5355
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5360
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5368
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 1045:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5380
		{
			yyVAL.columnType = ColumnType{Path: string(yyDollar[2].bytes)}
		}
	case 1046:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5384
		{
			yyVAL.columnType = ColumnType{Path: string(yyDollar[3].bytes)}
		}
	case 1047:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5390
		{

		}
	case 1048:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5408
		{

		}
	case 1049:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5412
		{

		}
	case 1050:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5416
		{

		}
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5420
		{

		}
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5426
		{
			yyVAL.triggerName = TriggerName{Name: yyDollar[1].colIdent}
		}
	case 1053:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5430
		{
			yyVAL.triggerName = TriggerName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 1054:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5436
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 1055:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5442
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5446
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5452
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 1058:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5456
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5460
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5464
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5468
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5474
		{
			yyVAL.procedureName = ProcedureName{Name: yyDollar[1].colIdent}
		}
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5478
		{
			yyVAL.procedureName = ProcedureName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5484
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 1065:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5489
		{
			yyVAL.indexHints = nil
		}
	case 1066:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5493
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 1067:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5497
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 1068:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5501
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 1069:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5506
		{
			yyVAL.expr = nil
		}
	case 1070:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5510
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5516
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1072:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5520
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 1073:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5524
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 1074:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5528
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 1075:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5532
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 1076:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5536
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5540
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1078:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5544
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 1079:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5550
		{
			yyVAL.str = ""
		}
	case 1080:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5554
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5560
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5564
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5570
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5574
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 1085:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5578
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 1086:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5582
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 1087:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5586
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5590
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 1089:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5594
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 1090:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5598
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 1091:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5602
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 1092:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5606
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5612
		{
			yyVAL.str = IsNullStr
		}
	case 1094:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5616
		{
			yyVAL.str = IsNotNullStr
		}
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5620
		{
			yyVAL.str = IsTrueStr
		}
	case 1096:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5624
		{
			yyVAL.str = IsNotTrueStr
		}
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5628
		{
			yyVAL.str = IsFalseStr
		}
	case 1098:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5632
		{
			yyVAL.str = IsNotFalseStr
		}
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5638
		{
			yyVAL.str = EqualStr
		}
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5642
		{
			yyVAL.str = LessThanStr
		}
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5646
		{
			yyVAL.str = GreaterThanStr
		}
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5650
		{
			yyVAL.str = LessEqualStr
		}
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5654
		{
			yyVAL.str = GreaterEqualStr
		}
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5658
		{
			yyVAL.str = NotEqualStr
		}
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5662
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 1106:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5667
		{
			yyVAL.expr = nil
		}
	case 1107:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5671
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5677
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5681
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5685
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5691
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5697
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5701
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 1114:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5707
		{
			yyVAL.selectExprs = nil
		}
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5714
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5718
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5724
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5728
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5734
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5738
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5742
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5746
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5750
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5754
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5758
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5762
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 1128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5766
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 1129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5770
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5774
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 1131:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5778
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 1132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5782
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 1133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5786
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 1134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5790
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 1135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5794
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 1136:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5798
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 1137:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5802
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 1138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5806
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 1139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5810
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 1140:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5814
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 1141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5818
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 1142:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5822
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 1143:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5826
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 1144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5830
		{
			yyVAL.expr = &UnaryExpr{Operator: yyDollar[1].str, Expr: yyDollar[2].expr}
		}
	case 1145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5834
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 1146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5842
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 1147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5856
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 1148:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5860
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 1149:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5864
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 1156:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5884
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 1157:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5888
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 1158:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5898
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1159:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5902
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1160:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5906
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1161:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5910
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1162:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5914
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1163:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5918
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1164:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5922
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1165:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5926
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1166:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5930
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1167:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5934
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1168:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5938
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1169:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5942
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1170:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5946
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1171:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5950
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1172:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5954
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1173:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5958
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1174:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5962
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1175:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5971
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1176:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5975
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1177:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5979
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 1178:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5983
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1179:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5987
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 1180:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5991
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1181:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5995
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1182:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5999
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1183:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6003
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1184:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6007
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1185:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6011
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1186:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6022
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1187:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6026
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1188:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6030
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1189:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6034
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1190:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6038
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1191:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6042
		{
			yyVAL.expr = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 1192:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6046
		{
			yyVAL.expr = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 1193:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6050
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1194:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6054
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1195:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6058
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 1196:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6062
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1197:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6066
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1198:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6070
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1199:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6074
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1200:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6078
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1201:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6082
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 1202:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6086
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 1203:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:6090
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 1204:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:6094
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 1205:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:6098
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 1206:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:6102
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 1207:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6106
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1208:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:6110
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 1209:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6114
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 1210:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6118
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 1211:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6122
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6132
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1213:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6136
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1214:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6140
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1215:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6145
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1216:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6150
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1217:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6155
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1218:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6161
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6166
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1220:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6170
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6175
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6179
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1223:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6183
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1224:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6188
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1225:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6193
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1226:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6198
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1227:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6202
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1228:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6206
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1231:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6217
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1232:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6227
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1233:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6231
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1234:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6235
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1235:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6239
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1236:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6243
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1237:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6247
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1238:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6253
		{
			yyVAL.str = ""
		}
	case 1239:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6257
		{
			yyVAL.str = BooleanModeStr
		}
	case 1240:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6261
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 1241:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:6265
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 1242:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6269
		{
			yyVAL.str = QueryExpansionStr
		}
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6275
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6279
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6285
		{
			yyVAL.str = Armscii8Str
		}
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6289
		{
			yyVAL.str = AsciiStr
		}
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6293
		{
			yyVAL.str = Big5Str
		}
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6297
		{
			yyVAL.str = UBinaryStr
		}
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6301
		{
			yyVAL.str = Cp1250Str
		}
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6305
		{
			yyVAL.str = Cp1251Str
		}
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6309
		{
			yyVAL.str = Cp1256Str
		}
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6313
		{
			yyVAL.str = Cp1257Str
		}
	case 1253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6317
		{
			yyVAL.str = Cp850Str
		}
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6321
		{
			yyVAL.str = Cp852Str
		}
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6325
		{
			yyVAL.str = Cp866Str
		}
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6329
		{
			yyVAL.str = Cp932Str
		}
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6333
		{
			yyVAL.str = Dec8Str
		}
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6337
		{
			yyVAL.str = EucjpmsStr
		}
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6341
		{
			yyVAL.str = EuckrStr
		}
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6345
		{
			yyVAL.str = Gb18030Str
		}
	case 1261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6349
		{
			yyVAL.str = Gb2312Str
		}
	case 1262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6353
		{
			yyVAL.str = GbkStr
		}
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6357
		{
			yyVAL.str = Geostd8Str
		}
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6361
		{
			yyVAL.str = GreekStr
		}
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6365
		{
			yyVAL.str = HebrewStr
		}
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6369
		{
			yyVAL.str = Hp8Str
		}
	case 1267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6373
		{
			yyVAL.str = Keybcs2Str
		}
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6377
		{
			yyVAL.str = Koi8rStr
		}
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6381
		{
			yyVAL.str = Koi8uStr
		}
	case 1270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6385
		{
			yyVAL.str = Latin1Str
		}
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6389
		{
			yyVAL.str = Latin2Str
		}
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6393
		{
			yyVAL.str = Latin5Str
		}
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6397
		{
			yyVAL.str = Latin7Str
		}
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6401
		{
			yyVAL.str = MacceStr
		}
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6405
		{
			yyVAL.str = MacromanStr
		}
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6409
		{
			yyVAL.str = SjisStr
		}
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6413
		{
			yyVAL.str = Swe7Str
		}
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6417
		{
			yyVAL.str = Tis620Str
		}
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6421
		{
			yyVAL.str = Ucs2Str
		}
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6425
		{
			yyVAL.str = UjisStr
		}
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6429
		{
			yyVAL.str = Utf16Str
		}
	case 1282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6433
		{
			yyVAL.str = Utf16leStr
		}
	case 1283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6437
		{
			yyVAL.str = Utf32Str
		}
	case 1284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6441
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6445
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6449
		{
			yyVAL.str = Utf8mb4Str
		}
	case 1287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6455
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1288:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6459
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 1289:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6463
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 1290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6467
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6471
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6475
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 1293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6481
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1294:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6485
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6489
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1296:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6493
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1297:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6497
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6501
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1299:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6505
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1300:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6510
		{
			yyVAL.expr = nil
		}
	case 1301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6514
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1302:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6519
		{
			yyVAL.str = string("")
		}
	case 1303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6523
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6529
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 1305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6533
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 1306:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6539
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 1307:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6544
		{
			yyVAL.expr = nil
		}
	case 1308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6548
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6554
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 1310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6558
		{
			yyVAL.colName = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1311:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6562
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 1312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6566
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6570
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1314:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6574
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1315:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6578
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1316:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6582
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1317:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6586
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1318:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6590
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6594
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1320:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6598
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1321:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6602
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1322:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6606
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 1323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6612
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6616
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 1325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6620
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 1326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6624
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6628
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 1328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6632
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 1329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6636
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6640
		{
			yyVAL.expr = &NullVal{}
		}
	case 1331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6646
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 1332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6650
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6654
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1334:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6659
		{
			yyVAL.exprs = nil
		}
	case 1335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6663
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 1336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6669
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6673
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6679
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1339:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6684
		{
			yyVAL.expr = nil
		}
	case 1340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6688
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6694
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1342:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6699
		{
			yyVAL.orderBy = nil
		}
	case 1343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6703
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 1344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6709
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 1345:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6713
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 1346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6719
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 1347:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6724
		{
			yyVAL.str = AscScr
		}
	case 1348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6728
		{
			yyVAL.str = AscScr
		}
	case 1349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6732
		{
			yyVAL.str = DescScr
		}
	case 1350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6737
		{
			yyVAL.limit = nil
		}
	case 1351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6741
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 1352:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6745
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 1353:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6749
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 1354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6755
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6759
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1356:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6764
		{
			yyVAL.str = ""
		}
	case 1357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6768
		{
			yyVAL.str = ForUpdateStr
		}
	case 1358:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6772
		{
			yyVAL.str = ShareModeStr
		}
	case 1359:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6785
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 1360:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6789
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 1361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6793
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 1362:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6797
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 1363:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6802
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 1364:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6806
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 1365:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6810
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 1366:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6816
		{
			yyVAL.columns = nil
		}
	case 1367:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6820
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 1368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6826
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1369:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6830
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1370:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6836
		{
			yyVAL.colIdent = yyDollar[3].colIdent
		}
	case 1371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6840
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6844
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1373:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6848
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1374:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6852
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1375:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6856
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1376:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6861
		{
			yyVAL.assignExprs = nil
		}
	case 1377:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6865
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 1378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6871
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 1379:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6875
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 1380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6881
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 1381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6885
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 1382:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6891
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 1383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6897
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 1384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6907
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 1385:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6911
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 1386:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6917
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 1387:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6920
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1388:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6924
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1389:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6928
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6934
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 1391:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6938
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 1392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6944
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 1393:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6955
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1394:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6968
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6981
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 1396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6987
		{
			yyVAL.setScope = SetScope_Global
		}
	case 1397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6991
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6997
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7001
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7005
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 1401:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7011
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1402:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7015
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7019
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 1405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7026
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1407:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7033
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 1408:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7037
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7041
		{
			yyVAL.expr = &Default{}
		}
	case 1412:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7050
		{
			yyVAL.byt = 0
		}
	case 1413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7052
		{
			yyVAL.byt = 1
		}
	case 1414:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7055
		{
			yyVAL.byt = 0
		}
	case 1415:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7057
		{
			yyVAL.byt = 1
		}
	case 1416:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7060
		{
			yyVAL.byt = 0
		}
	case 1417:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7062
		{
			yyVAL.byt = 1
		}
	case 1418:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7065
		{
			yyVAL.str = ""
		}
	case 1419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7067
		{
			yyVAL.str = IgnoreStr
		}
	case 1420:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7070
		{
			yyVAL.sqlVal = nil
		}
	case 1421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7072
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1422:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7074
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7078
		{
			yyVAL.empty = struct{}{}
		}
	case 1424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7080
		{
			yyVAL.empty = struct{}{}
		}
	case 1425:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7083
		{
			yyVAL.empty = struct{}{}
		}
	case 1426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7085
		{
			yyVAL.empty = struct{}{}
		}
	case 1427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7087
		{
			yyVAL.empty = struct{}{}
		}
	case 1428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7091
		{
			yyVAL.str = UniqueStr
		}
	case 1429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7093
		{
			yyVAL.str = FulltextStr
		}
	case 1430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7095
		{
			yyVAL.str = SpatialStr
		}
	case 1431:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7098
		{
			yyVAL.str = ""
		}
	case 1432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7100
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1433:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7103
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 1434:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7105
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 1435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7109
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7113
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7119
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 1438:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7123
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 1440:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7130
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1441:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7136
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1442:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7140
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1444:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7147
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1445:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7152
		{
			yyVAL.str = string("")
		}
	case 1446:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7154
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1447:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7157
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7159
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1449:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7162
		{
			yyVAL.EnclosedBy = nil
		}
	case 1450:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7166
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1451:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7171
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7175
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1453:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7180
		{
			yyVAL.sqlVal = nil
		}
	case 1454:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7184
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1455:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7189
		{
			yyVAL.sqlVal = nil
		}
	case 1456:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7193
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1457:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7198
		{
			yyVAL.Fields = nil
		}
	case 1458:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7202
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1459:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7207
		{
			yyVAL.Lines = nil
		}
	case 1460:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7211
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1461:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7216
		{
			yyVAL.sqlVal = nil
		}
	case 1462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7220
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1463:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7226
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1464:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7232
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1465:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7236
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1466:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7242
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1467:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7246
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7252
		{
			yyVAL.lockType = LockRead
		}
	case 1469:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7256
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7260
		{
			yyVAL.lockType = LockWrite
		}
	case 1471:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7264
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1472:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7270
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7276
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[2].bytes)}
		}
	case 1474:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7280
		{
			yyVAL.statement = &Kill{ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1475:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7284
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 2296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8146
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8155
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
